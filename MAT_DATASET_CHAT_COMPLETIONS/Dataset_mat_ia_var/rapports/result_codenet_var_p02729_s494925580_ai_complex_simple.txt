================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:20:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import combinations
from functools import reduce
from operator import mul

N_gu, M_ki = map(int, input().split())

def prod(iterable):
    return reduce(mul, iterable, 1)

def choose(n, r):
    return prod(range(n, n - r, -1)) // prod(range(1, r + 1)) if 0 <= r <= n else 0

def pair_count(seq):
    # Count number of pairs for length of seq by explicitly creating all index pairs
    return sum(1 for _ in combinations(range(seq), 2))

def obfuscated_even_pairs(n):
    # Choose odd way to compute n choose 2: by sum of arithmetic sequence
    return sum(i for i in range(n) for j in range(i+1, n))

def hyper_pair_total(a, b):
    # Indirectly compute total using both approaches
    return pair_count(a) + obfuscated_even_pairs(b)

# Instead of just choosing two, layer computations for no reason
res = choose(N_gu, 2) + choose(M_ki, 2)

# Alternatively, re-compute using overelaborate means
if N_gu + M_ki > 1:
    temp = hyper_pair_total(N_gu, M_ki)
    assert temp == res

print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.2023944854736328
    2. 'product' → logprob: -1.5773944854736328
    3. 'count' → logprob: -1.8273944854736328
    4. 'per' → logprob: -2.202394485473633
    5. 'cycle' → logprob: -3.077394485473633
    6. ' product' → logprob: -3.202394485473633
    7. ' permutations' → logprob: -3.327394485473633
    8. ' cycle' → logprob: -3.577394485473633
    9. 'group' → logprob: -3.577394485473633
    10. ' group' → logprob: -4.327394485473633

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -8.017927029868588e-05
    2. '(
' → logprob: -10.375080108642578
    3. '\(' → logprob: -11.000080108642578
    4. '```' → logprob: -11.125080108642578
    5. '`' → logprob: -12.250080108642578
    6. ' (' → logprob: -13.125080108642578
    7. ''' → logprob: -13.500080108642578
    8. '()' → logprob: -13.500080108642578
    9. '((' → logprob: -13.625080108642578
    10. '"' → logprob: -14.250080108642578

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -7.231182826217264e-05
    2. '(
' → logprob: -9.750072479248047
    3. '\(' → logprob: -12.500072479248047
    4. '()' → logprob: -13.375072479248047
    5. ' (' → logprob: -13.750072479248047
    6. '```' → logprob: -14.125072479248047
    7. '(

' → logprob: -14.250072479248047
    8. ',' → logprob: -14.375072479248047
    9. '.' → logprob: -14.500072479248047
    10. 'def' → logprob: -14.500072479248047

Token 6: ' functools' (ID: 142636)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.07244829088449478
    2. ' operator' → logprob: -3.322448253631592
    3. ' collections' → logprob: -4.197448253631592
    4. ' itertools' → logprob: -4.697448253631592
    5. 'math' → logprob: -5.822448253631592
    6. ' functools' → logprob: -6.072448253631592
    7. 'collections' → logprob: -6.447448253631592
    8. ' typing' → logprob: -7.072448253631592
    9. ' sys' → logprob: -7.822448253631592
    10. ' random' → logprob: -7.822448253631592

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0713425800204277
    2. 'import' → logprob: -2.6963424682617188
    3. '_import' → logprob: -6.696342468261719
    4. '_' → logprob: -9.196342468261719
    5. ' _' → logprob: -11.196342468261719
    6. ' ' → logprob: -11.196342468261719
    7. '	import' → logprob: -11.196342468261719
    8. '```' → logprob: -11.446342468261719
    9. '<|end|>' → logprob: -12.321342468261719
    10. '.' → logprob: -13.321342468261719

Token 8: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.23251166939735413
    2. 'l' → logprob: -2.4825117588043213
    3. ' reduce' → logprob: -3.1075117588043213
    4. ' l' → logprob: -3.1075117588043213
    5. 'partial' → logprob: -3.6075117588043213
    6. ' partial' → logprob: -5.732511520385742
    7. 'wrap' → logprob: -6.357511520385742
    8. ' wraps' → logprob: -6.982511520385742
    9. 'import' → logprob: -7.107511520385742
    10. 'cache' → logprob: -8.107511520385742

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008043787442147732
    2. '(
' → logprob: -5.3830437660217285
    3. '\' → logprob: -7.0080437660217285
    4. '```' → logprob: -7.3830437660217285
    5. '\n' → logprob: -7.6330437660217285
    6. '`' → logprob: -8.258044242858887
    7. 'def' → logprob: -8.258044242858887
    8. ' (' → logprob: -8.383044242858887
    9. ',' → logprob: -9.008044242858887
    10. 'import' → logprob: -9.758044242858887

Token 10: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32752686738967896
    2. '(
' → logprob: -2.452526807785034
    3. '```' → logprob: -2.702526807785034
    4. '\' → logprob: -2.827526807785034
    5. 'def' → logprob: -3.577526807785034
    6. '\n' → logprob: -4.327527046203613
    7. 'import' → logprob: -4.452527046203613
    8. '
' → logprob: -5.577527046203613
    9. '`' → logprob: -5.952527046203613
    10. ',' → logprob: -6.827527046203613

Token 11: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.03658778592944145
    2. 'operator' → logprob: -3.911587715148926
    3. ' math' → logprob: -4.161587715148926
    4. 'math' → logprob: -8.286587715148926
    5. ' collections' → logprob: -10.536587715148926
    6. ' ' → logprob: -10.661587715148926
    7. ' itertools' → logprob: -10.911587715148926
    8. '	operator' → logprob: -12.161587715148926
    9. '_operator' → logprob: -12.786587715148926
    10. '```' → logprob: -13.411587715148926

Token 12: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.08851087838411331
    2. 'import' → logprob: -3.0885109901428223
    3. '.' → logprob: -3.3385109901428223
    4. ' .' → logprob: -5.963510990142822
    5. ' ' → logprob: -6.963510990142822
    6. '.import' → logprob: -9.463510513305664
    7. '	import' → logprob: -11.338510513305664
    8. '_import' → logprob: -11.838510513305664
    9. ' as' → logprob: -12.838510513305664
    10. '<|end|>' → logprob: -12.838510513305664

Token 13: ' mul' (ID: 9975)
  Prédit: ' mul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.2008221596479416
    2. ' add' → logprob: -2.200822114944458
    3. 'mul' → logprob: -3.450822114944458
    4. ' and' → logprob: -4.575822353363037
    5. 'add' → logprob: -4.575822353363037
    6. ' or' → logprob: -4.700822353363037
    7. 'and' → logprob: -5.700822353363037
    8. '```' → logprob: -5.825822353363037
    9. 'or' → logprob: -7.450822353363037
    10. ' icon' → logprob: -7.700822353363037

Token 14: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11998004466295242
    2. '(
' → logprob: -2.2449800968170166
    3. '\' → logprob: -5.8699798583984375
    4. 'def' → logprob: -6.4949798583984375
    5. '(

' → logprob: -6.8699798583984375
    6. '\n' → logprob: -7.9949798583984375
    7. ',' → logprob: -8.494979858398438
    8. '```' → logprob: -8.744979858398438
    9. '\(' → logprob: -8.869979858398438
    10. '`' → logprob: -8.869979858398438

Token 15: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08736829459667206
    2. '(
' → logprob: -2.9623682498931885
    3. '\' → logprob: -4.087368488311768
    4. 'def' → logprob: -4.462368488311768
    5. '\(' → logprob: -7.462368488311768
    6. '(

' → logprob: -7.587368488311768
    7. ',' → logprob: -7.712368488311768
    8. '\n' → logprob: -7.962368488311768
    9. '[' → logprob: -8.21236801147461
    10. '```' → logprob: -8.21236801147461

Token 16: '_gu' (ID: 149045)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.936850905418396
    2. '=' → logprob: -1.061850905418396
    3. ' =' → logprob: -1.436850905418396
    4. ',' → logprob: -4.9368510246276855
    5. ')' → logprob: -5.0618510246276855
    6. '_' → logprob: -5.5618510246276855
    7. '.' → logprob: -6.3118510246276855
    8. '[' → logprob: -6.8118510246276855
    9. '  ' → logprob: -6.9368510246276855
    10. ' ,' → logprob: -7.3118510246276855

Token 17: ',' (ID: 11)
  Prédit: 'ests'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ests' → logprob: -1.2709405422210693
    2. 'ar' → logprob: -1.5209405422210693
    3. 'ess' → logprob: -1.7709405422210693
    4. 'ard' → logprob: -2.2709405422210693
    5. 'ards' → logprob: -2.3959405422210693
    6. 'est' → logprob: -3.0209405422210693
    7. 'esses' → logprob: -3.8959405422210693
    8. 'arante' → logprob: -4.020940780639648
    9. 'ts' → logprob: -5.395940780639648
    10. 'r' → logprob: -5.395940780639648

Token 18: ' M' (ID: 391)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.7464438676834106
    2. ' M' → logprob: -1.8714438676834106
    3. ' N' → logprob: -1.8714438676834106
    4. 'K' → logprob: -2.996443748474121
    5. 'N' → logprob: -3.621443748474121
    6. 'M' → logprob: -4.121443748474121
    7. ' k' → logprob: -4.246443748474121
    8. ' '' → logprob: -4.621443748474121
    9. ' =' → logprob: -4.746443748474121
    10. ' ' → logprob: -4.871443748474121

Token 19: '_' (ID: 62)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16071097552776337
    2. '=' → logprob: -1.9107109308242798
    3. ',' → logprob: -7.91071081161499
    4. ' ' → logprob: -10.035711288452148
    5. ' ,' → logprob: -10.035711288452148
    6. '_' → logprob: -10.785711288452148
    7. '  ' → logprob: -13.160711288452148
    8. ' =
' → logprob: -13.285711288452148
    9. ')' → logprob: -13.660711288452148
    10. ' =
' → logprob: -14.160711288452148

Token 20: 'ki' (ID: 3129)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7877032160758972
    2. '=' → logprob: -1.037703275680542
    3. '_gu' → logprob: -2.537703275680542
    4. ',' → logprob: -3.287703275680542
    5. '_' → logprob: -3.412703275680542
    6. 'gu' → logprob: -4.287703037261963
    7. 'u' → logprob: -4.912703037261963
    8. ' ' → logprob: -5.412703037261963
    9. ')' → logprob: -6.037703037261963
    10. '_g' → logprob: -6.475203037261963

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933231949806213
    2. ' =' → logprob: -0.6933231949806213
    3. ',' → logprob: -9.068323135375977
    4. ' ' → logprob: -10.193323135375977
    5. ')' → logprob: -12.318323135375977
    6. 's' → logprob: -12.693323135375977
    7. '>' → logprob: -12.818323135375977
    8. 'x' → logprob: -13.443323135375977
    9. ' ,' → logprob: -13.443323135375977
    10. 'a' → logprob: -13.568323135375977

Token 22: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.2912939190864563
    2. 'map' → logprob: -1.4162938594818115
    3. ' ' → logprob: -6.166294097900391
    4. 'input' → logprob: -6.541294097900391
    5. ' input' → logprob: -6.541294097900391
    6. '0' → logprob: -6.666294097900391
    7. '5' → logprob: -6.666294097900391
    8. '1' → logprob: -7.416294097900391
    9. '10' → logprob: -7.541294097900391
    10. '2' → logprob: -8.16629409790039

Token 23: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06205541267991066
    2. '(' → logprob: -2.9370553493499756
    3. '(lambda' → logprob: -5.812055587768555
    4. '(str' → logprob: -5.937055587768555
    5. 'int' → logprob: -6.937055587768555
    6. '(input' → logprob: -8.687055587768555
    7. '[int' → logprob: -8.937055587768555
    8. '<|end|>' → logprob: -9.062055587768555
    9. '<int' → logprob: -10.312055587768555
    10. '(eval' → logprob: -10.937055587768555

Token 24: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12136849015951157
    2. ',input' → logprob: -3.371368408203125
    3. '(' → logprob: -3.621368408203125
    4. 'input' → logprob: -3.621368408203125
    5. ',' → logprob: -3.746368408203125
    6. ')' → logprob: -6.121368408203125
    7. ' input' → logprob: -8.121368408203125
    8. '=input' → logprob: -8.621368408203125
    9. '(int' → logprob: -10.496368408203125
    10. '```' → logprob: -10.996368408203125

Token 25: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06995344161987305
    2. ' input' → logprob: -2.694953441619873
    3. ')' → logprob: -11.569953918457031
    4. '(input' → logprob: -12.319953918457031
    5. ' )' → logprob: -14.069953918457031
    6. ',input' → logprob: -14.319953918457031
    7. '=input' → logprob: -14.444953918457031
    8. '```' → logprob: -14.819953918457031
    9. ' ' → logprob: -15.319953918457031
    10. '	input' → logprob: -15.569953918457031

Token 26: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.17023368179798126
    2. '())' → logprob: -2.420233726501465
    3. '()' → logprob: -2.795233726501465
    4. ')' → logprob: -5.170233726501465
    5. '(' → logprob: -7.670233726501465
    6. '());' → logprob: -8.920233726501465
    7. '();)' → logprob: -10.170233726501465
    8. '()>' → logprob: -10.295233726501465
    9. '(()' → logprob: -10.420233726501465
    10. '(),' → logprob: -10.795233726501465

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002680112374946475
    2. 'strip' → logprob: -8.25026798248291
    3. 'rstrip' → logprob: -13.00026798248291
    4. ')' → logprob: -13.25026798248291
    5. ' split' → logprob: -13.37526798248291
    6. '(split' → logprob: -14.75026798248291
    7. 'spl' → logprob: -14.75026798248291
    8. 'read' → logprob: -15.75026798248291
    9. ' ' → logprob: -16.750268936157227
    10. 'rs' → logprob: -17.375268936157227

Token 28: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03839614614844322
    2. '))' → logprob: -3.288396120071411
    3. '())' → logprob: -8.538395881652832
    4. '),' → logprob: -9.288395881652832
    5. '()' → logprob: -11.038395881652832
    6. '(' → logprob: -11.163395881652832
    7. ')))' → logprob: -12.038395881652832
    8. ')`' → logprob: -12.288395881652832
    9. '`)' → logprob: -12.288395881652832
    10. ')
' → logprob: -12.788395881652832

Token 29: 'def' (ID: 1314)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.1492148637771606
    2. 'a' → logprob: -1.8992148637771606
    3. 'numbers' → logprob: -2.024214744567871
    4. 'nums' → logprob: -2.649214744567871
    5. 'elements' → logprob: -3.024214744567871
    6. 'items' → logprob: -3.149214744567871
    7. 'array' → logprob: -3.524214744567871
    8. 'result' → logprob: -3.899214744567871
    9. 's' → logprob: -3.899214744567871
    10. 'A' → logprob: -3.899214744567871

Token 30: ' prod' (ID: 10207)
  Prédit: ' combinations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' combinations' → logprob: -1.705774188041687
    2. ' count' → logprob: -1.955774188041687
    3. ' combine' → logprob: -2.3307743072509766
    4. ' comb' → logprob: -2.4557743072509766
    5. ' get' → logprob: -2.9557743072509766
    6. ' combination' → logprob: -3.0807743072509766
    7. ' factorial' → logprob: -3.3307743072509766
    8. ' f' → logprob: -3.4557743072509766
    9. ' find' → logprob: -3.5807743072509766
    10. ' ' → logprob: -3.9557743072509766

Token 31: '(iter' (ID: 61014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06774857640266418
    2. '(x' → logprob: -3.692748546600342
    3. '(a' → logprob: -4.192748546600342
    4. '(*)' → logprob: -4.692748546600342
    5. 'uct' → logprob: -5.317748546600342
    6. '(iter' → logprob: -5.567748546600342
    7. '(*' → logprob: -6.192748546600342
    8. '(lst' → logprob: -6.567748546600342
    9. '(n' → logprob: -7.692748546600342
    10. 'ect' → logprob: -7.817748546600342

Token 32: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.0001502636878285557
    2. ')' → logprob: -9.000150680541992
    3. 'ables' → logprob: -11.500150680541992
    4. '(iter' → logprob: -12.125150680541992
    5. '_' → logprob: -13.250150680541992
    6. 'utable' → logprob: -13.625150680541992
    7. '):' → logprob: -14.000150680541992
    8. 'abler' → logprob: -14.125150680541992
    9. 'abile' → logprob: -14.375150680541992
    10. '(' → logprob: -14.500150680541992

Token 33: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011278766207396984
    2. ',' → logprob: -5.1362786293029785
    3. ')' → logprob: -5.2612786293029785
    4. ' ):' → logprob: -9.636279106140137
    5. '):
' → logprob: -9.636279106140137
    6. '),' → logprob: -12.636279106140137
    7. '):
' → logprob: -12.761279106140137
    8. '=' → logprob: -13.386279106140137
    9. ')=' → logprob: -13.386279106140137
    10. ')):' → logprob: -13.886279106140137

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006027150084264576
    2. ' return' → logprob: -8.000602722167969
    3. ':' → logprob: -8.500602722167969
    4. 'return' → logprob: -10.375602722167969
    5. '):' → logprob: -11.375602722167969
    6. ' :' → logprob: -12.375602722167969
    7. ' ' → logprob: -12.875602722167969
    8. '  ' → logprob: -12.875602722167969
    9. ':return' → logprob: -12.875602722167969
    10. ')' → logprob: -12.875602722167969

Token 35: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7918459177017212
    2. '   ' → logprob: -0.9168459177017212
    3. 'return' (adapté à ' return') → logprob: -1.9168459177017212
    4. '    ' → logprob: -9.54184627532959
    5. '	return' → logprob: -10.66684627532959
    6. ' ' → logprob: -10.79184627532959
    7. '  ' → logprob: -11.66684627532959
    8. '       ' → logprob: -12.29184627532959
    9. 'reduce' → logprob: -12.29184627532959
    10. ' reduce' → logprob: -12.29184627532959

Token 36: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.576023280620575
    2. 'reduce' → logprob: -0.826023280620575
    3. '1' → logprob: -10.70102310180664
    4. ' ' → logprob: -10.70102310180664
    5. '   ' → logprob: -11.20102310180664
    6. ' functools' → logprob: -12.07602310180664
    7. '.reduce' → logprob: -12.32602310180664
    8. '```' → logprob: -12.82602310180664
    9. '_reduce' → logprob: -13.20102310180664
    10. '  ' → logprob: -13.45102310180664

Token 37: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.25209012627601624
    2. '(' → logprob: -1.5020900964736938
    3. '(lambda' → logprob: -9.627090454101562
    4. '(operator' → logprob: -9.627090454101562
    5. '(
' → logprob: -10.752090454101562
    6. '(mu' → logprob: -12.752090454101562
    7. '(mult' → logprob: -12.877090454101562
    8. 'mul' → logprob: -14.252090454101562
    9. ' (' → logprob: -15.252090454101562
    10. '(*' → logprob: -15.627090454101562

Token 38: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.0280383548888494e-06
    2. 'mul' → logprob: -14.250000953674316
    3. 'ult' → logprob: -15.875000953674316
    4. '<ul' → logprob: -16.250001907348633
    5. 'u' → logprob: -17.625001907348633
    6. 'ultiply' → logprob: -17.625001907348633
    7. ' ul' → logprob: -17.750001907348633
    8. 'ultip' → logprob: -18.250001907348633
    9. ' mul' → logprob: -18.875001907348633
    10. 'ул' → logprob: -19.500001907348633

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.988221684878226e-06
    2. '*,' → logprob: -13.125006675720215
    3. ' ,' → logprob: -13.250006675720215
    4. ',
' → logprob: -13.625006675720215
    5. ',*' → logprob: -15.375006675720215
    6. '```' → logprob: -15.500006675720215
    7. '‌,' → logprob: -15.750006675720215
    8. ' ' → logprob: -15.875006675720215
    9. ',

' → logprob: -15.875006675720215
    10. '),' → logprob: -15.875006675720215

Token 40: ' iterable' (ID: 113880)
  Prédit: ' iterable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' iterable' → logprob: -0.03376280516386032
    2. 'iter' → logprob: -3.4087626934051514
    3. '(iter' → logprob: -9.78376293182373
    4. ' iter' → logprob: -10.78376293182373
    5. '   ' → logprob: -11.40876293182373
    6. 'Iterable' → logprob: -11.65876293182373
    7. ' ' → logprob: -12.28376293182373
    8. ')' → logprob: -12.28376293182373
    9. ' itertools' → logprob: -12.78376293182373
    10. '	iter' → logprob: -13.28376293182373

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005932828411459923
    2. ')' → logprob: -5.130932807922363
    3. '),' → logprob: -12.880932807922363
    4. ' ,' → logprob: -14.755932807922363
    5. ' ' → logprob: -15.630932807922363
    6. ',)' → logprob: -15.630932807922363
    7. '   ' → logprob: -15.755932807922363
    8. '))' → logprob: -15.755932807922363
    9. ')}' → logprob: -16.13093376159668
    10. '```' → logprob: -16.25593376159668

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5107177862082608e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -14.500024795532227
    4. ')' → logprob: -16.250024795532227
    5. '  ' → logprob: -17.375024795532227
    6. '```' → logprob: -18.000024795532227
    7. '`' → logprob: -18.812524795532227
    8. '    ' → logprob: -19.375024795532227
    9. '=' → logprob: -19.500024795532227
    10. '۱' → logprob: -19.562524795532227

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.3750057220459
    4. ')' → logprob: -16.7500057220459
    5. '  ' → logprob: -18.6250057220459
    6. '```' → logprob: -18.8125057220459
    7. '2' → logprob: -19.1875057220459
    8. '`' → logprob: -19.3750057220459
    9. '    ' → logprob: -19.9375057220459
    10. '۱' → logprob: -20.0625057220459

Token 44: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.008129963040119e-06
    2. ')
' → logprob: -12.500003814697266
    3. ')

' → logprob: -16.250003814697266
    4. ' )' → logprob: -17.000003814697266
    5. '<|end|>' → logprob: -18.500003814697266
    6. '))' → logprob: -18.625003814697266
    7. '),' → logprob: -18.750003814697266
    8. ')return' → logprob: -18.875003814697266
    9. ')}' → logprob: -19.125003814697266
    10. ')`' → logprob: -19.250003814697266

Token 45: 'def' (ID: 1314)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.790632963180542
    2. 'a' → logprob: -2.290632963180542
    3. 'arr' → logprob: -2.790632963180542
    4. 'items' → logprob: -2.915632963180542
    5. 'elements' → logprob: -2.915632963180542
    6. 'numbers' → logprob: -2.915632963180542
    7. 'colors' → logprob: -3.165632963180542
    8. 'gu' → logprob: -3.415632963180542
    9. 'def' → logprob: -3.540632963180542
    10. 'nums' → logprob: -3.915632963180542

Token 46: ' choose' (ID: 5655)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.5333234071731567
    2. ' space' → logprob: -1.9083234071731567
    3. ' ' → logprob: -2.158323287963867
    4. ' find' → logprob: -2.283323287963867
    5. ' combinations' → logprob: -2.658323287963867
    6. ' calculate' → logprob: -3.033323287963867
    7. ' solve' → logprob: -3.158323287963867
    8. ' factor' → logprob: -3.658323287963867
    9. ' count' → logprob: -3.783323287963867
    10. ' get' → logprob: -3.783323287963867

Token 47: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6528466939926147
    2. '(' → logprob: -0.7778466939926147
    3. '(N' → logprob: -4.527846813201904
    4. '(k' → logprob: -4.902846813201904
    5. ' (' → logprob: -7.027846813201904
    6. '(
' → logprob: -8.402846336364746
    7. 's' → logprob: -9.027846336364746
    8. '<|end|>' → logprob: -9.027846336364746
    9. '(i' → logprob: -9.777846336364746
    10. '<|end|>' → logprob: -9.902846336364746

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002372319810092449
    2. ',k' → logprob: -6.1273722648620605
    3. ' ,' → logprob: -9.002372741699219
    4. ',n' → logprob: -10.377372741699219
    5. ',r' → logprob: -11.002372741699219
    6. ')' → logprob: -13.002372741699219
    7. 'k' → logprob: -13.002372741699219
    8. ' ' → logprob: -13.252372741699219
    9. '):' → logprob: -13.877372741699219
    10. 'r' → logprob: -14.002372741699219

Token 49: ' r' (ID: 428)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011502581648528576
    2. 'r' → logprob: -4.761502742767334
    3. ' k' → logprob: -5.886502742767334
    4. ' r' → logprob: -9.261502265930176
    5. ' ' → logprob: -11.886502265930176
    6. '```' → logprob: -13.636502265930176
    7. ')' → logprob: -13.761502265930176
    8. '   ' → logprob: -14.636502265930176
    9. 'm' → logprob: -15.011502265930176
    10. '	k' → logprob: -15.261502265930176

Token 50: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0041960482485592365
    2. ')' → logprob: -5.5041961669921875
    3. '):
' → logprob: -9.129196166992188
    4. ' ):' → logprob: -12.129196166992188
    5. '):
' → logprob: -13.629196166992188
    6. ')：' → logprob: -14.254196166992188
    7. ':' → logprob: -14.629196166992188
    8. ''):' → logprob: -15.504196166992188
    9. ')**' → logprob: -15.629196166992188
    10. '）：' → logprob: -16.004196166992188

Token 51: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1681620329618454
    2. '   ' → logprob: -2.0431621074676514
    3. ':
' → logprob: -4.543161869049072
    4. '):' → logprob: -4.793161869049072
    5. ' return' → logprob: -6.043161869049072
    6. ':return' → logprob: -6.543161869049072
    7. ',' → logprob: -7.043161869049072
    8. ' if' → logprob: -7.418161869049072
    9. '):
' → logprob: -8.54316234588623
    10. 'return' → logprob: -9.04316234588623

Token 52: ' return' (ID: 622)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4010642468929291
    2. 'if' → logprob: -1.1510642766952515
    3. 'return' (adapté à ' return') → logprob: -5.151064395904541
    4. '   ' → logprob: -5.776064395904541
    5. ' return' → logprob: -5.901064395904541
    6. 'from' → logprob: -6.776064395904541
    7. ' from' → logprob: -7.151064395904541
    8. 'result' → logprob: -8.651063919067383
    9. ' result' → logprob: -9.526063919067383
    10. ' res' → logprob: -9.776063919067383

Token 53: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.2840017080307007
    2. ' prod' → logprob: -1.4090017080307007
    3. 'factor' → logprob: -6.90900182723999
    4. ' factorial' → logprob: -7.40900182723999
    5. '(prod' → logprob: -7.90900182723999
    6. '1' → logprob: -8.409001350402832
    7. 'fact' → logprob: -8.409001350402832
    8. ' ' → logprob: -8.659001350402832
    9. 'reduce' → logprob: -9.284001350402832
    10. ' (' → logprob: -10.159001350402832

Token 54: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0009414771921001375
    2. '(' → logprob: -7.250941276550293
    3. '(x' → logprob: -8.875941276550293
    4. 'range' → logprob: -9.500941276550293
    5. '((' → logprob: -12.250941276550293
    6. '([' → logprob: -12.500941276550293
    7. '(i' → logprob: -12.750941276550293
    8. '(list' → logprob: -13.500941276550293
    9. '(n' → logprob: -14.000941276550293
    10. '```' → logprob: -14.250941276550293

Token 55: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006729934364557266
    2. '(' → logprob: -5.006730079650879
    3. ' (' → logprob: -11.881730079650879
    4. '(N' → logprob: -12.756730079650879
    5. 'n' → logprob: -12.881730079650879
    6. '(max' → logprob: -14.256730079650879
    7. ')' → logprob: -14.381730079650879
    8. ' ' → logprob: -15.381730079650879
    9. ')(' → logprob: -15.881730079650879
    10. '((' → logprob: -16.131729125976562

Token 56: ',' (ID: 11)
  Prédit: '-r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.5188268423080444
    2. ',' → logprob: -1.5188268423080444
    3. '-' → logprob: -2.143826961517334
    4. ' -' → logprob: -2.768826961517334
    5. 'r' → logprob: -6.018826961517334
    6. ',r' → logprob: -6.268826961517334
    7. ' ,' → logprob: -7.268826961517334
    8. ' r' → logprob: -7.393826961517334
    9. '-n' → logprob: -9.643826484680176
    10. ' ' → logprob: -10.018826484680176

Token 57: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.38697078824043274
    2. 'n' → logprob: -1.1369707584381104
    3. '	n' → logprob: -10.511970520019531
    4. ')n' → logprob: -10.636970520019531
    5. '(n' → logprob: -11.011970520019531
    6. '<|end|>' → logprob: -11.636970520019531
    7. ' ' → logprob: -12.011970520019531
    8. ' (' → logprob: -12.886970520019531
    9. '<|end|>' → logprob: -12.886970520019531
    10. '    ' → logprob: -13.261970520019531

Token 58: ' -' (ID: 533)
  Prédit: '-r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.03627479448914528
    2. ' -' → logprob: -3.5362749099731445
    3. '-' → logprob: -5.0362749099731445
    4. '-risk' → logprob: -13.161274909973145
    5. ' r' → logprob: -13.536274909973145
    6. ' ' → logprob: -14.536274909973145
    7. '-re' → logprob: -15.536274909973145
    8. '<|end|>' → logprob: -15.911274909973145
    9. '<|end|>' → logprob: -16.036273956298828
    10. '-р' → logprob: -16.161273956298828

Token 59: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0013510684948414564
    2. ' r' → logprob: -6.6263508796691895
    3. '   ' → logprob: -11.751351356506348
    4. '<|end|>' → logprob: -11.876351356506348
    5. '<|end|>' → logprob: -12.501351356506348
    6. '	r' → logprob: -12.751351356506348
    7. '  ' → logprob: -13.876351356506348
    8. ' ' → logprob: -14.251351356506348
    9. ' +' → logprob: -14.751351356506348
    10. '+r' → logprob: -15.001351356506348

Token 60: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.106736039626412e-05
    2. ',-' → logprob: -10.625031471252441
    3. ' ,' → logprob: -12.000031471252441
    4. '   ' → logprob: -16.000030517578125
    5. ',
' → logprob: -16.375030517578125
    6. ' ,-' → logprob: -16.625030517578125
    7. ',None' → logprob: -16.875030517578125
    8. '  ' → logprob: -17.125030517578125
    9. ',end' → logprob: -17.625030517578125
    10. '    ' → logprob: -17.875030517578125

Token 61: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.575957715511322
    2. ' -' → logprob: -0.825957715511322
    3. '1' → logprob: -11.825957298278809
    4. ' ' → logprob: -11.950957298278809
    5. '   ' → logprob: -13.575957298278809
    6. '```' → logprob: -13.825957298278809
    7. '  ' → logprob: -14.575957298278809
    8. '<|end|>' → logprob: -15.325957298278809
    9. '	' → logprob: -15.575957298278809
    10. '-step' → logprob: -15.825957298278809

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -15.37500286102295
    4. '１' → logprob: -17.250001907348633
    5. '<|end|>' → logprob: -17.312501907348633
    6. '<|end|>' → logprob: -17.312501907348633
    7. ')' → logprob: -17.437501907348633
    8. '   ' → logprob: -17.812501907348633
    9. '۱' → logprob: -18.250001907348633
    10. '১' → logprob: -18.312501907348633

Token 63: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.020571667701005936
    2. ')' → logprob: -3.895571708679199
    3. ' ))' → logprob: -10.7705717086792
    4. '),' → logprob: -13.2705717086792
    5. '))
' → logprob: -13.2705717086792
    6. ')))' → logprob: -13.2705717086792
    7. '))*' → logprob: -14.1455717086792
    8. ' )' → logprob: -14.2705717086792
    9. ' ' → logprob: -14.2705717086792
    10. '1' → logprob: -14.6455717086792

Token 64: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.35349947214126587
    2. '//' → logprob: -1.228499412536621
    3. ')' → logprob: -5.603499412536621
    4. ' ' → logprob: -7.478499412536621
    5. ')//' → logprob: -8.228499412536621
    6. ' ' → logprob: -8.353499412536621
    7. '<|end|>' → logprob: -9.353499412536621
    8. '   ' → logprob: -9.603499412536621
    9. 'div' → logprob: -10.853499412536621
    10. '```' → logprob: -10.978499412536621

Token 65: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.002829723060131073
    2. ' prod' → logprob: -6.127829551696777
    3. 'factor' → logprob: -8.252829551696777
    4. '(prod' → logprob: -8.627829551696777
    5. 'pro' → logprob: -9.502829551696777
    6. '<|end|>' → logprob: -9.752829551696777
    7. 'fact' → logprob: -11.377829551696777
    8. 'pow' → logprob: -11.877829551696777
    9. 'product' → logprob: -12.127829551696777
    10. '(' → logprob: -12.252829551696777

Token 66: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.00026169343618676066
    2. 'range' → logprob: -8.250261306762695
    3. '	range' → logprob: -15.375261306762695
    4. '(' → logprob: -16.000261306762695
    5. ' range' → logprob: -16.750261306762695
    6. '(r' → logprob: -19.000261306762695
    7. 'ange' → logprob: -19.250261306762695
    8. '(list' → logprob: -20.125261306762695
    9. '-range' → logprob: -20.250261306762695
    10. '```' → logprob: -20.625261306762695

Token 67: '(' (ID: 7)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.08897676318883896
    2. '(' → logprob: -2.4639768600463867
    3. 'r' → logprob: -10.838976860046387
    4. '1' → logprob: -11.088976860046387
    5. ' (' → logprob: -13.588976860046387
    6. ',r' → logprob: -15.213976860046387
    7. '	r' → logprob: -15.838976860046387
    8. '(
' → logprob: -15.963976860046387
    9. ')(' → logprob: -16.21397590637207
    10. '2' → logprob: -16.33897590637207

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11750433593988419
    2. 'r' → logprob: -2.617504358291626
    3. '(' → logprob: -3.367504358291626
    4. '(r' → logprob: -5.742504119873047
    5. '2' → logprob: -8.867504119873047
    6. '	r' → logprob: -10.992504119873047
    7. ' r' → logprob: -11.617504119873047
    8. ',r' → logprob: -12.367504119873047
    9. '```' → logprob: -12.492504119873047
    10. ' ' → logprob: -12.492504119873047

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.051980797201395035
    2. ',r' → logprob: -3.05198073387146
    3. ' ,' → logprob: -5.926980972290039
    4. 'r' → logprob: -7.551980972290039
    5. ' r' → logprob: -8.926980972290039
    6. '(r' → logprob: -9.926980972290039
    7. '	r' → logprob: -11.801980972290039
    8. '   ' → logprob: -13.301980972290039
    9. ' ' → logprob: -13.676980972290039
    10. '1' → logprob: -13.926980972290039

Token 70: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0031790214125066996
    2. ' r' → logprob: -5.75317907333374
    3. '<|end|>' → logprob: -14.378178596496582
    4. '	r' → logprob: -14.878178596496582
    5. '(r' → logprob: -15.503178596496582
    6. ' ' → logprob: -17.0031795501709
    7. '   ' → logprob: -17.0031795501709
    8. '  ' → logprob: -17.7531795501709
    9. ',r' → logprob: -17.8781795501709
    10. '    ' → logprob: -18.3781795501709

Token 71: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14268402755260468
    2. ' +' → logprob: -2.017683982849121
    3. '+r' → logprob: -12.642683982849121
    4. ' ' → logprob: -13.017683982849121
    5. '```' → logprob: -14.267683982849121
    6. ',' → logprob: -14.392683982849121
    7. '1' → logprob: -14.517683982849121
    8. '  ' → logprob: -14.767683982849121
    9. '   ' → logprob: -14.767683982849121
    10. '))' → logprob: -15.267683982849121

Token 72: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008052219054661691
    2. ' ' → logprob: -7.125805377960205
    3. '```' → logprob: -14.500804901123047
    4. ')' → logprob: -15.875804901123047
    5. '   ' → logprob: -16.875804901123047
    6. '  ' → logprob: -17.125804901123047
    7. '+' → logprob: -17.125804901123047
    8. '2' → logprob: -17.500804901123047
    9. '))' → logprob: -17.750804901123047
    10. '１' → logprob: -18.875804901123047

Token 73: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '```' → logprob: -15.375008583068848
    4. '   ' → logprob: -17.25000762939453
    5. ')' → logprob: -17.75000762939453
    6. '``' → logprob: -18.12500762939453
    7. '2' → logprob: -18.25000762939453
    8. '  ' → logprob: -18.25000762939453
    9. 'r' → logprob: -18.31250762939453
    10. '+' → logprob: -18.50000762939453

Token 74: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0008592926897108555
    2. ')' → logprob: -7.500859260559082
    3. ')))' → logprob: -8.125859260559082
    4. ' ))' → logprob: -12.125859260559082
    5. '))
' → logprob: -12.500859260559082
    6. '))))' → logprob: -15.250859260559082
    7. '   ' → logprob: -15.375859260559082
    8. '),' → logprob: -16.0008602142334
    9. ' ' → logprob: -16.1258602142334
    10. '()))' → logprob: -16.1258602142334

Token 75: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8162933588027954
    2. '<|end|>' → logprob: -1.0662933588027954
    3. '
' → logprob: -2.191293239593506
    4. '(' → logprob: -3.566293239593506
    5. '\n' → logprob: -4.316293239593506
    6. ' ' → logprob: -4.441293239593506
    7. '<|end|>' → logprob: -5.066293239593506
    8. '*' → logprob: -5.316293239593506
    9. '\' → logprob: -5.316293239593506
    10. '```' → logprob: -5.441293239593506

Token 76: ' ' (ID: 220)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7634787559509277
    2. ' r' → logprob: -0.7634787559509277
    3. ' ' → logprob: -3.1384787559509277
    4. '0' → logprob: -3.7634787559509277
    5. ' n' → logprob: -7.763478755950928
    6. '1' → logprob: -7.888478755950928
    7. 'n' → logprob: -7.888478755950928
    8. '(r' → logprob: -9.888479232788086
    9. '2' → logprob: -10.138479232788086
    10. '   ' → logprob: -10.950979232788086

Token 77: '0' (ID: 15)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.07912496477365494
    2. '0' → logprob: -2.829124927520752
    3. ' r' → logprob: -4.204124927520752
    4. ' ' → logprob: -6.579124927520752
    5. '1' → logprob: -7.579124927520752
    6. 'n' → logprob: -8.82912540435791
    7. ' n' → logprob: -11.95412540435791
    8. '(r' → logprob: -12.07912540435791
    9. '```' → logprob: -12.70412540435791
    10. '   ' → logprob: -12.76662540435791

Token 78: ' <=' (ID: 5017)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3189528286457062
    2. '<' → logprob: -1.4439527988433838
    3. ' <=' → logprob: -3.443952798843384
    4. '<=' → logprob: -5.443953037261963
    5. ' ' → logprob: -7.318953037261963
    6. '<n' → logprob: -10.318952560424805
    7. ' r' → logprob: -10.693952560424805
    8. 'r' → logprob: -11.193952560424805
    9. ' and' → logprob: -11.193952560424805
    10. ' ≤' → logprob: -11.443952560424805

Token 79: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2014138251543045
    2. ' r' → logprob: -1.701413869857788
    3. ' ' → logprob: -15.326414108276367
    4. 'n' → logprob: -15.576414108276367
    5. '	r' → logprob: -16.201414108276367
    6. ' n' → logprob: -17.201414108276367
    7. '_r' → logprob: -17.326414108276367
    8. '(r' → logprob: -17.951414108276367
    9. '```' → logprob: -18.201414108276367
    10. '<' → logprob: -18.388914108276367

Token 80: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5239593982696533
    2. ' <=' → logprob: -0.8989593982696533
    3. ' and' → logprob: -8.023959159851074
    4. '<|end|>' → logprob: -8.398959159851074
    5. 'and' → logprob: -9.398959159851074
    6. 'le' → logprob: -9.898959159851074
    7. '<|end|>' → logprob: -10.148959159851074
    8. ' ' → logprob: -10.398959159851074
    9. '<' → logprob: -10.773959159851074
    10. '≤' → logprob: -11.148959159851074

Token 81: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.018150296062231064
    2. ' n' → logprob: -4.018150329589844
    3. '	n' → logprob: -15.268150329589844
    4. ' ' → logprob: -16.643150329589844
    5. '<|end|>' → logprob: -16.893150329589844
    6. '```' → logprob: -18.768150329589844
    7. '_n' → logprob: -19.518150329589844
    8. 'N' → logprob: -20.393150329589844
    9. 'min' → logprob: -20.393150329589844
    10. ')n' → logprob: -20.393150329589844

Token 82: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.00765075720846653
    2. 'else' → logprob: -4.882650852203369
    3. ' and' → logprob: -10.132650375366211
    4. ' ' → logprob: -13.132650375366211
    5. '	else' → logprob: -13.757650375366211
    6. 'and' → logprob: -14.507650375366211
    7. '_else' → logprob: -15.007650375366211
    8. '-' → logprob: -15.382650375366211
    9. 'Else' → logprob: -15.632650375366211
    10. ',' → logprob: -16.44515037536621

Token 83: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10021453350782394
    2. ' ' → logprob: -2.3502144813537598
    3. '   ' → logprob: -12.725214958190918
    4. '1' → logprob: -13.975214958190918
    5. ' ' → logprob: -14.100214958190918
    6. '```' → logprob: -14.100214958190918
    7. '  ' → logprob: -14.287714958190918
    8. ' None' → logprob: -14.850214958190918
    9. ' 
' → logprob: -15.350214958190918
    10. '    ' → logprob: -15.350214958190918

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009119403548538685
    2. ' ' → logprob: -7.000911712646484
    3. '1' → logprob: -15.625911712646484
    4. '   ' → logprob: -15.750911712646484
    5. '  ' → logprob: -16.938411712646484
    6. '```' → logprob: -17.563411712646484
    7. 'int' → logprob: -17.875911712646484
    8. ' ' → logprob: -17.875911712646484
    9. 'None' → logprob: -17.875911712646484
    10. '۰' → logprob: -19.063411712646484

Token 85: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.584039330482483
    2. 'K' → logprob: -2.2090392112731934
    3. 'result' → logprob: -2.3340392112731934
    4. 'S' → logprob: -2.9590392112731934
    5. 'a' → logprob: -3.0840392112731934
    6. 'A' → logprob: -3.0840392112731934
    7. 'Q' → logprob: -3.0840392112731934
    8. 'answer' → logprob: -3.3340392112731934
    9. 'k' → logprob: -3.4590392112731934
    10. 'results' → logprob: -3.5840392112731934

Token 87: ' pair' (ID: 10610)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.0519652366638184
    2. ' solve' → logprob: -1.9269652366638184
    3. ' main' → logprob: -2.1769652366638184
    4. ' comb' → logprob: -3.2394652366638184
    5. ' factorial' → logprob: -3.5519652366638184
    6. ' n' → logprob: -3.8019652366638184
    7. ' combination' → logprob: -4.051965236663818
    8. ' combinations' → logprob: -4.239465236663818
    9. ' max' → logprob: -4.301965236663818
    10. ' calculate' → logprob: -4.364465236663818

Token 88: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21621090173721313
    2. '_s' → logprob: -2.2162108421325684
    3. 'wise' → logprob: -2.7162108421325684
    4. '_com' → logprob: -4.216210842132568
    5. '(s' → logprob: -7.091210842132568
    6. ' s' → logprob: -8.091211318969727
    7. '_comb' → logprob: -8.091211318969727
    8. '_' → logprob: -8.216211318969727
    9. 'ings' → logprob: -8.216211318969727
    10. '(' → logprob: -8.341211318969727

Token 89: '(seq' (ID: 78669)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4010832607746124
    2. '(n' → logprob: -1.15108323097229
    3. '(N' → logprob: -5.526083469390869
    4. '(k' → logprob: -5.776083469390869
    5. '(s' → logprob: -6.026083469390869
    6. ' (' → logprob: -6.526083469390869
    7. '(r' → logprob: -7.276083469390869
    8. '(p' → logprob: -7.901083469390869
    9. '(a' → logprob: -8.276082992553711
    10. '():' → logprob: -8.526082992553711

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.015681441873311996
    2. '):
' → logprob: -4.765681266784668
    3. ',' → logprob: -5.015681266784668
    4. '):
' → logprob: -8.765681266784668
    5. ')' → logprob: -9.390681266784668
    6. ' ):' → logprob: -9.640681266784668
    7. '   ' → logprob: -9.890681266784668
    8. ':' → logprob: -10.765681266784668
    9. 's' → logprob: -11.765681266784668
    10. '    ' → logprob: -13.015681266784668

Token 91: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019357812125235796
    2. ' return' → logprob: -7.751935958862305
    3. '```' → logprob: -8.001935958862305
    4. 'return' → logprob: -8.501935958862305
    5. ' counter' → logprob: -8.751935958862305
    6. 'counter' → logprob: -8.751935958862305
    7. '    
' → logprob: -8.876935958862305
    8. 'count' → logprob: -9.376935958862305
    9. 'n' → logprob: -9.376935958862305
    10. '
' → logprob: -9.751935958862305

Token 92: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.655659019947052
    2. '   ' → logprob: -1.0306589603424072
    3. 'return' → logprob: -2.2806589603424072
    4. ' count' → logprob: -5.030659198760986
    5. 'count' → logprob: -5.530659198760986
    6. ' pairs' → logprob: -6.030659198760986
    7. ' counts' → logprob: -6.405659198760986
    8. ' from' → logprob: -6.905659198760986
    9. ' counter' → logprob: -6.905659198760986
    10. ' n' → logprob: -7.280659198760986

Token 93: ' Count' (ID: 6789)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25039660930633545
    2. ' return' → logprob: -2.250396728515625
    3. ' ' → logprob: -4.000396728515625
    4. 'return' → logprob: -4.250396728515625
    5. ' from' → logprob: -4.500396728515625
    6. 'from' → logprob: -4.625396728515625
    7. '    ' → logprob: -4.625396728515625
    8. ' counter' → logprob: -5.000396728515625
    9. ' if' → logprob: -5.125396728515625
    10. ')' → logprob: -5.250396728515625

Token 94: ' number' (ID: 2086)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3058511018753052
    2. ' =' → logprob: -1.3058511018753052
    3. '   ' → logprob: -1.6808511018753052
    4. '=' → logprob: -2.6808509826660156
    5. '(seq' → logprob: -2.9308509826660156
    6. '_' → logprob: -3.5558509826660156
    7. ' ' → logprob: -3.5558509826660156
    8. 's' → logprob: -4.305850982666016
    9. ')' → logprob: -4.305850982666016
    10. '_pairs' → logprob: -4.555850982666016

Token 95: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6248888969421387
    2. '=' → logprob: -1.2498888969421387
    3. '(seq' → logprob: -2.4998888969421387
    4. ' =' → logprob: -2.7498888969421387
    5. '(' → logprob: -4.374888896942139
    6. '_' → logprob: -4.499888896942139
    7. 'of' → logprob: -6.374888896942139
    8. '(s' → logprob: -6.624888896942139
    9. 'seq' → logprob: -6.749888896942139
    10. ' of' → logprob: -7.124888896942139

Token 96: ' pairs' (ID: 24702)
  Prédit: ' pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -1.2202085256576538
    2. 'seq' → logprob: -1.8452085256576538
    3. ' seq' → logprob: -1.9702085256576538
    4. 'pairs' → logprob: -1.9702085256576538
    5. 'com' → logprob: -2.3452086448669434
    6. '(seq' → logprob: -2.7202086448669434
    7. ' ' → logprob: -3.4702086448669434
    8. ' elements' → logprob: -3.9702086448669434
    9. ' combinations' → logprob: -4.220208644866943
    10. 'elements' → logprob: -4.345208644866943

Token 97: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38975924253463745
    2. '   ' → logprob: -1.7647593021392822
    3. '(seq' → logprob: -2.7647593021392822
    4. '=' → logprob: -3.7647593021392822
    5. '(sequence' → logprob: -4.639759063720703
    6. ':' → logprob: -4.639759063720703
    7. '
' → logprob: -5.014759063720703
    8. 'def' → logprob: -5.389759063720703
    9. ' in' → logprob: -5.514759063720703
    10. '(s' → logprob: -5.889759063720703

Token 98: ' length' (ID: 5517)
  Prédit: ' seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.8988426327705383
    2. ' x' → logprob: -2.0238425731658936
    3. ' i' → logprob: -2.6488425731658936
    4. ' each' → logprob: -2.8988425731658936
    5. ' elem' → logprob: -3.1488425731658936
    6. ' k' → logprob: -3.1488425731658936
    7. 'i' → logprob: -3.2738425731658936
    8. 'x' → logprob: -3.7738425731658936
    9. 'seq' → logprob: -3.7738425731658936
    10. ' elements' → logprob: -3.8988425731658936

Token 99: ' of' (ID: 328)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.15453533828258514
    2. ' seq' → logprob: -3.4045352935791016
    3. '   ' → logprob: -3.6545352935791016
    4. 'seq' → logprob: -4.029535293579102
    5. ' ' → logprob: -4.529535293579102
    6. ' of' → logprob: -4.654535293579102
    7. 'def' → logprob: -4.904535293579102
    8. ' =' → logprob: -4.904535293579102
    9. ' in' → logprob: -5.404535293579102
    10. '(len' → logprob: -5.529535293579102

Token 100: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.6954023241996765
    2. 'seq' → logprob: -0.6954023241996765
    3. ' sequence' → logprob: -7.320402145385742
    4. '(seq' → logprob: -7.320402145385742
    5. 'sequence' → logprob: -7.820402145385742
    6. '```' → logprob: -9.195402145385742
    7. ' the' → logprob: -9.445402145385742
    8. 's' → logprob: -9.570402145385742
    9. ' sequences' → logprob: -9.695402145385742
    10. '_seq' → logprob: -10.320402145385742

Token 101: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6555494666099548
    2. ':' → logprob: -0.9055494666099548
    3. '):' → logprob: -3.6555495262145996
    4. ' =' → logprob: -4.2805495262146
    5. 's' → logprob: -5.0305495262146
    6. '(n' → logprob: -5.4055495262146
    7. '(' → logprob: -5.5305495262146
    8. ':
' → logprob: -5.6555495262146
    9. '):
' → logprob: -5.7805495262146
    10. '(len' → logprob: -6.1555495262146

Token 102: ' explicitly' (ID: 45615)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.09212206304073334
    2. 'lambda' → logprob: -3.3421220779418945
    3. 'n' → logprob: -4.5921220779418945
    4. 'def' → logprob: -4.7171220779418945
    5. 'return' → logprob: -4.8421220779418945
    6. ' len' → logprob: -5.5921220779418945
    7. 'seq' → logprob: -5.7171220779418945
    8. 'comb' → logprob: -5.7171220779418945
    9. 'com' → logprob: -5.9671220779418945
    10. ' lambda' → logprob: -6.2171220779418945

Token 103: ' creating' (ID: 9278)
  Prédit: ' counting'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' counting' → logprob: -0.7068045139312744
    2. 'count' → logprob: -1.2068045139312744
    3. ' iter' → logprob: -2.4568045139312744
    4. ' calculating' → logprob: -2.8318045139312744
    5. 'calcul' → logprob: -4.706804275512695
    6. ' generating' → logprob: -4.831804275512695
    7. ' computing' → logprob: -5.081804275512695
    8. ' checking' → logprob: -5.206804275512695
    9. 'iter' → logprob: -5.456804275512695
    10. 'return' → logprob: -5.831804275512695

Token 104: ' all' (ID: 722)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -1.0415396690368652
    2. ' ' → logprob: -1.6665396690368652
    3. ' seq' → logprob: -2.1665396690368652
    4. ' range' → logprob: -2.5415396690368652
    5. ' all' → logprob: -2.6665396690368652
    6. 'com' → logprob: -2.9165396690368652
    7. ' combinations' → logprob: -3.1665396690368652
    8. 'seq' → logprob: -3.9165396690368652
    9. ' pair' → logprob: -4.291539669036865
    10. ' the' → logprob: -4.291539669036865

Token 105: ' index' (ID: 3472)
  Prédit: ' pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.38115745782852173
    2. ' combinations' → logprob: -1.756157398223877
    3. 'com' → logprob: -2.256157398223877
    4. 'pairs' → logprob: -4.006157398223877
    5. '   ' → logprob: -4.381157398223877
    6. ' ' → logprob: -6.131157398223877
    7. ' pair' → logprob: -6.506157398223877
    8. '_pairs' → logprob: -6.881157398223877
    9. ' sequences' → logprob: -7.131157398223877
    10. '_com' → logprob: -7.381157398223877

Token 106: ' pairs' (ID: 24702)
  Prédit: ' pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.8626046776771545
    2. 's' → logprob: -1.1126046180725098
    3. ' s' → logprob: -2.2376046180725098
    4. ' combinations' → logprob: -2.7376046180725098
    5. ' ' → logprob: -3.1126046180725098
    6. '_pairs' → logprob: -3.9876046180725098
    7. '_com' → logprob: -5.36260461807251
    8. '_s' → logprob: -5.98760461807251
    9. 'pairs' → logprob: -6.11260461807251
    10. 'com' → logprob: -6.23760461807251

Token 107: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02144051343202591
    2. '(' → logprob: -5.271440505981445
    3. ':' → logprob: -5.271440505981445
    4. 's' → logprob: -5.771440505981445
    5. 'def' → logprob: -6.646440505981445
    6. ',' → logprob: -6.896440505981445
    7. '(s' → logprob: -7.146440505981445
    8. '(seq' → logprob: -7.271440505981445
    9. '
' → logprob: -7.646440505981445
    10. '(n' → logprob: -7.771440505981445

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0017150469357147813
    2. 'def' → logprob: -6.876715183258057
    3. '```' → logprob: -8.001714706420898
    4. '(' → logprob: -9.251714706420898
    5. ':' → logprob: -9.751714706420898
    6. ',' → logprob: -10.126714706420898
    7. '    
' → logprob: -10.501714706420898
    8. '
' → logprob: -10.751714706420898
    9. '):
' → logprob: -11.126714706420898
    10. '(n' → logprob: -11.501714706420898

Token 109: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2158973217010498
    2. ' return' → logprob: -2.21589732170105
    3. ' pairs' → logprob: -3.34089732170105
    4. 'return' (adapté à ' return') → logprob: -4.090897560119629
    5. 'pairs' → logprob: -4.215897560119629
    6. '```' → logprob: -4.590897560119629
    7. 'n' → logprob: -6.090897560119629
    8. '
' → logprob: -6.590897560119629
    9. ' n' → logprob: -6.840897560119629
    10. '\n' → logprob: -7.465897560119629

Token 110: ' sum' (ID: 4215)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.46608951687812805
    2. 'len' → logprob: -1.2160894870758057
    3. ' sum' → logprob: -2.8410894870758057
    4. 'sum' → logprob: -4.216089725494385
    5. '(len' → logprob: -6.716089725494385
    6. ' (' → logprob: -7.591089725494385
    7. ' comb' → logprob: -7.841089725494385
    8. '   ' → logprob: -8.591089248657227
    9. ' ' → logprob: -8.716089248657227
    10. 'com' → logprob: -9.216089248657227

Token 111: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08166203647851944
    2. '(com' → logprob: -2.5816619396209717
    3. '(len' → logprob: -6.706662178039551
    4. '((' → logprob: -6.706662178039551
    5. '([' → logprob: -9.08166217803955
    6. '(pair' → logprob: -9.58166217803955
    7. '1' → logprob: -10.20666217803955
    8. 'com' → logprob: -10.20666217803955
    9. '(c' → logprob: -10.83166217803955
    10. '(
' → logprob: -11.20666217803955

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015045871958136559
    2. 'com' → logprob: -5.265045642852783
    3. '(' → logprob: -5.640045642852783
    4. 'len' → logprob: -5.765045642852783
    5. 'comb' → logprob: -6.765045642852783
    6. '[' → logprob: -7.515045642852783
    7. 'choose' → logprob: -8.265046119689941
    8. '(i' → logprob: -8.640046119689941
    9. '(com' → logprob: -8.765046119689941
    10. '[i' → logprob: -9.015046119689941

Token 113: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12061645090579987
    2. 'for' → logprob: -2.2456164360046387
    3. ',' → logprob: -5.620616436004639
    4. '+' → logprob: -6.370616436004639
    5. ' ' → logprob: -7.120616436004639
    6. '   ' → logprob: -7.745616436004639
    7. ')' → logprob: -7.745616436004639
    8. ' +' → logprob: -8.245616912841797
    9. ' -' → logprob: -9.745616912841797
    10. '1' → logprob: -9.870616912841797

Token 114: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8805385231971741
    2. ' _' → logprob: -1.0055384635925293
    3. ' i' → logprob: -2.3805384635925293
    4. 'i' → logprob: -2.5055384635925293
    5. ' comb' → logprob: -4.130538463592529
    6. '_,' → logprob: -5.005538463592529
    7. 'com' → logprob: -5.005538463592529
    8. '_i' → logprob: -5.380538463592529
    9. '_com' → logprob: -6.130538463592529
    10. '_comb' → logprob: -6.505538463592529

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04251525178551674
    2. 'com' → logprob: -3.417515277862549
    3. 'in' → logprob: -5.542515277862549
    4. ',' → logprob: -5.792515277862549
    5. '_' → logprob: -7.542515277862549
    6. ' combinations' → logprob: -7.542515277862549
    7. ' _' → logprob: -8.41751480102539
    8. 'enumer' → logprob: -9.16751480102539
    9. ' itertools' → logprob: -9.41751480102539
    10. 'comb' → logprob: -9.54251480102539

Token 116: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.0052470373921096325
    2. ' combinations' → logprob: -5.255247116088867
    3. '(com' → logprob: -11.880247116088867
    4. 'comb' → logprob: -13.005247116088867
    5. '	com' → logprob: -13.255247116088867
    6. 'range' → logprob: -13.880247116088867
    7. '```' → logprob: -15.005247116088867
    8. '_com' → logprob: -15.505247116088867
    9. '   ' → logprob: -15.755247116088867
    10. ')' → logprob: -16.005247116088867

Token 117: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.13408704102039337
    2. '(seq' → logprob: -2.134087085723877
    3. '(len' → logprob: -5.009087085723877
    4. '(sequence' → logprob: -8.384086608886719
    5. '(' → logprob: -9.134086608886719
    6. 'range' → logprob: -9.634086608886719
    7. ')' → logprob: -10.634086608886719
    8. '(list' → logprob: -12.259086608886719
    9. 'len' → logprob: -12.259086608886719
    10. ')(' → logprob: -12.384086608886719

Token 118: '(seq' (ID: 78669)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0006497674621641636
    2. 'len' → logprob: -7.375649929046631
    3. '(' → logprob: -10.875649452209473
    4. ' len' → logprob: -13.750649452209473
    5. ')' → logprob: -14.000649452209473
    6. ',len' → logprob: -14.500649452209473
    7. '(n' → logprob: -14.500649452209473
    8. '[len' → logprob: -15.250649452209473
    9. '=len' → logprob: -15.250649452209473
    10. '(N' → logprob: -15.750649452209473

Token 119: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.028704706579446793
    2. '.__' → logprob: -5.028704643249512
    3. '   ' → logprob: -5.403704643249512
    4. ',' → logprob: -5.903704643249512
    5. ' ' → logprob: -6.153704643249512
    6. ' ),' → logprob: -6.153704643249512
    7. 'length' → logprob: -6.278704643249512
    8. ')),' → logprob: -6.653704643249512
    9. '_length' → logprob: -6.778704643249512
    10. 'len' → logprob: -7.028704643249512

Token 120: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004623799119144678
    2. ' ' → logprob: -5.379623889923096
    3. '   ' → logprob: -13.004623413085938
    4. '  ' → logprob: -14.254623413085938
    5. ')' → logprob: -16.129623413085938
    6. '    ' → logprob: -16.379623413085938
    7. '           ' → logprob: -16.504623413085938
    8. '       ' → logprob: -16.754623413085938
    9. '     ' → logprob: -17.254623413085938
    10. '         ' → logprob: -17.442123413085938

Token 121: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.889424836728722e-05
    2. ' ' → logprob: -9.250099182128906
    3. '   ' → logprob: -13.000099182128906
    4. '  ' → logprob: -15.625099182128906
    5. ')' → logprob: -16.000099182128906
    6. '           ' → logprob: -17.000099182128906
    7. '    ' → logprob: -17.250099182128906
    8. '       ' → logprob: -17.375099182128906
    9. '۲' → logprob: -18.000099182128906
    10. '```' → logprob: -18.187599182128906

Token 122: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0028307924512773752
    2. ')' → logprob: -5.877830982208252
    3. ')))' → logprob: -11.377830505371094
    4. '))
' → logprob: -11.502830505371094
    5. ')
' → logprob: -13.752830505371094
    6. ' ))' → logprob: -13.877830505371094
    7. '   ' → logprob: -14.252830505371094
    8. '),' → logprob: -15.002830505371094
    9. '()))' → logprob: -15.127830505371094
    10. ')}' → logprob: -15.877830505371094

Token 123: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5856940746307373
    2. 'def' → logprob: -1.5856940746307373
    3. ':' → logprob: -1.8356940746307373
    4. '
' → logprob: -3.8356940746307373
    5. '\n' → logprob: -4.835694313049316
    6. '<|end|>' → logprob: -4.835694313049316
    7. '    
' → logprob: -4.960694313049316
    8. '(' → logprob: -4.960694313049316
    9. '   ' → logprob: -5.835694313049316
    10. '  
' → logprob: -5.960694313049316

Token 124: ' ob' (ID: 1067)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.661543607711792
    2. ' count' → logprob: -2.411543607711792
    3. ' pair' → logprob: -2.536543607711792
    4. ' max' → logprob: -2.661543607711792
    5. ' solve' → logprob: -3.286543607711792
    6. ' unique' → logprob: -4.036543846130371
    7. ' is' → logprob: -4.286543846130371
    8. ' valid' → logprob: -4.411543846130371
    9. 'main' → logprob: -4.411543846130371
    10. ' total' → logprob: -4.536543846130371

Token 125: 'fuscated' (ID: 149858)
  Prédit: 'served'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'served' → logprob: -0.9117690324783325
    2. 'serve' → logprob: -1.4117690324783325
    3. 'ject' → logprob: -2.536768913269043
    4. 's' → logprob: -2.786768913269043
    5. 'j' → logprob: -2.911768913269043
    6. 'fusc' → logprob: -3.161768913269043
    7. 'serv' → logprob: -3.911768913269043
    8. 'f' → logprob: -3.911768913269043
    9. 'fuscated' → logprob: -4.161768913269043
    10. 'jective' → logprob: -4.411768913269043

Token 126: '_even' (ID: 186029)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4811479449272156
    2. '(N' → logprob: -1.8561480045318604
    3. '(seq' → logprob: -2.4811480045318604
    4. '(' → logprob: -3.3561480045318604
    5. '_code' → logprob: -3.8561480045318604
    6. '(sequence' → logprob: -4.356147766113281
    7. '(s' → logprob: -4.606147766113281
    8. '_count' → logprob: -4.856147766113281
    9. '(n' → logprob: -4.856147766113281
    10. '_pairs' → logprob: -5.481147766113281

Token 127: '_pairs' (ID: 90005)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.42665863037109375
    2. 's' → logprob: -2.0516586303710938
    3. '_count' → logprob: -2.6766586303710938
    4. '(' → logprob: -3.0516586303710938
    5. '_pairs' → logprob: -3.9266586303710938
    6. '_par' → logprob: -4.176658630371094
    7. '_sum' → logprob: -5.176658630371094
    8. '(n' → logprob: -5.426658630371094
    9. '_parent' → logprob: -5.551658630371094
    10. '_pair' → logprob: -5.801658630371094

Token 128: '(n' (ID: 2406)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.008930913172662258
    2. '(' → logprob: -6.008930683135986
    3. '(N' → logprob: -6.633930683135986
    4. '(n' → logprob: -6.758930683135986
    5. '(sequence' → logprob: -7.008930683135986
    6. '(s' → logprob: -7.008930683135986
    7. '(length' → logprob: -7.758930683135986
    8. '(lst' → logprob: -7.758930683135986
    9. '(size' → logprob: -8.133931159973145
    10. '():' → logprob: -8.133931159973145

Token 129: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2611793577671051
    2. '):
' → logprob: -1.5111793279647827
    3. ',' → logprob: -4.886179447174072
    4. '):
' → logprob: -7.761179447174072
    5. ')' → logprob: -7.886179447174072
    6. '_' → logprob: -8.136178970336914
    7. ':' → logprob: -8.886178970336914
    8. '):

' → logprob: -9.011178970336914
    9. 's' → logprob: -10.261178970336914
    10. 'n' → logprob: -10.261178970336914

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.759734732331708e-05
    2. ' return' → logprob: -11.125017166137695
    3. 'return' → logprob: -14.000017166137695
    4. '```' → logprob: -14.250017166137695
    5. '   ' → logprob: -14.250017166137695
    6. ' if' → logprob: -14.375017166137695
    7. '    
' → logprob: -17.375017166137695
    8. 'n' → logprob: -17.500017166137695
    9. '   ' → logprob: -17.750017166137695
    10. '
' → logprob: -18.000017166137695

Token 131: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6592503786087036
    2. '   ' → logprob: -1.2842503786087036
    3. ' return' → logprob: -1.6592503786087036
    4. 'result' → logprob: -5.659250259399414
    5. ' res' → logprob: -6.034250259399414
    6. ' result' → logprob: -6.409250259399414
    7. 'res' → logprob: -6.659250259399414
    8. ' if' → logprob: -6.659250259399414
    9. 'if' → logprob: -6.909250259399414
    10. ' total' → logprob: -7.034250259399414

Token 132: ' Choose' (ID: 25151)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18747185170650482
    2. 'total' → logprob: -2.937471866607666
    3. 'result' → logprob: -2.937471866607666
    4. 'res' → logprob: -3.937471866607666
    5. 'count' → logprob: -4.062471866607666
    6. 'if' → logprob: -4.437471866607666
    7. 'pairs' → logprob: -4.937471866607666
    8. 'cnt' → logprob: -6.312471866607666
    9. 'def' → logprob: -6.812471866607666
    10. ' return' → logprob: -6.812471866607666

Token 133: ' odd' (ID: 14210)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.9128221273422241
    2. '(n' → logprob: -1.6628221273422241
    3. 'def' → logprob: -1.7878221273422241
    4. 'n' → logprob: -2.1628222465515137
    5. '(' → logprob: -3.5378222465515137
    6. 'r' → logprob: -3.7878222465515137
    7. ' ' → logprob: -4.537822246551514
    8. 'pairs' → logprob: -4.537822246551514
    9. 'k' → logprob: -4.662822246551514
    10. 'even' → logprob: -5.162822246551514

Token 134: ' way' (ID: 2006)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2796260118484497
    2. '_pairs' → logprob: -1.9046260118484497
    3. '_count' → logprob: -2.02962589263916
    4. ' =' → logprob: -2.40462589263916
    5. 'k' → logprob: -2.40462589263916
    6. '_counts' → logprob: -3.02962589263916
    7. 'r' → logprob: -3.15462589263916
    8. '=' → logprob: -3.15462589263916
    9. '_k' → logprob: -4.02962589263916
    10. '_r' → logprob: -4.15462589263916

Token 135: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2597914934158325
    2. 'def' → logprob: -2.259791374206543
    3. '(n' → logprob: -3.134791374206543
    4. 's' → logprob: -3.884791374206543
    5. ' if' → logprob: -4.884791374206543
    6. ' def' → logprob: -4.884791374206543
    7. 'return' → logprob: -5.134791374206543
    8. ' pairs' → logprob: -5.259791374206543
    9. 'pairs' → logprob: -5.384791374206543
    10. ' =' → logprob: -5.884791374206543

Token 136: ' compute' (ID: 23864)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.40658047795295715
    2. 'calculate' → logprob: -1.9065804481506348
    3. ' return' → logprob: -2.4065804481506348
    4. ' calculate' → logprob: -3.9065804481506348
    5. 'combine' → logprob: -4.281580448150635
    6. 'choose' → logprob: -4.406580448150635
    7. 'compute' → logprob: -4.531580448150635
    8. 'count' → logprob: -4.781580448150635
    9. ' compute' → logprob: -4.906580448150635
    10. 'write' → logprob: -5.656580448150635

Token 137: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3147497177124023
    2. 'return' → logprob: -1.3147497177124023
    3. 'pairs' → logprob: -1.6897497177124023
    4. ' n' → logprob: -3.1897497177124023
    5. 'prod' → logprob: -3.1897497177124023
    6. ' return' → logprob: -3.6897497177124023
    7. ' pairs' → logprob: -3.6897497177124023
    8. ' prod' → logprob: -4.314749717712402
    9. 'even' → logprob: -4.314749717712402
    10. '(' → logprob: -4.314749717712402

Token 138: ' choose' (ID: 5655)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.7883403301239014
    2. '(n' → logprob: -2.2883403301239014
    3. ' ' → logprob: -2.4133403301239014
    4. '//' → logprob: -2.6633403301239014
    5. 'pairs' → logprob: -2.6633403301239014
    6. ' pairs' → logprob: -3.1633403301239014
    7. '   ' → logprob: -3.2883403301239014
    8. ',' → logprob: -3.9133403301239014
    9. ' *' → logprob: -3.9133403301239014
    10. '*(' → logprob: -4.0383405685424805

Token 139: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006105235777795315
    2. '(' → logprob: -5.256105422973633
    3. '(n' → logprob: -7.131105422973633
    4. ' ' → logprob: -10.381105422973633
    5. '4' → logprob: -11.881105422973633
    6. '```' → logprob: -12.131105422973633
    7. 'n' → logprob: -12.506105422973633
    8. '   ' → logprob: -12.756105422973633
    9. '3' → logprob: -12.756105422973633
    10. ' (' → logprob: -12.881105422973633

Token 140: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.875004768371582
    3. '(' → logprob: -15.250004768371582
    4. '```' → logprob: -15.250004768371582
    5. 'k' → logprob: -15.375004768371582
    6. '   ' → logprob: -16.250003814697266
    7. '{' → logprob: -16.375003814697266
    8. 'n' → logprob: -16.375003814697266
    9. 'pairs' → logprob: -16.375003814697266
    10. '_' → logprob: -16.375003814697266

Token 141: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04035891592502594
    2. 'return' → logprob: -3.2903590202331543
    3. ' return' → logprob: -6.415359020233154
    4. '
' → logprob: -7.790359020233154
    5. 'def' → logprob: -9.165358543395996
    6. '    
' → logprob: -9.915358543395996
    7. 'n' → logprob: -10.915358543395996
    8. ':' → logprob: -11.165358543395996
    9. '	return' → logprob: -11.290358543395996
    10. ':
' → logprob: -11.665358543395996

Token 142: ' by' (ID: 656)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17602337896823883
    2. 'return' → logprob: -2.301023483276367
    3. ' return' → logprob: -2.801023483276367
    4. '```' → logprob: -8.051023483276367
    5. 'def' → logprob: -9.176023483276367
    6. 'n' → logprob: -11.176023483276367
    7. ' if' → logprob: -11.676023483276367
    8. ' def' → logprob: -11.801023483276367
    9. '``' → logprob: -12.051023483276367
    10. 'if' → logprob: -12.176023483276367

Token 143: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.49240872263908386
    2. 'prod' → logprob: -1.2424087524414062
    3. 'reduce' → logprob: -2.9924087524414062
    4. 'choose' → logprob: -4.492408752441406
    5. 's' → logprob: -4.742408752441406
    6. 'redu' → logprob: -5.367408752441406
    7. 'return' → logprob: -5.617408752441406
    8. 'adding' → logprob: -6.117408752441406
    9. 'multip' → logprob: -6.367408752441406
    10. 'summ' → logprob: -6.367408752441406

Token 144: ' of' (ID: 328)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.36892932653427124
    2. '(i' → logprob: -2.118929386138916
    3. 'range' → logprob: -2.493929386138916
    4. '=' → logprob: -3.243929386138916
    5. 'return' → logprob: -3.618929386138916
    6. '(sum' → logprob: -4.618929386138916
    7. 'i' → logprob: -4.993929386138916
    8. '(n' → logprob: -5.618929386138916
    9. '(' → logprob: -5.618929386138916
    10. 'for' → logprob: -6.243929386138916

Token 145: ' arithmetic' (ID: 81645)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.041407931596040726
    2. 'i' → logprob: -3.791407823562622
    3. '(i' → logprob: -4.916408061981201
    4. 'k' → logprob: -5.291408061981201
    5. '(range' → logprob: -5.916408061981201
    6. 'choose' → logprob: -7.041408061981201
    7. '[i' → logprob: -7.791408061981201
    8. 'pair' → logprob: -8.041407585144043
    9. '(' → logprob: -8.541407585144043
    10. '[' → logprob: -8.791407585144043

Token 146: ' sequence' (ID: 16281)
  Prédit: 'progress'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'progress' → logprob: -0.08243023604154587
    2. 'series' → logprob: -3.207430124282837
    3. '_progress' → logprob: -3.957430124282837
    4. '(n' → logprob: -5.457430362701416
    5. 'sum' → logprob: -5.707430362701416
    6. 'n' → logprob: -6.082430362701416
    7. ' progression' → logprob: -6.082430362701416
    8. ' series' → logprob: -6.332430362701416
    9. 'sequence' → logprob: -6.332430362701416
    10. ' progress' → logprob: -7.207430362701416

Token 147: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13138066232204437
    2. 'return' → logprob: -2.381380558013916
    3. ' return' → logprob: -4.131380558013916
    4. '
' → logprob: -5.506380558013916
    5. ':' → logprob: -6.131380558013916
    6. ':
' → logprob: -6.256380558013916
    7. 'n' → logprob: -7.006380558013916
    8. '(
' → logprob: -7.256380558013916
    9. '(n' → logprob: -7.256380558013916
    10. ' =' → logprob: -7.381380558013916

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003996715415269136
    2. 'return' → logprob: -5.753996849060059
    3. ' return' → logprob: -7.253996849060059
    4. 'n' → logprob: -10.503996849060059
    5. '	return' → logprob: -10.503996849060059
    6. '```' → logprob: -10.503996849060059
    7. '
' → logprob: -11.878996849060059
    8. '    
' → logprob: -12.378996849060059
    9. '  ' → logprob: -13.253996849060059
    10. ':' → logprob: -13.253996849060059

Token 149: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.18055371940135956
    2. ' return' → logprob: -2.055553674697876
    3. '   ' → logprob: -3.305553674697876
    4. 'result' → logprob: -8.555553436279297
    5. 'n' → logprob: -9.180553436279297
    6. ' n' → logprob: -10.180553436279297
    7. 'if' → logprob: -10.305553436279297
    8. ' result' → logprob: -10.805553436279297
    9. ' if' → logprob: -11.180553436279297
    10. 'total' → logprob: -11.180553436279297

Token 150: ' sum' (ID: 4215)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17498688399791718
    2. '(n' → logprob: -1.9249868392944336
    3. ' n' → logprob: -4.424986839294434
    4. ' (' → logprob: -6.549986839294434
    5. '(' → logprob: -7.424986839294434
    6. '((' → logprob: -7.549986839294434
    7. ' ' → logprob: -10.987486839294434
    8. '   ' → logprob: -11.112486839294434
    9. '2' → logprob: -11.362486839294434
    10. '_n' → logprob: -11.862486839294434

Token 151: '(i' (ID: 3649)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.049322374165058136
    2. '(i' → logprob: -3.0493223667144775
    3. '(n' → logprob: -8.174322128295898
    4. '(' → logprob: -8.549322128295898
    5. '(k' → logprob: -9.049322128295898
    6. '((' → logprob: -9.549322128295898
    7. '(x' → logprob: -9.924322128295898
    8. 'range' → logprob: -11.299322128295898
    9. '([' → logprob: -13.049322128295898
    10. '(r' → logprob: -13.299322128295898

Token 152: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48072320222854614
    2. 'for' → logprob: -0.9807232022285461
    3. ' in' → logprob: -5.3557233810424805
    4. 'range' → logprob: -6.9807233810424805
    5. 'in' → logprob: -7.3557233810424805
    6. ' range' → logprob: -8.98072338104248
    7. ' i' → logprob: -9.60572338104248
    8. ' ' → logprob: -10.35572338104248
    9. 'i' → logprob: -10.48072338104248
    10. 'n' → logprob: -10.60572338104248

Token 153: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1155058890581131
    2. ' range' → logprob: -2.6155059337615967
    3. 'i' → logprob: -3.4905059337615967
    4. 'range' → logprob: -5.240505695343018
    5. ' in' → logprob: -9.115506172180176
    6. ' ' → logprob: -10.490506172180176
    7. ')' → logprob: -12.365506172180176
    8. ' ' → logprob: -12.490506172180176
    9. '	i' → logprob: -12.740506172180176
    10. '(i' → logprob: -12.990506172180176

Token 154: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043029215186834335
    2. 'in' → logprob: -3.168029308319092
    3. 'range' → logprob: -11.168028831481934
    4. ' ' → logprob: -11.668028831481934
    5. ' range' → logprob: -12.168028831481934
    6. 'n' → logprob: -14.418028831481934
    7. ')' → logprob: -14.543028831481934
    8. ',' → logprob: -14.918028831481934
    9. '  ' → logprob: -15.918028831481934
    10. ' i' → logprob: -16.04302978515625

Token 155: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31326326727867126
    2. ' range' → logprob: -1.3132632970809937
    3. '	range' → logprob: -14.313262939453125
    4. ' ' → logprob: -14.688262939453125
    5. '(range' → logprob: -15.438262939453125
    6. '   ' → logprob: -16.813262939453125
    7. '  ' → logprob: -16.813262939453125
    8. ')' → logprob: -17.813262939453125
    9. ' xrange' → logprob: -17.938262939453125
    10. '1' → logprob: -18.438262939453125

Token 156: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0077194939367473125
    2. '(n' → logprob: -4.88271951675415
    3. '1' → logprob: -9.257719039916992
    4. ' ' → logprob: -11.507719039916992
    5. 'n' → logprob: -12.632719039916992
    6. ' (' → logprob: -12.757719039916992
    7. ' n' → logprob: -14.882719039916992
    8. ',' → logprob: -15.382719039916992
    9. '((' → logprob: -15.445219039916992
    10. '2' → logprob: -15.820219039916992

Token 157: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7137501239776611
    2. '))' → logprob: -1.3387501239776611
    3. '1' → logprob: -2.588750123977661
    4. ' -' → logprob: -2.713750123977661
    5. ' ' → logprob: -2.838750123977661
    6. ')' → logprob: -3.588750123977661
    7. '2' → logprob: -4.963749885559082
    8. '(' → logprob: -5.713749885559082
    9. ' ))' → logprob: -6.088749885559082
    10. ',' → logprob: -6.213749885559082

Token 158: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6768932938575745
    2. ')' → logprob: -0.8018932938575745
    3. 'if' → logprob: -3.3018932342529297
    4. ' )' → logprob: -5.92689323425293
    5. '-' → logprob: -6.30189323425293
    6. ' ' → logprob: -7.30189323425293
    7. '))' → logprob: -7.55189323425293
    8. '   ' → logprob: -8.17689323425293
    9. ' -' → logprob: -9.05189323425293
    10. '1' → logprob: -9.80189323425293

Token 159: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.03817552700638771
    2. 'j' → logprob: -3.288175582885742
    3. ' i' → logprob: -10.538175582885742
    4. '_' → logprob: -10.788175582885742
    5. '_j' → logprob: -10.788175582885742
    6. '	j' → logprob: -11.163175582885742
    7. ' ' → logprob: -11.538175582885742
    8. ' _' → logprob: -11.538175582885742
    9. '   ' → logprob: -11.663175582885742
    10. '    ' → logprob: -12.538175582885742

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014173151925206184
    2. 'in' → logprob: -4.2641730308532715
    3. 'range' → logprob: -12.88917350769043
    4. ' ' → logprob: -13.01417350769043
    5. 'i' → logprob: -13.38917350769043
    6. '<|end|>' → logprob: -15.01417350769043
    7. ')' → logprob: -15.26417350769043
    8. 'n' → logprob: -15.38917350769043
    9. ' i' → logprob: -15.45167350769043
    10. '1' → logprob: -15.51417350769043

Token 161: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1602601855993271
    2. ' range' → logprob: -1.9102602005004883
    3. 'i' → logprob: -11.410260200500488
    4. '   ' → logprob: -11.910260200500488
    5. '(range' → logprob: -12.285260200500488
    6. ' ' → logprob: -12.410260200500488
    7. ' i' → logprob: -13.035260200500488
    8. ')' → logprob: -13.410260200500488
    9. '  ' → logprob: -13.785260200500488
    10. '	range' → logprob: -14.160260200500488

Token 162: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03095807507634163
    2. 'i' → logprob: -3.5309581756591797
    3. '(' → logprob: -6.90595817565918
    4. '0' → logprob: -9.78095817565918
    5. '(n' → logprob: -10.15595817565918
    6. 'n' → logprob: -10.78095817565918
    7. '1' → logprob: -11.15595817565918
    8. ' (' → logprob: -11.15595817565918
    9. '   ' → logprob: -11.15595817565918
    10. ' i' → logprob: -11.28095817565918

Token 163: '+' (ID: 10)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.13576830923557281
    2. '+' → logprob: -2.135768413543701
    3. ')' → logprob: -6.260768413543701
    4. '1' → logprob: -6.510768413543701
    5. ')))' → logprob: -6.510768413543701
    6. ' ))' → logprob: -6.885768413543701
    7. ' ' → logprob: -7.135768413543701
    8. ' +' → logprob: -7.385768413543701
    9. '0' → logprob: -7.635768413543701
    10. 'i' → logprob: -7.760768413543701

Token 164: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3871864378452301
    2. '1' → logprob: -1.1371864080429077
    3. '2' → logprob: -8.762186050415039
    4. ' n' → logprob: -9.137186050415039
    5. 'i' → logprob: -11.262186050415039
    6. ' ' → logprob: -11.512186050415039
    7. 'N' → logprob: -11.887186050415039
    8. '0' → logprob: -12.387186050415039
    9. '```' → logprob: -12.512186050415039
    10. '(n' → logprob: -12.637186050415039

Token 165: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015653042122721672
    2. ',n' → logprob: -4.515653133392334
    3. 'n' → logprob: -5.515653133392334
    4. ' ,' → logprob: -7.890653133392334
    5. '))' → logprob: -9.140652656555176
    6. ' n' → logprob: -9.640652656555176
    7. '+' → logprob: -11.640652656555176
    8. '(n' → logprob: -12.015652656555176
    9. '	n' → logprob: -13.765652656555176
    10. ')' → logprob: -14.015652656555176

Token 166: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0019343505846336484
    2. ' n' → logprob: -6.25193452835083
    3. '   ' → logprob: -13.001934051513672
    4. ' ' → logprob: -13.876934051513672
    5. '	n' → logprob: -14.501934051513672
    6. ')' → logprob: -15.376934051513672
    7. '    ' → logprob: -15.626934051513672
    8. '(n' → logprob: -15.626934051513672
    9. ' ' → logprob: -15.626934051513672
    10. '  ' → logprob: -15.626934051513672

Token 167: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.009111673571169376
    2. ')' → logprob: -4.8841118812561035
    3. '+' → logprob: -6.6341118812561035
    4. ')))' → logprob: -9.384111404418945
    5. ' ))' → logprob: -9.759111404418945
    6. ' +' → logprob: -10.884111404418945
    7. '))
' → logprob: -11.759111404418945
    8. ' ' → logprob: -12.384111404418945
    9. ' )' → logprob: -12.509111404418945
    10. '()))' → logprob: -13.384111404418945

Token 168: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5969838500022888
    2. '+' → logprob: -1.0969839096069336
    3. '<|end|>' → logprob: -2.5969839096069336
    4. ' ' → logprob: -3.9719839096069336
    5. ' +' → logprob: -5.471983909606934
    6. '(n' → logprob: -5.596983909606934
    7. '(' → logprob: -5.596983909606934
    8. '   ' → logprob: -5.971983909606934
    9. '*' → logprob: -6.596983909606934
    10. ':' → logprob: -6.596983909606934

Token 169: ' hyper' (ID: 22725)
  Prédit: ' ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ob' → logprob: -0.7787421941757202
    2. ' pair' → logprob: -1.0287421941757202
    3. 'ob' → logprob: -2.5287423133850098
    4. 'pair' → logprob: -3.2787423133850098
    5. ' n' → logprob: -4.02874231338501
    6. ' even' → logprob: -4.40374231338501
    7. ' def' → logprob: -4.90374231338501
    8. 'even' → logprob: -5.02874231338501
    9. 'n' → logprob: -5.27874231338501
    10. ' max' → logprob: -6.15374231338501

Token 170: '_pair' (ID: 34819)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.20714759826660156
    2. 'geom' → logprob: -2.9571475982666016
    3. '(n' → logprob: -3.0821475982666016
    4. 'ge' → logprob: -3.2071475982666016
    5. '(N' → logprob: -3.7071475982666016
    6. 'geo' → logprob: -5.332147598266602
    7. '_graph' → logprob: -5.582147598266602
    8. '(graph' → logprob: -6.332147598266602
    9. '_' → logprob: -6.457147598266602
    10. '_comb' → logprob: -6.582147598266602

Token 171: '_total' (ID: 23814)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.15143164992332458
    2. '(n' → logprob: -2.4014315605163574
    3. 's' → logprob: -3.1514315605163574
    4. '_counts' → logprob: -5.526431560516357
    5. '(' → logprob: -6.776431560516357
    6. 'count' → logprob: -6.901431560516357
    7. 'wise' → logprob: -8.151432037353516
    8. '(N' → logprob: -8.401432037353516
    9. 'ings' → logprob: -8.901432037353516
    10. '(s' → logprob: -9.901432037353516

Token 172: '(a' (ID: 6271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02974725142121315
    2. '(N' → logprob: -3.779747247695923
    3. '(seq' → logprob: -5.529747486114502
    4. '(s' → logprob: -7.029747486114502
    5. '():' → logprob: -7.404747486114502
    6. '(' → logprob: -8.404747009277344
    7. '(k' → logprob: -8.654747009277344
    8. '(lst' → logprob: -9.279747009277344
    9. '(nums' → logprob: -9.404747009277344
    10. '(size' → logprob: -9.529747009277344

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01116983499377966
    2. '):' → logprob: -5.636169910430908
    3. ',n' → logprob: -6.136169910430908
    4. 's' → logprob: -6.886169910430908
    5. ' ,' → logprob: -7.136169910430908
    6. '):
' → logprob: -7.386169910430908
    7. ')' → logprob: -7.511169910430908
    8. '(n' → logprob: -7.636169910430908
    9. 'n' → logprob: -7.761169910430908
    10. '[' → logprob: -7.761169910430908

Token 174: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014588993974030018
    2. ' b' → logprob: -4.264588832855225
    3. 'k' → logprob: -9.139589309692383
    4. 'n' → logprob: -9.264589309692383
    5. 'N' → logprob: -10.139589309692383
    6. 'm' → logprob: -10.514589309692383
    7. 'a' → logprob: -11.014589309692383
    8. 'M' → logprob: -11.139589309692383
    9. 'K' → logprob: -11.452089309692383
    10. 'l' → logprob: -11.514589309692383

Token 175: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6935668587684631
    2. '):' → logprob: -0.6935668587684631
    3. '):
' → logprob: -8.693567276000977
    4. ')' → logprob: -8.943567276000977
    5. '):

' → logprob: -10.068567276000977
    6. ',' → logprob: -10.068567276000977
    7. ':' → logprob: -12.068567276000977
    8. '():
' → logprob: -12.693567276000977
    9. '   ' → logprob: -12.943567276000977
    10. '*' → logprob: -13.068567276000977

Token 176: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004930600989609957
    2. ' return' → logprob: -5.50493049621582
    3. 'return' → logprob: -7.12993049621582
    4. '	return' → logprob: -10.25493049621582
    5. '<|end|>' → logprob: -11.50493049621582
    6. '   ' → logprob: -13.37993049621582
    7. '```' → logprob: -14.00493049621582
    8. '    
' → logprob: -14.75493049621582
    9. ' ' → logprob: -15.00493049621582
    10. '       ' → logprob: -15.12993049621582

Token 177: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.17574983835220337
    2. '   ' → logprob: -2.3007497787475586
    3. ' return' → logprob: -2.8007497787475586
    4. 'total' → logprob: -9.050749778747559
    5. ' total' → logprob: -10.300749778747559
    6. 'result' → logprob: -10.425749778747559
    7. 'res' → logprob: -11.675749778747559
    8. 'c' → logprob: -11.925749778747559
    9. '```' → logprob: -12.300749778747559
    10. 'if' → logprob: -12.675749778747559

Token 178: ' Ind' (ID: 2761)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06641677021980286
    2. ' return' → logprob: -2.8164167404174805
    3. 'total' → logprob: -6.6914167404174805
    4. 'result' → logprob: -7.0664167404174805
    5. 'res' → logprob: -7.3164167404174805
    6. '   ' → logprob: -7.6914167404174805
    7. ' total' → logprob: -7.8164167404174805
    8. 'if' → logprob: -8.06641674041748
    9. ' res' → logprob: -8.69141674041748
    10. 'c' → logprob: -9.56641674041748

Token 179: 'irect' (ID: 1681)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.5232037305831909
    2. 'ex' → logprob: -1.898203730583191
    3. 'ented' → logprob: -2.3982038497924805
    4. 'def' → logprob: -2.8982038497924805
    5. 't' → logprob: -3.1482038497924805
    6. 'e' → logprob: -3.5232038497924805
    7. '   ' → logprob: -4.5232038497924805
    8. 'ents' → logprob: -4.8982038497924805
    9. 'ed' → logprob: -5.2732038497924805
    10. 'dex' → logprob: -5.7732038497924805

Token 180: 'ly' (ID: 423)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2636520266532898
    2. 'return' → logprob: -2.1386520862579346
    3. 'ly' → logprob: -2.5136520862579346
    4. 'def' → logprob: -3.6386520862579346
    5. ' count' → logprob: -6.6386518478393555
    6. ' def' → logprob: -6.7636518478393555
    7. ' total' → logprob: -6.8886518478393555
    8. 'count' → logprob: -7.0136518478393555
    9. '_count' → logprob: -8.013651847839355
    10. ' result' → logprob: -8.138651847839355

Token 181: ' compute' (ID: 23864)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5463084578514099
    2. ' return' → logprob: -0.9213084578514099
    3. '   ' → logprob: -3.7963085174560547
    4. 'def' → logprob: -8.046308517456055
    5. 'calculate' → logprob: -10.546308517456055
    6. 'count' → logprob: -10.796308517456055
    7. '	return' → logprob: -10.921308517456055
    8. ' ' → logprob: -10.921308517456055
    9. ' calculate' → logprob: -11.671308517456055
    10. ' count' → logprob: -11.796308517456055

Token 182: ' total' (ID: 3609)
  Prédit: 'choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'choose' → logprob: -0.02995770052075386
    2. ' choose' → logprob: -3.6549577713012695
    3. 'a' → logprob: -6.7799577713012695
    4. 'pair' → logprob: -7.0299577713012695
    5. ' pair' → logprob: -7.5299577713012695
    6. 'return' → logprob: -8.27995777130127
    7. '(' → logprob: -8.77995777130127
    8. ' a' → logprob: -9.27995777130127
    9. 'sum' → logprob: -9.40495777130127
    10. 'prod' → logprob: -9.52995777130127

Token 183: ' using' (ID: 2360)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.8260810971260071
    2. ' pairs' → logprob: -0.9510810971260071
    3. 'pairs' → logprob: -2.3260810375213623
    4. ' =' → logprob: -3.3260810375213623
    5. '=' → logprob: -3.8260810375213623
    6. '   ' → logprob: -5.326081275939941
    7. ' pair' → logprob: -5.451081275939941
    8. ' (' → logprob: -6.451081275939941
    9. 's' → logprob: -6.826081275939941
    10. ' _' → logprob: -6.951081275939941

Token 184: ' both' (ID: 2973)
  Prédit: 'choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'choose' → logprob: -0.025504589080810547
    2. ' choose' → logprob: -3.9005045890808105
    3. 'a' → logprob: -5.7755045890808105
    4. 'sum' → logprob: -8.150505065917969
    5. '(' → logprob: -8.150505065917969
    6. 'pair' → logprob: -8.275505065917969
    7. ' a' → logprob: -8.900505065917969
    8. '(a' → logprob: -8.900505065917969
    9. 'prod' → logprob: -8.900505065917969
    10. 'ob' → logprob: -9.275505065917969

Token 185: ' approaches' (ID: 25707)
  Prédit: 'choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'choose' → logprob: -0.17797459661960602
    2. ' choose' → logprob: -2.6779747009277344
    3. 'a' → logprob: -2.8029747009277344
    4. ' a' → logprob: -4.552974700927734
    5. 'def' → logprob: -5.052974700927734
    6. ' pair' → logprob: -5.052974700927734
    7. 'pair' → logprob: -5.427974700927734
    8. 'ob' → logprob: -6.927974700927734
    9. 'return' → logprob: -7.052974700927734
    10. ' def' → logprob: -7.177974700927734

Token 186: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14489322900772095
    2. 'return' → logprob: -2.519893169403076
    3. ' return' → logprob: -4.019893169403076
    4. 'def' → logprob: -4.519893169403076
    5. '<|end|>' → logprob: -4.519893169403076
    6. ':
' → logprob: -5.144893169403076
    7. ':' → logprob: -5.519893169403076
    8. '
' → logprob: -6.519893169403076
    9. ':return' → logprob: -6.769893169403076
    10. '	return' → logprob: -7.394893169403076

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2585439085960388
    2. '<|end|>' → logprob: -2.5085439682006836
    3. 'def' → logprob: -2.7585439682006836
    4. ' return' → logprob: -3.7585439682006836
    5. '```' → logprob: -4.008543968200684
    6. 'return' → logprob: -4.883543968200684
    7. ':' → logprob: -4.883543968200684
    8. '(' → logprob: -5.133543968200684
    9. '(n' → logprob: -5.883543968200684
    10. '(
' → logprob: -6.008543968200684

Token 188: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.335138738155365
    2. '   ' → logprob: -1.3351387977600098
    3. ' return' → logprob: -3.8351387977600098
    4. 'total' → logprob: -11.085138320922852
    5. '	return' → logprob: -12.210138320922852
    6. 'result' → logprob: -12.460138320922852
    7. '```' → logprob: -12.585138320922852
    8. 'c' → logprob: -12.960138320922852
    9. '
' → logprob: -12.960138320922852
    10. 'n' → logprob: -13.210138320922852

Token 189: ' pair' (ID: 10610)
  Prédit: 'choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choose' → logprob: -0.5370895862579346
    2. ' choose' → logprob: -0.9120895862579346
    3. ' pair' → logprob: -4.9120893478393555
    4. 'ob' → logprob: -6.0370893478393555
    5. 'pair' → logprob: -6.4120893478393555
    6. ' ob' → logprob: -6.7870893478393555
    7. ' ' → logprob: -8.412089347839355
    8. ' a' → logprob: -8.537089347839355
    9. '(' → logprob: -8.662089347839355
    10. 'a' → logprob: -8.787089347839355

Token 190: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.319370302458992e-06
    2. '_counts' → logprob: -13.250005722045898
    3. 'count' → logprob: -13.875005722045898
    4. '_total' → logprob: -14.125005722045898
    5. '(a' → logprob: -14.625005722045898
    6. 'a' → logprob: -14.750005722045898
    7. 's' → logprob: -14.750005722045898
    8. '_sum' → logprob: -15.375005722045898
    9. '```' → logprob: -16.3750057220459
    10. 'Count' → logprob: -17.0000057220459

Token 191: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0246469397097826
    2. '((' → logprob: -4.399646759033203
    3. '(range' → logprob: -4.649646759033203
    4. '(' → logprob: -6.649646759033203
    5. '([' → logprob: -7.149646759033203
    6. '(N' → logprob: -9.024646759033203
    7. ' (' → logprob: -9.399646759033203
    8. '(list' → logprob: -9.899646759033203
    9. '(n' → logprob: -10.274646759033203
    10. '(b' → logprob: -10.399646759033203

Token 192: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005218463484197855
    2. '+' → logprob: -5.755218505859375
    3. ')+' → logprob: -6.755218505859375
    4. ' +' → logprob: -7.505218505859375
    5. ' )' → logprob: -8.630218505859375
    6. '+b' → logprob: -9.005218505859375
    7. '+)' → logprob: -12.005218505859375
    8. ',' → logprob: -12.130218505859375
    9. '-' → logprob: -12.255218505859375
    10. '),' → logprob: -13.630218505859375

Token 193: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20413421094417572
    2. '+' → logprob: -1.704134225845337
    3. '<|end|>' → logprob: -5.954133987426758
    4. ',' → logprob: -10.579133987426758
    5. ' *' → logprob: -10.829133987426758
    6. ')' → logprob: -10.829133987426758
    7. ' ' → logprob: -11.829133987426758
    8. '+a' → logprob: -11.954133987426758
    9. '*' → logprob: -12.579133987426758
    10. ' ' → logprob: -12.704133987426758

Token 194: ' ob' (ID: 1067)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.41914522647857666
    2. 'pair' → logprob: -1.9191452264785767
    3. ' ob' → logprob: -1.9191452264785767
    4. ' pair' → logprob: -3.044145107269287
    5. 'choose' → logprob: -7.919145107269287
    6. 'hyper' → logprob: -8.044145584106445
    7. '   ' → logprob: -9.044145584106445
    8. ' ' → logprob: -9.106645584106445
    9. ' hyper' → logprob: -9.481645584106445
    10. '  ' → logprob: -10.231645584106445

Token 195: 'fuscated' (ID: 149858)
  Prédit: 'fuscated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fuscated' → logprob: -0.00011152983643114567
    2. 'f' → logprob: -9.50011157989502
    3. 'fusc' → logprob: -10.50011157989502
    4. '_ob' → logprob: -13.00011157989502
    5. '(ob' → logprob: -13.25011157989502
    6. 'fus' → logprob: -13.25011157989502
    7. 'ob' → logprob: -13.75011157989502
    8. 'uf' → logprob: -14.87511157989502
    9. 'of' → logprob: -15.12511157989502
    10. '```' → logprob: -15.25011157989502

Token 196: '_even' (ID: 186029)
  Prédit: '_even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_even' → logprob: -2.248469718324486e-05
    2. 'even' → logprob: -10.750022888183594
    3. '_' → logprob: -14.125022888183594
    4. '_pair' → logprob: -17.500022888183594
    5. 'Even' → logprob: -17.750022888183594
    6. '```' → logprob: -17.875022888183594
    7. '_equal' → logprob: -18.375022888183594
    8. '_pairs' → logprob: -18.625022888183594
    9. '_en' → logprob: -18.875022888183594
    10. '_every' → logprob: -18.875022888183594

Token 197: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.0017231308156624436
    2. '_even' → logprob: -6.751723289489746
    3. 'pairs' → logprob: -8.001723289489746
    4. 'even' → logprob: -8.626723289489746
    5. 'a' → logprob: -11.001723289489746
    6. '_pair' → logprob: -11.376723289489746
    7. 'pair' → logprob: -12.251723289489746
    8. '_' → logprob: -13.501723289489746
    9. 'Pairs' → logprob: -14.126723289489746
    10. '```' → logprob: -14.251723289489746

Token 198: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.20398899912834167
    2. '(' → logprob: -2.578989028930664
    3. '(a' → logprob: -2.578989028930664
    4. '(n' → logprob: -3.453989028930664
    5. ' (' → logprob: -7.078989028930664
    6. '(M' → logprob: -9.578989028930664
    7. 'b' → logprob: -9.703989028930664
    8. '```' → logprob: -9.953989028930664
    9. '(N' → logprob: -10.203989028930664
    10. '((' → logprob: -10.203989028930664

Token 199: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -15.375000953674316
    3. ' )' → logprob: -15.500000953674316
    4. '))' → logprob: -16.625
    5. ')}' → logprob: -17.375
    6. ')return' → logprob: -17.75
    7. '),' → logprob: -17.875
    8. '<|end|>' → logprob: -17.875
    9. ')a' → logprob: -18.0
    10. '}' → logprob: -18.125

Token 200: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' Instead' (ID: 21050)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 202: ' of' (ID: 328)
  Prédit: 'of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'of' → logprob: -0.1576007753610611
    2. ' of' → logprob: -2.1576008796691895
    3. ',' → logprob: -4.1576008796691895
    4. '#' → logprob: -5.1576008796691895
    5. 'for' → logprob: -5.4076008796691895
    6. 'print' → logprob: -6.2826008796691895
    7. ':' → logprob: -6.7826008796691895
    8. '
' → logprob: -7.9076008796691895
    9. ':
' → logprob: -8.907600402832031
    10. '=' → logprob: -9.407600402832031

Token 203: ' just' (ID: 1327)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08709408342838287
    2. 'input' → logprob: -3.4620940685272217
    3. ' print' → logprob: -3.8370940685272217
    4. 'using' → logprob: -5.212094306945801
    5. ' input' → logprob: -5.212094306945801
    6. '#' → logprob: -5.462094306945801
    7. 'N' → logprob: -5.462094306945801
    8. ' using' → logprob: -6.462094306945801
    9. 'writing' → logprob: -6.962094306945801
    10. ' N' → logprob: -7.087094306945801

Token 204: ' choosing' (ID: 20296)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4993213713169098
    2. 'printing' → logprob: -1.3743213415145874
    3. 'reading' → logprob: -3.374321460723877
    4. 'using' → logprob: -3.374321460723877
    5. 'calcul' → logprob: -3.624321460723877
    6. 'input' → logprob: -4.374321460723877
    7. 'continu' → logprob: -5.374321460723877
    8. ' printing' → logprob: -5.374321460723877
    9. 'writing' → logprob: -5.749321460723877
    10. 'calling' → logprob: -6.249321460723877

Token 205: ' two' (ID: 1920)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.8682223558425903
    2. 'def' → logprob: -2.243222236633301
    3. 'pairs' → logprob: -2.243222236633301
    4. 'from' → logprob: -2.368222236633301
    5. 'the' → logprob: -2.493222236633301
    6. 'N' → logprob: -2.493222236633301
    7. ' the' → logprob: -2.868222236633301
    8. '#' → logprob: -2.993222236633301
    9. ' a' → logprob: -3.243222236633301
    10. ' pairs' → logprob: -3.493222236633301

Token 206: ',' (ID: 11)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.7301904559135437
    2. 'indices' → logprob: -1.9801905155181885
    3. '#' → logprob: -2.6051905155181885
    4. 'numbers' → logprob: -2.7301905155181885
    5. ' elements' → logprob: -2.9801905155181885
    6. 'from' → logprob: -3.2301905155181885
    7. 'items' → logprob: -3.3551905155181885
    8. ',' → logprob: -3.4801905155181885
    9. 'for' → logprob: -3.8551905155181885
    10. 'pairs' → logprob: -4.230190277099609

Token 207: ' layer' (ID: 10261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1557227373123169
    2. 'print' → logprob: -2.1557226181030273
    3. 'result' → logprob: -4.280722618103027
    4. 'for' → logprob: -5.030722618103027
    5. 'def' → logprob: -6.155722618103027
    6. 'total' → logprob: -7.030722618103027
    7. 'pairs' → logprob: -7.155722618103027
    8. '...' → logprob: -7.280722618103027
    9. 'count' → logprob: -7.280722618103027
    10. 'answer' → logprob: -7.905722618103027

Token 208: ' computations' (ID: 192859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20909348130226135
    2. ' the' → logprob: -2.8340935707092285
    3. 'for' → logprob: -3.7090935707092285
    4. 'the' → logprob: -3.9590935707092285
    5. 'com' → logprob: -4.3340935707092285
    6. '#' → logprob: -4.7090935707092285
    7. ' =' → logprob: -5.2090935707092285
    8. ' for' → logprob: -5.2090935707092285
    9. ' combinations' → logprob: -5.3340935707092285
    10. ' in' → logprob: -5.5840935707092285

Token 209: ' for' (ID: 395)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.44364938139915466
    2. 'def' → logprob: -2.0686492919921875
    3. 'total' → logprob: -2.4436492919921875
    4. 'res' → logprob: -3.0686492919921875
    5. 'for' → logprob: -3.9436492919921875
    6. 'answer' → logprob: -4.4436492919921875
    7. 'a' → logprob: -4.5686492919921875
    8. 'print' → logprob: -4.8186492919921875
    9. 'pairs' → logprob: -5.0686492919921875
    10. 'count' → logprob: -5.0686492919921875

Token 210: ' no' (ID: 860)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.29349660873413086
    2. 'i' → logprob: -1.9184966087341309
    3. ' k' → logprob: -3.668496608734131
    4. '_' → logprob: -3.793496608734131
    5. 'r' → logprob: -4.293496608734131
    6. 'c' → logprob: -4.793496608734131
    7. ' i' → logprob: -5.168496608734131
    8. 'x' → logprob: -5.293496608734131
    9. 'pairs' → logprob: -6.043496608734131
    10. 'range' → logprob: -6.168496608734131

Token 211: ' reason' (ID: 5207)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.047904785722494125
    2. 't' → logprob: -3.6729047298431396
    3. 'r' → logprob: -5.547904968261719
    4. ' pairs' → logprob: -5.922904968261719
    5. ' combinations' → logprob: -6.172904968261719
    6. 'ne' → logprob: -6.922904968261719
    7. 'pairs' → logprob: -6.922904968261719
    8. ' output' → logprob: -7.172904968261719
    9. 'output' → logprob: -7.297904968261719
    10. 'n' → logprob: -7.297904968261719

Token 212: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.420418918132782
    2. 'print' → logprob: -1.9204189777374268
    3. 'def' → logprob: -2.6704189777374268
    4. 'total' → logprob: -2.7954189777374268
    5. 'for' → logprob: -4.545418739318848
    6. 'res' → logprob: -4.670418739318848
    7. 'pairs' → logprob: -4.670418739318848
    8. 'count' → logprob: -5.295418739318848
    9. 'c' → logprob: -5.420418739318848
    10. '
' → logprob: -5.420418739318848

Token 213: 'res' (ID: 430)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7861244082450867
    2. 'total' → logprob: -1.0361244678497314
    3. 'def' → logprob: -2.6611244678497314
    4. 'res' → logprob: -3.2861244678497314
    5. 'pairs' → logprob: -4.036124229431152
    6. 'answer' → logprob: -4.161124229431152
    7. 'print' → logprob: -5.036124229431152
    8. 'ans' → logprob: -5.161124229431152
    9. 'count' → logprob: -5.411124229431152
    10. 'x' → logprob: -5.536124229431152

Token 214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0074975439347326756
    2. '=' → logprob: -5.382497310638428
    3. 'ult' → logprob: -5.882497310638428
    4. ' ' → logprob: -11.007497787475586
    5. 't' → logprob: -11.257497787475586
    6. ' ult' → logprob: -11.382497787475586
    7. 'ultat' → logprob: -11.382497787475586
    8. 'u' → logprob: -11.507497787475586
    9. 'ults' → logprob: -11.757497787475586
    10. '   ' → logprob: -12.007497787475586

Token 215: ' choose' (ID: 5655)
  Prédit: 'choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choose' → logprob: -0.13981658220291138
    2. 'hyper' → logprob: -2.2648165225982666
    3. ' choose' → logprob: -4.639816761016846
    4. 'sum' → logprob: -5.014816761016846
    5. ' hyper' → logprob: -5.514816761016846
    6. 'pair' → logprob: -6.264816761016846
    7. 'reduce' → logprob: -6.264816761016846
    8. '(' → logprob: -7.014816761016846
    9. ' sum' → logprob: -7.514816761016846
    10. ' pair' → logprob: -8.389816284179688

Token 216: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0007536433404311538
    2. '(' → logprob: -7.250753879547119
    3. 'N' → logprob: -11.125753402709961
    4. '((' → logprob: -11.500753402709961
    5. '(M' → logprob: -12.000753402709961
    6. '(n' → logprob: -12.625753402709961
    7. ' (' → logprob: -12.625753402709961
    8. ')(' → logprob: -12.875753402709961
    9. '(
' → logprob: -14.375753402709961
    10. '```' → logprob: -14.750753402709961

Token 217: '_gu' (ID: 149045)
  Prédit: '_gu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gu' → logprob: -0.0008734668954275548
    2. ',' → logprob: -7.875873565673828
    3. '_,' → logprob: -8.375873565673828
    4. ',_' → logprob: -8.625873565673828
    5. '_ga' → logprob: -10.125873565673828
    6. ' ,' → logprob: -11.125873565673828
    7. '_' → logprob: -11.500873565673828
    8. '_g' → logprob: -12.500873565673828
    9. ' _' → logprob: -13.250873565673828
    10. '_gui' → logprob: -13.375873565673828

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005367871839553118
    2. ' ,' → logprob: -5.255367755889893
    3. '2' → logprob: -9.63036823272705
    4. ' ' → logprob: -9.88036823272705
    5. '   ' → logprob: -12.88036823272705
    6. '1' → logprob: -12.88036823272705
    7. ',
' → logprob: -13.00536823272705
    8. '  ' → logprob: -13.25536823272705
    9. '3' → logprob: -13.75536823272705
    10. ')' → logprob: -13.81786823272705

Token 219: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004088373854756355
    2. ' ' → logprob: -5.504088401794434
    3. '   ' → logprob: -12.004088401794434
    4. '  ' → logprob: -13.254088401794434
    5. ')' → logprob: -14.129088401794434
    6. '    ' → logprob: -15.129088401794434
    7. '
' → logprob: -15.254088401794434
    8. '3' → logprob: -15.504088401794434
    9. '     ' → logprob: -16.066587448120117
    10. '       ' → logprob: -16.566587448120117

Token 220: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0013479728950187564
    2. ' ' → logprob: -6.62634801864624
    3. '   ' → logprob: -11.626347541809082
    4. '3' → logprob: -12.251347541809082
    5. '  ' → logprob: -12.876347541809082
    6. '4' → logprob: -13.126347541809082
    7. ')' → logprob: -13.626347541809082
    8. '    ' → logprob: -14.626347541809082
    9. '     ' → logprob: -15.188847541809082
    10. '1' → logprob: -15.251347541809082

Token 221: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.318681188422488e-05
    2. ' )' → logprob: -12.00001335144043
    3. ')
' → logprob: -12.37501335144043
    4. '+' → logprob: -14.25001335144043
    5. ')+' → logprob: -14.25001335144043
    6. ')*' → logprob: -14.62501335144043
    7. ')

' → logprob: -15.75001335144043
    8. '))' → logprob: -15.75001335144043
    9. '),' → logprob: -16.12501335144043
    10. ')
' → logprob: -16.50001335144043

Token 222: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7971067428588867
    2. ' +' → logprob: -0.7971067428588867
    3. '
' → logprob: -2.9221067428588867
    4. '*' → logprob: -3.4221067428588867
    5. ' *' → logprob: -4.922106742858887
    6. 'res' → logprob: -7.172106742858887
    7. '<|end|>' → logprob: -7.172106742858887
    8. '+
' → logprob: -7.672106742858887
    9. ' -' → logprob: -7.797106742858887
    10. '-' → logprob: -8.047106742858887

Token 223: ' choose' (ID: 5655)
  Prédit: 'choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choose' → logprob: -0.006926249712705612
    2. 'ob' → logprob: -5.5069260597229
    3. ' choose' → logprob: -6.1319260597229
    4. 'pair' → logprob: -7.7569260597229
    5. 'sum' → logprob: -9.506926536560059
    6. 'prod' → logprob: -9.631926536560059
    7. ' ob' → logprob: -10.131926536560059
    8. ' pair' → logprob: -11.631926536560059
    9. '(' → logprob: -12.256926536560059
    10. '   ' → logprob: -12.256926536560059

Token 224: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -1.282920129597187e-05
    2. '(' → logprob: -11.625012397766113
    3. '(N' → logprob: -12.500012397766113
    4. 'M' → logprob: -16.12501335144043
    5. '(K' → logprob: -17.50001335144043
    6. ' (' → logprob: -17.87501335144043
    7. '((' → logprob: -18.00001335144043
    8. '(S' → logprob: -19.37501335144043
    9. '(
' → logprob: -19.62501335144043
    10. '(A' → logprob: -19.75001335144043

Token 225: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.4849443838757e-06
    2. 'ki' → logprob: -12.625004768371582
    3. ',' → logprob: -14.500004768371582
    4. ' _' → logprob: -16.125003814697266
    5. ')' → logprob: -16.375003814697266
    6. '```' → logprob: -16.375003814697266
    7. ',_' → logprob: -17.000003814697266
    8. '(' → logprob: -17.250003814697266
    9. '_,' → logprob: -17.375003814697266
    10. '	' → logprob: -17.625003814697266

Token 226: 'ki' (ID: 3129)
  Prédit: 'ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -5.228561349213123e-05
    2. 'gu' → logprob: -10.750052452087402
    3. 'ku' → logprob: -11.500052452087402
    4. '_' → logprob: -11.500052452087402
    5. ' ki' → logprob: -13.000052452087402
    6. '```' → logprob: -13.375052452087402
    7. 'k' → logprob: -14.125052452087402
    8. ' ' → logprob: -14.562552452087402
    9. '2' → logprob: -14.687552452087402
    10. '

' → logprob: -14.687552452087402

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.65101717156358e-05
    2. ' ,' → logprob: -9.250096321105957
    3. '2' → logprob: -15.500096321105957
    4. ' ' → logprob: -16.625097274780273
    5. '`,' → logprob: -17.000097274780273
    6. '1' → logprob: -17.625097274780273
    7. '```' → logprob: -17.875097274780273
    8. '‌,' → logprob: -18.125097274780273
    9. '',' → logprob: -18.500097274780273
    10. ',
' → logprob: -18.875097274780273

Token 228: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004625579807907343
    2. ' ' → logprob: -5.3796257972717285
    3. '   ' → logprob: -13.00462532043457
    4. ')' → logprob: -13.62962532043457
    5. '  ' → logprob: -13.75462532043457
    6. '1' → logprob: -15.06712532043457
    7. '```' → logprob: -16.37962532043457
    8. '    ' → logprob: -16.44212532043457
    9. '
' → logprob: -16.56712532043457
    10. '۲' → logprob: -16.75462532043457

Token 229: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003382038848940283
    2. ' ' → logprob: -8.000338554382324
    3. '1' → logprob: -14.187838554382324
    4. '   ' → logprob: -14.250338554382324
    5. ')' → logprob: -14.437838554382324
    6. '  ' → logprob: -15.062838554382324
    7. '۲' → logprob: -16.562837600708008
    8. '```' → logprob: -16.937837600708008
    9. '２' → logprob: -17.187837600708008
    10. '0' → logprob: -17.250337600708008

Token 230: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -14.625000953674316
    3. '))' → logprob: -16.875
    4. ' )' → logprob: -17.375
    5. ')}' → logprob: -18.125
    6. ')`' → logprob: -18.125
    7. '),' → logprob: -19.125
    8. ')#' → logprob: -19.25
    9. ')

' → logprob: -19.375
    10. '}' → logprob: -20.0

Token 231: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11316300928592682
    2. '
' → logprob: -2.2381629943847656
    3. '<|end|>' → logprob: -8.738162994384766
    4. '\n' → logprob: -9.738162994384766
    5. ' print' → logprob: -9.988162994384766
    6. '  
' → logprob: -10.613162994384766
    7. '
' → logprob: -10.863162994384766
    8. '+' → logprob: -12.238162994384766
    9. '#' → logprob: -12.238162994384766
    10. '\' → logprob: -12.613162994384766

Token 232: ' Alternatively' (ID: 46417)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.128163257315464e-07
    2. ' print' → logprob: -16.25
    3. 'for' → logprob: -16.875
    4. 'if' → logprob: -17.125
    5. '
' → logprob: -17.25
    6. '```' → logprob: -17.75
    7. '#print' → logprob: -19.25
    8. '#' → logprob: -20.75
    9. 'result' → logprob: -21.75
    10. 'try' → logprob: -22.0

Token 233: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01518572773784399
    2. '
' → logprob: -4.265185832977295
    3. 'res' → logprob: -8.390185356140137
    4. ' print' → logprob: -8.515185356140137
    5. 'if' → logprob: -8.765185356140137
    6. ':
' → logprob: -9.015185356140137
    7. ':' → logprob: -9.140185356140137
    8. 'for' → logprob: -9.390185356140137
    9. '#' → logprob: -10.265185356140137
    10. 'result' → logprob: -10.640185356140137

Token 234: ' re' (ID: 322)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01267574355006218
    2. 'res' → logprob: -4.387675762176514
    3. 'result' → logprob: -10.012675285339355
    4. '#' → logprob: -10.262675285339355
    5. 'for' → logprob: -10.262675285339355
    6. 'total' → logprob: -10.387675285339355
    7. ' print' → logprob: -11.512675285339355
    8. '
' → logprob: -12.887675285339355
    9. 'hyper' → logprob: -13.387675285339355
    10. ' res' → logprob: -13.637675285339355

Token 235: '-com' (ID: 18251)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011237505823373795
    2. 'turn' → logprob: -4.636237621307373
    3. 'place' → logprob: -7.511237621307373
    4. 'sum' → logprob: -7.636237621307373
    5. 'print' → logprob: -8.761237144470215
    6. 'write' → logprob: -8.886237144470215
    7. 'solve' → logprob: -9.886237144470215
    8. 'f' → logprob: -10.386237144470215
    9. '
' → logprob: -11.136237144470215
    10. 'res' → logprob: -11.636237144470215

Token 236: 'pute' (ID: 13605)
  Prédit: 'pute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pute' → logprob: -0.36610254645347595
    2. 'bine' → logprob: -2.866102457046509
    3. 'pile' → logprob: -2.866102457046509
    4. '```' → logprob: -2.866102457046509
    5. 's' → logprob: -3.491102457046509
    6. 'p' → logprob: -3.866102457046509
    7. 'plete' → logprob: -4.241102695465088
    8. 'pose' → logprob: -4.741102695465088
    9. 'puted' → logprob: -4.866102695465088
    10. '#' → logprob: -4.991102695465088

Token 237: ' using' (ID: 2360)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.05239017680287361
    2. ' res' → logprob: -3.3023900985717773
    3. 'print' → logprob: -5.302390098571777
    4. 'pair' → logprob: -6.052390098571777
    5. ' pair' → logprob: -6.552390098571777
    6. ' =' → logprob: -6.677390098571777
    7. '
' → logprob: -6.802390098571777
    8. 'hyper' → logprob: -7.427390098571777
    9. 'total' → logprob: -7.677390098571777
    10. ' hyper' → logprob: -7.677390098571777

Token 238: ' over' (ID: 1072)
  Prédit: 'hyper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hyper' → logprob: -0.37711530923843384
    2. 'pair' → logprob: -1.252115249633789
    3. ' hyper' → logprob: -4.502115249633789
    4. ' pair' → logprob: -4.502115249633789
    5. 'res' → logprob: -6.627115249633789
    6. 'range' → logprob: -6.752115249633789
    7. 'reduce' → logprob: -6.752115249633789
    8. 'sum' → logprob: -7.252115249633789
    9. 'choose' → logprob: -7.502115249633789
    10. 'N' → logprob: -8.127115249633789

Token 239: 'el' (ID: 296)
  Prédit: 'lapping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lapping' → logprob: -0.6575115919113159
    2. 'loaded' → logprob: -1.657511591911316
    3. 'lap' → logprob: -2.6575117111206055
    4. 'range' → logprob: -2.7825117111206055
    5. 'ob' → logprob: -3.5325117111206055
    6. 'all' → logprob: -3.9075117111206055
    7. 'pair' → logprob: -4.2825117111206055
    8. 'count' → logprob: -4.4075117111206055
    9. 'nested' → logprob: -4.6575117111206055
    10. 'load' → logprob: -5.0325117111206055

Token 240: 'abor' (ID: 4181)
  Prédit: 'abor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abor' → logprob: -0.07228151708841324
    2. 'bor' → logprob: -3.9472815990448
    3. 'aboration' → logprob: -4.197281360626221
    4. 'ab' → logprob: -4.447281360626221
    5. 'd' → logprob: -5.572281360626221
    6. 'm' → logprob: -5.822281360626221
    7. 'l' → logprob: -6.072281360626221
    8. 'ss' → logprob: -6.197281360626221
    9. 'y' → logprob: -7.259781360626221
    10. 'r' → logprob: -7.259781360626221

Token 241: 'ate' (ID: 379)
  Prédit: 'ate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.001669942052103579
    2. 'ated' → logprob: -6.626669883728027
    3. 'te' → logprob: -8.876669883728027
    4. 'ation' → logprob: -9.876669883728027
    5. 'e' → logprob: -10.376669883728027
    6. 'ed' → logprob: -10.751669883728027
    7. 'ately' → logprob: -10.876669883728027
    8. 'ating' → logprob: -10.876669883728027
    9. '-' → logprob: -11.376669883728027
    10. 'ative' → logprob: -11.626669883728027

Token 242: ' means' (ID: 4748)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.209734320640564
    2. 'range' → logprob: -1.334734320640564
    3. 'hyper' → logprob: -2.0847344398498535
    4. 'pair' → logprob: -2.7097344398498535
    5. 'sum' → logprob: -3.4597344398498535
    6. 'for' → logprob: -3.4597344398498535
    7. 'com' → logprob: -3.9597344398498535
    8. ' pair' → logprob: -4.2097344398498535
    9. 'expression' → logprob: -4.4597344398498535
    10. ' res' → logprob: -4.5847344398498535

Token 243: '
' (ID: 198)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.2113872915506363
    2. 'print' → logprob: -1.711387276649475
    3. 'result' → logprob: -5.7113871574401855
    4. 'over' → logprob: -6.4613871574401855
    5. ' =' → logprob: -6.5863871574401855
    6. '=' → logprob: -6.5863871574401855
    7. 'total' → logprob: -7.9613871574401855
    8. 'assert' → logprob: -8.086387634277344
    9. 'alt' → logprob: -8.336387634277344
    10. '#' → logprob: -8.461387634277344

Token 244: 'if' (ID: 366)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.45127299427986145
    2. 'print' → logprob: -1.076272964477539
    3. 'hyper' → logprob: -4.076272964477539
    4. 'result' → logprob: -5.576272964477539
    5. 'total' → logprob: -7.701272964477539
    6. 'pair' → logprob: -8.076272964477539
    7. 'hy' → logprob: -8.826272964477539
    8. 'sum' → logprob: -9.201272964477539
    9. 'ans' → logprob: -9.826272964477539
    10. 'for' → logprob: -10.076272964477539

Token 245: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.3190685212612152
    2. ' res' → logprob: -1.5690685510635376
    3. 'N' → logprob: -3.319068431854248
    4. 'res' → logprob: -4.819068431854248
    5. ' (' → logprob: -4.944068431854248
    6. ' True' → logprob: -5.569068431854248
    7. ' __' → logprob: -5.819068431854248
    8. ' pair' → logprob: -6.569068431854248
    9. '(N' → logprob: -6.569068431854248
    10. ' choose' → logprob: -7.319068431854248

Token 246: '_gu' (ID: 149045)
  Prédit: '_gu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gu' → logprob: -6.170270353322849e-05
    2. '_' → logprob: -9.750061988830566
    3. '_ga' → logprob: -13.625061988830566
    4. '>' → logprob: -13.875061988830566
    5. ' _' → logprob: -15.500061988830566
    6. 'gu' → logprob: -15.500061988830566
    7. '_ge' → logprob: -15.750061988830566
    8. '```' → logprob: -16.00006103515625
    9. '_guard' → logprob: -16.37506103515625
    10. '_g' → logprob: -16.37506103515625

Token 247: ' +' (ID: 659)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6244762539863586
    2. ' >=' → logprob: -1.3744761943817139
    3. '>' → logprob: -1.8744761943817139
    4. '%' → logprob: -3.749476194381714
    5. '>=' → logprob: -3.874476194381714
    6. ' %' → logprob: -4.624476432800293
    7. ' ' → logprob: -5.874476432800293
    8. ' ==' → logprob: -7.624476432800293
    9. ' <' → logprob: -8.624476432800293
    10. '==' → logprob: -8.749476432800293

Token 248: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.012573221698403358
    2. ' M' → logprob: -4.3875732421875
    3. '1' → logprob: -10.3875732421875
    4. '2' → logprob: -11.2625732421875
    5. ' ' → logprob: -12.0125732421875
    6. '0' → logprob: -12.2625732421875
    7. 'N' → logprob: -12.2625732421875
    8. '   ' → logprob: -12.7625732421875
    9. '  ' → logprob: -14.3875732421875
    10. 'res' → logprob: -15.6375732421875

Token 249: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.191489642835222e-05
    2. 'ki' → logprob: -10.500041961669922
    3. '_gu' → logprob: -12.000041961669922
    4. ' _' → logprob: -13.000041961669922
    5. '```' → logprob: -13.375041961669922
    6. '<' → logprob: -14.375041961669922
    7. '>' → logprob: -14.500041961669922
    8. 'Ki' → logprob: -14.625041961669922
    9. '==' → logprob: -15.250041961669922
    10. ' ki' → logprob: -15.750041961669922

Token 250: 'ki' (ID: 3129)
  Prédit: 'ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -0.0031942317727953196
    2. '_' → logprob: -5.753194332122803
    3. ' ki' → logprob: -12.253193855285645
    4. 'Ki' → logprob: -13.378193855285645
    5. '```' → logprob: -13.503193855285645
    6. '2' → logprob: -14.003193855285645
    7. 'ки' → logprob: -14.128193855285645
    8. ' ' → logprob: -14.378193855285645
    9. 'iki' → logprob: -14.378193855285645
    10. '1' → logprob: -14.503193855285645

Token 251: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6674035787582397
    2. ' >' → logprob: -1.1674035787582397
    3. ' >=' → logprob: -2.6674036979675293
    4. '>=' → logprob: -2.7924036979675293
    5. '%' → logprob: -4.167403697967529
    6. ' <' → logprob: -4.417403697967529
    7. ' <=' → logprob: -5.042403697967529
    8. '<=' → logprob: -5.542403697967529
    9. ' %' → logprob: -5.792403697967529
    10. '<' → logprob: -5.917403697967529

Token 252: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.34624677896499634
    2. '10' → logprob: -1.5962467193603516
    3. '5' → logprob: -3.2212467193603516
    4. '1' → logprob: -3.5962467193603516
    5. '0' → logprob: -4.596246719360352
    6. '3' → logprob: -4.596246719360352
    7. '100' → logprob: -6.846246719360352
    8. ' ' → logprob: -6.971246719360352
    9. '4' → logprob: -7.846246719360352
    10. '20' → logprob: -9.721246719360352

Token 253: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.49484333395957947
    2. '1' → logprob: -1.9948433637619019
    3. '0' → logprob: -2.1198432445526123
    4. '10' → logprob: -2.3698432445526123
    5. '5' → logprob: -3.6198432445526123
    6. '3' → logprob: -4.494843482971191
    7. '100' → logprob: -6.244843482971191
    8. '4' → logprob: -7.494843482971191
    9. '20' → logprob: -8.994843482971191
    10. ' ' → logprob: -9.619843482971191

Token 254: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38693347573280334
    2. ':
' → logprob: -1.136933445930481
    3. ' :
' → logprob: -10.136933326721191
    4. ' :' → logprob: -11.261933326721191
    5. '   ' → logprob: -12.761933326721191
    6. ':
' → logprob: -13.011933326721191
    7. ':

' → logprob: -13.136933326721191
    8. ' and' → logprob: -13.386933326721191
    9. '):
' → logprob: -13.886933326721191
    10. '():
' → logprob: -16.011934280395508

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1168421059846878
    2. ' print' → logprob: -2.366842031478882
    3. ' res' → logprob: -4.741842269897461
    4. 'print' → logprob: -4.866842269897461
    5. 'res' → logprob: -9.866842269897461
    6. '```' → logprob: -11.241842269897461
    7. '	print' → logprob: -12.366842269897461
    8. ' result' → logprob: -12.741842269897461
    9. '   ' → logprob: -13.116842269897461
    10. ' for' → logprob: -13.741842269897461

Token 256: ' temp' (ID: 5484)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.8093759417533875
    2. 'print' → logprob: -1.0593760013580322
    3. ' res' → logprob: -2.1843760013580322
    4. '   ' → logprob: -2.6843760013580322
    5. 'res' → logprob: -3.9343760013580322
    6. ' result' → logprob: -5.559375762939453
    7. 'result' → logprob: -6.059375762939453
    8. ' for' → logprob: -7.184375762939453
    9. ' total' → logprob: -7.684375762939453
    10. 'for' → logprob: -8.684375762939453

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.039376746863126755
    2. '_res' → logprob: -3.789376735687256
    3. '=' → logprob: -4.539376735687256
    4. '_result' → logprob: -6.164376735687256
    5. '_val' → logprob: -6.789376735687256
    6. '_sum' → logprob: -6.914376735687256
    7. '_total' → logprob: -7.539376735687256
    8. '_count' → logprob: -8.289377212524414
    9. 'res' → logprob: -8.914377212524414
    10. '_pair' → logprob: -9.914377212524414

Token 258: ' hyper' (ID: 22725)
  Prédit: 'hyper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hyper' → logprob: -0.05259581655263901
    2. 'pair' → logprob: -3.427595853805542
    3. ' hyper' → logprob: -5.177595615386963
    4. 'choose' → logprob: -5.177595615386963
    5. 'sum' → logprob: -5.552595615386963
    6. '0' → logprob: -6.927595615386963
    7. 'reduce' → logprob: -7.052595615386963
    8. ' pair' → logprob: -7.177595615386963
    9. 'res' → logprob: -7.927595615386963
    10. 'prod' → logprob: -8.802596092224121

Token 259: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -6.749814019713085e-06
    2. 'pair' → logprob: -12.000006675720215
    3. '_pairs' → logprob: -14.750006675720215
    4. '_PAIR' → logprob: -17.00000762939453
    5. 'Pair' → logprob: -17.75000762939453
    6. '_p' → logprob: -18.00000762939453
    7. '_' → logprob: -18.62500762939453
    8. '_trip' → logprob: -18.75000762939453
    9. '```' → logprob: -19.12500762939453
    10. '_total' → logprob: -19.25000762939453

Token 260: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.0009115827269852161
    2. 'total' → logprob: -7.000911712646484
    3. 'otal' → logprob: -16.250911712646484
    4. ' total' → logprob: -17.750911712646484
    5. 'Total' → logprob: -18.375911712646484
    6. '_TOTAL' → logprob: -19.750911712646484
    7. '	total' → logprob: -20.125911712646484
    8. '$total' → logprob: -20.250911712646484
    9. '(total' → logprob: -20.500911712646484
    10. '_count' → logprob: -20.625911712646484

Token 261: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.2723104848410003e-05
    2. 'N' → logprob: -11.000022888183594
    3. '(' → logprob: -12.125022888183594
    4. 'res' → logprob: -15.250022888183594
    5. ' (' → logprob: -15.625022888183594
    6. 's' → logprob: -17.625022888183594
    7. '((' → logprob: -17.750022888183594
    8. '(n' → logprob: -18.125022888183594
    9. '(
' → logprob: -18.250022888183594
    10. ' N' → logprob: -18.375022888183594

Token 262: '_gu' (ID: 149045)
  Prédit: '_gu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gu' → logprob: -3.054500666621607e-06
    2. 'gu' → logprob: -12.75000286102295
    3. '_' → logprob: -17.375003814697266
    4. '_g' → logprob: -17.750003814697266
    5. '_ga' → logprob: -18.375003814697266
    6. 'Gu' → logprob: -18.750003814697266
    7. '_gui' → logprob: -19.250003814697266
    8. '.gu' → logprob: -19.625003814697266
    9. '_go' → logprob: -19.875003814697266
    10. '_guard' → logprob: -20.000003814697266

Token 263: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013113131280988455
    2. ' ,' → logprob: -6.751311302185059
    3. ',M' → logprob: -9.501311302185059
    4. ',N' → logprob: -10.501311302185059
    5. '+' → logprob: -10.751311302185059
    6. ' +' → logprob: -11.626311302185059
    7. '   ' → logprob: -12.376311302185059
    8. ')' → logprob: -13.876311302185059
    9. ',
' → logprob: -14.376311302185059
    10. ' ' → logprob: -14.626311302185059

Token 264: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0037696745712310076
    2. ' M' → logprob: -5.628769874572754
    3. 'N' → logprob: -8.878769874572754
    4. '   ' → logprob: -11.003769874572754
    5. ' ' → logprob: -12.003769874572754
    6. '  ' → logprob: -13.128769874572754
    7. ')' → logprob: -13.878769874572754
    8. '    ' → logprob: -14.191269874572754
    9. ' N' → logprob: -14.253769874572754
    10. '	M' → logprob: -14.628769874572754

Token 265: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0013277375837787986
    2. 'ki' → logprob: -6.6263275146484375
    3. '_gu' → logprob: -14.876327514648438
    4. 'Ki' → logprob: -15.126327514648438
    5. ' ki' → logprob: -15.501327514648438
    6. '-' → logprob: -15.626327514648438
    7. '\' → logprob: -16.501327514648438
    8. '_k' → logprob: -16.501327514648438
    9. '0' → logprob: -17.001327514648438
    10. '```' → logprob: -17.126327514648438

Token 266: 'ki' (ID: 3129)
  Prédit: 'ki'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ki' → logprob: -3.9292415749514475e-05
    2. '_' → logprob: -10.250039100646973
    3. ' ki' → logprob: -13.625039100646973
    4. 'k' → logprob: -14.125039100646973
    5. 'Ki' → logprob: -14.250039100646973
    6. 'ки' → logprob: -16.00004005432129
    7. 'iki' → logprob: -16.00004005432129
    8. 'ku' → logprob: -16.25004005432129
    9. ' ' → logprob: -16.50004005432129
    10. 'ik' → logprob: -16.87504005432129

Token 267: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20152735710144043
    2. ')
' → logprob: -1.7015273571014404
    3. ')
' → logprob: -9.20152759552002
    4. '   ' → logprob: -12.07652759552002
    5. ')+' → logprob: -12.45152759552002
    6. ' )' → logprob: -14.07652759552002
    7. ')

' → logprob: -14.07652759552002
    8. ' )
' → logprob: -14.20152759552002
    9. ')`
' → logprob: -14.45152759552002
    10. ' ' → logprob: -15.07652759552002

Token 268: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20152969658374786
    2. 'print' → logprob: -1.7015297412872314
    3. 'else' → logprob: -9.451529502868652
    4. ' print' → logprob: -10.951529502868652
    5. '```' → logprob: -11.826529502868652
    6. ')' → logprob: -12.826529502868652
    7. '<|end|>' → logprob: -12.826529502868652
    8. '
' → logprob: -13.826529502868652
    9. 'output' → logprob: -13.951529502868652
    10. '#' → logprob: -14.076529502868652

Token 269: ' assert' (ID: 3696)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10571122914552689
    2. '   ' → logprob: -2.3557112216949463
    3. 'res' → logprob: -5.355711460113525
    4. 'else' → logprob: -7.605711460113525
    5. ' print' → logprob: -8.980710983276367
    6. 'if' → logprob: -9.480710983276367
    7. 'assert' (adapté à ' assert') → logprob: -10.230710983276367
    8. 'result' → logprob: -11.105710983276367
    9. ' res' → logprob: -12.105710983276367
    10. 'elif' → logprob: -12.605710983276367

Token 270: ' temp' (ID: 5484)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6278457045555115
    2. ' res' → logprob: -1.1278457641601562
    3. 'temp' → logprob: -2.3778457641601562
    4. ' temp' → logprob: -3.0028457641601562
    5. '(res' → logprob: -9.752845764160156
    6. '(temp' → logprob: -10.127845764160156
    7. 'abs' → logprob: -12.002845764160156
    8. ' ' → logprob: -12.002845764160156
    9. ' (' → logprob: -12.377845764160156
    10. '(' → logprob: -12.627845764160156

Token 271: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.48377373814582825
    2. '==' → logprob: -0.9837737083435059
    3. '>' → logprob: -5.358773708343506
    4. ' >' → logprob: -5.358773708343506
    5. '>=' → logprob: -9.608774185180664
    6. '!=' → logprob: -9.983774185180664
    7. ' <=' → logprob: -10.358774185180664
    8. ' !=' → logprob: -10.358774185180664
    9. '<=' → logprob: -10.608774185180664
    10. ' >=' → logprob: -10.733774185180664

Token 272: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0019293478690087795
    2. ' res' → logprob: -6.25192928314209
    3. '   ' → logprob: -15.12692928314209
    4. '
' → logprob: -15.87692928314209
    5. ' ' → logprob: -16.251930236816406
    6. 'choose' → logprob: -16.626930236816406
    7. '(res' → logprob: -17.001930236816406
    8. '	res' → logprob: -17.001930236816406
    9. '```' → logprob: -17.001930236816406
    10. 'ress' → logprob: -17.251930236816406

Token 273: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 274: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2068333774805069
    2. '<|end|>' → logprob: -1.7068333625793457
    3. ')' → logprob: -5.831833362579346
    4. '```' → logprob: -6.956833362579346
    5. '#' → logprob: -7.081833362579346
    6. 'input' → logprob: -8.706833839416504
    7. ' print' → logprob: -9.206833839416504
    8. '()' → logprob: -9.456833839416504
    9. '<|end|>' → logprob: -9.581833839416504
    10. '#print' → logprob: -9.831833839416504

Token 275: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -2.951771421066951e-05
    2. '(' → logprob: -10.750029563903809
    3. 'res' → logprob: -11.750029563903809
    4. '(f' → logprob: -16.750028610229492
    5. '((' → logprob: -18.875028610229492
    6. '(re' → logprob: -19.125028610229492
    7. ' (' → logprob: -19.375028610229492
    8. '(result' → logprob: -19.625028610229492
    9. ' res' → logprob: -19.875028610229492
    10. '(
' → logprob: -20.375028610229492

Token 276: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -15.750000953674316
    3. ')`' → logprob: -15.750000953674316
    4. '))' → logprob: -16.125
    5. ' )' → logprob: -16.625
    6. '`)' → logprob: -16.625
    7. '())' → logprob: -17.375
    8. '')' → logprob: -18.25
    9. '()' → logprob: -18.25
    10. '**' → logprob: -18.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 274
Tokens correctement prédits (1ère position, stricte): 100
Tokens correctement prédits (1ère position, avec adaptation): 102
Tokens correctement prédits (top 10): 190
Précision stricte (1ère position): 36.50%
Précision adaptée (1ère position): 37.23%
Précision (top 10): 69.34%
================================================================================
