================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur une entrée via le terminal
# La fonction input() lit une ligne de texte entrée par l'utilisateur
# .split(" ") sépare cette chaîne en une liste de chaînes, là où il y a des espaces
# Par exemple, si l'utilisateur tape "15 600", alors .split(" ") donne ["15", "600"]
user_input = input()

# Utilise une compréhension de liste pour convertir chaque chaîne de cette liste en entier
# int(i) pour chaque i dans la liste créée précédemment
# Le résultat est une liste de deux entiers, par exemple [15, 600]
int_list = [int(i) for i in user_input.split(" ")]

# Attribue le premier élément de la liste d'entiers à la variable a
# Attribue le second élément à la variable b
a = int_list[0]
b = int_list[1]

# Maintenant, on va décider de ce qu'on affiche en fonction de la valeur de a
# Si a est supérieur ou égal à 13 :
#    On affiche b (donc la valeur de la seconde entrée)
# Sinon, si a est supérieur ou égal à 6 (c'est-à-dire a vaut 6, 7, 8, 9, 10, 11 ou 12) :
#    On affiche la moitié de b, arrondie vers le bas (c'est ce que fait // en division entière)
# Sinon (donc a est strictement inférieur à 6) :
#    On affiche 0
#
# Ceci est réalisé en une seule ligne avec une structure conditionnelle compacte (opérateur ternaire)
if a >= 13:
    # Cas où a est au moins 13
    output = b
else:
    if a >= 6:
        # Cas où a est au moins 6 mais strictement inférieur à 13
        output = b // 2  # // signifie division entière
    else:
        # Cas où a est strictement inférieur à 6
        output = 0

# Affiche la valeur sélectionnée précédemment dans la console
print(output)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7934136390686035
    2. ':' → logprob: -1.5434136390686035
    3. 's' → logprob: -1.6684136390686035
    4. ' de' → logprob: -2.7934136390686035
    5. ' ' → logprob: -3.1684136390686035
    6. '=' → logprob: -4.7934136390686035
    7. ' =' → logprob: -4.7934136390686035
    8. ' :' → logprob: -4.9184136390686035
    9. '.' → logprob: -5.2934136390686035
    10. ' d' → logprob: -5.7934136390686035

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.16772253811359406
    2. ' l' → logprob: -1.9177225828170776
    3. ' ' → logprob: -5.667722702026367
    4. ' user' → logprob: -6.667722702026367
    5. 'user' → logprob: -7.167722702026367
    6. ''' → logprob: -7.917722702026367
    7. 'u' → logprob: -8.167722702026367
    8. '_' → logprob: -8.417722702026367
    9. ' ' → logprob: -8.917722702026367
    10. ' utilisateur' → logprob: -8.917722702026367

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.13838054239749908
    2. 'u' → logprob: -2.763380527496338
    3. ''' → logprob: -3.263380527496338
    4. 'util' → logprob: -4.763380527496338
    5. 'a' → logprob: -5.013380527496338
    6. '’utilisateur' → logprob: -5.138380527496338
    7. ' utilisateur' → logprob: -5.513380527496338
    8. 'e' → logprob: -7.638380527496338
    9. ''user' → logprob: -7.763380527496338
    10. '_' → logprob: -7.888380527496338

Token 6: ' une' (ID: 2463)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.17538928985595703
    2. 'name' → logprob: -2.675389289855957
    3. 'n' → logprob: -3.425389289855957
    4. 's' → logprob: -4.300389289855957
    5. ' nom' → logprob: -4.800389289855957
    6. 'user' → logprob: -4.925389289855957
    7. ' =' → logprob: -5.925389289855957
    8. 'prenom' → logprob: -6.050389289855957
    9. 'input' → logprob: -6.175389289855957
    10. 'print' → logprob: -6.300389289855957

Token 7: ' entrée' (ID: 95590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3154344856739044
    2. ' chaîne' → logprob: -2.065434455871582
    3. ' phrase' → logprob: -2.440434455871582
    4. 'entrée' → logprob: -3.815434455871582
    5. 'chaine' → logprob: -4.440434455871582
    6. 'phrase' → logprob: -5.190434455871582
    7. 's' → logprob: -5.440434455871582
    8. ' chaine' → logprob: -5.440434455871582
    9. ' entrée' → logprob: -5.940434455871582
    10. ' ligne' → logprob: -5.940434455871582

Token 8: ' via' (ID: 4493)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.2219632863998413
    2. 'input' → logprob: -1.8469632863998413
    3. 'u' → logprob: -3.721963405609131
    4. 'i' → logprob: -5.221963405609131
    5. '_' → logprob: -5.846963405609131
    6. '`' → logprob: -6.096963405609131
    7. '```' → logprob: -6.471963405609131
    8. '#' → logprob: -6.971963405609131
    9. 'v' → logprob: -7.846963405609131
    10. 'n' → logprob: -7.846963405609131

Token 9: ' le' (ID: 505)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3138889968395233
    2. ' input' → logprob: -1.3138890266418457
    3. '=input' → logprob: -8.438888549804688
    4. '`' → logprob: -9.063888549804688
    5. '```' → logprob: -9.438888549804688
    6. ' ' → logprob: -10.063888549804688
    7. '<input' → logprob: -10.188888549804688
    8. 'l' → logprob: -10.313888549804688
    9. '(input' → logprob: -10.938888549804688
    10. 'une' → logprob: -11.563888549804688

Token 10: ' terminal' (ID: 21801)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04545123875141144
    2. ' input' → logprob: -3.4204511642456055
    3. 's' → logprob: -5.9204511642456055
    4. '=input' → logprob: -5.9204511642456055
    5. 'prompt' → logprob: -6.5454511642456055
    6. ' ' → logprob: -6.6704511642456055
    7. 'n' → logprob: -7.0454511642456055
    8. '_' → logprob: -7.4204511642456055
    9. '`' → logprob: -8.545451164245605
    10. 'print' → logprob: -8.545451164245605

Token 11: '
' (ID: 198)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.61863112449646
    2. 'i' → logprob: -1.49363112449646
    3. 'user' → logprob: -2.11863112449646
    4. 'u' → logprob: -2.86863112449646
    5. '_' → logprob: -3.74363112449646
    6. 'print' → logprob: -4.868631362915039
    7. '#' → logprob: -5.368631362915039
    8. '`' → logprob: -5.493631362915039
    9. 'in' → logprob: -5.493631362915039
    10. 'e' → logprob: -5.743631362915039

Token 12: '#' (ID: 2)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.9071555137634277
    2. 'user' → logprob: -1.2821555137634277
    3. 'i' → logprob: -2.2821555137634277
    4. '_' → logprob: -2.6571555137634277
    5. 'u' → logprob: -2.6571555137634277
    6. 'entrée' → logprob: -4.032155513763428
    7. 'e' → logprob: -4.407155513763428
    8. ' ' → logprob: -4.657155513763428
    9. 'entr' → logprob: -4.907155513763428
    10. 's' → logprob: -5.032155513763428

Token 13: ' La' (ID: 3038)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.11785560846328735
    2. 'input' → logprob: -2.6178555488586426
    3. ' user' → logprob: -4.367855548858643
    4. 'entrée' → logprob: -4.867855548858643
    5. 'ent' → logprob: -5.617855548858643
    6. 'print' → logprob: -6.117855548858643
    7. 'name' → logprob: -6.242855548858643
    8. '#' → logprob: -6.367855548858643
    9. 'entr' → logprob: -6.492855548858643
    10. 'username' → logprob: -6.742855548858643

Token 14: ' fonction' (ID: 17610)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3771332502365112
    2. 'entrée' → logprob: -1.3771332502365112
    3. ' ' → logprob: -1.7521332502365112
    4. 'r' → logprob: -3.127133369445801
    5. 'user' → logprob: -3.627133369445801
    6. 'n' → logprob: -3.752133369445801
    7. 'ent' → logprob: -3.877133369445801
    8. '#' → logprob: -3.877133369445801
    9. 'print' → logprob: -4.127133369445801
    10. 'val' → logprob: -4.252133369445801

Token 15: ' input' (ID: 3422)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.734971284866333
    2. 'input' → logprob: -0.734971284866333
    3. ' input' → logprob: -3.234971284866333
    4. ' def' → logprob: -6.609971046447754
    5. 'print' → logprob: -9.609971046447754
    6. 's' → logprob: -9.609971046447754
    7. '=input' → logprob: -9.859971046447754
    8. '```' → logprob: -11.609971046447754
    9. '_input' → logprob: -11.734971046447754
    10. '`' → logprob: -11.859971046447754

Token 16: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00039468807517550886
    2. '(
' → logprob: -8.750394821166992
    3. '()' → logprob: -9.250394821166992
    4. '('' → logprob: -10.375394821166992
    5. ' (' → logprob: -10.625394821166992
    6. '#' → logprob: -10.625394821166992
    7. 's' → logprob: -11.500394821166992
    8. '_' → logprob: -11.875394821166992
    9. ' ' → logprob: -11.875394821166992
    10. '("' → logprob: -12.125394821166992

Token 17: ' lit' (ID: 11980)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013578521320596337
    2. '#' → logprob: -8.251358032226562
    3. '(
' → logprob: -8.251358032226562
    4. '()' → logprob: -8.626358032226562
    5. ' ' → logprob: -8.876358032226562
    6. ')' → logprob: -9.126358032226562
    7. ' (' → logprob: -9.376358032226562
    8. '.' → logprob: -10.001358032226562
    9. 's' → logprob: -10.001358032226562
    10. '_' → logprob: -10.001358032226562

Token 18: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.35759449005126953
    2. '()' → logprob: -1.8575944900512695
    3. 'une' → logprob: -3.1075944900512695
    4. ' l' → logprob: -3.3575944900512695
    5. ' la' → logprob: -3.4825944900512695
    6. '(' → logprob: -4.6075944900512695
    7. 'l' → logprob: -5.1075944900512695
    8. 's' → logprob: -5.2325944900512695
    9. ' ' → logprob: -5.3575944900512695
    10. '```' → logprob: -6.7325944900512695

Token 19: ' ligne' (ID: 19583)
  Prédit: ' chaîne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.4498730003833771
    2. 'cha' → logprob: -1.3248729705810547
    3. 'entrée' → logprob: -2.9498729705810547
    4. 's' → logprob: -4.324872970581055
    5. 'chaine' → logprob: -4.324872970581055
    6. ' ligne' → logprob: -5.199872970581055
    7. ' ' → logprob: -5.824872970581055
    8. ' chaine' → logprob: -6.324872970581055
    9. ' entrée' → logprob: -6.324872970581055
    10. 'string' → logprob: -6.449872970581055

Token 20: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6034994721412659
    2. ' ' → logprob: -1.728499412536621
    3. ')' → logprob: -3.228499412536621
    4. ',' → logprob: -3.353499412536621
    5. '(' → logprob: -3.478499412536621
    6. ' de' → logprob: -3.603499412536621
    7. ' )' → logprob: -3.728499412536621
    8. ' (' → logprob: -3.978499412536621
    9. '\' → logprob: -4.103499412536621
    10. '.' → logprob: -4.353499412536621

Token 21: ' texte' (ID: 53492)
  Prédit: 'texte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'texte' → logprob: -0.5223278999328613
    2. 'code' → logprob: -1.2723278999328613
    3. 'l' → logprob: -2.6473278999328613
    4. 'commande' → logprob: -3.2723278999328613
    5. ' texte' → logprob: -4.772327899932861
    6. ' l' → logprob: -6.147327899932861
    7. ' code' → logprob: -6.647327899932861
    8. '#' → logprob: -6.897327899932861
    9. 's' → logprob: -7.022327899932861
    10. 'la' → logprob: -7.397327899932861

Token 22: ' entrée' (ID: 95590)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2967764139175415
    2. ',' → logprob: -1.9217764139175415
    3. ')' → logprob: -2.296776294708252
    4. 'user' → logprob: -2.296776294708252
    5. ' ' → logprob: -2.296776294708252
    6. '#' → logprob: -2.921776294708252
    7. '.' → logprob: -2.921776294708252
    8. 'u' → logprob: -3.046776294708252
    9. ' )' → logprob: -4.296776294708252
    10. '_' → logprob: -4.421776294708252

Token 23: ' par' (ID: 686)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4533976316452026
    2. ' par' → logprob: -1.7033976316452026
    3. 'par' → logprob: -1.8283976316452026
    4. ' ' → logprob: -1.8283976316452026
    5. 's' → logprob: -2.828397750854492
    6. '.' → logprob: -3.328397750854492
    7. ',' → logprob: -3.328397750854492
    8. ' )' → logprob: -3.703397750854492
    9. ')' → logprob: -3.828397750854492
    10. ' _' → logprob: -4.453397750854492

Token 24: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2276434302330017
    2. ' l' → logprob: -1.6026434898376465
    3. '	l' → logprob: -6.3526434898376465
    4. ' ' → logprob: -8.727643013000488
    5. ' ' → logprob: -9.602643013000488
    6. 'le' → logprob: -10.352643013000488
    7. 'util' → logprob: -10.477643013000488
    8. ''utilisateur' → logprob: -10.602643013000488
    9. '   ' → logprob: -11.102643013000488
    10. ' utilisateur' → logprob: -11.602643013000488

Token 25: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.023817775771021843
    2. 'u' → logprob: -4.523817539215088
    3. ''' → logprob: -5.023817539215088
    4. ''util' → logprob: -5.898817539215088
    5. ''u' → logprob: -6.648817539215088
    6. '’utilisateur' → logprob: -6.648817539215088
    7. ''us' → logprob: -7.523817539215088
    8. 'util' → logprob: -9.398818016052246
    9. ''user' → logprob: -9.648818016052246
    10. 'a' → logprob: -11.023818016052246

Token 26: '
' (ID: 198)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.4879574775695801
    2. 'n' → logprob: -1.73795747756958
    3. '#' → logprob: -2.11295747756958
    4. 'user' → logprob: -3.48795747756958
    5. 'e' → logprob: -4.23795747756958
    6. 'a' → logprob: -5.48795747756958
    7. '_' → logprob: -5.61295747756958
    8. 'v' → logprob: -5.61295747756958
    9. 'use' → logprob: -5.61295747756958
    10. 'util' → logprob: -5.61295747756958

Token 27: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.44595232605934143
    2. 'user' → logprob: -1.945952296257019
    3. 'u' → logprob: -2.4459524154663086
    4. 'nom' → logprob: -2.9459524154663086
    5. 'util' → logprob: -3.4459524154663086
    6. '#' → logprob: -5.070952415466309
    7. 'use' → logprob: -5.445952415466309
    8. 'name' → logprob: -5.445952415466309
    9. 'a' → logprob: -5.445952415466309
    10. 'ent' → logprob: -5.695952415466309

Token 28: ' .' (ID: 887)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4131547212600708
    2. 'user' → logprob: -2.4131546020507812
    3. '#' → logprob: -2.5381546020507812
    4. 'nom' → logprob: -2.6631546020507812
    5. 'u' → logprob: -3.1631546020507812
    6. 'name' → logprob: -4.163154602050781
    7. 'ent' → logprob: -4.788154602050781
    8. 'a' → logprob: -5.163154602050781
    9. 'util' → logprob: -5.913154602050781
    10. 'nombre' → logprob: -6.163154602050781

Token 29: 'split' (ID: 13627)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8149227499961853
    2. 'n' → logprob: -1.18992280960083
    3. 'u' → logprob: -2.68992280960083
    4. ' ' → logprob: -3.06492280960083
    5. 'user' → logprob: -3.31492280960083
    6. 'ent' → logprob: -4.06492280960083
    7. 'name' → logprob: -4.81492280960083
    8. 'nom' → logprob: -4.93992280960083
    9. 'a' → logprob: -5.06492280960083
    10. 'e' → logprob: -5.06492280960083

Token 30: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07019517570734024
    2. '('' → logprob: -2.820195198059082
    3. '()' → logprob: -5.195195198059082
    4. '("("' → logprob: -6.320195198059082
    5. '('.')' → logprob: -7.320195198059082
    6. '("' → logprob: -9.695195198059082
    7. ' (' → logprob: -10.445195198059082
    8. '(
' → logprob: -11.195195198059082
    9. '().' → logprob: -11.320195198059082
    10. '.' → logprob: -11.570195198059082

Token 31: ' ")' (ID: 25221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0569924116134644
    2. ' ")' → logprob: -1.3069924116134644
    3. '")' → logprob: -1.4319924116134644
    4. ',' → logprob: -2.181992530822754
    5. ')")' → logprob: -4.806992530822754
    6. '()' → logprob: -5.431992530822754
    7. ' ' → logprob: -5.556992530822754
    8. ';' → logprob: -5.931992530822754
    9. ':' → logprob: -6.306992530822754
    10. ' )' → logprob: -6.681992530822754

Token 32: ' sé' (ID: 7462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47089335322380066
    2. '[' → logprob: -1.345893383026123
    3. '(' → logprob: -2.595893383026123
    4. '.' → logprob: -4.095893383026123
    5. '#' → logprob: -4.845893383026123
    6. '.split' → logprob: -5.095893383026123
    7. ' ' → logprob: -6.345893383026123
    8. 's' → logprob: -7.095893383026123
    9. '()' → logprob: -7.220893383026123
    10. '<|end|>' → logprob: -7.345893383026123

Token 33: 'pare' (ID: 6900)
  Prédit: 'pare'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pare' → logprob: -0.0004160145472269505
    2. 'par' → logprob: -8.750415802001953
    3. 'parer' → logprob: -9.625415802001953
    4. 'parent' → logprob: -9.750415802001953
    5. 'paration' → logprob: -10.125415802001953
    6. 'p' → logprob: -10.125415802001953
    7. 'pa' → logprob: -12.125415802001953
    8. ' pare' → logprob: -12.125415802001953
    9. 'para' → logprob: -12.250415802001953
    10. 'Pare' → logprob: -12.250415802001953

Token 34: ' cette' (ID: 7696)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.20976722240448
    2. 'le' → logprob: -1.58476722240448
    3. 'la' → logprob: -1.83476722240448
    4. ' la' → logprob: -2.0847673416137695
    5. ' ' → logprob: -2.5847673416137695
    6. '<|end|>' → logprob: -3.4597673416137695
    7. ' les' → logprob: -3.5847673416137695
    8. 'l' → logprob: -3.7097673416137695
    9. ' le' → logprob: -4.2097673416137695
    10. 'en' → logprob: -4.9597673416137695

Token 35: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.6782180666923523
    2. 'cha' → logprob: -1.303218126296997
    3. 'chaine' → logprob: -1.928218126296997
    4. 'ligne' → logprob: -3.928218126296997
    5. 'phrase' → logprob: -4.178217887878418
    6. 'entrée' → logprob: -4.803217887878418
    7. ' phrase' → logprob: -4.803217887878418
    8. ' ' → logprob: -4.803217887878418
    9. ' chaine' → logprob: -4.928217887878418
    10. ' ligne' → logprob: -5.428217887878418

Token 36: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5449488759040833
    2. 's' → logprob: -2.2949488162994385
    3. '#' → logprob: -2.5449488162994385
    4. '[' → logprob: -2.7949488162994385
    5. 'user' → logprob: -3.2949488162994385
    6. 'tokens' → logprob: -3.9199488162994385
    7. ' ' → logprob: -4.169949054718018
    8. ',' → logprob: -4.544949054718018
    9. '.' → logprob: -4.669949054718018
    10. 'def' → logprob: -5.169949054718018

Token 37: ' une' (ID: 2463)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.5377682447433472
    2. ' une' → logprob: -1.1627682447433472
    3. 'm' → logprob: -3.4127683639526367
    4. 'élé' → logprob: -4.037768363952637
    5. 'un' → logprob: -4.412768363952637
    6. 'liste' → logprob: -4.787768363952637
    7. 'des' → logprob: -5.037768363952637
    8. 'tokens' → logprob: -5.162768363952637
    9. 'plus' → logprob: -5.287768363952637
    10. ' des' → logprob: -5.787768363952637

Token 38: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.6131505370140076
    2. 'liste' → logprob: -0.8631505370140076
    3. 'list' → logprob: -3.8631505966186523
    4. 's' → logprob: -4.363150596618652
    5. ' list' → logprob: -6.613150596618652
    6. ' ' → logprob: -7.863150596618652
    7. 'Liste' → logprob: -7.988150596618652
    8. 'l' → logprob: -8.238150596618652
    9. 'lst' → logprob: -9.613150596618652
    10. 'lista' → logprob: -9.613150596618652

Token 39: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5137883424758911
    2. '#' → logprob: -1.6387883424758911
    3. 'n' → logprob: -1.6387883424758911
    4. 'u' → logprob: -2.2637882232666016
    5. 'm' → logprob: -2.8887882232666016
    6. 'user' → logprob: -3.2637882232666016
    7. ' ' → logprob: -3.3887882232666016
    8. 's' → logprob: -3.5137882232666016
    9. 'i' → logprob: -3.6387882232666016
    10. 'e' → logprob: -4.013788223266602

Token 40: ' chaînes' (ID: 179904)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.011002544313669205
    2. ' mots' → logprob: -5.386002540588379
    3. 'mot' → logprob: -5.636002540588379
    4. 'tokens' → logprob: -7.386002540588379
    5. ' chaînes' → logprob: -7.386002540588379
    6. ' ' → logprob: -7.636002540588379
    7. 'cha' → logprob: -7.761002540588379
    8. 'élé' → logprob: -8.011002540588379
    9. 's' → logprob: -9.386002540588379
    10. 'chain' → logprob: -9.511002540588379

Token 41: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.318765640258789
    2. '[' → logprob: -1.443765640258789
    3. '#' → logprob: -1.568765640258789
    4. 'user' → logprob: -2.068765640258789
    5. 'u' → logprob: -3.568765640258789
    6. 's' → logprob: -3.693765640258789
    7. 'i' → logprob: -4.193765640258789
    8. ',' → logprob: -4.693765640258789
    9. 'e' → logprob: -4.818765640258789
    10. 'entrée' → logprob: -4.818765640258789

Token 42: ' là' (ID: 8052)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6318494081497192
    2. ')' → logprob: -1.1318494081497192
    3. '[' → logprob: -2.2568492889404297
    4. ' )' → logprob: -4.13184928894043
    5. 's' → logprob: -5.00684928894043
    6. 'n' → logprob: -6.25684928894043
    7. '<|end|>' → logprob: -6.25684928894043
    8. ']' → logprob: -6.50684928894043
    9. '#' → logprob: -6.88184928894043
    10. 'a' → logprob: -7.00684928894043

Token 43: ' où' (ID: 15113)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6165342926979065
    2. ' ' → logprob: -1.3665342330932617
    3. '[' → logprob: -2.1165342330932617
    4. ' )' → logprob: -2.9915342330932617
    5. ',' → logprob: -4.366534233093262
    6. '.' → logprob: -5.866534233093262
    7. '<|end|>' → logprob: -6.116534233093262
    8. '[]' → logprob: -6.366534233093262
    9. 's' → logprob: -6.366534233093262
    10. 'au' → logprob: -6.491534233093262

Token 44: ' il' (ID: 1793)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8501323461532593
    2. '<|end|>' → logprob: -1.3501323461532593
    3. ' il' → logprob: -2.850132465362549
    4. ' "' → logprob: -2.975132465362549
    5. ' ' → logprob: -2.975132465362549
    6. 'l' → logprob: -3.975132465362549
    7. ' espaces' → logprob: -4.100132465362549
    8. ' l' → logprob: -4.100132465362549
    9. 'space' → logprob: -4.350132465362549
    10. ' se' → logprob: -4.600132465362549

Token 45: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.34996962547302246
    2. 'y' → logprob: -1.2249696254730225
    3. ' a' → logprob: -7.349969863891602
    4. 'a' → logprob: -7.849969863891602
    5. 'ya' → logprob: -8.724969863891602
    6. ''y' → logprob: -8.849969863891602
    7. 's' → logprob: -9.724969863891602
    8. '<|end|>' → logprob: -10.474969863891602
    9. '‘y' → logprob: -10.849969863891602
    10. ' ' → logprob: -10.849969863891602

Token 46: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3020583987236023
    2. 'a' → logprob: -2.052058458328247
    3. 's' → logprob: -2.552058458328247
    4. ' y' → logprob: -3.677058458328247
    5. '<|end|>' → logprob: -4.177058219909668
    6. 'y' → logprob: -5.177058219909668
    7. ''a' → logprob: -5.927058219909668
    8. ' ' → logprob: -5.927058219909668
    9. 'space' → logprob: -7.552058219909668
    10. '```' → logprob: -7.927058219909668

Token 47: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.7525696754455566
    2. ' un' → logprob: -0.8775696754455566
    3. ' ' → logprob: -3.0025696754455566
    4. 'des' → logprob: -3.8775696754455566
    5. 'un' → logprob: -4.002569675445557
    6. ' a' → logprob: -4.502569675445557
    7. 's' → logprob: -5.377569675445557
    8. ' espaces' → logprob: -6.127569675445557
    9. ' une' → logprob: -6.627569675445557
    10. 'a' → logprob: -6.877569675445557

Token 48: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.057102035731077194
    2. 'esp' → logprob: -3.3071019649505615
    3. ' ' → logprob: -5.057102203369141
    4. ' espace' → logprob: -5.432102203369141
    5. 'es' → logprob: -5.807102203369141
    6. ''esp' → logprob: -6.307102203369141
    7. 's' → logprob: -7.182102203369141
    8. ''espace' → logprob: -7.432102203369141
    9. 'spaces' → logprob: -7.682102203369141
    10. '"' → logprob: -7.682102203369141

Token 49: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9414418339729309
    2. 'user' → logprob: -1.0664417743682861
    3. '#' → logprob: -2.441441774368286
    4. 'u' → logprob: -2.816441774368286
    5. 's' → logprob: -4.441442012786865
    6. 'm' → logprob: -4.566442012786865
    7. 'a' → logprob: -4.816442012786865
    8. '[' → logprob: -4.816442012786865
    9. 'entrée' → logprob: -4.941442012786865
    10. 'i' → logprob: -5.191442012786865

Token 50: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.33363673090934753
    2. 'u' → logprob: -1.95863676071167
    3. 'user' → logprob: -3.33363676071167
    4. '#' → logprob: -3.58363676071167
    5. 'e' → logprob: -4.58363676071167
    6. 'a' → logprob: -4.58363676071167
    7. 'x' → logprob: -4.95863676071167
    8. 'use' → logprob: -4.95863676071167
    9. 't' → logprob: -5.08363676071167
    10. 'r' → logprob: -5.20863676071167

Token 51: ' Par' (ID: 3371)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7814666628837585
    2. '#' → logprob: -1.2814667224884033
    3. 'user' → logprob: -1.9064667224884033
    4. 'u' → logprob: -3.0314667224884033
    5. 'ent' → logprob: -4.281466484069824
    6. 'a' → logprob: -4.781466484069824
    7. 'nombre' → logprob: -5.156466484069824
    8. 's' → logprob: -5.656466484069824
    9. 'x' → logprob: -5.656466484069824
    10. 'nom' → logprob: -5.781466484069824

Token 52: ' exemple' (ID: 26320)
  Prédit: ' exemple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exemple' → logprob: -1.0304301977157593
    2. ' défaut' → logprob: -1.1554301977157593
    3. ' ex' → logprob: -2.530430316925049
    4. 'ex' → logprob: -2.905430316925049
    5. 'e' → logprob: -2.905430316925049
    6. ' e' → logprob: -3.655430316925049
    7. ' default' → logprob: -4.030430316925049
    8. ' example' → logprob: -4.155430316925049
    9. 'default' → logprob: -4.405430316925049
    10. ' conséquent' → logprob: -4.780430316925049

Token 53: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3990108966827393
    2. 'u' → logprob: -2.3990108966827393
    3. 's' → logprob: -2.3990108966827393
    4. 'n' → logprob: -2.5240108966827393
    5. 'user' → logprob: -2.7740108966827393
    6. '#' → logprob: -3.0240108966827393
    7. '['' → logprob: -3.1490108966827393
    8. 'l' → logprob: -3.3990108966827393
    9. 'a' → logprob: -3.6490108966827393
    10. ' ' → logprob: -3.6490108966827393

Token 54: ' si' (ID: 1784)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.9106123447418213
    2. 'user' → logprob: -2.5356123447418213
    3. ' nombres' → logprob: -2.5356123447418213
    4. 's' → logprob: -2.7856123447418213
    5. ' user' → logprob: -2.9106123447418213
    6. 'a' → logprob: -3.1606123447418213
    7. ' l' → logprob: -3.1606123447418213
    8. 'l' → logprob: -3.2856123447418213
    9. ' ["' → logprob: -3.4106123447418213
    10. ' a' → logprob: -3.9106123447418213

Token 55: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.12189332395792007
    2. 'l' → logprob: -2.6218934059143066
    3. ' user' → logprob: -3.9968934059143066
    4. ' on' → logprob: -4.621893405914307
    5. 'user' → logprob: -5.996893405914307
    6. ' ' → logprob: -5.996893405914307
    7. ' input' → logprob: -6.246893405914307
    8. ' vous' → logprob: -6.246893405914307
    9. 'tu' → logprob: -7.371893405914307
    10. ' you' → logprob: -7.621893405914307

Token 56: ''utilisateur' (ID: 140803)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6432012915611267
    2. ' utilisateur' → logprob: -2.1432013511657715
    3. ''utilisateur' → logprob: -2.3932013511657715
    4. 's' → logprob: -3.2682013511657715
    5. 'a' → logprob: -3.3932013511657715
    6. ''' → logprob: -3.5182013511657715
    7. ' ' → logprob: -3.7682013511657715
    8. ' code' → logprob: -3.7682013511657715
    9. ' user' → logprob: -4.1432013511657715
    10. ' u' → logprob: -4.6432013511657715

Token 57: ' tape' (ID: 27444)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.1275154948234558
    2. ' tape' → logprob: -2.8775155544281006
    3. 's' → logprob: -4.1275153160095215
    4. 'entre' → logprob: -4.3775153160095215
    5. ' sais' → logprob: -4.5025153160095215
    6. ' ' → logprob: -5.3775153160095215
    7. ' s' → logprob: -5.8775153160095215
    8. ' entr' → logprob: -6.1275153160095215
    9. ' a' → logprob: -6.2525153160095215
    10. ' veut' → logprob: -6.2525153160095215

Token 58: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.38558652997016907
    2. ''' → logprob: -2.2605865001678467
    3. ' "' → logprob: -2.5105865001678467
    4. '[' → logprob: -3.5105865001678467
    5. 's' → logprob: -4.260586738586426
    6. ' ' → logprob: -4.635586738586426
    7. 'l' → logprob: -4.760586738586426
    8. ':' → logprob: -4.885586738586426
    9. '`' → logprob: -4.885586738586426
    10. 'u' → logprob: -5.135586738586426

Token 59: '15' (ID: 1055)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -1.2015533447265625
    2. '1' → logprob: -1.4515533447265625
    3. '2' → logprob: -1.4515533447265625
    4. '10' → logprob: -2.4515533447265625
    5. 'Bonjour' → logprob: -3.0765533447265625
    6. '5' → logprob: -3.5765533447265625
    7. 'bonjour' → logprob: -3.7015533447265625
    8. '"' → logprob: -4.4515533447265625
    9. '12' → logprob: -4.8265533447265625
    10. 'je' → logprob: -5.2015533447265625

Token 60: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.050829511135816574
    2. ' +' → logprob: -3.4258294105529785
    3. '+' → logprob: -4.4258294105529785
    4. ',' → logprob: -6.5508294105529785
    5. ' ,' → logprob: -6.6758294105529785
    6. '20' → logprob: -7.1758294105529785
    7. ':' → logprob: -8.300829887390137
    8. '0' → logprob: -8.925829887390137
    9. '25' → logprob: -9.050829887390137
    10. ' *' → logprob: -9.175829887390137

Token 61: '600' (ID: 6718)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.20143088698387146
    2. '30' → logprob: -2.5764307975769043
    3. '25' → logprob: -3.0764307975769043
    4. '10' → logprob: -4.201430797576904
    5. '23' → logprob: -4.701430797576904
    6. '3' → logprob: -5.201430797576904
    7. '12' → logprob: -5.201430797576904
    8. '+' → logprob: -5.451430797576904
    9. '5' → logprob: -5.701430797576904
    10. '24' → logprob: -5.826430797576904

Token 62: '",' (ID: 672)
  Prédit: ' ")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ")' → logprob: -0.8357800841331482
    2. '"' → logprob: -1.460780143737793
    3. ' "' → logprob: -1.710780143737793
    4. '")' → logprob: -2.460780143737793
    5. '0' → logprob: -3.585780143737793
    6. ' ' → logprob: -3.960780143737793
    7. ' ",' → logprob: -5.335780143737793
    8. ' "),' → logprob: -5.835780143737793
    9. ')' → logprob: -6.210780143737793
    10. '00' → logprob: -6.710780143737793

Token 63: ' alors' (ID: 17971)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8713507652282715
    2. ' ["' → logprob: -2.1213507652282715
    3. '[' → logprob: -2.6213507652282715
    4. ' la' → logprob: -2.8713507652282715
    5. ' "' → logprob: -3.1213507652282715
    6. ' ['' → logprob: -3.2463507652282715
    7. ' l' → logprob: -3.8713507652282715
    8. ' tokens' → logprob: -4.1213507652282715
    9. 'n' → logprob: -4.3713507652282715
    10. ' input' → logprob: -4.3713507652282715

Token 64: ' .' (ID: 887)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -1.5350093841552734
    2. ' ['' → logprob: -2.1600093841552734
    3. ' l' → logprob: -2.2850093841552734
    4. ' input' → logprob: -2.4100093841552734
    5. ' la' → logprob: -2.5350093841552734
    6. ' ["' → logprob: -3.1600093841552734
    7. '['' → logprob: -3.2850093841552734
    8. 'numbers' → logprob: -3.2850093841552734
    9. 'input' → logprob: -3.6600093841552734
    10. '["' → logprob: -3.9100093841552734

Token 65: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.03762355446815491
    2. ' split' → logprob: -3.412623643875122
    3. 'tokens' → logprob: -7.037623405456543
    4. 'result' → logprob: -7.287623405456543
    5. 'numbers' → logprob: -7.662623405456543
    6. ' tokens' → logprob: -7.912623405456543
    7. ' numbers' → logprob: -8.537623405456543
    8. 'values' → logprob: -8.662623405456543
    9. 'spl' → logprob: -8.787623405456543
    10. ' result' → logprob: -9.037623405456543

Token 66: '("' (ID: 568)
  Prédit: '("("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("("' → logprob: -0.17720742523670197
    2. '(' → logprob: -2.0522074699401855
    3. '("' → logprob: -3.4272074699401855
    4. '('' → logprob: -6.6772074699401855
    5. '("="' → logprob: -9.927206993103027
    6. '(">' → logprob: -10.302206993103027
    7. '("")' → logprob: -10.427206993103027
    8. '("""' → logprob: -10.552206993103027
    9. '"' → logprob: -11.177206993103027
    10. '(",' → logprob: -11.427206993103027

Token 67: ' ")' (ID: 25221)
  Prédit: ' ")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ")' → logprob: -0.2386578917503357
    2. '")' → logprob: -1.7386579513549805
    3. ')' → logprob: -3.3636579513549805
    4. '"' → logprob: -7.2386579513549805
    5. ' ")"' → logprob: -7.7386579513549805
    6. ' ' → logprob: -8.11365795135498
    7. ' )' → logprob: -8.48865795135498
    8. ' "' → logprob: -8.86365795135498
    9. ')")' → logprob: -9.48865795135498
    10. ' ")
' → logprob: -10.86365795135498

Token 68: ' donne' (ID: 30004)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '['' → logprob: -0.21176373958587646
    2. '[' → logprob: -2.336763858795166
    3. ')' → logprob: -3.086763858795166
    4. ' ['' → logprob: -4.836763858795166
    5. '["' → logprob: -4.836763858795166
    6. 'produ' → logprob: -5.461763858795166
    7. 'ren' → logprob: -5.711763858795166
    8. '```' → logprob: -5.836763858795166
    9. ' ' → logprob: -5.961763858795166
    10. ' donnera' → logprob: -6.211763858795166

Token 69: ' ["' (ID: 9129)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.579413115978241
    2. '["' → logprob: -0.829413115978241
    3. '[' → logprob: -6.454412937164307
    4. ' ['' → logprob: -6.704412937164307
    5. ' ["' → logprob: -7.329412937164307
    6. '```' → logprob: -12.204413414001465
    7. '[
' → logprob: -13.204413414001465
    8. ' ' → logprob: -13.454413414001465
    9. ''' → logprob: -14.579413414001465
    10. ' [' → logprob: -14.579413414001465

Token 70: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -2.4034345187828876e-05
    2. '1' → logprob: -11.25002384185791
    3. '"' → logprob: -11.50002384185791
    4. ''' → logprob: -14.12502384185791
    5. '150' → logprob: -17.625024795532227
    6. ' ' → logprob: -17.875024795532227
    7. '```' → logprob: -18.375024795532227
    8. '۱۵' → logprob: -18.875024795532227
    9. '１５' → logprob: -19.062524795532227
    10. '`' → logprob: -19.187524795532227

Token 71: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.1725105345249176
    2. ' ",' → logprob: -2.9225106239318848
    3. '","' → logprob: -3.0475106239318848
    4. '"' → logprob: -3.9225106239318848
    5. ' ","' → logprob: -4.047510623931885
    6. ',' → logprob: -4.922510623931885
    7. ' ' → logprob: -5.172510623931885
    8. '600' → logprob: -5.172510623931885
    9. '60' → logprob: -8.047510147094727
    10. '6' → logprob: -8.297510147094727

Token 72: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005001532379537821
    2. ' "' → logprob: -5.505001544952393
    3. '600' → logprob: -7.130001544952393
    4. ' ' → logprob: -10.505001068115234
    5. '"user' → logprob: -10.630001068115234
    6. ' ' → logprob: -11.255001068115234
    7. '""' → logprob: -11.380001068115234
    8. '",' → logprob: -11.755001068115234
    9. '","' → logprob: -11.880001068115234
    10. ''' → logprob: -11.880001068115234

Token 73: '600' (ID: 6718)
  Prédit: '600'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '600' → logprob: -8.423219696851447e-05
    2. '60' → logprob: -10.125083923339844
    3. '6' → logprob: -10.250083923339844
    4. '"' → logprob: -12.750083923339844
    5. '300' → logprob: -13.250083923339844
    6. '1' → logprob: -14.750083923339844
    7. '")' → logprob: -14.750083923339844
    8. ' ' → logprob: -14.750083923339844
    9. '15' → logprob: -14.875083923339844
    10. '200' → logprob: -15.500083923339844

Token 74: '"]
' (ID: 14510)
  Prédit: '"]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"]' → logprob: -0.11317078769207001
    2. ']' → logprob: -2.238170862197876
    3. '']' → logprob: -8.488170623779297
    4. '"' → logprob: -9.113170623779297
    5. '`]' → logprob: -12.238170623779297
    6. ']"' → logprob: -12.363170623779297
    7. ' ]' → logprob: -12.738170623779297
    8. '```' → logprob: -12.988170623779297
    9. ' "]' → logprob: -13.238170623779297
    10. '"],' → logprob: -13.363170623779297

Token 75: 'user' (ID: 1428)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25564098358154297
    2. 'x' → logprob: -2.130640983581543
    3. '#' → logprob: -3.130640983581543
    4. 'a' → logprob: -4.005640983581543
    5. 'u' → logprob: -4.630640983581543
    6. 'nombre' → logprob: -5.005640983581543
    7. 'm' → logprob: -5.380640983581543
    8. 'user' → logprob: -5.880640983581543
    9. 't' → logprob: -6.130640983581543
    10. 'v' → logprob: -6.130640983581543

Token 76: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.380908340215683
    2. '_' → logprob: -1.5059083700180054
    3. ' =' → logprob: -3.255908250808716
    4. 's' → logprob: -3.630908250808716
    5. '_s' → logprob: -4.880908489227295
    6. '_name' → logprob: -5.255908489227295
    7. '_value' → logprob: -6.255908489227295
    8. ' _' → logprob: -6.255908489227295
    9. '_val' → logprob: -6.380908489227295
    10. '_ent' → logprob: -6.380908489227295

Token 77: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06231025978922844
    2. '.' → logprob: -3.187310218811035
    3. '=' → logprob: -4.062310218811035
    4. ' ' → logprob: -6.562310218811035
    5. ' .' → logprob: -8.562310218811035
    6. '[' → logprob: -8.937310218811035
    7. 's' → logprob: -10.062310218811035
    8. ')' → logprob: -10.437310218811035
    9. ',' → logprob: -10.687310218811035
    10. '.split' → logprob: -10.812310218811035

Token 78: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.03804194927215576
    2. ' input' → logprob: -3.2880420684814453
    3. '(input' → logprob: -16.038042068481445
    4. '=input' → logprob: -16.288042068481445
    5. '<input' → logprob: -16.413042068481445
    6. '	input' → logprob: -17.288042068481445
    7. ' ' → logprob: -18.038042068481445
    8. 'int' → logprob: -18.788042068481445
    9. 'Input' → logprob: -19.038042068481445
    10. 'user' → logprob: -19.038042068481445

Token 79: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003977715969085693
    2. '()' → logprob: -5.8789777755737305
    3. '("("' → logprob: -7.2539777755737305
    4. '("' → logprob: -8.00397777557373
    5. '('' → logprob: -9.87897777557373
    6. '("")' → logprob: -10.00397777557373
    7. ' (' → logprob: -11.62897777557373
    8. '("""' → logprob: -11.87897777557373
    9. '(">' → logprob: -12.25397777557373
    10. '(
' → logprob: -12.62897777557373

Token 80: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09007162600755692
    2. '.split' → logprob: -2.465071678161621
    3. '.strip' → logprob: -7.215071678161621
    4. ' .' → logprob: -8.090071678161621
    5. '.s' → logprob: -9.965071678161621
    6. ' ' → logprob: -11.965071678161621
    7. '.rstrip' → logprob: -11.965071678161621
    8. ').' → logprob: -12.090071678161621
    9. '.readline' → logprob: -12.840071678161621
    10. 'split' → logprob: -13.090071678161621

Token 81: ' Util' (ID: 13564)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.7170310020446777
    2. 'values' → logprob: -0.9670310020446777
    3. ' numbers' → logprob: -3.5920310020446777
    4. 'user' → logprob: -3.7170310020446777
    5. 'parts' → logprob: -3.9670310020446777
    6. 'split' → logprob: -4.592031002044678
    7. 'tokens' → logprob: -4.592031002044678
    8. ' values' → logprob: -4.967031002044678
    9. 'nums' → logprob: -5.592031002044678
    10. ' parts' → logprob: -5.592031002044678

Token 82: 'ise' (ID: 1096)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.36553847789764404
    2. 'isateur' → logprob: -1.490538477897644
    3. 'iser' → logprob: -4.115538597106934
    4. '.s' → logprob: -4.115538597106934
    5. 'isez' → logprob: -4.240538597106934
    6. 's' → logprob: -4.490538597106934
    7. 'er' → logprob: -5.240538597106934
    8. ' =' → logprob: -5.615538597106934
    9. '=' → logprob: -5.990538597106934
    10. 'isé' → logprob: -6.365538597106934

Token 83: ' une' (ID: 2463)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0076334853656589985
    2. ' .' → logprob: -5.882633686065674
    3. '.split' → logprob: -6.007633686065674
    4. '(' → logprob: -7.007633686065674
    5. '.s' → logprob: -7.382633686065674
    6. '().' → logprob: -8.632633209228516
    7. '.user' → logprob: -8.632633209228516
    8. 'user' → logprob: -8.757633209228516
    9. ' ' → logprob: -9.257633209228516
    10. '.strip' → logprob: -10.132633209228516

Token 84: ' compréhension' (ID: 142333)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011659173294901848
    2. 's' → logprob: -5.761659145355225
    3. '.split' → logprob: -6.136659145355225
    4. ' .' → logprob: -6.261659145355225
    5. ' ' → logprob: -6.886659145355225
    6. '.s' → logprob: -6.886659145355225
    7. '_' → logprob: -7.011659145355225
    8. 'space' → logprob: -7.386659145355225
    9. 'es' → logprob: -8.261659622192383
    10. '.strip' → logprob: -9.261659622192383

Token 85: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08509274572134018
    2. ' [' → logprob: -2.835092782974243
    3. '[user' → logprob: -4.460092544555664
    4. 'user' → logprob: -5.335092544555664
    5. '_' → logprob: -5.710092544555664
    6. 's' → logprob: -6.960092544555664
    7. ' user' → logprob: -7.460092544555664
    8. ' ' → logprob: -7.585092544555664
    9. '[
' → logprob: -8.085092544555664
    10. ' [
' → logprob: -9.210092544555664

Token 86: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8961742520332336
    2. 'liste' → logprob: -1.5211741924285889
    3. '[user' → logprob: -2.271174192428589
    4. ' liste' → logprob: -2.271174192428589
    5. 'list' → logprob: -2.896174192428589
    6. 's' → logprob: -2.896174192428589
    7. ' la' → logprob: -4.521174430847168
    8. '[str' → logprob: -5.271174430847168
    9. ' [' → logprob: -5.271174430847168
    10. '[int' → logprob: -5.271174430847168

Token 87: ' pour' (ID: 1930)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3072795271873474
    2. 'user' → logprob: -1.5572795867919922
    3. '[user' → logprob: -3.932279586791992
    4. ' [' → logprob: -4.307279586791992
    5. ' =' → logprob: -5.432279586791992
    6. 'result' → logprob: -5.557279586791992
    7. ' user' → logprob: -5.682279586791992
    8. '[int' → logprob: -6.307279586791992
    9. 'numbers' → logprob: -6.557279586791992
    10. 's' → logprob: -7.057279586791992

Token 88: ' convertir' (ID: 79223)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9461258053779602
    2. '[int' → logprob: -1.4461257457733154
    3. '[user' → logprob: -1.5711257457733154
    4. ' [' → logprob: -2.0711257457733154
    5. 'user' → logprob: -3.9461257457733154
    6. '[i' → logprob: -5.4461259841918945
    7. ' user' → logprob: -5.5711259841918945
    8. 'int' → logprob: -5.9461259841918945
    9. '[item' → logprob: -6.3211259841918945
    10. '[s' → logprob: -6.4461259841918945

Token 89: ' chaque' (ID: 21194)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7914533615112305
    2. ' [' → logprob: -1.0414533615112305
    3. '[user' → logprob: -1.7914533615112305
    4. '[int' → logprob: -3.7914533615112305
    5. 'user' → logprob: -6.0414533615112305
    6. ' user' → logprob: -7.6664533615112305
    7. '[str' → logprob: -8.04145336151123
    8. ' [
' → logprob: -8.16645336151123
    9. '[i' → logprob: -8.66645336151123
    10. ' ' → logprob: -8.79145336151123

Token 90: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0198283195495605
    2. ' int' → logprob: -1.1448283195495605
    3. 'int' → logprob: -2.2698283195495605
    4. ' mot' → logprob: -2.6448283195495605
    5. ' i' → logprob: -2.8948283195495605
    6. ' item' → logprob: -4.1448283195495605
    7. ' x' → logprob: -4.1448283195495605
    8. ' element' → logprob: -4.5198283195495605
    9. ' élément' → logprob: -5.1448283195495605
    10. ' token' → logprob: -5.5198283195495605

Token 91: ' de' (ID: 334)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.1890213042497635
    2. '[' → logprob: -2.689021348953247
    3. '[int' → logprob: -2.939021348953247
    4. ' into' → logprob: -4.689021110534668
    5. ' in' → logprob: -4.814021110534668
    6. '[:]' → logprob: -5.189021110534668
    7. ' [' → logprob: -5.314021110534668
    8. 'en' → logprob: -5.564021110534668
    9. '[str' → logprob: -5.814021110534668
    10. ' ' → logprob: -5.939021110534668

Token 92: ' cette' (ID: 7696)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.11386901140213013
    2. ' user' → logprob: -2.6138689517974854
    3. 'str' → logprob: -4.1138691902160645
    4. 'chaine' → logprob: -5.4888691902160645
    5. 'int' → logprob: -5.7388691902160645
    6. 's' → logprob: -5.7388691902160645
    7. 'l' → logprob: -5.9888691902160645
    8. 'élé' → logprob: -6.7388691902160645
    9. '```' → logprob: -7.4888691902160645
    10. 'ent' → logprob: -7.9888691902160645

Token 93: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.5765249729156494
    2. ' user' → logprob: -1.4515249729156494
    3. ' chaîne' → logprob: -2.5765249729156494
    4. ' ' → logprob: -2.8265249729156494
    5. ' input' → logprob: -4.20152473449707
    6. ' part' → logprob: -4.70152473449707
    7. 'user' → logprob: -4.95152473449707
    8. ' ligne' → logprob: -5.07652473449707
    9. ' chaine' → logprob: -5.20152473449707
    10. 'liste' → logprob: -5.45152473449707

Token 94: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.07553128898143768
    2. 'en' → logprob: -3.950531244277954
    3. ' ' → logprob: -4.700531482696533
    4. ' into' → logprob: -4.825531482696533
    5. ' in' → logprob: -4.950531482696533
    6. '[' → logprob: -5.075531482696533
    7. '[int' → logprob: -5.325531482696533
    8. 'int' → logprob: -5.450531482696533
    9. ',' → logprob: -6.575531482696533
    10. 'e' → logprob: -6.700531482696533

Token 95: ' entier' (ID: 80473)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6453200578689575
    2. ' int' → logprob: -1.0203200578689575
    3. ' un' → logprob: -2.395319938659668
    4. ' des' → logprob: -4.270319938659668
    5. ' entier' → logprob: -5.895319938659668
    6. 'ent' → logprob: -6.270319938659668
    7. ' une' → logprob: -6.395319938659668
    8. 'un' → logprob: -7.020319938659668
    9. '```' → logprob: -7.895319938659668
    10. ' ' → logprob: -7.895319938659668

Token 96: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.261488676071167
    2. '[user' → logprob: -2.011488676071167
    3. 'user' → logprob: -3.511488676071167
    4. '[int' → logprob: -3.511488676071167
    5. 's' → logprob: -3.636488676071167
    6. ' [' → logprob: -5.511488914489746
    7. '[
' → logprob: -6.886488914489746
    8. '=' → logprob: -7.261488914489746
    9. '[:]' → logprob: -7.386488914489746
    10. '[i' → logprob: -7.636488914489746

Token 97: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3704156279563904
    2. 'numbers' → logprob: -1.7454156875610352
    3. 's' → logprob: -2.745415687561035
    4. 'user' → logprob: -3.870415687561035
    5. '[user' → logprob: -4.370415687561035
    6. 'result' → logprob: -5.120415687561035
    7. 'n' → logprob: -5.120415687561035
    8. ' numbers' → logprob: -5.370415687561035
    9. 'values' → logprob: -5.620415687561035
    10. ' [' → logprob: -6.120415687561035

Token 98: ' int' (ID: 677)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.03625478595495224
    2. ' numbers' → logprob: -4.1612548828125
    3. 'user' → logprob: -4.7862548828125
    4. 'ent' → logprob: -5.6612548828125
    5. 'values' → logprob: -6.2862548828125
    6. 'result' → logprob: -6.2862548828125
    7. 'nums' → logprob: -6.5362548828125
    8. 'n' → logprob: -7.2862548828125
    9. 'converted' → logprob: -8.0362548828125
    10. 'inte' → logprob: -8.2862548828125

Token 99: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.638279378414154
    2. 's' → logprob: -0.763279378414154
    3. '(s' → logprob: -5.513279438018799
    4. '(user' → logprob: -7.388279438018799
    5. '(
' → logprob: -7.513279438018799
    6. 'user' → logprob: -8.76327896118164
    7. '[' → logprob: -9.38827896118164
    8. '_list' → logprob: -9.51327896118164
    9. '(x' → logprob: -10.76327896118164
    10. ')' → logprob: -11.01327896118164

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00048775310278870165
    2. ' )' → logprob: -8.125487327575684
    3. 'for' → logprob: -8.875487327575684
    4. ' for' → logprob: -10.875487327575684
    5. 's' → logprob: -11.500487327575684
    6. '(' → logprob: -12.000487327575684
    7. ')`' → logprob: -12.500487327575684
    8. '))' → logprob: -12.625487327575684
    9. ')i' → logprob: -12.625487327575684
    10. ')s' → logprob: -14.125487327575684

Token 101: ' pour' (ID: 1930)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.185381680727005
    2. '[' → logprob: -2.5603816509246826
    3. 'for' → logprob: -3.3103816509246826
    4. ']' → logprob: -3.9353816509246826
    5. ' ' → logprob: -4.185381889343262
    6. ' for' → logprob: -4.560381889343262
    7. ')' → logprob: -5.810381889343262
    8. ',' → logprob: -6.685381889343262
    9. ' ]' → logprob: -6.810381889343262
    10. 'user' → logprob: -6.935381889343262

Token 102: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03843824565410614
    2. 'i' → logprob: -3.288438320159912
    3. ' ' → logprob: -8.913437843322754
    4. ' convertir' → logprob: -9.038437843322754
    5. ' chaque' → logprob: -9.163437843322754
    6. 'int' → logprob: -11.538437843322754
    7. ' ' → logprob: -11.913437843322754
    8. '  ' → logprob: -12.913437843322754
    9. 'convert' → logprob: -13.038437843322754
    10. ' convert' → logprob: -13.038437843322754

Token 103: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.031104151159524918
    2. 'i' → logprob: -3.53110408782959
    3. ' ' → logprob: -6.65610408782959
    4. '  ' → logprob: -10.65610408782959
    5. ' élément' → logprob: -11.15610408782959
    6. ' ' → logprob: -12.15610408782959
    7. ' element' → logprob: -12.40610408782959
    8. 'élé' → logprob: -12.78110408782959
    9. ' ' → logprob: -13.03110408782959
    10. '	i' → logprob: -13.15610408782959

Token 104: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16363629698753357
    2. 'in' → logprob: -1.913636326789856
    3. ' ' → logprob: -7.038636207580566
    4. 'for' → logprob: -7.163636207580566
    5. ' for' → logprob: -7.413636207580566
    6. ' dans' → logprob: -8.163636207580566
    7. ' i' → logprob: -8.788636207580566
    8. ')' → logprob: -8.913636207580566
    9. '  ' → logprob: -9.038636207580566
    10. 'user' → logprob: -9.538636207580566

Token 105: ' la' (ID: 557)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.10056883841753006
    2. ' user' → logprob: -2.3505687713623047
    3. '[user' → logprob: -8.600568771362305
    4. 'input' → logprob: -9.350568771362305
    5. ' input' → logprob: -11.100568771362305
    6. '(user' → logprob: -11.350568771362305
    7. '"user' → logprob: -11.350568771362305
    8. 'use' → logprob: -11.725568771362305
    9. ' ' → logprob: -11.850568771362305
    10. ' ' → logprob: -12.225568771362305

Token 106: ' liste' (ID: 31719)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.17999766767024994
    2. ' user' → logprob: -1.8049976825714111
    3. '[user' → logprob: -9.054997444152832
    4. '_user' → logprob: -10.054997444152832
    5. 'input' → logprob: -10.679997444152832
    6. ' input' → logprob: -11.679997444152832
    7. ' ' → logprob: -12.054997444152832
    8. '_input' → logprob: -12.054997444152832
    9. '
' → logprob: -12.304997444152832
    10. 'split' → logprob: -12.617497444152832

Token 107: ' créée' (ID: 153156)
  Prédit: '[user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[user' → logprob: -0.5022634863853455
    2. '[' → logprob: -1.3772635459899902
    3. 'user' → logprob: -2.1272635459899902
    4. '[int' → logprob: -4.12726354598999
    5. ' [' → logprob: -5.62726354598999
    6. '[i' → logprob: -6.62726354598999
    7. ' user' → logprob: -7.75226354598999
    8. ' =' → logprob: -7.87726354598999
    9. 's' → logprob: -8.002263069152832
    10. '[
' → logprob: -8.502263069152832

Token 108: ' précéd' (ID: 55435)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.39118120074272156
    2. '[user' → logprob: -1.266181230545044
    3. ' user' → logprob: -4.266180992126465
    4. ' =' → logprob: -4.516180992126465
    5. '[' → logprob: -5.016180992126465
    6. '=' → logprob: -5.266180992126465
    7. '=user' → logprob: -6.016180992126465
    8. '(user' → logprob: -7.391180992126465
    9. '[i' → logprob: -7.391180992126465
    10. '[int' → logprob: -7.766180992126465

Token 109: 'emment' (ID: 58019)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.6474523544311523
    2. 'user' → logprob: -1.0224523544311523
    3. 'ente' → logprob: -2.6474523544311523
    4. 'ite' → logprob: -4.772452354431152
    5. 'emment' → logprob: -4.772452354431152
    6. 'ence' → logprob: -5.272452354431152
    7. 'entes' → logprob: -5.647452354431152
    8. '_user' → logprob: -5.647452354431152
    9. 'ant' → logprob: -5.772452354431152
    10. 'e' → logprob: -6.022452354431152

Token 110: '
' (ID: 198)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.555406391620636
    2. 'user' → logprob: -1.4304063320159912
    3. 'result' → logprob: -2.680406332015991
    4. ' =' → logprob: -2.805406332015991
    5. '=' → logprob: -3.555406332015991
    6. 'ent' → logprob: -5.30540657043457
    7. 'converted' → logprob: -5.43040657043457
    8. ' numbers' → logprob: -5.80540657043457
    9. 'values' → logprob: -5.80540657043457
    10. 's' → logprob: -6.05540657043457

Token 111: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.032026320695877075
    2. 'user' → logprob: -4.032026290893555
    3. 'result' → logprob: -5.032026290893555
    4. 'values' → logprob: -6.407026290893555
    5. 'converted' → logprob: -6.657026290893555
    6. 'ent' → logprob: -6.782026290893555
    7. 'nums' → logprob: -6.907026290893555
    8. ' numbers' → logprob: -7.532026290893555
    9. 'inte' → logprob: -7.907026290893555
    10. 'n' → logprob: -8.532026290893555

Token 112: ' Le' (ID: 2018)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.04289938136935234
    2. 'user' → logprob: -4.2928996086120605
    3. ' numbers' → logprob: -4.4178996086120605
    4. 'values' → logprob: -4.9178996086120605
    5. 'nums' → logprob: -6.1678996086120605
    6. 'result' → logprob: -6.2928996086120605
    7. 'ent' → logprob: -6.4178996086120605
    8. 'converted' → logprob: -7.1678996086120605
    9. 'inte' → logprob: -8.292899131774902
    10. 'parsed' → logprob: -8.417899131774902

Token 113: ' résultat' (ID: 62556)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9781846404075623
    2. ' numbers' → logprob: -1.353184700012207
    3. 'result' → logprob: -1.978184700012207
    4. ' result' → logprob: -2.603184700012207
    5. ' user' → logprob: -2.728184700012207
    6. 'numbers' → logprob: -3.478184700012207
    7. 'user' → logprob: -4.228184700012207
    8. ' résultat' → logprob: -4.978184700012207
    9. ' nombres' → logprob: -4.978184700012207
    10. 'n' → logprob: -5.478184700012207

Token 114: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2568601369857788
    2. '=' → logprob: -1.5068601369857788
    3. 's' → logprob: -5.631860256195068
    4. 'user' → logprob: -7.006860256195068
    5. ' user' → logprob: -9.63185977935791
    6. ' is' → logprob: -9.75685977935791
    7. 'final' → logprob: -9.75685977935791
    8. ':' → logprob: -9.88185977935791
    9. '=user' → logprob: -10.00685977935791
    10. ' =[' → logprob: -11.13185977935791

Token 115: ' une' (ID: 2463)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.555237889289856
    2. ' une' → logprob: -1.305237889289856
    3. '[' → logprob: -2.9302377700805664
    4. ' la' → logprob: -3.0552377700805664
    5. ' user' → logprob: -4.055237770080566
    6. '[user' → logprob: -4.680237770080566
    7. ' a' → logprob: -5.055237770080566
    8. ' ' → logprob: -5.680237770080566
    9. 'user' → logprob: -5.805237770080566
    10. ' un' → logprob: -6.055237770080566

Token 116: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.5368129014968872
    2. '[' → logprob: -1.5368129014968872
    3. 'list' → logprob: -2.2868127822875977
    4. ' liste' → logprob: -2.7868127822875977
    5. ' [' → logprob: -4.286812782287598
    6. ' list' → logprob: -4.536812782287598
    7. 's' → logprob: -5.786812782287598
    8. '[]' → logprob: -6.411812782287598
    9. 'nou' → logprob: -6.661812782287598
    10. '[n' → logprob: -6.786812782287598

Token 117: ' de' (ID: 334)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.3208885192871094
    2. '[' → logprob: -1.8208885192871094
    3. ' des' → logprob: -1.8208885192871094
    4. 'user' → logprob: -2.5708885192871094
    5. 'des' → logprob: -2.5708885192871094
    6. '[user' → logprob: -3.3208885192871094
    7. '[num' → logprob: -3.4458885192871094
    8. '[n' → logprob: -3.5708885192871094
    9. 'result' → logprob: -3.8208885192871094
    10. '[int' → logprob: -3.9458885192871094

Token 118: ' deux' (ID: 10301)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.7025178074836731
    2. ' ent' → logprob: -1.2025177478790283
    3. 'ent' → logprob: -1.7025177478790283
    4. 'int' → logprob: -4.577517986297607
    5. ' int' → logprob: -4.952517986297607
    6. ' integers' → logprob: -5.827517986297607
    7. 'inte' → logprob: -7.702517986297607
    8. '[int' → logprob: -8.32751750946045
    9. 'ints' → logprob: -8.45251750946045
    10. '[' → logprob: -8.70251750946045

Token 119: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7352335453033447
    2. ' nombres' → logprob: -1.3602335453033447
    3. ' éléments' → logprob: -2.1102335453033447
    4. ' ent' → logprob: -2.2352335453033447
    5. 'élé' → logprob: -3.8602335453033447
    6. ' valeurs' → logprob: -5.360233306884766
    7. ' integers' → logprob: -5.485233306884766
    8. ' entier' → logprob: -6.985233306884766
    9. 'int' → logprob: -7.110233306884766
    10. 'inte' → logprob: -7.110233306884766

Token 120: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.001784894848242402
    2. 'i' → logprob: -6.376784801483154
    3. 'ières' → logprob: -9.501785278320312
    4. ' i' → logprob: -13.251785278320312
    5. 'ers' → logprob: -13.501785278320312
    6. '```' → logprob: -13.626785278320312
    7. 'ié' → logprob: -14.501785278320312
    8. '#' → logprob: -14.626785278320312
    9. 'ier' → logprob: -14.876785278320312
    10. 'ités' → logprob: -15.126785278320312

Token 121: ',' (ID: 11)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.14331959187984467
    2. 'user' → logprob: -2.268319606781006
    3. 'values' → logprob: -4.643319606781006
    4. ' numbers' → logprob: -5.018319606781006
    5. 'n' → logprob: -5.643319606781006
    6. 'nums' → logprob: -6.393319606781006
    7. 'ent' → logprob: -6.518319606781006
    8. 's' → logprob: -6.518319606781006
    9. 'result' → logprob: -7.143319606781006
    10. ' =' → logprob: -7.268319606781006

Token 122: ' par' (ID: 686)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' user' → logprob: -1.0299936532974243
    2. ' numbers' → logprob: -1.4049936532974243
    3. 'numbers' → logprob: -1.6549936532974243
    4. ' nombres' → logprob: -2.6549935340881348
    5. 'user' → logprob: -3.0299935340881348
    6. 'nums' → logprob: -3.6549935340881348
    7. '[' → logprob: -4.154993534088135
    8. ' nums' → logprob: -4.279993534088135
    9. ' [' → logprob: -5.154993534088135
    10. 'n' → logprob: -6.154993534088135

Token 123: ' exemple' (ID: 26320)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'user' → logprob: -1.0258219242095947
    2. '[user' → logprob: -1.2758219242095947
    3. '[' → logprob: -2.2758219242095947
    4. ' exemple' → logprob: -3.1508219242095947
    5. ' user' → logprob: -3.4008219242095947
    6. 'ex' → logprob: -3.5258219242095947
    7. '[]' → logprob: -4.400821685791016
    8. 'ce' → logprob: -4.525821685791016
    9. 'spaces' → logprob: -4.525821685791016
    10. 'liste' → logprob: -4.775821685791016

Token 124: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.1019664779305458
    2. '[' → logprob: -2.476966381072998
    3. '[user' → logprob: -4.601966381072998
    4. ' user' → logprob: -6.851966381072998
    5. '[num' → logprob: -7.601966381072998
    6. '[int' → logprob: -7.976966381072998
    7. 'user' → logprob: -8.351966857910156
    8. '[number' → logprob: -8.851966857910156
    9. ' numbers' → logprob: -9.351966857910156
    10. '[n' → logprob: -9.601966857910156

Token 125: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.00034058792516589165
    2. ' ' → logprob: -8.000340461730957
    3. '1' → logprob: -12.500340461730957
    4. 'int' → logprob: -14.500340461730957
    5. ']' → logprob: -15.000340461730957
    6. '150' → logprob: -15.000340461730957
    7. '
' → logprob: -16.625341415405273
    8. '5' → logprob: -17.187841415405273
    9. ')' → logprob: -17.500341415405273
    10. '```' → logprob: -17.687841415405273

Token 126: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026765360962599516
    2. ' ,' → logprob: -8.62526798248291
    3. '600' → logprob: -9.62526798248291
    4. ',
' → logprob: -11.00026798248291
    5. '60' → logprob: -13.50026798248291
    6. ',user' → logprob: -13.87526798248291
    7. ' ' → logprob: -14.37526798248291
    8. '```' → logprob: -14.62526798248291
    9. ',

' → logprob: -15.37526798248291
    10. '6' → logprob: -15.37526798248291

Token 127: ' ' (ID: 220)
  Prédit: '600'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '600' → logprob: -0.0097806416451931
    2. ' ' → logprob: -4.634780406951904
    3. '60' → logprob: -10.884780883789062
    4. '6' → logprob: -12.134780883789062
    5. ' ' → logprob: -15.634780883789062
    6. '  ' → logprob: -16.259780883789062
    7. '610' → logprob: -16.509780883789062
    8. '601' → logprob: -17.447280883789062
    9. '640' → logprob: -17.447280883789062
    10. '603' → logprob: -17.447280883789062

Token 128: '600' (ID: 6718)
  Prédit: '600'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '600' → logprob: -0.00012415809032972902
    2. ' ' → logprob: -9.000123977661133
    3. '60' → logprob: -14.375123977661133
    4. '6' → logprob: -15.875123977661133
    5. '```' → logprob: -18.125123977661133
    6. '300' → logprob: -18.500123977661133
    7. '560' → logprob: -18.625123977661133
    8. '  ' → logprob: -18.812623977661133
    9. '610' → logprob: -19.062623977661133
    10. '500' → logprob: -19.062623977661133

Token 129: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.183501293184236e-05
    2. ' ]' → logprob: -9.62507152557373
    3. ']
' → logprob: -12.87507152557373
    4. ',' → logprob: -13.62507152557373
    5. ')' → logprob: -14.62507152557373
    6. ']

' → logprob: -14.87507152557373
    7. '])' → logprob: -15.12507152557373
    8. '']' → logprob: -15.87507152557373
    9. '].' → logprob: -15.87507152557373
    10. ']
' → logprob: -16.125072479248047

Token 130: 'int' (ID: 491)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.03787827491760254
    2. 'values' → logprob: -3.7878782749176025
    3. 'user' → logprob: -5.037878036499023
    4. 'nums' → logprob: -5.412878036499023
    5. ' numbers' → logprob: -7.287878036499023
    6. 'ent' → logprob: -7.412878036499023
    7. 'num' → logprob: -7.912878036499023
    8. 'number' → logprob: -7.912878036499023
    9. 'int' → logprob: -8.412878036499023
    10. 'n' → logprob: -8.787878036499023

Token 131: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.014899100176990032
    2. '_list' → logprob: -4.889899253845215
    3. '_values' → logprob: -5.764899253845215
    4. '_s' → logprob: -6.514899253845215
    5. 'ed' → logprob: -7.014899253845215
    6. '_vals' → logprob: -7.514899253845215
    7. 'user' → logprob: -8.014899253845215
    8. '_numbers' → logprob: -8.639899253845215
    9. '_input' → logprob: -8.764899253845215
    10. '_user' → logprob: -9.139899253845215

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20162859559059143
    2. '=' → logprob: -1.701628565788269
    3. '[' → logprob: -9.076628684997559
    4. ' =[' → logprob: -10.076628684997559
    5. 's' → logprob: -10.451628684997559
    6. ',' → logprob: -11.701628684997559
    7. '=[' → logprob: -12.076628684997559
    8. '[:]' → logprob: -12.326628684997559
    9. ' ' → logprob: -12.951628684997559
    10. ' =
' → logprob: -13.326628684997559

Token 133: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.19056819379329681
    2. '[user' → logprob: -2.440568208694458
    3. '[int' → logprob: -3.190568208694458
    4. '[input' → logprob: -3.190568208694458
    5. '[i' → logprob: -6.065567970275879
    6. '[' → logprob: -7.065567970275879
    7. '[list' → logprob: -7.065567970275879
    8. '[item' → logprob: -10.690567970275879
    9. '[str' → logprob: -11.190567970275879
    10. 'list' → logprob: -11.690567970275879

Token 134: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.8624639324116288e-06
    2. ' int' → logprob: -13.250001907348633
    3. '   ' → logprob: -19.750001907348633
    4. '(int' → logprob: -20.625001907348633
    5. '	int' → logprob: -21.625001907348633
    6. '```' → logprob: -21.625001907348633
    7. '  ' → logprob: -21.750001907348633
    8. '[int' → logprob: -21.750001907348633
    9. '<int' → logprob: -22.375001907348633
    10. ' ' → logprob: -22.875001907348633

Token 135: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0031905474606901407
    2. '(' → logprob: -5.753190517425537
    3. '(x' → logprob: -11.503190994262695
    4. ' (' → logprob: -12.878190994262695
    5. '(s' → logprob: -16.003190994262695
    6. '(
' → logprob: -16.753190994262695
    7. '(ii' → logprob: -17.753190994262695
    8. '(item' → logprob: -18.128190994262695
    9. '(j' → logprob: -18.378190994262695
    10. '(k' → logprob: -19.003190994262695

Token 136: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001475220051361248
    2. ' )' → logprob: -8.875147819519043
    3. 'for' → logprob: -12.750147819519043
    4. ')]' → logprob: -13.250147819519043
    5. ' for' → logprob: -14.000147819519043
    6. '.split' → logprob: -14.375147819519043
    7. ']' → logprob: -15.000147819519043
    8. 'in' → logprob: -15.000147819519043
    9. ' ' → logprob: -15.500147819519043
    10. '.strip' → logprob: -15.500147819519043

Token 137: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4741211235523224
    2. 'for' → logprob: -0.97412109375
    3. ' in' → logprob: -10.59912109375
    4. 'in' → logprob: -11.59912109375
    5. ')' → logprob: -11.84912109375
    6. ' ' → logprob: -13.84912109375
    7. ']' → logprob: -13.97412109375
    8. ' user' → logprob: -14.72412109375
    9. 'user' → logprob: -14.97412109375
    10. '	for' → logprob: -16.97412109375

Token 138: ' i' (ID: 575)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.009791270829737186
    2. 'user' → logprob: -4.634791374206543
    3. ' ' → logprob: -10.384791374206543
    4. ' input' → logprob: -14.009791374206543
    5. ' use' → logprob: -14.259791374206543
    6. '	user' → logprob: -14.509791374206543
    7. ' u' → logprob: -14.634791374206543
    8. ' ' → logprob: -15.134791374206543
    9. '  ' → logprob: -15.134791374206543
    10. ' 
' → logprob: -15.259791374206543

Token 139: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15568071603775024
    2. 'in' → logprob: -2.1556806564331055
    3. ' user' → logprob: -3.7806806564331055
    4. 'user' → logprob: -5.2806806564331055
    5. ' ' → logprob: -8.030680656433105
    6. ' i' → logprob: -9.280680656433105
    7. '.' → logprob: -12.030680656433105
    8. '  ' → logprob: -12.280680656433105
    9. ' input' → logprob: -13.030680656433105
    10. '   ' → logprob: -13.155680656433105

Token 140: ' user' (ID: 1825)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.020544106140732765
    2. ' user' → logprob: -3.8955440521240234
    3. '(user' → logprob: -13.770544052124023
    4. ' ' → logprob: -14.895544052124023
    5. 'input' → logprob: -15.145544052124023
    6. '"user' → logprob: -15.770544052124023
    7. '[user' → logprob: -16.270544052124023
    8. 'User' → logprob: -16.270544052124023
    9. '
' → logprob: -16.895544052124023
    10. '   ' → logprob: -17.270544052124023

Token 141: '_input' (ID: 12507)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.5515390634536743
    2. '_input' → logprob: -1.0515390634536743
    3. '_' → logprob: -3.3015389442443848
    4. 't' → logprob: -4.551538944244385
    5. 's' → logprob: -5.301538944244385
    6. 'puts' → logprob: -5.426538944244385
    7. 'user' → logprob: -5.676538944244385
    8. '_user' → logprob: -5.676538944244385
    9. '_list' → logprob: -5.926538944244385
    10. '_put' → logprob: -6.551538944244385

Token 142: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.030197156593203545
    2. '.' → logprob: -3.5301971435546875
    3. '.strip' → logprob: -7.7801971435546875
    4. ' .' → logprob: -10.655197143554688
    5. ']' → logprob: -13.155197143554688
    6. ')' → logprob: -14.030197143554688
    7. '.s' → logprob: -14.405197143554688
    8. '.replace' → logprob: -15.030197143554688
    9. '.Split' → logprob: -15.280197143554688
    10. '.rstrip' → logprob: -15.280197143554688

Token 143: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00042149791261181235
    2. '("("' → logprob: -8.125421524047852
    3. '(' → logprob: -9.000421524047852
    4. '('' → logprob: -13.625421524047852
    5. '"' → logprob: -14.625421524047852
    6. '("")' → logprob: -15.625421524047852
    7. ' ("' → logprob: -16.50042152404785
    8. '(",' → logprob: -16.62542152404785
    9. '("="' → logprob: -17.50042152404785
    10. '("_' → logprob: -17.62542152404785

Token 144: ' ")' (ID: 25221)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.4848940670490265
    2. '")]' → logprob: -1.109894037246704
    3. ' ")' → logprob: -2.984894037246704
    4. '"' → logprob: -6.484894275665283
    5. '")' → logprob: -6.484894275665283
    6. ')]' → logprob: -7.984894275665283
    7. ')' → logprob: -8.359893798828125
    8. ' "]' → logprob: -8.484893798828125
    9. ' "))' → logprob: -8.859893798828125
    10. ' ' → logprob: -10.234893798828125

Token 145: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.2200749754119897e-06
    2. ' ]' → logprob: -13.625001907348633
    3. ')]' → logprob: -14.000001907348633
    4. ')' → logprob: -16.375001907348633
    5. ']
' → logprob: -17.250001907348633
    6. '])' → logprob: -18.250001907348633
    7. '()]' → logprob: -18.750001907348633
    8. ']

' → logprob: -19.625001907348633
    9. '']' → logprob: -19.625001907348633
    10. ']]' → logprob: -20.000001907348633

Token 146: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8584330677986145
    2. 'x' → logprob: -1.2334330081939697
    3. 'n' → logprob: -2.1084330081939697
    4. '#' → logprob: -2.4834330081939697
    5. 'print' → logprob: -3.2334330081939697
    6. 'num' → logprob: -4.233433246612549
    7. 'first' → logprob: -4.733433246612549
    8. 'if' → logprob: -5.608433246612549
    9. 'number' → logprob: -6.483433246612549
    10. 'hours' → logprob: -6.858433246612549

Token 147: ' At' (ID: 3604)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1198786497116089
    2. 'a' → logprob: -1.3698786497116089
    3. 'if' → logprob: -2.3698787689208984
    4. 'total' → logprob: -2.4948787689208984
    5. 'result' → logprob: -2.6198787689208984
    6. '#' → logprob: -2.8698787689208984
    7. 'n' → logprob: -3.3698787689208984
    8. 'sum' → logprob: -3.4948787689208984
    9. 's' → logprob: -4.369878768920898
    10. 'x' → logprob: -4.744878768920898

Token 148: 'trib' (ID: 1420)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6603813171386719
    2. 't' → logprob: -1.2853813171386719
    3. '#' → logprob: -2.910381317138672
    4. 'tention' → logprob: -3.785381317138672
    5. 'temps' → logprob: -4.035381317138672
    6. 'te' → logprob: -4.410381317138672
    7. 'ta' → logprob: -4.785381317138672
    8. 's' → logprob: -4.910381317138672
    9. 'tr' → logprob: -5.035381317138672
    10. 'ten' → logprob: -5.285381317138672

Token 149: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.041762541979551315
    2. 'u' → logprob: -3.916762590408325
    3. 'uer' → logprob: -3.916762590408325
    4. 'uez' → logprob: -7.791762351989746
    5. 'ué' → logprob: -7.916762351989746
    6. '=' → logprob: -9.541762351989746
    7. 'uet' → logprob: -10.166762351989746
    8. 'ut' → logprob: -10.291762351989746
    9. 'ute' → logprob: -10.916762351989746
    10. 'uent' → logprob: -11.041762351989746

Token 150: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4725909233093262
    2. 'first' → logprob: -1.4725909233093262
    3. 'x' → logprob: -1.7225909233093262
    4. 'length' → logprob: -2.097590923309326
    5. 'value' → logprob: -2.847590923309326
    6. 'val' → logprob: -3.222590923309326
    7. 'prem' → logprob: -3.222590923309326
    8. 'num' → logprob: -4.222590923309326
    9. 'distance' → logprob: -4.347590923309326
    10. ' first' → logprob: -4.722590923309326

Token 151: ' premier' (ID: 15506)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.34512078762054443
    2. ' premier' → logprob: -1.5951207876205444
    3. 'nombre' → logprob: -3.345120906829834
    4. 's' → logprob: -4.220120906829834
    5. ' nombre' → logprob: -4.720120906829834
    6. 'first' → logprob: -4.970120906829834
    7. ' first' → logprob: -4.970120906829834
    8. 'result' → logprob: -6.345120906829834
    9. 'x' → logprob: -6.470120906829834
    10. 'a' → logprob: -6.470120906829834

Token 152: ' élément' (ID: 99627)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4218587279319763
    2. 'élé' → logprob: -2.171858787536621
    3. 's' → logprob: -2.796858787536621
    4. ',' → logprob: -3.421858787536621
    5. 'val' → logprob: -3.921858787536621
    6. ' ' → logprob: -4.046858787536621
    7. '_val' → logprob: -4.421858787536621
    8. '_nombre' → logprob: -4.421858787536621
    9. ' élément' → logprob: -4.421858787536621
    10. 'nombre' → logprob: -4.421858787536621

Token 153: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.486446499824524
    2. '_' → logprob: -1.611446499824524
    3. '=' → logprob: -1.861446499824524
    4. ' =' → logprob: -1.861446499824524
    5. 's' → logprob: -1.986446499824524
    6. 'de' → logprob: -3.4864463806152344
    7. '[' → logprob: -3.8614463806152344
    8. 'a' → logprob: -4.236446380615234
    9. 'x' → logprob: -4.236446380615234
    10. '1' → logprob: -5.736446380615234

Token 154: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6995448470115662
    2. ' int' → logprob: -0.6995448470115662
    3. ' la' → logprob: -5.074544906616211
    4. 'la' → logprob: -9.074544906616211
    5. ' ' → logprob: -13.324544906616211
    6. 's' → logprob: -13.699544906616211
    7. ' ' → logprob: -13.699544906616211
    8. 'l' → logprob: -13.949544906616211
    9. 'list' → logprob: -14.449544906616211
    10. ' the' → logprob: -14.699544906616211

Token 155: ' liste' (ID: 31719)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.15323033928871155
    2. 'liste' → logprob: -2.2782304286956787
    3. ' liste' → logprob: -4.0282301902771
    4. 'list' → logprob: -4.5282301902771
    5. ' int' → logprob: -4.5282301902771
    6. ' list' → logprob: -9.028230667114258
    7. 'Liste' → logprob: -10.403230667114258
    8. 'lista' → logprob: -10.903230667114258
    9. 'lis' → logprob: -12.528230667114258
    10. 'lst' → logprob: -12.778230667114258

Token 156: ' d' (ID: 272)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.43568524718284607
    2. 'a' → logprob: -1.4356852769851685
    3. ' a' → logprob: -2.810685157775879
    4. ' to' → logprob: -3.685685157775879
    5. 'to' → logprob: -5.060685157775879
    6. 'à' → logprob: -5.185685157775879
    7. 'x' → logprob: -5.310685157775879
    8. ' first' → logprob: -6.310685157775879
    9. 'first' → logprob: -6.435685157775879
    10. ' x' → logprob: -6.810685157775879

Token 157: ''ent' (ID: 53422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.22761274874210358
    2. 'int' → logprob: -1.7276127338409424
    3. ''int' → logprob: -4.9776129722595215
    4. 'e' → logprob: -5.1026129722595215
    5. 'es' → logprob: -5.1026129722595215
    6. ''ent' → logprob: -5.3526129722595215
    7. 'ent' → logprob: -7.6026129722595215
    8. '`' → logprob: -7.7276129722595215
    9. '=int' → logprob: -7.8526129722595215
    10. ' ent' → logprob: -8.352612495422363

Token 158: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0006974232383072376
    2. 'ières' → logprob: -7.750697612762451
    3. 't' → logprob: -8.625697135925293
    4. 'ités' → logprob: -10.375697135925293
    5. 'ier' → logprob: -11.000697135925293
    6. 'er' → logprob: -11.625697135925293
    7. 'rée' → logprob: -11.625697135925293
    8. 'ers' → logprob: -11.750697135925293
    9. 'ière' → logprob: -13.375697135925293
    10. 'r' → logprob: -13.375697135925293

Token 159: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.13809046149253845
    2. ' to' → logprob: -2.5130903720855713
    3. 'a' → logprob: -3.8880903720855713
    4. ' a' → logprob: -4.51309061050415
    5. 'to' → logprob: -5.13809061050415
    6. 'à' → logprob: -5.38809061050415
    7. 'x' → logprob: -6.63809061050415
    8. ' au' → logprob: -7.38809061050415
    9. 'first' → logprob: -7.38809061050415
    10. ' first' → logprob: -7.63809061050415

Token 160: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1920092105865479
    2. 'x' → logprob: -2.067009210586548
    3. 'days' → logprob: -2.442009210586548
    4. 'hours' → logprob: -2.442009210586548
    5. 'n' → logprob: -2.817009210586548
    6. 'num' → logprob: -3.067009210586548
    7. 'minutes' → logprob: -3.317009210586548
    8. 'nombre' → logprob: -3.317009210586548
    9. 'jours' → logprob: -3.442009210586548
    10. 'distance' → logprob: -3.442009210586548

Token 161: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'variable' → logprob: -1.6549605131149292
    2. 'x' → logprob: -1.9049605131149292
    3. 'distance' → logprob: -2.2799606323242188
    4. 'first' → logprob: -2.4049606323242188
    5. 'a' → logprob: -2.4049606323242188
    6. 'nombre' → logprob: -2.5299606323242188
    7. 'prem' → logprob: -3.0299606323242188
    8. 'n' → logprob: -3.2799606323242188
    9. 'var' → logprob: -4.154960632324219
    10. 'val' → logprob: -4.279960632324219

Token 162: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.189273476600647
    2. 'x' → logprob: -1.439273476600647
    3. ' x' → logprob: -2.1892733573913574
    4. ' a' → logprob: -2.5642733573913574
    5. 'nombre' → logprob: -3.6892733573913574
    6. ' nombre' → logprob: -3.8142733573913574
    7. 'first' → logprob: -3.8142733573913574
    8. 'prem' → logprob: -3.8142733573913574
    9. ' first' → logprob: -3.9392733573913574
    10. ' day' → logprob: -4.439273357391357

Token 163: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.13780559599399567
    2. ' =' → logprob: -2.387805700302124
    3. ',' → logprob: -3.887805700302124
    4. ' a' → logprob: -4.387805461883545
    5. '=' → logprob: -6.262805461883545
    6. ' ,' → logprob: -7.387805461883545
    7. ' ' → logprob: -8.137805938720703
    8. '[' → logprob: -8.262805938720703
    9. ',a' → logprob: -8.262805938720703
    10. '=a' → logprob: -8.262805938720703

Token 164: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.6087021473795176e-05
    2. ' a' → logprob: -10.000045776367188
    3. ' =' → logprob: -14.500045776367188
    4. ',' → logprob: -16.375045776367188
    5. '=' → logprob: -17.375045776367188
    6. ' 
' → logprob: -17.500045776367188
    7. '_a' → logprob: -17.875045776367188
    8. ',a' → logprob: -19.125045776367188
    9. ' ' → logprob: -19.375045776367188
    10. '```' → logprob: -19.625045776367188

Token 165: ' At' (ID: 3604)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00861456897109747
    2. ' a' → logprob: -4.758614540100098
    3. ' 
' → logprob: -17.508615493774414
    4. '_a' → logprob: -17.633615493774414
    5. '
' → logprob: -17.758615493774414
    6. '	a' → logprob: -18.633615493774414
    7. ' ' → logprob: -19.008615493774414
    8. ' ' → logprob: -19.258615493774414
    9. ',' → logprob: -19.258615493774414
    10. ''a' → logprob: -19.633615493774414

Token 166: 'trib' (ID: 1420)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.513599157333374
    2. ' a' → logprob: -1.013599157333374
    3. 'trib' → logprob: -4.138599395751953
    4. 'b' → logprob: -4.138599395751953
    5. '_' → logprob: -6.263599395751953
    6. ' =' → logprob: -6.638599395751953
    7. '_a' → logprob: -6.888599395751953
    8. 'r' → logprob: -7.513599395751953
    9. ',' → logprob: -7.638599395751953
    10. 't' → logprob: -7.888599395751953

Token 167: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.0035244061145931482
    2. 'e' → logprob: -6.378524303436279
    3. 'b' → logprob: -6.628524303436279
    4. 'u' → logprob: -7.753524303436279
    5. '#' → logprob: -11.378524780273438
    6. 'ues' → logprob: -11.753524780273438
    7. '=' → logprob: -11.878524780273438
    8. 'ut' → logprob: -12.253524780273438
    9. 'de' → logprob: -12.503524780273438
    10. 'ute' → logprob: -12.628524780273438

Token 168: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0831677913665771
    2. ' =' → logprob: -1.2081677913665771
    3. ' b' → logprob: -2.083167791366577
    4. ' a' → logprob: -2.458167791366577
    5. 'b' → logprob: -2.958167791366577
    6. ' le' → logprob: -3.583167791366577
    7. ' la' → logprob: -3.958167791366577
    8. ' the' → logprob: -4.333168029785156
    9. '<|end|>' → logprob: -4.583168029785156
    10. '_' → logprob: -4.708168029785156

Token 169: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.4522149860858917
    2. ' second' → logprob: -1.2022149562835693
    3. 'de' → logprob: -2.9522149562835693
    4. ' deuxième' → logprob: -4.577215194702148
    5. 'a' → logprob: -9.077215194702148
    6. 'b' → logprob: -9.202215194702148
    7. '_second' → logprob: -9.202215194702148
    8. 'se' → logprob: -9.702215194702148
    9. '=' → logprob: -9.827215194702148
    10. 's' → logprob: -9.952215194702148

Token 170: ' élément' (ID: 99627)
  Prédit: ' élément'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' élément' → logprob: -0.98590087890625
    2. '_' → logprob: -1.86090087890625
    3. 'élé' → logprob: -1.86090087890625
    4. 'a' → logprob: -2.11090087890625
    5. 'element' → logprob: -2.61090087890625
    6. ' a' → logprob: -2.98590087890625
    7. '_element' → logprob: -3.36090087890625
    8. ' element' → logprob: -4.36090087890625
    9. ' ' → logprob: -5.11090087890625
    10. ',' → logprob: -5.48590087890625

Token 171: ' à' (ID: 1221)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.05965491384267807
    2. ' à' → logprob: -3.059654951095581
    3. 'de' → logprob: -5.559654712677002
    4. ' a' → logprob: -6.059654712677002
    5. ' of' → logprob: -6.184654712677002
    6. 'a' → logprob: -6.184654712677002
    7. ' ' → logprob: -8.55965518951416
    8. 'à' → logprob: -8.80965518951416
    9. ' =' → logprob: -9.05965518951416
    10. '_' → logprob: -9.93465518951416

Token 172: ' la' (ID: 557)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.3694346845149994
    2. 'b' → logprob: -1.8694347143173218
    3. ' la' → logprob: -2.1194345951080322
    4. 'a' → logprob: -3.6194345951080322
    5. 'la' → logprob: -5.369434833526611
    6. ' a' → logprob: -5.869434833526611
    7. ' ' → logprob: -8.869434356689453
    8. ' l' → logprob: -10.119434356689453
    9. 'l' → logprob: -10.369434356689453
    10. ' ' → logprob: -10.619434356689453

Token 173: ' variable' (ID: 11076)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.017761215567588806
    2. 'a' → logprob: -4.76776123046875
    3. ' b' → logprob: -5.26776123046875
    4. 'variable' → logprob: -5.64276123046875
    5. ' variable' → logprob: -7.89276123046875
    6. ' a' → logprob: -11.39276123046875
    7. 'v' → logprob: -11.64276123046875
    8. '_' → logprob: -12.39276123046875
    9. 'var' → logprob: -12.51776123046875
    10. ' ' → logprob: -13.14276123046875

Token 174: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31334641575813293
    2. ' b' → logprob: -1.3133463859558105
    3. ' ' → logprob: -9.563346862792969
    4. ' ' → logprob: -11.938346862792969
    5. 'a' → logprob: -13.438346862792969
    6. '_b' → logprob: -13.563346862792969
    7. '_' → logprob: -13.563346862792969
    8. '  ' → logprob: -14.313346862792969
    9. 's' → logprob: -14.438346862792969
    10. '`' → logprob: -14.563346862792969

Token 175: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.85104202805087e-05
    2. '
' → logprob: -9.750078201293945
    3. ' a' → logprob: -11.000078201293945
    4. '[a' → logprob: -13.375078201293945
    5. ',' → logprob: -14.125078201293945
    6. ',a' → logprob: -15.125078201293945
    7. '(a' → logprob: -15.250078201293945
    8. ',
' → logprob: -15.375078201293945
    9. ' =' → logprob: -15.500078201293945
    10. '[' → logprob: -16.375078201293945

Token 176: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -5.319370302458992e-06
    2. ' a' → logprob: -12.500005722045898
    3. '[a' → logprob: -14.250005722045898
    4. '
' → logprob: -14.625005722045898
    5. '```' → logprob: -15.375005722045898
    6. '[' → logprob: -16.0000057220459
    7. '(a' → logprob: -18.0000057220459
    8. '[
' → logprob: -18.8750057220459
    9. ' 
' → logprob: -18.8750057220459
    10. '`' → logprob: -19.3750057220459

Token 177: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013405199570115656
    2. ',b' → logprob: -9.125134468078613
    3. ' ,' → logprob: -10.875134468078613
    4. ',a' → logprob: -12.250134468078613
    5. ' =' → logprob: -14.250134468078613
    6. 'a' → logprob: -14.750134468078613
    7. '=' → logprob: -15.500134468078613
    8. ' b' → logprob: -17.000133514404297
    9. ',
' → logprob: -17.250133514404297
    10. 'b' → logprob: -17.625133514404297

Token 178: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10020667314529419
    2. ' int' → logprob: -2.3502066135406494
    3. '[int' → logprob: -17.10020637512207
    4. 'a' → logprob: -18.60020637512207
    5. '=int' → logprob: -18.97520637512207
    6. '<int' → logprob: -19.22520637512207
    7. '(int' → logprob: -19.22520637512207
    8. ' ' → logprob: -19.47520637512207
    9. 'b' → logprob: -20.10020637512207
    10. '_int' → logprob: -20.35020637512207

Token 179: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.5
    3. 'List' → logprob: -18.875
    4. '[' → logprob: -18.875
    5. 'list' → logprob: -19.125
    6. '_l' → logprob: -19.625
    7. '_lst' → logprob: -20.25
    8. '_li' → logprob: -20.75
    9. '_lists' → logprob: -20.875
    10. '_LIST' → logprob: -21.125

Token 180: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011021859245374799
    2. '0' → logprob: -9.125110626220703
    3. ' [' → logprob: -14.375110626220703
    4. '[
' → logprob: -15.250110626220703
    5. '[a' → logprob: -15.500110626220703
    6. ' ' → logprob: -15.875110626220703
    7. 'a' → logprob: -17.750110626220703
    8. '\[' → logprob: -17.750110626220703
    9. '```' → logprob: -17.875110626220703
    10. '1' → logprob: -17.875110626220703

Token 181: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '1' → logprob: -17.0
    4. '۰' → logprob: -19.25
    5. '０' → logprob: -20.75
    6. ')' → logprob: -21.0625
    7. '٠' → logprob: -21.875
    8. ']' → logprob: -22.125
    9. '00' → logprob: -22.3125
    10. '   ' → logprob: -22.3125

Token 182: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.0391463193809614e-05
    2. ' ]' → logprob: -9.750060081481934
    3. ']
' → logprob: -13.125060081481934
    4. ']

' → logprob: -16.87506103515625
    5. ']
' → logprob: -19.37506103515625
    6. '],' → logprob: -19.87506103515625
    7. ')' → logprob: -20.12506103515625
    8. '']' → logprob: -20.62506103515625
    9. 'a' → logprob: -20.75006103515625
    10. '[' → logprob: -21.12506103515625

Token 183: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0023450881708413363
    2. '
' → logprob: -6.502345085144043
    3. ' b' → logprob: -7.627345085144043
    4. ' 
' → logprob: -8.127345085144043
    5. '  
' → logprob: -9.877345085144043
    6. '
' → logprob: -13.002345085144043
    7. ',
' → logprob: -13.127345085144043
    8. '\
' → logprob: -14.002345085144043
    9. '' → logprob: -14.252345085144043
    10. '    
' → logprob: -14.377345085144043

Token 184: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36980172991752625
    2. '=' → logprob: -1.2448017597198486
    3. '_' → logprob: -3.8698017597198486
    4. ')' → logprob: -9.61980152130127
    5. '[' → logprob: -9.86980152130127
    6. ' ' → logprob: -10.24480152130127
    7. ' _' → logprob: -10.36980152130127
    8. '<|end|>' → logprob: -10.49480152130127
    9. ']' → logprob: -11.11980152130127
    10. '_=' → logprob: -11.24480152130127

Token 185: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3868912160396576
    2. 'int' → logprob: -1.13689124584198
    3. 'a' → logprob: -12.01189136505127
    4. 'b' → logprob: -12.13689136505127
    5. ' a' → logprob: -12.76189136505127
    6. ' ' → logprob: -13.63689136505127
    7. ' ' → logprob: -13.76189136505127
    8. '[int' → logprob: -13.76189136505127
    9. ' b' → logprob: -14.13689136505127
    10. '<int' → logprob: -14.26189136505127

Token 186: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.1472419600977446e-06
    2. 'list' → logprob: -13.750000953674316
    3. 'List' → logprob: -17.250001907348633
    4. '[' → logprob: -19.125001907348633
    5. '_' → logprob: -19.625001907348633
    6. '_LIST' → logprob: -20.875001907348633
    7. '_l' → logprob: -20.875001907348633
    8. '[_' → logprob: -21.500001907348633
    9. '_lst' → logprob: -21.625001907348633
    10. '-list' → logprob: -21.750001907348633

Token 187: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. ' [' → logprob: -14.875000953674316
    3. '1' → logprob: -16.875
    4. '[
' → logprob: -17.625
    5. '2' → logprob: -18.0
    6. '[-' → logprob: -18.25
    7. '```' → logprob: -18.375
    8. 's' → logprob: -19.125
    9. 'List' → logprob: -19.625
    10. '_list' → logprob: -20.25

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. ']' → logprob: -17.5
    4. '0' → logprob: -19.125
    5. '])' → logprob: -21.125
    6. '2' → logprob: -22.0
    7. '```' → logprob: -22.25
    8. ')' → logprob: -22.375
    9. '１' → logprob: -22.375
    10. '   ' → logprob: -22.5

Token 189: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.6405310816480778e-05
    2. ')' → logprob: -11.500016212463379
    3. ']
' → logprob: -12.500016212463379
    4. ' ]' → logprob: -13.125016212463379
    5. ']

' → logprob: -15.750016212463379
    6. '']' → logprob: -16.000017166137695
    7. ')]' → logprob: -16.250017166137695
    8. '])' → logprob: -16.625017166137695
    9. '}' → logprob: -17.250017166137695
    10. '"]' → logprob: -17.750017166137695

Token 190: '#' (ID: 2)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8954296708106995
    2. '#' → logprob: -1.5204296112060547
    3. 'print' → logprob: -1.8954296112060547
    4. 'result' → logprob: -1.8954296112060547
    5. '
' → logprob: -3.7704296112060547
    6. 'if' → logprob: -3.7704296112060547
    7. 's' → logprob: -4.645429611206055
    8. 'r' → logprob: -5.645429611206055
    9. 'p' → logprob: -6.270429611206055
    10. 'n' → logprob: -6.270429611206055

Token 191: ' Maintenant' (ID: 163349)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6188099980354309
    2. 'print' → logprob: -1.6188099384307861
    3. 'c' → logprob: -2.118809938430786
    4. '#' → logprob: -2.743809938430786
    5. 'if' → logprob: -3.368809938430786
    6. 's' → logprob: -3.743809938430786
    7. 'sum' → logprob: -4.868810176849365
    8. 'r' → logprob: -5.493810176849365
    9. 'p' → logprob: -5.993810176849365
    10. 'res' → logprob: -6.868810176849365

Token 192: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9747852683067322
    2. '#' → logprob: -1.724785327911377
    3. ' c' → logprob: -2.224785327911377
    4. 'c' → logprob: -2.474785327911377
    5. 'result' → logprob: -2.599785327911377
    6. '
' → logprob: -3.224785327911377
    7. ' print' → logprob: -3.974785327911377
    8. ' 
' → logprob: -4.224785327911377
    9. ' ' → logprob: -4.224785327911377
    10. ' if' → logprob: -4.474785327911377

Token 193: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.042465437203645706
    2. 'result' → logprob: -3.6674654483795166
    3. 'c' → logprob: -4.9174652099609375
    4. ' print' → logprob: -5.1674652099609375
    5. '#' → logprob: -6.5424652099609375
    6. 'sum' → logprob: -7.9174652099609375
    7. ' result' → logprob: -8.042465209960938
    8. ' c' → logprob: -8.292465209960938
    9. 'if' → logprob: -8.292465209960938
    10. 's' → logprob: -9.042465209960938

Token 194: ' va' (ID: 3423)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8093808889389038
    2. ' print' → logprob: -0.8093808889389038
    3. '#' → logprob: -2.6843810081481934
    4. ' #' → logprob: -3.8093810081481934
    5. ' c' → logprob: -5.059381008148193
    6. ' somme' → logprob: -5.934381008148193
    7. ' a' → logprob: -6.684381008148193
    8. 'c' → logprob: -6.684381008148193
    9. 's' → logprob: -6.809381008148193
    10. 'r' → logprob: -7.309381008148193

Token 195: ' décider' (ID: 155719)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6414666771888733
    2. ' print' → logprob: -0.7664666771888733
    3. '#' → logprob: -5.1414666175842285
    4. ' #' → logprob: -6.7664666175842285
    5. ' calcul' → logprob: -6.8914666175842285
    6. ' afficher' → logprob: -8.141467094421387
    7. 'pr' → logprob: -9.766467094421387
    8. 'aff' → logprob: -9.891467094421387
    9. ' multiplier' → logprob: -10.016467094421387
    10. ' effectuer' → logprob: -10.266467094421387

Token 196: ' de' (ID: 334)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9724516868591309
    2. ' ' → logprob: -1.0974516868591309
    3. 'if' → logprob: -2.097451686859131
    4. ' de' → logprob: -2.847451686859131
    5. ' si' → logprob: -3.722451686859131
    6. '<|end|>' → logprob: -4.097451686859131
    7. ' what' → logprob: -4.222451686859131
    8. '#' → logprob: -4.472451686859131
    9. ' d' → logprob: -4.972451686859131
    10. ' quoi' → logprob: -5.472451686859131

Token 197: ' ce' (ID: 2357)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.236838698387146
    2. 'print' → logprob: -1.236838698387146
    3. ' print' → logprob: -1.986838698387146
    4. 'if' → logprob: -2.1118388175964355
    5. ' la' → logprob: -2.3618388175964355
    6. 'l' → logprob: -3.8618388175964355
    7. '#' → logprob: -4.1118388175964355
    8. ' l' → logprob: -4.4868388175964355
    9. 'la' → logprob: -5.2368388175964355
    10. 'le' → logprob: -5.7368388175964355

Token 198: ' qu' (ID: 474)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.22521734237670898
    2. ' qu' → logprob: -2.225217342376709
    3. ' type' → logprob: -3.725217342376709
    4. 'que' → logprob: -4.100217342376709
    5. '#' → logprob: -4.475217342376709
    6. 'qu' → logprob: -4.725217342376709
    7. ' qui' → logprob: -4.975217342376709
    8. 'qui' → logprob: -5.350217342376709
    9. ' code' → logprob: -5.350217342376709
    10. 'type' → logprob: -5.850217342376709

Token 199: ''on' (ID: 25812)
  Prédit: ''on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''on' → logprob: -0.11619799584150314
    2. 'on' → logprob: -2.9911980628967285
    3. ''il' → logprob: -3.1161980628967285
    4. '#' → logprob: -5.3661980628967285
    5. 'il' → logprob: -5.6161980628967285
    6. 'a' → logprob: -6.3661980628967285
    7. ''' → logprob: -6.3661980628967285
    8. 'e' → logprob: -7.4911980628967285
    9. 'u' → logprob: -7.4911980628967285
    10. ' on' → logprob: -7.7411980628967285

Token 200: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.43709897994995117
    2. ' fait' → logprob: -2.062098979949951
    3. '#' → logprob: -2.187098979949951
    4. ' print' → logprob: -2.687098979949951
    5. 'fait' → logprob: -4.062098979949951
    6. ' veut' → logprob: -4.187098979949951
    7. 'f' → logprob: -4.937098979949951
    8. ' souhaite' → logprob: -6.937098979949951
    9. ' peut' → logprob: -7.062098979949951
    10. ' va' → logprob: -7.562098979949951

Token 201: ' en' (ID: 469)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23520587384700775
    2. 'i' → logprob: -1.860205888748169
    3. '
' → logprob: -3.735205888748169
    4. ' if' → logprob: -4.23520565032959
    5. 'print' → logprob: -5.23520565032959
    6. '\n' → logprob: -5.86020565032959
    7. ' 
' → logprob: -5.98520565032959
    8. '#' → logprob: -6.61020565032959
    9. ',' → logprob: -7.36020565032959
    10. 'n' → logprob: -7.36020565032959

Token 202: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.018233293667435646
    2. ' fonction' → logprob: -4.143233299255371
    3. 'fon' → logprob: -6.768233299255371
    4. 'f' → logprob: -7.268233299255371
    5. 'function' → logprob: -8.893233299255371
    6. '#' → logprob: -9.893233299255371
    7. 'print' → logprob: -10.018233299255371
    8. ' function' → logprob: -10.893233299255371
    9. 'font' → logprob: -11.143233299255371
    10. '```' → logprob: -11.393233299255371

Token 203: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.012237783521413803
    2. 'de' → logprob: -5.262237548828125
    3. ' des' → logprob: -5.387237548828125
    4. ' du' → logprob: -6.137237548828125
    5. 'du' → logprob: -10.262237548828125
    6. 'a' → logprob: -10.262237548828125
    7. 'des' → logprob: -10.262237548828125
    8. 'd' → logprob: -10.637237548828125
    9. '#' → logprob: -10.637237548828125
    10. ' d' → logprob: -11.012237548828125

Token 204: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22717051208019257
    2. ' a' → logprob: -1.602170467376709
    3. ' la' → logprob: -6.727170467376709
    4. ' b' → logprob: -8.602170944213867
    5. ' ' → logprob: -8.852170944213867
    6. 'la' → logprob: -9.602170944213867
    7. 'b' → logprob: -9.727170944213867
    8. 'l' → logprob: -10.102170944213867
    9. ' l' → logprob: -10.727170944213867
    10. ' the' → logprob: -11.727170944213867

Token 205: ' valeur' (ID: 41664)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7210379838943481
    2. 'relation' → logprob: -1.5960379838943481
    3. 'val' → logprob: -1.7210379838943481
    4. ' valeur' → logprob: -3.3460378646850586
    5. ' relation' → logprob: -3.4710378646850586
    6. ' a' → logprob: -3.8460378646850586
    7. 'b' → logprob: -4.346037864685059
    8. 's' → logprob: -4.721037864685059
    9. ' somme' → logprob: -4.721037864685059
    10. ' comparaison' → logprob: -5.596037864685059

Token 206: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.04743378236889839
    2. 'de' → logprob: -3.297433853149414
    3. 'a' → logprob: -5.047433853149414
    4. ' a' → logprob: -6.047433853149414
    5. 'if' → logprob: -9.172433853149414
    6. ' if' → logprob: -9.422433853149414
    7. 'd' → logprob: -9.422433853149414
    8. ' ' → logprob: -9.547433853149414
    9. ' des' → logprob: -9.547433853149414
    10. '#' → logprob: -9.797433853149414

Token 207: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3515646755695343
    2. ' a' → logprob: -1.226564645767212
    3. ' b' → logprob: -6.351564884185791
    4. 'b' → logprob: -6.601564884185791
    5. ' ' → logprob: -11.601564407348633
    6. ' ' → logprob: -13.726564407348633
    7. '(a' → logprob: -14.351564407348633
    8. '	a' → logprob: -14.601564407348633
    9. ' la' → logprob: -15.226564407348633
    10. '  ' → logprob: -15.414064407348633

Token 208: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5271750688552856
    2. 'i' → logprob: -1.5271750688552856
    3. ' if' → logprob: -2.277174949645996
    4. '
' → logprob: -3.277174949645996
    5. ' 
' → logprob: -3.277174949645996
    6. ' ' → logprob: -5.277174949645996
    7. ':' → logprob: -5.527174949645996
    8. ' i' → logprob: -6.152174949645996
    9. ',' → logprob: -7.277174949645996
    10. 'a' → logprob: -7.652174949645996

Token 209: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.208653162000701e-05
    2. 'i' → logprob: -9.750082015991211
    3. ' if' → logprob: -10.750082015991211
    4. '```' → logprob: -13.625082015991211
    5. '
' → logprob: -14.000082015991211
    6. 'print' → logprob: -16.87508201599121
    7. 'a' → logprob: -17.25008201599121
    8. 'If' → logprob: -17.37508201599121
    9. 'ifs' → logprob: -17.50008201599121
    10. '#' → logprob: -17.62508201599121

Token 210: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -7.584239938296378e-06
    2. ' if' → logprob: -12.000007629394531
    3. 'i' → logprob: -14.000007629394531
    4. '```' → logprob: -15.125007629394531
    5. 'result' → logprob: -15.375007629394531
    6. 'print' → logprob: -17.25000762939453
    7. '
' → logprob: -17.50000762939453
    8. '#' → logprob: -18.62500762939453
    9. 'for' → logprob: -18.87500762939453
    10. 'output' → logprob: -18.87500762939453

Token 211: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.10022544115781784
    2. 'a' → logprob: -2.3502254486083984
    3. ' b' → logprob: -11.850225448608398
    4. ' ' → logprob: -12.350225448608398
    5. ' ' → logprob: -12.350225448608398
    6. 'b' → logprob: -13.475225448608398
    7. '	a' → logprob: -14.225225448608398
    8. '_a' → logprob: -15.225225448608398
    9. '  ' → logprob: -15.350225448608398
    10. '(a' → logprob: -15.975225448608398

Token 212: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.13480089604854584
    2. ' <' → logprob: -2.634800910949707
    3. '>' → logprob: -3.759800910949707
    4. ' ==' → logprob: -4.009800910949707
    5. ' <=' → logprob: -5.259800910949707
    6. ' >=' → logprob: -5.384800910949707
    7. '<' → logprob: -6.759800910949707
    8. '%' → logprob: -7.134800910949707
    9. '==' → logprob: -7.384800910949707
    10. ' %' → logprob: -8.509800910949707

Token 213: ' supérieur' (ID: 98491)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5637834072113037
    2. '>' → logprob: -1.6887834072113037
    3. ' supérieur' → logprob: -2.0637834072113037
    4. ' ' → logprob: -3.8137834072113037
    5. ' <' → logprob: -3.8137834072113037
    6. '<' → logprob: -4.438783645629883
    7. ' >=' → logprob: -4.563783645629883
    8. 'sup' → logprob: -4.938783645629883
    9. ' inférieur' → logprob: -4.938783645629883
    10. ' <=' → logprob: -5.188783645629883

Token 214: ' ou' (ID: 2031)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.05879273638129234
    2. 'à' → logprob: -3.93379282951355
    3. ' ' → logprob: -4.058792591094971
    4. ' a' → logprob: -4.808792591094971
    5. ' to' → logprob: -5.683792591094971
    6. '<|end|>' → logprob: -5.933792591094971
    7. 'a' → logprob: -6.683792591094971
    8. '=' → logprob: -7.058792591094971
    9. ',' → logprob: -7.183792591094971
    10. 'to' → logprob: -7.433792591094971

Token 215: ' égal' (ID: 15059)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.5243869423866272
    2. ' égal' → logprob: -1.0243868827819824
    3. 'à' → logprob: -3.5243868827819824
    4. '=' → logprob: -4.524386882781982
    5. ' ég' → logprob: -5.774386882781982
    6. ' à' → logprob: -6.149386882781982
    7. 'ég' → logprob: -7.024386882781982
    8. 'strict' → logprob: -7.149386882781982
    9. ' inférieur' → logprob: -7.774386882781982
    10. 'egal' → logprob: -7.899386882781982

Token 216: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.34955382347106934
    2. 'à' → logprob: -1.3495538234710693
    3. 'a' → logprob: -3.9745538234710693
    4. ' ' → logprob: -4.474554061889648
    5. ' a' → logprob: -5.349554061889648
    6. '  ' → logprob: -8.224554061889648
    7. ' ' → logprob: -8.724554061889648
    8. ''à' → logprob: -9.849554061889648
    9. 'au' → logprob: -9.974554061889648
    10. '```' → logprob: -10.349554061889648

Token 217: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.05290250480175018
    2. ' b' → logprob: -3.8029024600982666
    3. '10' → logprob: -3.9279024600982666
    4. '100' → logprob: -5.427902698516846
    5. ' ' → logprob: -6.427902698516846
    6. '5' → logprob: -7.302902698516846
    7. '50' → logprob: -7.302902698516846
    8. '20' → logprob: -7.427902698516846
    9. '600' → logprob: -8.052902221679688
    10. '1' → logprob: -8.177902221679688

Token 218: '13' (ID: 1311)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06553222984075546
    2. '10' → logprob: -2.9405322074890137
    3. '100' → logprob: -5.190532207489014
    4. '0' → logprob: -7.190532207489014
    5. '600' → logprob: -7.315532207489014
    6. '50' → logprob: -7.440532207489014
    7. '5' → logprob: -7.440532207489014
    8. '20' → logprob: -7.690532207489014
    9. '15' → logprob: -7.690532207489014
    10. '1' → logprob: -7.940532207489014

Token 219: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018032515421509743
    2. ':
' → logprob: -4.143032550811768
    3. 'if' → logprob: -6.893032550811768
    4. ',' → logprob: -7.518032550811768
    5. ' :' → logprob: -8.14303207397461
    6. ' if' → logprob: -9.26803207397461
    7. ' :
' → logprob: -10.01803207397461
    8. '   ' → logprob: -13.14303207397461
    9. ',
' → logprob: -13.51803207397461
    10. ':

' → logprob: -14.01803207397461

Token 220: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0025365441106259823
    2. ' if' → logprob: -6.002536773681641
    3. '```' → logprob: -9.75253677368164
    4. 'i' → logprob: -13.62753677368164
    5. '
' → logprob: -14.37753677368164
    6. '``' → logprob: -14.75253677368164
    7. ' 
' → logprob: -15.00253677368164
    8. 'ifs' → logprob: -17.37753677368164
    9. ':' → logprob: -17.50253677368164
    10. '#' → logprob: -17.62753677368164

Token 221: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02327354997396469
    2. ' if' → logprob: -3.773273468017578
    3. 'print' → logprob: -11.023273468017578
    4. 'i' → logprob: -11.898273468017578
    5. '```' → logprob: -13.398273468017578
    6. ' i' → logprob: -13.523273468017578
    7. ' print' → logprob: -13.898273468017578
    8. ' 
' → logprob: -14.398273468017578
    9. '
' → logprob: -15.148273468017578
    10. '   ' → logprob: -16.273273468017578

Token 222: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01627165637910366
    2. ' if' → logprob: -4.141271591186523
    3. 'print' → logprob: -8.391271591186523
    4. ' print' → logprob: -12.266271591186523
    5. '```' → logprob: -12.516271591186523
    6. '   ' → logprob: -14.016271591186523
    7. 'i' → logprob: -14.891271591186523
    8. '
' → logprob: -15.516271591186523
    9. ' 
' → logprob: -15.516271591186523
    10. '``' → logprob: -15.891271591186523

Token 223: ' affiche' (ID: 127479)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5913667678833008
    2. ' if' → logprob: -1.2163667678833008
    3. 'print' → logprob: -2.216366767883301
    4. ' print' → logprob: -3.216366767883301
    5. ':' → logprob: -7.341366767883301
    6. ' ' → logprob: -9.4663667678833
    7. 'pr' → logprob: -9.5913667678833
    8. '#' → logprob: -9.7163667678833
    9. '   ' → logprob: -10.0913667678833
    10. ' =' → logprob: -10.8413667678833

Token 224: ' b' (ID: 287)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.09640369564294815
    2. ' "' → logprob: -2.4714035987854004
    3. 'print' → logprob: -5.7214035987854
    4. 'b' → logprob: -7.0964035987854
    5. 'if' → logprob: -7.0964035987854
    6. ' b' → logprob: -7.9714035987854
    7. ''' → logprob: -8.221404075622559
    8. '"a' → logprob: -8.221404075622559
    9. ' print' → logprob: -8.346404075622559
    10. ' if' → logprob: -8.471404075622559

Token 225: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.017755474895238876
    2. '
' → logprob: -4.267755508422852
    3. ' if' → logprob: -5.642755508422852
    4. '

' → logprob: -11.017755508422852
    5. 'print' → logprob: -11.767755508422852
    6. '```' → logprob: -12.017755508422852
    7. ' 
' → logprob: -12.517755508422852
    8. '\n' → logprob: -13.017755508422852
    9. '
' → logprob: -13.142755508422852
    10. '  
' → logprob: -14.392755508422852

Token 226: 'don' (ID: 22130)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17105895280838013
    2. ')' → logprob: -2.1710588932037354
    3. ' print' → logprob: -4.0460591316223145
    4. ')
' → logprob: -4.0460591316223145
    5. 'if' → logprob: -5.6710591316223145
    6. '   ' → logprob: -6.4210591316223145
    7. ' )' → logprob: -6.9210591316223145
    8. ' )
' → logprob: -7.0460591316223145
    9. ' if' → logprob: -7.4210591316223145
    10. 'b' → logprob: -8.171058654785156

Token 227: 'c' (ID: 66)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.26227694749832153
    2. 'c' → logprob: -1.8872768878936768
    3. 'e' → logprob: -2.8872768878936768
    4. 'nées' → logprob: -4.387277126312256
    5. 'né' → logprob: -5.387277126312256
    6. 'ne' → logprob: -6.137277126312256
    7. 'née' → logprob: -7.262277126312256
    8. 'n' → logprob: -7.637277126312256
    9. 'ner' → logprob: -8.137276649475098
    10. '#' → logprob: -8.137276649475098

Token 228: ' la' (ID: 557)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4857291281223297
    2. ' b' → logprob: -0.9857290983200073
    3. 'print' → logprob: -5.235729217529297
    4. 'str' → logprob: -5.735729217529297
    5. ' str' → logprob: -6.235729217529297
    6. ' print' → logprob: -7.735729217529297
    7. '   ' → logprob: -8.235729217529297
    8. ')' → logprob: -8.860729217529297
    9. 'int' → logprob: -9.485729217529297
    10. ' ' → logprob: -9.735729217529297

Token 229: ' valeur' (ID: 41664)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6880738735198975
    2. ' valeur' → logprob: -1.5630738735198975
    3. 'print' → logprob: -2.6880738735198975
    4. ' b' → logprob: -2.6880738735198975
    5. ')' → logprob: -3.0630738735198975
    6. 'val' → logprob: -3.6880738735198975
    7. ' print' → logprob: -3.6880738735198975
    8. ' )' → logprob: -4.563074111938477
    9. ' quantité' → logprob: -6.250574111938477
    10. ' totalité' → logprob: -6.375574111938477

Token 230: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.45419439673423767
    2. ')' → logprob: -1.45419442653656
    3. 'de' → logprob: -2.7041943073272705
    4. ' )' → logprob: -3.2041943073272705
    5. ',' → logprob: -4.82919454574585
    6. '   ' → logprob: -5.70419454574585
    7. ' ' → logprob: -5.95419454574585
    8. 'b' → logprob: -6.07919454574585
    9. '+' → logprob: -6.95419454574585
    10. ' *' → logprob: -7.07919454574585

Token 231: ' la' (ID: 557)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11289140582084656
    2. ' b' → logprob: -2.237891435623169
    3. ' ' → logprob: -10.48789119720459
    4. ' la' → logprob: -10.98789119720459
    5. 'la' → logprob: -11.98789119720459
    6. 'print' → logprob: -11.98789119720459
    7. 'a' → logprob: -12.36289119720459
    8. ')' → logprob: -12.73789119720459
    9. ' print' → logprob: -13.98789119720459
    10. 'l' → logprob: -14.23789119720459

Token 232: ' seconde' (ID: 66204)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.013959449715912342
    2. ' b' → logprob: -5.1389594078063965
    3. 'variable' → logprob: -6.0139594078063965
    4. ' variable' → logprob: -6.5139594078063965
    5. 'val' → logprob: -6.8889594078063965
    6. ')' → logprob: -7.8889594078063965
    7. 'int' → logprob: -8.013959884643555
    8. ' ' → logprob: -8.013959884643555
    9. 'input' → logprob: -8.138959884643555
    10. '```' → logprob: -8.513959884643555

Token 233: ' entrée' (ID: 95590)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6898077130317688
    2. ' variable' → logprob: -1.439807653427124
    3. 'variable' → logprob: -2.689807653427124
    4. ' )' → logprob: -2.689807653427124
    5. ' valeur' → logprob: -3.689807653427124
    6. ' ' → logprob: -4.064807891845703
    7. ' ligne' → logprob: -4.064807891845703
    8. ')
' → logprob: -4.189807891845703
    9. 'val' → logprob: -5.189807891845703
    10. '#' → logprob: -5.189807891845703

Token 234: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023907560389488935
    2. 'if' → logprob: -6.1273908615112305
    3. ' if' → logprob: -9.12739086151123
    4. ' )' → logprob: -10.00239086151123
    5. ')
' → logprob: -10.87739086151123
    6. 'b' → logprob: -12.25239086151123
    7. '   ' → logprob: -12.50239086151123
    8. '*' → logprob: -12.50239086151123
    9. ')#' → logprob: -12.75239086151123
    10. ' ' → logprob: -13.12739086151123

Token 235: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.057743949990254e-05
    2. '
' → logprob: -11.250020980834961
    3. '```' → logprob: -12.250020980834961
    4. ' if' → logprob: -12.875020980834961
    5. 'i' → logprob: -16.37502098083496
    6. '``' → logprob: -16.50002098083496
    7. '\n' → logprob: -18.75002098083496
    8. 'ifs' → logprob: -19.25002098083496
    9. 'If' → logprob: -19.50002098083496
    10. '  
' → logprob: -20.12502098083496

Token 236: ' Sinon' (ID: 154924)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.320199877838604e-07
    2. ' if' → logprob: -15.5
    3. '
' → logprob: -15.75
    4. '```' → logprob: -16.875
    5. '#' → logprob: -18.0
    6. 'print' → logprob: -18.375
    7. 'else' → logprob: -19.625
    8. 'elif' → logprob: -19.75
    9. '   ' → logprob: -20.375
    10. 'for' → logprob: -20.625

Token 237: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03256036713719368
    2. ':
' → logprob: -3.782560348510742
    3. '   ' → logprob: -5.157560348510742
    4. ' :' → logprob: -5.907560348510742
    5. ' :
' → logprob: -7.532560348510742
    6. 'print' → logprob: -8.907560348510742
    7. ' print' → logprob: -10.407560348510742
    8. '#' → logprob: -10.532560348510742
    9. 'if' → logprob: -11.282560348510742
    10. ',' → logprob: -11.407560348510742

Token 238: ' si' (ID: 1784)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4741716682910919
    2. ' print' → logprob: -0.9741716384887695
    3. '   ' → logprob: -10.72417163848877
    4. ' b' → logprob: -10.72417163848877
    5. ' on' → logprob: -11.84917163848877
    6. ' ' → logprob: -11.84917163848877
    7. '    ' → logprob: -11.97417163848877
    8. ' if' → logprob: -12.84917163848877
    9. ' ' → logprob: -12.84917163848877
    10. ' a' → logprob: -12.97417163848877

Token 239: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07982807606458664
    2. 'a' → logprob: -2.5798280239105225
    3. ' b' → logprob: -7.579828262329102
    4. ' ' → logprob: -8.079828262329102
    5. 'b' → logprob: -9.704828262329102
    6. '10' → logprob: -11.579828262329102
    7. '12' → logprob: -11.829828262329102
    8. ' ' → logprob: -12.079828262329102
    9. '13' → logprob: -12.204828262329102
    10. '	a' → logprob: -12.329828262329102

Token 240: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.038600899279117584
    2. ' >=' → logprob: -3.9136009216308594
    3. '<' → logprob: -4.163600921630859
    4. ' ' → logprob: -6.413600921630859
    5. '>=' → logprob: -8.28860092163086
    6. ' >' → logprob: -8.41360092163086
    7. ' <=' → logprob: -9.16360092163086
    8. ' is' → logprob: -10.41360092163086
    9. ' est' → logprob: -10.53860092163086
    10. ' <
' → logprob: -11.41360092163086

Token 241: ' supérieur' (ID: 98491)
  Prédit: ' inférieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inférieur' → logprob: -0.19713452458381653
    2. 'inf' → logprob: -2.197134494781494
    3. 'strict' → logprob: -3.697134494781494
    4. '<' → logprob: -3.947134494781494
    5. 'infer' → logprob: -4.572134494781494
    6. ' inf' → logprob: -4.822134494781494
    7. ' supérieur' → logprob: -5.947134494781494
    8. 'sup' → logprob: -7.322134494781494
    9. ' ' → logprob: -7.822134494781494
    10. ' <' → logprob: -7.822134494781494

Token 242: ' ou' (ID: 2031)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06992320716381073
    2. ' à' → logprob: -3.194923162460327
    3. ' ou' → logprob: -4.194923400878906
    4. 'à' → logprob: -5.444923400878906
    5. ' ' → logprob: -6.319923400878906
    6. ' or' → logprob: -6.444923400878906
    7. ' =' → logprob: -6.944923400878906
    8. 'strict' → logprob: -7.319923400878906
    9. '<' → logprob: -8.069923400878906
    10. 'ou' → logprob: -8.444923400878906

Token 243: ' égal' (ID: 15059)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.058047808706760406
    2. ' égal' → logprob: -3.8080477714538574
    3. 'égal' → logprob: -3.9330477714538574
    4. 'egal' → logprob: -5.308047771453857
    5. '0' → logprob: -5.433047771453857
    6. 'equal' → logprob: -7.058047771453857
    7. '1' → logprob: -7.558047771453857
    8. ' ég' → logprob: -7.558047771453857
    9. '12' → logprob: -7.683047771453857
    10. ' egal' → logprob: -7.808047771453857

Token 244: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.6074637174606323
    2. '10' → logprob: -1.9824637174606323
    3. ' à' → logprob: -2.232463836669922
    4. '=' → logprob: -2.982463836669922
    5. '12' → logprob: -3.107463836669922
    6. '9' → logprob: -3.357463836669922
    7. '8' → logprob: -3.607463836669922
    8. '7' → logprob: -3.607463836669922
    9. '13' → logprob: -4.732463836669922
    10. '1' → logprob: -5.107463836669922

Token 245: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -0.8019088506698608
    2. '3' → logprob: -1.6769088506698608
    3. '0' → logprob: -1.8019088506698608
    4. '6' → logprob: -2.0519089698791504
    5. '10' → logprob: -3.9269089698791504
    6. '1' → logprob: -4.17690896987915
    7. '8' → logprob: -4.55190896987915
    8. '5' → logprob: -5.05190896987915
    9. '4' → logprob: -5.42690896987915
    10. '11' → logprob: -5.42690896987915

Token 246: '6' (ID: 21)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.5043423175811768
    2. '6' → logprob: -2.0043423175811768
    3. '0' → logprob: -2.2543423175811768
    4. '3' → logprob: -2.8793423175811768
    5. '10' → logprob: -3.2543423175811768
    6. '8' → logprob: -4.004342079162598
    7. '1' → logprob: -4.504342079162598
    8. '2' → logprob: -4.754342079162598
    9. '5' → logprob: -5.004342079162598
    10. '9' → logprob: -5.004342079162598

Token 247: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007474943995475769
    2. ':
' → logprob: -5.257474899291992
    3. ' and' → logprob: -6.757474899291992
    4. ' :' → logprob: -7.007474899291992
    5. 'and' → logprob: -9.007474899291992
    6. ' :
' → logprob: -11.007474899291992
    7. ',' → logprob: -11.632474899291992
    8. '   ' → logprob: -11.757474899291992
    9. 'print' → logprob: -13.007474899291992
    10. ' ' → logprob: -13.132474899291992

Token 248: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.544510006904602
    2. '):
' → logprob: -1.919510006904602
    3. '):' → logprob: -2.5445098876953125
    4. 'a' → logprob: -2.7945098876953125
    5. ' )' → logprob: -3.0445098876953125
    6. ' and' → logprob: -3.4195098876953125
    7. ' ):
' → logprob: -3.9195098876953125
    8. 'and' → logprob: -4.1695098876953125
    9. ' ):' → logprob: -4.9195098876953125
    10. 'elif' → logprob: -6.1695098876953125

Token 249: ''est' (ID: 6616)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.3388444483280182
    2. 'a' → logprob: -2.2138445377349854
    3. ':' → logprob: -2.9638445377349854
    4. '):' → logprob: -3.4638445377349854
    5. 'and' → logprob: -3.8388445377349854
    6. ' and' → logprob: -4.213844299316406
    7. 'et' → logprob: -4.338844299316406
    8. 'e' → logprob: -4.838844299316406
    9. ')' → logprob: -4.963844299316406
    10. '#' → logprob: -5.338844299316406

Token 250: '-à' (ID: 56297)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2463897317647934
    2. ' a' → logprob: -2.121389627456665
    3. ')' → logprob: -2.996389627456665
    4. 'elif' → logprob: -4.246389865875244
    5. ':' → logprob: -4.496389865875244
    6. ' )' → logprob: -5.621389865875244
    7. ' à' → logprob: -5.871389865875244
    8. '   ' → logprob: -5.871389865875244
    9. '):' → logprob: -6.496389865875244
    10. 'and' → logprob: -6.496389865875244

Token 251: '-dire' (ID: 76064)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0038728713989258
    2. 'a' → logprob: -1.0038728713989258
    3. '-à' → logprob: -2.878872871398926
    4. 'à' → logprob: -3.003872871398926
    5. '6' → logprob: -3.128872871398926
    6. '10' → logprob: -3.878872871398926
    7. 'b' → logprob: -4.378872871398926
    8. 'not' → logprob: -5.003872871398926
    9. '0' → logprob: -5.128872871398926
    10. '7' → logprob: -5.253872871398926

Token 252: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.23245669901371002
    2. ' a' → logprob: -1.6074566841125488
    3. ' ' → logprob: -5.982456684112549
    4. '6' → logprob: -6.857456684112549
    5. '13' → logprob: -7.357456684112549
    6. '```' → logprob: -7.482456684112549
    7. ')' → logprob: -7.857456684112549
    8. '10' → logprob: -8.232457160949707
    9. '17' → logprob: -8.482457160949707
    10. ' and' → logprob: -8.732457160949707

Token 253: ' vaut' (ID: 83004)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.348952978849411
    2. '>=' → logprob: -1.2239530086517334
    3. ' <' → logprob: -9.098953247070312
    4. ')' → logprob: -9.473953247070312
    5. '>' → logprob: -9.848953247070312
    6. ' ' → logprob: -10.223953247070312
    7. ')>=' → logprob: -10.223953247070312
    8. '<' → logprob: -10.348953247070312
    9. '<=' → logprob: -10.598953247070312
    10. ' <=' → logprob: -10.598953247070312

Token 254: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.02396513894200325
    2. ' ' → logprob: -4.398965358734131
    3. '7' → logprob: -4.773965358734131
    4. ')' → logprob: -7.648965358734131
    5. 'au' → logprob: -7.648965358734131
    6. ' au' → logprob: -7.648965358734131
    7. 'a' → logprob: -8.273964881896973
    8. '9' → logprob: -8.523964881896973
    9. ' a' → logprob: -8.648964881896973
    10. '12' → logprob: -9.023964881896973

Token 255: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0027471003122627735
    2. ' ' → logprob: -6.127747058868408
    3. '7' → logprob: -8.002747535705566
    4. '13' → logprob: -9.627747535705566
    5. ')' → logprob: -9.877747535705566
    6. 'a' → logprob: -10.377747535705566
    7. '12' → logprob: -10.502747535705566
    8. '10' → logprob: -11.002747535705566
    9. ' a' → logprob: -12.002747535705566
    10. '```' → logprob: -12.127747535705566

Token 256: ',' (ID: 11)
  Prédit: ' ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ou' → logprob: -0.5915583968162537
    2. ' or' → logprob: -1.0915584564208984
    3. ')' → logprob: -3.3415584564208984
    4. ' if' → logprob: -3.9665584564208984
    5. '):
' → logprob: -4.341558456420898
    6. '):' → logprob: -4.591558456420898
    7. 'if' → logprob: -4.716558456420898
    8. '<=' → logprob: -5.591558456420898
    9. ' <=' → logprob: -5.841558456420898
    10. 'ou' → logprob: -5.966558456420898

Token 257: ' ' (ID: 220)
  Prédit: ' ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ou' → logprob: -1.1883397102355957
    2. ' a' → logprob: -1.5633397102355957
    3. ' or' → logprob: -1.8133397102355957
    4. 'a' → logprob: -2.4383397102355957
    5. '   ' → logprob: -2.5633397102355957
    6. ' ' → logprob: -2.8133397102355957
    7. '7' → logprob: -3.3133397102355957
    8. 'elif' → logprob: -4.063339710235596
    9. ' if' → logprob: -4.813339710235596
    10. ' elif' → logprob: -5.063339710235596

Token 258: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.014671695418655872
    2. ' ' → logprob: -4.389671802520752
    3. 'a' → logprob: -6.389671802520752
    4. ' ou' → logprob: -9.639671325683594
    5. '13' → logprob: -9.764671325683594
    6. 'ou' → logprob: -9.889671325683594
    7. '
' → logprob: -10.139671325683594
    8. '   ' → logprob: -10.264671325683594
    9. ' a' → logprob: -10.264671325683594
    10. '  ' → logprob: -10.264671325683594

Token 259: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04753507301211357
    2. ' ,' → logprob: -3.1725351810455322
    3. ' ou' → logprob: -6.047534942626953
    4. ' or' → logprob: -7.172534942626953
    5. ' ' → logprob: -7.422534942626953
    6. '),' → logprob: -8.672534942626953
    7. ')' → logprob: -8.797534942626953
    8. '   ' → logprob: -8.797534942626953
    9. ' ),' → logprob: -9.297534942626953
    10. '  ' → logprob: -10.547534942626953

Token 260: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0509149432182312
    2. ' ' → logprob: -3.050915002822876
    3. ',' → logprob: -6.175914764404297
    4. ' ,' → logprob: -9.050914764404297
    5. ' or' → logprob: -9.175914764404297
    6. 'or' → logprob: -10.800914764404297
    7. '  ' → logprob: -12.925914764404297
    8. '   ' → logprob: -14.300914764404297
    9. '9' → logprob: -15.175914764404297
    10. ' 
' → logprob: -15.800914764404297

Token 261: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.009303370490670204
    2. '12' → logprob: -5.259303569793701
    3. ' ' → logprob: -5.884303569793701
    4. ',' → logprob: -7.259303569793701
    5. '7' → logprob: -7.634303569793701
    6. '  ' → logprob: -10.384303092956543
    7. '13' → logprob: -10.759303092956543
    8. '...' → logprob: -11.634303092956543
    9. '11' → logprob: -11.884303092956543
    10. 'or' → logprob: -12.384303092956543

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006662200670689344
    2. ' ,' → logprob: -5.256662368774414
    3. ' ou' → logprob: -7.756662368774414
    4. '),' → logprob: -8.006662368774414
    5. ')' → logprob: -8.256662368774414
    6. '   ' → logprob: -9.006662368774414
    7. ' ' → logprob: -9.631662368774414
    8. ' or' → logprob: -10.006662368774414
    9. ',
' → logprob: -10.256662368774414
    10. '```' → logprob: -10.381662368774414

Token 263: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.006041727494448423
    2. ' ' → logprob: -5.131041526794434
    3. ',' → logprob: -9.256041526794434
    4. '   ' → logprob: -12.131041526794434
    5. ' ,' → logprob: -12.756041526794434
    6. 'or' → logprob: -12.881041526794434
    7. '  ' → logprob: -12.881041526794434
    8. ' or' → logprob: -13.256041526794434
    9. '
' → logprob: -13.381041526794434
    10. 'elif' → logprob: -15.631041526794434

Token 264: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0010259009432047606
    2. ' ' → logprob: -7.126025676727295
    3. ',' → logprob: -8.501026153564453
    4. '  ' → logprob: -12.001026153564453
    5. ' or' → logprob: -13.126026153564453
    6. '
' → logprob: -13.251026153564453
    7. '12' → logprob: -13.251026153564453
    8. 'or' → logprob: -13.376026153564453
    9. '   ' → logprob: -13.501026153564453
    10. ' ,' → logprob: -13.751026153564453

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010840291157364845
    2. ' ou' → logprob: -5.51084041595459
    3. ' or' → logprob: -5.76084041595459
    4. ' ,' → logprob: -6.26084041595459
    5. ')' → logprob: -7.01084041595459
    6. '),' → logprob: -7.88584041595459
    7. '10' → logprob: -9.26084041595459
    8. 'ou' → logprob: -9.63584041595459
    9. ' ' → logprob: -9.76084041595459
    10. 'or' → logprob: -9.88584041595459

Token 266: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0008223761687986553
    2. ' ' → logprob: -7.1258225440979
    3. '1' → logprob: -12.125822067260742
    4. ' or' → logprob: -12.250822067260742
    5. ',' → logprob: -12.875822067260742
    6. '
' → logprob: -13.000822067260742
    7. '   ' → logprob: -14.250822067260742
    8. 'or' → logprob: -14.625822067260742
    9. ' ,' → logprob: -14.875822067260742
    10. '```' → logprob: -15.000822067260742

Token 267: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.282920129597187e-05
    2. ' ' → logprob: -11.500012397766113
    3. '12' → logprob: -13.500012397766113
    4. '1' → logprob: -14.000012397766113
    5. ',' → logprob: -15.625012397766113
    6. '
' → logprob: -15.750012397766113
    7. '11' → logprob: -16.37501335144043
    8. '

' → logprob: -19.00001335144043
    9. ' ,' → logprob: -19.12501335144043
    10. '...' → logprob: -19.62501335144043

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024059813003987074
    2. ' ,' → logprob: -6.627406120300293
    3. ' or' → logprob: -7.877406120300293
    4. ')' → logprob: -8.252406120300293
    5. ' ou' → logprob: -8.502406120300293
    6. '),' → logprob: -9.377406120300293
    7. '   ' → logprob: -10.127406120300293
    8. '11' → logprob: -10.877406120300293
    9. ' ' → logprob: -11.252406120300293
    10. '10' → logprob: -11.502406120300293

Token 269: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7885229587554932
    2. '10' → logprob: -1.0385229587554932
    3. '11' → logprob: -1.6635229587554932
    4. '12' → logprob: -6.663522720336914
    5. ',' → logprob: -8.038522720336914
    6. '1' → logprob: -8.288522720336914
    7. '   ' → logprob: -10.163522720336914
    8. '
' → logprob: -10.413522720336914
    9. ' ,' → logprob: -10.413522720336914
    10. '```' → logprob: -10.913522720336914

Token 270: '11' (ID: 994)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4829460680484772
    2. '11' → logprob: -1.1079460382461548
    3. '12' → logprob: -3.1079461574554443
    4. ' ' → logprob: -4.857945919036865
    5. '1' → logprob: -8.857946395874023
    6. ',' → logprob: -8.857946395874023
    7. '
' → logprob: -10.107946395874023
    8. '```' → logprob: -12.357946395874023
    9. '  ' → logprob: -12.982946395874023
    10. '...' → logprob: -13.357946395874023

Token 271: ' ou' (ID: 2031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13046425580978394
    2. ' ou' → logprob: -2.5054643154144287
    3. ' or' → logprob: -4.13046407699585
    4. 'ou' → logprob: -4.75546407699585
    5. ')' → logprob: -4.75546407699585
    6. 'or' → logprob: -5.75546407699585
    7. '#' → logprob: -6.25546407699585
    8. '),' → logprob: -7.00546407699585
    9. ' ,' → logprob: -7.50546407699585
    10. '   ' → logprob: -9.005464553833008

Token 272: ' ' (ID: 220)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.012576642446219921
    2. ' ' → logprob: -4.387576580047607
    3. '10' → logprob: -10.012577056884766
    4. '13' → logprob: -11.762577056884766
    5. '11' → logprob: -12.012577056884766
    6. '7' → logprob: -13.262577056884766
    7. 'a' → logprob: -13.387577056884766
    8. '6' → logprob: -13.512577056884766
    9. '  ' → logprob: -14.137577056884766
    10. '   ' → logprob: -14.262577056884766

Token 273: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.00014704519708175212
    2. ' ' → logprob: -9.000146865844727
    3. '1' → logprob: -10.750146865844727
    4. '11' → logprob: -13.750146865844727
    5. '
' → logprob: -15.250146865844727
    6. '10' → logprob: -15.250146865844727
    7. '2' → logprob: -15.750146865844727
    8. '```' → logprob: -16.250146865844727
    9. '  ' → logprob: -16.625146865844727
    10. '   ' → logprob: -17.062646865844727

Token 274: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.39264264702796936
    2. '):' → logprob: -1.767642617225647
    3. ')' → logprob: -2.0176427364349365
    4. 'if' → logprob: -4.142642498016357
    5. ')
' → logprob: -6.392642498016357
    6. '):

' → logprob: -6.767642498016357
    7. ':' → logprob: -7.142642498016357
    8. ':
' → logprob: -7.517642498016357
    9. '   ' → logprob: -8.267642974853516
    10. '#' → logprob: -8.517642974853516

Token 275: ' :
' (ID: 10039)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007409158628433943
    2. 'elif' → logprob: -5.25740909576416
    3. ':' → logprob: -6.38240909576416
    4. ' if' → logprob: -8.25740909576416
    5. ':
' → logprob: -9.25740909576416
    6. '   ' → logprob: -9.75740909576416
    7. '```' → logprob: -10.13240909576416
    8. 'else' → logprob: -10.75740909576416
    9. 'print' → logprob: -13.38240909576416
    10. '#' → logprob: -13.38240909576416

Token 276: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00012558852904476225
    2. '```' → logprob: -9.375125885009766
    3. ' if' → logprob: -10.250125885009766
    4. 'elif' → logprob: -12.875125885009766
    5. '``' → logprob: -13.750125885009766
    6. 'print' → logprob: -14.000125885009766
    7. '#' → logprob: -14.250125885009766
    8. 'ifs' → logprob: -16.875125885009766
    9. '   ' → logprob: -17.125125885009766
    10. '
' → logprob: -17.375125885009766

Token 277: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0001495484757469967
    2. '```' → logprob: -9.500149726867676
    3. ' if' → logprob: -10.125149726867676
    4. 'print' → logprob: -10.500149726867676
    5. 'elif' → logprob: -12.125149726867676
    6. '``' → logprob: -13.875149726867676
    7. '   ' → logprob: -15.500149726867676
    8. '
' → logprob: -15.750149726867676
    9. 'ifs' → logprob: -16.87514877319336
    10. '#' → logprob: -16.87514877319336

Token 278: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005354601424187422
    2. 'if' → logprob: -5.255354404449463
    3. ' print' → logprob: -9.130354881286621
    4. '   ' → logprob: -12.130354881286621
    5. ' if' → logprob: -12.130354881286621
    6. '```' → logprob: -14.505354881286621
    7. ' ' → logprob: -15.755354881286621
    8. 'result' → logprob: -15.755354881286621
    9. '
' → logprob: -15.880354881286621
    10. 'pr' → logprob: -16.005353927612305

Token 279: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02873459830880165
    2. 'if' → logprob: -3.9037346839904785
    3. ' print' → logprob: -4.9037346839904785
    4. ' if' → logprob: -7.6537346839904785
    5. '   ' → logprob: -9.40373420715332
    6. 'pr' → logprob: -9.65373420715332
    7. '```' → logprob: -10.02873420715332
    8. '
' → logprob: -10.40373420715332
    9. 'elif' → logprob: -11.02873420715332
    10. '#' → logprob: -12.02873420715332

Token 280: ' la' (ID: 557)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6197509765625
    2. 'b' → logprob: -1.2447509765625
    3. 'a' → logprob: -2.3697509765625
    4. ' a' → logprob: -2.6197509765625
    5. '"' → logprob: -5.4947509765625
    6. ' ' → logprob: -6.7447509765625
    7. ' "' → logprob: -6.8697509765625
    8. '"a' → logprob: -8.3697509765625
    9. ' (' → logprob: -8.7447509765625
    10. '6' → logprob: -8.7447509765625

Token 281: ' moitié' (ID: 93216)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6084036827087402
    2. 'a' → logprob: -1.2334036827087402
    3. ' b' → logprob: -1.9834036827087402
    4. ' a' → logprob: -3.8584036827087402
    5. ' ' → logprob: -7.35840368270874
    6. ' str' → logprob: -7.35840368270874
    7. '"' → logprob: -7.60840368270874
    8. ' max' → logprob: -7.60840368270874
    9. 'str' → logprob: -7.73340368270874
    10. '2' → logprob: -7.73340368270874

Token 282: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4678918421268463
    2. 'b' → logprob: -1.342891812324524
    3. ' b' → logprob: -2.3428919315338135
    4. ' (' → logprob: -4.842891693115234
    5. 'de' → logprob: -5.592891693115234
    6. '(' → logprob: -5.717891693115234
    7. ' of' → logprob: -7.467891693115234
    8. '(b' → logprob: -8.342891693115234
    9. '()' → logprob: -9.092891693115234
    10. ' ' → logprob: -9.092891693115234

Token 283: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03804183006286621
    2. ' b' → logprob: -3.288041830062866
    3. '(b' → logprob: -15.163042068481445
    4. ' ' → logprob: -16.538042068481445
    5. ' (' → logprob: -16.788042068481445
    6. '(' → logprob: -18.788042068481445
    7. 'int' → logprob: -18.913042068481445
    8. 'a' → logprob: -18.913042068481445
    9. '	b' → logprob: -19.163042068481445
    10. 'str' → logprob: -19.163042068481445

Token 284: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00013119110371917486
    2. ' if' → logprob: -10.000131607055664
    3. 'elif' → logprob: -10.125131607055664
    4. '```' → logprob: -10.500131607055664
    5. 'else' → logprob: -11.625131607055664
    6. '
' → logprob: -12.000131607055664
    7. 'i' → logprob: -13.875131607055664
    8. '#' → logprob: -14.625131607055664
    9. '``' → logprob: -14.875131607055664
    10. 'ifs' → logprob: -15.000131607055664

Token 285: ' arr' (ID: 1724)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8938897252082825
    2. ' b' → logprob: -1.1438896656036377
    3. '"' → logprob: -2.6438896656036377
    4. 'print' → logprob: -2.6438896656036377
    5. '#' → logprob: -2.7688896656036377
    6. 'end' → logprob: -4.018889904022217
    7. 'else' → logprob: -4.393889904022217
    8. '"\' → logprob: -4.643889904022217
    9. ' #' → logprob: -5.143889904022217
    10. ' end' → logprob: -5.143889904022217

Token 286: 'ond' (ID: 1415)
  Prédit: 'ond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.14331597089767456
    2. 'ondi' → logprob: -2.0183160305023193
    3. 'ound' → logprob: -7.89331579208374
    4. 'ont' → logprob: -9.018316268920898
    5. 'on' → logprob: -9.893316268920898
    6. 'onde' → logprob: -10.518316268920898
    7. 'ondissement' → logprob: -10.643316268920898
    8. 'int' → logprob: -10.768316268920898
    9. 'a' → logprob: -12.393316268920898
    10. 'o' → logprob: -12.768316268920898

Token 287: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.2532790005207062
    2. 'i' → logprob: -1.5032789707183838
    3. 'e' → logprob: -7.253279209136963
    4. '```' → logprob: -9.753278732299805
    5. 'is' → logprob: -10.128278732299805
    6. '#' → logprob: -10.253278732299805
    7. 'ée' → logprob: -10.378278732299805
    8. ' ie' → logprob: -10.503278732299805
    9. '(i' → logprob: -10.628278732299805
    10. '
' → logprob: -10.628278732299805

Token 288: ' vers' (ID: 3640)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4561840891838074
    2. 'print' → logprob: -1.7061841487884521
    3. ')' → logprob: -2.831184148788452
    4. 'a' → logprob: -3.581184148788452
    5. 'int' → logprob: -3.956184148788452
    6. 'import' → logprob: -3.956184148788452
    7. 'down' → logprob: -4.456183910369873
    8. ' b' → logprob: -5.081183910369873
    9. '(b' → logprob: -5.081183910369873
    10. 'round' → logprob: -5.456183910369873

Token 289: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.14142288267612457
    2. '0' → logprob: -2.641422986984253
    3. 'l' → logprob: -2.891422986984253
    4. 'bas' → logprob: -6.141422748565674
    5. 'zero' → logprob: -6.391422748565674
    6. ' le' → logprob: -8.391423225402832
    7. '```' → logprob: -8.766423225402832
    8. '1' → logprob: -8.891423225402832
    9. '-' → logprob: -9.016423225402832
    10. 'haut' → logprob: -9.266423225402832

Token 290: ' bas' (ID: 3222)
  Prédit: 'bas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bas' → logprob: -0.04155672714114189
    2. 'haut' → logprob: -3.2915568351745605
    3. 'b' → logprob: -5.7915568351745605
    4. '0' → logprob: -7.9165568351745605
    5. 'ha' → logprob: -10.291556358337402
    6. '```' → logprob: -10.791556358337402
    7. '1' → logprob: -12.416556358337402
    8. '-' → logprob: -12.541556358337402
    9. 'moins' → logprob: -12.541556358337402
    10. 'inf' → logprob: -12.666556358337402

Token 291: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002941095153801143
    2. 'elif' → logprob: -9.125293731689453
    3. 'i' → logprob: -9.250293731689453
    4. 'else' → logprob: -10.625293731689453
    5. '```' → logprob: -10.750293731689453
    6. 'import' → logprob: -10.875293731689453
    7. ' if' → logprob: -10.875293731689453
    8. '#' → logprob: -12.500293731689453
    9. 'ifs' → logprob: -14.500293731689453
    10. '
' → logprob: -15.750293731689453

Token 292: 'c' (ID: 66)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.0198419094085693
    2. 'print' → logprob: -1.0198419094085693
    3. ' b' → logprob: -1.3948419094085693
    4. ' print' → logprob: -3.6448419094085693
    5. ')' → logprob: -5.769842147827148
    6. ' )' → logprob: -7.519842147827148
    7. 'import' → logprob: -8.144842147827148
    8. ')
' → logprob: -8.394842147827148
    9. ' )
' → logprob: -8.394842147827148
    10. ' ' → logprob: -10.019842147827148

Token 293: ''est' (ID: 6616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8376224637031555
    2. 'print' → logprob: -0.9626224637031555
    3. ')' → logprob: -2.5876224040985107
    4. ' b' → logprob: -2.9626224040985107
    5. 'b' → logprob: -3.2126224040985107
    6. 'e' → logprob: -5.21262264251709
    7. ' print' → logprob: -5.33762264251709
    8. 'a' → logprob: -6.71262264251709
    9. ' )' → logprob: -6.71262264251709
    10. ' #' → logprob: -6.96262264251709

Token 294: ' ce' (ID: 2357)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0275825262069702
    2. ' b' → logprob: -1.0275825262069702
    3. 'b' → logprob: -1.5275825262069702
    4. '#' → logprob: -4.02758264541626
    5. ' =' → logprob: -4.27758264541626
    6. ' )' → logprob: -4.40258264541626
    7. 'print' → logprob: -4.65258264541626
    8. '=' → logprob: -5.77758264541626
    9. '   ' → logprob: -6.65258264541626
    10. 'import' → logprob: -6.65258264541626

Token 295: ' que' (ID: 661)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7690906524658203
    2. 'b' → logprob: -0.8940906524658203
    3. ' b' → logprob: -3.0190906524658203
    4. 'int' → logprob: -3.0190906524658203
    5. 'a' → logprob: -4.76909065246582
    6. ' que' → logprob: -5.14409065246582
    7. ' qui' → logprob: -5.64409065246582
    8. 'qui' → logprob: -6.14409065246582
    9. ' #' → logprob: -6.26909065246582
    10. '//' → logprob: -6.26909065246582

Token 296: ' fait' (ID: 7473)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.031249042600393295
    2. ' b' → logprob: -3.5312490463256836
    3. '#' → logprob: -6.781249046325684
    4. 'int' → logprob: -8.406249046325684
    5. ' on' → logprob: -9.656249046325684
    6. '//' → logprob: -10.531249046325684
    7. 'a' → logprob: -11.031249046325684
    8. ' int' → logprob: -11.906249046325684
    9. ' #' → logprob: -12.281249046325684
    10. 'on' → logprob: -12.406249046325684

Token 297: ' //' (ID: 602)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.014185366220772266
    2. ' b' → logprob: -4.264185428619385
    3. 'print' → logprob: -11.764184951782227
    4. ' ' → logprob: -11.889184951782227
    5. '//' → logprob: -12.889184951782227
    6. 'int' → logprob: -13.389184951782227
    7. '```' → logprob: -13.514184951782227
    8. '#' → logprob: -14.764184951782227
    9. '`' → logprob: -14.764184951782227
    10. ' print' → logprob: -15.639184951782227

Token 298: ' en' (ID: 469)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.57347571849823
    2. ')' → logprob: -1.07347571849823
    3. ' ' → logprob: -2.5734758377075195
    4. ' )' → logprob: -4.1984758377075195
    5. 'b' → logprob: -6.0734758377075195
    6. ' b' → logprob: -7.1984758377075195
    7. '<|end|>' → logprob: -9.69847583770752
    8. '1' → logprob: -9.94847583770752
    9. ')b' → logprob: -10.07347583770752
    10. '),' → logprob: -11.32347583770752

Token 299: ' division' (ID: 21629)
  Prédit: 'Python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Python' → logprob: -0.6413747072219849
    2. 'python' → logprob: -1.2663747072219849
    3. ' Python' → logprob: -1.7663747072219849
    4. 'b' → logprob: -4.266374588012695
    5. 'a' → logprob: -5.766374588012695
    6. ' b' → logprob: -6.266374588012695
    7. ' python' → logprob: -6.641374588012695
    8. ' a' → logprob: -9.391374588012695
    9. '2' → logprob: -10.141374588012695
    10. ' ' → logprob: -10.516374588012695

Token 300: ' entière' (ID: 61583)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47157803177833557
    2. ')' → logprob: -1.3465780019760132
    3. ' b' → logprob: -2.2215781211853027
    4. ' )' → logprob: -5.346578121185303
    5. 'a' → logprob: -6.721578121185303
    6. '2' → logprob: -7.596578121185303
    7. ' par' → logprob: -8.096577644348145
    8. ' a' → logprob: -8.221577644348145
    9. ' ' → logprob: -9.096577644348145
    10. '=' → logprob: -10.221577644348145

Token 301: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5350466966629028
    2. ')
' → logprob: -0.9100466966629028
    3. 'if' → logprob: -4.785046577453613
    4. 'b' → logprob: -6.535046577453613
    5. 'print' → logprob: -6.660046577453613
    6. '#' → logprob: -8.910046577453613
    7. ')

' → logprob: -9.160046577453613
    8. ' )
' → logprob: -9.285046577453613
    9. 'else' → logprob: -9.785046577453613
    10. ' )' → logprob: -9.785046577453613

Token 302: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.353008499601856e-05
    2. 'elif' → logprob: -9.875093460083008
    3. '```' → logprob: -10.625093460083008
    4. 'else' → logprob: -11.250093460083008
    5. ' if' → logprob: -13.125093460083008
    6. 'c' → logprob: -13.500093460083008
    7. '#' → logprob: -14.750093460083008
    8. '
' → logprob: -15.125093460083008
    9. '``' → logprob: -15.125093460083008
    10. 'print' → logprob: -16.125093460083008

Token 303: ' Sinon' (ID: 154924)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -2.1008713702030946e-06
    2. '```' → logprob: -13.250001907348633
    3. ' if' → logprob: -15.625001907348633
    4. '#' → logprob: -17.125001907348633
    5. 'result' → logprob: -18.000001907348633
    6. '``' → logprob: -18.250001907348633
    7. 'elif' → logprob: -18.625001907348633
    8. 'c' → logprob: -18.625001907348633
    9. 'output' → logprob: -18.750001907348633
    10. 'ifs' → logprob: -19.000001907348633

Token 304: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.046929001808166504
    2. ':
' → logprob: -3.171928882598877
    3. 'if' → logprob: -5.796928882598877
    4. '   ' → logprob: -7.796928882598877
    5. 'print' → logprob: -8.546929359436035
    6. ' :' → logprob: -8.921929359436035
    7. ' :
' → logprob: -9.796929359436035
    8. ' if' → logprob: -10.171929359436035
    9. '#' → logprob: -10.421929359436035
    10. ':#' → logprob: -11.921929359436035

Token 305: 'don' (ID: 22130)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3266311287879944
    2. 'print' → logprob: -2.3266310691833496
    3. '   ' → logprob: -2.4516310691833496
    4. ':
' → logprob: -2.9516310691833496
    5. '#' → logprob: -3.5766310691833496
    6. ')' → logprob: -5.07663106918335
    7. '):
' → logprob: -6.07663106918335
    8. ' print' → logprob: -6.45163106918335
    9. 'a' → logprob: -6.82663106918335
    10. ' :' → logprob: -6.95163106918335

Token 306: 'c' (ID: 66)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0777802467346191
    2. '#' → logprob: -1.4527802467346191
    3. 'if' → logprob: -2.077780246734619
    4. 'a' → logprob: -2.452780246734619
    5. 'e' → logprob: -3.202780246734619
    6. 'c' → logprob: -3.702780246734619
    7. 'ne' → logprob: -4.327780246734619
    8. 'u' → logprob: -4.452780246734619
    9. 'que' → logprob: -4.452780246734619
    10. 'n' → logprob: -4.702780246734619

Token 307: ' a' (ID: 261)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5276573300361633
    2. 'a' → logprob: -1.2776572704315186
    3. ':
' → logprob: -2.7776572704315186
    4. ' a' → logprob: -3.9026572704315186
    5. ' :
' → logprob: -4.277657508850098
    6. '   ' → logprob: -4.777657508850098
    7. ' :' → logprob: -4.902657508850098
    8. '):
' → logprob: -5.152657508850098
    9. '#' → logprob: -5.402657508850098
    10. 'print' → logprob: -6.152657508850098

Token 308: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11384006589651108
    2. '<' → logprob: -2.238840103149414
    3. ' <=' → logprob: -7.113840103149414
    4. '<=' → logprob: -9.613840103149414
    5. ' >=' → logprob: -10.363840103149414
    6. ' <
' → logprob: -10.363840103149414
    7. ' ' → logprob: -10.738840103149414
    8. ' >' → logprob: -11.738840103149414
    9. ':' → logprob: -12.363840103149414
    10. '<int' → logprob: -12.488840103149414

Token 309: ' strict' (ID: 12035)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.21397463977336884
    2. ' inférieur' → logprob: -2.088974714279175
    3. ' <' → logprob: -2.713974714279175
    4. 'inf' → logprob: -6.838974475860596
    5. ' inf' → logprob: -7.213974475860596
    6. 'strict' → logprob: -8.588974952697754
    7. 'infer' → logprob: -9.338974952697754
    8. ' moins' → logprob: -9.463974952697754
    9. 'moins' → logprob: -9.463974952697754
    10. ' strict' → logprob: -9.838974952697754

Token 310: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.00017469677550252527
    2. '<' → logprob: -8.750174522399902
    3. 'e' → logprob: -12.125174522399902
    4. 'ly' → logprob: -12.250174522399902
    5. 'ment' → logprob: -13.250174522399902
    6. ' inférieur' → logprob: -14.000174522399902
    7. 'ements' → logprob: -14.375174522399902
    8. 'a' → logprob: -14.625174522399902
    9. 'emment' → logprob: -15.000174522399902
    10. 'ely' → logprob: -15.125174522399902

Token 311: ' inférieur' (ID: 191498)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.49657338857650757
    2. ' inférieur' → logprob: -0.9965733885765076
    3. ' <' → logprob: -3.9965734481811523
    4. 'inf' → logprob: -6.121573448181152
    5. 'infer' → logprob: -6.746573448181152
    6. ' inf' → logprob: -7.871573448181152
    7. '<
' → logprob: -9.996573448181152
    8. 'moins' → logprob: -11.246573448181152
    9. ' moins' → logprob: -12.121573448181152
    10. ' infer' → logprob: -12.121573448181152

Token 312: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.28639352321624756
    2. 'à' → logprob: -1.4113935232162476
    3. ')' → logprob: -5.911393642425537
    4. 'a' → logprob: -7.286393642425537
    5. '   ' → logprob: -7.286393642425537
    6. ' to' → logprob: -8.536393165588379
    7. '  ' → logprob: -8.911393165588379
    8. '#' → logprob: -9.036393165588379
    9. ' ' → logprob: -9.036393165588379
    10. '):' → logprob: -9.161393165588379

Token 313: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '```' → logprob: -17.625804901123047
    4. '
' → logprob: -17.750804901123047
    5. '=' → logprob: -18.750804901123047
    6. '

' → logprob: -19.250804901123047
    7. ' ' → logprob: -19.313304901123047
    8. '   ' → logprob: -19.625804901123047
    9. '  ' → logprob: -19.625804901123047
    10. ')' → logprob: -19.625804901123047

Token 314: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '```' → logprob: -19.12502098083496
    4. '
' → logprob: -19.87502098083496
    5. '

' → logprob: -20.62502098083496
    6. ')' → logprob: -20.62502098083496
    7. '1' → logprob: -20.75002098083496
    8. '=' → logprob: -21.12502098083496
    9. ' six' → logprob: -21.18752098083496
    10. '  ' → logprob: -21.43752098083496

Token 315: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8662968277931213
    2. ')' → logprob: -1.2412967681884766
    3. '):
' → logprob: -1.2412967681884766
    4. ':' → logprob: -7.366296768188477
    5. '):

' → logprob: -8.241296768188477
    6. ' ):
' → logprob: -8.866296768188477
    7. ' ):' → logprob: -8.866296768188477
    8. ' )' → logprob: -9.241296768188477
    9. '   ' → logprob: -9.866296768188477
    10. ':
' → logprob: -9.866296768188477

Token 316: ' :
' (ID: 10039)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6816129088401794
    2. ':
' → logprob: -1.3066129684448242
    3. 'print' → logprob: -1.6816129684448242
    4. 'if' → logprob: -3.306612968444824
    5. ' print' → logprob: -8.556612968444824
    6. '```' → logprob: -8.681612968444824
    7. '
' → logprob: -9.556612968444824
    8. ' if' → logprob: -9.806612968444824
    9. '   ' → logprob: -9.931612968444824
    10. '#' → logprob: -10.056612968444824

Token 317: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16032394766807556
    2. 'if' → logprob: -1.910323977470398
    3. ' print' → logprob: -9.660324096679688
    4. ' if' → logprob: -10.535324096679688
    5. '#' → logprob: -12.910324096679688
    6. '   ' → logprob: -12.910324096679688
    7. '```' → logprob: -13.035324096679688
    8. '
' → logprob: -13.660324096679688
    9. 'result' → logprob: -15.035324096679688
    10. 'c' → logprob: -15.285324096679688

Token 318: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015608082758262753
    2. ' print' → logprob: -6.501560688018799
    3. '   ' → logprob: -10.001561164855957
    4. '```' → logprob: -12.376561164855957
    5. 'pr' → logprob: -12.876561164855957
    6. '#' → logprob: -13.251561164855957
    7. ' ' → logprob: -13.501561164855957
    8. '	print' → logprob: -13.751561164855957
    9. 'c' → logprob: -14.751561164855957
    10. 'prin' → logprob: -14.876561164855957

Token 319: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0025709024630486965
    2. ' print' → logprob: -6.002571105957031
    3. '   ' → logprob: -9.877571105957031
    4. '#' → logprob: -11.127571105957031
    5. '```' → logprob: -11.752571105957031
    6. 'b' → logprob: -12.127571105957031
    7. ' ' → logprob: -12.877571105957031
    8. 'if' → logprob: -13.002571105957031
    9. 'On' (adapté à ' On') → logprob: -13.252571105957031
    10. 'a' → logprob: -13.252571105957031

Token 320: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004255169536918402
    2. ' print' → logprob: -5.504255294799805
    3. 'aff' → logprob: -9.254255294799805
    4. '#' → logprob: -10.254255294799805
    5. 'pr' → logprob: -10.629255294799805
    6. ' affiche' → logprob: -12.004255294799805
    7. '   ' → logprob: -12.254255294799805
    8. 'display' → logprob: -12.879255294799805
    9. '#print' → logprob: -13.504255294799805
    10. 'prin' → logprob: -13.879255294799805

Token 321: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06868434697389603
    2. 'b' → logprob: -3.1936843395233154
    3. ' ' → logprob: -4.1936845779418945
    4. ' b' → logprob: -5.1936845779418945
    5. 'a' → logprob: -5.4436845779418945
    6. ' a' → logprob: -8.193684577941895
    7. '"' → logprob: -10.193684577941895
    8. '1' → logprob: -10.318684577941895
    9. '(' → logprob: -11.943684577941895
    10. 'print' → logprob: -12.443684577941895

Token 322: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16436044871807098
    2. 'b' → logprob: -2.039360523223877
    3. 'a' → logprob: -3.914360523223877
    4. ' ' → logprob: -7.289360523223877
    5. ' b' → logprob: -7.539360523223877
    6. '"' → logprob: -9.539360046386719
    7. 'int' → logprob: -9.914360046386719
    8. ' a' → logprob: -10.039360046386719
    9. '1' → logprob: -10.289360046386719
    10. '(' → logprob: -11.664360046386719

Token 323: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00019722258730325848
    2. '
' → logprob: -8.625197410583496
    3. ' if' → logprob: -11.125197410583496
    4. 'i' → logprob: -13.500197410583496
    5. '```' → logprob: -14.125197410583496
    6. '

' → logprob: -15.625197410583496
    7. ' 
' → logprob: -16.12519645690918
    8. '
' → logprob: -16.25019645690918
    9. '  
' → logprob: -16.25019645690918
    10. '#' → logprob: -16.50019645690918

Token 324: '#
' (ID: 11240)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -9.088346359931165e-07
    2. ' if' → logprob: -14.750000953674316
    3. '```' → logprob: -14.875000953674316
    4. 'i' → logprob: -16.75
    5. '
' → logprob: -16.875
    6. 'print' → logprob: -18.875
    7. ';if' → logprob: -20.25
    8. 'for' → logprob: -20.5
    9. 'If' → logprob: -20.75
    10. '#' → logprob: -20.75

Token 325: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.5094070477061905e-05
    2. 'i' → logprob: -11.125015258789062
    3. ' if' → logprob: -16.000015258789062
    4. '```' → logprob: -16.500015258789062
    5. '
' → logprob: -17.875015258789062
    6. '#' → logprob: -18.625015258789062
    7. 'ifs' → logprob: -20.250015258789062
    8. 'If' → logprob: -20.625015258789062
    9. 'for' → logprob: -20.750015258789062
    10. 'print' → logprob: -21.250015258789062

Token 326: ' Ceci' (ID: 144699)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.320199877838604e-07
    2. ' if' → logprob: -14.75
    3. '```' → logprob: -18.0
    4. '#' → logprob: -19.625
    5. 'i' → logprob: -19.625
    6. 'print' → logprob: -21.5
    7. 'for' → logprob: -21.5
    8. '
' → logprob: -22.375
    9. 'If' → logprob: -22.625
    10. 'ifs' → logprob: -23.125

Token 327: ' est' (ID: 893)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00978253036737442
    2. ' if' → logprob: -4.634782314300537
    3. '#' → logprob: -11.634782791137695
    4. 'print' → logprob: -12.259782791137695
    5. 'n' → logprob: -12.384782791137695
    6. 'for' → logprob: -13.759782791137695
    7. 'a' → logprob: -13.884782791137695
    8. ':' → logprob: -14.134782791137695
    9. '
' → logprob: -14.134782791137695
    10. '=' → logprob: -14.259782791137695

Token 328: ' réalisé' (ID: 75085)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0012702319072559476
    2. '#' → logprob: -7.626270294189453
    3. ' if' → logprob: -7.876270294189453
    4. 'a' → logprob: -8.251270294189453
    5. ':' → logprob: -10.126270294189453
    6. 'une' → logprob: -10.626270294189453
    7. 'print' → logprob: -11.126270294189453
    8. 'for' → logprob: -11.626270294189453
    9. 'si' → logprob: -11.876270294189453
    10. '```' → logprob: -11.876270294189453

Token 329: ' en' (ID: 469)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.635164754698053e-05
    2. ' if' → logprob: -9.750066757202148
    3. '```' → logprob: -12.875066757202148
    4. ':' → logprob: -13.125066757202148
    5. 'elif' → logprob: -14.625066757202148
    6. '#' → logprob: -14.750066757202148
    7. 'par' → logprob: -14.875066757202148
    8. 'for' → logprob: -15.000066757202148
    9. 'print' → logprob: -15.000066757202148
    10. ',' → logprob: -15.375066757202148

Token 330: ' une' (ID: 2463)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008771585416980088
    2. ' if' → logprob: -7.375877380371094
    3. 'print' → logprob: -9.125877380371094
    4. '```' → logprob: -9.125877380371094
    5. 'a' → logprob: -11.125877380371094
    6. 'python' → logprob: -11.500877380371094
    7. 'si' → logprob: -13.000877380371094
    8. 'for' → logprob: -14.250877380371094
    9. '``' → logprob: -14.375877380371094
    10. '
' → logprob: -14.625877380371094

Token 331: ' seule' (ID: 41983)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012781095691025257
    2. ' if' → logprob: -4.512781143188477
    3. 'print' → logprob: -6.512781143188477
    4. 'si' → logprob: -9.887781143188477
    5. '#' → logprob: -10.387781143188477
    6. '```' → logprob: -10.512781143188477
    7. 'e' → logprob: -10.762781143188477
    8. 'a' → logprob: -11.012781143188477
    9. '
' → logprob: -11.137781143188477
    10. 'f' → logprob: -11.262781143188477

Token 332: ' ligne' (ID: 19583)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.33043593168258667
    2. 'if' → logprob: -1.5804359912872314
    3. ' ligne' → logprob: -3.0804359912872314
    4. 'ligne' → logprob: -3.7054359912872314
    5. 'instruction' → logprob: -6.705435752868652
    6. ' print' → logprob: -6.830435752868652
    7. 'expression' → logprob: -6.830435752868652
    8. ' if' → logprob: -7.080435752868652
    9. 'condition' → logprob: -8.955435752868652
    10. 'a' → logprob: -9.330435752868652

Token 333: ' avec' (ID: 3937)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.896309739408025e-07
    2. ' print' → logprob: -15.125000953674316
    3. '```' → logprob: -15.125000953674316
    4. '
' → logprob: -16.125
    5. 'if' → logprob: -16.125
    6. 'prin' → logprob: -18.625
    7. 'result' → logprob: -20.0
    8. '`' → logprob: -20.125
    9. '#print' → logprob: -20.25
    10. 'output' → logprob: -20.625

Token 334: ' une' (ID: 2463)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.6405310816480778e-05
    2. ' print' → logprob: -11.250016212463379
    3. 'prin' → logprob: -12.750016212463379
    4. 'pr' → logprob: -15.500016212463379
    5. '```' → logprob: -17.000017166137695
    6. 'pri' → logprob: -17.375017166137695
    7. '
' → logprob: -17.750017166137695
    8. 'if' → logprob: -17.750017166137695
    9. 'a' → logprob: -18.000017166137695
    10. 'prit' → logprob: -18.125017166137695

Token 335: ' structure' (ID: 8866)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.5716304410016164e-05
    2. 'prin' → logprob: -10.875035285949707
    3. ' print' → logprob: -11.125035285949707
    4. 'pr' → logprob: -14.125035285949707
    5. '```' → logprob: -15.375035285949707
    6. 'prit' → logprob: -15.625035285949707
    7. '#' → logprob: -15.875035285949707
    8. 'prise' → logprob: -16.125036239624023
    9. 'if' → logprob: -16.500036239624023
    10. 'aff' → logprob: -16.875036239624023

Token 336: ' condition' (ID: 7060)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002833848411682993
    2. ' print' → logprob: -8.625283241271973
    3. 'a' → logprob: -9.500283241271973
    4. 'prin' → logprob: -11.375283241271973
    5. 'b' → logprob: -12.500283241271973
    6. 'pr' → logprob: -12.875283241271973
    7. 'de' → logprob: -13.000283241271973
    8. 'result' → logprob: -13.500283241271973
    9. 'aff' → logprob: -13.750283241271973
    10. 'd' → logprob: -13.875283241271973

Token 337: 'nelle' (ID: 30805)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07994748651981354
    2. 'b' → logprob: -3.3299474716186523
    3. 'a' → logprob: -3.5799474716186523
    4. 'al' → logprob: -5.329947471618652
    5. ' print' → logprob: -5.704947471618652
    6. 'result' → logprob: -7.079947471618652
    7. 'aff' → logprob: -7.454947471618652
    8. 'nelle' → logprob: -7.454947471618652
    9. ' b' → logprob: -7.579947471618652
    10. 'output' → logprob: -7.954947471618652

Token 338: ' compacte' (ID: 186860)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7432603272027336e-06
    2. ' print' → logprob: -13.375001907348633
    3. '
' → logprob: -16.500001907348633
    4. '```' → logprob: -17.125001907348633
    5. 'prin' → logprob: -18.625001907348633
    6. 'result' → logprob: -19.125001907348633
    7. 'pr' → logprob: -20.125001907348633
    8. '(print' → logprob: -20.375001907348633
    9. '#print' → logprob: -20.625001907348633
    10. '.print' → logprob: -20.750001907348633

Token 339: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.339278580620885e-06
    2. ' print' → logprob: -13.625001907348633
    3. '
' → logprob: -14.000001907348633
    4. 'prin' → logprob: -16.500001907348633
    5. '```' → logprob: -16.625001907348633
    6. 'pr' → logprob: -16.875001907348633
    7. 'result' → logprob: -18.875001907348633
    8. '(print' → logprob: -18.875001907348633
    9. '#print' → logprob: -18.875001907348633
    10. '.print' → logprob: -19.125001907348633

Token 340: 'op' (ID: 467)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007344888988882303
    2. ' print' → logprob: -5.507344722747803
    3. 'b' → logprob: -5.757344722747803
    4. ' b' → logprob: -9.882345199584961
    5. 'result' → logprob: -10.507345199584961
    6. 'prin' → logprob: -11.632345199584961
    7. 'output' → logprob: -12.632345199584961
    8. 'a' → logprob: -12.882345199584961
    9. ')' → logprob: -13.257345199584961
    10. 'prix' → logprob: -13.757345199584961

Token 341: 'érateur' (ID: 108528)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3039720058441162
    2. 'b' → logprob: -1.4289720058441162
    3. 'r' → logprob: -4.303972244262695
    4. ' print' → logprob: -5.928972244262695
    5. 'a' → logprob: -6.178972244262695
    6. 'output' → logprob: -7.178972244262695
    7. ' b' → logprob: -7.428972244262695
    8. '```' → logprob: -7.553972244262695
    9. 'ut' → logprob: -8.053972244262695
    10. 'er' → logprob: -8.053972244262695

Token 342: ' ter' (ID: 3069)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7096326947212219
    2. ' =' → logprob: -1.9596326351165771
    3. 'a' → logprob: -2.084632635116577
    4. 'print' → logprob: -2.209632635116577
    5. 'b' → logprob: -3.084632635116577
    6. 'x' → logprob: -4.084632873535156
    7. '1' → logprob: -4.334632873535156
    8. '?' → logprob: -4.834632873535156
    9. 'aff' → logprob: -4.959632873535156
    10. ' print' → logprob: -5.209632873535156

Token 343: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.09669085592031479
    2. 'ary' → logprob: -2.9716908931732178
    3. 'na' → logprob: -3.7216908931732178
    4. 'a' → logprob: -5.471690654754639
    5. 'n' → logprob: -5.721690654754639
    6. 'ern' → logprob: -6.096690654754639
    7. '?' → logprob: -6.221690654754639
    8. '```' → logprob: -7.221690654754639
    9. 'rn' → logprob: -7.346690654754639
    10. 'b' → logprob: -7.471690654754639

Token 344: ')
' (ID: 446)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0038505515549331903
    2. ' print' → logprob: -6.12885046005249
    3. 'b' → logprob: -6.62885046005249
    4. 'a' → logprob: -9.753850936889648
    5. ' b' → logprob: -9.753850936889648
    6. 'output' → logprob: -9.753850936889648
    7. 'result' → logprob: -10.003850936889648
    8. ':' → logprob: -10.628850936889648
    9. 'value' → logprob: -10.753850936889648
    10. ')' → logprob: -10.878850936889648

Token 345: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.704273118884885e-07
    2. ' print' → logprob: -15.125000953674316
    3. 'result' → logprob: -15.500000953674316
    4. 'prin' → logprob: -16.0
    5. '```' → logprob: -18.0
    6. 'pr' → logprob: -18.5
    7. 'output' → logprob: -18.625
    8. '
' → logprob: -19.875
    9. '#print' → logprob: -21.375
    10. 'prix' → logprob: -21.375

Token 346: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.387066125869751
    2. 'a' → logprob: -1.137066125869751
    3. ' b' → logprob: -9.512065887451172
    4. 'b' → logprob: -9.637065887451172
    5. ' ' → logprob: -10.387065887451172
    6. '   ' → logprob: -11.637065887451172
    7. '	a' → logprob: -11.887065887451172
    8. '_a' → logprob: -12.887065887451172
    9. '  ' → logprob: -13.137065887451172
    10. ' ' → logprob: -13.387065887451172

Token 347: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.16029347479343414
    2. '>=' → logprob: -1.910293459892273
    3. ' ' → logprob: -10.285293579101562
    4. '>' → logprob: -11.285293579101562
    5. ' >' → logprob: -12.285293579101562
    6. ')>=' → logprob: -12.410293579101562
    7. 'a' → logprob: -12.660293579101562
    8. ' <' → logprob: -13.035293579101562
    9. ']>=' → logprob: -13.035293579101562
    10. '   ' → logprob: -13.847793579101562

Token 348: ' ' (ID: 220)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '1' → logprob: -20.125001907348633
    4. '3' → logprob: -22.125001907348633
    5. '   ' → logprob: -22.750001907348633
    6. '１３' → logprob: -22.875001907348633
    7. '' → logprob: -23.000001907348633
    8. '۱۳' → logprob: -23.125001907348633
    9. '14' → logprob: -23.375001907348633
    10. '```' → logprob: -23.750001907348633

Token 349: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '1' → logprob: -19.5
    4. '3' → logprob: -21.5
    5. '１３' → logprob: -22.375
    6. '```' → logprob: -22.75
    7. '6' → logprob: -22.875
    8. '۱۳' → logprob: -22.875
    9. '' → logprob: -23.125
    10. '14' → logprob: -23.5

Token 350: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5761060118675232
    2. ':
' → logprob: -0.8261060118675232
    3. 'print' → logprob: -9.326106071472168
    4. ':
' → logprob: -10.326106071472168
    5. ':b' → logprob: -11.201106071472168
    6. 'else' → logprob: -11.701106071472168
    7. ' :
' → logprob: -12.076106071472168
    8. ' print' → logprob: -12.076106071472168
    9. ' :' → logprob: -12.326106071472168
    10. ':

' → logprob: -13.326106071472168

Token 351: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08686251938343048
    2. ' print' → logprob: -2.586862564086914
    3. '   ' → logprob: -4.836862564086914
    4. '	print' → logprob: -11.711862564086914
    5. ' ' → logprob: -14.336862564086914
    6. '```' → logprob: -16.086862564086914
    7. ':' → logprob: -16.711862564086914
    8. 'b' → logprob: -16.961862564086914
    9. '
' → logprob: -17.086862564086914
    10. '.print' → logprob: -17.586862564086914

Token 352: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00021152703266125172
    2. ' print' → logprob: -8.500211715698242
    3. '   ' → logprob: -11.750211715698242
    4. 'b' → logprob: -15.625211715698242
    5. '```' → logprob: -18.625211715698242
    6. '	print' → logprob: -19.625211715698242
    7. ' ' → logprob: -21.250211715698242
    8. ' b' → logprob: -21.375211715698242
    9. '
' → logprob: -21.750211715698242
    10. 'result' → logprob: -21.875211715698242

Token 353: ' Cas' (ID: 8066)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.690834273584187e-05
    2. ' print' → logprob: -10.25003719329834
    3. '   ' → logprob: -13.50003719329834
    4. 'pr' → logprob: -17.625036239624023
    5. '```' → logprob: -17.750036239624023
    6. 'b' → logprob: -18.250036239624023
    7. 'prin' → logprob: -18.250036239624023
    8. '	print' → logprob: -19.625036239624023
    9. 'result' → logprob: -19.875036239624023
    10. 'printf' → logprob: -20.750036239624023

Token 354: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05662115290760994
    2. ' print' → logprob: -3.1816210746765137
    3. 'print' → logprob: -4.306621074676514
    4. '	print' → logprob: -11.181621551513672
    5. '    
' → logprob: -12.181621551513672
    6. '       ' → logprob: -12.181621551513672
    7. ':' → logprob: -12.181621551513672
    8. ' b' → logprob: -12.306621551513672
    9. 'b' → logprob: -12.431621551513672
    10. '   ' → logprob: -12.556621551513672

Token 355: ' a' (ID: 261)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02850383147597313
    2. ' print' → logprob: -3.653503894805908
    3. 'b' → logprob: -6.403503894805908
    4. '   ' → logprob: -7.903503894805908
    5. ' b' → logprob: -8.65350341796875
    6. '	print' → logprob: -14.77850341796875
    7. 'pr' → logprob: -15.40350341796875
    8. 'result' → logprob: -15.40350341796875
    9. ' ' → logprob: -15.77850341796875
    10. '```' → logprob: -16.27850341796875

Token 356: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48066645860671997
    2. 'print' → logprob: -1.1056663990020752
    3. ' print' → logprob: -3.355666399002075
    4. '=' → logprob: -5.730666637420654
    5. ' =' → logprob: -5.730666637420654
    6. ' >=' → logprob: -5.855666637420654
    7. ':' → logprob: -6.230666637420654
    8. ':
' → logprob: -6.605666637420654
    9. '>=' → logprob: -6.855666637420654
    10. ' ==' → logprob: -7.230666637420654

Token 357: ' au' (ID: 2791)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3858920633792877
    2. ' b' → logprob: -1.2608920335769653
    3. '   ' → logprob: -3.760892152786255
    4. 'print' → logprob: -4.385891914367676
    5. ' print' → logprob: -7.385891914367676
    6. '>=' → logprob: -9.260891914367676
    7. 'a' → logprob: -9.760891914367676
    8. ' ' → logprob: -9.885891914367676
    9. ' True' → logprob: -10.260891914367676
    10. '>b' → logprob: -10.510891914367676

Token 358: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.7323316931724548
    2. '13' → logprob: -1.4823317527770996
    3. '   ' → logprob: -2.9823317527770996
    4. ' ' → logprob: -3.1073317527770996
    5. '>=' → logprob: -3.2323317527770996
    6. 'plus' → logprob: -3.7323317527770996
    7. 'b' → logprob: -3.7323317527770996
    8. 'au' → logprob: -3.7323317527770996
    9. ' moins' → logprob: -3.8573317527770996
    10. 'a' → logprob: -3.8573317527770996

Token 359: ' ' (ID: 220)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.002295374870300293
    2. ' ' → logprob: -6.37729549407959
    3. 'b' → logprob: -8.12729549407959
    4. 'a' → logprob: -9.00229549407959
    5. '   ' → logprob: -9.37729549407959
    6. ' b' → logprob: -9.37729549407959
    7. ' a' → logprob: -12.62729549407959
    8. '```' → logprob: -14.37729549407959
    9. '14' → logprob: -15.25229549407959
    10. '  ' → logprob: -15.37729549407959

Token 360: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '1' → logprob: -15.625008583068848
    4. 'a' → logprob: -15.875008583068848
    5. 'b' → logprob: -18.00000762939453
    6. '   ' → logprob: -18.87500762939453
    7. 'tre' → logprob: -19.12500762939453
    8. '```' → logprob: -19.62500762939453
    9. '=' → logprob: -19.87500762939453
    10. '3' → logprob: -20.00000762939453

Token 361: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47544389963150024
    2. '   ' → logprob: -0.9754438996315002
    3. ' print' → logprob: -6.6004438400268555
    4. '	print' → logprob: -13.100443840026855
    5. '```' → logprob: -13.475443840026855
    6. '
' → logprob: -13.475443840026855
    7. ' ' → logprob: -14.850443840026855
    8. '       ' → logprob: -15.350443840026855
    9. '    
' → logprob: -15.475443840026855
    10. ':' → logprob: -15.600443840026855

Token 362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2019372582435608
    2. 'print' → logprob: -1.701937198638916
    3. ' print' → logprob: -7.576937198638916
    4. '```' → logprob: -11.826937675476074
    5. '	print' → logprob: -13.326937675476074
    6. '       ' → logprob: -13.826937675476074
    7. ' ' → logprob: -14.576937675476074
    8. '
' → logprob: -14.701937675476074
    9. '  ' → logprob: -14.701937675476074
    10. '   ' → logprob: -15.951937675476074

Token 363: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007500672363676131
    2. '   ' → logprob: -7.2507500648498535
    3. ' print' → logprob: -10.125750541687012
    4. '	print' → logprob: -16.500749588012695
    5. '```' → logprob: -18.500749588012695
    6. ' ' → logprob: -19.375749588012695
    7. 'pr' → logprob: -19.375749588012695
    8. '
' → logprob: -20.000749588012695
    9. 'prin' → logprob: -20.375749588012695
    10. '    
' → logprob: -20.875749588012695

Token 364: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023006796836853
    2. '=' → logprob: -2.3502299785614014
    3. 's' → logprob: -11.72523021697998
    4. '=b' → logprob: -12.10023021697998
    5. 'b' → logprob: -12.35023021697998
    6. ' ' → logprob: -13.22523021697998
    7. ' b' → logprob: -13.97523021697998
    8. '   ' → logprob: -13.97523021697998
    9. 'print' → logprob: -14.10023021697998
    10. ':' → logprob: -14.85023021697998

Token 365: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03804344683885574
    2. ' b' → logprob: -3.28804349899292
    3. 'str' → logprob: -14.163043022155762
    4. ' ' → logprob: -14.538043022155762
    5. '   ' → logprob: -14.663043022155762
    6. '	b' → logprob: -15.538043022155762
    7. ' str' → logprob: -15.663043022155762
    8. ' ' → logprob: -17.163043975830078
    9. '  ' → logprob: -18.038043975830078
    10. '_b' → logprob: -18.288043975830078

Token 366: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.00039730319986119866
    2. '
' → logprob: -7.875397205352783
    3. ' elif' → logprob: -11.875397682189941
    4. 'if' → logprob: -12.000397682189941
    5. 'else' → logprob: -13.250397682189941
    6. 'el' → logprob: -13.875397682189941
    7. '#elif' → logprob: -14.625397682189941
    8. '    
' → logprob: -15.250397682189941
    9. 'elseif' → logprob: -15.375397682189941
    10. 'elsif' → logprob: -15.875397682189941

Token 367: 'else' (ID: 2807)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -5.12127808178775e-05
    2. ' elif' → logprob: -10.125051498413086
    3. '
' → logprob: -12.000051498413086
    4. 'el' → logprob: -13.000051498413086
    5. 'else' → logprob: -13.125051498413086
    6. '#elif' → logprob: -15.625051498413086
    7. 'eli' → logprob: -16.000051498413086
    8. '    
' → logprob: -16.375051498413086
    9. 'els' → logprob: -16.500051498413086
    10. 'elseif' → logprob: -16.625051498413086

Token 368: ':
' (ID: 734)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3678889274597168
    2. ':' → logprob: -1.3678889274597168
    3. 'if' → logprob: -3.492888927459717
    4. ':
' → logprob: -3.867888927459717
    5. '   ' → logprob: -6.992888927459717
    6. ' :' → logprob: -7.242888927459717
    7. ' :
' → logprob: -8.617889404296875
    8. ' ' → logprob: -11.867889404296875
    9. ',' → logprob: -12.242889404296875
    10. ' output' → logprob: -12.492889404296875

Token 369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5249515771865845
    2. ' output' → logprob: -1.3999515771865845
    3. ' if' → logprob: -2.149951457977295
    4. 'output' → logprob: -3.649951457977295
    5. 'if' → logprob: -4.399951457977295
    6. '0' → logprob: -6.149951457977295
    7. ' b' → logprob: -6.399951457977295
    8. 'b' → logprob: -6.649951457977295
    9. ' ' → logprob: -7.399951457977295
    10. '    
' → logprob: -8.024951934814453

Token 370: ' if' (ID: 538)
  Prédit: ' output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' output' → logprob: -0.626144528388977
    2. 'output' → logprob: -1.001144528388977
    3. '   ' → logprob: -2.8761444091796875
    4. 'if' (adapté à ' if') → logprob: -4.1261444091796875
    5. '0' → logprob: -4.2511444091796875
    6. ' if' → logprob: -4.8761444091796875
    7. ' ' → logprob: -6.3761444091796875
    8. ' b' → logprob: -7.6261444091796875
    9. 'b' → logprob: -7.6261444091796875
    10. '    
' → logprob: -8.126144409179688

Token 371: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.474439799785614
    2. ' a' → logprob: -0.974439799785614
    3. ' ' → logprob: -7.97443962097168
    4. '   ' → logprob: -11.47443962097168
    5. '6' → logprob: -12.34943962097168
    6. '	a' → logprob: -13.34943962097168
    7. ' ' → logprob: -14.59943962097168
    8. '13' → logprob: -14.97443962097168
    9. '16' → logprob: -15.22443962097168
    10. '12' → logprob: -15.34943962097168

Token 372: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.016150614246726036
    2. '>=' → logprob: -4.14115047454834
    3. ' ' → logprob: -9.26615047454834
    4. '   ' → logprob: -12.01615047454834
    5. '    ' → logprob: -12.39115047454834
    6. ' <' → logprob: -12.76615047454834
    7. ']>=' → logprob: -13.39115047454834
    8. ' ' → logprob: -13.64115047454834
    9. '[' → logprob: -13.76615047454834
    10. ')>=' → logprob: -13.89115047454834

Token 373: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.002475777640938759
    2. ' ' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.50247573852539
    4. '
' → logprob: -18.62747573852539
    5. '```' → logprob: -18.62747573852539
    6. '  ' → logprob: -18.87747573852539
    7. '۶' → logprob: -19.43997573852539
    8. '٦' → logprob: -19.75247573852539
    9. '６' → logprob: -20.37747573852539
    10. '' → logprob: -20.37747573852539

Token 374: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -20.0000057220459
    4. '
' → logprob: -20.1250057220459
    5. '٦' → logprob: -20.3750057220459
    6. '６' → logprob: -20.5000057220459
    7. '۶' → logprob: -20.5000057220459
    8. '৬' → logprob: -20.6250057220459
    9. '६' → logprob: -20.8125057220459
    10. '```' → logprob: -20.9375057220459

Token 375: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07936537265777588
    2. ':
' → logprob: -2.5793652534484863
    3. '   ' → logprob: -7.704365253448486
    4. '       ' → logprob: -11.204365730285645
    5. ' :' → logprob: -12.454365730285645
    6. '):
' → logprob: -13.079365730285645
    7. ' :
' → logprob: -13.204365730285645
    8. ':

' → logprob: -13.829365730285645
    9. ':\' → logprob: -14.329365730285645
    10. ':
' → logprob: -14.454365730285645

Token 376: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47540727257728577
    2. '   ' → logprob: -1.1004072427749634
    3. 'output' → logprob: -3.475407361984253
    4. ' output' → logprob: -4.225407123565674
    5. '	output' → logprob: -9.850407600402832
    6. '
' → logprob: -13.100407600402832
    7. '	' → logprob: -13.475407600402832
    8. '_output' → logprob: -13.850407600402832
    9. '           ' → logprob: -13.975407600402832
    10. '	   ' → logprob: -14.225407600402832

Token 377: ' #' (ID: 1069)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.6323941946029663
    2. '       ' → logprob: -1.2573941946029663
    3. ' output' → logprob: -1.7573941946029663
    4. '   ' → logprob: -4.507394313812256
    5. 'b' → logprob: -7.632394313812256
    6. ' b' → logprob: -8.632393836975098
    7. '	output' → logprob: -9.882393836975098
    8. ' ' → logprob: -11.382393836975098
    9. '           ' → logprob: -11.757393836975098
    10. '_output' → logprob: -12.257393836975098

Token 378: ' Cas' (ID: 8066)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.013443739153444767
    2. ' output' → logprob: -4.638443946838379
    3. '   ' → logprob: -5.888443946838379
    4. '       ' → logprob: -7.013443946838379
    5. '	output' → logprob: -12.888443946838379
    6. '
' → logprob: -13.013443946838379
    7. ' ' → logprob: -13.138443946838379
    8. '  ' → logprob: -14.138443946838379
    9. '           ' → logprob: -15.013443946838379
    10. '    ' → logprob: -15.138443946838379

Token 379: ' où' (ID: 15113)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15553735196590424
    2. '   ' → logprob: -2.7805373668670654
    3. ' output' → logprob: -3.2805373668670654
    4. '           ' → logprob: -3.7805373668670654
    5. 'output' → logprob: -3.9055373668670654
    6. '    ' → logprob: -7.655537128448486
    7. '        ' → logprob: -7.655537128448486
    8. '	output' → logprob: -8.780537605285645
    9. '	   ' → logprob: -9.530537605285645
    10. ' ' → logprob: -9.780537605285645

Token 380: ' a' (ID: 261)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.4826139509677887
    2. ' output' → logprob: -0.9826139211654663
    3. 'b' → logprob: -5.107614040374756
    4. ' b' → logprob: -6.107614040374756
    5. '   ' → logprob: -8.732613563537598
    6. ' ' → logprob: -10.857613563537598
    7. '       ' → logprob: -11.232613563537598
    8. '	output' → logprob: -11.732613563537598
    9. '(output' → logprob: -12.732613563537598
    10. '    ' → logprob: -12.732613563537598

Token 381: ' est' (ID: 893)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9939699172973633
    2. ' =' → logprob: -1.4939699172973633
    3. '=' → logprob: -1.9939699172973633
    4. 'output' → logprob: -2.3689699172973633
    5. '       ' → logprob: -2.6189699172973633
    6. ' output' → logprob: -2.6189699172973633
    7. ' >=' → logprob: -4.368969917297363
    8. '           ' → logprob: -4.743969917297363
    9. '>=' → logprob: -6.118969917297363
    10. '    ' → logprob: -6.868969917297363

Token 382: ' au' (ID: 2791)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.039467062801122665
    2. ' b' → logprob: -3.2894670963287354
    3. '   ' → logprob: -6.789466857910156
    4. 'output' → logprob: -8.789466857910156
    5. ' ' → logprob: -9.414466857910156
    6. ' output' → logprob: -10.039466857910156
    7. '(b' → logprob: -11.289466857910156
    8. '  ' → logprob: -12.539466857910156
    9. '	b' → logprob: -13.164466857910156
    10. ' (' → logprob: -14.039466857910156

Token 383: ' moins' (ID: 15924)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.010056142695248127
    2. '6' → logprob: -5.635056018829346
    3. ' b' → logprob: -6.010056018829346
    4. '1' → logprob: -6.510056018829346
    5. '12' → logprob: -6.760056018829346
    6. '2' → logprob: -8.385056495666504
    7. '   ' → logprob: -8.510056495666504
    8. '7' → logprob: -8.635056495666504
    9. '5' → logprob: -8.760056495666504
    10. 'int' → logprob: -9.135056495666504

Token 384: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.033648353070020676
    2. ' ' → logprob: -3.4086482524871826
    3. '   ' → logprob: -13.158648490905762
    4. '     ' → logprob: -15.533648490905762
    5. '  ' → logprob: -16.408647537231445
    6. '       ' → logprob: -16.658647537231445
    7. '    ' → logprob: -16.908647537231445
    8. ' b' → logprob: -17.033647537231445
    9. '```' → logprob: -17.158647537231445
    10. 'b' → logprob: -17.283647537231445

Token 385: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0009680375806055963
    2. ' ' → logprob: -7.000967979431152
    3. 'b' → logprob: -10.250967979431152
    4. '0' → logprob: -11.250967979431152
    5. ' b' → logprob: -13.500967979431152
    6. '   ' → logprob: -13.500967979431152
    7. '13' → logprob: -13.500967979431152
    8. 'a' → logprob: -14.000967979431152
    9. '  ' → logprob: -14.500967979431152
    10. '1' → logprob: -14.625967979431152

Token 386: ' mais' (ID: 2899)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012940469896420836
    2. '   ' → logprob: -7.626294136047363
    3. 'output' → logprob: -7.751294136047363
    4. ' output' → logprob: -8.376294136047363
    5. '           ' → logprob: -10.376294136047363
    6. ',' → logprob: -10.501294136047363
    7. ':' → logprob: -10.626294136047363
    8. '      ' → logprob: -11.751294136047363
    9. '        
' → logprob: -11.876294136047363
    10. ' and' → logprob: -12.126294136047363

Token 387: ' strict' (ID: 12035)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6036770939826965
    2. 'moins' → logprob: -1.2286770343780518
    3. 'inf' → logprob: -2.4786770343780518
    4. ' moins' → logprob: -3.6036770343780518
    5. ' inférieur' → logprob: -3.8536770343780518
    6. 'infer' → logprob: -4.603677272796631
    7. ' <' → logprob: -4.603677272796631
    8. 'strict' → logprob: -5.853677272796631
    9. ' inf' → logprob: -6.228677272796631
    10. 'pas' → logprob: -6.853677272796631

Token 388: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.0008132012444548309
    2. '   ' → logprob: -8.375813484191895
    3. 'ly' → logprob: -8.375813484191895
    4. 'lement' → logprob: -9.000813484191895
    5. 'rement' → logprob: -9.750813484191895
    6. 'ément' → logprob: -10.250813484191895
    7. ' inférieur' → logprob: -10.250813484191895
    8. 'ment' → logprob: -10.625813484191895
    9. '<' → logprob: -10.750813484191895
    10. 'emment' → logprob: -11.375813484191895

Token 389: ' inférieur' (ID: 191498)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.10946504771709442
    2. 'moins' → logprob: -2.9844651222229004
    3. 'infer' → logprob: -3.7344651222229004
    4. '<' → logprob: -3.8594651222229004
    5. ' inférieur' → logprob: -4.8594651222229
    6. ' inf' → logprob: -9.109464645385742
    7. '<
' → logprob: -9.359464645385742
    8. 'plus' → logprob: -9.484464645385742
    9. ' moins' → logprob: -10.609464645385742
    10. ' <' → logprob: -10.734464645385742

Token 390: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.19099365174770355
    2. 'à' → logprob: -2.190993547439575
    3. '       ' → logprob: -3.440993547439575
    4. '   ' → logprob: -3.565993547439575
    5. '    ' → logprob: -8.190993309020996
    6. 'a' → logprob: -8.315993309020996
    7. ' a' → logprob: -8.940993309020996
    8. ' ' → logprob: -8.940993309020996
    9. '        ' → logprob: -8.940993309020996
    10. '=' → logprob: -9.065993309020996

Token 391: ' ' (ID: 220)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '1' → logprob: -17.12504005432129
    4. '3' → logprob: -21.62504005432129
    5. '   ' → logprob: -21.87504005432129
    6. '14' → logprob: -21.87504005432129
    7. '１３' → logprob: -22.62504005432129
    8. '۱۳' → logprob: -22.75004005432129
    9. '  ' → logprob: -23.12504005432129
    10. 'l' → logprob: -23.87504005432129

Token 392: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.500000953674316
    3. '1' → logprob: -15.750000953674316
    4. '12' → logprob: -19.625
    5. '14' → logprob: -21.0
    6. '=' → logprob: -21.25
    7. '   ' → logprob: -21.25
    8. '3' → logprob: -21.375
    9. 'a' → logprob: -21.5
    10. '10' → logprob: -22.125

Token 393: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004546658135950565
    2. 'output' → logprob: -5.504546642303467
    3. ' output' → logprob: -8.254547119140625
    4. '   ' → logprob: -9.129547119140625
    5. '
' → logprob: -10.129547119140625
    6. '           ' → logprob: -10.629547119140625
    7. '        
' → logprob: -11.379547119140625
    8. ',' → logprob: -12.129547119140625
    9. '	output' → logprob: -12.879547119140625
    10. '      ' → logprob: -13.004547119140625

Token 394: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005046132951974869
    2. 'output' → logprob: -5.380046367645264
    3. ' output' → logprob: -8.005045890808105
    4. '   ' → logprob: -9.880045890808105
    5. '	' → logprob: -10.880045890808105
    6. '	output' → logprob: -11.505045890808105
    7. '           ' → logprob: -12.505045890808105
    8. '
' → logprob: -13.505045890808105
    9. '	   ' → logprob: -13.505045890808105
    10. '        
' → logprob: -13.880045890808105

Token 395: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.18379804491996765
    2. '       ' → logprob: -1.93379807472229
    3. ' output' → logprob: -3.80879807472229
    4. '   ' → logprob: -6.808797836303711
    5. '	output' → logprob: -11.433797836303711
    6. ' ' → logprob: -13.058797836303711
    7. '
' → logprob: -13.558797836303711
    8. '_output' → logprob: -13.683797836303711
    9. '           ' → logprob: -14.308797836303711
    10. 'Output' → logprob: -14.433797836303711

Token 396: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687121868133545
    2. '=' → logprob: -1.1368712186813354
    3. ' ' → logprob: -16.136871337890625
    4. '=b' → logprob: -17.136871337890625
    5. ' =
' → logprob: -19.511871337890625
    6. '   ' → logprob: -19.511871337890625
    7. '＝' → logprob: -19.886871337890625
    8. '=
' → logprob: -19.886871337890625
    9. ' ' → logprob: -20.136871337890625
    10. '=

' → logprob: -20.636871337890625

Token 397: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31326213479042053
    2. ' b' → logprob: -1.3132621049880981
    3. ' ' → logprob: -15.563261985778809
    4. '	b' → logprob: -16.313262939453125
    5. ' ' → logprob: -16.688262939453125
    6. '   ' → logprob: -17.063262939453125
    7. '_b' → logprob: -17.688262939453125
    8. '(b' → logprob: -17.688262939453125
    9. ' ' → logprob: -18.563262939453125
    10. ' б' → logprob: -18.938262939453125

Token 398: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.38690343499183655
    2. '//' → logprob: -1.1369034051895142
    3. ' ' → logprob: -11.261903762817383
    4. ' ' → logprob: -11.386903762817383
    5. '   ' → logprob: -12.011903762817383
    6. ' //
' → logprob: -14.261903762817383
    7. '#' → logprob: -15.261903762817383
    8. '```' → logprob: -15.511903762817383
    9. ')' → logprob: -15.636903762817383
    10. '"' → logprob: -15.886903762817383

Token 399: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -19.875003814697266
    4. '  ' → logprob: -21.375003814697266
    5. '```' → logprob: -21.500003814697266
    6. '
' → logprob: -21.750003814697266
    7. '２' → logprob: -21.875003814697266
    8. '۲' → logprob: -22.000003814697266
    9. '২' → logprob: -23.875003814697266
    10. '=' → logprob: -24.000003814697266

Token 400: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -19.125003814697266
    4. '２' → logprob: -19.375003814697266
    5. '۲' → logprob: -19.500003814697266
    6. '```' → logprob: -20.125003814697266
    7. '  ' → logprob: -20.750003814697266
    8. '
' → logprob: -20.875003814697266
    9. '২' → logprob: -21.375003814697266
    10. '=' → logprob: -21.562503814697266

Token 401: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16096441447734833
    2. 'else' → logprob: -1.9109643697738647
    3. ' else' → logprob: -7.285964488983154
    4. '	else' → logprob: -10.035964012145996
    5. '
' → logprob: -11.535964012145996
    6. '    
' → logprob: -14.160964012145996
    7. 'elif' → logprob: -16.410964965820312
    8. '```' → logprob: -16.410964965820312
    9. '  ' → logprob: -16.535964965820312
    10. '       ' → logprob: -16.785964965820312

Token 402: ' #' (ID: 1069)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.16067200899124146
    2. '   ' → logprob: -1.9106719493865967
    3. ' else' → logprob: -7.785672187805176
    4. '
' → logprob: -10.660672187805176
    5. '	else' → logprob: -11.785672187805176
    6. '    
' → logprob: -14.160672187805176
    7. '}else' → logprob: -16.41067123413086
    8. '```' → logprob: -16.41067123413086
    9. 'elif' → logprob: -16.53567123413086
    10. '   
' → logprob: -17.53567123413086

Token 403: ' //' (ID: 602)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.33176106214523315
    2. '   ' → logprob: -1.331761121749878
    3. '
' → logprob: -4.331760883331299
    4. ' else' → logprob: -5.706760883331299
    5. '    
' → logprob: -7.081760883331299
    6. 'print' → logprob: -7.581760883331299
    7. '0' → logprob: -9.206761360168457
    8. '  
' → logprob: -9.581761360168457
    9. '   
' → logprob: -9.956761360168457
    10. '        
' → logprob: -10.331761360168457

Token 404: ' signifie' (ID: 81149)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 405: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.05382177606225014
    2. 'une' → logprob: -3.3038218021392822
    3. ' division' → logprob: -5.053821563720703
    4. 'div' → logprob: -5.678821563720703
    5. ' une' → logprob: -5.678821563720703
    6. 'la' → logprob: -6.303821563720703
    7. ' la' → logprob: -7.553821563720703
    8. '#' → logprob: -10.553821563720703
    9. '"' → logprob: -10.928821563720703
    10. ' ' → logprob: -11.678821563720703

Token 406: ' entière' (ID: 61583)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.10854795575141907
    2. ' entière' → logprob: -2.3585479259490967
    3. 'enti' → logprob: -5.733548164367676
    4. '_ent' → logprob: -6.608548164367676
    5. '   ' → logprob: -6.858548164367676
    6. '<|end|>' → logprob: -7.358548164367676
    7. ' ent' → logprob: -7.858548164367676
    8. 'int' → logprob: -7.858548164367676
    9. '	ent' → logprob: -8.358548164367676
    10. '(ent' → logprob: -8.733548164367676

Token 407: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08993969857692719
    2. 'else' → logprob: -2.464939594268799
    3. ' else' → logprob: -6.964939594268799
    4. '
' → logprob: -10.339940071105957
    5. '	else' → logprob: -11.089940071105957
    6. '    
' → logprob: -12.214940071105957
    7. '   
' → logprob: -14.714940071105957
    8. '```' → logprob: -14.714940071105957
    9. 'elif' → logprob: -15.214940071105957
    10. '  
' → logprob: -15.464940071105957

Token 408: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47502973675727844
    2. 'else' → logprob: -0.975029706954956
    3. ' else' → logprob: -6.975029945373535
    4. '	else' → logprob: -10.975029945373535
    5. '    
' → logprob: -16.35002899169922
    6. '```' → logprob: -16.97502899169922
    7. '
' → logprob: -17.60002899169922
    8. 'elif' → logprob: -17.72502899169922
    9. '_else' → logprob: -17.85002899169922
    10. '}else' → logprob: -17.97502899169922

Token 409: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.02222524583339691
    2. '   ' → logprob: -3.8972251415252686
    3. ' else' → logprob: -6.397225379943848
    4. '	else' → logprob: -11.147225379943848
    5. ' ' → logprob: -14.522225379943848
    6. '
' → logprob: -15.897225379943848
    7. '  ' → logprob: -16.14722442626953
    8. '_else' → logprob: -16.14722442626953
    9. '    
' → logprob: -16.27222442626953
    10. '       ' → logprob: -16.52222442626953

Token 410: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2544366121292114
    2. ':
' → logprob: -1.5044366121292114
    3. '   ' → logprob: -6.379436492919922
    4. '       ' → logprob: -7.129436492919922
    5. 'output' → logprob: -13.004436492919922
    6. '
' → logprob: -13.129436492919922
    7. ':

' → logprob: -14.504436492919922
    8. ' :
' → logprob: -14.879436492919922
    9. ' :' → logprob: -15.004436492919922
    10. ':
' → logprob: -15.004436492919922

Token 411: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6962676644325256
    2. '   ' → logprob: -0.9462676644325256
    3. 'output' → logprob: -2.196267604827881
    4. ' output' → logprob: -6.196267604827881
    5. '	output' → logprob: -9.321268081665039
    6. '    ' → logprob: -11.946268081665039
    7. '
' → logprob: -12.696268081665039
    8. '           ' → logprob: -12.946268081665039
    9. '$output' → logprob: -13.446268081665039
    10. '     ' → logprob: -13.446268081665039

Token 412: ' #' (ID: 1069)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.20358285307884216
    2. '0' → logprob: -1.7035828828811646
    3. ' output' → logprob: -6.328582763671875
    4. '   ' → logprob: -8.328582763671875
    5. '       ' → logprob: -9.578582763671875
    6. ' ' → logprob: -9.578582763671875
    7. '	output' → logprob: -13.953582763671875
    8. 'Output' → logprob: -14.578582763671875
    9. '  ' → logprob: -14.953582763671875
    10. 'out' → logprob: -15.078582763671875

Token 413: ' Cas' (ID: 8066)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.009544753469526768
    2. ' output' → logprob: -4.884544849395752
    3. '   ' → logprob: -6.259544849395752
    4. '       ' → logprob: -11.509544372558594
    5. '	output' → logprob: -12.384544372558594
    6. '  ' → logprob: -12.509544372558594
    7. ' ' → logprob: -12.634544372558594
    8. '
' → logprob: -13.259544372558594
    9. 'Output' → logprob: -15.134544372558594
    10. '    ' → logprob: -15.134544372558594

Token 414: ' où' (ID: 15113)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5088914632797241
    2. '   ' → logprob: -1.2588914632797241
    3. ' output' → logprob: -2.8838915824890137
    4. 'output' → logprob: -2.8838915824890137
    5. '  ' → logprob: -7.508891582489014
    6. '    ' → logprob: -7.508891582489014
    7. ' ' → logprob: -7.508891582489014
    8. '        ' → logprob: -7.758891582489014
    9. '           ' → logprob: -8.133891105651855
    10. '	output' → logprob: -8.633891105651855

Token 415: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.020904215052723885
    2. ' a' → logprob: -4.020904064178467
    3. ' True' → logprob: -7.020904064178467
    4. 'output' → logprob: -7.270904064178467
    5. ' output' → logprob: -7.645904064178467
    6. '   ' → logprob: -8.270904541015625
    7. ' ' → logprob: -8.645904541015625
    8. 'True' → logprob: -8.645904541015625
    9. '0' → logprob: -9.645904541015625
    10. '  ' → logprob: -11.770904541015625

Token 416: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.32657015323638916
    2. '<' → logprob: -1.5765701532363892
    3. ' est' → logprob: -2.8265700340270996
    4. ' is' → logprob: -4.7015700340271
    5. '   ' → logprob: -6.3265700340271
    6. 'est' → logprob: -7.2015700340271
    7. ' ' → logprob: -7.3265700340271
    8. 's' → logprob: -9.326570510864258
    9. '  ' → logprob: -9.951570510864258
    10. 'is' → logprob: -9.951570510864258

Token 417: ' strict' (ID: 12035)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0072823031805455685
    2. 'strict' → logprob: -5.257282257080078
    3. ' ' → logprob: -7.257282257080078
    4. '<' → logprob: -7.382282257080078
    5. '   ' → logprob: -7.632282257080078
    6. 'inf' → logprob: -9.132282257080078
    7. '    ' → logprob: -10.632282257080078
    8. 'moins' → logprob: -10.757282257080078
    9. 'a' → logprob: -10.882282257080078
    10. ' inférieur' → logprob: -11.632282257080078

Token 418: 'ement' (ID: 962)
  Prédit: 'ement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ement' → logprob: -0.6006640195846558
    2. 'ict' → logprob: -0.9756640195846558
    3. 'iquement' → logprob: -3.3506641387939453
    4. 'rement' → logprob: -4.475664138793945
    5. 'ment' → logprob: -4.600664138793945
    6. 'it' → logprob: -5.350664138793945
    7. 'irement' → logprob: -5.975664138793945
    8. 'èrement' → logprob: -5.975664138793945
    9. 'ic' → logprob: -6.100664138793945
    10. '>' → logprob: -6.725664138793945

Token 419: ' inférieur' (ID: 191498)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.06159393861889839
    2. ' inférieur' → logprob: -3.561594009399414
    3. 'infer' → logprob: -4.061594009399414
    4. '<' → logprob: -4.311594009399414
    5. '0' → logprob: -8.186594009399414
    6. ' inf' → logprob: -8.811594009399414
    7. 'moins' → logprob: -9.561594009399414
    8. ' <' → logprob: -10.061594009399414
    9. '_inf' → logprob: -10.686594009399414
    10. '<int' → logprob: -10.811594009399414

Token 420: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.31090468168258667
    2. 'à' → logprob: -1.5609047412872314
    3. '   ' → logprob: -3.1859047412872314
    4. '       ' → logprob: -4.435904502868652
    5. 'a' → logprob: -6.060904502868652
    6. 'to' → logprob: -7.685904502868652
    7. ' to' → logprob: -7.810904502868652
    8. ' a' → logprob: -8.185904502868652
    9. '0' → logprob: -8.685904502868652
    10. '  ' → logprob: -8.935904502868652

Token 421: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0067154900170862675
    2. ' ' → logprob: -5.006715297698975
    3. '   ' → logprob: -17.631715774536133
    4. '  ' → logprob: -18.006715774536133
    5. '```' → logprob: -18.256715774536133
    6. ' ' → logprob: -18.944215774536133
    7. ' six' → logprob: -19.256715774536133
    8. '0' → logprob: -19.569215774536133
    9. '۶' → logprob: -19.569215774536133
    10. '٦' → logprob: -19.631715774536133

Token 422: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -18.5
    4. '0' → logprob: -19.625
    5. '   ' → logprob: -20.0
    6. '۶' → logprob: -20.375
    7. '٦' → logprob: -20.5
    8. '1' → logprob: -21.0
    9. '' → logprob: -21.4375
    10. '
' → logprob: -21.4375

Token 423: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04705877602100372
    2. 'output' → logprob: -3.2970588207244873
    3. '       ' → logprob: -4.797058582305908
    4. ' output' → logprob: -7.547058582305908
    5. '
' → logprob: -8.672059059143066
    6. '  ' → logprob: -11.797059059143066
    7. '    
' → logprob: -12.172059059143066
    8. '	output' → logprob: -12.547059059143066
    9. '        
' → logprob: -13.422059059143066
    10. ' ' → logprob: -13.422059059143066

Token 424: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03934019058942795
    2. 'output' → logprob: -3.4143402576446533
    3. '       ' → logprob: -5.414340019226074
    4. ' output' → logprob: -6.789340019226074
    5. '	output' → logprob: -10.039340019226074
    6. '
' → logprob: -11.039340019226074
    7. '    
' → logprob: -11.289340019226074
    8. '  ' → logprob: -11.414340019226074
    9. '    ' → logprob: -12.414340019226074
    10. '        
' → logprob: -12.664340019226074

Token 425: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -1.8908587662735954e-05
    2. ' output' → logprob: -11.000019073486328
    3. '       ' → logprob: -13.875019073486328
    4. '0' → logprob: -14.000019073486328
    5. '   ' → logprob: -14.750019073486328
    6. '	output' → logprob: -18.750019073486328
    7. 'out' → logprob: -18.875019073486328
    8. 'Output' → logprob: -19.250019073486328
    9. '
' → logprob: -19.375019073486328
    10. '_output' → logprob: -19.500019073486328

Token 426: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759404897689819
    2. ' =' → logprob: -0.8259404897689819
    3. ' ' → logprob: -14.575940132141113
    4. ' =
' → logprob: -15.575940132141113
    5. '_' → logprob: -16.20094108581543
    6. 's' → logprob: -16.20094108581543
    7. ')' → logprob: -16.45094108581543
    8. '=
' → logprob: -17.57594108581543
    9. 'output' → logprob: -17.70094108581543
    10. '_=' → logprob: -17.70094108581543

Token 427: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00861456897109747
    2. ' ' → logprob: -4.758614540100098
    3. ' ' → logprob: -17.883615493774414
    4. '   ' → logprob: -20.758615493774414
    5. '۰' → logprob: -21.258615493774414
    6. '00' → logprob: -21.258615493774414
    7. '  ' → logprob: -21.633615493774414
    8. '000' → logprob: -22.508615493774414
    9. ' ' → logprob: -23.008615493774414
    10. '０' → logprob: -23.446115493774414

Token 428: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '00' → logprob: -24.0
    4. '۰' → logprob: -24.125
    5. '000' → logprob: -24.5
    6. '０' → logprob: -25.625
    7. '٠' → logprob: -26.625
    8. '   ' → logprob: -27.0
    9. ' ' → logprob: -27.0
    10. '०' → logprob: -27.875

Token 429: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009128939709626138
    2. '
' → logprob: -7.000912666320801
    3. '
' → logprob: -14.3759126663208
    4. ' print' → logprob: -14.7509126663208
    5. '```' → logprob: -15.5009126663208
    6. '#print' → logprob: -17.000913619995117
    7. 'output' → logprob: -17.125913619995117
    8. '

' → logprob: -17.250913619995117
    9. ')
' → logprob: -17.875913619995117
    10. '#' → logprob: -17.875913619995117

Token 430: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.816093228830141e-06
    2. '
' → logprob: -12.87500286102295
    3. '```' → logprob: -15.75000286102295
    4. ' print' → logprob: -17.375001907348633
    5. 'output' → logprob: -18.500001907348633
    6. '#print' → logprob: -18.875001907348633
    7. '\n' → logprob: -19.250001907348633
    8. '
' → logprob: -19.875001907348633
    9. '  
' → logprob: -20.625001907348633
    10. '#' → logprob: -20.750001907348633

Token 431: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. 'pr' → logprob: -17.875
    3. ' print' → logprob: -18.0
    4. 'prin' → logprob: -18.5
    5. 'pri' → logprob: -20.125
    6. '```' → logprob: -20.25
    7. '#print' → logprob: -21.0
    8. '#' → logprob: -21.625
    9. 'p' → logprob: -21.75
    10. 'output' → logprob: -21.75

Token 432: 'iche' (ID: 7509)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6554691791534424
    2. 'iche' → logprob: -0.9054691791534424
    3. '#' → logprob: -2.9054691791534424
    4. 'icher' → logprob: -4.655468940734863
    5. 'ich' → logprob: -4.905468940734863
    6. 'f' → logprob: -6.780468940734863
    7. '#print' → logprob: -6.780468940734863
    8. 'ic' → logprob: -7.155468940734863
    9. 'ichage' → logprob: -7.530468940734863
    10. 'r' → logprob: -8.155468940734863

Token 433: ' la' (ID: 557)
  Prédit: '(output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.04053694009780884
    2. '(' → logprob: -3.290536880493164
    3. 'output' → logprob: -6.040536880493164
    4. 'print' → logprob: -9.665536880493164
    5. '(
' → logprob: -10.665536880493164
    6. '(print' → logprob: -10.790536880493164
    7. ' output' → logprob: -13.165536880493164
    8. '()' → logprob: -13.915536880493164
    9. '(

' → logprob: -14.165536880493164
    10. '(input' → logprob: -14.790536880493164

Token 434: ' valeur' (ID: 41664)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.0037553056608885527
    2. '(output' → logprob: -5.75375509262085
    3. 'print' → logprob: -7.50375509262085
    4. ' output' → logprob: -10.753755569458008
    5. 'result' → logprob: -12.378755569458008
    6. '(' → logprob: -15.128755569458008
    7. 'out' → logprob: -15.753755569458008
    8. 'ou' → logprob: -16.878755569458008
    9. '$output' → logprob: -16.878755569458008
    10. '	output' → logprob: -17.128755569458008

Token 435: ' sélection' (ID: 43472)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.021282510831952095
    2. 'output' → logprob: -4.02128267288208
    3. '(output' → logprob: -5.77128267288208
    4. '(print' → logprob: -11.646282196044922
    5. '(' → logprob: -13.021282196044922
    6. ' print' → logprob: -15.021282196044922
    7. '(
' → logprob: -15.146282196044922
    8. ' output' → logprob: -15.521282196044922
    9. '
' → logprob: -16.146282196044922
    10. '```' → logprob: -18.771282196044922

Token 436: 'née' (ID: 86906)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.4256427586078644
    2. 'e' → logprob: -1.175642728805542
    3. 'é' → logprob: -3.425642728805542
    4. 'er' → logprob: -6.050642967224121
    5. 'output' → logprob: -6.300642967224121
    6. 'ee' → logprob: -7.300642967224121
    7. 'print' → logprob: -7.675642967224121
    8. ' output' → logprob: -8.925642967224121
    9. '#' → logprob: -11.175642967224121
    10. '(output' → logprob: -11.550642967224121

Token 437: ' précéd' (ID: 55435)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1472419600977446e-06
    2. '
' → logprob: -13.750000953674316
    3. ' print' → logprob: -16.625001907348633
    4. '```' → logprob: -17.125001907348633
    5. 'output' → logprob: -21.000001907348633
    6. 'pr' → logprob: -21.375001907348633
    7. '(print' → logprob: -21.625001907348633
    8. '``' → logprob: -21.875001907348633
    9. '
' → logprob: -22.125001907348633
    10. '.print' → logprob: -22.250001907348633

Token 438: 'emment' (ID: 58019)
  Prédit: 'emment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'emment' → logprob: -0.17853496968746185
    2. 'ente' → logprob: -1.928534984588623
    3. 'ent' → logprob: -4.053534984588623
    4. 'ée' → logprob: -7.678534984588623
    5. '#' → logprob: -8.553534507751465
    6. 'ement' → logprob: -10.553534507751465
    7. 'entemente' → logprob: -10.553534507751465
    8. 'é' → logprob: -11.178534507751465
    9. 'em' → logprob: -11.553534507751465
    10. 'ément' → logprob: -11.553534507751465

Token 439: ' dans' (ID: 2671)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.250000953674316
    3. '
' → logprob: -15.625000953674316
    4. ' print' → logprob: -17.25
    5. '``' → logprob: -20.0
    6. 'pr' → logprob: -20.5
    7. '
' → logprob: -21.5
    8. 'prin' → logprob: -22.0
    9. 'output' → logprob: -22.125
    10. '`
' → logprob: -22.375

Token 440: ' la' (ID: 557)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.1763373613357544
    2. 'print' → logprob: -2.176337242126465
    3. '(output' → logprob: -3.301337242126465
    4. 'la' → logprob: -4.676337242126465
    5. 'le' → logprob: -7.176337242126465
    6. 'l' → logprob: -7.676337242126465
    7. ' output' → logprob: -7.926337242126465
    8. '()' → logprob: -8.801337242126465
    9. '(' → logprob: -8.926337242126465
    10. '(print' → logprob: -10.551337242126465

Token 441: ' console' (ID: 3887)
  Prédit: 'terminal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'terminal' → logprob: -0.5776833891868591
    2. 'print' → logprob: -0.8276833891868591
    3. 'console' → logprob: -6.577683448791504
    4. 'output' → logprob: -9.202683448791504
    5. '#' → logprob: -9.327683448791504
    6. ' terminal' → logprob: -9.452683448791504
    7. 'term' → logprob: -9.577683448791504
    8. '
' → logprob: -12.577683448791504
    9. 'termin' → logprob: -13.202683448791504
    10. 'ter' → logprob: -13.452683448791504

Token 442: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7432603272027336e-06
    2. '
' → logprob: -13.500001907348633
    3. '```' → logprob: -15.375001907348633
    4. ' print' → logprob: -17.625001907348633
    5. '
' → logprob: -18.500001907348633
    6. 'pr' → logprob: -19.000001907348633
    7. 'prin' → logprob: -20.750001907348633
    8. '``' → logprob: -20.750001907348633
    9. '#print' → logprob: -20.875001907348633
    10. '`' → logprob: -21.625001907348633

Token 443: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -17.0
    3. ' print' → logprob: -19.0
    4. '
' → logprob: -20.75
    5. 'pr' → logprob: -22.875
    6. 'prin' → logprob: -24.125
    7. 'output' → logprob: -24.375
    8. '``' → logprob: -24.875
    9. '#print' → logprob: -25.0
    10. '`' → logprob: -25.25

Token 444: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.001929228543303907
    2. '(' → logprob: -6.25192928314209
    3. ' (' → logprob: -15.62692928314209
    4. 'output' → logprob: -15.87692928314209
    5. '(input' → logprob: -16.626928329467773
    6. '()' → logprob: -16.876928329467773
    7. '(
' → logprob: -17.001928329467773
    8. '(out' → logprob: -17.001928329467773
    9. '(print' → logprob: -17.501928329467773
    10. '(Output' → logprob: -17.626928329467773

Token 445: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.625
    3. '))' → logprob: -17.0
    4. ')`' → logprob: -17.5
    5. '`)' → logprob: -19.5
    6. ')
' → logprob: -19.5
    7. '(' → logprob: -19.75
    8. '()' → logprob: -20.25
    9. ')}' → logprob: -20.25
    10. '())' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 443
Tokens correctement prédits (1ère position, stricte): 107
Tokens correctement prédits (1ère position, avec adaptation): 110
Tokens correctement prédits (top 10): 267
Précision stricte (1ère position): 24.15%
Précision adaptée (1ère position): 24.83%
Précision (top 10): 60.27%
================================================================================
