================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections.abc import Sequence

def Inn(s: Sequence[str]) -> str:
    evens = set('RUD')
    odds = set('LUD')
    checks = [(evens if i % 2 == 0 else odds) for i in range(len(s))]
    if all(c in chk for c, chk in zip(s, checks)):
        return "Yes"
    return "No"

print(Inn(input()))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: '.' (ID: 13)
  → Token d'amorce (pas de prédiction)

Token 3: 'abc' (ID: 26682)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.10756558924913406
    2. ' import' → logprob: -2.3575656414031982
    3. 'abc' → logprob: -5.232565402984619
    4. '```' → logprob: -6.357565402984619
    5. 'deque' → logprob: -9.607565879821777
    6. 'default' → logprob: -10.107565879821777
    7. 'Counter' → logprob: -10.357565879821777
    8. ' ' → logprob: -10.357565879821777
    9. ' defaultdict' → logprob: -10.607565879821777
    10. '``' → logprob: -11.232565879821777

Token 4: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.20150035619735718
    2. 'import' → logprob: -1.701500415802002
    3. '```' → logprob: -10.451499938964844
    4. ' ' → logprob: -10.576499938964844
    5. '.' → logprob: -10.826499938964844
    6. '.import' → logprob: -12.701499938964844
    7. ' .' → logprob: -13.326499938964844
    8. ''import' → logprob: -13.701499938964844
    9. '	import' → logprob: -13.951499938964844
    10. 'space' → logprob: -13.951499938964844

Token 5: ' Sequence' (ID: 57144)
  Prédit: 'Iterable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterable' → logprob: -0.03906669467687607
    2. ' Iterable' → logprob: -3.789066791534424
    3. 'Sequence' → logprob: -4.414066791534424
    4. 'Iterator' → logprob: -6.539066791534424
    5. 'Callable' → logprob: -7.414066791534424
    6. ' Sequence' → logprob: -7.664066791534424
    7. 'Mutable' → logprob: -7.914066791534424
    8. 'Collection' → logprob: -8.289066314697266
    9. 'Mapping' → logprob: -8.414066314697266
    10. ' Iterator' → logprob: -9.789066314697266

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09477205574512482
    2. '```' → logprob: -2.8447721004486084
    3. ',' → logprob: -4.094771862030029
    4. 'import' → logprob: -4.969771862030029
    5. ':' → logprob: -5.969771862030029
    6. '[' → logprob: -6.219771862030029
    7. '(' → logprob: -6.969771862030029
    8. '`' → logprob: -7.219771862030029
    9. '<|end|>' → logprob: -7.219771862030029
    10. '\' → logprob: -8.344772338867188

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.2399441003799438
    2. ':' → logprob: -1.2399441003799438
    3. ',' → logprob: -1.8649441003799438
    4. 'import' → logprob: -1.9899441003799438
    5. '(' → logprob: -2.9899439811706543
    6. '```' → logprob: -2.9899439811706543
    7. '[' → logprob: -4.364943981170654
    8. '\' → logprob: -5.614943981170654
    9. '`' → logprob: -5.614943981170654
    10. '<|end|>' → logprob: -6.489943981170654

Token 8: ' Inn' (ID: 22260)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01615084894001484
    2. ' sequence' → logprob: -4.891150951385498
    3. ' space' → logprob: -5.766150951385498
    4. ' func' → logprob: -6.891150951385498
    5. ' function' → logprob: -7.266150951385498
    6. ' my' → logprob: -7.641150951385498
    7. ' ```' → logprob: -7.766150951385498
    8. ' ' → logprob: -8.14115047454834
    9. ' process' → logprob: -8.14115047454834
    10. ' is' → logprob: -8.51615047454834

Token 9: '(s' (ID: 1858)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00609907740727067
    2. 'e' → logprob: -5.881099224090576
    3. '[' → logprob: -7.131099224090576
    4. 'erm' → logprob: -7.131099224090576
    5. '```' → logprob: -7.506099224090576
    6. 'ate' → logprob: -8.256098747253418
    7. '__' → logprob: -8.381098747253418
    8. '   ' → logprob: -9.131098747253418
    9. 'erview' → logprob: -9.756098747253418
    10. 'er's' → logprob: -9.756098747253418

Token 10: ':' (ID: 25)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4887532889842987
    2. ')' → logprob: -1.738753318786621
    3. 'e' → logprob: -2.113753318786621
    4. '):' → logprob: -2.613753318786621
    5. '[' → logprob: -4.988753318786621
    6. ')t' → logprob: -6.238753318786621
    7. 'ection' → logprob: -6.488753318786621
    8. ':' → logprob: -6.488753318786621
    9. 'er' → logprob: -6.863753318786621
    10. 'u' → logprob: -7.363753318786621

Token 11: ' Sequence' (ID: 57144)
  Prédit: 'Sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sequence' → logprob: -0.8497325778007507
    2. 'e' → logprob: -1.4747326374053955
    3. 'tr' → logprob: -1.4747326374053955
    4. 'quence' → logprob: -3.0997326374053955
    5. ' Sequence' → logprob: -3.0997326374053955
    6. ' str' → logprob: -5.349732398986816
    7. 'tring' → logprob: -5.474732398986816
    8. 'str' → logprob: -5.724732398986816
    9. 'eq' → logprob: -5.724732398986816
    10. 't' → logprob: -6.099732398986816

Token 12: '[str' (ID: 33439)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.759942352771759
    2. '):' → logprob: -0.759942352771759
    3. '[' → logprob: -3.2599422931671143
    4. '[int' → logprob: -3.7599422931671143
    5. ',' → logprob: -6.259942531585693
    6. '[str' → logprob: -7.634942531585693
    7. '[T' → logprob: -8.884942054748535
    8. '[List' → logprob: -9.259942054748535
    9. ' ):' → logprob: -10.134942054748535
    10. '):
' → logprob: -10.134942054748535

Token 13: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.13733218610286713
    2. ']):' → logprob: -2.3873322010040283
    3. ']' → logprob: -3.3873322010040283
    4. '],' → logprob: -6.262331962585449
    5. ')' → logprob: -7.637331962585449
    6. ']:' → logprob: -9.26233196258545
    7. '[' → logprob: -10.38733196258545
    8. ',' → logprob: -10.63733196258545
    9. '):' → logprob: -11.01233196258545
    10. ']))' → logprob: -11.01233196258545

Token 14: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014111855998635292
    2. '):' → logprob: -6.751410961151123
    3. '():' → logprob: -9.126411437988281
    4. ')' → logprob: -10.001411437988281
    5. ' :' → logprob: -10.876411437988281
    6. ':**' → logprob: -10.876411437988281
    7. ':return' → logprob: -11.126411437988281
    8. ':void' → logprob: -12.126411437988281
    9. ':def' → logprob: -12.501411437988281
    10. '[:]' → logprob: -12.751411437988281

Token 15: ' str' (ID: 989)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.7510574460029602
    2. ' int' → logprob: -1.3760573863983154
    3. ' bool' → logprob: -2.2510573863983154
    4. ' str' → logprob: -2.7510573863983154
    5. 'int' → logprob: -3.1260573863983154
    6. 'None' → logprob: -3.3760573863983154
    7. 'bool' → logprob: -4.1260576248168945
    8. ' list' → logprob: -5.6260576248168945
    9. ' Sequence' → logprob: -5.6260576248168945
    10. 'str' → logprob: -6.1260576248168945

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4855663721391466e-05
    2. ':return' → logprob: -12.750015258789062
    3. '():' → logprob: -12.875015258789062
    4. ' :' → logprob: -12.875015258789062
    5. ':**' → logprob: -13.000015258789062
    6. '):' → logprob: -13.125015258789062
    7. ':
' → logprob: -13.625015258789062
    8. '':' → logprob: -14.750015258789062
    9. '>:' → logprob: -16.000015258789062
    10. '':'' → logprob: -16.250015258789062

Token 17: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32117438316345215
    2. '   ' → logprob: -1.3211743831634521
    3. '    ' → logprob: -6.946174621582031
    4. '(' → logprob: -6.946174621582031
    5. ':
' → logprob: -6.946174621582031
    6. ' :' → logprob: -6.946174621582031
    7. ''' → logprob: -7.196174621582031
    8. '[' → logprob: -7.446174621582031
    9. ':return' → logprob: -7.696174621582031
    10. '```' → logprob: -8.071174621582031

Token 18: ' ev' (ID: 5332)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28942281007766724
    2. 'r' → logprob: -2.1644227504730225
    3. ' return' → logprob: -3.0394227504730225
    4. 'return' → logprob: -3.5394227504730225
    5. '```' → logprob: -3.7894227504730225
    6. '`' → logprob: -4.289422988891602
    7. '    ' → logprob: -4.914422988891602
    8. '\' → logprob: -6.289422988891602
    9. ' `' → logprob: -6.539422988891602
    10. ' \' → logprob: -6.539422988891602

Token 19: 'ens' (ID: 696)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.8512603640556335
    2. 'er' → logprob: -1.1012604236602783
    3. 'en' → logprob: -2.1012604236602783
    4. 'ery' → logprob: -2.6012604236602783
    5. 'ent' → logprob: -3.6012604236602783
    6. 'ens' → logprob: -5.101260185241699
    7. 'a' → logprob: -6.101260185241699
    8. 'e' → logprob: -6.351260185241699
    9. 'alu' → logprob: -6.976260185241699
    10. 'ents' → logprob: -7.101260185241699

Token 20: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7123817205429077
    2. ' =' → logprob: -0.8373817205429077
    3. '=' → logprob: -2.7123818397521973
    4. '[' → logprob: -5.337381839752197
    5. '[]' → logprob: -6.587381839752197
    6. '   ' → logprob: -6.587381839752197
    7. '[:]' → logprob: -7.337381839752197
    8. ' ' → logprob: -8.087381362915039
    9. '(' → logprob: -8.337381362915039
    10. '  ' → logprob: -8.712381362915039

Token 21: ' set' (ID: 920)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8115438222885132
    2. ' s' → logprob: -0.9365438222885132
    3. ' [' → logprob: -2.8115439414978027
    4. '[]' → logprob: -3.6865439414978027
    5. '[s' → logprob: -3.6865439414978027
    6. ' ' → logprob: -4.186543941497803
    7. ' []' → logprob: -4.436543941497803
    8. '"' → logprob: -4.561543941497803
    9. '[' → logprob: -4.936543941497803
    10. ''s' → logprob: -6.561543941497803

Token 22: '('' (ID: 706)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.42263928055763245
    2. '(' → logprob: -1.17263925075531
    3. '(s' → logprob: -3.7976393699645996
    4. '(range' → logprob: -4.5476393699646
    5. '(i' → logprob: -7.0476393699646
    6. '([' → logprob: -7.7976393699646
    7. '(x' → logprob: -8.297638893127441
    8. '((' → logprob: -8.547638893127441
    9. '([]' → logprob: -9.297638893127441
    10. '(
' → logprob: -10.172638893127441

Token 23: 'R' (ID: 49)
  Prédit: '024'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '024' → logprob: -0.02988794445991516
    2. '135' → logprob: -4.154888153076172
    3. 'ace' → logprob: -4.779888153076172
    4. '012' → logprob: -6.029888153076172
    5. 'ae' → logprob: -6.154888153076172
    6. '246' → logprob: -7.904888153076172
    7. '02' → logprob: -8.654888153076172
    8. 'abcdefghijklmnopqrstuvwxyz' → logprob: -9.654888153076172
    9. '025' → logprob: -10.154888153076172
    10. 'ACE' → logprob: -10.279888153076172

Token 24: 'UD' (ID: 7965)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.4955312013626099
    2. 'O' → logprob: -1.6205312013626099
    3. '')' → logprob: -2.3705310821533203
    4. 'AE' → logprob: -2.3705310821533203
    5. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -3.1205310821533203
    6. '0' → logprob: -3.4955310821533203
    7. 'A' → logprob: -3.4955310821533203
    8. 'T' → logprob: -3.6205310821533203
    9. 'BG' → logprob: -3.7455310821533203
    10. '012' → logprob: -3.9955310821533203

Token 25: '')
' (ID: 2515)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.7331563234329224
    2. '')' → logprob: -1.3581563234329224
    3. 'S' → logprob: -2.608156204223633
    4. ' ')' → logprob: -2.608156204223633
    5. ''' → logprob: -3.483156204223633
    6. 'E' → logprob: -3.483156204223633
    7. 'LR' → logprob: -4.733156204223633
    8. 'I' → logprob: -5.108156204223633
    9. 'AE' → logprob: -5.608156204223633
    10. ' '' → logprob: -5.733156204223633

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0065189599990845
    2. ' ' → logprob: -1.5065189599990845
    3. ')' → logprob: -1.8815189599990845
    4. 'eturn' → logprob: -1.8815189599990845
    5. 'u' → logprob: -3.631518840789795
    6. '  ' → logprob: -4.131518840789795
    7. 's' → logprob: -4.381518840789795
    8. ':' → logprob: -4.506518840789795
    9. ',' → logprob: -4.631518840789795
    10. 'e' → logprob: -5.006518840789795

Token 27: ' odds' (ID: 28374)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6497829556465149
    2. ' result' → logprob: -1.2747828960418701
    3. 'result' → logprob: -2.39978289604187
    4. ' return' → logprob: -3.89978289604187
    5. ' res' → logprob: -4.274783134460449
    6. 's' → logprob: -4.524783134460449
    7. 'res' → logprob: -4.774783134460449
    8. 'return' → logprob: -4.899783134460449
    9. ' output' → logprob: -5.274783134460449
    10. ' answer' → logprob: -5.399783134460449

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005970389116555452
    2. '=' → logprob: -5.130970478057861
    3. ' ' → logprob: -10.130970001220703
    4. '  ' → logprob: -15.255970001220703
    5. ' =)' → logprob: -15.380970001220703
    6. 's' → logprob: -15.505970001220703
    7. '=set' → logprob: -15.505970001220703
    8. ' =
' → logprob: -15.755970001220703
    9. '   ' → logprob: -15.880970001220703
    10. ')' → logprob: -15.880970001220703

Token 29: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.0278224628418684
    2. 'set' → logprob: -3.777822494506836
    3. ' {'' → logprob: -5.527822494506836
    4. '{'' → logprob: -7.902822494506836
    5. ' ' → logprob: -9.277822494506836
    6. '   ' → logprob: -10.277822494506836
    7. ' s' → logprob: -10.777822494506836
    8. ' '' → logprob: -11.152822494506836
    9. 's' → logprob: -11.277822494506836
    10. ' {' → logprob: -11.402822494506836

Token 30: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0037921268958598375
    2. '(' → logprob: -5.6287922859191895
    3. ' ('' → logprob: -9.128791809082031
    4. '(('' → logprob: -10.503791809082031
    5. '({'' → logprob: -10.503791809082031
    6. '(['' → logprob: -11.503791809082031
    7. ' (' → logprob: -11.628791809082031
    8. '("' → logprob: -12.378791809082031
    9. '([' → logprob: -13.253791809082031
    10. ' ' → logprob: -14.503791809082031

Token 31: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.1289815604686737
    2. 'LR' → logprob: -2.753981590270996
    3. 'LD' → logprob: -4.128981590270996
    4. 'DL' → logprob: -5.128981590270996
    5. 'D' → logprob: -5.316481590270996
    6. 'ULD' → logprob: -5.441481590270996
    7. ''' → logprob: -5.816481590270996
    8. 'DLL' → logprob: -6.253981590270996
    9. ''L' → logprob: -6.253981590270996
    10. 'LU' → logprob: -6.691481590270996

Token 32: 'UD' (ID: 7965)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.6782805323600769
    2. 'RU' → logprob: -2.1782805919647217
    3. 'RD' → logprob: -2.3032805919647217
    4. 'UD' → logprob: -2.4282805919647217
    5. '')' → logprob: -2.8032805919647217
    6. 'DR' → logprob: -3.4282805919647217
    7. 'UR' → logprob: -3.6782805919647217
    8. 'RL' → logprob: -4.303280353546143
    9. ''' → logprob: -4.428280353546143
    10. 'D' → logprob: -4.428280353546143

Token 33: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.003179975086823106
    2. ''' → logprob: -7.003180027008057
    3. 'R' → logprob: -7.128180027008057
    4. 'S' → logprob: -7.378180027008057
    5. '')
' → logprob: -8.378179550170898
    6. ')' → logprob: -9.003179550170898
    7. 'L' → logprob: -9.753179550170898
    8. '')
' → logprob: -9.753179550170898
    9. '')

' → logprob: -10.003179550170898
    10. 'T' → logprob: -10.378179550170898

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06337757408618927
    2. ':' → logprob: -3.688377618789673
    3. ')' → logprob: -4.813377380371094
    4. ' ' → logprob: -4.938377380371094
    5. '    
' → logprob: -5.313377380371094
    6. '
' → logprob: -5.813377380371094
    7. ' 
' → logprob: -6.188377380371094
    8. '  ' → logprob: -6.688377380371094
    9. '   
' → logprob: -6.688377380371094
    10. '  
' → logprob: -6.688377380371094

Token 35: ' checks' (ID: 22097)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18537533283233643
    2. 'result' → logprob: -2.935375213623047
    3. ' result' → logprob: -3.435375213623047
    4. 's' → logprob: -3.685375213623047
    5. 'r' → logprob: -4.185375213623047
    6. 'res' → logprob: -5.185375213623047
    7. 'n' → logprob: -5.435375213623047
    8. 'i' → logprob: -5.810375213623047
    9. 'return' → logprob: -5.935375213623047
    10. ')' → logprob: -6.060375213623047

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11669329553842545
    2. '=' → logprob: -2.2416932582855225
    3. ' ' → logprob: -6.366693496704102
    4. '_' → logprob: -7.241693496704102
    5. ')' → logprob: -8.116693496704102
    6. '   ' → logprob: -8.616693496704102
    7. ':' → logprob: -8.616693496704102
    8. '.' → logprob: -8.616693496704102
    9. 'ed' → logprob: -8.991693496704102
    10. 'et' → logprob: -9.741693496704102

Token 37: ' [(' (ID: 43900)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -1.3974850177764893
    2. 's' → logprob: -2.0224850177764893
    3. ' s' → logprob: -2.1474850177764893
    4. ' [' → logprob: -2.1474850177764893
    5. '[]' → logprob: -2.2724850177764893
    6. ' {' → logprob: -2.3974850177764893
    7. ' {'' → logprob: -3.3974850177764893
    8. '{' → logprob: -3.6474850177764893
    9. ' set' → logprob: -3.8974850177764893
    10. '[' → logprob: -4.02248477935791

Token 38: 'ev' (ID: 6923)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6168102025985718
    2. '0' → logprob: -1.9918102025985718
    3. ''s' → logprob: -2.1168103218078613
    4. '('' → logprob: -2.4918103218078613
    5. ''' → logprob: -2.7418103218078613
    6. '(' → logprob: -2.8668103218078613
    7. '(i' → logprob: -3.4918103218078613
    8. 'lambda' → logprob: -3.4918103218078613
    9. '(lambda' → logprob: -3.7418103218078613
    10. 'i' → logprob: -3.8668103218078613

Token 39: 'ens' (ID: 696)
  Prédit: 'ens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ens' → logprob: -0.03821224346756935
    2. 'en' → logprob: -3.288212299346924
    3. '   ' → logprob: -10.038211822509766
    4. '```' → logprob: -10.913211822509766
    5. 'ents' → logprob: -11.663211822509766
    6. ')' → logprob: -11.725711822509766
    7. 'ent' → logprob: -12.038211822509766
    8. 'ans' → logprob: -12.038211822509766
    9. 'e' → logprob: -12.100711822509766
    10. '       ' → logprob: -12.163211822509766

Token 40: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0977523997426033
    2. ' |' → logprob: -3.097752332687378
    3. ' ,' → logprob: -3.472752332687378
    4. '|' → logprob: -5.847752571105957
    5. '.' → logprob: -5.972752571105957
    6. ' ' → logprob: -6.097752571105957
    7. ' &' → logprob: -6.597752571105957
    8. '.inter' → logprob: -6.597752571105957
    9. ' -' → logprob: -6.722752571105957
    10. '),' → logprob: -7.097752571105957

Token 41: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7835508584976196
    2. 'i' → logprob: -1.2835508584976196
    3. ' c' → logprob: -2.03355073928833
    4. 'c' → logprob: -3.28355073928833
    5. ' s' → logprob: -3.40855073928833
    6. ' x' → logprob: -4.28355073928833
    7. 's' → logprob: -4.90855073928833
    8. ' ch' → logprob: -5.03355073928833
    9. 'ch' → logprob: -5.28355073928833
    10. 'x' → logprob: -5.53355073928833

Token 42: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3869342505931854
    2. '%' → logprob: -1.1369342803955078
    3. ' ' → logprob: -9.761934280395508
    4. ' ' → logprob: -13.636934280395508
    5. '&' → logprob: -13.886934280395508
    6. ' &' → logprob: -13.886934280395508
    7. 's' → logprob: -14.386934280395508
    8. '==' → logprob: -14.886934280395508
    9. ' ==' → logprob: -15.261934280395508
    10. ' else' → logprob: -15.261934280395508

Token 43: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.054913993924856186
    2. ' ' → logprob: -2.9299139976501465
    3. '==' → logprob: -11.304913520812988
    4. '```' → logprob: -12.054913520812988
    5. '<|end|>' → logprob: -12.179913520812988
    6. '3' → logprob: -12.554913520812988
    7. '  ' → logprob: -13.429913520812988
    8. ' ==' → logprob: -13.429913520812988
    9. '<|end|>' → logprob: -15.179913520812988
    10. ')' → logprob: -15.617413520812988

Token 44: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04860779643058777
    2. ' ' → logprob: -3.04860782623291
    3. '```' → logprob: -11.29860782623291
    4. '  ' → logprob: -12.92360782623291
    5. '   ' → logprob: -13.42360782623291
    6. '==' → logprob: -13.79860782623291
    7. '3' → logprob: -14.04860782623291
    8. '1' → logprob: -14.98610782623291
    9. '
' → logprob: -15.54860782623291
    10. '0' → logprob: -15.61110782623291

Token 45: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.230332612991333
    2. ' ==' → logprob: -2.230332612991333
    3. ' else' → logprob: -2.355332612991333
    4. 'else' → logprob: -5.730332374572754
    5. ' ' → logprob: -9.105332374572754
    6. '0' → logprob: -11.730332374572754
    7. '=' → logprob: -12.480332374572754
    8. ')==' → logprob: -13.855332374572754
    9. ')' → logprob: -13.980332374572754
    10. '===' → logprob: -13.980332374572754

Token 46: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07902120798826218
    2. ' ' → logprob: -2.5790212154388428
    3. '1' → logprob: -8.954021453857422
    4. '```' → logprob: -14.204021453857422
    5. '   ' → logprob: -15.391521453857422
    6. ' ' → logprob: -15.579021453857422
    7. '=' → logprob: -15.891521453857422
    8. ' 
' → logprob: -15.954021453857422
    9. '...' → logprob: -16.266521453857422
    10. ')' → logprob: -16.329021453857422

Token 47: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010461211204528809
    2. ' ' → logprob: -4.635461330413818
    3. '1' → logprob: -7.260461330413818
    4. '```' → logprob: -13.76046085357666
    5. '   ' → logprob: -15.07296085357666
    6. '  ' → logprob: -16.072961807250977
    7. '2' → logprob: -16.260461807250977
    8. '=' → logprob: -16.260461807250977
    9. 'i' → logprob: -16.947961807250977
    10. ' ' → logprob: -16.947961807250977

Token 48: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.009767776355147362
    2. 'else' → logprob: -4.634768009185791
    3. ' ' → logprob: -12.009767532348633
    4. ')' → logprob: -13.009767532348633
    5. '    ' → logprob: -13.509767532348633
    6. '        ' → logprob: -14.384767532348633
    7. '```' → logprob: -14.384767532348633
    8. '	else' → logprob: -15.259767532348633
    9. ',' → logprob: -15.509767532348633
    10. ' )' → logprob: -16.009767532348633

Token 49: ' odds' (ID: 28374)
  Prédit: ' odds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' odds' → logprob: -0.5250842571258545
    2. 'od' → logprob: -0.9000842571258545
    3. 'ods' → logprob: -7.400084495544434
    4. 'odd' → logprob: -7.400084495544434
    5. ' odd' → logprob: -8.275084495544434
    6. ' ' → logprob: -8.400084495544434
    7. ' od' → logprob: -9.712584495544434
    8. 'Odds' → logprob: -10.150084495544434
    9. '   ' → logprob: -10.962584495544434
    10. 'o' → logprob: -11.212584495544434

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6225970983505249
    2. ',' → logprob: -0.8725970983505249
    3. ' ,' → logprob: -3.4975972175598145
    4. ' )' → logprob: -4.6225972175598145
    5. ' for' → logprob: -6.1225972175598145
    6. ' ' → logprob: -6.7475972175598145
    7. '   ' → logprob: -7.2475972175598145
    8. '           ' → logprob: -8.247596740722656
    9. '       ' → logprob: -8.497596740722656
    10. '    ' → logprob: -8.997596740722656

Token 51: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.028424574062228203
    2. 'for' → logprob: -4.0284247398376465
    3. '   ' → logprob: -5.7784247398376465
    4. '       ' → logprob: -5.7784247398376465
    5. '           ' → logprob: -6.4034247398376465
    6. '    ' → logprob: -6.7784247398376465
    7. '        ' → logprob: -8.153424263000488
    8. ' ' → logprob: -8.653424263000488
    9. ',' → logprob: -9.153424263000488
    10. '               ' → logprob: -9.278424263000488

Token 52: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.008663143962621689
    2. 'i' → logprob: -4.758663177490234
    3. ' in' → logprob: -10.008663177490234
    4. '<|end|>' → logprob: -13.883663177490234
    5. ' ' → logprob: -14.633663177490234
    6. ' ' → logprob: -14.633663177490234
    7. '	i' → logprob: -14.633663177490234
    8. ' range' → logprob: -15.258663177490234
    9. ' s' → logprob: -15.508663177490234
    10. '```' → logprob: -15.758663177490234

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006849141791462898
    2. 'in' → logprob: -7.37568473815918
    3. ' range' → logprob: -10.12568473815918
    4. 'range' → logprob: -12.00068473815918
    5. ',' → logprob: -12.25068473815918
    6. ' ' → logprob: -12.37568473815918
    7. ' i' → logprob: -13.50068473815918
    8. '<|end|>' → logprob: -13.87568473815918
    9. ' ,' → logprob: -14.87568473815918
    10. ')' → logprob: -15.75068473815918

Token 54: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0015029559144750237
    2. 'range' → logprob: -6.501502990722656
    3. '	range' → logprob: -14.626502990722656
    4. '(range' → logprob: -16.876502990722656
    5. ' xrange' → logprob: -16.876502990722656
    6. ' ' → logprob: -18.251502990722656
    7. '<|end|>' → logprob: -18.876502990722656
    8. '_range' → logprob: -19.376502990722656
    9. '.range' → logprob: -20.626502990722656
    10. '```' → logprob: -21.126502990722656

Token 55: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.2519482672214508
    2. '(' → logprob: -1.5019482374191284
    3. 'len' → logprob: -11.626948356628418
    4. ' (' → logprob: -12.501948356628418
    5. '(length' → logprob: -12.751948356628418
    6. '(n' → logprob: -13.626948356628418
    7. '(s' → logprob: -14.001948356628418
    8. ' len' → logprob: -14.751948356628418
    9. '((' → logprob: -15.251948356628418
    10. '(strlen' → logprob: -16.0019474029541

Token 56: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0004060050705447793
    2. '(' → logprob: -7.875405788421631
    3. 's' → logprob: -10.750406265258789
    4. ' (' → logprob: -12.625406265258789
    5. ')' → logprob: -14.250406265258789
    6. '(
' → logprob: -15.625406265258789
    7. ' ' → logprob: -16.50040626525879
    8. ' s' → logprob: -16.87540626525879
    9. ')(' → logprob: -17.50040626525879
    10. '```' → logprob: -17.50040626525879

Token 57: '))]
' (ID: 53695)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06532175838947296
    2. '))' → logprob: -2.815321683883667
    3. ')])' → logprob: -5.940321922302246
    4. '])]' → logprob: -7.690321922302246
    5. ')' → logprob: -9.315321922302246
    6. ' )' → logprob: -9.565321922302246
    7. ' ))' → logprob: -10.190321922302246
    8. '])' → logprob: -11.190321922302246
    9. ']' → logprob: -11.315321922302246
    10. ')))' → logprob: -11.690321922302246

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03364431485533714
    2. ']' → logprob: -3.908644199371338
    3. ')' → logprob: -4.783644199371338
    4. '    
' → logprob: -7.158644199371338
    5. 's' → logprob: -7.408644199371338
    6. ',' → logprob: -7.408644199371338
    7. '<|end|>' → logprob: -7.533644199371338
    8. ' ' → logprob: -8.158644676208496
    9. ' ]' → logprob: -8.283644676208496
    10. ')]' → logprob: -8.283644676208496

Token 59: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06272817403078079
    2. ')' → logprob: -4.312728404998779
    3. ']' → logprob: -4.562728404998779
    4. ' ' → logprob: -4.812728404998779
    5. '\n' → logprob: -4.937728404998779
    6. 'result' → logprob: -5.562728404998779
    7. '    
' → logprob: -5.812728404998779
    8. '
' → logprob: -6.312728404998779
    9. 'return' → logprob: -6.437728404998779
    10. ' return' → logprob: -6.687728404998779

Token 60: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.05820246413350105
    2. ' not' → logprob: -3.5582025051116943
    3. ' any' → logprob: -3.8082025051116943
    4. 'all' → logprob: -5.683202266693115
    5. ' len' → logprob: -6.308202266693115
    6. ' ' → logprob: -8.058202743530273
    7. 'not' → logprob: -9.183202743530273
    8. 'any' → logprob: -9.308202743530273
    9. 'len' → logprob: -9.683202743530273
    10. ' s' → logprob: -10.183202743530273

Token 61: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9251930117607117
    2. '(c' → logprob: -0.9251930117607117
    3. '(s' → logprob: -2.6751930713653564
    4. '((' → logprob: -2.8001930713653564
    5. '(lambda' → logprob: -3.1751930713653564
    6. '(ch' → logprob: -3.6751930713653564
    7. '(char' → logprob: -5.425192832946777
    8. '(x' → logprob: -6.050192832946777
    9. '(check' → logprob: -6.050192832946777
    10. '(
' → logprob: -8.425192832946777

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008430993184447289
    2. 'in' → logprob: -7.875843048095703
    3. ' ' → logprob: -9.000843048095703
    4. '[i' → logprob: -9.250843048095703
    5. '[' → logprob: -10.250843048095703
    6. '   ' → logprob: -10.375843048095703
    7. 'ont' → logprob: -10.375843048095703
    8. ' not' → logprob: -10.375843048095703
    9. ' i' → logprob: -10.500843048095703
    10. '  ' → logprob: -10.625843048095703

Token 63: ' chk' (ID: 63648)
  Prédit: ' checks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' checks' → logprob: -0.14621396362781525
    2. ' check' → logprob: -2.271214008331299
    3. 'checks' → logprob: -3.771214008331299
    4. 'check' → logprob: -5.646214008331299
    5. ' ch' → logprob: -5.896214008331299
    6. ' chk' → logprob: -6.771214008331299
    7. ' s' → logprob: -7.896214008331299
    8. ' sets' → logprob: -8.14621353149414
    9. ' c' → logprob: -8.39621353149414
    10. ' ' → logprob: -8.52121353149414

Token 64: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2885638177394867
    2. 'k' → logprob: -1.663563847541809
    3. 's' → logprob: -3.5385637283325195
    4. 'e' → logprob: -3.7885637283325195
    5. '[' → logprob: -5.5385637283325195
    6. 'ks' → logprob: -6.2885637283325195
    7. ' ' → logprob: -7.4135637283325195
    8. 'ek' → logprob: -7.4135637283325195
    9. ' checks' → logprob: -7.7885637283325195
    10. 'cks' → logprob: -8.16356372833252

Token 65: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.13894952833652496
    2. 'c' → logprob: -2.1389496326446533
    3. ' s' → logprob: -4.763949394226074
    4. 's' → logprob: -6.763949394226074
    5. ' i' → logprob: -7.638949394226074
    6. ' ' → logprob: -7.638949394226074
    7. 'i' → logprob: -7.763949394226074
    8. ' (' → logprob: -8.513949394226074
    9. '(c' → logprob: -9.138949394226074
    10. ' idx' → logprob: -9.263949394226074

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14397837221622467
    2. ',c' → logprob: -2.0189783573150635
    3. 'c' → logprob: -7.268978595733643
    4. ',s' → logprob: -8.143978118896484
    5. 's' → logprob: -8.643978118896484
    6. ' ,' → logprob: -9.268978118896484
    7. ' in' → logprob: -11.268978118896484
    8. ' c' → logprob: -11.893978118896484
    9. ',ch' → logprob: -12.018978118896484
    10. ',char' → logprob: -13.018978118896484

Token 67: ' chk' (ID: 63648)
  Prédit: ' chk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chk' → logprob: -0.3920353651046753
    2. 'chk' → logprob: -1.1420353651046753
    3. 'ch' → logprob: -5.517035484313965
    4. ' ch' → logprob: -7.392035484313965
    5. ' ck' → logprob: -8.642035484313965
    6. ' ' → logprob: -9.767035484313965
    7. 'ck' → logprob: -9.892035484313965
    8. ' check' → logprob: -10.142035484313965
    9. '	ch' → logprob: -10.517035484313965
    10. 'check' → logprob: -10.517035484313965

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007085930090397596
    2. 'in' → logprob: -5.007085800170898
    3. ')' → logprob: -8.882085800170898
    4. 's' → logprob: -9.507085800170898
    5. ' ' → logprob: -9.507085800170898
    6. ',' → logprob: -9.632085800170898
    7. '),' → logprob: -12.007085800170898
    8. ' zip' → logprob: -12.382085800170898
    9. '   ' → logprob: -13.257085800170898
    10. ' )' → logprob: -14.007085800170898

Token 69: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.1602948009967804
    2. 'zip' → logprob: -1.910294771194458
    3. '(zip' → logprob: -9.660294532775879
    4. '_zip' → logprob: -13.160294532775879
    5. ')' → logprob: -13.410294532775879
    6. '.zip' → logprob: -13.535294532775879
    7. 'enumer' → logprob: -14.785294532775879
    8. ' ' → logprob: -15.035294532775879
    9. 'zi' → logprob: -15.035294532775879
    10. '   ' → logprob: -15.160294532775879

Token 70: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.3663626305060461e-05
    2. '(' → logprob: -11.37501335144043
    3. 's' → logprob: -13.75001335144043
    4. ' (' → logprob: -14.00001335144043
    5. '(
' → logprob: -15.50001335144043
    6. ')' → logprob: -16.87501335144043
    7. ' s' → logprob: -17.75001335144043
    8. '((' → logprob: -18.12501335144043
    9. ' ' → logprob: -18.87501335144043
    10. ')s' → logprob: -18.87501335144043

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023202638840302825
    2. ' ,' → logprob: -8.500231742858887
    3. ',s' → logprob: -11.250231742858887
    4. 's' → logprob: -12.250231742858887
    5. ' checks' → logprob: -13.625231742858887
    6. ',c' → logprob: -13.875231742858887
    7. '),' → logprob: -13.875231742858887
    8. ',ch' → logprob: -13.875231742858887
    9. 'checks' → logprob: -13.875231742858887
    10. ')' → logprob: -14.000231742858887

Token 72: ' checks' (ID: 22097)
  Prédit: 'checks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'checks' → logprob: -0.018204733729362488
    2. ' checks' → logprob: -4.018204689025879
    3. 'check' → logprob: -10.143204689025879
    4. '   ' → logprob: -11.393204689025879
    5. ' check' → logprob: -13.768204689025879
    6. ')' → logprob: -14.143204689025879
    7. '(check' → logprob: -14.643204689025879
    8. ' ' → logprob: -14.768204689025879
    9. '           ' → logprob: -15.268204689025879
    10. '    ' → logprob: -15.393204689025879

Token 73: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.011822356842458248
    2. '))' → logprob: -4.51182222366333
    3. ')):
' → logprob: -7.63682222366333
    4. '):' → logprob: -8.386822700500488
    5. ')):
' → logprob: -10.261822700500488
    6. ')' → logprob: -11.136822700500488
    7. ')))' → logprob: -11.761822700500488
    8. ':' → logprob: -12.886822700500488
    9. ' ' → logprob: -13.886822700500488
    10. ')),' → logprob: -14.261822700500488

Token 74: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11815202236175537
    2. ':' → logprob: -2.243152141571045
    3. ':return' → logprob: -6.493152141571045
    4. ' return' → logprob: -6.618152141571045
    5. ':
' → logprob: -6.993152141571045
    6. '):' → logprob: -7.493152141571045
    7. 'return' → logprob: -8.368151664733887
    8. '   ' → logprob: -8.493151664733887
    9. ' :' → logprob: -8.868151664733887
    10. ')' → logprob: -9.243151664733887

Token 75: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25949209928512573
    2. ' return' → logprob: -1.7594921588897705
    3. 'return' (adapté à ' return') → logprob: -2.8844921588897705
    4. '           ' → logprob: -8.884491920471191
    5. '   ' → logprob: -9.009491920471191
    6. ' ' → logprob: -9.884491920471191
    7. ':return' → logprob: -10.009491920471191
    8. '	return' → logprob: -10.384491920471191
    9. '<|end|>' → logprob: -10.634491920471191
    10. '    ' → logprob: -10.884491920471191

Token 76: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.13984684646129608
    2. ''' → logprob: -2.6398468017578125
    3. ''s' → logprob: -3.8898468017578125
    4. ' "' → logprob: -4.1398468017578125
    5. '"s' → logprob: -5.0148468017578125
    6. '"L' → logprob: -5.3898468017578125
    7. 's' → logprob: -6.0148468017578125
    8. '"I' → logprob: -6.6398468017578125
    9. ' '' → logprob: -6.6398468017578125
    10. '""' → logprob: -6.8898468017578125

Token 77: 'Yes' (ID: 13022)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -1.3581792116165161
    2. 'Yes' → logprob: -1.6081792116165161
    3. 'yes' → logprob: -2.1081790924072266
    4. 'Inn' → logprob: -2.9831790924072266
    5. 'Valid' → logprob: -3.1081790924072266
    6. 'WIN' → logprob: -3.4831790924072266
    7. 'True' → logprob: -3.6081790924072266
    8. 'true' → logprob: -3.8581790924072266
    9. 'valid' → logprob: -3.9831790924072266
    10. 'IN' → logprob: -3.9831790924072266

Token 78: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12782922387123108
    2. '"
' → logprob: -2.1278293132781982
    3. '"
' → logprob: -7.127829074859619
    4. '\n' → logprob: -11.127829551696777
    5. '   ' → logprob: -11.252829551696777
    6. 'return' → logprob: -11.752829551696777
    7. '")' → logprob: -11.752829551696777
    8. 'def' → logprob: -12.002829551696777
    9. '!"' → logprob: -12.502829551696777
    10. ')"' → logprob: -12.502829551696777

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.9862216504407115e-05
    2. 'return' → logprob: -11.375020027160645
    3. 'def' → logprob: -12.625020027160645
    4. 'else' → logprob: -13.375020027160645
    5. '    
' → logprob: -13.750020027160645
    6. ' return' → logprob: -14.375020027160645
    7. '<|end|>' → logprob: -14.625020027160645
    8. '
' → logprob: -15.000020027160645
    9. '       ' → logprob: -15.125020027160645
    10. ' else' → logprob: -15.375020027160645

Token 80: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00022725824965164065
    2. 'return' (adapté à ' return') → logprob: -8.750226974487305
    3. 'else' → logprob: -9.875226974487305
    4. ' return' → logprob: -12.125226974487305
    5. 'def' → logprob: -12.125226974487305
    6. ' else' → logprob: -13.000226974487305
    7. '       ' → logprob: -13.375226974487305
    8. '<|end|>' → logprob: -14.000226974487305
    9. '	return' → logprob: -14.500226974487305
    10. 'None' → logprob: -15.000226974487305

Token 81: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006748289801180363
    2. ' "' → logprob: -5.006748199462891
    3. ' ' → logprob: -11.38174819946289
    4. ''' → logprob: -11.88174819946289
    5. ' ' → logprob: -12.00674819946289
    6. '""' → logprob: -12.88174819946289
    7. ' None' → logprob: -13.88174819946289
    8. '"""' → logprob: -13.88174819946289
    9. '"No' → logprob: -14.25674819946289
    10. '```' → logprob: -14.63174819946289

Token 82: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.00013655527436640114
    2. '"No' → logprob: -9.000136375427246
    3. '"' → logprob: -11.625136375427246
    4. 'Yes' → logprob: -12.875136375427246
    5. ' No' → logprob: -13.875136375427246
    6. 'NO' → logprob: -15.000136375427246
    7. '_No' → logprob: -16.625137329101562
    8. '“No' → logprob: -17.125137329101562
    9. 'N' → logprob: -17.125137329101562
    10. 'None' → logprob: -17.375137329101562

Token 83: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0005197895807214081
    2. ')"' → logprob: -7.875519752502441
    3. '"
' → logprob: -9.500519752502441
    4. '")' → logprob: -10.625519752502441
    5. '```' → logprob: -10.625519752502441
    6. ')' → logprob: -11.500519752502441
    7. ''"' → logprob: -13.125519752502441
    8. '"`' → logprob: -13.500519752502441
    9. '"""' → logprob: -13.875519752502441
    10. '"

' → logprob: -14.125519752502441

Token 84: 'print' (ID: 1598)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9153714179992676
    2. '(' → logprob: -1.0403714179992676
    3. ')' → logprob: -2.5403714179992676
    4. '[' → logprob: -3.0403714179992676
    5. '```' → logprob: -3.2903714179992676
    6. '<|end|>' → logprob: -3.6653714179992676
    7. ''' → logprob: -4.665371417999268
    8. 'a' → logprob: -4.915371417999268
    9. '
' → logprob: -5.040371417999268
    10. 'I' → logprob: -5.290371417999268

Token 85: '(In' (ID: 74627)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014285710640251637
    2. '('' → logprob: -7.251428604125977
    3. '("("' → logprob: -7.876428604125977
    4. '(s' → logprob: -8.376428604125977
    5. '("' → logprob: -9.876428604125977
    6. '(print' → logprob: -11.126428604125977
    7. '("""' → logprob: -11.251428604125977
    8. ' (' → logprob: -12.251428604125977
    9. '((' → logprob: -13.001428604125977
    10. '(`' → logprob: -13.001428604125977

Token 86: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.170270353322849e-05
    2. '("' → logprob: -10.500061988830566
    3. '(s' → logprob: -11.625061988830566
    4. '('' → logprob: -11.875061988830566
    5. '(n' → logprob: -12.250061988830566
    6. 's' → logprob: -12.500061988830566
    7. 'nn' → logprob: -12.625061988830566
    8. '(['' → logprob: -13.750061988830566
    9. '(' → logprob: -14.250061988830566
    10. '(["' → logprob: -14.500061988830566

Token 87: '(input' (ID: 10054)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.7944328188896179
    2. '(' → logprob: -1.5444328784942627
    3. '('' → logprob: -1.9194328784942627
    4. '([' → logprob: -2.5444328784942627
    5. '(s' → logprob: -2.7944328784942627
    6. '(['' → logprob: -3.6694328784942627
    7. '(["' → logprob: -3.9194328784942627
    8. ')' → logprob: -7.669432640075684
    9. '((' → logprob: -7.794432640075684
    10. 's' → logprob: -8.044432640075684

Token 88: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1257568895816803
    2. '()' → logprob: -2.8757569789886475
    3. '())' → logprob: -2.8757569789886475
    4. '("' → logprob: -6.125756740570068
    5. '(' → logprob: -6.750756740570068
    6. '())))' → logprob: -7.625756740570068
    7. '('' → logprob: -7.875756740570068
    8. '(""))' → logprob: -8.000757217407227
    9. '()))
' → logprob: -8.500757217407227
    10. '()));' → logprob: -9.250757217407227


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 86
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 65
Précision stricte (1ère position): 45.35%
Précision adaptée (1ère position): 45.35%
Précision (top 10): 75.58%
================================================================================
