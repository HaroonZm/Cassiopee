================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(999_999_999)

I = lambda: int(input())
M = lambda: map(int, input().split())
M1 = lambda: map(lambda x: int(x)-1, input().split())
L = lambda: [int(x) for x in input().split()]
L1 = lambda: [int(x)-1 for x in input().split()]
LL = lambda n: [L() for _ in range(n)]
SL = lambda: input().split()
CS = lambda: list(input())
pl = lambda xs, sep=' ': print(sep.join(str(e) for e in xs))
Ω = float('inf')

def abacaba():
    Q = CS()
    n = len(Q)
    m = 10**9+7
    dp = [[0]*13 for _ in[0]*(n+1)]
    dp[0][0] = 1
    tmp = 1
    for i, ch in enumerate(reversed(Q)):
        if ch == '?':
            for dg in range(0,10):
                for r in range(13):
                    p = (dg*tmp + r) % 13
                    dp[i+1][p] = (dp[i+1][p] + dp[i][r]) % m
        else:
            val = int(ch)
            for r in range(13):
                p = (val*tmp + r) % 13
                dp[i+1][p] = (dp[i+1][p] + dp[i][r]) % m
        tmp = (tmp*10) % 13
    print(dp[n][5]%m)

if __name__ == "__main__":
    abacaba()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975533962249756
    2. '\n' → logprob: -0.8225533962249756
    3. '<|end|>' → logprob: -3.5725533962249756
    4. '\' → logprob: -4.322553634643555
    5. 'newline' → logprob: -5.072553634643555
    6. 'import' → logprob: -5.322553634643555
    7. '<|end|>' → logprob: -5.947553634643555
    8. '```' → logprob: -6.572553634643555
    9. '' → logprob: -6.822553634643555
    10. '
' → logprob: -6.947553634643555

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.248469718324486e-05
    2. '[' → logprob: -12.250022888183594
    3. ' .' → logprob: -12.375022888183594
    4. '.import' → logprob: -13.250022888183594
    5. '.`' → logprob: -13.750022888183594
    6. '.user' → logprob: -14.125022888183594
    7. '.readline' → logprob: -14.250022888183594
    8. '.next' → logprob: -14.375022888183594
    9. '```' → logprob: -14.375022888183594
    10. '."""' → logprob: -14.375022888183594

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5748613476753235
    2. '_trace' → logprob: -1.5748612880706787
    3. ' _' → logprob: -3.1998612880706787
    4. '_exc' → logprob: -3.3248612880706787
    5. '_version' → logprob: -3.5748612880706787
    6. '_ex' → logprob: -3.5748612880706787
    7. '_encoding' → logprob: -3.6998612880706787
    8. 'trace' → logprob: -4.824861526489258
    9. '_default' → logprob: -5.449861526489258
    10. '_set' → logprob: -5.449861526489258

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0020086953882128
    2. 'ursive' → logprob: -6.37700891494751
    3. 'urs' → logprob: -9.002008438110352
    4. 'ision' → logprob: -10.377008438110352
    5. 'ursor' → logprob: -10.752008438110352
    6. '_sys' → logprob: -10.877008438110352
    7. 'ursively' → logprob: -11.127008438110352
    8. 'sys' → logprob: -11.627008438110352
    9. 'set' → logprob: -11.627008438110352
    10. 'ur' → logprob: -11.877008438110352

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.11349532008171082
    2. '_limit' → logprob: -2.238495349884033
    3. '_depth' → logprob: -7.738495349884033
    4. 'depth' → logprob: -8.613494873046875
    5. 'lim' → logprob: -11.238494873046875
    6. ' limit' → logprob: -11.363494873046875
    7. 'error' → logprob: -11.363494873046875
    8. '_stack' → logprob: -13.113494873046875
    9. '_' → logprob: -13.363494873046875
    10. '_threshold' → logprob: -13.488494873046875

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0325924449716695e-05
    2. '(
' → logprob: -12.37501049041748
    3. ' (' → logprob: -12.50001049041748
    4. '(

' → logprob: -13.25001049041748
    5. '((' → logprob: -15.75001049041748
    6. '("("' → logprob: -15.87501049041748
    7. '('' → logprob: -16.875009536743164
    8. '(
' → logprob: -17.000009536743164
    9. '(None' → logprob: -17.500009536743164
    10. '()' → logprob: -17.500009536743164

Token 9: '999' (ID: 9130)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6933116912841797
    2. '100' → logprob: -0.6933116912841797
    3. ' ' → logprob: -9.31831169128418
    4. '500' → logprob: -9.94331169128418
    5. '300' → logprob: -11.56831169128418
    6. '999' → logprob: -12.69331169128418
    7. '250' → logprob: -12.81831169128418
    8. '1' → logprob: -12.94331169128418
    9. '150' → logprob: -12.94331169128418
    10. '200' → logprob: -13.31831169128418

Token 10: '_' (ID: 62)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.1015322357416153
    2. ')' → logprob: -2.351532220840454
    3. '99' → logprob: -7.101532459259033
    4. '999' → logprob: -7.976532459259033
    5. '))' → logprob: -9.351531982421875
    6. ' )' → logprob: -10.601531982421875
    7. '```' → logprob: -11.101531982421875
    8. ' ' → logprob: -11.976531982421875
    9. '+' → logprob: -11.976531982421875
    10. '   ' → logprob: -12.601531982421875

Token 11: '999' (ID: 9130)
  Prédit: '999'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '999' → logprob: -0.21123550832271576
    2. '_' → logprob: -1.961235523223877
    3. '9' → logprob: -3.086235523223877
    4. '99' → logprob: -5.586235523223877
    5. '```' → logprob: -9.086235046386719
    6. ' ' → logprob: -9.461235046386719
    7. ')' → logprob: -9.836235046386719
    8. '990' → logprob: -11.711235046386719
    9. '995' → logprob: -12.273735046386719
    10. '996' → logprob: -12.398735046386719

Token 12: '_' (ID: 62)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.584239938296378e-06
    2. '))' → logprob: -12.125007629394531
    3. ' )' → logprob: -14.000007629394531
    4. ')
' → logprob: -14.500007629394531
    5. '`)' → logprob: -15.750007629394531
    6. ')`' → logprob: -16.12500762939453
    7. '```' → logprob: -16.25000762939453
    8. ')

' → logprob: -16.37500762939453
    9. '')' → logprob: -16.50000762939453
    10. '）' → logprob: -17.12500762939453

Token 13: '999' (ID: 9130)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.15441757265944e-05
    2. ' )' → logprob: -10.625031471252441
    3. '))' → logprob: -12.750031471252441
    4. '_' → logprob: -13.125031471252441
    5. ')
' → logprob: -14.000031471252441
    6. '_)' → logprob: -15.625031471252441
    7. '0' → logprob: -16.000032424926758
    8. ')

' → logprob: -16.000032424926758
    9. '```' → logprob: -16.500032424926758
    10. '(' → logprob: -16.625032424926758

Token 14: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. ' )' → logprob: -13.000004768371582
    3. '))' → logprob: -13.375004768371582
    4. ')
' → logprob: -14.750004768371582
    5. '`)' → logprob: -15.375004768371582
    6. ')`' → logprob: -16.5000057220459
    7. ')

' → logprob: -17.0000057220459
    8. '）' → logprob: -17.3750057220459
    9. '')' → logprob: -17.5000057220459
    10. '```' → logprob: -17.7500057220459

Token 15: 'I' (ID: 40)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35896962881088257
    2. '(' → logprob: -2.4839696884155273
    3. '\' → logprob: -2.7339696884155273
    4. '
' → logprob: -3.1089696884155273
    5. '```' → logprob: -3.3589696884155273
    6. '#' → logprob: -4.358969688415527
    7. '' → logprob: -4.608969688415527
    8. '(
' → logprob: -4.733969688415527
    9. '_' → logprob: -5.233969688415527
    10. 'def' → logprob: -5.483969688415527

Token 16: ' =' (ID: 314)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0074887811206281185
    2. 'n' → logprob: -5.38248872756958
    3. 'mp' → logprob: -6.63248872756958
    4. 'f' → logprob: -6.88248872756958
    5. '.' → logprob: -8.632489204406738
    6. 's' → logprob: -9.257489204406738
    7. 't' → logprob: -9.507489204406738
    8. 'nt' → logprob: -9.632489204406738
    9. ''m' → logprob: -10.382489204406738
    10. '=' → logprob: -11.007489204406738

Token 17: ' lambda' (ID: 27871)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4854988753795624
    2. ' int' → logprob: -1.1104989051818848
    3. 'input' → logprob: -3.7354989051818848
    4. 'int' → logprob: -4.235498905181885
    5. ' lambda' → logprob: -4.735498905181885
    6. ' sys' → logprob: -6.110498905181885
    7. ' map' → logprob: -6.360498905181885
    8. ' list' → logprob: -6.360498905181885
    9. ' ' → logprob: -7.485498905181885
    10. ' iter' → logprob: -7.610498905181885

Token 18: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.17777971923351288
    2. 'x' → logprob: -2.5527796745300293
    3. ' n' → logprob: -2.5527796745300293
    4. 'n' → logprob: -5.927779674530029
    5. ' ' → logprob: -5.927779674530029
    6. ' i' → logprob: -7.177779674530029
    7. ' a' → logprob: -8.177780151367188
    8. 'a' → logprob: -9.052780151367188
    9. 'i' → logprob: -9.052780151367188
    10. ':' → logprob: -9.177780151367188

Token 19: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05783294513821602
    2. ' int' → logprob: -2.932832956314087
    3. 'input' → logprob: -6.307832717895508
    4. 'sys' → logprob: -7.557832717895508
    5. ' sys' → logprob: -8.557832717895508
    6. 'map' → logprob: -8.682832717895508
    7. ' input' → logprob: -8.807832717895508
    8. ' map' → logprob: -9.682832717895508
    9. 'list' → logprob: -11.432832717895508
    10. ' list' → logprob: -12.182832717895508

Token 20: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17834407091140747
    2. '(input' → logprob: -1.9283440113067627
    3. '(sys' → logprob: -4.178344249725342
    4. '()' → logprob: -6.303344249725342
    5. '(ord' → logprob: -7.803344249725342
    6. '((' → logprob: -8.678343772888184
    7. '(
' → logprob: -9.678343772888184
    8. 'input' → logprob: -9.803343772888184
    9. '(open' → logprob: -10.678343772888184
    10. '('' → logprob: -10.678343772888184

Token 21: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00577520439401269
    2. '()' → logprob: -5.255774974822998
    3. '()))' → logprob: -7.630774974822998
    4. ' ())' → logprob: -10.755775451660156
    5. '(' → logprob: -11.130775451660156
    6. ')' → logprob: -11.755775451660156
    7. '().' → logprob: -12.255775451660156
    8. '(()' → logprob: -13.005775451660156
    9. '()),' → logprob: -13.505775451660156
    10. '();)' → logprob: -13.630775451660156

Token 22: 'M' (ID: 44)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21257278323173523
    2. '\' → logprob: -2.7125728130340576
    3. ')' → logprob: -3.0875728130340576
    4. '()' → logprob: -4.2125725746154785
    5. '\n' → logprob: -4.4625725746154785
    6. '(
' → logprob: -4.4625725746154785
    7. '\(' → logprob: -5.0875725746154785
    8. 'def' → logprob: -5.2125725746154785
    9. '_' → logprob: -5.4625725746154785
    10. 'D' → logprob: -5.7125725746154785

Token 23: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7691895365715027
    2. ' =' → logprob: -1.2691895961761475
    3. 'A' → logprob: -2.3941895961761475
    4. 'AP' → logprob: -2.7691895961761475
    5. 'ap' → logprob: -3.0191895961761475
    6. 'a' → logprob: -3.0191895961761475
    7. 'ax' → logprob: -6.519189357757568
    8. '=A' → logprob: -6.894189357757568
    9. '=a' → logprob: -8.394189834594727
    10. '   ' → logprob: -8.519189834594727

Token 24: ' lambda' (ID: 27871)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4224066138267517
    2. '10' → logprob: -2.1724066734313965
    3. ' int' → logprob: -2.5474066734313965
    4. ' ' → logprob: -2.6724066734313965
    5. 'lambda' → logprob: -3.5474066734313965
    6. '100' → logprob: -3.7974066734313965
    7. ' lambda' → logprob: -4.0474066734313965
    8. ' map' → logprob: -5.4224066734313965
    9. 'map' → logprob: -5.6724066734313965
    10. '[int' → logprob: -5.7974066734313965

Token 25: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16086049377918243
    2. ' :' → logprob: -1.910860538482666
    3. ':int' → logprob: -8.535860061645508
    4. ':list' → logprob: -8.910860061645508
    5. 'int' → logprob: -9.160860061645508
    6. ' ' → logprob: -9.910860061645508
    7. 'input' → logprob: -10.160860061645508
    8. ' int' → logprob: -10.535860061645508
    9. ' input' → logprob: -10.660860061645508
    10. '  ' → logprob: -10.785860061645508

Token 26: ' map' (ID: 4014)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.33482688665390015
    2. 'map' → logprob: -1.584826946258545
    3. 'list' → logprob: -3.459826946258545
    4. 'input' → logprob: -3.584826946258545
    5. ' map' → logprob: -4.209826946258545
    6. ' int' → logprob: -5.709826946258545
    7. ' list' → logprob: -6.584826946258545
    8. '[int' → logprob: -7.834826946258545
    9. ' input' → logprob: -8.084826469421387
    10. '(int' → logprob: -10.459826469421387

Token 27: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.4749031066894531
    2. '(' → logprob: -0.9749031066894531
    3. '(str' → logprob: -7.849903106689453
    4. '(input' → logprob: -8.099903106689453
    5. '(lambda' → logprob: -9.349903106689453
    6. '(
' → logprob: -11.099903106689453
    7. '<int' → logprob: -12.349903106689453
    8. ' (' → logprob: -12.349903106689453
    9. '(eval' → logprob: -12.349903106689453
    10. 'int' → logprob: -12.974903106689453

Token 28: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0005340866628102958
    2. ' (' → logprob: -8.125534057617188
    3. '(' → logprob: -8.875534057617188
    4. ',input' → logprob: -10.000534057617188
    5. 'input' → logprob: -10.375534057617188
    6. ')' → logprob: -11.375534057617188
    7. '=input' → logprob: -12.125534057617188
    8. ' input' → logprob: -12.750534057617188
    9. ')(' → logprob: -14.500534057617188
    10. '<input' → logprob: -15.125534057617188

Token 29: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029751643538475037
    2. ' input' → logprob: -3.5297515392303467
    3. 'sys' → logprob: -15.029751777648926
    4. ')' → logprob: -15.154751777648926
    5. '(input' → logprob: -15.779751777648926
    6. ' ' → logprob: -16.02975082397461
    7. ',input' → logprob: -16.02975082397461
    8. '	input' → logprob: -16.52975082397461
    9. '=input' → logprob: -16.52975082397461
    10. ' sys' → logprob: -16.90475082397461

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0018177436431869864
    2. '()' → logprob: -6.37681770324707
    3. '())' → logprob: -9.12681770324707
    4. '(' → logprob: -12.62681770324707
    5. ' ().' → logprob: -13.50181770324707
    6. ')' → logprob: -13.62681770324707
    7. '.' → logprob: -15.25181770324707
    8. '()`' → logprob: -16.25181770324707
    9. 'split' → logprob: -16.62681770324707
    10. '()
' → logprob: -16.87681770324707

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00018422940047457814
    2. 'strip' → logprob: -8.625184059143066
    3. 'rstrip' → logprob: -13.250184059143066
    4. ' split' → logprob: -13.375184059143066
    5. 'spl' → logprob: -14.500184059143066
    6. ')' → logprob: -14.625184059143066
    7. '(split' → logprob: -15.375184059143066
    8. 'read' → logprob: -16.375185012817383
    9. 's' → logprob: -16.500185012817383
    10. 'plit' → logprob: -18.625185012817383

Token 32: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0025404668413102627
    2. '()' → logprob: -6.502540588378906
    3. ')' → logprob: -7.002540588378906
    4. '()))' → logprob: -9.127540588378906
    5. '())
' → logprob: -11.752540588378906
    6. '))' → logprob: -11.752540588378906
    7. ' ())' → logprob: -13.002540588378906
    8. '();)' → logprob: -14.877540588378906
    9. '(' → logprob: -15.002540588378906
    10. '()),' → logprob: -16.252540588378906

Token 33: 'M' (ID: 44)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11113319545984268
    2. 'def' → logprob: -3.111133098602295
    3. 'N' → logprob: -3.611133098602295
    4. 'd' → logprob: -4.361133098602295
    5. 'D' → logprob: -4.611133098602295
    6. '_' → logprob: -5.861133098602295
    7. '\' → logprob: -6.236133098602295
    8. 'a' → logprob: -6.736133098602295
    9. 'A' → logprob: -6.861133098602295
    10. 'R' → logprob: -7.611133098602295

Token 34: '1' (ID: 16)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002137882256647572
    2. '(' → logprob: -9.000213623046875
    3. '())' → logprob: -10.750213623046875
    4. '()(' → logprob: -10.750213623046875
    5. '()]' → logprob: -11.000213623046875
    6. '()
' → logprob: -11.375213623046875
    7. ' ()' → logprob: -12.750213623046875
    8. '()>' → logprob: -12.875213623046875
    9. '()

' → logprob: -13.125213623046875
    10. '()*' → logprob: -13.500213623046875

Token 35: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009114852175116539
    2. ' =' → logprob: -6.009114742279053
    3. '1' → logprob: -6.509114742279053
    4. ')' → logprob: -7.134114742279053
    5. '=' → logprob: -7.134114742279053
    6. '():' → logprob: -7.259114742279053
    7. ':' → logprob: -7.384114742279053
    8. '0' → logprob: -7.384114742279053
    9. '())' → logprob: -8.509115219116211
    10. '()]' → logprob: -8.634115219116211

Token 36: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5399028062820435
    2. ' lambda' → logprob: -0.9149028062820435
    3. 'int' → logprob: -4.289902687072754
    4. '(lambda' → logprob: -6.664902687072754
    5. ' int' → logprob: -8.039902687072754
    6. 'list' → logprob: -8.414902687072754
    7. '=lambda' → logprob: -8.414902687072754
    8. 'map' → logprob: -8.664902687072754
    9. 'ambda' → logprob: -8.664902687072754
    10. ' lamb' → logprob: -9.039902687072754

Token 37: ':' (ID: 25)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06024724245071411
    2. ':' → logprob: -3.5602471828460693
    3. ' int' → logprob: -3.6852471828460693
    4. ':int' → logprob: -5.560247421264648
    5. 'lambda' → logprob: -7.435247421264648
    6. '(int' → logprob: -8.685247421264648
    7. ' lambda' → logprob: -8.810247421264648
    8. '1' → logprob: -9.185247421264648
    9. '[int' → logprob: -10.810247421264648
    10. 'input' → logprob: -11.435247421264648

Token 38: ' map' (ID: 4014)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.7034326791763306
    2. 'map' → logprob: -0.7034326791763306
    3. '[int' → logprob: -5.453432559967041
    4. 'list' → logprob: -5.953432559967041
    5. ' map' → logprob: -6.078432559967041
    6. 'input' → logprob: -7.328432559967041
    7. ' int' → logprob: -8.0784330368042
    8. '[' → logprob: -10.3284330368042
    9. '(int' → logprob: -10.9534330368042
    10. ' list' → logprob: -11.2034330368042

Token 39: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -8.0536883615423e-05
    2. '(str' → logprob: -10.500080108642578
    3. '1' → logprob: -10.625080108642578
    4. 'int' → logprob: -10.750080108642578
    5. '(' → logprob: -13.125080108642578
    6. '(lambda' → logprob: -13.125080108642578
    7. '<int' → logprob: -14.125080108642578
    8. 'str' → logprob: -14.500080108642578
    9. '=int' → logprob: -14.625080108642578
    10. '[int' → logprob: -14.750080108642578

Token 40: ' x' (ID: 1215)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.244597390294075
    2. ' int' → logprob: -1.7445974349975586
    3. ' x' → logprob: -3.4945974349975586
    4. 'x' → logprob: -4.619597434997559
    5. ':int' → logprob: -6.619597434997559
    6. '(int' → logprob: -8.244597434997559
    7. 's' → logprob: -9.119597434997559
    8. '<int' → logprob: -9.744597434997559
    9. ' s' → logprob: -10.119597434997559
    10. ':' → logprob: -10.369597434997559

Token 41: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2522996664047241
    2. ':int' → logprob: -1.5022996664047241
    3. ' :' → logprob: -8.127299308776855
    4. 'int' → logprob: -10.502299308776855
    5. '=int' → logprob: -10.627299308776855
    6. ':x' → logprob: -12.127299308776855
    7. ':_' → logprob: -12.877299308776855
    8. ',int' → logprob: -13.002299308776855
    9. ':str' → logprob: -13.377299308776855
    10. '_:' → logprob: -13.502299308776855

Token 42: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14985120296478271
    2. ' int' → logprob: -2.3998513221740723
    3. 'x' → logprob: -3.6498513221740723
    4. ' x' → logprob: -3.8998513221740723
    5. '(int' → logprob: -6.899851322174072
    6. '1' → logprob: -8.149850845336914
    7. 'max' → logprob: -8.774850845336914
    8. 'str' → logprob: -9.024850845336914
    9. ' max' → logprob: -9.399850845336914
    10. '[int' → logprob: -9.399850845336914

Token 43: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.002855159342288971
    2. '(' → logprob: -5.87785530090332
    3. 'x' → logprob: -10.37785530090332
    4. ')' → logprob: -11.62785530090332
    5. ' x' → logprob: -13.37785530090332
    6. ')x' → logprob: -13.37785530090332
    7. ' (' → logprob: -13.62785530090332
    8. '(
' → logprob: -14.00285530090332
    9. '(input' → logprob: -14.12785530090332
    10. ')(' → logprob: -14.62785530090332

Token 44: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7811326384544373
    2. ')-' → logprob: -1.156132698059082
    3. ')+' → logprob: -1.531132698059082
    4. '-' → logprob: -5.531132698059082
    5. '),' → logprob: -5.531132698059082
    6. '.strip' → logprob: -7.281132698059082
    7. '+' → logprob: -7.281132698059082
    8. ')x' → logprob: -8.281132698059082
    9. '(x' → logprob: -8.531132698059082
    10. '[' → logprob: -8.531132698059082

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '<|end|>' → logprob: -18.250335693359375
    4. 'int' → logprob: -19.125335693359375
    5. '0' → logprob: -19.500335693359375
    6. ' one' → logprob: -20.000335693359375
    7. '...' → logprob: -20.500335693359375
    8. ')' → logprob: -20.750335693359375
    9. '2' → logprob: -20.875335693359375
    10. '111' → logprob: -21.000335693359375

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023616172838956118
    2. ',input' → logprob: -6.12736177444458
    3. ',x' → logprob: -9.377361297607422
    4. ')' → logprob: -9.502361297607422
    5. 'input' → logprob: -11.877361297607422
    6. ' ,' → logprob: -12.752361297607422
    7. ',int' → logprob: -13.002361297607422
    8. '<|end|>' → logprob: -13.502361297607422
    9. ',)' → logprob: -14.002361297607422
    10. '(input' → logprob: -14.127361297607422

Token 47: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3868717551231384
    2. ' input' → logprob: -1.1368718147277832
    3. '<input' → logprob: -15.261871337890625
    4. ' ' → logprob: -15.636871337890625
    5. '	input' → logprob: -16.011871337890625
    6. '(input' → logprob: -16.386871337890625
    7. 'sys' → logprob: -17.761871337890625
    8. '[input' → logprob: -17.761871337890625
    9. '=input' → logprob: -18.136871337890625
    10. ',input' → logprob: -18.136871337890625

Token 48: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1398757123970427e-05
    2. '()' → logprob: -11.750011444091797
    3. '.split' → logprob: -12.625011444091797
    4. ' ().' → logprob: -16.375011444091797
    5. 'split' → logprob: -17.000011444091797
    6. '(' → logprob: -17.875011444091797
    7. ')' → logprob: -18.125011444091797
    8. '.' → logprob: -18.250011444091797
    9. '().__' → logprob: -18.875011444091797
    10. ' .' → logprob: -18.875011444091797

Token 49: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.988221684878226e-06
    2. 'strip' → logprob: -12.125006675720215
    3. ' split' → logprob: -13.500006675720215
    4. 'rstrip' → logprob: -16.25000762939453
    5. 'spl' → logprob: -18.50000762939453
    6. '.split' → logprob: -19.37500762939453
    7. '(split' → logprob: -19.87500762939453
    8. '```' → logprob: -20.00000762939453
    9. 'plit' → logprob: -20.87500762939453
    10. 'read' → logprob: -22.25000762939453

Token 50: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.020021356642246246
    2. ')' → logprob: -4.270021438598633
    3. '()' → logprob: -5.145021438598633
    4. '()))' → logprob: -12.645021438598633
    5. ' ())' → logprob: -12.645021438598633
    6. '))' → logprob: -13.145021438598633
    7. '())
' → logprob: -13.395021438598633
    8. '();)' → logprob: -14.145021438598633
    9. '(' → logprob: -14.895021438598633
    10. '()]' → logprob: -15.020021438598633

Token 51: 'L' (ID: 43)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15847885608673096
    2. 'N' → logprob: -2.2834787368774414
    3. 'D' → logprob: -4.158478736877441
    4. 'A' → logprob: -5.283478736877441
    5. 'def' → logprob: -5.283478736877441
    6. 'd' → logprob: -5.283478736877441
    7. 'S' → logprob: -5.658478736877441
    8. '#' → logprob: -6.533478736877441
    9. 'a' → logprob: -6.783478736877441
    10. '_' → logprob: -6.908478736877441

Token 52: ' =' (ID: 314)
  Prédit: 'ambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ambda' → logprob: -0.15194760262966156
    2. ' =' → logprob: -2.401947498321533
    3. 'ist' → logprob: -3.151947498321533
    4. '=' → logprob: -5.401947498321533
    5. '=lambda' → logprob: -7.151947498321533
    6. '   ' → logprob: -7.401947498321533
    7. 'amb' → logprob: -7.901947498321533
    8. 'a' → logprob: -7.901947498321533
    9. '=[]' → logprob: -8.401947975158691
    10. 'i' → logprob: -8.401947975158691

Token 53: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5218198895454407
    2. 'list' → logprob: -1.521819829940796
    3. ' lambda' → logprob: -2.646819829940796
    4. 'ist' → logprob: -3.021819829940796
    5. 'ambda' → logprob: -3.021819829940796
    6. '[]' → logprob: -4.771820068359375
    7. ' list' → logprob: -4.896820068359375
    8. '=lambda' → logprob: -6.771820068359375
    9. 'map' → logprob: -7.896820068359375
    10. 'm' → logprob: -7.896820068359375

Token 54: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12684233486652374
    2. ' lambda' → logprob: -2.8768422603607178
    3. 'lambda' → logprob: -3.5018422603607178
    4. 'ambda' → logprob: -4.376842498779297
    5. ' list' → logprob: -4.376842498779297
    6. ':list' → logprob: -5.501842498779297
    7. 'list' → logprob: -6.376842498779297
    8. 'int' → logprob: -7.501842498779297
    9. 'ist' → logprob: -8.001842498779297
    10. 'mb' → logprob: -8.876842498779297

Token 55: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5761115550994873
    2. ' list' → logprob: -0.8261115550994873
    3. 'ist' → logprob: -8.951111793518066
    4. 'input' → logprob: -10.951111793518066
    5. '[list' → logprob: -11.576111793518066
    6. '[' → logprob: -12.076111793518066
    7. ' input' → logprob: -12.326111793518066
    8. ' [' → logprob: -13.826111793518066
    9. '[]' → logprob: -14.326111793518066
    10. '=list' → logprob: -14.576111793518066

Token 56: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.5048530030981055e-06
    2. ' int' → logprob: -14.375001907348633
    3. ']int' → logprob: -14.625001907348633
    4. '*' → logprob: -15.625001907348633
    5. ']' → logprob: -16.750001907348633
    6. '0' → logprob: -16.875001907348633
    7. 'list' → logprob: -17.625001907348633
    8. '(int' → logprob: -18.000001907348633
    9. '```' → logprob: -18.000001907348633
    10. '
' → logprob: -18.125001907348633

Token 57: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.04194900393486023
    2. '(input' → logprob: -3.2919490337371826
    3. '(i' → logprob: -5.6669487953186035
    4. '(' → logprob: -8.166949272155762
    5. '(s' → logprob: -9.041949272155762
    6. ' (' → logprob: -10.666949272155762
    7. ']' → logprob: -12.291949272155762
    8. '(a' → logprob: -12.541949272155762
    9. 'input' → logprob: -12.791949272155762
    10. '(
' → logprob: -13.666949272155762

Token 58: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09666034579277039
    2. 'for' → logprob: -2.5966603755950928
    3. ' for' → logprob: -4.096660137176514
    4. '(x' → logprob: -7.971660137176514
    5. 'or' → logprob: -8.471660614013672
    6. '=input' → logprob: -9.096660614013672
    7. 'input' → logprob: -9.221660614013672
    8. '(input' → logprob: -9.346660614013672
    9. 'in' → logprob: -10.221660614013672
    10. ']' → logprob: -10.846660614013672

Token 59: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16063393652439117
    2. ' for' → logprob: -1.91063392162323
    3. ')' → logprob: -8.41063404083252
    4. 'or' → logprob: -9.03563404083252
    5. 'input' → logprob: -10.78563404083252
    6. 'in' → logprob: -11.41063404083252
    7. 'x' → logprob: -11.66063404083252
    8. ']' → logprob: -12.16063404083252
    9. '	for' → logprob: -12.53563404083252
    10. ' in' → logprob: -12.66063404083252

Token 60: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.12693051993846893
    2. 'input' → logprob: -2.1269304752349854
    3. '=input' → logprob: -14.001930236816406
    4. '(input' → logprob: -14.501930236816406
    5. '	input' → logprob: -15.001930236816406
    6. ' x' → logprob: -15.126930236816406
    7. ' ' → logprob: -15.626930236816406
    8. '<input' → logprob: -15.751930236816406
    9. 'x' → logprob: -15.876930236816406
    10. ',input' → logprob: -16.626930236816406

Token 61: ' in' (ID: 306)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.760964035987854
    2. '(input' → logprob: -1.010964035987854
    3. ' input' → logprob: -2.6359639167785645
    4. ' in' → logprob: -2.8859639167785645
    5. '(' → logprob: -4.1359639167785645
    6. 'in' → logprob: -4.3859639167785645
    7. '=input' → logprob: -4.5109639167785645
    8. '	input' → logprob: -7.3859639167785645
    9. ' ' → logprob: -8.135964393615723
    10. '<|end|>' → logprob: -8.385964393615723

Token 62: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16022726893424988
    2. ' input' → logprob: -1.9102272987365723
    3. ' ' → logprob: -14.160226821899414
    4. ' sys' → logprob: -14.160226821899414
    5. 'sys' → logprob: -14.410226821899414
    6. 'range' → logprob: -14.660226821899414
    7. '(input' → logprob: -15.410226821899414
    8. ' range' → logprob: -15.535226821899414
    9. '	input' → logprob: -16.535226821899414
    10. '=input' → logprob: -16.535226821899414

Token 63: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.42940714955329895
    2. '()]' → logprob: -1.1794071197509766
    3. '()' → logprob: -3.1794071197509766
    4. '()][' → logprob: -11.429407119750977
    5. '()].' → logprob: -11.804407119750977
    6. '())' → logprob: -11.929407119750977
    7. '()[' → logprob: -13.304407119750977
    8. ']' → logprob: -13.429407119750977
    9. '(' → logprob: -13.679407119750977
    10. '()],' → logprob: -14.179407119750977

Token 64: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002788551209960133
    2. 'strip' → logprob: -8.25027847290039
    3. 'rstrip' → logprob: -11.00027847290039
    4. ' split' → logprob: -14.37527847290039
    5. 'spl' → logprob: -15.25027847290039
    6. '(split' → logprob: -18.62527847290039
    7. ' strip' → logprob: -21.25027847290039
    8. 'plit' → logprob: -21.50027847290039
    9. 's' → logprob: -21.62527847290039
    10. '.split' → logprob: -21.75027847290039

Token 65: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -4.7159857786027715e-05
    2. '()' → logprob: -10.125046730041504
    3. ']' → logprob: -12.000046730041504
    4. '(' → logprob: -14.625046730041504
    5. '()]
' → logprob: -15.125046730041504
    6. '())' → logprob: -16.62504768371582
    7. ']()' → logprob: -16.75004768371582
    8. '()][' → logprob: -17.75004768371582
    9. '()],' → logprob: -17.87504768371582
    10. ' ()' → logprob: -18.00004768371582

Token 66: 'L' (ID: 43)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2571726441383362
    2. 'D' → logprob: -2.6321725845336914
    3. 'd' → logprob: -2.7571725845336914
    4. 'def' → logprob: -3.3821725845336914
    5. '#' → logprob: -3.5071725845336914
    6. 'N' → logprob: -4.632172584533691
    7. ' ' → logprob: -5.757172584533691
    8. '\' → logprob: -6.257172584533691
    9. 'r' → logprob: -6.382172584533691
    10. 'a' → logprob: -6.757172584533691

Token 67: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3485223352909088
    2. '()' → logprob: -1.2235223054885864
    3. '()[' → logprob: -10.598522186279297
    4. '()]' → logprob: -11.348522186279297
    5. '()
' → logprob: -11.723522186279297
    6. '(
' → logprob: -11.973522186279297
    7. '[' → logprob: -12.723522186279297
    8. '()

' → logprob: -12.848522186279297
    9. '([' → logprob: -12.973522186279297
    10. '().' → logprob: -13.473522186279297

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20155073702335358
    2. '=' → logprob: -1.7015507221221924
    3. '=lambda' → logprob: -8.951550483703613
    4. '<|end|>' → logprob: -12.451550483703613
    5. ' ' → logprob: -13.076550483703613
    6. '(' → logprob: -14.951550483703613
    7. '＝' → logprob: -15.576550483703613
    8. ':' → logprob: -15.576550483703613
    9. ')' → logprob: -15.576550483703613
    10. '=[]' → logprob: -15.826550483703613

Token 69: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.3874194920063019
    2. 'lambda' → logprob: -1.1374194622039795
    3. '(lambda' → logprob: -7.512419700622559
    4. ' lamb' → logprob: -13.887419700622559
    5. '=lambda' → logprob: -14.637419700622559
    6. '_lambda' → logprob: -15.887419700622559
    7. '[' → logprob: -16.012418746948242
    8. ' ' → logprob: -16.387418746948242
    9. 'lam' → logprob: -16.387418746948242
    10. 'L' → logprob: -16.887418746948242

Token 70: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3725985586643219
    2. ' lambda' → logprob: -1.2475985288619995
    3. ' :' → logprob: -3.997598648071289
    4. 'lambda' → logprob: -5.872598648071289
    5. '(lambda' → logprob: -5.997598648071289
    6. ' ' → logprob: -8.747598648071289
    7. '=lambda' → logprob: -11.622598648071289
    8. '[]' → logprob: -12.497598648071289
    9. ' (' → logprob: -12.497598648071289
    10. ' λ' → logprob: -12.622598648071289

Token 71: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4800857603549957
    2. '[int' → logprob: -1.2300857305526733
    3. ' [' → logprob: -2.480085849761963
    4. '[x' → logprob: -5.480085849761963
    5. '[list' → logprob: -7.605085849761963
    6. '[input' → logprob: -9.105085372924805
    7. 'lambda' → logprob: -9.355085372924805
    8. '[l' → logprob: -9.605085372924805
    9. 'list' → logprob: -9.605085372924805
    10. '[i' → logprob: -9.855085372924805

Token 72: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.7697225252486533e-06
    2. '(int' → logprob: -13.625003814697266
    3. ' int' → logprob: -13.625003814697266
    4. 'lambda' → logprob: -13.750003814697266
    5. '[int' → logprob: -15.750003814697266
    6. 'x' → logprob: -17.375003814697266
    7. '<int' → logprob: -17.500003814697266
    8. '  ' → logprob: -17.750003814697266
    9. '	int' → logprob: -18.500003814697266
    10. '   ' → logprob: -18.875003814697266

Token 73: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.4849443838757e-06
    2. '(' → logprob: -12.375004768371582
    3. 'x' → logprob: -15.875004768371582
    4. ' (' → logprob: -18.000003814697266
    5. '(
' → logprob: -21.750003814697266
    6. '(s' → logprob: -21.750003814697266
    7. '```' → logprob: -21.875003814697266
    8. ' ' → logprob: -22.125003814697266
    9. '(input' → logprob: -22.250003814697266
    10. '((' → logprob: -22.750003814697266

Token 74: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.08115214854478836
    2. ')' → logprob: -2.5811522006988525
    3. '-' → logprob: -6.456151962280273
    4. '(x' → logprob: -7.331151962280273
    5. ' -' → logprob: -11.706151962280273
    6. 'for' → logprob: -12.331151962280273
    7. ' for' → logprob: -12.581151962280273
    8. 'x' → logprob: -12.956151962280273
    9. '()-' → logprob: -13.081151962280273
    10. ' )' → logprob: -13.456151962280273

Token 75: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '<|end|>' → logprob: -15.875021934509277
    4. '   ' → logprob: -18.12502098083496
    5. '  ' → logprob: -18.75002098083496
    6. 'for' → logprob: -19.00002098083496
    7. '
' → logprob: -19.06252098083496
    8. '<|end|>' → logprob: -19.12502098083496
    9. '１' → logprob: -19.31252098083496
    10. '```' → logprob: -19.62502098083496

Token 76: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.11289556324481964
    2. 'for' → logprob: -2.6128954887390137
    3. '(x' → logprob: -3.4878954887390137
    4. '()' → logprob: -5.987895488739014
    5. ')' → logprob: -8.737895965576172
    6. 'x' → logprob: -9.862895965576172
    7. ',' → logprob: -10.237895965576172
    8. '	for' → logprob: -10.237895965576172
    9. ' ' → logprob: -10.862895965576172
    10. ']' → logprob: -10.987895965576172

Token 77: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.12694281339645386
    2. 'input' → logprob: -2.1269428730010986
    3. ' x' → logprob: -11.62694263458252
    4. 'x' → logprob: -12.37694263458252
    5. ' range' → logprob: -14.50194263458252
    6. ' ' → logprob: -15.12694263458252
    7. 'range' → logprob: -15.75194263458252
    8. '_input' → logprob: -15.87694263458252
    9. '<input' → logprob: -15.87694263458252
    10. '(input' → logprob: -16.001943588256836

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18090485036373138
    2. 'in' → logprob: -1.8059048652648926
    3. 'input' → logprob: -8.055904388427734
    4. ' input' → logprob: -8.180904388427734
    5. 'x' → logprob: -8.680904388427734
    6. '(x' → logprob: -8.805904388427734
    7. '(input' → logprob: -9.555904388427734
    8. ' x' → logprob: -9.555904388427734
    9. ' ' → logprob: -10.180904388427734
    10. '=input' → logprob: -10.430904388427734

Token 79: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06196824833750725
    2. ' input' → logprob: -2.8119683265686035
    3. '(input' → logprob: -15.311967849731445
    4. ' ' → logprob: -15.936967849731445
    5. '<input' → logprob: -16.811967849731445
    6. 'L' → logprob: -16.936967849731445
    7. '[input' → logprob: -17.311967849731445
    8. 'I' → logprob: -17.561967849731445
    9. 'range' → logprob: -17.686967849731445
    10. '	input' → logprob: -17.811967849731445

Token 80: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005127601907588542
    2. '()' → logprob: -7.625512599945068
    3. '()]' → logprob: -10.875513076782227
    4. '().__' → logprob: -13.125513076782227
    5. '()].' → logprob: -13.625513076782227
    6. '())' → logprob: -14.250513076782227
    7. '(' → logprob: -14.875513076782227
    8. ' ().' → logprob: -14.875513076782227
    9. '()][' → logprob: -15.500513076782227
    10. ''s' → logprob: -15.625513076782227

Token 81: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.968312951968983e-06
    2. 'strip' → logprob: -11.625009536743164
    3. ' split' → logprob: -14.125009536743164
    4. 'spl' → logprob: -15.500009536743164
    5. 'rstrip' → logprob: -16.750009536743164
    6. ')' → logprob: -17.375009536743164
    7. 's' → logprob: -18.125009536743164
    8. 'read' → logprob: -18.250009536743164
    9. '.split' → logprob: -18.875009536743164
    10. '(split' → logprob: -19.125009536743164

Token 82: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -7.469590491382405e-05
    2. ']' → logprob: -10.00007438659668
    3. '()' → logprob: -10.62507438659668
    4. '(' → logprob: -13.12507438659668
    5. ')]' → logprob: -13.37507438659668
    6. '()]
' → logprob: -14.25007438659668
    7. ']()' → logprob: -14.37507438659668
    8. '`]' → logprob: -15.75007438659668
    9. '()][' → logprob: -16.87507438659668
    10. '()],' → logprob: -17.37507438659668

Token 83: 'LL' (ID: 7454)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6105903387069702
    2. '#' → logprob: -1.7355903387069702
    3. 'd' → logprob: -2.1105904579162598
    4. 'N' → logprob: -2.4855904579162598
    5. 'D' → logprob: -3.3605904579162598
    6. 'a' → logprob: -5.11059045791626
    7. 'A' → logprob: -5.23559045791626
    8. 'r' → logprob: -5.61059045791626
    9. 'def' → logprob: -6.11059045791626
    10. 'E' → logprob: -6.23559045791626

Token 84: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40579622983932495
    2. '()' → logprob: -1.5307962894439697
    3. '=' → logprob: -2.6557962894439697
    4. ' =' → logprob: -3.1557962894439697
    5. '=lambda' → logprob: -6.905796051025391
    6. '(lambda' → logprob: -6.905796051025391
    7. ' ()' → logprob: -8.03079605102539
    8. '<|end|>' → logprob: -8.03079605102539
    9. '()>' → logprob: -8.28079605102539
    10. ']' → logprob: -8.40579605102539

Token 85: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.025039182975888252
    2. ' lambda' → logprob: -4.525039196014404
    3. '(lambda' → logprob: -4.775039196014404
    4. '[' → logprob: -5.775039196014404
    5. '[]' → logprob: -6.525039196014404
    6. '[int' → logprob: -7.775039196014404
    7. ' [' → logprob: -8.025038719177246
    8. '=lambda' → logprob: -10.400038719177246
    9. ' []' → logprob: -10.525038719177246
    10. 'list' → logprob: -11.025038719177246

Token 86: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10066143423318863
    2. ' :' → logprob: -2.350661516189575
    3. '(lambda' → logprob: -8.100661277770996
    4. 'lambda' → logprob: -9.725661277770996
    5. ' lambda' → logprob: -10.225661277770996
    6. ' x' → logprob: -11.475661277770996
    7. ':list' → logprob: -11.850661277770996
    8. '():' → logprob: -12.100661277770996
    9. '(x' → logprob: -12.100661277770996
    10. '=lambda' → logprob: -12.350661277770996

Token 87: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0035213178489357233
    2. ' :' → logprob: -6.00352144241333
    3. ':[' → logprob: -7.00352144241333
    4. '():' → logprob: -9.003520965576172
    5. ':list' → logprob: -12.503520965576172
    6. '()' → logprob: -13.128520965576172
    7. ':[
' → logprob: -13.378520965576172
    8. ':[[' → logprob: -13.503520965576172
    9. '=' → logprob: -13.503520965576172
    10. '[]' → logprob: -14.378520965576172

Token 88: ' [' (ID: 723)
  Prédit: '[L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -0.15656669437885284
    2. '[int' → logprob: -2.156566619873047
    3. '[' → logprob: -3.906566619873047
    4. '[list' → logprob: -5.656566619873047
    5. '[l' → logprob: -5.906566619873047
    6. ' [' → logprob: -6.156566619873047
    7. '[List' → logprob: -8.031566619873047
    8. '[n' → logprob: -9.281566619873047
    9. '[Int' → logprob: -9.531566619873047
    10. '[x' → logprob: -9.906566619873047

Token 89: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.07027485221624374
    2. '[int' → logprob: -3.070274829864502
    3. 'list' → logprob: -4.320274829864502
    4. '[L' → logprob: -5.195274829864502
    5. '[list' → logprob: -7.070274829864502
    6. '[' → logprob: -7.320274829864502
    7. 'int' → logprob: -7.445274829864502
    8. ' [' → logprob: -8.32027530670166
    9. ' L' → logprob: -9.44527530670166
    10. '[List' → logprob: -9.57027530670166

Token 90: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -7.362307223957032e-05
    2. '()]' → logprob: -9.750073432922363
    3. ' ()' → logprob: -11.125073432922363
    4. '()`' → logprob: -16.37507438659668
    5. '（）' → logprob: -16.37507438659668
    6. '())' → logprob: -16.62507438659668
    7. '().' → logprob: -16.87507438659668
    8. '()-' → logprob: -16.87507438659668
    9. '(' → logprob: -17.25007438659668
    10. '()
' → logprob: -17.37507438659668

Token 91: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2906739413738251
    2. ' for' → logprob: -1.4156739711761475
    3. '()' → logprob: -4.790673732757568
    4. ')' → logprob: -6.915673732757568
    5. '(' → logprob: -9.415674209594727
    6. ']' → logprob: -9.790674209594727
    7. '	for' → logprob: -10.540674209594727
    8. '(n' → logprob: -12.290674209594727
    9. '()]' → logprob: -12.415674209594727
    10. ')]' → logprob: -12.665674209594727

Token 92: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6946029663085938
    2. 'range' → logprob: -0.9446029663085938
    3. ' range' → logprob: -2.1946029663085938
    4. '_range' → logprob: -8.319602966308594
    5. ' _' → logprob: -8.569602966308594
    6. '(range' → logprob: -10.569602966308594
    7. '	range' → logprob: -10.569602966308594
    8. '__' → logprob: -13.569602966308594
    9. '_=' → logprob: -14.194602966308594
    10. '_
' → logprob: -14.444602966308594

Token 93: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.0354431867599487
    2. 'range' → logprob: -1.1604431867599487
    3. ' in' → logprob: -1.1604431867599487
    4. 'in' → logprob: -4.035443305969238
    5. ' ' → logprob: -7.785443305969238
    6. '_' → logprob: -9.535443305969238
    7. '	range' → logprob: -10.535443305969238
    8. '_range' → logprob: -11.160443305969238
    9. ' _' → logprob: -11.785443305969238
    10. 'n' → logprob: -12.035443305969238

Token 94: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067156096920371056
    2. ' range' → logprob: -5.006715774536133
    3. '	range' → logprob: -15.756715774536133
    4. 'rang' → logprob: -17.256715774536133
    5. '(range' → logprob: -17.381715774536133
    6. '_range' → logprob: -17.381715774536133
    7. '_' → logprob: -17.381715774536133
    8. 'ran' → logprob: -18.131715774536133
    9. '0' → logprob: -18.381715774536133
    10. 'r' → logprob: -18.631715774536133

Token 95: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002142650482710451
    2. '(' → logprob: -8.500214576721191
    3. 'n' → logprob: -11.500214576721191
    4. '(
' → logprob: -14.875214576721191
    5. ' n' → logprob: -16.125213623046875
    6. ' (' → logprob: -16.375213623046875
    7. '	n' → logprob: -18.125213623046875
    8. ')n' → logprob: -18.375213623046875
    9. '((' → logprob: -20.250213623046875
    10. '_n' → logprob: -20.500213623046875

Token 96: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0002651503309607506
    2. ')' → logprob: -8.875265121459961
    3. ']' → logprob: -9.000265121459961
    4. ')]
' → logprob: -14.625265121459961
    5. ')])' → logprob: -14.750265121459961
    6. '])' → logprob: -15.250265121459961
    7. ')],' → logprob: -15.750265121459961
    8. '')]' → logprob: -15.875265121459961
    9. '()]' → logprob: -16.25026512145996
    10. '])]' → logprob: -16.25026512145996

Token 97: 'SL' (ID: 13090)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7407008409500122
    2. 'D' → logprob: -1.6157008409500122
    3. 'N' → logprob: -2.2407007217407227
    4. 'd' → logprob: -2.6157007217407227
    5. '#' → logprob: -3.3657007217407227
    6. 'R' → logprob: -3.9907007217407227
    7. 'A' → logprob: -4.115700721740723
    8. 'r' → logprob: -4.490700721740723
    9. 'def' → logprob: -4.615700721740723
    10. 'L' → logprob: -5.115700721740723

Token 98: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24556468427181244
    2. ' =' → logprob: -1.8705646991729736
    3. '()' → logprob: -3.7455646991729736
    4. 'ambda' → logprob: -3.8705646991729736
    5. '=lambda' → logprob: -3.9955646991729736
    6. '(' → logprob: -8.245564460754395
    7. '(lambda' → logprob: -8.495564460754395
    8. 'amba' → logprob: -9.495564460754395
    9. 'E' → logprob: -10.370564460754395
    10. 'lambda' → logprob: -10.495564460754395

Token 99: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.35015207529067993
    2. 'lambda' → logprob: -1.3501520156860352
    3. 'ambda' → logprob: -3.350152015686035
    4. '(lambda' → logprob: -6.850152015686035
    5. '=lambda' → logprob: -9.725152015686035
    6. 'input' → logprob: -12.100152015686035
    7. '_lambda' → logprob: -12.475152015686035
    8. ' input' → logprob: -12.600152015686035
    9. 'str' → logprob: -13.475152015686035
    10. 'ist' → logprob: -13.975152015686035

Token 100: ':' (ID: 25)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.4469298124313354
    2. ' input' → logprob: -1.5719298124313354
    3. ':' → logprob: -1.9469298124313354
    4. 'str' → logprob: -2.071929931640625
    5. 'lambda' → logprob: -2.071929931640625
    6. ' str' → logprob: -2.821929931640625
    7. ' lambda' → logprob: -2.821929931640625
    8. 'list' → logprob: -4.196929931640625
    9. ' list' → logprob: -4.696929931640625
    10. 'n' → logprob: -5.196929931640625

Token 101: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11658403277397156
    2. ' input' → logprob: -2.241584062576294
    3. 'list' → logprob: -5.741583824157715
    4. ' list' → logprob: -8.241583824157715
    5. 'sys' → logprob: -8.866583824157715
    6. '[input' → logprob: -9.616583824157715
    7. 'str' → logprob: -10.241583824157715
    8. ' sys' → logprob: -11.241583824157715
    9. '[' → logprob: -11.866583824157715
    10. '(input' → logprob: -12.491583824157715

Token 102: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.9623810658231378e-05
    2. '().' → logprob: -11.750020027160645
    3. ' ()' → logprob: -12.125020027160645
    4. '()]' → logprob: -13.125020027160645
    5. '()
' → logprob: -13.500020027160645
    6. '())' → logprob: -14.000020027160645
    7. '()

' → logprob: -14.375020027160645
    8. '()`' → logprob: -15.000020027160645
    9. ']()' → logprob: -15.250020027160645
    10. '`()' → logprob: -15.625020027160645

Token 103: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0002491807099431753
    2. 'rstrip' → logprob: -8.500248908996582
    3. 'split' → logprob: -10.000248908996582
    4. 'str' → logprob: -15.125248908996582
    5. ' strip' → logprob: -17.5002498626709
    6. 'startswith' → logprob: -18.7502498626709
    7. 'stri' → logprob: -18.8752498626709
    8. '_strip' → logprob: -19.7502498626709
    9. 'rst' → logprob: -20.3752498626709
    10. 'read' → logprob: -20.5002498626709

Token 104: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00010723850573413074
    2. '(' → logprob: -9.500106811523438
    3. '()
' → logprob: -10.750106811523438
    4. '()

' → logprob: -12.750106811523438
    5. '()]' → logprob: -13.125106811523438
    6. '()`' → logprob: -13.375106811523438
    7. '()<' → logprob: -13.750106811523438
    8. '()>' → logprob: -14.250106811523438
    9. ')' → logprob: -14.750106811523438
    10. '())' → logprob: -14.875106811523438

Token 105: 'CS' (ID: 9310)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1680176258087158
    2. 'D' → logprob: -1.6680176258087158
    3. 'def' → logprob: -1.6680176258087158
    4. 'N' → logprob: -2.418017625808716
    5. 'd' → logprob: -2.543017625808716
    6. '#' → logprob: -3.668017625808716
    7. 'A' → logprob: -3.918017625808716
    8. 'S' → logprob: -4.168017387390137
    9. 'a' → logprob: -4.168017387390137
    10. 'R' → logprob: -4.668017387390137

Token 106: ' =' (ID: 314)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.24647386372089386
    2. ' =' → logprob: -2.871473789215088
    3. '=' → logprob: -2.996473789215088
    4. 'L' → logprob: -3.621473789215088
    5. 'T' → logprob: -3.746473789215088
    6. 'et' → logprob: -3.871473789215088
    7. 'E' → logprob: -4.246473789215088
    8. 'tring' → logprob: -4.621473789215088
    9. '=lambda' → logprob: -5.996473789215088
    10. '=input' → logprob: -6.121473789215088

Token 107: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.40044111013412476
    2. 'input' → logprob: -1.9004411697387695
    3. ' lambda' → logprob: -2.4004411697387695
    4. 'list' → logprob: -2.9004411697387695
    5. 'str' → logprob: -4.5254411697387695
    6. 'set' → logprob: -4.5254411697387695
    7. ' input' → logprob: -4.9004411697387695
    8. ' list' → logprob: -6.1504411697387695
    9. 'int' → logprob: -6.9004411697387695
    10. '(lambda' → logprob: -7.5254411697387695

Token 108: ':' (ID: 25)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0262821912765503
    2. ':' → logprob: -1.1512821912765503
    3. ' input' → logprob: -2.15128231048584
    4. 'list' → logprob: -2.27628231048584
    5. ' list' → logprob: -3.02628231048584
    6. '()' → logprob: -4.65128231048584
    7. '():' → logprob: -4.77628231048584
    8. 'int' → logprob: -5.02628231048584
    9. 'str' → logprob: -5.02628231048584
    10. ':list' → logprob: -5.02628231048584

Token 109: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7045974731445312
    2. 'list' → logprob: -0.8295974731445312
    3. ' input' → logprob: -3.3295974731445312
    4. ' list' → logprob: -4.079597473144531
    5. '[input' → logprob: -4.204597473144531
    6. '[' → logprob: -6.829597473144531
    7. 'sys' → logprob: -8.579597473144531
    8. 'int' → logprob: -9.454597473144531
    9. ' [' → logprob: -9.704597473144531
    10. 'str' → logprob: -9.829597473144531

Token 110: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.12363114953041077
    2. '()' → logprob: -2.623631238937378
    3. '(' → logprob: -3.623631238937378
    4. '(str' → logprob: -4.623631000518799
    5. 'input' → logprob: -5.748631000518799
    6. '<|end|>' → logprob: -6.123631000518799
    7. '(int' → logprob: -7.498631000518799
    8. '(map' → logprob: -7.748631000518799
    9. '```' → logprob: -9.248631477355957
    10. '(token' → logprob: -9.373631477355957

Token 111: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06230824068188667
    2. '()' → logprob: -2.8123083114624023
    3. '().' → logprob: -8.062308311462402
    4. ' ())' → logprob: -11.687308311462402
    5. '();)' → logprob: -11.687308311462402
    6. '()]' → logprob: -12.687308311462402
    7. '()))' → logprob: -13.562308311462402
    8. ')' → logprob: -13.812308311462402
    9. '()[' → logprob: -14.562308311462402
    10. '());' → logprob: -14.687308311462402

Token 112: 'pl' (ID: 528)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9485926628112793
    2. 'def' → logprob: -1.6985926628112793
    3. '#' → logprob: -2.0735926628112793
    4. 'D' → logprob: -2.1985926628112793
    5. 'N' → logprob: -2.6985926628112793
    6. 'A' → logprob: -3.5735926628112793
    7. 'd' → logprob: -3.6985926628112793
    8. 'a' → logprob: -4.448592662811279
    9. ')' → logprob: -4.948592662811279
    10. 'S' → logprob: -4.948592662811279

Token 113: ' =' (ID: 314)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20503532886505127
    2. 'print' → logprob: -1.9550353288650513
    3. 'ist' → logprob: -3.9550352096557617
    4. 'en' → logprob: -4.330035209655762
    5. 'ain' → logprob: -5.455035209655762
    6. 't' → logprob: -6.205035209655762
    7. 'an' → logprob: -6.830035209655762
    8. 'ot' → logprob: -7.080035209655762
    9. 'in' → logprob: -7.455035209655762
    10. '(int' → logprob: -7.580035209655762

Token 114: ' lambda' (ID: 27871)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07420279830694199
    2. 'r' → logprob: -2.6992027759552
    3. 'int' → logprob: -5.574203014373779
    4. ' print' → logprob: -8.574202537536621
    5. '(print' → logprob: -9.074202537536621
    6. 'lambda' → logprob: -10.324202537536621
    7. '(int' → logprob: -10.949202537536621
    8. '...' → logprob: -11.449202537536621
    9. '#print' → logprob: -11.699202537536621
    10. '[int' → logprob: -11.699202537536621

Token 115: ' xs' (ID: 26642)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7095522880554199
    2. 'print' → logprob: -1.58455228805542
    3. ' print' → logprob: -2.08455228805542
    4. ' x' → logprob: -3.08455228805542
    5. ' :' → logprob: -3.33455228805542
    6. 'x' → logprob: -3.83455228805542
    7. 'r' → logprob: -4.08455228805542
    8. '_:' → logprob: -4.20955228805542
    9. '(*' → logprob: -4.83455228805542
    10. '(x' → logprob: -5.20955228805542

Token 116: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08654192090034485
    2. ' :' → logprob: -3.3365418910980225
    3. '.append' → logprob: -4.336542129516602
    4. '.extend' → logprob: -4.336542129516602
    5. 'print' → logprob: -4.461542129516602
    6. '.' → logprob: -5.586542129516602
    7. ':list' → logprob: -5.836542129516602
    8. '.print' → logprob: -6.961542129516602
    9. '.:' → logprob: -7.461542129516602
    10. '[:]' → logprob: -8.336542129516602

Token 117: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.05760778486728668
    2. 'end' → logprob: -3.557607889175415
    3. ' sep' → logprob: -3.932607889175415
    4. '*' → logprob: -5.057607650756836
    5. ' end' → logprob: -7.057607650756836
    6. 's' → logprob: -8.307607650756836
    7. '**' → logprob: -8.807607650756836
    8. 'e' → logprob: -9.682607650756836
    9. 'x' → logprob: -11.057607650756836
    10. 'c' → logprob: -11.057607650756836

Token 118: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.24108682572841644
    2. '=:' → logprob: -2.491086721420288
    3. '=' → logprob: -3.241086721420288
    4. '=',' → logprob: -3.366086721420288
    5. '="' → logprob: -3.491086721420288
    6. '=",' → logprob: -4.116086959838867
    7. '=None' → logprob: -4.616086959838867
    8. ':' → logprob: -7.741086959838867
    9. '=lambda' → logprob: -8.616086959838867
    10. '="""' → logprob: -9.241086959838867

Token 119: ' ':' (ID: 30751)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08731213957071304
    2. ' '' → logprob: -2.9623122215270996
    3. ' ':' → logprob: -3.7123122215270996
    4. '':' → logprob: -5.0873122215271
    5. 'print' → logprob: -7.8373122215271
    6. ',' → logprob: -7.8373122215271
    7. '':'' → logprob: -9.212311744689941
    8. ' :' → logprob: -9.587311744689941
    9. ' ' → logprob: -9.712311744689941
    10. ':' → logprob: -9.962311744689941

Token 120: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007115975022315979
    2. ' print' → logprob: -7.250711441040039
    3. '   ' → logprob: -13.375711441040039
    4. 'prin' → logprob: -16.75071144104004
    5. 'return' → logprob: -16.87571144104004
    6. ' ' → logprob: -17.62571144104004
    7. '	print' → logprob: -18.50071144104004
    8. 'pr' → logprob: -18.62571144104004
    9. '  ' → logprob: -18.87571144104004
    10. '(print' → logprob: -19.37571144104004

Token 121: '(se' (ID: 19430)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.043893471360206604
    2. '(' → logprob: -3.168893575668335
    3. '*' → logprob: -7.168893337249756
    4. '(*(' → logprob: -9.918893814086914
    5. '(
' → logprob: -10.043893814086914
    6. '(*)' → logprob: -11.418893814086914
    7. 's' → logprob: -11.668893814086914
    8. '*(' → logprob: -11.918893814086914
    9. '(

' → logprob: -13.918893814086914
    10. ' (*' → logprob: -13.918893814086914

Token 122: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -7.896309739408025e-07
    2. ' p' → logprob: -14.375000953674316
    3. '(*' → logprob: -16.5
    4. 'parator' → logprob: -17.625
    5. ''p' → logprob: -17.625
    6. 'perator' → logprob: -17.625
    7. '(p' → logprob: -18.0
    8. 'plist' → logprob: -18.0
    9. 'pr' → logprob: -18.5
    10. 'parated' → logprob: -18.5

Token 123: '.join' (ID: 11004)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20154772698879242
    2. '.join' → logprob: -1.7015477418899536
    3. ').' → logprob: -9.951547622680664
    4. 'join' → logprob: -10.076547622680664
    5. ' .' → logprob: -11.201547622680664
    6. '*' → logprob: -11.826547622680664
    7. '.j' → logprob: -12.076547622680664
    8. ')' → logprob: -12.201547622680664
    9. '(*' → logprob: -12.451547622680664
    10. ' ' → logprob: -12.951547622680664

Token 124: '(str' (ID: 7946)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.04948030784726143
    2. 'map' → logprob: -3.0494801998138428
    3. '(str' → logprob: -7.299480438232422
    4. 'str' → logprob: -8.674480438232422
    5. ' map' → logprob: -10.424480438232422
    6. ')' → logprob: -12.174480438232422
    7. '(' → logprob: -12.799480438232422
    8. '[str' → logprob: -12.924480438232422
    9. ',map' → logprob: -13.299480438232422
    10. '	map' → logprob: -13.674480438232422

Token 125: '(e' (ID: 3454)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.00018816311785485595
    2. '(i' → logprob: -9.375187873840332
    3. '(' → logprob: -10.125187873840332
    4. '(s' → logprob: -11.125187873840332
    5. '(xs' → logprob: -11.125187873840332
    6. '(e' → logprob: -11.250187873840332
    7. 's' → logprob: -11.500187873840332
    8. '(a' → logprob: -11.875187873840332
    9. '(v' → logprob: -13.750187873840332
    10. '(_)' → logprob: -14.125187873840332

Token 126: ')' (ID: 8)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.44702082872390747
    2. ')' → logprob: -1.3220207691192627
    3. '(x' → logprob: -3.0720207691192627
    4. '(e' → logprob: -3.4470207691192627
    5. 'ment' → logprob: -4.822021007537842
    6. 'l' → logprob: -6.197021007537842
    7. 'lement' → logprob: -6.447021007537842
    8. '(' → logprob: -6.822021007537842
    9. 'e' → logprob: -6.947021007537842
    10. 's' → logprob: -7.822021007537842

Token 127: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.06585361808538437
    2. '(e' → logprob: -2.8158535957336426
    3. 'for' → logprob: -5.940853595733643
    4. ')' → logprob: -7.440853595733643
    5. '(' → logprob: -8.0658540725708
    6. 's' → logprob: -8.9408540725708
    7. 'x' → logprob: -9.1908540725708
    8. ' for' → logprob: -10.4408540725708
    9. 'e' → logprob: -10.5658540725708
    10. '(s' → logprob: -11.6908540725708

Token 128: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.314965158700943
    2. ' e' → logprob: -1.3149651288986206
    3. ' in' → logprob: -7.31496524810791
    4. 'x' → logprob: -7.43996524810791
    5. 'xs' → logprob: -9.43996524810791
    6. 's' → logprob: -9.56496524810791
    7. 'in' → logprob: -9.56496524810791
    8. ' xs' → logprob: -9.68996524810791
    9. '	e' → logprob: -10.43996524810791
    10. '_' → logprob: -10.43996524810791

Token 129: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14279328286647797
    2. 'in' → logprob: -2.0177931785583496
    3. 's' → logprob: -10.017793655395508
    4. 'xs' → logprob: -10.142793655395508
    5. ' ' → logprob: -11.392793655395508
    6. ')' → logprob: -11.767793655395508
    7. ' xs' → logprob: -11.892793655395508
    8. '<|end|>' → logprob: -12.767793655395508
    9. 'x' → logprob: -14.267793655395508
    10. '(xs' → logprob: -14.642793655395508

Token 130: ' xs' (ID: 26642)
  Prédit: 'xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -0.029790064319968224
    2. ' xs' → logprob: -3.529790163040161
    3. '(xs' → logprob: -10.154789924621582
    4. 'x' → logprob: -15.154789924621582
    5. 'Xs' → logprob: -15.279789924621582
    6. ')' → logprob: -17.1547908782959
    7. 'XS' → logprob: -17.2797908782959
    8. 's' → logprob: -17.4047908782959
    9. ' ' → logprob: -17.6547908782959
    10. 'ys' → logprob: -17.9047908782959

Token 131: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0037049429956823587
    2. ')' → logprob: -5.628705024719238
    3. '),' → logprob: -9.378705024719238
    4. '))
' → logprob: -11.378705024719238
    5. ')))' → logprob: -11.878705024719238
    6. ' ))' → logprob: -13.878705024719238
    7. '()))' → logprob: -14.878705024719238
    8. ')
' → logprob: -15.628705024719238
    9. '))

' → logprob: -16.628704071044922
    10. ' ' → logprob: -17.253704071044922

Token 132: 'Ω' (ID: 45879)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7034716010093689
    2. 'def' → logprob: -0.8284716010093689
    3. '#' → logprob: -3.7034716606140137
    4. 'd' → logprob: -3.7034716606140137
    5. 'N' → logprob: -5.328471660614014
    6. 'a' → logprob: -5.453471660614014
    7. 'D' → logprob: -6.078471660614014
    8. 's' → logprob: -6.453471660614014
    9. 'class' → logprob: -6.828471660614014
    10. 'from' → logprob: -6.953471660614014

Token 133: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21803335845470428
    2. ' =' → logprob: -2.3430333137512207
    3. '(' → logprob: -2.5930333137512207
    4. ':' → logprob: -4.718033313751221
    5. ',' → logprob: -4.968033313751221
    6. '_' → logprob: -5.843033313751221
    7. '#' → logprob: -6.343033313751221
    8. '.' → logprob: -6.968033313751221
    9. ' ' → logprob: -7.718033313751221
    10. '[' → logprob: -7.718033313751221

Token 134: ' float' (ID: 4428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3109544515609741
    2. 'lambda' → logprob: -1.5609544515609741
    3. 'int' → logprob: -1.6859544515609741
    4. 'sys' → logprob: -2.3109545707702637
    5. '10' → logprob: -2.9359545707702637
    6. '[]' → logprob: -3.6859545707702637
    7. '1' → logprob: -3.6859545707702637
    8. 'float' → logprob: -3.8109545707702637
    9. '100' → logprob: -4.185954570770264
    10. '2' → logprob: -4.810954570770264

Token 135: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.23183630406856537
    2. ''in' → logprob: -1.9818363189697266
    3. ''' → logprob: -2.9818363189697266
    4. '"' → logprob: -4.981836318969727
    5. 'inf' → logprob: -5.481836318969727
    6. '("' → logprob: -5.856836318969727
    7. '(' → logprob: -7.231836318969727
    8. 'in' → logprob: -7.481836318969727
    9. ''s' → logprob: -8.106836318969727
    10. ''a' → logprob: -8.481836318969727

Token 136: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.05742163211107254
    2. ''in' → logprob: -2.9324216842651367
    3. ''' → logprob: -6.557421684265137
    4. 'in' → logprob: -7.432421684265137
    5. '"' → logprob: -8.682421684265137
    6. '('' → logprob: -9.932421684265137
    7. ' inf' → logprob: -9.932421684265137
    8. '-inf' → logprob: -9.932421684265137
    9. 'info' → logprob: -10.057421684265137
    10. '_inf' → logprob: -10.307421684265137

Token 137: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. ')
' → logprob: -13.000005722045898
    3. '')' → logprob: -13.000005722045898
    4. ' )' → logprob: -14.375005722045898
    5. '))' → logprob: -15.625005722045898
    6. ')

' → logprob: -16.1250057220459
    7. ')`' → logprob: -16.8750057220459
    8. '())' → logprob: -17.0000057220459
    9. '),' → logprob: -17.1250057220459
    10. '`)' → logprob: -17.5000057220459

Token 138: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3005257248878479
    2. 'n' → logprob: -1.6755256652832031
    3. '#' → logprob: -3.675525665283203
    4. 'N' → logprob: -3.925525665283203
    5. 'd' → logprob: -4.300525665283203
    6. 'class' → logprob: -4.550525665283203
    7. 'D' → logprob: -6.675525665283203
    8. 'from' → logprob: -7.425525665283203
    9. 'a' → logprob: -8.050525665283203
    10. '.' → logprob: -9.050525665283203

Token 139: ' ab' (ID: 692)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.020207243040204048
    2. ' dfs' → logprob: -4.645207405090332
    3. 'main' → logprob: -4.895207405090332
    4. ' solve' → logprob: -6.270207405090332
    5. 'solve' → logprob: -7.520207405090332
    6. 'dfs' → logprob: -8.270207405090332
    7. ' f' → logprob: -9.270207405090332
    8. ' factorial' → logprob: -10.645207405090332
    9. ' factor' → logprob: -11.145207405090332
    10. 'factor' → logprob: -11.145207405090332

Token 140: 'ac' (ID: 359)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00028612653841264546
    2. 'solute' → logprob: -8.750286102294922
    3. 'spath' → logprob: -10.500286102294922
    4. 'stract' → logprob: -10.750286102294922
    5. 'solve' → logprob: -11.250286102294922
    6. '(s' → logprob: -11.375286102294922
    7. 'sol' → logprob: -11.375286102294922
    8. '```' → logprob: -11.500286102294922
    9. 'solutely' → logprob: -12.125286102294922
    10. 'c' → logprob: -12.375286102294922

Token 141: 'aba' (ID: 4216)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6331082582473755
    2. 'ad' → logprob: -1.5081082582473755
    3. 'us' → logprob: -2.133108139038086
    4. 'aba' → logprob: -3.008108139038086
    5. 'ab' → logprob: -3.258108139038086
    6. 'i' → logprob: -4.133108139038086
    7. 'ada' → logprob: -4.758108139038086
    8. 'as' → logprob: -6.008108139038086
    9. 'e' → logprob: -6.383108139038086
    10. 'u' → logprob: -6.508108139038086

Token 142: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5098136067390442
    2. '(n' → logprob: -1.1348135471343994
    3. '_' → logprob: -3.2598135471343994
    4. '(x' → logprob: -4.3848137855529785
    5. '(a' → logprob: -5.1348137855529785
    6. '_pattern' → logprob: -5.3848137855529785
    7. '():' → logprob: -5.3848137855529785
    8. '(i' → logprob: -6.1348137855529785
    9. '(s' → logprob: -6.1348137855529785
    10. '(k' → logprob: -7.0098137855529785

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36376550793647766
    2. '    ' → logprob: -2.2387654781341553
    3. ' pass' → logprob: -2.6137654781341553
    4. '(' → logprob: -2.7387654781341553
    5. '<|end|>' → logprob: -4.613765716552734
    6. ' ' → logprob: -4.738765716552734
    7. 'n' → logprob: -4.863765716552734
    8. '(n' → logprob: -5.238765716552734
    9. '    
' → logprob: -5.238765716552734
    10. ':' → logprob: -5.488765716552734

Token 144: ' Q' (ID: 1486)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04151269420981407
    2. ' n' → logprob: -3.7915127277374268
    3. ' pass' → logprob: -4.791512489318848
    4. 'pass' → logprob: -5.666512489318848
    5. '   ' → logprob: -6.166512489318848
    6. '    ' → logprob: -6.666512489318848
    7. 's' → logprob: -7.041512489318848
    8. 'N' → logprob: -7.416512489318848
    9. 'a' → logprob: -8.041512489318848
    10. ' ' → logprob: -8.291512489318848

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5353591442108154
    2. '=' → logprob: -0.9103591442108154
    3. ',' → logprob: -5.0353593826293945
    4. ':' → logprob: -6.1603593826293945
    5. '()' → logprob: -6.6603593826293945
    6. '(' → logprob: -7.6603593826293945
    7. ' ' → logprob: -8.035359382629395
    8. '=int' → logprob: -8.035359382629395
    9. '.' → logprob: -8.160359382629395
    10. '=input' → logprob: -8.535359382629395

Token 146: ' CS' (ID: 15903)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.03189065679907799
    2. 'int' → logprob: -3.656890630722046
    3. ' I' → logprob: -5.281890869140625
    4. ' int' → logprob: -7.656890869140625
    5. ' ' → logprob: -11.906890869140625
    6. 'L' → logprob: -12.906890869140625
    7. '[int' → logprob: -13.281890869140625
    8. '   ' → logprob: -13.281890869140625
    9. '  ' → logprob: -13.406890869140625
    10. '	I' → logprob: -13.906890869140625

Token 147: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003818140830844641
    2. '()
' → logprob: -7.875381946563721
    3. ' ()' → logprob: -13.625381469726562
    4. '()
' → logprob: -15.625381469726562
    5. '();' → logprob: -15.875381469726562
    6. '()

' → logprob: -16.375381469726562
    7. '(' → logprob: -16.625381469726562
    8. '()"' → logprob: -17.000381469726562
    9. '()]' → logprob: -17.375381469726562
    10. '（）' → logprob: -17.625381469726562

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00836528092622757
    2. 'n' → logprob: -5.133365154266357
    3. 'def' → logprob: -7.008365154266357
    4. '    
' → logprob: -8.008365631103516
    5. ' n' → logprob: -8.633365631103516
    6. 's' → logprob: -8.633365631103516
    7. 'N' → logprob: -8.883365631103516
    8. '    ' → logprob: -9.258365631103516
    9. 'idx' → logprob: -9.633365631103516
    10. ' def' → logprob: -10.383365631103516

Token 149: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.6856616735458374
    2. 'N' → logprob: -2.185661792755127
    3. 'def' → logprob: -2.310661792755127
    4. 'cnt' → logprob: -2.685661792755127
    5. 'count' → logprob: -3.310661792755127
    6. 'c' → logprob: -3.435661792755127
    7. 'counts' → logprob: -3.685661792755127
    8. 's' → logprob: -4.060661792755127
    9. 'pos' → logprob: -4.185661792755127
    10. 'from' → logprob: -4.310661792755127

Token 150: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519930303096771
    2. '=' → logprob: -1.5019930601119995
    3. ',' → logprob: -11.251993179321289
    4. '=len' → logprob: -11.251993179321289
    5. '=int' → logprob: -11.751993179321289
    6. ' =
' → logprob: -11.751993179321289
    7. ' ' → logprob: -12.126993179321289
    8. ' ' → logprob: -12.251993179321289
    9. '   ' → logprob: -12.876993179321289
    10. ')' → logprob: -13.001993179321289

Token 151: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0010338802821934223
    2. ' len' → logprob: -6.876033782958984
    3. 'int' → logprob: -14.501033782958984
    4. '(len' → logprob: -15.251033782958984
    5. ' ' → logprob: -15.876033782958984
    6. '=len' → logprob: -17.126033782958984
    7. '[len' → logprob: -17.251033782958984
    8. '   ' → logprob: -17.501033782958984
    9. '```' → logprob: -17.876033782958984
    10. '	len' → logprob: -18.001033782958984

Token 152: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.375001907348633
    3. 'Q' → logprob: -16.000001907348633
    4. '(
' → logprob: -18.375001907348633
    5. '(C' → logprob: -18.625001907348633
    6. '((' → logprob: -18.750001907348633
    7. ' (' → logprob: -18.750001907348633
    8. '(S' → logprob: -18.875001907348633
    9. '(s' → logprob: -19.250001907348633
    10. '(Qt' → logprob: -19.875001907348633

Token 153: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003583456273190677
    2. ')
' → logprob: -8.000358581542969
    3. ' )' → logprob: -11.875358581542969
    4. '   ' → logprob: -12.750358581542969
    5. 'def' → logprob: -12.875358581542969
    6. '-' → logprob: -13.125358581542969
    7. ')

' → logprob: -14.125358581542969
    8. '[' → logprob: -14.125358581542969
    9. '#' → logprob: -14.375358581542969
    10. '())' → logprob: -14.375358581542969

Token 154: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03766385093331337
    2. 'def' → logprob: -4.41266393661499
    3. 's' → logprob: -5.28766393661499
    4. 'dp' → logprob: -5.78766393661499
    5. 'p' → logprob: -6.03766393661499
    6. '    
' → logprob: -6.16266393661499
    7. 'd' → logprob: -7.03766393661499
    8. 't' → logprob: -7.03766393661499
    9. 'a' → logprob: -7.16266393661499
    10. ')' → logprob: -7.28766393661499

Token 155: ' m' (ID: 284)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9621211290359497
    2. 'S' → logprob: -2.21212100982666
    3. 'pattern' → logprob: -2.33712100982666
    4. 'res' → logprob: -2.58712100982666
    5. 'def' → logprob: -2.71212100982666
    6. 's' → logprob: -2.96212100982666
    7. 'found' → logprob: -3.08712100982666
    8. 'abc' → logprob: -3.83712100982666
    9. 'pos' → logprob: -3.83712100982666
    10. 'P' → logprob: -3.83712100982666

Token 156: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11295434832572937
    2. '=' → logprob: -2.2379543781280518
    3. ' ' → logprob: -10.487954139709473
    4. ',' → logprob: -11.362954139709473
    5. '=int' → logprob: -11.362954139709473
    6. '=n' → logprob: -11.487954139709473
    7. 'import' → logprob: -11.612954139709473
    8. 'def' → logprob: -11.737954139709473
    9. '=len' → logprob: -11.737954139709473
    10. 'n' → logprob: -12.237954139709473

Token 157: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.5901952385902405
    2. 'len' → logprob: -0.8401952385902405
    3. 'n' → logprob: -5.090195178985596
    4. 'int' → logprob: -6.465195178985596
    5. ' len' → logprob: -6.590195178985596
    6. '11' → logprob: -6.840195178985596
    7. ' ' → logprob: -6.965195178985596
    8. 'm' → logprob: -7.465195178985596
    9. '0' → logprob: -7.840195178985596
    10. '26' → logprob: -8.090195655822754

Token 158: '10' (ID: 702)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.17386603355407715
    2. 'len' → logprob: -1.9238660335540771
    3. 'n' → logprob: -4.548866271972656
    4. 'int' → logprob: -6.923866271972656
    5. 'm' → logprob: -8.048866271972656
    6. '(n' → logprob: -8.548866271972656
    7. '10' → logprob: -8.673866271972656
    8. ' ' → logprob: -8.798866271972656
    9. ' len' → logprob: -8.798866271972656
    10. '1' → logprob: -8.923866271972656

Token 159: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4188646972179413
    2. '**' → logprob: -1.1688647270202637
    3. '^' → logprob: -4.668864727020264
    4. ' **' → logprob: -4.918864727020264
    5. '*' → logprob: -5.918864727020264
    6. '#' → logprob: -6.293864727020264
    7. 'def' → logprob: -6.293864727020264
    8. '2' → logprob: -6.543864727020264
    9. '7' → logprob: -6.918864727020264
    10. '\xe2\x81' → logprob: -7.543864727020264

Token 160: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0016220991965383291
    2. '6' → logprob: -6.751622200012207
    3. '10' → logprob: -8.126622200012207
    4. '7' → logprob: -9.751622200012207
    5. '5' → logprob: -9.751622200012207
    6. '18' → logprob: -10.751622200012207
    7. '8' → logprob: -12.001622200012207
    8. '4' → logprob: -12.376622200012207
    9. '12' → logprob: -13.501622200012207
    10. '11' → logprob: -13.876622200012207

Token 161: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0008964549051597714
    2. ' +' → logprob: -7.375896453857422
    3. '+
' → logprob: -8.625896453857422
    4. '7' → logprob: -9.500896453857422
    5. '9' → logprob: -11.875896453857422
    6. '＋' → logprob: -12.875896453857422
    7. ' +
' → logprob: -13.125896453857422
    8. '+

' → logprob: -13.625896453857422
    9. '+</' → logprob: -14.000896453857422
    10. '10' → logprob: -14.625896453857422

Token 162: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.069664333248511e-05
    2. '+' → logprob: -11.000020980834961
    3. '9' → logprob: -12.625020980834961
    4. '```' → logprob: -15.750020980834961
    5. '10' → logprob: -16.00002098083496
    6. '8' → logprob: -16.00002098083496
    7. '

' → logprob: -16.81252098083496
    8. ' ' → logprob: -16.81252098083496
    9. '6' → logprob: -17.06252098083496
    10. '07' → logprob: -17.81252098083496

Token 163: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 164: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0414477586746216
    2. '
' → logprob: -1.6664477586746216
    3. ' ' → logprob: -2.041447639465332
    4. '#' → logprob: -2.791447639465332
    5. '   ' → logprob: -2.791447639465332
    6. ' 
' → logprob: -3.041447639465332
    7. ',' → logprob: -3.416447639465332
    8. ')' → logprob: -3.916447639465332
    9. '    
' → logprob: -4.291447639465332
    10. '_' → logprob: -4.416447639465332

Token 165: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.1688394993543625
    2. 'p' → logprob: -3.293839454650879
    3. 'res' → logprob: -3.293839454650879
    4. 'def' → logprob: -4.043839454650879
    5. 'h' → logprob: -4.793839454650879
    6. 'hash' → logprob: -4.918839454650879
    7. 'pow' → logprob: -5.168839454650879
    8. 'fact' → logprob: -5.418839454650879
    9. ' dp' → logprob: -5.668839454650879
    10. 's' → logprob: -5.918839454650879

Token 166: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004728330299258232
    2. '=' → logprob: -5.379728317260742
    3. '[' → logprob: -10.254728317260742
    4. '=[' → logprob: -10.754728317260742
    5. ' =[' → logprob: -11.379728317260742
    6. ' ' → logprob: -11.504728317260742
    7. '0' → logprob: -12.379728317260742
    8. ',' → logprob: -12.629728317260742
    9. ')' → logprob: -12.754728317260742
    10. '=[]' → logprob: -12.879728317260742

Token 167: ' [[' (ID: 9237)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.09735674411058426
    2. '[' → logprob: -2.5973567962646484
    3. ' [[' → logprob: -4.097356796264648
    4. ' [' → logprob: -6.847356796264648
    5. '[n' → logprob: -7.597356796264648
    6. '[{' → logprob: -9.972356796264648
    7. ' [[[' → logprob: -10.347356796264648
    8. '[a' → logprob: -11.722356796264648
    9. '[-' → logprob: -11.972356796264648
    10. '[(' → logprob: -12.597356796264648

Token 168: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031506232917308807
    2. 'Ω' → logprob: -6.003150463104248
    3. '-' → logprob: -8.503150939941406
    4. '[' → logprob: -8.628150939941406
    5. 'False' → logprob: -8.628150939941406
    6. ' ' → logprob: -10.378150939941406
    7. '(' → logprob: -10.628150939941406
    8. '[[' → logprob: -11.378150939941406
    9. 'None' → logprob: -12.003150939941406
    10. ']' → logprob: -12.128150939941406

Token 169: ']*' (ID: 18579)
  Prédit: ']*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*(' → logprob: -0.49076047539711
    2. ']' → logprob: -1.2407604455947876
    3. ' for' → logprob: -2.615760564804077
    4. 'for' → logprob: -3.740760564804077
    5. ']*' → logprob: -6.365760326385498
    6. ' ]' → logprob: -9.740760803222656
    7. ']+' → logprob: -10.490760803222656
    8. ' ' → logprob: -11.865760803222656
    9. '	for' → logprob: -12.490760803222656
    10. ',' → logprob: -12.990760803222656

Token 170: '13' (ID: 1311)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3548738956451416
    2. '(' → logprob: -2.4798738956451416
    3. '27' → logprob: -2.4798738956451416
    4. '11' → logprob: -3.3548738956451416
    5. 'n' → logprob: -3.8548738956451416
    6. '13' → logprob: -4.6048736572265625
    7. '26' → logprob: -4.6048736572265625
    8. '10' → logprob: -4.6048736572265625
    9. '3' → logprob: -4.8548736572265625
    10. '(m' → logprob: -4.8548736572265625

Token 171: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02975963056087494
    2. 'for' → logprob: -3.529759645462036
    3. ' ' → logprob: -11.904759407043457
    4. ']' → logprob: -13.904759407043457
    5. '	for' → logprob: -14.529759407043457
    6. ' ' → logprob: -15.154759407043457
    7. '+' → logprob: -15.279759407043457
    8. ' ]' → logprob: -15.654759407043457
    9. '0' → logprob: -16.404760360717773
    10. ')' → logprob: -16.654760360717773

Token 172: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008592941798269749
    2. ' _' → logprob: -5.3835930824279785
    3. '_' → logprob: -6.0085930824279785
    4. 'range' → logprob: -6.5085930824279785
    5. '_range' → logprob: -12.00859260559082
    6. ' in' → logprob: -12.13359260559082
    7. ' i' → logprob: -13.13359260559082
    8. ' ' → logprob: -14.00859260559082
    9. ' xrange' → logprob: -14.00859260559082
    10. '	range' → logprob: -14.00859260559082

Token 173: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3074984848499298
    2. ' in' → logprob: -1.9324984550476074
    3. 'range' → logprob: -2.1824984550476074
    4. 'in' → logprob: -5.057498455047607
    5. '(range' → logprob: -7.432498455047607
    6. '_' → logprob: -9.932498931884766
    7. 's' → logprob: -10.307498931884766
    8. ' ' → logprob: -10.307498931884766
    9. ' i' → logprob: -10.932498931884766
    10. 'ange' → logprob: -11.182498931884766

Token 174: '[' (ID: 58)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4741615056991577
    2. 'range' → logprob: -0.9741615056991577
    3. '(range' → logprob: -9.474161148071289
    4. '	range' → logprob: -12.599161148071289
    5. ' ' → logprob: -13.599161148071289
    6. ' xrange' → logprob: -13.849161148071289
    7. '[' → logprob: -14.099161148071289
    8. 'ran' → logprob: -15.599161148071289
    9. '.range' → logprob: -15.974161148071289
    10. 'r' → logprob: -15.974161148071289

Token 175: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04206079617142677
    2. ' range' → logprob: -3.2920608520507812
    3. '0' → logprob: -5.667060852050781
    4. 'None' → logprob: -7.667060852050781
    5. '_' → logprob: -9.917060852050781
    6. ' None' → logprob: -10.667060852050781
    7. ' ' → logprob: -12.042060852050781
    8. '(range' → logprob: -13.417060852050781
    9. '	range' → logprob: -13.792060852050781
    10. '   ' → logprob: -14.167060852050781

Token 176: ']*(' (ID: 92627)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.005178139545023441
    2. '<n' → logprob: -6.005177974700928
    3. ']*(' → logprob: -7.130177974700928
    4. ']' → logprob: -7.380177974700928
    5. ',n' → logprob: -7.630177974700928
    6. '*n' → logprob: -8.130178451538086
    7. ']+' → logprob: -8.755178451538086
    8. 'n' → logprob: -9.255178451538086
    9. '[n' → logprob: -10.130178451538086
    10. 'range' → logprob: -10.630178451538086

Token 177: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0005065653240308166
    2. ' n' → logprob: -7.875506401062012
    3. '(n' → logprob: -9.875506401062012
    4. '10' → logprob: -10.875506401062012
    5. 'len' → logprob: -11.000506401062012
    6. '   ' → logprob: -11.500506401062012
    7. ' ' → logprob: -11.875506401062012
    8. '1' → logprob: -12.500506401062012
    9. '2' → logprob: -13.000506401062012
    10. '(' → logprob: -13.625506401062012

Token 178: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11333418637514114
    2. ')]' → logprob: -2.2383341789245605
    3. ' +' → logprob: -7.8633341789245605
    4. ')]
' → logprob: -9.738334655761719
    5. ')' → logprob: -10.488334655761719
    6. ' )' → logprob: -11.738334655761719
    7. '-' → logprob: -11.988334655761719
    8. ')])' → logprob: -11.988334655761719
    9. '1' → logprob: -12.613334655761719
    10. ']' → logprob: -12.613334655761719

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004472348664421588
    2. '2' → logprob: -8.250447273254395
    3. ' ' → logprob: -8.750447273254395
    4. '10' → logprob: -11.875447273254395
    5. '3' → logprob: -12.000447273254395
    6. '7' → logprob: -12.562947273254395
    7. '5' → logprob: -13.125447273254395
    8. '4' → logprob: -13.750447273254395
    9. '
' → logprob: -14.125447273254395
    10. '0' → logprob: -14.187947273254395

Token 180: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.7372048862162046e-05
    2. ')]
' → logprob: -10.875027656555176
    3. ')' → logprob: -12.500027656555176
    4. ' )' → logprob: -13.125027656555176
    5. ']' → logprob: -14.125027656555176
    6. ')]

' → logprob: -14.125027656555176
    7. ')]
' → logprob: -14.750027656555176
    8. ')])' → logprob: -14.875027656555176
    9. ')][' → logprob: -16.75002670288086
    10. '))' → logprob: -16.75002670288086

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.633802056312561
    2. 'dp' → logprob: -1.258802056312561
    3. ' for' → logprob: -2.6338019371032715
    4. 'for' → logprob: -3.2588019371032715
    5. '
' → logprob: -3.7588019371032715
    6. '<|end|>' → logprob: -4.0088019371032715
    7. ' ' → logprob: -4.6338019371032715
    8. ' dp' → logprob: -5.0088019371032715
    9. '    
' → logprob: -5.2588019371032715
    10. '	dp' → logprob: -5.3838019371032715

Token 182: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0013259568950161338
    2. 'for' → logprob: -6.876326084136963
    3. ' dp' → logprob: -8.751325607299805
    4. '   ' → logprob: -9.751325607299805
    5. ' for' → logprob: -10.751325607299805
    6. ')' → logprob: -10.876325607299805
    7. '
' → logprob: -12.001325607299805
    8. '	dp' → logprob: -12.251325607299805
    9. ']' → logprob: -12.376325607299805
    10. '    
' → logprob: -12.751325607299805

Token 183: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.531315314830863e-06
    2. '0' → logprob: -13.125003814697266
    3. ' [' → logprob: -15.000003814697266
    4. '```' → logprob: -15.000003814697266
    5. '<|end|>' → logprob: -15.875003814697266
    6. '\[' → logprob: -16.125003814697266
    7. '][' → logprob: -16.250003814697266
    8. '[n' → logprob: -16.250003814697266
    9. '[
' → logprob: -16.625003814697266
    10. '
' → logprob: -17.000003814697266

Token 184: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1398757123970427e-05
    2. ' ' → logprob: -11.875011444091797
    3. '1' → logprob: -13.000011444091797
    4. 'n' → logprob: -14.125011444091797
    5. '00' → logprob: -16.250011444091797
    6. '۰' → logprob: -16.250011444091797
    7. '[' → logprob: -16.375011444091797
    8. '
' → logprob: -16.437511444091797
    9. '```' → logprob: -16.500011444091797
    10. '012' → logprob: -16.875011444091797

Token 185: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0010842557530850172
    2. '[' → logprob: -7.001084327697754
    3. ']' → logprob: -8.876084327697754
    4. ' ][' → logprob: -10.376084327697754
    5. '][-' → logprob: -15.251084327697754
    6. ')][' → logprob: -15.751084327697754
    7. '][_' → logprob: -15.751084327697754
    8. ']][' → logprob: -15.751084327697754
    9. '0' → logprob: -16.063583374023438
    10. '```' → logprob: -16.063583374023438

Token 186: '0' (ID: 15)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.04998574033379555
    2. '0' → logprob: -3.049985647201538
    3. '1' → logprob: -6.674985885620117
    4. '(' → logprob: -10.737485885620117
    5. '3' → logprob: -11.174985885620117
    6. '7' → logprob: -11.549985885620117
    7. '2' → logprob: -11.737485885620117
    8. '
' → logprob: -11.862485885620117
    9. '``' → logprob: -11.862485885620117
    10. '```' → logprob: -11.987485885620117

Token 187: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.088138227118179e-05
    2. ' ]' → logprob: -10.125070571899414
    3. ']=' → logprob: -10.500070571899414
    4. ')]' → logprob: -13.625070571899414
    5. ')' → logprob: -14.125070571899414
    6. ']+=' → logprob: -14.250070571899414
    7. ']
' → logprob: -14.750070571899414
    8. '=' → logprob: -16.875070571899414
    9. '`]' → logprob: -16.875070571899414
    10. ']==' → logprob: -17.000070571899414

Token 188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014163863845169544
    2. ' =' → logprob: -4.264163970947266
    3. '+=' → logprob: -15.514163970947266
    4. ']=' → logprob: -16.639163970947266
    5. '=True' → logprob: -16.889163970947266
    6. ']' → logprob: -16.889163970947266
    7. '=int' → logprob: -18.389163970947266
    8. '=}' → logprob: -18.639163970947266
    9. '＝' → logprob: -18.764163970947266
    10. ' +=' → logprob: -18.764163970947266

Token 189: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '0' → logprob: -18.125
    4. '   ' → logprob: -19.875
    5. '
' → logprob: -20.1875
    6. '１' → logprob: -20.1875
    7. '' → logprob: -20.1875
    8. '{' → logprob: -20.625
    9. '۱' → logprob: -20.6875
    10. '১' → logprob: -20.8125

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.25
    3. '0' → logprob: -16.375
    4. '
' → logprob: -18.125
    5. '１' → logprob: -18.625
    6. '১' → logprob: -19.25
    7. '{' → logprob: -19.4375
    8. '१' → logprob: -19.5625
    9. ' ' → logprob: -19.6875
    10. '۱' → logprob: -19.875

Token 191: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7591142654418945
    2. '   ' → logprob: -1.5091142654418945
    3. ' for' → logprob: -1.5091142654418945
    4. 'for' → logprob: -2.6341142654418945
    5. '	for' → logprob: -4.7591142654418945
    6. '<|end|>' → logprob: -5.0091142654418945
    7. '    
' → logprob: -7.6341142654418945
    8. ' ' → logprob: -7.8841142654418945
    9. '' → logprob: -8.009114265441895
    10. ' 
' → logprob: -8.384114265441895

Token 192: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.23322096467018127
    2. 'for' → logprob: -1.6082209348678589
    3. '   ' → logprob: -5.733221054077148
    4. '
' → logprob: -5.983221054077148
    5. '	for' → logprob: -6.608221054077148
    6. ' ' → logprob: -8.858221054077148
    7. ' 
' → logprob: -9.108221054077148
    8. ' i' → logprob: -9.233221054077148
    9. '' → logprob: -9.358221054077148
    10. '    
' → logprob: -9.608221054077148

Token 193: ' tmp' (ID: 8919)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002632430987432599
    2. ' for' → logprob: -8.250263214111328
    3. '   ' → logprob: -13.375263214111328
    4. '
' → logprob: -15.750263214111328
    5. '	for' → logprob: -16.375263214111328
    6. '    
' → logprob: -17.875263214111328
    7. ' ' → logprob: -18.375263214111328
    8. 'def' → logprob: -18.500263214111328
    9. 'i' → logprob: -18.750263214111328
    10. 'f' → logprob: -19.250263214111328

Token 194: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4306102693080902
    2. '=' → logprob: -1.0556102991104126
    3. ' ' → logprob: -6.680610179901123
    4. 'for' → logprob: -8.305610656738281
    5. '_' → logprob: -9.555610656738281
    6. ',' → logprob: -9.930610656738281
    7. 'n' → logprob: -10.555610656738281
    8. 'x' → logprob: -10.680610656738281
    9. 's' → logprob: -10.680610656738281
    10. '=[]' → logprob: -10.930610656738281

Token 195: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.23994159698486328
    2. '[' → logprob: -1.6149415969848633
    3. '[]' → logprob: -4.489941596984863
    4. '1' → logprob: -7.364941596984863
    5. '[[' → logprob: -7.739941596984863
    6. '['' → logprob: -7.864941596984863
    7. ' ' → logprob: -7.989941596984863
    8. '{}' → logprob: -8.114941596984863
    9. 'Q' → logprob: -8.239941596984863
    10. '""' → logprob: -8.864941596984863

Token 196: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1871490180492401
    2. '[[' → logprob: -2.3121490478515625
    3. '0' → logprob: -2.6871490478515625
    4. '[]' → logprob: -5.9371490478515625
    5. '[['' → logprob: -8.812149047851562
    6. '['' → logprob: -9.062149047851562
    7. ' [' → logprob: -9.437149047851562
    8. '1' → logprob: -9.437149047851562
    9. 'Q' → logprob: -9.562149047851562
    10. '{}' → logprob: -9.687149047851562

Token 197: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.246144413948059
    2. '
' → logprob: -1.496144413948059
    3. ' ' → logprob: -1.621144413948059
    4. ' for' → logprob: -1.621144413948059
    5. '0' → logprob: -3.2461442947387695
    6. ' 
' → logprob: -4.1211442947387695
    7. '    ' → logprob: -5.1211442947387695
    8. '   ' → logprob: -5.3711442947387695
    9. '' → logprob: -5.4961442947387695
    10. '+' → logprob: -5.9961442947387695

Token 198: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7903026938438416
    2. 'for' → logprob: -0.9153026938438416
    3. ' ' → logprob: -2.2903027534484863
    4. '   ' → logprob: -3.4153027534484863
    5. '
' → logprob: -5.540302753448486
    6. '	for' → logprob: -6.165302753448486
    7. '<|end|>' → logprob: -6.540302753448486
    8. '    ' → logprob: -6.915302753448486
    9. '' → logprob: -7.290302753448486
    10. ' 
' → logprob: -7.665302753448486

Token 199: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.20156322419643402
    2. ' for' → logprob: -1.7015632390975952
    3. 'i' → logprob: -9.451562881469727
    4. ' ' → logprob: -10.576562881469727
    5. ' i' → logprob: -11.201562881469727
    6. '
' → logprob: -11.826562881469727
    7. '   ' → logprob: -12.201562881469727
    8. 'f' → logprob: -12.451562881469727
    9. 'n' → logprob: -12.826562881469727
    10. '_' → logprob: -13.201562881469727

Token 200: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5760331749916077
    2. 'i' → logprob: -0.8260331749916077
    3. '_' → logprob: -11.076033592224121
    4. '	i' → logprob: -11.326033592224121
    5. '_i' → logprob: -11.326033592224121
    6. ' ' → logprob: -11.451033592224121
    7. ' ' → logprob: -12.076033592224121
    8. '(i' → logprob: -12.201033592224121
    9. ' _' → logprob: -12.201033592224121
    10. 'I' → logprob: -12.763533592224121

Token 201: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05512576922774315
    2. 'in' → logprob: -2.9301257133483887
    3. ',' → logprob: -8.805126190185547
    4. ' ' → logprob: -9.555126190185547
    5. 'import' → logprob: -12.805126190185547
    6. ' ,' → logprob: -12.805126190185547
    7. '	in' → logprob: -13.055126190185547
    8. 'n' → logprob: -13.180126190185547
    9. 'range' → logprob: -13.430126190185547
    10. '  ' → logprob: -13.430126190185547

Token 202: ' ch' (ID: 549)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.028016522526741028
    2. 'ch' → logprob: -4.403016567230225
    3. 'q' → logprob: -4.528016567230225
    4. 'x' → logprob: -6.403016567230225
    5. ' c' → logprob: -6.528016567230225
    6. 'd' → logprob: -7.528016567230225
    7. 's' → logprob: -7.903016567230225
    8. 'e' → logprob: -8.903016090393066
    9. 'a' → logprob: -9.028016090393066
    10. 'v' → logprob: -9.528016090393066

Token 203: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12700065970420837
    2. 'in' → logprob: -2.127000570297241
    3. ' ' → logprob: -9.75200080871582
    4. ',' → logprob: -12.25200080871582
    5. 'n' → logprob: -12.25200080871582
    6. '  ' → logprob: -14.25200080871582
    7. 's' → logprob: -14.50200080871582
    8. '	in' → logprob: -14.75200080871582
    9. 'import' → logprob: -14.87700080871582
    10. ' ' → logprob: -15.25200080871582

Token 204: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0067161982879042625
    2. ' enumerate' → logprob: -5.006716251373291
    3. 'range' → logprob: -15.256715774536133
    4. '```' → logprob: -15.381715774536133
    5. 'en' → logprob: -15.506715774536133
    6. 'enum' → logprob: -15.881715774536133
    7. '
' → logprob: -16.756715774536133
    8. '(en' → logprob: -17.506715774536133
    9. '(' → logprob: -18.506715774536133
    10. 'zip' → logprob: -18.506715774536133

Token 205: '(re' (ID: 8178)
  Prédit: '(Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.0004472348664421588
    2. '(range' → logprob: -8.625447273254395
    3. '(' → logprob: -9.000447273254395
    4. 'Q' → logprob: -9.750447273254395
    5. ' Q' → logprob: -10.375447273254395
    6. '(en' → logprob: -10.750447273254395
    7. ' range' → logprob: -11.750447273254395
    8. 'range' → logprob: -12.125447273254395
    9. '(C' → logprob: -12.125447273254395
    10. ' (' → logprob: -12.125447273254395

Token 206: 'versed' (ID: 76479)
  Prédit: 'versed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'versed' → logprob: -0.15205471217632294
    2. 'nge' → logprob: -2.652054786682129
    3. 'Q' → logprob: -2.902054786682129
    4. '   ' → logprob: -6.152054786682129
    5. 'ange' → logprob: -6.402054786682129
    6. 'verse' → logprob: -6.527054786682129
    7. 'ng' → logprob: -6.527054786682129
    8. 'v' → logprob: -6.902054786682129
    9. '(' → logprob: -6.902054786682129
    10. '       ' → logprob: -7.027054786682129

Token 207: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -1.2948405128554441e-05
    2. '(' → logprob: -11.87501335144043
    3. 'Q' → logprob: -13.00001335144043
    4. ' (' → logprob: -14.12501335144043
    5. '(S' → logprob: -14.37501335144043
    6. '
' → logprob: -14.50001335144043
    7. '((' → logprob: -15.25001335144043
    8. ')' → logprob: -15.37501335144043
    9. ')(' → logprob: -15.37501335144043
    10. '(range' → logprob: -15.37501335144043

Token 208: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011383427307009697
    2. ')):' → logprob: -5.261383533477783
    3. '):
' → logprob: -5.636383533477783
    4. '()' → logprob: -6.386383533477783
    5. '():' → logprob: -7.636383533477783
    6. '()):
' → logprob: -8.761383056640625
    7. ' ):' → logprob: -9.011383056640625
    8. ')' → logprob: -10.011383056640625
    9. ')):
' → logprob: -10.636383056640625
    10. '):

' → logprob: -11.511383056640625

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08086764812469482
    2. '<|end|>' → logprob: -3.4558677673339844
    3. '    ' → logprob: -3.8308677673339844
    4. '   ' → logprob: -4.830867767333984
    5. ',' → logprob: -5.080867767333984
    6. ' ' → logprob: -6.080867767333984
    7. ':' → logprob: -6.205867767333984
    8. '
' → logprob: -6.705867767333984
    9. '        
' → logprob: -6.830867767333984
    10. '    
' → logprob: -7.205867767333984

Token 210: ' if' (ID: 538)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.2707294821739197
    2. ' nd' → logprob: -1.7707295417785645
    3. 'new' → logprob: -3.6457295417785645
    4. ' new' → logprob: -4.3957295417785645
    5. 'dp' → logprob: -4.5207295417785645
    6. 'for' → logprob: -5.7707295417785645
    7. 'n' → logprob: -5.7707295417785645
    8. 'if' (adapté à ' if') → logprob: -6.0207295417785645
    9. '   ' → logprob: -6.2707295417785645
    10. 'next' → logprob: -6.3957295417785645

Token 211: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.6933462619781494
    2. ' ch' → logprob: -0.6933462619781494
    3. ''' → logprob: -9.94334602355957
    4. ' ' → logprob: -10.19334602355957
    5. ' '' → logprob: -10.19334602355957
    6. ''ch' → logprob: -10.81834602355957
    7. '0' → logprob: -11.44334602355957
    8. '	ch' → logprob: -11.81834602355957
    9. '(ch' → logprob: -11.94334602355957
    10. '   ' → logprob: -12.75584602355957

Token 212: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8618327379226685
    2. ' ==' → logprob: -0.9868327379226685
    3. '=='' → logprob: -2.111832618713379
    4. ' in' → logprob: -2.611832618713379
    5. 'in' → logprob: -5.236832618713379
    6. 'isdigit' → logprob: -5.986832618713379
    7. ' =='' → logprob: -7.236832618713379
    8. '=="' → logprob: -7.486832618713379
    9. '.is' → logprob: -8.236832618713379
    10. 'is' → logprob: -8.236832618713379

Token 213: ' '?' (ID: 73818)
  Prédit: ''?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''?' → logprob: -0.06399355083703995
    2. ''' → logprob: -2.813993453979492
    3. '"?' → logprob: -6.938993453979492
    4. '?' → logprob: -7.813993453979492
    5. '"' → logprob: -8.063993453979492
    6. ''A' → logprob: -9.313993453979492
    7. ' '?' → logprob: -9.938993453979492
    8. ' '?'' → logprob: -10.063993453979492
    9. ''*' → logprob: -10.563993453979492
    10. ''a' → logprob: -10.688993453979492

Token 214: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.2637483775615692
    2. '':
' → logprob: -1.6387484073638916
    3. ''):
' → logprob: -3.7637484073638916
    4. ''):' → logprob: -5.1387481689453125
    5. ''' → logprob: -5.5137481689453125
    6. '):' → logprob: -6.2637481689453125
    7. '):
' → logprob: -6.7637481689453125
    8. ':' → logprob: -7.7637481689453125
    9. '':
' → logprob: -7.7637481689453125
    10. '')' → logprob: -8.263748168945312

Token 215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04148033633828163
    2. ' for' → logprob: -3.416480302810669
    3. 'for' → logprob: -5.541480541229248
    4. ' new' → logprob: -6.416480541229248
    5. '       ' → logprob: -7.166480541229248
    6. 'new' → logprob: -8.54148006439209
    7. '   ' → logprob: -8.54148006439209
    8. '#' → logprob: -8.91648006439209
    9. '        ' → logprob: -9.29148006439209
    10. '         ' → logprob: -9.41648006439209

Token 216: ' for' (ID: 395)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.4504173696041107
    2. 'for' (adapté à ' for') → logprob: -1.575417399406433
    3. '           ' → logprob: -2.8254172801971436
    4. 'new' → logprob: -3.2004172801971436
    5. 'dp' → logprob: -3.7004172801971436
    6. ' nd' → logprob: -4.200417518615723
    7. '       ' → logprob: -5.325417518615723
    8. 'tmp' → logprob: -5.825417518615723
    9. ' for' → logprob: -6.075417518615723
    10. 'next' → logprob: -6.450417518615723

Token 217: ' dg' (ID: 81332)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7306300401687622
    2. 'x' → logprob: -0.8556300401687622
    3. 'j' → logprob: -2.8556299209594727
    4. 'k' → logprob: -4.230629920959473
    5. 'v' → logprob: -5.230629920959473
    6. 'digit' → logprob: -5.355629920959473
    7. 'dig' → logprob: -5.480629920959473
    8. 'c' → logprob: -6.230629920959473
    9. ' d' → logprob: -6.605629920959473
    10. ' x' → logprob: -6.730629920959473

Token 218: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0072314017452299595
    2. 't' → logprob: -5.13223123550415
    3. 'in' → logprob: -7.13223123550415
    4. 'i' → logprob: -8.632231712341309
    5. ' ' → logprob: -9.382231712341309
    6. 'm' → logprob: -9.507231712341309
    7. 'it' → logprob: -9.882231712341309
    8. '1' → logprob: -11.007231712341309
    9. '   ' → logprob: -11.132231712341309
    10. '```' → logprob: -11.757231712341309

Token 219: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007232757634483278
    2. ' range' → logprob: -7.250723361968994
    3. 'map' → logprob: -11.750722885131836
    4. '   ' → logprob: -13.500722885131836
    5. '(range' → logprob: -13.875722885131836
    6. '[' → logprob: -13.875722885131836
    7. '"' → logprob: -14.875722885131836
    8. ''' → logprob: -15.250722885131836
    9. '10' → logprob: -15.500722885131836
    10. ' ' → logprob: -15.500722885131836

Token 220: '(' (ID: 7)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.000264315924141556
    2. '13' → logprob: -8.500264167785645
    3. '0' → logprob: -10.375264167785645
    4. '(' → logprob: -10.625264167785645
    5. '1' → logprob: -13.000264167785645
    6. ' ' → logprob: -13.500264167785645
    7. '```' → logprob: -14.375264167785645
    8. '   ' → logprob: -14.500264167785645
    9. '=' → logprob: -15.875264167785645
    10. '11' → logprob: -16.37526512145996

Token 221: '0' (ID: 15)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0009165783412754536
    2. '13' → logprob: -7.000916481018066
    3. '0' → logprob: -12.625916481018066
    4. '1' → logprob: -14.250916481018066
    5. ' ' → logprob: -15.000916481018066
    6. '```' → logprob: -15.125916481018066
    7. '(' → logprob: -15.500916481018066
    8. '   ' → logprob: -16.500917434692383
    9. '100' → logprob: -17.000917434692383
    10. '
' → logprob: -17.375917434692383

Token 222: ',' (ID: 11)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10121306777000427
    2. ',' → logprob: -2.351212978363037
    3. ' ' → logprob: -7.726212978363037
    4. '0' → logprob: -8.601213455200195
    5. '13' → logprob: -8.601213455200195
    6. ' ,' → logprob: -9.226213455200195
    7. '1' → logprob: -10.476213455200195
    8. ')' → logprob: -10.851213455200195
    9. '16' → logprob: -11.101213455200195
    10. ',
' → logprob: -11.226213455200195

Token 223: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0003469057264737785
    2. '13' → logprob: -8.000347137451172
    3. ' ' → logprob: -12.500347137451172
    4. '```' → logprob: -12.875347137451172
    5. '
' → logprob: -13.125347137451172
    6. '   ' → logprob: -14.625347137451172
    7. '``' → logprob: -14.750347137451172
    8. '

' → logprob: -15.125347137451172
    9. '26' → logprob: -15.500347137451172
    10. '16' → logprob: -15.625347137451172

Token 224: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3869028687477112
    2. '):
' → logprob: -1.1369028091430664
    3. '):
' → logprob: -11.761902809143066
    4. ' ):' → logprob: -11.761902809143066
    5. '           ' → logprob: -12.386902809143066
    6. ':' → logprob: -12.636902809143066
    7. ')' → logprob: -12.761902809143066
    8. ' ):
' → logprob: -12.761902809143066
    9. '       ' → logprob: -13.761902809143066
    10. '):

' → logprob: -14.011902809143066

Token 225: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17433717846870422
    2. '           ' → logprob: -2.049337148666382
    3. ' for' → logprob: -4.549337387084961
    4. ':' → logprob: -4.799337387084961
    5. '<|end|>' → logprob: -5.174337387084961
    6. ',' → logprob: -6.299337387084961
    7. 'for' → logprob: -6.674337387084961
    8. '       ' → logprob: -7.674337387084961
    9. ':
' → logprob: -7.674337387084961
    10. '	       ' → logprob: -8.049337387084961

Token 226: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5151482820510864
    2. ' for' → logprob: -1.1401482820510864
    3. '                   ' → logprob: -2.890148162841797
    4. 'dp' → logprob: -4.140148162841797
    5. ' dp' → logprob: -4.890148162841797
    6. 'mod' → logprob: -7.265148162841797
    7. 'nd' → logprob: -7.890148162841797
    8. '                       ' → logprob: -8.140148162841797
    9. '               ' → logprob: -8.140148162841797
    10. 'next' → logprob: -8.265148162841797

Token 227: ' r' (ID: 428)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.901653528213501
    2. 'r' → logprob: -1.526653528213501
    3. 'k' → logprob: -1.651653528213501
    4. 'mod' → logprob: -2.651653528213501
    5. 'rem' → logprob: -4.151653289794922
    6. 'x' → logprob: -4.276653289794922
    7. 'y' → logprob: -4.401653289794922
    8. 'v' → logprob: -4.526653289794922
    9. 'res' → logprob: -5.026653289794922
    10. 's' → logprob: -5.276653289794922

Token 228: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016101472079753876
    2. 'in' → logprob: -4.141101360321045
    3. 'ange' → logprob: -10.391101837158203
    4. ' ' → logprob: -11.266101837158203
    5. ',' → logprob: -11.766101837158203
    6. '<|end|>' → logprob: -12.016101837158203
    7. 'range' → logprob: -12.266101837158203
    8. '```' → logprob: -14.141101837158203
    9. ')' → logprob: -14.266101837158203
    10. '0' → logprob: -14.391101837158203

Token 229: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.931863051955588e-05
    2. ' range' → logprob: -9.750059127807617
    3. '[' → logprob: -14.750059127807617
    4. '(range' → logprob: -15.875059127807617
    5. '
' → logprob: -16.250059127807617
    6. ')' → logprob: -16.375059127807617
    7. '13' → logprob: -16.625059127807617
    8. '(' → logprob: -17.000059127807617
    9. '   ' → logprob: -17.500059127807617
    10. '	range' → logprob: -17.625059127807617

Token 230: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3870128095149994
    2. '13' → logprob: -1.1370128393173218
    3. '0' → logprob: -10.012012481689453
    4. ' ' → logprob: -10.762012481689453
    5. '=' → logprob: -10.887012481689453
    6. '(
' → logprob: -11.262012481689453
    7. '[' → logprob: -11.512012481689453
    8. ',' → logprob: -11.637012481689453
    9. '   ' → logprob: -12.262012481689453
    10. '12' → logprob: -12.637012481689453

Token 231: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -3.368984107510187e-05
    2. '0' → logprob: -10.375033378601074
    3. '1' → logprob: -13.625033378601074
    4. 'dp' → logprob: -14.625033378601074
    5. ' ' → logprob: -15.750033378601074
    6. '(' → logprob: -15.812533378601074
    7. '12' → logprob: -16.31253433227539
    8. ')' → logprob: -17.00003433227539
    9. 'mod' → logprob: -17.06253433227539
    10. '
' → logprob: -17.25003433227539

Token 232: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.693192720413208
    2. '):' → logprob: -0.693192720413208
    3. '):
' → logprob: -10.193192481994629
    4. '                   ' → logprob: -13.068192481994629
    5. '           ' → logprob: -13.943192481994629
    6. '+' → logprob: -13.943192481994629
    7. '):

' → logprob: -14.318192481994629
    8. '               ' → logprob: -14.318192481994629
    9. '                       ' → logprob: -14.693192481994629
    10. ':' → logprob: -14.818192481994629

Token 233: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0006257029599510133
    2. 'dp' → logprob: -8.625625610351562
    3. ' dp' → logprob: -9.125625610351562
    4. '           ' → logprob: -10.000625610351562
    5. ',' → logprob: -10.125625610351562
    6. '                  ' → logprob: -10.125625610351562
    7. '```' → logprob: -10.500625610351562
    8. '                           ' → logprob: -10.625625610351562
    9. '               ' → logprob: -10.625625610351562
    10. '                    
' → logprob: -10.750625610351562

Token 234: ' p' (ID: 275)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.032586440443992615
    2. '                       ' → logprob: -4.157586574554443
    3. 'nr' → logprob: -5.032586574554443
    4. ' dp' → logprob: -5.032586574554443
    5. '                   ' → logprob: -6.032586574554443
    6. 'nd' → logprob: -8.032586097717285
    7. 'new' → logprob: -9.157586097717285
    8. 'mod' → logprob: -9.282586097717285
    9. 'dr' → logprob: -9.532586097717285
    10. '                           ' → logprob: -10.157586097717285

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09647882729768753
    2. '=' → logprob: -2.7214789390563965
    3. 'r' → logprob: -4.2214789390563965
    4. 'rev' → logprob: -5.7214789390563965
    5. 'dp' → logprob: -5.9714789390563965
    6. 'os' → logprob: -6.2214789390563965
    7. 'new' → logprob: -7.3464789390563965
    8. 'w' → logprob: -7.5964789390563965
    9. 'v' → logprob: -8.221478462219238
    10. 're' → logprob: -8.471478462219238

Token 236: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.13932305574417114
    2. '(' → logprob: -2.2643229961395264
    3. '(d' → logprob: -3.7643229961395264
    4. ' (' → logprob: -7.0143232345581055
    5. '((' → logprob: -7.3893232345581055
    6. 'dp' → logprob: -7.6393232345581055
    7. '(tmp' → logprob: -8.264323234558105
    8. '(dx' → logprob: -8.389323234558105
    9. '(r' → logprob: -8.889323234558105
    10. '   ' → logprob: -10.264323234558105

Token 237: 'dg' (ID: 49449)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.122062087059021
    2. 'r' → logprob: -1.122062087059021
    3. '10' → logprob: -1.997062087059021
    4. '(r' → logprob: -1.997062087059021
    5. '(d' → logprob: -3.1220622062683105
    6. 'dg' → logprob: -3.9970622062683105
    7. '(dp' → logprob: -4.7470622062683105
    8. 'dp' → logprob: -5.4970622062683105
    9. ' (' → logprob: -8.122061729431152
    10. 'pow' → logprob: -8.247061729431152

Token 238: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09617979824542999
    2. ' +' → logprob: -2.971179723739624
    3. '+' → logprob: -3.846179723739624
    4. '+r' → logprob: -4.596179962158203
    5. ' *' → logprob: -4.721179962158203
    6. '+i' → logprob: -10.346179962158203
    7. '10' → logprob: -10.721179962158203
    8. '+p' → logprob: -11.471179962158203
    9. '*r' → logprob: -12.096179962158203
    10. '+d' → logprob: -12.221179962158203

Token 239: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -0.00010771531378850341
    2. ' tmp' → logprob: -9.625107765197754
    3. '   ' → logprob: -11.250107765197754
    4. 'pow' → logprob: -11.250107765197754
    5. '(tmp' → logprob: -11.875107765197754
    6. '10' → logprob: -12.500107765197754
    7. '12' → logprob: -13.500107765197754
    8. '	tmp' → logprob: -13.625107765197754
    9. 'temp' → logprob: -15.000107765197754
    10. '11' → logprob: -15.250107765197754

Token 240: ' +' (ID: 659)
  Prédit: '+r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+r' → logprob: -0.2559349834918976
    2. '+' → logprob: -1.6309349536895752
    3. ' +' → logprob: -3.505934953689575
    4. '+p' → logprob: -11.005934715270996
    5. '%' → logprob: -11.130934715270996
    6. '+
' → logprob: -12.255934715270996
    7. 'r' → logprob: -14.380934715270996
    8. ' ' → logprob: -14.505934715270996
    9. '+d' → logprob: -14.630934715270996
    10. '   ' → logprob: -14.755934715270996

Token 241: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.7610454708337784e-05
    2. ' r' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.87502670288086
    4. '                   ' → logprob: -17.87502670288086
    5. '           ' → logprob: -18.50002670288086
    6. '       ' → logprob: -19.37502670288086
    7. ' ' → logprob: -19.37502670288086
    8. '               ' → logprob: -19.87502670288086
    9. '                       ' → logprob: -19.87502670288086
    10. '                           ' → logprob: -20.00002670288086

Token 242: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0160506758838892
    2. ')%' → logprob: -4.141050815582275
    3. ' )' → logprob: -11.141050338745117
    4. ')
' → logprob: -14.266050338745117
    5. '）' → logprob: -14.516050338745117
    6. ')&' → logprob: -16.016050338745117
    7. '%' → logprob: -16.016050338745117
    8. '')' → logprob: -16.141050338745117
    9. ']' → logprob: -16.766050338745117
    10. '`)' → logprob: -17.016050338745117

Token 243: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.14743180572986603
    2. ' %' → logprob: -2.0224318504333496
    3. ')%' → logprob: -5.39743185043335
    4. ')' → logprob: -9.522431373596191
    5. ']%' → logprob: -9.647431373596191
    6. '%=' → logprob: -10.647431373596191
    7. ' %=' → logprob: -10.897431373596191
    8. '<|end|>' → logprob: -11.772431373596191
    9. '[' → logprob: -11.897431373596191
    10. ']' → logprob: -12.272431373596191

Token 244: ' ' (ID: 220)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -17.250009536743164
    4. '013' → logprob: -17.375009536743164
    5. '   ' → logprob: -17.750009536743164
    6. ' thirteen' → logprob: -17.875009536743164
    7. '۱۳' → logprob: -18.375009536743164
    8. '
' → logprob: -18.625009536743164
    9. '' → logprob: -19.125009536743164
    10. '(' → logprob: -19.250009536743164

Token 245: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. ' thirteen' → logprob: -16.750003814697266
    4. '```' → logprob: -17.750003814697266
    5. '۱۳' → logprob: -18.125003814697266
    6. '   ' → logprob: -18.500003814697266
    7. '013' → logprob: -18.875003814697266
    8. '十三' → logprob: -18.875003814697266
    9. '１３' → logprob: -19.625003814697266
    10. '१३' → logprob: -19.625003814697266

Token 246: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.019584596157073975
    2. 'dp' → logprob: -4.144584655761719
    3. ' dp' → logprob: -6.519584655761719
    4. '               ' → logprob: -7.769584655761719
    5. '(dp' → logprob: -8.269584655761719
    6. '           ' → logprob: -8.394584655761719
    7. '                    
' → logprob: -8.644584655761719
    8. ',' → logprob: -8.894584655761719
    9. '                       ' → logprob: -8.894584655761719
    10. '<|end|>' → logprob: -9.019584655761719

Token 247: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004506080877035856
    2. 'dp' → logprob: -5.5045061111450195
    3. '               ' → logprob: -8.87950611114502
    4. '           ' → logprob: -9.37950611114502
    5. ' dp' → logprob: -10.00450611114502
    6. '                       ' → logprob: -10.00450611114502
    7. '<|end|>' → logprob: -11.00450611114502
    8. '                           ' → logprob: -11.12950611114502
    9. '```' → logprob: -11.25450611114502
    10. '(dp' → logprob: -11.62950611114502

Token 248: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.0012627330143004656
    2. ' dp' → logprob: -6.751262664794922
    3. '                   ' → logprob: -9.376262664794922
    4. '	dp' → logprob: -12.876262664794922
    5. '(dp' → logprob: -13.501262664794922
    6. '                       ' → logprob: -13.626262664794922
    7. '                           ' → logprob: -14.251262664794922
    8. '```' → logprob: -14.876262664794922
    9. '_dp' → logprob: -15.251262664794922
    10. '                    
' → logprob: -15.501262664794922

Token 249: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.4804578125476837
    2. '[n' → logprob: -0.9804577827453613
    3. '[-' → logprob: -5.730457782745361
    4. '[len' → logprob: -5.855457782745361
    5. '[' → logprob: -8.48045825958252
    6. 'n' → logprob: -11.23045825958252
    7. '[j' → logprob: -12.10545825958252
    8. '][' → logprob: -12.23045825958252
    9. '[m' → logprob: -12.85545825958252
    10. '[num' → logprob: -12.98045825958252

Token 250: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.38744595646858215
    2. '+' → logprob: -1.1374459266662598
    3. ' +' → logprob: -8.512446403503418
    4. ']' → logprob: -8.762446403503418
    5. ' ][' → logprob: -9.387446403503418
    6. '[' → logprob: -9.887446403503418
    7. '-' → logprob: -10.387446403503418
    8. '   ' → logprob: -12.012446403503418
    9. '"][' → logprob: -12.012446403503418
    10. 'p' → logprob: -12.637446403503418

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.625004768371582
    3. '
' → logprob: -15.000004768371582
    4. '```' → logprob: -15.125004768371582
    5. '][' → logprob: -15.375004768371582
    6. '   ' → logprob: -15.875004768371582
    7. '2' → logprob: -17.000003814697266
    8. '[' → logprob: -17.375003814697266
    9. '１' → logprob: -17.875003814697266
    10. '``' → logprob: -18.062503814697266

Token 252: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.009277388453483582
    2. '[p' → logprob: -4.75927734375
    3. ']' → logprob: -7.63427734375
    4. '[' → logprob: -9.50927734375
    5. 'p' → logprob: -10.00927734375
    6. '```' → logprob: -11.00927734375
    7. '[r' → logprob: -11.63427734375
    8. '[
' → logprob: -12.63427734375
    9. ' ][' → logprob: -12.88427734375
    10. '"][' → logprob: -12.88427734375

Token 253: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.6240566083070007e-06
    2. ' p' → logprob: -13.375001907348633
    3. '
' → logprob: -17.750001907348633
    4. '[p' → logprob: -18.000001907348633
    5. '(p' → logprob: -18.125001907348633
    6. ' ' → logprob: -18.875001907348633
    7. 'r' → logprob: -19.000001907348633
    8. '	p' → logprob: -19.000001907348633
    9. '   ' → logprob: -19.125001907348633
    10. '<p' → logprob: -19.500001907348633

Token 254: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5769182443618774
    2. ']+=' → logprob: -0.8269182443618774
    3. '+=' → logprob: -6.951918125152588
    4. ']=' → logprob: -11.701918601989746
    5. ']=(' → logprob: -12.451918601989746
    6. ' +=' → logprob: -12.826918601989746
    7. '```' → logprob: -13.576918601989746
    8. '=' → logprob: -13.826918601989746
    9. ' ]' → logprob: -13.951918601989746
    10. ']+' → logprob: -14.201918601989746

Token 255: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00525403767824173
    2. '=' → logprob: -5.50525426864624
    3. ']+=' → logprob: -7.00525426864624
    4. ' +=' → logprob: -8.255253791809082
    5. '+=(' → logprob: -13.005253791809082
    6. ' =' → logprob: -13.130253791809082
    7. '=(' → logprob: -13.630253791809082
    8. '+' → logprob: -13.755253791809082
    9. ']' → logprob: -14.880253791809082
    10. '```' → logprob: -14.880253791809082

Token 256: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -1.664371848164592e-05
    2. ' (' → logprob: -11.375016212463379
    3. '(' → logprob: -12.500016212463379
    4. '   ' → logprob: -15.375016212463379
    5. '
' → logprob: -15.375016212463379
    6. '(df' → logprob: -15.625016212463379
    7. '(D' → logprob: -16.000017166137695
    8. '(dx' → logprob: -16.000017166137695
    9. '(dl' → logprob: -16.375017166137695
    10. '(dt' → logprob: -16.500017166137695

Token 257: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.020671984180808067
    2. '(dp' → logprob: -3.895672082901001
    3. ' dp' → logprob: -9.145671844482422
    4. ' (' → logprob: -12.020671844482422
    5. '	dp' → logprob: -12.395671844482422
    6. '           ' → logprob: -12.895671844482422
    7. '                   ' → logprob: -13.145671844482422
    8. '                           ' → logprob: -13.520671844482422
    9. '               ' → logprob: -13.645671844482422
    10. '   ' → logprob: -13.770671844482422

Token 258: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.246537173457909e-06
    2. 'i' → logprob: -12.750003814697266
    3. '[' → logprob: -14.250003814697266
    4. 'dp' → logprob: -15.750003814697266
    5. '[I' → logprob: -16.000003814697266
    6. ' [' → logprob: -17.000003814697266
    7. 's' → logprob: -17.625003814697266
    8. '[p' → logprob: -17.750003814697266
    9. '(i' → logprob: -17.750003814697266
    10. '```' → logprob: -17.875003814697266

Token 259: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0038614741060882807
    2. '[' → logprob: -6.128861427307129
    3. '][' → logprob: -6.503861427307129
    4. '[i' → logprob: -9.503861427307129
    5. 'i' → logprob: -10.003861427307129
    6. ']' → logprob: -10.503861427307129
    7. '1' → logprob: -11.128861427307129
    8. '-' → logprob: -12.128861427307129
    9. '0' → logprob: -13.753861427307129
    10. '>' → logprob: -13.878861427307129

Token 260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. 'i' → logprob: -14.500001907348633
    3. ' ' → logprob: -14.875001907348633
    4. '[i' → logprob: -15.187501907348633
    5. '```' → logprob: -15.500001907348633
    6. '
' → logprob: -15.562501907348633
    7. '(i' → logprob: -16.375001907348633
    8. '   ' → logprob: -16.625001907348633
    9. '[' → logprob: -16.750001907348633
    10. '-' → logprob: -16.937501907348633

Token 261: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08622537553310394
    2. '[p' → logprob: -2.7112252712249756
    3. '[' → logprob: -4.711225509643555
    4. ')[' → logprob: -5.211225509643555
    5. '[r' → logprob: -8.211225509643555
    6. ']' → logprob: -8.836225509643555
    7. '[ch' → logprob: -8.836225509643555
    8. '[s' → logprob: -8.961225509643555
    9. ' ][' → logprob: -9.211225509643555
    10. '[q' → logprob: -9.336225509643555

Token 262: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.008651803247630596
    2. 'r' → logprob: -4.7586517333984375
    3. '[r' → logprob: -11.008651733398438
    4. '[p' → logprob: -11.883651733398438
    5. ' p' → logprob: -12.008651733398438
    6. '(r' → logprob: -13.383651733398438
    7. '(p' → logprob: -13.383651733398438
    8. 'dp' → logprob: -14.008651733398438
    9. '
' → logprob: -14.258651733398438
    10. 'i' → logprob: -14.633651733398438

Token 263: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6570276618003845
    2. '+' → logprob: -0.7820276618003845
    3. ']+' → logprob: -3.7820277214050293
    4. ' +' → logprob: -6.782027721405029
    5. ']+=' → logprob: -9.407027244567871
    6. '+]' → logprob: -10.032027244567871
    7. '+r' → logprob: -10.782027244567871
    8. '[' → logprob: -10.907027244567871
    9. '+
' → logprob: -11.032027244567871
    10. '][' → logprob: -11.032027244567871

Token 264: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014244362711906433
    2. ' +' → logprob: -4.264244556427002
    3. '+[' → logprob: -10.514244079589844
    4. '[' → logprob: -11.139244079589844
    5. ']' → logprob: -11.514244079589844
    6. ']+' → logprob: -11.639244079589844
    7. '+d' → logprob: -12.139244079589844
    8. '+
' → logprob: -12.264244079589844
    9. '+r' → logprob: -12.514244079589844
    10. '+]' → logprob: -14.014244079589844

Token 265: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.306760805164231e-05
    2. ' dp' → logprob: -11.25001335144043
    3. '	dp' → logprob: -19.62501335144043
    4. '           ' → logprob: -20.75001335144043
    5. '(dp' → logprob: -21.00001335144043
    6. '   ' → logprob: -21.12501335144043
    7. '
' → logprob: -21.87501335144043
    8. ' ' → logprob: -22.37501335144043
    9. '               ' → logprob: -22.62501335144043
    10. 'dm' → logprob: -23.00001335144043

Token 266: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.023257127031683922
    2. 'i' → logprob: -3.77325701713562
    3. '[' → logprob: -12.2732572555542
    4. ' i' → logprob: -13.0232572555542
    5. '(i' → logprob: -13.5232572555542
    6. '{i' → logprob: -14.0232572555542
    7. ')i' → logprob: -14.3982572555542
    8. '```' → logprob: -14.5232572555542
    9. '[
' → logprob: -15.1482572555542
    10. '[I' → logprob: -15.2732572555542

Token 267: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.042565397918224335
    2. '[r' → logprob: -3.66756534576416
    3. '[' → logprob: -4.29256534576416
    4. '][' → logprob: -6.29256534576416
    5. '[p' → logprob: -8.66756534576416
    6. '[ch' → logprob: -8.66756534576416
    7. ']' → logprob: -9.79256534576416
    8. '[s' → logprob: -10.16756534576416
    9. '[t' → logprob: -10.79256534576416
    10. '[m' → logprob: -11.04256534576416

Token 268: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.5048530030981055e-06
    2. ' r' → logprob: -13.750001907348633
    3. '[r' → logprob: -15.000001907348633
    4. '
' → logprob: -18.375001907348633
    5. '   ' → logprob: -18.750001907348633
    6. '(r' → logprob: -19.500001907348633
    7. ' ' → logprob: -19.500001907348633
    8. '[' → logprob: -19.750001907348633
    9. '13' → logprob: -19.875001907348633
    10. '```' → logprob: -20.000001907348633

Token 269: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.4745708703994751
    2. ')' → logprob: -0.9745708703994751
    3. ')%' → logprob: -7.8495707511901855
    4. ' )' → logprob: -10.724571228027344
    5. '           ' → logprob: -11.099571228027344
    6. '       ' → logprob: -11.224571228027344
    7. ']' → logprob: -11.349571228027344
    8. '                   ' → logprob: -11.349571228027344
    9. ')])' → logprob: -12.224571228027344
    10. ' ])' → logprob: -12.474571228027344

Token 270: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.006117674987763166
    2. ' %' → logprob: -5.131117820739746
    3. ')%' → logprob: -9.631117820739746
    4. '%x' → logprob: -10.256117820739746
    5. '%d' → logprob: -10.381117820739746
    6. '%i' → logprob: -10.881117820739746
    7. ')' → logprob: -11.131117820739746
    8. '%m' → logprob: -12.631117820739746
    9. ']%' → logprob: -12.756117820739746
    10. '%b' → logprob: -12.756117820739746

Token 271: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.128163257315464e-07
    2. ' m' → logprob: -15.25
    3. 'mod' → logprob: -21.25
    4. '
' → logprob: -21.375
    5. '(m' → logprob: -22.25
    6. '   ' → logprob: -23.125
    7. '%m' → logprob: -23.125
    8. '	m' → logprob: -23.875
    9. '```' → logprob: -24.125
    10. ' ' → logprob: -24.125

Token 272: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11088055372238159
    2. '           ' → logprob: -2.3608806133270264
    3. '
' → logprob: -5.110880374908447
    4. '        
' → logprob: -6.735880374908447
    5. '    
' → logprob: -7.110880374908447
    6. '            
' → logprob: -7.360880374908447
    7. '   ' → logprob: -7.485880374908447
    8. 'else' → logprob: -8.235880851745605
    9. 'elif' → logprob: -8.360880851745605
    10. '  
' → logprob: -9.235880851745605

Token 273: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005855606868863106
    2. '           ' → logprob: -8.500585556030273
    3. '   ' → logprob: -8.500585556030273
    4. 'tmp' → logprob: -8.875585556030273
    5. '
' → logprob: -11.000585556030273
    6. '        
' → logprob: -12.000585556030273
    7. '```' → logprob: -12.000585556030273
    8. '               ' → logprob: -13.250585556030273
    9. '    
' → logprob: -13.750585556030273
    10. '	tmp' → logprob: -13.875585556030273

Token 274: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0796084776520729
    2. 'else' (adapté à ' else') → logprob: -2.57960844039917
    3. 'elif' → logprob: -7.70460844039917
    4. ' else' → logprob: -8.454608917236328
    5. '   ' → logprob: -10.204608917236328
    6. '
' → logprob: -12.204608917236328
    7. 'tmp' → logprob: -12.204608917236328
    8. '      ' → logprob: -12.954608917236328
    9. '        
' → logprob: -13.829608917236328
    10. '     ' → logprob: -14.204608917236328

Token 275: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04836784675717354
    2. ' for' → logprob: -3.173367738723755
    3. 'for' → logprob: -5.798367977142334
    4. '       ' → logprob: -7.048367977142334
    5. ':' → logprob: -8.048367500305176
    6. '         ' → logprob: -8.173367500305176
    7. '        ' → logprob: -9.298367500305176
    8. '   ' → logprob: -9.298367500305176
    9. '               ' → logprob: -9.548367500305176
    10. ':
' → logprob: -9.673367500305176

Token 276: '           ' (ID: 352)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0258429050445557
    2. '           ' → logprob: -1.6508429050445557
    3. ' for' → logprob: -1.9008429050445557
    4. ' d' → logprob: -2.5258429050445557
    5. 'for' → logprob: -2.5258429050445557
    6. 'digit' → logprob: -3.5258429050445557
    7. 'dg' → logprob: -3.5258429050445557
    8. ' digit' → logprob: -3.6508429050445557
    9. '       ' → logprob: -4.025842666625977
    10. ' dg' → logprob: -4.275842666625977

Token 277: ' val' (ID: 1459)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11596108973026276
    2. 'dg' → logprob: -3.1159610748291016
    3. 'for' → logprob: -3.4909610748291016
    4. ' d' → logprob: -4.740961074829102
    5. 'digit' → logprob: -4.740961074829102
    6. 'dig' → logprob: -5.240961074829102
    7. 'v' → logprob: -5.865961074829102
    8. '   ' → logprob: -6.615961074829102
    9. ' for' → logprob: -6.740961074829102
    10. ' dg' → logprob: -6.990961074829102

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759571194648743
    2. '=' → logprob: -0.8259571194648743
    3. '           ' → logprob: -12.200957298278809
    4. '       ' → logprob: -12.575957298278809
    5. '   ' → logprob: -12.575957298278809
    6. '=int' → logprob: -12.700957298278809
    7. ' ' → logprob: -14.450957298278809
    8. 'd' → logprob: -14.700957298278809
    9. '    ' → logprob: -15.325957298278809
    10. '        ' → logprob: -15.325957298278809

Token 279: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.021270722150802612
    2. '(int' → logprob: -4.396270751953125
    3. '(ord' → logprob: -5.396270751953125
    4. 'ord' → logprob: -5.771270751953125
    5. '(' → logprob: -7.021270751953125
    6. ' int' → logprob: -8.896270751953125
    7. '[int' → logprob: -11.146270751953125
    8. ' (' → logprob: -11.271270751953125
    9. ' ord' → logprob: -12.021270751953125
    10. '"' → logprob: -12.771270751953125

Token 280: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -0.0007117166533134878
    2. 'ch' → logprob: -7.250711917877197
    3. '[ch' → logprob: -14.125711441040039
    4. '(' → logprob: -14.250711441040039
    5. '	ch' → logprob: -15.875711441040039
    6. ' ch' → logprob: -16.75071144104004
    7. '(
' → logprob: -17.37571144104004
    8. '/ch' → logprob: -17.62571144104004
    9. ',ch' → logprob: -18.25071144104004
    10. ' (' → logprob: -18.37571144104004

Token 281: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.474293053150177
    2. ')' → logprob: -0.974293053150177
    3. '           ' → logprob: -8.849292755126953
    4. ' )
' → logprob: -10.349292755126953
    5. '       ' → logprob: -10.724292755126953
    6. ' )' → logprob: -11.724292755126953
    7. ')
' → logprob: -12.349292755126953
    8. '   ' → logprob: -13.599292755126953
    9. '               ' → logprob: -14.099292755126953
    10. ')

' → logprob: -14.224292755126953

Token 282: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8145822882652283
    2. 'for' → logprob: -0.8145822882652283
    3. ' for' → logprob: -2.189582347869873
    4. '       ' → logprob: -6.064582347869873
    5. '   ' → logprob: -10.939581871032715
    6. '               ' → logprob: -11.314581871032715
    7. '	for' → logprob: -11.439581871032715
    8. '<|end|>' → logprob: -12.564581871032715
    9. '```' → logprob: -12.689581871032715
    10. ',' → logprob: -12.814581871032715

Token 283: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0011771318968385458
    2. ' for' → logprob: -6.7511773109436035
    3. '           ' → logprob: -12.001176834106445
    4. '       ' → logprob: -14.626176834106445
    5. '            
' → logprob: -16.376176834106445
    6. '	for' → logprob: -16.626176834106445
    7. '
' → logprob: -17.001176834106445
    8. 'r' → logprob: -18.751176834106445
    9. ' ' → logprob: -19.126176834106445
    10. '        
' → logprob: -19.126176834106445

Token 284: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.006715967319905758
    2. ' r' → logprob: -5.006715774536133
    3. 'p' → logprob: -15.256715774536133
    4. '	r' → logprob: -16.381715774536133
    5. ' ' → logprob: -16.506715774536133
    6. '_r' → logprob: -16.506715774536133
    7. '   ' → logprob: -16.631715774536133
    8. ' ' → logprob: -17.381715774536133
    9. 'j' → logprob: -17.694215774536133
    10. '```' → logprob: -17.694215774536133

Token 285: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03807833418250084
    2. 'in' → logprob: -3.2880783081054688
    3. ' ' → logprob: -11.288078308105469
    4. 'n' → logprob: -11.663078308105469
    5. 'range' → logprob: -12.288078308105469
    6. 'd' → logprob: -12.538078308105469
    7. '[' → logprob: -13.538078308105469
    8. 'import' → logprob: -14.038078308105469
    9. '0' → logprob: -14.538078308105469
    10. '1' → logprob: -14.663078308105469

Token 286: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024901647120714188
    2. ' range' → logprob: -6.002490043640137
    3. '13' → logprob: -11.252490043640137
    4. '[' → logprob: -13.752490043640137
    5. '0' → logprob: -15.002490043640137
    6. '12' → logprob: -16.252490997314453
    7. '(range' → logprob: -16.877490997314453
    8. '
' → logprob: -17.627490997314453
    9. ' ' → logprob: -18.002490997314453
    10. '(' → logprob: -18.377490997314453

Token 287: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00043138445471413434
    2. '13' → logprob: -7.750431537628174
    3. '[' → logprob: -14.875431060791016
    4. ' (' → logprob: -15.375431060791016
    5. '(
' → logprob: -16.375431060791016
    6. ' ' → logprob: -17.375431060791016
    7. '   ' → logprob: -18.250431060791016
    8. '12' → logprob: -19.250431060791016
    9. '(len' → logprob: -19.500431060791016
    10. '((' → logprob: -19.750431060791016

Token 288: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -6.034592388459714e-06
    2. ' ' → logprob: -12.125005722045898
    3. '0' → logprob: -15.250005722045898
    4. '   ' → logprob: -16.3750057220459
    5. '013' → logprob: -16.3750057220459
    6. '(' → logprob: -17.2500057220459
    7. '1' → logprob: -18.1250057220459
    8. '
' → logprob: -18.5000057220459
    9. '```' → logprob: -18.7500057220459
    10. ')' → logprob: -19.1250057220459

Token 289: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.012544380500912666
    2. '):' → logprob: -4.38754415512085
    3. '):
' → logprob: -11.262544631958008
    4. '):

' → logprob: -12.387544631958008
    5. ':' → logprob: -12.512544631958008
    6. ':
' → logprob: -12.512544631958008
    7. '       ' → logprob: -12.762544631958008
    8. '13' → logprob: -12.762544631958008
    9. '           ' → logprob: -13.137544631958008
    10. '():
' → logprob: -14.512544631958008

Token 290: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47314637899398804
    2. 'p' → logprob: -1.0981464385986328
    3. ' p' → logprob: -3.348146438598633
    4. 'dp' → logprob: -5.098146438598633
    5. '           ' → logprob: -6.723146438598633
    6. ' dp' → logprob: -7.723146438598633
    7. '                   ' → logprob: -8.098146438598633
    8. '              ' → logprob: -10.348146438598633
    9. '```' → logprob: -10.598146438598633
    10. ' if' → logprob: -10.723146438598633

Token 291: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.034078553318977356
    2. ' p' → logprob: -3.409078598022461
    3. '           ' → logprob: -8.534078598022461
    4. 'q' → logprob: -9.159078598022461
    5. '                   ' → logprob: -9.409078598022461
    6. '               ' → logprob: -10.409078598022461
    7. ' ' → logprob: -12.659078598022461
    8. 'dp' → logprob: -12.659078598022461
    9. 'v' → logprob: -13.284078598022461
    10. 'np' → logprob: -13.409078598022461

Token 292: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759472250938416
    2. '=' → logprob: -0.8259472250938416
    3. 'p' → logprob: -12.825946807861328
    4. ')' → logprob: -13.825946807861328
    5. '=(' → logprob: -14.450946807861328
    6. '           ' → logprob: -14.450946807861328
    7. '   ' → logprob: -14.575946807861328
    8. ' =(' → logprob: -14.950946807861328
    9. '[' → logprob: -15.200946807861328
    10. ' ' → logprob: -15.325946807861328

Token 293: ' (' (ID: 350)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.16048751771450043
    2. ' (' → logprob: -1.9104875326156616
    3. '(' → logprob: -9.160487174987793
    4. '               ' → logprob: -9.410487174987793
    5. '[val' → logprob: -10.160487174987793
    6. '(int' → logprob: -11.160487174987793
    7. '(vals' → logprob: -12.285487174987793
    8. '(tmp' → logprob: -12.785487174987793
    9. '((' → logprob: -13.160487174987793
    10. '           ' → logprob: -13.160487174987793

Token 294: 'val' (ID: 1105)
  Prédit: '(val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -0.0009377855458296835
    2. 'val' → logprob: -7.0009379386901855
    3. ' (' → logprob: -11.125937461853027
    4. '[val' → logprob: -12.125937461853027
    5. ' val' → logprob: -12.375937461853027
    6. ',val' → logprob: -14.250937461853027
    7. '(' → logprob: -14.500937461853027
    8. '   ' → logprob: -15.000937461853027
    9. '((' → logprob: -15.625937461853027
    10. '	val' → logprob: -15.750937461853027

Token 295: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0008046258008107543
    2. ' *' → logprob: -7.125804424285889
    3. '[tmp' → logprob: -17.125804901123047
    4. '**' → logprob: -17.375804901123047
    5. '*out' → logprob: -18.250804901123047
    6. '*object' → logprob: -18.500804901123047
    7. '*ft' → logprob: -18.625804901123047
    8. ' ' → logprob: -18.625804901123047
    9. '*p' → logprob: -19.125804901123047
    10. '*r' → logprob: -19.125804901123047

Token 296: 'tmp' (ID: 11669)
  Prédit: 'tmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' → logprob: -4.751746746478602e-05
    2. ' tmp' → logprob: -10.00004768371582
    3. '[tmp' → logprob: -14.00004768371582
    4. '(tmp' → logprob: -14.62504768371582
    5. '/tmp' → logprob: -15.75004768371582
    6. '$tmp' → logprob: -16.00004768371582
    7. '	tmp' → logprob: -16.12504768371582
    8. 'temp' → logprob: -16.25004768371582
    9. 'tmpl' → logprob: -16.37504768371582
    10. ',tmp' → logprob: -17.12504768371582

Token 297: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2524866461753845
    2. '+' → logprob: -1.5024867057800293
    3. '+r' → logprob: -7.502486705780029
    4. '+p' → logprob: -12.127486228942871
    5. '+i' → logprob: -16.502487182617188
    6. ' ' → logprob: -16.877487182617188
    7. '+d' → logprob: -17.252487182617188
    8. '+x' → logprob: -17.502487182617188
    9. '%' → logprob: -17.877487182617188
    10. ')' → logprob: -18.377487182617188

Token 298: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0004882152716163546
    2. ' r' → logprob: -7.62548828125
    3. '   ' → logprob: -16.87548828125
    4. ' ' → logprob: -17.12548828125
    5. '[r' → logprob: -17.25048828125
    6. '       ' → logprob: -17.75048828125
    7. '           ' → logprob: -17.87548828125
    8. ')' → logprob: -18.50048828125
    9. '                   ' → logprob: -19.12548828125
    10. '               ' → logprob: -19.12548828125

Token 299: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.988221684878226e-06
    2. ')%' → logprob: -12.375006675720215
    3. ' )' → logprob: -12.875006675720215
    4. ']' → logprob: -17.75000762939453
    5. '）' → logprob: -17.87500762939453
    6. '[' → logprob: -18.25000762939453
    7. ')
' → logprob: -18.62500762939453
    8. '')' → logprob: -19.50000762939453
    9. '`)' → logprob: -19.50000762939453
    10. '   ' → logprob: -19.62500762939453

Token 300: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.38691580295562744
    2. ' %' → logprob: -1.1369158029556274
    3. ')%' → logprob: -10.386916160583496
    4. ')' → logprob: -11.636916160583496
    5. ']%' → logprob: -12.511916160583496
    6. ' %=' → logprob: -14.261916160583496
    7. ']' → logprob: -15.636916160583496
    8. '[' → logprob: -15.636916160583496
    9. '           ' → logprob: -15.761916160583496
    10. '%=' → logprob: -16.51191520690918

Token 301: ' ' (ID: 220)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -17.00037956237793
    4. '```' → logprob: -17.00037956237793
    5. '013' → logprob: -18.00037956237793
    6. '۱۳' → logprob: -18.56287956237793
    7. '１３' → logprob: -18.56287956237793
    8. ' thirteen' → logprob: -18.68787956237793
    9. '[' → logprob: -18.87537956237793
    10. '(' → logprob: -19.12537956237793

Token 302: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -19.625
    4. '
' → logprob: -20.0
    5. '   ' → logprob: -20.125
    6. '۱۳' → logprob: -20.5
    7. '013' → logprob: -20.5
    8. '' → logprob: -20.625
    9. 'm' → logprob: -21.125
    10. '[' → logprob: -21.125

Token 303: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01519535668194294
    2. '                   ' → logprob: -5.265195369720459
    3. '<|end|>' → logprob: -5.765195369720459
    4. '       ' → logprob: -6.015195369720459
    5. '           ' → logprob: -6.515195369720459
    6. 'dp' → logprob: -6.640195369720459
    7. '
' → logprob: -7.265195369720459
    8. '<|end|>' → logprob: -7.890195369720459
    9. '```' → logprob: -9.2651948928833
    10. ' dp' → logprob: -9.8901948928833

Token 304: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00815482810139656
    2. '           ' → logprob: -5.50815486907959
    3. '                   ' → logprob: -6.25815486907959
    4. 'dp' → logprob: -6.38315486907959
    5. '       ' → logprob: -8.50815486907959
    6. ' dp' → logprob: -9.25815486907959
    7. '```' → logprob: -10.38315486907959
    8. '              ' → logprob: -10.50815486907959
    9. '                ' → logprob: -10.63315486907959
    10. '<|end|>' → logprob: -10.88315486907959

Token 305: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -9.949026571121067e-05
    2. ' dp' → logprob: -9.250099182128906
    3. '               ' → logprob: -12.625099182128906
    4. '                   ' → logprob: -17.125099182128906
    5. '	dp' → logprob: -18.750099182128906
    6. '           ' → logprob: -19.375099182128906
    7. '(dp' → logprob: -20.000099182128906
    8. '                ' → logprob: -21.250099182128906
    9. '
' → logprob: -21.500099182128906
    10. '_dp' → logprob: -21.750099182128906

Token 306: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. 'i' → logprob: -14.750000953674316
    3. '[' → logprob: -15.625000953674316
    4. '[I' → logprob: -16.375
    5. '[next' → logprob: -17.0
    6. '[n' → logprob: -17.875
    7. 'def' → logprob: -18.0
    8. '```' → logprob: -18.375
    9. '[p' → logprob: -19.125
    10. '(i' → logprob: -19.125

Token 307: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.232493564719334e-05
    2. '[' → logprob: -9.500082015991211
    3. ' +' → logprob: -12.125082015991211
    4. '][' → logprob: -13.250082015991211
    5. '+[' → logprob: -16.12508201599121
    6. '+
' → logprob: -17.75008201599121
    7. '＋' → logprob: -17.75008201599121
    8. '1' → logprob: -17.87508201599121
    9. '       ' → logprob: -18.75008201599121
    10. '   ' → logprob: -19.37508201599121

Token 308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.125000953674316
    3. '+' → logprob: -15.625000953674316
    4. '```' → logprob: -16.875
    5. '   ' → logprob: -17.25
    6. '[' → logprob: -17.75
    7. '...' → logprob: -18.125
    8. '<|end|>' → logprob: -18.625
    9. '       ' → logprob: -19.3125
    10. '
' → logprob: -19.3125

Token 309: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002540705492720008
    2. '[p' → logprob: -6.002540588378906
    3. ']' → logprob: -10.127540588378906
    4. '[' → logprob: -11.377540588378906
    5. ' ][' → logprob: -12.002540588378906
    6. 'p' → logprob: -13.127540588378906
    7. '       ' → logprob: -13.127540588378906
    8. '           ' → logprob: -14.252540588378906
    9. '"][' → logprob: -14.502540588378906
    10. ''][' → logprob: -14.502540588378906

Token 310: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.7610454708337784e-05
    2. ' p' → logprob: -11.250027656555176
    3. '[p' → logprob: -11.375027656555176
    4. '(p' → logprob: -13.000027656555176
    5. 'dp' → logprob: -14.375027656555176
    6. '
' → logprob: -16.62502670288086
    7. '   ' → logprob: -16.75002670288086
    8. '<p' → logprob: -17.12502670288086
    9. '	p' → logprob: -17.50002670288086
    10. 'r' → logprob: -17.62502670288086

Token 311: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.587483221665025e-05
    2. ']=' → logprob: -10.250065803527832
    3. '=' → logprob: -10.500065803527832
    4. ' ]' → logprob: -13.375065803527832
    5. ']+=' → logprob: -13.750065803527832
    6. ')' → logprob: -15.125065803527832
    7. ' =' → logprob: -16.87506675720215
    8. '[' → logprob: -17.87506675720215
    9. ']
' → logprob: -18.50006675720215
    10. ']=(' → logprob: -18.87506675720215

Token 312: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015093892579898238
    2. ' =' → logprob: -6.501509189605713
    3. '+=' → logprob: -11.876509666442871
    4. '           ' → logprob: -16.626508712768555
    5. '=(' → logprob: -17.126508712768555
    6. '%=' → logprob: -17.751508712768555
    7. ' +=' → logprob: -18.001508712768555
    8. '               ' → logprob: -18.376508712768555
    9. '   ' → logprob: -18.376508712768555
    10. '=
' → logprob: -18.876508712768555

Token 313: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.005240514408797026
    2. ' (' → logprob: -5.255240440368652
    3. '(' → logprob: -12.130240440368652
    4. '   ' → logprob: -14.880240440368652
    5. '(dx' → logprob: -15.630240440368652
    6. '(df' → logprob: -15.755240440368652
    7. ' ' → logprob: -16.00524139404297
    8. '(dt' → logprob: -16.50524139404297
    9. '
' → logprob: -16.63024139404297
    10. '  ' → logprob: -16.75524139404297

Token 314: 'dp' (ID: 19037)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -2.3199920178740285e-05
    2. ' (' → logprob: -11.000022888183594
    3. 'dp' → logprob: -12.125022888183594
    4. '(' → logprob: -14.625022888183594
    5. '(dx' → logprob: -16.000022888183594
    6. '
' → logprob: -16.500022888183594
    7. '   ' → logprob: -16.750022888183594
    8. '(dt' → logprob: -16.875022888183594
    9. '(df' → logprob: -16.875022888183594
    10. '(ds' → logprob: -17.125022888183594

Token 315: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5231797695159912
    2. 'i' → logprob: -0.8981797695159912
    3. ' i' → logprob: -11.27318000793457
    4. '[' → logprob: -11.39818000793457
    5. '   ' → logprob: -11.77318000793457
    6. '```' → logprob: -12.02318000793457
    7. ' ' → logprob: -12.89818000793457
    8. '(i' → logprob: -12.89818000793457
    9. '0' → logprob: -13.02318000793457
    10. '	i' → logprob: -13.14818000793457

Token 316: '+' (ID: 10)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0022739621344953775
    2. '[i' → logprob: -6.502274036407471
    3. '+' → logprob: -7.252274036407471
    4. '1' → logprob: -10.627273559570312
    5. '[' → logprob: -11.127273559570312
    6. ']' → logprob: -11.502273559570312
    7. 'i' → logprob: -12.127273559570312
    8. ' ][' → logprob: -12.377273559570312
    9. ')[' → logprob: -13.377273559570312
    10. '   ' → logprob: -15.002273559570312

Token 317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6134864091873169
    2. 'i' → logprob: -0.8634864091873169
    3. '[i' → logprob: -3.8634862899780273
    4. '][' → logprob: -4.238486289978027
    5. ' i' → logprob: -7.238486289978027
    6. '0' → logprob: -8.238486289978027
    7. ' ' → logprob: -9.363486289978027
    8. '(i' → logprob: -9.613486289978027
    9. '```' → logprob: -9.863486289978027
    10. '[' → logprob: -9.988486289978027

Token 318: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00016778295685071498
    2. '[r' → logprob: -9.250167846679688
    3. '[i' → logprob: -10.125167846679688
    4. ']' → logprob: -11.125167846679688
    5. ' ][' → logprob: -11.500167846679688
    6. '[' → logprob: -12.625167846679688
    7. 'r' → logprob: -14.000167846679688
    8. '   ' → logprob: -14.500167846679688
    9. ')[' → logprob: -14.875167846679688
    10. 'i' → logprob: -15.500167846679688

Token 319: 'p' (ID: 79)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.003661833703517914
    2. 'i' → logprob: -6.003661632537842
    3. '[r' → logprob: -7.378661632537842
    4. '[i' → logprob: -7.503661632537842
    5. '][' → logprob: -12.753662109375
    6. ' r' → logprob: -12.878662109375
    7. '[' → logprob: -13.128662109375
    8. '0' → logprob: -13.378662109375
    9. ']' → logprob: -15.128662109375
    10. 'p' → logprob: -16.003662109375

Token 320: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00022022522171027958
    2. ']+' → logprob: -8.75022029876709
    3. '+' → logprob: -9.87522029876709
    4. '][' → logprob: -11.87522029876709
    5. ' ]' → logprob: -14.00022029876709
    6. '[r' → logprob: -14.12522029876709
    7. ')' → logprob: -14.50022029876709
    8. 'p' → logprob: -14.87522029876709
    9. '
' → logprob: -15.25022029876709
    10. ']
' → logprob: -16.250219345092773

Token 321: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007607577834278345
    2. ' +' → logprob: -4.882607460021973
    3. ')' → logprob: -14.507607460021973
    4. '
' → logprob: -15.132607460021973
    5. '+p' → logprob: -15.382607460021973
    6. '%' → logprob: -16.25760841369629
    7. ' ' → logprob: -16.38260841369629
    8. '+=' → logprob: -16.75760841369629
    9. '+
' → logprob: -17.13260841369629
    10. '+)' → logprob: -17.38260841369629

Token 322: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -2.7610454708337784e-05
    2. ' dp' → logprob: -10.500027656555176
    3. '	dp' → logprob: -18.75002670288086
    4. '           ' → logprob: -18.87502670288086
    5. '   ' → logprob: -20.12502670288086
    6. '
' → logprob: -20.37502670288086
    7. '               ' → logprob: -20.62502670288086
    8. '       ' → logprob: -21.00002670288086
    9. 'df' → logprob: -21.00002670288086
    10. 'd' → logprob: -21.12502670288086

Token 323: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2113979209971149e-05
    2. 'i' → logprob: -11.375012397766113
    3. '[' → logprob: -15.250012397766113
    4. '```' → logprob: -16.000011444091797
    5. '   ' → logprob: -16.375011444091797
    6. '[r' → logprob: -16.875011444091797
    7. '[I' → logprob: -17.000011444091797
    8. '[
' → logprob: -18.000011444091797
    9. ' [' → logprob: -18.375011444091797
    10. ' ' → logprob: -18.625011444091797

Token 324: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.25240516662597656
    2. '[r' → logprob: -1.5024051666259766
    3. '       ' → logprob: -8.877405166625977
    4. '[' → logprob: -9.252405166625977
    5. ' ][' → logprob: -9.252405166625977
    6. '   ' → logprob: -10.502405166625977
    7. 'r' → logprob: -10.877405166625977
    8. ']' → logprob: -11.127405166625977
    9. '           ' → logprob: -11.252405166625977
    10. ')[' → logprob: -11.252405166625977

Token 325: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -3.173704271830502e-06
    2. ' r' → logprob: -12.75000286102295
    3. '[r' → logprob: -15.75000286102295
    4. '   ' → logprob: -18.875003814697266
    5. '	r' → logprob: -19.750003814697266
    6. ' ' → logprob: -20.625003814697266
    7. '(r' → logprob: -20.875003814697266
    8. '_r' → logprob: -21.125003814697266
    9. '       ' → logprob: -21.250003814697266
    10. '  ' → logprob: -21.250003814697266

Token 326: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008082019630819559
    2. '])' → logprob: -7.125808238983154
    3. ')%' → logprob: -13.750807762145996
    4. ']' → logprob: -14.125807762145996
    5. ' )' → logprob: -14.375807762145996
    6. '   ' → logprob: -15.250807762145996
    7. '       ' → logprob: -15.250807762145996
    8. '})' → logprob: -15.375807762145996
    9. '）' → logprob: -15.875807762145996
    10. '           ' → logprob: -16.125808715820312

Token 327: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.20156049728393555
    2. ' %' → logprob: -1.7015604972839355
    3. ')%' → logprob: -9.576560974121094
    4. ')' → logprob: -9.826560974121094
    5. '%s' → logprob: -11.951560974121094
    6. '
' → logprob: -12.951560974121094
    7. '```' → logprob: -12.951560974121094
    8. '%x' → logprob: -13.076560974121094
    9. '%m' → logprob: -13.201560974121094
    10. ']%' → logprob: -13.326560974121094

Token 328: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01815006136894226
    2. ' m' → logprob: -4.0181498527526855
    3. ' ' → logprob: -16.518150329589844
    4. '```' → logprob: -17.143150329589844
    5. '
' → logprob: -18.893150329589844
    6. ' м' → logprob: -19.768150329589844
    7. '7' → logprob: -19.768150329589844
    8. '   ' → logprob: -19.768150329589844
    9. '	m' → logprob: -19.893150329589844
    10. '10' → logprob: -20.143150329589844

Token 329: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002658655575942248
    2. '
' → logprob: -8.500266075134277
    3. '        
' → logprob: -10.375266075134277
    4. '   ' → logprob: -11.125266075134277
    5. '
' → logprob: -12.500266075134277
    6. '           ' → logprob: -12.625266075134277
    7. '    
' → logprob: -13.375266075134277
    8. '            
' → logprob: -13.875266075134277
    9. '                
' → logprob: -14.000266075134277
    10. 'tmp' → logprob: -14.000266075134277

Token 330: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24602404236793518
    2. 'tmp' → logprob: -1.8710240125656128
    3. '   ' → logprob: -3.2460241317749023
    4. '
' → logprob: -4.371024131774902
    5. '	tmp' → logprob: -4.871024131774902
    6. '\t' → logprob: -6.621024131774902
    7. '	' → logprob: -6.871024131774902
    8. '```' → logprob: -7.121024131774902
    9. '        
' → logprob: -8.496024131774902
    10. '      ' → logprob: -8.746024131774902

Token 331: ' tmp' (ID: 8919)
  Prédit: 'tmp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tmp' (adapté à ' tmp') → logprob: -0.0031716525554656982
    2. '   ' → logprob: -6.128171443939209
    3. ' tmp' → logprob: -7.753171443939209
    4. '	tmp' → logprob: -8.128171920776367
    5. '       ' → logprob: -8.503171920776367
    6. 'temp' → logprob: -10.753171920776367
    7. '/tmp' → logprob: -11.128171920776367
    8. '[tmp' → logprob: -11.878171920776367
    9. ',tmp' → logprob: -12.753171920776367
    10. '
' → logprob: -12.753171920776367

Token 332: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.049750637263059616
    2. '=' → logprob: -3.049750566482544
    3. ' =' → logprob: -7.049750804901123
    4. ' *=' → logprob: -8.174750328063965
    5. '*' → logprob: -11.799750328063965
    6. '=(' → logprob: -12.299750328063965
    7. '%=' → logprob: -14.174750328063965
    8. '   ' → logprob: -15.549750328063965
    9. '/=' → logprob: -16.92475128173828
    10. '=*' → logprob: -16.92475128173828

Token 333: ' (' (ID: 350)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -9.019237768370658e-05
    2. '(' → logprob: -9.625090599060059
    3. ' (' → logprob: -11.125090599060059
    4. 'tmp' → logprob: -12.500090599060059
    5. '(temp' → logprob: -12.875090599060059
    6. '[tmp' → logprob: -13.125090599060059
    7. '10' → logprob: -14.500090599060059
    8. '/tmp' → logprob: -15.625090599060059
    9. '(tm' → logprob: -16.125089645385742
    10. ',tmp' → logprob: -16.750089645385742

Token 334: 'tmp' (ID: 11669)
  Prédit: '(tmp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tmp' → logprob: -0.11184956133365631
    2. 'tmp' → logprob: -2.361849546432495
    3. '10' → logprob: -4.611849784851074
    4. '(' → logprob: -6.611849784851074
    5. '[tmp' → logprob: -8.361849784851074
    6. ' (' → logprob: -10.861849784851074
    7. '/tmp' → logprob: -10.986849784851074
    8. ' tmp' → logprob: -11.486849784851074
    9. '(temp' → logprob: -12.486849784851074
    10. ',tmp' → logprob: -12.611849784851074

Token 335: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.01419159211218357
    2. ' *' → logprob: -4.264191627502441
    3. '10' → logprob: -10.514191627502441
    4. ' ' → logprob: -15.264191627502441
    5. '   ' → logprob: -15.264191627502441
    6. ' ' → logprob: -16.514190673828125
    7. '
' → logprob: -16.514190673828125
    8. '```' → logprob: -16.889190673828125
    9. '12' → logprob: -17.139190673828125
    10. '0' → logprob: -17.139190673828125

Token 336: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '(' → logprob: -17.5
    4. 'pow' → logprob: -17.625
    5. '１０' → logprob: -18.25
    6. '   ' → logprob: -18.25
    7. '
' → logprob: -18.375
    8. '{' → logprob: -19.875
    9. '```' → logprob: -20.0
    10. '100' → logprob: -20.125

Token 337: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011104652658104897
    2. ')%' → logprob: -4.511104583740234
    3. '%' → logprob: -10.136104583740234
    4. '13' → logprob: -11.511104583740234
    5. ' )' → logprob: -12.136104583740234
    6. '%)' → logprob: -14.511104583740234
    7. ' %' → logprob: -14.761104583740234
    8. '   ' → logprob: -15.636104583740234
    9. '12' → logprob: -16.386104583740234
    10. '```' → logprob: -16.386104583740234

Token 338: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.043032873421907425
    2. ' %' → logprob: -3.1680328845977783
    3. '13' → logprob: -10.7930326461792
    4. ')%' → logprob: -12.0430326461792
    5. ' ' → logprob: -13.5430326461792
    6. ')' → logprob: -13.5430326461792
    7. '```' → logprob: -14.1680326461792
    8. '   ' → logprob: -14.6680326461792
    9. '%
' → logprob: -14.7930326461792
    10. ' ' → logprob: -14.7930326461792

Token 339: ' ' (ID: 220)
  Prédit: '13'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -18.625
    4. '   ' → logprob: -19.125
    5. '013' → logprob: -19.375
    6. '(' → logprob: -19.875
    7. '۱۳' → logprob: -20.0
    8. '131' → logprob: -20.125
    9. '133' → logprob: -20.875
    10. 'm' → logprob: -20.875

Token 340: '13' (ID: 1311)
  Prédit: '13'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '13' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -17.375
    3. '013' → logprob: -18.5
    4. '131' → logprob: -18.75
    5. '۱۳' → logprob: -18.875
    6. '(' → logprob: -19.0
    7. 'm' → logprob: -19.0
    8. '```' → logprob: -19.0
    9. 'th' → logprob: -19.5
    10. '133' → logprob: -19.625

Token 341: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025506927631795406
    2. 'return' → logprob: -6.0025506019592285
    3. '    
' → logprob: -10.627551078796387
    4. ' return' → logprob: -10.627551078796387
    5. '
' → logprob: -11.002551078796387
    6. 'print' → logprob: -12.252551078796387
    7. '<|end|>' → logprob: -13.502551078796387
    8. '	return' → logprob: -13.877551078796387
    9. '   ' → logprob: -14.002551078796387
    10. '```' → logprob: -15.002551078796387

Token 342: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004210175015032291
    2. 'return' → logprob: -5.504209995269775
    3. ' return' → logprob: -9.379210472106934
    4. 'print' → logprob: -10.129210472106934
    5. '```' → logprob: -13.004210472106934
    6. '    
' → logprob: -13.379210472106934
    7. '	return' → logprob: -13.629210472106934
    8. '
' → logprob: -14.129210472106934
    9. '<|end|>' → logprob: -14.879210472106934
    10. '       ' → logprob: -15.004210472106934

Token 343: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1275651454925537
    2. 'return' → logprob: -2.1275651454925537
    3. 'print' (adapté à ' print') → logprob: -7.877565383911133
    4. ' return' → logprob: -8.377565383911133
    5. 'for' → logprob: -11.127565383911133
    6. '```' → logprob: -12.502565383911133
    7. '	return' → logprob: -12.877565383911133
    8. 'dp' → logprob: -13.377565383911133
    9. '...' → logprob: -13.627565383911133
    10. 'def' → logprob: -14.127565383911133

Token 344: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -2.45848218582978e-06
    2. 'dp' → logprob: -13.00000286102295
    3. '(' → logprob: -16.250001907348633
    4. ' dp' → logprob: -17.625001907348633
    5. ' (' → logprob: -19.625001907348633
    6. '	dp' → logprob: -20.000001907348633
    7. '(
' → logprob: -20.250001907348633
    8. '((' → logprob: -20.625001907348633
    9. '(df' → logprob: -21.375001907348633
    10. '(dx' → logprob: -21.875001907348633

Token 345: '[n' (ID: 15433)
  Prédit: '[len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[len' → logprob: -0.3787094056606293
    2. '[n' → logprob: -1.6287094354629517
    3. '[-' → logprob: -2.128709316253662
    4. 'len' → logprob: -9.62870979309082
    5. 'n' → logprob: -11.37870979309082
    6. '(len' → logprob: -13.25370979309082
    7. '(n' → logprob: -14.62870979309082
    8. ')' → logprob: -14.75370979309082
    9. '[' → logprob: -14.75370979309082
    10. '   ' → logprob: -15.00370979309082

Token 346: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00100422790274024
    2. '[' → logprob: -7.376004219055176
    3. '][-' → logprob: -8.001004219055176
    4. '[-' → logprob: -11.251004219055176
    5. ' ][' → logprob: -11.501004219055176
    6. '13' → logprob: -11.751004219055176
    7. ']' → logprob: -12.501004219055176
    8. '-' → logprob: -12.501004219055176
    9. '12' → logprob: -13.126004219055176
    10. '0' → logprob: -14.626004219055176

Token 347: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00034535606391727924
    2. '
' → logprob: -8.375345230102539
    3. '``' → logprob: -10.625345230102539
    4. '   ' → logprob: -10.875345230102539
    5. '

' → logprob: -11.000345230102539
    6. '
' → logprob: -11.812845230102539
    7. '```' → logprob: -12.250345230102539
    8. '"' → logprob: -12.250345230102539
    9. '５' → logprob: -12.375345230102539
    10. ' ' → logprob: -13.187845230102539

Token 348: ']%' (ID: 158002)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -4.008129963040119e-06
    2. ')' → logprob: -13.375003814697266
    3. ']' → logprob: -13.875003814697266
    4. '])
' → logprob: -14.250003814697266
    5. ' ])' → logprob: -14.375003814697266
    6. ')]' → logprob: -16.750003814697266
    7. '))' → logprob: -17.125003814697266
    8. '})' → logprob: -17.500003814697266
    9. ''])' → logprob: -17.750003814697266
    10. ']))' → logprob: -17.875003814697266

Token 349: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -2.2200749754119897e-06
    2. '100' → logprob: -13.250001907348633
    3. '(' → logprob: -15.250001907348633
    4. '(m' → logprob: -15.625001907348633
    5. ' m' → logprob: -16.625001907348633
    6. '```' → logprob: -20.625001907348633
    7. '$m' → logprob: -20.875001907348633
    8. 'mod' → logprob: -21.125001907348633
    9. ' ' → logprob: -21.250001907348633
    10. '998' → logprob: -21.625001907348633

Token 350: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -14.625000953674316
    4. '))' → logprob: -16.375001907348633
    5. ')`' → logprob: -16.375001907348633
    6. '`)' → logprob: -17.500001907348633
    7. '')' → logprob: -18.375001907348633
    8. '）' → logprob: -18.375001907348633
    9. ')}' → logprob: -18.750001907348633
    10. '")' → logprob: -19.500001907348633

Token 351: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 352: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.47415515780448914
    2. '__' → logprob: -0.9741551876068115
    3. 'True' → logprob: -10.22415542602539
    4. ' True' → logprob: -10.22415542602539
    5. 'name' → logprob: -12.59915542602539
    6. '___' → logprob: -14.34915542602539
    7. ' ' → logprob: -14.47415542602539
    8. '_name' → logprob: -14.97415542602539
    9. ' name' → logprob: -15.72415542602539
    10. 'Name' → logprob: -16.22415542602539

Token 353: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.2039812207221985
    2. '__' → logprob: -2.2039811611175537
    3. ' ==' → logprob: -3.2039811611175537
    4. ' __' → logprob: -4.078981399536133
    5. '==' → logprob: -5.453981399536133
    6. '_name' → logprob: -5.703981399536133
    7. '.name' → logprob: -6.703981399536133
    8. ' name' → logprob: -7.078981399536133
    9. '_NAME' → logprob: -7.203981399536133
    10. ' =="' → logprob: -7.453981399536133

Token 354: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.0206720617134124e-05
    2. '==' → logprob: -11.62501049041748
    3. '=="' → logprob: -14.25001049041748
    4. '__.__' → logprob: -15.12501049041748
    5. 'name' → logprob: -16.750009536743164
    6. ' ==' → logprob: -16.875009536743164
    7. '____' → logprob: -17.000009536743164
    8. '___' → logprob: -17.000009536743164
    9. '__
' → logprob: -17.625009536743164
    10. '=='' → logprob: -17.875009536743164

Token 355: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6312986016273499
    2. '__' → logprob: -1.006298542022705
    3. ' ==' → logprob: -2.631298542022705
    4. '=="' → logprob: -3.506298542022705
    5. '=='' → logprob: -7.631298542022705
    6. '==
' → logprob: -10.506299018859863
    7. '=' → logprob: -12.256299018859863
    8. '___' → logprob: -12.506299018859863
    9. '_' → logprob: -12.631299018859863
    10. '===' → logprob: -12.631299018859863

Token 356: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.31327033042907715
    2. ''' → logprob: -1.3132703304290771
    3. '__' → logprob: -12.438270568847656
    4. ' "__' → logprob: -12.438270568847656
    5. ' '__' → logprob: -14.688270568847656
    6. '   ' → logprob: -16.813270568847656
    7. '('__' → logprob: -17.813270568847656
    8. ''"' → logprob: -18.063270568847656
    9. '"name' → logprob: -18.188270568847656
    10. '("__' → logprob: -18.188270568847656

Token 357: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00015943869948387146
    2. 'name' → logprob: -8.75015926361084
    3. '"' → logprob: -14.62515926361084
    4. '__' → logprob: -14.75015926361084
    5. ''' → logprob: -16.750160217285156
    6. ' main' → logprob: -17.500160217285156
    7. '_main' → logprob: -17.750160217285156
    8. 'built' → logprob: -18.750160217285156
    9. '(main' → logprob: -19.500160217285156
    10. ''name' → logprob: -19.625160217285156

Token 358: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16400285065174103
    2. '__' → logprob: -1.9140028953552246
    3. '__':
' → logprob: -5.664002895355225
    4. '__:' → logprob: -8.539002418518066
    5. '():
' → logprob: -9.164002418518066
    6. '__()
' → logprob: -13.664002418518066
    7. '():' → logprob: -14.789002418518066
    8. '()' → logprob: -15.164002418518066
    9. '__
' → logprob: -15.664002418518066
    10. '__["' → logprob: -16.039003372192383

Token 359: '   ' (ID: 271)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' → logprob: -0.21882762014865875
    2. '   ' → logprob: -1.7188276052474976
    3. ' ab' → logprob: -4.093827724456787
    4. '_ab' → logprob: -8.843827247619629
    5. '(ab' → logprob: -8.968827247619629
    6. '    
' → logprob: -8.968827247619629
    7. '   ' → logprob: -10.093827247619629
    8. '<|end|>' → logprob: -10.468827247619629
    9. '```' → logprob: -10.593827247619629
    10. '#ab' → logprob: -10.718827247619629

Token 360: ' ab' (ID: 692)
  Prédit: 'ab'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ab' (adapté à ' ab') → logprob: -1.0280383548888494e-06
    2. ' ab' → logprob: -14.000000953674316
    3. '   ' → logprob: -16.000001907348633
    4. '_ab' → logprob: -18.000001907348633
    5. 'import' → logprob: -19.125001907348633
    6. '(ab' → logprob: -19.875001907348633
    7. '#ab' → logprob: -20.000001907348633
    8. 'abr' → logprob: -20.750001907348633
    9. 'abl' → logprob: -20.875001907348633
    10. ''ab' → logprob: -21.125001907348633

Token 361: 'ac' (ID: 359)
  Prédit: 'ac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -2.3319124011322856e-05
    2. 'ab' → logprob: -11.375022888183594
    3. 'acab' → logprob: -11.625022888183594
    4. 'a' → logprob: -14.625022888183594
    5. '	ac' → logprob: -14.625022888183594
    6. '#ac' → logprob: -14.750022888183594
    7. 'acamole' → logprob: -15.125022888183594
    8. 'acaq' → logprob: -15.125022888183594
    9. '```' → logprob: -15.625022888183594
    10. 'acula' → logprob: -15.750022888183594

Token 362: 'aba' (ID: 4216)
  Prédit: 'aba'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aba' → logprob: -5.438573680294212e-06
    2. 'ab' → logprob: -12.500005722045898
    3. 'a' → logprob: -14.000005722045898
    4. 'aca' → logprob: -14.750005722045898
    5. 'аба' → logprob: -16.1250057220459
    6. 'abaab' → logprob: -16.3750057220459
    7. ' aba' → logprob: -16.3750057220459
    8. '(' → logprob: -16.7500057220459
    9. '```' → logprob: -17.6250057220459
    10. '_' → logprob: -17.6250057220459

Token 363: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.41866585687967e-06
    2. '()
' → logprob: -12.875008583068848
    3. '()?' → logprob: -13.250008583068848
    4. '()`' → logprob: -13.625008583068848
    5. '()]' → logprob: -14.375008583068848
    6. '()">' → logprob: -14.875008583068848
    7. '();' → logprob: -15.000008583068848
    8. ' ()' → logprob: -15.250008583068848
    9. '()"' → logprob: -15.750008583068848
    10. '()>' → logprob: -15.750008583068848


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 361
Tokens correctement prédits (1ère position, stricte): 150
Tokens correctement prédits (1ère position, avec adaptation): 161
Tokens correctement prédits (top 10): 313
Précision stricte (1ère position): 41.55%
Précision adaptée (1ère position): 44.60%
Précision (top 10): 86.70%
================================================================================
