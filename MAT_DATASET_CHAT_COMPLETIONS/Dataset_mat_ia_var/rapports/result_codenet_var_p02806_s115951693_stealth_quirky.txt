================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())

myStorage = []
theOtherOne = []

appendToStorage = myStorage.append
appendToOther = theOtherOne.append

for _ in range(N):
    stuff = input().split()
    appendToStorage(stuff[0])
    appendToOther(int(stuff[1]))

target = input()

finder = lambda x: myStorage.index(x)
sliceStart = finder(target) + 1
theChosenFew = [x for x in theOtherOne[sliceStart:]]
answer = eval('+'.join(str(num) for num in theChosenFew))
print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003567959647625685
    2. '(N' → logprob: -9.000356674194336
    3. '('' → logprob: -9.500356674194336
    4. ''' → logprob: -9.875356674194336
    5. '`' → logprob: -10.500356674194336
    6. '```' → logprob: -10.500356674194336
    7. '("("' → logprob: -11.375356674194336
    8. '()' → logprob: -11.500356674194336
    9. '(input' → logprob: -11.625356674194336
    10. '(
' → logprob: -12.250356674194336

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5405747294425964
    2. ')' → logprob: -0.9155747294425964
    3. '()' → logprob: -4.290574550628662
    4. '())' → logprob: -5.915574550628662
    5. '(
' → logprob: -8.41557502746582
    6. '```' → logprob: -9.16557502746582
    7. '))' → logprob: -9.29057502746582
    8. '")' → logprob: -9.54057502746582
    9. '(

' → logprob: -9.79057502746582
    10. '`)' → logprob: -9.79057502746582

Token 5: 'my' (ID: 3825)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3735596239566803
    2. 'if' → logprob: -1.248559594154358
    3. 's' → logprob: -4.873559474945068
    4. 'result' → logprob: -5.498559474945068
    5. 'i' → logprob: -5.748559474945068
    6. 'total' → logprob: -5.873559474945068
    7. 'x' → logprob: -6.623559474945068
    8. 'sum' → logprob: -6.623559474945068
    9. 'count' → logprob: -7.373559474945068
    10. 'f' → logprob: -7.498559474945068

Token 6: 'Storage' (ID: 7834)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.031100567430257797
    2. '.' → logprob: -4.531100749969482
    3. ' =' → logprob: -5.281100749969482
    4. ' _' → logprob: -5.281100749969482
    5. '[' → logprob: -5.781100749969482
    6. ' ' → logprob: -6.406100749969482
    7. 'space' → logprob: -6.406100749969482
    8. '_space' → logprob: -7.156100749969482
    9. '_input' → logprob: -7.656100749969482
    10. '\' → logprob: -8.406100273132324

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38766661286354065
    2. '.' → logprob: -1.1376665830612183
    3. '=' → logprob: -8.512666702270508
    4. '.append' → logprob: -9.012666702270508
    5. '[:]' → logprob: -9.262666702270508
    6. '['' → logprob: -9.637666702270508
    7. '.setdefault' → logprob: -9.762666702270508
    8. '["' → logprob: -10.262666702270508
    9. '[]' → logprob: -10.387666702270508
    10. ' =' → logprob: -10.512666702270508

Token 8: ' []
' (ID: 8911)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.09863999485969543
    2. '[]' → logprob: -2.473639965057373
    3. ' {}' → logprob: -5.098639965057373
    4. 'set' → logprob: -6.723639965057373
    5. ' []' → logprob: -6.723639965057373
    6. 'dict' → logprob: -6.848639965057373
    7. '[' → logprob: -10.598640441894531
    8. ' set' → logprob: -10.598640441894531
    9. 'list' → logprob: -11.223640441894531
    10. ' dict' → logprob: -11.723640441894531

Token 9: 'the' (ID: 3086)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0027391354087740183
    2. ' for' → logprob: -6.127738952636719
    3. '.' → logprob: -8.627738952636719
    4. '[' → logprob: -8.877738952636719
    5. '\n' → logprob: -9.877738952636719
    6. '.for' → logprob: -10.002738952636719
    7. '=' → logprob: -10.377738952636719
    8. '
' → logprob: -10.502738952636719
    9. '```' → logprob: -10.877738952636719
    10. '<|end|>' → logprob: -11.377738952636719

Token 10: 'Other' (ID: 13863)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.6135412454605103
    2. 'n' → logprob: -1.9885412454605103
    3. 'm' → logprob: -2.2385411262512207
    4. 'my' → logprob: -2.3635411262512207
    5. 'r' → logprob: -3.2385411262512207
    6. 'Storage' → logprob: -3.4885411262512207
    7. 'rest' → logprob: -4.988541126251221
    8. 't' → logprob: -4.988541126251221
    9. 'input' → logprob: -5.113541126251221
    10. 'max' → logprob: -5.363541126251221

Token 11: 'One' (ID: 5045)
  Prédit: 'Storage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Storage' → logprob: -0.011929910629987717
    2. 'List' → logprob: -4.886929988861084
    3. 'Variable' → logprob: -5.886929988861084
    4. '=' → logprob: -8.511929512023926
    5. 'St' → logprob: -8.636929512023926
    6. ' =' → logprob: -8.636929512023926
    7. 'S' → logprob: -8.761929512023926
    8. 'Array' → logprob: -8.761929512023926
    9. 'Name' → logprob: -8.886929512023926
    10. 'Stor' → logprob: -9.261929512023926

Token 12: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7164995670318604
    2. '.append' → logprob: -0.9664995670318604
    3. ' =' → logprob: -2.3414995670318604
    4. '=' → logprob: -4.216499328613281
    5. '[' → logprob: -4.591499328613281
    6. '[]' → logprob: -5.716499328613281
    7. ' .' → logprob: -6.466499328613281
    8. '[:]' → logprob: -6.466499328613281
    9. '_' → logprob: -7.466499328613281
    10. '=[]' → logprob: -7.591499328613281

Token 13: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.22583451867103577
    2. '[]' → logprob: -1.6008344888687134
    3. 'my' → logprob: -8.475834846496582
    4. ' ' → logprob: -9.225834846496582
    5. ' my' → logprob: -9.850834846496582
    6. '0' → logprob: -11.225834846496582
    7. ' [' → logprob: -11.725834846496582
    8. ' {}' → logprob: -12.100834846496582
    9. '[]}' → logprob: -12.225834846496582
    10. '[' → logprob: -12.350834846496582

Token 14: 'append' (ID: 9132)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.282920129597187e-05
    2. ' for' → logprob: -12.000012397766113
    3. '
' → logprob: -12.500012397766113
    4. '```' → logprob: -13.750012397766113
    5. 'f' → logprob: -14.250012397766113
    6. 'i' → logprob: -15.125012397766113
    7. '[' → logprob: -15.625012397766113
    8. 'while' → logprob: -16.25001335144043
    9. 'n' → logprob: -16.37501335144043
    10. 'For' → logprob: -16.50001335144043

Token 15: 'To' (ID: 1385)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01123090460896492
    2. '.' → logprob: -5.386230945587158
    3. '(my' → logprob: -5.511230945587158
    4. 'my' → logprob: -6.761230945587158
    5. '()' → logprob: -7.386230945587158
    6. '(
' → logprob: -8.38623046875
    7. ')' → logprob: -8.76123046875
    8. '(.' → logprob: -9.51123046875
    9. '('' → logprob: -9.63623046875
    10. '```' → logprob: -10.38623046875

Token 16: 'Storage' (ID: 7834)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7152047157287598
    2. '(my' → logprob: -0.7152047157287598
    3. 'my' → logprob: -3.8402047157287598
    4. '(the' → logprob: -9.215204238891602
    5. '(m' → logprob: -9.590204238891602
    6. '(`' → logprob: -10.590204238891602
    7. '_my' → logprob: -10.590204238891602
    8. 'the' → logprob: -11.090204238891602
    9. '()' → logprob: -11.090204238891602
    10. 'My' → logprob: -11.215204238891602

Token 17: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003304739249870181
    2. '(my' → logprob: -6.378304958343506
    3. '('' → logprob: -6.628304958343506
    4. '()' → logprob: -9.503304481506348
    5. ')' → logprob: -9.753304481506348
    6. '(
' → logprob: -10.628304481506348
    7. '(`' → logprob: -10.753304481506348
    8. '("' → logprob: -11.003304481506348
    9. 'my' → logprob: -11.003304481506348
    10. '("("' → logprob: -11.128304481506348

Token 18: ' my' (ID: 922)
  Prédit: ' my'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' my' → logprob: -0.18059034645557404
    2. 'my' → logprob: -1.8055903911590576
    3. ' lambda' → logprob: -7.8055901527404785
    4. ' True' → logprob: -8.555590629577637
    5. 'lambda' → logprob: -8.805590629577637
    6. 'append' → logprob: -10.555590629577637
    7. ' ' → logprob: -11.055590629577637
    8. ' append' → logprob: -11.055590629577637
    9. 'True' → logprob: -11.555590629577637
    10. '(my' → logprob: -12.055590629577637

Token 19: 'Storage' (ID: 7834)
  Prédit: 'Storage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Storage' → logprob: -8.2994620242971e-06
    2. 'St' → logprob: -12.750008583068848
    3. 'S' → logprob: -13.000008583068848
    4. 'storage' → logprob: -13.750008583068848
    5. '_storage' → logprob: -14.875008583068848
    6. 'Stor' → logprob: -14.875008583068848
    7. '.Storage' → logprob: -15.000008583068848
    8. ' Storage' → logprob: -15.125008583068848
    9. 'my' → logprob: -15.250008583068848
    10. 't' → logprob: -15.875008583068848

Token 20: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09197627007961273
    2. '.append' → logprob: -2.4669761657714844
    3. '[' → logprob: -6.591976165771484
    4. '```' → logprob: -7.966976165771484
    5. '.readline' → logprob: -8.466976165771484
    6. '.pop' → logprob: -8.716976165771484
    7. '\n' → logprob: -8.841976165771484
    8. '.setdefault' → logprob: -9.091976165771484
    9. '.
' → logprob: -9.216976165771484
    10. '<|end|>' → logprob: -9.216976165771484

Token 21: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007493877783417702
    2. ')' → logprob: -5.88249397277832
    3. '(
' → logprob: -6.25749397277832
    4. 'append' → logprob: -6.88249397277832
    5. '('\' → logprob: -8.88249397277832
    6. 'newline' → logprob: -8.88249397277832
    7. '('' → logprob: -9.00749397277832
    8. '(n' → logprob: -9.00749397277832
    9. 'the' → logprob: -9.00749397277832
    10. '(

' → logprob: -9.50749397277832

Token 22: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.4717710018157959
    2. 'the' → logprob: -1.346771001815796
    3. '(' → logprob: -2.721771001815796
    4. ')' → logprob: -3.846771001815796
    5. '<|end|>' → logprob: -4.471771240234375
    6. 'def' → logprob: -5.971771240234375
    7. '_' → logprob: -6.346771240234375
    8. '(
' → logprob: -6.596771240234375
    9. '()' → logprob: -6.721771240234375
    10. '
' → logprob: -6.846771240234375

Token 23: 'To' (ID: 1385)
  Prédit: 'To'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'To' → logprob: -4.008129963040119e-06
    2. 'The' → logprob: -12.875003814697266
    3. 'T' → logprob: -14.250003814697266
    4. '_to' → logprob: -14.375003814697266
    5. 'to' → logprob: -16.000003814697266
    6. ' To' → logprob: -17.250003814697266
    7. '(' → logprob: -17.625003814697266
    8. ' to' → logprob: -19.250003814697266
    9. 't' → logprob: -19.375003814697266
    10. 'Te' → logprob: -19.625003814697266

Token 24: 'Other' (ID: 13863)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.13298827409744263
    2. 'Storage' → logprob: -2.132988214492798
    3. ' the' → logprob: -5.382988452911377
    4. 'The' → logprob: -7.132988452911377
    5. '(the' → logprob: -7.382988452911377
    6. 'storage' → logprob: -11.757987976074219
    7. ' Storage' → logprob: -11.882987976074219
    8. '_the' → logprob: -12.132987976074219
    9. '_storage' → logprob: -12.507987976074219
    10. ' storage' → logprob: -13.632987976074219

Token 25: ' =' (ID: 314)
  Prédit: 'To'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'To' → logprob: -0.514494776725769
    2. '=' → logprob: -1.139494776725769
    3. '_to' → logprob: -3.3894948959350586
    4. ' =' → logprob: -3.3894948959350586
    5. 'The' → logprob: -4.514494895935059
    6. 'One' → logprob: -6.514494895935059
    7. '_the' → logprob: -7.014494895935059
    8. 'to' → logprob: -7.389494895935059
    9. 'the' → logprob: -8.014494895935059
    10. '_' → logprob: -8.514494895935059

Token 26: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.06196891888976097
    2. ' the' → logprob: -2.8119688034057617
    3. 'The' → logprob: -13.936968803405762
    4. '_the' → logprob: -16.686969757080078
    5. '	the' → logprob: -16.811969757080078
    6. ' ' → logprob: -16.936969757080078
    7. 'thel' → logprob: -17.311969757080078
    8. '(the' → logprob: -17.936969757080078
    9. 'append' → logprob: -17.936969757080078
    10. 't' → logprob: -18.436969757080078

Token 27: 'Other' (ID: 13863)
  Prédit: 'Other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Other' → logprob: -1.2948405128554441e-05
    2. 'O' → logprob: -11.37501335144043
    3. 'Ot' → logprob: -13.87501335144043
    4. ' Other' → logprob: -14.87501335144043
    5. 'Or' → logprob: -16.62501335144043
    6. 'One' → logprob: -17.87501335144043
    7. 'The' → logprob: -19.00001335144043
    8. '_other' → logprob: -19.25001335144043
    9. 'OT' → logprob: -19.62501335144043
    10. ' other' → logprob: -19.87501335144043

Token 28: 'One' (ID: 5045)
  Prédit: 'One'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'One' → logprob: -1.981667537620524e-06
    2. 'O' → logprob: -14.250001907348633
    3. ' One' → logprob: -14.625001907348633
    4. 'On' → logprob: -14.875001907348633
    5. '.append' → logprob: -15.375001907348633
    6. '_one' → logprob: -16.250001907348633
    7. 'Other' → logprob: -16.750001907348633
    8. 'Of' → logprob: -17.750001907348633
    9. 'append' → logprob: -17.875001907348633
    10. '```' → logprob: -18.000001907348633

Token 29: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002208900870755315
    2. '.' → logprob: -6.127208709716797
    3. ' .' → logprob: -11.627208709716797
    4. '.extend' → logprob: -11.752208709716797
    5. 'append' → logprob: -12.502208709716797
    6. ' ' → logprob: -13.877208709716797
    7. '.setdefault' → logprob: -13.877208709716797
    8. '.app' → logprob: -15.377208709716797
    9. '<|end|>' → logprob: -15.877208709716797
    10. '`.' → logprob: -15.877208709716797

Token 30: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08992204815149307
    2. '\n' → logprob: -3.9649219512939453
    3. ' for' → logprob: -4.089921951293945
    4. '<|end|>' → logprob: -4.339921951293945
    5. '
' → logprob: -4.964921951293945
    6. ' 
' → logprob: -5.714921951293945
    7. '\' → logprob: -5.714921951293945
    8. '(' → logprob: -5.714921951293945
    9. 'while' → logprob: -5.714921951293945
    10. 'newline' → logprob: -5.714921951293945

Token 31: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0802738870552275e-05
    2. ' for' → logprob: -11.50001049041748
    3. 'i' → logprob: -15.62501049041748
    4. 'while' → logprob: -16.000011444091797
    5. 'For' → logprob: -16.500011444091797
    6. 'n' → logprob: -17.000011444091797
    7. 'range' → logprob: -17.000011444091797
    8. '```' → logprob: -17.375011444091797
    9. '_' → logprob: -17.500011444091797
    10. 'count' → logprob: -18.000011444091797

Token 32: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9052128791809082
    2. ' ' → logprob: -1.1552128791809082
    3. ' _' → logprob: -1.2802128791809082
    4. '_' → logprob: -6.030212879180908
    5. ' N' → logprob: -10.03021240234375
    6. ' range' → logprob: -10.28021240234375
    7. ' item' → logprob: -10.40521240234375
    8. 'i' → logprob: -10.90521240234375
    9. ' ' → logprob: -11.15521240234375
    10. ' in' → logprob: -12.03021240234375

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.030769171193242073
    2. 'in' → logprob: -3.780769109725952
    3. ' ' → logprob: -4.905769348144531
    4. ' i' → logprob: -10.155769348144531
    5. '  ' → logprob: -10.655769348144531
    6. ' ,' → logprob: -12.655769348144531
    7. '<|end|>' → logprob: -12.655769348144531
    8. '	in' → logprob: -12.905769348144531
    9. 'In' → logprob: -13.280769348144531
    10. 'range' → logprob: -13.343269348144531

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4740777611732483
    2. 'range' → logprob: -0.9740777611732483
    3. '	range' → logprob: -14.974078178405762
    4. ' ' → logprob: -15.849078178405762
    5. ' xrange' → logprob: -16.474077224731445
    6. '(range' → logprob: -16.974077224731445
    7. '_' → logprob: -17.349077224731445
    8. '_range' → logprob: -17.599077224731445
    9. 'rang' → logprob: -17.849077224731445
    10. 'ran' → logprob: -18.224077224731445

Token 35: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07930755615234375
    2. '(N' → logprob: -2.5793075561523438
    3. ' (' → logprob: -8.079307556152344
    4. '(n' → logprob: -9.954307556152344
    5. ' N' → logprob: -10.204307556152344
    6. 'N' → logprob: -11.454307556152344
    7. '(
' → logprob: -12.079307556152344
    8. '(int' → logprob: -13.079307556152344
    9. '(s' → logprob: -14.079307556152344
    10. ' ' → logprob: -14.079307556152344

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019362468738108873
    2. ')' → logprob: -6.376936435699463
    3. ':' → logprob: -8.626935958862305
    4. '):
' → logprob: -9.876935958862305
    5. ' ):' → logprob: -13.626935958862305
    6. ',' → logprob: -15.251935958862305
    7. ''):' → logprob: -15.626935958862305
    8. '```' → logprob: -15.626935958862305
    9. '+' → logprob: -15.751935958862305
    10. '   ' → logprob: -15.876935958862305

Token 37: '   ' (ID: 271)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.2059555053710938
    2. ' append' → logprob: -1.2059555053710938
    3. '   ' → logprob: -1.5809555053710938
    4. ' 
' → logprob: -2.8309555053710938
    5. '    
' → logprob: -2.9559555053710938
    6. '    ' → logprob: -4.205955505371094
    7. ' '' → logprob: -4.580955505371094
    8. ' data' → logprob: -4.955955505371094
    9. ' \' → logprob: -5.330955505371094
    10. ' ' → logprob: -5.455955505371094

Token 38: ' stuff' (ID: 9350)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5021358728408813
    2. 'line' → logprob: -2.002135753631592
    3. 'x' → logprob: -2.752135753631592
    4. 'data' → logprob: -3.127135753631592
    5. 's' → logprob: -3.877135753631592
    6. ' data' → logprob: -4.252135753631592
    7. ' x' → logprob: -4.377135753631592
    8. 'a' → logprob: -4.627135753631592
    9. ' s' → logprob: -4.627135753631592
    10. ' item' → logprob: -4.627135753631592

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01503308117389679
    2. '=' → logprob: -4.51503324508667
    3. '   ' → logprob: -5.76503324508667
    4. ',' → logprob: -7.64003324508667
    5. '    ' → logprob: -8.890032768249512
    6. '.append' → logprob: -10.515032768249512
    7. ')' → logprob: -10.515032768249512
    8. ' ' → logprob: -10.765032768249512
    9. '=input' → logprob: -11.140032768249512
    10. '<|end|>' → logprob: -11.140032768249512

Token 40: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.29546406865119934
    2. 'input' → logprob: -1.420464038848877
    3. 'int' → logprob: -4.920464038848877
    4. ' int' → logprob: -5.045464038848877
    5. ' list' → logprob: -8.170464515686035
    6. 'list' → logprob: -8.795464515686035
    7. ' ' → logprob: -11.420464515686035
    8. 'str' → logprob: -12.045464515686035
    9. '   ' → logprob: -12.170464515686035
    10. ' str' → logprob: -12.295464515686035

Token 41: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005055621732026339
    2. '(' → logprob: -5.3800554275512695
    3. '('' → logprob: -9.25505542755127
    4. '("")' → logprob: -9.88005542755127
    5. '().' → logprob: -10.00505542755127
    6. '())' → logprob: -10.38005542755127
    7. ')' → logprob: -10.50505542755127
    8. ' ()' → logprob: -10.50505542755127
    9. '```' → logprob: -10.50505542755127
    10. '`()' → logprob: -10.75505542755127

Token 42: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3141181766986847
    2. 'strip' → logprob: -1.3141181468963623
    3. 'rstrip' → logprob: -7.064118385314941
    4. ' split' → logprob: -14.814118385314941
    5. 'replace' → logprob: -15.439118385314941
    6. 'append' → logprob: -16.439117431640625
    7. 'startswith' → logprob: -16.564117431640625
    8. '```' → logprob: -17.439117431640625
    9. ' strip' → logprob: -17.564117431640625
    10. 'rs' → logprob: -17.689117431640625

Token 43: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013788063079118729
    2. '('' → logprob: -6.751379013061523
    3. '(' → logprob: -8.626379013061523
    4. '())' → logprob: -11.626379013061523
    5. '()]' → logprob: -11.876379013061523
    6. '("("' → logprob: -12.376379013061523
    7. '("' → logprob: -12.751379013061523
    8. '()?>' → logprob: -14.001379013061523
    9. '()
' → logprob: -14.126379013061523
    10. '`()' → logprob: -14.126379013061523

Token 44: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' append' (ID: 17147)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3060004711151123
    2. 'if' → logprob: -1.6810004711151123
    3. '   ' → logprob: -2.8060004711151123
    4. ' ' → logprob: -5.431000709533691
    5. '<|end|>' → logprob: -5.681000709533691
    6. 'token' → logprob: -6.181000709533691
    7. '    ' → logprob: -6.181000709533691
    8. 'append' (adapté à ' append') → logprob: -6.181000709533691
    9. '    
' → logprob: -7.931000709533691
    10. ' append' → logprob: -8.181000709533691

Token 46: 'To' (ID: 1385)
  Prédit: 'To'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'To' → logprob: 0.0
    2. 'T' → logprob: -18.25
    3. 'to' → logprob: -18.375
    4. '_to' → logprob: -19.375
    5. ' To' → logprob: -19.75
    6. 'The' → logprob: -20.875
    7. '(To' → logprob: -21.625
    8. 'То' → logprob: -22.125
    9. ' to' → logprob: -22.25
    10. '```' → logprob: -22.375

Token 47: 'Storage' (ID: 7834)
  Prédit: 'Storage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Storage' → logprob: -5.240481914370321e-05
    2. 'Other' → logprob: -10.375052452087402
    3. 'storage' → logprob: -11.375052452087402
    4. '_storage' → logprob: -12.000052452087402
    5. 'To' → logprob: -12.875052452087402
    6. 'other' → logprob: -14.500052452087402
    7. 'Stuff' → logprob: -15.750052452087402
    8. ' Storage' → logprob: -16.125051498413086
    9. 'Store' → logprob: -16.875051498413086
    10. 'Stor' → logprob: -16.875051498413086

Token 48: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.011365159414708614
    2. '(' → logprob: -4.511364936828613
    3. '(*' → logprob: -8.386364936828613
    4. '((' → logprob: -9.636364936828613
    5. '(int' → logprob: -11.636364936828613
    6. '(tuple' → logprob: -12.636364936828613
    7. '('' → logprob: -13.011364936828613
    8. '(
' → logprob: -13.011364936828613
    9. '(s' → logprob: -13.261364936828613
    10. ' (' → logprob: -13.511364936828613

Token 49: 'uff' (ID: 1972)
  Prédit: 'uff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uff' → logprob: -0.00010282796574756503
    2. 'ff' → logprob: -9.375102996826172
    3. 'uf' → logprob: -12.375102996826172
    4. 'r' → logprob: -12.500102996826172
    5. '#' → logprob: -13.250102996826172
    6. '*' → logprob: -13.250102996826172
    7. '[' → logprob: -13.500102996826172
    8. 'aff' → logprob: -14.250102996826172
    9. '(' → logprob: -14.375102996826172
    10. 'ruff' → logprob: -14.500102996826172

Token 50: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018025112804025412
    2. '[' → logprob: -6.376802444458008
    3. ' )' → logprob: -9.501802444458008
    4. ')
' → logprob: -11.501802444458008
    5. '   ' → logprob: -11.876802444458008
    6. '))' → logprob: -12.501802444458008
    7. '[])' → logprob: -13.376802444458008
    8. ')`' → logprob: -14.001802444458008
    9. ' ' → logprob: -14.376802444458008
    10. ')

' → logprob: -14.376802444458008

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024070464074611664
    2. '1' → logprob: -3.7740705013275146
    3. ' ' → logprob: -7.1490702629089355
    4. '-' → logprob: -10.649070739746094
    5. '2' → logprob: -11.899070739746094
    6. '])' → logprob: -12.649070739746094
    7. ']' → logprob: -13.149070739746094
    8. ')' → logprob: -13.836570739746094
    9. ' -' → logprob: -14.086570739746094
    10. '   ' → logprob: -14.461570739746094

Token 52: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012748016975820065
    2. '])' → logprob: -4.3877482414245605
    3. '))' → logprob: -9.262747764587402
    4. ',' → logprob: -10.137747764587402
    5. ' )' → logprob: -10.262747764587402
    6. '})' → logprob: -11.137747764587402
    7. ')
' → logprob: -11.262747764587402
    8. ''])' → logprob: -11.887747764587402
    9. ')])' → logprob: -12.137747764587402
    10. ']' → logprob: -12.262747764587402

Token 53: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' append' (ID: 17147)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' (adapté à ' append') → logprob: -0.03198428824543953
    2. '.append' → logprob: -4.156984329223633
    3. ')' → logprob: -4.531984329223633
    4. '<|end|>' → logprob: -5.781984329223633
    5. ' append' → logprob: -7.406984329223633
    6. '   ' → logprob: -7.906984329223633
    7. ')
' → logprob: -8.531984329223633
    8. ' )' → logprob: -8.781984329223633
    9. '()' → logprob: -9.031984329223633
    10. '<|end|>' → logprob: -9.906984329223633

Token 55: 'To' (ID: 1385)
  Prédit: 'To'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'To' → logprob: -3.128163257315464e-07
    2. '_to' → logprob: -16.0
    3. 'T' → logprob: -16.75
    4. 'to' → logprob: -17.5
    5. 'o' → logprob: -19.375
    6. 'O' → logprob: -20.25
    7. ' To' → logprob: -20.625
    8. '_To' → logprob: -20.875
    9. ' to' → logprob: -21.125
    10. '(To' → logprob: -21.375

Token 56: 'Other' (ID: 13863)
  Prédit: 'Other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Other' → logprob: -1.4498052223643754e-05
    2. 'Storage' → logprob: -12.125014305114746
    3. 'O' → logprob: -12.250014305114746
    4. ' Other' → logprob: -13.125014305114746
    5. 'other' → logprob: -14.125014305114746
    6. 'Ot' → logprob: -14.875014305114746
    7. '_other' → logprob: -15.000014305114746
    8. 'ther' → logprob: -15.000014305114746
    9. 'Ther' → logprob: -15.625014305114746
    10. 'storage' → logprob: -16.375015258789062

Token 57: '(int' (ID: 2742)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.0005888947052881122
    2. '(' → logprob: -7.500588893890381
    3. ' (' → logprob: -10.875589370727539
    4. '((' → logprob: -11.875589370727539
    5. '(s' → logprob: -12.500589370727539
    6. '(stor' → logprob: -13.250589370727539
    7. '(the' → logprob: -13.375589370727539
    8. '('' → logprob: -14.875589370727539
    9. '(space' → logprob: -15.375589370727539
    10. '()' → logprob: -15.500589370727539

Token 58: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.00014656837447546422
    2. '(' → logprob: -9.000146865844727
    3. ' (' → logprob: -11.000146865844727
    4. ')' → logprob: -12.500146865844727
    5. ')(' → logprob: -13.250146865844727
    6. '(s' → logprob: -14.875146865844727
    7. '(stor' → logprob: -16.000146865844727
    8. '((' → logprob: -16.250146865844727
    9. '	st' → logprob: -16.500146865844727
    10. '```' → logprob: -16.750146865844727

Token 59: 'uff' (ID: 1972)
  Prédit: 'uff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uff' → logprob: -0.5766751170158386
    2. 'ff' → logprob: -0.8266751170158386
    3. 'uf' → logprob: -7.701674938201904
    4. 'f' → logprob: -8.576675415039062
    5. '1' → logprob: -10.076675415039062
    6. '[' → logprob: -10.576675415039062
    7. 'fff' → logprob: -11.826675415039062
    8. 'фф' → logprob: -12.326675415039062
    9. 'rf' → logprob: -12.576675415039062
    10. 'u' → logprob: -12.826675415039062

Token 60: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.607391408877447e-05
    2. '(' → logprob: -10.750036239624023
    3. '1' → logprob: -11.625036239624023
    4. '[-' → logprob: -13.125036239624023
    5. ')' → logprob: -13.750036239624023
    6. '][' → logprob: -14.375036239624023
    7. '()[' → logprob: -14.750036239624023
    8. ' [' → logprob: -14.875036239624023
    9. ')[' → logprob: -15.125036239624023
    10. '([' → logprob: -15.375036239624023

Token 61: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.03521392197581e-05
    2. ' ' → logprob: -10.625030517578125
    3. '-' → logprob: -13.375030517578125
    4. '2' → logprob: -13.500030517578125
    5. '[' → logprob: -14.250030517578125
    6. '0' → logprob: -14.375030517578125
    7. '])' → logprob: -14.375030517578125
    8. '   ' → logprob: -14.875030517578125
    9. ']' → logprob: -15.875030517578125
    10. '3' → logprob: -16.062530517578125

Token 62: ']))

' (ID: 92947)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0033248113468289375
    2. ']))' → logprob: -6.25332498550415
    3. ')' → logprob: -6.87832498550415
    4. ')))' → logprob: -8.378324508666992
    5. '])' → logprob: -9.128324508666992
    6. '))
' → logprob: -12.003324508666992
    7. '']))' → logprob: -12.128324508666992
    8. ')])' → logprob: -12.128324508666992
    9. ')]' → logprob: -12.503324508666992
    10. ' ))' → logprob: -13.253324508666992

Token 63: 'target' (ID: 10857)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3729618787765503
    2. '[' → logprob: -1.6229618787765503
    3. ')' → logprob: -1.9979618787765503
    4. '<|end|>' → logprob: -1.9979618787765503
    5. ' ' → logprob: -2.24796199798584
    6. '\n' → logprob: -3.74796199798584
    7. 'print' → logprob: -3.87296199798584
    8. '+' → logprob: -3.87296199798584
    9. '.' → logprob: -3.99796199798584
    10. 'for' → logprob: -4.12296199798584

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5830694437026978
    2. '_' → logprob: -1.2080694437026978
    3. '_value' → logprob: -2.583069324493408
    4. '=' → logprob: -4.333069324493408
    5. '_count' → logprob: -4.333069324493408
    6. '_index' → logprob: -4.833069324493408
    7. 'Value' → logprob: -5.083069324493408
    8. '_val' → logprob: -5.333069324493408
    9. '_sum' → logprob: -5.583069324493408
    10. 's' → logprob: -5.708069324493408

Token 65: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.29644882678985596
    2. ' int' → logprob: -2.2964487075805664
    3. 'sum' → logprob: -2.5464487075805664
    4. 'max' → logprob: -3.2964487075805664
    5. 'append' → logprob: -4.421448707580566
    6. ' sum' → logprob: -4.921448707580566
    7. '0' → logprob: -5.546448707580566
    8. ' max' → logprob: -5.796448707580566
    9. 'my' → logprob: -5.796448707580566
    10. 'min' → logprob: -5.921448707580566

Token 66: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.008856359869241714
    2. '(' → logprob: -4.758856296539307
    3. '('' → logprob: -9.758856773376465
    4. ' ()' → logprob: -10.133856773376465
    5. '().' → logprob: -10.383856773376465
    6. ')' → logprob: -11.008856773376465
    7. '`()' → logprob: -11.133856773376465
    8. '.' → logprob: -11.258856773376465
    9. '()`' → logprob: -11.383856773376465
    10. '```' → logprob: -11.633856773376465

Token 67: 'finder' (ID: 54491)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08687803149223328
    2. 'try' → logprob: -3.4618780612945557
    3. 'for' → logprob: -4.086877822875977
    4. 'result' → logprob: -4.336877822875977
    5. 'print' → logprob: -4.586877822875977
    6. 'total' → logprob: -5.711877822875977
    7. 'count' → logprob: -5.961877822875977
    8. 'idx' → logprob: -6.086877822875977
    9. 'index' → logprob: -6.586877822875977
    10. 'found' → logprob: -7.086877822875977

Token 68: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0886765718460083
    2. 'In' → logprob: -1.2136765718460083
    3. '(' → logprob: -1.9636765718460083
    4. 'Index' → logprob: -2.7136764526367188
    5. ' =' → logprob: -3.0886764526367188
    6. 'To' → logprob: -3.2136764526367188
    7. '=' → logprob: -3.3386764526367188
    8. '_index' → logprob: -4.088676452636719
    9. 's' → logprob: -4.588676452636719
    10. '_in' → logprob: -5.838676452636719

Token 69: ' lambda' (ID: 27871)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'my' → logprob: -0.33731207251548767
    2. 'append' → logprob: -1.46231210231781
    3. 'the' → logprob: -3.4623119831085205
    4. '-' → logprob: -4.8373122215271
    5. '0' → logprob: -4.9623122215271
    6. 'target' → logprob: -5.7123122215271
    7. 'None' → logprob: -5.8373122215271
    8. 'lambda' → logprob: -7.4623122215271
    9. ' my' → logprob: -7.9623122215271
    10. 'len' → logprob: -8.337311744689941

Token 70: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.532654881477356
    2. 'x' → logprob: -0.907654881477356
    3. ' s' → logprob: -5.532654762268066
    4. 's' → logprob: -6.032654762268066
    5. 'target' → logprob: -7.532654762268066
    6. ' item' → logprob: -7.657654762268066
    7. ' a' → logprob: -7.907654762268066
    8. 'item' → logprob: -8.032654762268066
    9. ' target' → logprob: -8.407654762268066
    10. 'a' → logprob: -8.407654762268066

Token 71: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004955035634338856
    2. ' :' → logprob: -5.629954814910889
    3. ',' → logprob: -7.504954814910889
    4. ':x' → logprob: -7.879954814910889
    5. 'x' → logprob: -8.004955291748047
    6. ' x' → logprob: -10.254955291748047
    7. '[' → logprob: -10.754955291748047
    8. ' ' → logprob: -11.379955291748047
    9. ',x' → logprob: -12.129955291748047
    10. ' ,' → logprob: -13.254955291748047

Token 72: ' my' (ID: 922)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.734575092792511
    2. ' x' → logprob: -1.8595750331878662
    3. 'my' → logprob: -1.8595750331878662
    4. ' my' → logprob: -2.734575033187866
    5. 'append' → logprob: -2.734575033187866
    6. 'the' → logprob: -3.359575033187866
    7. ' the' → logprob: -3.734575033187866
    8. ' append' → logprob: -4.359575271606445
    9. 'True' → logprob: -5.859575271606445
    10. ' True' → logprob: -5.984575271606445

Token 73: 'Storage' (ID: 7834)
  Prédit: 'Storage'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Storage' → logprob: -9.088346359931165e-07
    2. 'storage' → logprob: -15.125000953674316
    3. 'Stor' → logprob: -15.125000953674316
    4. '.Storage' → logprob: -16.0
    5. 'St' → logprob: -16.25
    6. '_storage' → logprob: -17.125
    7. 'S' → logprob: -18.0
    8. ' Storage' → logprob: -18.125
    9. 'Sto' → logprob: -18.25
    10. '_STORAGE' → logprob: -19.625

Token 74: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.00043555660522542894
    2. 'index' → logprob: -7.8754353523254395
    3. '.' → logprob: -9.875435829162598
    4. '.find' → logprob: -13.250435829162598
    5. '.Index' → logprob: -14.375435829162598
    6. '==' → logprob: -14.875435829162598
    7. ' index' → logprob: -14.875435829162598
    8. '[index' → logprob: -14.875435829162598
    9. ' .' → logprob: -15.125435829162598
    10. '.count' → logprob: -16.12543487548828

Token 75: '(x' (ID: 4061)
  Prédit: '(target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.002687063766643405
    2. '(x' → logprob: -6.502686977386475
    3. '(' → logprob: -7.377686977386475
    4. '<|end|>' → logprob: -7.627686977386475
    5. 'target' → logprob: -10.627687454223633
    6. ' (' → logprob: -10.877687454223633
    7. '(token' → logprob: -11.502687454223633
    8. '(lambda' → logprob: -12.877687454223633
    9. '(value' → logprob: -13.002687454223633
    10. '(Target' → logprob: -13.377687454223633

Token 76: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.666993507067673e-05
    2. ' )' → logprob: -10.750036239624023
    3. ')
' → logprob: -12.125036239624023
    4. ')+' → logprob: -12.500036239624023
    5. '))' → logprob: -13.500036239624023
    6. ' if' → logprob: -14.000036239624023
    7. ')

' → logprob: -14.250036239624023
    8. ')<' → logprob: -14.875036239624023
    9. ' ' → logprob: -15.000036239624023
    10. '),' → logprob: -15.125036239624023

Token 77: 'slice' (ID: 49515)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2553601861000061
    2. 'idx' → logprob: -2.5053601264953613
    3. 'pos' → logprob: -3.0053601264953613
    4. 'append' → logprob: -3.2553601264953613
    5. 'index' → logprob: -3.7553601264953613
    6. 'try' → logprob: -4.630360126495361
    7. 'target' → logprob: -5.630360126495361
    8. 'result' → logprob: -5.755360126495361
    9. 'position' → logprob: -6.005360126495361
    10. 'other' → logprob: -6.005360126495361

Token 78: 'Start' (ID: 4459)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.031096985563635826
    2. ' =' → logprob: -4.281096935272217
    3. 'r' → logprob: -5.031096935272217
    4. '=' → logprob: -5.781096935272217
    5. '_' → logprob: -5.781096935272217
    6. '_start' → logprob: -6.281096935272217
    7. 'ed' → logprob: -7.156096935272217
    8. '_index' → logprob: -7.656096935272217
    9. '_idx' → logprob: -9.031097412109375
    10. '_target' → logprob: -9.031097412109375

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1289486438035965
    2. '(' → logprob: -2.75394868850708
    3. '=' → logprob: -2.87894868850708
    4. '(slice' → logprob: -7.62894868850708
    5. ' ' → logprob: -8.378948211669922
    6. ',' → logprob: -9.503948211669922
    7. '(f' → logprob: -9.628948211669922
    8. ' (' → logprob: -9.753948211669922
    9. '(s' → logprob: -9.878948211669922
    10. '_' → logprob: -10.378948211669922

Token 80: ' finder' (ID: 61306)
  Prédit: 'finder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finder' → logprob: -0.07939687371253967
    2. ' finder' → logprob: -2.579396963119507
    3. '0' → logprob: -8.329397201538086
    4. 'find' → logprob: -9.079397201538086
    5. 'my' → logprob: -9.829397201538086
    6. 'f' → logprob: -10.829397201538086
    7. 'max' → logprob: -10.954397201538086
    8. '(' → logprob: -11.454397201538086
    9. ' my' → logprob: -11.579397201538086
    10. '(f' → logprob: -11.954397201538086

Token 81: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.005341666750609875
    2. '(' → logprob: -5.255341529846191
    3. 'target' → logprob: -9.630341529846191
    4. '('' → logprob: -10.880341529846191
    5. ' (' → logprob: -12.130341529846191
    6. '(
' → logprob: -12.130341529846191
    7. '((' → logprob: -12.880341529846191
    8. '(-' → logprob: -12.880341529846191
    9. '("("' → logprob: -13.005341529846191
    10. '(start' → logprob: -14.005341529846191

Token 82: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004120669327676296
    2. ')+' → logprob: -6.379120826721191
    3. '+' → logprob: -6.879120826721191
    4. ' )' → logprob: -7.129120826721191
    5. ',' → logprob: -7.754120826721191
    6. ')
' → logprob: -10.004120826721191
    7. ' +' → logprob: -10.379120826721191
    8. ':' → logprob: -11.129120826721191
    9. ',)' → logprob: -11.754120826721191
    10. ':)' → logprob: -11.879120826721191

Token 83: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17285627126693726
    2. 'slice' → logprob: -1.922856330871582
    3. '+
' → logprob: -5.422856330871582
    4. 'print' → logprob: -6.172856330871582
    5. '
' → logprob: -6.297856330871582
    6. '(slice' → logprob: -6.547856330871582
    7. ' slice' → logprob: -7.172856330871582
    8. ' +' → logprob: -7.422856330871582
    9. '<|end|>' → logprob: -7.797856330871582
    10. '```' → logprob: -8.672856330871582

Token 84: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007127894787117839
    2. ' ' → logprob: -8.250712394714355
    3. '2' → logprob: -8.375712394714355
    4. '3' → logprob: -9.250712394714355
    5. 'len' → logprob: -10.375712394714355
    6. '4' → logprob: -10.750712394714355
    7. '5' → logprob: -10.875712394714355
    8. '10' → logprob: -11.125712394714355
    9. 'the' → logprob: -11.625712394714355
    10. '7' → logprob: -12.375712394714355

Token 85: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017296832520514727
    2. '2' → logprob: -7.126729488372803
    3. '3' → logprob: -8.001729965209961
    4. 'len' → logprob: -8.751729965209961
    5. 'the' → logprob: -9.251729965209961
    6. 'my' → logprob: -9.501729965209961
    7. '4' → logprob: -9.751729965209961
    8. '5' → logprob: -9.751729965209961
    9. '10' → logprob: -10.376729965209961
    10. '0' → logprob: -10.501729965209961

Token 86: '
' (ID: 198)
  Prédit: 'slice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slice' → logprob: -0.6283953189849854
    2. '<|end|>' → logprob: -1.6283953189849854
    3. '
' → logprob: -2.0033953189849854
    4. 'print' → logprob: -2.2533953189849854
    5. '```' → logprob: -5.628395080566406
    6. '<|end|>' → logprob: -5.753395080566406
    7. '(slice' → logprob: -6.003395080566406
    8. ' ' → logprob: -6.253395080566406
    9. ' slice' → logprob: -6.378395080566406
    10. ')' → logprob: -6.378395080566406

Token 87: 'the' (ID: 3086)
  Prédit: 'slice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'slice' → logprob: -0.6045896410942078
    2. 'print' → logprob: -0.8545896410942078
    3. 'result' → logprob: -4.229589462280273
    4. 'for' → logprob: -5.229589462280273
    5. 'sum' → logprob: -6.479589462280273
    6. 'total' → logprob: -7.104589462280273
    7. 'target' → logprob: -7.229589462280273
    8. 'answer' → logprob: -7.479589462280273
    9. 'if' → logprob: -7.604589462280273
    10. 'while' → logprob: -8.104589462280273

Token 88: 'Chosen' (ID: 110839)
  Prédit: 'Other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Other' → logprob: -6.0629870858974755e-05
    2. 'O' → logprob: -10.00006103515625
    3. ' Other' → logprob: -12.62506103515625
    4. 'Ot' → logprob: -12.62506103515625
    5. '_other' → logprob: -13.00006103515625
    6. 'One' → logprob: -13.25006103515625
    7. ' other' → logprob: -13.62506103515625
    8. 'other' → logprob: -13.87506103515625
    9. ' ' → logprob: -15.00006103515625
    10. '```' → logprob: -15.37506103515625

Token 89: 'Few' (ID: 138041)
  Prédit: 'One'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'One' → logprob: -0.037464533001184464
    2. ' =' → logprob: -3.4124646186828613
    3. '=' → logprob: -5.662464618682861
    4. 'Slice' → logprob: -9.412464141845703
    5. 'Index' → logprob: -9.662464141845703
    6. 'On' → logprob: -10.287464141845703
    7. ' ' → logprob: -11.037464141845703
    8. 'Value' → logprob: -11.287464141845703
    9. 'Item' → logprob: -11.537464141845703
    10. 'Number' → logprob: -11.662464141845703

Token 90: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5232393741607666
    2. ' =' → logprob: -0.8982393741607666
    3. '[' → logprob: -9.523239135742188
    4. '[:]' → logprob: -11.523239135742188
    5. 'slice' → logprob: -11.648239135742188
    6. 's' → logprob: -11.773239135742188
    7. ' ' → logprob: -12.148239135742188
    8. '_' → logprob: -13.773239135742188
    9. '[:' → logprob: -13.898239135742188
    10. '[s' → logprob: -13.898239135742188

Token 91: ' [' (ID: 723)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.023319318890571594
    2. ' the' → logprob: -3.7733192443847656
    3. 'my' → logprob: -10.023319244384766
    4. 'append' → logprob: -11.023319244384766
    5. ' my' → logprob: -13.023319244384766
    6. 'other' → logprob: -13.148319244384766
    7. 'The' → logprob: -13.648319244384766
    8. ' ' → logprob: -14.148319244384766
    9. '(the' → logprob: -14.148319244384766
    10. '[]' → logprob: -14.273319244384766

Token 92: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8149383664131165
    2. 'append' → logprob: -1.5649383068084717
    3. 'i' → logprob: -2.4399383068084717
    4. 'the' → logprob: -2.5649383068084717
    5. 'int' → logprob: -2.8149383068084717
    6. 'item' → logprob: -3.9399383068084717
    7. 'v' → logprob: -3.9399383068084717
    8. 'val' → logprob: -4.314938545227051
    9. ' x' → logprob: -4.564938545227051
    10. 'elem' → logprob: -4.814938545227051

Token 93: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.05551581084728241
    2. 'for' → logprob: -2.930515766143799
    3. ' ' → logprob: -8.805516242980957
    4. '[i' → logprob: -9.555516242980957
    5. '   ' → logprob: -9.805516242980957
    6. ']' → logprob: -9.930516242980957
    7. '[' → logprob: -10.180516242980957
    8. 'i' → logprob: -10.430516242980957
    9. ' if' → logprob: -10.680516242980957
    10. '+' → logprob: -10.805516242980957

Token 94: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07214754819869995
    2. ' x' → logprob: -2.9471476078033447
    3. 'the' → logprob: -4.822147369384766
    4. ' the' → logprob: -5.572147369384766
    5. ' in' → logprob: -6.322147369384766
    6. 'range' → logprob: -6.572147369384766
    7. ' range' → logprob: -6.572147369384766
    8. 'i' → logprob: -8.322147369384766
    9. 'in' → logprob: -9.197147369384766
    10. ' ' → logprob: -9.822147369384766

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08194083720445633
    2. ',' → logprob: -2.9569408893585205
    3. 'in' → logprob: -3.7069408893585205
    4. ' the' → logprob: -7.206940650939941
    5. 'the' → logprob: -7.581940650939941
    6. 'x' → logprob: -8.956940650939941
    7. ' ' → logprob: -9.331940650939941
    8. ' ,' → logprob: -9.331940650939941
    9. 'my' → logprob: -9.331940650939941
    10. 'range' → logprob: -9.456940650939941

Token 96: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5195184350013733
    2. ' the' → logprob: -1.3945183753967285
    3. 'my' → logprob: -2.3945183753967285
    4. ' range' → logprob: -3.3945183753967285
    5. ' my' → logprob: -4.0195183753967285
    6. 'range' → logprob: -4.2695183753967285
    7. '(the' → logprob: -8.894518852233887
    8. 'append' → logprob: -9.519518852233887
    9. 'map' → logprob: -9.644518852233887
    10. ' map' → logprob: -10.582018852233887

Token 97: 'Other' (ID: 13863)
  Prédit: 'Other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Other' → logprob: -1.7835754988482222e-05
    2. 'Storage' → logprob: -11.750018119812012
    3. 'other' → logprob: -12.250018119812012
    4. 'O' → logprob: -12.875018119812012
    5. ' other' → logprob: -14.125018119812012
    6. ' Other' → logprob: -15.000018119812012
    7. ' ' → logprob: -15.125018119812012
    8. 'One' → logprob: -15.500018119812012
    9. '
' → logprob: -16.000017166137695
    10. 'The' → logprob: -16.125017166137695

Token 98: 'One' (ID: 5045)
  Prédit: 'One'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'One' → logprob: -3.214019307051785e-05
    2. 'one' → logprob: -10.750032424926758
    3. '[' → logprob: -13.125032424926758
    4. '_one' → logprob: -13.125032424926758
    5. 'On' → logprob: -14.125032424926758
    6. 'on' → logprob: -14.375032424926758
    7. '[start' → logprob: -14.375032424926758
    8. '```' → logprob: -14.500032424926758
    9. ' one' → logprob: -14.750032424926758
    10. '   ' → logprob: -14.875032424926758

Token 99: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.0012870213249698281
    2. ' if' → logprob: -7.50128698348999
    3. '[' → logprob: -8.501287460327148
    4. '[:' → logprob: -8.751287460327148
    5. 'slice' → logprob: -9.251287460327148
    6. ' [' → logprob: -9.251287460327148
    7. '][' → logprob: -9.251287460327148
    8. 'if' → logprob: -10.501287460327148
    9. ']' → logprob: -10.751287460327148
    10. '   ' → logprob: -11.626287460327148

Token 100: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -6.511406809295295e-06
    2. 'slice' → logprob: -12.625006675720215
    3. 'ice' → logprob: -13.375006675720215
    4. '```' → logprob: -14.625006675720215
    5. 'li' → logprob: -14.875006675720215
    6. 'lic' → logprob: -15.625006675720215
    7. '[' → logprob: -15.875006675720215
    8. 'lace' → logprob: -16.0000057220459
    9. '``' → logprob: -16.3750057220459
    10. 'l' → logprob: -16.5000057220459

Token 101: 'Start' (ID: 4459)
  Prédit: 'Start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Start' → logprob: -3.9650025428272784e-05
    2. 'art' → logprob: -10.750040054321289
    3. 't' → logprob: -11.250040054321289
    4. 'End' → logprob: -13.250040054321289
    5. 'e' → logprob: -14.500040054321289
    6. 'start' → logprob: -14.625040054321289
    7. 'arts' → logprob: -14.875040054321289
    8. ':' → logprob: -14.875040054321289
    9. '	Start' → logprob: -15.125040054321289
    10. 'Slice' → logprob: -15.500040054321289

Token 102: ':' (ID: 25)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.7120453715324402
    2. ':' → logprob: -0.8370453715324402
    3. ':s' → logprob: -2.837045431137085
    4. ' :' → logprob: -4.212045192718506
    5. ' :]' → logprob: -6.212045192718506
    6. ' if' → logprob: -7.712045192718506
    7. ']' → logprob: -8.837045669555664
    8. ']]' → logprob: -9.837045669555664
    9. 'if' → logprob: -9.962045669555664
    10. ' ]]' → logprob: -9.962045669555664

Token 103: ']]
' (ID: 29446)
  Prédit: 'slice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'slice' → logprob: -0.45240965485572815
    2. ']' → logprob: -1.3274096250534058
    3. ']]' → logprob: -2.5774097442626953
    4. ':' → logprob: -5.702409744262695
    5. 'N' → logprob: -5.702409744262695
    6. ' slice' → logprob: -6.077409744262695
    7. ':]' → logprob: -6.077409744262695
    8. '   ' → logprob: -6.952409744262695
    9. ':s' → logprob: -6.952409744262695
    10. 'None' → logprob: -6.952409744262695

Token 104: 'answer' (ID: 17021)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6312402486801147
    2. '<|end|>' → logprob: -1.3812402486801147
    3. ']' → logprob: -1.6312402486801147
    4. '
' → logprob: -4.631240367889404
    5. 'slice' → logprob: -6.506240367889404
    6. 'sum' → logprob: -6.756240367889404
    7. '[' → logprob: -6.756240367889404
    8. ')' → logprob: -7.006240367889404
    9. 'for' → logprob: -7.381240367889404
    10. '[len' → logprob: -7.381240367889404

Token 105: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20548222959041595
    2. ' =' → logprob: -1.8304822444915771
    3. '=sum' → logprob: -4.580482006072998
    4. '.' → logprob: -5.580482006072998
    5. '[' → logprob: -5.705482006072998
    6. '[:]' → logprob: -5.830482006072998
    7. '(' → logprob: -6.080482006072998
    8. '.append' → logprob: -7.455482006072998
    9. '.sum' → logprob: -7.455482006072998
    10. '(sum' → logprob: -7.455482006072998

Token 106: ' eval' (ID: 29383)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.4377383291721344
    2. 'sum' → logprob: -1.437738299369812
    3. ' max' → logprob: -2.3127384185791016
    4. 'max' → logprob: -4.062738418579102
    5. ' min' → logprob: -8.062738418579102
    6. ' str' → logprob: -9.062738418579102
    7. 'min' → logprob: -9.312738418579102
    8. ' the' → logprob: -9.312738418579102
    9. '(sum' → logprob: -9.812738418579102
    10. 'str' → logprob: -10.062738418579102

Token 107: '('+' (ID: 108514)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.08151141554117203
    2. '(sum' → logprob: -3.2065114974975586
    3. '("' → logprob: -4.206511497497559
    4. '('(' → logprob: -5.081511497497559
    5. '(' → logprob: -5.331511497497559
    6. '("(' → logprob: -5.831511497497559
    7. '("("' → logprob: -6.206511497497559
    8. '('+' → logprob: -6.206511497497559
    9. '(f' → logprob: -6.581511497497559
    10. '(str' → logprob: -7.206511497497559

Token 108: ''.' (ID: 6120)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.44119012355804443
    2. 'the' → logprob: -1.6911901235580444
    3. 'str' → logprob: -2.816190242767334
    4. ' ''.' → logprob: -2.816190242767334
    5. ''.' → logprob: -3.816190242767334
    6. ''' → logprob: -4.816190242767334
    7. 'x' → logprob: -4.941190242767334
    8. 'answer' → logprob: -5.441190242767334
    9. '','.' → logprob: -5.441190242767334
    10. ' ' → logprob: -6.566190242767334

Token 109: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.5770924687385559
    2. 'the' → logprob: -0.8270924687385559
    3. 'str' → logprob: -6.82709264755249
    4. 'map' → logprob: -11.327092170715332
    5. ' the' → logprob: -11.702092170715332
    6. 'answer' → logprob: -11.952092170715332
    7. 'chr' → logprob: -12.452092170715332
    8. 'joined' → logprob: -12.702092170715332
    9. 'tuple' → logprob: -12.827092170715332
    10. 'x' → logprob: -12.952092170715332

Token 110: '(str' (ID: 7946)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.9403819441795349
    2. '(map' → logprob: -0.9403819441795349
    3. 'the' → logprob: -1.9403820037841797
    4. '(list' → logprob: -3.6903820037841797
    5. 'list' → logprob: -3.9403820037841797
    6. '[str' → logprob: -4.69038200378418
    7. '(str' → logprob: -4.81538200378418
    8. '(the' → logprob: -5.19038200378418
    9. '[' → logprob: -5.81538200378418
    10. '([' → logprob: -6.56538200378418

Token 111: '(num' (ID: 15828)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.026847291737794876
    2. '(the' → logprob: -4.4018473625183105
    3. '(i' → logprob: -4.5268473625183105
    4. '(num' → logprob: -6.9018473625183105
    5. '(e' → logprob: -7.2768473625183105
    6. '(answer' → logprob: -7.6518473625183105
    7. '(_)' → logprob: -8.276846885681152
    8. '(s' → logprob: -8.526846885681152
    9. '(n' → logprob: -8.776846885681152
    10. '(a' → logprob: -8.901846885681152

Token 112: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4955902695655823
    2. '(num' → logprob: -1.4955902099609375
    3. '(x' → logprob: -1.9955902099609375
    4. '(n' → logprob: -3.7455902099609375
    5. '(i' → logprob: -5.2455902099609375
    6. 'num' → logprob: -7.1205902099609375
    7. '(e' → logprob: -8.370590209960938
    8. '(' → logprob: -8.620590209960938
    9. '(a' → logprob: -8.745590209960938
    10. 'for' → logprob: -9.370590209960938

Token 113: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.6354021430015564
    2. '(the' → logprob: -0.8854021430015564
    3. '(num' → logprob: -4.010402202606201
    4. ')' → logprob: -4.010402202606201
    5. 'for' → logprob: -4.385402202606201
    6. ' for' → logprob: -6.010402202606201
    7. 'the' → logprob: -6.635402202606201
    8. '(n' → logprob: -6.760402202606201
    9. '(' → logprob: -7.135402202606201
    10. '(y' → logprob: -7.135402202606201

Token 114: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.4352940022945404
    2. ' num' → logprob: -1.0602940320968628
    3. ' the' → logprob: -5.685294151306152
    4. 'x' → logprob: -6.560294151306152
    5. 'the' → logprob: -6.810294151306152
    6. ' x' → logprob: -7.435294151306152
    7. ' in' → logprob: -11.060294151306152
    8. ' ' → logprob: -11.310294151306152
    9. '(num' → logprob: -11.685294151306152
    10. ' answer' → logprob: -11.810294151306152

Token 115: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0007230373448692262
    2. 'in' → logprob: -7.375722885131836
    3. ' ' → logprob: -10.250722885131836
    4. 'the' → logprob: -10.875722885131836
    5. ' the' → logprob: -11.750722885131836
    6. 'Answer' → logprob: -12.000722885131836
    7. ')' → logprob: -12.125722885131836
    8. 'The' → logprob: -12.125722885131836
    9. ' ' → logprob: -12.125722885131836
    10. 'answer' → logprob: -12.125722885131836

Token 116: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.0059302207082509995
    2. ' the' → logprob: -5.130930423736572
    3. '(the' → logprob: -14.380929946899414
    4. 'them' → logprob: -14.880929946899414
    5. 'The' → logprob: -15.755929946899414
    6. 'answer' → logprob: -15.880929946899414
    7. ' ' → logprob: -16.130929946899414
    8. '	the' → logprob: -16.380929946899414
    9. '   ' → logprob: -16.630929946899414
    10. ')' → logprob: -17.130929946899414

Token 117: 'Chosen' (ID: 110839)
  Prédit: 'Chosen'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Chosen' → logprob: -0.006378429476171732
    2. 'the' → logprob: -5.131378650665283
    3. 'chosen' → logprob: -8.256378173828125
    4. 'Other' → logprob: -9.381378173828125
    5. 'The' → logprob: -10.381378173828125
    6. 'Cho' → logprob: -10.756378173828125
    7. 'chos' → logprob: -10.881378173828125
    8. 'Ch' → logprob: -11.756378173828125
    9. 'other' → logprob: -12.506378173828125
    10. 'cho' → logprob: -12.881378173828125

Token 118: 'Few' (ID: 138041)
  Prédit: 'Few'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Few' → logprob: -0.005086937453597784
    2. 'few' → logprob: -5.380086898803711
    3. 'One' → logprob: -8.005086898803711
    4. ' few' → logprob: -9.505086898803711
    5. 'o' → logprob: -10.505086898803711
    6. ' Few' → logprob: -11.005086898803711
    7. 'f' → logprob: -12.130086898803711
    8. '_f' → logprob: -12.880086898803711
    9. 'ose' → logprob: -13.005086898803711
    10. 'on' → logprob: -14.755086898803711

Token 119: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31331294775009155
    2. '))' → logprob: -1.3133130073547363
    3. ')))' → logprob: -9.938312530517578
    4. '])' → logprob: -13.313312530517578
    5. ')])' → logprob: -15.313312530517578
    6. ')
' → logprob: -15.438312530517578
    7. '))
' → logprob: -15.813312530517578
    8. ')]' → logprob: -16.188312530517578
    9. ')`' → logprob: -16.188312530517578
    10. ' )' → logprob: -16.438312530517578

Token 120: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.034592388459714e-06
    2. ' print' → logprob: -13.000005722045898
    3. ')' → logprob: -13.375005722045898
    4. 'answer' → logprob: -13.500005722045898
    5. '<|end|>' → logprob: -14.875005722045898
    6. '(print' → logprob: -15.875005722045898
    7. '
' → logprob: -16.2500057220459
    8. '#print' → logprob: -16.2500057220459
    9. '#' → logprob: -17.1250057220459
    10. '.print' → logprob: -17.6250057220459

Token 121: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.014209816232323647
    2. '(' → logprob: -4.264209747314453
    3. '('' → logprob: -10.389209747314453
    4. '(ans' → logprob: -11.889209747314453
    5. 'answer' → logprob: -12.389209747314453
    6. '()' → logprob: -13.139209747314453
    7. ' (' → logprob: -14.139209747314453
    8. '("("' → logprob: -14.389209747314453
    9. '(f' → logprob: -15.014209747314453
    10. '(sum' → logprob: -16.014209747314453

Token 122: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. '))' → logprob: -14.125001907348633
    3. ')`' → logprob: -14.375001907348633
    4. '`)' → logprob: -15.750001907348633
    5. ' )' → logprob: -17.500001907348633
    6. ')}' → logprob: -17.500001907348633
    7. ')
' → logprob: -17.625001907348633
    8. '')' → logprob: -18.125001907348633
    9. '),' → logprob: -18.375001907348633
    10. '})' → logprob: -18.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 120
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 50
Tokens correctement prédits (top 10): 85
Précision stricte (1ère position): 40.83%
Précision adaptée (1ère position): 41.67%
Précision (top 10): 70.83%
================================================================================
