================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b = input().split()
a = int(a)
b = int(b)

if a + b == 15:
    print("+")
elif a * b == 15:
    print("*")
else:
    print("x")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21134252846240997
    2. '+' → logprob: -1.7113425731658936
    3. ',' → logprob: -5.3363423347473145
    4. ' =' → logprob: -5.5863423347473145
    5. ' ' → logprob: -8.086342811584473
    6. ' +' → logprob: -8.586342811584473
    7. '*' → logprob: -8.711342811584473
    8. '+=' → logprob: -8.961342811584473
    9. '.' → logprob: -9.086342811584473
    10. ')' → logprob: -9.586342811584473

Token 4: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13601942360401154
    2. '0' → logprob: -2.761019468307495
    3. '1' → logprob: -2.886019468307495
    4. '10' → logprob: -4.886019229888916
    5. '5' → logprob: -8.761019706726074
    6. '42' → logprob: -9.511019706726074
    7. 'input' → logprob: -10.011019706726074
    8. '[' → logprob: -10.011019706726074
    9. 'a' → logprob: -10.386019706726074
    10. ' [' → logprob: -10.386019706726074

Token 5: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020072180777788162
    2. '.' → logprob: -4.520071983337402
    3. '()' → logprob: -4.895071983337402
    4. '(
' → logprob: -7.270071983337402
    5. '().' → logprob: -8.520071983337402
    6. '(.)' → logprob: -8.520071983337402
    7. '('.')' → logprob: -9.520071983337402
    8. ',' → logprob: -9.520071983337402
    9. ''' → logprob: -10.020071983337402
    10. '(

' → logprob: -10.270071983337402

Token 6: 'split' (ID: 13627)
  Prédit: '.split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.6008698344230652
    2. 'split' → logprob: -0.8508698344230652
    3. 'strip' → logprob: -4.475869655609131
    4. '.strip' → logprob: -5.100869655609131
    5. '.' → logprob: -5.725869655609131
    6. ',' → logprob: -6.350869655609131
    7. '().' → logprob: -6.975869655609131
    8. '()' → logprob: -7.725869655609131
    9. ' split' → logprob: -8.100870132446289
    10. '_split' → logprob: -9.475870132446289

Token 7: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28146085143089294
    2. '()' → logprob: -1.4064608812332153
    3. '('' → logprob: -9.656460762023926
    4. '(
' → logprob: -9.906460762023926
    5. '`' → logprob: -10.406460762023926
    6. '(

' → logprob: -10.906460762023926
    7. '```' → logprob: -10.906460762023926
    8. '(`' → logprob: -11.031460762023926
    9. '`()' → logprob: -11.031460762023926
    10. '()`' → logprob: -11.156460762023926

Token 8: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.809756875038147
    2. '.' → logprob: -1.434756875038147
    3. '=' → logprob: -1.434756875038147
    4. ',' → logprob: -3.8097567558288574
    5. ' =' → logprob: -4.184756755828857
    6. '#' → logprob: -4.309756755828857
    7. '```' → logprob: -4.809756755828857
    8. '[' → logprob: -5.434756755828857
    9. '*' → logprob: -6.184756755828857
    10. ' a' → logprob: -6.684756755828857

Token 9: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3990224301815033
    2. '[' → logprob: -1.1490224599838257
    3. ' ' → logprob: -5.649022579193115
    4. '.' → logprob: -5.899022579193115
    5. '<|end|>' → logprob: -6.649022579193115
    6. 'a' → logprob: -6.899022579193115
    7. ' +' → logprob: -7.149022579193115
    8. '*' → logprob: -7.274022579193115
    9. '```' → logprob: -8.274022102355957
    10. '=' → logprob: -8.274022102355957

Token 10: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03924540802836418
    2. 'a' → logprob: -3.914245367050171
    3. ' int' → logprob: -4.03924560546875
    4. ' a' → logprob: -7.66424560546875
    5. 'float' → logprob: -8.16424560546875
    6. 'b' → logprob: -9.66424560546875
    7. 'input' → logprob: -9.78924560546875
    8. ' float' → logprob: -11.41424560546875
    9. '0' → logprob: -12.03924560546875
    10. ' b' → logprob: -12.28924560546875

Token 11: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2528618574142456
    2. '(' → logprob: -1.5028618574142456
    3. '('' → logprob: -7.252861976623535
    4. 'a' → logprob: -9.002861976623535
    5. '()' → logprob: -10.877861976623535
    6. '```' → logprob: -10.877861976623535
    7. '("' → logprob: -11.127861976623535
    8. '(input' → logprob: -11.377861976623535
    9. '("("' → logprob: -11.502861976623535
    10. ')' → logprob: -12.252861976623535

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006613265140913427
    2. '+' → logprob: -7.375661373138428
    3. ')
' → logprob: -11.62566089630127
    4. ' )' → logprob: -11.62566089630127
    5. '<|end|>' → logprob: -12.37566089630127
    6. '+)' → logprob: -12.87566089630127
    7. ')+' → logprob: -13.00066089630127
    8. ' +' → logprob: -13.50066089630127
    9. ')a' → logprob: -13.50066089630127
    10. '*' → logprob: -13.50066089630127

Token 13: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5464875102043152
    2. '+' → logprob: -0.9214875102043152
    3. ' b' → logprob: -4.796487331390381
    4. ' ' → logprob: -4.796487331390381
    5. '<|end|>' → logprob: -6.171487331390381
    6. '+b' → logprob: -6.296487331390381
    7. ' +' → logprob: -7.046487331390381
    8. '*' → logprob: -7.796487331390381
    9. ' 
' → logprob: -8.171487808227539
    10. '+
' → logprob: -8.171487808227539

Token 14: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2283715456724167
    2. ' +' → logprob: -2.1033716201782227
    3. '<|end|>' → logprob: -2.8533716201782227
    4. ' ' → logprob: -4.353371620178223
    5. ')' → logprob: -4.853371620178223
    6. '*' → logprob: -7.478371620178223
    7. '<|end|>' → logprob: -7.478371620178223
    8. '[' → logprob: -7.728371620178223
    9. ' +=' → logprob: -7.978371620178223
    10. '=' → logprob: -8.228371620178223

Token 15: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4287116229534149
    2. ' int' → logprob: -1.0537116527557373
    3. ' ' → logprob: -12.553711891174316
    4. '<int' → logprob: -13.803711891174316
    5. 'b' → logprob: -13.928711891174316
    6. '=int' → logprob: -14.053711891174316
    7. '(int' → logprob: -14.178711891174316
    8. ' b' → logprob: -14.303711891174316
    9. '   ' → logprob: -14.428711891174316
    10. '0' → logprob: -14.553711891174316

Token 16: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18112221360206604
    2. '(b' → logprob: -1.8061221837997437
    3. '(a' → logprob: -6.806122303009033
    4. 'b' → logprob: -9.931121826171875
    5. ' (' → logprob: -9.931121826171875
    6. '('' → logprob: -10.556121826171875
    7. '("("' → logprob: -10.681121826171875
    8. '```' → logprob: -10.806121826171875
    9. ')' → logprob: -10.931121826171875
    10. '()' → logprob: -11.056121826171875

Token 17: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. '')' → logprob: -14.875000953674316
    3. ')
' → logprob: -15.250000953674316
    4. '```' → logprob: -15.500000953674316
    5. '<|end|>' → logprob: -15.875000953674316
    6. '`)' → logprob: -15.875000953674316
    7. ' )' → logprob: -16.250001907348633
    8. '))' → logprob: -16.625001907348633
    9. '+' → logprob: -17.625001907348633
    10. '()' → logprob: -17.875001907348633

Token 18: 'if' (ID: 366)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0643067359924316
    2. 'if' → logprob: -1.0643067359924316
    3. 's' → logprob: -2.4393067359924316
    4. '+' → logprob: -2.5643067359924316
    5. 'i' → logprob: -2.6893067359924316
    6. 'print' → logprob: -3.9393067359924316
    7. 'for' → logprob: -4.064306735992432
    8. 'n' → logprob: -4.564306735992432
    9. 'p' → logprob: -5.064306735992432
    10. 'sum' → logprob: -5.189306735992432

Token 19: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.06256616115570068
    2. ' ' → logprob: -3.4375662803649902
    3. 'a' → logprob: -3.5625662803649902
    4. ' ' → logprob: -9.937565803527832
    5. ' b' → logprob: -10.187565803527832
    6. '  ' → logprob: -10.687565803527832
    7. ' (' → logprob: -11.937565803527832
    8. '_a' → logprob: -11.937565803527832
    9. 'b' → logprob: -12.562565803527832
    10. ''' → logprob: -13.312565803527832

Token 20: ' +' (ID: 659)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.09078579396009445
    2. ' <' → logprob: -2.9657857418060303
    3. ' ' → logprob: -4.340785980224609
    4. ' ==' → logprob: -4.465785980224609
    5. ' >=' → logprob: -5.215785980224609
    6. ' <=' → logprob: -5.715785980224609
    7. '>' → logprob: -6.840785980224609
    8. '  ' → logprob: -8.34078598022461
    9. ' !=' → logprob: -8.59078598022461
    10. '<' → logprob: -8.71578598022461

Token 21: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.126929372549057
    2. ' b' → logprob: -2.12692928314209
    3. ' ' → logprob: -13.75192928314209
    4. '1' → logprob: -15.75192928314209
    5. '>b' → logprob: -16.501930236816406
    6. '7' → logprob: -17.876930236816406
    7. '	b' → logprob: -17.876930236816406
    8. ' б' → logprob: -18.251930236816406
    9. '10' → logprob: -18.501930236816406
    10. '<|end|>' → logprob: -18.626930236816406

Token 22: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0377776175737381
    2. '>' → logprob: -3.6627776622772217
    3. ' ==' → logprob: -5.037777423858643
    4. ' <=' → logprob: -6.412777423858643
    5. ' >=' → logprob: -6.787777423858643
    6. ' <' → logprob: -7.162777423858643
    7. ' ' → logprob: -7.287777423858643
    8. '==' → logprob: -7.912777423858643
    9. ' !=' → logprob: -9.6627779006958
    10. '<' → logprob: -10.0377779006958

Token 23: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5616220831871033
    2. '10' → logprob: -1.186622142791748
    3. ' ' → logprob: -2.186622142791748
    4. '0' → logprob: -4.686622142791748
    5. '20' → logprob: -6.936622142791748
    6. '42' → logprob: -7.436622142791748
    7. '3' → logprob: -7.686622142791748
    8. '15' → logprob: -8.31162166595459
    9. '1' → logprob: -8.93662166595459
    10. '202' → logprob: -9.56162166595459

Token 24: '15' (ID: 1055)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.18551665544509888
    2. '100' → logprob: -2.060516595840454
    3. '0' → logprob: -3.685516595840454
    4. '3' → logprob: -4.935516834259033
    5. ' ' → logprob: -6.310516834259033
    6. '15' → logprob: -6.435516834259033
    7. '20' → logprob: -6.560516834259033
    8. '30' → logprob: -6.810516834259033
    9. '1' → logprob: -7.060516834259033
    10. '7' → logprob: -7.560516834259033

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002342912630410865
    2. ' :' → logprob: -8.375234603881836
    3. ':**' → logprob: -13.125234603881836
    4. ':
' → logprob: -13.875234603881836
    5. '):' → logprob: -15.250234603881836
    6. ' and' → logprob: -15.875234603881836
    7. '>:' → logprob: -16.250234603881836
    8. ' or' → logprob: -16.250234603881836
    9. '：' → logprob: -17.750234603881836
    10. '':'' → logprob: -17.875234603881836

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1734008640050888
    2. ' print' → logprob: -2.04840087890625
    3. 'print' → logprob: -4.17340087890625
    4. '\n' → logprob: -4.92340087890625
    5. ':' → logprob: -5.29840087890625
    6. '	print' → logprob: -7.29840087890625
    7. '    ' → logprob: -7.42340087890625
    8. '\' → logprob: -8.04840087890625
    9. ' ' → logprob: -8.17340087890625
    10. ':
' → logprob: -9.04840087890625

Token 27: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.04881195351481438
    2. 'print' (adapté à ' print') → logprob: -3.048811912536621
    3. '   ' → logprob: -8.423811912536621
    4. '    ' → logprob: -12.673811912536621
    5. '	print' → logprob: -14.048811912536621
    6. ' pass' → logprob: -14.548811912536621
    7. ' ' → logprob: -15.048811912536621
    8. '```' → logprob: -16.798812866210938
    9. 'pass' → logprob: -17.423812866210938
    10. '.print' → logprob: -17.548812866210938

Token 28: '("+' (ID: 68159)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.052339036017656326
    2. '("' → logprob: -3.0523390769958496
    3. '('' → logprob: -5.80233907699585
    4. '("("' → logprob: -7.55233907699585
    5. '(True' → logprob: -9.552338600158691
    6. '()' → logprob: -10.052338600158691
    7. '(a' → logprob: -10.177338600158691
    8. '("")' → logprob: -10.802338600158691
    9. '"' → logprob: -11.302338600158691
    10. '((' → logprob: -12.552338600158691

Token 29: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00036144492332823575
    2. ')' → logprob: -8.500361442565918
    3. '"' → logprob: -9.750361442565918
    4. '""' → logprob: -10.125361442565918
    5. '15' → logprob: -10.250361442565918
    6. '')' → logprob: -11.250361442565918
    7. '")
' → logprob: -12.625361442565918
    8. '",' → logprob: -13.375361442565918
    9. ' ")' → logprob: -13.625361442565918
    10. ')")' → logprob: -13.625361442565918

Token 30: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.004930243361741304
    2. 'else' → logprob: -5.629930019378662
    3. ' elif' → logprob: -6.754930019378662
    4. 'el' → logprob: -10.12993049621582
    5. ' ' → logprob: -10.37993049621582
    6. '\' → logprob: -11.00493049621582
    7. '<|end|>' → logprob: -11.12993049621582
    8. ' else' → logprob: -11.62993049621582
    9. '```' → logprob: -11.75493049621582
    10. '()' → logprob: -11.87993049621582

Token 31: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.06270857900381088
    2. 'a' → logprob: -2.812708616256714
    3. ' ' → logprob: -7.312708377838135
    4. ' b' → logprob: -10.687708854675293
    5. ' (' → logprob: -11.687708854675293
    6. 'b' → logprob: -11.937708854675293
    7. '(a' → logprob: -12.312708854675293
    8. '  ' → logprob: -12.437708854675293
    9. '	a' → logprob: -12.562708854675293
    10. ''' → logprob: -12.687708854675293

Token 32: ' *' (ID: 425)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.36076095700263977
    2. '-' → logprob: -2.2357609272003174
    3. ' +' → logprob: -2.3607609272003174
    4. '+' → logprob: -3.3607609272003174
    5. '*' → logprob: -3.4857609272003174
    6. ' *' → logprob: -3.6107609272003174
    7. ' ' → logprob: -4.8607611656188965
    8. ' ==' → logprob: -7.2357611656188965
    9. '==' → logprob: -8.735760688781738
    10. '%' → logprob: -9.360760688781738

Token 33: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5240308046340942
    2. 'b' → logprob: -0.8990308046340942
    3. ' ' → logprob: -7.399030685424805
    4. '<|end|>' → logprob: -8.149030685424805
    5. '<|end|>' → logprob: -12.899030685424805
    6. '	b' → logprob: -14.024030685424805
    7. '  ' → logprob: -14.149030685424805
    8. ' б' → logprob: -14.774030685424805
    9. ' ' → logprob: -15.149030685424805
    10. '>b' → logprob: -15.399030685424805

Token 34: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04865923896431923
    2. '==' → logprob: -3.048659324645996
    3. ' ' → logprob: -10.298659324645996
    4. ' >' → logprob: -11.798659324645996
    5. '=' → logprob: -11.923659324645996
    6. ' <=' → logprob: -12.048659324645996
    7. ' =' → logprob: -12.423659324645996
    8. '>' → logprob: -12.423659324645996
    9. ')' → logprob: -13.298659324645996
    10. ' <' → logprob: -13.423659324645996

Token 35: ' ' (ID: 220)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.0006349971517920494
    2. ' ' → logprob: -7.375635147094727
    3. 'a' → logprob: -12.250635147094727
    4. 'b' → logprob: -14.000635147094727
    5. '0' → logprob: -14.625635147094727
    6. '   ' → logprob: -14.750635147094727
    7. '30' → logprob: -14.875635147094727
    8. '1' → logprob: -14.875635147094727
    9. '25' → logprob: -15.250635147094727
    10. '  ' → logprob: -15.500635147094727

Token 36: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.0003589416155591607
    2. ' ' → logprob: -8.250358581542969
    3. '1' → logprob: -9.500358581542969
    4. 'b' → logprob: -11.500358581542969
    5. 'a' → logprob: -12.625358581542969
    6. '0' → logprob: -13.250358581542969
    7. '   ' → logprob: -13.625358581542969
    8. '30' → logprob: -13.750358581542969
    9. '```' → logprob: -13.875358581542969
    10. '10' → logprob: -14.125358581542969

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.690834273584187e-05
    2. ':
' → logprob: -10.62503719329834
    3. '):' → logprob: -11.50003719329834
    4. ' :' → logprob: -13.50003719329834
    5. ':**' → logprob: -14.75003719329834
    6. '>:' → logprob: -15.00003719329834
    7. '():' → logprob: -16.250036239624023
    8. '<|end|>' → logprob: -16.625036239624023
    9. ':

' → logprob: -17.125036239624023
    10. ':return' → logprob: -17.750036239624023

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008319411426782608
    2. '<|end|>' → logprob: -5.38331937789917
    3. ' print' → logprob: -6.38331937789917
    4. 'print' → logprob: -6.88331937789917
    5. ' ' → logprob: -8.633319854736328
    6. '```' → logprob: -8.758319854736328
    7. '    ' → logprob: -8.883319854736328
    8. ':' → logprob: -8.883319854736328
    9. '
' → logprob: -9.383319854736328
    10. '       ' → logprob: -9.633319854736328

Token 39: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15871688723564148
    2. 'print' (adapté à ' print') → logprob: -2.033716917037964
    3. ' print' → logprob: -4.158716678619385
    4. '	print' → logprob: -9.158717155456543
    5. '```' → logprob: -9.158717155456543
    6. '       ' → logprob: -10.283717155456543
    7. '   ' → logprob: -11.533717155456543
    8. '    ' → logprob: -11.783717155456543
    9. ' ' → logprob: -12.533717155456543
    10. '``' → logprob: -12.658717155456543

Token 40: '("*' (ID: 59145)
  Prédit: '("+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("+' → logprob: -0.28619587421417236
    2. '("*' → logprob: -1.6611958742141724
    3. '("("' → logprob: -3.411195755004883
    4. '(' → logprob: -4.036195755004883
    5. '("' → logprob: -5.161195755004883
    6. '("="' → logprob: -7.286195755004883
    7. '("-' → logprob: -7.286195755004883
    8. '"+"' → logprob: -7.286195755004883
    9. '("/")' → logprob: -8.661195755004883
    10. '"+' → logprob: -9.161195755004883

Token 41: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.004398905672132969
    2. ')' → logprob: -5.504398822784424
    3. ')")' → logprob: -8.629399299621582
    4. '")
' → logprob: -9.004399299621582
    5. '"' → logprob: -11.754399299621582
    6. '()' → logprob: -13.004399299621582
    7. ')
' → logprob: -13.004399299621582
    8. '')' → logprob: -13.504399299621582
    9. '`)' → logprob: -14.254399299621582
    10. '```' → logprob: -14.379399299621582

Token 42: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0020070301834493876
    2. 'elif' → logprob: -6.377007007598877
    3. ' else' → logprob: -8.377007484436035
    4. '```' → logprob: -10.627007484436035
    5. '\n' → logprob: -10.752007484436035
    6. '_else' → logprob: -11.252007484436035
    7. '#else' → logprob: -12.377007484436035
    8. '<|end|>' → logprob: -12.752007484436035
    9. '#' → logprob: -13.752007484436035
    10. 'endif' → logprob: -14.127007484436035

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.431207682704553e-05
    2. ':
' → logprob: -10.625054359436035
    3. ' :' → logprob: -10.750054359436035
    4. '   ' → logprob: -11.750054359436035
    5. '():' → logprob: -15.500054359436035
    6. '):' → logprob: -16.12505340576172
    7. ':**' → logprob: -16.37505340576172
    8. ':def' → logprob: -17.37505340576172
    9. ' :
' → logprob: -17.50005340576172
    10. 'print' → logprob: -17.62505340576172

Token 44: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11712461709976196
    2. '"' → logprob: -3.242124557495117
    3. '-' → logprob: -3.242124557495117
    4. '"-' → logprob: -3.742124557495117
    5. '!' → logprob: -6.867124557495117
    6. '(' → logprob: -6.992124557495117
    7. '()' → logprob: -7.117124557495117
    8. '""' → logprob: -7.117124557495117
    9. '("-' → logprob: -7.242124557495117
    10. '   ' → logprob: -7.367124557495117

Token 45: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00100911152549088
    2. '-' → logprob: -7.001008987426758
    3. ' print' → logprob: -9.501008987426758
    4. '"-' → logprob: -12.001008987426758
    5. '15' → logprob: -12.251008987426758
    6. '"' → logprob: -13.501008987426758
    7. 'pr' → logprob: -13.751008987426758
    8. 'if' → logprob: -13.876008987426758
    9. 'prin' → logprob: -14.126008987426758
    10. '(' → logprob: -14.126008987426758

Token 46: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5296624302864075
    2. '("("' → logprob: -1.0296623706817627
    3. '("' → logprob: -3.2796623706817627
    4. '()' → logprob: -4.404662609100342
    5. '("")' → logprob: -6.029662609100342
    6. '("="' → logprob: -6.779662609100342
    7. '(">' → logprob: -8.654662132263184
    8. '("-' → logprob: -9.154662132263184
    9. '('' → logprob: -9.279662132263184
    10. '(-' → logprob: -10.029662132263184

Token 47: 'x' (ID: 87)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '?' → logprob: -0.017396587878465652
    2. '-' → logprob: -4.517396450042725
    3. '0' → logprob: -5.642396450042725
    4. '!' → logprob: -7.017396450042725
    5. '?"' → logprob: -8.267396926879883
    6. 'N' → logprob: -8.392396926879883
    7. '?)' → logprob: -8.392396926879883
    8. '!")' → logprob: -8.517396926879883
    9. '")' → logprob: -9.017396926879883
    10. 'x' → logprob: -9.017396926879883

Token 48: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -1.4855663721391466e-05
    2. ')' → logprob: -11.750015258789062
    3. '"' → logprob: -12.625015258789062
    4. 'x' → logprob: -13.250015258789062
    5. ')")' → logprob: -13.375015258789062
    6. '")
' → logprob: -15.625015258789062
    7. '!")' → logprob: -17.125015258789062
    8. '*' → logprob: -17.625015258789062
    9. '\")' → logprob: -17.875015258789062
    10. ' ")' → logprob: -18.000015258789062


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 46
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 39
Précision stricte (1ère position): 30.43%
Précision adaptée (1ère position): 32.61%
Précision (top 10): 84.78%
================================================================================
