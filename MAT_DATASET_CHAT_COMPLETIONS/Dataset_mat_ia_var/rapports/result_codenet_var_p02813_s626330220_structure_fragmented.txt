================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import itertools

def get_integer_input():
    return int(input())

def get_list_input():
    return list(map(int, input().split()))

def generate_range(n):
    return range(1, n+1)

def get_permutations(rng):
    return list(itertools.permutations(rng))

def permutation_to_list_tuple(perm):
    return [list(x) for x in perm]

def index_in_list(lst, item):
    return lst.index(item)

def abs_difference(a, b):
    return abs(a - b)

def main():
    n = get_integer_input()
    p_list = get_list_input()
    q_list = get_list_input()
    rng = generate_range(n)
    permutations_tuple = get_permutations(rng)
    combination_list = permutation_to_list_tuple(permutations_tuple)
    p_index = index_in_list(combination_list, p_list)
    q_index = index_in_list(combination_list, q_list)
    difference = abs_difference(p_index, q_index)
    print_result(difference)

def print_result(result):
    print(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4736459888808895e-05
    2. '```' → logprob: -13.125014305114746
    3. ' as' → logprob: -13.375014305114746
    4. '\' → logprob: -13.625014305114746
    5. 'as' → logprob: -13.750014305114746
    6. 'import' → logprob: -13.875014305114746
    7. '\.' → logprob: -13.875014305114746
    8. '(' → logprob: -14.000014305114746
    9. ',' → logprob: -14.250014305114746
    10. '.as' → logprob: -14.500014305114746

Token 4: ' get' (ID: 717)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.6917343139648438
    2. ' ' → logprob: -0.8167343139648438
    3. ' factorial' → logprob: -3.4417343139648438
    4. ' is' → logprob: -5.316734313964844
    5. ' ' → logprob: -5.941734313964844
    6. ' chain' → logprob: -6.191734313964844
    7. '_' → logprob: -6.316734313964844
    8. ' space' → logprob: -6.441734313964844
    9. ' iter' → logprob: -6.816734313964844
    10. ' map' → logprob: -6.816734313964844

Token 5: '_integer' (ID: 82911)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02658962458372116
    2. ' _' → logprob: -4.276589393615723
    3. '_per' → logprob: -6.401589393615723
    4. ' itertools' → logprob: -6.526589393615723
    5. '_iterator' → logprob: -7.151589393615723
    6. '_next' → logprob: -7.276589393615723
    7. '_com' → logprob: -7.401589393615723
    8. '_s' → logprob: -7.526589393615723
    9. '_all' → logprob: -7.776589393615723
    10. '_product' → logprob: -7.776589393615723

Token 6: '_input' (ID: 12507)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.41308099031448364
    2. '(' → logprob: -1.9130809307098389
    3. '_' → logprob: -2.538080930709839
    4. '_s' → logprob: -3.163080930709839
    5. '_values' → logprob: -3.538080930709839
    6. '_value' → logprob: -4.913081169128418
    7. ' ' → logprob: -5.913081169128418
    8. '_parts' → logprob: -6.038081169128418
    9. '_range' → logprob: -6.163081169128418
    10. '```' → logprob: -6.538081169128418

Token 7: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -9.031157969729975e-05
    2. ' (' → logprob: -10.750090599060059
    3. '("("' → logprob: -11.250090599060059
    4. '<|end|>' → logprob: -11.250090599060059
    5. '```' → logprob: -11.625090599060059
    6. '(
' → logprob: -12.125090599060059
    7. '_' → logprob: -12.375090599060059
    8. '(user' → logprob: -12.625090599060059
    9. '[' → logprob: -13.000090599060059
    10. '()' → logprob: -13.000090599060059

Token 8: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5400734543800354
    2. '():' → logprob: -1.5400733947753906
    3. ':' → logprob: -1.6650733947753906
    4. '```' → logprob: -5.665073394775391
    5. ' ' → logprob: -6.415073394775391
    6. ' :' → logprob: -6.540073394775391
    7. '(' → logprob: -6.540073394775391
    8. ' ():' → logprob: -7.040073394775391
    9. ':return' → logprob: -7.040073394775391
    10. ' return' → logprob: -7.290073394775391

Token 9: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030754953622817993
    2. 'return' (adapté à ' return') → logprob: -4.405755043029785
    3. 'try' → logprob: -5.405755043029785
    4. ' return' → logprob: -5.405755043029785
    5. ' try' → logprob: -5.405755043029785
    6. ' ' → logprob: -5.905755043029785
    7. '    ' → logprob: -7.655755043029785
    8. ' while' → logprob: -8.280755043029785
    9. '  ' → logprob: -8.280755043029785
    10. 'n' → logprob: -8.655755043029785

Token 10: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.011630082502961159
    2. 'int' → logprob: -4.511630058288574
    3. ' ' → logprob: -7.511630058288574
    4. '  ' → logprob: -11.261630058288574
    5. ' input' → logprob: -11.636630058288574
    6. '(int' → logprob: -12.136630058288574
    7. 'input' → logprob: -13.011630058288574
    8. '<int' → logprob: -13.386630058288574
    9. '0' → logprob: -14.136630058288574
    10. ' ' → logprob: -14.261630058288574

Token 11: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004092408809810877
    2. '(input' → logprob: -6.004092216491699
    3. '('' → logprob: -6.504092216491699
    4. '()' → logprob: -10.7540922164917
    5. '("("' → logprob: -11.2540922164917
    6. ' (' → logprob: -11.7540922164917
    7. '(open' → logprob: -12.0040922164917
    8. '(
' → logprob: -12.2540922164917
    9. '(()' → logprob: -12.2540922164917
    10. '((' → logprob: -12.3790922164917

Token 12: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18342232704162598
    2. '()' → logprob: -1.933422327041626
    3. '())' → logprob: -4.183422088623047
    4. '('' → logprob: -5.558422088623047
    5. '("("' → logprob: -6.683422088623047
    6. ')' → logprob: -6.933422088623047
    7. '(()' → logprob: -7.433422088623047
    8. '(""))' → logprob: -7.683422088623047
    9. '()))' → logprob: -8.808422088623047
    10. '(
' → logprob: -8.933422088623047

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24634863436222076
    2. '(' → logprob: -2.9963486194610596
    3. '\n' → logprob: -3.4963486194610596
    4. 'd' → logprob: -3.8713486194610596
    5. '\' → logprob: -3.9963486194610596
    6. 'n' → logprob: -3.9963486194610596
    7. '

' → logprob: -4.121348857879639
    8. 'x' → logprob: -4.246348857879639
    9. '
' → logprob: -4.496348857879639
    10. ')' → logprob: -5.371348857879639

Token 14: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.3201429843902588
    2. ' calculate' → logprob: -1.6951429843902588
    3. ' factorial' → logprob: -2.820142984390259
    4. ' generate' → logprob: -5.32014274597168
    5. ' main' → logprob: -5.57014274597168
    6. ' find' → logprob: -5.57014274597168
    7. ' compute' → logprob: -5.69514274597168
    8. ' space' → logprob: -5.69514274597168
    9. ' process' → logprob: -6.07014274597168
    10. ' _' → logprob: -6.44514274597168

Token 15: '_list' (ID: 4162)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -1.0042084455490112
    2. '_integer' → logprob: -1.0042084455490112
    3. '_list' → logprob: -1.8792084455490112
    4. '_' → logprob: -2.629208564758301
    5. '_factor' → logprob: -5.254208564758301
    6. '_array' → logprob: -5.504208564758301
    7. '_range' → logprob: -5.629208564758301
    8. ' _' → logprob: -5.629208564758301
    9. '_user' → logprob: -5.879208564758301
    10. '_product' → logprob: -6.379208564758301

Token 16: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45261630415916443
    2. '(' → logprob: -1.4526163339614868
    3. '_input' → logprob: -2.5776162147521973
    4. '```' → logprob: -4.952616214752197
    5. '_a' → logprob: -5.702616214752197
    6. '_of' → logprob: -5.827616214752197
    7. '_view' → logprob: -5.952616214752197
    8. '_data' → logprob: -6.202616214752197
    9. '()' → logprob: -6.452616214752197
    10. '_completion' → logprob: -6.452616214752197

Token 17: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.23312929272651672
    2. '()' → logprob: -1.6081292629241943
    3. '(' → logprob: -5.233129501342773
    4. '()">' → logprob: -7.608129501342773
    5. '()>' → logprob: -7.733129501342773
    6. '```' → logprob: -8.608129501342773
    7. '()[' → logprob: -9.108129501342773
    8. '()(' → logprob: -9.233129501342773
    9. '()?>' → logprob: -9.358129501342773
    10. '`()' → logprob: -9.358129501342773

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20914021134376526
    2. '()' → logprob: -1.8341401815414429
    3. '(' → logprob: -4.209140300750732
    4. 'return' → logprob: -5.209140300750732
    5. '[]' → logprob: -5.584140300750732
    6. ' return' → logprob: -6.209140300750732
    7. '[' → logprob: -6.834140300750732
    8. '    ' → logprob: -6.959140300750732
    9. ' ()' → logprob: -8.834139823913574
    10. ')' → logprob: -9.334139823913574

Token 19: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -1.3060290813446045
    2. 'return' (adapté à ' return') → logprob: -1.4310290813446045
    3. 'list' → logprob: -1.5560290813446045
    4. '   ' → logprob: -1.8060290813446045
    5. ' return' → logprob: -2.1810290813446045
    6. '[]' → logprob: -7.806029319763184
    7. 'map' → logprob: -7.806029319763184
    8. ' map' → logprob: -8.056029319763184
    9. 'input' → logprob: -8.556029319763184
    10. 'lst' → logprob: -8.931029319763184

Token 20: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5767896771430969
    2. 'list' → logprob: -0.8267896771430969
    3. '[list' → logprob: -7.326789855957031
    4. '[' → logprob: -9.076789855957031
    5. ' [' → logprob: -10.076789855957031
    6. '(list' → logprob: -10.951789855957031
    7. ' ' → logprob: -12.076789855957031
    8. '	list' → logprob: -12.701789855957031
    9. '   ' → logprob: -13.076789855957031
    10. '[]' → logprob: -13.576789855957031

Token 21: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.004108204040676355
    2. '(' → logprob: -5.504108428955078
    3. '(int' → logprob: -10.879108428955078
    4. '(input' → logprob: -12.129108428955078
    5. ' map' → logprob: -13.254108428955078
    6. '()' → logprob: -13.754108428955078
    7. 'map' → logprob: -13.879108428955078
    8. '(range' → logprob: -15.004108428955078
    9. '	map' → logprob: -15.004108428955078
    10. '(it' → logprob: -15.504108428955078

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0011412883177399635
    2. '(' → logprob: -7.37614107131958
    3. 'int' → logprob: -7.62614107131958
    4. '<int' → logprob: -11.376141548156738
    5. '=int' → logprob: -12.001141548156738
    6. ',int' → logprob: -12.876141548156738
    7. ' int' → logprob: -13.376141548156738
    8. '(
' → logprob: -13.501141548156738
    9. ')' → logprob: -13.876141548156738
    10. ' (' → logprob: -14.251141548156738

Token 23: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08513905107975006
    2. ',input' → logprob: -3.085139036178589
    3. 'input' → logprob: -3.710139036178589
    4. '(' → logprob: -5.085139274597168
    5. ',' → logprob: -5.835139274597168
    6. ' input' → logprob: -6.460139274597168
    7. ' (' → logprob: -7.960139274597168
    8. '))' → logprob: -9.085139274597168
    9. ' ,' → logprob: -9.210139274597168
    10. ')' → logprob: -9.460139274597168

Token 24: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06994465738534927
    2. ' input' → logprob: -2.6949446201324463
    3. ',input' → logprob: -12.319944381713867
    4. '(input' → logprob: -13.944944381713867
    5. '   ' → logprob: -14.194944381713867
    6. ' ' → logprob: -14.319944381713867
    7. '	input' → logprob: -14.944944381713867
    8. '<input' → logprob: -15.069944381713867
    9. '```' → logprob: -15.069944381713867
    10. '=input' → logprob: -15.194944381713867

Token 25: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00014358828775584698
    2. '()' → logprob: -9.125144004821777
    3. ' ().' → logprob: -11.125144004821777
    4. ')' → logprob: -12.500144004821777
    5. '()))' → logprob: -12.875144004821777
    6. '.split' → logprob: -12.875144004821777
    7. '(' → logprob: -12.875144004821777
    8. '())' → logprob: -13.375144004821777
    9. ' .' → logprob: -13.375144004821777
    10. '('').' → logprob: -14.000144004821777

Token 26: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006725199054926634
    2. 'strip' → logprob: -5.006725311279297
    3. 'rstrip' → logprob: -12.381725311279297
    4. ' split' → logprob: -12.631725311279297
    5. 'spl' → logprob: -13.131725311279297
    6. ' strip' → logprob: -15.881725311279297
    7. '(split' → logprob: -16.381725311279297
    8. ')' → logprob: -16.381725311279297
    9. 's' → logprob: -17.006725311279297
    10. ' ' → logprob: -18.756725311279297

Token 27: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5985193848609924
    2. '()))' → logprob: -0.8485193848609924
    3. '()' → logprob: -4.098519325256348
    4. ')))' → logprob: -5.848519325256348
    5. '(' → logprob: -6.723519325256348
    6. ')' → logprob: -7.223519325256348
    7. '())' → logprob: -7.348519325256348
    8. '())))' → logprob: -8.348519325256348
    9. '()))
' → logprob: -11.598519325256348
    10. ''))' → logprob: -12.348519325256348

Token 28: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4913114607334137
    2. 'def' → logprob: -1.1163114309310913
    3. 'n' → logprob: -4.116311550140381
    4. '
' → logprob: -4.616311550140381
    5. '\' → logprob: -4.741311550140381
    6. 'for' → logprob: -4.741311550140381
    7. '' → logprob: -5.366311550140381
    8. '#' → logprob: -5.866311550140381
    9. '

' → logprob: -5.866311550140381
    10. 'de' → logprob: -6.741311550140381

Token 29: ' generate' (ID: 10419)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -1.303797721862793
    2. ' count' → logprob: -1.428797721862793
    3. ' main' → logprob: -1.928797721862793
    4. ' get' → logprob: -2.053797721862793
    5. ' generate' → logprob: -2.678797721862793
    6. 'count' → logprob: -3.803797721862793
    7. ' permutations' → logprob: -4.178797721862793
    8. ' itertools' → logprob: -4.428797721862793
    9. ' calculate' → logprob: -4.553797721862793
    10. ' product' → logprob: -4.553797721862793

Token 30: '_range' (ID: 22022)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015964573249220848
    2. '_per' → logprob: -4.640964508056641
    3. '_com' → logprob: -5.265964508056641
    4. '(' → logprob: -7.765964508056641
    5. '_s' → logprob: -9.51596450805664
    6. '_p' → logprob: -9.89096450805664
    7. '_sub' → logprob: -9.89096450805664
    8. '_comb' → logprob: -9.89096450805664
    9. ' _' → logprob: -10.14096450805664
    10. '_space' → logprob: -10.64096450805664

Token 31: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004102623555809259
    2. '(range' → logprob: -6.50410270690918
    3. '("("' → logprob: -7.62910270690918
    4. '(n' → logprob: -7.75410270690918
    5. '_range' → logprob: -8.25410270690918
    6. 's' → logprob: -8.25410270690918
    7. '_' → logprob: -8.50410270690918
    8. '('' → logprob: -8.50410270690918
    9. '(start' → logprob: -9.12910270690918
    10. ' (' → logprob: -9.37910270690918

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.028394687920808792
    2. ')' → logprob: -3.7783946990966797
    3. ',' → logprob: -6.52839469909668
    4. ')):' → logprob: -7.15339469909668
    5. '(' → logprob: -7.40339469909668
    6. '(n' → logprob: -7.52839469909668
    7. ' ):' → logprob: -7.65339469909668
    8. '))' → logprob: -7.65339469909668
    9. '):
' → logprob: -8.40339469909668
    10. '_' → logprob: -8.90339469909668

Token 33: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0941990613937378
    2. ':' → logprob: -1.3441990613937378
    3. '(range' → logprob: -1.4691990613937378
    4. '   ' → logprob: -2.7191991806030273
    5. 'range' → logprob: -2.8441991806030273
    6. '(n' → logprob: -3.5941991806030273
    7. ' range' → logprob: -4.969199180603027
    8. ':
' → logprob: -5.094199180603027
    9. ' :' → logprob: -5.344199180603027
    10. 'return' → logprob: -7.094199180603027

Token 34: ' return' (ID: 622)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3749964237213135
    2. 'range' → logprob: -1.8749964237213135
    3. ' return' → logprob: -2.1249964237213135
    4. '   ' → logprob: -3.7499964237213135
    5. 'return' (adapté à ' return') → logprob: -4.124996185302734
    6. '```' → logprob: -9.999996185302734
    7. '(range' → logprob: -10.124996185302734
    8. '	range' → logprob: -10.749996185302734
    9. ' ' → logprob: -10.874996185302734
    10. 'r' → logprob: -10.999996185302734

Token 35: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2521331012248993
    2. 'range' → logprob: -1.5021331310272217
    3. '(range' → logprob: -9.7521333694458
    4. ' list' → logprob: -10.0021333694458
    5. ' iter' → logprob: -10.6271333694458
    6. '	range' → logprob: -10.6271333694458
    7. ' ' → logprob: -11.0021333694458
    8. 'iter' → logprob: -12.2521333694458
    9. ' xrange' → logprob: -12.2521333694458
    10. 'list' → logprob: -12.5021333694458

Token 36: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0336565300822258
    2. '(n' → logprob: -3.408656597137451
    3. '((' → logprob: -12.658656120300293
    4. ' (' → logprob: -12.783656120300293
    5. '(
' → logprob: -14.283656120300293
    6. '(s' → logprob: -14.533656120300293
    7. 's' → logprob: -14.783656120300293
    8. '(i' → logprob: -14.783656120300293
    9. '(start' → logprob: -14.908656120300293
    10. '1' → logprob: -14.908656120300293

Token 37: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011185461189597845
    2. '1' → logprob: -7.0011186599731445
    3. ' n' → logprob: -8.876118659973145
    4. '0' → logprob: -10.251118659973145
    5. ')n' → logprob: -10.626118659973145
    6. ')' → logprob: -12.501118659973145
    7. '   ' → logprob: -13.376118659973145
    8. '	n' → logprob: -14.251118659973145
    9. '2' → logprob: -14.876118659973145
    10. '(n' → logprob: -15.251118659973145

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017155165551230311
    2. ',n' → logprob: -6.376715660095215
    3. ' ,' → logprob: -11.251715660095215
    4. 'n' → logprob: -16.3767147064209
    5. '1' → logprob: -16.7517147064209
    6. ',
' → logprob: -17.0017147064209
    7. '```' → logprob: -17.0017147064209
    8. '，' → logprob: -17.2517147064209
    9. '‌,' → logprob: -17.5017147064209
    10. ',num' → logprob: -18.3767147064209

Token 39: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4740912914276123
    2. 'n' → logprob: -0.9740912914276123
    3. ' ' → logprob: -11.849091529846191
    4. '	n' → logprob: -12.724091529846191
    5. ')n' → logprob: -12.849091529846191
    6. ' ' → logprob: -14.224091529846191
    7. ')' → logprob: -15.224091529846191
    8. '+' → logprob: -15.974091529846191
    9. '(n' → logprob: -16.224090576171875
    10. '```' → logprob: -16.349090576171875

Token 40: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06198561564087868
    2. ' +' → logprob: -2.811985731124878
    3. ')' → logprob: -11.061985969543457
    4. ' ' → logprob: -13.686985969543457
    5. ')+' → logprob: -15.436985969543457
    6. '+)' → logprob: -15.561985969543457
    7. '+n' → logprob: -15.561985969543457
    8. ' )' → logprob: -15.686985969543457
    9. '+
' → logprob: -16.06198501586914
    10. ' +
' → logprob: -16.43698501586914

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. ')' → logprob: -15.750003814697266
    4. '2' → logprob: -19.500003814697266
    5. '   ' → logprob: -20.000003814697266
    6. '```' → logprob: -20.125003814697266
    7. '۱' → logprob: -20.375003814697266
    8. ' )' → logprob: -21.625003814697266
    9. '１' → logprob: -22.250003814697266
    10. '১' → logprob: -22.625003814697266

Token 42: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.250000953674316
    3. ')
' → logprob: -15.500000953674316
    4. ')`' → logprob: -16.875
    5. '))' → logprob: -17.625
    6. ' ' → logprob: -18.125
    7. '`)' → logprob: -18.75
    8. '   ' → logprob: -18.75
    9. '}' → logprob: -19.0
    10. ')

' → logprob: -19.125

Token 43: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.009205336682498455
    2. 'd' → logprob: -5.259205341339111
    3. 'for' → logprob: -5.884205341339111
    4. '\' → logprob: -7.759205341339111
    5. 'n' → logprob: -8.509204864501953
    6. '#' → logprob: -8.759204864501953
    7. '```' → logprob: -8.884204864501953
    8. 'de' → logprob: -9.884204864501953
    9. '
' → logprob: -10.134204864501953
    10. '\n' → logprob: -10.384204864501953

Token 44: ' get' (ID: 717)
  Prédit: ' generate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.9397860765457153
    2. ' get' → logprob: -2.064785957336426
    3. ' itertools' → logprob: -2.314785957336426
    4. ' product' → logprob: -2.564785957336426
    5. ' permutations' → logprob: -2.689785957336426
    6. ' combine' → logprob: -3.064785957336426
    7. ' count' → logprob: -3.189785957336426
    8. ' calculate' → logprob: -3.439785957336426
    9. ' factorial' → logprob: -3.439785957336426
    10. ' cart' → logprob: -3.814785957336426

Token 45: '_per' (ID: 10938)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0013103485107422
    2. '_list' → logprob: -1.2513103485107422
    3. '_integer' → logprob: -1.2513103485107422
    4. '_range' → logprob: -3.876310348510742
    5. '_string' → logprob: -4.751310348510742
    6. '_factor' → logprob: -5.251310348510742
    7. '_sum' → logprob: -5.751310348510742
    8. '_max' → logprob: -6.251310348510742
    9. ' _' → logprob: -6.376310348510742
    10. '_s' → logprob: -6.376310348510742

Token 46: 'mut' (ID: 10522)
  Prédit: 'mut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -0.002304650843143463
    2. 'm' → logprob: -6.627304553985596
    3. 'mutation' → logprob: -7.877304553985596
    4. 'mu' → logprob: -8.252305030822754
    5. '```' → logprob: -9.002305030822754
    6. '_mut' → logprob: -9.752305030822754
    7. 'utations' → logprob: -9.877305030822754
    8. '_' → logprob: -10.877305030822754
    9. 'mute' → logprob: -10.877305030822754
    10. ' mutations' → logprob: -11.252305030822754

Token 47: 'ations' (ID: 929)
  Prédit: 'utations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utations' → logprob: -0.31511834263801575
    2. 'ations' → logprob: -1.3151183128356934
    3. 'utation' → logprob: -6.815118312835693
    4. 'ut' → logprob: -7.940118312835693
    5. 'ation' → logprob: -8.065118789672852
    6. 'at' → logprob: -10.065118789672852
    7. 'utions' → logprob: -10.190118789672852
    8. 'utat' → logprob: -12.190118789672852
    9. 'ulations' → logprob: -15.065118789672852
    10. 't' → logprob: -15.190118789672852

Token 48: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003490514063742012
    2. '_' → logprob: -9.750349044799805
    3. '("("' → logprob: -9.875349044799805
    4. ' (' → logprob: -10.500349044799805
    5. '(generate' → logprob: -10.875349044799805
    6. '((' → logprob: -11.000349044799805
    7. '('' → logprob: -11.125349044799805
    8. '(
' → logprob: -11.125349044799805
    9. '(range' → logprob: -11.375349044799805
    10. '<|end|>' → logprob: -11.500349044799805

Token 49: 'ng' (ID: 892)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15673263370990753
    2. ',' → logprob: -2.2817325592041016
    3. '):' → logprob: -3.7817325592041016
    4. '))' → logprob: -4.156732559204102
    5. 'ange' → logprob: -6.406732559204102
    6. ',)' → logprob: -7.031732559204102
    7. ')))' → logprob: -8.281732559204102
    8. ')):' → logprob: -8.281732559204102
    9. ')**' → logprob: -8.656732559204102
    10. 'e' → logprob: -9.156732559204102

Token 50: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7404032349586487
    2. '):' → logprob: -0.7404032349586487
    3. ',' → logprob: -3.115403175354004
    4. '))' → logprob: -6.990403175354004
    5. ')):' → logprob: -7.740403175354004
    6. '):
' → logprob: -8.990403175354004
    7. ' ):' → logprob: -9.865403175354004
    8. '   ' → logprob: -10.115403175354004
    9. ' )' → logprob: -10.240403175354004
    10. '),' → logprob: -10.490403175354004

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7520431280136108
    2. 'it' → logprob: -1.1270431280136108
    3. ' itertools' → logprob: -1.6270431280136108
    4. '(it' → logprob: -5.2520432472229
    5. 'list' → logprob: -7.2520432472229
    6. ' ' → logprob: -7.6270432472229
    7. ' return' → logprob: -8.002042770385742
    8. '    ' → logprob: -8.377042770385742
    9. ' list' → logprob: -8.502042770385742
    10. ' it' → logprob: -8.627042770385742

Token 52: ' return' (ID: 622)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.04257351532578468
    2. '   ' → logprob: -3.4175734519958496
    3. ' itertools' → logprob: -5.04257345199585
    4. 'return' (adapté à ' return') → logprob: -6.41757345199585
    5. 'list' → logprob: -7.91757345199585
    6. ' return' → logprob: -8.542573928833008
    7. ' it' → logprob: -9.542573928833008
    8. '(it' → logprob: -9.917573928833008
    9. ' ' → logprob: -10.167573928833008
    10. ' list' → logprob: -10.667573928833008

Token 53: ' list' (ID: 1562)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.25484469532966614
    2. ' itertools' → logprob: -2.2548446655273438
    3. 'list' → logprob: -2.3798446655273438
    4. ' list' → logprob: -3.6298446655273438
    5. ' it' → logprob: -7.629844665527344
    6. '   ' → logprob: -8.254844665527344
    7. '(it' → logprob: -8.754844665527344
    8. ' ' → logprob: -11.254844665527344
    9. 'iter' → logprob: -11.254844665527344
    10. '	it' → logprob: -11.504844665527344

Token 54: '(it' (ID: 29445)
  Prédit: '(it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(it' → logprob: -0.002485169330611825
    2. '(' → logprob: -6.002485275268555
    3. '(.' → logprob: -12.502485275268555
    4. '(iter' → logprob: -12.752485275268555
    5. 'it' → logprob: -14.377485275268555
    6. '(parent' → logprob: -14.752485275268555
    7. ' itertools' → logprob: -14.877485275268555
    8. '(
' → logprob: -15.627485275268555
    9. '(torch' → logprob: -15.627485275268555
    10. '(per' → logprob: -15.752485275268555

Token 55: 'ertools' (ID: 88385)
  Prédit: 'ertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ertools' → logprob: -0.0002087853499688208
    2. 'er' → logprob: -8.750208854675293
    3. 'ert' → logprob: -10.125208854675293
    4. 'tools' → logprob: -11.625208854675293
    5. 'erto' → logprob: -14.125208854675293
    6. 'r' → logprob: -15.500208854675293
    7. 'erol' → logprob: -16.750207901000977
    8. 'ertu' → logprob: -17.125207901000977
    9. 'ol' → logprob: -17.500207901000977
    10. 'ools' → logprob: -17.625207901000977

Token 56: '.per' (ID: 18361)
  Prédit: '.per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.per' → logprob: -0.0010444821091368794
    2. '.' → logprob: -7.001044273376465
    3. '.p' → logprob: -9.001044273376465
    4. '.groupby' → logprob: -13.501044273376465
    5. '.product' → logprob: -13.751044273376465
    6. ' .' → logprob: -13.876044273376465
    7. '.PERM' → logprob: -14.626044273376465
    8. '.pyplot' → logprob: -14.626044273376465
    9. '.python' → logprob: -14.876044273376465
    10. '.jupiter' → logprob: -14.876044273376465

Token 57: 'mut' (ID: 10522)
  Prédit: 'mut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -0.003345017321407795
    2. 'utations' → logprob: -5.753345012664795
    3. 'r' → logprob: -9.378345489501953
    4. 'ut' → logprob: -10.753345489501953
    5. '```' → logprob: -10.878345489501953
    6. ' mutations' → logprob: -11.003345489501953
    7. 'm' → logprob: -12.003345489501953
    8. 'mu' → logprob: -12.378345489501953
    9. '(mut' → logprob: -12.753345489501953
    10. '(' → logprob: -13.128345489501953

Token 58: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.009632128290832043
    2. 'at' → logprob: -5.384632110595703
    3. 'utations' → logprob: -5.509632110595703
    4. 't' → logprob: -7.009632110595703
    5. 'ut' → logprob: -10.884632110595703
    6. 'r' → logprob: -11.759632110595703
    7. 'lations' → logprob: -12.259632110595703
    8. ' at' → logprob: -12.884632110595703
    9. 'utions' → logprob: -13.009632110595703
    10. '   ' → logprob: -13.134632110595703

Token 59: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0030382012482732534
    2. '(' → logprob: -5.87803840637207
    3. '(range' → logprob: -8.87803840637207
    4. ')(' → logprob: -10.00303840637207
    5. ')' → logprob: -10.12803840637207
    6. ' (' → logprob: -12.75303840637207
    7. '((' → logprob: -13.50303840637207
    8. '(n' → logprob: -13.62803840637207
    9. '(
' → logprob: -14.25303840637207
    10. '(len' → logprob: -14.75303840637207

Token 60: 'ng' (ID: 892)
  Prédit: 'ng'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ng' → logprob: -0.00027706706896424294
    2. 'nge' → logprob: -8.500277519226074
    3. 'n' → logprob: -10.125277519226074
    4. 'ange' → logprob: -11.250277519226074
    5. 'ang' → logprob: -12.875277519226074
    6. 'нг' → logprob: -13.250277519226074
    7. '   ' → logprob: -13.250277519226074
    8. 'g' → logprob: -13.250277519226074
    9. ')' → logprob: -13.375277519226074
    10. 'rng' → logprob: -14.000277519226074

Token 61: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00978961680084467
    2. ')' → logprob: -4.63478946685791
    3. ',' → logprob: -11.13478946685791
    4. ')))' → logprob: -11.38478946685791
    5. '))
' → logprob: -12.75978946685791
    6. ' ))' → logprob: -12.88478946685791
    7. '),' → logprob: -13.63478946685791
    8. ' ' → logprob: -15.25978946685791
    9. '   ' → logprob: -15.38478946685791
    10. '()))' → logprob: -16.134790420532227

Token 62: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005126426927745342
    2. 'def' → logprob: -5.630126476287842
    3. '(
' → logprob: -7.255126476287842
    4. ')' → logprob: -7.755126476287842
    5. '(r' → logprob: -9.255125999450684
    6. '(def' → logprob: -9.380125999450684
    7. '```' → logprob: -10.005125999450684
    8. '[' → logprob: -10.130125999450684
    9. '()' → logprob: -10.755125999450684
    10. '#' → logprob: -10.880125999450684

Token 63: ' permutation' (ID: 135200)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3286077678203583
    2. ' calculate' → logprob: -1.9536077976226807
    3. ' get' → logprob: -2.4536077976226807
    4. ' generate' → logprob: -3.5786077976226807
    5. ' find' → logprob: -5.203607559204102
    6. ' combine' → logprob: -5.578607559204102
    7. ' factorial' → logprob: -5.828607559204102
    8. ' compute' → logprob: -6.078607559204102
    9. ' solve' → logprob: -6.578607559204102
    10. ' process' → logprob: -6.703607559204102

Token 64: '_to' (ID: 5089)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.27398207783699036
    2. '_s' → logprob: -1.523982048034668
    3. '(' → logprob: -4.398982048034668
    4. '(s' → logprob: -5.148982048034668
    5. '_count' → logprob: -6.148982048034668
    6. '_counts' → logprob: -8.148982048034668
    7. '_' → logprob: -8.523982048034668
    8. '_list' → logprob: -9.273982048034668
    9. ' s' → logprob: -9.273982048034668
    10. '_length' → logprob: -9.523982048034668

Token 65: '_list' (ID: 4162)
  Prédit: '_string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.20374001562595367
    2. '_list' → logprob: -1.7037400007247925
    3. '_strings' → logprob: -6.828740119934082
    4. '_str' → logprob: -7.328740119934082
    5. 'string' → logprob: -7.828740119934082
    6. '_' → logprob: -10.078740119934082
    7. 'list' → logprob: -10.203740119934082
    8. '_set' → logprob: -10.828740119934082
    9. '_lists' → logprob: -10.828740119934082
    10. '_array' → logprob: -10.953740119934082

Token 66: '_tuple' (ID: 53371)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009013376198709011
    2. '(per' → logprob: -5.5090131759643555
    3. '(lambda' → logprob: -5.7590131759643555
    4. '(p' → logprob: -7.1340131759643555
    5. '((' → logprob: -7.8840131759643555
    6. '(token' → logprob: -9.509013175964355
    7. '(n' → logprob: -9.759013175964355
    8. '(lst' → logprob: -9.884013175964355
    9. '("("' → logprob: -9.884013175964355
    10. '(paren' → logprob: -10.009013175964355

Token 67: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023250484839081764
    2. '((' → logprob: -4.398250579833984
    3. '(s' → logprob: -5.648250579833984
    4. 's' → logprob: -5.898250579833984
    5. '(p' → logprob: -6.148250579833984
    6. '(per' → logprob: -7.398250579833984
    7. '("("' → logprob: -8.273250579833984
    8. '('' → logprob: -8.398250579833984
    9. '(()' → logprob: -8.398250579833984
    10. '(_' → logprob: -8.898250579833984

Token 68: 'perm' (ID: 34794)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.41532421112060547
    2. 'perm' → logprob: -1.5403242111206055
    3. 'p' → logprob: -2.1653242111206055
    4. ')' → logprob: -5.4153242111206055
    5. '):' → logprob: -6.7903242111206055
    6. '_per' → logprob: -7.1653242111206055
    7. '(per' → logprob: -7.1653242111206055
    8. ' permutation' → logprob: -7.1653242111206055
    9. '_perm' → logprob: -7.1653242111206055
    10. 'pt' → logprob: -7.6653242111206055

Token 69: '):
' (ID: 1883)
  Prédit: 'utation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utation' → logprob: -0.009279634803533554
    2. 'utations' → logprob: -5.009279727935791
    3. ')' → logprob: -6.634279727935791
    4. '):
' → logprob: -7.634279727935791
    5. 'ut' → logprob: -7.884279727935791
    6. '):' → logprob: -8.259279251098633
    7. 'utable' → logprob: -10.259279251098633
    8. '()):
' → logprob: -11.259279251098633
    9. '[]):' → logprob: -11.384279251098633
    10. 'ute' → logprob: -11.759279251098633

Token 70: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.39600104093551636
    2. 'list' → logprob: -1.6460011005401611
    3. '(' → logprob: -2.896001100540161
    4. ' list' → logprob: -3.896001100540161
    5. '(list' → logprob: -4.021000862121582
    6. '[:]' → logprob: -4.146000862121582
    7. '(tuple' → logprob: -5.396000862121582
    8. '[]' → logprob: -5.521000862121582
    9. '[list' → logprob: -5.521000862121582
    10. ' [' → logprob: -5.646000862121582

Token 71: ' return' (ID: 622)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.03649561107158661
    2. '[' → logprob: -4.161495685577393
    3. '[list' → logprob: -4.786495685577393
    4. 'return' (adapté à ' return') → logprob: -5.286495685577393
    5. '(list' → logprob: -5.661495685577393
    6. ' list' → logprob: -6.161495685577393
    7. 'tuple' → logprob: -7.036495685577393
    8. '(tuple' → logprob: -9.036495208740234
    9. '[]' → logprob: -9.536495208740234
    10. '(' → logprob: -9.786495208740234

Token 72: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.14565229415893555
    2. ' list' → logprob: -2.2706522941589355
    3. '[list' → logprob: -4.0206522941589355
    4. '(list' → logprob: -5.0206522941589355
    5. 'tuple' → logprob: -5.8956522941589355
    6. '[' → logprob: -6.1456522941589355
    7. ' tuple' → logprob: -6.2706522941589355
    8. ' [' → logprob: -7.5206522941589355
    9. '(tuple' → logprob: -8.395652770996094
    10. '[]' → logprob: -9.645652770996094

Token 73: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.012889477424323559
    2. 'int' → logprob: -5.887889385223389
    3. 'perm' → logprob: -5.887889385223389
    4. 'tuple' → logprob: -6.012889385223389
    5. '*' → logprob: -6.137889385223389
    6. '(' → logprob: -7.512889385223389
    7. '(list' → logprob: -7.637889385223389
    8. 'elem' → logprob: -7.637889385223389
    9. ' list' → logprob: -8.262889862060547
    10. 'i' → logprob: -9.012889862060547

Token 74: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.134509021649137e-05
    2. 'perm' → logprob: -9.75006103515625
    3. '(p' → logprob: -13.87506103515625
    4. '(map' → logprob: -14.50006103515625
    5. '(tuple' → logprob: -14.87506103515625
    6. ' (' → logprob: -15.37506103515625
    7. '(per' → logprob: -15.75006103515625
    8. '(elem' → logprob: -16.00006103515625
    9. ')(' → logprob: -16.00006103515625
    10. '(x' → logprob: -16.25006103515625

Token 75: ')' (ID: 8)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31246528029441833
    2. ')' → logprob: -1.4374653100967407
    3. 'perm' → logprob: -3.562465190887451
    4. '(per' → logprob: -7.062465190887451
    5. '(p' → logprob: -7.187465190887451
    6. '())' → logprob: -7.687465190887451
    7. 'for' → logprob: -9.43746566772461
    8. '(x' → logprob: -9.68746566772461
    9. '(i' → logprob: -9.81246566772461
    10. 'per' → logprob: -10.18746566772461

Token 76: ' for' (ID: 395)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007104285527020693
    2. 'perm' → logprob: -5.632104396820068
    3. 'for' → logprob: -6.257104396820068
    4. '(x' → logprob: -7.632104396820068
    5. '(per' → logprob: -7.632104396820068
    6. ' for' → logprob: -8.00710391998291
    7. '(p' → logprob: -9.00710391998291
    8. '(tuple' → logprob: -10.38210391998291
    9. ',' → logprob: -11.00710391998291
    10. '(i' → logprob: -11.00710391998291

Token 77: ' x' (ID: 1215)
  Prédit: ' perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' perm' → logprob: -0.005283326841890812
    2. 'perm' → logprob: -5.255283355712891
    3. ' x' → logprob: -10.25528335571289
    4. ' permutations' → logprob: -12.38028335571289
    5. ' permutation' → logprob: -12.50528335571289
    6. 'x' → logprob: -12.88028335571289
    7. ' perms' → logprob: -13.88028335571289
    8. ' ' → logprob: -14.25528335571289
    9. 'per' → logprob: -14.63028335571289
    10. '(' → logprob: -14.63028335571289

Token 78: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5775433778762817
    2. ' in' → logprob: -0.8275433778762817
    3. '<|end|>' → logprob: -7.327543258666992
    4. 'perm' → logprob: -8.452543258666992
    5. '(x' → logprob: -8.577543258666992
    6. ')' → logprob: -9.202543258666992
    7. '<|end|>' → logprob: -9.452543258666992
    8. '(' → logprob: -9.452543258666992
    9. 'n' → logprob: -9.577543258666992
    10. '_in' → logprob: -10.577543258666992

Token 79: ' perm' (ID: 5961)
  Prédit: 'perm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perm' → logprob: -0.057691726833581924
    2. ' perm' → logprob: -2.932691812515259
    3. 'per' → logprob: -5.93269157409668
    4. '[' → logprob: -10.05769157409668
    5. ' permutations' → logprob: -10.30769157409668
    6. ' permutation' → logprob: -10.68269157409668
    7. 'it' → logprob: -10.93269157409668
    8. '   ' → logprob: -11.80769157409668
    9. ' itertools' → logprob: -11.93269157409668
    10. ' ' → logprob: -12.55769157409668

Token 80: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0631280168890953
    2. ')]' → logprob: -2.8131279945373535
    3. '()]' → logprob: -6.9381279945373535
    4. '])' → logprob: -9.313128471374512
    5. '])]' → logprob: -10.438128471374512
    6. ')' → logprob: -10.688128471374512
    7. ' ]' → logprob: -10.938128471374512
    8. '   ' → logprob: -11.063128471374512
    9. ']()' → logprob: -12.438128471374512
    10. ')])' → logprob: -12.688128471374512

Token 81: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8309010863304138
    2. '[' → logprob: -1.5809011459350586
    3. '<|end|>' → logprob: -1.8309011459350586
    4. ')' → logprob: -2.3309011459350586
    5. 'def' → logprob: -2.9559011459350586
    6. '()' → logprob: -4.705901145935059
    7. '(
' → logprob: -4.955901145935059
    8. '#' → logprob: -5.205901145935059
    9. ']' → logprob: -5.205901145935059
    10. '<|end|>' → logprob: -5.580901145935059

Token 82: ' index' (ID: 3472)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.08894295990467072
    2. ' flatten' → logprob: -3.2139430046081543
    3. ' get' → logprob: -4.088943004608154
    4. ' combine' → logprob: -4.963943004608154
    5. ' convert' → logprob: -5.088943004608154
    6. ' generate' → logprob: -5.713943004608154
    7. ' permutation' → logprob: -6.213943004608154
    8. ' is' → logprob: -6.338943004608154
    9. ' factorial' → logprob: -6.463943004608154
    10. ' filter' → logprob: -6.963943004608154

Token 83: '_in' (ID: 2267)
  Prédit: '_of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.15582403540611267
    2. '_' → logprob: -2.0308239459991455
    3. '(' → logprob: -5.280824184417725
    4. 'es' → logprob: -5.655824184417725
    5. '_s' → logprob: -6.780824184417725
    6. '_to' → logprob: -7.155824184417725
    7. 'of' → logprob: -7.905824184417725
    8. '_range' → logprob: -8.405823707580566
    9. '_in' → logprob: -8.530823707580566
    10. '_at' → logprob: -8.530823707580566

Token 84: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.02217453345656395
    2. 'list' → logprob: -4.02217435836792
    3. '_tuple' → logprob: -6.89717435836792
    4. '_array' → logprob: -7.77217435836792
    5. '<|end|>' → logprob: -7.77217435836792
    6. 's' → logprob: -8.147174835205078
    7. '_sequence' → logprob: -8.147174835205078
    8. '_range' → logprob: -8.272174835205078
    9. '_lists' → logprob: -8.397174835205078
    10. '_' → logprob: -8.647174835205078

Token 85: '(lst' (ID: 95688)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01131270732730627
    2. 's' → logprob: -4.886312484741211
    3. '(lst' → logprob: -6.136312484741211
    4. '(s' → logprob: -7.511312484741211
    5. '_of' → logprob: -8.636312484741211
    6. ' (' → logprob: -8.886312484741211
    7. '_list' → logprob: -9.136312484741211
    8. '(list' → logprob: -9.386312484741211
    9. '_' → logprob: -9.511312484741211
    10. '(_' → logprob: -10.261312484741211

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005032848101109266
    2. '(' → logprob: -6.505033016204834
    3. ' ,' → logprob: -6.880033016204834
    4. ')' → logprob: -7.005033016204834
    5. ',l' → logprob: -7.755033016204834
    6. ',index' → logprob: -8.630032539367676
    7. ',item' → logprob: -8.630032539367676
    8. 'of' → logprob: -9.380032539367676
    9. ',n' → logprob: -9.380032539367676
    10. ',p' → logprob: -9.755032539367676

Token 87: ' item' (ID: 2169)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.2126213312149048
    2. ' value' → logprob: -1.7126213312149048
    3. 'item' → logprob: -2.2126212120056152
    4. ' val' → logprob: -2.3376212120056152
    5. 'element' → logprob: -2.3376212120056152
    6. 'val' → logprob: -2.5876212120056152
    7. 'elem' → logprob: -3.2126212120056152
    8. ' item' → logprob: -3.3376212120056152
    9. 'x' → logprob: -3.8376212120056152
    10. ' element' → logprob: -4.087621212005615

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009952988475561142
    2. ')' → logprob: -4.884953022003174
    3. ' ):' → logprob: -6.884953022003174
    4. ',' → logprob: -7.009953022003174
    5. '):
' → logprob: -7.884953022003174
    6. ' )' → logprob: -11.009952545166016
    7. '=' → logprob: -12.384952545166016
    8. ' ' → logprob: -12.634952545166016
    9. '(' → logprob: -12.884952545166016
    10. ' ,' → logprob: -13.009952545166016

Token 89: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6493788361549377
    2. '   ' → logprob: -0.7743788361549377
    3. '    ' → logprob: -4.774378776550293
    4. ' lst' → logprob: -5.399378776550293
    5. ' ' → logprob: -6.399378776550293
    6. 'return' → logprob: -7.149378776550293
    7. ':' → logprob: -8.024378776550293
    8. ' 
' → logprob: -8.649378776550293
    9. ' :' → logprob: -8.899378776550293
    10. '    
' → logprob: -9.149378776550293

Token 90: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.26381972432136536
    2. 'return' (adapté à ' return') → logprob: -1.513819694519043
    3. ' lst' → logprob: -5.638819694519043
    4. '   ' → logprob: -5.763819694519043
    5. ' try' → logprob: -6.013819694519043
    6. 'try' → logprob: -6.888819694519043
    7. 'lst' → logprob: -7.263819694519043
    8. ' for' → logprob: -7.263819694519043
    9. 'for' → logprob: -8.513819694519043
    10. ' if' → logprob: -11.388819694519043

Token 91: ' lst' (ID: 33384)
  Prédit: ' lst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lst' → logprob: -0.0024762547109276056
    2. 'lst' → logprob: -6.002476215362549
    3. '(lst' → logprob: -15.502476692199707
    4. ' l' → logprob: -16.37747573852539
    5. ' ls' → logprob: -16.50247573852539
    6. ' len' → logprob: -17.25247573852539
    7. '_lst' → logprob: -17.50247573852539
    8. '.lst' → logprob: -17.62747573852539
    9. 'l' → logprob: -18.12747573852539
    10. ' ' → logprob: -18.12747573852539

Token 92: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.006898658815771341
    2. '.' → logprob: -5.006898880004883
    3. ' .' → logprob: -9.506898880004883
    4. '.find' → logprob: -10.131898880004883
    5. '.Index' → logprob: -10.381898880004883
    6. 'index' → logprob: -11.131898880004883
    7. '.count' → logprob: -12.381898880004883
    8. '.idx' → logprob: -13.006898880004883
    9. '().' → logprob: -13.131898880004883
    10. '.append' → logprob: -13.381898880004883

Token 93: '(item' (ID: 10016)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25196021795272827
    2. '(item' → logprob: -1.501960277557373
    3. '(
' → logprob: -11.501959800720215
    4. '('' → logprob: -12.376959800720215
    5. '(x' → logprob: -12.751959800720215
    6. ' (' → logprob: -12.876959800720215
    7. '(items' → logprob: -12.876959800720215
    8. '(

' → logprob: -13.376959800720215
    9. '((' → logprob: -13.501959800720215
    10. '("("' → logprob: -13.626959800720215

Token 94: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -14.125000953674316
    3. ')
' → logprob: -14.875000953674316
    4. ')}' → logprob: -16.750001907348633
    5. '))' → logprob: -16.875001907348633
    6. ')return' → logprob: -17.250001907348633
    7. '}' → logprob: -17.375001907348633
    8. '   ' → logprob: -18.500001907348633
    9. ')`' → logprob: -18.625001907348633
    10. '')' → logprob: -18.875001907348633

Token 95: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.534590482711792
    2. 'def' → logprob: -2.284590482711792
    3. '[' → logprob: -2.409590482711792
    4. '<|end|>' → logprob: -2.784590482711792
    5. '#' → logprob: -3.034590482711792
    6. '_' → logprob: -3.409590482711792
    7. ')' → logprob: -3.409590482711792
    8. '
' → logprob: -4.409590721130371
    9. '(
' → logprob: -4.909590721130371
    10. ' ' → logprob: -5.159590721130371

Token 96: ' abs' (ID: 8443)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.023404456675052643
    2. ' find' → logprob: -4.398404598236084
    3. ' is' → logprob: -6.148404598236084
    4. ' get' → logprob: -6.148404598236084
    5. ' factorial' → logprob: -6.148404598236084
    6. ' check' → logprob: -7.273404598236084
    7. ' generate' → logprob: -7.273404598236084
    8. ' calculate' → logprob: -7.273404598236084
    9. 'main' → logprob: -8.023404121398926
    10. ' count' → logprob: -8.273404121398926

Token 97: '_difference' (ID: 123771)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6372186541557312
    2. 'ence' → logprob: -2.137218713760376
    3. '()' → logprob: -2.137218713760376
    4. 'ent' → logprob: -3.137218713760376
    5. '_' → logprob: -3.762218713760376
    6. '_value' → logprob: -3.762218713760376
    7. '(x' → logprob: -3.762218713760376
    8. 'ol' → logprob: -4.137218475341797
    9. '_val' → logprob: -4.262218475341797
    10. '(value' → logprob: -4.262218475341797

Token 98: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03682979568839073
    2. '(a' → logprob: -3.411829710006714
    3. '(x' → logprob: -5.911829948425293
    4. ' (' → logprob: -8.911829948425293
    5. '_' → logprob: -9.411829948425293
    6. '(lst' → logprob: -9.786829948425293
    7. '(_' → logprob: -10.411829948425293
    8. '(n' → logprob: -11.036829948425293
    9. '(item' → logprob: -11.036829948425293
    10. '(_)' → logprob: -11.161829948425293

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033020011615008116
    2. ' ,' → logprob: -6.628302097320557
    3. ')' → logprob: -6.753302097320557
    4. ',b' → logprob: -7.503302097320557
    5. ',a' → logprob: -8.878301620483398
    6. ',
' → logprob: -10.253301620483398
    7. 'a' → logprob: -10.753301620483398
    8. '(a' → logprob: -11.503301620483398
    9. ',)' → logprob: -11.878301620483398
    10. '(' → logprob: -12.128301620483398

Token 100: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20141616463661194
    2. ' b' → logprob: -1.7014161348342896
    3. ')' → logprob: -14.326416015625
    4. ')b' → logprob: -14.451416015625
    5. ' ' → logprob: -14.701416015625
    6. '   ' → logprob: -14.826416015625
    7. '	b' → logprob: -15.451416015625
    8. '    ' → logprob: -16.201416015625
    9. '<|end|>' → logprob: -16.201416015625
    10. '```' → logprob: -16.576416015625

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003387787379324436
    2. ')' → logprob: -5.753387928009033
    3. '):
' → logprob: -8.503387451171875
    4. ' ):' → logprob: -12.253387451171875
    5. ':' → logprob: -14.253387451171875
    6. '):
' → logprob: -15.128387451171875
    7. ')：' → logprob: -15.628387451171875
    8. ')=' → logprob: -16.003387451171875
    9. '(a' → logprob: -16.128387451171875
    10. ',' → logprob: -16.128387451171875

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6272236108779907
    2. ' return' → logprob: -1.3772236108779907
    3. ' abs' → logprob: -1.6272236108779907
    4. 'abs' → logprob: -4.252223491668701
    5. 'return' → logprob: -5.877223491668701
    6. '    ' → logprob: -9.37722396850586
    7. '(abs' → logprob: -10.25222396850586
    8. ' ' → logprob: -12.25222396850586
    9. '	return' → logprob: -12.37722396850586
    10. ')' → logprob: -13.12722396850586

Token 103: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8305928111076355
    2. 'abs' → logprob: -0.8305928111076355
    3. ' return' → logprob: -2.5805928707122803
    4. ' abs' → logprob: -3.3305928707122803
    5. '   ' → logprob: -4.080592632293701
    6. '	return' → logprob: -11.95559310913086
    7. '
' → logprob: -12.33059310913086
    8. ' ' → logprob: -12.45559310913086
    9. '(abs' → logprob: -13.08059310913086
    10. '    ' → logprob: -13.45559310913086

Token 104: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.20141372084617615
    2. 'abs' → logprob: -1.7014137506484985
    3. '(abs' → logprob: -14.826414108276367
    4. ' a' → logprob: -16.701414108276367
    5. 'a' → logprob: -17.326414108276367
    6. ' ' → logprob: -17.826414108276367
    7. '.abs' → logprob: -18.451414108276367
    8. ' ' → logprob: -18.576414108276367
    9. '   ' → logprob: -19.826414108276367
    10. '_abs' → logprob: -20.076414108276367

Token 105: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759486556053162
    2. '(a' → logprob: -0.8259486556053162
    3. '(
' → logprob: -12.950948715209961
    4. '((' → logprob: -13.075948715209961
    5. '(b' → logprob: -13.325948715209961
    6. 'a' → logprob: -13.575948715209961
    7. '(abs' → logprob: -14.200948715209961
    8. '(ab' → logprob: -15.075948715209961
    9. '(A' → logprob: -15.450948715209961
    10. '(

' → logprob: -15.825948715209961

Token 106: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.15364763140678406
    2. ' -' → logprob: -2.0286476612091064
    3. '-b' → logprob: -4.528647422790527
    4. ' ' → logprob: -9.403647422790527
    5. ',' → logprob: -11.153647422790527
    6. ' b' → logprob: -11.403647422790527
    7. 'b' → logprob: -12.403647422790527
    8. ',b' → logprob: -12.903647422790527
    9. ')' → logprob: -13.528647422790527
    10. ' ,' → logprob: -15.028647422790527

Token 107: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01416350994259119
    2. ' b' → logprob: -4.264163494110107
    3. ')b' → logprob: -18.014163970947266
    4. '	b' → logprob: -18.139163970947266
    5. '   ' → logprob: -18.889163970947266
    6. ' ' → logprob: -19.264163970947266
    7. ' б' → logprob: -20.264163970947266
    8. '    ' → logprob: -21.139163970947266
    9. '>b' → logprob: -21.139163970947266
    10. ')' → logprob: -21.389163970947266

Token 108: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ')
' → logprob: -13.875000953674316
    3. ' )' → logprob: -15.625000953674316
    4. '<|end|>' → logprob: -17.875001907348633
    5. ')return' → logprob: -18.250001907348633
    6. '))' → logprob: -18.500001907348633
    7. '}' → logprob: -18.625001907348633
    8. '),' → logprob: -18.750001907348633
    9. ')}' → logprob: -19.500001907348633
    10. ')

' → logprob: -19.625001907348633

Token 109: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6579065918922424
    2. '<|end|>' → logprob: -1.5329065322875977
    3. '#' → logprob: -2.7829065322875977
    4. ')' → logprob: -2.9079065322875977
    5. '(' → logprob: -2.9079065322875977
    6. '[' → logprob: -3.0329065322875977
    7. 'a' → logprob: -5.032906532287598
    8. '.' → logprob: -5.157906532287598
    9. '_' → logprob: -5.407906532287598
    10. '*' → logprob: -5.407906532287598

Token 110: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.0114823579788208
    2. 'calculate' → logprob: -2.0114822387695312
    3. 'sum' → logprob: -2.3864822387695312
    4. 'find' → logprob: -2.5114822387695312
    5. 'is' → logprob: -2.7614822387695312
    6. ' main' → logprob: -2.8864822387695312
    7. 'max' → logprob: -3.2614822387695312
    8. 'count' → logprob: -3.6364822387695312
    9. ' find' → logprob: -3.8864822387695312
    10. 'check' → logprob: -4.261482238769531

Token 111: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004318433813750744
    2. '(' → logprob: -5.5043182373046875
    3. '()' → logprob: -8.754318237304688
    4. '_' → logprob: -9.879318237304688
    5. '():
' → logprob: -11.129318237304688
    6. '(:' → logprob: -12.379318237304688
    7. '(":' → logprob: -12.504318237304688
    8. ' ():' → logprob: -12.629318237304688
    9. ':' → logprob: -13.004318237304688
    10. '(_:' → logprob: -15.254318237304688

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5522881150245667
    2. 'n' → logprob: -1.5522880554199219
    3. ' n' → logprob: -1.5522880554199219
    4. '
' → logprob: -8.427288055419922
    5. '    
' → logprob: -8.427288055419922
    6. '	n' → logprob: -9.052288055419922
    7. '```' → logprob: -9.052288055419922
    8. '(n' → logprob: -9.552288055419922
    9. ',n' → logprob: -11.177288055419922
    10. ' 
' → logprob: -11.427288055419922

Token 113: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.08194248378276825
    2. '   ' → logprob: -3.081942558288574
    3. ' n' → logprob: -3.456942558288574
    4. 'N' → logprob: -7.206942558288574
    5. 't' → logprob: -8.831942558288574
    6. ' N' → logprob: -9.956942558288574
    7. ' ' → logprob: -10.206942558288574
    8. '```' → logprob: -10.206942558288574
    9. 'a' → logprob: -10.456942558288574
    10. 'num' → logprob: -10.456942558288574

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015061709564179182
    2. '=' → logprob: -6.501506328582764
    3. ' =
' → logprob: -13.126505851745605
    4. ' ' → logprob: -13.876505851745605
    5. '   ' → logprob: -15.501505851745605
    6. ',' → logprob: -16.376506805419922
    7. ' =)' → logprob: -16.376506805419922
    8. 'space' → logprob: -16.626506805419922
    9. ' ,' → logprob: -16.626506805419922
    10. '    ' → logprob: -16.751506805419922

Token 115: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.20144276320934296
    2. 'get' → logprob: -1.7014427185058594
    3. ' int' → logprob: -10.82644271850586
    4. 'int' → logprob: -11.57644271850586
    5. '(get' → logprob: -16.57644271850586
    6. '=get' → logprob: -16.95144271850586
    7. '	get' → logprob: -16.95144271850586
    8. '_get' → logprob: -17.32644271850586
    9. '.get' → logprob: -18.57644271850586
    10. ')get' → logprob: -18.57644271850586

Token 116: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -5.5577775128767826e-06
    2. '_' → logprob: -12.500005722045898
    3. ' _' → logprob: -14.500005722045898
    4. '_INTEGER' → logprob: -14.750005722045898
    5. '_in' → logprob: -15.250005722045898
    6. '_int' → logprob: -15.250005722045898
    7. '_list' → logprob: -15.625005722045898
    8. '_number' → logprob: -16.2500057220459
    9. '_Integer' → logprob: -16.2500057220459
    10. '_string' → logprob: -17.1250057220459

Token 117: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00469451118260622
    2. '_' → logprob: -5.37969446182251
    3. ' _' → logprob: -10.254694938659668
    4. '```' → logprob: -11.629694938659668
    5. '(_' → logprob: -12.004694938659668
    6. '(' → logprob: -12.004694938659668
    7. '_value' → logprob: -12.379694938659668
    8. '_output' → logprob: -12.504694938659668
    9. '_inputs' → logprob: -13.129694938659668
    10. '_Input' → logprob: -13.504694938659668

Token 118: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.749814019713085e-06
    2. '()
' → logprob: -12.125006675720215
    3. ' ()' → logprob: -14.375006675720215
    4. '(' → logprob: -15.625006675720215
    5. '()

' → logprob: -15.750006675720215
    6. '())' → logprob: -16.12500762939453
    7. '()`' → logprob: -16.50000762939453
    8. '()<' → logprob: -17.25000762939453
    9. '().' → logprob: -18.25000762939453
    10. '()\' → logprob: -18.25000762939453

Token 119: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03242454677820206
    2. 'rng' → logprob: -4.282424449920654
    3. ' rng' → logprob: -4.907424449920654
    4. 'r' → logprob: -5.157424449920654
    5. 'ranges' → logprob: -6.532424449920654
    6. ' ' → logprob: -7.657424449920654
    7. 'lst' → logprob: -8.282424926757812
    8. 'nums' → logprob: -8.407424926757812
    9. 'range' → logprob: -8.407424926757812
    10. ' ranges' → logprob: -8.407424926757812

Token 120: ' p' (ID: 275)
  Prédit: 'rng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rng' → logprob: -0.04925178736448288
    2. 'nums' → logprob: -4.049251556396484
    3. 'ranges' → logprob: -5.174251556396484
    4. 'numbers' → logprob: -5.299251556396484
    5. 'lst' → logprob: -5.549251556396484
    6. 'range' → logprob: -5.799251556396484
    7. 'r' → logprob: -5.924251556396484
    8. 'arr' → logprob: -6.049251556396484
    9. '   ' → logprob: -6.174251556396484
    10. ' rng' → logprob: -6.799251556396484

Token 121: '_list' (ID: 4162)
  Prédit: 'erm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'erm' → logprob: -0.29681405425071716
    2. 'erms' → logprob: -1.7968140840530396
    3. 'er' → logprob: -3.17181396484375
    4. 'ermut' → logprob: -3.42181396484375
    5. 'r' → logprob: -4.92181396484375
    6. ' =' → logprob: -4.92181396484375
    7. '=' → logprob: -7.17181396484375
    8. 'rng' → logprob: -8.29681396484375
    9. 'range' → logprob: -8.67181396484375
    10. '_range' → logprob: -9.17181396484375

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1606794148683548
    2. '=' → logprob: -1.9106794595718384
    3. 's' → logprob: -8.035679817199707
    4. '(' → logprob: -10.035679817199707
    5. ',' → logprob: -10.285679817199707
    6. '()' → logprob: -10.410679817199707
    7. '=[]' → logprob: -11.910679817199707
    8. '_' → logprob: -12.285679817199707
    9. ')' → logprob: -12.535679817199707
    10. '   ' → logprob: -14.035679817199707

Token 123: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.6329493522644043
    2. 'get' → logprob: -0.7579493522644043
    3. '(get' → logprob: -8.507949829101562
    4. '[get' → logprob: -9.757949829101562
    5. 'generate' → logprob: -10.382949829101562
    6. '=get' → logprob: -11.257949829101562
    7. ' generate' → logprob: -11.382949829101562
    8. '	get' → logprob: -11.882949829101562
    9. ' list' → logprob: -12.507949829101562
    10. ' [' → logprob: -12.632949829101562

Token 124: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.7432603272027336e-06
    2. '_per' → logprob: -14.250001907348633
    3. '_' → logprob: -14.500001907348633
    4. 'list' → logprob: -15.000001907348633
    5. '_line' → logprob: -16.875001907348633
    6. ' _' → logprob: -17.500001907348633
    7. '```' → logprob: -17.875001907348633
    8. '_lists' → logprob: -18.000001907348633
    9. ')_' → logprob: -18.125001907348633
    10. 'List' → logprob: -18.250001907348633

Token 125: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.531315314830863e-06
    2. '_inputs' → logprob: -13.375003814697266
    3. 'input' → logprob: -14.500003814697266
    4. '_output' → logprob: -14.625003814697266
    5. '_list' → logprob: -15.000003814697266
    6. '_' → logprob: -15.125003814697266
    7. '_INPUT' → logprob: -16.125003814697266
    8. '```' → logprob: -16.250003814697266
    9. '(' → logprob: -16.875003814697266
    10. 'Input' → logprob: -17.125003814697266

Token 126: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.491498531133402e-06
    2. '()
' → logprob: -11.625009536743164
    3. ' ()' → logprob: -15.625009536743164
    4. '()

' → logprob: -15.750009536743164
    5. '()`' → logprob: -16.625009536743164
    6. '())' → logprob: -16.625009536743164
    7. '(' → logprob: -17.000009536743164
    8. '()]' → logprob: -17.750009536743164
    9. '()
' → logprob: -17.875009536743164
    10. '().' → logprob: -17.875009536743164

Token 127: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010564089752733707
    2. '    
' → logprob: -6.01056432723999
    3. '
' → logprob: -6.13556432723999
    4. 'r' → logprob: -6.38556432723999
    5. '    ' → logprob: -7.26056432723999
    6. '[' → logprob: -7.76056432723999
    7. ' rng' → logprob: -7.88556432723999
    8. 'rng' → logprob: -7.88556432723999
    9. 'p' → logprob: -8.010563850402832
    10. 'for' → logprob: -8.385563850402832

Token 128: ' q' (ID: 2335)
  Prédit: 'rng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rng' → logprob: -0.1964321881532669
    2. 'r' → logprob: -2.696432113647461
    3. 'range' → logprob: -3.821432113647461
    4. 'ranges' → logprob: -4.446432113647461
    5. 'p' → logprob: -4.571432113647461
    6. 'all' → logprob: -4.696432113647461
    7. 'perm' → logprob: -4.821432113647461
    8. '   ' → logprob: -5.071432113647461
    9. 'for' → logprob: -5.446432113647461
    10. 'indices' → logprob: -5.446432113647461

Token 129: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.028640177100896835
    2. '=' → logprob: -4.403640270233154
    3. ' =' → logprob: -4.528640270233154
    4. '_' → logprob: -5.278640270233154
    5. '=_' → logprob: -9.903639793395996
    6. '_=' → logprob: -11.403639793395996
    7. '_lst' → logprob: -11.778639793395996
    8. '   ' → logprob: -12.153639793395996
    9. '=[]' → logprob: -12.153639793395996
    10. ' ' → logprob: -12.278639793395996

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014196664094925
    2. '=' → logprob: -1.701419711112976
    3. ' ' → logprob: -12.451419830322266
    4. '=get' → logprob: -13.201419830322266
    5. '   ' → logprob: -15.576419830322266
    6. '＝' → logprob: -16.576419830322266
    7. '=p' → logprob: -16.701419830322266
    8. '  ' → logprob: -16.951419830322266
    9. '    ' → logprob: -17.201419830322266
    10. 'p' → logprob: -17.576419830322266

Token 131: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.1602362096309662
    2. ' get' → logprob: -1.9102362394332886
    3. '(get' → logprob: -12.160236358642578
    4. '[get' → logprob: -12.535236358642578
    5. '=get' → logprob: -13.410236358642578
    6. '	get' → logprob: -13.785236358642578
    7. '.get' → logprob: -15.910236358642578
    8. ')get' → logprob: -15.910236358642578
    9. ' ' → logprob: -16.035236358642578
    10. '_get' → logprob: -16.410236358642578

Token 132: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.6166903151315637e-05
    2. 'list' → logprob: -11.375016212463379
    3. '_integer' → logprob: -12.500016212463379
    4. 'integer' → logprob: -14.125016212463379
    5. 'List' → logprob: -16.625015258789062
    6. '```' → logprob: -17.875015258789062
    7. 'int' → logprob: -18.250015258789062
    8. '_' → logprob: -18.500015258789062
    9. '_LIST' → logprob: -18.500015258789062
    10. '_array' → logprob: -18.875015258789062

Token 133: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0016012678388506174
    2. '_list' → logprob: -6.876601219177246
    3. 'input' → logprob: -7.501601219177246
    4. 'Input' → logprob: -11.501601219177246
    5. 'list' → logprob: -12.376601219177246
    6. 'int' → logprob: -14.751601219177246
    7. '入力' → logprob: -15.126601219177246
    8. '```' → logprob: -15.376601219177246
    9. '_INPUT' → logprob: -15.626601219177246
    10. 'INPUT' → logprob: -16.126602172851562

Token 134: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.837811088189483e-05
    2. '())' → logprob: -10.500068664550781
    3. '()
' → logprob: -10.875068664550781
    4. '()]' → logprob: -11.250068664550781
    5. '()>' → logprob: -12.875068664550781
    6. ' ()' → logprob: -13.750068664550781
    7. '()<' → logprob: -13.875068664550781
    8. '()}' → logprob: -14.250068664550781
    9. '()">' → logprob: -14.375068664550781
    10. '(' → logprob: -14.750068664550781

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.232489675283432
    2. 'rng' → logprob: -1.8574897050857544
    3. 'r' → logprob: -3.107489585876465
    4. 'range' → logprob: -5.982489585876465
    5. 'n' → logprob: -6.732489585876465
    6. 'p' → logprob: -7.232489585876465
    7. '    
' → logprob: -7.607489585876465
    8. '
' → logprob: -7.857489585876465
    9. ' rng' → logprob: -7.857489585876465
    10. ' ' → logprob: -8.607489585876465

Token 136: ' rng' (ID: 76666)
  Prédit: 'rng'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rng' (adapté à ' rng') → logprob: -0.010980025865137577
    2. 'r' → logprob: -4.885980129241943
    3. 'range' → logprob: -6.510980129241943
    4. '   ' → logprob: -7.510980129241943
    5. 'n' → logprob: -7.635980129241943
    6. 'p' → logprob: -8.260979652404785
    7. 'rn' → logprob: -8.760979652404785
    8. 'perm' → logprob: -9.260979652404785
    9. 'rang' → logprob: -9.760979652404785
    10. '    
' → logprob: -9.885979652404785

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033659763634204865
    2. '=' → logprob: -3.4086596965789795
    3. '(' → logprob: -11.408659934997559
    4. 's' → logprob: -14.158659934997559
    5. '_' → logprob: -14.408659934997559
    6. ' =(' → logprob: -14.783659934997559
    7. ')' → logprob: -14.908659934997559
    8. ' =)' → logprob: -15.283659934997559
    9. ' ' → logprob: -16.033658981323242
    10. '＝' → logprob: -16.283658981323242

Token 138: ' generate' (ID: 10419)
  Prédit: ' generate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' generate' → logprob: -0.030449729412794113
    2. 'generate' → logprob: -3.530449628829956
    3. '(generate' → logprob: -7.530449867248535
    4. ' range' → logprob: -8.780449867248535
    5. 'range' → logprob: -12.155449867248535
    6. '.generate' → logprob: -14.030449867248535
    7. '_generate' → logprob: -14.655449867248535
    8. ' list' → logprob: -14.780449867248535
    9. 'enerate' → logprob: -15.030449867248535
    10. ' generates' → logprob: -15.280449867248535

Token 139: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -1.8074162653647363e-05
    2. '_r' → logprob: -11.625018119812012
    3. 'range' → logprob: -12.125018119812012
    4. '_' → logprob: -12.750018119812012
    5. '_ranges' → logprob: -15.000018119812012
    6. ' _' → logprob: -15.875018119812012
    7. '(range' → logprob: -16.125017166137695
    8. '_rng' → logprob: -16.625017166137695
    9. '_(' → logprob: -17.250017166137695
    10. ' range' → logprob: -17.750017166137695

Token 140: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0021877337712794542
    2. '(' → logprob: -6.127187728881836
    3. ' (' → logprob: -13.377187728881836
    4. '(
' → logprob: -15.002187728881836
    5. ')(' → logprob: -15.377187728881836
    6. '<|end|>' → logprob: -15.377187728881836
    7. '```' → logprob: -16.377187728881836
    8. '((' → logprob: -16.877187728881836
    9. 'n' → logprob: -17.814687728881836
    10. '(noun' → logprob: -17.877187728881836

Token 141: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ')
' → logprob: -12.500004768371582
    3. ' )' → logprob: -14.125004768371582
    4. ')n' → logprob: -16.625003814697266
    5. '))' → logprob: -16.875003814697266
    6. ')

' → logprob: -17.375003814697266
    7. ')
' → logprob: -17.625003814697266
    8. '   ' → logprob: -17.750003814697266
    9. '())' → logprob: -18.375003814697266
    10. '()' → logprob: -18.625003814697266

Token 142: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6346073746681213
    2. '   ' → logprob: -1.3846073150634766
    3. 'per' → logprob: -1.6346073150634766
    4. 'perm' → logprob: -4.009607315063477
    5. 'all' → logprob: -5.759607315063477
    6. ' perms' → logprob: -6.509607315063477
    7. ' p' → logprob: -7.259607315063477
    8. '    
' → logprob: -8.134607315063477
    9. ' perm' → logprob: -8.509607315063477
    10. 'r' → logprob: -9.759607315063477

Token 143: ' permutations' (ID: 174595)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.1455727368593216
    2. 'p' → logprob: -2.6455726623535156
    3. 'perm' → logprob: -2.8955726623535156
    4. '   ' → logprob: -5.145572662353516
    5. 'all' → logprob: -5.895572662353516
    6. ' perms' → logprob: -7.895572662353516
    7. '    
' → logprob: -9.395572662353516
    8. ' permutations' → logprob: -10.270572662353516
    9. 'r' → logprob: -10.520572662353516
    10. 'pos' → logprob: -11.020572662353516

Token 144: '_tuple' (ID: 53371)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09919881075620651
    2. 's' → logprob: -2.849198818206787
    3. '=' → logprob: -3.349198818206787
    4. '(' → logprob: -7.224198818206787
    5. '_' → logprob: -7.474198818206787
    6. '_list' → logprob: -9.099198341369629
    7. '(s' → logprob: -12.349198341369629
    8. 'es' → logprob: -12.724198341369629
    9. '_lst' → logprob: -12.849198341369629
    10. ')' → logprob: -12.974198341369629

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1353202611207962
    2. '=' → logprob: -2.7603201866149902
    3. 's' → logprob: -2.7603201866149902
    4. ' s' → logprob: -11.260320663452148
    5. '=s' → logprob: -12.385320663452148
    6. ' ' → logprob: -13.010320663452148
    7. '  ' → logprob: -15.385320663452148
    8. ')' → logprob: -15.510320663452148
    9. ' =(' → logprob: -15.510320663452148
    10. '(s' → logprob: -15.635320663452148

Token 146: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.14291822910308838
    2. ' get' → logprob: -2.017918109893799
    3. '(get' → logprob: -8.892918586730957
    4. ' itertools' → logprob: -10.017918586730957
    5. 'list' → logprob: -10.392918586730957
    6. ' list' → logprob: -11.267918586730957
    7. 'it' → logprob: -12.267918586730957
    8. '	get' → logprob: -12.892918586730957
    9. 'tuple' → logprob: -13.517918586730957
    10. '   ' → logprob: -13.517918586730957

Token 147: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -2.1008713702030946e-06
    2. '_list' → logprob: -14.250001907348633
    3. '_p' → logprob: -14.500001907348633
    4. 'per' → logprob: -14.750001907348633
    5. '_' → logprob: -15.125001907348633
    6. '_par' → logprob: -16.250001907348633
    7. '_permissions' → logprob: -17.125001907348633
    8. '```' → logprob: -17.625001907348633
    9. 's' → logprob: -18.625001907348633
    10. '_perm' → logprob: -18.625001907348633

Token 148: 'mut' (ID: 10522)
  Prédit: 'mut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mut' → logprob: -0.0003721622342709452
    2. 'm' → logprob: -8.125371932983398
    3. 'mu' → logprob: -10.000371932983398
    4. 'utations' → logprob: -11.125371932983398
    5. 'mun' → logprob: -12.875371932983398
    6. 'mutation' → logprob: -13.125371932983398
    7. 'missions' → logprob: -13.250371932983398
    8. ' mutations' → logprob: -13.500371932983398
    9. 'r' → logprob: -13.625371932983398
    10. 'umut' → logprob: -13.875371932983398

Token 149: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -9.722539834911004e-05
    2. 'utations' → logprob: -9.250097274780273
    3. 't' → logprob: -15.000097274780273
    4. 'lations' → logprob: -15.000097274780273
    5. 'utions' → logprob: -15.625097274780273
    6. 'at' → logprob: -16.000097274780273
    7. 'a' → logprob: -17.375097274780273
    8. 'r' → logprob: -17.750097274780273
    9. 'ation' → logprob: -18.375097274780273
    10. '   ' → logprob: -18.750097274780273

Token 150: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -2.081584716506768e-05
    2. '(' → logprob: -11.125020980834961
    3. '(range' → logprob: -12.625020980834961
    4. ' (' → logprob: -13.000020980834961
    5. '((' → logprob: -15.375020980834961
    6. ')(' → logprob: -17.00002098083496
    7. '(s' → logprob: -17.25002098083496
    8. '(rhs' → logprob: -17.25002098083496
    9. ' ' → logprob: -17.87502098083496
    10. '(re' → logprob: -18.50002098083496

Token 151: 'ng' (ID: 892)
  Prédit: 'ng'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ng' → logprob: -5.955703818472102e-05
    2. 'g' → logprob: -9.750059127807617
    3. 'n' → logprob: -15.250059127807617
    4. 'gn' → logprob: -15.500059127807617
    5. 'nge' → logprob: -15.625059127807617
    6. 'ange' → logprob: -16.250059127807617
    7. '(' → logprob: -16.500059127807617
    8. ')' → logprob: -16.750059127807617
    9. 'mg' → logprob: -17.000059127807617
    10. 'нг' → logprob: -17.000059127807617

Token 152: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.546478935983032e-05
    2. ')
' → logprob: -10.625025749206543
    3. ' )' → logprob: -14.375025749206543
    4. '   ' → logprob: -16.250024795532227
    5. '()' → logprob: -16.250024795532227
    6. ')
' → logprob: -16.625024795532227
    7. ')

' → logprob: -16.875024795532227
    8. '())' → logprob: -16.875024795532227
    9. '))' → logprob: -17.375024795532227
    10. ')#' → logprob: -18.375024795532227

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004436055198311806
    2. '
' → logprob: -6.504436016082764
    3. 'per' → logprob: -6.754436016082764
    4. '    
' → logprob: -7.379436016082764
    5. ' permutations' → logprob: -7.754436016082764
    6. 'p' → logprob: -8.379436492919922
    7. ' p' → logprob: -8.504436492919922
    8. '```' → logprob: -9.504436492919922
    9. ' perm' → logprob: -9.754436492919922
    10. 'perm' → logprob: -10.379436492919922

Token 154: ' combination' (ID: 14083)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.012499528005719185
    2. '   ' → logprob: -5.0124993324279785
    3. ' permutations' → logprob: -5.5124993324279785
    4. 'perm' → logprob: -7.5124993324279785
    5. ')' → logprob: -7.6374993324279785
    6. '
' → logprob: -8.512499809265137
    7. 'p' → logprob: -9.262499809265137
    8. '    
' → logprob: -9.637499809265137
    9. ' perm' → logprob: -9.637499809265137
    10. 'all' → logprob: -9.887499809265137

Token 155: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1364128589630127
    2. '_s' → logprob: -2.1364128589630127
    3. '_list' → logprob: -4.761412620544434
    4. '_' → logprob: -8.011412620544434
    5. '_tuple' → logprob: -8.261412620544434
    6. '_to' → logprob: -9.386412620544434
    7. '_index' → logprob: -9.761412620544434
    8. '_lst' → logprob: -10.011412620544434
    9. '_t' → logprob: -10.386412620544434
    10. '_lists' → logprob: -10.636412620544434

Token 156: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4859769642353058
    2. ' =' → logprob: -1.2359769344329834
    3. '=' → logprob: -2.3609769344329834
    4. '_' → logprob: -11.860977172851562
    5. '=s' → logprob: -12.110977172851562
    6. '=[]' → logprob: -12.235977172851562
    7. ')' → logprob: -13.610977172851562
    8. '[]' → logprob: -13.610977172851562
    9. ' s' → logprob: -14.235977172851562
    10. '_s' → logprob: -14.735977172851562

Token 157: ' permutation' (ID: 135200)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.16029775142669678
    2. ' permutation' → logprob: -1.9102977514266968
    3. ' perm' → logprob: -10.410297393798828
    4. '(per' → logprob: -11.410297393798828
    5. 'perm' → logprob: -11.535297393798828
    6. ' per' → logprob: -11.660297393798828
    7. '[' → logprob: -12.785297393798828
    8. ' permutations' → logprob: -13.160297393798828
    9. '	per' → logprob: -13.285297393798828
    10. ' [' → logprob: -13.535297393798828

Token 158: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -1.9361264946837764e-07
    2. 'to' → logprob: -15.875
    3. 'To' → logprob: -17.0
    4. '_' → logprob: -18.0
    5. '_t' → logprob: -18.5
    6. 't' → logprob: -19.125
    7. '_tuple' → logprob: -19.5
    8. 's' → logprob: -20.0
    9. '_TO' → logprob: -20.75
    10. '```' → logprob: -21.125

Token 159: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00875957403331995
    2. 'list' → logprob: -4.758759498596191
    3. 'ist' → logprob: -8.883759498596191
    4. 'tuple' → logprob: -13.383759498596191
    5. 'List' → logprob: -13.508759498596191
    6. 's' → logprob: -13.758759498596191
    7. 't' → logprob: -14.883759498596191
    8. 'lst' → logprob: -14.883759498596191
    9. '_tuple' → logprob: -15.008759498596191
    10. 'l' → logprob: -15.133759498596191

Token 160: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.04334992542862892
    2. 's' → logprob: -3.1683499813079834
    3. '_' → logprob: -9.168350219726562
    4. 'tuple' → logprob: -9.418350219726562
    5. '_t' → logprob: -9.668350219726562
    6. '(s' → logprob: -10.168350219726562
    7. 't' → logprob: -10.793350219726562
    8. '(tuple' → logprob: -11.418350219726562
    9. '_list' → logprob: -11.793350219726562
    10. '_tpl' → logprob: -11.918350219726562

Token 161: '(per' (ID: 96497)
  Prédit: '(per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -3.643152740551159e-05
    2. '(' → logprob: -10.500036239624023
    3. '(com' → logprob: -12.000036239624023
    4. '(s' → logprob: -13.250036239624023
    5. '(p' → logprob: -15.250036239624023
    6. ' (' → logprob: -15.375036239624023
    7. '(paren' → logprob: -16.750036239624023
    8. '(pl' → logprob: -16.750036239624023
    9. '```' → logprob: -16.875036239624023
    10. '((' → logprob: -17.375036239624023

Token 162: 'mut' (ID: 10522)
  Prédit: 'utations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'utations' → logprob: -0.000444850797066465
    2. 'mut' → logprob: -7.7504448890686035
    3. 'ut' → logprob: -11.750444412231445
    4. 'u' → logprob: -13.000444412231445
    5. '(' → logprob: -13.375444412231445
    6. '[' → logprob: -14.375444412231445
    7. 't' → logprob: -14.875444412231445
    8. 'utions' → logprob: -15.000444412231445
    9. 'urations' → logprob: -15.375444412231445
    10. 'r' → logprob: -15.875444412231445

Token 163: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.010313269682228565
    2. 'utations' → logprob: -4.635313034057617
    3. 't' → logprob: -7.885313034057617
    4. '   ' → logprob: -9.885313034057617
    5. 'utions' → logprob: -10.135313034057617
    6. 'ation' → logprob: -10.385313034057617
    7. 'at' → logprob: -11.010313034057617
    8. ')' → logprob: -11.135313034057617
    9. 'ut' → logprob: -12.010313034057617
    10. 's' → logprob: -12.260313034057617

Token 164: '_tuple' (ID: 53371)
  Prédit: '_tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tuple' → logprob: -0.03157954663038254
    2. 's' → logprob: -4.531579494476318
    3. '_' → logprob: -4.656579494476318
    4. ')' → logprob: -5.031579494476318
    5. '_)' → logprob: -6.031579494476318
    6. '_list' → logprob: -7.031579494476318
    7. '_t' → logprob: -7.906579494476318
    8. ')_' → logprob: -8.031579971313477
    9. 'tuple' → logprob: -9.531579971313477
    10. 'es' → logprob: -10.156579971313477

Token 165: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02083229459822178
    2. ')
' → logprob: -3.8958323001861572
    3. '(p' → logprob: -8.895832061767578
    4. '(' → logprob: -10.020832061767578
    5. '   ' → logprob: -10.145832061767578
    6. ')
' → logprob: -10.645832061767578
    7. ')

' → logprob: -11.145832061767578
    8. ' )' → logprob: -11.520832061767578
    9. '()' → logprob: -12.520832061767578
    10. 'p' → logprob: -12.645832061767578

Token 166: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024387190118432045
    2. 'p' → logprob: -4.149387359619141
    3. ' p' → logprob: -5.649387359619141
    4. 'idx' → logprob: -6.274387359619141
    5. 'index' → logprob: -6.774387359619141
    6. 'pos' → logprob: -6.899387359619141
    7. '```' → logprob: -8.64938735961914
    8. 'i' → logprob: -8.77438735961914
    9. ' idx' → logprob: -9.02438735961914
    10. ' pos' → logprob: -9.27438735961914

Token 167: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.25815707445144653
    2. 'index' → logprob: -2.1331570148468018
    3. 'idx' → logprob: -2.7581570148468018
    4. 'i' → logprob: -3.2581570148468018
    5. 'pos' → logprob: -5.508157253265381
    6. '   ' → logprob: -6.508157253265381
    7. 'a' → logprob: -7.383157253265381
    8. 'first' → logprob: -8.383156776428223
    9. '    
' → logprob: -8.633156776428223
    10. ' p' → logprob: -8.883156776428223

Token 168: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.005872505716979504
    2. '_idx' → logprob: -5.25587272644043
    3. '_' → logprob: -7.50587272644043
    4. '_pos' → logprob: -9.63087272644043
    5. 'index' → logprob: -11.88087272644043
    6. '_ind' → logprob: -12.25587272644043
    7. '_i' → logprob: -12.50587272644043
    8. '__' → logprob: -13.63087272644043
    9. '_list' → logprob: -13.75587272644043
    10. '_position' → logprob: -13.75587272644043

Token 169: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00982444453984499
    2. '=' → logprob: -4.759824275970459
    3. '_' → logprob: -7.134824275970459
    4. '(' → logprob: -8.259824752807617
    5. ' ' → logprob: -9.634824752807617
    6. '_p' → logprob: -10.009824752807617
    7. '(p' → logprob: -10.759824752807617
    8. 'p' → logprob: -11.634824752807617
    9. '1' → logprob: -12.509824752807617
    10. ' _' → logprob: -13.634824752807617

Token 170: ' index' (ID: 3472)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.6933027505874634
    2. ' index' → logprob: -0.6933027505874634
    3. ' combination' → logprob: -8.818303108215332
    4. 'comb' → logprob: -12.193303108215332
    5. 'combo' → logprob: -14.443303108215332
    6. '   ' → logprob: -14.568303108215332
    7. ' combinations' → logprob: -15.068303108215332
    8. ' ' → logprob: -15.193303108215332
    9. ' combo' → logprob: -15.193303108215332
    10. '	index' → logprob: -15.568303108215332

Token 171: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.6286106983898208e-05
    2. '_' → logprob: -11.375016212463379
    3. '(p' → logprob: -13.125016212463379
    4. '(' → logprob: -13.750016212463379
    5. ' _' → logprob: -14.625016212463379
    6. '(com' → logprob: -15.000016212463379
    7. 'in' → logprob: -15.625016212463379
    8. '(_' → logprob: -15.625016212463379
    9. 'In' → logprob: -15.750016212463379
    10. ' in' → logprob: -16.125017166137695

Token 172: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0020033421460539103
    2. '(com' → logprob: -7.127003192901611
    3. 'list' → logprob: -7.502003192901611
    4. 'comb' → logprob: -7.502003192901611
    5. 'List' → logprob: -10.50200366973877
    6. ' combination' → logprob: -10.62700366973877
    7. 'com' → logprob: -11.00200366973877
    8. '_comb' → logprob: -11.25200366973877
    9. 'combo' → logprob: -12.87700366973877
    10. '```' → logprob: -13.00200366973877

Token 173: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.0008085522567853332
    2. '(' → logprob: -7.1258087158203125
    3. '(combo' → logprob: -13.125808715820312
    4. ' (' → logprob: -13.750808715820312
    5. '(p' → logprob: -14.500808715820312
    6. '(c' → logprob: -15.625808715820312
    7. '(
' → logprob: -16.375808715820312
    8. '```' → logprob: -16.750808715820312
    9. '(co' → logprob: -17.250808715820312
    10. '_comb' → logprob: -17.875808715820312

Token 174: 'bination' (ID: 180524)
  Prédit: 'bination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bination' → logprob: -0.004656780045479536
    2. 'b' → logprob: -5.629656791687012
    3. 'ination' → logprob: -6.879656791687012
    4. 'nation' → logprob: -11.504656791687012
    5. 'p' → logprob: -11.879656791687012
    6. 'ation' → logprob: -13.129656791687012
    7. 'bin' → logprob: -13.379656791687012
    8. '(' → logprob: -14.129656791687012
    9. 'B' → logprob: -14.254656791687012
    10. '_b' → logprob: -14.379656791687012

Token 175: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.005789900664240122
    2. '(com' → logprob: -5.255789756774902
    3. 'ist' → logprob: -8.255789756774902
    4. 's' → logprob: -8.380789756774902
    5. 'List' → logprob: -10.880789756774902
    6. ')' → logprob: -11.255789756774902
    7. '(' → logprob: -11.380789756774902
    8. 'comb' → logprob: -11.880789756774902
    9. 'list' → logprob: -12.380789756774902
    10. '(p' → logprob: -13.005789756774902

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09279882907867432
    2. '(p' → logprob: -2.5927987098693848
    3. '(' → logprob: -4.842798709869385
    4. ',p' → logprob: -5.217798709869385
    5. ' ,' → logprob: -7.967798709869385
    6. ',(' → logprob: -8.967799186706543
    7. ' (' → logprob: -11.092799186706543
    8. 'p' → logprob: -12.342799186706543
    9. ',
' → logprob: -12.467799186706543
    10. '   ' → logprob: -13.467799186706543

Token 177: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.061981018632650375
    2. ' p' → logprob: -2.811980962753296
    3. ')' → logprob: -12.686981201171875
    4. '(p' → logprob: -12.686981201171875
    5. ')p' → logprob: -12.936981201171875
    6. '[p' → logprob: -13.186981201171875
    7. '   ' → logprob: -13.561981201171875
    8. '	p' → logprob: -14.436981201171875
    9. ' ' → logprob: -15.686981201171875
    10. '<p' → logprob: -16.061981201171875

Token 178: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.292907877039397e-06
    2. ' _' → logprob: -13.87500286102295
    3. '_' → logprob: -14.12500286102295
    4. '_lst' → logprob: -15.00000286102295
    5. '[_' → logprob: -15.25000286102295
    6. ')_' → logprob: -15.37500286102295
    7. '_l' → logprob: -15.62500286102295
    8. ')' → logprob: -16.125003814697266
    9. '_li' → logprob: -16.250003814697266
    10. '[' → logprob: -16.375003814697266

Token 179: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017521760892122984
    2. ')
' → logprob: -6.3767523765563965
    3. ' )' → logprob: -10.001751899719238
    4. ' )
' → logprob: -13.751751899719238
    5. ')+' → logprob: -13.876751899719238
    6. '   ' → logprob: -14.001751899719238
    7. ')
' → logprob: -14.001751899719238
    8. ')

' → logprob: -14.501751899719238
    9. ')p' → logprob: -15.626751899719238
    10. ',' → logprob: -16.376752853393555

Token 180: '   ' (ID: 271)
  Prédit: ' q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.35110628604888916
    2. 'q' → logprob: -1.8511062860488892
    3. '   ' → logprob: -1.9761062860488892
    4. '	q' → logprob: -7.9761061668396
    5. '
' → logprob: -9.851106643676758
    6. '_q' → logprob: -12.101106643676758
    7. ',q' → logprob: -12.601106643676758
    8. '    ' → logprob: -12.726106643676758
    9. ' ' → logprob: -12.976106643676758
    10. '  ' → logprob: -13.351106643676758

Token 181: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.0003821716527454555
    2. ' q' → logprob: -7.875381946563721
    3. '   ' → logprob: -13.250382423400879
    4. '	q' → logprob: -15.000382423400879
    5. '_q' → logprob: -18.500381469726562
    6. '
' → logprob: -18.625381469726562
    7. ' ' → logprob: -18.625381469726562
    8. '  ' → logprob: -19.000381469726562
    9. '    
' → logprob: -19.375381469726562
    10. '    ' → logprob: -19.500381469726562

Token 182: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.2522651255130768
    2. '_' → logprob: -1.5022650957107544
    3. ' _' → logprob: -8.127264976501465
    4. '_indices' → logprob: -11.502264976501465
    5. '_idx' → logprob: -11.877264976501465
    6. '_indexes' → logprob: -12.627264976501465
    7. ''_' → logprob: -13.377264976501465
    8. '._' → logprob: -13.502264976501465
    9. '_INDEX' → logprob: -13.502264976501465
    10. '_ind' → logprob: -13.502264976501465

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018150413408875465
    2. '=' → logprob: -4.018150329589844
    3. ' ' → logprob: -14.893150329589844
    4. ',' → logprob: -16.643150329589844
    5. '   ' → logprob: -17.643150329589844
    6. '_' → logprob: -17.643150329589844
    7. ' =
' → logprob: -17.643150329589844
    8. ')' → logprob: -17.893150329589844
    9. '    ' → logprob: -18.143150329589844
    10. ' ,' → logprob: -18.643150329589844

Token 184: ' index' (ID: 3472)
  Prédit: ' index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' index' → logprob: -0.054904062300920486
    2. 'index' → logprob: -2.929903984069824
    3. ' ' → logprob: -11.679903984069824
    4. '	index' → logprob: -12.804903984069824
    5. '[index' → logprob: -13.679903984069824
    6. ' ' → logprob: -13.679903984069824
    7. '=index' → logprob: -13.804903984069824
    8. '(index' → logprob: -13.804903984069824
    9. '#index' → logprob: -13.929903984069824
    10. 'space' → logprob: -14.054903984069824

Token 185: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.250000953674316
    3. 'In' → logprob: -15.500000953674316
    4. '_IN' → logprob: -17.25
    5. 'in' → logprob: -17.375
    6. '(' → logprob: -17.375
    7. ' in' → logprob: -18.125
    8. '   ' → logprob: -18.375
    9. '_index' → logprob: -18.5
    10. '_list' → logprob: -18.625

Token 186: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0009708948782645166
    2. 'list' → logprob: -7.000970840454102
    3. 'comb' → logprob: -10.000970840454102
    4. 'List' → logprob: -12.000970840454102
    5. 'q' → logprob: -13.000970840454102
    6. ' combination' → logprob: -13.125970840454102
    7. 'combo' → logprob: -13.875970840454102
    8. 'com' → logprob: -14.125970840454102
    9. '_comb' → logprob: -14.625970840454102
    10. 'index' → logprob: -15.250970840454102

Token 187: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.003905280726030469
    2. '(' → logprob: -5.628905296325684
    3. ' combination' → logprob: -8.253905296325684
    4. 'comb' → logprob: -10.503905296325684
    5. ' (' → logprob: -11.753905296325684
    6. '_comb' → logprob: -12.253905296325684
    7. 'com' → logprob: -12.878905296325684
    8. '(combo' → logprob: -14.128905296325684
    9. ' ' → logprob: -15.253905296325684
    10. '(
' → logprob: -15.378905296325684

Token 188: 'bination' (ID: 180524)
  Prédit: 'bination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bination' → logprob: -0.00030852947384119034
    2. 'ination' → logprob: -8.625308990478516
    3. 'b' → logprob: -9.125308990478516
    4. '_comb' → logprob: -11.250308990478516
    5. 'bin' → logprob: -13.500308990478516
    6. '   ' → logprob: -13.625308990478516
    7. '_b' → logprob: -13.750308990478516
    8. '```' → logprob: -14.125308990478516
    9. '_list' → logprob: -14.500308990478516
    10. 'bined' → logprob: -14.875308990478516

Token 189: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.65707261255011e-06
    2. 'list' → logprob: -12.250008583068848
    3. 'List' → logprob: -13.000008583068848
    4. ',' → logprob: -14.625008583068848
    5. 'ist' → logprob: -15.000008583068848
    6. 's' → logprob: -15.125008583068848
    7. '_LIST' → logprob: -16.000009536743164
    8. ')' → logprob: -16.625009536743164
    9. '_comb' → logprob: -16.625009536743164
    10. '[' → logprob: -17.000009536743164

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.133198283147067e-05
    2. ',q' → logprob: -10.125051498413086
    3. ' ,' → logprob: -11.625051498413086
    4. ',
' → logprob: -13.000051498413086
    5. ')' → logprob: -17.250051498413086
    6. ',p' → logprob: -17.625051498413086
    7. ',

' → logprob: -18.625051498413086
    8. '(com' → logprob: -18.875051498413086
    9. '(' → logprob: -19.000051498413086
    10. 'q' → logprob: -19.000051498413086

Token 191: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.07889209687709808
    2. 'q' → logprob: -2.5788919925689697
    3. '[q' → logprob: -13.95389175415039
    4. '	q' → logprob: -14.57889175415039
    5. ')' → logprob: -14.95389175415039
    6. ',q' → logprob: -15.95389175415039
    7. '[' → logprob: -15.95389175415039
    8. ' ' → logprob: -16.07889175415039
    9. '?q' → logprob: -16.32889175415039
    10. '(q' → logprob: -16.82889175415039

Token 192: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -5.438573680294212e-06
    2. '_' → logprob: -12.875005722045898
    3. 'list' → logprob: -14.125005722045898
    4. ')_' → logprob: -14.625005722045898
    5. '[' → logprob: -14.750005722045898
    6. 'List' → logprob: -15.250005722045898
    7. '[_' → logprob: -15.875005722045898
    8. ')' → logprob: -16.0000057220459
    9. 'q' → logprob: -16.1250057220459
    10. ' _' → logprob: -16.1250057220459

Token 193: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02667400613427162
    2. ')
' → logprob: -3.6516740322113037
    3. '   ' → logprob: -7.901673793792725
    4. ')
' → logprob: -13.651674270629883
    5. '
' → logprob: -14.276674270629883
    6. ')

' → logprob: -14.401674270629883
    7. ' )' → logprob: -15.026674270629883
    8. '),' → logprob: -16.026674270629883
    9. '    
' → logprob: -16.526674270629883
    10. '```' → logprob: -16.776674270629883

Token 194: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7205379605293274
    2. '   ' → logprob: -0.9705379605293274
    3. '
' → logprob: -2.0955379009246826
    4. ' print' → logprob: -5.595538139343262
    5. 'result' → logprob: -6.095538139343262
    6. '    
' → logprob: -6.345538139343262
    7. '```' → logprob: -6.595538139343262
    8. 'return' → logprob: -6.970538139343262
    9. 'diff' → logprob: -7.345538139343262
    10. '
' → logprob: -8.220538139343262

Token 195: ' difference' (ID: 9809)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003809833142440766
    2. '   ' → logprob: -8.125380516052246
    3. 'result' → logprob: -10.000380516052246
    4. ' print' → logprob: -10.750380516052246
    5. 'diff' → logprob: -11.500380516052246
    6. '
' → logprob: -13.000380516052246
    7. 'abs' → logprob: -13.125380516052246
    8. 'difference' (adapté à ' difference') → logprob: -13.625380516052246
    9. '```' → logprob: -13.750380516052246
    10. 'answer' → logprob: -14.625380516052246

Token 196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8834387063980103
    2. ' =' → logprob: -0.8834387063980103
    3. '_' → logprob: -1.7584387063980103
    4. '(' → logprob: -7.508438587188721
    5. ')' → logprob: -8.883439064025879
    6. ' ' → logprob: -9.508439064025879
    7. '_=' → logprob: -9.758439064025879
    8. '_index' → logprob: -10.508439064025879
    9. '()' → logprob: -11.008439064025879
    10. '	' → logprob: -11.633439064025879

Token 197: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.01417714636772871
    2. ' abs' → logprob: -4.264177322387695
    3. '   ' → logprob: -11.389177322387695
    4. '(abs' → logprob: -14.514177322387695
    5. '
' → logprob: -14.889177322387695
    6. '```' → logprob: -14.889177322387695
    7. '    
' → logprob: -15.389177322387695
    8. ' ' → logprob: -15.639177322387695
    9. '  ' → logprob: -15.889177322387695
    10. '.abs' → logprob: -16.514177322387695

Token 198: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.00048358101048506796
    2. '_' → logprob: -8.125483512878418
    3. '(' → logprob: -8.875483512878418
    4. '(p' → logprob: -10.750483512878418
    5. 'difference' → logprob: -11.375483512878418
    6. '_d' → logprob: -12.625483512878418
    7. '(_' → logprob: -12.875483512878418
    8. '_diff' → logprob: -13.000483512878418
    9. '(q' → logprob: -13.000483512878418
    10. ' _' → logprob: -14.125483512878418

Token 199: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.00020783171930816025
    2. '(' → logprob: -8.500207901000977
    3. '(q' → logprob: -12.625207901000977
    4. '(d' → logprob: -14.250207901000977
    5. '((' → logprob: -16.000207901000977
    6. 'p' → logprob: -16.875207901000977
    7. '(
' → logprob: -17.000207901000977
    8. '(P' → logprob: -17.000207901000977
    9. '<|end|>' → logprob: -17.125207901000977
    10. ' (' → logprob: -17.250207901000977

Token 200: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -12.500004768371582
    3. 'index' → logprob: -13.875004768371582
    4. ' _' → logprob: -15.000004768371582
    5. '_idx' → logprob: -17.0000057220459
    6. '_i' → logprob: -17.2500057220459
    7. '_list' → logprob: -17.3750057220459
    8. '_INDEX' → logprob: -17.6250057220459
    9. 'Index' → logprob: -18.0000057220459
    10. '__' → logprob: -18.1250057220459

Token 201: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012477317359298468
    2. ',q' → logprob: -7.001247882843018
    3. ' ,' → logprob: -8.00124740600586
    4. ',
' → logprob: -14.00124740600586
    5. 'q' → logprob: -16.00124740600586
    6. ',d' → logprob: -16.12624740600586
    7. '`,' → logprob: -16.87624740600586
    8. ',Q' → logprob: -17.25124740600586
    9. '',' → logprob: -18.12624740600586
    10. ',",' → logprob: -18.12624740600586

Token 202: ' q' (ID: 2335)
  Prédit: ' q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' q' → logprob: -0.1269291490316391
    2. 'q' → logprob: -2.1269290447235107
    3. '	q' → logprob: -14.75192928314209
    4. '   ' → logprob: -15.25192928314209
    5. '    ' → logprob: -15.50192928314209
    6. '(q' → logprob: -16.876928329467773
    7. ')' → logprob: -17.001928329467773
    8. ' ' → logprob: -17.126928329467773
    9. ' ' → logprob: -17.501928329467773
    10. '_q' → logprob: -17.626928329467773

Token 203: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -2.546478935983032e-05
    2. '_' → logprob: -10.625025749206543
    3. 'index' → logprob: -15.125025749206543
    4. '_
' → logprob: -15.875025749206543
    5. '_ind' → logprob: -15.875025749206543
    6. '_idx' → logprob: -16.250024795532227
    7. '_i' → logprob: -16.375024795532227
    8. ' _' → logprob: -16.750024795532227
    9. 'nd' → logprob: -17.125024795532227
    10. '_

' → logprob: -17.250024795532227

Token 204: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16038019955158234
    2. ')
' → logprob: -1.910380244255066
    3. '   ' → logprob: -9.035380363464355
    4. ')
' → logprob: -10.285380363464355
    5. ')

' → logprob: -13.285380363464355
    6. ')return' → logprob: -14.910380363464355
    7. ' )' → logprob: -15.660380363464355
    8. ')+' → logprob: -15.910380363464355
    9. ' )
' → logprob: -16.03537940979004
    10. '
' → logprob: -16.41037940979004

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004441035911440849
    2. 'print' → logprob: -5.504441261291504
    3. '
' → logprob: -8.254441261291504
    4. '    
' → logprob: -9.879441261291504
    5. '```' → logprob: -10.629441261291504
    6. ' print' → logprob: -11.004441261291504
    7. 'return' → logprob: -13.129441261291504
    8. '	print' → logprob: -13.254441261291504
    9. '\n' → logprob: -13.754441261291504
    10. '`' → logprob: -14.004441261291504

Token 206: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03371197357773781
    2. '   ' → logprob: -3.5337119102478027
    3. ' print' → logprob: -5.533711910247803
    4. '	print' → logprob: -13.908712387084961
    5. '
' → logprob: -14.533712387084961
    6. 'return' → logprob: -14.908712387084961
    7. '```' → logprob: -14.908712387084961
    8. '    
' → logprob: -16.03371238708496
    9. '#print' → logprob: -17.15871238708496
    10. 'pr' → logprob: -17.65871238708496

Token 207: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38688942790031433
    2. '(d' → logprob: -1.1368894577026367
    3. ' (' → logprob: -11.511889457702637
    4. '()' → logprob: -12.386889457702637
    5. '(D' → logprob: -13.136889457702637
    6. '(
' → logprob: -14.261889457702637
    7. 'difference' → logprob: -15.136889457702637
    8. '((' → logprob: -15.386889457702637
    9. '(

' → logprob: -15.386889457702637
    10. '(diff' → logprob: -15.511889457702637

Token 208: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.5761037468910217
    2. '(' → logprob: -0.8261037468910217
    3. ' (' → logprob: -9.576104164123535
    4. '(D' → logprob: -10.826104164123535
    5. '()' → logprob: -10.951104164123535
    6. '(f' → logprob: -11.076104164123535
    7. '((' → logprob: -11.576104164123535
    8. '(s' → logprob: -11.701104164123535
    9. ' ' → logprob: -12.451104164123535
    10. '('' → logprob: -12.576104164123535

Token 209: 'ifference' (ID: 30083)
  Prédit: 'ifference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifference' → logprob: -2.1054253011243418e-05
    2. 'difference' → logprob: -11.000020980834961
    3. 'iffer' → logprob: -13.375020980834961
    4. 'if' → logprob: -13.375020980834961
    5. 'ifferent' → logprob: -15.000020980834961
    6. '_difference' → logprob: -15.625020980834961
    7. 'ifer' → logprob: -16.00002098083496
    8. ' if' → logprob: -16.00002098083496
    9. 'I' → logprob: -16.25002098083496
    10. 'i' → logprob: -16.37502098083496

Token 210: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.941850526549388e-06
    2. ')
' → logprob: -13.000007629394531
    3. '()' → logprob: -13.000007629394531
    4. ')d' → logprob: -13.375007629394531
    5. ')`' → logprob: -14.625007629394531
    6. ' )' → logprob: -14.625007629394531
    7. '())' → logprob: -15.000007629394531
    8. '(' → logprob: -15.250007629394531
    9. '   ' → logprob: -16.00000762939453
    10. '))' → logprob: -16.00000762939453

Token 211: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004705899860709906
    2. '
' → logprob: -5.504705905914307
    3. 'd' → logprob: -7.504705905914307
    4. '\' → logprob: -10.129705429077148
    5. '

' → logprob: -10.629705429077148
    6. 'de' → logprob: -12.629705429077148
    7. '(
' → logprob: -13.254705429077148
    8. '    
' → logprob: -13.379705429077148
    9. '  
' → logprob: -13.504705429077148
    10. ' def' → logprob: -13.754705429077148

Token 212: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.0040801819413900375
    2. 'print' → logprob: -5.504080295562744
    3. '_print' → logprob: -13.629079818725586
    4. ' main' → logprob: -16.004079818725586
    5. ' prin' → logprob: -16.004079818725586
    6. '_' → logprob: -16.629079818725586
    7. ' p' → logprob: -16.754079818725586
    8. ' ' → logprob: -17.004079818725586
    9. 'p' → logprob: -17.129079818725586
    10. '(print' → logprob: -17.379079818725586

Token 213: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.005675991531461477
    2. '_' → logprob: -5.630675792694092
    3. '(' → logprob: -6.505675792694092
    4. '_results' → logprob: -8.38067626953125
    5. '("_' → logprob: -8.50567626953125
    6. '(_' → logprob: -10.25567626953125
    7. '('_' → logprob: -10.63067626953125
    8. '_Result' → logprob: -10.75567626953125
    9. '_res' → logprob: -11.00567626953125
    10. '_RESULT' → logprob: -11.38067626953125

Token 214: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10045552998781204
    2. '(d' → logprob: -2.3504555225372314
    3. '(value' → logprob: -9.350455284118652
    4. '(diff' → logprob: -9.600455284118652
    5. '(distance' → logprob: -10.350455284118652
    6. '((' → logprob: -11.725455284118652
    7. '(def' → logprob: -11.725455284118652
    8. ' (' → logprob: -12.225455284118652
    9. '(a' → logprob: -12.225455284118652
    10. '(D' → logprob: -12.350455284118652

Token 215: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010111343581229448
    2. ')' → logprob: -7.501011371612549
    3. '):
' → logprob: -7.751011371612549
    4. ' ):' → logprob: -10.75101089477539
    5. '(result' → logprob: -12.62601089477539
    6. '   ' → logprob: -13.50101089477539
    7. '(' → logprob: -14.62601089477539
    8. '):
' → logprob: -14.62601089477539
    9. ' ' → logprob: -14.87601089477539
    10. '):

' → logprob: -16.12601089477539

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005412808153778315
    2. ' print' → logprob: -5.255412578582764
    3. 'print' → logprob: -8.630413055419922
    4. '   ' → logprob: -15.380413055419922
    5. '```' → logprob: -15.630413055419922
    6. '	print' → logprob: -17.755413055419922
    7. '    ' → logprob: -18.130413055419922
    8. 'def' → logprob: -18.880413055419922
    9. '.print' → logprob: -19.005413055419922
    10. ')' → logprob: -19.130413055419922

Token 217: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.6935024261474609
    2. ' print' → logprob: -0.6935024261474609
    3. '   ' → logprob: -7.943502426147461
    4. '```' → logprob: -16.06850242614746
    5. 'pr' → logprob: -16.94350242614746
    6. '	print' → logprob: -17.81850242614746
    7. 'prin' → logprob: -18.31850242614746
    8. ' prin' → logprob: -18.81850242614746
    9. 'def' → logprob: -18.94350242614746
    10. '    ' → logprob: -19.69350242614746

Token 218: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0001093841710826382
    2. '(' → logprob: -9.250109672546387
    3. 'result' → logprob: -11.250109672546387
    4. '()' → logprob: -16.25010871887207
    5. '(res' → logprob: -18.00010871887207
    6. ' (' → logprob: -18.12510871887207
    7. ' result' → logprob: -18.37510871887207
    8. '(abs' → logprob: -18.50010871887207
    9. ',result' → logprob: -18.62510871887207
    10. '=result' → logprob: -18.87510871887207

Token 219: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8624639324116288e-06
    2. ')
' → logprob: -13.250001907348633
    3. ')`' → logprob: -17.000001907348633
    4. ' )' → logprob: -17.125001907348633
    5. '()' → logprob: -17.500001907348633
    6. '')' → logprob: -18.250001907348633
    7. '))' → logprob: -18.875001907348633
    8. '())' → logprob: -19.000001907348633
    9. ')

' → logprob: -19.375001907348633
    10. '`)' → logprob: -19.750001907348633

Token 220: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.050737399607896805
    2. 'main' → logprob: -3.5507373809814453
    3. 'i' → logprob: -3.9257373809814453
    4. '#' → logprob: -7.425737380981445
    5. '
' → logprob: -8.425737380981445
    6. 'm' → logprob: -9.925737380981445
    7. '```' → logprob: -10.050737380981445
    8. '<|end|>' → logprob: -10.050737380981445
    9. '\n' → logprob: -10.675737380981445
    10. '\' → logprob: -11.175737380981445

Token 221: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0028388723731040955
    2. '(' → logprob: -5.877839088439941
    3. '()
' → logprob: -10.752839088439941
    4. '#' → logprob: -12.002839088439941
    5. '(
' → logprob: -13.502839088439941
    6. '```' → logprob: -13.627839088439941
    7. '();' → logprob: -13.752839088439941
    8. ' ()' → logprob: -14.502839088439941
    9. '()

' → logprob: -14.877839088439941
    10. '<|end|>' → logprob: -15.002839088439941


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 219
Tokens correctement prédits (1ère position, stricte): 106
Tokens correctement prédits (1ère position, avec adaptation): 113
Tokens correctement prédits (top 10): 189
Précision stricte (1ère position): 48.40%
Précision adaptée (1ère position): 51.60%
Précision (top 10): 86.30%
================================================================================
