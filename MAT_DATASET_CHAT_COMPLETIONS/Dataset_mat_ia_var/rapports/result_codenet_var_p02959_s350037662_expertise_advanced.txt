================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin

N = int(stdin.readline())
A = list(map(int, stdin.readline().split()))
B = list(map(int, stdin.readline().split()))

from itertools import islice

def calc_total(N, A, B):
    total = 0
    for i in range(N):
        delta = A[i] - B[i]
        if delta >= 0:
            total += B[i]
        else:
            total += A[i]
            rem = B[i] - A[i]
            avail = min(A[i+1], rem)
            total += avail
            A[i+1] -= avail
    return total

print(calc_total(N, A, B))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.14457781612873077
    2. ' argv' → logprob: -2.269577741622925
    3. 'exit' → logprob: -4.019577980041504
    4. ' exit' → logprob: -4.644577980041504
    5. 'stdout' → logprob: -6.269577980041504
    6. 'stdin' → logprob: -7.519577980041504
    7. 'import' → logprob: -7.894577980041504
    8. 'path' → logprob: -7.894577980041504
    9. 'stderr' → logprob: -9.019577980041504
    10. ' path' → logprob: -9.394577980041504

Token 4: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0006422612932510674
    2. '.readline' → logprob: -8.250641822814941
    3. '\n' → logprob: -8.500641822814941
    4. '.
' → logprob: -10.125641822814941
    5. 'import' → logprob: -10.250641822814941
    6. '\' → logprob: -10.500641822814941
    7. '```' → logprob: -10.875641822814941
    8. '.read' → logprob: -10.875641822814941
    9. '' → logprob: -12.000641822814941
    10. ',' → logprob: -12.125641822814941

Token 5: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2673061788082123
    2. '.readline' → logprob: -1.7673062086105347
    3. 'for' → logprob: -3.767306089401245
    4. '\n' → logprob: -4.642306327819824
    5. '.read' → logprob: -4.767306327819824
    6. 'import' → logprob: -4.892306327819824
    7. 'print' → logprob: -4.892306327819824
    8. 'read' → logprob: -6.267306327819824
    9. '' → logprob: -7.017306327819824
    10. ',' → logprob: -7.017306327819824

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3506868779659271
    2. ' =' → logprob: -1.2256869077682495
    3. ',' → logprob: -7.225687026977539
    4. ' ' → logprob: -7.350687026977539
    5. '.' → logprob: -7.475687026977539
    6. '=int' → logprob: -8.975687026977539
    7. '_' → logprob: -9.850687026977539
    8. ')' → logprob: -9.975687026977539
    9. '>' → logprob: -11.475687026977539
    10. '  ' → logprob: -11.600687026977539

Token 7: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.007659046445041895
    2. 'int' → logprob: -4.882658958435059
    3. ' ' → logprob: -10.007658958435059
    4. '=int' → logprob: -12.132658958435059
    5. ' input' → logprob: -14.382658958435059
    6. '<int' → logprob: -14.632658958435059
    7. ' 
' → logprob: -14.632658958435059
    8. '[int' → logprob: -15.132658958435059
    9. ' stdin' → logprob: -15.257658958435059
    10. '(int' → logprob: -16.507659912109375

Token 8: '(stdin' (ID: 176594)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.313720703125
    2. '(stdin' → logprob: -1.313720703125
    3. '(st' → logprob: -8.063720703125
    4. '(input' → logprob: -9.938720703125
    5. '('' → logprob: -10.438720703125
    6. '(
' → logprob: -11.438720703125
    7. '(`' → logprob: -11.563720703125
    8. '(St' → logprob: -11.688720703125
    9. '()' → logprob: -11.813720703125
    10. ' (' → logprob: -11.938720703125

Token 9: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0343545600771904
    2. '.read' → logprob: -3.4093544483184814
    3. '.' → logprob: -7.2843546867370605
    4. '.readlines' → logprob: -11.034354209899902
    5. '.Read' → logprob: -13.534354209899902
    6. ')' → logprob: -13.534354209899902
    7. '[' → logprob: -13.659354209899902
    8. ' .' → logprob: -14.284354209899902
    9. '.write' → logprob: -14.659354209899902
    10. 'read' → logprob: -15.534354209899902

Token 10: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.14538908004760742
    2. ')' → logprob: -2.1453890800476074
    3. '()' → logprob: -4.020389080047607
    4. '()))' → logprob: -9.145389556884766
    5. '))' → logprob: -9.645389556884766
    6. '().' → logprob: -9.645389556884766
    7. ' ())' → logprob: -10.520389556884766
    8. '(' → logprob: -11.020389556884766
    9. '`)' → logprob: -11.020389556884766
    10. '()[' → logprob: -11.145389556884766

Token 11: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.284580796957016
    2. '\n' → logprob: -2.034580707550049
    3. '
' → logprob: -3.159580707550049
    4. ' for' → logprob: -4.034580707550049
    5. ')' → logprob: -4.534580707550049
    6. 'data' → logprob: -4.659580707550049
    7. 's' → logprob: -5.159580707550049
    8. 'result' → logprob: -5.409580707550049
    9. ' 
' → logprob: -5.659580707550049
    10. '\' → logprob: -5.659580707550049

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001293808571062982
    2. '.' → logprob: -7.501293659210205
    3. '[]' → logprob: -8.501294136047363
    4. '[i' → logprob: -8.626294136047363
    5. '[A' → logprob: -9.376294136047363
    6. '[:]' → logprob: -9.501294136047363
    7. '[N' → logprob: -10.376294136047363
    8. '\[' → logprob: -10.751294136047363
    9. '[...]' → logprob: -10.876294136047363
    10. '[a' → logprob: -11.126294136047363

Token 13: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.12807634472846985
    2. 'list' → logprob: -2.1280763149261475
    3. ' [' → logprob: -7.128076553344727
    4. ' []' → logprob: -8.628076553344727
    5. '[' → logprob: -10.003076553344727
    6. ' stdin' → logprob: -10.253076553344727
    7. '[]' → logprob: -10.628076553344727
    8. '[list' → logprob: -10.878076553344727
    9. '[int' → logprob: -11.128076553344727
    10. 'stdin' → logprob: -11.378076553344727

Token 14: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020139472326263785
    2. '(stdin' → logprob: -9.625201225280762
    3. '(range' → logprob: -10.250201225280762
    4. '()' → logprob: -10.625201225280762
    5. '(int' → logprob: -11.125201225280762
    6. '(`' → logprob: -11.750201225280762
    7. '("("' → logprob: -11.875201225280762
    8. '(
' → logprob: -12.125201225280762
    9. '(input' → logprob: -12.500201225280762
    10. '((' → logprob: -12.625201225280762

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08618283271789551
    2. '(' → logprob: -2.5861828327178955
    3. '(str' → logprob: -5.336182594299316
    4. '(lambda' → logprob: -6.086182594299316
    5. '<|end|>' → logprob: -10.211182594299316
    6. ')' → logprob: -10.836182594299316
    7. '[int' → logprob: -11.086182594299316
    8. 'int' → logprob: -11.086182594299316
    9. ' (' → logprob: -11.211182594299316
    10. '(
' → logprob: -11.586182594299316

Token 16: ',' (ID: 11)
  Prédit: '(stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.0006763351848348975
    2. '(' → logprob: -8.250676155090332
    3. ',' → logprob: -8.625676155090332
    4. '(std' → logprob: -8.875676155090332
    5. ')' → logprob: -10.000676155090332
    6. 'stdin' → logprob: -11.250676155090332
    7. ',std' → logprob: -11.625676155090332
    8. '(stdout' → logprob: -12.125676155090332
    9. ' ,' → logprob: -12.125676155090332
    10. '))' → logprob: -12.750676155090332

Token 17: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.004176933318376541
    2. ' stdin' → logprob: -5.754177093505859
    3. '(stdin' → logprob: -7.004177093505859
    4. 'std' → logprob: -9.50417709350586
    5. '.stdin' → logprob: -11.87917709350586
    6. 'stdout' → logprob: -12.50417709350586
    7. ')' → logprob: -12.75417709350586
    8. ' std' → logprob: -13.75417709350586
    9. 'stdlib' → logprob: -14.62917709350586
    10. 'str' → logprob: -14.87917709350586

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.024604277219623e-05
    2. '().' → logprob: -10.750040054321289
    3. '.' → logprob: -11.000040054321289
    4. '.readlines' → logprob: -14.000040054321289
    5. '.read' → logprob: -14.375040054321289
    6. ' .' → logprob: -14.625040054321289
    7. ').' → logprob: -16.12504005432129
    8. ' readline' → logprob: -17.62504005432129
    9. ')' → logprob: -18.25004005432129
    10. '()' → logprob: -19.75004005432129

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0010596063220873475
    2. '()))' → logprob: -7.251059532165527
    3. '()' → logprob: -8.376059532165527
    4. '())' → logprob: -9.126059532165527
    5. '())))' → logprob: -11.876059532165527
    6. '()));' → logprob: -14.501059532165527
    7. '(),' → logprob: -14.626059532165527
    8. ')' → logprob: -14.626059532165527
    9. '))' → logprob: -14.751059532165527
    10. '(' → logprob: -15.126059532165527

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.21046465635299683
    2. 'strip' → logprob: -1.7104647159576416
    3. 'rstrip' → logprob: -4.7104644775390625
    4. ' split' → logprob: -12.210464477539062
    5. 'read' → logprob: -12.585464477539062
    6. ' strip' → logprob: -14.085464477539062
    7. 'rs' → logprob: -14.835464477539062
    8. '(split' → logprob: -15.085464477539062
    9. ')' → logprob: -16.085464477539062
    10. 'spl' → logprob: -17.210464477539062

Token 21: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10164228826761246
    2. ')' → logprob: -2.351642370223999
    3. '()))' → logprob: -7.22664213180542
    4. ')))' → logprob: -7.60164213180542
    5. '(' → logprob: -9.101642608642578
    6. '())' → logprob: -9.601642608642578
    7. '()' → logprob: -10.601642608642578
    8. '),' → logprob: -14.476642608642578
    9. ''))' → logprob: -14.476642608642578
    10. ' ))' → logprob: -14.476642608642578

Token 22: 'B' (ID: 33)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.709690511226654
    2. 'for' → logprob: -1.7096905708312988
    3. 's' → logprob: -2.334690570831299
    4. 'a' → logprob: -3.584690570831299
    5. '#' → logprob: -3.709690570831299
    6. '
' → logprob: -3.834690570831299
    7. 'result' → logprob: -3.834690570831299
    8. ')' → logprob: -3.959690570831299
    9. '\n' → logprob: -3.959690570831299
    10. 'print' → logprob: -4.084690570831299

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028117362409830093
    2. '=' → logprob: -3.7781174182891846
    3. '.' → logprob: -5.4031171798706055
    4. '_' → logprob: -8.778117179870605
    5. '[' → logprob: -8.903117179870605
    6. ')' → logprob: -10.653117179870605
    7. '[:]' → logprob: -11.653117179870605
    8. ' ' → logprob: -11.903117179870605
    9. '.append' → logprob: -12.028117179870605
    10. ' .' → logprob: -12.903117179870605

Token 24: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5759501457214355
    2. 'list' → logprob: -0.8259501457214355
    3. '[' → logprob: -12.825950622558594
    4. ' A' → logprob: -12.950950622558594
    5. '[]' → logprob: -13.575950622558594
    6. ' [' → logprob: -13.575950622558594
    7. 'A' → logprob: -14.075950622558594
    8. ' []' → logprob: -14.450950622558594
    9. 'map' → logprob: -14.700950622558594
    10. 'List' → logprob: -14.700950622558594

Token 25: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4741802215576172
    2. '(map' → logprob: -0.9741802215576172
    3. '(
' → logprob: -10.349180221557617
    4. '(m' → logprob: -11.599180221557617
    5. '(range' → logprob: -11.599180221557617
    6. '(list' → logprob: -11.599180221557617
    7. '(int' → logprob: -11.724180221557617
    8. ' (' → logprob: -11.974180221557617
    9. '(

' → logprob: -12.224180221557617
    10. '(.' → logprob: -12.849180221557617

Token 26: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005979750771075487
    2. '(' → logprob: -5.130979537963867
    3. '<int' → logprob: -10.505979537963867
    4. 'int' → logprob: -11.255979537963867
    5. '[int' → logprob: -12.755979537963867
    6. '=int' → logprob: -12.880979537963867
    7. ' (' → logprob: -13.255979537963867
    8. ',int' → logprob: -13.755979537963867
    9. ']int' → logprob: -14.505979537963867
    10. '(
' → logprob: -14.880979537963867

Token 27: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.027722515165805817
    2. '(' → logprob: -4.402722358703613
    3. ',int' → logprob: -4.902722358703613
    4. ',' → logprob: -4.902722358703613
    5. '(stdin' → logprob: -9.652722358703613
    6. 'int' → logprob: -9.777722358703613
    7. ' (' → logprob: -9.902722358703613
    8. '```' → logprob: -10.902722358703613
    9. '<int' → logprob: -11.152722358703613
    10. ' ,' → logprob: -11.402722358703613

Token 28: ' stdin' (ID: 75143)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.3344328701496124
    2. 'int' → logprob: -1.58443284034729
    3. ' stdin' → logprob: -2.70943284034729
    4. ' int' → logprob: -4.834433078765869
    5. '(stdin' → logprob: -5.459433078765869
    6. '(int' → logprob: -8.084432601928711
    7. 'stdout' → logprob: -10.709432601928711
    8. 'std' → logprob: -11.084432601928711
    9. ' ' → logprob: -11.459432601928711
    10. ' std' → logprob: -11.709432601928711

Token 29: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.45848218582978e-06
    2. '.' → logprob: -13.25000286102295
    3. '().' → logprob: -14.87500286102295
    4. '.readlines' → logprob: -15.12500286102295
    5. '.read' → logprob: -17.625001907348633
    6. '.stdin' → logprob: -17.875001907348633
    7. ' readline' → logprob: -18.750001907348633
    8. ').' → logprob: -19.375001907348633
    9. ' .' → logprob: -19.625001907348633
    10. '.write' → logprob: -19.875001907348633

Token 30: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0004904801025986671
    2. '()' → logprob: -7.625490665435791
    3. '.' → logprob: -14.375490188598633
    4. '()))' → logprob: -15.000490188598633
    5. '()).' → logprob: -15.000490188598633
    6. '())' → logprob: -15.375490188598633
    7. ' ().' → logprob: -16.000490188598633
    8. '()));' → logprob: -16.000490188598633
    9. '()
' → logprob: -16.625490188598633
    10. '().'' → logprob: -16.750490188598633

Token 31: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.700132997939363e-05
    2. 'strip' → logprob: -11.125017166137695
    3. ' split' → logprob: -13.375017166137695
    4. 'rstrip' → logprob: -14.625017166137695
    5. ')' → logprob: -16.625017166137695
    6. 'spl' → logprob: -17.750017166137695
    7. '(split' → logprob: -18.250017166137695
    8. '```' → logprob: -19.250017166137695
    9. '.split' → logprob: -19.500017166137695
    10. 's' → logprob: -20.125017166137695

Token 32: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1709064394235611
    2. '())' → logprob: -2.2959065437316895
    3. '))' → logprob: -3.2959065437316895
    4. '()' → logprob: -4.2959065437316895
    5. ')' → logprob: -5.1709065437316895
    6. '()))
' → logprob: -10.170906066894531
    7. '(' → logprob: -10.670906066894531
    8. '()));' → logprob: -11.295906066894531
    9. '())
' → logprob: -12.670906066894531
    10. '()),' → logprob: -12.920906066894531

Token 33: 'from' (ID: 2845)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0983279943466187
    2. 's' → logprob: -2.098328113555908
    3. 'C' → logprob: -2.348328113555908
    4. 'total' → logprob: -2.473328113555908
    5. 'c' → logprob: -2.598328113555908
    6. 'answer' → logprob: -2.598328113555908
    7. 'ans' → logprob: -3.098328113555908
    8. 'res' → logprob: -3.098328113555908
    9. 'for' → logprob: -3.223328113555908
    10. 'A' → logprob: -3.848328113555908

Token 34: ' itertools' (ID: 103178)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.643612265586853
    2. ' itertools' → logprob: -1.143612265586853
    3. ' math' → logprob: -1.893612265586853
    4. ' sys' → logprob: -5.768612384796143
    5. 'collections' → logprob: -6.893612384796143
    6. ' operator' → logprob: -7.143612384796143
    7. '_' → logprob: -8.768611907958984
    8. ' heap' → logprob: -9.268611907958984
    9. ' functools' → logprob: -9.268611907958984
    10. 'math' → logprob: -9.893611907958984

Token 35: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.009823855943977833
    2. 'import' → logprob: -4.759823799133301
    3. '.com' → logprob: -7.134823799133301
    4. '.groupby' → logprob: -9.6348237991333
    5. '	import' → logprob: -9.7598237991333
    6. 'com' → logprob: -10.0098237991333
    7. ' itertools' → logprob: -10.0098237991333
    8. 'ertools' → logprob: -10.0098237991333
    9. '.' → logprob: -10.0098237991333
    10. ' .' → logprob: -10.2598237991333

Token 36: ' is' (ID: 382)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.3402026295661926
    2. 'per' → logprob: -1.4652025699615479
    3. 'acc' → logprob: -2.965202569961548
    4. ' permutations' → logprob: -5.840202808380127
    5. 'com' → logprob: -6.465202808380127
    6. 'zip' → logprob: -7.465202808380127
    7. ' product' → logprob: -8.340202331542969
    8. 'import' → logprob: -8.465202331542969
    9. 'perm' → logprob: -9.215202331542969
    10. 'chain' → logprob: -9.965202331542969

Token 37: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.009091939777135849
    2. 'n' → logprob: -5.884091854095459
    3. 'z' → logprob: -6.384091854095459
    4. 'l' → logprob: -6.509091854095459
    5. '```' → logprob: -7.634091854095459
    6. 'ze' → logprob: -7.884091854095459
    7. 'lices' → logprob: -8.134092330932617
    8. '1' → logprob: -8.259092330932617
    9. 'lic' → logprob: -8.509092330932617
    10. 'm' → logprob: -8.759092330932617

Token 38: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4925954043865204
    2. 'for' → logprob: -1.9925954341888428
    3. '
' → logprob: -2.7425954341888428
    4. '_' → logprob: -2.9925954341888428
    5. ',' → logprob: -3.1175954341888428
    6. '\n' → logprob: -3.6175954341888428
    7. '(
' → logprob: -3.7425954341888428
    8. ')' → logprob: -4.992595195770264
    9. ' for' → logprob: -5.367595195770264
    10. '\' → logprob: -5.492595195770264

Token 39: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1350173950195312
    2. 'result' → logprob: -1.7600173950195312
    3. 'dp' → logprob: -2.2600173950195312
    4. 'answer' → logprob: -2.8850173950195312
    5. 'c' → logprob: -3.1350173950195312
    6. 'A' → logprob: -3.3850173950195312
    7. 'ans' → logprob: -3.6350173950195312
    8. 'min' → logprob: -3.6350173950195312
    9. 'count' → logprob: -4.010017395019531
    10. 'print' → logprob: -4.135017395019531

Token 40: ' calc' (ID: 25691)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' max' → logprob: -2.246030330657959
    2. ' calculate' → logprob: -2.246030330657959
    3. ' _' → logprob: -2.371030330657959
    4. ' cumulative' → logprob: -2.496030330657959
    5. '_' → logprob: -2.621030330657959
    6. ' count' → logprob: -2.621030330657959
    7. ' process' → logprob: -2.746030330657959
    8. ' accumulate' → logprob: -2.871030330657959
    9. ' solve' → logprob: -2.996030330657959
    10. ' gcd' → logprob: -3.246030330657959

Token 41: '_total' (ID: 23814)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4589444398880005
    2. '_sum' → logprob: -1.8339444398880005
    3. '(' → logprob: -2.833944320678711
    4. '_max' → logprob: -3.083944320678711
    5. '_factor' → logprob: -3.958944320678711
    6. '_diff' → logprob: -3.958944320678711
    7. '_distance' → logprob: -4.083944320678711
    8. '_total' → logprob: -4.958944320678711
    9. '_similarity' → logprob: -5.083944320678711
    10. '_difference' → logprob: -5.333944320678711

Token 42: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4793318212032318
    2. '_' → logprob: -1.6043318510055542
    3. '_cost' → logprob: -2.2293317317962646
    4. '_sum' → logprob: -3.3543317317962646
    5. '_score' → logprob: -3.8543317317962646
    6. '(_' → logprob: -6.354331970214844
    7. '_distance' → logprob: -6.354331970214844
    8. '_amount' → logprob: -6.479331970214844
    9. '_value' → logprob: -6.604331970214844
    10. '_price' → logprob: -6.729331970214844

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000273136975010857
    2. ' ,' → logprob: -8.750272750854492
    3. '):' → logprob: -9.500272750854492
    4. ')' → logprob: -11.250272750854492
    5. ',A' → logprob: -12.000272750854492
    6. ',N' → logprob: -13.000272750854492
    7. ',a' → logprob: -13.125272750854492
    8. ',n' → logprob: -13.250272750854492
    9. ',b' → logprob: -13.250272750854492
    10. ',int' → logprob: -13.375272750854492

Token 44: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3153354227542877
    2. 'A' → logprob: -1.3153353929519653
    3. ' K' → logprob: -8.190335273742676
    4. 'K' → logprob: -8.815335273742676
    5. 'a' → logprob: -9.002835273742676
    6. ')' → logprob: -9.065335273742676
    7. ' M' → logprob: -9.190335273742676
    8. 'arr' → logprob: -9.252835273742676
    9. ' B' → logprob: -9.315335273742676
    10. ' a' → logprob: -9.565335273742676

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003246183041483164
    2. ' ,' → logprob: -8.125324249267578
    3. '):' → logprob: -11.375324249267578
    4. ')' → logprob: -11.500324249267578
    5. ',
' → logprob: -14.000324249267578
    6. '[' → logprob: -14.250324249267578
    7. ',b' → logprob: -14.500324249267578
    8. ',B' → logprob: -14.500324249267578
    9. ',)' → logprob: -14.500324249267578
    10. ',int' → logprob: -14.875324249267578

Token 46: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.42871883511543274
    2. ' B' → logprob: -1.0537188053131104
    3. ' ' → logprob: -11.428718566894531
    4. ')' → logprob: -13.178718566894531
    5. ',' → logprob: -13.553718566894531
    6. '	B' → logprob: -13.803718566894531
    7. ',B' → logprob: -14.616218566894531
    8. '```' → logprob: -14.741218566894531
    9. '<|end|>' → logprob: -14.803718566894531
    10. ' ' → logprob: -14.991218566894531

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.032931726425886154
    2. ',' → logprob: -3.5329318046569824
    3. ')' → logprob: -5.782931804656982
    4. ' ):' → logprob: -9.782931327819824
    5. ':' → logprob: -11.532931327819824
    6. '):
' → logprob: -12.157931327819824
    7. ')):' → logprob: -12.157931327819824
    8. '),' → logprob: -12.907931327819824
    9. ' ,' → logprob: -13.157931327819824
    10. ']:' → logprob: -13.407931327819824

Token 48: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23761187493801117
    2. '   ' → logprob: -1.8626118898391724
    3. '    ' → logprob: -3.987611770629883
    4. ' ' → logprob: -4.237611770629883
    5. '    
' → logprob: -5.487611770629883
    6. '\' → logprob: -5.612611770629883
    7. ' :' → logprob: -6.112611770629883
    8. ' 
' → logprob: -6.237611770629883
    9. ':return' → logprob: -6.362611770629883
    10. ':
' → logprob: -6.487611770629883

Token 49: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9474091529846191
    2. ' 
' → logprob: -1.6974091529846191
    3. ' total' → logprob: -2.072409152984619
    4. '    ' → logprob: -2.447409152984619
    5. ' ' → logprob: -2.947409152984619
    6. 'total' (adapté à ' total') → logprob: -3.322409152984619
    7. '    
' → logprob: -3.572409152984619
    8. '     
' → logprob: -3.697409152984619
    9. ' return' → logprob: -4.697409152984619
    10. '\' → logprob: -4.697409152984619

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010822135023772717
    2. '=' → logprob: -5.010822296142578
    3. ' +=' → logprob: -5.510822296142578
    4. '_' → logprob: -11.010822296142578
    5. ' ' → logprob: -11.135822296142578
    6. '+=' → logprob: -12.010822296142578
    7. ')' → logprob: -12.260822296142578
    8. '+' → logprob: -12.760822296142578
    9. ' +' → logprob: -12.885822296142578
    10. ',' → logprob: -13.635822296142578

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3499228060245514
    2. ' ' → logprob: -1.224922776222229
    3. ' A' → logprob: -7.0999226570129395
    4. ' sum' → logprob: -8.224923133850098
    5. 'A' → logprob: -9.224923133850098
    6. ' B' → logprob: -9.349923133850098
    7. 'sum' → logprob: -9.599923133850098
    8. ' N' → logprob: -10.099923133850098
    9. ' max' → logprob: -10.349923133850098
    10. ' ' → logprob: -10.974923133850098

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002505386248230934
    2. ' ' → logprob: -6.252505302429199
    3. 'sum' → logprob: -7.877505302429199
    4. 'A' → logprob: -9.1275053024292
    5. ' sum' → logprob: -10.0025053024292
    6. ' A' → logprob: -11.3775053024292
    7. 'N' → logprob: -11.7525053024292
    8. 'max' → logprob: -12.3775053024292
    9. 'B' → logprob: -12.5025053024292
    10. 'abs' → logprob: -13.0025053024292

Token 53: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07343404740095139
    2. '   ' → logprob: -3.9484341144561768
    3. ' 
' → logprob: -3.9484341144561768
    4. '\n' → logprob: -4.448433876037598
    5. ' ' → logprob: -5.448433876037598
    6. '    
' → logprob: -5.448433876037598
    7. '  
' → logprob: -5.823433876037598
    8. ' for' → logprob: -6.323433876037598
    9. '<|end|>' → logprob: -6.448433876037598
    10. '' → logprob: -6.698433876037598

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012133101932704449
    2. '
' → logprob: -5.3871331214904785
    3. ' for' → logprob: -5.5121331214904785
    4. ' ' → logprob: -7.0121331214904785
    5. '    
' → logprob: -7.2621331214904785
    6. '<|end|>' → logprob: -7.3871331214904785
    7. 'for' → logprob: -8.26213264465332
    8. '  ' → logprob: -8.38713264465332
    9. '    ' → logprob: -8.51213264465332
    10. '\n' → logprob: -9.01213264465332

Token 55: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5399917960166931
    2. 'for' (adapté à ' for') → logprob: -0.9149917960166931
    3. '   ' → logprob: -4.414991855621338
    4. '
' → logprob: -5.914991855621338
    5. '\n' → logprob: -8.16499137878418
    6. '```' → logprob: -8.16499137878418
    7. '    
' → logprob: -8.28999137878418
    8. ' ' → logprob: -8.53999137878418
    9. ')' → logprob: -8.78999137878418
    10. ' i' → logprob: -9.28999137878418

Token 56: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004480442963540554
    2. 'i' → logprob: -6.379480361938477
    3. ' ' → logprob: -6.504480361938477
    4. ' _' → logprob: -7.129480361938477
    5. ' range' → logprob: -8.254480361938477
    6. '_' → logprob: -8.754480361938477
    7. 'range' → logprob: -10.754480361938477
    8. '_i' → logprob: -11.129480361938477
    9. ' ' → logprob: -11.754480361938477
    10. '	i' → logprob: -12.754480361938477

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027117302641272545
    2. 'in' → logprob: -3.6521172523498535
    3. ' ' → logprob: -7.2771172523498535
    4. '  ' → logprob: -10.152117729187012
    5. ' i' → logprob: -10.902117729187012
    6. '+' → logprob: -11.027117729187012
    7. ',' → logprob: -11.277117729187012
    8. '	in' → logprob: -11.402117729187012
    9. 'n' → logprob: -11.902117729187012
    10. '0' → logprob: -13.027117729187012

Token 58: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1602420061826706
    2. ' range' → logprob: -1.910241961479187
    3. '	range' → logprob: -11.660242080688477
    4. '(range' → logprob: -12.660242080688477
    5. ')' → logprob: -13.035242080688477
    6. ' ' → logprob: -13.660242080688477
    7. ' xrange' → logprob: -14.410242080688477
    8. '   ' → logprob: -14.910242080688477
    9. '```' → logprob: -15.035242080688477
    10. 'r' → logprob: -15.410242080688477

Token 59: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.16035522520542145
    2. '(' → logprob: -1.9103552103042603
    3. ' (' → logprob: -9.410355567932129
    4. '(n' → logprob: -10.660355567932129
    5. '(len' → logprob: -11.785355567932129
    6. '(
' → logprob: -12.035355567932129
    7. ' N' → logprob: -12.785355567932129
    8. ')' → logprob: -12.785355567932129
    9. ' ' → logprob: -13.035355567932129
    10. 'N' → logprob: -13.785355567932129

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018827042076736689
    2. ' ):' → logprob: -7.126882553100586
    3. '):
' → logprob: -7.251882553100586
    4. ')' → logprob: -8.251882553100586
    5. '-' → logprob: -10.126882553100586
    6. ':' → logprob: -10.251882553100586
    7. '+' → logprob: -11.126882553100586
    8. '   ' → logprob: -11.876882553100586
    9. ' ' → logprob: -12.501882553100586
    10. ' )' → logprob: -13.376882553100586

Token 61: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0933079719543457
    2. '   ' → logprob: -1.2183079719543457
    3. ' ' → logprob: -1.3433079719543457
    4. ':' → logprob: -3.0933079719543457
    5. '    ' → logprob: -3.5933079719543457
    6. '<|end|>' → logprob: -5.093307971954346
    7. '    
' → logprob: -5.218307971954346
    8. ')' → logprob: -5.718307971954346
    9. '  ' → logprob: -5.843307971954346
    10. '+' → logprob: -5.968307971954346

Token 62: ' delta' (ID: 18800)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.14711986482143402
    2. 'total' → logprob: -2.5221197605133057
    3. '   ' → logprob: -3.8971197605133057
    4. ' ' → logprob: -4.397119998931885
    5. '    ' → logprob: -5.147119998931885
    6. '       ' → logprob: -5.147119998931885
    7. ' for' → logprob: -5.272119998931885
    8. ' if' → logprob: -5.772119998931885
    9. '    
' → logprob: -7.147119998931885
    10. ' 
' → logprob: -7.272119998931885

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02131098136305809
    2. '=' → logprob: -3.896311044692993
    3. 's' → logprob: -7.521310806274414
    4. '_' → logprob: -9.271310806274414
    5. ' ' → logprob: -9.771310806274414
    6. ')' → logprob: -11.021310806274414
    7. ',' → logprob: -11.396310806274414
    8. 'A' → logprob: -11.646310806274414
    9. 'x' → logprob: -12.146310806274414
    10. ' ' → logprob: -12.896310806274414

Token 64: ' A' (ID: 355)
  Prédit: ' B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.5237712264060974
    2. 'B' → logprob: -1.7737712860107422
    3. ' A' → logprob: -1.8987712860107422
    4. ' abs' → logprob: -3.023771286010742
    5. 'A' → logprob: -3.523771286010742
    6. 'abs' → logprob: -5.023771286010742
    7. ' max' → logprob: -6.273771286010742
    8. ' (' → logprob: -7.898771286010742
    9. 'max' → logprob: -8.023771286010742
    10. ' ' → logprob: -8.148771286010742

Token 65: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001172129064798355
    2. '[' → logprob: -6.751172065734863
    3. '[I' → logprob: -14.001172065734863
    4. 'i' → logprob: -14.626172065734863
    5. '[
' → logprob: -15.626172065734863
    6. '[j' → logprob: -15.876172065734863
    7. '[:]' → logprob: -16.62617301940918
    8. ' [' → logprob: -16.75117301940918
    9. '[idx' → logprob: -17.25117301940918
    10. '[N' → logprob: -17.25117301940918

Token 66: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3043707609176636
    2. ' -' → logprob: -1.9293707609176636
    3. ']' → logprob: -2.179370880126953
    4. '[' → logprob: -6.804370880126953
    5. '+' → logprob: -7.054370880126953
    6. ')' → logprob: -7.304370880126953
    7. ']-' → logprob: -7.304370880126953
    8. '[i' → logprob: -7.804370880126953
    9. ' ' → logprob: -8.929370880126953
    10. ' ]' → logprob: -10.054370880126953

Token 67: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2529739439487457
    2. ' -' → logprob: -1.5029739141464233
    3. '+' → logprob: -7.002974033355713
    4. '*' → logprob: -9.877973556518555
    5. '-B' → logprob: -10.127973556518555
    6. ' ' → logprob: -10.877973556518555
    7. ' +' → logprob: -11.127973556518555
    8. ' *' → logprob: -13.127973556518555
    9. ' ' → logprob: -13.252973556518555
    10. '>' → logprob: -13.502973556518555

Token 68: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.06999880075454712
    2. ' B' → logprob: -2.6949987411499023
    3. ' ' → logprob: -11.319998741149902
    4. '0' → logprob: -11.569998741149902
    5. '1' → logprob: -11.569998741149902
    6. '20' → logprob: -12.694998741149902
    7. 'i' → logprob: -12.694998741149902
    8. '10' → logprob: -12.944998741149902
    9. '   ' → logprob: -12.944998741149902
    10. '	B' → logprob: -13.194998741149902

Token 69: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00012570773833431304
    2. '[' → logprob: -9.000125885009766
    3. '[j' → logprob: -14.000125885009766
    4. '[I' → logprob: -14.250125885009766
    5. '[
' → logprob: -15.000125885009766
    6. 'i' → logprob: -15.375125885009766
    7. ' [' → logprob: -16.250125885009766
    8. ']' → logprob: -17.000125885009766
    9. ')' → logprob: -17.375125885009766
    10. '[s' → logprob: -17.500125885009766

Token 70: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026849217247217894
    2. '])' → logprob: -6.502685070037842
    3. ']' → logprob: -7.002685070037842
    4. ' )' → logprob: -9.877684593200684
    5. ')**' → logprob: -9.877684593200684
    6. ')
' → logprob: -10.002684593200684
    7. ')])' → logprob: -10.377684593200684
    8. '[' → logprob: -11.127684593200684
    9. '**' → logprob: -11.127684593200684
    10. '   ' → logprob: -11.252684593200684

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12730425596237183
    2. '
' → logprob: -2.3773043155670166
    3. ')' → logprob: -4.8773040771484375
    4. ' if' → logprob: -5.6273040771484375
    5. ' ' → logprob: -6.0023040771484375
    6. '        
' → logprob: -6.1273040771484375
    7. '   ' → logprob: -6.1273040771484375
    8. '<|end|>' → logprob: -6.2523040771484375
    9. '```' → logprob: -6.7523040771484375
    10. ' 
' → logprob: -6.8773040771484375

Token 72: ' if' (ID: 538)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5832937359809875
    2. ' if' → logprob: -1.5832936763763428
    3. ' total' → logprob: -2.2082936763763428
    4. 'if' (adapté à ' if') → logprob: -2.2082936763763428
    5. '
' → logprob: -4.458293914794922
    6. ' ' → logprob: -6.333293914794922
    7. ' for' → logprob: -7.708293914794922
    8. '       ' → logprob: -7.708293914794922
    9. '2' → logprob: -8.208293914794922
    10. 'for' → logprob: -8.208293914794922

Token 73: ' delta' (ID: 18800)
  Prédit: ' delta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' delta' → logprob: -0.006180948577821255
    2. 'delta' → logprob: -5.256180763244629
    3. ' ' → logprob: -7.256180763244629
    4. ' delt' → logprob: -9.631180763244629
    5. ' A' → logprob: -10.006180763244629
    6. ' abs' → logprob: -10.131180763244629
    7. '(delta' → logprob: -10.631180763244629
    8. ' i' → logprob: -10.881180763244629
    9. ' del' → logprob: -11.006180763244629
    10. ' d' → logprob: -12.193680763244629

Token 74: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.43539899587631226
    2. '>' → logprob: -1.060399055480957
    3. ' <' → logprob: -5.435399055480957
    4. ' >=' → logprob: -6.935399055480957
    5. '<' → logprob: -7.310399055480957
    6. ' ' → logprob: -8.310399055480957
    7. '>=' → logprob: -8.935399055480957
    8. ')' → logprob: -9.060399055480957
    9. '<|end|>' → logprob: -9.685399055480957
    10. ' <=' → logprob: -10.185399055480957

Token 75: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1801074892282486
    2. '0' → logprob: -1.8051074743270874
    3. '1' → logprob: -8.055107116699219
    4. '2' → logprob: -10.430107116699219
    5. ' -' → logprob: -12.867607116699219
    6. '10' → logprob: -13.555107116699219
    7. '3' → logprob: -13.680107116699219
    8. '4' → logprob: -13.930107116699219
    9. '9' → logprob: -13.992607116699219
    10. ' ' → logprob: -13.992607116699219

Token 76: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03235413879156113
    2. ' ' → logprob: -3.7823541164398193
    3. '1' → logprob: -4.782354354858398
    4. '2' → logprob: -7.782354354858398
    5. '10' → logprob: -8.907354354858398
    6. '100' → logprob: -10.282354354858398
    7. '5' → logprob: -10.407354354858398
    8. '3' → logprob: -11.032354354858398
    9. '-' → logprob: -11.282354354858398
    10. '20' → logprob: -11.532354354858398

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018912332132458687
    2. ':
' → logprob: -4.018912315368652
    3. '):' → logprob: -7.268912315368652
    4. ' :' → logprob: -10.768912315368652
    5. '):
' → logprob: -11.018912315368652
    6. '       ' → logprob: -11.768912315368652
    7. ')' → logprob: -12.018912315368652
    8. ':
' → logprob: -12.393912315368652
    9. '   ' → logprob: -13.393912315368652
    10. ' and' → logprob: -13.518912315368652

Token 78: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3400964140892029
    2. '           ' → logprob: -1.4650964736938477
    3. ':
' → logprob: -2.9650964736938477
    4. '       ' → logprob: -5.715096473693848
    5. '
' → logprob: -7.465096473693848
    6. '):' → logprob: -7.965096473693848
    7. '):
' → logprob: -8.215096473693848
    8. ' :' → logprob: -8.715096473693848
    9. ')' → logprob: -8.840096473693848
    10. ',' → logprob: -9.090096473693848

Token 79: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.09439095109701157
    2. '           ' → logprob: -2.719390869140625
    3. 'total' (adapté à ' total') → logprob: -4.344390869140625
    4. '       ' → logprob: -5.469390869140625
    5. ' ' → logprob: -5.969390869140625
    6. '               ' → logprob: -6.469390869140625
    7. '   ' → logprob: -7.219390869140625
    8. '
' → logprob: -7.594390869140625
    9. ' ' → logprob: -7.719390869140625
    10. '	total' → logprob: -8.844390869140625

Token 80: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6937348246574402
    2. '+=' → logprob: -0.6937348246574402
    3. '+' → logprob: -7.818734645843506
    4. ']+=' → logprob: -9.193735122680664
    5. '+=(' → logprob: -9.943735122680664
    6. '=' → logprob: -11.068735122680664
    7. ' ' → logprob: -12.318735122680664
    8. '```' → logprob: -13.068735122680664
    9. '1' → logprob: -13.818735122680664
    10. '++' → logprob: -13.943735122680664

Token 81: ' B' (ID: 418)
  Prédit: 'delta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'delta' → logprob: -0.19515657424926758
    2. ' delta' → logprob: -2.3201565742492676
    3. 'B' → logprob: -3.0701565742492676
    4. ' B' → logprob: -4.195156574249268
    5. 'A' → logprob: -4.445156574249268
    6. ' A' → logprob: -5.445156574249268
    7. ' ' → logprob: -7.695156574249268
    8. '1' → logprob: -8.13265609741211
    9. 'abs' → logprob: -9.13265609741211
    10. 'd' → logprob: -9.19515609741211

Token 82: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.4868770196917467e-05
    2. '[' → logprob: -10.750024795532227
    3. 'i' → logprob: -13.125024795532227
    4. '[I' → logprob: -14.000024795532227
    5. '```' → logprob: -15.000024795532227
    6. '[
' → logprob: -17.000024795532227
    7. ' [' → logprob: -17.875024795532227
    8. '(i' → logprob: -18.250024795532227
    9. '[j' → logprob: -18.625024795532227
    10. '{i' → logprob: -18.625024795532227

Token 83: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015601406805217266
    2. ')
' → logprob: -4.515601634979248
    3. '
' → logprob: -6.515601634979248
    4. ' )' → logprob: -7.015601634979248
    5. '<|end|>' → logprob: -7.640601634979248
    6. '*' → logprob: -7.765601634979248
    7. '       ' → logprob: -7.890601634979248
    8. ']' → logprob: -8.26560115814209
    9. ' *' → logprob: -9.39060115814209
    10. 'else' → logprob: -9.51560115814209

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08374451100826263
    2. '   ' → logprob: -2.708744525909424
    3. ' else' → logprob: -5.458744525909424
    4. '
' → logprob: -5.708744525909424
    5. '    
' → logprob: -6.333744525909424
    6. 'else' → logprob: -6.583744525909424
    7. '    ' → logprob: -7.583744525909424
    8. ' ' → logprob: -7.833744525909424
    9. '<|end|>' → logprob: -7.833744525909424
    10. '```' → logprob: -8.333744049072266

Token 85: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.12903131544589996
    2. 'else' (adapté à ' else') → logprob: -2.1290314197540283
    3. '       ' → logprob: -6.754031181335449
    4. '   ' → logprob: -7.254031181335449
    5. '	else' → logprob: -9.37903118133545
    6. ' elif' → logprob: -9.62903118133545
    7. 'elif' → logprob: -10.50403118133545
    8. '```' → logprob: -11.50403118133545
    9. '    ' → logprob: -11.75403118133545
    10. ')' → logprob: -11.75403118133545

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04345037043094635
    2. '           ' → logprob: -3.418450355529785
    3. ':
' → logprob: -5.293450355529785
    4. ' :' → logprob: -6.168450355529785
    5. '       ' → logprob: -7.168450355529785
    6. '        ' → logprob: -7.918450355529785
    7. '          ' → logprob: -8.168450355529785
    8. ' ' → logprob: -8.418450355529785
    9. ' total' → logprob: -8.793450355529785
    10. ',' → logprob: -9.043450355529785

Token 87: '           ' (ID: 352)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.18113751709461212
    2. 'total' → logprob: -2.3061375617980957
    3. '           ' → logprob: -2.8061375617980957
    4. '0' → logprob: -5.806137561798096
    5. ' ' → logprob: -6.306137561798096
    6. '   ' → logprob: -9.306137084960938
    7. '       ' → logprob: -9.431137084960938
    8. ' A' → logprob: -9.806137084960938
    9. ' -' → logprob: -10.056137084960938
    10. '+' → logprob: -10.181137084960938

Token 88: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.43274909257888794
    2. 'total' (adapté à ' total') → logprob: -1.0577490329742432
    3. '0' → logprob: -6.307749271392822
    4. ' A' → logprob: -7.432749271392822
    5. 'A' → logprob: -7.432749271392822
    6. ' ' → logprob: -7.682749271392822
    7. ' break' → logprob: -8.432748794555664
    8. '           ' → logprob: -9.682748794555664
    9. 'break' → logprob: -10.307748794555664
    10. ' -' → logprob: -10.307748794555664

Token 89: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.45706048607826233
    2. '+=' → logprob: -1.20706045627594
    3. ' -=' → logprob: -2.8320605754852295
    4. '-=' → logprob: -5.08206033706665
    5. '=' → logprob: -7.20706033706665
    6. '-' → logprob: -7.33206033706665
    7. ' ' → logprob: -7.70706033706665
    8. '+' → logprob: -8.082060813903809
    9. '        ' → logprob: -9.457060813903809
    10. '          ' → logprob: -9.582060813903809

Token 90: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16526716947555542
    2. ' A' → logprob: -1.9152672290802002
    3. '0' → logprob: -5.915266990661621
    4. '-A' → logprob: -6.915266990661621
    5. ' ' → logprob: -7.665266990661621
    6. ' -' → logprob: -8.040266990661621
    7. 'B' → logprob: -8.665266990661621
    8. '-' → logprob: -8.915266990661621
    9. '   ' → logprob: -10.665266990661621
    10. ' B' → logprob: -10.727766990661621

Token 91: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.839121826691553e-05
    2. '[' → logprob: -9.500078201293945
    3. 'i' → logprob: -13.875078201293945
    4. ' [' → logprob: -14.125078201293945
    5. '[I' → logprob: -14.875078201293945
    6. '[j' → logprob: -15.000078201293945
    7. '```' → logprob: -15.125078201293945
    8. '[
' → logprob: -15.875078201293945
    9. ']' → logprob: -16.000078201293945
    10. ')' → logprob: -16.000078201293945

Token 92: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003482585772871971
    2. '<|end|>' → logprob: -6.378482818603516
    3. '[i' → logprob: -6.503482818603516
    4. ' )' → logprob: -9.378482818603516
    5. ']' → logprob: -9.753482818603516
    6. '[' → logprob: -10.128482818603516
    7. ')
' → logprob: -10.378482818603516
    8. '<|end|>' → logprob: -11.253482818603516
    9. ')return' → logprob: -11.378482818603516
    10. '])' → logprob: -12.003482818603516

Token 93: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007436839397996664
    2. '
' → logprob: -5.132436752319336
    3. '    
' → logprob: -6.757436752319336
    4. '	return' → logprob: -9.507436752319336
    5. 'return' → logprob: -9.632436752319336
    6. '  
' → logprob: -9.632436752319336
    7. '\n' → logprob: -9.882436752319336
    8. ' return' → logprob: -10.757436752319336
    9. '<|end|>' → logprob: -11.132436752319336
    10. '       ' → logprob: -11.132436752319336

Token 94: ' rem' (ID: 1662)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2925142049789429
    2. '   ' → logprob: -1.9175142049789429
    3. '+' → logprob: -2.0425143241882324
    4. 'return' → logprob: -2.5425143241882324
    5. ' ' → logprob: -2.7925143241882324
    6. '       ' → logprob: -3.0425143241882324
    7. '
' → logprob: -3.0425143241882324
    8. ' +' → logprob: -3.1675143241882324
    9. '```' → logprob: -3.7925143241882324
    10. 'for' → logprob: -4.042514324188232

Token 95: ' =' (ID: 314)
  Prédit: 'aining'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aining' → logprob: -0.08913139253854752
    2. 'a' → logprob: -2.8391313552856445
    3. 'ain' → logprob: -4.3391313552856445
    4. ' =' → logprob: -4.4641313552856445
    5. '=' → logprob: -7.4641313552856445
    6. 'ains' → logprob: -7.4641313552856445
    7. '   ' → logprob: -8.589131355285645
    8. '[' → logprob: -8.839131355285645
    9. '```' → logprob: -9.714131355285645
    10. 'ining' → logprob: -9.964131355285645

Token 96: ' B' (ID: 418)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20236355066299438
    2. '-B' → logprob: -2.5773634910583496
    3. ' abs' → logprob: -3.4523634910583496
    4. 'abs' → logprob: -3.4523634910583496
    5. '-' → logprob: -4.32736349105835
    6. ' B' → logprob: -5.20236349105835
    7. '-s' → logprob: -5.45236349105835
    8. 'B' → logprob: -5.45236349105835
    9. '0' → logprob: -5.82736349105835
    10. ' (-' → logprob: -6.32736349105835

Token 97: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.868328920158092e-05
    2. '[' → logprob: -10.500028610229492
    3. 'i' → logprob: -14.875028610229492
    4. '[I' → logprob: -15.500028610229492
    5. '```' → logprob: -15.625028610229492
    6. '[s' → logprob: -16.500028610229492
    7. '[j' → logprob: -16.625028610229492
    8. ' [' → logprob: -17.000028610229492
    9. '[-' → logprob: -17.125028610229492
    10. '[
' → logprob: -18.125028610229492

Token 98: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.22020092606544495
    2. '-' → logprob: -1.8452008962631226
    3. ')' → logprob: -3.720201015472412
    4. ' ' → logprob: -4.970201015472412
    5. '[i' → logprob: -5.720201015472412
    6. ']' → logprob: -5.970201015472412
    7. '+' → logprob: -7.345201015472412
    8. '   ' → logprob: -7.345201015472412
    9. ' +' → logprob: -8.095200538635254
    10. '[' → logprob: -9.095200538635254

Token 99: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03808567300438881
    2. '-' → logprob: -3.288085699081421
    3. ' ' → logprob: -10.4130859375
    4. '-s' → logprob: -13.0380859375
    5. '-i' → logprob: -13.0380859375
    6. '-ex' → logprob: -14.0380859375
    7. '-A' → logprob: -14.1630859375
    8. '+' → logprob: -14.2880859375
    9. '-t' → logprob: -14.2880859375
    10. '-d' → logprob: -14.4130859375

Token 100: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0036089823115617037
    2. ' A' → logprob: -5.6286091804504395
    3. '           ' → logprob: -12.628608703613281
    4. '	A' → logprob: -12.753608703613281
    5. ' ' → logprob: -14.003608703613281
    6. '   ' → logprob: -14.253608703613281
    7. 'a' → logprob: -15.003608703613281
    8. '>A' → logprob: -15.378608703613281
    9. '  ' → logprob: -15.878608703613281
    10. '_A' → logprob: -16.50360870361328

Token 101: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.375000953674316
    3. 'i' → logprob: -14.750000953674316
    4. '[I' → logprob: -16.750001907348633
    5. '<|end|>' → logprob: -18.125001907348633
    6. '[user' → logprob: -18.625001907348633
    7. '[int' → logprob: -18.750001907348633
    8. '```' → logprob: -19.125001907348633
    9. '[index' → logprob: -19.750001907348633
    10. '[
' → logprob: -19.750001907348633

Token 102: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2141738384962082
    2. ')
' → logprob: -1.9641737937927246
    3. ']' → logprob: -3.8391737937927246
    4. '
' → logprob: -4.214173793792725
    5. '<|end|>' → logprob: -4.839173793792725
    6. ']
' → logprob: -5.714173793792725
    7. '           ' → logprob: -6.214173793792725
    8. '<|end|>' → logprob: -6.964173793792725
    9. ')
' → logprob: -7.839173793792725
    10. '       ' → logprob: -8.214174270629883

Token 103: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11003429442644119
    2. ' for' → logprob: -3.110034227371216
    3. '
' → logprob: -3.735034227371216
    4. '       ' → logprob: -4.360034465789795
    5. '   ' → logprob: -4.610034465789795
    6. '    
' → logprob: -5.985034465789795
    7. 'for' → logprob: -5.985034465789795
    8. '```' → logprob: -6.485034465789795
    9. '            
' → logprob: -6.735034465789795
    10. ' while' → logprob: -6.985034465789795

Token 104: ' avail' (ID: 57507)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2629719078540802
    2. '           ' → logprob: -2.262971878051758
    3. 'for' → logprob: -3.387971878051758
    4. '
' → logprob: -3.637971878051758
    5. ' j' → logprob: -3.762971878051758
    6. 'j' → logprob: -4.637971878051758
    7. ' idx' → logprob: -5.137971878051758
    8. ' while' → logprob: -5.262971878051758
    9. '       ' → logprob: -5.887971878051758
    10. 'idx' → logprob: -6.012971878051758

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26912957429885864
    2. '=' → logprob: -1.5191295146942139
    3. 'able' → logprob: -4.144129753112793
    4. 'ables' → logprob: -7.769129753112793
    5. 'ed' → logprob: -8.519129753112793
    6. 's' → logprob: -9.519129753112793
    7. ' ' → logprob: -9.644129753112793
    8. 'A' → logprob: -9.894129753112793
    9. 'a' → logprob: -10.019129753112793
    10. '```' → logprob: -10.144129753112793

Token 106: ' min' (ID: 1349)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6551108360290527
    2. ' sum' → logprob: -1.6551108360290527
    3. ' [' → logprob: -2.7801108360290527
    4. ' N' → logprob: -3.2801108360290527
    5. 'N' → logprob: -3.4051108360290527
    6. '0' → logprob: -3.5301108360290527
    7. ' sorted' → logprob: -3.6551108360290527
    8. 'sorted' → logprob: -3.7801108360290527
    9. '[' → logprob: -4.405110836029053
    10. ' A' → logprob: -4.530110836029053

Token 107: '(A' (ID: 10706)
  Prédit: '(rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rem' → logprob: -0.7953575253486633
    2. '(A' → logprob: -1.0453574657440186
    3. '(N' → logprob: -2.1703574657440186
    4. '(' → logprob: -3.4203574657440186
    5. '(delta' → logprob: -3.9203574657440186
    6. '(len' → logprob: -4.295357704162598
    7. '(sum' → logprob: -4.795357704162598
    8. '(B' → logprob: -5.420357704162598
    9. '((' → logprob: -7.545357704162598
    10. '(i' → logprob: -7.670357704162598

Token 108: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.039009369909763336
    2. '[' → logprob: -4.0390095710754395
    3. '[N' → logprob: -4.1640095710754395
    4. '[j' → logprob: -6.2890095710754395
    5. '[-' → logprob: -7.0390095710754395
    6. ')' → logprob: -7.4140095710754395
    7. '[max' → logprob: -7.5390095710754395
    8. '[min' → logprob: -8.539009094238281
    9. '[A' → logprob: -8.664009094238281
    10. '[(' → logprob: -8.789009094238281

Token 109: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13258755207061768
    2. ' ,' → logprob: -2.757587432861328
    3. '+' → logprob: -4.257587432861328
    4. ',i' → logprob: -4.382587432861328
    5. '[i' → logprob: -4.757587432861328
    6. '-' → logprob: -5.007587432861328
    7. ' -' → logprob: -5.007587432861328
    8. ' +' → logprob: -5.882587432861328
    9. ' for' → logprob: -6.632587432861328
    10. 'for' → logprob: -7.007587432861328

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16537660360336304
    2. 'N' → logprob: -2.540376663208008
    3. '+' → logprob: -3.540376663208008
    4. '])' → logprob: -4.415376663208008
    5. ' ' → logprob: -5.040376663208008
    6. '],' → logprob: -5.040376663208008
    7. '-' → logprob: -5.415376663208008
    8. 'i' → logprob: -6.040376663208008
    9. ' N' → logprob: -6.040376663208008
    10. ':' → logprob: -6.165376663208008

Token 111: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04936276748776436
    2. ' ,' → logprob: -3.0493626594543457
    3. '],' → logprob: -7.674362659454346
    4. ' if' → logprob: -9.674363136291504
    5. '),' → logprob: -10.424363136291504
    6. ',n' → logprob: -10.674363136291504
    7. ']' → logprob: -11.174363136291504
    8. ')' → logprob: -11.174363136291504
    9. ' ' → logprob: -11.424363136291504
    10. '`,' → logprob: -11.424363136291504

Token 112: ' rem' (ID: 1662)
  Prédit: ' rem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rem' → logprob: -0.009756917133927345
    2. 'rem' → logprob: -4.634757041931152
    3. '(rem' → logprob: -15.009757041931152
    4. ')' → logprob: -15.884757041931152
    5. ' ' → logprob: -16.134756088256836
    6. '_rem' → logprob: -16.259756088256836
    7. ' ' → logprob: -16.634756088256836
    8. 'reman' → logprob: -16.759756088256836
    9. ' 
' → logprob: -16.884756088256836
    10. 'rest' → logprob: -17.384756088256836

Token 113: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009913649410009384
    2. ')
' → logprob: -7.250991344451904
    3. ' )' → logprob: -8.250991821289062
    4. ' if' → logprob: -12.625991821289062
    5. '))' → logprob: -12.625991821289062
    6. ')
' → logprob: -12.750991821289062
    7. ')

' → logprob: -13.125991821289062
    8. '       ' → logprob: -13.250991821289062
    9. '           ' → logprob: -14.000991821289062
    10. '   ' → logprob: -14.000991821289062

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00888920109719038
    2. '
' → logprob: -5.258889198303223
    3. '<|end|>' → logprob: -6.008889198303223
    4. '            
' → logprob: -8.258889198303223
    5. ')' → logprob: -8.633889198303223
    6. '       ' → logprob: -9.133889198303223
    7. '\n' → logprob: -9.133889198303223
    8. '<|end|>' → logprob: -9.258889198303223
    9. '               ' → logprob: -9.508889198303223
    10. '		' → logprob: -9.633889198303223

Token 115: ' total' (ID: 3609)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2084328979253769
    2. ' total' → logprob: -1.833432912826538
    3. 'total' (adapté à ' total') → logprob: -3.708432912826538
    4. '
' → logprob: -6.208432674407959
    5. ' A' → logprob: -7.583432674407959
    6. '            
' → logprob: -7.583432674407959
    7. ' 
' → logprob: -8.208433151245117
    8. 'A' → logprob: -9.333433151245117
    9. ' ' → logprob: -9.958433151245117
    10. ')' → logprob: -9.958433151245117

Token 116: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.031360190361738205
    2. '+=' → logprob: -3.531360149383545
    3. '+' → logprob: -6.531360149383545
    4. ' +' → logprob: -8.906360626220703
    5. ' -=' → logprob: -12.281360626220703
    6. ' ' → logprob: -12.406360626220703
    7. '<|end|>' → logprob: -13.031360626220703
    8. '          ' → logprob: -14.031360626220703
    9. '   ' → logprob: -14.281360626220703
    10. '  ' → logprob: -14.531360626220703

Token 117: ' avail' (ID: 57507)
  Prédit: ' avail'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avail' → logprob: -0.02977374941110611
    2. 'avail' → logprob: -3.529773712158203
    3. ' ' → logprob: -11.529773712158203
    4. 'Avail' → logprob: -12.404773712158203
    5. ' ava' → logprob: -12.404773712158203
    6. ' av' → logprob: -12.779773712158203
    7. ' aval' → logprob: -14.154773712158203
    8. 'av' → logprob: -14.779773712158203
    9. '(av' → logprob: -15.029773712158203
    10. ' available' → logprob: -15.279773712158203

Token 118: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09274493157863617
    2. '
' → logprob: -3.092744827270508
    3. '<|end|>' → logprob: -3.717744827270508
    4. '   ' → logprob: -5.467744827270508
    5. '<|end|>' → logprob: -5.967744827270508
    6. '       ' → logprob: -5.967744827270508
    7. ' ' → logprob: -6.467744827270508
    8. '            
' → logprob: -6.592744827270508
    9. '\n' → logprob: -6.842744827270508
    10. '    
' → logprob: -7.592744827270508

Token 119: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48947104811668396
    2. '   ' → logprob: -1.1144710779190063
    3. '<|end|>' → logprob: -3.739470958709717
    4. '       ' → logprob: -4.364470958709717
    5. '
' → logprob: -4.864470958709717
    6. ' ' → logprob: -5.614470958709717
    7. '    
' → logprob: -5.614470958709717
    8. '            
' → logprob: -6.489470958709717
    9. '\n' → logprob: -7.114470958709717
    10. ')' → logprob: -7.114470958709717

Token 120: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.47686851024627686
    2. ' A' → logprob: -1.7268685102462769
    3. '           ' → logprob: -2.4768686294555664
    4. 'rem' → logprob: -2.9768686294555664
    5. ' rem' → logprob: -3.7268686294555664
    6. 'return' → logprob: -4.226868629455566
    7. 'B' → logprob: -4.601868629455566
    8. ' return' → logprob: -5.101868629455566
    9. ' B' → logprob: -5.476868629455566
    10. '            ' → logprob: -6.101868629455566

Token 121: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005253921262919903
    2. '[' → logprob: -8.25052547454834
    3. '<|end|>' → logprob: -8.50052547454834
    4. '```' → logprob: -10.62552547454834
    5. '[
' → logprob: -12.00052547454834
    6. 'i' → logprob: -12.25052547454834
    7. '[++' → logprob: -12.37552547454834
    8. 's' → logprob: -12.62552547454834
    9. '[I' → logprob: -12.75052547454834
    10. '<|end|>' → logprob: -13.00052547454834

Token 122: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.368984107510187e-05
    2. '[' → logprob: -11.250033378601074
    3. '+i' → logprob: -11.750033378601074
    4. '[i' → logprob: -12.125033378601074
    5. '+
' → logprob: -12.625033378601074
    6. '+[' → logprob: -13.875033378601074
    7. '+]' → logprob: -13.875033378601074
    8. ' +' → logprob: -14.250033378601074
    9. '1' → logprob: -14.375033378601074
    10. 'plus' → logprob: -16.00003433227539

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.575563020305708e-05
    2. '2' → logprob: -10.250065803527832
    3. ' ' → logprob: -11.125065803527832
    4. '+' → logprob: -11.250065803527832
    5. '   ' → logprob: -14.750065803527832
    6. 'i' → logprob: -14.875065803527832
    7. ']' → logprob: -14.875065803527832
    8. '```' → logprob: -15.250065803527832
    9. '<|end|>' → logprob: -15.562565803527832
    10. '0' → logprob: -16.000064849853516

Token 124: ']' (ID: 60)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.13155710697174072
    2. '-=' → logprob: -3.006556987762451
    3. ']' → logprob: -3.381556987762451
    4. '-' → logprob: -3.756556987762451
    5. ' -' → logprob: -5.131556987762451
    6. ')' → logprob: -5.506556987762451
    7. '[' → logprob: -5.881556987762451
    8. ' ' → logprob: -6.256556987762451
    9. '=' → logprob: -7.381556987762451
    10. '    ' → logprob: -7.756556987762451

Token 125: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.1724988967180252
    2. ' -=' → logprob: -1.9224989414215088
    3. '=' → logprob: -4.79749870300293
    4. '-' → logprob: -5.54749870300293
    5. ' =' → logprob: -10.42249870300293
    6. ' -' → logprob: -11.54749870300293
    7. '+=' → logprob: -12.29749870300293
    8. ' ' → logprob: -12.79749870300293
    9. ')' → logprob: -12.92249870300293
    10. '>' → logprob: -13.79749870300293

Token 126: ' avail' (ID: 57507)
  Prédit: 'avail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'avail' → logprob: -0.0006284446571953595
    2. ' avail' → logprob: -7.375628471374512
    3. 'av' → logprob: -14.250628471374512
    4. 'avai' → logprob: -14.500628471374512
    5. 'ava' → logprob: -14.875628471374512
    6. 'aval' → logprob: -16.375627517700195
    7. 'available' → logprob: -16.500627517700195
    8. 'Avail' → logprob: -16.750627517700195
    9. 'avali' → logprob: -17.125627517700195
    10. 'avil' → logprob: -17.375627517700195

Token 127: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5150126218795776
    2. '<|end|>' → logprob: -1.0150126218795776
    3. '
' → logprob: -3.890012741088867
    4. ' ' → logprob: -5.515012741088867
    5. ')' → logprob: -5.515012741088867
    6. '       ' → logprob: -5.765012741088867
    7. '<|end|>' → logprob: -6.765012741088867
    8. '    
' → logprob: -6.890012741088867
    9. ' return' → logprob: -6.890012741088867
    10. 'return' → logprob: -7.015012741088867

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0055396659299731255
    2. '<|end|>' → logprob: -5.380539894104004
    3. ')' → logprob: -7.755539894104004
    4. '       ' → logprob: -9.255539894104004
    5. '
' → logprob: -9.255539894104004
    6. 'return' → logprob: -9.380539894104004
    7. '    
' → logprob: -10.005539894104004
    8. ' ' → logprob: -10.130539894104004
    9. ' return' → logprob: -10.255539894104004
    10. '	return' → logprob: -10.880539894104004

Token 129: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2385735660791397
    2. '<|end|>' → logprob: -1.8635735511779785
    3. 'return' (adapté à ' return') → logprob: -3.9885735511779785
    4. ' ' → logprob: -4.4885735511779785
    5. ' return' → logprob: -4.7385735511779785
    6. '
' → logprob: -5.1135735511779785
    7. ')' → logprob: -5.2385735511779785
    8. '	return' → logprob: -5.7385735511779785
    9. '\n' → logprob: -6.8635735511779785
    10. '       ' → logprob: -6.9885735511779785

Token 130: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.03804149478673935
    2. ' total' → logprob: -3.288041591644287
    3. '	total' → logprob: -17.413042068481445
    4. '(total' → logprob: -18.038042068481445
    5. ' ' → logprob: -18.913042068481445
    6. 'tot' → logprob: -19.788042068481445
    7. '   ' → logprob: -19.788042068481445
    8. '$total' → logprob: -20.038042068481445
    9. 't' → logprob: -20.413042068481445
    10. ' ' → logprob: -20.413042068481445

Token 131: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0037487715017050505
    2. 'result' → logprob: -5.628748893737793
    3. 'if' → logprob: -10.128748893737793
    4. 'total' → logprob: -10.253748893737793
    5. 'answer' → logprob: -10.253748893737793
    6. 'res' → logprob: -11.503748893737793
    7. '#' → logprob: -11.628748893737793
    8. 'pr' → logprob: -12.253748893737793
    9. 'ans' → logprob: -12.378748893737793
    10. 'r' → logprob: -12.878748893737793

Token 133: '(calc' (ID: 190074)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2520567774772644
    2. '(calc' → logprob: -1.5020568370819092
    3. '(total' → logprob: -9.127057075500488
    4. '(c' → logprob: -11.627057075500488
    5. '(
' → logprob: -12.002057075500488
    6. ' (' → logprob: -14.502057075500488
    7. 'calc' → logprob: -14.627057075500488
    8. '('' → logprob: -14.752057075500488
    9. '(cal' → logprob: -14.877057075500488
    10. '(`' → logprob: -14.877057075500488

Token 134: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -9.088346359931165e-07
    2. 'total' → logprob: -14.625000953674316
    3. '_tot' → logprob: -15.000000953674316
    4. '_' → logprob: -18.625
    5. '_t' → logprob: -18.875
    6. ' _' → logprob: -19.0
    7. '_TOTAL' → logprob: -19.0
    8. '_to' → logprob: -19.125
    9. ' total' → logprob: -19.125
    10. ')_' → logprob: -19.25

Token 135: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0019726462196558714
    2. '(' → logprob: -6.251972675323486
    3. ')' → logprob: -10.251972198486328
    4. ' (' → logprob: -12.876972198486328
    5. '(n' → logprob: -13.001972198486328
    6. ')(' → logprob: -13.376972198486328
    7. '(
' → logprob: -13.626972198486328
    8. '```' → logprob: -14.376972198486328
    9. '(len' → logprob: -14.876972198486328
    10. '((' → logprob: -16.001972198486328

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3557529857498594e-05
    2. ' ,' → logprob: -10.87502384185791
    3. ',A' → logprob: -12.50002384185791
    4. ',N' → logprob: -14.50002384185791
    5. ',
' → logprob: -15.00002384185791
    6. ')' → logprob: -17.125022888183594
    7. '(' → logprob: -17.250022888183594
    8. '‌,' → logprob: -17.750022888183594
    9. '```' → logprob: -18.000022888183594
    10. '，' → logprob: -18.875022888183594

Token 137: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.31326285004615784
    2. ' A' → logprob: -1.3132628202438354
    3. ' ' → logprob: -13.938262939453125
    4. '	A' → logprob: -16.188262939453125
    5. ')' → logprob: -16.688262939453125
    6. '   ' → logprob: -17.563262939453125
    7. ',A' → logprob: -17.563262939453125
    8. '  ' → logprob: -17.938262939453125
    9. '"A' → logprob: -18.813262939453125
    10. ' А' → logprob: -19.063262939453125

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.981667537620524e-06
    2. ' ,' → logprob: -13.750001907348633
    3. ',B' → logprob: -14.125001907348633
    4. ',
' → logprob: -17.000001907348633
    5. ')' → logprob: -17.250001907348633
    6. ',

' → logprob: -18.375001907348633
    7. ' ' → logprob: -20.375001907348633
    8. '),' → logprob: -20.500001907348633
    9. '```' → logprob: -20.500001907348633
    10. ',b' → logprob: -21.250001907348633

Token 139: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.02324547804892063
    2. ' B' → logprob: -3.7732455730438232
    3. ' ' → logprob: -17.023244857788086
    4. ')' → logprob: -18.523244857788086
    5. '	B' → logprob: -19.648244857788086
    6. '   ' → logprob: -20.148244857788086
    7. 'b' → logprob: -20.273244857788086
    8. '>B' → logprob: -20.898244857788086
    9. '  ' → logprob: -21.023244857788086
    10. '_B' → logprob: -21.273244857788086

Token 140: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01104935072362423
    2. ')' → logprob: -4.511049270629883
    3. '))
' → logprob: -14.261049270629883
    4. ')))' → logprob: -15.011049270629883
    5. ')
' → logprob: -15.386049270629883
    6. '),' → logprob: -16.386049270629883
    7. '()))' → logprob: -17.011049270629883
    8. '])' → logprob: -17.136049270629883
    9. '())' → logprob: -17.511049270629883
    10. ' ))' → logprob: -18.011049270629883


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 138
Tokens correctement prédits (1ère position, stricte): 64
Tokens correctement prédits (1ère position, avec adaptation): 65
Tokens correctement prédits (top 10): 113
Précision stricte (1ère position): 46.38%
Précision adaptée (1ère position): 47.10%
Précision (top 10): 81.88%
================================================================================
