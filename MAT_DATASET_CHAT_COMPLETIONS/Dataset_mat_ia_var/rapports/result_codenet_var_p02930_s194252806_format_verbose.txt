================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
number_of_iterations = int(input())

for current_iteration_index in range(number_of_iterations):

    differing_bit_positions = []

    binary_current_iteration = '0' * (11 - len(bin(current_iteration_index))) + bin(current_iteration_index)[2:]

    for comparison_index in range(current_iteration_index + 1, number_of_iterations):

        binary_comparison = '0' * (11 - len(bin(comparison_index))) + bin(comparison_index)[2:]

        for bit_position in range(9):

            if binary_current_iteration[bit_position] != binary_comparison[bit_position]:

                differing_bit_positions.append(9 - bit_position)
                break

    stringified_positions = list(map(str, differing_bit_positions))
    print(' '.join(stringified_positions))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'number' (ID: 8096)
  → Token d'amorce (pas de prédiction)

Token 1: '_of' (ID: 8023)
  → Token d'amorce (pas de prédiction)

Token 2: '_iterations' (ID: 147114)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002141101285815239
    2. '```' → logprob: -6.502140998840332
    3. '=' → logprob: -7.877140998840332
    4. '[' → logprob: -9.502140998840332
    5. ')' → logprob: -9.877140998840332
    6. ' _' → logprob: -10.877140998840332
    7. '.' → logprob: -11.002140998840332
    8. ' =' → logprob: -11.002140998840332
    9. '__' → logprob: -11.377140998840332
    10. '_=' → logprob: -11.752140998840332

Token 4: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0261806920170784
    2. '10' → logprob: -3.7761807441711426
    3. '100' → logprob: -6.526180744171143
    4. '0' → logprob: -6.651180744171143
    5. '20' → logprob: -9.401180267333984
    6. '1' → logprob: -9.776180267333984
    7. '5' → logprob: -10.901180267333984
    8. '50' → logprob: -11.651180267333984
    9. ' ' → logprob: -12.901180267333984
    10. '32' → logprob: -14.026180267333984

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005165747134014964
    2. '('' → logprob: -8.375516891479492
    3. ''' → logprob: -9.625516891479492
    4. '```' → logprob: -9.750516891479492
    5. '`' → logprob: -10.000516891479492
    6. '("("' → logprob: -10.500516891479492
    7. '(
' → logprob: -10.750516891479492
    8. '()' → logprob: -11.500516891479492
    9. ' (' → logprob: -11.750516891479492
    10. '[' → logprob: -11.875516891479492

Token 6: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00834139995276928
    2. ')' → logprob: -5.383341312408447
    3. '()' → logprob: -6.008341312408447
    4. '('' → logprob: -8.383341789245605
    5. '(()' → logprob: -8.633341789245605
    6. '("("' → logprob: -8.758341789245605
    7. '```' → logprob: -8.883341789245605
    8. '())' → logprob: -8.883341789245605
    9. '(
' → logprob: -9.133341789245605
    10. '<|end|>' → logprob: -10.383341789245605

Token 7: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24110884964466095
    2. '*' → logprob: -2.1161088943481445
    3. ' for' → logprob: -3.2411088943481445
    4. ':' → logprob: -4.2411088943481445
    5. '\n' → logprob: -4.4911088943481445
    6. '#' → logprob: -5.2411088943481445
    7. '%' → logprob: -5.6161088943481445
    8. '```' → logprob: -5.8661088943481445
    9. '+' → logprob: -6.1161088943481445
    10. ')' → logprob: -6.2411088943481445

Token 8: ' current' (ID: 2208)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020807428285479546
    2. '  ' → logprob: -3.8958075046539307
    3. ' i' → logprob: -8.645807266235352
    4. '_' → logprob: -11.020807266235352
    5. ''' → logprob: -11.645807266235352
    6. ' ' → logprob: -12.145807266235352
    7. ' n' → logprob: -12.270807266235352
    8. '   ' → logprob: -12.395807266235352
    9. ' ,' → logprob: -12.395807266235352
    10. ' range' → logprob: -12.520807266235352

Token 9: '_iteration' (ID: 161656)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015340105630457401
    2. ' ' → logprob: -4.390340328216553
    3. ' in' → logprob: -6.515340328216553
    4. ' _' → logprob: -8.140339851379395
    5. '_space' → logprob: -8.390339851379395
    6. '_number' → logprob: -8.640339851379395
    7. '  ' → logprob: -9.015339851379395
    8. '_token' → logprob: -9.140339851379395
    9. ' )' → logprob: -9.765339851379395
    10. '_in' → logprob: -9.890339851379395

Token 10: '_index' (ID: 7748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027968641370534897
    2. '_' → logprob: -4.652968406677246
    3. 'in' → logprob: -4.652968406677246
    4. ' ' → logprob: -6.402968406677246
    5. ' +=' → logprob: -6.902968406677246
    6. '  ' → logprob: -7.152968406677246
    7. '```' → logprob: -7.277968406677246
    8. ' :' → logprob: -7.277968406677246
    9. '(' → logprob: -7.402968406677246
    10. ',' → logprob: -7.902968406677246

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17035463452339172
    2. 'in' → logprob: -1.9203546047210693
    3. ' ' → logprob: -5.170354843139648
    4. '  ' → logprob: -7.045354843139648
    5. '```' → logprob: -7.420354843139648
    6. ' :' → logprob: -7.670354843139648
    7. '<|end|>' → logprob: -7.920354843139648
    8. '+' → logprob: -8.170354843139648
    9. ':' → logprob: -8.420354843139648
    10. ')' → logprob: -8.420354843139648

Token 12: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06197172403335571
    2. 'range' → logprob: -2.811971664428711
    3. '(range' → logprob: -13.186971664428711
    4. '	range' → logprob: -13.436971664428711
    5. ' ' → logprob: -14.936971664428711
    6. '_range' → logprob: -15.561971664428711
    7. 'Range' → logprob: -16.68697166442871
    8. ' xrange' → logprob: -17.31197166442871
    9. '```' → logprob: -17.31197166442871
    10. ')' → logprob: -17.68697166442871

Token 13: '(number' (ID: 32955)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03811389580368996
    2. '(number' → logprob: -3.288113832473755
    3. '(current' → logprob: -10.038113594055176
    4. '(len' → logprob: -11.913113594055176
    5. ' (' → logprob: -12.038113594055176
    6. '(`' → logprob: -12.413113594055176
    7. '(range' → logprob: -13.538113594055176
    8. '(
' → logprob: -13.663113594055176
    9. '((' → logprob: -13.663113594055176
    10. '(n' → logprob: -13.663113594055176

Token 14: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0018539120210334659
    2. '_' → logprob: -7.001853942871094
    3. '(' → logprob: -7.126853942871094
    4. '(_' → logprob: -10.126853942871094
    5. ')' → logprob: -10.376853942871094
    6. '_)' → logprob: -10.501853942871094
    7. ')_' → logprob: -11.001853942871094
    8. '_(' → logprob: -12.251853942871094
    9. '_for' → logprob: -12.626853942871094
    10. '(number' → logprob: -12.751853942871094

Token 15: '_iterations' (ID: 147114)
  Prédit: '_iterations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iterations' → logprob: -8.041768160182983e-05
    2. '_iter' → logprob: -9.750080108642578
    3. '_iters' → logprob: -11.125080108642578
    4. '_iteration' → logprob: -12.250080108642578
    5. '_' → logprob: -14.000080108642578
    6. '_inter' → logprob: -14.125080108642578
    7. '_it' → logprob: -14.500080108642578
    8. '_i' → logprob: -15.250080108642578
    9. ' _' → logprob: -16.875080108642578
    10. '_in' → logprob: -16.875080108642578

Token 16: '):

' (ID: 15626)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -7.588793960167095e-05
    2. ')' → logprob: -9.750076293945312
    3. ':' → logprob: -12.125076293945312
    4. '+' → logprob: -12.375076293945312
    5. '):
' → logprob: -12.500076293945312
    6. ' ):' → logprob: -13.375076293945312
    7. ',' → logprob: -14.375076293945312
    8. '   ' → logprob: -14.750076293945312
    9. '```' → logprob: -14.875076293945312
    10. ']:' → logprob: -15.750076293945312

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013206236064434052
    2. 'print' → logprob: -5.1382060050964355
    3. ' print' → logprob: -5.7632060050964355
    4. '    
' → logprob: -5.8882060050964355
    5. '    ' → logprob: -7.0132060050964355
    6. '```' → logprob: -9.138206481933594
    7. ' indentation' → logprob: -10.263206481933594
    8. '4' → logprob: -10.388206481933594
    9. '     
' → logprob: -10.513206481933594
    10. '   ' → logprob: -10.513206481933594

Token 18: ' differing' (ID: 108739)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6788361072540283
    2. '   ' → logprob: -0.8038361072540283
    3. '    ' → logprob: -3.6788361072540283
    4. ' print' → logprob: -5.303835868835449
    5. 'result' → logprob: -5.553835868835449
    6. 'pass' → logprob: -5.553835868835449
    7. 'input' → logprob: -5.928835868835449
    8. 'user' → logprob: -6.803835868835449
    9. ' ' → logprob: -7.428835868835449
    10. 'n' → logprob: -8.05383586883545

Token 19: '_bit' (ID: 39574)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10764222592115402
    2. '_chars' → logprob: -3.60764217376709
    3. '_indices' → logprob: -4.10764217376709
    4. '_char' → logprob: -4.35764217376709
    5. '_elements' → logprob: -4.98264217376709
    6. '_positions' → logprob: -5.23264217376709
    7. '_values' → logprob: -5.48264217376709
    8. '_value' → logprob: -5.73264217376709
    9. '_character' → logprob: -5.73264217376709
    10. '_count' → logprob: -6.10764217376709

Token 20: '_positions' (ID: 93193)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0017802569782361388
    2. '_s' → logprob: -7.126780033111572
    3. ' =' → logprob: -7.501780033111572
    4. '_index' → logprob: -8.37678050994873
    5. ' s' → logprob: -8.75178050994873
    6. '_' → logprob: -11.37678050994873
    7. '=' → logprob: -12.00178050994873
    8. '_mask' → logprob: -12.12678050994873
    9. '_position' → logprob: -12.50178050994873
    10. '_pos' → logprob: -13.37678050994873

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026093358173966408
    2. '.append' → logprob: -4.151093482971191
    3. '=' → logprob: -6.526093482971191
    4. '[]' → logprob: -6.526093482971191
    5. '<|end|>' → logprob: -6.526093482971191
    6. '.' → logprob: -6.651093482971191
    7. '[' → logprob: -7.151093482971191
    8. ' .' → logprob: -7.401093482971191
    9. '   ' → logprob: -7.401093482971191
    10. ' ' → logprob: -7.526093482971191

Token 22: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.4342349171638489
    2. ' []' → logprob: -1.059234857559204
    3. 'set' → logprob: -5.559235095977783
    4. '[' → logprob: -7.809235095977783
    5. ' set' → logprob: -7.809235095977783
    6. ' [' → logprob: -7.934235095977783
    7. '[int' → logprob: -8.559234619140625
    8. 'list' → logprob: -8.809234619140625
    9. ' list' → logprob: -9.809234619140625
    10. '[]}' → logprob: -10.559234619140625

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14674822986125946
    2. ' for' → logprob: -2.3967483043670654
    3. 'for' → logprob: -3.5217483043670654
    4. ' ' → logprob: -5.521748065948486
    5. '    
' → logprob: -6.021748065948486
    6. '<|end|>' → logprob: -6.146748065948486
    7. '    ' → logprob: -6.271748065948486
    8. 'current' → logprob: -7.021748065948486
    9. ' bit' → logprob: -7.646748065948486
    10. '[' → logprob: -7.771748065948486

Token 24: ' binary' (ID: 15600)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7447099685668945
    2. 'input' → logprob: -1.7447099685668945
    3. 'line' → logprob: -2.3697099685668945
    4. '   ' → logprob: -2.4947099685668945
    5. ' for' → logprob: -3.1197099685668945
    6. 'bit' → logprob: -3.2447099685668945
    7. 'bits' → logprob: -3.7447099685668945
    8. 'number' → logprob: -4.3697099685668945
    9. 'current' → logprob: -4.6197099685668945
    10. ' bit' → logprob: -4.7447099685668945

Token 25: '_current' (ID: 23981)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.6305198073387146
    2. '_rep' → logprob: -1.6305198669433594
    3. '_string' → logprob: -2.1305198669433594
    4. '_value' → logprob: -3.0055198669433594
    5. '_' → logprob: -3.5055198669433594
    6. '_repr' → logprob: -3.5055198669433594
    7. '_current' → logprob: -4.005519866943359
    8. '_input' → logprob: -4.630519866943359
    9. '_str' → logprob: -5.880519866943359
    10. '_numbers' → logprob: -6.130519866943359

Token 26: '_iteration' (ID: 161656)
  Prédit: '_number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.09657862037420273
    2. '_value' → logprob: -2.721578598022461
    3. '_' → logprob: -4.846578598022461
    4. '_rep' → logprob: -5.596578598022461
    5. '_input' → logprob: -5.721578598022461
    6. '_string' → logprob: -5.721578598022461
    7. '_iteration' → logprob: -6.221578598022461
    8. '_num' → logprob: -7.096578598022461
    9. '_index' → logprob: -7.096578598022461
    10. '_version' → logprob: -7.221578598022461

Token 27: ' =' (ID: 314)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.856195867061615
    2. ' =' → logprob: -1.2311959266662598
    3. '=' → logprob: -1.9811959266662598
    4. '_' → logprob: -2.8561959266662598
    5. '_number' → logprob: -3.2311959266662598
    6. '_index' → logprob: -4.35619592666626
    7. '_string' → logprob: -4.35619592666626
    8. '_rep' → logprob: -5.10619592666626
    9. '_binary' → logprob: -5.23119592666626
    10. '_bits' → logprob: -6.48119592666626

Token 28: ' '' (ID: 461)
  Prédit: ' bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bin' → logprob: -0.5689764618873596
    2. 'bin' → logprob: -1.0689764022827148
    3. ' format' → logprob: -2.693976402282715
    4. 'format' → logprob: -3.943976402282715
    5. ' f' → logprob: -5.943976402282715
    6. ' ' → logprob: -8.193976402282715
    7. 'f' → logprob: -8.318976402282715
    8. '   ' → logprob: -9.318976402282715
    9. 'input' → logprob: -9.693976402282715
    10. '(bin' → logprob: -10.068976402282715

Token 29: '0' (ID: 15)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.6393585205078125
    2. '{' → logprob: -0.8893585205078125
    3. 'format' → logprob: -2.8893585205078125
    4. '{:' → logprob: -5.3893585205078125
    5. ''{' → logprob: -7.6393585205078125
    6. '0' → logprob: -8.139358520507812
    7. '"{' → logprob: -8.889358520507812
    8. 'f' → logprob: -9.514358520507812
    9. ''' → logprob: -9.639358520507812
    10. '{{' → logprob: -9.889358520507812

Token 30: ''' (ID: 6)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.061419080942869186
    2. '{' → logprob: -3.3114190101623535
    3. ''' → logprob: -4.3114190101623535
    4. '1' → logprob: -4.9364190101623535
    5. 'bin' → logprob: -6.1864190101623535
    6. '{}' → logprob: -8.436419486999512
    7. ''b' → logprob: -9.311419486999512
    8. 'binary' → logprob: -10.561419486999512
    9. '{:' → logprob: -10.561419486999512
    10. '0' → logprob: -10.686419486999512

Token 31: ' *' (ID: 425)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06490267068147659
    2. '1' → logprob: -2.8149027824401855
    3. '0' → logprob: -7.1899027824401855
    4. '{}' → logprob: -7.5649027824401855
    5. '{' → logprob: -7.8149027824401855
    6. 'bin' → logprob: -8.314902305603027
    7. '+b' → logprob: -8.564902305603027
    8. ' +' → logprob: -8.814902305603027
    9. '*' → logprob: -9.064902305603027
    10. '+' → logprob: -9.314902305603027

Token 32: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4642324149608612
    2. '8' → logprob: -1.9642324447631836
    3. '10' → logprob: -2.7142324447631836
    4. '32' → logprob: -2.7142324447631836
    5. ' (' → logprob: -3.0892324447631836
    6. '16' → logprob: -4.464232444763184
    7. '4' → logprob: -4.839232444763184
    8. '20' → logprob: -5.214232444763184
    9. ' ' → logprob: -5.339232444763184
    10. '5' → logprob: -5.464232444763184

Token 33: '11' (ID: 994)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '8' → logprob: -1.2063677310943604
    2. '4' → logprob: -1.4563677310943604
    3. '10' → logprob: -1.9563677310943604
    4. '5' → logprob: -2.8313677310943604
    5. 'number' → logprob: -2.8313677310943604
    6. '32' → logprob: -3.2063677310943604
    7. '7' → logprob: -3.3313677310943604
    8. '3' → logprob: -3.8313677310943604
    9. '20' → logprob: -3.8313677310943604
    10. '6' → logprob: -3.9563677310943604

Token 34: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.19205504655838013
    2. '-' → logprob: -1.8170549869537354
    3. '-l' → logprob: -4.4420552253723145
    4. ' ' → logprob: -7.9420552253723145
    5. ')' → logprob: -10.317054748535156
    6. '-b' → logprob: -11.442054748535156
    7. '   ' → logprob: -11.942054748535156
    8. '-n' → logprob: -12.067054748535156
    9. '```' → logprob: -12.067054748535156
    10. '-number' → logprob: -12.192054748535156

Token 35: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.001249877386726439
    2. ' len' → logprob: -7.50124979019165
    3. 'bin' → logprob: -7.50124979019165
    4. 'current' → logprob: -10.376250267028809
    5. '6' → logprob: -10.626250267028809
    6. '5' → logprob: -10.876250267028809
    7. '4' → logprob: -11.376250267028809
    8. '2' → logprob: -11.376250267028809
    9. '7' → logprob: -11.626250267028809
    10. '1' → logprob: -12.001250267028809

Token 36: '(bin' (ID: 117327)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.32380709052085876
    2. '(bin' → logprob: -1.3238071203231812
    3. '(' → logprob: -4.573807239532471
    4. 'bin' → logprob: -9.698806762695312
    5. '(binary' → logprob: -9.823806762695312
    6. 'str' → logprob: -10.573806762695312
    7. '(b' → logprob: -11.198806762695312
    8. '(
' → logprob: -12.448806762695312
    9. ')' → logprob: -12.948806762695312
    10. '('' → logprob: -13.573806762695312

Token 37: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.07573520392179489
    2. '(' → logprob: -3.325735092163086
    3. '(number' → logprob: -3.700735092163086
    4. '(i' → logprob: -5.200735092163086
    5. '(bin' → logprob: -5.325735092163086
    6. 'current' → logprob: -8.075735092163086
    7. '(input' → logprob: -8.200735092163086
    8. '(int' → logprob: -8.450735092163086
    9. '((' → logprob: -8.700735092163086
    10. '(x' → logprob: -8.950735092163086

Token 38: '_iteration' (ID: 161656)
  Prédit: '_iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iteration' → logprob: -0.0112931402400136
    2. '(current' → logprob: -4.761292934417725
    3. '[current' → logprob: -6.511292934417725
    4. '_number' → logprob: -7.636292934417725
    5. '_iterations' → logprob: -7.636292934417725
    6. '_current' → logprob: -9.636293411254883
    7. '_iter' → logprob: -9.886293411254883
    8. '_index' → logprob: -11.261293411254883
    9. 'Iteration' → logprob: -11.261293411254883
    10. '(' → logprob: -11.636293411254883

Token 39: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0025181116070598364
    2. 'index' → logprob: -6.502518177032471
    3. '_value' → logprob: -7.752518177032471
    4. '_number' → logprob: -9.127517700195312
    5. '(index' → logprob: -9.502517700195312
    6. '_x' → logprob: -9.502517700195312
    7. '(_' → logprob: -10.252517700195312
    8. 'Index' → logprob: -10.377517700195312
    9. 'o' → logprob: -10.502517700195312
    10. '_i' → logprob: -10.627517700195312

Token 40: ')))' (ID: 15975)
  Prédit: ')['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.10150843113660812
    2. '[' → logprob: -2.351508378982544
    3. '()[' → logprob: -7.851508617401123
    4. '(' → logprob: -8.476508140563965
    5. '')[' → logprob: -8.476508140563965
    6. ')' → logprob: -8.976508140563965
    7. '())[' → logprob: -9.101508140563965
    8. '")[' → logprob: -10.101508140563965
    9. ' )[' → logprob: -10.351508140563965
    10. '[current' → logprob: -10.476508140563965

Token 41: ' +' (ID: 659)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002917095785960555
    2. ')' → logprob: -6.252917289733887
    3. '+' → logprob: -7.377917289733887
    4. '()[' → logprob: -9.252917289733887
    5. '(' → logprob: -9.377917289733887
    6. ')+' → logprob: -9.752917289733887
    7. 's' → logprob: -9.877917289733887
    8. '2' → logprob: -12.002917289733887
    9. '.replace' → logprob: -12.127917289733887
    10. 'b' → logprob: -12.252917289733887

Token 42: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.0010510309366509318
    2. ' bin' → logprob: -6.87605094909668
    3. '(bin' → logprob: -11.25105094909668
    4. 'str' → logprob: -13.50105094909668
    5. 'format' → logprob: -13.50105094909668
    6. 'b' → logprob: -13.62605094909668
    7. 'binary' → logprob: -14.25105094909668
    8. '/bin' → logprob: -15.37605094909668
    9. 'f' → logprob: -16.37605094909668
    10. ' ' → logprob: -16.37605094909668

Token 43: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.0019355426775291562
    2. '(' → logprob: -6.2519354820251465
    3. 'current' → logprob: -12.126935958862305
    4. '[current' → logprob: -14.501935958862305
    5. '(
' → logprob: -15.376935958862305
    6. '```' → logprob: -15.626935958862305
    7. '$current' → logprob: -16.376935958862305
    8. ' current' → logprob: -16.501935958862305
    9. '(value' → logprob: -16.626935958862305
    10. ',current' → logprob: -16.876935958862305

Token 44: '_iteration' (ID: 161656)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.2312949150800705
    2. '_current' → logprob: -1.981294870376587
    3. '_iteration' → logprob: -2.731294870376587
    4. 'current' → logprob: -5.981295108795166
    5. '[current' → logprob: -8.231294631958008
    6. '(iter' → logprob: -8.981294631958008
    7. '_iter' → logprob: -9.106294631958008
    8. ')' → logprob: -9.731294631958008
    9. '(' → logprob: -9.856294631958008
    10. '(_' → logprob: -10.106294631958008

Token 45: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.08491404354572296
    2. '(current' → logprob: -2.709913969039917
    3. 'current' → logprob: -4.834914207458496
    4. '_current' → logprob: -5.584914207458496
    5. '[current' → logprob: -6.209914207458496
    6. 'index' → logprob: -7.209914207458496
    7. ')' → logprob: -9.209914207458496
    8. '```' → logprob: -9.459914207458496
    9. '(' → logprob: -9.834914207458496
    10. ' current' → logprob: -10.084914207458496

Token 46: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.3966860771179199
    2. '())[' → logprob: -1.14668607711792
    3. '()[' → logprob: -5.02168607711792
    4. '[' → logprob: -6.64668607711792
    5. '```' → logprob: -7.39668607711792
    6. ')' → logprob: -8.021686553955078
    7. '')[' → logprob: -8.021686553955078
    8. '(' → logprob: -8.896686553955078
    9. '")[' → logprob: -9.146686553955078
    10. ' )[' → logprob: -9.396686553955078

Token 47: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.8312570318812504e-05
    2. '3' → logprob: -11.500018119812012
    3. '
' → logprob: -12.875018119812012
    4. '```' → logprob: -13.125018119812012
    5. ' ' → logprob: -14.125018119812012
    6. '>' → logprob: -14.750018119812012
    7. '

' → logprob: -14.750018119812012
    8. ':' → logprob: -14.937518119812012
    9. '4' → logprob: -15.437518119812012
    10. 'prefix' → logprob: -16.062519073486328

Token 48: ':]

' (ID: 170549)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.0010773492977023125
    2. ' :]' → logprob: -7.751077175140381
    3. ':].' → logprob: -7.751077175140381
    4. ':' → logprob: -9.251077651977539
    5. ']' → logprob: -9.251077651977539
    6. '()]' → logprob: -11.626077651977539
    7. ':],' → logprob: -12.376077651977539
    8. ' ]' → logprob: -13.001077651977539
    9. ':]

' → logprob: -13.251077651977539
    10. ':]
' → logprob: -13.376077651977539

Token 49: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' for' (ID: 395)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5740237236022949
    2. ' ' → logprob: -1.574023723602295
    3. '_' → logprob: -3.199023723602295
    4. '+' → logprob: -3.449023723602295
    5. ')' → logprob: -3.574023723602295
    6. ':' → logprob: -3.574023723602295
    7. '   ' → logprob: -3.574023723602295
    8. '  ' → logprob: -4.824023723602295
    9. '[:]' → logprob: -4.949023723602295
    10. '<|end|>' → logprob: -4.949023723602295

Token 51: ' comparison' (ID: 19211)
  Prédit: ' previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' previous' → logprob: -1.2503530979156494
    2. ' bit' → logprob: -2.1253530979156494
    3. ' other' → logprob: -2.2503530979156494
    4. ' j' → logprob: -2.5003530979156494
    5. ' next' → logprob: -2.7503530979156494
    6. ' current' → logprob: -2.7503530979156494
    7. 'previous' → logprob: -3.0003530979156494
    8. ' i' → logprob: -3.2503530979156494
    9. 'other' → logprob: -3.3753530979156494
    10. ' reference' → logprob: -3.8753530979156494

Token 52: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.032048024237155914
    2. '_in' → logprob: -4.282048225402832
    3. '_bit' → logprob: -5.032048225402832
    4. '_' → logprob: -5.407048225402832
    5. ' in' → logprob: -5.907048225402832
    6. 'in' → logprob: -6.907048225402832
    7. '_position' → logprob: -7.282048225402832
    8. '_number' → logprob: -7.532048225402832
    9. '_value' → logprob: -7.782048225402832
    10. ' _' → logprob: -8.157048225402832

Token 53: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01417867373675108
    2. 'in' → logprob: -4.26417875289917
    3. ' ' → logprob: -11.514178276062012
    4. '	in' → logprob: -12.889178276062012
    5. ',' → logprob: -14.764178276062012
    6. '   ' → logprob: -14.889178276062012
    7. '<|end|>' → logprob: -15.014178276062012
    8. '  ' → logprob: -15.139178276062012
    9. 'inth' → logprob: -16.014179229736328
    10. '<|end|>' → logprob: -16.201679229736328

Token 54: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25194835662841797
    2. 'range' → logprob: -1.501948356628418
    3. ' ' → logprob: -12.001948356628418
    4. '(range' → logprob: -12.376948356628418
    5. '	range' → logprob: -12.751948356628418
    6. ' current' → logprob: -13.814448356628418
    7. '   ' → logprob: -14.501948356628418
    8. '  ' → logprob: -14.501948356628418
    9. ' in' → logprob: -14.814448356628418
    10. 'in' → logprob: -14.939448356628418

Token 55: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.2910681664943695
    2. '(number' → logprob: -1.541068196296692
    3. '(' → logprob: -3.2910680770874023
    4. ' (' → logprob: -6.916068077087402
    5. ' ' → logprob: -9.916068077087402
    6. '(n' → logprob: -10.291068077087402
    7. ' current' → logprob: -11.541068077087402
    8. 'number' → logprob: -11.666068077087402
    9. 'current' → logprob: -11.791068077087402
    10. '(len' → logprob: -11.916068077087402

Token 56: '_iteration' (ID: 161656)
  Prédit: '_iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iteration' → logprob: -0.011270747520029545
    2. '_iterations' → logprob: -4.886270523071289
    3. '_index' → logprob: -5.886270523071289
    4. '_number' → logprob: -7.511270523071289
    5. '_' → logprob: -9.136270523071289
    6. '_iter' → logprob: -9.386270523071289
    7. '+' → logprob: -10.136270523071289
    8. 'iteration' → logprob: -11.011270523071289
    9. '_iterator' → logprob: -11.011270523071289
    10. '-' → logprob: -11.386270523071289

Token 57: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0007229181355796754
    2. '+' → logprob: -7.375722885131836
    3. 'index' → logprob: -9.750722885131836
    4. 'Index' → logprob: -11.750722885131836
    5. '-' → logprob: -12.125722885131836
    6. ')' → logprob: -12.375722885131836
    7. '_' → logprob: -12.375722885131836
    8. '   ' → logprob: -13.000722885131836
    9. ' +' → logprob: -13.000722885131836
    10. '_indices' → logprob: -13.375722885131836

Token 58: ' +' (ID: 659)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3911452293395996
    2. '+' → logprob: -1.3911452293395996
    3. ' +' → logprob: -2.7661452293395996
    4. '   ' → logprob: -5.1411452293396
    5. '):
' → logprob: -5.3911452293396
    6. '       ' → logprob: -7.2661452293396
    7. '):

' → logprob: -7.6411452293396
    8. ')' → logprob: -8.891145706176758
    9. ' ):' → logprob: -9.266145706176758
    10. '-' → logprob: -10.141145706176758

Token 59: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023131117632146925
    2. ' ' → logprob: -8.375231742858887
    3. '   ' → logprob: -15.000231742858887
    4. '2' → logprob: -15.500231742858887
    5. ',' → logprob: -16.87523078918457
    6. '0' → logprob: -16.87523078918457
    7. '  ' → logprob: -17.37523078918457
    8. '```' → logprob: -17.62523078918457
    9. ')' → logprob: -17.75023078918457
    10. '<|end|>' → logprob: -18.62523078918457

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016086915275081992
    2. ' ' → logprob: -8.750161170959473
    3. '2' → logprob: -14.312661170959473
    4. '   ' → logprob: -14.625161170959473
    5. '0' → logprob: -15.500161170959473
    6. '```' → logprob: -15.562661170959473
    7. '  ' → logprob: -15.687661170959473
    8. '<|end|>' → logprob: -16.562660217285156
    9. 'for' → logprob: -16.625160217285156
    10. '`' → logprob: -17.375160217285156

Token 61: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1435713768005371
    2. ',' → logprob: -2.018571376800537
    3. ' ,' → logprob: -8.268571853637695
    4. '):
' → logprob: -8.518571853637695
    5. ' ):' → logprob: -8.893571853637695
    6. '):

' → logprob: -9.268571853637695
    7. ',len' → logprob: -9.643571853637695
    8. ')' → logprob: -10.143571853637695
    9. ',n' → logprob: -10.393571853637695
    10. '   ' → logprob: -11.268571853637695

Token 62: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.47509366273880005
    2. ' number' → logprob: -0.9750936627388
    3. '11' → logprob: -7.725093841552734
    4. '   ' → logprob: -8.225093841552734
    5. ' ' → logprob: -8.475093841552734
    6. '10' → logprob: -10.600093841552734
    7. '  ' → logprob: -11.350093841552734
    8. ')' → logprob: -11.600093841552734
    9. '    ' → logprob: -11.975093841552734
    10. '(number' → logprob: -12.475093841552734

Token 63: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.981667537620524e-06
    2. '_iterations' → logprob: -13.625001907348633
    3. 'of' → logprob: -14.875001907348633
    4. '_' → logprob: -15.875001907348633
    5. ' of' → logprob: -16.000001907348633
    6. ')' → logprob: -16.125001907348633
    7. '_OF' → logprob: -17.500001907348633
    8. ')_' → logprob: -17.750001907348633
    9. '   ' → logprob: -18.250001907348633
    10. 'Of' → logprob: -18.250001907348633

Token 64: '_iterations' (ID: 147114)
  Prédit: '_iterations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iterations' → logprob: -0.0017070822650566697
    2. 'iterations' → logprob: -6.376707077026367
    3. '_' → logprob: -12.876707077026367
    4. '_bits' → logprob: -14.751707077026367
    5. ' ' → logprob: -15.001707077026367
    6. ')' → logprob: -15.126707077026367
    7. '_iter' → logprob: -15.251707077026367
    8. 'Iterations' → logprob: -15.501707077026367
    9. '```' → logprob: -15.501707077026367
    10. '_iteration' → logprob: -15.751707077026367

Token 65: '):

' (ID: 15626)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007167232106439769
    2. '):

' → logprob: -7.875716686248779
    3. '):
' → logprob: -8.250717163085938
    4. '+' → logprob: -10.375717163085938
    5. ':' → logprob: -10.625717163085938
    6. '   ' → logprob: -11.500717163085938
    7. ')' → logprob: -12.125717163085938
    8. ' ):' → logprob: -13.000717163085938
    9. ' +' → logprob: -14.375717163085938
    10. '):
' → logprob: -15.000717163085938

Token 66: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4070434868335724
    2. '   ' → logprob: -1.40704345703125
    3. '       ' → logprob: -2.78204345703125
    4. ' ' → logprob: -4.78204345703125
    5. ')' → logprob: -5.15704345703125
    6. ' :' → logprob: -5.53204345703125
    7. '):' → logprob: -6.15704345703125
    8. ':
' → logprob: -6.78204345703125
    9. '<|end|>' → logprob: -6.78204345703125
    10. '    ' → logprob: -7.03204345703125

Token 67: ' binary' (ID: 15600)
  Prédit: ' binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.20523129403591156
    2. 'binary' (adapté à ' binary') → logprob: -2.080231189727783
    3. '   ' → logprob: -3.330231189727783
    4. '       ' → logprob: -4.080231189727783
    5. '           ' → logprob: -5.330231189727783
    6. ' current' → logprob: -7.080231189727783
    7. ' ' → logprob: -7.080231189727783
    8. ' if' → logprob: -8.330231666564941
    9. '```' → logprob: -9.080231666564941
    10. 'diff' → logprob: -9.455231666564941

Token 68: '_com' (ID: 10828)
  Prédit: '_current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -0.07898617535829544
    2. '_' → logprob: -2.578986167907715
    3. ''_' → logprob: -10.203986167907715
    4. '_com' → logprob: -11.203986167907715
    5. '"_' → logprob: -11.828986167907715
    6. '_previous' → logprob: -12.328986167907715
    7. '[' → logprob: -13.078986167907715
    8. '_completion' → logprob: -13.078986167907715
    9. '```' → logprob: -13.203986167907715
    10. 'current' → logprob: -13.203986167907715

Token 69: 'parison' (ID: 80438)
  Prédit: 'parison'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parison' → logprob: -0.0005625653429888189
    2. '_current' → logprob: -8.37556266784668
    3. '_' → logprob: -8.87556266784668
    4. 'par' → logprob: -9.50056266784668
    5. '```' → logprob: -10.00056266784668
    6. 'paration' → logprob: -11.00056266784668
    7. 'current' → logprob: -11.12556266784668
    8. 'paring' → logprob: -11.50056266784668
    9. 'parator' → logprob: -11.75056266784668
    10. '_par' → logprob: -12.37556266784668

Token 70: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3887685239315033
    2. ' =' → logprob: -1.1387685537338257
    3. '_' → logprob: -6.388768672943115
    4. '_current' → logprob: -8.513768196105957
    5. '_=' → logprob: -12.388768196105957
    6. ')' → logprob: -12.763768196105957
    7. ' ' → logprob: -13.513768196105957
    8. 'current' → logprob: -13.513768196105957
    9. '=current' → logprob: -13.638768196105957
    10. 'Current' → logprob: -14.013768196105957

Token 71: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31344226002693176
    2. ' '' → logprob: -1.3134422302246094
    3. ' ' → logprob: -9.68844223022461
    4. '"' → logprob: -9.81344223022461
    5. ''b' → logprob: -10.93844223022461
    6. ' bin' → logprob: -11.18844223022461
    7. 'bin' → logprob: -11.31344223022461
    8. '('' → logprob: -12.06344223022461
    9. '  ' → logprob: -13.06344223022461
    10. ''s' → logprob: -13.31344223022461

Token 72: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5759624242782593
    2. '0' → logprob: -0.8259624242782593
    3. ' '' → logprob: -11.20096206665039
    4. ' ' → logprob: -12.32596206665039
    5. 'bin' → logprob: -13.70096206665039
    6. '')' → logprob: -13.95096206665039
    7. '"' → logprob: -14.45096206665039
    8. '{' → logprob: -14.45096206665039
    9. '`' → logprob: -14.70096206665039
    10. 'binary' → logprob: -15.45096206665039

Token 73: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -4.35837464465294e-05
    2. '*' → logprob: -10.250043869018555
    3. ''*' → logprob: -11.750043869018555
    4. ''s' → logprob: -15.625043869018555
    5. '"' → logprob: -16.375043869018555
    6. '*(' → logprob: -18.000043869018555
    7. '```' → logprob: -18.125043869018555
    8. ''''' → logprob: -18.250043869018555
    9. ' *' → logprob: -19.000043869018555
    10. ''(' → logprob: -19.375043869018555

Token 74: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.04618667811155319
    2. ' *' → logprob: -3.171186685562134
    3. '*(' → logprob: -5.796186447143555
    4. ''' → logprob: -9.046186447143555
    5. '```' → logprob: -11.796186447143555
    6. ''*' → logprob: -12.796186447143555
    7. '"' → logprob: -12.921186447143555
    8. '#' → logprob: -13.046186447143555
    9. '(' → logprob: -13.296186447143555
    10. '**' → logprob: -13.296186447143555

Token 75: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004882152716163546
    2. ' (' → logprob: -7.62548828125
    3. '(len' → logprob: -17.00048828125
    4. '   ' → logprob: -17.37548828125
    5. '  ' → logprob: -17.37548828125
    6. '(max' → logprob: -17.75048828125
    7. '        ' → logprob: -18.12548828125
    8. '          ' → logprob: -18.37548828125
    9. '           ' → logprob: -18.37548828125
    10. '       ' → logprob: -18.37548828125

Token 76: '11' (ID: 994)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0035172796342521906
    2. '11' → logprob: -5.753517150878906
    3. ' (' → logprob: -8.003517150878906
    4. ' ' → logprob: -13.128517150878906
    5. '12' → logprob: -14.378517150878906
    6. '{' → logprob: -14.628517150878906
    7. '           ' → logprob: -14.628517150878906
    8. '   ' → logprob: -14.878517150878906
    9. 'len' → logprob: -15.878517150878906
    10. '```' → logprob: -15.878517150878906

Token 77: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.048587825149297714
    2. ' -' → logprob: -3.0485877990722656
    3. '-l' → logprob: -15.923587799072266
    4. ' ' → logprob: -15.923587799072266
    5. '-length' → logprob: -16.298587799072266
    6. '   ' → logprob: -17.173587799072266
    7. '-
' → logprob: -17.673587799072266
    8. '          ' → logprob: -17.923587799072266
    9. '    ' → logprob: -17.923587799072266
    10. '  ' → logprob: -18.048587799072266

Token 78: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00043102685594931245
    2. ' len' → logprob: -7.750431060791016
    3. '(len' → logprob: -15.750431060791016
    4. '	len' → logprob: -17.125431060791016
    5. '[len' → logprob: -17.625431060791016
    6. '<len' → logprob: -19.125431060791016
    7. '=len' → logprob: -19.250431060791016
    8. 'length' → logprob: -20.000431060791016
    9. ' ' → logprob: -20.250431060791016
    10. 'Len' → logprob: -20.500431060791016

Token 79: '(bin' (ID: 117327)
  Prédit: '(bin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bin' → logprob: -1.759734732331708e-05
    2. '(' → logprob: -11.000017166137695
    3. 'bin' → logprob: -14.500017166137695
    4. '(binary' → logprob: -15.250017166137695
    5. '(bit' → logprob: -17.375017166137695
    6. '(
' → logprob: -17.500017166137695
    7. '(bot' → logprob: -17.500017166137695
    8. ' bin' → logprob: -17.625017166137695
    9. '(b' → logprob: -18.000017166137695
    10. '/bin' → logprob: -18.250017166137695

Token 80: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.00020127551397308707
    2. '(' → logprob: -8.625201225280762
    3. 'comparison' → logprob: -11.000201225280762
    4. '(current' → logprob: -12.625201225280762
    5. ' (' → logprob: -14.625201225280762
    6. '(binary' → logprob: -14.750201225280762
    7. '(compare' → logprob: -15.250201225280762
    8. '(con' → logprob: -15.750201225280762
    9. ')' → logprob: -16.500202178955078
    10. 'com' → logprob: -16.625202178955078

Token 81: 'parison' (ID: 80438)
  Prédit: 'parison'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parison' → logprob: -0.0006241570226848125
    2. 'comparison' → logprob: -7.625624179840088
    3. '(com' → logprob: -9.25062370300293
    4. 'par' → logprob: -10.62562370300293
    5. 'paration' → logprob: -11.50062370300293
    6. 'ar' → logprob: -12.75062370300293
    7. 'paring' → logprob: -13.50062370300293
    8. 'pare' → logprob: -15.12562370300293
    9. 'putation' → logprob: -15.12562370300293
    10. '   ' → logprob: -15.87562370300293

Token 82: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.018557829782366753
    2. '(com' → logprob: -4.643558025360107
    3. 'comparison' → logprob: -5.393558025360107
    4. '_com' → logprob: -6.143558025360107
    5. '_current' → logprob: -6.518558025360107
    6. '(current' → logprob: -8.14355754852295
    7. 'current' → logprob: -9.76855754852295
    8. ')' → logprob: -9.89355754852295
    9. 'index' → logprob: -10.14355754852295
    10. '[' → logprob: -10.76855754852295

Token 83: ')))' (ID: 15975)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004449227824807167
    2. ')))' → logprob: -5.629449367523193
    3. '[' → logprob: -7.254449367523193
    4. '()))' → logprob: -9.379448890686035
    5. ')' → logprob: -10.629448890686035
    6. '))[' → logprob: -11.379448890686035
    7. '))+' → logprob: -12.004448890686035
    8. ' ))' → logprob: -12.754448890686035
    9. ')[' → logprob: -12.754448890686035
    10. '   ' → logprob: -12.754448890686035

Token 84: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01949937269091606
    2. '+' → logprob: -4.5194993019104
    3. ' +' → logprob: -5.3944993019104
    4. '[' → logprob: -6.2694993019104
    5. ')+' → logprob: -6.2694993019104
    6. ' )' → logprob: -10.394499778747559
    7. ')[' → logprob: -10.894499778747559
    8. '()' → logprob: -11.644499778747559
    9. '   ' → logprob: -12.269499778747559
    10. '```' → logprob: -12.394499778747559

Token 85: ' bin' (ID: 6958)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.06198606267571449
    2. ' bin' → logprob: -2.811985969543457
    3. '(bin' → logprob: -11.061985969543457
    4. 'binary' → logprob: -13.186985969543457
    5. ' binary' → logprob: -15.061985969543457
    6. 'b' → logprob: -15.811985969543457
    7. '/bin' → logprob: -15.936985969543457
    8. 'str' → logprob: -16.686986923217773
    9. 'bit' → logprob: -17.061986923217773
    10. ' ' → logprob: -17.311986923217773

Token 86: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.10028862208127975
    2. '(' → logprob: -2.3502886295318604
    3. '(current' → logprob: -10.100288391113281
    4. '(con' → logprob: -10.600288391113281
    5. 'comparison' → logprob: -11.725288391113281
    6. '(

' → logprob: -13.850288391113281
    7. ' (' → logprob: -13.975288391113281
    8. '(compare' → logprob: -13.975288391113281
    9. '```' → logprob: -14.100288391113281
    10. '(
' → logprob: -14.350288391113281

Token 87: 'parison' (ID: 80438)
  Prédit: 'parison'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parison' → logprob: -0.00010604646377032623
    2. 'comparison' → logprob: -9.625105857849121
    3. 'paration' → logprob: -10.375105857849121
    4. 'ar' → logprob: -12.375105857849121
    5. 'par' → logprob: -13.125105857849121
    6. '_par' → logprob: -14.125105857849121
    7. 'paring' → logprob: -14.875105857849121
    8. '_com' → logprob: -15.000105857849121
    9. 'putation' → logprob: -15.375105857849121
    10. 'pare' → logprob: -16.125106811523438

Token 88: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0002453662164043635
    2. '_com' → logprob: -9.125245094299316
    3. 'comparison' → logprob: -9.375245094299316
    4. '(com' → logprob: -10.250245094299316
    5. 'index' → logprob: -12.375245094299316
    6. '```' → logprob: -12.625245094299316
    7. '[' → logprob: -13.000245094299316
    8. ')_' → logprob: -13.625245094299316
    9. '_' → logprob: -14.250245094299316
    10. ')[' → logprob: -14.500245094299316

Token 89: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -0.056338485330343246
    2. '[' → logprob: -2.9313385486602783
    3. '')[' → logprob: -6.681338310241699
    4. ')' → logprob: -9.8063383102417
    5. ''[' → logprob: -9.8063383102417
    6. '")[' → logprob: -10.1813383102417
    7. ' )[' → logprob: -10.6813383102417
    8. '()[' → logprob: -12.1813383102417
    9. '```' → logprob: -12.3063383102417
    10. '   ' → logprob: -13.0563383102417

Token 90: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -13.000003814697266
    3. '```' → logprob: -14.125003814697266
    4. ' ' → logprob: -15.750003814697266
    5. '
' → logprob: -16.750003814697266
    6. '3' → logprob: -16.750003814697266
    7. '   ' → logprob: -17.000003814697266
    8. '>' → logprob: -17.750003814697266
    9. '(' → logprob: -17.750003814697266
    10. '  ' → logprob: -18.250003814697266

Token 91: ':]

' (ID: 170549)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.022319680079817772
    2. ':]' → logprob: -4.022319793701172
    3. '[' → logprob: -5.772319793701172
    4. '()]' → logprob: -7.647319793701172
    5. '']' → logprob: -8.772319793701172
    6. '   ' → logprob: -9.522319793701172
    7. '[:]' → logprob: -10.022319793701172
    8. '#' → logprob: -10.147319793701172
    9. '```' → logprob: -10.397319793701172
    10. '()' → logprob: -10.522319793701172

Token 92: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07348643243312836
    2. '   ' → logprob: -2.823486328125
    3. '<|end|>' → logprob: -5.948486328125
    4. ' ' → logprob: -6.198486328125
    5. 'for' → logprob: -6.323486328125
    6. '    ' → logprob: -6.948486328125
    7. ' for' → logprob: -6.948486328125
    8. 'if' → logprob: -7.323486328125
    9. '        ' → logprob: -7.698486328125
    10. '           ' → logprob: -7.823486328125

Token 93: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008340452797710896
    2. ' for' → logprob: -5.633340358734131
    3. 'if' → logprob: -6.133340358734131
    4. 'd' → logprob: -6.883340358734131
    5. '       ' → logprob: -6.883340358734131
    6. '   ' → logprob: -8.883340835571289
    7. 'diff' → logprob: -9.133340835571289
    8. 'dif' → logprob: -9.258340835571289
    9. '           ' → logprob: -9.508340835571289
    10. 'difference' → logprob: -10.758340835571289

Token 94: ' bit' (ID: 3546)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3557868003845215
    2. ' bit' → logprob: -1.7307868003845215
    3. 'i' → logprob: -3.2307868003845215
    4. ' pos' → logprob: -3.4807868003845215
    5. ' position' → logprob: -4.1057868003845215
    6. ' b' → logprob: -4.6057868003845215
    7. ' current' → logprob: -4.6057868003845215
    8. 'bit' → logprob: -5.4807868003845215
    9. ' j' → logprob: -5.7307868003845215
    10. ' index' → logprob: -6.3557868003845215

Token 95: '_position' (ID: 23739)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.4370049238204956
    2. '_position' → logprob: -1.4370049238204956
    3. '_' → logprob: -2.437005043029785
    4. '_pos' → logprob: -3.562005043029785
    5. '_idx' → logprob: -8.062005043029785
    6. '_i' → logprob: -8.937005043029785
    7. '_difference' → logprob: -9.312005043029785
    8. '_diff' → logprob: -11.687005043029785
    9. '_in' → logprob: -11.687005043029785
    10. '_current' → logprob: -11.812005043029785

Token 96: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018189044669270515
    2. 'in' → logprob: -4.018188953399658
    3. '<|end|>' → logprob: -10.893189430236816
    4. '	in' → logprob: -11.268189430236816
    5. ' ' → logprob: -12.393189430236816
    6. '_in' → logprob: -13.393189430236816
    7. '<|end|>' → logprob: -14.768189430236816
    8. ',' → logprob: -15.268189430236816
    9. 's' → logprob: -15.393189430236816
    10. '        ' → logprob: -16.1431884765625

Token 97: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07889000326395035
    2. 'range' → logprob: -2.578890085220337
    3. '	range' → logprob: -15.453889846801758
    4. '(range' → logprob: -16.828889846801758
    5. ' ' → logprob: -17.953889846801758
    6. '   ' → logprob: -18.828889846801758
    7. 're' → logprob: -19.578889846801758
    8. ' xrange' → logprob: -19.703889846801758
    9. '    ' → logprob: -20.203889846801758
    10. '_range' → logprob: -20.828889846801758

Token 98: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022051392123103142
    2. '11' → logprob: -3.8970513343811035
    3. '(len' → logprob: -6.5220513343811035
    4. ' (' → logprob: -11.022051811218262
    5. 'len' → logprob: -11.772051811218262
    6. '   ' → logprob: -11.897051811218262
    7. ' ' → logprob: -13.272051811218262
    8. '           ' → logprob: -13.647051811218262
    9. '(
' → logprob: -14.022051811218262
    10. '10' → logprob: -14.272051811218262

Token 99: '9' (ID: 24)
  Prédit: '11'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '11' → logprob: -0.0003000696888193488
    2. 'len' → logprob: -8.250300407409668
    3. ' ' → logprob: -10.500300407409668
    4. '0' → logprob: -12.500300407409668
    5. '10' → logprob: -12.500300407409668
    6. '1' → logprob: -14.125300407409668
    7. '   ' → logprob: -14.250300407409668
    8. ' len' → logprob: -14.375300407409668
    9. '(' → logprob: -15.250300407409668
    10. '```' → logprob: -15.812800407409668

Token 100: '):

' (ID: 15626)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4816579520702362
    2. '):' → logprob: -1.1066579818725586
    3. ' ,' → logprob: -3.6066579818725586
    4. '+' → logprob: -5.231657981872559
    5. ')' → logprob: -5.356657981872559
    6. '0' → logprob: -5.481657981872559
    7. '):
' → logprob: -5.981657981872559
    8. ' +' → logprob: -6.356657981872559
    9. '11' → logprob: -6.731657981872559
    10. ' ' → logprob: -7.106657981872559

Token 101: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0818847119808197
    2. ' if' → logprob: -3.7068846225738525
    3. '<|end|>' → logprob: -3.7068846225738525
    4. '       ' → logprob: -4.206884860992432
    5. ' ' → logprob: -4.956884860992432
    6. 'if' → logprob: -5.706884860992432
    7. '               ' → logprob: -6.331884860992432
    8. '   ' → logprob: -7.206884860992432
    9. '        ' → logprob: -7.331884860992432
    10. '            ' → logprob: -8.081884384155273

Token 102: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2569211423397064
    2. ' if' → logprob: -1.5069211721420288
    3. '               ' → logprob: -6.131921291351318
    4. '           ' → logprob: -6.381921291351318
    5. '       ' → logprob: -7.631921291351318
    6. '   ' → logprob: -8.00692081451416
    7. 'i' → logprob: -8.38192081451416
    8. '            ' → logprob: -11.50692081451416
    9. '    ' → logprob: -11.63192081451416
    10. ' ' → logprob: -11.63192081451416

Token 103: ' binary' (ID: 15600)
  Prédit: ' binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.018193839117884636
    2. 'binary' → logprob: -4.01819372177124
    3. '   ' → logprob: -10.518194198608398
    4. '(binary' → logprob: -11.768194198608398
    5. ' ' → logprob: -12.393194198608398
    6. '           ' → logprob: -13.643194198608398
    7. ' bin' → logprob: -14.018194198608398
    8. '    ' → logprob: -14.268194198608398
    9. ' bit' → logprob: -14.518194198608398
    10. 'bin' → logprob: -15.143194198608398

Token 104: '_current' (ID: 23981)
  Prédit: '_current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -1.8550976164988242e-05
    2. 'current' → logprob: -11.000018119812012
    3. 'Current' → logprob: -13.625018119812012
    4. '_com' → logprob: -15.125018119812012
    5. '[current' → logprob: -15.875018119812012
    6. '_difference' → logprob: -16.625019073486328
    7. '_' → logprob: -17.375019073486328
    8. '_previous' → logprob: -17.500019073486328
    9. ' current' → logprob: -17.875019073486328
    10. '```' → logprob: -18.000019073486328

Token 105: '_iteration' (ID: 161656)
  Prédit: '_iteration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iteration' → logprob: -0.10256461799144745
    2. '_current' → logprob: -2.352564573287964
    3. '_' → logprob: -6.977564811706543
    4. '_iter' → logprob: -7.102564811706543
    5. '[' → logprob: -8.227564811706543
    6. '[_' → logprob: -9.477564811706543
    7. '_iterations' → logprob: -9.977564811706543
    8. '[current' → logprob: -9.977564811706543
    9. '```' → logprob: -10.227564811706543
    10. '_iterator' → logprob: -10.477564811706543

Token 106: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.941850526549388e-06
    2. ' [' → logprob: -12.500007629394531
    3. '[
' → logprob: -12.750007629394531
    4. '```' → logprob: -15.000007629394531
    5. '[b' → logprob: -15.250007629394531
    6. '[-' → logprob: -15.625007629394531
    7. '[int' → logprob: -16.37500762939453
    8. ' ' → logprob: -16.37500762939453
    9. '\[' → logprob: -17.00000762939453
    10. '[position' → logprob: -17.00000762939453

Token 107: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.00031735055381432176
    2. ' bit' → logprob: -8.125317573547363
    3. '-' → logprob: -11.750317573547363
    4. '-bit' → logprob: -11.750317573547363
    5. '(bit' → logprob: -13.625317573547363
    6. '9' → logprob: -13.750317573547363
    7. '10' → logprob: -14.375317573547363
    8. '
' → logprob: -14.375317573547363
    9. '```' → logprob: -14.875317573547363
    10. '   ' → logprob: -15.375317573547363

Token 108: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.006767945364117622
    2. 'position' → logprob: -5.131767749786377
    3. 'osition' → logprob: -7.131767749786377
    4. 's' → logprob: -11.631768226623535
    5. 'bit' → logprob: -11.631768226623535
    6. '_positions' → logprob: -12.506768226623535
    7. '_POSITION' → logprob: -13.256768226623535
    8. '-position' → logprob: -13.256768226623535
    9. 'er' → logprob: -13.506768226623535
    10. 'POSITION' → logprob: -13.756768226623535

Token 109: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02083299495279789
    2. ']!=' → logprob: -3.8958330154418945
    3. ' ]' → logprob: -8.895833015441895
    4. '!=' → logprob: -8.895833015441895
    5. '']' → logprob: -11.270833015441895
    6. '"]' → logprob: -13.645833015441895
    7. ' !=' → logprob: -13.770833015441895
    8. '`]' → logprob: -14.520833015441895
    9. ':]' → logprob: -15.145833015441895
    10. ')!=' → logprob: -15.395833015441895

Token 110: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.14271515607833862
    2. ' !=' → logprob: -2.0177152156829834
    3. '!==' → logprob: -11.142715454101562
    4. ']!=' → logprob: -11.267715454101562
    5. '()!=' → logprob: -12.392715454101562
    6. ')!=' → logprob: -13.267715454101562
    7. '```' → logprob: -13.642715454101562
    8. '=' → logprob: -13.892715454101562
    9. ' ' → logprob: -13.892715454101562
    10. ' ' → logprob: -14.017715454101562

Token 111: ' binary' (ID: 15600)
  Prédit: ' binary'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.02975500375032425
    2. 'binary' → logprob: -3.529755115509033
    3. '(binary' → logprob: -12.904754638671875
    4. ' ' → logprob: -13.779754638671875
    5. '_binary' → logprob: -14.904754638671875
    6. '.binary' → logprob: -15.279754638671875
    7. 'b' → logprob: -16.154754638671875
    8. ''' → logprob: -16.404754638671875
    9. 'Binary' → logprob: -17.154754638671875
    10. ' ' → logprob: -17.279754638671875

Token 112: '_com' (ID: 10828)
  Prédit: '_current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_current' → logprob: -0.4741525650024414
    2. '_com' → logprob: -0.9741525650024414
    3. '_' → logprob: -9.724152565002441
    4. 'current' → logprob: -11.974152565002441
    5. 'comparison' → logprob: -12.599152565002441
    6. '_previous' → logprob: -13.349152565002441
    7. '```' → logprob: -13.974152565002441
    8. '_completion' → logprob: -14.349152565002441
    9. '[' → logprob: -14.474152565002441
    10. ''_' → logprob: -15.224152565002441

Token 113: 'parison' (ID: 80438)
  Prédit: 'parison'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parison' → logprob: -0.19861920177936554
    2. 'urrent' → logprob: -1.8236192464828491
    3. '_current' → logprob: -5.198619365692139
    4. 'current' → logprob: -5.448619365692139
    5. 'ission' → logprob: -6.448619365692139
    6. 'iteration' → logprob: -6.823619365692139
    7. '_iteration' → logprob: -6.948619365692139
    8. 'osition' → logprob: -7.073619365692139
    9. '_position' → logprob: -7.073619365692139
    10. 'position' → logprob: -7.448619365692139

Token 114: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.8961017202818766e-05
    2. '][' → logprob: -10.500059127807617
    3. '```' → logprob: -11.375059127807617
    4. '   ' → logprob: -12.000059127807617
    5. '           ' → logprob: -12.750059127807617
    6. '       ' → logprob: -13.375059127807617
    7. '               ' → logprob: -13.625059127807617
    8. ' ' → logprob: -13.750059127807617
    9. ']' → logprob: -13.750059127807617
    10. ' [' → logprob: -13.875059127807617

Token 115: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -4.763666947837919e-05
    2. ' bit' → logprob: -10.12504768371582
    3. 'position' → logprob: -12.12504768371582
    4. '[' → logprob: -14.12504768371582
    5. '_bit' → logprob: -15.12504768371582
    6. '(bit' → logprob: -15.37504768371582
    7. '   ' → logprob: -16.12504768371582
    8. ']' → logprob: -16.37504768371582
    9. '-bit' → logprob: -16.62504768371582
    10. '.bit' → logprob: -16.62504768371582

Token 116: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.0009262301027774811
    2. 'position' → logprob: -7.0009260177612305
    3. 'Position' → logprob: -13.00092601776123
    4. 'osition' → logprob: -13.00092601776123
    5. '```' → logprob: -13.25092601776123
    6. '_' → logprob: -13.37592601776123
    7. '_positions' → logprob: -13.37592601776123
    8. '_POSITION' → logprob: -13.62592601776123
    9. 'bit' → logprob: -14.00092601776123
    10. '-position' → logprob: -14.25092601776123

Token 117: ']:

' (ID: 147502)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.008033381775021553
    2. '):' → logprob: -5.508033275604248
    3. ':' → logprob: -6.383033275604248
    4. ']' → logprob: -6.508033275604248
    5. ']:
' → logprob: -7.258033275604248
    6. ']:
' → logprob: -11.383033752441406
    7. '}:' → logprob: -11.508033752441406
    8. '):
' → logprob: -12.008033752441406
    9. '"]:' → logprob: -12.133033752441406
    10. '']:' → logprob: -12.133033752441406

Token 118: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004904801025986671
    2. '                
' → logprob: -8.125490188598633
    3. '           ' → logprob: -9.125490188598633
    4. ' differing' → logprob: -10.875490188598633
    5. '              ' → logprob: -11.125490188598633
    6. 'd' → logprob: -11.625490188598633
    7. '                   ' → logprob: -11.750490188598633
    8. '                ' → logprob: -12.250490188598633
    9. '            
' → logprob: -12.750490188598633
    10. '   ' → logprob: -12.750490188598633

Token 119: ' differing' (ID: 108739)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7497889995574951
    2. '               ' → logprob: -0.9997889995574951
    3. ' differing' → logprob: -2.499788999557495
    4. '                   ' → logprob: -2.624788999557495
    5. '           ' → logprob: -6.749789237976074
    6. 'diff' → logprob: -6.999789237976074
    7. 'different' → logprob: -7.124789237976074
    8. ' differ' → logprob: -7.499789237976074
    9. '   ' → logprob: -7.624789237976074
    10. ' differenti' → logprob: -8.624789237976074

Token 120: '_bit' (ID: 39574)
  Prédit: '_bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bit' → logprob: -9.968312951968983e-06
    2. '_' → logprob: -11.750009536743164
    3. '_bits' → logprob: -13.875009536743164
    4. '_positions' → logprob: -14.750009536743164
    5. ' bit' → logprob: -15.625009536743164
    6. '_BIT' → logprob: -16.500009536743164
    7. 'bit' → logprob: -16.500009536743164
    8. '_diff' → logprob: -16.500009536743164
    9. '_byte' → logprob: -17.375009536743164
    10. '_b' → logprob: -17.625009536743164

Token 121: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -9.610702363715973e-06
    2. 'positions' → logprob: -11.750009536743164
    3. 's' → logprob: -13.750009536743164
    4. '_indices' → logprob: -15.500009536743164
    5. 'Positions' → logprob: -15.750009536743164
    6. '_locations' → logprob: -16.500009536743164
    7. '<|end|>' → logprob: -16.875009536743164
    8. '```' → logprob: -17.250009536743164
    9. ' positions' → logprob: -17.500009536743164
    10. '           ' → logprob: -17.500009536743164

Token 122: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004097396973520517
    2. '.' → logprob: -5.5040974617004395
    3. ' .' → logprob: -11.754096984863281
    4. '.app' → logprob: -12.379096984863281
    5. '.add' → logprob: -12.504096984863281
    6. '.ap' → logprob: -13.504096984863281
    7. '.setdefault' → logprob: -14.504096984863281
    8. '.extend' → logprob: -14.754096984863281
    9. ').' → logprob: -15.379096984863281
    10. '.Append' → logprob: -15.629096984863281

Token 123: '(' (ID: 7)
  Prédit: '(bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bit' → logprob: -0.07994583994150162
    2. '(binary' → logprob: -2.9549458026885986
    3. '(' → logprob: -3.9549458026885986
    4. '((' → logprob: -5.329946041107178
    5. '(bin' → logprob: -7.454946041107178
    6. 'bit' → logprob: -10.07994556427002
    7. '(com' → logprob: -10.32994556427002
    8. '(current' → logprob: -10.45494556427002
    9. '(
' → logprob: -11.70494556427002
    10. '('' → logprob: -11.82994556427002

Token 124: '9' (ID: 24)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.01659283973276615
    2. ' bit' → logprob: -4.141592979431152
    3. 'str' → logprob: -7.641592979431152
    4. ' str' → logprob: -10.266592979431152
    5. '(bit' → logprob: -11.016592979431152
    6. '   ' → logprob: -12.266592979431152
    7. 'binary' → logprob: -12.266592979431152
    8. 'bin' → logprob: -12.891592979431152
    9. ' ' → logprob: -13.141592979431152
    10. '(' → logprob: -13.516592979431152

Token 125: ' -' (ID: 533)
  Prédit: '-bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-bit' → logprob: -0.596045970916748
    2. ' -' → logprob: -1.096045970916748
    3. '-' → logprob: -2.221045970916748
    4. ')' → logprob: -5.846045970916748
    5. 'bit' → logprob: -6.346045970916748
    6. ' bit' → logprob: -6.846045970916748
    7. ' ' → logprob: -8.846046447753906
    8. '<|end|>' → logprob: -9.346046447753906
    9. '+' → logprob: -10.096046447753906
    10. '           ' → logprob: -10.471046447753906

Token 126: ' bit' (ID: 3546)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.006766648963093758
    2. ' bit' → logprob: -5.0067667961120605
    3. '1' → logprob: -9.881766319274902
    4. ' ' → logprob: -15.506766319274902
    5. '-bit' → logprob: -18.00676727294922
    6. '(bit' → logprob: -18.38176727294922
    7. 'bits' → logprob: -18.75676727294922
    8. '.bit' → logprob: -19.38176727294922
    9. '   ' → logprob: -19.50676727294922
    10. '_bit' → logprob: -19.63176727294922

Token 127: '_position' (ID: 23739)
  Prédit: '_position'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_position' → logprob: -0.0028315072413533926
    2. 'position' → logprob: -5.87783145904541
    3. '1' → logprob: -11.50283145904541
    4. 'osition' → logprob: -12.12783145904541
    5. '_POSITION' → logprob: -12.50283145904541
    6. 'Position' → logprob: -12.75283145904541
    7. '-' → logprob: -13.75283145904541
    8. '-position' → logprob: -14.62783145904541
    9. '```' → logprob: -14.62783145904541
    10. '	position' → logprob: -14.75283145904541

Token 128: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11929458379745483
    2. '-' → logprob: -2.2442946434020996
    3. ' -' → logprob: -5.1192946434021
    4. ' )' → logprob: -7.9942946434021
    5. '<|end|>' → logprob: -9.869294166564941
    6. '-)' → logprob: -10.619294166564941
    7. ')
' → logprob: -11.244294166564941
    8. '))' → logprob: -11.369294166564941
    9. ',' → logprob: -11.994294166564941
    10. '*' → logprob: -12.744294166564941

Token 129: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 130: ' break' (ID: 2338)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: ' string' (ID: 1621)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: 'ified' (ID: 2720)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0796020030975342
    2. 's' → logprob: -1.2046020030975342
    3. '_' → logprob: -1.8296020030975342
    4. '()' → logprob: -3.704602003097534
    5. '.' → logprob: -3.829602003097534
    6. '=' → logprob: -3.829602003097534
    7. '<|end|>' → logprob: -3.829602003097534
    8. ')' → logprob: -3.954602003097534
    9. '_length' → logprob: -4.204602241516113
    10. '(s' → logprob: -4.454602241516113

Token 135: '_positions' (ID: 93193)
  Prédit: '_d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.05044591799378395
    2. '_' → logprob: -3.800446033477783
    3. '_diff' → logprob: -4.425446033477783
    4. '_positions' → logprob: -5.300446033477783
    5. '_difference' → logprob: -6.175446033477783
    6. 'd' → logprob: -6.175446033477783
    7. '=' → logprob: -6.925446033477783
    8. '_number' → logprob: -7.175446033477783
    9. '_list' → logprob: -7.300446033477783
    10. ' =' → logprob: -7.425446033477783

Token 136: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23232488334178925
    2. ' =' → logprob: -1.6073248386383057
    3. '.append' → logprob: -5.232325077056885
    4. '+=' → logprob: -6.982325077056885
    5. ' +=' → logprob: -8.232324600219727
    6. '.' → logprob: -8.857324600219727
    7. '.extend' → logprob: -9.482324600219727
    8. '=[]' → logprob: -10.482324600219727
    9. '+' → logprob: -10.732324600219727
    10. '.=' → logprob: -10.732324600219727

Token 137: ' list' (ID: 1562)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1507216691970825
    2. '','.' → logprob: -1.1507216691970825
    3. ''' → logprob: -1.2757216691970825
    4. '",".' → logprob: -3.275721549987793
    5. ' ',' → logprob: -4.650721549987793
    6. ' ","' → logprob: -4.650721549987793
    7. ' '' → logprob: -4.900721549987793
    8. '',' → logprob: -4.900721549987793
    9. '",' → logprob: -5.025721549987793
    10. ' "' → logprob: -5.650721549987793

Token 138: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.019693661481142044
    2. '(str' → logprob: -4.269693851470947
    3. '(d' → logprob: -6.144693851470947
    4. '(' → logprob: -6.394693851470947
    5. '(set' → logprob: -7.019693851470947
    6. '(sorted' → logprob: -7.269693851470947
    7. '()' → logprob: -10.144693374633789
    8. '([' → logprob: -11.644693374633789
    9. '[str' → logprob: -11.769693374633789
    10. '((' → logprob: -11.769693374633789

Token 139: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0005772201111540198
    2. '(' → logprob: -8.000576972961426
    3. 'str' → logprob: -8.500576972961426
    4. '(lambda' → logprob: -10.625576972961426
    5. '(int' → logprob: -12.250576972961426
    6. ')' → logprob: -12.625576972961426
    7. ' (' → logprob: -13.125576972961426
    8. ' str' → logprob: -14.000576972961426
    9. '(chr' → logprob: -14.125576972961426
    10. '   ' → logprob: -14.250576972961426

Token 140: ',' (ID: 11)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.01401176955550909
    2. ',d' → logprob: -4.389011859893799
    3. ',' → logprob: -6.764011859893799
    4. '(' → logprob: -8.01401138305664
    5. ' ,' → logprob: -12.13901138305664
    6. '(diff' → logprob: -12.76401138305664
    7. ',(' → logprob: -12.88901138305664
    8. ' (' → logprob: -13.38901138305664
    9. '(div' → logprob: -13.63901138305664
    10. ',D' → logprob: -15.01401138305664

Token 141: ' differing' (ID: 108739)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014346949756145477
    2. ' differing' → logprob: -4.264347076416016
    3. 'diff' → logprob: -9.889347076416016
    4. 'sorted' → logprob: -10.389347076416016
    5. 'different' → logprob: -10.514347076416016
    6. '   ' → logprob: -11.264347076416016
    7. ' ' → logprob: -11.514347076416016
    8. '(d' → logprob: -11.639347076416016
    9. '[d' → logprob: -11.764347076416016
    10. 'Differ' → logprob: -12.264347076416016

Token 142: '_bit' (ID: 39574)
  Prédit: '_bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bit' → logprob: -8.08944896562025e-05
    2. 'bit' → logprob: -9.500081062316895
    3. '_' → logprob: -12.375081062316895
    4. '-bit' → logprob: -14.000081062316895
    5. '_BIT' → logprob: -14.500081062316895
    6. ' bit' → logprob: -15.125081062316895
    7. '_positions' → logprob: -16.750080108642578
    8. '_bits' → logprob: -18.125080108642578
    9. '__' → logprob: -18.250080108642578
    10. 'positions' → logprob: -18.500080108642578

Token 143: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.07893473654985428
    2. 'positions' → logprob: -2.578934669494629
    3. 'bit' → logprob: -11.328934669494629
    4. '_' → logprob: -11.453934669494629
    5. 'd' → logprob: -12.328934669494629
    6. 's' → logprob: -13.203934669494629
    7. ' positions' → logprob: -13.203934669494629
    8. 'ing' → logprob: -13.328934669494629
    9. 'pos' → logprob: -13.953934669494629
    10. 'ions' → logprob: -13.953934669494629

Token 144: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002728985855355859
    2. '))
' → logprob: -8.250272750854492
    3. ')' → logprob: -12.375272750854492
    4. ')))' → logprob: -12.375272750854492
    5. '))

' → logprob: -13.625272750854492
    6. ' ))' → logprob: -14.250272750854492
    7. '   ' → logprob: -14.875272750854492
    8. ' ' → logprob: -15.500272750854492
    9. '()))' → logprob: -15.500272750854492
    10. '       ' → logprob: -15.750272750854492

Token 145: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 146: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0657876506447792
    2. '   ' → logprob: -2.9407875537872314
    3. ')' → logprob: -4.8157877922058105
    4. '<|end|>' → logprob: -6.3157877922058105
    5. ']' → logprob: -8.940787315368652
    6. '    
' → logprob: -9.065787315368652
    7. 'join' → logprob: -9.190787315368652
    8. ' print' → logprob: -9.440787315368652
    9. 'for' → logprob: -9.815787315368652
    10. 'output' → logprob: -9.940787315368652

Token 147: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.007780063897371292
    2. '("' → logprob: -5.132780075073242
    3. '(',' → logprob: -6.882780075073242
    4. '(' → logprob: -7.757780075073242
    5. '("("' → logprob: -8.132780075073242
    6. '(",' → logprob: -9.632780075073242
    7. '(","' → logprob: -10.882780075073242
    8. ''' → logprob: -11.882780075073242
    9. '"' → logprob: -13.382780075073242
    10. '(('' → logprob: -13.382780075073242

Token 148: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.011791965924203396
    2. ' '' → logprob: -5.886792182922363
    3. ' '.' → logprob: -5.886792182922363
    4. ''.' → logprob: -6.136792182922363
    5. '',' → logprob: -6.386792182922363
    6. '('' → logprob: -7.386792182922363
    7. '')' → logprob: -7.886792182922363
    8. '','.' → logprob: -7.886792182922363
    9. ' ',' → logprob: -8.761792182922363
    10. ' ')' → logprob: -9.261792182922363

Token 149: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.0683535037969705e-05
    2. '.' → logprob: -12.62501049041748
    3. '.join' → logprob: -12.87501049041748
    4. ')' → logprob: -13.50001049041748
    5. ' join' → logprob: -13.87501049041748
    6. ').' → logprob: -14.12501049041748
    7. 'jo' → logprob: -14.12501049041748
    8. 'j' → logprob: -14.62501049041748
    9. '```' → logprob: -15.00001049041748
    10. 'print' → logprob: -15.37501049041748

Token 150: '(string' (ID: 8003)
  Prédit: '(string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(string' → logprob: -1.7432603272027336e-06
    2. 'string' → logprob: -13.875001907348633
    3. '(' → logprob: -14.375001907348633
    4. ')' → logprob: -16.375001907348633
    5. ',string' → logprob: -16.750001907348633
    6. '[string' → logprob: -17.125001907348633
    7. ' (' → logprob: -17.500001907348633
    8. '(strings' → logprob: -18.250001907348633
    9. '<string' → logprob: -19.375001907348633
    10. '('' → logprob: -19.750001907348633

Token 151: 'ified' (ID: 2720)
  Prédit: 'ified'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ified' → logprob: -0.0001613459608051926
    2. 'f' → logprob: -9.875161170959473
    3. 'ify' → logprob: -9.875161170959473
    4. 'string' → logprob: -10.625161170959473
    5. '(string' → logprob: -10.750161170959473
    6. 'if' → logprob: -12.500161170959473
    7. 'ized' → logprob: -12.750161170959473
    8. 'ed' → logprob: -13.250161170959473
    9. '_string' → logprob: -13.500161170959473
    10. 'ifier' → logprob: -13.875161170959473

Token 152: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -0.00015872348740231246
    2. 'positions' → logprob: -8.750158309936523
    3. 'Positions' → logprob: -15.750158309936523
    4. 'string' → logprob: -16.750158309936523
    5. 's' → logprob: -17.500158309936523
    6. ')' → logprob: -17.875158309936523
    7. ' positions' → logprob: -18.625158309936523
    8. '```' → logprob: -18.875158309936523
    9. '_pos' → logprob: -19.125158309936523
    10. '_' → logprob: -19.125158309936523

Token 153: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10021314769983292
    2. ')' → logprob: -2.350213050842285
    3. '))
' → logprob: -12.475213050842285
    4. ')))' → logprob: -13.350213050842285
    5. ')
' → logprob: -14.850213050842285
    6. '   ' → logprob: -14.975213050842285
    7. ''))' → logprob: -15.350213050842285
    8. '+' → logprob: -16.7252140045166
    9. ')+' → logprob: -17.3502140045166
    10. ')}' → logprob: -17.3502140045166


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 151
Tokens correctement prédits (1ère position, stricte): 69
Tokens correctement prédits (1ère position, avec adaptation): 72
Tokens correctement prédits (top 10): 118
Précision stricte (1ère position): 45.70%
Précision adaptée (1ère position): 47.68%
Précision (top 10): 78.15%
================================================================================
