================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:41:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

def calc(t):
    t = math.radians(t)
    if a * math.tan(t) <= b:
        return a * a * b - a * a * a * math.tan(t) / 2
    else:
        return b * b / math.tan(t) * a / 2

a, b, x = map(int, input().split(" "))
n_max = 90
n_min = 0
for _ in range(100000):
    n_mid = n_min + (n_max - n_min) / 2
    if calc(n_mid) < x:
        n_max = n_mid
    else:
        n_min = n_mid
print(n_mid)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002430951688438654
    2. '```' → logprob: -7.2524309158325195
    3. '\n' → logprob: -7.3774309158325195
    4. '\' → logprob: -7.8774309158325195
    5. 'import' → logprob: -8.00243091583252
    6. '<|end|>' → logprob: -9.25243091583252
    7. '.pi' → logprob: -10.25243091583252
    8. 'a' → logprob: -11.00243091583252
    9. '.e' → logprob: -11.12743091583252
    10. '<|end|>' → logprob: -11.12743091583252

Token 4: ' calc' (ID: 25691)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0021010141354054213
    2. ' math' → logprob: -6.752100944519043
    3. '_' → logprob: -8.252100944519043
    4. ' ' → logprob: -8.627100944519043
    5. ' sqrt' → logprob: -8.877100944519043
    6. ' calculate' → logprob: -9.627100944519043
    7. ' space' → logprob: -9.627100944519043
    8. ' factorial' → logprob: -9.877100944519043
    9. ' _' → logprob: -11.002100944519043
    10. ' f' → logprob: -11.252100944519043

Token 5: '(t' (ID: 2025)
  Prédit: 'ulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ulate' → logprob: -0.17106477916240692
    2. 'ulator' → logprob: -2.296064853668213
    3. '_' → logprob: -3.546064853668213
    4. '(' → logprob: -5.046064853668213
    5. ' ul' → logprob: -5.046064853668213
    6. 'ulation' → logprob: -5.296064853668213
    7. 'ul' → logprob: -5.796064853668213
    8. 'ulated' → logprob: -6.921064853668213
    9. '```' → logprob: -6.921064853668213
    10. 'ulating' → logprob: -7.046064853668213

Token 6: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -1.182697057723999
    2. 'a' → logprob: -1.432697057723999
    3. 'ime' → logprob: -1.682697057723999
    4. 'o' → logprob: -2.557697057723999
    5. ',' → logprob: -2.682697057723999
    6. 'otal' → logprob: -3.807697057723999
    7. ')' → logprob: -4.182697296142578
    8. '**' → logprob: -4.432697296142578
    9. 'imes' → logprob: -4.557697296142578
    10. 'e' → logprob: -4.682697296142578

Token 7: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5921087265014648
    2. '   ' → logprob: -1.3421087265014648
    3. ':' → logprob: -2.342108726501465
    4. ' ' → logprob: -2.967108726501465
    5. ' :' → logprob: -4.717108726501465
    6. ' return' → logprob: -4.842108726501465
    7. 'return' → logprob: -5.717108726501465
    8. ''' → logprob: -5.842108726501465
    9. ' (' → logprob: -6.217108726501465
    10. '.' → logprob: -6.217108726501465

Token 8: ' t' (ID: 260)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.011760950088501
    2. 'return' → logprob: -1.511760950088501
    3. ' ' → logprob: -1.636760950088501
    4. '   ' → logprob: -2.386760950088501
    5. '(' → logprob: -2.511760950088501
    6. ' math' → logprob: -4.761760711669922
    7. 'math' → logprob: -4.886760711669922
    8. 'r' → logprob: -5.261760711669922
    9. 'x' → logprob: -5.511760711669922
    10. 'm' → logprob: -6.011760711669922

Token 9: ' =' (ID: 314)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6955953240394592
    2. ' **' → logprob: -1.1955952644348145
    3. '*' → logprob: -2.4455952644348145
    4. '**' → logprob: -3.4455952644348145
    5. ' ' → logprob: -3.5705952644348145
    6. ' +' → logprob: -3.9455952644348145
    7. '+' → logprob: -3.9455952644348145
    8. '.' → logprob: -4.6955952644348145
    9. ' .' → logprob: -6.6955952644348145
    10. '[' → logprob: -7.1955952644348145

Token 10: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7219165563583374
    2. ' t' → logprob: -0.8469165563583374
    3. 'math' → logprob: -2.846916675567627
    4. 't' → logprob: -3.971916675567627
    5. ' int' → logprob: -5.471916675567627
    6. ' float' → logprob: -6.846916675567627
    7. 'int' → logprob: -7.096916675567627
    8. ' ' → logprob: -7.346916675567627
    9. 'pow' → logprob: -8.221916198730469
    10. '(math' → logprob: -8.221916198730469

Token 11: '.r' (ID: 2951)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15344509482383728
    2. '.sqrt' → logprob: -2.27844500541687
    3. '.sin' → logprob: -4.153445243835449
    4. '.pow' → logprob: -5.028445243835449
    5. ' .' → logprob: -5.153445243835449
    6. '.cos' → logprob: -5.653445243835449
    7. '.pi' → logprob: -6.028445243835449
    8. '.log' → logprob: -6.278445243835449
    9. '.exp' → logprob: -6.778445243835449
    10. '.t' → logprob: -6.903445243835449

Token 12: 'adians' (ID: 45611)
  Prédit: 'exp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exp' → logprob: -1.019781231880188
    2. 'e' → logprob: -1.769781231880188
    3. 'sqrt' → logprob: -1.894781231880188
    4. 'adians' → logprob: -2.1447811126708984
    5. 'ound' → logprob: -2.6447811126708984
    6. 'ema' → logprob: -2.6447811126708984
    7. 'pow' → logprob: -3.6447811126708984
    8. 'em' → logprob: -4.644781112670898
    9. '**' → logprob: -5.269781112670898
    10. 'es' → logprob: -6.644781112670898

Token 13: '(t' (ID: 2025)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2519896924495697
    2. '(t' → logprob: -1.501989722251892
    3. ' (' → logprob: -10.626989364624023
    4. '(
' → logprob: -11.251989364624023
    5. '('' → logprob: -11.876989364624023
    6. '((' → logprob: -12.626989364624023
    7. '(`' → logprob: -13.501989364624023
    8. '(

' → logprob: -13.501989364624023
    9. '(x' → logprob: -13.751989364624023
    10. '(math' → logprob: -14.126989364624023

Token 14: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. '))' → logprob: -13.375004768371582
    3. ' )' → logprob: -13.500004768371582
    4. ')
' → logprob: -14.125004768371582
    5. ')))' → logprob: -15.000004768371582
    6. '   ' → logprob: -15.000004768371582
    7. '+' → logprob: -16.0000057220459
    8. ' ' → logprob: -16.1250057220459
    9. ')t' → logprob: -17.1250057220459
    10. ')return' → logprob: -17.5000057220459

Token 15: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17419327795505524
    2. '   ' → logprob: -2.1741933822631836
    3. 'return' → logprob: -4.424193382263184
    4. '*' → logprob: -4.549193382263184
    5. ' return' → logprob: -4.674193382263184
    6. ',' → logprob: -5.424193382263184
    7. 's' → logprob: -6.549193382263184
    8. ' ' → logprob: -6.799193382263184
    9. ' )' → logprob: -6.924193382263184
    10. 'x' → logprob: -6.924193382263184

Token 16: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7231118083000183
    2. '   ' → logprob: -0.8481118083000183
    3. ' return' → logprob: -3.223111867904663
    4. 's' → logprob: -3.473111867904663
    5. 'math' → logprob: -5.348111629486084
    6. 'result' → logprob: -6.098111629486084
    7. 'm' → logprob: -6.348111629486084
    8. 'c' → logprob: -6.723111629486084
    9. ')' → logprob: -6.848111629486084
    10. 'x' → logprob: -6.973111629486084

Token 17: ' a' (ID: 261)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.002914238488301635
    2. 't' → logprob: -5.8779144287109375
    3. ' ' → logprob: -9.502914428710938
    4. ' abs' → logprob: -11.502914428710938
    5. 'abs' → logprob: -11.877914428710938
    6. '45' → logprob: -12.252914428710938
    7. '90' → logprob: -12.502914428710938
    8. ' (' → logprob: -13.127914428710938
    9. '0' → logprob: -13.377914428710938
    10. '20' → logprob: -14.002914428710938

Token 18: ' *' (ID: 425)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.14402006566524506
    2. 'bs' → logprob: -2.0190200805664062
    3. '>b' → logprob: -8.144020080566406
    4. 'abs' → logprob: -8.769020080566406
    5. '<b' → logprob: -8.769020080566406
    6. '>' → logprob: -9.019020080566406
    7. ' >' → logprob: -9.269020080566406
    8. 't' → logprob: -9.394020080566406
    9. ' b' → logprob: -9.644020080566406
    10. '<' → logprob: -9.769020080566406

Token 19: ' math' (ID: 13324)
  Prédit: 'bs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.7445767521858215
    2. 'b' → logprob: -1.2445766925811768
    3. ' t' → logprob: -1.9945766925811768
    4. 't' → logprob: -3.4945766925811768
    5. ' b' → logprob: -3.8695766925811768
    6. ' math' → logprob: -4.119576930999756
    7. 'math' → logprob: -4.369576930999756
    8. 'abs' → logprob: -4.619576930999756
    9. ' abs' → logprob: -5.994576930999756
    10. ' bs' → logprob: -6.244576930999756

Token 20: '.t' (ID: 1370)
  Prédit: '.cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.cos' → logprob: -0.49244439601898193
    2. 'cos' → logprob: -1.492444396018982
    3. '.sin' → logprob: -2.4924445152282715
    4. 'sin' → logprob: -3.7424445152282715
    5. 'bs' → logprob: -3.7424445152282715
    6. ' cos' → logprob: -4.4924445152282715
    7. '>' → logprob: -4.7424445152282715
    8. 's' → logprob: -5.6174445152282715
    9. '_cos' → logprob: -6.1174445152282715
    10. '.isnan' → logprob: -7.1174445152282715

Token 21: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.03405307978391647
    2. 'erm' → logprob: -3.659053087234497
    3. 'r' → logprob: -5.284052848815918
    4. 'math' → logprob: -7.284052848815918
    5. 'anh' → logprob: -8.034052848815918
    6. 'anw' → logprob: -8.534052848815918
    7. 'e' → logprob: -8.659052848815918
    8. 'em' → logprob: -8.784052848815918
    9. 'heta' → logprob: -8.784052848815918
    10. 'erms' → logprob: -8.909052848815918

Token 22: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.31375831365585327
    2. '(' → logprob: -1.313758373260498
    3. ' (' → logprob: -7.688758373260498
    4. '(s' → logprob: -11.06375789642334
    5. '(
' → logprob: -11.93875789642334
    6. ' ' → logprob: -12.56375789642334
    7. 't' → logprob: -13.18875789642334
    8. '(a' → logprob: -13.18875789642334
    9. ')' → logprob: -13.31375789642334
    10. '(theta' → logprob: -13.81375789642334

Token 23: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08690689504146576
    2. '())' → logprob: -2.836906909942627
    3. '(' → logprob: -4.461906909942627
    4. ' )' → logprob: -4.586906909942627
    5. '()' → logprob: -6.336906909942627
    6. ' ())' → logprob: -8.461906433105469
    7. ' ' → logprob: -8.711906433105469
    8. '   ' → logprob: -8.711906433105469
    9. '))' → logprob: -9.961906433105469
    10. ')>' → logprob: -9.961906433105469

Token 24: ' <=' (ID: 5017)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4096180200576782
    2. ' <' → logprob: -1.6596180200576782
    3. ' ' → logprob: -3.2846179008483887
    4. '>' → logprob: -3.9096179008483887
    5. ' >=' → logprob: -3.9096179008483887
    6. ' ==' → logprob: -4.034617900848389
    7. ' <=' → logprob: -4.159617900848389
    8. '(' → logprob: -4.784617900848389
    9. ')' → logprob: -5.034617900848389
    10. ':' → logprob: -5.784617900848389

Token 25: ' b' (ID: 287)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.739631712436676
    2. ' b' → logprob: -1.6146316528320312
    3. ' ' → logprob: -1.7396316528320312
    4. 'b' → logprob: -2.9896316528320312
    5. ' a' → logprob: -3.2396316528320312
    6. 'a' → logprob: -3.9896316528320312
    7. '1' → logprob: -3.9896316528320312
    8. ' h' → logprob: -4.364631652832031
    9. 'h' → logprob: -5.239631652832031
    10. ' d' → logprob: -7.614631652832031

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00940175075083971
    2. ' :' → logprob: -5.384401798248291
    3. ' and' → logprob: -6.009401798248291
    4. '):' → logprob: -6.259401798248291
    5. ':
' → logprob: -9.134401321411133
    6. '<|end|>' → logprob: -9.509401321411133
    7. '**' → logprob: -10.384401321411133
    8. ' or' → logprob: -10.384401321411133
    9. ':return' → logprob: -10.384401321411133
    10. 'and' → logprob: -10.884401321411133

Token 27: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14625297486782074
    2. ' :' → logprob: -2.6462528705596924
    3. '       ' → logprob: -2.8962528705596924
    4. '):' → logprob: -6.2712531089782715
    5. ':
' → logprob: -6.5212531089782715
    6. ' ' → logprob: -6.6462531089782715
    7. '<|end|>' → logprob: -6.6462531089782715
    8. '    ' → logprob: -7.1462531089782715
    9. ':return' → logprob: -7.1462531089782715
    10. ' :
' → logprob: -7.2712531089782715

Token 28: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9740567207336426
    2. ' return' → logprob: -1.2240567207336426
    3. 'return' (adapté à ' return') → logprob: -1.7240567207336426
    4. '   ' → logprob: -3.7240567207336426
    5. ':' → logprob: -3.8490567207336426
    6. '\n' → logprob: -3.8490567207336426
    7. '           ' → logprob: -4.349056720733643
    8. ' \' → logprob: -4.349056720733643
    9. ' ' → logprob: -4.599056720733643
    10. 'r' → logprob: -4.849056720733643

Token 29: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.42200249433517456
    2. 'a' → logprob: -1.4220025539398193
    3. ' True' → logprob: -3.1720025539398193
    4. 'math' → logprob: -4.17200231552124
    5. ' math' → logprob: -4.54700231552124
    6. 'True' → logprob: -4.79700231552124
    7. '1' → logprob: -4.92200231552124
    8. ' b' → logprob: -5.29700231552124
    9. ' ' → logprob: -5.42200231552124
    10. 'b' → logprob: -5.67200231552124

Token 30: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.004709938075393438
    2. '*' → logprob: -5.379709720611572
    3. ' /' → logprob: -9.75471019744873
    4. ' ' → logprob: -11.87971019744873
    5. '/' → logprob: -12.56721019744873
    6. '<|end|>' → logprob: -12.81721019744873
    7. ',' → logprob: -13.00471019744873
    8. '*t' → logprob: -13.12971019744873
    9. ' *
' → logprob: -13.31721019744873
    10. 'import' → logprob: -13.56721019744873

Token 31: ' a' (ID: 261)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.2014770805835724
    2. 'math' → logprob: -1.70147705078125
    3. 'tan' → logprob: -10.82647705078125
    4. ' tan' → logprob: -11.07647705078125
    5. '(math' → logprob: -11.57647705078125
    6. '.math' → logprob: -11.57647705078125
    7. '<|end|>' → logprob: -12.95147705078125
    8. 't' → logprob: -13.07647705078125
    9. '/math' → logprob: -13.82647705078125
    10. ' t' → logprob: -13.82647705078125

Token 32: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 33: ' b' (ID: 287)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.4764702320098877
    2. ' math' → logprob: -0.9764702320098877
    3. '<|end|>' → logprob: -6.226469993591309
    4. '(math' → logprob: -8.851469993591309
    5. 't' → logprob: -9.101469993591309
    6. '/math' → logprob: -9.476469993591309
    7. '2' → logprob: -10.476469993591309
    8. ' t' → logprob: -11.351469993591309
    9. 's' → logprob: -11.601469993591309
    10. 'cmath' → logprob: -11.976469993591309

Token 34: ' -' (ID: 533)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6198030710220337
    2. 'else' → logprob: -2.119802951812744
    3. '<|end|>' → logprob: -2.494802951812744
    4. '   ' → logprob: -2.619802951812744
    5. ' ' → logprob: -2.744802951812744
    6. ' *' → logprob: -3.494802951812744
    7. '
' → logprob: -3.994802951812744
    8. '*' → logprob: -4.119802951812744
    9. '+' → logprob: -4.369802951812744
    10. ' +' → logprob: -4.619802951812744

Token 35: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.46682488918304443
    2. ' a' → logprob: -2.216825008392334
    3. '(a' → logprob: -2.341825008392334
    4. '2' → logprob: -3.091825008392334
    5. ' (' → logprob: -3.716825008392334
    6. '(' → logprob: -3.716825008392334
    7. ' math' → logprob: -3.716825008392334
    8. 'math' → logprob: -3.841825008392334
    9. '3' → logprob: -4.466825008392334
    10. '0' → logprob: -5.091825008392334

Token 36: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.41297975182533264
    2. ' *' → logprob: -1.1629797220230103
    3. ' ' → logprob: -4.537979602813721
    4. '**' → logprob: -4.662979602813721
    5. '2' → logprob: -5.912979602813721
    6. ')' → logprob: -7.662979602813721
    7. ' **' → logprob: -7.787979602813721
    8. '/' → logprob: -7.912979602813721
    9. '[' → logprob: -8.725480079650879
    10. '3' → logprob: -8.912980079650879

Token 37: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2621479034423828
    2. 'b' → logprob: -2.637147903442383
    3. ' a' → logprob: -2.887147903442383
    4. ' math' → logprob: -3.512147903442383
    5. 'math' → logprob: -3.887147903442383
    6. '2' → logprob: -4.012147903442383
    7. ' b' → logprob: -4.512147903442383
    8. 't' → logprob: -4.637147903442383
    9. '**' → logprob: -5.137147903442383
    10. '*' → logprob: -6.012147903442383

Token 38: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12928003072738647
    2. ' *' → logprob: -2.2542800903320312
    3. '/' → logprob: -5.004280090332031
    4. ' ' → logprob: -5.504280090332031
    5. '+' → logprob: -6.254280090332031
    6. ')' → logprob: -6.754280090332031
    7. ' /' → logprob: -7.129280090332031
    8. '<|end|>' → logprob: -7.879280090332031
    9. ' else' → logprob: -8.629280090332031
    10. '.' → logprob: -8.754280090332031

Token 39: ' a' (ID: 261)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.8057217001914978
    2. 'math' → logprob: -0.9307217001914978
    3. '/math' → logprob: -1.9307217597961426
    4. '/' → logprob: -4.805721759796143
    5. '(math' → logprob: -6.180721759796143
    6. '*' → logprob: -6.180721759796143
    7. '/t' → logprob: -7.805721759796143
    8. '_math' → logprob: -7.930721759796143
    9. 't' → logprob: -8.805721282958984
    10. '.math' → logprob: -8.930721282958984

Token 40: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9507469534873962
    2. '*' → logprob: -1.325747013092041
    3. ' /' → logprob: -1.825747013092041
    4. '/' → logprob: -1.825747013092041
    5. ' ' → logprob: -3.950747013092041
    6. '<|end|>' → logprob: -6.325747013092041
    7. ')' → logprob: -7.325747013092041
    8. ' /
' → logprob: -7.575747013092041
    9. '   ' → logprob: -7.700747013092041
    10. '**' → logprob: -7.825747013092041

Token 41: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.059341102838516235
    2. ' math' → logprob: -3.1843411922454834
    3. '/' → logprob: -4.184340953826904
    4. '0' → logprob: -7.684340953826904
    5. '(math' → logprob: -8.309341430664062
    6. '/math' → logprob: -9.059341430664062
    7. 'cmath' → logprob: -10.434341430664062
    8. '2' → logprob: -10.559341430664062
    9. '3' → logprob: -10.559341430664062
    10. 't' → logprob: -10.559341430664062

Token 42: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.35632744431495667
    2. '.cos' → logprob: -2.356327533721924
    3. '*t' → logprob: -2.481327533721924
    4. '*' → logprob: -3.606327533721924
    5. '.sin' → logprob: -3.856327533721924
    6. '.atan' → logprob: -4.106327533721924
    7. '<|end|>' → logprob: -4.981327533721924
    8. '.' → logprob: -4.981327533721924
    9. '.pi' → logprob: -5.106327533721924
    10. '.sqrt' → logprob: -5.231327533721924

Token 43: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -5.538490950129926e-05
    2. 'anh' → logprob: -10.500055313110352
    3. 'tan' → logprob: -11.375055313110352
    4. 'r' → logprob: -12.250055313110352
    5. 'n' → logprob: -12.750055313110352
    6. 'ans' → logprob: -13.500055313110352
    7. 'anw' → logprob: -13.500055313110352
    8. 'a' → logprob: -13.625055313110352
    9. 'anf' → logprob: -13.750055313110352
    10. 'math' → logprob: -14.500055313110352

Token 44: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.10021626949310303
    2. '(' → logprob: -2.3502163887023926
    3. ' (' → logprob: -13.225215911865234
    4. '(x' → logprob: -13.725215911865234
    5. '(s' → logprob: -13.975215911865234
    6. 't' → logprob: -13.975215911865234
    7. '(
' → logprob: -14.350215911865234
    8. '(math' → logprob: -14.600215911865234
    9. '(theta' → logprob: -14.600215911865234
    10. '((' → logprob: -14.975215911865234

Token 45: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009854660369455814
    2. ' )' → logprob: -5.259854793548584
    3. '   ' → logprob: -6.134854793548584
    4. ')/' → logprob: -6.384854793548584
    5. '()' → logprob: -8.634854316711426
    6. ')/(' → logprob: -9.134854316711426
    7. ' ' → logprob: -9.384854316711426
    8. '       ' → logprob: -9.634854316711426
    9. ' /' → logprob: -9.884854316711426
    10. ' else' → logprob: -10.259854316711426

Token 46: ' /' (ID: 820)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.0326871871948242
    2. ' else' → logprob: -1.1576871871948242
    3. '
' → logprob: -1.6576871871948242
    4. '   ' → logprob: -3.032687187194824
    5. '<|end|>' → logprob: -3.907687187194824
    6. ' 
' → logprob: -4.532687187194824
    7. '+' → logprob: -4.532687187194824
    8. '\n' → logprob: -4.532687187194824
    9. '	else' → logprob: -4.782687187194824
    10. '    
' → logprob: -4.907687187194824

Token 47: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4684585928916931
    2. '2' → logprob: -1.343458652496338
    3. '6' → logprob: -2.218458652496338
    4. ' ' → logprob: -5.468458652496338
    5. ' math' → logprob: -9.59345817565918
    6. 'math' → logprob: -11.09345817565918
    7. '(' → logprob: -12.59345817565918
    8. '4' → logprob: -12.96845817565918
    9. '1' → logprob: -13.59345817565918
    10. '   ' → logprob: -13.71845817565918

Token 48: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6656733751296997
    2. '3' → logprob: -1.4156733751296997
    3. '6' → logprob: -1.4156733751296997
    4. ' ' → logprob: -7.54067325592041
    5. '4' → logprob: -12.29067325592041
    6. '   ' → logprob: -12.41567325592041
    7. '  ' → logprob: -13.16567325592041
    8. '12' → logprob: -13.79067325592041
    9. '1' → logprob: -13.91567325592041
    10. '     ' → logprob: -14.41567325592041

Token 49: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13022412359714508
    2. 'else' → logprob: -3.5052242279052734
    3. '
' → logprob: -3.6302242279052734
    4. ' else' → logprob: -4.005224227905273
    5. '    
' → logprob: -4.130224227905273
    6. ' ' → logprob: -4.880224227905273
    7. '\n' → logprob: -5.005224227905273
    8. '<|end|>' → logprob: -5.255224227905273
    9. ' 
' → logprob: -5.755224227905273
    10. '  
' → logprob: -6.755224227905273

Token 51: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10775826126337051
    2. ' else' → logprob: -2.3577582836151123
    3. '   ' → logprob: -5.357758045196533
    4. '<|end|>' → logprob: -7.107758045196533
    5. 'elif' → logprob: -7.107758045196533
    6. 'return' → logprob: -7.732758045196533
    7. ' ' → logprob: -8.857758522033691
    8. '	else' → logprob: -9.107758522033691
    9. '
' → logprob: -9.107758522033691
    10. ' elif' → logprob: -9.857758522033691

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033187614753842354
    2. ' :' → logprob: -6.753318786621094
    3. ':
' → logprob: -6.878318786621094
    4. '   ' → logprob: -7.628318786621094
    5. '       ' → logprob: -7.753318786621094
    6. ':return' → logprob: -9.003318786621094
    7. '    ' → logprob: -10.128318786621094
    8. ' :
' → logprob: -11.628318786621094
    9. ' return' → logprob: -11.753318786621094
    10. ':
' → logprob: -12.503318786621094

Token 53: '       ' (ID: 309)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.838760495185852
    2. ' a' → logprob: -1.213760495185852
    3. 'b' → logprob: -2.0887603759765625
    4. ' return' → logprob: -3.2137603759765625
    5. 'a' → logprob: -3.5887603759765625
    6. '    ' → logprob: -3.9637603759765625
    7. '   ' → logprob: -4.0887603759765625
    8. ' ' → logprob: -4.2137603759765625
    9. '       ' → logprob: -4.5887603759765625
    10. '0' → logprob: -5.2137603759765625

Token 54: ' return' (ID: 622)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1803834438323975
    2. ' return' → logprob: -1.1803834438323975
    3. 'return' (adapté à ' return') → logprob: -1.5553834438323975
    4. ' b' → logprob: -2.3053834438323975
    5. 'a' → logprob: -3.0553834438323975
    6. ' a' → logprob: -3.6803834438323975
    7. '       ' → logprob: -7.055383682250977
    8. '   ' → logprob: -7.430383682250977
    9. '    ' → logprob: -8.430383682250977
    10. ' ' → logprob: -8.555383682250977

Token 55: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2235713005065918
    2. 'a' → logprob: -2.098571300506592
    3. ' b' → logprob: -3.098571300506592
    4. ' a' → logprob: -5.098571300506592
    5. '(b' → logprob: -5.098571300506592
    6. '(a' → logprob: -5.098571300506592
    7. ' (' → logprob: -5.223571300506592
    8. '(' → logprob: -5.473571300506592
    9. '0' → logprob: -5.723571300506592
    10. ' ' → logprob: -7.348571300506592

Token 56: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.21583035588264465
    2. '**' → logprob: -2.4658303260803223
    3. 'a' → logprob: -3.2158303260803223
    4. '2' → logprob: -3.3408303260803223
    5. '*b' → logprob: -3.9658303260803223
    6. '*' → logprob: -4.465830326080322
    7. '*a' → logprob: -6.215830326080322
    8. '/' → logprob: -7.340830326080322
    9. ' *' → logprob: -8.71583080291748
    10. '(' → logprob: -8.96583080291748

Token 58: ' /' (ID: 820)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' math' (ID: 13324)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15696068108081818
    2. '(math' → logprob: -2.9069607257843018
    3. 'math' → logprob: -2.9069607257843018
    4. '2' → logprob: -3.6569607257843018
    5. ' math' → logprob: -5.031960487365723
    6. ' (' → logprob: -5.781960487365723
    7. ' ' → logprob: -8.656960487365723
    8. '   ' → logprob: -9.281960487365723
    9. '(m' → logprob: -9.281960487365723
    10. '(t' → logprob: -9.406960487365723

Token 60: '.t' (ID: 1370)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.7720165252685547
    2. '.cos' → logprob: -1.3970165252685547
    3. '.t' → logprob: -1.7720165252685547
    4. '.sin' → logprob: -2.2720165252685547
    5. '.atan' → logprob: -4.397016525268555
    6. '.pow' → logprob: -6.272016525268555
    7. '.c' → logprob: -6.272016525268555
    8. '.pi' → logprob: -7.772016525268555
    9. 'tan' → logprob: -8.522016525268555
    10. 'cos' → logprob: -9.022016525268555

Token 61: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.0004961982485838234
    2. 'a' → logprob: -7.6254963874816895
    3. 'anh' → logprob: -12.875495910644531
    4. 'o' → logprob: -13.000495910644531
    5. 'anw' → logprob: -13.125495910644531
    6. 'anf' → logprob: -15.000495910644531
    7. 'au' → logprob: -15.375495910644531
    8. 'tan' → logprob: -15.500495910644531
    9. '2' → logprob: -15.625495910644531
    10. 'g' → logprob: -15.750495910644531

Token 62: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.016049737110733986
    2. '(' → logprob: -4.141049861907959
    3. '(x' → logprob: -12.6410493850708
    4. '(theta' → logprob: -12.8910493850708
    5. '(math' → logprob: -12.8910493850708
    6. ' (' → logprob: -13.5160493850708
    7. '(a' → logprob: -14.0160493850708
    8. '(s' → logprob: -14.1410493850708
    9. '(b' → logprob: -14.5160493850708
    10. '(k' → logprob: -14.6410493850708

Token 63: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.794061770662665e-05
    2. ' )' → logprob: -9.50009822845459
    3. '*' → logprob: -11.37509822845459
    4. '))' → logprob: -13.00009822845459
    5. '}' → logprob: -13.25009822845459
    6. '   ' → logprob: -13.87509822845459
    7. ')*' → logprob: -14.25009822845459
    8. '(' → logprob: -14.37509822845459
    9. ')
' → logprob: -14.37509822845459
    10. '`)' → logprob: -14.37509822845459

Token 64: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' a' (ID: 261)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011591192334890366
    2. ' ' → logprob: -4.511590957641602
    3. '(' → logprob: -8.386590957641602
    4. 'b' → logprob: -9.761590957641602
    5. '/' → logprob: -9.886590957641602
    6. '1' → logprob: -10.011590957641602
    7. '0' → logprob: -10.386590957641602
    8. '3' → logprob: -10.636590957641602
    9. ' (' → logprob: -10.761590957641602
    10. ' b' → logprob: -10.761590957641602

Token 66: ' /' (ID: 820)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06050771102309227
    2. 'b' → logprob: -3.5605077743530273
    3. ' ' → logprob: -4.060507774353027
    4. '3' → logprob: -4.560507774353027
    5. ' math' → logprob: -6.560507774353027
    6. 'math' → logprob: -7.560507774353027
    7. ' b' → logprob: -7.810507774353027
    8. 'a' → logprob: -9.060507774353027
    9. '(' → logprob: -9.935507774353027
    10. '  ' → logprob: -11.060507774353027

Token 68: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07662056386470795
    2. 'b' → logprob: -3.201620578765869
    3. 'math' → logprob: -3.451620578765869
    4. '3' → logprob: -7.701620578765869
    5. ' math' → logprob: -7.951620578765869
    6. ' ' → logprob: -8.576620101928711
    7. '(math' → logprob: -8.826620101928711
    8. 'a' → logprob: -8.951620101928711
    9. '(' → logprob: -9.826620101928711
    10. '1' → logprob: -11.326620101928711

Token 69: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8078870177268982
    2. '<|end|>' → logprob: -1.057887077331543
    3. '#' → logprob: -2.557887077331543
    4. ' ' → logprob: -2.932887077331543
    5. ':' → logprob: -3.057887077331543
    6. ' a' → logprob: -4.307887077331543
    7. ',' → logprob: -5.932887077331543
    8. ')' → logprob: -6.057887077331543
    9. '
' → logprob: -6.182887077331543
    10. '<|end|>' → logprob: -6.557887077331543

Token 71: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002198313595727086
    2. '<|end|>' → logprob: -6.377198219299316
    3. '  ' → logprob: -8.502198219299316
    4. ' ,' → logprob: -8.877198219299316
    5. ' =' → logprob: -9.627198219299316
    6. ' )' → logprob: -11.252198219299316
    7. '<|end|>' → logprob: -11.377198219299316
    8. ' ```' → logprob: -11.377198219299316
    9. ' *' → logprob: -11.627198219299316
    10. ',' → logprob: -11.877198219299316

Token 72: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.08737245202064514
    2. 'b' → logprob: -2.7123725414276123
    3. ' ' → logprob: -4.087372303009033
    4. '<|end|>' → logprob: -7.712372303009033
    5. ' =' → logprob: -10.837372779846191
    6. '  ' → logprob: -11.962372779846191
    7. ' ' → logprob: -12.337372779846191
    8. 'space' → logprob: -12.712372779846191
    9. '20' → logprob: -13.087372779846191
    10. '10' → logprob: -13.087372779846191

Token 73: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006126090884208679
    2. '=' → logprob: -5.3811259269714355
    3. ',' → logprob: -6.7561259269714355
    4. '<|end|>' → logprob: -8.131126403808594
    5. ' ' → logprob: -10.506126403808594
    6. ' ,' → logprob: -11.631126403808594
    7. ')' → logprob: -12.506126403808594
    8. ' =
' → logprob: -13.006126403808594
    9. '<|end|>' → logprob: -13.381126403808594
    10. ' =",' → logprob: -14.381126403808594

Token 74: ' x' (ID: 1215)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.9274346232414246
    2. 'map' → logprob: -1.5524346828460693
    3. ' ' → logprob: -1.8024346828460693
    4. ' =' → logprob: -2.3024346828460693
    5. '=' → logprob: -2.8024346828460693
    6. 'c' → logprob: -3.1774346828460693
    7. ' c' → logprob: -3.9274346828460693
    8. '5' → logprob: -6.42743444442749
    9. '0' → logprob: -6.92743444442749
    10. '1' → logprob: -8.052434921264648

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04400811344385147
    2. '=' → logprob: -3.1690080165863037
    3. ',' → logprob: -6.919008255004883
    4. ' ' → logprob: -12.169008255004883
    5. '<|end|>' → logprob: -12.169008255004883
    6. ' ,' → logprob: -12.919008255004883
    7. ')' → logprob: -13.294008255004883
    8. 's' → logprob: -14.419008255004883
    9. '<|end|>' → logprob: -14.794008255004883
    10. '.' → logprob: -14.856508255004883

Token 76: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.2882463037967682
    2. ' map' → logprob: -1.4132462739944458
    3. ' ' → logprob: -6.788246154785156
    4. '5' → logprob: -6.913246154785156
    5. '[' → logprob: -6.913246154785156
    6. '1' → logprob: -7.038246154785156
    7. '10' → logprob: -7.663246154785156
    8. '0' → logprob: -8.038246154785156
    9. '20' → logprob: -8.413246154785156
    10. '3' → logprob: -8.538246154785156

Token 77: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4739737808704376
    2. '(int' → logprob: -1.0989737510681152
    3. '(lambda' → logprob: -3.4739737510681152
    4. '(str' → logprob: -4.848973751068115
    5. '<|end|>' → logprob: -5.723973751068115
    6. '(float' → logprob: -6.973973751068115
    7. '(list' → logprob: -8.473974227905273
    8. '(input' → logprob: -8.723974227905273
    9. '(eval' → logprob: -8.848974227905273
    10. '(len' → logprob: -9.598974227905273

Token 78: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.010710213333368301
    2. '(' → logprob: -5.2607102394104
    3. ',input' → logprob: -5.8857102394104
    4. ')' → logprob: -6.3857102394104
    5. 'input' → logprob: -7.5107102394104
    6. ' input' → logprob: -8.885709762573242
    7. ',' → logprob: -9.010709762573242
    8. ')(' → logprob: -9.760709762573242
    9. ' (' → logprob: -10.010709762573242
    10. '=input' → logprob: -10.885709762573242

Token 79: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10020969063043594
    2. ' input' → logprob: -2.3502097129821777
    3. '(input' → logprob: -14.22520923614502
    4. ' ' → logprob: -14.35020923614502
    5. ',input' → logprob: -14.35020923614502
    6. '```' → logprob: -14.60020923614502
    7. '	input' → logprob: -15.35020923614502
    8. '=input' → logprob: -15.47520923614502
    9. '<input' → logprob: -15.97520923614502
    10. ')' → logprob: -16.600210189819336

Token 80: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8790345788002014
    2. '())' → logprob: -1.1290345191955566
    3. '().' → logprob: -1.7540345191955566
    4. '(' → logprob: -2.6290345191955566
    5. '(()' → logprob: -5.254034519195557
    6. ')' → logprob: -5.629034519195557
    7. '(),' → logprob: -6.629034519195557
    8. '());' → logprob: -7.004034519195557
    9. '();)' → logprob: -7.254034519195557
    10. '('' → logprob: -7.379034519195557

Token 81: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0921942703134846e-05
    2. 'strip' → logprob: -11.75001049041748
    3. 'rstrip' → logprob: -13.37501049041748
    4. ' split' → logprob: -13.75001049041748
    5. '(split' → logprob: -15.50001049041748
    6. 'spl' → logprob: -15.50001049041748
    7. 'read' → logprob: -18.000011444091797
    8. '```' → logprob: -18.500011444091797
    9. 'plit' → logprob: -18.500011444091797
    10. ')' → logprob: -19.250011444091797

Token 82: '("' (ID: 568)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8353112936019897
    2. '())' → logprob: -1.0853112936019897
    3. '('' → logprob: -1.5853112936019897
    4. '()' → logprob: -4.210311412811279
    5. '(' → logprob: -5.085311412811279
    6. '("' → logprob: -6.960311412811279
    7. '(','' → logprob: -7.210311412811279
    8. '))' → logprob: -7.960311412811279
    9. '(""))' → logprob: -8.710310935974121
    10. '(',' → logprob: -9.960310935974121

Token 83: ' "))
' (ID: 94820)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.38452258706092834
    2. ' "))' → logprob: -1.884522557258606
    3. '"))' → logprob: -2.1345226764678955
    4. ' ))' → logprob: -3.3845226764678955
    5. ')' → logprob: -4.509522438049316
    6. ' ' → logprob: -6.509522438049316
    7. ''))' → logprob: -6.634522438049316
    8. '"' → logprob: -7.509522438049316
    9. ' "' → logprob: -8.384522438049316
    10. ',' → logprob: -8.759522438049316

Token 84: 'n' (ID: 77)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.842555426876061e-06
    2. 'if' → logprob: -12.750004768371582
    3. ' print' → logprob: -13.875004768371582
    4. 'p' → logprob: -15.375004768371582
    5. 'result' → logprob: -15.375004768371582
    6. '```' → logprob: -15.375004768371582
    7. 'pr' → logprob: -17.1250057220459
    8. 'for' → logprob: -17.2500057220459
    9. 's' → logprob: -17.3750057220459
    10. 't' → logprob: -17.5000057220459

Token 85: '_max' (ID: 13731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08313640207052231
    2. ' =' → logprob: -2.5831363201141357
    3. '=int' → logprob: -6.083136558532715
    4. 'um' → logprob: -6.708136558532715
    5. 'o' → logprob: -8.708136558532715
    6. 'umber' → logprob: -8.958136558532715
    7. 'e' → logprob: -9.208136558532715
    8. 'u' → logprob: -9.583136558532715
    9. ' ' → logprob: -9.708136558532715
    10. '=u' → logprob: -10.208136558532715

Token 86: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18361608684062958
    2. ' =' → logprob: -1.933616042137146
    3. 'um' → logprob: -4.4336161613464355
    4. '_' → logprob: -4.8086161613464355
    5. '_=' → logprob: -7.5586161613464355
    6. 'u' → logprob: -7.6836161613464355
    7. 'a' → logprob: -7.8086161613464355
    8. '  ' → logprob: -8.058615684509277
    9. '=int' → logprob: -8.558615684509277
    10. 'x' → logprob: -8.683615684509277

Token 87: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5768060684204102
    2. ' ' → logprob: -2.07680606842041
    3. ' int' → logprob: -3.07680606842041
    4. '10' → logprob: -3.07680606842041
    5. 'int' → logprob: -3.45180606842041
    6. 'x' → logprob: -3.57680606842041
    7. '200' → logprob: -3.70180606842041
    8. 'a' → logprob: -3.70180606842041
    9. '180' → logprob: -3.82680606842041
    10. ' x' → logprob: -4.57680606842041

Token 88: '90' (ID: 2744)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8402801156044006
    2. 'int' → logprob: -1.5902800559997559
    3. '10' → logprob: -2.090280055999756
    4. '180' → logprob: -2.715280055999756
    5. '360' → logprob: -2.965280055999756
    6. 'a' → logprob: -3.715280055999756
    7. 'x' → logprob: -3.840280055999756
    8. '200' → logprob: -4.215280055999756
    9. 'math' → logprob: -4.340280055999756
    10. 'max' → logprob: -4.840280055999756

Token 89: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40191030502319336
    2. '<|end|>' → logprob: -1.6519103050231934
    3. '+' → logprob: -3.6519103050231934
    4. 'n' → logprob: -3.9019103050231934
    5. ' 
' → logprob: -4.276910305023193
    6. 'for' → logprob: -4.401910305023193
    7. '*' → logprob: -4.776910305023193
    8. ' for' → logprob: -4.776910305023193
    9. '  
' → logprob: -4.776910305023193
    10. '<|end|>' → logprob: -4.901910305023193

Token 90: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7519916892051697
    2. 'for' → logprob: -1.2519917488098145
    3. 'if' → logprob: -2.8769917488098145
    4. 't' → logprob: -2.8769917488098145
    5. 'print' → logprob: -3.5019917488098145
    6. 'result' → logprob: -4.1269917488098145
    7. 'i' → logprob: -4.1269917488098145
    8. 'x' → logprob: -4.7519917488098145
    9. 's' → logprob: -5.0019917488098145
    10. 'd' → logprob: -5.0019917488098145

Token 91: '_min' (ID: 15950)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18581674993038177
    2. '=' → logprob: -2.060816764831543
    3. '_' → logprob: -3.185816764831543
    4. ' ' → logprob: -8.185816764831543
    5. '_max' → logprob: -8.685816764831543
    6. '  ' → logprob: -9.185816764831543
    7. 'ex' → logprob: -10.185816764831543
    8. 'ext' → logprob: -10.185816764831543
    9. ',' → logprob: -10.310816764831543
    10. '_=' → logprob: -10.435816764831543

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004697357304394245
    2. '=' → logprob: -5.379697322845459
    3. ' ' → logprob: -10.004697799682617
    4. ',' → logprob: -10.504697799682617
    5. ' ,' → logprob: -12.754697799682617
    6. ' =)' → logprob: -15.254697799682617
    7. '  ' → logprob: -15.379697799682617
    8. ' =
' → logprob: -15.754697799682617
    9. '_' → logprob: -15.754697799682617
    10. ')' → logprob: -16.379697799682617

Token 93: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06866620481014252
    2. ' ' → logprob: -3.0686662197113037
    3. '1' → logprob: -3.9436662197113037
    4. '90' → logprob: -8.443666458129883
    5. '45' → logprob: -8.443666458129883
    6. '-' → logprob: -11.318666458129883
    7. '46' → logprob: -11.818666458129883
    8. ' ' → logprob: -11.818666458129883
    9. '10' → logprob: -12.193666458129883
    10. ' -' → logprob: -12.568666458129883

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029032927006483078
    2. '1' → logprob: -3.6540329456329346
    3. ' ' → logprob: -6.0290327072143555
    4. '45' → logprob: -8.904032707214355
    5. '-' → logprob: -9.529032707214355
    6. '90' → logprob: -10.029032707214355
    7. '10' → logprob: -11.279032707214355
    8. '2' → logprob: -11.654032707214355
    9. '30' → logprob: -11.841532707214355
    10. '5' → logprob: -12.654032707214355

Token 95: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1414979100227356
    2. '<|end|>' → logprob: -3.141497850418091
    3. 'while' → logprob: -3.516497850418091
    4. '\n' → logprob: -3.891497850418091
    5. ' while' → logprob: -4.14149808883667
    6. ' 
' → logprob: -5.01649808883667
    7. '\' → logprob: -5.39149808883667
    8. '```' → logprob: -5.39149808883667
    9. 'n' → logprob: -5.51649808883667
    10. '  
' → logprob: -6.89149808883667

Token 96: 'for' (ID: 1938)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.016464345157146454
    2. 'n' → logprob: -4.8914642333984375
    3. ' while' → logprob: -5.1414642333984375
    4. '```' → logprob: -7.1414642333984375
    5. '<|end|>' → logprob: -7.2664642333984375
    6. 't' → logprob: -7.6414642333984375
    7. 'mid' → logprob: -8.891464233398438
    8. 'x' → logprob: -9.016464233398438
    9. 'if' → logprob: -9.141464233398438
    10. 'angle' → logprob: -9.266464233398438

Token 97: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0013701915740967
    2. ' _' → logprob: -1.2513701915740967
    3. ' ' → logprob: -1.5013701915740967
    4. ' n' → logprob: -2.1263701915740967
    5. '_' → logprob: -5.876370429992676
    6. 'n' → logprob: -7.376370429992676
    7. ' x' → logprob: -8.376370429992676
    8. ' t' → logprob: -8.501370429992676
    9. 'i' → logprob: -8.501370429992676
    10. ' ' → logprob: -9.251370429992676

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06489004194736481
    2. 'in' → logprob: -2.814890146255493
    3. ' ' → logprob: -6.314889907836914
    4. ' i' → logprob: -7.439889907836914
    5. 'i' → logprob: -8.439889907836914
    6. '  ' → logprob: -9.064889907836914
    7. 'n' → logprob: -9.314889907836914
    8. ' n' → logprob: -10.064889907836914
    9. ' _' → logprob: -10.689889907836914
    10. '<|end|>' → logprob: -11.564889907836914

Token 99: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12694290280342102
    2. ' range' → logprob: -2.1269428730010986
    3. '	range' → logprob: -12.00194263458252
    4. '(range' → logprob: -12.12694263458252
    5. ' ' → logprob: -13.25194263458252
    6. 'rang' → logprob: -15.50194263458252
    7. '[' → logprob: -15.62694263458252
    8. ' xrange' → logprob: -15.87694263458252
    9. 'ran' → logprob: -16.001943588256836
    10. '_range' → logprob: -16.126943588256836

Token 100: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7348899841308594
    2. '(n' → logprob: -0.7348899841308594
    3. ' (' → logprob: -3.2348899841308594
    4. ' n' → logprob: -6.984889984130859
    5. ' ' → logprob: -7.859889984130859
    6. 'n' → logprob: -9.23488998413086
    7. '10' → logprob: -10.10988998413086
    8. '(a' → logprob: -11.48488998413086
    9. '100' → logprob: -11.85988998413086
    10. '(int' → logprob: -11.98488998413086

Token 101: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.03641124814748764
    2. ' ' → logprob: -4.411411285400391
    3. '50' → logprob: -4.911411285400391
    4. '10' → logprob: -5.286411285400391
    5. '20' → logprob: -5.786411285400391
    6. 'n' → logprob: -5.911411285400391
    7. '60' → logprob: -6.161411285400391
    8. '30' → logprob: -6.536411285400391
    9. '40' → logprob: -7.786411285400391
    10. '200' → logprob: -8.28641128540039

Token 102: '000' (ID: 1302)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7290904521942139
    2. ' ):' → logprob: -0.7290904521942139
    3. ' :' → logprob: -3.854090452194214
    4. ')' → logprob: -5.354090690612793
    5. '):
' → logprob: -5.854090690612793
    6. ':' → logprob: -5.979090690612793
    7. ' ):
' → logprob: -6.104090690612793
    8. ' )' → logprob: -6.729090690612793
    9. ' ' → logprob: -9.104090690612793
    10. ' :
' → logprob: -9.604090690612793

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23045796155929565
    2. ' ):' → logprob: -1.6054580211639404
    3. ' :' → logprob: -6.105457782745361
    4. ')' → logprob: -6.605457782745361
    5. ':' → logprob: -7.480457782745361
    6. '():' → logprob: -8.23045825958252
    7. '):
' → logprob: -8.60545825958252
    8. ' ' → logprob: -8.73045825958252
    9. ' )' → logprob: -9.48045825958252
    10. '   ' → logprob: -10.23045825958252

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034640174359083176
    2. '<|end|>' → logprob: -4.534640312194824
    3. ':' → logprob: -4.784640312194824
    4. '
' → logprob: -5.284640312194824
    5. '    
' → logprob: -6.034640312194824
    6. '```' → logprob: -6.534640312194824
    7. ' 
' → logprob: -6.784640312194824
    8. ' ' → logprob: -7.159640312194824
    9. '<|end|>' → logprob: -7.159640312194824
    10. ' t' → logprob: -7.659640312194824

Token 105: ' n' (ID: 297)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.5827404856681824
    2. ' m' → logprob: -1.7077405452728271
    3. 'm' → logprob: -1.9577405452728271
    4. 'mid' → logprob: -2.207740545272827
    5. '   ' → logprob: -5.707740306854248
    6. ' t' → logprob: -5.832740306854248
    7. 't' → logprob: -7.082740306854248
    8. ' midpoint' → logprob: -7.457740306854248
    9. ' c' → logprob: -7.832740306854248
    10. ' middle' → logprob: -8.207740783691406

Token 106: '_mid' (ID: 105824)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01833161525428295
    2. '_mid' → logprob: -4.643331527709961
    3. '_=' → logprob: -4.893331527709961
    4. '=' → logprob: -7.768331527709961
    5. '_max' → logprob: -8.393331527709961
    6. ' =' → logprob: -8.518331527709961
    7. '_m' → logprob: -9.018331527709961
    8. '_middle' → logprob: -10.268331527709961
    9. '_mean' → logprob: -11.893331527709961
    10. 'mid' → logprob: -12.268331527709961

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04301551356911659
    2. '=' → logprob: -3.168015480041504
    3. ' =(' → logprob: -11.168015480041504
    4. '=(' → logprob: -13.543015480041504
    5. ' ' → logprob: -15.168015480041504
    6. ',' → logprob: -15.418015480041504
    7. '=int' → logprob: -16.04301643371582
    8. '=n' → logprob: -16.79301643371582
    9. '＝' → logprob: -17.29301643371582
    10. ' =)' → logprob: -17.29301643371582

Token 108: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.28121116757392883
    2. ' (' → logprob: -1.4062111377716064
    3. '(' → logprob: -10.156210899353027
    4. 'n' → logprob: -12.281210899353027
    5. '(int' → logprob: -12.406210899353027
    6. '(a' → logprob: -13.406210899353027
    7. '`' → logprob: -13.531210899353027
    8. ' n' → logprob: -13.781210899353027
    9. '   ' → logprob: -13.906210899353027
    10. '((' → logprob: -14.031210899353027

Token 109: '_min' (ID: 15950)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.49399060010910034
    2. '_min' → logprob: -0.9939906001091003
    3. '_mid' → logprob: -4.118990421295166
    4. '_' → logprob: -5.743990421295166
    5. '_(' → logprob: -9.368990898132324
    6. '_low' → logprob: -10.868990898132324
    7. 'max' → logprob: -10.993990898132324
    8. ' _' → logprob: -10.993990898132324
    9. '_middle' → logprob: -10.993990898132324
    10. '```' → logprob: -11.368990898132324

Token 110: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1270572543144226
    2. ' +' → logprob: -2.1270573139190674
    3. '+(' → logprob: -9.127057075500488
    4. '+n' → logprob: -11.502057075500488
    5. ' +(' → logprob: -12.127057075500488
    6. ' ' → logprob: -13.127057075500488
    7. ' plus' → logprob: -13.877057075500488
    8. ' ' → logprob: -14.752057075500488
    9. '＋' → logprob: -14.752057075500488
    10. '+r' → logprob: -15.752057075500488

Token 111: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.16023996472358704
    2. ' (' → logprob: -1.9102399349212646
    3. '   ' → logprob: -11.660240173339844
    4. '(' → logprob: -12.535240173339844
    5. '(abs' → logprob: -13.910240173339844
    6. ' ' → logprob: -14.410240173339844
    7. '(N' → logprob: -14.410240173339844
    8. '((' → logprob: -15.285240173339844
    9. '0' → logprob: -15.410240173339844
    10. '(a' → logprob: -15.410240173339844

Token 112: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014339430257678032
    2. ' n' → logprob: -4.264339447021484
    3. '(n' → logprob: -8.764339447021484
    4. ' (' → logprob: -10.889339447021484
    5. '	n' → logprob: -14.389339447021484
    6. ')n' → logprob: -15.514339447021484
    7. '_n' → logprob: -16.389339447021484
    8. '   ' → logprob: -16.639339447021484
    9. '```' → logprob: -16.764339447021484
    10. '
' → logprob: -17.889339447021484

Token 113: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.2022945135831833
    2. '_mid' → logprob: -1.7022944688796997
    3. '_min' → logprob: -7.07729434967041
    4. '_' → logprob: -10.45229434967041
    5. '_m' → logprob: -12.95229434967041
    6. '_middle' → logprob: -13.32729434967041
    7. 'max' → logprob: -14.20229434967041
    8. '_cut' → logprob: -14.57729434967041
    9. '_mass' → logprob: -14.70229434967041
    10. '_-' → logprob: -14.70229434967041

Token 114: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3880534768104553
    2. '-' → logprob: -1.3880534172058105
    3. '-n' → logprob: -2.6380534172058105
    4. ')' → logprob: -7.7630534172058105
    5. '_' → logprob: -10.013053894042969
    6. ' ' → logprob: -10.138053894042969
    7. '-N' → logprob: -11.138053894042969
    8. '   ' → logprob: -11.513053894042969
    9. '_n' → logprob: -12.138053894042969
    10. 'n' → logprob: -12.263053894042969

Token 115: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01260265614837408
    2. ' n' → logprob: -4.387602806091309
    3. ')' → logprob: -9.512602806091309
    4. ')n' → logprob: -11.012602806091309
    5. '   ' → logprob: -13.762602806091309
    6. '	n' → logprob: -14.387602806091309
    7. '_n' → logprob: -15.512602806091309
    8. ' ' → logprob: -15.637602806091309
    9. '```' → logprob: -15.887602806091309
    10. '1' → logprob: -16.387601852416992

Token 116: '_min' (ID: 15950)
  Prédit: '_mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mid' → logprob: -0.0012921433662995696
    2. '_min' → logprob: -6.7512922286987305
    3. '_' → logprob: -9.37629222869873
    4. '_max' → logprob: -10.37629222869873
    5. ')_' → logprob: -12.37629222869873
    6. ')' → logprob: -15.00129222869873
    7. '_m' → logprob: -15.12629222869873
    8. '_middle' → logprob: -15.12629222869873
    9. 'mid' → logprob: -15.25129222869873
    10. '_mix' → logprob: -15.87629222869873

Token 117: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015533094992861152
    2. ' )' → logprob: -6.876553535461426
    3. ')//' → logprob: -7.876553535461426
    4. ')/' → logprob: -8.876553535461426
    5. '   ' → logprob: -15.001553535461426
    6. '2' → logprob: -15.626553535461426
    7. '）' → logprob: -15.751553535461426
    8. '1' → logprob: -16.00155258178711
    9. ' ' → logprob: -16.25155258178711
    10. '0' → logprob: -16.37655258178711

Token 118: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.027349082753062248
    2. ' /' → logprob: -4.40234899520874
    3. '//' → logprob: -4.65234899520874
    4. ')' → logprob: -6.15234899520874
    5. ' //' → logprob: -6.15234899520874
    6. '2' → logprob: -8.152349472045898
    7. ')/' → logprob: -8.902349472045898
    8. '```' → logprob: -9.027349472045898
    9. '0' → logprob: -9.277349472045898
    10. '>' → logprob: -9.527349472045898

Token 119: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007106438861228526
    2. ' ' → logprob: -7.250710487365723
    3. '   ' → logprob: -14.625710487365723
    4. '```' → logprob: -16.12571144104004
    5. '  ' → logprob: -17.37571144104004
    6. '    ' → logprob: -18.00071144104004
    7. ' ' → logprob: -18.25071144104004
    8. '۲' → logprob: -18.75071144104004
    9. '.' → logprob: -18.81321144104004
    10. '>' → logprob: -19.00071144104004

Token 120: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.686778503237292e-05
    2. ' ' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.375097274780273
    4. '  ' → logprob: -16.375097274780273
    5. '```' → logprob: -16.750097274780273
    6. '    ' → logprob: -18.125097274780273
    7. '.' → logprob: -18.625097274780273
    8. ' ' → logprob: -18.750097274780273
    9. '２' → logprob: -18.875097274780273
    10. '(' → logprob: -19.062597274780273

Token 121: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7773330211639404
    2. ' 
' → logprob: -1.6523330211639404
    3. '  
' → logprob: -1.7773330211639404
    4. '<|end|>' → logprob: -2.6523330211639404
    5. '   
' → logprob: -3.0273330211639404
    6. ' ' → logprob: -3.5273330211639404
    7. '    
' → logprob: -4.4023332595825195
    8. 'n' → logprob: -5.5273332595825195
    9. 'if' → logprob: -6.1523332595825195
    10. '<|end|>' → logprob: -6.4023332595825195

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9855570197105408
    2. '
' → logprob: -1.4855570793151855
    3. '<|end|>' → logprob: -1.8605570793151855
    4. ' if' → logprob: -2.1105570793151855
    5. '  
' → logprob: -3.2355570793151855
    6. 'if' → logprob: -3.7355570793151855
    7. ' 
' → logprob: -3.8605570793151855
    8. ' ' → logprob: -4.3605570793151855
    9. 'n' → logprob: -5.1105570793151855
    10. '    
' → logprob: -5.2355570793151855

Token 123: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.9587547779083252
    2. 'val' → logprob: -1.3337547779083252
    3. 'v' → logprob: -1.4587547779083252
    4. ' if' → logprob: -3.458754777908325
    5. 'value' → logprob: -3.708754777908325
    6. 'result' → logprob: -4.083754539489746
    7. ' val' → logprob: -4.833754539489746
    8. '   ' → logprob: -4.958754539489746
    9. 'res' → logprob: -4.958754539489746
    10. ' v' → logprob: -5.583754539489746

Token 124: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.5232823491096497
    2. ' calc' → logprob: -0.8982823491096497
    3. '(calc' → logprob: -9.523282051086426
    4. 'x' → logprob: -10.273282051086426
    5. '   ' → logprob: -10.523282051086426
    6. ' x' → logprob: -11.398282051086426
    7. 'a' → logprob: -12.648282051086426
    8. ' ' → logprob: -12.898282051086426
    9. 'abs' → logprob: -13.648282051086426
    10. '.calc' → logprob: -13.648282051086426

Token 125: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00016361083544325083
    2. '(' → logprob: -9.250164031982422
    3. '(x' → logprob: -10.000164031982422
    4. ' (' → logprob: -10.875164031982422
    5. ')(' → logprob: -13.125164031982422
    6. ')' → logprob: -15.500164031982422
    7. '(a' → logprob: -15.750164031982422
    8. '(s' → logprob: -16.000164031982422
    9. '(int' → logprob: -16.000164031982422
    10. '((' → logprob: -16.250164031982422

Token 126: '_mid' (ID: 105824)
  Prédit: '_mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mid' → logprob: -1.8312570318812504e-05
    2. '_max' → logprob: -11.375018119812012
    3. 'mid' → logprob: -12.250018119812012
    4. '_min' → logprob: -13.750018119812012
    5. ')' → logprob: -15.250018119812012
    6. ')_' → logprob: -15.625018119812012
    7. '_m' → logprob: -16.250019073486328
    8. '_middle' → logprob: -16.250019073486328
    9. '_' → logprob: -17.125019073486328
    10. 'Mid' → logprob: -17.750019073486328

Token 127: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003351782448589802
    2. ' )' → logprob: -5.87835168838501
    3. ')<' → logprob: -8.753352165222168
    4. ')>' → logprob: -9.253352165222168
    5. ')>=' → logprob: -9.503352165222168
    6. ')<=' → logprob: -9.753352165222168
    7. '<' → logprob: -10.503352165222168
    8. ' <' → logprob: -10.628352165222168
    9. ' ' → logprob: -10.753352165222168
    10. '>' → logprob: -10.753352165222168

Token 128: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.5688896775245667
    2. ' <' → logprob: -1.1938896179199219
    3. '>' → logprob: -2.693889617919922
    4. ' >' → logprob: -3.693889617919922
    5. '>=' → logprob: -3.818889617919922
    6. ' >=' → logprob: -4.443889617919922
    7. ' ' → logprob: -6.443889617919922
    8. '<=' → logprob: -6.818889617919922
    9. ' <=' → logprob: -7.193889617919922
    10. '<n' → logprob: -7.693889617919922

Token 129: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0181527491658926
    2. ' x' → logprob: -4.018152713775635
    3. '   ' → logprob: -13.768153190612793
    4. '	x' → logprob: -14.143153190612793
    5. ' ' → logprob: -15.393153190612793
    6. '>x' → logprob: -15.768153190612793
    7. 'a' → logprob: -15.893153190612793
    8. '"x' → logprob: -16.643152236938477
    9. '(x' → logprob: -16.643152236938477
    10. '0' → logprob: -17.018152236938477

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.055399756878614426
    2. ':
' → logprob: -2.9303996562957764
    3. ' :' → logprob: -8.180399894714355
    4. ' :
' → logprob: -8.430399894714355
    5. ':
' → logprob: -12.055399894714355
    6. ':n' → logprob: -12.555399894714355
    7. '):
' → logprob: -12.680399894714355
    8. '   ' → logprob: -12.930399894714355
    9. '):' → logprob: -14.055399894714355
    10. '_n' → logprob: -14.305399894714355

Token 131: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4666029214859009
    2. ':' → logprob: -1.9666029214859009
    3. '       ' → logprob: -2.2166028022766113
    4. ':
' → logprob: -2.5916028022766113
    5. 'n' → logprob: -3.4666028022766113
    6. ' :
' → logprob: -5.591602802276611
    7. '_n' → logprob: -5.591602802276611
    8. '    
' → logprob: -6.091602802276611
    9. ' n' → logprob: -6.341602802276611
    10. '
' → logprob: -6.466602802276611

Token 132: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.29551124572753906
    2. ' n' → logprob: -1.420511245727539
    3. '   ' → logprob: -4.545511245727539
    4. '    ' → logprob: -6.420511245727539
    5. '    
' → logprob: -6.920511245727539
    6. '_n' → logprob: -8.045511245727539
    7. '
' → logprob: -8.295511245727539
    8. ' 
' → logprob: -8.420511245727539
    9. '	n' → logprob: -8.920511245727539
    10. '     
' → logprob: -10.920511245727539

Token 133: '_max' (ID: 13731)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0003421375877223909
    2. '_max' → logprob: -8.00034236907959
    3. '_' → logprob: -12.00034236907959
    4. '_mid' → logprob: -15.25034236907959
    5. '_m' → logprob: -16.000341415405273
    6. 'min' → logprob: -16.375341415405273
    7. '_low' → logprob: -17.250341415405273
    8. ' _' → logprob: -18.000341415405273
    9. '__' → logprob: -18.750341415405273
    10. '_MIN' → logprob: -20.250341415405273

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028141476213932037
    2. '=' → logprob: -5.877814292907715
    3. ' ' → logprob: -11.627814292907715
    4. ')' → logprob: -15.877814292907715
    5. ',' → logprob: -16.2528133392334
    6. ' =)' → logprob: -16.3778133392334
    7. ' =
' → logprob: -17.2528133392334
    8. '.' → logprob: -17.6278133392334
    9. ' ,' → logprob: -17.7528133392334
    10. '    ' → logprob: -18.1278133392334

Token 135: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3485267162322998
    2. 'n' → logprob: -1.2235267162322998
    3. '	n' → logprob: -9.473526954650879
    4. '   ' → logprob: -13.348526954650879
    5. ' ' → logprob: -13.848526954650879
    6. '_n' → logprob: -14.098526954650879
    7. ' ' → logprob: -14.473526954650879
    8. 'mid' → logprob: -15.223526954650879
    9. '    ' → logprob: -15.598526954650879
    10. '<|end|>' → logprob: -15.848526954650879

Token 136: '_mid' (ID: 105824)
  Prédit: '_mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mid' → logprob: -7.111979357432574e-05
    2. 'mid' → logprob: -9.75007152557373
    3. '_min' → logprob: -12.00007152557373
    4. 'id' → logprob: -13.00007152557373
    5. '_' → logprob: -13.12507152557373
    6. '_max' → logprob: -13.75007152557373
    7. '_m' → logprob: -14.12507152557373
    8. '_middle' → logprob: -15.75007152557373
    9. '[mid' → logprob: -16.125070571899414
    10. '_id' → logprob: -16.125070571899414

Token 137: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3477391302585602
    2. ' else' → logprob: -1.9727391004562378
    3. 'else' → logprob: -2.4727392196655273
    4. '<|end|>' → logprob: -2.7227392196655273
    5. '	else' → logprob: -6.972739219665527
    6. ' 
' → logprob: -7.097739219665527
    7. '
' → logprob: -7.097739219665527
    8. '    
' → logprob: -7.222739219665527
    9. ' ' → logprob: -7.847739219665527
    10. 'n' → logprob: -8.472739219665527

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7252396941184998
    2. 'else' → logprob: -0.7252396941184998
    3. ' else' → logprob: -3.4752397537231445
    4. '	else' → logprob: -8.100239753723145
    5. 'n' → logprob: -8.225239753723145
    6. '<|end|>' → logprob: -10.475239753723145
    7. '
' → logprob: -11.975239753723145
    8. '    
' → logprob: -12.100239753723145
    9. '_else' → logprob: -12.350239753723145
    10. '```' → logprob: -12.600239753723145

Token 139: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.11310978978872299
    2. ' else' → logprob: -2.488109827041626
    3. '   ' → logprob: -3.738109827041626
    4. '	else' → logprob: -9.863109588623047
    5. 'n' → logprob: -10.738109588623047
    6. 'elif' → logprob: -12.863109588623047
    7. '<|end|>' → logprob: -13.363109588623047
    8. '_else' → logprob: -14.238109588623047
    9. '  ' → logprob: -14.363109588623047
    10. 'e' → logprob: -14.488109588623047

Token 140: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028284132480621338
    2. ':' → logprob: -3.6532840728759766
    3. 'n' → logprob: -7.153284072875977
    4. ':
' → logprob: -7.653284072875977
    5. ' n' → logprob: -8.778284072875977
    6. '<|end|>' → logprob: -9.028284072875977
    7. ':n' → logprob: -9.278284072875977
    8. '[n' → logprob: -9.403284072875977
    9. '(n' → logprob: -9.403284072875977
    10. '	n' → logprob: -10.278284072875977

Token 141: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2090132087469101
    2. '       ' → logprob: -1.7090132236480713
    3. ' n' → logprob: -5.084012985229492
    4. '   ' → logprob: -6.959012985229492
    5. '	n' → logprob: -7.834012985229492
    6. '           ' → logprob: -12.084012985229492
    7. '     ' → logprob: -12.709012985229492
    8. '        
' → logprob: -12.709012985229492
    9. '(n' → logprob: -12.834012985229492
    10. '    ' → logprob: -13.209012985229492

Token 142: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.023257357999682426
    2. ' n' → logprob: -3.773257255554199
    3. '	n' → logprob: -11.8982572555542
    4. '   ' → logprob: -12.2732572555542
    5. '       ' → logprob: -15.6482572555542
    6. '_n' → logprob: -15.7732572555542
    7. ' ' → logprob: -16.648258209228516
    8. '  ' → logprob: -17.648258209228516
    9. '    ' → logprob: -17.898258209228516
    10. '
' → logprob: -18.898258209228516

Token 143: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.001614842563867569
    2. '_max' → logprob: -6.501615047454834
    3. '_' → logprob: -9.126614570617676
    4. ' _' → logprob: -13.626614570617676
    5. '_n' → logprob: -14.751614570617676
    6. ')_' → logprob: -15.251614570617676
    7. '._' → logprob: -15.376614570617676
    8. 'in' → logprob: -15.376614570617676
    9. 'min' → logprob: -15.501614570617676
    10. '_m' → logprob: -15.626614570617676

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08688590675592422
    2. '=' → logprob: -2.961885929107666
    3. ' +=' → logprob: -3.461885929107666
    4. '+=' → logprob: -9.211885452270508
    5. ' *=' → logprob: -11.586885452270508
    6. ' ' → logprob: -12.086885452270508
    7. ' ' → logprob: -12.586885452270508
    8. ' -=' → logprob: -12.961885452270508
    9. ' |=' → logprob: -13.461885452270508
    10. ' <<=' → logprob: -13.711885452270508

Token 145: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16023053228855133
    2. 'n' → logprob: -1.9102305173873901
    3. '	n' → logprob: -12.03523063659668
    4. '_n' → logprob: -15.66023063659668
    5. ' ' → logprob: -15.78523063659668
    6. ' ' → logprob: -17.16023063659668
    7. '   ' → logprob: -18.03523063659668
    8. '‌' → logprob: -18.28523063659668
    9. ')n' → logprob: -18.91023063659668
    10. '_' → logprob: -19.03523063659668

Token 146: '_mid' (ID: 105824)
  Prédit: '_mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mid' → logprob: -4.9186317482963204e-05
    2. '_min' → logprob: -10.375049591064453
    3. 'mid' → logprob: -11.750049591064453
    4. '_max' → logprob: -12.000049591064453
    5. '_' → logprob: -12.875049591064453
    6. '_m' → logprob: -13.625049591064453
    7. '_middle' → logprob: -17.250049591064453
    8. '_cut' → logprob: -17.625049591064453
    9. '[mid' → logprob: -18.125049591064453
    10. '_mix' → logprob: -18.750049591064453

Token 147: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5550026297569275
    2. 'n' → logprob: -1.8050026893615723
    3. 'print' → logprob: -2.3050026893615723
    4. '\n' → logprob: -2.5550026893615723
    5. '<|end|>' → logprob: -3.1800026893615723
    6. '
' → logprob: -4.055002689361572
    7. ' ' → logprob: -4.430002689361572
    8. ' print' → logprob: -6.430002689361572
    9. '#' → logprob: -6.555002689361572
    10. ']' → logprob: -6.805002689361572

Token 148: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5405638217926025
    2. 'print' → logprob: -0.9155638217926025
    3. 'n' → logprob: -4.790563583374023
    4. ' print' → logprob: -5.790563583374023
    5. '<|end|>' → logprob: -5.790563583374023
    6. ' ' → logprob: -7.040563583374023
    7. '\n' → logprob: -7.915563583374023
    8. ']' → logprob: -8.040563583374023
    9. ' )' → logprob: -8.915563583374023
    10. 'p' → logprob: -8.915563583374023

Token 149: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.005682041402906179
    2. '(' → logprob: -6.005681991577148
    3. '(round' → logprob: -6.130681991577148
    4. '(int' → logprob: -7.755681991577148
    5. '(math' → logprob: -8.880681991577148
    6. 'n' → logprob: -8.880681991577148
    7. '(min' → logprob: -9.630681991577148
    8. '(abs' → logprob: -9.630681991577148
    9. '("' → logprob: -10.130681991577148
    10. '((' → logprob: -10.630681991577148

Token 150: '_mid' (ID: 105824)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.800088107585907
    2. '_mid' → logprob: -0.800088107585907
    3. '_max' → logprob: -2.3000881671905518
    4. '_' → logprob: -7.175087928771973
    5. ')' → logprob: -8.675087928771973
    6. '_m' → logprob: -9.175087928771973
    7. '_)' → logprob: -9.800087928771973
    8. ')_' → logprob: -10.300087928771973
    9. '_mix' → logprob: -12.050087928771973
    10. ' _' → logprob: -12.175087928771973

Token 151: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3306015716807451e-05
    2. ' )' → logprob: -11.25001335144043
    3. '))' → logprob: -16.12501335144043
    4. ')
' → logprob: -17.00001335144043
    5. '+' → logprob: -17.62501335144043
    6. '}' → logprob: -18.00001335144043
    7. ')`' → logprob: -18.00001335144043
    8. ' ' → logprob: -18.12501335144043
    9. '```' → logprob: -18.62501335144043
    10. '`)' → logprob: -18.75001335144043


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 149
Tokens correctement prédits (1ère position, stricte): 51
Tokens correctement prédits (1ère position, avec adaptation): 56
Tokens correctement prédits (top 10): 115
Précision stricte (1ère position): 34.23%
Précision adaptée (1ère position): 37.58%
Précision (top 10): 77.18%
================================================================================
