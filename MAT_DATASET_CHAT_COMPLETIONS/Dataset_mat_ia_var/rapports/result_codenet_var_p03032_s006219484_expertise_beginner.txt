================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, k = map(int, input().split())
v = list(map(int, input().split()))

answer = 0

for a in range(0, n+1):
    for b in range(0, n+1):
        if a + b > n:
            continue
        max_take = a + b
        if max_take > k:
            continue
        items = []
        for i in range(a):
            items.append(v[i])
        for i in range(b):
            items.append(v[-(i+1)])
        items.sort()
        d = k - (a + b)
        now = items[:]
        for j in range(min(d, len(now))):
            if now[j] < 0:
                now[j] = 0
        total = sum(now)
        if total > answer:
            answer = total

print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' k' (ID: 372)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023710796609520912
    2. ' =' → logprob: -4.39871072769165
    3. ',' → logprob: -4.52371072769165
    4. ' ' → logprob: -10.148711204528809
    5. '*' → logprob: -10.273711204528809
    6. '+' → logprob: -10.398711204528809
    7. ')' → logprob: -10.398711204528809
    8. '.' → logprob: -10.773711204528809
    9. '_' → logprob: -10.773711204528809
    10. '[' → logprob: -10.773711204528809

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06230287253856659
    2. ' map' → logprob: -3.812302827835083
    3. ' n' → logprob: -4.437303066253662
    4. '0' → logprob: -4.562303066253662
    5. ' input' → logprob: -4.937303066253662
    6. 'map' → logprob: -5.812303066253662
    7. 'input' → logprob: -6.062303066253662
    8. '10' → logprob: -6.187303066253662
    9. '1' → logprob: -7.937303066253662
    10. ' int' → logprob: -8.062302589416504

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0960182324051857
    2. '<|end|>' → logprob: -2.4710183143615723
    3. '```' → logprob: -6.096018314361572
    4. '<|end|>' → logprob: -6.346018314361572
    5. '(lambda' → logprob: -7.596018314361572
    6. ')' → logprob: -7.596018314361572
    7. '(user' → logprob: -7.846018314361572
    8. '(int' → logprob: -8.471017837524414
    9. 'user' → logprob: -8.846017837524414
    10. '[' → logprob: -9.221017837524414

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.012436065822839737
    2. ')' → logprob: -5.0124359130859375
    3. '(' → logprob: -5.5124359130859375
    4. 'input' → logprob: -6.7624359130859375
    5. '(user' → logprob: -9.387435913085938
    6. '(str' → logprob: -9.512435913085938
    7. '```' → logprob: -9.637435913085938
    8. '=input' → logprob: -9.762435913085938
    9. '(int' → logprob: -9.887435913085938
    10. ' input' → logprob: -10.512435913085938

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5763772130012512
    2. ' input' → logprob: -0.8263772130012512
    3. '(input' → logprob: -7.8263773918151855
    4. ')' → logprob: -10.451376914978027
    5. ',input' → logprob: -12.201376914978027
    6. '=input' → logprob: -13.076376914978027
    7. '[input' → logprob: -14.576376914978027
    8. '<input' → logprob: -14.826376914978027
    9. '	input' → logprob: -15.326376914978027
    10. 'stdin' → logprob: -15.576376914978027

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6027558445930481
    2. '('' → logprob: -1.7277557849884033
    3. '().' → logprob: -2.3527557849884033
    4. ')' → logprob: -2.7277557849884033
    5. '()' → logprob: -2.8527557849884033
    6. '())' → logprob: -3.4777557849884033
    7. '("("' → logprob: -5.477756023406982
    8. '(
' → logprob: -5.727756023406982
    9. '```' → logprob: -5.852756023406982
    10. '(""))' → logprob: -6.227756023406982

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007220837287604809
    2. 'strip' → logprob: -7.2507219314575195
    3. 'rstrip' → logprob: -12.00072193145752
    4. ' split' → logprob: -12.62572193145752
    5. ')' → logprob: -13.62572193145752
    6. 'read' → logprob: -13.75072193145752
    7. '(split' → logprob: -15.00072193145752
    8. 'spl' → logprob: -15.87572193145752
    9. 'startswith' → logprob: -17.625722885131836
    10. 's' → logprob: -18.375722885131836

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08872120827436447
    2. '())' → logprob: -2.96372127532959
    3. '))' → logprob: -3.46372127532959
    4. '()' → logprob: -6.46372127532959
    5. '()))' → logprob: -8.58872127532959
    6. '`)' → logprob: -9.21372127532959
    7. '(' → logprob: -9.83872127532959
    8. '>)' → logprob: -11.46372127532959
    9. ')`' → logprob: -11.58872127532959
    10. ')))' → logprob: -11.71372127532959

Token 11: 'v' (ID: 85)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.180678367614746
    2. 'if' → logprob: -1.180678367614746
    3. 'for' → logprob: -2.430678367614746
    4. 'x' → logprob: -3.305678367614746
    5. '#' → logprob: -3.555678367614746
    6. '\n' → logprob: -3.555678367614746
    7. '```' → logprob: -3.805678367614746
    8. 'd' → logprob: -3.805678367614746
    9. 's' → logprob: -4.055678367614746
    10. ' ' → logprob: -4.180678367614746

Token 12: ' =' (ID: 314)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.5055539608001709
    2. 'a' → logprob: -1.880553960800171
    3. ' =' → logprob: -2.255553960800171
    4. '[' → logprob: -2.380553960800171
    5. '[i' → logprob: -3.755553960800171
    6. '=' → logprob: -4.63055419921875
    7. '[a' → logprob: -5.25555419921875
    8. 'als' → logprob: -6.13055419921875
    9. 'alue' → logprob: -6.63055419921875
    10. '[:]' → logprob: -6.75555419921875

Token 13: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.684099018573761
    2. ' list' → logprob: -1.3090989589691162
    3. ' [' → logprob: -2.434098958969116
    4. ' []' → logprob: -2.684098958969116
    5. '[]' → logprob: -3.559098958969116
    6. '[int' → logprob: -3.809098958969116
    7. '[' → logprob: -4.559099197387695
    8. '[list' → logprob: -4.934099197387695
    9. 'int' → logprob: -8.059099197387695
    10. ' ' → logprob: -8.684099197387695

Token 14: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004587903094943613
    2. '(range' → logprob: -8.125458717346191
    3. '(v' → logprob: -9.250458717346191
    4. '(map' → logprob: -11.375458717346191
    5. '(int' → logprob: -11.625458717346191
    6. '(

' → logprob: -11.750458717346191
    7. ' (' → logprob: -11.875458717346191
    8. '(
' → logprob: -12.375458717346191
    9. 'v' → logprob: -12.500458717346191
    10. '(input' → logprob: -13.000458717346191

Token 15: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0046185762621462345
    2. '(' → logprob: -5.5046186447143555
    3. '(input' → logprob: -9.004618644714355
    4. '```' → logprob: -9.004618644714355
    5. '=int' → logprob: -9.879618644714355
    6. '[int' → logprob: -10.004618644714355
    7. 'int' → logprob: -10.129618644714355
    8. '<int' → logprob: -10.129618644714355
    9. ')' → logprob: -10.379618644714355
    10. '(str' → logprob: -10.629618644714355

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16561786830425262
    2. ',input' → logprob: -1.915617823600769
    3. '(input' → logprob: -6.040617942810059
    4. ',int' → logprob: -6.165617942810059
    5. '(' → logprob: -7.540617942810059
    6. ' ,' → logprob: -8.290617942810059
    7. '(int' → logprob: -10.165617942810059
    8. ',(' → logprob: -10.415617942810059
    9. '```' → logprob: -11.540617942810059
    10. ',float' → logprob: -11.790617942810059

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10020796209573746
    2. ' input' → logprob: -2.350208044052124
    3. '(input' → logprob: -13.975208282470703
    4. ',input' → logprob: -15.975208282470703
    5. '<input' → logprob: -16.600208282470703
    6. '	input' → logprob: -16.600208282470703
    7. '=input' → logprob: -16.850208282470703
    8. ' ' → logprob: -17.475208282470703
    9. '_input' → logprob: -17.850208282470703
    10. '```' → logprob: -17.975208282470703

Token 18: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0011968977050855756
    2. '()' → logprob: -6.87619686126709
    3. '(' → logprob: -9.50119686126709
    4. '())' → logprob: -10.25119686126709
    5. '()))' → logprob: -10.62619686126709
    6. '(.' → logprob: -11.25119686126709
    7. '(),' → logprob: -12.37619686126709
    8. ' ().' → logprob: -13.12619686126709
    9. '()));' → logprob: -13.75119686126709
    10. '());' → logprob: -13.87619686126709

Token 19: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.200166469876422e-06
    2. 'strip' → logprob: -12.250004768371582
    3. '(split' → logprob: -15.625004768371582
    4. ' split' → logprob: -16.0000057220459
    5. 'rstrip' → logprob: -17.1250057220459
    6. 'spl' → logprob: -18.7500057220459
    7. '.split' → logprob: -20.2500057220459
    8. 'plit' → logprob: -20.6250057220459
    9. ')' → logprob: -21.5000057220459
    10. '_split' → logprob: -21.7500057220459

Token 20: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.08089017868041992
    2. '))' → logprob: -3.20589017868042
    3. '())' → logprob: -3.45589017868042
    4. ')' → logprob: -5.95589017868042
    5. '()' → logprob: -6.45589017868042
    6. '(' → logprob: -6.58089017868042
    7. '()))
' → logprob: -10.580890655517578
    8. '())))' → logprob: -11.830890655517578
    9. '()));' → logprob: -11.955890655517578
    10. '('' → logprob: -12.330890655517578

Token 21: 'answer' (ID: 17021)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6733633279800415
    2. 's' → logprob: -1.5483633279800415
    3. 'd' → logprob: -1.9233633279800415
    4. 'a' → logprob: -3.423363208770752
    5. 'r' → logprob: -3.923363208770752
    6. 'dp' → logprob: -4.048363208770752
    7. 'count' → logprob: -4.798363208770752
    8. '#' → logprob: -4.923363208770752
    9. 'i' → logprob: -4.923363208770752
    10. 'm' → logprob: -5.298363208770752

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.49419161677360535
    2. '=' → logprob: -0.9941916465759277
    3. '_' → logprob: -3.9941916465759277
    4. '[' → logprob: -6.744191646575928
    5. 's' → logprob: -9.24419116973877
    6. ',' → logprob: -9.86919116973877
    7. '[:]' → logprob: -10.36919116973877
    8. '.' → logprob: -10.49419116973877
    9. ' ' → logprob: -10.74419116973877
    10. ')' → logprob: -10.86919116973877

Token 23: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02347455359995365
    2. ' ' → logprob: -4.14847469329834
    3. 'max' → logprob: -5.39847469329834
    4. 'float' → logprob: -7.14847469329834
    5. '[' → logprob: -7.52347469329834
    6. 'sum' → logprob: -7.64847469329834
    7. ' max' → logprob: -8.02347469329834
    8. '[]' → logprob: -8.64847469329834
    9. 'v' → logprob: -9.14847469329834
    10. '[max' → logprob: -9.14847469329834

Token 24: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007832561619579792
    2. 'max' → logprob: -5.7578325271606445
    3. '-' → logprob: -6.0078325271606445
    4. 'float' → logprob: -6.6328325271606445
    5. '-max' → logprob: -7.5078325271606445
    6. '[]' → logprob: -8.382832527160645
    7. '-v' → logprob: -10.382832527160645
    8. '[' → logprob: -11.507832527160645
    9. '[max' → logprob: -11.757832527160645
    10. '-s' → logprob: -11.882832527160645

Token 25: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015905087813735008
    2. ' for' → logprob: -5.140904903411865
    3. '
' → logprob: -6.015904903411865
    4. '\n' → logprob: -6.015904903411865
    5. '\' → logprob: -6.390904903411865
    6. '' → logprob: -6.515904903411865
    7. 'f' → logprob: -7.640904903411865
    8. ' ' → logprob: -7.890904903411865
    9. '#' → logprob: -8.265905380249023
    10. '<|end|>' → logprob: -8.390905380249023

Token 26: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009417156688869
    2. 'f' → logprob: -7.000941753387451
    3. '(' → logprob: -10.750941276550293
    4. ' for' → logprob: -12.500941276550293
    5. '#' → logprob: -13.500941276550293
    6. ')' → logprob: -13.750941276550293
    7. '```' → logprob: -14.375941276550293
    8. 'n' → logprob: -15.000941276550293
    9. '=' → logprob: -15.250941276550293
    10. 'fo' → logprob: -15.500941276550293

Token 27: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011431162245571613
    2. ' ' → logprob: -4.5114312171936035
    3. 'i' → logprob: -8.136430740356445
    4. ' _' → logprob: -9.761430740356445
    5. '_' → logprob: -11.386430740356445
    6. '  ' → logprob: -11.511430740356445
    7. ' ‌' → logprob: -12.386430740356445
    8. ' n' → logprob: -13.636430740356445
    9. ' ​' → logprob: -13.886430740356445
    10. ' e' → logprob: -14.261430740356445

Token 28: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05660898983478546
    2. ' ' → logprob: -3.0566089153289795
    3. ' i' → logprob: -5.306609153747559
    4. 'in' → logprob: -6.056609153747559
    5. 'i' → logprob: -8.556609153747559
    6. 'n' → logprob: -8.806609153747559
    7. '  ' → logprob: -8.931609153747559
    8. ' n' → logprob: -9.181609153747559
    9. '_' → logprob: -10.556609153747559
    10. 'range' → logprob: -11.056609153747559

Token 29: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0031828247010707855
    2. 'range' → logprob: -5.753182888031006
    3. '(range' → logprob: -13.253182411193848
    4. '	range' → logprob: -13.253182411193848
    5. ' ' → logprob: -13.503182411193848
    6. ' xrange' → logprob: -16.253183364868164
    7. '_range' → logprob: -17.378183364868164
    8. '.range' → logprob: -17.628183364868164
    9. ' r' → logprob: -17.753183364868164
    10. ' ranges' → logprob: -18.003183364868164

Token 30: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.576935350894928
    2. '(k' → logprob: -1.0769352912902832
    3. '(' → logprob: -2.326935291290283
    4. '(a' → logprob: -8.826935768127441
    5. '(len' → logprob: -13.201935768127441
    6. '((' → logprob: -14.951935768127441
    7. '(range' → logprob: -15.326935768127441
    8. ' (' → logprob: -15.451935768127441
    9. '(
' → logprob: -15.701935768127441
    10. '(i' → logprob: -15.951935768127441

Token 31: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00025788258062675595
    2. 'min' → logprob: -8.62525749206543
    3. '0' → logprob: -10.25025749206543
    4. '(k' → logprob: -11.12525749206543
    5. 'n' → logprob: -11.37525749206543
    6. ' k' → logprob: -11.37525749206543
    7. '{k' → logprob: -13.00025749206543
    8. ' min' → logprob: -13.50025749206543
    9. '(min' → logprob: -14.50025749206543
    10. 'a' → logprob: -14.62525749206543

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02151705138385296
    2. ' ,' → logprob: -3.896517038345337
    3. ',n' → logprob: -7.271517276763916
    4. ',k' → logprob: -8.521516799926758
    5. 'n' → logprob: -10.021516799926758
    6. 'k' → logprob: -11.521516799926758
    7. ',
' → logprob: -11.896516799926758
    8. ' n' → logprob: -12.021516799926758
    9. ' k' → logprob: -12.771516799926758
    10. ' ' → logprob: -13.021516799926758

Token 33: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.04473450034856796
    2. ' k' → logprob: -4.044734477996826
    3. 'min' → logprob: -4.169734477996826
    4. ' min' → logprob: -4.544734477996826
    5. 'n' → logprob: -9.169734954833984
    6. ' n' → logprob: -10.919734954833984
    7. ')' → logprob: -11.419734954833984
    8. ' ' → logprob: -11.419734954833984
    9. '   ' → logprob: -12.794734954833984
    10. '(min' → logprob: -13.544734954833984

Token 34: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014187129214406013
    2. ' +' → logprob: -4.264187335968018
    3. ')' → logprob: -11.01418685913086
    4. '1' → logprob: -13.26418685913086
    5. '):' → logprob: -13.51418685913086
    6. ' ' → logprob: -13.63918685913086
    7. '//' → logprob: -14.51418685913086
    8. '+k' → logprob: -14.63918685913086
    9. '+)' → logprob: -14.76418685913086
    10. ')+' → logprob: -14.76418685913086

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004909569397568703
    2. ' ' → logprob: -7.625491142272949
    3. 'k' → logprob: -13.12549114227295
    4. ' k' → logprob: -14.50049114227295
    5. '-' → logprob: -16.250490188598633
    6. ')' → logprob: -16.250490188598633
    7. '  ' → logprob: -16.750490188598633
    8. '   ' → logprob: -16.875490188598633
    9. '```' → logprob: -17.437990188598633
    10. '2' → logprob: -17.937990188598633

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007051641005091369
    2. ')' → logprob: -7.375705242156982
    3. ':' → logprob: -10.000704765319824
    4. ' ):' → logprob: -10.500704765319824
    5. '):
' → logprob: -12.250704765319824
    6. ',' → logprob: -15.125704765319824
    7. '),' → logprob: -16.62570571899414
    8. ' ' → logprob: -16.75070571899414
    9. '):(' → logprob: -16.75070571899414
    10. '):

' → logprob: -16.87570571899414

Token 37: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0883462205529213
    2. '<|end|>' → logprob: -2.588346242904663
    3. '   ' → logprob: -5.338346004486084
    4. ':' → logprob: -6.463346004486084
    5. '    ' → logprob: -7.088346004486084
    6. '  ' → logprob: -7.338346004486084
    7. ')' → logprob: -7.588346004486084
    8. ' :' → logprob: -8.213346481323242
    9. '<|end|>' → logprob: -8.588346481323242
    10. ' for' → logprob: -8.963346481323242

Token 38: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12490419298410416
    2. ' for' → logprob: -2.249904155731201
    3. '    ' → logprob: -5.374904155731201
    4. '<|end|>' → logprob: -5.999904155731201
    5. 'for' (adapté à ' for') → logprob: -6.124904155731201
    6. '```' → logprob: -6.874904155731201
    7. ' 
' → logprob: -7.249904155731201
    8. ' ```' → logprob: -8.24990463256836
    9. ' if' → logprob: -8.49990463256836
    10. '   ' → logprob: -8.74990463256836

Token 39: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.007661155425012112
    2. ' ' → logprob: -5.38266134262085
    3. 'b' → logprob: -6.13266134262085
    4. ' range' → logprob: -7.38266134262085
    5. ' k' → logprob: -8.507660865783691
    6. ' a' → logprob: -10.507660865783691
    7. 'range' → logprob: -11.882660865783691
    8. '  ' → logprob: -13.382660865783691
    9. 'a' → logprob: -13.757660865783691
    10. ' c' → logprob: -14.007660865783691

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0003733542689587921
    2. 'in' → logprob: -8.250372886657715
    3. ' ' → logprob: -9.125372886657715
    4. '(' → logprob: -13.750372886657715
    5. ' (' → logprob: -14.875372886657715
    6. ' =' → logprob: -15.000372886657715
    7. ' в' → logprob: -15.000372886657715
    8. '    ' → logprob: -15.250372886657715
    9. '=' → logprob: -16.00037384033203
    10. '  ' → logprob: -16.50037384033203

Token 41: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3552718460559845
    2. 'range' → logprob: -1.230271816253662
    3. '0' → logprob: -5.980271816253662
    4. '(range' → logprob: -6.105271816253662
    5. ' ' → logprob: -6.355271816253662
    6. '(' → logprob: -8.73027229309082
    7. ' k' → logprob: -10.35527229309082
    8. ' (' → logprob: -10.73027229309082
    9. ' a' → logprob: -10.98027229309082
    10. 'a' → logprob: -10.98027229309082

Token 42: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005189551156945527
    2. '(b' → logprob: -7.875518798828125
    3. '(k' → logprob: -9.250518798828125
    4. ' (' → logprob: -10.625518798828125
    5. '(a' → logprob: -11.625518798828125
    6. '(n' → logprob: -12.125518798828125
    7. 'b' → logprob: -13.625518798828125
    8. '((' → logprob: -13.625518798828125
    9. ' b' → logprob: -14.250518798828125
    10. ' ' → logprob: -14.750518798828125

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002712297427933663
    2. 'k' → logprob: -8.37527084350586
    3. ' ' → logprob: -10.50027084350586
    4. 'n' → logprob: -12.25027084350586
    5. 'a' → logprob: -12.75027084350586
    6. 'b' → logprob: -12.75027084350586
    7. '   ' → logprob: -13.12527084350586
    8. ' k' → logprob: -15.12527084350586
    9. 'min' → logprob: -16.50027084350586
    10. '(k' → logprob: -17.37527084350586

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010385235771536827
    2. ' ,' → logprob: -4.760385036468506
    3. ' ' → logprob: -6.635385036468506
    4. '   ' → logprob: -8.635385513305664
    5. '(' → logprob: -9.635385513305664
    6. ')' → logprob: -10.135385513305664
    7. ',k' → logprob: -10.260385513305664
    8. '+' → logprob: -10.385385513305664
    9. ',n' → logprob: -10.760385513305664
    10. ',b' → logprob: -11.135385513305664

Token 45: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.11498121172189713
    2. 'n' → logprob: -2.739981174468994
    3. ' k' → logprob: -3.739981174468994
    4. ' n' → logprob: -4.739981174468994
    5. ' min' → logprob: -4.989981174468994
    6. 'min' → logprob: -5.489981174468994
    7. 'a' → logprob: -7.614981174468994
    8. ' ' → logprob: -9.364981651306152
    9. ' a' → logprob: -11.114981651306152
    10. '   ' → logprob: -11.864981651306152

Token 46: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018997956067323685
    2. ' -' → logprob: -4.143998146057129
    3. '-' → logprob: -6.143998146057129
    4. ' +' → logprob: -7.268998146057129
    5. '-b' → logprob: -9.643998146057129
    6. '-n' → logprob: -10.643998146057129
    7. '-a' → logprob: -11.018998146057129
    8. ',' → logprob: -13.393998146057129
    9. ')+' → logprob: -13.393998146057129
    10. '-i' → logprob: -13.518998146057129

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -16.75
    3. '```' → logprob: -18.25
    4. ')' → logprob: -19.125
    5. '2' → logprob: -19.25
    6. '１' → logprob: -19.5
    7. '+' → logprob: -20.0
    8. '
' → logprob: -20.0625
    9. '   ' → logprob: -20.3125
    10. '১' → logprob: -20.3125

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008678716840222478
    2. '):
' → logprob: -7.62586784362793
    3. ')' → logprob: -8.25086784362793
    4. ':' → logprob: -10.12586784362793
    5. ' ):' → logprob: -10.62586784362793
    6. 'if' → logprob: -11.12586784362793
    7. ''):' → logprob: -11.37586784362793
    8. '   ' → logprob: -12.12586784362793
    9. ' if' → logprob: -12.50086784362793
    10. ',' → logprob: -12.50086784362793

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3247942924499512
    2. '<|end|>' → logprob: -1.3247942924499512
    3. ':' → logprob: -1.9497942924499512
    4. '   ' → logprob: -2.074794292449951
    5. '    ' → logprob: -2.199794292449951
    6. ' ' → logprob: -2.699794292449951
    7. ' if' → logprob: -4.949794292449951
    8. ' :' → logprob: -5.199794292449951
    9. '  ' → logprob: -6.199794292449951
    10. '[' → logprob: -6.199794292449951

Token 50: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5093404054641724
    2. ' if' → logprob: -1.8843404054641724
    3. '<|end|>' → logprob: -2.759340286254883
    4. ':' → logprob: -2.884340286254883
    5. '       ' → logprob: -3.259340286254883
    6. ' :' → logprob: -3.884340286254883
    7. '    ' → logprob: -4.009340286254883
    8. 'if' (adapté à ' if') → logprob: -4.009340286254883
    9. '        ' → logprob: -4.634340286254883
    10. '   ' → logprob: -4.884340286254883

Token 51: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07003802061080933
    2. 'a' → logprob: -2.695038080215454
    3. ' (' → logprob: -10.070037841796875
    4. ' ' → logprob: -10.570037841796875
    5. ' b' → logprob: -10.945037841796875
    6. '(a' → logprob: -11.445037841796875
    7. 'b' → logprob: -13.070037841796875
    8. '(' → logprob: -13.570037841796875
    9. '	a' → logprob: -13.820037841796875
    10. '<|end|>' → logprob: -14.820037841796875

Token 52: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3923424482345581
    2. ' +' → logprob: -1.142342448234558
    3. ' <=' → logprob: -5.892342567443848
    4. '<=' → logprob: -6.142342567443848
    5. ' >' → logprob: -8.892342567443848
    6. '+b' → logprob: -9.142342567443848
    7. '>' → logprob: -9.267342567443848
    8. ' and' → logprob: -9.642342567443848
    9. '==' → logprob: -10.142342567443848
    10. ' ==' → logprob: -10.642342567443848

Token 53: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005234002135694027
    2. ' b' → logprob: -5.2552337646484375
    3. 'k' → logprob: -16.380233764648438
    4. ' ' → logprob: -17.130233764648438
    5. '```' → logprob: -18.005233764648438
    6. '>b' → logprob: -18.630233764648438
    7. ')b' → logprob: -18.630233764648438
    8. '<|end|>' → logprob: -18.880233764648438
    9. '   ' → logprob: -19.255233764648438
    10. '       ' → logprob: -19.255233764648438

Token 54: ' >' (ID: 1424)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3996874690055847
    2. '<=' → logprob: -1.1496875286102295
    3. ' >' → logprob: -4.89968729019165
    4. '>' → logprob: -5.27468729019165
    5. ')' → logprob: -10.274687767028809
    6. '<|end|>' → logprob: -10.274687767028809
    7. ' ' → logprob: -10.399687767028809
    8. ')<=' → logprob: -10.899687767028809
    9. '">' → logprob: -11.524687767028809
    10. '```' → logprob: -11.899687767028809

Token 55: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.027520621195435524
    2. ' k' → logprob: -3.6525206565856934
    3. ' min' → logprob: -7.777520656585693
    4. 'n' → logprob: -7.777520656585693
    5. 'min' → logprob: -8.277520179748535
    6. ' n' → logprob: -9.027520179748535
    7. ' ' → logprob: -12.527520179748535
    8. '	k' → logprob: -13.402520179748535
    9. '   ' → logprob: -13.527520179748535
    10. '  ' → logprob: -15.402520179748535

Token 56: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.05650004744529724
    2. ':' → logprob: -3.05649995803833
    3. 'or' → logprob: -4.93149995803833
    4. ' ' → logprob: -7.55649995803833
    5. ' :' → logprob: -10.056500434875488
    6. ':
' → logprob: -10.306500434875488
    7. '   ' → logprob: -11.431500434875488
    8. '	or' → logprob: -11.431500434875488
    9. '       ' → logprob: -11.556500434875488
    10. ' and' → logprob: -12.056500434875488

Token 57: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14604295790195465
    2. ' continue' → logprob: -2.396043062210083
    3. ':' → logprob: -3.396043062210083
    4. '       ' → logprob: -5.271042823791504
    5. 'continue' → logprob: -5.646042823791504
    6. ' or' → logprob: -6.771042823791504
    7. ' :' → logprob: -7.771042823791504
    8. '               ' → logprob: -8.271042823791504
    9. ' ' → logprob: -8.646042823791504
    10. '   ' → logprob: -8.771042823791504

Token 58: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6309888958930969
    2. 'continue' (adapté à ' continue') → logprob: -1.0059888362884521
    3. 'break' → logprob: -2.880988836288452
    4. ' continue' → logprob: -3.630988836288452
    5. '               ' → logprob: -4.130989074707031
    6. ' break' → logprob: -6.630989074707031
    7. '	continue' → logprob: -6.880989074707031
    8. '	break' → logprob: -7.630989074707031
    9. '```' → logprob: -8.255989074707031
    10. '   ' → logprob: -8.505989074707031

Token 59: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3331350088119507
    2. '<|end|>' → logprob: -1.4581350088119507
    3. '```' → logprob: -3.5831351280212402
    4. '   ' → logprob: -5.58313512802124
    5. ' ' → logprob: -5.83313512802124
    6. '<|end|>' → logprob: -5.83313512802124
    7. '           ' → logprob: -5.95813512802124
    8. ' or' → logprob: -6.45813512802124
    9. '        
' → logprob: -6.58313512802124
    10. '\n' → logprob: -6.83313512802124

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05899379774928093
    2. '<|end|>' → logprob: -3.0589938163757324
    3. '        
' → logprob: -6.433993816375732
    4. ' ' → logprob: -6.433993816375732
    5. '           ' → logprob: -6.433993816375732
    6. '   ' → logprob: -7.058993816375732
    7. '```' → logprob: -7.308993816375732
    8. '<|end|>' → logprob: -7.308993816375732
    9. '        ' → logprob: -7.433993816375732
    10. ' or' → logprob: -7.683993816375732

Token 61: ' max' (ID: 2999)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12925279140472412
    2. ' ' → logprob: -3.1292529106140137
    3. '   ' → logprob: -4.129252910614014
    4. '           ' → logprob: -4.254252910614014
    5. ' and' → logprob: -4.629252910614014
    6. '<|end|>' → logprob: -4.879252910614014
    7. '    ' → logprob: -5.504252910614014
    8. '        ' → logprob: -5.504252910614014
    9. ' or' → logprob: -5.754252910614014
    10. 'if' → logprob: -5.879252910614014

Token 62: '_take' (ID: 197790)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4290175437927246
    2. '_take' → logprob: -2.5540175437927246
    3. '_pick' → logprob: -2.9290175437927246
    4. '_p' → logprob: -3.0540175437927246
    5. '_tokens' → logprob: -3.4290175437927246
    6. '_value' → logprob: -3.5540175437927246
    7. '_possible' → logprob: -3.9290175437927246
    8. '_use' → logprob: -3.9290175437927246
    9. '_answer' → logprob: -4.304017543792725
    10. '_val' → logprob: -4.304017543792725

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08939545601606369
    2. '=' → logprob: -2.464395523071289
    3. 's' → logprob: -7.839395523071289
    4. '_tokens' → logprob: -11.339395523071289
    5. ' ' → logprob: -11.714395523071289
    6. '_' → logprob: -11.839395523071289
    7. '_count' → logprob: -11.964395523071289
    8. '```' → logprob: -12.214395523071289
    9. '=int' → logprob: -12.589395523071289
    10. 'able' → logprob: -13.214395523071289

Token 64: ' a' (ID: 261)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.1339031159877777
    2. ' min' → logprob: -2.1339030265808105
    3. 'k' → logprob: -5.5089030265808105
    4. 'a' → logprob: -6.0089030265808105
    5. 'max' → logprob: -8.633903503417969
    6. ' k' → logprob: -8.883903503417969
    7. ' a' → logprob: -10.258903503417969
    8. '   ' → logprob: -10.258903503417969
    9. '(min' → logprob: -11.508903503417969
    10. 'n' → logprob: -11.633903503417969

Token 65: ' +' (ID: 659)
  Prédit: '+b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+b' → logprob: -0.2854224741458893
    2. ' +' → logprob: -2.0354225635528564
    3. '+' → logprob: -2.1604225635528564
    4. ' if' → logprob: -6.535422325134277
    5. 'if' → logprob: -7.785422325134277
    6. 'b' → logprob: -7.910422325134277
    7. '+k' → logprob: -9.160422325134277
    8. '<|end|>' → logprob: -11.410422325134277
    9. '+B' → logprob: -11.660422325134277
    10. '
' → logprob: -11.785422325134277

Token 66: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.173704271830502e-06
    2. ' b' → logprob: -13.00000286102295
    3. 'k' → logprob: -14.37500286102295
    4. '   ' → logprob: -16.125003814697266
    5. '       ' → logprob: -16.375003814697266
    6. 'min' → logprob: -17.000003814697266
    7. '<|end|>' → logprob: -18.125003814697266
    8. 'max' → logprob: -18.750003814697266
    9. ' ' → logprob: -18.750003814697266
    10. '	b' → logprob: -19.125003814697266

Token 67: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10137294977903366
    2. ' if' → logprob: -2.4763729572296143
    3. '       ' → logprob: -5.351372718811035
    4. '
' → logprob: -5.976372718811035
    5. ',' → logprob: -6.101372718811035
    6. '<|end|>' → logprob: -7.476372718811035
    7. '+' → logprob: -7.851372718811035
    8. 'and' → logprob: -7.851372718811035
    9. '<=' → logprob: -8.226372718811035
    10. ' or' → logprob: -8.476372718811035

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5455455183982849
    2. 'if' → logprob: -0.9205455183982849
    3. ' if' → logprob: -4.04554557800293
    4. '<|end|>' → logprob: -6.42054557800293
    5. ',' → logprob: -7.29554557800293
    6. ' or' → logprob: -7.54554557800293
    7. '```' → logprob: -7.79554557800293
    8. 'and' → logprob: -8.17054557800293
    9. '        
' → logprob: -8.42054557800293
    10. ' and' → logprob: -8.54554557800293

Token 69: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.041155245155096054
    2. 'for' → logprob: -3.2911553382873535
    3. ' if' → logprob: -6.6661553382873535
    4. '       ' → logprob: -6.9161553382873535
    5. 'max' → logprob: -8.541154861450195
    6. '   ' → logprob: -8.541154861450195
    7. '```' → logprob: -9.791154861450195
    8. ' for' → logprob: -10.166154861450195
    9. 'tokens' → logprob: -10.416154861450195
    10. 'rem' → logprob: -10.541154861450195

Token 70: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5779638290405273
    2. 'max' → logprob: -0.8279638290405273
    3. 'k' → logprob: -6.452963829040527
    4. ' k' → logprob: -7.952963829040527
    5. '           ' → logprob: -10.077963829040527
    6. '   ' → logprob: -10.202963829040527
    7. '       ' → logprob: -12.327963829040527
    8. '	max' → logprob: -13.202963829040527
    9. '(max' → logprob: -13.452963829040527
    10. ' ' → logprob: -13.702963829040527

Token 71: '_take' (ID: 197790)
  Prédit: '_take'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_take' → logprob: -0.000871082826051861
    2. '>' → logprob: -7.875871181488037
    3. '<=' → logprob: -8.875870704650879
    4. 'take' → logprob: -8.875870704650879
    5. '_' → logprob: -9.750870704650879
    6. ' >' → logprob: -10.000870704650879
    7. '_taken' → logprob: -10.125870704650879
    8. ' <=' → logprob: -10.875870704650879
    9. '```' → logprob: -11.625870704650879
    10. ' ' → logprob: -12.250870704650879

Token 72: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3084838390350342
    2. ' >' → logprob: -1.4334838390350342
    3. '<=' → logprob: -3.933483839035034
    4. ' <=' → logprob: -4.933484077453613
    5. '==' → logprob: -9.308484077453613
    6. ' ' → logprob: -9.808484077453613
    7. '<' → logprob: -11.183484077453613
    8. ' ==' → logprob: -11.683484077453613
    9. '>=' → logprob: -12.183484077453613
    10. ' <' → logprob: -12.933484077453613

Token 73: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.011082838289439678
    2. ' k' → logprob: -4.511082649230957
    3. 'min' → logprob: -11.011082649230957
    4. ' min' → logprob: -11.386082649230957
    5. '	k' → logprob: -13.136082649230957
    6. '   ' → logprob: -13.261082649230957
    7. ' ' → logprob: -13.386082649230957
    8. '=k' → logprob: -14.886082649230957
    9. 'n' → logprob: -15.261082649230957
    10. 'max' → logprob: -15.386082649230957

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008812114829197526
    2. ':
' → logprob: -7.250881195068359
    3. '           ' → logprob: -10.25088119506836
    4. ' or' → logprob: -10.37588119506836
    5. '       ' → logprob: -10.50088119506836
    6. ' continue' → logprob: -10.75088119506836
    7. ' and' → logprob: -11.00088119506836
    8. ' :' → logprob: -11.00088119506836
    9. 'continue' → logprob: -12.12588119506836
    10. '   ' → logprob: -12.37588119506836

Token 75: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.069788359105587
    2. 'continue' → logprob: -2.8197884559631348
    3. '       ' → logprob: -5.444788455963135
    4. ' continue' → logprob: -5.819788455963135
    5. '               ' → logprob: -8.194787979125977
    6. '   ' → logprob: -8.944787979125977
    7. '	continue' → logprob: -9.819787979125977
    8. '_continue' → logprob: -11.569787979125977
    9. ' ' → logprob: -11.694787979125977
    10. '.' → logprob: -12.069787979125977

Token 76: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.4484298527240753
    2. ' continue' → logprob: -1.448429822921753
    3. '           ' → logprob: -2.073429822921753
    4. '	continue' → logprob: -8.448430061340332
    5. '               ' → logprob: -8.948430061340332
    6. '       ' → logprob: -9.573430061340332
    7. '   ' → logprob: -9.698430061340332
    8. 'break' → logprob: -9.823430061340332
    9. '```' → logprob: -9.948430061340332
    10. ' ' → logprob: -10.323430061340332

Token 77: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028536146506667137
    2. '<|end|>' → logprob: -3.903536081314087
    3. '        
' → logprob: -5.653536319732666
    4. '           ' → logprob: -6.653536319732666
    5. '
' → logprob: -6.778536319732666
    6. '\n' → logprob: -7.528536319732666
    7. '<|end|>' → logprob: -8.028535842895508
    8. '\' → logprob: -8.153535842895508
    9. '```' → logprob: -8.653535842895508
    10. '   ' → logprob: -8.653535842895508

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04184943437576294
    2. '<|end|>' → logprob: -3.666849374771118
    3. '   ' → logprob: -5.291849613189697
    4. ' ' → logprob: -6.416849613189697
    5. '           ' → logprob: -6.666849613189697
    6. '        
' → logprob: -6.666849613189697
    7. ')' → logprob: -7.041849613189697
    8. '        ' → logprob: -7.291849613189697
    9. '<|end|>' → logprob: -7.541849613189697
    10. '    ' → logprob: -7.666849613189697

Token 79: ' items' (ID: 4732)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15378247201442719
    2. 'for' → logprob: -2.903782367706299
    3. 'c' → logprob: -3.403782367706299
    4. 'rest' → logprob: -4.278782367706299
    5. 'answer' → logprob: -5.028782367706299
    6. ' for' → logprob: -5.653782367706299
    7. 'tokens' → logprob: -5.778782367706299
    8. '   ' → logprob: -5.903782367706299
    9. 'max' → logprob: -6.028782367706299
    10. 's' → logprob: -6.028782367706299

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11368940025568008
    2. '=' → logprob: -2.238689422607422
    3. '_taken' → logprob: -7.113689422607422
    4. '_to' → logprob: -10.363689422607422
    5. 's' → logprob: -11.988689422607422
    6. 'Taken' → logprob: -12.863689422607422
    7. '=[]' → logprob: -13.238689422607422
    8. '   ' → logprob: -13.613689422607422
    9. 'taken' → logprob: -13.738689422607422
    10. '_' → logprob: -13.738689422607422

Token 81: ' []
' (ID: 8911)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.2063153088092804
    2. 'v' → logprob: -1.831315279006958
    3. ' []' → logprob: -4.706315517425537
    4. '[]' → logprob: -4.831315517425537
    5. '[v' → logprob: -5.456315517425537
    6. ' [' → logprob: -5.831315517425537
    7. ' ' → logprob: -6.831315517425537
    8. '[' → logprob: -8.081315040588379
    9. '   ' → logprob: -8.331315040588379
    10. '	v' → logprob: -9.456315040588379

Token 82: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14307165145874023
    2. 'for' → logprob: -2.6430716514587402
    3. ' for' → logprob: -3.3930716514587402
    4. '        
' → logprob: -4.51807165145874
    5. 'items' → logprob: -4.64307165145874
    6. '<|end|>' → logprob: -5.14307165145874
    7. '
' → logprob: -7.76807165145874
    8. '<|end|>' → logprob: -7.89307165145874
    9. '   ' → logprob: -8.518072128295898
    10. ' items' → logprob: -8.768072128295898

Token 83: ' for' (ID: 395)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.06917271763086319
    2. 'for' (adapté à ' for') → logprob: -3.1941726207733154
    3. ' items' → logprob: -4.4441728591918945
    4. ' for' → logprob: -5.1941728591918945
    5. '<|end|>' → logprob: -5.3191728591918945
    6. '       ' → logprob: -6.8191728591918945
    7. '	items' → logprob: -7.0691728591918945
    8. 'tokens' → logprob: -7.3191728591918945
    9. '   ' → logprob: -8.069172859191895
    10. '<|end|>' → logprob: -8.444172859191895

Token 84: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6333359479904175
    2. 'i' → logprob: -0.7583359479904175
    3. '_i' → logprob: -7.508336067199707
    4. ' _' → logprob: -9.133336067199707
    5. '_' → logprob: -9.883336067199707
    6. 'x' → logprob: -12.133336067199707
    7. ' ' → logprob: -12.383336067199707
    8. 'a' → logprob: -12.758336067199707
    9. '	i' → logprob: -12.758336067199707
    10. 'c' → logprob: -12.883336067199707

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0052808308973908424
    2. 'in' → logprob: -5.2552809715271
    3. ' ' → logprob: -10.380280494689941
    4. 's' → logprob: -12.880280494689941
    5. '	in' → logprob: -13.255280494689941
    6. 'range' → logprob: -13.380280494689941
    7. '   ' → logprob: -13.755280494689941
    8. 'In' → logprob: -13.880280494689941
    9. 'a' → logprob: -13.880280494689941
    10. ' i' → logprob: -13.880280494689941

Token 86: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38687872886657715
    2. ' range' → logprob: -1.1368787288665771
    3. '	range' → logprob: -12.386878967285156
    4. '(range' → logprob: -13.511878967285156
    5. ' ' → logprob: -14.011878967285156
    6. '   ' → logprob: -14.761878967285156
    7. 'rang' → logprob: -15.136878967285156
    8. 'ran' → logprob: -15.761878967285156
    9. '```' → logprob: -16.261878967285156
    10. ' xrange' → logprob: -16.261878967285156

Token 87: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0031804447062313557
    2. '(' → logprob: -5.753180503845215
    3. 'a' → logprob: -13.003180503845215
    4. ' (' → logprob: -15.878180503845215
    5. '(i' → logprob: -15.878180503845215
    6. '(n' → logprob: -16.1281795501709
    7. '(
' → logprob: -16.5031795501709
    8. '(s' → logprob: -17.6281795501709
    9. ' a' → logprob: -18.2531795501709
    10. '()' → logprob: -18.7531795501709

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0010747304186224937
    2. '):
' → logprob: -6.87607479095459
    3. ')' → logprob: -10.87607479095459
    4. ':' → logprob: -12.25107479095459
    5. ' ):' → logprob: -12.25107479095459
    6. '):

' → logprob: -12.25107479095459
    7. '):
' → logprob: -13.00107479095459
    8. '+' → logprob: -13.37607479095459
    9. '():' → logprob: -13.50107479095459
    10. ' ' → logprob: -14.37607479095459

Token 89: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5286573767662048
    2. ' items' → logprob: -1.6536574363708496
    3. 'items' → logprob: -1.9036574363708496
    4. '       ' → logprob: -2.9036574363708496
    5. '	items' → logprob: -4.90365743637085
    6. '<|end|>' → logprob: -6.02865743637085
    7. '	       ' → logprob: -6.52865743637085
    8. '.items' → logprob: -6.65365743637085
    9. '   ' → logprob: -6.65365743637085
    10. '(items' → logprob: -7.65365743637085

Token 90: ' items' (ID: 4732)
  Prédit: ' items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.6373250484466553
    2. 'items' (adapté à ' items') → logprob: -1.0123250484466553
    3. '       ' → logprob: -2.2623250484466553
    4. '	items' → logprob: -5.762325286865234
    5. '<|end|>' → logprob: -8.637325286865234
    6. '   ' → logprob: -8.762325286865234
    7. '.items' → logprob: -8.887325286865234
    8. '_items' → logprob: -9.887325286865234
    9. '```' → logprob: -10.262325286865234
    10. '(items' → logprob: -10.387325286865234

Token 91: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00978406984359026
    2. '.' → logprob: -4.63478422164917
    3. ' .' → logprob: -11.384783744812012
    4. 'append' → logprob: -11.634783744812012
    5. '.extend' → logprob: -12.634783744812012
    6. '.app' → logprob: -14.259783744812012
    7. '.push' → logprob: -14.384783744812012
    8. '.items' → logprob: -14.384783744812012
    9. '.ap' → logprob: -14.634783744812012
    10. '.p' → logprob: -14.884783744812012

Token 92: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0002613358374219388
    2. '(' → logprob: -8.250261306762695
    3. 'v' → logprob: -17.000261306762695
    4. ' (' → logprob: -17.125261306762695
    5. '(
' → logprob: -18.375261306762695
    6. '(s' → logprob: -18.375261306762695
    7. '(n' → logprob: -19.875261306762695
    8. '((' → logprob: -20.000261306762695
    9. '(V' → logprob: -20.375261306762695
    10. ')v' → logprob: -20.875261306762695

Token 93: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.125000953674316
    3. 'i' → logprob: -16.000001907348633
    4. '[
' → logprob: -16.625001907348633
    5. ')' → logprob: -17.750001907348633
    6. ' [' → logprob: -18.500001907348633
    7. '[n' → logprob: -18.625001907348633
    8. '[I' → logprob: -18.875001907348633
    9. '[int' → logprob: -19.125001907348633
    10. '(i' → logprob: -19.375001907348633

Token 94: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5767143964767456
    2. '])' → logprob: -0.8267143964767456
    3. ')
' → logprob: -7.576714515686035
    4. '])
' → logprob: -8.951714515686035
    5. '))' → logprob: -9.451714515686035
    6. ']' → logprob: -11.076714515686035
    7. ' )' → logprob: -11.576714515686035
    8. ''])' → logprob: -12.076714515686035
    9. ')])' → logprob: -12.076714515686035
    10. '）' → logprob: -12.701714515686035

Token 95: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7318300008773804
    2. '<|end|>' → logprob: -1.1068300008773804
    3. '       ' → logprob: -2.48183012008667
    4. '        
' → logprob: -3.48183012008667
    5. ' 
' → logprob: -3.73183012008667
    6. '  
' → logprob: -4.48183012008667
    7. '```' → logprob: -4.48183012008667
    8. '<|end|>' → logprob: -4.73183012008667
    9. '\n' → logprob: -5.48183012008667
    10. '		
' → logprob: -5.73183012008667

Token 96: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6836569309234619
    2. ' for' → logprob: -0.8086569309234619
    3. '       ' → logprob: -3.058656930923462
    4. '        
' → logprob: -6.808656692504883
    5. '<|end|>' → logprob: -7.683656692504883
    6. '
' → logprob: -7.933656692504883
    7. ' 
' → logprob: -8.558656692504883
    8. '  
' → logprob: -8.683656692504883
    9. '   ' → logprob: -8.808656692504883
    10. '    
' → logprob: -9.308656692504883

Token 97: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.012965202331543
    2. 'i' → logprob: -1.137965202331543
    3. ' j' → logprob: -1.387965202331543
    4. 'j' → logprob: -2.762965202331543
    5. '_' → logprob: -6.262965202331543
    6. ' _' → logprob: -6.887965202331543
    7. '_j' → logprob: -7.637965202331543
    8. '_i' → logprob: -8.387965202331543
    9. ' ' → logprob: -10.637965202331543
    10. ' in' → logprob: -11.262965202331543

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0006177236791700125
    2. 'in' → logprob: -7.500617504119873
    3. 'range' → logprob: -10.500617980957031
    4. 'n' → logprob: -10.625617980957031
    5. ' range' → logprob: -12.500617980957031
    6. '```' → logprob: -13.000617980957031
    7. 'd' → logprob: -13.750617980957031
    8. '(n' → logprob: -13.875617980957031
    9. '_' → logprob: -14.000617980957031
    10. 's' → logprob: -14.250617980957031

Token 99: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008636554703116417
    2. ' range' → logprob: -4.758636474609375
    3. '(range' → logprob: -11.008636474609375
    4. 'n' → logprob: -13.008636474609375
    5. 'v' → logprob: -13.008636474609375
    6. ' v' → logprob: -15.633636474609375
    7. '	range' → logprob: -15.633636474609375
    8. '[-' → logprob: -16.008636474609375
    9. 'ran' → logprob: -16.133636474609375
    10. ' ' → logprob: -16.508636474609375

Token 100: '(b' (ID: 3229)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006953967968001962
    2. '(' → logprob: -7.87569522857666
    3. '(-' → logprob: -8.37569522857666
    4. '(range' → logprob: -9.87569522857666
    5. 'n' → logprob: -10.62569522857666
    6. '(len' → logprob: -12.25069522857666
    7. 'range' → logprob: -13.00069522857666
    8. '(v' → logprob: -14.25069522857666
    9. '[n' → logprob: -15.25069522857666
    10. '(-(' → logprob: -15.37569522857666

Token 101: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.41406720876693726
    2. '):' → logprob: -1.414067268371582
    3. '-' → logprob: -3.289067268371582
    4. 'n' → logprob: -3.664067268371582
    5. '(n' → logprob: -4.039067268371582
    6. '       ' → logprob: -6.289067268371582
    7. ':' → logprob: -6.539067268371582
    8. 'v' → logprob: -6.664067268371582
    9. ' -' → logprob: -6.789067268371582
    10. ',' → logprob: -6.914067268371582

Token 102: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10578769445419312
    2. 'items' → logprob: -2.355787754058838
    3. ' items' → logprob: -5.480787754058838
    4. '       ' → logprob: -7.105787754058838
    5. '	items' → logprob: -8.48078727722168
    6. '   ' → logprob: -8.60578727722168
    7. '```' → logprob: -9.35578727722168
    8. '(items' → logprob: -10.48078727722168
    9. '            
' → logprob: -10.73078727722168
    10. '.items' → logprob: -11.85578727722168

Token 103: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' (adapté à ' items') → logprob: -0.0019789529033005238
    2. ' items' → logprob: -6.251978874206543
    3. '	items' → logprob: -10.751978874206543
    4. '       ' → logprob: -11.501978874206543
    5. '           ' → logprob: -12.126978874206543
    6. '(items' → logprob: -12.376978874206543
    7. '
' → logprob: -12.501978874206543
    8. '.items' → logprob: -12.751978874206543
    9. '```' → logprob: -13.751978874206543
    10. '/items' → logprob: -15.001978874206543

Token 104: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.020622236654162407
    2. '.' → logprob: -4.020622253417969
    3. 'append' → logprob: -6.270622253417969
    4. '].' → logprob: -8.520622253417969
    5. ' .' → logprob: -8.895622253417969
    6. ').' → logprob: -10.020622253417969
    7. '-' → logprob: -10.020622253417969
    8. '           ' → logprob: -10.145622253417969
    9. '[-' → logprob: -10.645622253417969
    10. '          ' → logprob: -10.895622253417969

Token 105: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.00043257648940198123
    2. '(' → logprob: -7.75043249130249
    3. 'v' → logprob: -13.500432968139648
    4. ' (' → logprob: -15.125432968139648
    5. '((' → logprob: -16.37543296813965
    6. '(
' → logprob: -17.00043296813965
    7. ' v' → logprob: -17.37543296813965
    8. '(n' → logprob: -18.25043296813965
    9. '	v' → logprob: -18.50043296813965
    10. '(-' → logprob: -19.25043296813965

Token 106: '[-' (ID: 17503)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.06224069744348526
    2. '[-' → logprob: -2.8122406005859375
    3. '[' → logprob: -8.312240600585938
    4. '[len' → logprob: -10.562240600585938
    5. 'n' → logprob: -14.562240600585938
    6. '[
' → logprob: -14.812240600585938
    7. '[N' → logprob: -15.062240600585938
    8. '[j' → logprob: -15.187240600585938
    9. '[::-' → logprob: -16.187240600585938
    10. '[i' → logprob: -17.562240600585938

Token 107: '(' (ID: 7)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.9504606825648807e-05
    2. '1' → logprob: -11.375019073486328
    3. '(i' → logprob: -12.375019073486328
    4. '(' → logprob: -12.625019073486328
    5. ' i' → logprob: -14.750019073486328
    6. '{i' → logprob: -17.500019073486328
    7. '```' → logprob: -18.000019073486328
    8. '_i' → logprob: -18.750019073486328
    9. '   ' → logprob: -18.875019073486328
    10. ',i' → logprob: -19.250019073486328

Token 108: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00035119339008815587
    2. '1' → logprob: -8.000350952148438
    3. '(i' → logprob: -11.250350952148438
    4. '(' → logprob: -13.250350952148438
    5. ' i' → logprob: -14.000350952148438
    6. '```' → logprob: -16.875350952148438
    7. '_i' → logprob: -17.375350952148438
    8. '   ' → logprob: -17.625350952148438
    9. '{i' → logprob: -17.875350952148438
    10. 'b' → logprob: -18.000350952148438

Token 109: '+' (ID: 10)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005760280764661729
    2. '+' → logprob: -7.500576019287109
    3. ' ' → logprob: -10.75057601928711
    4. ')' → logprob: -14.50057601928711
    5. ' +' → logprob: -14.62557601928711
    6. '   ' → logprob: -15.12557601928711
    7. '```' → logprob: -15.25057601928711
    8. ')]' → logprob: -16.37557601928711
    9. '-' → logprob: -16.87557601928711
    10. '  ' → logprob: -17.50057601928711

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -15.375003814697266
    4. ')' → logprob: -16.750003814697266
    5. '   ' → logprob: -16.750003814697266
    6. 'i' → logprob: -18.125003814697266
    7. '))' → logprob: -18.125003814697266
    8. '2' → logprob: -18.125003814697266
    9. '``' → logprob: -18.250003814697266
    10. '])' → logprob: -18.375003814697266

Token 111: ')])
' (ID: 66560)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.0016359048895537853
    2. ')]' → logprob: -7.001636028289795
    3. '])' → logprob: -7.376636028289795
    4. ']))' → logprob: -9.626635551452637
    5. ')' → logprob: -10.876635551452637
    6. ')])
' → logprob: -12.251635551452637
    7. ' )' → logprob: -12.501635551452637
    8. '))' → logprob: -13.751635551452637
    9. '])]' → logprob: -13.876635551452637
    10. ']])' → logprob: -13.876635551452637

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003966197371482849
    2. '        
' → logprob: -6.253966331481934
    3. 'items' → logprob: -7.753966331481934
    4. '```' → logprob: -8.003966331481934
    5. ' for' → logprob: -8.378966331481934
    6. ' items' → logprob: -8.753966331481934
    7. 'rest' → logprob: -8.878966331481934
    8. 's' → logprob: -8.878966331481934
    9. '<|end|>' → logprob: -9.003966331481934
    10. '
' → logprob: -9.378966331481934

Token 113: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' (adapté à ' items') → logprob: -0.1252066195011139
    2. 'for' → logprob: -3.000206708908081
    3. '       ' → logprob: -3.250206708908081
    4. 'rem' → logprob: -5.000206470489502
    5. 'rest' → logprob: -5.000206470489502
    6. ' items' → logprob: -5.250206470489502
    7. ' for' → logprob: -5.625206470489502
    8. 'remaining' → logprob: -6.375206470489502
    9. 'remain' → logprob: -6.500206470489502
    10. 'possible' → logprob: -7.250206470489502

Token 114: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0001612267515156418
    2. '.' → logprob: -10.250161170959473
    3. 'sort' → logprob: -10.500161170959473
    4. '.remove' → logprob: -10.875161170959473
    5. '<|end|>' → logprob: -11.000161170959473
    6. ' =' → logprob: -11.375161170959473
    7. '_sorted' → logprob: -11.375161170959473
    8. '=' → logprob: -11.375161170959473
    9. '.reverse' → logprob: -11.750161170959473
    10. ')' → logprob: -12.000161170959473

Token 115: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001556163071654737
    2. '(reverse' → logprob: -7.001556396484375
    3. '(' → logprob: -7.376556396484375
    4. '()
' → logprob: -11.376556396484375
    5. 'reverse' → logprob: -13.376556396484375
    6. '()>' → logprob: -13.501556396484375
    7. '())' → logprob: -14.001556396484375
    8. '()`' → logprob: -14.251556396484375
    9. ' ()' → logprob: -14.626556396484375
    10. '(),' → logprob: -15.126556396484375

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5634385943412781
    2. 'for' → logprob: -1.6884386539459229
    3. '   ' → logprob: -2.813438653945923
    4. ' for' → logprob: -3.063438653945923
    5. '```' → logprob: -3.313438653945923
    6. '-' → logprob: -3.438438653945923
    7. '<|end|>' → logprob: -3.688438653945923
    8. ')' → logprob: -3.938438653945923
    9. ',' → logprob: -4.938438415527344
    10. '[' → logprob: -5.438438415527344

Token 117: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04454377666115761
    2. '       ' → logprob: -4.419543743133545
    3. 'rem' → logprob: -4.669543743133545
    4. 'm' → logprob: -5.544543743133545
    5. 'remove' → logprob: -5.544543743133545
    6. 'temp' → logprob: -5.919543743133545
    7. 'cnt' → logprob: -6.044543743133545
    8. 'remain' → logprob: -6.169543743133545
    9. 'use' → logprob: -6.669543743133545
    10. 'current' → logprob: -7.169543743133545

Token 118: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0598820447921753
    2. 'e' → logprob: -1.1848820447921753
    3. ' =' → logprob: -1.5598820447921753
    4. 'ef' → logprob: -2.934882164001465
    5. 'p' → logprob: -4.059882164001465
    6. '=len' → logprob: -4.309882164001465
    7. 'for' → logprob: -4.309882164001465
    8. 'iscard' → logprob: -4.809882164001465
    9. 'd' → logprob: -4.934882164001465
    10. 'len' → logprob: -5.184882164001465

Token 119: ' k' (ID: 372)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.589811384677887
    2. '0' → logprob: -1.8398113250732422
    3. 'max' → logprob: -1.8398113250732422
    4. 'len' → logprob: -2.714811325073242
    5. 'k' → logprob: -3.089811325073242
    6. ' min' → logprob: -4.964811325073242
    7. ' ' → logprob: -5.464811325073242
    8. ' max' → logprob: -6.339811325073242
    9. ' len' → logprob: -6.464811325073242
    10. ' k' → logprob: -7.339811325073242

Token 120: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.636225163936615
    2. '-' → logprob: -0.761225163936615
    3. '<|end|>' → logprob: -6.01122522354126
    4. '-m' → logprob: -8.761224746704102
    5. '<|end|>' → logprob: -9.136224746704102
    6. '-min' → logprob: -9.261224746704102
    7. '-n' → logprob: -9.386224746704102
    8. '=' → logprob: -9.386224746704102
    9. '-k' → logprob: -9.511224746704102
    10. '
' → logprob: -9.636224746704102

Token 121: ' (' (ID: 350)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.009862331673502922
    2. 'len' → logprob: -4.634862422943115
    3. ' max' → logprob: -9.259861946105957
    4. 'a' → logprob: -12.259861946105957
    5. '(max' → logprob: -12.759861946105957
    6. ' len' → logprob: -13.009861946105957
    7. '(len' → logprob: -14.884861946105957
    8. '	max' → logprob: -15.009861946105957
    9. '   ' → logprob: -15.634861946105957
    10. '(' → logprob: -16.509862899780273

Token 122: 'a' (ID: 64)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4981190860271454
    2. 'a' → logprob: -0.9981191158294678
    3. 'len' → logprob: -3.7481191158294678
    4. ' max' → logprob: -8.873119354248047
    5. ' len' → logprob: -11.623119354248047
    6. ' a' → logprob: -11.873119354248047
    7. '   ' → logprob: -12.123119354248047
    8. '	max' → logprob: -12.123119354248047
    9. '(max' → logprob: -12.373119354248047
    10. ')' → logprob: -12.998119354248047

Token 123: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08095922321081161
    2. '+b' → logprob: -3.7059593200683594
    3. ' +' → logprob: -4.080959320068359
    4. '-' → logprob: -4.080959320068359
    5. ')' → logprob: -5.080959320068359
    6. ' -' → logprob: -5.330959320068359
    7. 'max' → logprob: -6.080959320068359
    8. '+
' → logprob: -6.955959320068359
    9. 'b' → logprob: -7.205959320068359
    10. ' ' → logprob: -7.455959320068359

Token 124: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3872847855091095
    2. 'max' → logprob: -1.137284755706787
    3. ' max' → logprob: -8.262285232543945
    4. 'len' → logprob: -9.262285232543945
    5. ' b' → logprob: -10.387285232543945
    6. '
' → logprob: -11.512285232543945
    7. ')' → logprob: -11.762285232543945
    8. 'min' → logprob: -12.887285232543945
    9. 'items' → logprob: -13.012285232543945
    10. '(max' → logprob: -13.387285232543945

Token 125: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31424686312675476
    2. ')
' → logprob: -1.3142468929290771
    3. ')

' → logprob: -7.314246654510498
    4. '
' → logprob: -9.064247131347656
    5. ' )' → logprob: -9.314247131347656
    6. ' )
' → logprob: -9.689247131347656
    7. ')
' → logprob: -10.564247131347656
    8. 'for' → logprob: -10.814247131347656
    9. ' for' → logprob: -14.189247131347656
    10. ')n' → logprob: -14.439247131347656

Token 126: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015186551958322525
    2. ' for' → logprob: -4.515186786651611
    3. '       ' → logprob: -6.390186786651611
    4. 'answer' → logprob: -7.265186786651611
    5. 'temp' → logprob: -7.515186786651611
    6. 'current' → logprob: -8.015186309814453
    7. 'max' → logprob: -8.515186309814453
    8. '
' → logprob: -9.390186309814453
    9. 'cnt' → logprob: -9.390186309814453
    10. '        
' → logprob: -9.640186309814453

Token 127: ' now' (ID: 1954)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008467533625662327
    2. 'temp' → logprob: -5.008467674255371
    3. 'current' → logprob: -7.633467674255371
    4. 'tmp' → logprob: -8.508467674255371
    5. 'cnt' → logprob: -8.633467674255371
    6. 'removed' → logprob: -9.008467674255371
    7. 'cur' → logprob: -9.383467674255371
    8. 'while' → logprob: -9.633467674255371
    9. 'items' → logprob: -9.633467674255371
    10. '       ' → logprob: -9.883467674255371

Token 128: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.669863224029541
    2. ' =' → logprob: -0.794863224029541
    3. '_answer' → logprob: -4.169863224029541
    4. '_score' → logprob: -5.044863224029541
    5. '_max' → logprob: -5.544863224029541
    6. '_value' → logprob: -5.669863224029541
    7. '_' → logprob: -5.919863224029541
    8. 'max' → logprob: -6.794863224029541
    9. '_sum' → logprob: -7.669863224029541
    10. '_val' → logprob: -7.669863224029541

Token 129: ' items' (ID: 4732)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0080860061571002
    2. '0' → logprob: -5.133086204528809
    3. ' sum' → logprob: -6.508086204528809
    4. 'a' → logprob: -7.508086204528809
    5. 'max' → logprob: -10.258086204528809
    6. '(sum' → logprob: -10.383086204528809
    7. ' ' → logprob: -11.008086204528809
    8. '   ' → logprob: -11.758086204528809
    9. 'items' → logprob: -12.633086204528809
    10. '100' → logprob: -12.883086204528809

Token 130: '[:' (ID: 7808)
  Prédit: '.copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.copy' → logprob: -0.29844170808792114
    2. '[:]' → logprob: -1.9234416484832764
    3. '[:' → logprob: -2.2984416484832764
    4. '.sum' → logprob: -5.4234418869018555
    5. 'sum' → logprob: -5.6734418869018555
    6. '[::-' → logprob: -7.0484418869018555
    7. '.' → logprob: -7.6734418869018555
    8. '[' → logprob: -7.6734418869018555
    9. '[:-' → logprob: -7.7984418869018555
    10. '_sum' → logprob: -8.048441886901855

Token 131: ']
' (ID: 1592)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.13644437491893768
    2. 'max' → logprob: -3.261444330215454
    3. 'len' → logprob: -3.511444330215454
    4. 'k' → logprob: -3.761444330215454
    5. 'a' → logprob: -4.511444568634033
    6. '-(' → logprob: -4.511444568634033
    7. ']' → logprob: -4.761444568634033
    8. '-' → logprob: -6.386444568634033
    9. 'min' → logprob: -6.386444568634033
    10. '(' → logprob: -7.636444568634033

Token 132: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3248714506626129
    2. '       ' → logprob: -1.6998714208602905
    3. ' for' → logprob: -2.57487154006958
    4. '
' → logprob: -4.57487154006958
    5. '<|end|>' → logprob: -5.32487154006958
    6. '   ' → logprob: -6.32487154006958
    7. '        
' → logprob: -7.19987154006958
    8. 'while' → logprob: -8.949871063232422
    9. '	for' → logprob: -9.574871063232422
    10. 'd' → logprob: -9.824871063232422

Token 133: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0028278196696192026
    2. ' for' → logprob: -6.2528276443481445
    3. 'now' → logprob: -7.7528276443481445
    4. '       ' → logprob: -7.8778276443481445
    5. 'while' → logprob: -10.002827644348145
    6. '   ' → logprob: -10.627827644348145
    7. ' now' → logprob: -11.877827644348145
    8. 'd' → logprob: -13.002827644348145
    9. '        
' → logprob: -13.252827644348145
    10. '
' → logprob: -13.377827644348145

Token 134: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5764431953430176
    2. '_' → logprob: -1.3264431953430176
    3. ' i' → logprob: -2.4514431953430176
    4. '_i' → logprob: -2.8264431953430176
    5. ' _' → logprob: -3.8264431953430176
    6. '_j' → logprob: -5.576443195343018
    7. 'j' → logprob: -6.701443195343018
    8. ' j' → logprob: -7.951443195343018
    9. ' ' → logprob: -9.70144271850586
    10. '_x' → logprob: -11.07644271850586

Token 135: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028117671608924866
    2. 'in' → logprob: -5.877811908721924
    3. ' ' → logprob: -12.252811431884766
    4. 'd' → logprob: -14.502811431884766
    5. '0' → logprob: -15.127811431884766
    6. '  ' → logprob: -15.502811431884766
    7. ' i' → logprob: -16.252811431884766
    8. '	in' → logprob: -16.252811431884766
    9. 'import' → logprob: -16.502811431884766
    10. '=' → logprob: -16.502811431884766

Token 136: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858794063329697
    2. ' range' → logprob: -3.0485880374908447
    3. '(range' → logprob: -15.173587799072266
    4. ' ' → logprob: -16.298587799072266
    5. '	range' → logprob: -16.673587799072266
    6. '   ' → logprob: -16.798587799072266
    7. '  ' → logprob: -17.173587799072266
    8. 'd' → logprob: -18.173587799072266
    9. '0' → logprob: -18.173587799072266
    10. ')' → logprob: -18.423587799072266

Token 137: '(min' (ID: 26035)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.38816574215888977
    2. '(len' → logprob: -1.1381657123565674
    3. '(' → logprob: -6.8881659507751465
    4. '(min' → logprob: -8.263165473937988
    5. ' (' → logprob: -12.263165473937988
    6. '((' → logprob: -12.388165473937988
    7. '(
' → logprob: -13.263165473937988
    8. 'd' → logprob: -13.513165473937988
    9. 'len' → logprob: -13.888165473937988
    10. '(k' → logprob: -14.263165473937988

Token 138: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.003622404532507062
    2. '(len' → logprob: -5.628622531890869
    3. '(' → logprob: -10.753622055053711
    4. '(
' → logprob: -14.878622055053711
    5. 'd' → logprob: -15.128622055053711
    6. ' (' → logprob: -16.62862205505371
    7. '(j' → logprob: -16.75362205505371
    8. '((' → logprob: -17.00362205505371
    9. '(D' → logprob: -17.12862205505371
    10. 'len' → logprob: -17.25362205505371

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1086454838514328
    2. ',len' → logprob: -2.358645439147949
    3. '(len' → logprob: -5.233645439147949
    4. ' ,' → logprob: -5.858645439147949
    5. '(' → logprob: -9.35864543914795
    6. ',d' → logprob: -10.23364543914795
    7. ',j' → logprob: -11.10864543914795
    8. '),' → logprob: -11.48364543914795
    9. ',min' → logprob: -11.48364543914795
    10. 'len' → logprob: -11.85864543914795

Token 140: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.2519614100456238
    2. ' len' → logprob: -1.5019614696502686
    3. '   ' → logprob: -11.501961708068848
    4. '(len' → logprob: -11.876961708068848
    5. '	len' → logprob: -11.876961708068848
    6. ' ' → logprob: -12.751961708068848
    7. '       ' → logprob: -13.251961708068848
    8. '  ' → logprob: -14.126961708068848
    9. ',len' → logprob: -14.376961708068848
    10. '           ' → logprob: -14.501961708068848

Token 141: '(now' (ID: 65064)
  Prédit: '(items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(items' → logprob: -0.0032761029433459044
    2. '(now' → logprob: -5.7532758712768555
    3. '(' → logprob: -9.628275871276855
    4. 'items' → logprob: -10.378275871276855
    5. 'now' → logprob: -14.628275871276855
    6. ' items' → logprob: -15.253275871276855
    7. '	items' → logprob: -15.753275871276855
    8. '(
' → logprob: -16.253276824951172
    9. ' (' → logprob: -16.503276824951172
    10. ')' → logprob: -16.503276824951172

Token 142: '))' (ID: 915)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.02935108356177807
    2. ')):
' → logprob: -3.779350996017456
    3. '))' → logprob: -5.154351234436035
    4. '):' → logprob: -8.529351234436035
    5. ')' → logprob: -10.404351234436035
    6. ')):
' → logprob: -10.404351234436035
    7. ' ))' → logprob: -10.779351234436035
    8. ' ' → logprob: -11.029351234436035
    9. '()))' → logprob: -11.529351234436035
    10. ':' → logprob: -12.279351234436035

Token 143: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02336415834724903
    2. '):
' → logprob: -3.7733640670776367
    3. ' ):' → logprob: -9.898364067077637
    4. ':' → logprob: -10.773364067077637
    5. '):
' → logprob: -11.148364067077637
    6. ')' → logprob: -11.523364067077637
    7. '):

' → logprob: -11.773364067077637
    8. '():' → logprob: -11.773364067077637
    9. '():
' → logprob: -13.273364067077637
    10. ' ):
' → logprob: -13.273364067077637

Token 144: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05549664795398712
    2. ' if' → logprob: -3.5554966926574707
    3. '       ' → logprob: -4.430496692657471
    4. 'if' → logprob: -5.055496692657471
    5. '           ' → logprob: -5.430496692657471
    6. '<|end|>' → logprob: -6.555496692657471
    7. '```' → logprob: -7.805496692657471
    8. '    ' → logprob: -8.430496215820312
    9. '<|end|>' → logprob: -9.180496215820312
    10. '    
' → logprob: -9.180496215820312

Token 145: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.26420503854751587
    2. ' if' → logprob: -1.514204978942871
    3. '   ' → logprob: -4.514204978942871
    4. '           ' → logprob: -8.014204978942871
    5. ' ' → logprob: -8.264204978942871
    6. '<|end|>' → logprob: -8.264204978942871
    7. '	if' → logprob: -8.764204978942871
    8. '  ' → logprob: -10.264204978942871
    9. '
' → logprob: -10.389204978942871
    10. '<|end|>' → logprob: -10.514204978942871

Token 146: ' now' (ID: 1954)
  Prédit: ' now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' now' → logprob: -0.048594869673252106
    2. 'now' → logprob: -3.0485949516296387
    3. '	now' → logprob: -12.29859447479248
    4. '[now' → logprob: -13.04859447479248
    5. '(now' → logprob: -14.54859447479248
    6. 'nown' → logprob: -15.92359447479248
    7. ' ' → logprob: -16.673595428466797
    8. '   ' → logprob: -17.048595428466797
    9. '.now' → logprob: -17.298595428466797
    10. '_now' → logprob: -17.923595428466797

Token 147: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.2233183042553719e-05
    2. '[' → logprob: -11.375012397766113
    3. ' [' → logprob: -15.000012397766113
    4. '```' → logprob: -15.625012397766113
    5. 'j' → logprob: -16.500011444091797
    6. '[
' → logprob: -17.125011444091797
    7. '[i' → logprob: -17.500011444091797
    8. '
' → logprob: -18.125011444091797
    9. '[js' → logprob: -18.250011444091797
    10. '[-' → logprob: -18.500011444091797

Token 148: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.16574332118034363
    2. ' <' → logprob: -1.915743350982666
    3. ')' → logprob: -5.665743350982666
    4. ')<' → logprob: -6.540743350982666
    5. ']<' → logprob: -9.040742874145508
    6. ']' → logprob: -9.290742874145508
    7. '[' → logprob: -9.290742874145508
    8. ' ' → logprob: -9.290742874145508
    9. '<int' → logprob: -10.040742874145508
    10. '()<' → logprob: -10.165742874145508

Token 149: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.08897850662469864
    2. ' <' → logprob: -2.4639785289764404
    3. '<int' → logprob: -11.08897876739502
    4. '[' → logprob: -11.83897876739502
    5. ' ' → logprob: -12.71397876739502
    6. '()<' → logprob: -12.96397876739502
    7. '<|end|>' → logprob: -13.08897876739502
    8. '<class' → logprob: -14.08897876739502
    9. '<num' → logprob: -14.33897876739502
    10. '0' → logprob: -14.58897876739502

Token 150: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004306692280806601
    2. ' ' → logprob: -7.750430583953857
    3. '  ' → logprob: -19.750431060791016
    4. '   ' → logprob: -21.250431060791016
    5. '۰' → logprob: -21.625431060791016
    6. '=' → logprob: -22.500431060791016
    7. ' ' → logprob: -22.875431060791016
    8. '1' → logprob: -23.375431060791016
    9. '０' → logprob: -23.875431060791016
    10. ' ' → logprob: -23.875431060791016

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '  ' → logprob: -21.000015258789062
    4. '۰' → logprob: -21.375015258789062
    5. '1' → logprob: -22.250015258789062
    6. '00' → logprob: -22.750015258789062
    7. '０' → logprob: -22.875015258789062
    8. '=' → logprob: -22.875015258789062
    9. '   ' → logprob: -23.000015258789062
    10. ' ' → logprob: -23.250015258789062

Token 152: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20223090052604675
    2. ':' → logprob: -1.7022309303283691
    3. '):
' → logprob: -7.202230930328369
    4. '):' → logprob: -9.952230453491211
    5. ':

' → logprob: -11.827230453491211
    6. ' :
' → logprob: -12.077230453491211
    7. ':
' → logprob: -12.327230453491211
    8. '       ' → logprob: -13.327230453491211
    9. ')' → logprob: -13.327230453491211
    10. '           ' → logprob: -14.077230453491211

Token 153: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47686854004859924
    2. ':' → logprob: -2.1018686294555664
    3. 'now' → logprob: -2.2268686294555664
    4. ' now' → logprob: -2.2268686294555664
    5. ':
' → logprob: -3.9768686294555664
    6. '):
' → logprob: -4.726868629455566
    7. '0' → logprob: -5.101868629455566
    8. '[now' → logprob: -6.351868629455566
    9. '                
' → logprob: -7.101868629455566
    10. '):' → logprob: -7.101868629455566

Token 154: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' (adapté à ' now') → logprob: -0.056109268218278885
    2. ' now' → logprob: -2.9311091899871826
    3. '                   ' → logprob: -7.431109428405762
    4. 'answer' → logprob: -8.556109428405762
    5. '	now' → logprob: -8.806109428405762
    6. '               ' → logprob: -9.056109428405762
    7. '[now' → logprob: -10.056109428405762
    8. 'd' → logprob: -10.056109428405762
    9. 'del' → logprob: -10.181109428405762
    10. '_now' → logprob: -11.306109428405762

Token 155: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.03374989703297615
    2. '.pop' → logprob: -3.40874981880188
    3. 'pop' → logprob: -10.0337495803833
    4. '.remove' → logprob: -10.4087495803833
    5. 'j' → logprob: -10.6587495803833
    6. '```' → logprob: -12.9087495803833
    7. '.' → logprob: -13.9087495803833
    8. '[' → logprob: -14.6587495803833
    9. ' pop' → logprob: -15.0337495803833
    10. 'Pop' → logprob: -15.1587495803833

Token 156: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00863336119800806
    2. ']=' → logprob: -4.883633136749268
    3. '=' → logprob: -7.758633136749268
    4. ']+=' → logprob: -8.008633613586426
    5. ')' → logprob: -8.883633613586426
    6. ' ]' → logprob: -10.508633613586426
    7. ']=-' → logprob: -10.758633613586426
    8. ']*' → logprob: -11.508633613586426
    9. '0' → logprob: -11.508633613586426
    10. '-' → logprob: -11.633633613586426

Token 157: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002283599227666855
    2. '-=' → logprob: -6.752283573150635
    3. ' =' → logprob: -6.877283573150635
    4. '*=' → logprob: -10.002284049987793
    5. '-' → logprob: -11.002284049987793
    6. '+=' → logprob: -11.377284049987793
    7. ' -=' → logprob: -12.002284049987793
    8. '=-' → logprob: -14.252284049987793
    9. '0' → logprob: -14.252284049987793
    10. '*' → logprob: -15.252284049987793

Token 158: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015943869948387146
    2. ' ' → logprob: -8.75015926361084
    3. ')' → logprob: -14.37515926361084
    4. '<|end|>' → logprob: -16.000160217285156
    5. '  ' → logprob: -16.125160217285156
    6. '[]' → logprob: -17.250160217285156
    7. '```' → logprob: -17.500160217285156
    8. '   ' → logprob: -17.500160217285156
    9. 'None' → logprob: -17.750160217285156
    10. '۰' → logprob: -18.062660217285156

Token 159: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.676981345459353e-06
    2. ' ' → logprob: -12.125005722045898
    3. ')' → logprob: -16.8750057220459
    4. '  ' → logprob: -17.6250057220459
    5. '<|end|>' → logprob: -17.6250057220459
    6. '000' → logprob: -18.8750057220459
    7. '۰' → logprob: -19.0000057220459
    8. '   ' → logprob: -19.3750057220459
    9. '```' → logprob: -19.3750057220459
    10. '00' → logprob: -19.7500057220459

Token 160: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4808542728424072
    2. '       ' → logprob: -0.9808542728424072
    3. '
' → logprob: -6.355854034423828
    4. 'answer' → logprob: -6.605854034423828
    5. 'for' → logprob: -6.730854034423828
    6. 'else' → logprob: -6.730854034423828
    7. ' for' → logprob: -7.980854034423828
    8. '        
' → logprob: -8.105854034423828
    9. '   ' → logprob: -8.980854034423828
    10. ' else' → logprob: -9.355854034423828

Token 161: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3204851448535919
    2. '           ' → logprob: -1.3204851150512695
    3. 'for' → logprob: -6.4454851150512695
    4. 'answer' → logprob: -6.5704851150512695
    5. 'else' → logprob: -6.9454851150512695
    6. '
' → logprob: -7.0704851150512695
    7. '        
' → logprob: -7.1954851150512695
    8. ' for' → logprob: -7.4454851150512695
    9. '   ' → logprob: -8.32048511505127
    10. '               ' → logprob: -8.82048511505127

Token 162: ' total' (ID: 3609)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.010249787010252476
    2. 'score' → logprob: -5.635249614715576
    3. 'total' (adapté à ' total') → logprob: -5.885249614715576
    4. '       ' → logprob: -7.135249614715576
    5. 'current' → logprob: -7.385249614715576
    6. '
' → logprob: -7.510249614715576
    7. ' answer' → logprob: -7.510249614715576
    8. 'result' → logprob: -7.760249614715576
    9. 'sum' → logprob: -8.135250091552734
    10. 'ans' → logprob: -8.385250091552734

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.282327800989151
    2. '=' → logprob: -1.4073277711868286
    3. ' +=' → logprob: -7.657327651977539
    4. '_' → logprob: -7.782327651977539
    5. '+=' → logprob: -8.532327651977539
    6. '_sum' → logprob: -10.407327651977539
    7. '=sum' → logprob: -10.657327651977539
    8. 's' → logprob: -11.532327651977539
    9. '_score' → logprob: -12.407327651977539
    10. '_=' → logprob: -12.532327651977539

Token 164: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.04301038011908531
    2. ' sum' → logprob: -3.1680104732513428
    3. '(sum' → logprob: -12.418010711669922
    4. '0' → logprob: -12.918010711669922
    5. ' ' → logprob: -12.918010711669922
    6. 'a' → logprob: -14.668010711669922
    7. '   ' → logprob: -14.793010711669922
    8. 'answer' → logprob: -14.918010711669922
    9. 'max' → logprob: -14.918010711669922
    10. '	sum' → logprob: -15.293010711669922

Token 165: '(now' (ID: 65064)
  Prédit: '(now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(now' → logprob: -7.73183855926618e-05
    2. '[now' → logprob: -10.375077247619629
    3. '(' → logprob: -10.500077247619629
    4. 'now' → logprob: -11.000077247619629
    5. ' (' → logprob: -15.000077247619629
    6. ' now' → logprob: -15.000077247619629
    7. '(no' → logprob: -15.125077247619629
    8. '	now' → logprob: -15.500077247619629
    9. '()' → logprob: -16.000078201293945
    10. '(n' → logprob: -16.125078201293945

Token 166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011311526410281658
    2. ')
' → logprob: -4.5113115310668945
    3. '<|end|>' → logprob: -9.011311531066895
    4. ' )' → logprob: -9.886311531066895
    5. ')+' → logprob: -10.136311531066895
    6. '+' → logprob: -10.886311531066895
    7. ')
' → logprob: -11.761311531066895
    8. '
' → logprob: -12.511311531066895
    9. ')

' → logprob: -12.636311531066895
    10. ' +' → logprob: -12.636311531066895

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6905295252799988
    2. '
' → logprob: -0.8155295252799988
    3. '<|end|>' → logprob: -3.3155295848846436
    4. 'answer' → logprob: -4.9405293464660645
    5. '
' → logprob: -5.5655293464660645
    6. ' if' → logprob: -6.3155293464660645
    7. '        
' → logprob: -6.4405293464660645
    8. ' answer' → logprob: -6.6905293464660645
    9. '```' → logprob: -6.8155293464660645
    10. '<|end|>' → logprob: -7.1905293464660645

Token 168: ' if' (ID: 538)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.011047582142055035
    2. 'if' (adapté à ' if') → logprob: -4.76104736328125
    3. '       ' → logprob: -6.26104736328125
    4. ' answer' → logprob: -8.26104736328125
    5. '   ' → logprob: -9.01104736328125
    6. ' if' → logprob: -9.13604736328125
    7. '	answer' → logprob: -10.63604736328125
    8. '
' → logprob: -12.13604736328125
    9. '```' → logprob: -14.13604736328125
    10. '        
' → logprob: -14.13604736328125

Token 169: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.38694891333580017
    2. 'total' → logprob: -1.1369489431381226
    3. ' answer' → logprob: -9.761948585510254
    4. 'answer' → logprob: -10.886948585510254
    5. ' ' → logprob: -14.136948585510254
    6. '	total' → logprob: -14.886948585510254
    7. '(total' → logprob: -15.136948585510254
    8. '   ' → logprob: -16.01194953918457
    9. 'ans' → logprob: -17.51194953918457
    10. ' ' → logprob: -17.88694953918457

Token 170: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5759457349777222
    2. '>' → logprob: -0.8259457349777222
    3. ' ' → logprob: -12.450945854187012
    4. ')' → logprob: -14.075945854187012
    5. '   ' → logprob: -14.575945854187012
    6. ':' → logprob: -15.075945854187012
    7. ' ' → logprob: -15.075945854187012
    8. ')>' → logprob: -15.825945854187012
    9. '">' → logprob: -16.325944900512695
    10. '=' → logprob: -16.575944900512695

Token 171: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.005234002135694027
    2. ' answer' → logprob: -5.2552337646484375
    3. '	answer' → logprob: -15.505233764648438
    4. '   ' → logprob: -17.380233764648438
    5. '
' → logprob: -18.005233764648438
    6. '(answer' → logprob: -18.630233764648438
    7. 'Answer' → logprob: -18.755233764648438
    8. '_answer' → logprob: -18.880233764648438
    9. 'ans' → logprob: -19.005233764648438
    10. '       ' → logprob: -19.880233764648438

Token 172: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04301813989877701
    2. ':
' → logprob: -3.168018102645874
    3. ':
' → logprob: -11.543018341064453
    4. '=' → logprob: -12.668018341064453
    5. '           ' → logprob: -13.668018341064453
    6. '):' → logprob: -13.793018341064453
    7. '):
' → logprob: -13.918018341064453
    8. ':

' → logprob: -14.043018341064453
    9. '   ' → logprob: -14.918018341064453
    10. '       ' → logprob: -15.043018341064453

Token 173: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5565338134765625
    2. ' answer' → logprob: -0.9315338134765625
    3. 'answer' → logprob: -4.1815338134765625
    4. ' 
' → logprob: -5.8065338134765625
    5. '            
' → logprob: -5.8065338134765625
    6. '<|end|>' → logprob: -5.9315338134765625
    7. '(answer' → logprob: -6.1815338134765625
    8. '	answer' → logprob: -6.5565338134765625
    9. '=' → logprob: -7.1815338134765625
    10. '       ' → logprob: -7.3065338134765625

Token 174: ' answer' (ID: 6052)
  Prédit: ' answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' answer' → logprob: -0.04901958256959915
    2. 'answer' (adapté à ' answer') → logprob: -3.0490195751190186
    3. '           ' → logprob: -7.799019813537598
    4. '	answer' → logprob: -11.424019813537598
    5. 'Answer' → logprob: -12.674019813537598
    6. '               ' → logprob: -12.924019813537598
    7. '_answer' → logprob: -13.424019813537598
    8. '(answer' → logprob: -13.674019813537598
    9. '   ' → logprob: -14.174019813537598
    10. '.answer' → logprob: -14.424019813537598

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975083328783512
    2. '=' → logprob: -3.5297508239746094
    3. '＝' → logprob: -15.77975082397461
    4. ' =)' → logprob: -15.90475082397461
    5. ' +=' → logprob: -16.77975082397461
    6. ' ' → logprob: -17.02975082397461
    7. '<|end|>' → logprob: -17.40475082397461
    8. ' =
' → logprob: -18.02975082397461
    9. ' =
' → logprob: -18.77975082397461
    10. '.=' → logprob: -18.77975082397461

Token 176: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.38687121868133545
    2. 'total' → logprob: -1.1368712186813354
    3. '	total' → logprob: -16.136871337890625
    4. '(total' → logprob: -17.011871337890625
    5. '$total' → logprob: -18.511871337890625
    6. ' tota' → logprob: -19.136871337890625
    7. 'tot' → logprob: -19.261871337890625
    8. ' ' → logprob: -19.261871337890625
    9. '_total' → logprob: -19.511871337890625
    10. '           ' → logprob: -19.511871337890625

Token 177: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007542393868789077
    2. '
' → logprob: -7.375754356384277
    3. '```' → logprob: -10.375754356384277
    4. '<|end|>' → logprob: -10.375754356384277
    5. '\n' → logprob: -10.500754356384277
    6. ' print' → logprob: -10.625754356384277
    7. ')' → logprob: -11.750754356384277
    8. '  
' → logprob: -13.750754356384277
    9. '    
' → logprob: -14.250754356384277
    10. ' 
' → logprob: -14.375754356384277

Token 178: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.632542913896032e-05
    2. '
' → logprob: -10.000046730041504
    3. '```' → logprob: -14.750046730041504
    4. ' print' → logprob: -14.875046730041504
    5. '\n' → logprob: -18.125045776367188
    6. '  
' → logprob: -18.625045776367188
    7. '
' → logprob: -19.250045776367188
    8. ')' → logprob: -19.375045776367188
    9. ' 
' → logprob: -19.625045776367188
    10. '    
' → logprob: -19.750045776367188

Token 179: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.005283207632601261
    2. '(' → logprob: -5.255283355712891
    3. '()' → logprob: -10.63028335571289
    4. 'answer' → logprob: -11.00528335571289
    5. '(ans' → logprob: -12.50528335571289
    6. '('' → logprob: -12.75528335571289
    7. '("' → logprob: -13.38028335571289
    8. '(output' → logprob: -16.25528335571289
    9. ' (' → logprob: -16.75528335571289
    10. ' answer' → logprob: -16.88028335571289

Token 180: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ' )' → logprob: -13.25000286102295
    3. ')
' → logprob: -15.00000286102295
    4. '()' → logprob: -15.37500286102295
    5. '())' → logprob: -15.75000286102295
    6. ')`' → logprob: -16.125001907348633
    7. '`)' → logprob: -16.625001907348633
    8. '))' → logprob: -17.125001907348633
    9. '+' → logprob: -17.250001907348633
    10. '')' → logprob: -17.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 178
Tokens correctement prédits (1ère position, stricte): 77
Tokens correctement prédits (1ère position, avec adaptation): 85
Tokens correctement prédits (top 10): 160
Précision stricte (1ère position): 43.26%
Précision adaptée (1ère position): 47.75%
Précision (top 10): 89.89%
================================================================================
