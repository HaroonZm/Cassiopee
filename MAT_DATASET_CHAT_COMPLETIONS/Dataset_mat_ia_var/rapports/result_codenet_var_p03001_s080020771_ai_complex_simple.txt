================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:55:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import mul
from decimal import Decimal, getcontext

getcontext().prec = 15

W, H, x, y = map(lambda v: int(v), input().split())

area = reduce(mul, [W, H]) / 2
s = "{:.6f}".format(Decimal(area))

center = all(map(lambda t: t[0] == t[1],
                 zip((x, y), (W/2, H/2))))
k = int(center)

print(s, k)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020179791375994682
    2. '(lambda' → logprob: -4.270179748535156
    3. '.' → logprob: -5.270179748535156
    4. ',' → logprob: -8.020179748535156
    5. ' (' → logprob: -8.395179748535156
    6. '```' → logprob: -9.520179748535156
    7. '(
' → logprob: -10.145179748535156
    8. '\(' → logprob: -10.270179748535156
    9. '\' → logprob: -10.395179748535156
    10. 'lambda' → logprob: -11.020179748535156

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01876937784254551
    2. '\' → logprob: -4.768769264221191
    3. 'def' → logprob: -5.768769264221191
    4. '(lambda' → logprob: -6.268769264221191
    5. ' ' → logprob: -6.393769264221191
    6. '```' → logprob: -7.393769264221191
    7. '(
' → logprob: -7.643769264221191
    8. ' (' → logprob: -8.143769264221191
    9. ',' → logprob: -8.268769264221191
    10. '\(' → logprob: -8.393769264221191

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.1675146520137787
    2. ' itertools' → logprob: -2.2925145626068115
    3. ' math' → logprob: -3.9175145626068115
    4. ' collections' → logprob: -3.9175145626068115
    5. 'operator' → logprob: -4.417514801025391
    6. 'collections' → logprob: -7.792514801025391
    7. 'math' → logprob: -8.04251480102539
    8. ' typing' → logprob: -8.04251480102539
    9. ' os' → logprob: -8.66751480102539
    10. ' ' → logprob: -9.66751480102539

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02017967775464058
    2. 'import' → logprob: -4.020179748535156
    3. '.' → logprob: -6.770179748535156
    4. ' ' → logprob: -7.270179748535156
    5. ' .' → logprob: -9.145179748535156
    6. '.import' → logprob: -9.770179748535156
    7. '	import' → logprob: -11.520179748535156
    8. '_import' → logprob: -13.145179748535156
    9. '-import' → logprob: -13.395179748535156
    10. '<|end|>' → logprob: -13.645179748535156

Token 8: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.3170230984687805
    2. ' import' → logprob: -1.9420230388641357
    3. 'add' → logprob: -2.4420230388641357
    4. ' ' → logprob: -4.192023277282715
    5. ' mul' → logprob: -4.192023277282715
    6. 'import' → logprob: -4.817023277282715
    7. 'mul' → logprob: -6.192023277282715
    8. ' item' → logprob: -8.692023277282715
    9. 'item' → logprob: -9.567023277282715
    10. ' ad' → logprob: -9.817023277282715

Token 9: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3455864191055298
    2. '(
' → logprob: -1.9705864191055298
    3. '\' → logprob: -2.4705862998962402
    4. '\n' → logprob: -3.5955862998962402
    5. '*' → logprob: -4.34558629989624
    6. 'def' → logprob: -5.09558629989624
    7. ',' → logprob: -5.34558629989624
    8. '#' → logprob: -6.09558629989624
    9. 'a' → logprob: -6.22058629989624
    10. '`' → logprob: -6.47058629989624

Token 10: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0372912883758545
    2. '(' → logprob: -1.1622912883758545
    3. '(
' → logprob: -1.6622912883758545
    4. '\' → logprob: -3.0372912883758545
    5. 'a' → logprob: -4.037291526794434
    6. '\n' → logprob: -4.412291526794434
    7. '
' → logprob: -4.537291526794434
    8. ',' → logprob: -4.787291526794434
    9. 'd' → logprob: -4.787291526794434
    10. ',
' → logprob: -5.412291526794434

Token 11: ' decimal' (ID: 26964)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.03590603917837143
    2. 'math' → logprob: -3.6609060764312744
    3. ' itertools' → logprob: -4.660905838012695
    4. ' functools' → logprob: -9.910905838012695
    5. ' numpy' → logprob: -10.785905838012695
    6. ' ' → logprob: -11.535905838012695
    7. '_math' → logprob: -12.660905838012695
    8. ' random' → logprob: -12.910905838012695
    9. 'it' → logprob: -12.910905838012695
    10. ' operator' → logprob: -13.035905838012695

Token 12: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.22613637149333954
    2. 'import' → logprob: -1.601136326789856
    3. '.' → logprob: -7.351136207580566
    4. ' ' → logprob: -10.851136207580566
    5. '.import' → logprob: -10.976136207580566
    6. '_import' → logprob: -11.101136207580566
    7. '	import' → logprob: -11.351136207580566
    8. '<|end|>' → logprob: -12.226136207580566
    9. ',' → logprob: -12.976136207580566
    10. ' Import' → logprob: -13.726136207580566

Token 13: ' Decimal' (ID: 56874)
  Prédit: ' Decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.02991027757525444
    2. 'Decimal' → logprob: -3.5299103260040283
    3. '.Decimal' → logprob: -9.52991008758545
    4. ' ' → logprob: -10.27991008758545
    5. ' decimal' → logprob: -10.52991008758545
    6. ' get' → logprob: -11.52991008758545
    7. ' ' → logprob: -12.40491008758545
    8. 'decimal' → logprob: -12.77991008758545
    9. ' Dec' → logprob: -13.40491008758545
    10. 'Decimals' → logprob: -13.52991008758545

Token 14: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15373943746089935
    2. 'def' → logprob: -3.0287394523620605
    3. '(
' → logprob: -3.0287394523620605
    4. '\' → logprob: -3.9037394523620605
    5. '\n' → logprob: -5.4037394523620605
    6. '#' → logprob: -5.6537394523620605
    7. 'a' → logprob: -5.6537394523620605
    8. ',' → logprob: -5.7787394523620605
    9. 'x' → logprob: -6.6537394523620605
    10. '`' → logprob: -6.7787394523620605

Token 15: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.703374981880188
    2. ' get' → logprob: -0.703374981880188
    3. 'ROUND' → logprob: -5.078374862670898
    4. ' ROUND' → logprob: -6.453374862670898
    5. ' local' → logprob: -6.953374862670898
    6. 'local' → logprob: -7.453374862670898
    7. 'Context' → logprob: -7.953374862670898
    8. ' Division' → logprob: -8.953374862670898
    9. 'Local' → logprob: -9.328374862670898
    10. 'Invalid' → logprob: -9.328374862670898

Token 16: 'context' (ID: 3822)
  Prédit: 'context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'context' → logprob: -2.093505099765025e-05
    2. 'con' → logprob: -12.000020980834961
    3. 'cont' → logprob: -12.500020980834961
    4. 'c' → logprob: -12.625020980834961
    5. 'ctx' → logprob: -13.250020980834961
    6. '_context' → logprob: -14.125020980834961
    7. '```' → logprob: -14.125020980834961
    8. 'contexts' → logprob: -14.250020980834961
    9. 'rec' → logprob: -14.750020980834961
    10. 'Context' → logprob: -14.875020980834961

Token 17: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.061700463294983
    2. '\n' → logprob: -1.561700463294983
    3. '\' → logprob: -1.811700463294983
    4. 'get' → logprob: -2.0617003440856934
    5. '(' → logprob: -2.8117003440856934
    6. '

' → logprob: -3.4367003440856934
    7. '(
' → logprob: -4.311700344085693
    8. 'def' → logprob: -4.436700344085693
    9. '' → logprob: -4.811700344085693
    10. ',' → logprob: -5.311700344085693

Token 18: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.8922403454780579
    2. '\' → logprob: -1.392240285873413
    3. '
' → logprob: -1.892240285873413
    4. '\n' → logprob: -2.517240285873413
    5. '(' → logprob: -3.142240285873413
    6. '`' → logprob: -4.517240524291992
    7. '```' → logprob: -4.642240524291992
    8. 'def' → logprob: -4.642240524291992
    9. '(
' → logprob: -4.892240524291992
    10. '(get' → logprob: -5.767240524291992

Token 19: 'context' (ID: 3822)
  Prédit: 'context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'context' → logprob: -0.002842437708750367
    2. '_context' → logprob: -5.877842426300049
    3. '<context' → logprob: -11.252842903137207
    4. ' context' → logprob: -12.002842903137207
    5. '(context' → logprob: -12.002842903137207
    6. '"context' → logprob: -12.252842903137207
    7. '_cont' → logprob: -13.627842903137207
    8. 'continu' → logprob: -14.127842903137207
    9. 'content' → logprob: -14.252842903137207
    10. '	context' → logprob: -14.502842903137207

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4696285128593445
    2. '(' → logprob: -1.4696285724639893
    3. '.' → logprob: -2.2196285724639893
    4. '()' → logprob: -3.3446285724639893
    5. '(.' → logprob: -8.46962833404541
    6. '(.)' → logprob: -8.46962833404541
    7. '```' → logprob: -9.84462833404541
    8. '('.')' → logprob: -9.84462833404541
    9. '(

' → logprob: -10.21962833404541
    10. ').' → logprob: -10.21962833404541

Token 21: 'prec' (ID: 21393)
  Prédit: 'prec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prec' → logprob: -9.088346359931165e-07
    2. 'precision' → logprob: -14.250000953674316
    3. '```' → logprob: -16.75
    4. 'round' → logprob: -17.375
    5. '_prec' → logprob: -17.625
    6. ' prec' → logprob: -17.625
    7. '.prec' → logprob: -17.875
    8. 'pre' → logprob: -18.125
    9. 'Prec' → logprob: -18.5
    10. 'PREC' → logprob: -20.0

Token 22: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1134783998131752
    2. '=' → logprob: -2.238478422164917
    3. ' +=' → logprob: -7.488478183746338
    4. ' ' → logprob: -10.238478660583496
    5. '<|end|>' → logprob: -10.613478660583496
    6. '+=' → logprob: -11.988478660583496
    7. ' |=' → logprob: -12.363478660583496
    8. ' =
' → logprob: -12.488478660583496
    9. '(' → logprob: -12.988478660583496
    10. ' =)' → logprob: -13.113478660583496

Token 23: ' ' (ID: 220)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.48439478874206543
    2. '28' → logprob: -1.2343947887420654
    3. ' ' → logprob: -3.1093947887420654
    4. '100' → logprob: -3.7343947887420654
    5. '30' → logprob: -4.1093950271606445
    6. '10' → logprob: -5.1093950271606445
    7. '20' → logprob: -6.9843950271606445
    8. '40' → logprob: -7.7343950271606445
    9. '6' → logprob: -9.359395027160645
    10. '29' → logprob: -9.609395027160645

Token 24: '15' (ID: 1055)
  Prédit: '50'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '50' → logprob: -0.5935729742050171
    2. '28' → logprob: -0.9685729742050171
    3. '100' → logprob: -3.0935730934143066
    4. '30' → logprob: -4.468573093414307
    5. '10' → logprob: -5.093573093414307
    6. '20' → logprob: -6.718573093414307
    7. '40' → logprob: -6.968573093414307
    8. '6' → logprob: -7.468573093414307
    9. '15' → logprob: -8.343572616577148
    10. ' ' → logprob: -8.468572616577148

Token 25: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7878209352493286
    2. '
' → logprob: -1.4128209352493286
    3. '

' → logprob: -2.412820816040039
    4. 'n' → logprob: -2.412820816040039
    5. 'result' → logprob: -3.287820816040039
    6. 'a' → logprob: -3.537820816040039
    7. '\' → logprob: -4.037820816040039
    8. 'x' → logprob: -4.537820816040039
    9. '\n' → logprob: -5.162820816040039
    10. '#' → logprob: -6.037820816040039

Token 26: 'W' (ID: 54)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025807147845625877
    2. 'numbers' → logprob: -4.4008073806762695
    3. 'result' → logprob: -5.2758073806762695
    4. 'factor' → logprob: -6.5258073806762695
    5. '```' → logprob: -6.7758073806762695
    6. 'a' → logprob: -7.0258073806762695
    7. 'data' → logprob: -7.1508073806762695
    8. 'n' → logprob: -7.2758073806762695
    9. 'nums' → logprob: -7.4008073806762695
    10. 'number' → logprob: -7.5258073806762695

Token 27: ',' (ID: 11)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.16362729668617249
    2. 'eight' → logprob: -2.7886273860931396
    3. '=' → logprob: -3.6636273860931396
    4. 'idth' → logprob: -4.2886271476745605
    5. 'E' → logprob: -4.4136271476745605
    6. 'i' → logprob: -4.6636271476745605
    7. 'h' → logprob: -5.1636271476745605
    8. 'ei' → logprob: -5.4136271476745605
    9. 'IDTH' → logprob: -5.6636271476745605
    10. ' =' → logprob: -5.9136271476745605

Token 28: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.048122141510248184
    2. ' H' → logprob: -3.1731221675872803
    3. 'D' → logprob: -6.298121929168701
    4. 'L' → logprob: -6.798121929168701
    5. 'N' → logprob: -8.17312240600586
    6. 'n' → logprob: -8.29812240600586
    7. 'a' → logprob: -8.86062240600586
    8. 'w' → logprob: -8.86062240600586
    9. ' D' → logprob: -9.29812240600586
    10. 'M' → logprob: -9.36062240600586

Token 29: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02984108217060566
    2. '=' → logprob: -3.529841184616089
    3. ',' → logprob: -9.404841423034668
    4. ' ' → logprob: -12.404841423034668
    5. ' ,' → logprob: -12.904841423034668
    6. ')' → logprob: -14.529841423034668
    7. ' =
' → logprob: -14.779841423034668
    8. '  ' → logprob: -16.02984046936035
    9. '=int' → logprob: -16.15484046936035
    10. '.' → logprob: -16.15484046936035

Token 30: ' x' (ID: 1215)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' D' → logprob: -1.1126947402954102
    2. ' N' → logprob: -1.9876947402954102
    3. ' L' → logprob: -2.48769474029541
    4. ' =' → logprob: -2.61269474029541
    5. ' S' → logprob: -3.11269474029541
    6. ' A' → logprob: -3.11269474029541
    7. 'D' → logprob: -3.11269474029541
    8. 'N' → logprob: -3.48769474029541
    9. ' T' → logprob: -3.48769474029541
    10. ' M' → logprob: -3.98769474029541

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019030551193282008
    2. ' =' → logprob: -6.876903057098389
    3. '0' → logprob: -7.376903057098389
    4. '_center' → logprob: -9.62690258026123
    5. '=' → logprob: -10.25190258026123
    6. ',y' → logprob: -10.37690258026123
    7. ' ,' → logprob: -10.87690258026123
    8. 'c' → logprob: -10.87690258026123
    9. 'y' → logprob: -11.25190258026123
    10. '1' → logprob: -11.62690258026123

Token 32: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.020678402855992317
    2. ' y' → logprob: -3.8956785202026367
    3. ',' → logprob: -9.895678520202637
    4. ',y' → logprob: -10.145678520202637
    5. '_y' → logprob: -11.270678520202637
    6. 'w' → logprob: -11.895678520202637
    7. 'Y' → logprob: -12.145678520202637
    8. '=' → logprob: -12.895678520202637
    9. 't' → logprob: -13.145678520202637
    10. 'v' → logprob: -13.270678520202637

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18611901998519897
    2. '=' → logprob: -1.8111190795898438
    3. ',' → logprob: -5.061119079589844
    4. ' ,' → logprob: -12.186119079589844
    5. ')' → logprob: -12.686119079589844
    6. ' ' → logprob: -13.061119079589844
    7. '<|end|>' → logprob: -13.561119079589844
    8. '=int' → logprob: -14.061119079589844
    9. '.' → logprob: -15.311119079589844
    10. '=input' → logprob: -15.436119079589844

Token 34: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.9649654030799866
    2. '0' → logprob: -1.2149653434753418
    3. ' map' → logprob: -1.3399653434753418
    4. ' ' → logprob: -3.464965343475342
    5. '1' → logprob: -4.839965343475342
    6. '10' → logprob: -5.589965343475342
    7. 'input' → logprob: -5.964965343475342
    8. '100' → logprob: -6.339965343475342
    9. '5' → logprob: -6.464965343475342
    10. '[' → logprob: -6.964965343475342

Token 35: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02377551794052124
    2. '(' → logprob: -3.773775577545166
    3. 'int' → logprob: -8.023775100708008
    4. '(lambda' → logprob: -9.648775100708008
    5. '(
' → logprob: -10.523775100708008
    6. '(input' → logprob: -10.648775100708008
    7. '(map' → logprob: -10.773775100708008
    8. '(list' → logprob: -11.273775100708008
    9. '[int' → logprob: -11.273775100708008
    10. '<int' → logprob: -11.398775100708008

Token 36: ' v' (ID: 323)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5012385845184326
    2. ' i' → logprob: -1.7512385845184326
    3. ' f' → logprob: -2.7512385845184326
    4. ' t' → logprob: -3.1262385845184326
    5. ' float' → logprob: -3.8762385845184326
    6. ' int' → logprob: -3.8762385845184326
    7. ' a' → logprob: -3.8762385845184326
    8. ' s' → logprob: -4.501238822937012
    9. ' v' → logprob: -4.876238822937012
    10. ' _:' → logprob: -5.001238822937012

Token 37: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019725270103663206
    2. ' :' → logprob: -6.876972675323486
    3. ':int' → logprob: -7.626972675323486
    4. ':v' → logprob: -7.751972675323486
    5. 'v' → logprob: -11.626972198486328
    6. ' v' → logprob: -12.751972198486328
    7. ':
' → logprob: -13.251972198486328
    8. ':value' → logprob: -13.376972198486328
    9. ':str' → logprob: -14.126972198486328
    10. ',v' → logprob: -14.126972198486328

Token 38: ' int' (ID: 677)
  Prédit: 'Decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Decimal' → logprob: -0.17979860305786133
    2. ' Decimal' → logprob: -1.8047986030578613
    3. 'float' → logprob: -11.304798126220703
    4. ' ' → logprob: -11.804798126220703
    5. 'int' → logprob: -12.054798126220703
    6. '   ' → logprob: -12.492298126220703
    7. ' float' → logprob: -12.867298126220703
    8. 'v' → logprob: -12.929798126220703
    9. 'decimal' → logprob: -13.242298126220703
    10. 'Decimals' → logprob: -13.304798126220703

Token 39: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.1383245885372162
    2. '(input' → logprob: -2.138324499130249
    3. '(' → logprob: -5.138324737548828
    4. ',' → logprob: -5.763324737548828
    5. 'input' → logprob: -7.263324737548828
    6. ')' → logprob: -7.513324737548828
    7. ',v' → logprob: -8.013324737548828
    8. ')v' → logprob: -8.263324737548828
    9. '),' → logprob: -9.138324737548828
    10. 'v' → logprob: -9.513324737548828

Token 40: '),' (ID: 936)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.288835346698761
    2. '),' → logprob: -1.6638352870941162
    3. '(input' → logprob: -3.038835287094116
    4. ',' → logprob: -5.413835525512695
    5. ' input' → logprob: -5.538835525512695
    6. ')' → logprob: -5.913835525512695
    7. ',input' → logprob: -6.663835525512695
    8. ' ' → logprob: -8.288835525512695
    9. ' ),' → logprob: -8.663835525512695
    10. '(' → logprob: -8.663835525512695

Token 41: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6932218074798584
    2. ' input' → logprob: -0.6932218074798584
    3. ')' → logprob: -10.693222045898438
    4. ' ' → logprob: -10.693222045898438
    5. '(input' → logprob: -11.818222045898438
    6. '```' → logprob: -12.318222045898438
    7. ' )' → logprob: -13.443222045898438
    8. '   ' → logprob: -13.568222045898438
    9. '	input' → logprob: -13.568222045898438
    10. '<input' → logprob: -13.568222045898438

Token 42: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2770267724990845
    2. '().' → logprob: -1.9020267724990845
    3. '())' → logprob: -2.402026653289795
    4. '('' → logprob: -7.027026653289795
    5. '(' → logprob: -7.402026653289795
    6. '()))' → logprob: -9.277027130126953
    7. '()>' → logprob: -9.402027130126953
    8. '("")' → logprob: -9.527027130126953
    9. '());' → logprob: -9.902027130126953
    10. '(()' → logprob: -10.027027130126953

Token 43: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007481599459424615
    2. 'strip' → logprob: -7.250748157501221
    3. ' split' → logprob: -10.375748634338379
    4. 'rstrip' → logprob: -12.125748634338379
    5. '(split' → logprob: -14.500748634338379
    6. 'spl' → logprob: -14.750748634338379
    7. '().' → logprob: -15.250748634338379
    8. 'read' → logprob: -15.500748634338379
    9. ' ' → logprob: -16.250747680664062
    10. 's' → logprob: -16.625747680664062

Token 44: '())

' (ID: 27654)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.13864591717720032
    2. '())' → logprob: -2.138645887374878
    3. '(' → logprob: -5.013646125793457
    4. '()))' → logprob: -5.513646125793457
    5. '()' → logprob: -8.138646125793457
    6. '(','' → logprob: -8.138646125793457
    7. '("' → logprob: -8.638646125793457
    8. '(()' → logprob: -9.513646125793457
    9. ')' → logprob: -10.263646125793457
    10. '(""))' → logprob: -10.638646125793457

Token 45: 'area' (ID: 7502)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.40204864740371704
    2. '*' → logprob: -3.2770485877990723
    3. ' if' → logprob: -3.2770485877990723
    4. '\n' → logprob: -3.5270485877990723
    5. '\' → logprob: -3.6520485877990723
    6. ')' → logprob: -3.9020485877990723
    7. 'result' → logprob: -3.9020485877990723
    8. 'print' → logprob: -4.152048587799072
    9. 's' → logprob: -4.277048587799072
    10. 'x' → logprob: -4.277048587799072

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23698990046977997
    2. '=' → logprob: -1.7369898557662964
    3. '_' → logprob: -3.361989974975586
    4. 's' → logprob: -9.111989974975586
    5. ')' → logprob: -9.861989974975586
    6. '_area' → logprob: -10.611989974975586
    7. ' ' → logprob: -10.611989974975586
    8. '_=' → logprob: -11.111989974975586
    9. ',' → logprob: -11.361989974975586
    10. '1' → logprob: -12.111989974975586

Token 47: ' reduce' (ID: 10389)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.12850677967071533
    2. ' W' → logprob: -2.253506660461426
    3. 'Decimal' → logprob: -4.378506660461426
    4. '(W' → logprob: -6.628506660461426
    5. ' Decimal' → logprob: -7.378506660461426
    6. ' (' → logprob: -8.003506660461426
    7. '(' → logprob: -8.253506660461426
    8. 'x' → logprob: -8.378506660461426
    9. ' ' → logprob: -9.503506660461426
    10. ' x' → logprob: -10.378506660461426

Token 48: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.1828497052192688
    2. '(' → logprob: -2.182849645614624
    3. '(lambda' → logprob: -2.932849645614624
    4. '(operator' → logprob: -6.807849884033203
    5. 'mul' → logprob: -11.182849884033203
    6. '((' → logprob: -12.682849884033203
    7. '(mu' → logprob: -12.682849884033203
    8. '_mul' → logprob: -12.807849884033203
    9. '```' → logprob: -12.932849884033203
    10. '(
' → logprob: -13.182849884033203

Token 49: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -3.7697225252486533e-06
    2. '<ul' → logprob: -13.750003814697266
    3. 'mul' → logprob: -13.750003814697266
    4. ' ul' → logprob: -14.125003814697266
    5. 'ult' → logprob: -14.875003814697266
    6. 'ultiply' → logprob: -15.750003814697266
    7. 'u' → logprob: -16.000003814697266
    8. ' mul' → logprob: -16.750003814697266
    9. 'ultip' → logprob: -17.375003814697266
    10. 'ул' → logprob: -17.625003814697266

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019834959879517555
    2. ',[' → logprob: -4.019834995269775
    3. '([' → logprob: -7.144834995269775
    4. '(' → logprob: -8.019834518432617
    5. ',(' → logprob: -8.019834518432617
    6. ' ,' → logprob: -10.144834518432617
    7. ' ,[' → logprob: -10.144834518432617
    8. '([
' → logprob: -10.644834518432617
    9. ',
' → logprob: -11.019834518432617
    10. '),' → logprob: -11.144834518432617

Token 51: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015876928344368935
    2. ' [' → logprob: -5.140876770019531
    3. '(' → logprob: -5.515876770019531
    4. '(W' → logprob: -6.140876770019531
    5. '[x' → logprob: -6.515876770019531
    6. ' (' → logprob: -7.515876770019531
    7. '[int' → logprob: -7.765876770019531
    8. '[w' → logprob: -8.390876770019531
    9. '[
' → logprob: -9.015876770019531
    10. '([' → logprob: -9.390876770019531

Token 52: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.06801667809486389
    2. '[' → logprob: -3.068016767501831
    3. '(W' → logprob: -4.318016529083252
    4. ' W' → logprob: -5.818016529083252
    5. ' [' → logprob: -6.068016529083252
    6. ' (' → logprob: -8.94301700592041
    7. '[int' → logprob: -8.94301700592041
    8. '[x' → logprob: -9.56801700592041
    9. '[w' → logprob: -9.94301700592041
    10. ' ' → logprob: -10.06801700592041

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006297638174146414
    2. ' ,' → logprob: -5.256297588348389
    3. ',H' → logprob: -6.881297588348389
    4. ',y' → logprob: -10.881298065185547
    5. ',W' → logprob: -11.631298065185547
    6. 'H' → logprob: -13.006298065185547
    7. ' ' → logprob: -13.131298065185547
    8. ',x' → logprob: -13.381298065185547
    9. ',h' → logprob: -14.256298065185547
    10. '```' → logprob: -15.256298065185547

Token 54: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.07002135366201401
    2. ' H' → logprob: -2.695021390914917
    3. ' ' → logprob: -9.820021629333496
    4. '<|end|>' → logprob: -10.570021629333496
    5. ' 
' → logprob: -14.195021629333496
    6. ',' → logprob: -14.570021629333496
    7. '  ' → logprob: -14.820021629333496
    8. ')' → logprob: -14.945021629333496
    9. ',H' → logprob: -14.945021629333496
    10. '    ' → logprob: -14.945021629333496

Token 55: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.023607414215803146
    2. '],' → logprob: -3.8986074924468994
    3. ')' → logprob: -6.02360725402832
    4. '),' → logprob: -8.14860725402832
    5. ']' → logprob: -8.64860725402832
    6. ' ])' → logprob: -9.14860725402832
    7. '])
' → logprob: -10.27360725402832
    8. '))' → logprob: -11.77360725402832
    9. '])

' → logprob: -12.02360725402832
    10. ')])' → logprob: -12.14860725402832

Token 56: ' /' (ID: 820)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.17869581282138824
    2. '*
' → logprob: -2.3036959171295166
    3. '\' → logprob: -4.5536956787109375
    4. ' *' → logprob: -4.8036956787109375
    5. '
' → logprob: -4.9286956787109375
    6. ' 
' → logprob: -5.1786956787109375
    7. '**' → logprob: -5.6786956787109375
    8. '\n' → logprob: -5.8036956787109375
    9. ' ' → logprob: -5.8036956787109375
    10. '#' → logprob: -5.9286956787109375

Token 57: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0036526948679238558
    2. ' ' → logprob: -5.753652572631836
    3. 'Decimal' → logprob: -7.753652572631836
    4. ' Decimal' → logprob: -11.253652572631836
    5. '4' → logprob: -11.628652572631836
    6. '1' → logprob: -11.878652572631836
    7. '```' → logprob: -12.503652572631836
    8. '10' → logprob: -13.128652572631836
    9. 'decimal' → logprob: -13.253652572631836
    10. '3' → logprob: -13.378652572631836

Token 58: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.008901849389076233
    2. 'Decimal' → logprob: -4.758902072906494
    3. ' ' → logprob: -9.133901596069336
    4. '4' → logprob: -9.508901596069336
    5. '1' → logprob: -10.633901596069336
    6. '3' → logprob: -10.758901596069336
    7. '10' → logprob: -10.883901596069336
    8. ' Decimal' → logprob: -11.133901596069336
    9. '```' → logprob: -11.383901596069336
    10. 'decimal' → logprob: -12.383901596069336

Token 59: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2842719554901123
    2. '<|end|>' → logprob: -2.0342719554901123
    3. '\n' → logprob: -2.4092719554901123
    4. '*' → logprob: -4.284272193908691
    5. ' 
' → logprob: -6.409272193908691
    6. '  
' → logprob: -6.534272193908691
    7. '```' → logprob: -6.534272193908691
    8. '+' → logprob: -6.784272193908691
    9. '**' → logprob: -6.909272193908691
    10. '<|end|>' → logprob: -7.159272193908691

Token 60: 's' (ID: 82)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.588881254196167
    2. '\n' → logprob: -1.088881254196167
    3. '<|end|>' → logprob: -2.588881254196167
    4. ' 
' → logprob: -4.213881492614746
    5. '  
' → logprob: -5.588881492614746
    6. '*' → logprob: -5.588881492614746
    7. '\' → logprob: -6.713881492614746
    8. '+' → logprob: -6.838881492614746
    9. '**' → logprob: -6.963881492614746
    10. '0' → logprob: -7.213881492614746

Token 61: ' =' (ID: 314)
  Prédit: 'pecial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pecial' → logprob: -0.8085825443267822
    2. 'h' → logprob: -0.9335825443267822
    3. 'ub' → logprob: -3.4335825443267822
    4. 'ide' → logprob: -3.5585825443267822
    5. 'ym' → logprob: -3.8085825443267822
    6. 'plit' → logprob: -4.183582305908203
    7. 't' → logprob: -4.933582305908203
    8. 'hape' → logprob: -5.058582305908203
    9. 'pl' → logprob: -5.183582305908203
    10. 'har' → logprob: -5.308582305908203

Token 62: ' "{' (ID: 29585)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7303933501243591
    2. 'Decimal' → logprob: -1.355393409729004
    3. ' min' → logprob: -1.980393409729004
    4. ' Decimal' → logprob: -3.355393409729004
    5. 'W' → logprob: -4.105393409729004
    6. '(min' → logprob: -4.355393409729004
    7. '(W' → logprob: -4.605393409729004
    8. ''' → logprob: -4.980393409729004
    9. 'area' → logprob: -5.105393409729004
    10. ' W' → logprob: -5.230393409729004

Token 63: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.34457066655158997
    2. '0' → logprob: -1.7195706367492676
    3. 'area' → logprob: -2.4695706367492676
    4. '.' → logprob: -3.8445706367492676
    5. ':' → logprob: -5.219570636749268
    6. '}' → logprob: -8.469571113586426
    7. '{' → logprob: -8.719571113586426
    8. 'W' → logprob: -8.844571113586426
    9. '.area' → logprob: -9.469571113586426
    10. '1' → logprob: -10.094571113586426

Token 64: '6' (ID: 21)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.652048647403717
    2. '6' → logprob: -1.5270485877990723
    3. '15' → logprob: -2.5270485877990723
    4. '9' → logprob: -2.7770485877990723
    5. '7' → logprob: -3.6520485877990723
    6. '8' → logprob: -3.7770485877990723
    7. '12' → logprob: -3.9020485877990723
    8. '2' → logprob: -4.402048587799072
    9. '5' → logprob: -4.527048587799072
    10. '3' → logprob: -4.777048587799072

Token 65: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -6.349075556499884e-05
    2. 'g' → logprob: -10.3750638961792
    3. 'e' → logprob: -10.5000638961792
    4. ' f' → logprob: -13.7500638961792
    5. '}' → logprob: -14.2500638961792
    6. '```' → logprob: -14.3750638961792
    7. '
' → logprob: -14.6250638961792
    8. '"' → logprob: -15.2500638961792
    9. '	f' → logprob: -15.3750638961792
    10. 'F' → logprob: -15.5000638961792

Token 66: '}".' (ID: 53576)
  Prédit: '}".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}".' → logprob: -0.3178649842739105
    2. '}"' → logprob: -1.317865014076233
    3. '}' → logprob: -5.567864894866943
    4. 'f' → logprob: -7.317864894866943
    5. '"}' → logprob: -9.942865371704102
    6. '"' → logprob: -10.442865371704102
    7. '}"

' → logprob: -11.317865371704102
    8. '}"
' → logprob: -11.692865371704102
    9. '}",' → logprob: -13.192865371704102
    10. '}.' → logprob: -13.192865371704102

Token 67: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -1.27099974633893e-05
    2. 'ormat' → logprob: -11.375012397766113
    3. 'form' → logprob: -14.000012397766113
    4. ' format' → logprob: -16.25001335144043
    5. 'forma' → logprob: -16.75001335144043
    6. 'for' → logprob: -17.00001335144043
    7. '	format' → logprob: -17.50001335144043
    8. '```' → logprob: -17.75001335144043
    9. '(format' → logprob: -18.25001335144043
    10. 'orm' → logprob: -18.75001335144043

Token 68: '(' (ID: 7)
  Prédit: '(area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(area' → logprob: -9.269565634895116e-05
    2. 'area' → logprob: -10.250092506408691
    3. '(' → logprob: -10.375092506408691
    4. '(float' → logprob: -10.750092506408691
    5. '((' → logprob: -13.250092506408691
    6. '(abs' → logprob: -13.625092506408691
    7. '(s' → logprob: -15.250092506408691
    8. ' area' → logprob: -15.500092506408691
    9. ' (' → logprob: -15.750092506408691
    10. '(round' → logprob: -15.875092506408691

Token 69: 'Decimal' (ID: 16147)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.003978193271905184
    2. 'Decimal' → logprob: -5.628978252410889
    3. 'float' → logprob: -8.75397777557373
    4. ' area' → logprob: -8.87897777557373
    5. '(area' → logprob: -10.62897777557373
    6. ')' → logprob: -11.25397777557373
    7. ' Decimal' → logprob: -11.50397777557373
    8. 'W' → logprob: -11.87897777557373
    9. 'abs' → logprob: -12.12897777557373
    10. '(' → logprob: -12.50397777557373

Token 70: '(area' (ID: 115185)
  Prédit: '(area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(area' → logprob: -0.002271700883284211
    2. '(W' → logprob: -7.00227165222168
    3. '((' → logprob: -7.62727165222168
    4. '(x' → logprob: -7.87727165222168
    5. 'area' → logprob: -8.25227165222168
    6. '(' → logprob: -9.12727165222168
    7. '(s' → logprob: -10.12727165222168
    8. '(str' → logprob: -10.62727165222168
    9. '(float' → logprob: -11.25227165222168
    10. '(abs' → logprob: -11.50227165222168

Token 71: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5459350347518921
    2. ')' → logprob: -0.9209350347518921
    3. '))
' → logprob: -4.170935153961182
    4. ')
' → logprob: -5.545935153961182
    5. '*' → logprob: -7.295935153961182
    6. ' ))' → logprob: -7.420935153961182
    7. ' )' → logprob: -7.670935153961182
    8. '))

' → logprob: -7.920935153961182
    9. '),' → logprob: -8.170934677124023
    10. ' ))
' → logprob: -8.545934677124023

Token 72: 'center' (ID: 5463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6668198704719543
    2. '"' → logprob: -2.1668198108673096
    3. ')' → logprob: -2.2918198108673096
    4. ''' → logprob: -2.6668198108673096
    5. '<|end|>' → logprob: -2.7918198108673096
    6. ' )' → logprob: -2.9168198108673096
    7. ',' → logprob: -3.9168198108673096
    8. 's' → logprob: -4.166820049285889
    9. ' "' → logprob: -5.041820049285889
    10. ' s' → logprob: -5.041820049285889

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5401450991630554
    2. '_x' → logprob: -1.6651451587677002
    3. '=' → logprob: -2.1651451587677
    4. '_' → logprob: -2.2901451587677
    5. 'x' → logprob: -5.040144920349121
    6. 'X' → logprob: -6.540144920349121
    7. 'ed' → logprob: -7.540144920349121
    8. '(' → logprob: -8.040144920349121
    9. ':' → logprob: -8.290144920349121
    10. ' _' → logprob: -8.790144920349121

Token 74: ' all' (ID: 722)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.5678828954696655
    2. '(x' → logprob: -1.5678828954696655
    3. ' (' → logprob: -2.067883014678955
    4. '(' → logprob: -2.692883014678955
    5. '(H' → logprob: -4.817883014678955
    6. '(y' → logprob: -4.942883014678955
    7. '(True' → logprob: -5.692883014678955
    8. 'W' → logprob: -6.067883014678955
    9. '((' → logprob: -6.317883014678955
    10. 'x' → logprob: -6.442883014678955

Token 75: '(map' (ID: 16946)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.5785611867904663
    2. '(x' → logprob: -1.7035611867904663
    3. '((' → logprob: -2.078561305999756
    4. '(' → logprob: -2.953561305999756
    5. '([(' → logprob: -3.453561305999756
    6. '(abs' → logprob: -3.578561305999756
    7. '(v' → logprob: -4.328561305999756
    8. '(w' → logprob: -5.703561305999756
    9. '(((' → logprob: -6.578561305999756
    10. '(map' → logprob: -7.578561305999756

Token 76: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0006377388490363955
    2. '(' → logprob: -7.375637531280518
    3. '(abs' → logprob: -11.875638008117676
    4. '(int' → logprob: -13.750638008117676
    5. '(
' → logprob: -13.875638008117676
    6. 'lambda' → logprob: -14.000638008117676
    7. '(operator' → logprob: -14.625638008117676
    8. '(l' → logprob: -14.750638008117676
    9. '=lambda' → logprob: -15.375638008117676
    10. '(str' → logprob: -16.62563705444336

Token 77: ' t' (ID: 260)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.9702714085578918
    2. 'v' → logprob: -1.095271348953247
    3. ' val' → logprob: -2.970271348953247
    4. ' a' → logprob: -3.345271348953247
    5. 'a' → logprob: -3.345271348953247
    6. ' c' → logprob: -3.470271348953247
    7. 'val' → logprob: -4.220271587371826
    8. 'c' → logprob: -4.345271587371826
    9. ' i' → logprob: -4.345271587371826
    10. ' value' → logprob: -4.720271587371826

Token 78: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005740356631577015
    2. ' :' → logprob: -5.505740165710449
    3. ',' → logprob: -6.630740165710449
    4. ':t' → logprob: -8.25574016571045
    5. 't' → logprob: -10.50574016571045
    6. ':
' → logprob: -11.50574016571045
    7. ',t' → logprob: -11.63074016571045
    8. ' t' → logprob: -11.75574016571045
    9. ':center' → logprob: -12.63074016571045
    10. ':(' → logprob: -12.88074016571045

Token 79: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8998810052871704
    2. 'abs' → logprob: -1.5248810052871704
    3. ' abs' → logprob: -1.8998810052871704
    4. ' t' → logprob: -1.8998810052871704
    5. 'lambda' → logprob: -3.399880886077881
    6. ' lambda' → logprob: -3.774880886077881
    7. 'x' → logprob: -4.524880886077881
    8. ' x' → logprob: -6.024880886077881
    9. '(abs' → logprob: -6.399880886077881
    10. '(lambda' → logprob: -7.524880886077881

Token 80: '[' (ID: 58)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.31838828325271606
    2. ' ==' → logprob: -1.3183882236480713
    3. '<=' → logprob: -7.19338846206665
    4. '>=' → logprob: -7.31838846206665
    5. ' >=' → logprob: -7.44338846206665
    6. ' <=' → logprob: -7.56838846206665
    7. ':' → logprob: -7.94338846206665
    8. '*' → logprob: -8.318387985229492
    9. '!=' → logprob: -8.443387985229492
    10. '==(' → logprob: -8.568387985229492

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4226406812667847
    2. 'abs' → logprob: -1.4226406812667847
    3. 'x' → logprob: -1.7976406812667847
    4. ' abs' → logprob: -2.172640800476074
    5. 't' → logprob: -2.797640800476074
    6. '==' → logprob: -3.172640800476074
    7. ' t' → logprob: -3.922640800476074
    8. '[' → logprob: -3.922640800476074
    9. ' ==' → logprob: -4.047640800476074
    10. '-' → logprob: -4.547640800476074

Token 82: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5276896357536316
    2. '*' → logprob: -1.5276896953582764
    3. ' ==' → logprob: -1.9026896953582764
    4. '-' → logprob: -4.527689456939697
    5. '<=' → logprob: -5.027689456939697
    6. ' -' → logprob: -5.402689456939697
    7. '+' → logprob: -5.652689456939697
    8. ' *' → logprob: -5.652689456939697
    9. ',' → logprob: -5.777689456939697
    10. ' <=' → logprob: -5.902689456939697

Token 83: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.29494765400886536
    2. ' ==' → logprob: -1.669947624206543
    3. '*' → logprob: -3.544947624206543
    4. '<=' → logprob: -3.794947624206543
    5. ' <=' → logprob: -4.669947624206543
    6. '-' → logprob: -6.419947624206543
    7. '+' → logprob: -7.044947624206543
    8. ' -' → logprob: -7.044947624206543
    9. ' *' → logprob: -7.294947624206543
    10. '!=' → logprob: -7.919947624206543

Token 84: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.40716996788978577
    2. 'W' → logprob: -1.4071699380874634
    3. 'x' → logprob: -3.282170057296753
    4. ' t' → logprob: -3.407170057296753
    5. '2' → logprob: -4.907169818878174
    6. ' W' → logprob: -5.157169818878174
    7. '0' → logprob: -6.657169818878174
    8. ' ' → logprob: -6.657169818878174
    9. ' x' → logprob: -7.032169818878174
    10. 'w' → logprob: -7.907169818878174

Token 85: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6377727389335632
    2. '/' → logprob: -1.012772798538208
    3. '2' → logprob: -2.387772798538208
    4. '//' → logprob: -5.012772560119629
    5. ' /' → logprob: -5.137772560119629
    6. 'and' → logprob: -6.762772560119629
    7. '*' → logprob: -8.137772560119629
    8. 't' → logprob: -8.262772560119629
    9. ' //' → logprob: -8.262772560119629
    10. '   ' → logprob: -8.262772560119629

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0030685027595609426
    2. '0' → logprob: -7.128068447113037
    3. 't' → logprob: -7.378068447113037
    4. ' ' → logprob: -7.503068447113037
    5. 'center' → logprob: -8.253068923950195
    6. '[' → logprob: -9.190568923950195
    7. ' center' → logprob: -9.378068923950195
    8. '<|end|>' → logprob: -9.440568923950195
    9. ']' → logprob: -9.815568923950195
    10. '-' → logprob: -10.003068923950195

Token 87: '],
' (ID: 2274)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00764661468565464
    2. ' ,' → logprob: -5.007646560668945
    3. ' for' → logprob: -8.007646560668945
    4. '),' → logprob: -8.882646560668945
    5. '==' → logprob: -8.882646560668945
    6. ' ==' → logprob: -9.632646560668945
    7. 'for' → logprob: -9.882646560668945
    8. 't' → logprob: -10.007646560668945
    9. ',t' → logprob: -10.507646560668945
    10. ')' → logprob: -10.757646560668945

Token 88: '                ' (ID: 408)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.1271089315414429
    2. '[x' → logprob: -1.1271089315414429
    3. ' (' → logprob: -1.7521089315414429
    4. '[(' → logprob: -3.1271090507507324
    5. ' [' → logprob: -3.2521090507507324
    6. '[' → logprob: -3.2521090507507324
    7. '(' → logprob: -4.252109050750732
    8. '(W' → logprob: -4.502109050750732
    9. '[y' → logprob: -4.877109050750732
    10. ' zip' → logprob: -4.877109050750732

Token 89: ' zip' (ID: 16216)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5107192993164062
    2. '[x' → logprob: -1.5107192993164062
    3. ' (' → logprob: -3.2607192993164062
    4. '[' → logprob: -3.3857192993164062
    5. '(W' → logprob: -3.5107192993164062
    6. '[y' → logprob: -4.010719299316406
    7. '(' → logprob: -4.135719299316406
    8. '(y' → logprob: -4.260719299316406
    9. '[(' → logprob: -4.385719299316406
    10. ' [' → logprob: -4.885719299316406

Token 90: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.43392103910446167
    2. '([' → logprob: -1.0589210987091064
    3. '(' → logprob: -5.558920860290527
    4. '(x' → logprob: -7.183920860290527
    5. '(range' → logprob: -8.558920860290527
    6. '(([' → logprob: -8.933920860290527
    7. '(
' → logprob: -9.433920860290527
    8. ' ((' → logprob: -10.308920860290527
    9. '([(' → logprob: -10.683920860290527
    10. '(map' → logprob: -10.683920860290527

Token 91: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.015381788834929466
    2. 'W' → logprob: -4.890381813049316
    3. ' x' → logprob: -5.390381813049316
    4. '(x' → logprob: -6.265381813049316
    5. 'abs' → logprob: -7.765381813049316
    6. '(W' → logprob: -8.390381813049316
    7. ' W' → logprob: -9.140381813049316
    8. '2' → logprob: -9.515381813049316
    9. '   ' → logprob: -9.640381813049316
    10. ')' → logprob: -9.890381813049316

Token 92: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0761464387178421
    2. ' ,' → logprob: -2.701146364212036
    3. ',y' → logprob: -5.451146602630615
    4. '*' → logprob: -7.326146602630615
    5. ' *' → logprob: -7.826146602630615
    6. ',x' → logprob: -8.451146125793457
    7. ',W' → logprob: -8.451146125793457
    8. ' ' → logprob: -9.201146125793457
    9. '   ' → logprob: -9.826146125793457
    10. ')' → logprob: -10.326146125793457

Token 93: ' y' (ID: 342)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.29735803604125977
    2. 'y' → logprob: -2.0473580360412598
    3. ' W' → logprob: -2.4223580360412598
    4. ' y' → logprob: -3.7973580360412598
    5. '(W' → logprob: -5.67235803604126
    6. ' (' → logprob: -5.92235803604126
    7. 'H' → logprob: -6.67235803604126
    8. '    ' → logprob: -6.92235803604126
    9. ',' → logprob: -6.92235803604126
    10. ' ' → logprob: -7.04735803604126

Token 94: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2630610764026642
    2. ',' → logprob: -1.6380610466003418
    3. '),(' → logprob: -4.138061046600342
    4. ' ),' → logprob: -4.513061046600342
    5. ' ,' → logprob: -5.013061046600342
    6. '    ' → logprob: -7.013061046600342
    7. ')' → logprob: -7.263061046600342
    8. '   ' → logprob: -7.388061046600342
    9. ',(' → logprob: -7.888061046600342
    10. '     ' → logprob: -8.7630615234375

Token 95: ' (' (ID: 350)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.10496847331523895
    2. ' (' → logprob: -3.104968547821045
    3. '(' → logprob: -3.229968547821045
    4. '((' → logprob: -4.479968547821045
    5. '(x' → logprob: -5.979968547821045
    6. '(H' → logprob: -7.854968547821045
    7. ' ((' → logprob: -7.979968547821045
    8. '   ' → logprob: -9.604968070983887
    9. '(w' → logprob: -9.604968070983887
    10. '(
' → logprob: -9.854968070983887

Token 96: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.49863508343696594
    2. '(W' → logprob: -1.2486350536346436
    3. ' (' → logprob: -2.7486350536346436
    4. ' W' → logprob: -3.3736350536346436
    5. '(' → logprob: -5.498635292053223
    6. '   ' → logprob: -6.998635292053223
    7. ' ' → logprob: -7.373635292053223
    8. '    ' → logprob: -8.248635292053223
    9. '((' → logprob: -8.623635292053223
    10. '  ' → logprob: -8.748635292053223

Token 97: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.041856516152620316
    2. ' /' → logprob: -3.416856527328491
    3. '//' → logprob: -5.041856288909912
    4. ' //' → logprob: -6.416856288909912
    5. ' ' → logprob: -10.04185676574707
    6. '2' → logprob: -11.04185676574707
    7. ',' → logprob: -12.16685676574707
    8. '   ' → logprob: -12.41685676574707
    9. '0' → logprob: -13.29185676574707
    10. '  ' → logprob: -13.41685676574707

Token 98: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0036175278946757317
    2. ' ' → logprob: -5.628617763519287
    3. '/' → logprob: -12.253617286682129
    4. '   ' → logprob: -12.503617286682129
    5. ',' → logprob: -13.378617286682129
    6. '  ' → logprob: -13.378617286682129
    7. ' /' → logprob: -14.066117286682129
    8. '２' → logprob: -14.378617286682129
    9. '```' → logprob: -14.378617286682129
    10. '    ' → logprob: -14.753617286682129

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031931623816490173
    2. ' ,' → logprob: -5.753193378448486
    3. ',y' → logprob: -12.253192901611328
    4. ',W' → logprob: -12.878192901611328
    5. ',H' → logprob: -13.128192901611328
    6. ' ' → logprob: -13.128192901611328
    7. '),' → logprob: -13.503192901611328
    8. ')' → logprob: -13.628192901611328
    9. '   ' → logprob: -14.878192901611328
    10. '  ' → logprob: -15.628192901611328

Token 100: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.07005402445793152
    2. ' H' → logprob: -2.695054054260254
    3. ' ' → logprob: -10.070054054260254
    4. '   ' → logprob: -10.320054054260254
    5. '  ' → logprob: -11.320054054260254
    6. '    ' → logprob: -11.820054054260254
    7. '       ' → logprob: -12.695054054260254
    8. '     ' → logprob: -13.320054054260254
    9. '      ' → logprob: -13.570054054260254
    10. '         ' → logprob: -13.632554054260254

Token 101: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.0002342912630410865
    2. ')))' → logprob: -8.625234603881836
    3. ' /' → logprob: -10.250234603881836
    4. '2' → logprob: -11.250234603881836
    5. '))' → logprob: -12.750234603881836
    6. ')' → logprob: -13.750234603881836
    7. '4' → logprob: -14.000234603881836
    8. '0' → logprob: -15.125234603881836
    9. '3' → logprob: -15.125234603881836
    10. '6' → logprob: -15.625234603881836

Token 102: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.541112427134067e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -15.625075340270996
    4. ')' → logprob: -16.562576293945312
    5. '4' → logprob: -16.625076293945312
    6. '  ' → logprob: -17.187576293945312
    7. '２' → logprob: -17.437576293945312
    8. '1' → logprob: -18.062576293945312
    9. '```' → logprob: -18.312576293945312
    10. '3' → logprob: -18.437576293945312

Token 103: '))))
' (ID: 55084)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.006222055293619633
    2. ')' → logprob: -5.631222248077393
    3. '))))' → logprob: -6.006222248077393
    4. '))' → logprob: -9.006221771240234
    5. ')))
' → logprob: -11.381221771240234
    6. ')));' → logprob: -11.381221771240234
    7. ' ' → logprob: -12.131221771240234
    8. ')))

' → logprob: -13.256221771240234
    9. '))).' → logprob: -14.631221771240234
    10. '')))' → logprob: -15.006221771240234

Token 104: 'k' (ID: 74)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23444218933582306
    2. 'print' → logprob: -2.1094422340393066
    3. '
' → logprob: -2.6094422340393066
    4. ' if' → logprob: -5.109442234039307
    5. '\n' → logprob: -5.734442234039307
    6. 'result' → logprob: -7.234442234039307
    7. '\
' → logprob: -7.234442234039307
    8. 's' → logprob: -7.859442234039307
    9. '  
' → logprob: -7.984442234039307
    10. '\' → logprob: -8.109441757202148

Token 105: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5789110660552979
    2. ' =' → logprob: -0.8289110660552979
    3. 'ey' → logprob: -5.953910827636719
    4. '   ' → logprob: -10.328910827636719
    5. '?' → logprob: -10.578910827636719
    6. ' ' → logprob: -10.703910827636719
    7. 'eys' → logprob: -10.828910827636719
    8. 'ind' → logprob: -10.953910827636719
    9. '```' → logprob: -10.953910827636719
    10. ',' → logprob: -11.328910827636719

Token 106: ' int' (ID: 677)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7023336291313171
    2. '1' → logprob: -1.952333688735962
    3. '"' → logprob: -2.077333688735962
    4. 'Decimal' → logprob: -2.827333688735962
    5. 'area' → logprob: -3.202333688735962
    6. '0' → logprob: -3.452333688735962
    7. 's' → logprob: -3.702333688735962
    8. 'True' → logprob: -4.077333450317383
    9. '"W' → logprob: -4.702333450317383
    10. ' ' → logprob: -4.827333450317383

Token 107: '(center' (ID: 89864)
  Prédit: '(center'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(center' → logprob: -0.4162021577358246
    2. '(x' → logprob: -1.416202187538147
    3. '((' → logprob: -3.4162020683288574
    4. '(s' → logprob: -3.6662020683288574
    5. '(' → logprob: -3.9162020683288574
    6. '(not' → logprob: -4.916202068328857
    7. '(area' → logprob: -5.166202068328857
    8. 'center' → logprob: -6.291202068328857
    9. '(k' → logprob: -6.666202068328857
    10. '(W' → logprob: -7.041202068328857

Token 108: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3213014006614685
    2. '*' → logprob: -2.3213014602661133
    3. ' and' → logprob: -2.8213014602661133
    4. ')*' → logprob: -2.9463014602661133
    5. 'and' → logprob: -3.5713014602661133
    6. '==' → logprob: -4.321301460266113
    7. '(s' → logprob: -4.946301460266113
    8. ' *' → logprob: -5.446301460266113
    9. ' or' → logprob: -6.196301460266113
    10. 'or' → logprob: -6.321301460266113

Token 109: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008249913225881755
    2. 'area' → logprob: -8.375824928283691
    3. 'result' → logprob: -8.875824928283691
    4. 's' → logprob: -9.000824928283691
    5. ' print' → logprob: -9.750824928283691
    6. 'r' → logprob: -10.125824928283691
    7. 'a' → logprob: -10.375824928283691
    8. 'ans' → logprob: -10.375824928283691
    9. 'w' → logprob: -10.875824928283691
    10. 'score' → logprob: -10.875824928283691

Token 110: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.018686186522245407
    2. 's' → logprob: -4.393686294555664
    3. '(f' → logprob: -5.393686294555664
    4. '(' → logprob: -6.518686294555664
    5. '("{}' → logprob: -9.893686294555664
    6. 'f' → logprob: -10.268686294555664
    7. '(float' → logprob: -11.268686294555664
    8. '("{' → logprob: -11.518686294555664
    9. ' (' → logprob: -12.268686294555664
    10. '(k' → logprob: -12.893686294555664

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025615072809159756
    2. ',k' → logprob: -6.002561569213867
    3. ' ,' → logprob: -9.877561569213867
    4. ' k' → logprob: -11.127561569213867
    5. 'k' → logprob: -11.377561569213867
    6. ')' → logprob: -12.502561569213867
    7. ')
' → logprob: -13.252561569213867
    8. ',
' → logprob: -14.127561569213867
    9. ',end' → logprob: -14.127561569213867
    10. '"' → logprob: -15.252561569213867

Token 112: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0009136092266999185
    2. ' k' → logprob: -7.000913619995117
    3. '1' → logprob: -13.875913619995117
    4. ' ' → logprob: -15.000913619995117
    5. '    ' → logprob: -15.500913619995117
    6. '   ' → logprob: -15.750913619995117
    7. ')' → logprob: -15.875913619995117
    8. '(k' → logprob: -16.625913619995117
    9. '  ' → logprob: -16.750913619995117
    10. '     ' → logprob: -16.875913619995117

Token 113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.127333340875339e-06
    2. ')`' → logprob: -13.250003814697266
    3. ')
' → logprob: -13.875003814697266
    4. '))' → logprob: -14.000003814697266
    5. '`)' → logprob: -15.250003814697266
    6. ' )' → logprob: -15.500003814697266
    7. ')**' → logprob: -17.250003814697266
    8. ')")' → logprob: -17.375003814697266
    9. '')' → logprob: -17.500003814697266
    10. '),' → logprob: -17.875003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 111
Tokens correctement prédits (1ère position, stricte): 50
Tokens correctement prédits (1ère position, avec adaptation): 50
Tokens correctement prédits (top 10): 82
Précision stricte (1ère position): 45.05%
Précision adaptée (1ère position): 45.05%
Précision (top 10): 73.87%
================================================================================
