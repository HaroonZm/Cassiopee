================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def read_input():
    return input()

def parse_input(input_str):
    return map(int, input_str.split())

def assign_values(values):
    a, b, c, d = values
    return a, b, c, d

def diff(x, y):
    return abs(x - y)

def can_direct_reach(a, c, d):
    return diff(a, c) <= d

def can_via_b(a, b, c, d):
    return diff(a, b) <= d and diff(b, c) <= d

def decide(a, b, c, d):
    if can_direct_reach(a, c, d):
        return "Yes"
    elif can_via_b(a, b, c, d):
        return "Yes"
    else:
        return "No"

def output(result):
    print(result)

def main():
    input_str = read_input()
    values = parse_input(input_str)
    a, b, c, d = assign_values(values)
    result = decide(a, b, c, d)
    output(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' read' (ID: 1729)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002494683489203453
    2. '_' → logprob: -6.877494812011719
    3. '():' → logprob: -7.127494812011719
    4. '(:' → logprob: -8.252494812011719
    5. '```' → logprob: -8.877494812011719
    6. '(_:' → logprob: -9.377494812011719
    7. ':' → logprob: -9.752494812011719
    8. ' (' → logprob: -10.002494812011719
    9. '(_' → logprob: -10.877494812011719
    10. '()' → logprob: -12.502494812011719

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9125446677207947
    2. '\' → logprob: -1.2875447273254395
    3. '\n' → logprob: -1.4125447273254395
    4. '   ' → logprob: -3.1625447273254395
    5. '    
' → logprob: -4.9125447273254395
    6. '
' → logprob: -5.1625447273254395
    7. ' 
' → logprob: -5.6625447273254395
    8. '``' → logprob: -5.7875447273254395
    9. ':' → logprob: -6.1625447273254395
    10. ''\' → logprob: -6.6625447273254395

Token 5: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44253385066986084
    2. '```' → logprob: -2.0675339698791504
    3. 'return' (adapté à ' return') → logprob: -2.6925339698791504
    4. '    ' → logprob: -3.3175339698791504
    5. 'input' → logprob: -3.5675339698791504
    6. 'r' → logprob: -3.5675339698791504
    7. '\' → logprob: -4.19253396987915
    8. 'x' → logprob: -4.31753396987915
    9. '       ' → logprob: -4.69253396987915
    10. '`' → logprob: -5.19253396987915

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2530810534954071
    2. '"' → logprob: -2.3780810832977295
    3. 'input' → logprob: -2.6280810832977295
    4. ' input' → logprob: -3.1280810832977295
    5. ''' → logprob: -4.37808084487915
    6. '  ' → logprob: -7.50308084487915
    7. ' "' → logprob: -8.253081321716309
    8. '(' → logprob: -8.378081321716309
    9. '(input' → logprob: -8.503081321716309
    10. ' []' → logprob: -8.628081321716309

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013410773826763034
    2. '()' → logprob: -7.376340866088867
    3. ''' → logprob: -8.376340866088867
    4. '"' → logprob: -9.126340866088867
    5. '('' → logprob: -9.376340866088867
    6. '("("' → logprob: -9.501340866088867
    7. '```' → logprob: -9.751340866088867
    8. '(
' → logprob: -10.126340866088867
    9. ')' → logprob: -11.126340866088867
    10. '`' → logprob: -11.251340866088867

Token 8: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.516863465309143
    2. '\n' → logprob: -1.516863465309143
    3. '```' → logprob: -1.891863465309143
    4. '(' → logprob: -1.891863465309143
    5. '\' → logprob: -2.7668633460998535
    6. '()' → logprob: -3.0168633460998535
    7. '<|end|>' → logprob: -3.3918633460998535
    8. '#' → logprob: -4.0168633460998535
    9. '
' → logprob: -4.1418633460998535
    10. '(
' → logprob: -4.6418633460998535

Token 9: ' parse' (ID: 8420)
  Prédit: ' process'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' process' → logprob: -1.1871564388275146
    2. ' calculate' → logprob: -1.5621564388275146
    3. ' write' → logprob: -1.8121564388275146
    4. ' main' → logprob: -1.9371564388275146
    5. ' read' → logprob: -2.1871564388275146
    6. ' compute' → logprob: -4.437156677246094
    7. ' user' → logprob: -4.562156677246094
    8. ' parse' → logprob: -4.812156677246094
    9. ' print' → logprob: -5.062156677246094
    10. ' validate' → logprob: -5.687156677246094

Token 10: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.021266520023345947
    2. '_input' → logprob: -4.146266460418701
    3. '(' → logprob: -5.396266460418701
    4. '_line' → logprob: -8.14626693725586
    5. '_data' → logprob: -9.89626693725586
    6. '_token' → logprob: -10.14626693725586
    7. '_(' → logprob: -10.39626693725586
    8. '_text' → logprob: -10.39626693725586
    9. '_output' → logprob: -10.77126693725586
    10. '(_' → logprob: -10.77126693725586

Token 11: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006141376681625843
    2. '_' → logprob: -6.381141185760498
    3. '("("' → logprob: -6.756141185760498
    4. '(_' → logprob: -7.256141185760498
    5. '():' → logprob: -7.506141185760498
    6. '('_' → logprob: -8.006141662597656
    7. '_text' → logprob: -8.506141662597656
    8. '_parent' → logprob: -8.631141662597656
    9. '(_:' → logprob: -8.631141662597656
    10. '(_)' → logprob: -9.006141662597656

Token 12: '_str' (ID: 6182)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20066522061824799
    2. ')' → logprob: -1.9506652355194092
    3. '_' → logprob: -3.575665235519409
    4. '_string' → logprob: -5.45066499710083
    5. '_text' → logprob: -5.95066499710083
    6. ')_' → logprob: -6.32566499710083
    7. '_data' → logprob: -6.57566499710083
    8. '_str' → logprob: -7.45066499710083
    9. '):
' → logprob: -7.95066499710083
    10. '_)' → logprob: -8.950665473937988

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009889844805002213
    2. ')' → logprob: -7.375988960266113
    3. ':' → logprob: -8.500988960266113
    4. ' ):' → logprob: -9.625988960266113
    5. '):
' → logprob: -9.875988960266113
    6. ',' → logprob: -11.000988960266113
    7. '   ' → logprob: -11.625988960266113
    8. '=' → logprob: -12.750988960266113
    9. '(' → logprob: -13.375988960266113
    10. ' :' → logprob: -13.500988960266113

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023925330489873886
    2. '    ' → logprob: -4.648925304412842
    3. ' input' → logprob: -5.398925304412842
    4. ' return' → logprob: -5.898925304412842
    5. '(' → logprob: -6.148925304412842
    6. 'input' → logprob: -6.523925304412842
    7. ' ' → logprob: -7.398925304412842
    8. ')' → logprob: -7.523925304412842
    9. '    
' → logprob: -8.27392578125
    10. '[' → logprob: -8.52392578125

Token 15: ' return' (ID: 622)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5739552974700928
    2. ' return' → logprob: -1.5739552974700928
    3. '   ' → logprob: -2.0739552974700928
    4. ' tokens' → logprob: -3.0739552974700928
    5. 'input' → logprob: -3.3239552974700928
    6. 'return' (adapté à ' return') → logprob: -4.198955535888672
    7. 'tokens' → logprob: -5.573955535888672
    8. ' parts' → logprob: -7.323955535888672
    9. ' if' → logprob: -8.073955535888672
    10. ' data' → logprob: -8.323955535888672

Token 16: ' map' (ID: 4014)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.024098625406622887
    2. 'input' → logprob: -4.1490983963012695
    3. ' list' → logprob: -5.0240983963012695
    4. ' int' → logprob: -7.3990983963012695
    5. 'list' → logprob: -8.27409839630127
    6. ' []' → logprob: -8.27409839630127
    7. ' ' → logprob: -8.39909839630127
    8. 'int' → logprob: -10.64909839630127
    9. ' [' → logprob: -10.77409839630127
    10. '[input' → logprob: -11.02409839630127

Token 17: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28623050451278687
    2. '(int' → logprob: -1.5362305641174316
    3. '(str' → logprob: -3.4112305641174316
    4. '(lambda' → logprob: -7.411230564117432
    5. ' (' → logprob: -10.411230087280273
    6. '(
' → logprob: -11.286230087280273
    7. 'str' → logprob: -11.411230087280273
    8. 'int' → logprob: -11.411230087280273
    9. '(float' → logprob: -11.536230087280273
    10. '(input' → logprob: -12.036230087280273

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08041752129793167
    2. '(' → logprob: -2.5804176330566406
    3. ',' → logprob: -7.455417633056641
    4. ')' → logprob: -7.830417633056641
    5. ',input' → logprob: -8.08041763305664
    6. 'input' → logprob: -9.83041763305664
    7. ' (' → logprob: -9.95541763305664
    8. '(in' → logprob: -10.33041763305664
    9. '(
' → logprob: -11.33041763305664
    10. '(split' → logprob: -11.58041763305664

Token 19: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1002482995390892
    2. 'input' → logprob: -2.350248336791992
    3. ')' → logprob: -10.350248336791992
    4. '(input' → logprob: -12.225248336791992
    5. '   ' → logprob: -13.225248336791992
    6. ',input' → logprob: -14.225248336791992
    7. ' ' → logprob: -14.600248336791992
    8. ' )' → logprob: -14.725248336791992
    9. '	input' → logprob: -14.725248336791992
    10. '_input' → logprob: -15.475248336791992

Token 20: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0008009305456653237
    2. '(' → logprob: -7.250801086425781
    3. '(_' → logprob: -10.375801086425781
    4. ')' → logprob: -10.750801086425781
    5. '_s' → logprob: -11.625801086425781
    6. '_string' → logprob: -12.125801086425781
    7. '(input' → logprob: -12.625801086425781
    8. '   ' → logprob: -13.000801086425781
    9. 'str' → logprob: -13.000801086425781
    10. '_split' → logprob: -13.000801086425781

Token 21: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.7181411981582642
    2. '.split' → logprob: -0.7181411981582642
    3. '().' → logprob: -4.468141078948975
    4. '.strip' → logprob: -4.968141078948975
    5. ' .' → logprob: -5.093141078948975
    6. '   ' → logprob: -9.718141555786133
    7. ')' → logprob: -10.843141555786133
    8. 'split' → logprob: -11.218141555786133
    9. ').' → logprob: -11.218141555786133
    10. '()' → logprob: -11.968141555786133

Token 22: '())

' (ID: 27654)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.3170330822467804
    2. '())' → logprob: -1.317033052444458
    3. '()' → logprob: -6.192033290863037
    4. '(' → logprob: -6.692033290863037
    5. '("' → logprob: -8.317032814025879
    6. '()))' → logprob: -9.192032814025879
    7. ')' → logprob: -9.817032814025879
    8. '("("' → logprob: -10.317032814025879
    9. '(','' → logprob: -10.817032814025879
    10. ' ())' → logprob: -12.067032814025879

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01981416903436184
    2. '\' → logprob: -4.7698140144348145
    3. '
' → logprob: -5.5198140144348145
    4. 'd' → logprob: -5.7698140144348145
    5. '

' → logprob: -6.8948140144348145
    6. '\n' → logprob: -7.1448140144348145
    7. '```' → logprob: -7.5198140144348145
    8. 'n' → logprob: -8.019814491271973
    9. '#' → logprob: -8.644814491271973
    10. 'for' → logprob: -8.769814491271973

Token 24: ' assign' (ID: 14975)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.013102934695780277
    2. ' solve' → logprob: -5.138103008270264
    3. ' process' → logprob: -5.763103008270264
    4. ' calculate' → logprob: -6.513103008270264
    5. 'main' → logprob: -6.763103008270264
    6. ' sum' → logprob: -7.388103008270264
    7. ' read' → logprob: -8.138102531433105
    8. ' compute' → logprob: -8.638102531433105
    9. ' write' → logprob: -9.638102531433105
    10. 'solve' → logprob: -9.888102531433105

Token 25: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.1513313353061676
    2. '_' → logprob: -2.4013314247131348
    3. '_variables' → logprob: -4.151331424713135
    4. '_roles' → logprob: -4.401331424713135
    5. '_value' → logprob: -5.901331424713135
    6. '_tasks' → logprob: -6.026331424713135
    7. '_numbers' → logprob: -6.151331424713135
    8. '_names' → logprob: -6.401331424713135
    9. 'ments' → logprob: -6.401331424713135
    10. '_ids' → logprob: -6.526331424713135

Token 26: '(values' (ID: 40883)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030693329870700836
    2. '():' → logprob: -3.905693292617798
    3. ' (' → logprob: -5.405693531036377
    4. '(values' → logprob: -7.030693531036377
    5. '(args' → logprob: -7.280693531036377
    6. '(params' → logprob: -8.030693054199219
    7. '(_' → logprob: -8.030693054199219
    8. '(user' → logprob: -8.030693054199219
    9. '(input' → logprob: -8.030693054199219
    10. '(def' → logprob: -8.280693054199219

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2017342448234558
    2. ',' → logprob: -1.7017343044281006
    3. ')' → logprob: -9.32673454284668
    4. ' ):' → logprob: -9.32673454284668
    5. '):
' → logprob: -9.45173454284668
    6. ':' → logprob: -10.07673454284668
    7. '   ' → logprob: -11.32673454284668
    8. ' ,' → logprob: -12.57673454284668
    9. ' ' → logprob: -13.95173454284668
    10. '  ' → logprob: -14.45173454284668

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24150244891643524
    2. ' a' → logprob: -1.7415024042129517
    3. 'a' → logprob: -4.241502285003662
    4. ' return' → logprob: -4.366502285003662
    5. ' values' → logprob: -5.491502285003662
    6. ' x' → logprob: -6.241502285003662
    7. '    
' → logprob: -6.991502285003662
    8. '    ' → logprob: -7.116502285003662
    9. ' for' → logprob: -7.241502285003662
    10. '```' → logprob: -7.866502285003662

Token 29: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5565639138221741
    2. 'a' (adapté à ' a') → logprob: -1.1815638542175293
    3. ' values' → logprob: -3.4315638542175293
    4. '   ' → logprob: -3.5565638542175293
    5. ' x' → logprob: -3.5565638542175293
    6. ' return' → logprob: -4.431563854217529
    7. 'values' → logprob: -5.306563854217529
    8. ' for' → logprob: -5.806563854217529
    9. 'x' → logprob: -6.181563854217529
    10. ' value' → logprob: -6.806563854217529

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005593137815594673
    2. ' ,' → logprob: -5.255593299865723
    3. ',b' → logprob: -8.755593299865723
    4. ' =' → logprob: -9.130593299865723
    5. ' ' → logprob: -10.505593299865723
    6. '[' → logprob: -10.755593299865723
    7. '=' → logprob: -11.130593299865723
    8. '1' → logprob: -11.630593299865723
    9. ',a' → logprob: -12.005593299865723
    10. 'a' → logprob: -12.880593299865723

Token 31: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.04872248321771622
    2. 'b' → logprob: -3.048722505569458
    3. ' ' → logprob: -8.923722267150879
    4. '<|end|>' → logprob: -14.923722267150879
    5. '*b' → logprob: -15.048722267150879
    6. '	b' → logprob: -15.548722267150879
    7. '    ' → logprob: -15.798722267150879
    8. ' *' → logprob: -15.923722267150879
    9. ' б' → logprob: -15.923722267150879
    10. 'space' → logprob: -16.173723220825195

Token 32: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07693983614444733
    2. '=' → logprob: -2.951939821243286
    3. ',' → logprob: -3.826939821243286
    4. ' ' → logprob: -11.076939582824707
    5. ' ,' → logprob: -12.076939582824707
    6. ')' → logprob: -12.201939582824707
    7. '<|end|>' → logprob: -12.201939582824707
    8. '  ' → logprob: -13.326939582824707
    9. 'a' → logprob: -13.639439582824707
    10. '<|end|>' → logprob: -14.264439582824707

Token 33: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.018406163901090622
    2. 'c' → logprob: -4.018406391143799
    3. ' =' → logprob: -9.14340591430664
    4. ' ' → logprob: -9.51840591430664
    5. '=' → logprob: -10.26840591430664
    6. '*c' → logprob: -11.64340591430664
    7. ',c' → logprob: -12.01840591430664
    8. ',' → logprob: -12.01840591430664
    9. ' *' → logprob: -12.14340591430664
    10. '*' → logprob: -12.39340591430664

Token 34: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013339745812118053
    2. '=' → logprob: -4.638339519500732
    3. ',' → logprob: -5.638339519500732
    4. ' ' → logprob: -11.76333999633789
    5. ' ,' → logprob: -12.88833999633789
    6. '  ' → logprob: -13.01333999633789
    7. ' =
' → logprob: -13.38833999633789
    8. ')' → logprob: -13.38833999633789
    9. '   ' → logprob: -13.88833999633789
    10. '<|end|>' → logprob: -14.88833999633789

Token 35: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.10199199616909027
    2. 'd' → logprob: -2.351991891860962
    3. ' =' → logprob: -6.851992130279541
    4. '=' → logprob: -7.851992130279541
    5. ' ' → logprob: -8.851991653442383
    6. '*' → logprob: -9.476991653442383
    7. '*d' → logprob: -9.726991653442383
    8. ' *' → logprob: -10.851991653442383
    9. '_' → logprob: -11.726991653442383
    10. '_d' → logprob: -12.101991653442383

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14287865161895752
    2. '=' → logprob: -2.017878532409668
    3. ',' → logprob: -8.517878532409668
    4. ' ' → logprob: -13.392878532409668
    5. ')' → logprob: -14.767878532409668
    6. '  ' → logprob: -14.892878532409668
    7. ' =
' → logprob: -15.267878532409668
    8. '   ' → logprob: -15.767878532409668
    9. '<|end|>' → logprob: -15.767878532409668
    10. '=

' → logprob: -15.892878532409668

Token 37: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.0002901757834479213
    2. 'values' → logprob: -8.250289916992188
    3. '	values' → logprob: -10.500289916992188
    4. '_values' → logprob: -14.875289916992188
    5. ' list' → logprob: -14.875289916992188
    6. '(values' → logprob: -15.500289916992188
    7. ' ' → logprob: -16.000289916992188
    8. '.values' → logprob: -16.125289916992188
    9. ' next' → logprob: -16.375289916992188
    10. ' valores' → logprob: -16.875289916992188

Token 38: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' return' (ID: 622)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45363298058509827
    2. '<|end|>' → logprob: -1.2036329507827759
    3. '   ' → logprob: -3.2036330699920654
    4. '    
' → logprob: -4.578632831573486
    5. ' 
' → logprob: -5.578632831573486
    6. '<|end|>' → logprob: -5.703632831573486
    7. '  
' → logprob: -6.578632831573486
    8. '\n' → logprob: -7.203632831573486
    9. 'return' (adapté à ' return') → logprob: -7.203632831573486
    10. ' ' → logprob: -7.453632831573486

Token 41: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.47757771611213684
    2. 'a' → logprob: -0.9775776863098145
    3. ' ' → logprob: -6.3525776863098145
    4. ' (' → logprob: -6.8525776863098145
    5. '(a' → logprob: -7.9775776863098145
    6. '(' → logprob: -9.727578163146973
    7. '[a' → logprob: -9.852578163146973
    8. ' b' → logprob: -9.852578163146973
    9. 'b' → logprob: -10.102578163146973
    10. ' [' → logprob: -10.602578163146973

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06619944423437119
    2. ' ,' → logprob: -2.941199541091919
    3. '<|end|>' → logprob: -5.44119930267334
    4. ',b' → logprob: -5.56619930267334
    5. ' ' → logprob: -5.81619930267334
    6. ',a' → logprob: -10.44119930267334
    7. ',
' → logprob: -10.94119930267334
    8. ' *' → logprob: -11.56619930267334
    9. '```' → logprob: -11.94119930267334
    10. '<|end|>' → logprob: -12.31619930267334

Token 43: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.03364858031272888
    2. 'b' → logprob: -3.4086484909057617
    3. ' ' → logprob: -13.283648490905762
    4. ' ' → logprob: -13.783648490905762
    5. 'space' → logprob: -17.033649444580078
    6. ' a' → logprob: -17.283649444580078
    7. 'a' → logprob: -17.533649444580078
    8. '_b' → logprob: -17.658649444580078
    9. ' б' → logprob: -17.783649444580078
    10. ',' → logprob: -17.908649444580078

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01887933537364006
    2. ' ,' → logprob: -4.018879413604736
    3. ',b' → logprob: -8.143878936767578
    4. ' ' → logprob: -8.143878936767578
    5. ',c' → logprob: -9.768878936767578
    6. '<|end|>' → logprob: -9.893878936767578
    7. ',
' → logprob: -11.268878936767578
    8. '`,' → logprob: -12.518878936767578
    9. ',d' → logprob: -12.893878936767578
    10. ' b' → logprob: -13.018878936767578

Token 45: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5759445428848267
    2. 'c' → logprob: -0.8259445428848267
    3. 'd' → logprob: -12.700944900512695
    4. ' ' → logprob: -13.950944900512695
    5. ' d' → logprob: -13.950944900512695
    6. '	c' → logprob: -16.200944900512695
    7. '  ' → logprob: -16.575944900512695
    8. '   ' → logprob: -16.700944900512695
    9. ' ' → logprob: -17.575944900512695
    10. ',c' → logprob: -17.825944900512695

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009602610021829605
    2. '<|end|>' → logprob: -5.0096025466918945
    3. ' ,' → logprob: -6.2596025466918945
    4. ',d' → logprob: -7.3846025466918945
    5. ',b' → logprob: -9.259602546691895
    6. ' ' → logprob: -9.634602546691895
    7. 'd' → logprob: -10.259602546691895
    8. '   ' → logprob: -10.509602546691895
    9. ' d' → logprob: -10.634602546691895
    10. '```' → logprob: -10.634602546691895

Token 47: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.03804183006286621
    2. 'd' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.038042068481445
    4. '_d' → logprob: -17.288042068481445
    5. 's' → logprob: -17.663042068481445
    6. ' ' → logprob: -18.163042068481445
    7. '	d' → logprob: -18.163042068481445
    8. '4' → logprob: -18.288042068481445
    9. ',d' → logprob: -19.163042068481445
    10. ',' → logprob: -19.350542068481445

Token 48: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12164720147848129
    2. '
' → logprob: -2.7466471195220947
    3. '<|end|>' → logprob: -3.4966471195220947
    4. '\' → logprob: -4.746647357940674
    5. '\n' → logprob: -5.121647357940674
    6. '

' → logprob: -5.871647357940674
    7. '#' → logprob: -6.996647357940674
    8. 'newline' → logprob: -7.996647357940674
    9. '<|end|>' → logprob: -7.996647357940674
    10. '```' → logprob: -7.996647357940674

Token 49: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013044341467320919
    2. 'd' → logprob: -5.763044357299805
    3. '
' → logprob: -5.888044357299805
    4. '\' → logprob: -6.388044357299805
    5. '#' → logprob: -6.513044357299805
    6. '```' → logprob: -6.513044357299805
    7. 'a' → logprob: -7.013044357299805
    8. 'n' → logprob: -7.138044357299805
    9. '\n' → logprob: -8.513044357299805
    10. '[' → logprob: -9.388044357299805

Token 50: ' diff' (ID: 8868)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.6532955765724182
    2. ' solve' → logprob: -1.0282955169677734
    3. ' main' → logprob: -2.9032955169677734
    4. ' process' → logprob: -3.7782955169677734
    5. ' compute' → logprob: -4.028295516967773
    6. ' max' → logprob: -5.153295516967773
    7. ' find' → logprob: -5.153295516967773
    8. ' check' → logprob: -5.403295516967773
    9. ' maximize' → logprob: -5.903295516967773
    10. 'solve' → logprob: -6.528295516967773

Token 51: '(x' (ID: 4061)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3602631092071533
    2. 'er' → logprob: -1.3602631092071533
    3. '(' → logprob: -3.2352631092071533
    4. '(a' → logprob: -6.735262870788574
    5. '(_' → logprob: -6.860262870788574
    6. '()' → logprob: -7.110262870788574
    7. '_er' → logprob: -7.610262870788574
    8. 's' → logprob: -7.860262870788574
    9. ' _' → logprob: -7.985262870788574
    10. '_values' → logprob: -8.485262870788574

Token 52: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16963614523410797
    2. ',' → logprob: -2.0446362495422363
    3. ')' → logprob: -3.7946362495422363
    4. '1' → logprob: -5.919636249542236
    5. '_' → logprob: -7.419636249542236
    6. ' ):' → logprob: -7.669636249542236
    7. '):
' → logprob: -9.044635772705078
    8. ' ,' → logprob: -9.919635772705078
    9. '2' → logprob: -10.419635772705078
    10. '-' → logprob: -10.794635772705078

Token 53: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.28133365511894226
    2. 'y' → logprob: -1.4063336849212646
    3. 'a' → logprob: -9.656333923339844
    4. ' a' → logprob: -10.031333923339844
    5. '   ' → logprob: -10.781333923339844
    6. ' ' → logprob: -10.906333923339844
    7. '	y' → logprob: -12.156333923339844
    8. 'x' → logprob: -12.406333923339844
    9. ' x' → logprob: -12.406333923339844
    10. ')' → logprob: -12.406333923339844

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014025020645931363
    2. ')' → logprob: -6.626402378082275
    3. '):
' → logprob: -10.376402854919434
    4. ' ):' → logprob: -10.501402854919434
    5. ':' → logprob: -12.126402854919434
    6. ',' → logprob: -12.251402854919434
    7. '   ' → logprob: -12.376402854919434
    8. '=' → logprob: -14.251402854919434
    9. ' ' → logprob: -14.626402854919434
    10. ')：' → logprob: -15.126402854919434

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3262734115123749
    2. ' abs' → logprob: -2.3262734413146973
    3. 'abs' → logprob: -2.4512734413146973
    4. ':' → logprob: -2.9512734413146973
    5. ' return' → logprob: -3.7012734413146973
    6. 'return' → logprob: -5.201273441314697
    7. '-' → logprob: -5.826273441314697
    8. ')' → logprob: -5.951273441314697
    9. '    ' → logprob: -7.076273441314697
    10. 'x' → logprob: -7.076273441314697

Token 56: ' return' (ID: 622)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.28368645906448364
    2. '   ' → logprob: -2.158686399459839
    3. 'return' (adapté à ' return') → logprob: -2.658686399459839
    4. ' abs' → logprob: -2.908686399459839
    5. ' return' → logprob: -5.283686637878418
    6. 'x' → logprob: -6.408686637878418
    7. ' x' → logprob: -8.908686637878418
    8. ' ' → logprob: -10.783686637878418
    9. 'y' → logprob: -11.158686637878418
    10. '(abs' → logprob: -11.408686637878418

Token 57: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.3120172917842865
    2. 'abs' → logprob: -1.5620173215866089
    3. 'x' → logprob: -3.8120172023773193
    4. ' x' → logprob: -3.9370172023773193
    5. ' y' → logprob: -4.437017440795898
    6. 'y' → logprob: -5.437017440795898
    7. ' max' → logprob: -8.062017440795898
    8. ' ' → logprob: -9.562017440795898
    9. '   ' → logprob: -9.812017440795898
    10. 'max' → logprob: -10.187017440795898

Token 58: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3868808448314667
    2. '(x' → logprob: -1.136880874633789
    3. 'x' → logprob: -11.636880874633789
    4. '(
' → logprob: -14.511880874633789
    5. '(y' → logprob: -15.511880874633789
    6. '(s' → logprob: -16.13688087463379
    7. ')' → logprob: -16.26188087463379
    8. ' (' → logprob: -16.88688087463379
    9. '(

' → logprob: -16.88688087463379
    10. '()' → logprob: -17.51188087463379

Token 59: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012529074214398861
    2. ' -' → logprob: -4.387528896331787
    3. ' ' → logprob: -11.262529373168945
    4. '-y' → logprob: -12.387529373168945
    5. ')' → logprob: -13.137529373168945
    6. '-)' → logprob: -16.637529373168945
    7. '_' → logprob: -16.762529373168945
    8. 'y' → logprob: -17.137529373168945
    9. '-b' → logprob: -17.137529373168945
    10. ' ' → logprob: -17.137529373168945

Token 60: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0067156096920371056
    2. ' y' → logprob: -5.006715774536133
    3. ' ' → logprob: -16.256715774536133
    4. '   ' → logprob: -16.631715774536133
    5. '	y' → logprob: -17.381715774536133
    6. '  ' → logprob: -18.256715774536133
    7. ')y' → logprob: -18.756715774536133
    8. '<|end|>' → logprob: -18.881715774536133
    9. '    ' → logprob: -19.506715774536133
    10. ')' → logprob: -19.756715774536133

Token 61: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '))' → logprob: -13.750000953674316
    3. ' )' → logprob: -16.375001907348633
    4. ')))' → logprob: -17.250001907348633
    5. ')
' → logprob: -17.375001907348633
    6. ')return' → logprob: -18.875001907348633
    7. '),' → logprob: -19.125001907348633
    8. '}' → logprob: -19.250001907348633
    9. '')' → logprob: -19.500001907348633
    10. ')}' → logprob: -19.750001907348633

Token 62: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.0126840758603066e-05
    2. 'a' → logprob: -11.750040054321289
    3. 'print' → logprob: -11.875040054321289
    4. '```' → logprob: -11.875040054321289
    5. 'for' → logprob: -12.625040054321289
    6. '\' → logprob: -12.625040054321289
    7. 'result' → logprob: -13.250040054321289
    8. 'n' → logprob: -13.750040054321289
    9. 'if' → logprob: -13.875040054321289
    10. '#' → logprob: -13.875040054321289

Token 63: ' can' (ID: 665)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.4025168716907501
    2. ' min' → logprob: -2.1525168418884277
    3. ' max' → logprob: -2.5275168418884277
    4. ' find' → logprob: -3.2775168418884277
    5. ' minimize' → logprob: -3.9025168418884277
    6. 'min' → logprob: -4.402516841888428
    7. ' minimal' → logprob: -4.402516841888428
    8. 'main' → logprob: -4.652516841888428
    9. ' solve' → logprob: -4.902516841888428
    10. 'max' → logprob: -5.027516841888428

Token 64: '_direct' (ID: 80120)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20963938534259796
    2. '_make' → logprob: -2.459639310836792
    3. '_move' → logprob: -4.209639549255371
    4. '_assign' → logprob: -4.584639549255371
    5. '_accept' → logprob: -4.709639549255371
    6. '_buy' → logprob: -5.334639549255371
    7. '_apply' → logprob: -5.459639549255371
    8. '_choose' → logprob: -5.459639549255371
    9. ' _' → logprob: -5.584639549255371
    10. '_change' → logprob: -5.584639549255371

Token 65: '_re' (ID: 3067)
  Prédit: '_connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_connect' → logprob: -0.6368656754493713
    2. 'ly' → logprob: -1.3868656158447266
    3. '_access' → logprob: -3.0118656158447266
    4. '_' → logprob: -3.0118656158447266
    5. '_move' → logprob: -3.5118656158447266
    6. '_jump' → logprob: -3.8868656158447266
    7. '_link' → logprob: -4.261865615844727
    8. '_hit' → logprob: -4.261865615844727
    9. '_use' → logprob: -5.761865615844727
    10. '_transfer' → logprob: -5.886865615844727

Token 66: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.023539531975984573
    2. 'place' → logprob: -4.7735395431518555
    3. 'solve' → logprob: -6.0235395431518555
    4. 'turn' → logprob: -6.1485395431518555
    5. 'move' → logprob: -6.2735395431518555
    6. 'pair' → logprob: -6.3985395431518555
    7. 'ad' → logprob: -7.1485395431518555
    8. 'lay' → logprob: -7.6485395431518555
    9. 'pay' → logprob: -7.6485395431518555
    10. 'main' → logprob: -7.8985395431518555

Token 67: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.1238541454076767
    2. '(' → logprob: -2.498854160308838
    3. '(x' → logprob: -4.123854160308838
    4. '(s' → logprob: -4.748854160308838
    5. '(start' → logprob: -6.123854160308838
    6. '(d' → logprob: -6.748854160308838
    7. '(e' → logprob: -7.123854160308838
    8. '()' → logprob: -7.123854160308838
    9. '(A' → logprob: -7.248854160308838
    10. '(source' → logprob: -7.498854160308838

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021259954664856195
    2. ',b' → logprob: -6.377126216888428
    3. ' ,' → logprob: -8.37712574005127
    4. ',d' → logprob: -9.00212574005127
    5. 'd' → logprob: -10.87712574005127
    6. ',
' → logprob: -11.37712574005127
    7. ')' → logprob: -11.62712574005127
    8. 'b' → logprob: -11.62712574005127
    9. ',a' → logprob: -12.00212574005127
    10. '):' → logprob: -12.12712574005127

Token 69: ' c' (ID: 274)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5600196719169617
    2. 'd' → logprob: -0.9350196719169617
    3. ' d' → logprob: -4.060019493103027
    4. ' b' → logprob: -4.185019493103027
    5. 'c' → logprob: -5.685019493103027
    6. ' c' → logprob: -8.435019493103027
    7. 'a' → logprob: -10.747519493103027
    8. ' ' → logprob: -10.747519493103027
    9. '```' → logprob: -11.060019493103027
    10. '   ' → logprob: -11.310019493103027

Token 70: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.48096737265586853
    2. ',' → logprob: -0.9809674024581909
    3. ')' → logprob: -5.1059675216674805
    4. ' ):' → logprob: -8.48096752166748
    5. '):
' → logprob: -8.60596752166748
    6. ' ,' → logprob: -8.73096752166748
    7. ',a' → logprob: -10.23096752166748
    8. ',d' → logprob: -10.60596752166748
    9. 'd' → logprob: -10.73096752166748
    10. '   ' → logprob: -10.98096752166748

Token 71: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9867238998413086
    2. 'b' → logprob: -1.1117238998413086
    3. ' d' → logprob: -1.7367238998413086
    4. ' b' → logprob: -2.1117238998413086
    5. ' ' → logprob: -7.861723899841309
    6. 'c' → logprob: -8.799223899841309
    7. 'diff' → logprob: -8.986723899841309
    8. ' c' → logprob: -9.299223899841309
    9. '   ' → logprob: -9.986723899841309
    10. '1' → logprob: -10.111723899841309

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012872417457401752
    2. ',' → logprob: -4.762872219085693
    3. ')' → logprob: -5.512872219085693
    4. ' ):' → logprob: -8.887872695922852
    5. '):
' → logprob: -10.387872695922852
    6. '-' → logprob: -11.637872695922852
    7. ' ,' → logprob: -12.387872695922852
    8. 'd' → logprob: -12.637872695922852
    9. 'a' → logprob: -13.137872695922852
    10. ':' → logprob: -13.262872695922852

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052719663828611374
    2. ' return' → logprob: -3.0527195930480957
    3. 'return' → logprob: -5.677719593048096
    4. ')' → logprob: -8.302720069885254
    5. ':' → logprob: -8.802720069885254
    6. '):' → logprob: -9.677720069885254
    7. '    ' → logprob: -9.802720069885254
    8. ':return' → logprob: -9.802720069885254
    9. 'eturn' → logprob: -11.177720069885254
    10. 'def' → logprob: -11.302720069885254

Token 74: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5885575413703918
    2. 'return' (adapté à ' return') → logprob: -0.9635575413703918
    3. '   ' → logprob: -3.463557481765747
    4. 'd' → logprob: -4.463557720184326
    5. 'c' → logprob: -4.588557720184326
    6. 'abs' → logprob: -5.588557720184326
    7. ' c' → logprob: -5.963557720184326
    8. ' d' → logprob: -6.088557720184326
    9. ' abs' → logprob: -7.588557720184326
    10. ' if' → logprob: -7.963557720184326

Token 75: ' diff' (ID: 8868)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.4420427083969116
    2. 'c' → logprob: -1.5670427083969116
    3. 'a' → logprob: -1.9420427083969116
    4. 'diff' → logprob: -2.067042827606201
    5. 'abs' → logprob: -2.192042827606201
    6. ' abs' → logprob: -3.067042827606201
    7. ' d' → logprob: -3.192042827606201
    8. ' c' → logprob: -3.567042827606201
    9. ' diff' → logprob: -3.567042827606201
    10. ' a' → logprob: -4.317042827606201

Token 76: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.004867618903517723
    2. '(c' → logprob: -5.3798675537109375
    3. '(' → logprob: -8.379867553710938
    4. '(d' → logprob: -11.129867553710938
    5. '(x' → logprob: -14.254867553710938
    6. '(abs' → logprob: -14.254867553710938
    7. '(b' → logprob: -14.379867553710938
    8. ' (' → logprob: -14.754867553710938
    9. '((' → logprob: -15.504867553710938
    10. '(s' → logprob: -15.754867553710938

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03236741945147514
    2. ',c' → logprob: -3.532367467880249
    3. ' ,' → logprob: -6.03236722946167
    4. 'c' → logprob: -8.907367706298828
    5. ',d' → logprob: -10.282367706298828
    6. '   ' → logprob: -12.032367706298828
    7. ',
' → logprob: -12.407367706298828
    8. ' c' → logprob: -12.469867706298828
    9. 'd' → logprob: -12.594867706298828
    10. ' ' → logprob: -12.719867706298828

Token 78: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10270177572965622
    2. 'd' → logprob: -2.3527016639709473
    3. ' c' → logprob: -6.227701663970947
    4. ' d' → logprob: -7.977701663970947
    5. '	c' → logprob: -9.852702140808105
    6. ')c' → logprob: -10.727702140808105
    7. ')' → logprob: -10.790202140808105
    8. ' ' → logprob: -10.915202140808105
    9. '   ' → logprob: -10.977702140808105
    10. '	d' → logprob: -11.852702140808105

Token 79: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002844576956704259
    2. ',' → logprob: -8.500284194946289
    3. ')<=' → logprob: -10.125284194946289
    4. ' )' → logprob: -10.250284194946289
    5. 'd' → logprob: -13.250284194946289
    6. ',)' → logprob: -14.125284194946289
    7. '<=' → logprob: -14.625284194946289
    8. ')==' → logprob: -15.250284194946289
    9. '')' → logprob: -15.312784194946289
    10. ' <=' → logprob: -15.375284194946289

Token 80: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2681816816329956
    2. ' <=' → logprob: -1.5181816816329956
    3. '==' → logprob: -4.768181800842285
    4. '<' → logprob: -6.643181800842285
    5. '>' → logprob: -6.643181800842285
    6. ' ' → logprob: -6.643181800842285
    7. ' ==' → logprob: -6.893181800842285
    8. '=' → logprob: -7.643181800842285
    9. '+' → logprob: -7.768181800842285
    10. ')' → logprob: -7.893181800842285

Token 81: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06197451800107956
    2. ' d' → logprob: -2.81197452545166
    3. '	d' → logprob: -12.93697452545166
    4. ' ' → logprob: -13.18697452545166
    5. '   ' → logprob: -13.93697452545166
    6. '1' → logprob: -14.31197452545166
    7. '  ' → logprob: -15.68697452545166
    8. '<|end|>' → logprob: -16.186973571777344
    9. '10' → logprob: -16.686973571777344
    10. '5' → logprob: -16.686973571777344

Token 82: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.42326292395591736
    2. '
' → logprob: -2.04826283454895
    3. '

' → logprob: -2.42326283454895
    4. '<|end|>' → logprob: -2.79826283454895
    5. '\n' → logprob: -2.92326283454895
    6. '\' → logprob: -5.423263072967529
    7. '<|end|>' → logprob: -6.048263072967529
    8. '```' → logprob: -6.173263072967529
    9. ' and' → logprob: -7.548263072967529
    10. 'and' → logprob: -7.548263072967529

Token 83: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002652466995641589
    2. '```' → logprob: -7.252652645111084
    3. '\' → logprob: -7.377652645111084
    4. '<|end|>' → logprob: -8.502652168273926
    5. '
' → logprob: -8.627652168273926
    6. 'a' → logprob: -8.752652168273926
    7. 'and' → logprob: -9.002652168273926
    8. '#' → logprob: -9.502652168273926
    9. '_' → logprob: -9.502652168273926
    10. '\n' → logprob: -9.502652168273926

Token 84: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.7314679026603699
    2. 'can' → logprob: -0.7314679026603699
    3. ' main' → logprob: -3.7314679622650146
    4. 'def' → logprob: -5.2314677238464355
    5. ' def' → logprob: -5.7314677238464355
    6. 'main' → logprob: -6.6064677238464355
    7. ' is' → logprob: -6.6064677238464355
    8. ' ' → logprob: -8.231468200683594
    9. 'c' → logprob: -8.731468200683594
    10. ' a' → logprob: -8.856468200683594

Token 85: '_v' (ID: 5390)
  Prédit: '_direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_direct' → logprob: -0.04405580088496208
    2. '_jump' → logprob: -3.919055700302124
    3. '_ind' → logprob: -4.044055938720703
    4. '_' → logprob: -6.544055938720703
    5. 'direct' → logprob: -7.044055938720703
    6. '_move' → logprob: -7.669055938720703
    7. '_re' → logprob: -7.794055938720703
    8. '_continue' → logprob: -7.919055938720703
    9. '_walk' → logprob: -8.169055938720703
    10. '_j' → logprob: -8.419055938720703

Token 86: 'ia' (ID: 535)
  Prédit: 'isit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isit' → logprob: -0.22719654440879822
    2. 'ia' → logprob: -1.9771965742111206
    3. 'is' → logprob: -3.727196455001831
    4. 'i' → logprob: -4.60219669342041
    5. 'iew' → logprob: -4.85219669342041
    6. 'ist' → logprob: -5.60219669342041
    7. 'a' → logprob: -6.60219669342041
    8. 'jump' → logprob: -6.72719669342041
    9. '```' → logprob: -6.85219669342041
    10. '1' → logprob: -7.16469669342041

Token 87: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0643935576081276
    2. 'b' → logprob: -2.8143935203552246
    3. '_' → logprob: -7.064393520355225
    4. '_c' → logprob: -7.314393520355225
    5. ' b' → logprob: -7.814393520355225
    6. '_a' → logprob: -8.564393997192383
    7. '_mid' → logprob: -10.189393997192383
    8. '_direct' → logprob: -10.189393997192383
    9. '	b' → logprob: -10.876893997192383
    10. 'c' → logprob: -11.001893997192383

Token 88: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0032434279564768076
    2. '(' → logprob: -5.878243446350098
    3. '(b' → logprob: -8.878243446350098
    4. ' (' → logprob: -9.878243446350098
    5. 'e' → logprob: -10.003243446350098
    6. '(e' → logprob: -10.128243446350098
    7. 'reach' → logprob: -10.378243446350098
    8. '_' → logprob: -10.378243446350098
    9. 'a' → logprob: -10.628243446350098
    10. '(c' → logprob: -11.128243446350098

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008914520149119198
    2. ' ,' → logprob: -7.37589168548584
    3. ',b' → logprob: -8.37589168548584
    4. 'b' → logprob: -11.12589168548584
    5. ' b' → logprob: -11.87589168548584
    6. ')' → logprob: -12.37589168548584
    7. ',
' → logprob: -13.12589168548584
    8. ',c' → logprob: -13.25089168548584
    9. '),' → logprob: -13.50089168548584
    10. ' ' → logprob: -14.37589168548584

Token 90: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1608988493680954
    2. ' b' → logprob: -1.9108988046646118
    3. ',b' → logprob: -8.03589916229248
    4. ',' → logprob: -8.53589916229248
    5. '<|end|>' → logprob: -10.03589916229248
    6. ' ' → logprob: -10.16089916229248
    7. 'a' → logprob: -10.78589916229248
    8. 'c' → logprob: -11.16089916229248
    9. ' ,' → logprob: -11.78589916229248
    10. 'd' → logprob: -12.16089916229248

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003408263437449932
    2. ' ,' → logprob: -8.250340461730957
    3. ',c' → logprob: -9.750340461730957
    4. 'c' → logprob: -12.000340461730957
    5. ')' → logprob: -12.250340461730957
    6. '),' → logprob: -12.375340461730957
    7. ',b' → logprob: -13.875340461730957
    8. 'a' → logprob: -14.125340461730957
    9. ' c' → logprob: -14.500340461730957
    10. ' ' → logprob: -14.625340461730957

Token 92: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13382992148399353
    2. ' c' → logprob: -2.1338298320770264
    3. 'd' → logprob: -5.2588300704956055
    4. ' d' → logprob: -6.6338300704956055
    5. ',c' → logprob: -8.758830070495605
    6. ',' → logprob: -9.133830070495605
    7. ' ' → logprob: -10.383830070495605
    8. ')' → logprob: -11.008830070495605
    9. '	c' → logprob: -11.633830070495605
    10. '<|end|>' → logprob: -11.758830070495605

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013207156443968415
    2. ')' → logprob: -6.876320838928223
    3. '):' → logprob: -9.001320838928223
    4. ' ,' → logprob: -9.626320838928223
    5. ',d' → logprob: -10.126320838928223
    6. ',b' → logprob: -10.626320838928223
    7. 'd' → logprob: -12.001320838928223
    8. '),' → logprob: -12.001320838928223
    9. ',
' → logprob: -12.251320838928223
    10. 'b' → logprob: -12.501320838928223

Token 94: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.25218498706817627
    2. ' d' → logprob: -1.5021849870681763
    3. ' ' → logprob: -9.002184867858887
    4. ')' → logprob: -9.627184867858887
    5. ')d' → logprob: -11.502184867858887
    6. ' )' → logprob: -11.689684867858887
    7. ',' → logprob: -11.689684867858887
    8. ',d' → logprob: -11.877184867858887
    9. '  ' → logprob: -12.252184867858887
    10. 'b' → logprob: -12.314684867858887

Token 95: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008322954177856445
    2. ')' → logprob: -5.508322715759277
    3. ',' → logprob: -5.508322715759277
    4. ' ):' → logprob: -9.258322715759277
    5. '):
' → logprob: -9.633322715759277
    6. '   ' → logprob: -12.008322715759277
    7. ':' → logprob: -12.133322715759277
    8. '),' → logprob: -13.383322715759277
    9. ' )' → logprob: -13.633322715759277
    10. '):

' → logprob: -14.008322715759277

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006092792376875877
    2. 'return' → logprob: -5.5060930252075195
    3. ' return' → logprob: -6.2560930252075195
    4. '
' → logprob: -9.88109302520752
    5. 'def' → logprob: -11.88109302520752
    6. ':return' → logprob: -12.00609302520752
    7. ')' → logprob: -12.50609302520752
    8. '	return' → logprob: -12.63109302520752
    9. '    
' → logprob: -12.88109302520752
    10. '    ' → logprob: -13.00609302520752

Token 97: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12707939743995667
    2. ' return' → logprob: -2.252079486846924
    3. '   ' → logprob: -4.377079486846924
    4. 'diff' → logprob: -7.252079486846924
    5. 'def' → logprob: -7.502079486846924
    6. '
' → logprob: -8.752079010009766
    7. 'abs' → logprob: -9.877079010009766
    8. 'eturn' → logprob: -11.127079010009766
    9. '(diff' → logprob: -11.127079010009766
    10. ' ' → logprob: -11.252079010009766

Token 98: ' diff' (ID: 8868)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.5650838613510132
    2. ' diff' → logprob: -1.0650838613510132
    3. '(diff' → logprob: -3.4400839805603027
    4. 'abs' → logprob: -3.5650839805603027
    5. ' abs' → logprob: -4.315083980560303
    6. '(abs' → logprob: -5.315083980560303
    7. ' (' → logprob: -5.440083980560303
    8. ' max' → logprob: -7.315083980560303
    9. 'max' → logprob: -7.440083980560303
    10. '(' → logprob: -7.440083980560303

Token 99: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0110935652628541
    2. '(b' → logprob: -4.511093616485596
    3. '(' → logprob: -10.136093139648438
    4. '(c' → logprob: -12.511093139648438
    5. 'a' → logprob: -14.136093139648438
    6. '(x' → logprob: -14.636093139648438
    7. 'b' → logprob: -15.136093139648438
    8. ' (' → logprob: -15.136093139648438
    9. '(abs' → logprob: -15.386093139648438
    10. '(s' → logprob: -16.511093139648438

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007055149879306555
    2. ',b' → logprob: -5.007055282592773
    3. 'b' → logprob: -8.507055282592773
    4. ' ,' → logprob: -9.007055282592773
    5. ' ' → logprob: -11.882055282592773
    6. ' b' → logprob: -13.757055282592773
    7. '2' → logprob: -13.882055282592773
    8. '   ' → logprob: -14.257055282592773
    9. ' -' → logprob: -14.507055282592773
    10. ',c' → logprob: -14.632055282592773

Token 101: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00014048899174667895
    2. ' b' → logprob: -8.875140190124512
    3. ' ' → logprob: -15.375140190124512
    4. '<|end|>' → logprob: -16.125141143798828
    5. '	b' → logprob: -16.500141143798828
    6. ')b' → logprob: -16.625141143798828
    7. ')' → logprob: -16.875141143798828
    8. '[' → logprob: -18.000141143798828
    9. ''b' → logprob: -18.375141143798828
    10. '   ' → logprob: -18.500141143798828

Token 102: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.618001053633634e-05
    2. ' )' → logprob: -11.250025749206543
    3. ')<=' → logprob: -11.375025749206543
    4. '')' → logprob: -14.250025749206543
    5. '")' → logprob: -15.375025749206543
    6. ')+' → logprob: -15.750025749206543
    7. '`)' → logprob: -16.25002670288086
    8. '   ' → logprob: -16.75002670288086
    9. '）' → logprob: -17.00002670288086
    10. 'a' → logprob: -17.12502670288086

Token 103: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.28194916248321533
    2. ' <=' → logprob: -1.4069491624832153
    3. ')' → logprob: -7.656949043273926
    4. ')<=' → logprob: -8.406949043273926
    5. '+' → logprob: -10.031949043273926
    6. '()' → logprob: -11.031949043273926
    7. ' ' → logprob: -11.281949043273926
    8. ' +' → logprob: -11.406949043273926
    9. ']<=' → logprob: -12.406949043273926
    10. '<' → logprob: -12.656949043273926

Token 104: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16022615134716034
    2. ' d' → logprob: -1.9102261066436768
    3. '	d' → logprob: -13.410225868225098
    4. ' ' → logprob: -15.035225868225098
    5. '   ' → logprob: -16.035226821899414
    6. ')d' → logprob: -17.035226821899414
    7. '<|end|>' → logprob: -17.160226821899414
    8. '  ' → logprob: -17.910226821899414
    9. '(d' → logprob: -18.535226821899414
    10. '>d' → logprob: -18.535226821899414

Token 105: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.026325147598981857
    2. 'and' → logprob: -3.651325225830078
    3. ' or' → logprob: -11.026325225830078
    4. ' ' → logprob: -12.151325225830078
    5. '<|end|>' → logprob: -13.776325225830078
    6. '   ' → logprob: -14.151325225830078
    7. ')' → logprob: -14.901325225830078
    8. '    ' → logprob: -15.526325225830078
    9. 'def' → logprob: -15.526325225830078
    10. '  ' → logprob: -16.276325225830078

Token 106: ' diff' (ID: 8868)
  Prédit: ' diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' diff' → logprob: -0.12694017589092255
    2. 'diff' → logprob: -2.1269402503967285
    3. '	diff' → logprob: -12.37693977355957
    4. '(diff' → logprob: -12.62693977355957
    5. '   ' → logprob: -13.00193977355957
    6. 'd' → logprob: -14.12693977355957
    7. ' abs' → logprob: -14.37693977355957
    8. 'abs' → logprob: -14.75193977355957
    9. ' d' → logprob: -15.37693977355957
    10. '    ' → logprob: -16.00193977355957

Token 107: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -1.0325924449716695e-05
    2. '(' → logprob: -11.75001049041748
    3. 'b' → logprob: -13.75001049041748
    4. ' (' → logprob: -14.62501049041748
    5. '(c' → logprob: -14.75001049041748
    6. ')(' → logprob: -15.75001049041748
    7. '(s' → logprob: -16.125009536743164
    8. '   ' → logprob: -16.375009536743164
    9. '(a' → logprob: -17.375009536743164
    10. '>(' → logprob: -17.375009536743164

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.656383680412546e-05
    2. ',c' → logprob: -10.125046730041504
    3. 'c' → logprob: -12.625046730041504
    4. ' ,' → logprob: -12.750046730041504
    5. ')' → logprob: -16.250045776367188
    6. '   ' → logprob: -16.625045776367188
    7. ' ' → logprob: -17.000045776367188
    8. 's' → logprob: -17.750045776367188
    9. '(' → logprob: -18.250045776367188
    10. '(c' → logprob: -18.500045776367188

Token 109: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.026306219398975372
    2. ' c' → logprob: -3.65130615234375
    3. '	c' → logprob: -12.77630615234375
    4. ' ' → logprob: -13.40130615234375
    5. '   ' → logprob: -13.52630615234375
    6. '  ' → logprob: -16.27630615234375
    7. ')c' → logprob: -16.90130615234375
    8. '    ' → logprob: -17.52630615234375
    9. ',c' → logprob: -17.65130615234375
    10. 'd' → logprob: -17.65130615234375

Token 110: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. ' )' → logprob: -12.375006675720215
    3. ')<=' → logprob: -13.125006675720215
    4. '')' → logprob: -17.0000057220459
    5. ' <=' → logprob: -18.0000057220459
    6. '）' → logprob: -18.0000057220459
    7. '`)' → logprob: -18.1250057220459
    8. '   ' → logprob: -18.2500057220459
    9. '")' → logprob: -18.3750057220459
    10. '<=' → logprob: -18.5000057220459

Token 111: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03806249052286148
    2. '<=' → logprob: -3.288062572479248
    3. '()' → logprob: -11.66306209564209
    4. ')' → logprob: -11.91306209564209
    5. ' ' → logprob: -12.91306209564209
    6. ')<=' → logprob: -12.91306209564209
    7. ']<=' → logprob: -15.53806209564209
    8. '   ' → logprob: -15.91306209564209
    9. '```' → logprob: -16.163063049316406
    10. ' ' → logprob: -16.663063049316406

Token 112: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.693147599697113
    2. ' d' → logprob: -0.693147599697113
    3. ' ' → logprob: -15.568147659301758
    4. '	d' → logprob: -16.193147659301758
    5. ' ' → logprob: -16.943147659301758
    6. ')d' → logprob: -19.068147659301758
    7. '(d' → logprob: -19.568147659301758
    8. '   ' → logprob: -19.693147659301758
    9. '_d' → logprob: -20.068147659301758
    10. '  ' → logprob: -20.318147659301758

Token 113: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4937741160392761
    2. '
' → logprob: -0.9937741160392761
    3. '\' → logprob: -5.493773937225342
    4. '<|end|>' → logprob: -5.493773937225342
    5. '()' → logprob: -5.618773937225342
    6. '

' → logprob: -5.743773937225342
    7. '(
' → logprob: -6.368773937225342
    8. '\n' → logprob: -7.118773937225342
    9. '(' → logprob: -7.618773937225342
    10. '```' → logprob: -7.743773937225342

Token 114: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005149058997631073
    2. 'a' → logprob: -8.75051498413086
    3. 'if' → logprob: -9.12551498413086
    4. 'd' → logprob: -9.12551498413086
    5. 'for' → logprob: -9.25051498413086
    6. '```' → logprob: -11.12551498413086
    7. 'print' → logprob: -11.25051498413086
    8. 'n' → logprob: -12.87551498413086
    9. '#' → logprob: -13.00051498413086
    10. '\' → logprob: -13.50051498413086

Token 115: ' decide' (ID: 13001)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.18446704745292664
    2. 'main' → logprob: -2.059467077255249
    3. ' can' → logprob: -3.809467077255249
    4. ' main' → logprob: -4.30946683883667
    5. 'solve' → logprob: -6.55946683883667
    6. 'def' → logprob: -6.80946683883667
    7. 'is' → logprob: -7.30946683883667
    8. 'dfs' → logprob: -8.309467315673828
    9. '```' → logprob: -8.684467315673828
    10. ' solve' → logprob: -8.809467315673828

Token 116: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7304395437240601
    2. '(a' → logprob: -0.7304395437240601
    3. '_' → logprob: -4.10543966293335
    4. '(_' → logprob: -5.10543966293335
    5. '_result' → logprob: -5.73043966293335
    6. '_(' → logprob: -6.73043966293335
    7. '(A' → logprob: -7.35543966293335
    8. '_re' → logprob: -7.48043966293335
    9. '_path' → logprob: -7.60543966293335
    10. '_output' → logprob: -7.60543966293335

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016098834748845547
    2. ',b' → logprob: -9.125161170959473
    3. ' ,' → logprob: -10.375161170959473
    4. ',c' → logprob: -10.875161170959473
    5. ',
' → logprob: -14.125161170959473
    6. ',d' → logprob: -14.875161170959473
    7. ',a' → logprob: -15.125161170959473
    8. 'b' → logprob: -15.875161170959473
    9. '_,' → logprob: -16.125160217285156
    10. '‌,' → logprob: -17.000160217285156

Token 118: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20141489803791046
    2. ' b' → logprob: -1.701414942741394
    3. 'c' → logprob: -14.576415061950684
    4. ' ' → logprob: -14.576415061950684
    5. ' c' → logprob: -15.076415061950684
    6. '   ' → logprob: -16.451414108276367
    7. 'd' → logprob: -16.576414108276367
    8. ',b' → logprob: -16.951414108276367
    9. ')b' → logprob: -17.201414108276367
    10. ' d' → logprob: -17.576414108276367

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.179569077678025e-05
    2. ',c' → logprob: -10.625041961669922
    3. ' ,' → logprob: -11.000041961669922
    4. ',b' → logprob: -15.000041961669922
    5. ',
' → logprob: -15.125041961669922
    6. '   ' → logprob: -17.625041961669922
    7. 'c' → logprob: -17.625041961669922
    8. '‌,' → logprob: -17.625041961669922
    9. '),' → logprob: -18.000041961669922
    10. ',d' → logprob: -18.625041961669922

Token 120: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001170460251159966
    2. ' c' → logprob: -6.751170635223389
    3. ' ' → logprob: -16.626171112060547
    4. '	c' → logprob: -16.626171112060547
    5. ',c' → logprob: -17.501171112060547
    6. ')c' → logprob: -18.376171112060547
    7. 'd' → logprob: -18.751171112060547
    8. '   ' → logprob: -19.251171112060547
    9. ',' → logprob: -19.626171112060547
    10. '  ' → logprob: -20.251171112060547

Token 121: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.245724504580721e-05
    2. ',d' → logprob: -9.500092506408691
    3. ' ,' → logprob: -11.000092506408691
    4. 'd' → logprob: -14.375092506408691
    5. ',
' → logprob: -15.875092506408691
    6. ',b' → logprob: -17.875091552734375
    7. '),' → logprob: -18.000091552734375
    8. '‌,' → logprob: -18.500091552734375
    9. '```' → logprob: -18.750091552734375
    10. '   ' → logprob: -18.875091552734375

Token 122: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3868715465068817
    2. ' d' → logprob: -1.136871576309204
    3. ' ' → logprob: -14.886871337890625
    4. ')d' → logprob: -16.511871337890625
    5. '   ' → logprob: -17.261871337890625
    6. '	d' → logprob: -17.761871337890625
    7. '```' → logprob: -18.136871337890625
    8. ',d' → logprob: -18.136871337890625
    9. 'def' → logprob: -18.261871337890625
    10. '  ' → logprob: -18.386871337890625

Token 123: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -3.190178904333152e-05
    2. '):
' → logprob: -10.500031471252441
    3. ')' → logprob: -13.250031471252441
    4. ' ):' → logprob: -13.500031471252441
    5. ':' → logprob: -13.875031471252441
    6. '   ' → logprob: -16.000032424926758
    7. '():' → logprob: -18.125032424926758
    8. '):
' → logprob: -18.500032424926758
    9. '}:' → logprob: -18.625032424926758
    10. '>:' → logprob: -19.375032424926758

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011540171690285206
    2. ' if' → logprob: -4.511539936065674
    3. 'if' → logprob: -7.636539936065674
    4. '```' → logprob: -12.511540412902832
    5. '	if' → logprob: -12.761540412902832
    6. '   ' → logprob: -14.011540412902832
    7. ' return' → logprob: -14.136540412902832
    8. '    
' → logprob: -14.136540412902832
    9. '
' → logprob: -14.886540412902832
    10. '       ' → logprob: -16.386539459228516

Token 125: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0004429435357451439
    2. ' if' → logprob: -7.750442981719971
    3. '   ' → logprob: -11.375442504882812
    4. 'return' → logprob: -14.250442504882812
    5. '
' → logprob: -16.000442504882812
    6. '```' → logprob: -18.375442504882812
    7. ' ' → logprob: -18.500442504882812
    8. '	if' → logprob: -18.875442504882812
    9. 'for' → logprob: -19.000442504882812
    10. '    
' → logprob: -19.000442504882812

Token 126: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.023246755823493004
    2. 'can' → logprob: -3.7732467651367188
    3. '(can' → logprob: -14.273246765136719
    4. '	can' → logprob: -14.648246765136719
    5. '_can' → logprob: -16.02324676513672
    6. '   ' → logprob: -16.77324676513672
    7. ' could' → logprob: -18.02324676513672
    8. ' is' → logprob: -18.14824676513672
    9. '.can' → logprob: -18.27324676513672
    10. ' a' → logprob: -18.89824676513672

Token 127: '_direct' (ID: 80120)
  Prédit: '_direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direct' → logprob: -2.1888679839321412e-05
    2. 'direct' → logprob: -10.875021934509277
    3. '_' → logprob: -13.250021934509277
    4. '_d' → logprob: -15.125021934509277
    5. '_v' → logprob: -15.375021934509277
    6. '```' → logprob: -16.25002098083496
    7. '_direction' → logprob: -16.37502098083496
    8. ' _' → logprob: -16.50002098083496
    9. '_DIRECT' → logprob: -17.25002098083496
    10. ' direct' → logprob: -17.37502098083496

Token 128: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -4.320199877838604e-07
    2. 'reach' → logprob: -15.0
    3. '_direct' → logprob: -16.375
    4. 're' → logprob: -18.375
    5. '_' → logprob: -18.5
    6. '_access' → logprob: -18.625
    7. 'Reach' → logprob: -18.875
    8. '_read' → logprob: -19.875
    9. '_RE' → logprob: -19.875
    10. '_receive' → logprob: -20.0

Token 129: 'ach' (ID: 678)
  Prédit: 'ach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ach' → logprob: -0.00043853666284121573
    2. 'each' → logprob: -8.375438690185547
    3. 'a' → logprob: -8.750438690185547
    4. 'reach' → logprob: -10.250438690185547
    5. '(a' → logprob: -12.750438690185547
    6. 'ac' → logprob: -13.125438690185547
    7. 'atch' → logprob: -13.250438690185547
    8. 'ch' → logprob: -13.375438690185547
    9. 'acha' → logprob: -14.375438690185547
    10. 'arch' → logprob: -14.625438690185547

Token 130: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.50001049041748
    3. ' (' → logprob: -15.12501049041748
    4. 'a' → logprob: -16.875009536743164
    5. '```' → logprob: -18.750009536743164
    6. '(A' → logprob: -19.375009536743164
    7. '   ' → logprob: -19.625009536743164
    8. '(
' → logprob: -19.625009536743164
    9. '(c' → logprob: -20.000009536743164
    10. ')' → logprob: -20.250009536743164

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010521204239921644
    2. ',c' → logprob: -9.500104904174805
    3. ' ,' → logprob: -10.500104904174805
    4. 'c' → logprob: -13.750104904174805
    5. ',
' → logprob: -13.875104904174805
    6. 'a' → logprob: -14.750104904174805
    7. ',

' → logprob: -16.375104904174805
    8. '   ' → logprob: -16.750104904174805
    9. ')' → logprob: -16.750104904174805
    10. ',b' → logprob: -17.125104904174805

Token 132: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03368016332387924
    2. ' c' → logprob: -3.4086802005767822
    3. ' ' → logprob: -10.783679962158203
    4. ',' → logprob: -11.908679962158203
    5. '   ' → logprob: -13.658679962158203
    6. ')c' → logprob: -13.658679962158203
    7. ',c' → logprob: -13.658679962158203
    8. '	c' → logprob: -14.283679962158203
    9. 'd' → logprob: -14.533679962158203
    10. ')' → logprob: -14.533679962158203

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.7159857786027715e-05
    2. ' ,' → logprob: -10.625046730041504
    3. ',d' → logprob: -10.875046730041504
    4. 'd' → logprob: -13.125046730041504
    5. ')' → logprob: -13.875046730041504
    6. '),' → logprob: -14.625046730041504
    7. ',
' → logprob: -15.875046730041504
    8. ',

' → logprob: -16.37504768371582
    9. 'a' → logprob: -16.75004768371582
    10. '   ' → logprob: -17.12504768371582

Token 134: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0699496641755104
    2. ' d' → logprob: -2.6949496269226074
    3. ' ' → logprob: -12.319950103759766
    4. '   ' → logprob: -12.444950103759766
    5. ')' → logprob: -12.944950103759766
    6. '  ' → logprob: -14.694950103759766
    7. '	d' → logprob: -14.694950103759766
    8. ')d' → logprob: -14.819950103759766
    9. '
' → logprob: -15.069950103759766
    10. '```' → logprob: -15.569950103759766

Token 135: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002278542669955641
    2. '):
' → logprob: -8.875227928161621
    3. ')' → logprob: -9.375227928161621
    4. ':' → logprob: -13.250227928161621
    5. ' ):' → logprob: -13.625227928161621
    6. '   ' → logprob: -16.125226974487305
    7. '):

' → logprob: -17.500226974487305
    8. '):
' → logprob: -18.000226974487305
    9. '():' → logprob: -18.625226974487305
    10. ''):' → logprob: -19.000226974487305

Token 136: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03657319396734238
    2. ':' → logprob: -3.7865731716156006
    3. ':
' → logprob: -4.41157341003418
    4. '   ' → logprob: -8.28657341003418
    5. ' return' → logprob: -8.41157341003418
    6. ' or' → logprob: -8.53657341003418
    7. '
' → logprob: -8.66157341003418
    8. ':return' → logprob: -9.03657341003418
    9. '):
' → logprob: -9.66157341003418
    10. ',' → logprob: -11.16157341003418

Token 137: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13799327611923218
    2. ' return' → logprob: -2.512993335723877
    3. 'return' (adapté à ' return') → logprob: -3.137993335723877
    4. '
' → logprob: -5.512993335723877
    5. '   ' → logprob: -8.262992858886719
    6. '           ' → logprob: -9.637992858886719
    7. '\n' → logprob: -9.637992858886719
    8. 'print' → logprob: -11.012992858886719
    9. '\' → logprob: -11.137992858886719
    10. '	return' → logprob: -11.387992858886719

Token 138: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.005824394524097443
    2. ' "' → logprob: -6.380824565887451
    3. ''' → logprob: -6.630824565887451
    4. '"D' → logprob: -7.630824565887451
    5. '"I' → logprob: -7.755824565887451
    6. '   ' → logprob: -7.880824565887451
    7. '1' → logprob: -8.380824089050293
    8. '"C' → logprob: -8.505824089050293
    9. '"T' → logprob: -8.505824089050293
    10. '"A' → logprob: -9.005824089050293

Token 139: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.494995653629303
    2. 'YES' → logprob: -1.1199955940246582
    3. '"' → logprob: -2.994995594024658
    4. 'Y' → logprob: -5.744995594024658
    5. 'yes' → logprob: -6.619995594024658
    6. ''' → logprob: -6.744995594024658
    7. 'SAFE' → logprob: -6.869995594024658
    8. 'TA' → logprob: -7.119995594024658
    9. 'CAN' → logprob: -7.119995594024658
    10. 'Direct' → logprob: -7.119995594024658

Token 140: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.252566397190094
    2. '"
' → logprob: -1.5025663375854492
    3. '\n' → logprob: -7.627566337585449
    4. '   ' → logprob: -8.87756633758545
    5. '"\' → logprob: -12.12756633758545
    6. '"

' → logprob: -13.12756633758545
    7. '"
' → logprob: -13.50256633758545
    8. '")' → logprob: -13.62756633758545
    9. '
' → logprob: -15.75256633758545
    10. '"""
' → logprob: -16.377567291259766

Token 141: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003133155405521393
    2. '    
' → logprob: -6.128133296966553
    3. '
' → logprob: -7.628133296966553
    4. 'elif' → logprob: -8.878132820129395
    5. ' elif' → logprob: -9.128132820129395
    6. ' if' → logprob: -9.253132820129395
    7. '\n' → logprob: -9.378132820129395
    8. 'if' → logprob: -11.003132820129395
    9. '  
' → logprob: -11.628132820129395
    10. '   
' → logprob: -13.128132820129395

Token 142: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04917961359024048
    2. 'elif' (adapté à ' elif') → logprob: -3.6741795539855957
    3. ' elif' → logprob: -4.174179553985596
    4. 'if' → logprob: -5.174179553985596
    5. ' if' → logprob: -7.049179553985596
    6. '
' → logprob: -7.674179553985596
    7. '    
' → logprob: -8.424180030822754
    8. '\n' → logprob: -12.299180030822754
    9. '  
' → logprob: -12.424180030822754
    10. 'else' → logprob: -13.549180030822754

Token 143: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.16022443771362305
    2. ' can' → logprob: -1.910224437713623
    3. '(can' → logprob: -15.160224914550781
    4. '	can' → logprob: -16.41022491455078
    5. '_can' → logprob: -19.03522491455078
    6. '.can' → logprob: -19.28522491455078
    7. ' ' → logprob: -20.16022491455078
    8. ' could' → logprob: -20.41022491455078
    9. ' ' → logprob: -20.53522491455078
    10. '   ' → logprob: -21.16022491455078

Token 144: '_v' (ID: 5390)
  Prédit: '_v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_v' → logprob: -0.07396391779184341
    2. 'can' → logprob: -3.1989638805389404
    3. 'via' → logprob: -3.9489638805389404
    4. 'v' → logprob: -5.0739641189575195
    5. 'b' → logprob: -7.0739641189575195
    6. '(can' → logprob: -7.0739641189575195
    7. 'direct' → logprob: -7.9489641189575195
    8. 'not' → logprob: -7.9489641189575195
    9. 'vias' → logprob: -7.9489641189575195
    10. '(b' → logprob: -8.19896411895752

Token 145: 'ia' (ID: 535)
  Prédit: 'ia'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ia' → logprob: -4.4656579120783135e-05
    2. 'a' → logprob: -11.375044822692871
    3. 'i' → logprob: -11.875044822692871
    4. '(a' → logprob: -12.250044822692871
    5. '(' → logprob: -13.000044822692871
    6. ' ia' → logprob: -13.250044822692871
    7. '_a' → logprob: -13.250044822692871
    8. '_b' → logprob: -13.625044822692871
    9. '
' → logprob: -13.875044822692871
    10. '   ' → logprob: -14.000044822692871

Token 146: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0019300628919154406
    2. 'b' → logprob: -6.251930236816406
    3. '(b' → logprob: -13.751930236816406
    4. 'a' → logprob: -15.876930236816406
    5. ' b' → logprob: -16.501930236816406
    6. '_' → logprob: -17.376930236816406
    7. '	b' → logprob: -17.876930236816406
    8. ''b' → logprob: -18.251930236816406
    9. 'c' → logprob: -18.751930236816406
    10. 'B' → logprob: -18.876930236816406

Token 147: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0004336493439041078
    2. '(' → logprob: -7.750433444976807
    3. ' (' → logprob: -12.750433921813965
    4. '(A' → logprob: -18.00043296813965
    5. '(ai' → logprob: -18.50043296813965
    6. '```' → logprob: -18.62543296813965
    7. '(
' → logprob: -19.37543296813965
    8. '\(' → logprob: -19.37543296813965
    9. 'a' → logprob: -19.50043296813965
    10. '   ' → logprob: -19.75043296813965

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009688684367574751
    2. ',b' → logprob: -7.000968933105469
    3. ' ,' → logprob: -9.875968933105469
    4. ')' → logprob: -13.000968933105469
    5. ',
' → logprob: -13.875968933105469
    6. 'b' → logprob: -14.250968933105469
    7. ',c' → logprob: -14.500968933105469
    8. '(' → logprob: -14.750968933105469
    9. '(b' → logprob: -15.250968933105469
    10. '   ' → logprob: -15.250968933105469

Token 149: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002542728092521429
    2. ' b' → logprob: -6.002542495727539
    3. 'c' → logprob: -9.627542495727539
    4. ' c' → logprob: -13.877542495727539
    5. ' ' → logprob: -15.127542495727539
    6. ',b' → logprob: -17.00254249572754
    7. ')b' → logprob: -17.37754249572754
    8. 'd' → logprob: -17.62754249572754
    9. ',' → logprob: -17.87754249572754
    10. ')' → logprob: -18.00254249572754

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019710339256562293
    2. ')' → logprob: -9.000197410583496
    3. ' ,' → logprob: -9.750197410583496
    4. '),' → logprob: -12.250197410583496
    5. '(a' → logprob: -12.500197410583496
    6. ',c' → logprob: -13.125197410583496
    7. '(' → logprob: -13.250197410583496
    8. ',a' → logprob: -13.625197410583496
    9. 'a' → logprob: -14.500197410583496
    10. '(c' → logprob: -14.875197410583496

Token 151: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0052350712940096855
    2. ' c' → logprob: -5.255235195159912
    3. '	c' → logprob: -15.130234718322754
    4. ')c' → logprob: -15.130234718322754
    5. ' ' → logprob: -15.380234718322754
    6. ',' → logprob: -16.00523567199707
    7. ',c' → logprob: -16.13023567199707
    8. '<|end|>' → logprob: -16.63023567199707
    9. '   ' → logprob: -17.00523567199707
    10. '<c' → logprob: -17.13023567199707

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1994775377388578e-05
    2. ',d' → logprob: -11.750012397766113
    3. ' ,' → logprob: -13.125012397766113
    4. 'd' → logprob: -13.625012397766113
    5. ')' → logprob: -14.125012397766113
    6. '),' → logprob: -15.875012397766113
    7. ',
' → logprob: -18.375011444091797
    8. '```' → logprob: -18.750011444091797
    9. '،' → logprob: -19.125011444091797
    10. '   ' → logprob: -19.500011444091797

Token 153: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005532711511477828
    2. ' d' → logprob: -7.500553131103516
    3. ' ' → logprob: -16.125553131103516
    4. ')' → logprob: -16.625553131103516
    5. '   ' → logprob: -16.875553131103516
    6. ',' → logprob: -16.875553131103516
    7. ')d' → logprob: -17.625553131103516
    8. 'def' → logprob: -18.000553131103516
    9. '  ' → logprob: -18.625553131103516
    10. '	d' → logprob: -19.000553131103516

Token 154: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029788212850689888
    2. '):
' → logprob: -3.5297882556915283
    3. ')' → logprob: -10.40478801727295
    4. ':' → logprob: -12.02978801727295
    5. '   ' → logprob: -13.90478801727295
    6. '):

' → logprob: -15.27978801727295
    7. ':
' → logprob: -15.90478801727295
    8. ' ):' → logprob: -16.154788970947266
    9. '):
' → logprob: -16.654788970947266
    10. '       ' → logprob: -17.904788970947266

Token 155: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.265633419388905e-05
    2. ':' → logprob: -10.375062942504883
    3. ' return' → logprob: -11.250062942504883
    4. ':
' → logprob: -11.375062942504883
    5. 'return' → logprob: -13.000062942504883
    6. ':return' → logprob: -13.625062942504883
    7. '   ' → logprob: -13.875062942504883
    8. '
' → logprob: -14.000062942504883
    9. ',' → logprob: -14.750062942504883
    10. '<|end|>' → logprob: -15.000062942504883

Token 156: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.827384889125824
    2. ' return' → logprob: -1.2023849487304688
    3. '"' → logprob: -1.9523849487304688
    4. 'return' (adapté à ' return') → logprob: -2.3273849487304688
    5. '   ' → logprob: -3.9523849487304688
    6. ' "' → logprob: -6.702384948730469
    7. ''' → logprob: -7.077384948730469
    8. ' ' → logprob: -7.577384948730469
    9. '    ' → logprob: -8.452384948730469
    10. ' 
' → logprob: -8.452384948730469

Token 157: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.575971245765686
    2. ' "' → logprob: -0.825971245765686
    3. ''' → logprob: -10.575971603393555
    4. ' ' → logprob: -13.200971603393555
    5. '("' → logprob: -13.575971603393555
    6. ' ' → logprob: -13.700971603393555
    7. ' '' → logprob: -14.575971603393555
    8. '(' → logprob: -14.575971603393555
    9. 'Yes' → logprob: -15.200971603393555
    10. ' Yes' → logprob: -15.325971603393555

Token 158: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.00038241007132455707
    2. '"' → logprob: -7.875382423400879
    3. 'No' → logprob: -13.250382423400879
    4. ' Yes' → logprob: -15.625382423400879
    5. 'Ye' → logprob: -16.000381469726562
    6. ''' → logprob: -16.375381469726562
    7. '“Yes' → logprob: -17.000381469726562
    8. 'YES' → logprob: -17.500381469726562
    9. '.Yes' → logprob: -17.500381469726562
    10. 'Y' → logprob: -17.625381469726562

Token 159: '"
' (ID: 1092)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012976157013326883
    2. '"' → logprob: -6.751297473907471
    3. '
' → logprob: -9.376297950744629
    4. '"
' → logprob: -11.376297950744629
    5. '    
' → logprob: -11.501297950744629
    6. 'else' → logprob: -11.501297950744629
    7. '\n' → logprob: -12.501297950744629
    8. 'return' → logprob: -13.626297950744629
    9. ' else' → logprob: -13.751297950744629
    10. '")' → logprob: -13.876297950744629

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00015502817404922098
    2. 'else' → logprob: -9.500155448913574
    3. ' else' → logprob: -9.875155448913574
    4. '
' → logprob: -11.125155448913574
    5. '    
' → logprob: -11.750155448913574
    6. 'return' → logprob: -12.250155448913574
    7. ' return' → logprob: -14.250155448913574
    8. '	else' → logprob: -15.250155448913574
    9. '   ' → logprob: -16.625154495239258
    10. '  
' → logprob: -17.125154495239258

Token 161: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3348662257194519
    2. ' else' → logprob: -1.8348662853240967
    3. 'else' (adapté à ' else') → logprob: -2.0848662853240967
    4. 'return' → logprob: -7.584866046905518
    5. ' return' → logprob: -9.834866523742676
    6. '
' → logprob: -10.459866523742676
    7. '    
' → logprob: -11.709866523742676
    8. '	else' → logprob: -11.959866523742676
    9. '```' → logprob: -14.709866523742676
    10. 'e' → logprob: -14.834866523742676

Token 162: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2860279679298401
    2. ':
' → logprob: -1.9110279083251953
    3. '   ' → logprob: -2.7860279083251953
    4. '       ' → logprob: -3.2860279083251953
    5. ' return' → logprob: -7.411027908325195
    6. ':return' → logprob: -7.411027908325195
    7. '
' → logprob: -8.411027908325195
    8. '    ' → logprob: -9.661027908325195
    9. '<|end|>' → logprob: -9.786027908325195
    10. 'return' → logprob: -10.161027908325195

Token 163: '       ' (ID: 309)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.11195571720600128
    2. '       ' → logprob: -2.8619556427001953
    3. '   ' → logprob: -3.6119556427001953
    4. ' "' → logprob: -3.8619556427001953
    5. '    ' → logprob: -7.861955642700195
    6. ' return' → logprob: -8.611955642700195
    7. 'return' → logprob: -9.736955642700195
    8. ' ' → logprob: -10.361955642700195
    9. ''' → logprob: -10.986955642700195
    10. '        ' → logprob: -11.236955642700195

Token 164: ' return' (ID: 622)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.01884472370147705
    2. 'return' (adapté à ' return') → logprob: -4.2688446044921875
    3. ' return' → logprob: -5.8938446044921875
    4. ' "' → logprob: -6.6438446044921875
    5. '"No' → logprob: -7.6438446044921875
    6. '   ' → logprob: -9.143844604492188
    7. ' ' → logprob: -11.268844604492188
    8. ''' → logprob: -11.518844604492188
    9. '       ' → logprob: -14.143844604492188
    10. '	return' → logprob: -14.268844604492188

Token 165: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.002477796748280525
    2. ' "' → logprob: -6.002477645874023
    3. ''' → logprob: -13.627477645874023
    4. '"No' → logprob: -14.502477645874023
    5. ' ' → logprob: -16.752477645874023
    6. '("' → logprob: -16.877477645874023
    7. '`' → logprob: -17.627477645874023
    8. ' ' → logprob: -17.627477645874023
    9. '
' → logprob: -17.752477645874023
    10. '"""' → logprob: -18.252477645874023

Token 166: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -2.7729658540920354e-05
    2. '"No' → logprob: -10.500027656555176
    3. '"' → logprob: -16.250028610229492
    4. 'N' → logprob: -17.250028610229492
    5. ' No' → logprob: -17.375028610229492
    6. 'NO' → logprob: -19.750028610229492
    7. '```' → logprob: -20.250028610229492
    8. '_No' → logprob: -20.625028610229492
    9. '"N' → logprob: -20.875028610229492
    10. '>No' → logprob: -21.500028610229492

Token 167: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -2.2127087504486553e-05
    2. '"
' → logprob: -11.625021934509277
    3. '```' → logprob: -11.875021934509277
    4. '")' → logprob: -12.750021934509277
    5. ')"' → logprob: -13.375021934509277
    6. '"""' → logprob: -14.500021934509277
    7. '()"' → logprob: -14.625021934509277
    8. '"}' → logprob: -15.625021934509277
    9. '}"' → logprob: -16.000022888183594
    10. '"`' → logprob: -16.125022888183594

Token 168: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03857692703604698
    2. 'if' → logprob: -3.28857684135437
    3. 'input' → logprob: -8.03857707977295
    4. 'a' → logprob: -8.53857707977295
    5. 'print' → logprob: -11.41357707977295
    6. 'values' → logprob: -12.66357707977295
    7. 'for' → logprob: -13.16357707977295
    8. '#' → logprob: -15.53857707977295
    9. '```' → logprob: -15.91357707977295
    10. 'value' → logprob: -16.038576126098633

Token 169: ' output' (ID: 4733)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.004078639671206474
    2. ' main' → logprob: -5.5040788650512695
    3. 'run' → logprob: -16.254077911376953
    4. '_main' → logprob: -16.504077911376953
    5. 'def' → logprob: -17.254077911376953
    6. 'solve' → logprob: -17.504077911376953
    7. 'Main' → logprob: -18.629077911376953
    8. ' run' → logprob: -20.254077911376953
    9. 'process' → logprob: -20.254077911376953
    10. '	main' → logprob: -20.879077911376953

Token 170: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.10695349425077438
    2. '(' → logprob: -2.6069533824920654
    3. '_result' → logprob: -4.2319536209106445
    4. '(output' → logprob: -5.4819536209106445
    5. '(response' → logprob: -5.6069536209106445
    6. '(answer' → logprob: -5.6069536209106445
    7. '(s' → logprob: -7.9819536209106445
    8. 'result' → logprob: -8.356953620910645
    9. '(results' → logprob: -8.606953620910645
    10. '_' → logprob: -8.981953620910645

Token 171: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020632397383451462
    2. '):
' → logprob: -3.89563250541687
    3. ')' → logprob: -9.39563274383545
    4. '):
' → logprob: -12.64563274383545
    5. '):

' → logprob: -13.27063274383545
    6. '   ' → logprob: -13.52063274383545
    7. ':' → logprob: -15.02063274383545
    8. '(result' → logprob: -15.02063274383545
    9. ' ):' → logprob: -15.89563274383545
    10. 'result' → logprob: -16.520631790161133

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014642698224633932
    2. ' print' → logprob: -7.001464366912842
    3. 'print' → logprob: -7.501464366912842
    4. '```' → logprob: -15.001463890075684
    5. '   ' → logprob: -18.37646484375
    6. '	print' → logprob: -18.75146484375
    7. '    
' → logprob: -19.12646484375
    8. '    ' → logprob: -19.12646484375
    9. '`' → logprob: -19.87646484375
    10. '       ' → logprob: -20.25146484375

Token 173: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00012964145571459085
    2. ' print' → logprob: -9.000129699707031
    3. '   ' → logprob: -12.000129699707031
    4. 'pr' → logprob: -18.12512969970703
    5. '```' → logprob: -18.75012969970703
    6. 'prin' → logprob: -19.62512969970703
    7. '	print' → logprob: -22.00012969970703
    8. 'pri' → logprob: -22.12512969970703
    9. 'prit' → logprob: -22.62512969970703
    10. '    
' → logprob: -23.25012969970703

Token 174: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0032525737769901752
    2. '(' → logprob: -5.7532525062561035
    3. 'result' → logprob: -9.503252983093262
    4. '()' → logprob: -17.003252029418945
    5. '=result' → logprob: -17.128252029418945
    6. '(f' → logprob: -17.378252029418945
    7. '(
' → logprob: -17.378252029418945
    8. '(results' → logprob: -17.503252029418945
    9. '(resultado' → logprob: -17.753252029418945
    10. ',result' → logprob: -18.003252029418945

Token 175: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.625
    3. '())' → logprob: -16.5
    4. '()' → logprob: -16.75
    5. ')
' → logprob: -17.0
    6. ')`' → logprob: -18.5
    7. '")' → logprob: -19.125
    8. '')' → logprob: -19.375
    9. '))' → logprob: -19.5
    10. '`)' → logprob: -19.875

Token 176: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018153218552470207
    2. 'if' → logprob: -4.018153190612793
    3. '
' → logprob: -13.643153190612793
    4. '    
' → logprob: -14.518153190612793
    5. '```' → logprob: -14.643153190612793
    6. 'a' → logprob: -15.143153190612793
    7. ' if' → logprob: -15.393153190612793
    8. 'input' → logprob: -15.768153190612793
    9. '  
' → logprob: -15.768153190612793
    10. 'for' → logprob: -15.893153190612793

Token 177: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.006734795868396759
    2. ' main' → logprob: -5.006734848022461
    3. 'def' → logprob: -11.381734848022461
    4. '_main' → logprob: -12.131734848022461
    5. 'run' → logprob: -13.381734848022461
    6. '
' → logprob: -13.881734848022461
    7. ' run' → logprob: -17.13173484802246
    8. ' def' → logprob: -17.38173484802246
    9. 'Main' → logprob: -17.50673484802246
    10. 'process' → logprob: -17.75673484802246

Token 178: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.796184723294573e-06
    2. ' ():' → logprob: -12.500005722045898
    3. '():
' → logprob: -13.250005722045898
    4. '()' → logprob: -15.750005722045898
    5. '(' → logprob: -16.5000057220459
    6. '(":' → logprob: -18.7500057220459
    7. '():

' → logprob: -19.1250057220459
    8. '():
' → logprob: -19.2500057220459
    9. '(:' → logprob: -19.3750057220459
    10. ':' → logprob: -19.6250057220459

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006492258049547672
    2. 'input' → logprob: -5.3814921379089355
    3. ' input' → logprob: -6.6314921379089355
    4. 'values' → logprob: -8.131492614746094
    5. ' values' → logprob: -8.381492614746094
    6. 'inputs' → logprob: -11.256492614746094
    7. ' inputs' → logprob: -11.506492614746094
    8. '	values' → logprob: -13.506492614746094
    9. '	input' → logprob: -13.881492614746094
    10. '    
' → logprob: -14.256492614746094

Token 180: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.07832954823970795
    2. ' input' → logprob: -3.328329563140869
    3. 'values' → logprob: -3.703329563140869
    4. ' values' → logprob: -5.078329563140869
    5. 'inputs' → logprob: -5.203329563140869
    6. '   ' → logprob: -6.328329563140869
    7. ' inputs' → logprob: -7.203329563140869
    8. 'vals' → logprob: -8.328329086303711
    9. 'inp' → logprob: -8.703329086303711
    10. ' vals' → logprob: -9.453329086303711

Token 181: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.005236479919403791
    2. '_' → logprob: -5.255236625671387
    3. '_string' → logprob: -14.005236625671387
    4. '_s' → logprob: -14.380236625671387
    5. '_line' → logprob: -14.755236625671387
    6. '_input' → logprob: -15.380236625671387
    7. '_=' → logprob: -15.630236625671387
    8. '_data' → logprob: -15.755236625671387
    9. 'str' → logprob: -15.880236625671387
    10. ' _' → logprob: -16.13023567199707

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868853747844696
    2. '=' → logprob: -1.136885404586792
    3. '=input' → logprob: -11.636885643005371
    4. ')' → logprob: -12.511885643005371
    5. '()' → logprob: -14.386885643005371
    6. '(' → logprob: -14.511885643005371
    7. '   ' → logprob: -14.886885643005371
    8. ' =)' → logprob: -16.011884689331055
    9. '	' → logprob: -16.386884689331055
    10. ' ' → logprob: -16.511884689331055

Token 183: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.4741712808609009
    2. 'read' → logprob: -0.9741712808609009
    3. ' input' → logprob: -9.84917163848877
    4. 'input' → logprob: -10.09917163848877
    5. '	read' → logprob: -15.47417163848877
    6. ' readline' → logprob: -16.349170684814453
    7. '(read' → logprob: -16.724170684814453
    8. '   ' → logprob: -17.224170684814453
    9. '.read' → logprob: -18.724170684814453
    10. ' ' → logprob: -18.724170684814453

Token 184: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.5301528573036194
    2. '()' → logprob: -0.9051528573036194
    3. '_' → logprob: -5.030152797698975
    4. '()
' → logprob: -8.780153274536133
    5. 'input' → logprob: -8.905153274536133
    6. '())' → logprob: -9.905153274536133
    7. ')' → logprob: -10.280153274536133
    8. 'Input' → logprob: -11.405153274536133
    9. '_line' → logprob: -11.530153274536133
    10. '_Input' → logprob: -11.780153274536133

Token 185: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.629921436891891e-05
    2. '()
' → logprob: -10.62502670288086
    3. '()

' → logprob: -13.62502670288086
    4. '())' → logprob: -15.37502670288086
    5. ' ()' → logprob: -16.50002670288086
    6. '().' → logprob: -16.75002670288086
    7. '()`' → logprob: -16.87502670288086
    8. '(' → logprob: -16.87502670288086
    9. ')' → logprob: -17.12502670288086
    10. '()
' → logprob: -17.25002670288086

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023940695449709892
    2. 'values' → logprob: -4.023940563201904
    3. '    
' → logprob: -5.898940563201904
    4. '
' → logprob: -7.023940563201904
    5. ' values' → logprob: -7.398940563201904
    6. '(values' → logprob: -7.648940563201904
    7. '	values' → logprob: -7.648940563201904
    8. '<|end|>' → logprob: -8.273941040039062
    9. '.values' → logprob: -8.898941040039062
    10. '_values' → logprob: -9.148941040039062

Token 187: ' values' (ID: 4824)
  Prédit: ' values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.39164042472839355
    2. 'values' (adapté à ' values') → logprob: -1.1416404247283936
    3. '   ' → logprob: -5.391640663146973
    4. '	values' → logprob: -8.766640663146973
    5. '_values' → logprob: -11.391640663146973
    6. '.values' → logprob: -11.391640663146973
    7. 'vals' → logprob: -12.016640663146973
    8. '(values' → logprob: -12.266640663146973
    9. ' vals' → logprob: -12.516640663146973
    10. '    ' → logprob: -13.391640663146973

Token 188: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326258182525635
    2. '=' → logprob: -1.3132625818252563
    3. ',' → logprob: -14.938262939453125
    4. ')' → logprob: -16.188262939453125
    5. 's' → logprob: -16.313262939453125
    6. '_' → logprob: -16.563262939453125
    7. '   ' → logprob: -16.563262939453125
    8. ' ' → logprob: -17.063262939453125
    9. '	' → logprob: -17.188262939453125
    10. '＝' → logprob: -17.438262939453125

Token 189: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.08376095443964005
    2. ' parse' → logprob: -2.583760976791382
    3. 'list' → logprob: -5.583760738372803
    4. ' list' → logprob: -6.833760738372803
    5. '   ' → logprob: -10.708761215209961
    6. '(parse' → logprob: -14.083761215209961
    7. '	parse' → logprob: -14.833761215209961
    8. ' ' → logprob: -15.458761215209961
    9. '=parse' → logprob: -15.833761215209961
    10. 'tuple' → logprob: -16.33376121520996

Token 190: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00013452880375552922
    2. '(input' → logprob: -9.125134468078613
    3. '_values' → logprob: -11.000134468078613
    4. 'input' → logprob: -12.000134468078613
    5. '_' → logprob: -13.125134468078613
    6. '_inputs' → logprob: -15.625134468078613
    7. '(' → logprob: -15.750134468078613
    8. '_output' → logprob: -16.25013542175293
    9. '=input' → logprob: -17.12513542175293
    10. '_value' → logprob: -17.12513542175293

Token 191: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -5.1928003813372925e-05
    2. '(' → logprob: -9.875051498413086
    3. ' (' → logprob: -15.000051498413086
    4. ',input' → logprob: -16.375051498413086
    5. '(output' → logprob: -17.625051498413086
    6. '(
' → logprob: -17.625051498413086
    7. '=input' → logprob: -17.750051498413086
    8. '(user' → logprob: -19.500051498413086
    9. '(inp' → logprob: -19.500051498413086
    10. '(inputs' → logprob: -19.625051498413086

Token 192: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.4021237802808173e-05
    2. 'str' → logprob: -11.750014305114746
    3. ')' → logprob: -12.125014305114746
    4. ')_' → logprob: -14.875014305114746
    5. '_' → logprob: -16.00001335144043
    6. '```' → logprob: -17.12501335144043
    7. '_)' → logprob: -17.62501335144043
    8. 'Str' → logprob: -17.75001335144043
    9. ''_' → logprob: -18.25001335144043
    10. '_STR' → logprob: -18.37501335144043

Token 193: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05550149083137512
    2. ')
' → logprob: -2.9305014610290527
    3. '   ' → logprob: -7.805501461029053
    4. '()' → logprob: -8.680501937866211
    5. '()
' → logprob: -11.055501937866211
    6. '())' → logprob: -11.555501937866211
    7. '())
' → logprob: -12.055501937866211
    8. ' ' → logprob: -12.680501937866211
    9. ' )' → logprob: -13.305501937866211
    10. ')
' → logprob: -13.305501937866211

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1182328313589096
    2. 'a' → logprob: -2.4932327270507812
    3. ' a' → logprob: -3.6182327270507812
    4. '    
' → logprob: -6.743232727050781
    5. 'values' → logprob: -8.368232727050781
    6. '
' → logprob: -9.368232727050781
    7. ',a' → logprob: -9.493232727050781
    8. '[a' → logprob: -9.743232727050781
    9. ')' → logprob: -9.993232727050781
    10. ',' → logprob: -10.243232727050781

Token 195: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.020638704299926758
    2. ' a' → logprob: -3.8956387042999268
    3. '   ' → logprob: -9.395638465881348
    4. 'assigned' → logprob: -12.645638465881348
    5. '[a' → logprob: -13.145638465881348
    6. '    
' → logprob: -13.645638465881348
    7. ' assigned' → logprob: -13.770638465881348
    8. '	a' → logprob: -13.895638465881348
    9. 'values' → logprob: -14.020638465881348
    10. '(a' → logprob: -14.020638465881348

Token 196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8670179997570813e-05
    2. ',b' → logprob: -11.125019073486328
    3. ' ,' → logprob: -12.750019073486328
    4. '=' → logprob: -15.000019073486328
    5. ',a' → logprob: -15.125019073486328
    6. 'b' → logprob: -16.000019073486328
    7. 'a' → logprob: -16.250019073486328
    8. ',
' → logprob: -17.000019073486328
    9. '_,' → logprob: -17.625019073486328
    10. ' =' → logprob: -17.625019073486328

Token 197: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.012516596354544163
    2. ' b' → logprob: -4.387516498565674
    3. '*b' → logprob: -12.637516975402832
    4. '   ' → logprob: -13.887516975402832
    5. 'assign' → logprob: -13.887516975402832
    6. '*' → logprob: -14.512516975402832
    7. 'values' → logprob: -14.512516975402832
    8. 'a' → logprob: -14.887516975402832
    9. ' ' → logprob: -15.387516975402832
    10. ' *' → logprob: -16.012516021728516

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.613945101387799e-05
    2. ',c' → logprob: -9.750085830688477
    3. ' ,' → logprob: -10.750085830688477
    4. 'c' → logprob: -12.375085830688477
    5. '=' → logprob: -13.125085830688477
    6. ' =' → logprob: -17.250085830688477
    7. '‌,' → logprob: -17.375085830688477
    8. ',
' → logprob: -17.500085830688477
    9. '_,' → logprob: -18.250085830688477
    10. ' c' → logprob: -18.625085830688477

Token 199: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00033546582562848926
    2. ' c' → logprob: -8.000335693359375
    3. '   ' → logprob: -18.500335693359375
    4. '	c' → logprob: -19.000335693359375
    5. '*c' → logprob: -19.750335693359375
    6. '
' → logprob: -20.250335693359375
    7. '  ' → logprob: -20.500335693359375
    8. ',c' → logprob: -20.500335693359375
    9. ' ' → logprob: -20.625335693359375
    10. '_c' → logprob: -21.000335693359375

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06635117530822754
    2. '=' → logprob: -2.8163511753082275
    3. ' =' → logprob: -5.441350936889648
    4. ' ,' → logprob: -10.566350936889648
    5. ',d' → logprob: -12.316350936889648
    6. 'd' → logprob: -12.816350936889648
    7. '   ' → logprob: -13.566350936889648
    8. '```' → logprob: -14.191350936889648
    9. 's' → logprob: -14.316350936889648
    10. '<|end|>' → logprob: -14.441350936889648

Token 201: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0019286326132714748
    2. ' d' → logprob: -6.251928806304932
    3. '   ' → logprob: -17.001928329467773
    4. ' ' → logprob: -18.001928329467773
    5. '  ' → logprob: -18.376928329467773
    6. '	d' → logprob: -19.501928329467773
    7. '
' → logprob: -21.126928329467773
    8. 'def' → logprob: -21.251928329467773
    9. '<|end|>' → logprob: -21.251928329467773
    10. '    ' → logprob: -21.501928329467773

Token 202: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020732134580612
    2. '=' → logprob: -2.3502073287963867
    3. ',' → logprob: -14.850207328796387
    4. '   ' → logprob: -16.35020637512207
    5. ' ' → logprob: -16.72520637512207
    6. ' =
' → logprob: -16.85020637512207
    7. ')' → logprob: -17.47520637512207
    8. ' =)' → logprob: -17.85020637512207
    9. '=

' → logprob: -18.22520637512207
    10. '    ' → logprob: -18.47520637512207

Token 203: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.044819753617048264
    2. ' assign' → logprob: -3.1698198318481445
    3. 'values' → logprob: -7.1698198318481445
    4. ' values' → logprob: -7.2948198318481445
    5. ' list' → logprob: -8.419819831848145
    6. 'list' → logprob: -8.919819831848145
    7. ' tuple' → logprob: -12.169819831848145
    8. '   ' → logprob: -12.294819831848145
    9. 'tuple' → logprob: -12.919819831848145
    10. '(assign' → logprob: -13.044819831848145

Token 204: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0002557369298301637
    2. 'values' → logprob: -8.500255584716797
    3. '(values' → logprob: -9.875255584716797
    4. ' values' → logprob: -15.000255584716797
    5. 's' → logprob: -15.375255584716797
    6. '_VALUES' → logprob: -16.500255584716797
    7. '	values' → logprob: -16.750255584716797
    8. 'Values' → logprob: -16.875255584716797
    9. '(' → logprob: -18.000255584716797
    10. '_vals' → logprob: -18.625255584716797

Token 205: '(values' (ID: 40883)
  Prédit: '(values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(values' → logprob: -3.786196975852363e-05
    2. '(list' → logprob: -10.500038146972656
    3. 'values' → logprob: -11.500038146972656
    4. '(' → logprob: -16.750038146972656
    5. '(tuple' → logprob: -17.375038146972656
    6. '(next' → logprob: -17.750038146972656
    7. ' values' → logprob: -19.500038146972656
    8. '	values' → logprob: -19.500038146972656
    9. 'list' → logprob: -19.750038146972656
    10. '(vals' → logprob: -20.500038146972656

Token 206: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026567510794848204
    2. ')
' → logprob: -6.002656936645508
    3. '   ' → logprob: -8.627656936645508
    4. ' )' → logprob: -13.502656936645508
    5. ' ' → logprob: -15.752656936645508
    6. '
' → logprob: -15.752656936645508
    7. ')

' → logprob: -16.127656936645508
    8. ')
' → logprob: -16.377656936645508
    9. '))' → logprob: -17.627656936645508
    10. ' )
' → logprob: -17.752656936645508

Token 207: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04341726005077362
    2. ' result' → logprob: -3.79341721534729
    3. 'result' → logprob: -3.91841721534729
    4. '
' → logprob: -9.918416976928711
    5. '    
' → logprob: -10.918416976928711
    6. '	result' → logprob: -11.168416976928711
    7. '```' → logprob: -12.418416976928711
    8. ')' → logprob: -12.543416976928711
    9. ',result' → logprob: -13.043416976928711
    10. '<|end|>' → logprob: -13.293416976928711

Token 208: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -1.652451464906335e-05
    2. 'res' → logprob: -11.500016212463379
    3. ' result' → logprob: -12.750016212463379
    4. '   ' → logprob: -13.250016212463379
    5. 'print' → logprob: -13.375016212463379
    6. 'answer' → logprob: -16.500017166137695
    7. 'output' → logprob: -17.625017166137695
    8. '    
' → logprob: -17.875017166137695
    9. '```' → logprob: -19.000017166137695
    10. '	result' → logprob: -19.500017166137695

Token 209: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326761841773987
    2. '=' → logprob: -1.3132675886154175
    3. ')' → logprob: -12.188267707824707
    4. ' ' → logprob: -14.813267707824707
    5. ')=' → logprob: -16.43826675415039
    6. ' =)' → logprob: -16.56326675415039
    7. ' =
' → logprob: -16.81326675415039
    8. ',' → logprob: -16.93826675415039
    9. ' )' → logprob: -17.56326675415039
    10. '<|end|>' → logprob: -17.68826675415039

Token 210: ' decide' (ID: 13001)
  Prédit: 'dec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dec' → logprob: -0.0011711753904819489
    2. ' decide' → logprob: -6.751171112060547
    3. ' dec' → logprob: -14.501171112060547
    4. '   ' → logprob: -15.376171112060547
    5. '(dec' → logprob: -16.876171112060547
    6. ' decid' → logprob: -17.126171112060547
    7. ' ' → logprob: -17.751171112060547
    8. 'decode' → logprob: -18.001171112060547
    9. 'det' → logprob: -18.126171112060547
    10. 'Dec' → logprob: -18.251171112060547

Token 211: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0006382156861945987
    2. '(' → logprob: -7.375638008117676
    3. ' (' → logprob: -11.375638008117676
    4. '(
' → logprob: -16.500638961791992
    5. '(A' → logprob: -17.375638961791992
    6. '   ' → logprob: -18.375638961791992
    7. '((' → logprob: -18.625638961791992
    8. ' ' → logprob: -18.750638961791992
    9. '```' → logprob: -19.375638961791992
    10. '(

' → logprob: -19.500638961791992

Token 212: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5570885807392187e-05
    2. ',b' → logprob: -11.125015258789062
    3. ' ,' → logprob: -14.500015258789062
    4. ',
' → logprob: -16.000015258789062
    5. 'b' → logprob: -16.500015258789062
    6. '‌,' → logprob: -18.500015258789062
    7. ',

' → logprob: -19.000015258789062
    8. ')' → logprob: -19.375015258789062
    9. ',",' → logprob: -20.375015258789062
    10. ',\
' → logprob: -20.500015258789062

Token 213: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03804183006286621
    2. ' b' → logprob: -3.288041830062866
    3. '<|end|>' → logprob: -15.538042068481445
    4. ' ' → logprob: -15.788042068481445
    5. ')b' → logprob: -16.663042068481445
    6. ',b' → logprob: -16.913042068481445
    7. '	b' → logprob: -18.038042068481445
    8. ',' → logprob: -18.288042068481445
    9. ')' → logprob: -18.288042068481445
    10. '   ' → logprob: -18.663042068481445

Token 214: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.36574100604048e-06
    2. ' ,' → logprob: -12.625004768371582
    3. ',c' → logprob: -14.500004768371582
    4. ',
' → logprob: -15.375004768371582
    5. ',b' → logprob: -16.250003814697266
    6. 'c' → logprob: -16.375003814697266
    7. 'b' → logprob: -17.125003814697266
    8. '‌,' → logprob: -17.500003814697266
    9. ')' → logprob: -19.125003814697266
    10. '```' → logprob: -19.250003814697266

Token 215: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0009115827269852161
    2. ' c' → logprob: -7.000911712646484
    3. '	c' → logprob: -18.375911712646484
    4. ' ' → logprob: -18.375911712646484
    5. '   ' → logprob: -18.750911712646484
    6. ')c' → logprob: -19.375911712646484
    7. '  ' → logprob: -20.750911712646484
    8. ',c' → logprob: -20.750911712646484
    9. '<|end|>' → logprob: -21.750911712646484
    10. '```' → logprob: -22.125911712646484

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0339031834737398e-05
    2. ',d' → logprob: -11.250020027160645
    3. 'd' → logprob: -12.250020027160645
    4. ' ,' → logprob: -13.000020027160645
    5. ')' → logprob: -16.25002098083496
    6. ',
' → logprob: -16.37502098083496
    7. '```' → logprob: -17.00002098083496
    8. '),' → logprob: -17.62502098083496
    9. '   ' → logprob: -18.87502098083496
    10. '4' → logprob: -19.00002098083496

Token 217: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.003178782993927598
    2. ' d' → logprob: -5.753178596496582
    3. '   ' → logprob: -14.003178596496582
    4. ' ' → logprob: -15.753178596496582
    5. ')d' → logprob: -17.0031795501709
    6. '  ' → logprob: -17.2531795501709
    7. '	d' → logprob: -17.6281795501709
    8. ')' → logprob: -18.2531795501709
    9. '4' → logprob: -18.8781795501709
    10. '```' → logprob: -19.6281795501709

Token 218: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.506661833962426e-05
    2. ')
' → logprob: -9.37508487701416
    3. ' )' → logprob: -16.125085830688477
    4. '   ' → logprob: -16.875085830688477
    5. ')
' → logprob: -18.250085830688477
    6. ')

' → logprob: -18.625085830688477
    7. '))' → logprob: -18.875085830688477
    8. '),' → logprob: -19.375085830688477
    9. ')`' → logprob: -19.625085830688477
    10. ' ' → logprob: -19.750085830688477

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004928935784846544
    2. '
' → logprob: -5.754929065704346
    3. 'output' → logprob: -6.754929065704346
    4. '    
' → logprob: -7.879929065704346
    5. ' output' → logprob: -8.879928588867188
    6. '	output' → logprob: -11.379928588867188
    7. '<|end|>' → logprob: -11.754928588867188
    8. '```' → logprob: -11.754928588867188
    9. '  
' → logprob: -12.129928588867188
    10. '(output' → logprob: -12.129928588867188

Token 220: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.02975071594119072
    2. ' output' → logprob: -3.5297508239746094
    3. '(output' → logprob: -16.15475082397461
    4. '   ' → logprob: -16.52975082397461
    5. '_output' → logprob: -16.90475082397461
    6. '	output' → logprob: -17.90475082397461
    7. '$output' → logprob: -19.40475082397461
    8. '.output' → logprob: -19.77975082397461
    9. 'Output' → logprob: -20.27975082397461
    10. 'outputs' → logprob: -21.15475082397461

Token 221: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0052354102954268456
    2. '(' → logprob: -5.255235195159912
    3. '(results' → logprob: -14.63023567199707
    4. ' (' → logprob: -15.00523567199707
    5. '(resultado' → logprob: -15.25523567199707
    6. '(res' → logprob: -15.75523567199707
    7. '=result' → logprob: -16.13023567199707
    8. '(

' → logprob: -16.25523567199707
    9. '(response' → logprob: -16.63023567199707
    10. '(
' → logprob: -16.75523567199707

Token 222: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.729906196298543e-06
    2. ')
' → logprob: -11.625009536743164
    3. '()' → logprob: -14.375009536743164
    4. ' )' → logprob: -15.875009536743164
    5. '())' → logprob: -16.625009536743164
    6. ')

' → logprob: -17.500009536743164
    7. ')`' → logprob: -18.875009536743164
    8. '))' → logprob: -19.750009536743164
    9. '   ' → logprob: -20.000009536743164
    10. ')#' → logprob: -20.750009536743164

Token 223: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0019175723427906632
    2. 'main' → logprob: -6.626917362213135
    3. '
' → logprob: -7.501917362213135
    4. ' if' → logprob: -10.876917839050293
    5. '<|end|>' → logprob: -11.751917839050293
    6. '```' → logprob: -11.876917839050293
    7. '\n' → logprob: -13.251917839050293
    8. '    
' → logprob: -13.751917839050293
    9. '  
' → logprob: -14.376917839050293
    10. ' main' → logprob: -14.626917839050293

Token 224: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 222
Tokens correctement prédits (1ère position, stricte): 107
Tokens correctement prédits (1ère position, avec adaptation): 114
Tokens correctement prédits (top 10): 201
Précision stricte (1ère position): 48.20%
Précision adaptée (1ère position): 51.35%
Précision (top 10): 90.54%
================================================================================
