================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
x = lambda: int(__import__('builtins').input())
y = lambda: list(map(int, __import__('builtins').input().split()))
A = x()
_ = y()
B = []
is_over = 0

loop = True
while loop:
    found = 'no'
    idx = len(_) - 1
    while idx >= 0:
        if _[idx] == idx + 1:
            found = 'yes'
            B += [_[idx]]
            _ = _[:idx] + _[idx+1:]
            break
        idx -= 1
    if found == 'no':
        [print(-1), exit()]
    if not _:
        loop = False

[print(B[j]) for j in range(len(B)-1, -1, -1)]
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'x' (ID: 87)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' lambda' (ID: 27871)
  → Token d'amorce (pas de prédiction)

Token 3: ':' (ID: 25)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6187456846237183
    2. ' x' → logprob: -0.8687456846237183
    3. 'x' → logprob: -3.743745803833008
    4. '  ' → logprob: -5.118745803833008
    5. ' a' → logprob: -5.368745803833008
    6. ' space' → logprob: -6.493745803833008
    7. 'space' → logprob: -7.243745803833008
    8. ' ' → logprob: -7.368745803833008
    9. ''' → logprob: -7.493745803833008
    10. ' lambda' → logprob: -7.868745803833008

Token 4: ' int' (ID: 677)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9053754210472107
    2. ' ' → logprob: -1.0303754806518555
    3. ' True' → logprob: -2.0303754806518555
    4. '0' → logprob: -3.5303754806518555
    5. 'x' → logprob: -3.7803754806518555
    6. ' input' → logprob: -4.9053754806518555
    7. '1' → logprob: -4.9053754806518555
    8. ' None' → logprob: -5.1553754806518555
    9. ' (' → logprob: -5.4053754806518555
    10. ' []' → logprob: -5.6553754806518555

Token 5: '(__' (ID: 11782)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008020033710636199
    2. '.' → logprob: -7.375802040100098
    3. ' (' → logprob: -9.250802040100098
    4. '('' → logprob: -10.625802040100098
    5. '(
' → logprob: -11.250802040100098
    6. ' ' → logprob: -11.750802040100098
    7. ''' → logprob: -12.125802040100098
    8. '\(' → logprob: -12.250802040100098
    9. '()' → logprob: -12.375802040100098
    10. ')' → logprob: -12.625802040100098

Token 6: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6584106683731079
    2. 'built' → logprob: -0.7834106683731079
    3. 'stdin' → logprob: -4.908410549163818
    4. 'name' → logprob: -4.908410549163818
    5. 'input' → logprob: -5.533410549163818
    6. 'builtin' → logprob: -5.908410549163818
    7. 'file' → logprob: -6.658410549163818
    8. 'code' → logprob: -6.783410549163818
    9. 'build' → logprob: -7.533410549163818
    10. '_' → logprob: -8.033411026000977

Token 7: '__('' (ID: 54460)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013203292153775692
    2. '("("' → logprob: -5.263203144073486
    3. '('' → logprob: -5.388203144073486
    4. '__('' → logprob: -6.263203144073486
    5. '__("' → logprob: -7.888203144073486
    6. '<|end|>' → logprob: -8.888203620910645
    7. '("' → logprob: -9.013203620910645
    8. '(
' → logprob: -9.763203620910645
    9. '('__' → logprob: -9.888203620910645
    10. '__(
' → logprob: -9.888203620910645

Token 8: 'built' (ID: 81936)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.644877016544342
    2. 'm' → logprob: -1.0198769569396973
    3. 'sys' → logprob: -3.5198769569396973
    4. 'r' → logprob: -3.6448769569396973
    5. ''b' → logprob: -4.269876956939697
    6. 's' → logprob: -4.769876956939697
    7. 'sy' → logprob: -4.769876956939697
    8. ''s' → logprob: -5.144876956939697
    9. 'os' → logprob: -5.769876956939697
    10. ''r' → logprob: -5.894876956939697

Token 9: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0002075933152809739
    2. 'in' → logprob: -9.000207901000977
    3. 'i' → logprob: -9.500207901000977
    4. '__' → logprob: -12.000207901000977
    5. 's' → logprob: -13.625207901000977
    6. 'int' → logprob: -14.250207901000977
    7. 't' → logprob: -15.000207901000977
    8. '_ins' → logprob: -15.625207901000977
    9. 'b' → logprob: -16.125207901000977
    10. 'lib' → logprob: -16.375207901000977

Token 10: '').' (ID: 3426)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.4685363471508026
    2. '.' → logprob: -1.093536376953125
    3. ')' → logprob: -3.718536376953125
    4. '').' → logprob: -4.968536376953125
    5. '.)' → logprob: -6.343536376953125
    6. '')' → logprob: -6.843536376953125
    7. ''.' → logprob: -6.968536376953125
    8. ').__' → logprob: -6.968536376953125
    9. '.')' → logprob: -7.468536376953125
    10. '))' → logprob: -7.718536376953125

Token 11: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019735998939722776
    2. 'eval' → logprob: -7.001973628997803
    3. '__' → logprob: -7.876973628997803
    4. 'get' → logprob: -8.126973152160645
    5. 'int' → logprob: -8.126973152160645
    6. 'abs' → logprob: -10.376973152160645
    7. ' input' → logprob: -10.501973152160645
    8. 'exec' → logprob: -12.001973152160645
    9. 'globals' → logprob: -12.126973152160645
    10. 'ord' → logprob: -12.251973152160645

Token 12: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5307478904724121
    2. ')' → logprob: -1.780747890472412
    3. '()' → logprob: -1.905747890472412
    4. '(' → logprob: -2.405747890472412
    5. ')(' → logprob: -6.780747890472412
    6. '`()' → logprob: -7.280747890472412
    7. '(()' → logprob: -7.655747890472412
    8. '('' → logprob: -8.03074836730957
    9. ' ())' → logprob: -8.53074836730957
    10. '```' → logprob: -9.03074836730957

Token 13: 'y' (ID: 88)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010888058692216873
    2. '()' → logprob: -4.76088809967041
    3. '(
' → logprob: -6.26088809967041
    4. ')' → logprob: -10.01088809967041
    5. '('' → logprob: -10.13588809967041
    6. '(

' → logprob: -10.26088809967041
    7. '"' → logprob: -10.76088809967041
    8. '```' → logprob: -10.76088809967041
    9. ',' → logprob: -10.88588809967041
    10. '()
' → logprob: -10.88588809967041

Token 14: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008635488338768482
    2. '=' → logprob: -5.133635520935059
    3. ' (' → logprob: -7.133635520935059
    4. '+' → logprob: -7.883635520935059
    5. '.' → logprob: -8.008635520935059
    6. ')' → logprob: -8.008635520935059
    7. '()' → logprob: -8.758635520935059
    8. ' =' → logprob: -8.758635520935059
    9. '[' → logprob: -9.008635520935059
    10. ',' → logprob: -9.008635520935059

Token 15: ' lambda' (ID: 27871)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.22712445259094238
    2. 'x' → logprob: -1.9771244525909424
    3. ' lambda' → logprob: -3.3521244525909424
    4. 'lambda' → logprob: -3.6021244525909424
    5. ' ' → logprob: -6.352124214172363
    6. '(lambda' → logprob: -8.602124214172363
    7. 'int' → logprob: -8.852124214172363
    8. '0' → logprob: -9.352124214172363
    9. ' ()' → logprob: -9.727124214172363
    10. ' (' → logprob: -10.102124214172363

Token 16: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015540257096290588
    2. ' :' → logprob: -4.89054012298584
    3. '(lambda' → logprob: -5.51554012298584
    4. '()' → logprob: -6.64054012298584
    5. '():' → logprob: -6.89054012298584
    6. 'lambda' → logprob: -7.89054012298584
    7. ' ' → logprob: -8.01554012298584
    8. ' ()' → logprob: -8.51554012298584
    9. '(' → logprob: -8.51554012298584
    10. '=lambda' → logprob: -8.89054012298584

Token 17: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31415197253227234
    2. ' int' → logprob: -1.3141520023345947
    3. 'x' → logprob: -7.689151763916016
    4. ' x' → logprob: -7.814151763916016
    5. '(int' → logprob: -11.564151763916016
    6. '[int' → logprob: -12.064151763916016
    7. ' ' → logprob: -12.189151763916016
    8. ':int' → logprob: -13.064151763916016
    9. '=int' → logprob: -13.439151763916016
    10. '<int' → logprob: -13.689151763916016

Token 18: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08423226326704025
    2. '(range' → logprob: -2.5842323303222656
    3. '(__' → logprob: -6.334232330322266
    4. '()' → logprob: -6.709232330322266
    5. '(map' → logprob: -6.959232330322266
    6. '(int' → logprob: -7.709232330322266
    7. '('' → logprob: -7.959232330322266
    8. '(
' → logprob: -9.084232330322266
    9. '((' → logprob: -9.584232330322266
    10. '(eval' → logprob: -9.709232330322266

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.055008430033922195
    2. '(' → logprob: -2.9300084114074707
    3. '(
' → logprob: -9.430008888244629
    4. 'int' → logprob: -11.180008888244629
    5. '<int' → logprob: -11.680008888244629
    6. '=int' → logprob: -12.180008888244629
    7. '(str' → logprob: -12.305008888244629
    8. ',int' → logprob: -12.680008888244629
    9. '(lambda' → logprob: -13.055008888244629
    10. ')' → logprob: -13.180008888244629

Token 20: ',' (ID: 11)
  Prédit: '(__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(__' → logprob: -0.14891508221626282
    2. '(' → logprob: -2.6489150524139404
    3. '(input' → logprob: -3.0239150524139404
    4. ')(__' → logprob: -4.6489152908325195
    5. ',' → logprob: -6.1489152908325195
    6. ')' → logprob: -6.5239152908325195
    7. ',__' → logprob: -6.7739152908325195
    8. '(x' → logprob: -6.8989152908325195
    9. '__' → logprob: -7.6489152908325195
    10. '($__' → logprob: -7.7739152908325195

Token 21: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0351797379553318
    2. ' __' → logprob: -3.410179853439331
    3. 'input' → logprob: -6.910179615020752
    4. ' input' → logprob: -8.66018009185791
    5. 'x' → logprob: -8.78518009185791
    6. '(__' → logprob: -9.28518009185791
    7. '___' → logprob: -10.41018009185791
    8. ' x' → logprob: -10.78518009185791
    9. '__('' → logprob: -11.53518009185791
    10. '_input' → logprob: -12.16018009185791

Token 22: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.138715460896492
    2. ''import' → logprob: -2.7637155055999756
    3. '__' → logprob: -3.0137155055999756
    4. '_import' → logprob: -5.1387152671813965
    5. '.import' → logprob: -5.1387152671813965
    6. '__('' → logprob: -6.0137152671813965
    7. '.__' → logprob: -7.2637152671813965
    8. '-import' → logprob: -7.2637152671813965
    9. '.' → logprob: -7.8887152671813965
    10. '['' → logprob: -8.013715744018555

Token 23: '__('' (ID: 54460)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.479664146900177
    2. '__('' → logprob: -0.979664146900177
    3. '(' → logprob: -5.854664325714111
    4. '('__' → logprob: -6.354664325714111
    5. '__' → logprob: -8.604663848876953
    6. '(('' → logprob: -8.854663848876953
    7. '(','' → logprob: -9.229663848876953
    8. '>('' → logprob: -9.604663848876953
    9. '__(
' → logprob: -9.729663848876953
    10. '('').' → logprob: -9.729663848876953

Token 24: 'built' (ID: 81936)
  Prédit: 'built'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'built' → logprob: -0.47746872901916504
    2. ''b' → logprob: -0.977468729019165
    3. 'b' → logprob: -5.852468490600586
    4. ' built' → logprob: -8.227468490600586
    5. ''' → logprob: -9.977468490600586
    6. 'builtin' → logprob: -10.102468490600586
    7. '__('' → logprob: -10.352468490600586
    8. ''s' → logprob: -10.602468490600586
    9. 'sys' → logprob: -11.352468490600586
    10. '-built' → logprob: -11.477468490600586

Token 25: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.06772461533546448
    2. 'ils' → logprob: -3.0677247047424316
    3. 's' → logprob: -4.942724704742432
    4. 'uls' → logprob: -5.317724704742432
    5. 'uil' → logprob: -5.942724704742432
    6. ''s' → logprob: -6.067724704742432
    7. '__' → logprob: -6.942724704742432
    8. 'uilt' → logprob: -8.567724227905273
    9. '('' → logprob: -9.067724227905273
    10. 'ilst' → logprob: -9.067724227905273

Token 26: '').' (ID: 3426)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.6759950518608093
    2. '').' → logprob: -0.8009950518608093
    3. '.input' → logprob: -3.675995111465454
    4. '.' → logprob: -4.675994873046875
    5. ''.' → logprob: -5.800994873046875
    6. ')' → logprob: -6.425994873046875
    7. '.import' → logprob: -6.675994873046875
    8. ' ).' → logprob: -7.675994873046875
    9. '')' → logprob: -7.925994873046875
    10. ' ').' → logprob: -8.925994873046875

Token 27: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0003408263437449932
    2. ' input' → logprob: -8.000340461730957
    3. 'import' → logprob: -13.625340461730957
    4. '(input' → logprob: -14.250340461730957
    5. 'list' → logprob: -14.500340461730957
    6. '<input' → logprob: -14.500340461730957
    7. '[input' → logprob: -14.875340461730957
    8. 'inp' → logprob: -15.125340461730957
    9. 'int' → logprob: -15.250340461730957
    10. ' ' → logprob: -15.250340461730957

Token 28: '().' (ID: 1454)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.8867561221122742
    2. '()))' → logprob: -1.136756181716919
    3. '()' → logprob: -2.011756181716919
    4. '())' → logprob: -2.886756181716919
    5. '().' → logprob: -3.386756181716919
    6. '(' → logprob: -4.76175594329834
    7. '()['' → logprob: -5.13675594329834
    8. ')' → logprob: -5.26175594329834
    9. '().'' → logprob: -5.51175594329834
    10. ''))' → logprob: -5.63675594329834

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0010164948180317879
    2. 'strip' → logprob: -7.001016616821289
    3. ' split' → logprob: -9.376016616821289
    4. 'rstrip' → logprob: -11.001016616821289
    5. ')' → logprob: -13.251016616821289
    6. 's' → logprob: -14.376016616821289
    7. '(split' → logprob: -14.501016616821289
    8. 'spl' → logprob: -14.626016616821289
    9. ' ' → logprob: -15.626016616821289
    10. 'replace' → logprob: -16.25101661682129

Token 30: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.049119118601083755
    2. '()' → logprob: -3.174119234085083
    3. '())' → logprob: -5.674118995666504
    4. '))' → logprob: -6.674118995666504
    5. '(' → logprob: -7.674118995666504
    6. '('' → logprob: -7.799118995666504
    7. '()))
' → logprob: -8.799118995666504
    8. '())))' → logprob: -8.799118995666504
    9. ''))' → logprob: -9.174118995666504
    10. '()));' → logprob: -9.924118995666504

Token 31: 'A' (ID: 32)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0402179956436157
    2. 'x' → logprob: -1.1652179956436157
    3. '#' → logprob: -2.290217876434326
    4. '\n' → logprob: -2.915217876434326
    5. '()' → logprob: -3.415217876434326
    6. '<|end|>' → logprob: -3.540217876434326
    7. ')' → logprob: -3.665217876434326
    8. '(
' → logprob: -4.040217876434326
    9. '
' → logprob: -4.165217876434326
    10. '\' → logprob: -4.540217876434326

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7150264382362366
    2. '[' → logprob: -1.4650263786315918
    3. '=' → logprob: -1.5900263786315918
    4. ' ' → logprob: -3.590026378631592
    5. '.' → logprob: -4.215026378631592
    6. ',' → logprob: -4.340026378631592
    7. '_' → logprob: -4.465026378631592
    8. ')' → logprob: -5.590026378631592
    9. '=[]' → logprob: -7.090026378631592
    10. '  ' → logprob: -7.215026378631592

Token 33: ' x' (ID: 1215)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.8351820111274719
    2. 'y' → logprob: -1.0851819515228271
    3. ' []' → logprob: -2.085181951522827
    4. '[]' → logprob: -2.710181951522827
    5. ' [' → logprob: -3.960181951522827
    6. '[' → logprob: -5.460182189941406
    7. '[y' → logprob: -5.460182189941406
    8. 'lambda' → logprob: -5.460182189941406
    9. ' lambda' → logprob: -5.585182189941406
    10. ' __' → logprob: -7.835182189941406

Token 34: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027023784816265106
    2. '()' → logprob: -3.9020237922668457
    3. ')' → logprob: -5.402023792266846
    4. '[' → logprob: -7.902023792266846
    5. '(A' → logprob: -7.902023792266846
    6. '(
' → logprob: -8.152023315429688
    7. 'A' → logprob: -8.777023315429688
    8. '(x' → logprob: -9.152023315429688
    9. '```' → logprob: -9.652023315429688
    10. ',' → logprob: -9.652023315429688

Token 35: '_' (ID: 62)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.8311625719070435
    2. 'for' → logprob: -1.4561625719070435
    3. 'a' → logprob: -2.206162452697754
    4. 'b' → logprob: -2.331162452697754
    5. '[' → logprob: -2.831162452697754
    6. 'n' → logprob: -4.331162452697754
    7. 'd' → logprob: -4.706162452697754
    8. 'data' → logprob: -4.831162452697754
    9. '_' → logprob: -5.456162452697754
    10. ' for' → logprob: -5.581162452697754

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4968843162059784
    2. '=' → logprob: -0.9968843460083008
    3. '_' → logprob: -5.371884346008301
    4. 'A' → logprob: -5.371884346008301
    5. 'n' → logprob: -6.121884346008301
    6. 's' → logprob: -6.246884346008301
    7. 'x' → logprob: -6.246884346008301
    8. '_=' → logprob: -6.621884346008301
    9. 'a' → logprob: -6.996884346008301
    10. '=A' → logprob: -7.121884346008301

Token 37: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.38951218128204346
    2. ' y' → logprob: -1.1395121812820435
    3. 'x' → logprob: -7.264512062072754
    4. 'A' → logprob: -7.389512062072754
    5. ' A' → logprob: -8.139512062072754
    6. ' [' → logprob: -8.514512062072754
    7. '[y' → logprob: -8.764512062072754
    8. '[' → logprob: -9.264512062072754
    9. '[A' → logprob: -9.389512062072754
    10. ' ' → logprob: -9.389512062072754

Token 38: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.9888433093437925e-05
    2. '(' → logprob: -10.375040054321289
    3. '()
' → logprob: -12.500040054321289
    4. '())' → logprob: -13.625040054321289
    5. '(A' → logprob: -13.625040054321289
    6. '()

' → logprob: -14.375040054321289
    7. '()]' → logprob: -14.750040054321289
    8. '()<' → logprob: -15.375040054321289
    9. '()(' → logprob: -15.500040054321289
    10. ' ()' → logprob: -15.750040054321289

Token 39: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.6789973974227905
    2. 'result' → logprob: -1.8039973974227905
    3. 'b' → logprob: -2.17899751663208
    4. 'a' → logprob: -2.30399751663208
    5. 'r' → logprob: -2.42899751663208
    6. '[' → logprob: -3.05399751663208
    7. 'for' → logprob: -3.17899751663208
    8. 'n' → logprob: -3.17899751663208
    9. 's' → logprob: -3.42899751663208
    10. 'A' → logprob: -3.67899751663208

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12334572523832321
    2. '=' → logprob: -2.3733456134796143
    3. '(' → logprob: -4.373345851898193
    4. '()' → logprob: -4.748345851898193
    5. '<|end|>' → logprob: -7.123345851898193
    6. ' ' → logprob: -8.623345375061035
    7. ')' → logprob: -8.623345375061035
    8. '_' → logprob: -9.248345375061035
    9. ' (' → logprob: -9.248345375061035
    10. ' ()' → logprob: -9.498345375061035

Token 41: ' []
' (ID: 8911)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2967856228351593
    2. ' x' → logprob: -2.171785593032837
    3. 'y' → logprob: -2.421785593032837
    4. ' y' → logprob: -2.921785593032837
    5. ' ' → logprob: -10.046785354614258
    6. '()' → logprob: -10.671785354614258
    7. '  ' → logprob: -10.984285354614258
    8. '[' → logprob: -11.109285354614258
    9. '[]' → logprob: -11.421785354614258
    10. '_' → logprob: -11.484285354614258

Token 42: 'is' (ID: 276)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09446362406015396
    2. '[' → logprob: -2.844463586807251
    3. '_' → logprob: -4.46946382522583
    4. ' for' → logprob: -4.96946382522583
    5. 'x' → logprob: -5.34446382522583
    6. '(' → logprob: -5.84446382522583
    7. '=' → logprob: -6.34446382522583
    8. ' ' → logprob: -7.46946382522583
    9. 'f' → logprob: -7.46946382522583
    10. '[
' → logprob: -7.59446382522583

Token 43: '_over' (ID: 34788)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.40651991963386536
    2. ' True' → logprob: -1.781519889831543
    3. 'set' → logprob: -3.031519889831543
    4. 's' → logprob: -3.656519889831543
    5. ' _' → logprob: -4.031519889831543
    6. 'space' → logprob: -4.406519889831543
    7. '_valid' → logprob: -4.781519889831543
    8. ' ' → logprob: -5.156519889831543
    9. 'instance' → logprob: -5.406519889831543
    10. 'True' → logprob: -5.406519889831543

Token 44: ' =' (ID: 314)
  Prédit: 'flow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flow' → logprob: -0.062107060104608536
    2. ' =' → logprob: -3.9371070861816406
    3. 'f' → logprob: -4.187107086181641
    4. '=' → logprob: -4.187107086181641
    5. 'loaded' → logprob: -5.062107086181641
    6. 'write' → logprob: -7.187107086181641
    7. 'fl' → logprob: -7.187107086181641
    8. '_' → logprob: -7.812107086181641
    9. 'load' → logprob: -8.31210708618164
    10. 'flows' → logprob: -8.43710708618164

Token 45: ' ' (ID: 220)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.3136565089225769
    2. 'False' → logprob: -1.3136565685272217
    3. ' []' → logprob: -8.3136568069458
    4. ' True' → logprob: -9.8136568069458
    5. '[]' → logprob: -10.3136568069458
    6. '(False' → logprob: -10.9386568069458
    7. 'True' → logprob: -11.8136568069458
    8. '0' → logprob: -11.8136568069458
    9. '[' → logprob: -11.9386568069458
    10. ' ' → logprob: -12.0636568069458

Token 46: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0013048797845840454
    2. ' False' → logprob: -7.376305103302002
    3. 'True' → logprob: -7.626305103302002
    4. 'lambda' → logprob: -9.126304626464844
    5. '[]' → logprob: -10.001304626464844
    6. '[' → logprob: -11.001304626464844
    7. '0' → logprob: -11.876304626464844
    8. 'set' → logprob: -12.126304626464844
    9. '(False' → logprob: -13.376304626464844
    10. 'F' → logprob: -13.626304626464844

Token 47: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4330205023288727
    2. '
' → logprob: -2.05802059173584
    3. '\n' → logprob: -2.18302059173584
    4. '<|end|>' → logprob: -3.05802059173584
    5. ' for' → logprob: -3.18302059173584
    6. ':' → logprob: -4.43302059173584
    7. ' ' → logprob: -6.18302059173584
    8. '\' → logprob: -6.30802059173584
    9. 'n' → logprob: -6.30802059173584
    10. '' → logprob: -6.68302059173584

Token 48: 'loop' (ID: 14294)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04935266077518463
    2. ' for' → logprob: -3.1743526458740234
    3. 'f' → logprob: -6.049352645874023
    4. ' ' → logprob: -6.299352645874023
    5. '
' → logprob: -7.174352645874023
    6. ':' → logprob: -7.549352645874023
    7. ' 
' → logprob: -8.674352645874023
    8. 'n' → logprob: -8.674352645874023
    9. '\n' → logprob: -8.799352645874023
    10. '<|end|>' → logprob: -8.924352645874023

Token 49: ' =' (ID: 314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0101856030523777
    2. ' for' → logprob: -5.510185718536377
    3. ':' → logprob: -5.760185718536377
    4. '_' → logprob: -6.885185718536377
    5. 'while' → logprob: -6.885185718536377
    6. '=' → logprob: -7.135185718536377
    7. ' =' → logprob: -10.135185241699219
    8. '.' → logprob: -11.510185241699219
    9. ' while' → logprob: -11.885185241699219
    10. 'i' → logprob: -12.135185241699219

Token 50: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7868745923042297
    2. '0' → logprob: -1.411874532699585
    3. ' True' → logprob: -1.911874532699585
    4. ' A' → logprob: -3.161874532699585
    5. ' range' → logprob: -3.911874532699585
    6. 'True' → logprob: -3.911874532699585
    7. ' lambda' → logprob: -4.161874771118164
    8. ' x' → logprob: -4.536874771118164
    9. 'A' → logprob: -4.661874771118164
    10. 'range' → logprob: -4.911874771118164

Token 51: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3450881242752075
    2. 'while' → logprob: -1.5950881242752075
    3. ' while' → logprob: -3.220088005065918
    4. '
' → logprob: -4.220088005065918
    5. ':
' → logprob: -4.595088005065918
    6. ',' → logprob: -4.845088005065918
    7. '<|end|>' → logprob: -5.095088005065918
    8. '\' → logprob: -5.220088005065918
    9. '\n' → logprob: -6.595088005065918
    10. ':

' → logprob: -7.845088005065918

Token 52: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.763266384601593
    2. ':' → logprob: -1.3882663249969482
    3. 'while' → logprob: -1.6382663249969482
    4. '<|end|>' → logprob: -3.0132663249969482
    5. ' while' → logprob: -3.7632663249969482
    6. '\n' → logprob: -5.388266563415527
    7. ':
' → logprob: -5.513266563415527
    8. ' 
' → logprob: -6.138266563415527
    9. 'for' → logprob: -7.263266563415527
    10. '' → logprob: -7.513266563415527

Token 53: ' loop' (ID: 11453)
  Prédit: ' loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loop' → logprob: -0.27198028564453125
    2. ' is' → logprob: -1.8969802856445312
    3. ' not' → logprob: -2.5219802856445312
    4. 'loop' → logprob: -5.396980285644531
    5. ' True' → logprob: -6.646980285644531
    6. 'is' → logprob: -7.146980285644531
    7. '(loop' → logprob: -7.396980285644531
    8. 'not' → logprob: -8.396980285644531
    9. ' ' → logprob: -9.146980285644531
    10. '_' → logprob: -9.271980285644531

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.9504606825648807e-05
    2. ':**' → logprob: -12.000019073486328
    3. ':
' → logprob: -12.500019073486328
    4. ' :' → logprob: -12.750019073486328
    5. ' and' → logprob: -12.875019073486328
    6. '>:' → logprob: -13.750019073486328
    7. 'and' → logprob: -14.125019073486328
    8. '):' → logprob: -14.375019073486328
    9. '():' → logprob: -14.500019073486328
    10. ',:' → logprob: -15.000019073486328

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059511493891477585
    2. ' try' → logprob: -4.184511661529541
    3. '    
' → logprob: -4.309511661529541
    4. '    ' → logprob: -5.309511661529541
    5. ' if' → logprob: -5.309511661529541
    6. ' 
' → logprob: -5.434511661529541
    7. ' for' → logprob: -5.809511661529541
    8. ' ' → logprob: -6.059511661529541
    9. 'try' → logprob: -6.434511661529541
    10. '     
' → logprob: -7.434511661529541

Token 56: ' found' (ID: 2491)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0159525871276855
    2. ' for' → logprob: -1.6409525871276855
    3. '   ' → logprob: -1.7659525871276855
    4. 'for' → logprob: -2.7659525871276855
    5. ' try' → logprob: -2.8909525871276855
    6. 'if' → logprob: -3.2659525871276855
    7. ' line' → logprob: -3.3909525871276855
    8. 'try' → logprob: -3.6409525871276855
    9. ' ' → logprob: -4.1409525871276855
    10. '    ' → logprob: -4.5159525871276855

Token 57: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5460473299026489
    2. ' =' → logprob: -1.046047329902649
    3. '=' → logprob: -2.9210472106933594
    4. ' ' → logprob: -4.421047210693359
    5. ',' → logprob: -5.921047210693359
    6. '(' → logprob: -8.67104721069336
    7. '_=' → logprob: -8.79604721069336
    8. ' _' → logprob: -9.04604721069336
    9. '_space' → logprob: -9.54604721069336
    10. ':' → logprob: -9.79604721069336

Token 58: ' '' (ID: 461)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.18597829341888428
    2. 'False' → logprob: -1.8109782934188843
    3. '0' → logprob: -5.935978412628174
    4. ' True' → logprob: -5.935978412628174
    5. ' ' → logprob: -7.435978412628174
    6. 'True' → logprob: -8.685977935791016
    7. ' any' → logprob: -10.560977935791016
    8. ' []' → logprob: -10.810977935791016
    9. ' sum' → logprob: -10.935977935791016
    10. '[]' → logprob: -11.185977935791016

Token 59: 'no' (ID: 1750)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0156852006912231
    2. '1' → logprob: -1.2656852006912231
    3. ''' → logprob: -1.6406852006912231
    4. 'False' → logprob: -2.2656850814819336
    5. 'True' → logprob: -3.6406850814819336
    6. ' '' → logprob: -5.640685081481934
    7. '*' → logprob: -6.140685081481934
    8. '('' → logprob: -6.140685081481934
    9. 'x' → logprob: -6.265685081481934
    10. 'F' → logprob: -6.515685081481934

Token 60: ''
' (ID: 2207)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6357269883155823
    2. ''' → logprob: -0.7607269883155823
    3. ' '' → logprob: -6.8857269287109375
    4. 'ne' → logprob: -6.8857269287109375
    5. ''t' → logprob: -7.6357269287109375
    6. 'te' → logprob: -8.885726928710938
    7. 'e' → logprob: -9.010726928710938
    8. 'n' → logprob: -9.260726928710938
    9. ''
' → logprob: -9.885726928710938
    10. 'pe' → logprob: -10.385726928710938

Token 61: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' idx' (ID: 14016)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3589211702346802
    2. ' for' → logprob: -1.3589211702346802
    3. '
' → logprob: -3.2339210510253906
    4. '<|end|>' → logprob: -5.608921051025391
    5. '   ' → logprob: -6.983921051025391
    6. ' ' → logprob: -8.23392105102539
    7. ' 
' → logprob: -8.85892105102539
    8. '	for' → logprob: -10.10892105102539
    9. '<|end|>' → logprob: -10.48392105102539
    10. ':' → logprob: -10.98392105102539

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03859769180417061
    2. '=' → logprob: -3.288597583770752
    3. '_' → logprob: -7.913597583770752
    4. ',' → logprob: -9.53859806060791
    5. ' ' → logprob: -9.66359806060791
    6. '_found' → logprob: -11.41359806060791
    7. 's' → logprob: -11.66359806060791
    8. ')' → logprob: -12.28859806060791
    9. '_=' → logprob: -12.41359806060791
    10. 'for' → logprob: -12.53859806060791

Token 64: ' len' (ID: 4631)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7887481451034546
    2. '0' → logprob: -0.9137481451034546
    3. ' -' → logprob: -2.288748264312744
    4. '-' → logprob: -3.163748264312744
    5. ' None' → logprob: -8.288747787475586
    6. ' len' → logprob: -8.663747787475586
    7. ' A' → logprob: -9.163747787475586
    8. 'len' → logprob: -9.413747787475586
    9. 'None' → logprob: -9.538747787475586
    10. '_' → logprob: -9.788747787475586

Token 65: '(_)' (ID: 108255)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.005245141219347715
    2. '(A' → logprob: -5.630245208740234
    3. '(' → logprob: -6.505245208740234
    4. '(_)' → logprob: -9.255245208740234
    5. '(_' → logprob: -11.505245208740234
    6. '_' → logprob: -11.630245208740234
    7. 'B' → logprob: -11.880245208740234
    8. '('' → logprob: -12.005245208740234
    9. '(b' → logprob: -12.380245208740234
    10. '((' → logprob: -13.005245208740234

Token 66: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7011450529098511
    2. ' -' → logprob: -0.7011450529098511
    3. ')' → logprob: -5.326145172119141
    4. ' ' → logprob: -6.701145172119141
    5. '[:]' → logprob: -7.576145172119141
    6. '()' → logprob: -7.951145172119141
    7. '```' → logprob: -8.45114517211914
    8. '<|end|>' → logprob: -8.57614517211914
    9. '[]' → logprob: -9.57614517211914
    10. '   ' → logprob: -9.70114517211914

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06671199947595596
    2. ' ' → logprob: -3.316711902618408
    3. '2' → logprob: -3.566711902618408
    4. '3' → logprob: -12.691712379455566
    5. '-' → logprob: -13.441712379455566
    6. '0' → logprob: -13.504212379455566
    7. 'len' → logprob: -13.754212379455566
    8. 'B' → logprob: -14.191712379455566
    9. '  ' → logprob: -14.254212379455566
    10. '   ' → logprob: -14.254212379455566

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05499027296900749
    2. '2' → logprob: -2.929990291595459
    3. ' ' → logprob: -9.8049898147583
    4. '3' → logprob: -10.6799898147583
    5. 'B' → logprob: -11.1799898147583
    6. 'A' → logprob: -12.0549898147583
    7. '0' → logprob: -13.6174898147583
    8. '4' → logprob: -13.8049898147583
    9. '   ' → logprob: -13.8049898147583
    10. '-' → logprob: -13.9299898147583

Token 69: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: ' while' (ID: 2049)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.4289203882217407
    2. 'idx' → logprob: -1.0539203882217407
    3. '	idx' → logprob: -9.42892074584961
    4. ' not' → logprob: -9.92892074584961
    5. '(idx' → logprob: -9.92892074584961
    6. '0' → logprob: -11.42892074584961
    7. ' ' → logprob: -11.67892074584961
    8. '_idx' → logprob: -12.17892074584961
    9. 'not' → logprob: -12.80392074584961
    10. ' True' → logprob: -12.92892074584961

Token 73: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.38834148645401
    2. ' >=' → logprob: -1.1383414268493652
    3. ' >' → logprob: -7.138341426849365
    4. '>' → logprob: -7.388341426849365
    5. ' ' → logprob: -10.638341903686523
    6. '   ' → logprob: -11.388341903686523
    7. '>-' → logprob: -12.263341903686523
    8. ']>=' → logprob: -12.388341903686523
    9. ')>=' → logprob: -12.513341903686523
    10. '≥' → logprob: -13.763341903686523

Token 74: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.016185222193598747
    2. ' ' → logprob: -4.141185283660889
    3. '   ' → logprob: -9.39118480682373
    4. '1' → logprob: -9.76618480682373
    5. '  ' → logprob: -13.89118480682373
    6. '2' → logprob: -14.01618480682373
    7. '```' → logprob: -14.32868480682373
    8. ' and' → logprob: -14.39118480682373
    9. '    ' → logprob: -14.45368480682373
    10. '>' → logprob: -14.51618480682373

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007443527574650943
    2. ' ' → logprob: -7.625744342803955
    3. '1' → logprob: -8.375744819641113
    4. '   ' → logprob: -10.750744819641113
    5. '2' → logprob: -14.063244819641113
    6. '  ' → logprob: -14.875744819641113
    7. '```' → logprob: -15.500744819641113
    8. '       ' → logprob: -15.625744819641113
    9. '
' → logprob: -15.625744819641113
    10. '=' → logprob: -15.750744819641113

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3208833336830139
    2. ' and' → logprob: -1.3208832740783691
    3. 'and' → logprob: -5.695883274078369
    4. ':
' → logprob: -5.695883274078369
    5. '   ' → logprob: -7.320883274078369
    6. ' :' → logprob: -9.070883750915527
    7. '<|end|>' → logprob: -10.570883750915527
    8. '       ' → logprob: -11.195883750915527
    9. '):' → logprob: -11.320883750915527
    10. ':

' → logprob: -11.820883750915527

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5359200835227966
    2. '<|end|>' → logprob: -1.4109201431274414
    3. '   ' → logprob: -3.0359201431274414
    4. ' ' → logprob: -3.0359201431274414
    5. ':' → logprob: -3.2859201431274414
    6. ' and' → logprob: -4.410920143127441
    7. ':
' → logprob: -4.910920143127441
    8. '    ' → logprob: -5.285920143127441
    9. '<|end|>' → logprob: -5.535920143127441
    10. ' if' → logprob: -5.785920143127441

Token 78: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0200546979904175
    2. ' if' → logprob: -1.0200546979904175
    3. '<|end|>' → logprob: -2.020054817199707
    4. '       ' → logprob: -2.145054817199707
    5. 'if' (adapté à ' if') → logprob: -4.895054817199707
    6. ' 
' → logprob: -5.770054817199707
    7. '           ' → logprob: -5.895054817199707
    8. '    ' → logprob: -5.895054817199707
    9. '   ' → logprob: -5.895054817199707
    10. '        ' → logprob: -6.145054817199707

Token 79: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.4625507891178131
    2. '_' → logprob: -1.0875507593154907
    3. ' idx' → logprob: -3.5875508785247803
    4. 'idx' → logprob: -6.212550640106201
    5. '_[' → logprob: -6.712550640106201
    6. ' not' → logprob: -7.212550640106201
    7. ' ' → logprob: -7.587550640106201
    8. '   ' → logprob: -7.962550640106201
    9. '       ' → logprob: -8.96255111694336
    10. 'not' → logprob: -9.58755111694336

Token 80: '[' (ID: 58)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0001561009994475171
    2. '[' → logprob: -9.12515640258789
    3. 'idx' → logprob: -10.62515640258789
    4. ' [' → logprob: -12.12515640258789
    5. '```' → logprob: -12.37515640258789
    6. '   ' → logprob: -12.50015640258789
    7. '[i' → logprob: -13.00015640258789
    8. ' idx' → logprob: -13.37515640258789
    9. '>' → logprob: -14.00015640258789
    10. '       ' → logprob: -14.25015640258789

Token 81: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0015315281925722957
    2. ' idx' → logprob: -6.626531600952148
    3. '[idx' → logprob: -9.126531600952148
    4. '	idx' → logprob: -10.001531600952148
    5. '   ' → logprob: -10.626531600952148
    6. '(idx' → logprob: -11.876531600952148
    7. ']' → logprob: -12.126531600952148
    8. '][' → logprob: -12.626531600952148
    9. '0' → logprob: -12.751531600952148
    10. '```' → logprob: -13.376531600952148

Token 82: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06650589406490326
    2. ']>' → logprob: -3.3165059089660645
    3. '>' → logprob: -4.5665059089660645
    4. ' ]' → logprob: -5.3165059089660645
    5. ']<' → logprob: -5.3165059089660645
    6. '-' → logprob: -6.0665059089660645
    7. ' >' → logprob: -6.1915059089660645
    8. ' -' → logprob: -7.1915059089660645
    9. '+' → logprob: -7.5665059089660645
    10. '<' → logprob: -7.5665059089660645

Token 83: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7031895518302917
    2. '>' → logprob: -0.8281895518302917
    3. ' <' → logprob: -3.2031896114349365
    4. '<' → logprob: -4.703189373016357
    5. ' ' → logprob: -4.953189373016357
    6. '%' → logprob: -5.328189373016357
    7. ' %' → logprob: -6.453189373016357
    8. ' >=' → logprob: -6.953189373016357
    9. '>=' → logprob: -7.203189373016357
    10. '<|end|>' → logprob: -7.453189373016357

Token 84: ' idx' (ID: 14016)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6617358922958374
    2. '0' → logprob: -1.4117358922958374
    3. '_[' → logprob: -2.661736011505127
    4. '_' → logprob: -3.286736011505127
    5. ' ' → logprob: -3.286736011505127
    6. 'A' → logprob: -3.411736011505127
    7. '9' → logprob: -4.661736011505127
    8. '10' → logprob: -4.786736011505127
    9. 'B' → logprob: -5.161736011505127
    10. '7' → logprob: -5.286736011505127

Token 85: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.48815712332725525
    2. ' +' → logprob: -1.4881571531295776
    3. ':' → logprob: -1.8631571531295776
    4. ' and' → logprob: -5.738157272338867
    5. ':
' → logprob: -7.488157272338867
    6. 'and' → logprob: -7.738157272338867
    7. '-' → logprob: -7.863157272338867
    8. ' :' → logprob: -9.113157272338867
    9. '   ' → logprob: -9.238157272338867
    10. ' -' → logprob: -9.488157272338867

Token 86: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06687591969966888
    2. ' ' → logprob: -2.94187593460083
    3. '2' → logprob: -4.44187593460083
    4. '   ' → logprob: -10.441875457763672
    5. '+' → logprob: -10.691875457763672
    6. '<|end|>' → logprob: -10.941875457763672
    7. '  ' → logprob: -11.379375457763672
    8. '...' → logprob: -11.816875457763672
    9. '<|end|>' → logprob: -11.816875457763672
    10. ' +' → logprob: -11.941875457763672

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017316455021500587
    2. '2' → logprob: -4.6423163414001465
    3. ' ' → logprob: -4.8923163414001465
    4. '_' → logprob: -12.267316818237305
    5. '  ' → logprob: -12.392316818237305
    6. 'len' → logprob: -12.642316818237305
    7. ':' → logprob: -12.829816818237305
    8. '   ' → logprob: -12.829816818237305
    9. '#' → logprob: -13.829816818237305
    10. '[' → logprob: -14.142316818237305

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.042878370732069016
    2. ' and' → logprob: -3.4178783893585205
    3. ':
' → logprob: -5.042878150939941
    4. ' :' → logprob: -6.542878150939941
    5. ' or' → logprob: -7.542878150939941
    6. 'and' → logprob: -8.042878150939941
    7. '):' → logprob: -9.042878150939941
    8. ')' → logprob: -9.792878150939941
    9. ' ' → logprob: -9.917878150939941
    10. ' :
' → logprob: -10.167878150939941

Token 89: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.755931556224823
    2. '           ' → logprob: -1.5059316158294678
    3. '       ' → logprob: -1.5059316158294678
    4. ':
' → logprob: -3.3809316158294678
    5. '   ' → logprob: -3.7559316158294678
    6. ' and' → logprob: -4.630931377410889
    7. ' :' → logprob: -4.755931377410889
    8. ' found' → logprob: -5.505931377410889
    9. 'found' → logprob: -6.755931377410889
    10. ' :
' → logprob: -6.880931377410889

Token 90: ' found' (ID: 2491)
  Prédit: ' found'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' found' → logprob: -0.11695536971092224
    2. 'found' (adapté à ' found') → logprob: -3.241955280303955
    3. '           ' → logprob: -3.741955280303955
    4. ' is' → logprob: -4.366955280303955
    5. '       ' → logprob: -4.616955280303955
    6. '	found' → logprob: -5.366955280303955
    7. ' break' → logprob: -5.741955280303955
    8. ' loop' → logprob: -5.991955280303955
    9. '   ' → logprob: -5.991955280303955
    10. ' B' → logprob: -6.616955280303955

Token 91: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03805296868085861
    2. '=' → logprob: -3.288053035736084
    3. ' ' → logprob: -11.913052558898926
    4. ' ==' → logprob: -13.413052558898926
    5. ' +=' → logprob: -13.788052558898926
    6. ',' → logprob: -14.413052558898926
    7. ' ='' → logprob: -14.663052558898926
    8. ' =
' → logprob: -15.663052558898926
    9. '='' → logprob: -15.913052558898926
    10. '   ' → logprob: -15.913052558898926

Token 92: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.003500407561659813
    2. ''ok' → logprob: -7.128500461578369
    3. ''y' → logprob: -7.253500461578369
    4. ' '' → logprob: -7.253500461578369
    5. '"' → logprob: -7.378500461578369
    6. 'yes' → logprob: -8.628499984741211
    7. ''s' → logprob: -9.003499984741211
    8. '   ' → logprob: -9.378499984741211
    9. ''t' → logprob: -10.253499984741211
    10. ' yes' → logprob: -10.378499984741211

Token 93: 'yes' (ID: 6763)
  Prédit: 'yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yes' → logprob: -0.03723083809018135
    2. ' yes' → logprob: -3.5372307300567627
    3. 'no' → logprob: -5.537230968475342
    4. 'found' → logprob: -6.787230968475342
    5. 'ok' → logprob: -6.912230968475342
    6. ' no' → logprob: -7.912230968475342
    7. 'y' → logprob: -8.787230491638184
    8. ' found' → logprob: -9.162230491638184
    9. 'Yes' → logprob: -9.224730491638184
    10. 'ye' → logprob: -9.724730491638184

Token 94: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.25406765937805176
    2. '           ' → logprob: -2.1290676593780518
    3. ''
' → logprob: -2.2540676593780518
    4. ' '' → logprob: -8.879067420959473
    5. ''
' → logprob: -9.129067420959473
    6. '       ' → logprob: -9.879067420959473
    7. ' '
' → logprob: -9.879067420959473
    8. '               ' → logprob: -10.004067420959473
    9. '<|end|>' → logprob: -12.254067420959473
    10. '')' → logprob: -12.504067420959473

Token 95: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006876279599964619
    2. '
' → logprob: -5.256876468658447
    3. '            
' → logprob: -6.756876468658447
    4. ' 
' → logprob: -9.381875991821289
    5. '        
' → logprob: -9.631875991821289
    6. '       ' → logprob: -9.631875991821289
    7. '    
' → logprob: -10.256875991821289
    8. '            ' → logprob: -10.381875991821289
    9. ' break' → logprob: -10.631875991821289
    10. '\n' → logprob: -10.631875991821289

Token 96: ' B' (ID: 418)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.6688631176948547
    2. '           ' → logprob: -0.9188631176948547
    3. '_' → logprob: -3.91886305809021
    4. 'break' → logprob: -4.293863296508789
    5. ' loop' → logprob: -4.418863296508789
    6. ' is' → logprob: -4.543863296508789
    7. ' _' → logprob: -4.668863296508789
    8. ' idx' → logprob: -4.918863296508789
    9. ' B' → logprob: -5.293863296508789
    10. 'B' (adapté à ' B') → logprob: -6.043863296508789

Token 97: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06230375915765762
    2. '.' → logprob: -2.8123037815093994
    3. '.extend' → logprob: -8.18730354309082
    4. ' .' → logprob: -10.31230354309082
    5. '.insert' → logprob: -11.56230354309082
    6. '.app' → logprob: -11.93730354309082
    7. 'append' → logprob: -12.93730354309082
    8. '.ap' → logprob: -13.06230354309082
    9. '.clear' → logprob: -13.43730354309082
    10. ' =' → logprob: -14.56230354309082

Token 98: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4664345383644104
    2. ' [' → logprob: -1.4664344787597656
    3. '[_' → logprob: -2.2164344787597656
    4. '_[' → logprob: -4.216434478759766
    5. ' [_' → logprob: -4.841434478759766
    6. '_' → logprob: -4.966434478759766
    7. ' _' → logprob: -6.091434478759766
    8. '['' → logprob: -7.966434478759766
    9. ' ' → logprob: -8.716434478759766
    10. ' ' → logprob: -9.341434478759766

Token 99: '_[' (ID: 27517)
  Prédit: '_['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_[' → logprob: -0.14807945489883423
    2. 'idx' → logprob: -2.3980793952941895
    3. '_' → logprob: -3.3980793952941895
    4. '_]' → logprob: -5.1480793952941895
    5. ' idx' → logprob: -5.7730793952941895
    6. ' _' → logprob: -6.2730793952941895
    7. '_idx' → logprob: -7.2730793952941895
    8. '(idx' → logprob: -8.398079872131348
    9. '__[' → logprob: -8.648079872131348
    10. '_<' → logprob: -8.648079872131348

Token 100: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0006633530138060451
    2. ' idx' → logprob: -7.5006632804870605
    3. '	idx' → logprob: -10.375663757324219
    4. '(idx' → logprob: -11.125663757324219
    5. '-' → logprob: -11.250663757324219
    6. ':' → logprob: -11.250663757324219
    7. '_idx' → logprob: -12.125663757324219
    8. '0' → logprob: -12.500663757324219
    9. '[idx' → logprob: -12.625663757324219
    10. '   ' → logprob: -12.750663757324219

Token 101: ']]
' (ID: 29446)
  Prédit: ']]
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]
' → logprob: -0.40299031138420105
    2. ']]' → logprob: -1.1529903411865234
    3. ']' → logprob: -4.402990341186523
    4. ' ]]
' → logprob: -7.152990341186523
    5. ']
' → logprob: -7.652990341186523
    6. '       ' → logprob: -7.777990341186523
    7. ']]

' → logprob: -7.777990341186523
    8. ' ]]' → logprob: -7.902990341186523
    9. '-' → logprob: -7.902990341186523
    10. ']]
' → logprob: -8.402990341186523

Token 102: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1296587437391281
    2. ' 
' → logprob: -2.3796586990356445
    3. '            
' → logprob: -4.5046586990356445
    4. '
' → logprob: -5.1296586990356445
    5. '  
' → logprob: -5.3796586990356445
    6. '_
' → logprob: -6.3796586990356445
    7. ' _
' → logprob: -6.8796586990356445
    8. ' _' → logprob: -7.0046586990356445
    9. '_' → logprob: -7.3796586990356445
    10. ',' → logprob: -7.7546586990356445

Token 103: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' (adapté à ' _') → logprob: -0.9012009501457214
    2. ' break' → logprob: -1.5262010097503662
    3. ' _' → logprob: -1.9012010097503662
    4. ' _
' → logprob: -2.026201009750366
    5. '_
' → logprob: -2.526201009750366
    6. ' 
' → logprob: -5.026200771331787
    7. 'break' → logprob: -5.901200771331787
    8. '           ' → logprob: -6.276200771331787
    9. '       ' → logprob: -7.026200771331787
    10. '_[' → logprob: -7.276200771331787

Token 104: ' =' (ID: 314)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.016606325283646584
    2. '=' → logprob: -4.141606330871582
    3. '.' → logprob: -7.891606330871582
    4. 'pop' → logprob: -8.766606330871582
    5. '.remove' → logprob: -10.641606330871582
    6. ' =' → logprob: -11.266606330871582
    7. '.__' → logprob: -13.641606330871582
    8. '```' → logprob: -13.766606330871582
    9. ' .' → logprob: -13.891606330871582
    10. ' pop' → logprob: -14.641606330871582

Token 105: ' _' (ID: 1175)
  Prédit: '_['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_[' → logprob: -0.6754735112190247
    2. ' _' → logprob: -0.8004735112190247
    3. '_' → logprob: -3.17547345161438
    4. ' [' → logprob: -9.6754732131958
    5. '__[' → logprob: -9.8004732131958
    6. '[' → logprob: -10.8004732131958
    7. '_.' → logprob: -11.5504732131958
    8. ' ' → logprob: -12.1129732131958
    9. '_<' → logprob: -12.1129732131958
    10. '_(' → logprob: -12.4879732131958

Token 106: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.007536590564996004
    2. '[:-' → logprob: -5.0075364112854
    3. '[idx' → logprob: -7.2575364112854
    4. '[' → logprob: -9.507536888122559
    5. '[:]' → logprob: -10.882536888122559
    6. 'idx' → logprob: -11.382536888122559
    7. ' [:' → logprob: -12.757536888122559
    8. '][:' → logprob: -13.382536888122559
    9. '```' → logprob: -13.632536888122559
    10. '[::-' → logprob: -13.632536888122559

Token 107: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00012356207298580557
    2. ' idx' → logprob: -9.125123977661133
    3. '	idx' → logprob: -12.125123977661133
    4. '-' → logprob: -12.250123977661133
    5. '_idx' → logprob: -13.500123977661133
    6. '(idx' → logprob: -13.625123977661133
    7. '-(' → logprob: -14.625123977661133
    8. '[idx' → logprob: -15.500123977661133
    9. '-[' → logprob: -15.625123977661133
    10. 'len' → logprob: -16.000123977661133

Token 108: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0060770451091229916
    2. ']+' → logprob: -5.256076812744141
    3. ' ]' → logprob: -7.131076812744141
    4. ']
' → logprob: -10.50607681274414
    5. '],' → logprob: -12.13107681274414
    6. '+' → logprob: -13.13107681274414
    7. ']

' → logprob: -13.25607681274414
    8. '-' → logprob: -14.13107681274414
    9. ']+"' → logprob: -14.13107681274414
    10. '       ' → logprob: -14.25607681274414

Token 109: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31641116738319397
    2. ' +' → logprob: -1.4414111375808716
    3. ']' → logprob: -4.191411018371582
    4. '+[' → logprob: -4.441411018371582
    5. ']+' → logprob: -5.566411018371582
    6. '       ' → logprob: -6.066411018371582
    7. '[::-' → logprob: -7.316411018371582
    8. '           ' → logprob: -8.316411018371582
    9. '<|end|>' → logprob: -8.441411018371582
    10. '+
' → logprob: -9.316411018371582

Token 110: ' _' (ID: 1175)
  Prédit: '_['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_[' → logprob: -0.03611026331782341
    2. ' _' → logprob: -3.5361101627349854
    3. '_' → logprob: -5.1611104011535645
    4. '[' → logprob: -8.161109924316406
    5. '__[' → logprob: -9.161109924316406
    6. '_(' → logprob: -9.786109924316406
    7. '_.' → logprob: -10.536109924316406
    8. ' [' → logprob: -10.973609924316406
    9. '(' → logprob: -11.723609924316406
    10. ' ' → logprob: -11.848609924316406

Token 111: '[' (ID: 58)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0010586526477709413
    2. 'idx' → logprob: -7.126058578491211
    3. '[' → logprob: -8.626058578491211
    4. '_[' → logprob: -11.126058578491211
    5. '   ' → logprob: -11.251058578491211
    6. '```' → logprob: -12.001058578491211
    7. '(idx' → logprob: -12.251058578491211
    8. '![' → logprob: -12.626058578491211
    9. ' [' → logprob: -12.751058578491211
    10. '[id' → logprob: -12.876058578491211

Token 112: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00029744720086455345
    2. '+' → logprob: -8.500297546386719
    3. ' idx' → logprob: -9.750297546386719
    4. '(idx' → logprob: -10.500297546386719
    5. '[idx' → logprob: -12.625297546386719
    6. '1' → logprob: -13.125297546386719
    7. 'x' → logprob: -13.375297546386719
    8. '	idx' → logprob: -14.625297546386719
    9. 'id' → logprob: -15.500297546386719
    10. '_idx' → logprob: -15.875297546386719

Token 113: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00043341092532500625
    2. ' +' → logprob: -7.750433444976807
    3. '1' → logprob: -13.375432968139648
    4. '+]' → logprob: -14.625432968139648
    5. ':]' → logprob: -15.625432968139648
    6. ']+' → logprob: -16.37543296813965
    7. ':' → logprob: -16.50043296813965
    8. ']' → logprob: -17.00043296813965
    9. '```' → logprob: -17.00043296813965
    10. '-' → logprob: -17.00043296813965

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -15.500001907348633
    4. ']' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.750001907348633
    6. '2' → logprob: -18.250001907348633
    7. '+' → logprob: -18.625001907348633
    8. '``' → logprob: -19.187501907348633
    9. ':]' → logprob: -19.250001907348633
    10. '0' → logprob: -19.312501907348633

Token 115: ':]
' (ID: 61598)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.10318583250045776
    2. ':]
' → logprob: -2.3531858921051025
    3. ']' → logprob: -5.978185653686523
    4. ':' → logprob: -8.103185653686523
    5. ' :]' → logprob: -9.353185653686523
    6. ' :]
' → logprob: -10.728185653686523
    7. ']
' → logprob: -10.978185653686523
    8. ':]

' → logprob: -11.728185653686523
    9. '1' → logprob: -12.978185653686523
    10. ':end' → logprob: -14.978185653686523

Token 116: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10847458988428116
    2. '           ' → logprob: -2.4834744930267334
    3. '       ' → logprob: -5.2334747314453125
    4. ' 
' → logprob: -5.4834747314453125
    5. '            
' → logprob: -5.8584747314453125
    6. '    
' → logprob: -6.3584747314453125
    7. '        
' → logprob: -6.3584747314453125
    8. '
' → logprob: -6.8584747314453125
    9. '  
' → logprob: -6.8584747314453125
    10. '\n' → logprob: -7.9834747314453125

Token 117: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5476416349411011
    2. '
' → logprob: -1.172641634941101
    3. ' break' → logprob: -2.6726417541503906
    4. ' idx' → logprob: -4.297641754150391
    5. ' loop' → logprob: -4.797641754150391
    6. ' 
' → logprob: -4.797641754150391
    7. '       ' → logprob: -5.797641754150391
    8. ' if' → logprob: -6.047641754150391
    9. 'break' (adapté à ' break') → logprob: -6.422641754150391
    10. 'idx' → logprob: -6.672641754150391

Token 118: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.038160376250743866
    2. '       ' → logprob: -3.9131603240966797
    3. '        
' → logprob: -4.78816032409668
    4. ' 
' → logprob: -5.28816032409668
    5. '    
' → logprob: -6.28816032409668
    6. '  
' → logprob: -7.28816032409668
    7. '<|end|>' → logprob: -7.41316032409668
    8. '   ' → logprob: -8.28816032409668
    9. '
' → logprob: -8.53816032409668
    10. '            
' → logprob: -8.91316032409668

Token 119: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18845278024673462
    2. '
' → logprob: -1.8134527206420898
    3. '   ' → logprob: -5.06345272064209
    4. '        
' → logprob: -7.43845272064209
    5. ' else' → logprob: -7.68845272064209
    6. '<|end|>' → logprob: -7.68845272064209
    7. ' ' → logprob: -8.43845272064209
    8. '    
' → logprob: -8.93845272064209
    9. 'idx' → logprob: -9.43845272064209
    10. ' 
' → logprob: -9.43845272064209

Token 120: ' idx' (ID: 14016)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23683826625347137
    2. '   ' → logprob: -1.6118382215499878
    3. 'idx' (adapté à ' idx') → logprob: -4.611838340759277
    4. ' idx' → logprob: -7.611838340759277
    5. 'else' → logprob: -8.111838340759277
    6. ' ' → logprob: -9.111838340759277
    7. '  ' → logprob: -9.111838340759277
    8. '
' → logprob: -9.236838340759277
    9. '    ' → logprob: -9.611838340759277
    10. ' else' → logprob: -9.861838340759277

Token 121: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.17557021975517273
    2. ' -=' → logprob: -2.175570249557495
    3. '-' → logprob: -3.050570249557495
    4. '   ' → logprob: -9.425570487976074
    5. ' -' → logprob: -10.675570487976074
    6. '=' → logprob: -10.800570487976074
    7. '    ' → logprob: -11.925570487976074
    8. '+=' → logprob: -11.925570487976074
    9. '```' → logprob: -12.550570487976074
    10. ')' → logprob: -13.925570487976074

Token 122: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006280870293267071
    2. ' ' → logprob: -7.3756279945373535
    3. '   ' → logprob: -13.500628471374512
    4. '  ' → logprob: -16.125627517700195
    5. '```' → logprob: -17.250627517700195
    6. '    ' → logprob: -17.500627517700195
    7. '
' → logprob: -17.500627517700195
    8. '       ' → logprob: -17.688127517700195
    9. ' ' → logprob: -18.438127517700195
    10. '0' → logprob: -18.563127517700195

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -14.875024795532227
    4. '  ' → logprob: -17.062524795532227
    5. '```' → logprob: -17.187524795532227
    6. '
' → logprob: -18.187524795532227
    7. '       ' → logprob: -18.812524795532227
    8. '    ' → logprob: -18.937524795532227
    9. '۱' → logprob: -19.250024795532227
    10. '-' → logprob: -19.562524795532227

Token 124: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18929946422576904
    2. '   ' → logprob: -1.814299464225769
    3. '    
' → logprob: -5.314299583435059
    4. '<|end|>' → logprob: -5.814299583435059
    5. '  
' → logprob: -7.564299583435059
    6. ' 
' → logprob: -7.939299583435059
    7. ' if' → logprob: -8.189299583435059
    8. '        
' → logprob: -9.564299583435059
    9. '   
' → logprob: -9.814299583435059
    10. 'if' → logprob: -10.064299583435059

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001525452476926148
    2. '
' → logprob: -7.001525402069092
    3. '<|end|>' → logprob: -9.00152587890625
    4. 'if' → logprob: -9.12652587890625
    5. '    
' → logprob: -9.25152587890625
    6. '```' → logprob: -9.37652587890625
    7. 'else' → logprob: -9.50152587890625
    8. ' if' → logprob: -9.62652587890625
    9. ' else' → logprob: -10.25152587890625
    10. '  
' → logprob: -12.50152587890625

Token 126: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02693409100174904
    2. 'if' (adapté à ' if') → logprob: -4.1519341468811035
    3. ' if' → logprob: -5.1519341468811035
    4. 'else' → logprob: -5.4019341468811035
    5. ' else' → logprob: -7.7769341468811035
    6. '
' → logprob: -9.776933670043945
    7. '```' → logprob: -10.401933670043945
    8. ' ' → logprob: -11.276933670043945
    9. '    
' → logprob: -11.901933670043945
    10. 'elif' → logprob: -12.651933670043945

Token 127: ' found' (ID: 2491)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1337020844221115
    2. ' found' → logprob: -2.633702039718628
    3. 'not' → logprob: -3.633702039718628
    4. 'found' → logprob: -3.883702039718628
    5. ' is' → logprob: -5.258702278137207
    6. 'is' → logprob: -7.383702278137207
    7. ' len' → logprob: -8.633702278137207
    8. ' B' → logprob: -9.383702278137207
    9. '_' → logprob: -9.508702278137207
    10. ' ' → logprob: -9.633702278137207

Token 128: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0161367729306221
    2. '==' → logprob: -4.141136646270752
    3. ' !=' → logprob: -9.39113712310791
    4. ' ' → logprob: -11.76613712310791
    5. '=='' → logprob: -12.76613712310791
    6. '!=' → logprob: -13.01613712310791
    7. ' =='' → logprob: -13.26613712310791
    8. ' =' → logprob: -13.51613712310791
    9. ':' → logprob: -14.14113712310791
    10. ' ' → logprob: -14.39113712310791

Token 129: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.033750008791685104
    2. ' '' → logprob: -3.408750057220459
    3. ''ny' → logprob: -10.2837495803833
    4. ' no' → logprob: -11.1587495803833
    5. '"' → logprob: -11.2837495803833
    6. ''y' → logprob: -11.4087495803833
    7. ''n' → logprob: -11.4087495803833
    8. ''ok' → logprob: -12.2837495803833
    9. ' yes' → logprob: -12.7837495803833
    10. ' ' → logprob: -12.9087495803833

Token 130: 'no' (ID: 1750)
  Prédit: 'yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yes' → logprob: -0.5767859220504761
    2. 'no' → logprob: -0.8267859220504761
    3. ''' → logprob: -8.326786041259766
    4. ' no' → logprob: -8.451786041259766
    5. ' yes' → logprob: -8.451786041259766
    6. 'ye' → logprob: -9.576786041259766
    7. 'n' → logprob: -9.826786041259766
    8. '"' → logprob: -11.326786041259766
    9. 'y' → logprob: -12.139286041259766
    10. 'Yes' → logprob: -12.389286041259766

Token 131: '':
' (ID: 7669)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25253453850746155
    2. ':
' → logprob: -1.5025345087051392
    3. '   ' → logprob: -7.75253438949585
    4. '       ' → logprob: -9.377534866333008
    5. ' or' → logprob: -10.377534866333008
    6. '):
' → logprob: -10.877534866333008
    7. '
' → logprob: -12.002534866333008
    8. ' and' → logprob: -12.252534866333008
    9. ':

' → logprob: -12.252534866333008
    10. '<|end|>' → logprob: -12.377534866333008

Token 132: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02512531913816929
    2. '       ' → logprob: -3.77512526512146
    3. ' loop' → logprob: -6.400125503540039
    4. ' break' → logprob: -9.025125503540039
    5. 'loop' → logprob: -10.150125503540039
    6. ' is' → logprob: -11.025125503540039
    7. '
' → logprob: -11.400125503540039
    8. 'is' → logprob: -12.025125503540039
    9. '```' → logprob: -12.025125503540039
    10. 'break' → logprob: -12.275125503540039

Token 133: ' [' (ID: 723)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13315534591674805
    2. ' loop' → logprob: -3.133155345916748
    3. ' is' → logprob: -3.508155345916748
    4. ' break' → logprob: -4.133155345916748
    5. 'is' → logprob: -4.133155345916748
    6. 'loop' → logprob: -4.883155345916748
    7. '       ' → logprob: -5.008155345916748
    8. 'break' → logprob: -5.633155345916748
    9. ' if' → logprob: -8.008155822753906
    10. '```' → logprob: -8.633155822753906

Token 134: 'print' (ID: 1598)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.28365767002105713
    2. 'loop' → logprob: -2.1586575508117676
    3. 'break' → logprob: -3.1586575508117676
    4. ' is' → logprob: -3.1586575508117676
    5. 'print' → logprob: -4.033657550811768
    6. ' loop' → logprob: -4.283657550811768
    7. 'B' → logprob: -4.783657550811768
    8. ' break' → logprob: -5.783657550811768
    9. '   ' → logprob: -6.283657550811768
    10. ' B' → logprob: -8.033658027648926

Token 135: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.12117229402065277
    2. '(' → logprob: -2.9961721897125244
    3. '('' → logprob: -3.3711721897125244
    4. '-' → logprob: -3.8711721897125244
    5. '("' → logprob: -4.9961724281311035
    6. '('-' → logprob: -6.8711724281311035
    7. '("-' → logprob: -7.4961724281311035
    8. '0' → logprob: -9.121171951293945
    9. '(i' → logprob: -9.121171951293945
    10. '(len' → logprob: -9.871171951293945

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8074162653647363e-05
    2. ' ' → logprob: -11.250018119812012
    3. '
' → logprob: -14.250018119812012
    4. '2' → logprob: -14.312518119812012
    5. '   ' → logprob: -14.500018119812012
    6. '``' → logprob: -14.937518119812012
    7. '-' → logprob: -15.000018119812012
    8. '(' → logprob: -15.312518119812012
    9. '```' → logprob: -15.500018119812012
    10. '11' → logprob: -15.687518119812012

Token 137: '),' (ID: 936)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6414523124694824
    2. ')' → logprob: -0.7664523124694824
    3. ')]' → logprob: -5.141452312469482
    4. ')]
' → logprob: -6.266452312469482
    5. ');' → logprob: -7.141452312469482
    6. ')`
' → logprob: -9.89145278930664
    7. ')
' → logprob: -10.14145278930664
    8. '       ' → logprob: -10.26645278930664
    9. '),' → logprob: -10.89145278930664
    10. ')`' → logprob: -11.01645278930664

Token 138: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.41562366485595703
    2. ' setattr' → logprob: -1.790623664855957
    3. ' exit' → logprob: -2.040623664855957
    4. 'break' → logprob: -3.915623664855957
    5. ' ' → logprob: -4.915623664855957
    6. 'print' → logprob: -5.415623664855957
    7. ' break' → logprob: -5.915623664855957
    8. '
' → logprob: -6.040623664855957
    9. '   ' → logprob: -6.290623664855957
    10. '    ' → logprob: -7.040623664855957

Token 139: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.001217974815517664
    2. '(' → logprob: -6.751217842102051
    3. '()]
' → logprob: -10.50121784210205
    4. '()' → logprob: -10.87621784210205
    5. '()`' → logprob: -14.75121784210205
    6. '()],' → logprob: -15.87621784210205
    7. '())' → logprob: -16.001218795776367
    8. ' ()' → logprob: -16.251218795776367
    9. '()
' → logprob: -16.251218795776367
    10. '()].' → logprob: -16.376218795776367

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13871483504772186
    2. '<|end|>' → logprob: -2.6387147903442383
    3. '
' → logprob: -3.6387147903442383
    4. '    
' → logprob: -4.138714790344238
    5. '  
' → logprob: -5.138714790344238
    6. ' 
' → logprob: -5.888714790344238
    7. ')' → logprob: -6.638714790344238
    8. '(loop' → logprob: -6.763714790344238
    9. '[' → logprob: -7.138714790344238
    10. ' loop' → logprob: -7.513714790344238

Token 141: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11059531569480896
    2. '<|end|>' → logprob: -2.860595226287842
    3. '
' → logprob: -3.735595226287842
    4. ' if' → logprob: -4.860595226287842
    5. ')' → logprob: -5.110595226287842
    6. '    
' → logprob: -5.860595226287842
    7. 'if' (adapté à ' if') → logprob: -6.360595226287842
    8. '[' → logprob: -6.985595226287842
    9. '    ' → logprob: -7.860595226287842
    10. ')
' → logprob: -7.985595226287842

Token 142: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9884811639785767
    2. ' len' → logprob: -0.9884811639785767
    3. 'len' → logprob: -1.6134811639785767
    4. 'not' → logprob: -3.738481044769287
    5. ' is' → logprob: -4.613481044769287
    6. ' B' → logprob: -4.863481044769287
    7. 'is' → logprob: -5.613481044769287
    8. 'B' → logprob: -5.738481044769287
    9. '_' → logprob: -5.863481044769287
    10. ' found' → logprob: -6.113481044769287

Token 143: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -1.0303095579147339
    2. ' _:' → logprob: -1.1553095579147339
    3. '_' → logprob: -1.2803095579147339
    4. '_:' → logprob: -3.0303096771240234
    5. ' len' → logprob: -6.655309677124023
    6. ' ' → logprob: -9.155309677124023
    7. ' loop' → logprob: -9.530309677124023
    8. '_=' → logprob: -9.655309677124023
    9. ' _.' → logprob: -9.905309677124023
    10. '_]' → logprob: -9.905309677124023

Token 144: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00981925055384636
    2. ':
' → logprob: -4.634819030761719
    3. ' or' → logprob: -10.134819030761719
    4. ':return' → logprob: -12.009819030761719
    5. ' :' → logprob: -12.259819030761719
    6. '):' → logprob: -12.384819030761719
    7. '   ' → logprob: -13.009819030761719
    8. ':size' → logprob: -14.134819030761719
    9. ':

' → logprob: -14.259819030761719
    10. 'or' → logprob: -14.384819030761719

Token 145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003042123978957534
    2. '   ' → logprob: -5.878042221069336
    3. ' break' → logprob: -9.128042221069336
    4. ' loop' → logprob: -9.378042221069336
    5. ':' → logprob: -11.503042221069336
    6. '
' → logprob: -11.628042221069336
    7. ',' → logprob: -12.253042221069336
    8. ' print' → logprob: -12.628042221069336
    9. ' is' → logprob: -13.003042221069336
    10. '(loop' → logprob: -13.253042221069336

Token 146: ' loop' (ID: 11453)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.9010749459266663
    2. ' loop' → logprob: -0.9010749459266663
    3. '   ' → logprob: -2.4010748863220215
    4. 'break' → logprob: -2.9010748863220215
    5. 'loop' (adapté à ' loop') → logprob: -3.4010748863220215
    6. '       ' → logprob: -4.9010748863220215
    7. ' ' → logprob: -8.15107536315918
    8. 'print' → logprob: -8.27607536315918
    9. '           ' → logprob: -8.40107536315918
    10. ' B' → logprob: -9.02607536315918

Token 147: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014184068888425827
    2. ' =' → logprob: -4.26418399810791
    3. '=False' → logprob: -11.01418399810791
    4. '=True' → logprob: -13.38918399810791
    5. '       ' → logprob: -14.13918399810791
    6. 'break' → logprob: -14.26418399810791
    7. '   ' → logprob: -14.51418399810791
    8. '=
' → logprob: -15.01418399810791
    9. ' ' → logprob: -16.389184951782227
    10. '
' → logprob: -16.639184951782227

Token 148: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.008614926598966122
    2. ' False' → logprob: -4.758615016937256
    3. '0' → logprob: -15.508614540100098
    4. 'True' → logprob: -15.758614540100098
    5. '(False' → logprob: -17.133615493774414
    6. '=False' → logprob: -18.133615493774414
    7. 'false' → logprob: -18.133615493774414
    8. 'break' → logprob: -19.133615493774414
    9. 'F' → logprob: -19.258615493774414
    10. '_false' → logprob: -19.758615493774414

Token 149: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32964518666267395
    2. '[' → logprob: -2.2046451568603516
    3. '
' → logprob: -3.3296451568603516
    4. '<|end|>' → logprob: -3.5796451568603516
    5. '   ' → logprob: -3.8296451568603516
    6. 'B' → logprob: -4.079645156860352
    7. 'for' → logprob: -4.204645156860352
    8. ')' → logprob: -4.329645156860352
    9. ')
' → logprob: -4.704645156860352
    10. 'else' → logprob: -4.704645156860352

Token 150: '[' (ID: 58)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.9519853591918945
    2. '[' → logprob: -1.3269853591918945
    3. ')' → logprob: -2.2019853591918945
    4. '<|end|>' → logprob: -2.4519853591918945
    5. '#' → logprob: -2.7019853591918945
    6. 'print' → logprob: -3.5769853591918945
    7. ',' → logprob: -4.4519853591918945
    8. 'A' → logprob: -4.7019853591918945
    9. 'for' → logprob: -4.7019853591918945
    10. '
' → logprob: -5.0769853591918945

Token 151: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000585322268307209
    2. ' print' → logprob: -7.625585556030273
    3. 'B' → logprob: -10.000585556030273
    4. 'for' → logprob: -10.125585556030273
    5. 'i' → logprob: -12.750585556030273
    6. 'b' → logprob: -13.250585556030273
    7. '   ' → logprob: -13.375585556030273
    8. ' for' → logprob: -13.500585556030273
    9. ' B' → logprob: -14.125585556030273
    10. ']' → logprob: -14.250585556030273

Token 152: '(B' (ID: 8409)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7823730111122131
    2. '(*' → logprob: -0.9073730111122131
    3. '(b' → logprob: -2.6573729515075684
    4. '(B' → logprob: -3.4073729515075684
    5. '(x' → logprob: -3.7823729515075684
    6. '(item' → logprob: -5.157372951507568
    7. '(a' → logprob: -6.657372951507568
    8. '(' → logprob: -6.657372951507568
    9. '(min' → logprob: -6.782372951507568
    10. '(len' → logprob: -7.157372951507568

Token 153: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04074708744883537
    2. '[-' → logprob: -3.9157471656799316
    3. '[::-' → logprob: -4.665747165679932
    4. ')' → logprob: -5.540747165679932
    5. '()[' → logprob: -6.290747165679932
    6. '[' → logprob: -6.415747165679932
    7. '[j' → logprob: -7.665747165679932
    8. '[x' → logprob: -7.790747165679932
    9. '[
' → logprob: -7.790747165679932
    10. '[_' → logprob: -8.165746688842773

Token 154: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1205722838640213
    2. '],' → logprob: -2.245572328567505
    3. ')' → logprob: -5.245572090148926
    4. '),' → logprob: -6.370572090148926
    5. ',' → logprob: -8.495572090148926
    6. '-' → logprob: -8.995572090148926
    7. ' ])' → logprob: -8.995572090148926
    8. ' )' → logprob: -9.620572090148926
    9. ']' → logprob: -9.620572090148926
    10. ',end' → logprob: -10.620572090148926

Token 155: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5188758969306946
    2. 'for' → logprob: -1.3938758373260498
    3. ')' → logprob: -2.14387583732605
    4. ' for' → logprob: -3.39387583732605
    5. ')]' → logprob: -6.393876075744629
    6. ' ]' → logprob: -7.018876075744629
    7. '+' → logprob: -7.518876075744629
    8. ',j' → logprob: -7.643876075744629
    9. '])' → logprob: -7.768876075744629
    10. '()]' → logprob: -7.893876075744629

Token 156: ' j' (ID: 441)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019288709154352546
    2. ' range' → logprob: -6.251928806304932
    3. ' ' → logprob: -16.626928329467773
    4. 're' → logprob: -17.001928329467773
    5. '(range' → logprob: -17.501928329467773
    6. '  ' → logprob: -18.126928329467773
    7. '	range' → logprob: -18.126928329467773
    8. '   ' → logprob: -18.376928329467773
    9. 'B' → logprob: -18.876928329467773
    10. 'reverse' → logprob: -19.126928329467773

Token 157: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0037638552021235228
    2. 'range' → logprob: -5.878763675689697
    3. ' in' → logprob: -7.503763675689697
    4. ' ' → logprob: -7.878763675689697
    5. '(range' → logprob: -11.128764152526855
    6. ' xrange' → logprob: -12.003764152526855
    7. 'in' → logprob: -12.878764152526855
    8. '  ' → logprob: -13.128764152526855
    9. ' len' → logprob: -13.628764152526855
    10. '	range' → logprob: -14.253764152526855

Token 158: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001929228543303907
    2. ' range' → logprob: -6.25192928314209
    3. ' ' → logprob: -15.62692928314209
    4. 're' → logprob: -15.87692928314209
    5. '  ' → logprob: -16.126928329467773
    6. '   ' → logprob: -16.126928329467773
    7. '	range' → logprob: -17.126928329467773
    8. '(range' → logprob: -18.376928329467773
    9. '[::-' → logprob: -19.251928329467773
    10. '    ' → logprob: -20.001928329467773

Token 159: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -2.641841820150148e-05
    2. '(' → logprob: -10.75002670288086
    3. 'len' → logprob: -13.12502670288086
    4. ' (' → logprob: -13.12502670288086
    5. '(-' → logprob: -14.62502670288086
    6. ' len' → logprob: -15.25002670288086
    7. '(A' → logprob: -16.25002670288086
    8. '((' → logprob: -16.25002670288086
    9. ',len' → logprob: -17.87502670288086
    10. '   ' → logprob: -18.25002670288086

Token 160: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -3.047134305234067e-05
    2. '(' → logprob: -10.500030517578125
    3. '(A' → logprob: -13.125030517578125
    4. 'B' → logprob: -14.375030517578125
    5. ' (' → logprob: -15.125030517578125
    6. '((' → logprob: -17.000030517578125
    7. '(b' → logprob: -17.125030517578125
    8. '(
' → logprob: -18.000030517578125
    9. '(len' → logprob: -18.625030517578125
    10. '(D' → logprob: -18.625030517578125

Token 161: ')-' (ID: 14080)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.028787286952137947
    2. '))' → logprob: -3.77878737449646
    3. ')])' → logprob: -5.653787136077881
    4. '])]' → logprob: -7.153787136077881
    5. '-' → logprob: -7.653787136077881
    6. ')' → logprob: -7.778787136077881
    7. ' )' → logprob: -8.653787612915039
    8. '])' → logprob: -9.528787612915039
    9. '())' → logprob: -10.403787612915039
    10. ')][' → logprob: -11.028787612915039

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016206118743866682
    2. '-' → logprob: -8.875162124633789
    3. ' ' → logprob: -11.125162124633789
    4. '2' → logprob: -12.250162124633789
    5. '(' → logprob: -13.125162124633789
    6. ' -' → logprob: -15.625162124633789
    7. 'len' → logprob: -16.00016212463379
    8. ',' → logprob: -16.12516212463379
    9. '   ' → logprob: -17.00016212463379
    10. '  ' → logprob: -17.37516212463379

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02070409059524536
    2. ',-' → logprob: -4.39570426940918
    3. '-' → logprob: -5.14570426940918
    4. ' -' → logprob: -6.39570426940918
    5. ' ,' → logprob: -7.64570426940918
    6. ' ,-' → logprob: -8.89570426940918
    7. ')' → logprob: -10.64570426940918
    8. '0' → logprob: -11.89570426940918
    9. '```' → logprob: -12.27070426940918
    10. ' ' → logprob: -12.27070426940918

Token 164: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005236479919403791
    2. ' -' → logprob: -5.255236625671387
    3. '0' → logprob: -13.380236625671387
    4. ' ' → logprob: -13.755236625671387
    5. '   ' → logprob: -16.50523567199707
    6. '  ' → logprob: -18.00523567199707
    7. 'len' → logprob: -19.13023567199707
    8. '-B' → logprob: -19.63023567199707
    9. '	' → logprob: -19.75523567199707
    10. '```' → logprob: -19.75523567199707

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1398757123970427e-05
    2. ' ' → logprob: -11.500011444091797
    3. '   ' → logprob: -15.062511444091797
    4. '2' → logprob: -15.562511444091797
    5. '
' → logprob: -15.937511444091797
    6. '```' → logprob: -16.187511444091797
    7. '-' → logprob: -16.312511444091797
    8. '  ' → logprob: -16.312511444091797
    9. '(' → logprob: -16.625011444091797
    10. '0' → logprob: -17.125011444091797

Token 166: ',' (ID: 11)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040978738106787205
    2. '-' → logprob: -5.879097938537598
    3. ',' → logprob: -6.754097938537598
    4. ' -' → logprob: -9.754097938537598
    5. ',-' → logprob: -9.879097938537598
    6. '```' → logprob: -11.754097938537598
    7. ' ' → logprob: -12.129097938537598
    8. ' ,' → logprob: -13.629097938537598
    9. '   ' → logprob: -14.379097938537598
    10. '(' → logprob: -15.004097938537598

Token 167: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008615399710834026
    2. ' -' → logprob: -4.758615493774414
    3. '   ' → logprob: -14.758615493774414
    4. ' ' → logprob: -15.883615493774414
    5. '1' → logprob: -16.008615493774414
    6. '0' → logprob: -16.133615493774414
    7. '```' → logprob: -16.383615493774414
    8. '  ' → logprob: -17.633615493774414
    9. '−' → logprob: -17.633615493774414
    10. '	' → logprob: -18.258615493774414

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -12.000006675720215
    3. '-' → logprob: -15.250006675720215
    4. '```' → logprob: -16.00000762939453
    5. '
' → logprob: -16.37500762939453
    6. '   ' → logprob: -16.50000762939453
    7. ')' → logprob: -17.06250762939453
    8. ' -' → logprob: -17.18750762939453
    9. '2' → logprob: -17.56250762939453
    10. '  ' → logprob: -18.06250762939453

Token 169: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0025366635527461767
    2. ')' → logprob: -6.002536773681641
    3. ')])' → logprob: -10.25253677368164
    4. '))' → logprob: -11.25253677368164
    5. ' )' → logprob: -12.37753677368164
    6. '])' → logprob: -13.00253677368164
    7. '])]' → logprob: -13.75253677368164
    8. '0' → logprob: -13.87753677368164
    9. ')]
' → logprob: -14.12753677368164
    10. ']' → logprob: -14.12753677368164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 167
Tokens correctement prédits (1ère position, stricte): 60
Tokens correctement prédits (1ère position, avec adaptation): 61
Tokens correctement prédits (top 10): 136
Précision stricte (1ère position): 35.93%
Précision adaptée (1ère position): 36.53%
Précision (top 10): 81.44%
================================================================================
