================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
import sys
import queue
from collections import Counter
from itertools import accumulate
from fractions import gcd
from functools import reduce

def lcm(a, b):
    return a * b // gcd(a, b)

def combination_count(n, r):
    return math.factorial(n) // (math.factorial(n - r) * math.factorial(r))

def permutations_count(n, r):
    return math.factorial(n) // math.factorial(n - r)

mod = 1000000007

"""
# 標準入力取得
## 文字列
    = sys.stdin.readline().rstrip()
    = list(sys.stdin.readline().rstrip())

## 数値
    = int(sys.stdin.readline())
    = map(int, sys.stdin.readline().split())
    = list(map(int, sys.stdin.readline().split()))
    = [list(map(int, list(sys.stdin.readline().split()))) for i in range(N)]
"""

if __name__ == "__main__":
    S = sys.stdin.readline().rstrip()
    K = int(sys.stdin.readline())
    cnt = 0
    for s in S:
        if K == 0:
            print(1)
            break
        if s == "1":
            K -= 1
        else:
            print(s)
            break
    else:
        print(1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0027468616608530283
    2. '<|end|>' → logprob: -6.627747058868408
    3. '```' → logprob: -7.877747058868408
    4. '\n' → logprob: -8.12774658203125
    5. '\' → logprob: -8.25274658203125
    6. 'import' → logprob: -8.75274658203125
    7. '<|end|>' → logprob: -9.75274658203125
    8. '.e' → logprob: -10.50274658203125
    9. '.pi' → logprob: -10.62774658203125
    10. '
' → logprob: -10.87774658203125

Token 4: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.3532661199569702
    2. ' os' → logprob: -1.2282661199569702
    3. ' numpy' → logprob: -6.47826623916626
    4. ' random' → logprob: -6.72826623916626
    5. 'sys' → logprob: -6.85326623916626
    6. 'os' → logprob: -7.47826623916626
    7. ' cm' → logprob: -8.853265762329102
    8. ' ' → logprob: -9.353265762329102
    9. ' statistics' → logprob: -9.478265762329102
    10. ' re' → logprob: -9.478265762329102

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.024697184562683
    2. '<|end|>' → logprob: -1.399697184562683
    3. '\n' → logprob: -2.0246973037719727
    4. '
' → logprob: -2.0246973037719727
    5. '

' → logprob: -3.0246973037719727
    6. '```' → logprob: -3.8996973037719727
    7. 'import' → logprob: -4.024697303771973
    8. '<|end|>' → logprob: -4.149697303771973
    9. '\' → logprob: -4.399697303771973
    10. 'newline' → logprob: -4.899697303771973

Token 6: 'import' (ID: 561)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0554347038269043
    2. '\n' → logprob: -1.0554347038269043
    3. 'import' → logprob: -2.0554347038269043
    4. '<|end|>' → logprob: -2.6804347038269043
    5. '.' → logprob: -3.1804347038269043
    6. '```' → logprob: -4.055434703826904
    7. '\' → logprob: -4.305434703826904
    8. '

' → logprob: -4.305434703826904
    9. '#' → logprob: -4.930434703826904
    10. '<|end|>' → logprob: -5.680434703826904

Token 7: ' queue' (ID: 13661)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.6931831240653992
    2. ' os' → logprob: -0.6931831240653992
    3. 'random' → logprob: -11.818182945251465
    4. 're' → logprob: -12.193182945251465
    5. ' random' → logprob: -12.193182945251465
    6. '"os' → logprob: -12.568182945251465
    7. ' re' → logprob: -12.693182945251465
    8. ' time' → logprob: -12.818182945251465
    9. ' itertools' → logprob: -13.443182945251465
    10. 'time' → logprob: -13.693182945251465

Token 8: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.047605548053979874
    2. '\n' → logprob: -4.047605514526367
    3. '
' → logprob: -4.672605514526367
    4. '<|end|>' → logprob: -5.172605514526367
    5. '\' → logprob: -5.422605514526367
    6. '#' → logprob: -6.297605514526367
    7. '.Queue' → logprob: -6.297605514526367
    8. 'import' → logprob: -6.422605514526367
    9. '<|end|>' → logprob: -6.547605514526367
    10. '

' → logprob: -7.047605514526367

Token 9: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6720243096351624
    2. 'import' → logprob: -1.5470242500305176
    3. '
' → logprob: -2.1720242500305176
    4. '\n' → logprob: -2.9220242500305176
    5. '<|end|>' → logprob: -3.2970242500305176
    6. '

' → logprob: -4.297024250030518
    7. '#' → logprob: -4.547024250030518
    8. 'from' → logprob: -4.547024250030518
    9. '```' → logprob: -4.547024250030518
    10. '\' → logprob: -5.172024250030518

Token 10: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.09097597002983093
    2. 'collections' → logprob: -3.0909759998321533
    3. ' threading' → logprob: -3.2159759998321533
    4. ' typing' → logprob: -7.840975761413574
    5. ' dat' → logprob: -8.090975761413574
    6. ' ' → logprob: -8.340975761413574
    7. ' queue' → logprob: -9.340975761413574
    8. ' heap' → logprob: -9.590975761413574
    9. ' math' → logprob: -9.715975761413574
    10. ' multiprocessing' → logprob: -10.090975761413574

Token 11: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.16574977338314056
    2. 'import' → logprob: -2.0407497882843018
    3. '.' → logprob: -3.7907497882843018
    4. ' ' → logprob: -9.415749549865723
    5. '.Counter' → logprob: -9.790749549865723
    6. '```' → logprob: -10.915749549865723
    7. '<|end|>' → logprob: -10.915749549865723
    8. '.import' → logprob: -11.040749549865723
    9. '	import' → logprob: -11.540749549865723
    10. ' .' → logprob: -11.790749549865723

Token 12: ' Counter' (ID: 32251)
  Prédit: ' deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.06537759304046631
    2. 'deque' → logprob: -3.190377712249756
    3. ' defaultdict' → logprob: -3.815377712249756
    4. ' abc' → logprob: -9.440377235412598
    5. ' named' → logprob: -11.690377235412598
    6. 'abc' → logprob: -12.565377235412598
    7. ' ' → logprob: -13.190377235412598
    8. 'default' → logprob: -13.565377235412598
    9. 'named' → logprob: -13.565377235412598
    10. 'de' → logprob: -13.815377235412598

Token 13: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5155466198921204
    2. '
' → logprob: -1.8905465602874756
    3. '<|end|>' → logprob: -2.5155465602874756
    4. '\n' → logprob: -2.8905465602874756
    5. '```' → logprob: -3.0155465602874756
    6. ',' → logprob: -3.8905465602874756
    7. '\' → logprob: -4.015546798706055
    8. '

' → logprob: -4.390546798706055
    9. '.' → logprob: -5.390546798706055
    10. '<|end|>' → logprob: -5.640546798706055

Token 14: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.42067602276802063
    2. '\n' → logprob: -2.0456759929656982
    3. '<|end|>' → logprob: -2.6706759929656982
    4. '
' → logprob: -2.9206759929656982
    5. ',' → logprob: -3.6706759929656982
    6. '.' → logprob: -4.170676231384277
    7. '\' → logprob: -4.295676231384277
    8. 'def' → logprob: -4.420676231384277
    9. '```' → logprob: -4.920676231384277
    10. '<|end|>' → logprob: -5.795676231384277

Token 15: ' itertools' (ID: 103178)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.28916677832603455
    2. ' itertools' → logprob: -1.664166808128357
    3. 'typing' → logprob: -3.1641666889190674
    4. ' math' → logprob: -5.0391669273376465
    5. ' collections' → logprob: -5.7891669273376465
    6. ' heap' → logprob: -6.0391669273376465
    7. 'collections' → logprob: -6.2891669273376465
    8. 'heap' → logprob: -6.6641669273376465
    9. 'math' → logprob: -6.9141669273376465
    10. ' functools' → logprob: -7.2891669273376465

Token 16: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.18118217587471008
    2. 'import' → logprob: -1.8061821460723877
    3. '.' → logprob: -7.181182384490967
    4. ' ' → logprob: -8.556181907653809
    5. '<|end|>' → logprob: -8.806181907653809
    6. 'ertools' → logprob: -9.681181907653809
    7. '	import' → logprob: -10.056181907653809
    8. ' .' → logprob: -10.056181907653809
    9. ' itertools' → logprob: -10.181181907653809
    10. '_import' → logprob: -10.556181907653809

Token 17: ' accumulate' (ID: 74226)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.48977670073509216
    2. ' combinations' → logprob: -1.9897767305374146
    3. ' chain' → logprob: -2.364776611328125
    4. ' group' → logprob: -2.864776611328125
    5. ' cycle' → logprob: -3.239776611328125
    6. ' product' → logprob: -4.114776611328125
    7. 'per' → logprob: -4.489776611328125
    8. 'com' → logprob: -4.489776611328125
    9. ' is' → logprob: -4.739776611328125
    10. 'chain' → logprob: -5.864776611328125

Token 18: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.686575174331665
    2. '\n' → logprob: -1.311575174331665
    3. 'import' → logprob: -1.811575174331665
    4. '<|end|>' → logprob: -3.811575174331665
    5. '

' → logprob: -4.186574935913086
    6. '\' → logprob: -4.936574935913086
    7. ',' → logprob: -5.061574935913086
    8. '```' → logprob: -6.061574935913086
    9. '#' → logprob: -6.436574935913086
    10. '<|end|>' → logprob: -6.686574935913086

Token 19: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7258713245391846
    2. 'import' → logprob: -1.3508713245391846
    3. '

' → logprob: -2.1008713245391846
    4. '<|end|>' → logprob: -2.9758713245391846
    5. ',' → logprob: -3.4758713245391846
    6. '\n' → logprob: -4.2258710861206055
    7. '```' → logprob: -4.7258710861206055
    8. '#' → logprob: -4.9758710861206055
    9. 'def' → logprob: -4.9758710861206055
    10. '\' → logprob: -5.6008710861206055

Token 20: ' fractions' (ID: 110523)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.33888956904411316
    2. 'operator' → logprob: -2.4638895988464355
    3. ' typing' → logprob: -2.9638895988464355
    4. ' bis' → logprob: -3.0888895988464355
    5. ' math' → logprob: -3.2138895988464355
    6. ' heap' → logprob: -3.8388895988464355
    7. ' functools' → logprob: -3.8388895988464355
    8. 'math' → logprob: -5.2138895988464355
    9. 'bis' → logprob: -5.3388895988464355
    10. 'heap' → logprob: -5.3388895988464355

Token 21: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03411390632390976
    2. 'import' → logprob: -3.409113883972168
    3. '.' → logprob: -7.909113883972168
    4. '	import' → logprob: -10.284113883972168
    5. '<|end|>' → logprob: -10.784113883972168
    6. ' .' → logprob: -10.909113883972168
    7. '.import' → logprob: -11.784113883972168
    8. ' ' → logprob: -12.284113883972168
    9. '_import' → logprob: -12.409113883972168
    10. '<|end|>' → logprob: -13.284113883972168

Token 22: ' gcd' (ID: 106918)
  Prédit: ' Fraction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.009816531091928482
    2. 'Fraction' → logprob: -4.634816646575928
    3. ' gcd' → logprob: -10.38481616973877
    4. ' fractions' → logprob: -10.75981616973877
    5. ' ' → logprob: -12.88481616973877
    6. ' Fra' → logprob: -13.13481616973877
    7. ' F' → logprob: -13.38481616973877
    8. 'Fra' → logprob: -14.13481616973877
    9. '```' → logprob: -14.38481616973877
    10. '/F' → logprob: -15.38481616973877

Token 23: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: 'from' (ID: 2845)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: ' functools' (ID: 142636)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.006035919301211834
    2. ' math' → logprob: -5.131035804748535
    3. 'fun' → logprob: -10.256035804748535
    4. ' functools' → logprob: -10.256035804748535
    5. 'operator' → logprob: -10.881035804748535
    6. 'cmath' → logprob: -12.131035804748535
    7. 'fra' → logprob: -12.381035804748535
    8. 'typing' → logprob: -12.881035804748535
    9. 'decimal' → logprob: -13.131035804748535
    10. 'mat' → logprob: -13.631035804748535

Token 26: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.017497800290584564
    2. 'import' → logprob: -4.142498016357422
    3. ' ' → logprob: -6.767498016357422
    4. '.' → logprob: -9.142498016357422
    5. '_import' → logprob: -9.392498016357422
    6. '<|end|>' → logprob: -9.517498016357422
    7. '	import' → logprob: -10.892498016357422
    8. '_' → logprob: -12.392498016357422
    9. '.import' → logprob: -12.517498016357422
    10. ' .' → logprob: -12.517498016357422

Token 27: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.5617007613182068
    2. 'reduce' → logprob: -1.3117008209228516
    3. ' l' → logprob: -2.0617008209228516
    4. 'l' → logprob: -3.4367008209228516
    5. ' wraps' → logprob: -8.061700820922852
    6. 'wrap' → logprob: -8.686700820922852
    7. ' partial' → logprob: -8.686700820922852
    8. 'partial' → logprob: -9.186700820922852
    9. ' cmp' → logprob: -9.311700820922852
    10. ' ' → logprob: -9.936700820922852

Token 28: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.988959789276123
    2. 'import' → logprob: -1.738959789276123
    3. '
' → logprob: -1.863959789276123
    4. '<|end|>' → logprob: -1.988959789276123
    5. 'def' → logprob: -3.113959789276123
    6. ',
' → logprob: -3.613959789276123
    7. '

' → logprob: -4.238959789276123
    8. '.' → logprob: -4.363959789276123
    9. ')' → logprob: -4.363959789276123
    10. '#' → logprob: -4.988959789276123

Token 29: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8974572420120239
    2. ',' → logprob: -1.147457242012024
    3. '<|end|>' → logprob: -2.6474571228027344
    4. '
' → logprob: -2.7724571228027344
    5. 'import' → logprob: -3.0224571228027344
    6. ':' → logprob: -4.147457122802734
    7. 'def' → logprob: -4.147457122802734
    8. ')' → logprob: -4.647457122802734
    9. 'g' → logprob: -4.772457122802734
    10. '\' → logprob: -4.897457122802734

Token 30: ' l' (ID: 305)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33146268129348755
    2. ' calculate' → logprob: -2.3314626216888428
    3. ' main' → logprob: -2.4564626216888428
    4. ' compute' → logprob: -3.7064626216888428
    5. ' gcd' → logprob: -3.8314626216888428
    6. ' factorial' → logprob: -3.9564626216888428
    7. ' solve' → logprob: -5.081462860107422
    8. ' factor' → logprob: -5.331462860107422
    9. ' add' → logprob: -5.581462860107422
    10. ' my' → logprob: -5.956462860107422

Token 31: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.16840222477912903
    2. 'a' → logprob: -3.2934021949768066
    3. 'ist' → logprob: -3.4184021949768066
    4. 'en' → logprob: -3.6684021949768066
    5. 'e' → logprob: -3.6684021949768066
    6. 'ambda' → logprob: -3.9184021949768066
    7. 'og' → logprob: -5.543402194976807
    8. 'is' → logprob: -5.918402194976807
    9. 'i' → logprob: -6.418402194976807
    10. 'eft' → logprob: -7.043402194976807

Token 32: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04989342764019966
    2. '(a' → logprob: -3.049893379211426
    3. '(x' → logprob: -7.424893379211426
    4. ' (' → logprob: -7.674893379211426
    5. '<|end|>' → logprob: -9.674893379211426
    6. '(
' → logprob: -11.049893379211426
    7. '<|end|>' → logprob: -11.049893379211426
    8. '(n' → logprob: -11.049893379211426
    9. '```' → logprob: -11.424893379211426
    10. '()' → logprob: -11.924893379211426

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006979000172577798
    2. ' ,' → logprob: -7.625698089599609
    3. ',b' → logprob: -8.87569808959961
    4. ',a' → logprob: -9.62569808959961
    5. '_,' → logprob: -14.12569808959961
    6. ',n' → logprob: -14.37569808959961
    7. ' ' → logprob: -14.50069808959961
    8. ',)' → logprob: -14.87569808959961
    9. 'a' → logprob: -15.25069808959961
    10. '‌,' → logprob: -15.87569808959961

Token 34: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2014351636171341
    2. 'b' → logprob: -1.7014352083206177
    3. ' ' → logprob: -10.826435089111328
    4. '	b' → logprob: -14.201435089111328
    5. ',b' → logprob: -14.826435089111328
    6. '*b' → logprob: -15.576435089111328
    7. '    ' → logprob: -15.701435089111328
    8. ')b' → logprob: -15.701435089111328
    9. ' ' → logprob: -16.701435089111328
    10. ' б' → logprob: -16.701435089111328

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012585002928972244
    2. ')' → logprob: -4.387585163116455
    3. '):
' → logprob: -10.012584686279297
    4. ' ):' → logprob: -11.387584686279297
    5. ',' → logprob: -11.637584686279297
    6. '),' → logprob: -12.387584686279297
    7. ')=' → logprob: -14.262584686279297
    8. ' ' → logprob: -14.387584686279297
    9. '):
' → logprob: -14.387584686279297
    10. ':' → logprob: -14.512584686279297

Token 36: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9670076370239258
    2. '   ' → logprob: -1.4670076370239258
    3. ' return' → logprob: -1.5920076370239258
    4. ':' → logprob: -2.717007637023926
    5. '):' → logprob: -2.842007637023926
    6. ' :' → logprob: -3.467007637023926
    7. ' ):' → logprob: -4.467007637023926
    8. '  ' → logprob: -5.717007637023926
    9. '    ' → logprob: -6.217007637023926
    10. ' a' → logprob: -6.217007637023926

Token 37: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.06734666228294373
    2. '    ' → logprob: -3.4423465728759766
    3. '   ' → logprob: -4.067346572875977
    4. ' ' → logprob: -4.317346572875977
    5. 'return' (adapté à ' return') → logprob: -6.442346572875977
    6. ' 
' → logprob: -7.942346572875977
    7. ' a' → logprob: -8.692346572875977
    8. '    
' → logprob: -8.942346572875977
    9. '     
' → logprob: -9.317346572875977
    10. ' )' → logprob: -9.692346572875977

Token 38: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.015549294650554657
    2. 'a' → logprob: -4.640549182891846
    3. ' (' → logprob: -5.390549182891846
    4. ' abs' → logprob: -7.265549182891846
    5. ' math' → logprob: -8.140549659729004
    6. '(a' → logprob: -9.140549659729004
    7. ' ' → logprob: -9.640549659729004
    8. ' int' → logprob: -10.890549659729004
    9. '(' → logprob: -11.515549659729004
    10. 'math' → logprob: -11.890549659729004

Token 39: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05653868988156319
    2. '*' → logprob: -2.9315385818481445
    3. ' ' → logprob: -6.8065385818481445
    4. '*b' → logprob: -7.6815385818481445
    5. ' %' → logprob: -10.306538581848145
    6. '%' → logprob: -11.056538581848145
    7. '*l' → logprob: -12.181538581848145
    8. ' if' → logprob: -12.306538581848145
    9. '*a' → logprob: -12.431538581848145
    10. ' ' → logprob: -12.431538581848145

Token 40: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.018153101205825806
    2. ' b' → logprob: -4.018153190612793
    3. ' ' → logprob: -13.143153190612793
    4. '(b' → logprob: -14.643153190612793
    5. ' (' → logprob: -15.018153190612793
    6. '  ' → logprob: -15.518153190612793
    7. '	b' → logprob: -15.768153190612793
    8. '   ' → logprob: -15.893153190612793
    9. '    ' → logprob: -17.393152236938477
    10. '(' → logprob: -18.643152236938477

Token 41: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.03824964538216591
    2. '//' → logprob: -3.2882497310638428
    3. ' ' → logprob: -8.913249969482422
    4. ')' → logprob: -10.413249969482422
    5. '#' → logprob: -10.788249969482422
    6. '```' → logprob: -12.038249969482422
    7. ' #' → logprob: -12.288249969482422
    8. ' /' → logprob: -13.038249969482422
    9. ' ' → logprob: -13.163249969482422
    10. ')//' → logprob: -13.288249969482422

Token 42: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.11326733976602554
    2. 'math' → logprob: -2.238267421722412
    3. ' gcd' → logprob: -8.363266944885254
    4. ' math' → logprob: -8.613266944885254
    5. '   ' → logprob: -11.738266944885254
    6. '(math' → logprob: -12.113266944885254
    7. '_g' → logprob: -12.613266944885254
    8. '__' → logprob: -12.863266944885254
    9. '-g' → logprob: -13.738266944885254
    10. '(g' → logprob: -13.988266944885254

Token 43: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0432116836309433
    2. '(' → logprob: -3.1682116985321045
    3. '(b' → logprob: -8.543211936950684
    4. ' (' → logprob: -11.793211936950684
    5. '(abs' → logprob: -12.793211936950684
    6. '(ab' → logprob: -13.293211936950684
    7. 'a' → logprob: -13.543211936950684
    8. '(s' → logprob: -13.918211936950684
    9. '(
' → logprob: -14.293211936950684
    10. '(g' → logprob: -14.668211936950684

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.131059929728508
    2. '(b' → logprob: -3.5060598850250244
    3. 'b' → logprob: -3.7560598850250244
    4. '(' → logprob: -3.8810598850250244
    5. '(a' → logprob: -4.1310601234436035
    6. ' ,' → logprob: -4.5060601234436035
    7. ')' → logprob: -4.5060601234436035
    8. ',b' → logprob: -5.2560601234436035
    9. ' (' → logprob: -5.8810601234436035
    10. ' b' → logprob: -6.8810601234436035

Token 45: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.012529547326266766
    2. ' b' → logprob: -4.387529373168945
    3. 'a' → logprob: -11.137529373168945
    4. ' ' → logprob: -12.512529373168945
    5. ')b' → logprob: -14.512529373168945
    6. ' a' → logprob: -14.762529373168945
    7. '   ' → logprob: -15.387529373168945
    8. '  ' → logprob: -15.637529373168945
    9. '	b' → logprob: -15.887529373168945
    10. '(b' → logprob: -16.137529373168945

Token 46: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -14.875000953674316
    3. ' )' → logprob: -14.875000953674316
    4. '))' → logprob: -15.125000953674316
    5. ')return' → logprob: -16.000001907348633
    6. ')))' → logprob: -17.000001907348633
    7. '),' → logprob: -17.500001907348633
    8. ')a' → logprob: -17.500001907348633
    9. ')`' → logprob: -17.750001907348633
    10. '   ' → logprob: -18.000001907348633

Token 47: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11054621636867523
    2. '
' → logprob: -2.360546112060547
    3. '\n' → logprob: -5.485546112060547
    4. '<|end|>' → logprob: -6.360546112060547
    5. '\' → logprob: -6.735546112060547
    6. '

' → logprob: -6.860546112060547
    7. '#' → logprob: -7.235546112060547
    8. '```' → logprob: -7.610546112060547
    9. ' def' → logprob: -8.860546112060547
    10. '<|end|>' → logprob: -8.985546112060547

Token 48: ' combination' (ID: 14083)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5835915803909302
    2. ' l' → logprob: -1.2085915803909302
    3. ' gcd' → logprob: -3.2085914611816406
    4. ' solve' → logprob: -3.3335914611816406
    5. ' factorial' → logprob: -3.4585914611816406
    6. ' ' → logprob: -5.333591461181641
    7. ' pow' → logprob: -5.583591461181641
    8. ' add' → logprob: -5.833591461181641
    9. ' find' → logprob: -5.958591461181641
    10. ' reduce' → logprob: -5.958591461181641

Token 49: '_count' (ID: 7536)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29144802689552307
    2. 's' → logprob: -1.4164479970932007
    3. '(n' → logprob: -5.04144811630249
    4. '(s' → logprob: -5.91644811630249
    5. '_' → logprob: -8.291447639465332
    6. '(a' → logprob: -8.416447639465332
    7. ' (' → logprob: -8.666447639465332
    8. '_s' → logprob: -8.916447639465332
    9. '<|end|>' → logprob: -9.791447639465332
    10. '(
' → logprob: -10.916447639465332

Token 50: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010669062845408916
    2. '(n' → logprob: -4.635669231414795
    3. ' (' → logprob: -7.260669231414795
    4. '<|end|>' → logprob: -9.760668754577637
    5. '(a' → logprob: -10.010668754577637
    6. '<|end|>' → logprob: -10.760668754577637
    7. '(user' → logprob: -11.760668754577637
    8. 's' → logprob: -11.885668754577637
    9. '(token' → logprob: -12.010668754577637
    10. '(s' → logprob: -12.135668754577637

Token 51: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038813185528852046
    2. ' ,' → logprob: -7.875388145446777
    3. ',k' → logprob: -12.625388145446777
    4. ',n' → logprob: -12.750388145446777
    5. ')' → logprob: -13.875388145446777
    6. ' ' → logprob: -15.250388145446777
    7. ',
' → logprob: -15.750388145446777
    8. '‌,' → logprob: -16.50038719177246
    9. '，' → logprob: -16.62538719177246
    10. 's' → logprob: -16.75038719177246

Token 52: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3381900489330292
    2. 'k' → logprob: -1.5881900787353516
    3. ' r' → logprob: -2.5881900787353516
    4. ' k' → logprob: -4.963190078735352
    5. ' ' → logprob: -7.963190078735352
    6. '```' → logprob: -10.088190078735352
    7. '   ' → logprob: -10.213190078735352
    8. '  ' → logprob: -11.088190078735352
    9. '2' → logprob: -11.775690078735352
    10. ')' → logprob: -11.900690078735352

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06202224642038345
    2. ')' → logprob: -2.8120222091674805
    3. '):
' → logprob: -10.06202220916748
    4. ' ):' → logprob: -12.68702220916748
    5. ')：' → logprob: -13.18702220916748
    6. ')**' → logprob: -13.68702220916748
    7. ''):' → logprob: -13.93702220916748
    8. ':' → logprob: -14.31202220916748
    9. '   ' → logprob: -14.56202220916748
    10. ')=' → logprob: -14.68702220916748

Token 54: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3143724203109741
    2. ':' → logprob: -1.4393724203109741
    3. '):' → logprob: -4.064372539520264
    4. '<|end|>' → logprob: -5.189372539520264
    5. ' return' → logprob: -5.564372539520264
    6. ':return' → logprob: -6.314372539520264
    7. ' :' → logprob: -7.064372539520264
    8. ':
' → logprob: -7.564372539520264
    9. 'return' → logprob: -7.689372539520264
    10. '():' → logprob: -8.064372062683105

Token 55: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6973110437393188
    2. ' if' → logprob: -1.5723110437393188
    3. '   ' → logprob: -1.9473110437393188
    4. 'return' (adapté à ' return') → logprob: -2.6973109245300293
    5. ' math' → logprob: -3.1973109245300293
    6. 'if' → logprob: -3.5723109245300293
    7. 'import' → logprob: -5.697310924530029
    8. 'math' → logprob: -5.822310924530029
    9. ' from' → logprob: -5.947310924530029
    10. 'from' → logprob: -6.072310924530029

Token 56: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.5762291550636292
    2. ' math' → logprob: -0.8262291550636292
    3. ' ' → logprob: -8.951229095458984
    4. '1' → logprob: -9.701229095458984
    5. 'factor' → logprob: -10.201229095458984
    6. '(math' → logprob: -10.201229095458984
    7. ' factorial' → logprob: -11.326229095458984
    8. 'reduce' → logprob: -11.951229095458984
    9. '   ' → logprob: -13.826229095458984
    10. 'fact' → logprob: -14.076229095458984

Token 57: '.factor' (ID: 196244)
  Prédit: '.com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.com' → logprob: -0.0425538644194603
    2. '.' → logprob: -3.2925539016723633
    3. '.factor' → logprob: -5.417553901672363
    4. ' .' → logprob: -10.417553901672363
    5. '.ceil' → logprob: -11.292553901672363
    6. '.Com' → logprob: -11.542553901672363
    7. '.prod' → logprob: -12.542553901672363
    8. ' comb' → logprob: -13.542553901672363
    9. '.sqrt' → logprob: -13.542553901672363
    10. 'comb' → logprob: -13.792553901672363

Token 58: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.1221945583820343
    2. 'ial' → logprob: -2.497194528579712
    3. 'l' → logprob: -4.997194766998291
    4. 'ctor' → logprob: -4.997194766998291
    5. 'nal' → logprob: -5.872194766998291
    6. 'z' → logprob: -5.997194766998291
    7. 'cal' → logprob: -6.122194766998291
    8. 'math' → logprob: -6.622194766998291
    9. '```' → logprob: -6.747194766998291
    10. 'orial' → logprob: -6.872194766998291

Token 59: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3868725895881653
    2. '(' → logprob: -1.1368725299835205
    3. ' (' → logprob: -14.136872291564941
    4. '(
' → logprob: -14.511872291564941
    5. '(

' → logprob: -16.511873245239258
    6. '(nn' → logprob: -17.261873245239258
    7. '()' → logprob: -17.261873245239258
    8. '("("' → logprob: -17.761873245239258
    9. '(r' → logprob: -17.886873245239258
    10. '((' → logprob: -18.011873245239258

Token 60: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007131471065804362
    2. ' )' → logprob: -7.250713348388672
    3. ')//' → logprob: -13.375713348388672
    4. '   ' → logprob: -14.500713348388672
    5. ')/' → logprob: -15.000713348388672
    6. ')/(' → logprob: -15.750713348388672
    7. ')n' → logprob: -15.875713348388672
    8. '')' → logprob: -16.250713348388672
    9. ')`' → logprob: -16.500713348388672
    10. '))' → logprob: -16.500713348388672

Token 61: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.20161040127277374
    2. '//' → logprob: -1.7016104459762573
    3. ')' → logprob: -10.076610565185547
    4. ' /' → logprob: -10.201610565185547
    5. '/' → logprob: -10.326610565185547
    6. 'def' → logprob: -10.576610565185547
    7. '   ' → logprob: -10.701610565185547
    8. ' ' → logprob: -11.701610565185547
    9. '#' → logprob: -11.951610565185547
    10. '```' → logprob: -11.951610565185547

Token 62: ' (' (ID: 350)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.0059557026252150536
    2. ' (' → logprob: -5.130955696105957
    3. '(' → logprob: -11.630955696105957
    4. 'math' → logprob: -11.755955696105957
    5. '(m' → logprob: -12.255955696105957
    6. ' math' → logprob: -13.255955696105957
    7. '((' → logprob: -13.505955696105957
    8. '(mat' → logprob: -13.880955696105957
    9. '(Math' → logprob: -14.505955696105957
    10. ' ' → logprob: -16.130956649780273

Token 63: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.10439323633909225
    2. '(math' → logprob: -2.354393243789673
    3. ' math' → logprob: -5.479393005371094
    4. '(' → logprob: -12.729393005371094
    5. '   ' → logprob: -13.479393005371094
    6. ' (' → logprob: -14.479393005371094
    7. '.math' → logprob: -15.104393005371094
    8. ')' → logprob: -15.229393005371094
    9. '    ' → logprob: -15.354393005371094
    10. 'Math' → logprob: -15.729393005371094

Token 64: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -0.062017086893320084
    2. '.' → logprob: -2.8120172023773193
    3. '.fac' → logprob: -11.062017440795898
    4. '.fact' → logprob: -11.437017440795898
    5. ' factorial' → logprob: -12.062017440795898
    6. 'factor' → logprob: -12.312017440795898
    7. '.timedelta' → logprob: -13.437017440795898
    8. '.f' → logprob: -13.562017440795898
    9. '.fml' → logprob: -13.937017440795898
    10. ' .' → logprob: -14.187017440795898

Token 65: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.03641607612371445
    2. 'atorial' → logprob: -4.536416053771973
    3. 'orial' → logprob: -4.786416053771973
    4. 'actor' → logprob: -5.286416053771973
    5. 'cial' → logprob: -5.536416053771973
    6. 'omial' → logprob: -5.536416053771973
    7. 'al' → logprob: -6.161416053771973
    8. ' factorial' → logprob: -7.786416053771973
    9. 'rial' → logprob: -8.161416053771973
    10. 'factor' → logprob: -8.286416053771973

Token 66: '(n' (ID: 2406)
  Prédit: '(r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0005008471780456603
    2. '(' → logprob: -8.125500679016113
    3. '(n' → logprob: -8.500500679016113
    4. ' (' → logprob: -14.250500679016113
    5. 'r' → logprob: -15.000500679016113
    6. ')' → logprob: -15.125500679016113
    7. '(
' → logprob: -16.12550163269043
    8. '```' → logprob: -17.25050163269043
    9. ')(' → logprob: -17.50050163269043
    10. '((' → logprob: -18.75050163269043

Token 67: ' -' (ID: 533)
  Prédit: '-r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.7318732142448425
    2. ' -' → logprob: -1.2318732738494873
    3. '-' → logprob: -1.4818732738494873
    4. ')' → logprob: -10.731873512268066
    5. 'r' → logprob: -11.731873512268066
    6. ' r' → logprob: -12.856873512268066
    7. ' ' → logprob: -13.731873512268066
    8. '-k' → logprob: -14.106873512268066
    9. '-t' → logprob: -15.481873512268066
    10. '-n' → logprob: -15.856873512268066

Token 68: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.38687145709991455
    2. 'r' → logprob: -1.1368714570999146
    3. ' ' → logprob: -14.886871337890625
    4. '	r' → logprob: -16.636871337890625
    5. ')' → logprob: -18.136871337890625
    6. '<|end|>' → logprob: -18.261871337890625
    7. '_r' → logprob: -18.511871337890625
    8. '  ' → logprob: -19.011871337890625
    9. ' )' → logprob: -20.011871337890625
    10. '<|end|>' → logprob: -20.136871337890625

Token 69: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.065608562901616e-05
    2. ' )' → logprob: -9.500081062316895
    3. ')*' → logprob: -12.250081062316895
    4. '))' → logprob: -14.000081062316895
    5. ')
' → logprob: -17.250080108642578
    6. ')`' → logprob: -17.250080108642578
    7. '）' → logprob: -17.375080108642578
    8. '')' → logprob: -17.375080108642578
    9. '*' → logprob: -18.125080108642578
    10. '```' → logprob: -18.375080108642578

Token 70: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.40530309081077576
    2. ' *' → logprob: -1.1553031206130981
    3. ')' → logprob: -4.030303001403809
    4. ' )' → logprob: -8.030303001403809
    5. ' ' → logprob: -9.280303001403809
    6. ')*' → logprob: -10.280303001403809
    7. '```' → logprob: -11.405303001403809
    8. '*)' → logprob: -12.280303001403809
    9. '))' → logprob: -12.405303001403809
    10. ' ' → logprob: -12.405303001403809

Token 71: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.10021109133958817
    2. ' math' → logprob: -2.3502111434936523
    3. '(math' → logprob: -12.475211143493652
    4. '.math' → logprob: -15.225211143493652
    5. '   ' → logprob: -16.100210189819336
    6. ' ' → logprob: -16.475210189819336
    7. '  ' → logprob: -17.100210189819336
    8. 'python' → logprob: -17.350210189819336
    9. '    ' → logprob: -18.225210189819336
    10. 'mat' → logprob: -18.350210189819336

Token 72: '.factor' (ID: 196244)
  Prédit: '.factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.factor' → logprob: -3.297462171758525e-05
    2. '.' → logprob: -11.000033378601074
    3. '.f' → logprob: -12.250033378601074
    4. 'factor' → logprob: -12.500033378601074
    5. '.fac' → logprob: -13.000033378601074
    6. '.floor' → logprob: -14.000033378601074
    7. '.fact' → logprob: -14.125033378601074
    8. '.token' → logprob: -14.625033378601074
    9. '.fre' → logprob: -14.750033378601074
    10. '.timedelta' → logprob: -15.000033378601074

Token 73: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.463266521692276
    2. 'omial' → logprob: -1.7132664918899536
    3. 'cial' → logprob: -1.8382664918899536
    4. 'ical' → logprob: -4.588266372680664
    5. '```' → logprob: -4.713266372680664
    6. 'orial' → logprob: -5.463266372680664
    7. 'atorial' → logprob: -6.713266372680664
    8. 'rial' → logprob: -6.963266372680664
    9. ' factorial' → logprob: -7.088266372680664
    10. 'acial' → logprob: -7.213266372680664

Token 74: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -4.572941179503687e-05
    2. '(' → logprob: -10.000045776367188
    3. 'r' → logprob: -16.000045776367188
    4. '(n' → logprob: -16.625045776367188
    5. ')' → logprob: -17.000045776367188
    6. ' (' → logprob: -17.000045776367188
    7. '(
' → logprob: -18.250045776367188
    8. ')(' → logprob: -19.125045776367188
    9. '	r' → logprob: -20.375045776367188
    10. '[r' → logprob: -20.375045776367188

Token 75: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01815134845674038
    2. '))' → logprob: -4.01815128326416
    3. ')))' → logprob: -13.89315128326416
    4. ')
' → logprob: -15.51815128326416
    5. ' )' → logprob: -15.89315128326416
    6. ')}' → logprob: -17.018152236938477
    7. ')")' → logprob: -17.643152236938477
    8. '()' → logprob: -17.768152236938477
    9. '})' → logprob: -17.768152236938477
    10. '),' → logprob: -18.018152236938477

Token 76: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07811138033866882
    2. '
' → logprob: -2.703111410140991
    3. '<|end|>' → logprob: -6.328111171722412
    4. '\n' → logprob: -6.453111171722412
    5. '

' → logprob: -6.453111171722412
    6. '#' → logprob: -6.828111171722412
    7. '\' → logprob: -7.203111171722412
    8. 'n' → logprob: -8.07811164855957
    9. ' def' → logprob: -8.32811164855957
    10. 'd' → logprob: -8.32811164855957

Token 77: ' permutations' (ID: 174595)
  Prédit: ' combination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combination' → logprob: -0.6027323007583618
    2. ' factorial' → logprob: -1.8527323007583618
    3. ' permutations' → logprob: -2.1027321815490723
    4. ' permutation' → logprob: -2.8527321815490723
    5. ' combinations' → logprob: -3.2277321815490723
    6. ' count' → logprob: -4.227732181549072
    7. ' perm' → logprob: -4.352732181549072
    8. ' main' → logprob: -4.977732181549072
    9. ' comb' → logprob: -5.102732181549072
    10. ' accumulate' → logprob: -5.352732181549072

Token 78: '_count' (ID: 7536)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4810912013053894
    2. '_count' → logprob: -0.9810912013053894
    3. '(n' → logprob: -5.231091022491455
    4. ' (' → logprob: -7.856091022491455
    5. '_' → logprob: -8.106091499328613
    6. '(_' → logprob: -8.356091499328613
    7. '_counts' → logprob: -8.356091499328613
    8. '_factor' → logprob: -8.481091499328613
    9. '(count' → logprob: -9.981091499328613
    10. '_n' → logprob: -10.731091499328613

Token 79: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22565597295761108
    2. '(n' → logprob: -1.6006560325622559
    3. ' (' → logprob: -9.100655555725098
    4. '<|end|>' → logprob: -9.225655555725098
    5. '(a' → logprob: -11.225655555725098
    6. '<|end|>' → logprob: -12.100655555725098
    7. '(
' → logprob: -13.100655555725098
    8. '(N' → logprob: -13.475655555725098
    9. '(user' → logprob: -13.725655555725098
    10. '(p' → logprob: -14.350655555725098

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3464544432936236e-05
    2. ' ,' → logprob: -10.125043869018555
    3. ',n' → logprob: -13.250043869018555
    4. ',r' → logprob: -13.750043869018555
    5. ')' → logprob: -15.875043869018555
    6. ' ' → logprob: -16.500043869018555
    7. '，' → logprob: -16.750043869018555
    8. '‌,' → logprob: -17.375043869018555
    9. ',
' → logprob: -17.750043869018555
    10. ',s' → logprob: -17.875043869018555

Token 81: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.4289630651473999
    2. 'r' → logprob: -1.0539630651474
    3. ' k' → logprob: -9.053962707519531
    4. 'k' → logprob: -9.053962707519531
    5. ' ' → logprob: -10.678962707519531
    6. ')' → logprob: -13.678962707519531
    7. ' n' → logprob: -13.928962707519531
    8. 'n' → logprob: -14.303962707519531
    9. '	r' → logprob: -14.678962707519531
    10. '   ' → logprob: -14.803962707519531

Token 82: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00023286080977413803
    2. ')' → logprob: -8.375232696533203
    3. ' ):' → logprob: -14.000232696533203
    4. ':' → logprob: -14.250232696533203
    5. '):
' → logprob: -14.375232696533203
    6. ')：' → logprob: -16.125232696533203
    7. ''):' → logprob: -17.125232696533203
    8. '():' → logprob: -17.500232696533203
    9. '   ' → logprob: -18.500232696533203
    10. '）：' → logprob: -18.500232696533203

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08445204794406891
    2. ' math' → logprob: -2.8344521522521973
    3. ' return' → logprob: -4.459452152252197
    4. '    ' → logprob: -5.459452152252197
    5. ':' → logprob: -5.959452152252197
    6. 'return' → logprob: -6.709452152252197
    7. 'math' → logprob: -6.709452152252197
    8. '(math' → logprob: -7.834452152252197
    9. ' :' → logprob: -8.084451675415039
    10. '):' → logprob: -9.084451675415039

Token 84: ' return' (ID: 622)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.8346167802810669
    2. ' return' → logprob: -1.084616780281067
    3. 'return' (adapté à ' return') → logprob: -1.959616780281067
    4. 'math' → logprob: -2.4596166610717773
    5. '   ' → logprob: -6.584616661071777
    6. '    ' → logprob: -10.084616661071777
    7. ' ' → logprob: -10.209616661071777
    8. '```' → logprob: -10.834616661071777
    9. '(math' → logprob: -11.084616661071777
    10. 'import' → logprob: -11.959616661071777

Token 85: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.06198415905237198
    2. 'math' → logprob: -2.811984062194824
    3. ' ' → logprob: -11.686984062194824
    4. '   ' → logprob: -12.811984062194824
    5. '(math' → logprob: -13.186984062194824
    6. ' factorial' → logprob: -13.686984062194824
    7. '  ' → logprob: -14.561984062194824
    8. '    ' → logprob: -14.561984062194824
    9. ' ' → logprob: -15.061984062194824
    10. '```' → logprob: -15.186984062194824

Token 86: '.factor' (ID: 196244)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -2.4153549020411447e-05
    2. '.
' → logprob: -12.37502384185791
    3. '."""' → logprob: -12.50002384185791
    4. ' .' → logprob: -13.00002384185791
    5. '.''' → logprob: -13.37502384185791
    6. '<|end|>' → logprob: -13.37502384185791
    7. '.

' → logprob: -13.62502384185791
    8. '.'.' → logprob: -13.62502384185791
    9. ''.' → logprob: -13.75002384185791
    10. '."' → logprob: -14.37502384185791

Token 87: 'ial' (ID: 563)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3731870949268341
    2. 'a' → logprob: -1.8731870651245117
    3. '.t' → logprob: -3.8731870651245117
    4. ''.' → logprob: -3.9981870651245117
    5. '.a' → logprob: -4.248187065124512
    6. 't' → logprob: -4.373187065124512
    7. 'al' → logprob: -4.498187065124512
    8. 'c' → logprob: -4.873187065124512
    9. '.i' → logprob: -4.998187065124512
    10. '```' → logprob: -4.998187065124512

Token 88: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.57594233751297
    2. '(' → logprob: -0.82594233751297
    3. '(
' → logprob: -13.575942039489746
    4. ' (' → logprob: -14.200942039489746
    5. '(

' → logprob: -14.575942039489746
    6. '(r' → logprob: -16.075942993164062
    7. '('' → logprob: -16.075942993164062
    8. '()' → logprob: -16.950942993164062
    9. '(a' → logprob: -17.075942993164062
    10. '((' → logprob: -17.200942993164062

Token 89: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006346326321363449
    2. '-' → logprob: -6.006346225738525
    3. ' )' → logprob: -6.256346225738525
    4. ' -' → logprob: -6.381346225738525
    5. ' ' → logprob: -8.381346702575684
    6. ',' → logprob: -12.131346702575684
    7. '   ' → logprob: -12.506346702575684
    8. ')
' → logprob: -13.131346702575684
    9. '	' → logprob: -13.631346702575684
    10. '' → logprob: -13.756346702575684

Token 90: ' //' (ID: 602)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5630863308906555
    2. ')' → logprob: -1.8130862712860107
    3. '**' → logprob: -2.6880862712860107
    4. '<|end|>' → logprob: -2.9380862712860107
    5. ' ' → logprob: -3.5630862712860107
    6. '*' → logprob: -3.5630862712860107
    7. '[' → logprob: -4.43808650970459
    8. ''' → logprob: -4.43808650970459
    9. '(
' → logprob: -4.68808650970459
    10. '#' → logprob: -4.68808650970459

Token 91: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.04661104455590248
    2. 'math' → logprob: -3.1716110706329346
    3. '(math' → logprob: -5.6716108322143555
    4. ' ' → logprob: -9.421610832214355
    5. ' ' → logprob: -9.796610832214355
    6. '.math' → logprob: -11.796610832214355
    7. '(' → logprob: -11.921610832214355
    8. ' factorial' → logprob: -12.671610832214355
    9. ' (' → logprob: -13.046610832214355
    10. ' `' → logprob: -13.921610832214355

Token 92: '.factor' (ID: 196244)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6989861130714417
    2. '.factor' → logprob: -0.6989861130714417
    3. '.f' → logprob: -5.948986053466797
    4. ' factorial' → logprob: -7.948986053466797
    5. '.fac' → logprob: -8.073986053466797
    6. '.fact' → logprob: -8.198986053466797
    7. '.python' → logprob: -8.323986053466797
    8. '.timedelta' → logprob: -8.323986053466797
    9. '.fre' → logprob: -8.448986053466797
    10. '.fa' → logprob: -8.698986053466797

Token 93: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.2578335106372833
    2. 'atorial' → logprob: -2.257833480834961
    3. 'cial' → logprob: -3.007833480834961
    4. 'a' → logprob: -4.507833480834961
    5. 'o' → logprob: -4.632833480834961
    6. 'orial' → logprob: -4.632833480834961
    7. 'ial' → logprob: -5.007833480834961
    8. 'ctor' → logprob: -5.257833480834961
    9. 'actor' → logprob: -5.632833480834961
    10. '```' → logprob: -5.632833480834961

Token 94: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0046235607005655766
    2. '(' → logprob: -5.3796234130859375
    3. ' (' → logprob: -12.754623413085938
    4. '((' → logprob: -15.379623413085938
    5. 'n' → logprob: -16.379623413085938
    6. '(
' → logprob: -16.504623413085938
    7. '(r' → logprob: -17.004623413085938
    8. '\(' → logprob: -17.879623413085938
    9. '(nn' → logprob: -18.379623413085938
    10. ' ' → logprob: -18.504623413085938

Token 95: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.18324469029903412
    2. '-' → logprob: -1.8082447052001953
    3. '-r' → logprob: -5.683244705200195
    4. ' ' → logprob: -9.558244705200195
    5. 'r' → logprob: -12.058244705200195
    6. ' r' → logprob: -12.308244705200195
    7. ' -
' → logprob: -13.183244705200195
    8. ')' → logprob: -13.558244705200195
    9. '-n' → logprob: -13.558244705200195
    10. '<|end|>' → logprob: -13.808244705200195

Token 96: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.16030028462409973
    2. 'r' → logprob: -1.9103002548217773
    3. ' ' → logprob: -9.535300254821777
    4. ')' → logprob: -13.035300254821777
    5. '  ' → logprob: -14.660300254821777
    6. '	r' → logprob: -15.035300254821777
    7. '_r' → logprob: -15.035300254821777
    8. ' )' → logprob: -15.785300254821777
    9. ''' → logprob: -16.035301208496094
    10. '   ' → logprob: -16.410301208496094

Token 97: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.511406809295295e-06
    2. ' )' → logprob: -12.125006675720215
    3. '(' → logprob: -14.750006675720215
    4. '')' → logprob: -15.500006675720215
    5. ')
' → logprob: -15.750006675720215
    6. ' ' → logprob: -16.1250057220459
    7. '))' → logprob: -16.2500057220459
    8. ')`' → logprob: -17.1250057220459
    9. '}' → logprob: -18.5000057220459
    10. ')

' → logprob: -18.6250057220459

Token 98: 'mod' (ID: 4847)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2619316875934601
    2. '
' → logprob: -2.0119316577911377
    3. '\' → logprob: -3.2619316577911377
    4. 'def' → logprob: -3.6369316577911377
    5. '#' → logprob: -4.261931896209717
    6. '\n' → logprob: -4.761931896209717
    7. '' → logprob: -5.761931896209717
    8. 'n' → logprob: -5.761931896209717
    9. '

' → logprob: -6.886931896209717
    10. ' 
' → logprob: -7.386931896209717

Token 99: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0371616892516613
    2. '=' → logprob: -4.162161827087402
    3. '<|end|>' → logprob: -4.287161827087402
    4. ' =' → logprob: -5.787161827087402
    5. '_' → logprob: -6.412161827087402
    6. ' )' → logprob: -6.912161827087402
    7. ')' → logprob: -7.662161827087402
    8. '<|end|>' → logprob: -8.037161827087402
    9. '.' → logprob: -8.287161827087402
    10. 'space' → logprob: -9.537161827087402

Token 100: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1013842448592186
    2. '10' → logprob: -2.351384162902832
    3. '1' → logprob: -7.226384162902832
    4. '100' → logprob: -7.726384162902832
    5. ''' → logprob: -13.351384162902832
    6. '0' → logprob: -13.851384162902832
    7. ' 
' → logprob: -13.976384162902832
    8. '32' → logprob: -13.976384162902832
    9. ' (' → logprob: -14.226384162902832
    10. '"' → logprob: -14.726384162902832

Token 101: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004099177662283182
    2. '100' → logprob: -5.504099369049072
    3. '1' → logprob: -10.879098892211914
    4. '998' → logprob: -13.254098892211914
    5. ' ' → logprob: -16.254098892211914
    6. 'int' → logprob: -17.629098892211914
    7. '１０' → logprob: -19.254098892211914
    8. '(' → logprob: -19.379098892211914
    9. 'pow' → logprob: -20.504098892211914
    10. '```' → logprob: -21.379098892211914

Token 102: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.42315077781677246
    2. '9' → logprob: -1.1731507778167725
    3. '+' → logprob: -4.298151016235352
    4. '09' → logprob: -4.298151016235352
    5. '0' → logprob: -6.173151016235352
    6. '009' → logprob: -6.798151016235352
    7. ')' → logprob: -6.923151016235352
    8. '003' → logprob: -7.298151016235352
    9. '%' → logprob: -7.673151016235352
    10. '00' → logprob: -8.048151016235352

Token 103: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.007327740080654621
    2. '19' → logprob: -5.632327556610107
    3. '7' → logprob: -5.757327556610107
    4. '0' → logprob: -8.382328033447266
    5. '007' → logprob: -8.382328033447266
    6. '00' → logprob: -10.132328033447266
    7. '07' → logprob: -10.507328033447266
    8. '3' → logprob: -11.132328033447266
    9. '9' → logprob: -12.382328033447266
    10. ' ' → logprob: -12.507328033447266

Token 104: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -7.896309739408025e-07
    2. '+' → logprob: -14.375000953674316
    3. ' ' → logprob: -16.375
    4. '9' → logprob: -16.625
    5. '0' → logprob: -17.75
    6. ' +' → logprob: -19.25
    7. '07' → logprob: -19.375
    8. '７' → logprob: -19.625
    9. '```' → logprob: -20.125
    10. '' → logprob: -20.25

Token 105: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08033545315265656
    2. '\n' → logprob: -2.8303353786468506
    3. '<|end|>' → logprob: -4.95533561706543
    4. '

' → logprob: -5.45533561706543
    5. '\' → logprob: -5.95533561706543
    6. 'def' → logprob: -6.83033561706543
    7. '' → logprob: -7.33033561706543
    8. ' 
' → logprob: -7.33033561706543
    9. '
' → logprob: -7.70533561706543
    10. '#' → logprob: -7.70533561706543

Token 106: '"""
' (ID: 15611)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.038241270929574966
    2. 'def' → logprob: -3.413241386413574
    3. '\' → logprob: -6.413241386413574
    4. '#' → logprob: -6.413241386413574
    5. 'n' → logprob: -7.538241386413574
    6. '
' → logprob: -8.663241386413574
    7. '\n' → logprob: -8.663241386413574
    8. 'a' → logprob: -8.788241386413574
    9. 'de' → logprob: -9.163241386413574
    10. ' 
' → logprob: -9.538241386413574

Token 107: '#' (ID: 2)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.3170849084854126
    2. '"""' → logprob: -1.5670849084854126
    3. '#' → logprob: -1.6920849084854126
    4. 'T' → logprob: -2.692084789276123
    5. 'def' → logprob: -3.067084789276123
    6. 'D' → logprob: -3.192084789276123
    7. 'd' → logprob: -3.442084789276123
    8. 'I' → logprob: -3.442084789276123
    9. 'A' → logprob: -3.942084789276123
    10. ')' → logprob: -4.067084789276123

Token 108: ' �' (ID: 80593)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6950247287750244
    2. 'd' → logprob: -2.0700247287750244
    3. 'D' → logprob: -2.3200247287750244
    4. 'def' → logprob: -2.3200247287750244
    5. '"""' → logprob: -2.4450247287750244
    6. 'A' → logprob: -2.9450247287750244
    7. '*' → logprob: -2.9450247287750244
    8. 'I' → logprob: -3.1950247287750244
    9. '#' → logprob: -3.3200247287750244
    10. ' """' → logprob: -3.3200247287750244

Token 109: '�' (ID: 247)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9606091380119324
    2. '*' → logprob: -1.4606091976165771
    3. '"""' → logprob: -2.085609197616577
    4. ')' → logprob: -2.335609197616577
    5. '/' → logprob: -3.210609197616577
    6. '
' → logprob: -4.085608959197998
    7. 'n' → logprob: -4.460608959197998
    8. ' ' → logprob: -4.585608959197998
    9. '\n' → logprob: -4.710608959197998
    10. '`' → logprob: -5.335608959197998

Token 110: '準' (ID: 110067)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5540432333946228
    2. ')' → logprob: -1.6790432929992676
    3. '"""' → logprob: -2.8040432929992676
    4. '*' → logprob: -3.1790432929992676
    5. '
' → logprob: -3.3040432929992676
    6. '\n' → logprob: -3.8040432929992676
    7. '/' → logprob: -3.8040432929992676
    8. ' 
' → logprob: -4.554043292999268
    9. 'n' → logprob: -5.304043292999268
    10. ''' → logprob: -5.304043292999268

Token 111: '入力' (ID: 195421)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0884348154067993
    2. ')' → logprob: -1.2134348154067993
    3. '"""' → logprob: -1.8384348154067993
    4. '*' → logprob: -2.4634346961975098
    5. '/' → logprob: -3.7134346961975098
    6. '
' → logprob: -3.9634346961975098
    7. ' ' → logprob: -4.21343469619751
    8. '\n' → logprob: -4.71343469619751
    9. ' """' → logprob: -4.83843469619751
    10. ' 
' → logprob: -4.96343469619751

Token 112: '取得' (ID: 88083)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.20207089185714722
    2. '#' → logprob: -1.952070951461792
    3. ')' → logprob: -4.077070713043213
    4. '```' → logprob: -4.952070713043213
    5. '\n' → logprob: -5.952070713043213
    6. '<|end|>' → logprob: -6.327070713043213
    7. '
' → logprob: -6.452070713043213
    8. '""' → logprob: -6.702070713043213
    9. ' """' → logprob: -6.702070713043213
    10. '/' → logprob: -7.202070713043213

Token 113: '
' (ID: 198)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.18237699568271637
    2. '#' → logprob: -2.0573770999908447
    3. ')' → logprob: -3.9323770999908447
    4. '```' → logprob: -5.182376861572266
    5. '\n' → logprob: -6.057376861572266
    6. 'n' → logprob: -6.307376861572266
    7. ' """' → logprob: -6.557376861572266
    8. '/' → logprob: -6.807376861572266
    9. '*' → logprob: -7.057376861572266
    10. '"""
' → logprob: -7.307376861572266

Token 114: '##' (ID: 877)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.21385988593101501
    2. 'n' → logprob: -2.963859796524048
    3. 'i' → logprob: -3.463859796524048
    4. '#' → logprob: -3.588859796524048
    5. '
' → logprob: -3.713859796524048
    6. 's' → logprob: -4.338860034942627
    7. '*' → logprob: -4.463860034942627
    8. ' """' → logprob: -5.088860034942627
    9. 't' → logprob: -5.463860034942627
    10. ')' → logprob: -5.588860034942627

Token 115: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5521288514137268
    2. 'n' → logprob: -1.177128791809082
    3. ' ' → logprob: -3.552128791809082
    4. 's' → logprob: -3.927128791809082
    5. '#' → logprob: -4.427128791809082
    6. 'd' → logprob: -4.802128791809082
    7. ' """' → logprob: -4.802128791809082
    8. 'def' → logprob: -5.052128791809082
    9. 'input' → logprob: -5.052128791809082
    10. '"""' → logprob: -5.552128791809082

Token 116: '文字' (ID: 79831)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1716206818819046
    2. 'i' → logprob: -2.2966206073760986
    3. 'def' → logprob: -3.9216206073760986
    4. 'input' → logprob: -4.546620845794678
    5. 'd' → logprob: -4.921620845794678
    6. 's' → logprob: -5.171620845794678
    7. 'N' → logprob: -5.421620845794678
    8. 'a' → logprob: -6.046620845794678
    9. '#' → logprob: -6.296620845794678
    10. 'import' → logprob: -7.046620845794678

Token 117: '列' (ID: 19047)
  Prédit: '列'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '列' → logprob: -0.020021356642246246
    2. '数' → logprob: -4.270021438598633
    3. 'を' → logprob: -6.770021438598633
    4. ' ' → logprob: -7.020021438598633
    5. '"""' → logprob: -7.020021438598633
    6. '#' → logprob: -7.770021438598633
    7. 's' → logprob: -7.895021438598633
    8. 'の' → logprob: -8.270021438598633
    9. '```' → logprob: -8.520021438598633
    10. '入力' → logprob: -8.520021438598633

Token 118: '
' (ID: 198)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.678744912147522
    2. 's' → logprob: -1.428744912147522
    3. '#' → logprob: -2.8037447929382324
    4. '
' → logprob: -2.9287447929382324
    5. ' """' → logprob: -3.9287447929382324
    6. 'input' → logprob: -4.053744792938232
    7. ')' → logprob: -4.053744792938232
    8. '<|end|>' → logprob: -4.303744792938232
    9. '```' → logprob: -4.928744792938232
    10. '<|end|>' → logprob: -4.928744792938232

Token 119: '   ' (ID: 271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4317655861377716
    2. '"""' → logprob: -1.3067655563354492
    3. '#' → logprob: -3.056765556335449
    4. ' """' → logprob: -4.681765556335449
    5. 't' → logprob: -5.181765556335449
    6. 'n' → logprob: -5.431765556335449
    7. 'i' → logprob: -5.931765556335449
    8. 'input' → logprob: -6.431765556335449
    9. ')' → logprob: -6.681765556335449
    10. 'a' → logprob: -7.056765556335449

Token 120: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.013679401017725468
    2. 'input' → logprob: -5.388679504394531
    3. '"""' → logprob: -5.388679504394531
    4. 'i' → logprob: -6.763679504394531
    5. 'str' → logprob: -6.888679504394531
    6. ' s' → logprob: -8.013679504394531
    7. 't' → logprob: -8.138679504394531
    8. 'n' → logprob: -8.263679504394531
    9. 'a' → logprob: -8.263679504394531
    10. '#' → logprob: -8.513679504394531

Token 121: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2938114106655121
    2. ' input' → logprob: -1.4188114404678345
    3. 's' → logprob: -5.043811321258545
    4. ' ' → logprob: -5.918811321258545
    5. ' s' → logprob: -6.668811321258545
    6. 'in' → logprob: -8.043811798095703
    7. '""' → logprob: -8.043811798095703
    8. 'i' → logprob: -8.293811798095703
    9. 'str' → logprob: -8.418811798095703
    10. '   ' → logprob: -8.543811798095703

Token 122: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.07956796139478683
    2. '.' → logprob: -2.5795679092407227
    3. '.argv' → logprob: -7.579567909240723
    4. '.stdout' → logprob: -8.954567909240723
    5. '.std' → logprob: -11.329567909240723
    6. ' .' → logprob: -11.954567909240723
    7. 'stdin' → logprob: -12.204567909240723
    8. '.readline' → logprob: -12.454567909240723
    9. '.s' → logprob: -13.079567909240723
    10. '.stderr' → logprob: -13.329567909240723

Token 123: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.08712805807590485
    2. '.' → logprob: -2.587128162384033
    3. '.read' → logprob: -4.837128162384033
    4. '.readlines' → logprob: -8.587127685546875
    5. '.stdin' → logprob: -10.462127685546875
    6. 'read' → logprob: -11.462127685546875
    7. '.
' → logprob: -11.587127685546875
    8. '.buffer' → logprob: -11.837127685546875
    9. ')' → logprob: -11.837127685546875
    10. '.write' → logprob: -12.587127685546875

Token 124: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4288661777973175
    2. '()' → logprob: -1.0538661479949951
    3. '(' → logprob: -9.553866386413574
    4. '())' → logprob: -10.053866386413574
    5. '()\' → logprob: -11.678866386413574
    6. '()
' → logprob: -11.803866386413574
    7. '()`' → logprob: -11.928866386413574
    8. '.strip' → logprob: -12.303866386413574
    9. ')' → logprob: -12.428866386413574
    10. '()[' → logprob: -13.053866386413574

Token 125: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.04324227198958397
    2. 'rstrip' → logprob: -3.1682422161102295
    3. '()' → logprob: -9.418242454528809
    4. ' strip' → logprob: -9.668242454528809
    5. 'decode' → logprob: -9.793242454528809
    6. 'replace' → logprob: -11.668242454528809
    7. 'split' → logprob: -11.668242454528809
    8. '().' → logprob: -12.293242454528809
    9. '.strip' → logprob: -12.543242454528809
    10. 'read' → logprob: -12.793242454528809

Token 126: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.029465215280652046
    2. ')' → logprob: -4.279465198516846
    3. '()
' → logprob: -5.029465198516846
    4. '\n' → logprob: -5.529465198516846
    5. '(' → logprob: -6.404465198516846
    6. '"""' → logprob: -7.029465198516846
    7. '<|end|>' → logprob: -7.279465198516846
    8. '()\' → logprob: -7.904465198516846
    9. '
' → logprob: -8.404465675354004
    10. '\' → logprob: -8.654465675354004

Token 127: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.463927298784256
    2. '
' → logprob: -1.9639272689819336
    3. '\n' → logprob: -2.8389272689819336
    4. '<|end|>' → logprob: -2.9639272689819336
    5. '#' → logprob: -3.0889272689819336
    6. '<|end|>' → logprob: -3.5889272689819336
    7. ')' → logprob: -3.8389272689819336
    8. ' 
' → logprob: -5.213927268981934
    9. '"""
' → logprob: -5.338927268981934
    10. '  
' → logprob: -5.463927268981934

Token 128: ' =' (ID: 314)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.22257034480571747
    2. '\n' → logprob: -2.4725704193115234
    3. '#' → logprob: -3.8475704193115234
    4. '<|end|>' → logprob: -3.9725704193115234
    5. '
' → logprob: -4.097570419311523
    6. ')' → logprob: -4.097570419311523
    7. '<|end|>' → logprob: -4.222570419311523
    8. '```' → logprob: -5.347570419311523
    9. '\' → logprob: -5.597570419311523
    10. ' 
' → logprob: -5.722570419311523

Token 129: ' list' (ID: 1562)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.9456766843795776
    2. ' input' → logprob: -1.3206766843795776
    3. 'input' → logprob: -1.4456766843795776
    4. 'sys' → logprob: -2.320676803588867
    5. 's' → logprob: -5.695676803588867
    6. ' str' → logprob: -6.070676803588867
    7. ' s' → logprob: -6.320676803588867
    8. 'str' → logprob: -6.695676803588867
    9. ' ' → logprob: -7.695676803588867
    10. 'string' → logprob: -8.570676803588867

Token 130: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1732681691646576
    2. '()' → logprob: -1.92326819896698
    3. '<|end|>' → logprob: -5.0482683181762695
    4. '#' → logprob: -6.1732683181762695
    5. '(
' → logprob: -6.1732683181762695
    6. ')' → logprob: -7.2982683181762695
    7. '\' → logprob: -7.9232683181762695
    8. ' ' → logprob: -8.42326831817627
    9. '()
' → logprob: -8.67326831817627
    10. ' (' → logprob: -8.67326831817627

Token 131: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.03285017982125282
    2. '.readline' → logprob: -4.03285026550293
    3. '.' → logprob: -4.28285026550293
    4. 'stdin' → logprob: -8.15785026550293
    5. ')' → logprob: -9.03285026550293
    6. '.stdout' → logprob: -9.15785026550293
    7. '.std' → logprob: -9.65785026550293
    8. '.argv' → logprob: -9.78285026550293
    9. '.read' → logprob: -10.40785026550293
    10. ' .' → logprob: -10.90785026550293

Token 132: '.readline' (ID: 74673)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -1.0564069747924805
    2. '.readline' → logprob: -1.0564069747924805
    3. ')' → logprob: -2.3064069747924805
    4. 'rstrip' → logprob: -2.4314069747924805
    5. '()' → logprob: -3.0564069747924805
    6. 'read' → logprob: -3.4314069747924805
    7. 'line' → logprob: -3.5564069747924805
    8. 'strip' → logprob: -5.0564069747924805
    9. '())
' → logprob: -7.3064069747924805
    10. ' readline' → logprob: -7.6814069747924805

Token 133: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0008183232857845724
    2. '()' → logprob: -7.125818252563477
    3. '()).' → logprob: -11.875818252563477
    4. ' ().' → logprob: -12.625818252563477
    5. '())' → logprob: -13.500818252563477
    6. '()].' → logprob: -14.625818252563477
    7. '()[' → logprob: -14.750818252563477
    8. '.rstrip' → logprob: -14.875818252563477
    9. 'rstrip' → logprob: -14.875818252563477
    10. '().__' → logprob: -16.250818252563477

Token 134: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -7.52919222577475e-05
    2. 'strip' → logprob: -9.500075340270996
    3. '.rstrip' → logprob: -15.250075340270996
    4. 'read' → logprob: -16.50007438659668
    5. 'split' → logprob: -16.87507438659668
    6. 'rs' → logprob: -17.37507438659668
    7. 'rl' → logprob: -18.00007438659668
    8. ')' → logprob: -18.00007438659668
    9. '```' → logprob: -18.37507438659668
    10. 'rst' → logprob: -18.62507438659668

Token 135: '())

' (ID: 27654)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3892945349216461
    2. '())' → logprob: -1.1392945051193237
    3. ')' → logprob: -6.139294624328613
    4. '()\' → logprob: -9.389294624328613
    5. '(' → logprob: -9.514294624328613
    6. '()
' → logprob: -10.264294624328613
    7. '().' → logprob: -10.389294624328613
    8. '())
' → logprob: -11.514294624328613
    9. ' ())' → logprob: -12.014294624328613
    10. '()]' → logprob: -12.389294624328613

Token 136: '##' (ID: 877)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5564010739326477
    2. '"""' → logprob: -1.306401014328003
    3. '\n' → logprob: -2.431401014328003
    4. ')' → logprob: -3.931401014328003
    5. '```' → logprob: -4.431401252746582
    6. '\' → logprob: -4.681401252746582
    7. '
' → logprob: -4.806401252746582
    8. '"""
' → logprob: -5.931401252746582
    9. '<|end|>' → logprob: -5.931401252746582
    10. ' 
' → logprob: -6.056401252746582

Token 137: ' 数' (ID: 71324)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.42211487889289856
    2. '整数' → logprob: -2.297114849090576
    3. ' map' → logprob: -3.297114849090576
    4. ' int' → logprob: -3.422114849090576
    5. 'n' → logprob: -3.547114849090576
    6. '#' → logprob: -3.672114849090576
    7. 'map' → logprob: -3.797114849090576
    8. ' n' → logprob: -4.297114849090576
    9. 'input' → logprob: -4.547114849090576
    10. 'list' → logprob: -4.797114849090576

Token 138: '値' (ID: 69555)
  Prédit: '値'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '値' → logprob: -0.03984733298420906
    2. '字' → logprob: -3.2898473739624023
    3. '<|end|>' → logprob: -7.539847373962402
    4. '<|end|>' → logprob: -8.664847373962402
    5. 'value' → logprob: -9.164847373962402
    6. ' ' → logprob: -9.664847373962402
    7. '整数' → logprob: -9.789847373962402
    8. '#' → logprob: -9.789847373962402
    9. 'int' → logprob: -10.039847373962402
    10. '=' → logprob: -10.039847373962402

Token 139: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07444537431001663
    2. ' =' → logprob: -3.3244454860687256
    3. '=' → logprob: -3.8244454860687256
    4. 'n' → logprob: -5.4494452476501465
    5. ')' → logprob: -5.6994452476501465
    6. ' ' → logprob: -6.8244452476501465
    7. '    
' → logprob: -6.9494452476501465
    8. '  ' → logprob: -7.0744452476501465
    9. '    ' → logprob: -7.1994452476501465
    10. '<|end|>' → logprob: -7.3244452476501465

Token 141: ' =' (ID: 314)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0227739810943604
    2. ' n' → logprob: -1.2727739810943604
    3. 'n' → logprob: -1.6477739810943604
    4. ' =' → logprob: -2.7727739810943604
    5. ' int' → logprob: -3.3977739810943604
    6. 'num' → logprob: -4.397773742675781
    7. 'sys' → logprob: -4.397773742675781
    8. ' sys' → logprob: -4.522773742675781
    9. '=' (adapté à ' =') → logprob: -4.772773742675781
    10. '=int' → logprob: -5.022773742675781

Token 142: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.009770493023097515
    2. ' int' → logprob: -4.634770393371582
    3. 'in' → logprob: -11.634770393371582
    4. ' ' → logprob: -13.134770393371582
    5. 'map' → logprob: -13.884770393371582
    6. 'i' → logprob: -14.134770393371582
    7. '	int' → logprob: -14.509770393371582
    8. ' map' → logprob: -14.884770393371582
    9. ' in' → logprob: -15.634770393371582
    10. '=int' → logprob: -15.884770393371582

Token 143: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6946428418159485
    2. '(sys' → logprob: -0.6946428418159485
    3. '()' → logprob: -6.569643020629883
    4. ' (' → logprob: -10.694643020629883
    5. 'sys' → logprob: -10.694643020629883
    6. '(
' → logprob: -10.694643020629883
    7. '(input' → logprob: -11.944643020629883
    8. '(Sys' → logprob: -12.569643020629883
    9. '('' → logprob: -12.694643020629883
    10. ' sys' → logprob: -13.319643020629883

Token 144: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.007749659940600395
    2. '.' → logprob: -4.882749557495117
    3. 'stdin' → logprob: -9.257749557495117
    4. '.readline' → logprob: -10.632749557495117
    5. '.std' → logprob: -11.257749557495117
    6. '.stdout' → logprob: -11.882749557495117
    7. '.
' → logprob: -13.757749557495117
    8. '.<' → logprob: -14.382749557495117
    9. ' stdin' → logprob: -14.382749557495117
    10. '(stdin' → logprob: -14.632749557495117

Token 145: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.034233953803777695
    2. '.stdin' → logprob: -4.034234046936035
    3. 'stdin' → logprob: -4.284234046936035
    4. 'sys' → logprob: -6.784234046936035
    5. '(stdin' → logprob: -7.284234046936035
    6. '.' → logprob: -8.534234046936035
    7. 'read' → logprob: -9.534234046936035
    8. 'line' → logprob: -10.034234046936035
    9. '(sys' → logprob: -11.159234046936035
    10. 'input' → logprob: -11.784234046936035

Token 146: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2724844813346863
    2. '().' → logprob: -1.522484540939331
    3. '()' → logprob: -3.897484540939331
    4. ' ())' → logprob: -10.77248477935791
    5. '.readline' → logprob: -11.27248477935791
    6. ')' → logprob: -12.64748477935791
    7. '();)' → logprob: -12.64748477935791
    8. '())
' → logprob: -12.77248477935791
    9. '（）' → logprob: -13.27248477935791
    10. '()
' → logprob: -13.39748477935791

Token 147: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 149: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4694308936595917
    2. ' list' → logprob: -1.219430923461914
    3. ' map' → logprob: -3.219430923461914
    4. 'map' → logprob: -4.094430923461914
    5. 'int' → logprob: -4.594430923461914
    6. ' sys' → logprob: -5.219430923461914
    7. 'sys' → logprob: -5.969430923461914
    8. ' tuple' → logprob: -6.594430923461914
    9. ' int' → logprob: -6.719430923461914
    10. 'float' → logprob: -6.844430923461914

Token 150: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.09374109655618668
    2. '(' → logprob: -2.9687411785125732
    3. '(lambda' → logprob: -3.3437411785125732
    4. '(sys' → logprob: -6.593740940093994
    5. '(str' → logprob: -7.718740940093994
    6. '(list' → logprob: -7.843740940093994
    7. '(
' → logprob: -8.718741416931152
    8. '(tuple' → logprob: -8.718741416931152
    9. 'list' → logprob: -9.843741416931152
    10. '()' → logprob: -9.968741416931152

Token 151: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.00029279827140271664
    2. '(' → logprob: -8.875292778015137
    3. '())' → logprob: -9.625292778015137
    4. '()' → logprob: -10.625292778015137
    5. 'sys' → logprob: -10.875292778015137
    6. '=sys' → logprob: -11.375292778015137
    7. ')' → logprob: -11.625292778015137
    8. '(
' → logprob: -12.250292778015137
    9. '(system' → logprob: -12.500292778015137
    10. '(System' → logprob: -12.625292778015137

Token 152: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.5762584805488586
    2. 'sys' → logprob: -0.8262584805488586
    3. '(sys' → logprob: -8.326258659362793
    4. ' ' → logprob: -10.451258659362793
    5. ')' → logprob: -10.701258659362793
    6. '=sys' → logprob: -11.201258659362793
    7. '	sys' → logprob: -12.201258659362793
    8. ' )' → logprob: -12.701258659362793
    9. 's' → logprob: -13.576258659362793
    10. '  ' → logprob: -14.076258659362793

Token 153: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.000522650487255305
    2. '.' → logprob: -8.12552261352539
    3. 'stdin' → logprob: -9.25052261352539
    4. '.stdout' → logprob: -9.62552261352539
    5. '.readline' → logprob: -9.75052261352539
    6. ' stdin' → logprob: -13.37552261352539
    7. '(stdin' → logprob: -13.62552261352539
    8. ' .' → logprob: -14.00052261352539
    9. '.std' → logprob: -14.25052261352539
    10. '._' → logprob: -14.50052261352539

Token 154: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0006419036653824151
    2. '.stdin' → logprob: -7.375641822814941
    3. '.' → logprob: -11.625641822814941
    4. 'stdin' → logprob: -12.750641822814941
    5. '.readlines' → logprob: -13.750641822814941
    6. '=sys' → logprob: -14.250641822814941
    7. '(stdin' → logprob: -14.375641822814941
    8. ')' → logprob: -14.875641822814941
    9. ' readline' → logprob: -15.375641822814941
    10. '.stdout' → logprob: -15.500641822814941

Token 155: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.039320822805166245
    2. '())' → logprob: -3.289320707321167
    3. '()' → logprob: -6.664320945739746
    4. '（）' → logprob: -14.664320945739746
    5. '())
' → logprob: -14.914320945739746
    6. '()]' → logprob: -15.039320945739746
    7. '();)' → logprob: -15.164320945739746
    8. ')' → logprob: -15.289320945739746
    9. ' ())' → logprob: -15.289320945739746
    10. '.readline' → logprob: -15.414320945739746

Token 156: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.14073900878429413
    2. 'rstrip' → logprob: -2.1407389640808105
    3. 'read' → logprob: -4.7657389640808105
    4. 'strip' → logprob: -5.2657389640808105
    5. ')' → logprob: -10.890739440917969
    6. 'spl' → logprob: -11.765739440917969
    7. '.readline' → logprob: -12.515739440917969
    8. ' readline' → logprob: -14.390739440917969
    9. 'sl' → logprob: -14.640739440917969
    10. 'rs' → logprob: -14.765739440917969

Token 157: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.028047237545251846
    2. '()' → logprob: -3.9030473232269287
    3. ')' → logprob: -4.90304708480835
    4. '())
' → logprob: -10.278047561645508
    5. '(' → logprob: -12.028047561645508
    6. '())
' → logprob: -12.528047561645508
    7. ' ())' → logprob: -12.778047561645508
    8. '()
' → logprob: -13.028047561645508
    9. '）' → logprob: -14.153047561645508
    10. '())

' → logprob: -14.528047561645508

Token 158: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.2879208028316498
    2. '#' → logprob: -1.7879208326339722
    3. ')' → logprob: -3.7879207134246826
    4. '"""
' → logprob: -3.9129207134246826
    5. '```' → logprob: -3.9129207134246826
    6. '""' → logprob: -5.037920951843262
    7. '\n' → logprob: -5.037920951843262
    8. '"""

' → logprob: -6.162920951843262
    9. '"' → logprob: -7.412920951843262
    10. '#
' → logprob: -7.537920951843262

Token 159: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7582181692123413
    2. '"""' → logprob: -0.8832181692123413
    3. '#' → logprob: -2.383218288421631
    4. '```' → logprob: -4.258218288421631
    5. '""' → logprob: -5.508218288421631
    6. '"""
' → logprob: -6.258218288421631
    7. '
' → logprob: -6.758218288421631
    8. '")' → logprob: -6.758218288421631
    9. ')
' → logprob: -7.383218288421631
    10. '\n' → logprob: -7.758218288421631

Token 160: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06706968694925308
    2. 'map' → logprob: -3.3170697689056396
    3. ' list' → logprob: -3.8170697689056396
    4. ' map' → logprob: -5.8170695304870605
    5. 'tuple' → logprob: -5.8170695304870605
    6. ' tuple' → logprob: -7.9420695304870605
    7. '[]' → logprob: -9.067070007324219
    8. 'a' → logprob: -9.942070007324219
    9. 'int' → logprob: -10.192070007324219
    10. 'n' → logprob: -10.567070007324219

Token 161: '(map' (ID: 16946)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0035397247411310673
    2. '(' → logprob: -5.878539562225342
    3. '(map' → logprob: -7.378539562225342
    4. '<int' → logprob: -9.8785400390625
    5. '[int' → logprob: -11.1285400390625
    6. ' (' → logprob: -11.1285400390625
    7. 'int' → logprob: -11.5035400390625
    8. '=int' → logprob: -12.0035400390625
    9. 'map' → logprob: -12.6285400390625
    10. '(
' → logprob: -13.3785400390625

Token 162: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005765048554167151
    2. '(' → logprob: -7.500576496124268
    3. '<int' → logprob: -11.500576972961426
    4. 'int' → logprob: -12.375576972961426
    5. '[int' → logprob: -12.500576972961426
    6. ',int' → logprob: -13.250576972961426
    7. ']int' → logprob: -13.625576972961426
    8. '=int' → logprob: -13.750576972961426
    9. ' (' → logprob: -14.000576972961426
    10. '(str' → logprob: -15.375576972961426

Token 163: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.1302824169397354
    2. ',' → logprob: -2.130282402038574
    3. '(),' → logprob: -6.130282402038574
    4. 'sys' → logprob: -7.505282402038574
    5. '=sys' → logprob: -8.130282402038574
    6. ')' → logprob: -9.130282402038574
    7. ',s' → logprob: -9.380282402038574
    8. '(' → logprob: -10.380282402038574
    9. '()' → logprob: -10.630282402038574
    10. '(s' → logprob: -10.630282402038574

Token 164: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0012259430950507522
    2. ' sys' → logprob: -6.87622594833374
    3. '(sys' → logprob: -8.626225471496582
    4. ')' → logprob: -11.751225471496582
    5. '=sys' → logprob: -12.251225471496582
    6. 's' → logprob: -14.501225471496582
    7. '	sys' → logprob: -14.876225471496582
    8. '_sys' → logprob: -16.1262264251709
    9. 'Sys' → logprob: -17.2512264251709
    10. '/sys' → logprob: -17.3762264251709

Token 165: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0005022776313126087
    2. 'stdin' → logprob: -7.625502109527588
    3. '.readline' → logprob: -11.875502586364746
    4. '.stdout' → logprob: -12.375502586364746
    5. '(stdin' → logprob: -13.625502586364746
    6. '._' → logprob: -14.500502586364746
    7. '.' → logprob: -14.875502586364746
    8. '=sys' → logprob: -15.125502586364746
    9. '```' → logprob: -15.500502586364746
    10. 'import' → logprob: -15.875502586364746

Token 166: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0003156817110721022
    2. '().' → logprob: -8.62531566619873
    3. '())' → logprob: -9.75031566619873
    4. '.stdin' → logprob: -10.37531566619873
    5. '.readlines' → logprob: -11.50031566619873
    6. '()' → logprob: -11.75031566619873
    7. '.split' → logprob: -12.00031566619873
    8. 'split' → logprob: -12.25031566619873
    9. ')' → logprob: -12.50031566619873
    10. 'stdin' → logprob: -12.50031566619873

Token 167: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.927930654550437e-05
    2. '())' → logprob: -10.750029563903809
    3. '()' → logprob: -12.500029563903809
    4. '()))' → logprob: -12.500029563903809
    5. '()[' → logprob: -16.000028610229492
    6. ' ().' → logprob: -16.375028610229492
    7. '.split' → logprob: -17.125028610229492
    8. '()).' → logprob: -18.250028610229492
    9. '()));' → logprob: -18.500028610229492
    10. '.' → logprob: -18.500028610229492

Token 168: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000204851632588543
    2. '())' → logprob: -9.000205039978027
    3. ')' → logprob: -10.250205039978027
    4. 'rstrip' → logprob: -10.750205039978027
    5. '().' → logprob: -11.750205039978027
    6. '(split' → logprob: -12.125205039978027
    7. '()' → logprob: -12.875205039978027
    8. 'read' → logprob: -13.250205039978027
    9. 'spl' → logprob: -13.250205039978027
    10. '()))' → logprob: -13.500205039978027

Token 169: '()))
' (ID: 24521)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.13101287186145782
    2. '()))' → logprob: -2.1310129165649414
    3. '()' → logprob: -5.631012916564941
    4. '))' → logprob: -8.131012916564941
    5. ')' → logprob: -9.256012916564941
    6. '())
' → logprob: -9.506012916564941
    7. '()))
' → logprob: -11.006012916564941
    8. '())
' → logprob: -13.006012916564941
    9. '(' → logprob: -13.256012916564941
    10. ' ())' → logprob: -13.756012916564941

Token 170: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.008584783412516117
    2. '#' → logprob: -5.758584976196289
    3. ')' → logprob: -5.883584976196289
    4. '```' → logprob: -6.883584976196289
    5. '*/' → logprob: -7.758584976196289
    6. '"' → logprob: -7.883584976196289
    7. '""' → logprob: -8.133584976196289
    8. '"""
' → logprob: -8.883584976196289
    9. '*' → logprob: -9.383584976196289
    10. '\n' → logprob: -9.508584976196289

Token 171: ' =' (ID: 314)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.338020384311676
    2. '#' → logprob: -1.8380203247070312
    3. ')' → logprob: -2.2130203247070312
    4. '```' → logprob: -4.838020324707031
    5. '
' → logprob: -5.963020324707031
    6. '\n' → logprob: -6.088020324707031
    7. '"""
' → logprob: -6.338020324707031
    8. '""' → logprob: -6.838020324707031
    9. '"' → logprob: -7.963020324707031
    10. '"""

' → logprob: -8.088020324707031

Token 172: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4768764078617096
    2. ' list' → logprob: -1.8518763780593872
    3. 'map' → logprob: -2.2268764972686768
    4. ' map' → logprob: -2.2268764972686768
    5. ' tuple' → logprob: -5.851876258850098
    6. 'tuple' → logprob: -6.101876258850098
    7. 'int' → logprob: -7.601876258850098
    8. 'sys' → logprob: -8.101876258850098
    9. ' sys' → logprob: -8.226876258850098
    10. 'str' → logprob: -9.351876258850098

Token 173: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -9.090760431718081e-05
    2. 'list' → logprob: -10.500090599060059
    3. ']int' → logprob: -10.500090599060059
    4. '0' → logprob: -10.750090599060059
    5. ']' → logprob: -12.250090599060059
    6. '(int' → logprob: -12.625090599060059
    7. '[int' → logprob: -12.750090599060059
    8. ' int' → logprob: -14.125090599060059
    9. 'i' → logprob: -14.250090599060059
    10. '<int' → logprob: -14.750090599060059

Token 174: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0001549089647596702
    2. '(' → logprob: -8.875154495239258
    3. '()' → logprob: -12.125154495239258
    4. '(int' → logprob: -12.500154495239258
    5. 'map' → logprob: -12.875154495239258
    6. '(
' → logprob: -13.625154495239258
    7. '(range' → logprob: -13.625154495239258
    8. '()]' → logprob: -15.375154495239258
    9. '	map' → logprob: -16.000154495239258
    10. '(list' → logprob: -16.375154495239258

Token 175: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.057743949990254e-05
    2. '<int' → logprob: -11.250020980834961
    3. 'int' → logprob: -13.000020980834961
    4. '(' → logprob: -13.000020980834961
    5. ']int' → logprob: -13.625020980834961
    6. '=int' → logprob: -14.375020980834961
    7. '[int' → logprob: -14.625020980834961
    8. ' (' → logprob: -15.125020980834961
    9. '<|end|>' → logprob: -15.750020980834961
    10. ',int' → logprob: -15.875020980834961

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3250797390937805
    2. '(sys' → logprob: -1.3250796794891357
    3. '(),' → logprob: -5.325079917907715
    4. 'sys' → logprob: -5.450079917907715
    5. '=sys' → logprob: -6.700079917907715
    6. ',int' → logprob: -7.700079917907715
    7. '(int' → logprob: -8.325079917907715
    8. ',s' → logprob: -8.825079917907715
    9. '(s' → logprob: -9.450079917907715
    10. ' ,' → logprob: -9.700079917907715

Token 177: ' list' (ID: 1562)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0007946164114400744
    2. ' sys' → logprob: -7.250794410705566
    3. '(sys' → logprob: -9.625794410705566
    4. '=sys' → logprob: -11.625794410705566
    5. '	sys' → logprob: -12.750794410705566
    6. 's' → logprob: -12.750794410705566
    7. ')' → logprob: -12.875794410705566
    8. 'stdin' → logprob: -15.125794410705566
    9. 'input' → logprob: -15.500794410705566
    10. '   ' → logprob: -15.750794410705566

Token 178: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.000740538293030113
    2. 'sys' → logprob: -8.125741004943848
    3. '=sys' → logprob: -9.000741004943848
    4. '(' → logprob: -9.125741004943848
    5. '(map' → logprob: -9.375741004943848
    6. '(int' → logprob: -10.250741004943848
    7. '()))' → logprob: -10.500741004943848
    8. '(str' → logprob: -11.375741004943848
    9. '))' → logprob: -11.625741004943848
    10. '(s' → logprob: -11.875741004943848

Token 179: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.07891886681318283
    2. 'stdin' → logprob: -2.578918933868408
    3. '(stdin' → logprob: -11.95391845703125
    4. ' stdin' → logprob: -12.20391845703125
    5. '```' → logprob: -12.70391845703125
    6. ')' → logprob: -12.95391845703125
    7. '.argv' → logprob: -12.95391845703125
    8. '.readline' → logprob: -13.07891845703125
    9. '.stdout' → logprob: -13.32891845703125
    10. 'in' → logprob: -13.95391845703125

Token 180: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.011183627881109715
    2. 'rstrip' → logprob: -4.886183738708496
    3. '().' → logprob: -6.386183738708496
    4. 'stdin' → logprob: -6.761183738708496
    5. '.stdin' → logprob: -8.511183738708496
    6. '.rstrip' → logprob: -9.136183738708496
    7. 'read' → logprob: -10.011183738708496
    8. '())' → logprob: -10.011183738708496
    9. '(stdin' → logprob: -10.136183738708496
    10. ')' → logprob: -10.386183738708496

Token 181: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0015758060617372394
    2. '())))' → logprob: -6.751575946807861
    3. '()))' → logprob: -8.001575469970703
    4. ')))' → logprob: -10.626575469970703
    5. '()' → logprob: -10.876575469970703
    6. '.rstrip' → logprob: -12.126575469970703
    7. '))))' → logprob: -12.501575469970703
    8. '.readline' → logprob: -12.501575469970703
    9. 'rstrip' → logprob: -12.751575469970703
    10. '()
' → logprob: -13.376575469970703

Token 182: 'split' (ID: 13627)
  Prédit: 'rstrip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.011215222999453545
    2. 'split' → logprob: -4.8862152099609375
    3. 'strip' → logprob: -5.6362152099609375
    4. '().' → logprob: -11.386215209960938
    5. 'read' → logprob: -11.511215209960938
    6. '.rstrip' → logprob: -12.636215209960938
    7. 'replace' → logprob: -12.886215209960938
    8. ')))' → logprob: -13.136215209960938
    9. 'decode' → logprob: -13.511215209960938
    10. '()' → logprob: -13.761215209960938

Token 183: '())))' (ID: 168342)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.04225027561187744
    2. '())))' → logprob: -4.167250156402588
    3. '()' → logprob: -4.292250156402588
    4. '))' → logprob: -4.667250156402588
    5. '())' → logprob: -6.417250156402588
    6. ')))' → logprob: -6.917250156402588
    7. '(' → logprob: -9.792250633239746
    8. '()]' → logprob: -11.042250633239746
    9. '()[' → logprob: -11.292250633239746
    10. ')' → logprob: -11.542250633239746

Token 184: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4451289176940918
    2. ']' → logprob: -1.1951289176940918
    3. '])' → logprob: -2.945128917694092
    4. '#' → logprob: -6.195128917694092
    5. ')]' → logprob: -6.820128917694092
    6. '）' → logprob: -8.44512939453125
    7. '])]' → logprob: -8.94512939453125
    8. ')
' → logprob: -9.07012939453125
    9. '[' → logprob: -9.19512939453125
    10. ')])' → logprob: -9.57012939453125

Token 185: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.12713809311389923
    2. '_' → logprob: -2.127138137817383
    3. ' ' → logprob: -8.752138137817383
    4. ' i' → logprob: -10.252138137817383
    5. '_i' → logprob: -11.502138137817383
    6. '＿' → logprob: -12.877138137817383
    7. '_n' → logprob: -14.252138137817383
    8. '  ' → logprob: -14.377138137817383
    9. '_j' → logprob: -15.127138137817383
    10. 'i' → logprob: -15.127138137817383

Token 186: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06413766741752625
    2. ' ' → logprob: -3.6891376972198486
    3. ' i' → logprob: -4.1891374588012695
    4. 'in' → logprob: -4.3141374588012695
    5. '_' → logprob: -5.3141374588012695
    6. ' _' → logprob: -6.9391374588012695
    7. ' n' → logprob: -7.5641374588012695
    8. 'n' → logprob: -7.8141374588012695
    9. ' ' → logprob: -7.8141374588012695
    10. '　' → logprob: -7.9391374588012695

Token 187: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4746975302696228
    2. ' range' → logprob: -0.9746975302696228
    3. 'r' → logprob: -7.974697589874268
    4. ' ' → logprob: -9.34969711303711
    5. 'ra' → logprob: -9.84969711303711
    6. ' ran' → logprob: -10.09969711303711
    7. 'rang' → logprob: -10.59969711303711
    8. ' r' → logprob: -10.84969711303711
    9. '_' → logprob: -10.84969711303711
    10. ' ra' → logprob: -11.97469711303711

Token 188: '(N' (ID: 10564)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08371260017156601
    2. '(' → logprob: -2.583712577819824
    3. '(N' → logprob: -5.458712577819824
    4. '(int' → logprob: -8.083712577819824
    5. '(q' → logprob: -9.958712577819824
    6. '(
' → logprob: -10.583712577819824
    7. '(t' → logprob: -10.708712577819824
    8. '(len' → logprob: -10.833712577819824
    9. '(x' → logprob: -11.083712577819824
    10. '(m' → logprob: -11.083712577819824

Token 189: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.19743837416172028
    2. ')' → logprob: -2.1974384784698486
    3. ']' → logprob: -2.6974384784698486
    4. '])' → logprob: -7.6974382400512695
    5. '）' → logprob: -9.19743824005127
    6. '])]' → logprob: -9.57243824005127
    7. ')])' → logprob: -9.69743824005127
    8. ')],' → logprob: -12.57243824005127
    9. ')
' → logprob: -12.94743824005127
    10. '#' → logprob: -13.07243824005127

Token 190: '"""

' (ID: 34508)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.002402528189122677
    2. '```' → logprob: -7.377402305603027
    3. '*/' → logprob: -7.752402305603027
    4. ')' → logprob: -7.752402305603027
    5. '"""
' → logprob: -8.127402305603027
    6. '"' → logprob: -8.502402305603027
    7. '""' → logprob: -8.627402305603027
    8. '#' → logprob: -8.877402305603027
    9. ''''' → logprob: -10.627402305603027
    10. '"""

' → logprob: -10.752402305603027

Token 191: 'if' (ID: 366)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9751917719841003
    2. 'def' → logprob: -1.1001918315887451
    3. '#' → logprob: -1.6001918315887451
    4. 'n' → logprob: -2.600191831588745
    5. '\' → logprob: -5.225191593170166
    6. 'class' → logprob: -6.100191593170166
    7. 'a' → logprob: -6.225191593170166
    8. '\n' → logprob: -6.225191593170166
    9. ' ' → logprob: -7.725191593170166
    10. 'de' → logprob: -7.850191593170166

Token 192: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.1395907998085022
    2. ' ' → logprob: -2.1395907402038574
    3. ' True' → logprob: -5.139590740203857
    4. '__' → logprob: -5.639590740203857
    5. ' ' → logprob: -6.389590740203857
    6. ' _' → logprob: -7.639590740203857
    7. '_' → logprob: -7.889590740203857
    8. ' False' → logprob: -9.014591217041016
    9. '  ' → logprob: -9.764591217041016
    10. ' not' → logprob: -9.764591217041016

Token 193: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.020152095705270767
    2. '_' → logprob: -4.8951520919799805
    3. ' __' → logprob: -4.8951520919799805
    4. '.' → logprob: -6.0201520919799805
    5. '.__' → logprob: -6.3951520919799805
    6. '__.' → logprob: -7.7701520919799805
    7. '[' → logprob: -9.02015209197998
    8. '__.__' → logprob: -9.52015209197998
    9. ' ==' → logprob: -9.64515209197998
    10. '__[' → logprob: -10.14515209197998

Token 194: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0001749351795297116
    2. '==' → logprob: -9.750174522399902
    3. '_' → logprob: -9.875174522399902
    4. '__.__' → logprob: -10.125174522399902
    5. ' ==' → logprob: -11.375174522399902
    6. '__.' → logprob: -12.500174522399902
    7. '=="' → logprob: -13.000174522399902
    8. '____' → logprob: -13.500174522399902
    9. '__["' → logprob: -13.625174522399902
    10. '__
' → logprob: -13.625174522399902

Token 195: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04535770043730736
    2. '==' → logprob: -3.4203577041625977
    3. '=="' → logprob: -5.045357704162598
    4. '__' → logprob: -5.295357704162598
    5. ' =="' → logprob: -9.545357704162598
    6. '=='' → logprob: -10.045357704162598
    7. '.' → logprob: -11.170357704162598
    8. '.__' → logprob: -11.170357704162598
    9. '_' → logprob: -11.170357704162598
    10. '"' → logprob: -11.795357704162598

Token 196: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.06219533830881119
    2. ''' → logprob: -2.812195301055908
    3. ' "' → logprob: -8.437195777893066
    4. ' "__' → logprob: -12.437195777893066
    5. '__' → logprob: -12.812195777893066
    6. ' '' → logprob: -13.062195777893066
    7. ' ' → logprob: -13.687195777893066
    8. '"user' → logprob: -15.187195777893066
    9. '_' → logprob: -15.437195777893066
    10. ' '__' → logprob: -16.56219482421875

Token 197: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0029539279639720917
    2. '__' → logprob: -5.877954006195068
    3. '"' → logprob: -9.50295352935791
    4. '_main' → logprob: -9.62795352935791
    5. ' main' → logprob: -12.12795352935791
    6. 'name' → logprob: -14.50295352935791
    7. '_MAIN' → logprob: -14.75295352935791
    8. '-main' → logprob: -15.00295352935791
    9. '	main' → logprob: -15.12795352935791
    10. '__":
' → logprob: -15.12795352935791

Token 198: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.011607104912400246
    2. '__":
' → logprob: -4.5116071701049805
    3. '__:' → logprob: -7.5116071701049805
    4. '_' → logprob: -11.38660717010498
    5. '__["' → logprob: -14.88660717010498
    6. '__",' → logprob: -15.51160717010498
    7. '___' → logprob: -15.88660717010498
    8. '__.' → logprob: -16.011606216430664
    9. '":' → logprob: -16.261606216430664
    10. '__("' → logprob: -16.386606216430664

Token 199: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08385161310434341
    2. '   ' → logprob: -3.7088515758514404
    3. ' ' → logprob: -4.5838518142700195
    4. 'n' → logprob: -4.7088518142700195
    5. '<|end|>' → logprob: -5.3338518142700195
    6. '(' → logprob: -5.4588518142700195
    7. '\n' → logprob: -5.4588518142700195
    8. ')' → logprob: -5.5838518142700195
    9. '
' → logprob: -5.7088518142700195
    10. ' 
' → logprob: -5.8338518142700195

Token 200: ' S' (ID: 336)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.000918008794542402
    2. 'a' → logprob: -8.5009183883667
    3. 'n' → logprob: -8.5009183883667
    4. '_' → logprob: -9.2509183883667
    5. '[' → logprob: -9.6259183883667
    6. ' ‌' → logprob: -9.6259183883667
    7. '#' → logprob: -9.8759183883667
    8. ' 
' → logprob: -10.6259183883667
    9. 's' → logprob: -11.0009183883667
    10. 'x' → logprob: -11.1259183883667

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02160199172794819
    2. '=' → logprob: -3.896601915359497
    3. ' ' → logprob: -7.271602153778076
    4. '.' → logprob: -9.021601676940918
    5. '[' → logprob: -9.396601676940918
    6. ',' → logprob: -9.646601676940918
    7. ')' → logprob: -9.896601676940918
    8. ':' → logprob: -11.396601676940918
    9. ' =
' → logprob: -12.021601676940918
    10. '  ' → logprob: -12.271601676940918

Token 202: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8262834548950195
    2. 'sys' → logprob: -1.0762834548950195
    3. ' sys' → logprob: -2.4512834548950195
    4. ' input' → logprob: -2.7012834548950195
    5. 'list' → logprob: -2.8262834548950195
    6. ' list' → logprob: -4.8262834548950195
    7. 'str' → logprob: -8.57628345489502
    8. ' ' → logprob: -8.70128345489502
    9. '=sys' → logprob: -9.07628345489502
    10. '"' → logprob: -9.45128345489502

Token 203: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5771300196647644
    2. '.stdin' → logprob: -0.8271300196647644
    3. '.readline' → logprob: -6.82712984085083
    4. '.stdout' → logprob: -9.827130317687988
    5. '.argv' → logprob: -10.452130317687988
    6. '.std' → logprob: -12.327130317687988
    7. ' .' → logprob: -12.327130317687988
    8. 'stdin' → logprob: -12.327130317687988
    9. '.read' → logprob: -12.577130317687988
    10. '.s' → logprob: -14.202130317687988

Token 204: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0034829434007406235
    2. '.' → logprob: -5.753482818603516
    3. '.read' → logprob: -8.128482818603516
    4. '.readlines' → logprob: -11.753482818603516
    5. '.stdin' → logprob: -13.128482818603516
    6. ' .' → logprob: -15.753482818603516
    7. '.Read' → logprob: -16.503482818603516
    8. ' readline' → logprob: -16.628482818603516
    9. '.write' → logprob: -17.503482818603516
    10. '.rstrip' → logprob: -17.878482818603516

Token 205: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.25193288922309875
    2. '()' → logprob: -1.5019328594207764
    3. '(' → logprob: -13.626933097839355
    4. '())' → logprob: -14.501933097839355
    5. '().'' → logprob: -14.626933097839355
    6. ' ()' → logprob: -15.126933097839355
    7. ' ().' → logprob: -15.376933097839355
    8. '()
' → logprob: -15.501933097839355
    9. '()).' → logprob: -15.876933097839355
    10. '()

' → logprob: -16.00193214416504

Token 206: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.00020377879263833165
    2. 'strip' → logprob: -8.500204086303711
    3. '.rstrip' → logprob: -16.25020408630371
    4. 'rst' → logprob: -16.50020408630371
    5. 'decode' → logprob: -18.00020408630371
    6. 'read' → logprob: -18.25020408630371
    7. 'r' → logprob: -19.50020408630371
    8. 'rs' → logprob: -19.75020408630371
    9. 'rl' → logprob: -20.12520408630371
    10. 'rt' → logprob: -20.25020408630371

Token 207: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00497816689312458
    2. '(' → logprob: -5.379978179931641
    3. '()
' → logprob: -8.12997817993164
    4. '(
' → logprob: -10.00497817993164
    5. '()\' → logprob: -12.62997817993164
    6. '().' → logprob: -13.12997817993164
    7. '()

' → logprob: -13.12997817993164
    8. '()"' → logprob: -13.37997817993164
    9. '())' → logprob: -13.37997817993164
    10. '()`' → logprob: -13.75497817993164

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9935603141784668
    2. '
' → logprob: -1.2435603141784668
    3. '    
' → logprob: -2.118560314178467
    4. ' ' → logprob: -2.868560314178467
    5. ' 
' → logprob: -2.993560314178467
    6. '<|end|>' → logprob: -3.368560314178467
    7. '  
' → logprob: -3.993560314178467
    8. ')' → logprob: -4.243560314178467
    9. 'a' → logprob: -4.868560314178467
    10. 'n' → logprob: -4.868560314178467

Token 209: ' K' (ID: 658)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.8597843647003174
    2. 'count' → logprob: -1.3597843647003174
    3. 'counts' → logprob: -2.3597843647003174
    4. 'c' → logprob: -2.6097843647003174
    5. 'cnt' → logprob: -3.4847843647003174
    6. 'N' → logprob: -3.4847843647003174
    7. 'n' → logprob: -3.8597843647003174
    8. 'freq' → logprob: -4.109784126281738
    9. 'C' → logprob: -4.234784126281738
    10. 'char' → logprob: -4.859784126281738

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04931771382689476
    2. '=' → logprob: -3.0493175983428955
    3. ',' → logprob: -7.674317836761475
    4. ' ' → logprob: -8.674317359924316
    5. '=int' → logprob: -9.549317359924316
    6. ' ,' → logprob: -10.924317359924316
    7. ' =
' → logprob: -13.299317359924316
    8. '  ' → logprob: -14.549317359924316
    9. '＝' → logprob: -14.549317359924316
    10. ' ' → logprob: -14.674317359924316

Token 211: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6931498050689697
    2. ' int' → logprob: -0.6931498050689697
    3. ' ' → logprob: -13.06814956665039
    4. 'in' → logprob: -16.19314956665039
    5. ' in' → logprob: -16.44314956665039
    6. '<int' → logprob: -16.81814956665039
    7. '=int' → logprob: -16.94314956665039
    8. '	int' → logprob: -17.31814956665039
    9. ' ' → logprob: -17.31814956665039
    10. '[int' → logprob: -17.31814956665039

Token 212: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.05563173443078995
    2. '(' → logprob: -2.930631637573242
    3. 'sys' → logprob: -8.180631637573242
    4. '(S' → logprob: -8.680631637573242
    5. '(Sys' → logprob: -9.180631637573242
    6. '()' → logprob: -9.430631637573242
    7. ' sys' → logprob: -9.930631637573242
    8. ' (' → logprob: -10.430631637573242
    9. '=sys' → logprob: -11.055631637573242
    10. '(s' → logprob: -11.930631637573242

Token 213: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0005202664178796113
    2. '.' → logprob: -7.8755202293396
    3. '.readline' → logprob: -9.125520706176758
    4. '.stdout' → logprob: -11.375520706176758
    5. 'stdin' → logprob: -11.750520706176758
    6. '.argv' → logprob: -12.500520706176758
    7. '(stdin' → logprob: -12.875520706176758
    8. '.std' → logprob: -13.125520706176758
    9. ' .' → logprob: -13.625520706176758
    10. '().' → logprob: -14.375520706176758

Token 214: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0005819845828227699
    2. 'line' → logprob: -7.750582218170166
    3. '())' → logprob: -9.625581741333008
    4. '.stdin' → logprob: -10.125581741333008
    5. 'stdin' → logprob: -11.625581741333008
    6. ')' → logprob: -11.875581741333008
    7. '()' → logprob: -12.000581741333008
    8. '.read' → logprob: -12.375581741333008
    9. 'ine' → logprob: -12.375581741333008
    10. '().' → logprob: -12.500581741333008

Token 215: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003186267102137208
    2. '()' → logprob: -5.753186225891113
    3. '().' → logprob: -12.378186225891113
    4. ' ())' → logprob: -13.128186225891113
    5. ')' → logprob: -14.003186225891113
    6. '())
' → logprob: -14.128186225891113
    7. '()
' → logprob: -15.128186225891113
    8. '();)' → logprob: -15.753186225891113
    9. '()]' → logprob: -16.37818717956543
    10. '())

' → logprob: -16.87818717956543

Token 216: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11882111430168152
    2. '<|end|>' → logprob: -2.243821144104004
    3. '  
' → logprob: -6.368821144104004
    4. ' 
' → logprob: -6.868821144104004
    5. ' ' → logprob: -7.118821144104004
    6. '    
' → logprob: -7.243821144104004
    7. '   ' → logprob: -7.743821144104004
    8. ')' → logprob: -8.243821144104004
    9. '<|end|>' → logprob: -8.243821144104004
    10. '

' → logprob: -9.493821144104004

Token 217: ' cnt' (ID: 27340)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.624430239200592
    2. '[' → logprob: -2.6244301795959473
    3. 'S' → logprob: -2.7494301795959473
    4. '#' → logprob: -3.1244301795959473
    5. ')' → logprob: -3.1244301795959473
    6. ':' → logprob: -3.2494301795959473
    7. 'a' → logprob: -3.9994301795959473
    8. 's' → logprob: -4.124430179595947
    9. 'n' → logprob: -4.374430179595947
    10. 'A' → logprob: -4.374430179595947

Token 218: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4081180989742279
    2. ' =' → logprob: -1.1581181287765503
    3. '=' → logprob: -3.9081180095672607
    4. '_' → logprob: -8.03311824798584
    5. 'S' → logprob: -8.40811824798584
    6. '_s' → logprob: -8.78311824798584
    7. 'r' → logprob: -9.03311824798584
    8. 'er' → logprob: -10.15811824798584
    9. ' ' → logprob: -10.53311824798584
    10. '[' → logprob: -11.90811824798584

Token 219: ' ' (ID: 220)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.0012272543972358108
    2. ' Counter' → logprob: -6.751227378845215
    3. '[' → logprob: -10.126227378845215
    4. '0' → logprob: -11.876227378845215
    5. '.Counter' → logprob: -12.501227378845215
    6. '[]' → logprob: -13.376227378845215
    7. 'C' → logprob: -14.001227378845215
    8. '_counter' → logprob: -14.751227378845215
    9. 'counter' → logprob: -14.751227378845215
    10. '
' → logprob: -14.876227378845215

Token 220: '0' (ID: 15)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -6.56364209135063e-05
    2. '[' → logprob: -10.125065803527832
    3. ' Counter' → logprob: -11.250065803527832
    4. '0' → logprob: -12.125065803527832
    5. 'len' → logprob: -13.000065803527832
    6. '[]' → logprob: -14.125065803527832
    7. '.Counter' → logprob: -14.125065803527832
    8. '{' → logprob: -14.375065803527832
    9. '[len' → logprob: -14.500065803527832
    10. '{}' → logprob: -14.750065803527832

Token 221: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16460730135440826
    2. '<|end|>' → logprob: -1.914607286453247
    3. 'for' → logprob: -7.289607524871826
    4. '\n' → logprob: -7.664607524871826
    5. ' ' → logprob: -7.789607524871826
    6. ' 
' → logprob: -7.914607524871826
    7. '<|end|>' → logprob: -7.914607524871826
    8. ',' → logprob: -8.039607048034668
    9. '   ' → logprob: -8.039607048034668
    10. ' for' → logprob: -8.164607048034668

Token 222: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.057913266122341156
    2. '   ' → logprob: -4.057913303375244
    3. '<|end|>' → logprob: -4.057913303375244
    4. 'for' → logprob: -4.432913303375244
    5. ' for' → logprob: -5.557913303375244
    6. ' ' → logprob: -6.932913303375244
    7. '    
' → logprob: -7.057913303375244
    8. ')' → logprob: -7.432913303375244
    9. ' 
' → logprob: -7.682913303375244
    10. ',' → logprob: -7.932913303375244

Token 223: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.10664216428995132
    2. 'n' → logprob: -3.356642246246338
    3. 'from' → logprob: -3.481642246246338
    4. 'length' → logprob: -4.981642246246338
    5. 'while' → logprob: -5.231642246246338
    6. 'dp' → logprob: -5.606642246246338
    7. 'N' → logprob: -5.856642246246338
    8. 'freq' → logprob: -5.856642246246338
    9. 'chars' → logprob: -6.231642246246338
    10. 'factor' → logprob: -6.481642246246338

Token 224: ' s' (ID: 265)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0014338012551888824
    2. 'i' → logprob: -6.876433849334717
    3. ' c' → logprob: -8.626433372497559
    4. ' _' → logprob: -8.876433372497559
    5. '_' → logprob: -10.501433372497559
    6. ' ' → logprob: -11.001433372497559
    7. 'c' → logprob: -11.376433372497559
    8. ' s' → logprob: -11.876433372497559
    9. ' length' → logprob: -12.001433372497559
    10. '_i' → logprob: -12.876433372497559

Token 225: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17568953335285187
    2. 'in' → logprob: -1.9256895780563354
    3. '_' → logprob: -5.300689697265625
    4. ' ' → logprob: -5.300689697265625
    5. ' i' → logprob: -6.050689697265625
    6. 'i' → logprob: -6.675689697265625
    7. 's' → logprob: -7.925689697265625
    8. ',' → logprob: -8.550689697265625
    9. 'n' → logprob: -8.800689697265625
    10. '   ' → logprob: -8.800689697265625

Token 226: ' S' (ID: 336)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.18368178606033325
    2. 'S' → logprob: -2.3086817264556885
    3. 'sorted' → logprob: -3.4336817264556885
    4. ' range' → logprob: -3.6836817264556885
    5. 'per' → logprob: -5.433681964874268
    6. 'set' → logprob: -5.808681964874268
    7. ' S' → logprob: -6.433681964874268
    8. ' sorted' → logprob: -7.433681964874268
    9. ' permutations' → logprob: -7.683681964874268
    10. 'list' → logprob: -8.30868148803711

Token 227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.551721889991313e-05
    2. ' :' → logprob: -10.625065803527832
    3. '[:' → logprob: -11.125065803527832
    4. ':
' → logprob: -11.750065803527832
    5. '[' → logprob: -12.375065803527832
    6. '[:]' → logprob: -12.625065803527832
    7. '.' → logprob: -12.750065803527832
    8. '+:' → logprob: -13.000065803527832
    9. ',' → logprob: -13.375065803527832
    10. '   ' → logprob: -14.125065803527832

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014466341584920883
    2. '    ' → logprob: -5.264466285705566
    3. ' ' → logprob: -5.764466285705566
    4. ' if' → logprob: -6.014466285705566
    5. '   ' → logprob: -6.264466285705566
    6. '<|end|>' → logprob: -7.139466285705566
    7. 'if' → logprob: -8.514466285705566
    8. '        
' → logprob: -8.639466285705566
    9. '      ' → logprob: -8.889466285705566
    10. ' 
' → logprob: -9.014466285705566

Token 229: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4563736319541931
    2. 'if' (adapté à ' if') → logprob: -1.331373691558838
    3. '   ' → logprob: -2.331373691558838
    4. '    ' → logprob: -5.706373691558838
    5. ' cnt' → logprob: -7.206373691558838
    6. ' i' → logprob: -7.831373691558838
    7. '       ' → logprob: -8.08137321472168
    8. ' ' → logprob: -8.95637321472168
    9. 'cnt' → logprob: -8.95637321472168
    10. 'i' → logprob: -10.08137321472168

Token 230: ' K' (ID: 658)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.07017139345407486
    2. 's' → logprob: -2.695171356201172
    3. ' ' → logprob: -9.070171356201172
    4. ' ord' → logprob: -9.820171356201172
    5. ' not' → logprob: -10.570171356201172
    6. ' '' → logprob: -11.695171356201172
    7. ' K' → logprob: -12.382671356201172
    8. 'ord' → logprob: -12.507671356201172
    9. ''s' → logprob: -12.695171356201172
    10. ''' → logprob: -12.945171356201172

Token 231: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2850840389728546
    2. '>' → logprob: -1.6600840091705322
    3. ' <=' → logprob: -3.7850840091705322
    4. '==' → logprob: -4.035084247589111
    5. ' ==' → logprob: -4.285084247589111
    6. '<=' → logprob: -5.660084247589111
    7. ' ' → logprob: -9.410083770751953
    8. '0' → logprob: -10.785083770751953
    9. 'and' → logprob: -10.785083770751953
    10. '=' → logprob: -11.035083770751953

Token 232: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6346662044525146
    2. '0' → logprob: -0.7596662044525146
    3. '1' → logprob: -6.384666442871094
    4. 's' → logprob: -8.884666442871094
    5. ' s' → logprob: -9.384666442871094
    6. 'cnt' → logprob: -9.634666442871094
    7. '  ' → logprob: -10.634666442871094
    8. '   ' → logprob: -10.884666442871094
    9. '    ' → logprob: -11.634666442871094
    10. ' cnt' → logprob: -11.884666442871094

Token 233: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004796069115400314
    2. ' ' → logprob: -5.379796028137207
    3. '1' → logprob: -9.254796028137207
    4. 'cnt' → logprob: -10.254796028137207
    5. 's' → logprob: -10.504796028137207
    6. '   ' → logprob: -12.629796028137207
    7. '  ' → logprob: -12.754796028137207
    8. 'len' → logprob: -13.379796028137207
    9. '    ' → logprob: -13.567296028137207
    10. 'c' → logprob: -13.692296028137207

Token 234: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25328102707862854
    2. ':
' → logprob: -1.5032809972763062
    3. ' or' → logprob: -7.128281116485596
    4. '       ' → logprob: -8.878280639648438
    5. '   ' → logprob: -9.003280639648438
    6. ' :' → logprob: -9.128280639648438
    7. ' :
' → logprob: -9.628280639648438
    8. '           ' → logprob: -9.878280639648438
    9. ' and' → logprob: -10.628280639648438
    10. ':
' → logprob: -11.253280639648438

Token 235: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006851650308817625
    2. ' break' → logprob: -5.131851673126221
    3. 'break' → logprob: -8.006851196289062
    4. '       ' → logprob: -8.631851196289062
    5. '	break' → logprob: -9.256851196289062
    6. '   ' → logprob: -9.631851196289062
    7. '               ' → logprob: -10.006851196289062
    8. '          ' → logprob: -10.506851196289062
    9. '		' → logprob: -10.756851196289062
    10. '
' → logprob: -10.756851196289062

Token 236: ' print' (ID: 2123)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.7145907282829285
    2. '       ' → logprob: -1.0895907878875732
    3. '           ' → logprob: -2.2145907878875732
    4. ' break' → logprob: -2.8395907878875732
    5. 'print' (adapté à ' print') → logprob: -5.839590549468994
    6. '   ' → logprob: -6.089590549468994
    7. '	break' → logprob: -7.589590549468994
    8. '
' → logprob: -7.964590549468994
    9. '               ' → logprob: -8.214591026306152
    10. ' print' → logprob: -8.589591026306152

Token 237: '(' (ID: 7)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.03053206019103527
    2. '(s' → logprob: -3.530532121658325
    3. '(' → logprob: -7.655531883239746
    4. 'cnt' → logprob: -8.905531883239746
    5. '(ans' → logprob: -10.280531883239746
    6. '(cont' → logprob: -10.280531883239746
    7. '(len' → logprob: -10.530531883239746
    8. '(counter' → logprob: -10.780531883239746
    9. '(count' → logprob: -11.530531883239746
    10. '((' → logprob: -11.780531883239746

Token 238: '1' (ID: 16)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.010068295523524284
    2. 's' → logprob: -4.635068416595459
    3. ' cnt' → logprob: -9.3850679397583
    4. 'len' → logprob: -10.3850679397583
    5. 'c' → logprob: -10.6350679397583
    6. '(cnt' → logprob: -10.6350679397583
    7. 'count' → logprob: -10.7600679397583
    8. 'cn' → logprob: -10.8850679397583
    9. '0' → logprob: -11.2600679397583
    10. 'ct' → logprob: -11.3850679397583

Token 239: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.004343479406088591
    2. ')' → logprob: -5.879343509674072
    3. '           ' → logprob: -6.754343509674072
    4. '       ' → logprob: -8.254343032836914
    5. '0' → logprob: -10.254343032836914
    6. '
' → logprob: -10.879343032836914
    7. ')
' → logprob: -11.129343032836914
    8. '               ' → logprob: -11.254343032836914
    9. '   ' → logprob: -11.254343032836914
    10. ' )
' → logprob: -12.004343032836914

Token 240: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.588793960167095e-05
    2. '       ' → logprob: -9.625076293945312
    3. '
' → logprob: -13.125076293945312
    4. '            
' → logprob: -13.125076293945312
    5. '               ' → logprob: -13.375076293945312
    6. '   ' → logprob: -13.625076293945312
    7. '	       ' → logprob: -13.875076293945312
    8. '		' → logprob: -14.375076293945312
    9. '          ' → logprob: -14.875076293945312
    10. '        
' → logprob: -15.500076293945312

Token 241: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030298344790935516
    2. 'break' (adapté à ' break') → logprob: -3.9052982330322266
    3. 'exit' → logprob: -5.030298233032227
    4. '       ' → logprob: -6.280298233032227
    5. ' break' → logprob: -7.405298233032227
    6. '
' → logprob: -8.280298233032227
    7. '   ' → logprob: -9.030298233032227
    8. '	break' → logprob: -9.530298233032227
    9. '		' → logprob: -9.905298233032227
    10. '            
' → logprob: -9.905298233032227

Token 242: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09645024687051773
    2. '
' → logprob: -3.3464503288269043
    3. '        
' → logprob: -3.3464503288269043
    4. ' 
' → logprob: -4.096450328826904
    5. '        ' → logprob: -6.346450328826904
    6. '    
' → logprob: -7.221450328826904
    7. '         
' → logprob: -7.596450328826904
    8. '       
' → logprob: -7.846450328826904
    9. ' ' → logprob: -8.346449851989746
    10. '<|end|>' → logprob: -8.346449851989746

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016186513006687164
    2. '<|end|>' → logprob: -5.141186714172363
    3. ' ' → logprob: -5.391186714172363
    4. '        ' → logprob: -5.766186714172363
    5. '        
' → logprob: -6.766186714172363
    6. 's' → logprob: -7.766186714172363
    7. '    ' → logprob: -8.266186714172363
    8. ' 
' → logprob: -9.141186714172363
    9. '      ' → logprob: -9.266186714172363
    10. ')' → logprob: -9.266186714172363

Token 244: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.009330657310783863
    2. '       ' → logprob: -5.509330749511719
    3. '   ' → logprob: -5.634330749511719
    4. 'elif' → logprob: -6.759330749511719
    5. ' if' → logprob: -7.634330749511719
    6. 'else' → logprob: -11.759330749511719
    7. 'cnt' → logprob: -12.884330749511719
    8. 'i' → logprob: -13.009330749511719
    9. '	if' → logprob: -13.134330749511719
    10. ' elif' → logprob: -13.634330749511719

Token 245: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2814489006996155
    2. 's' → logprob: -1.4064488410949707
    3. 'K' → logprob: -9.031449317932129
    4. ' ' → logprob: -10.031449317932129
    5. ' K' → logprob: -10.156449317932129
    6. ' not' → logprob: -10.781449317932129
    7. 'cnt' → logprob: -10.906449317932129
    8. ' cnt' → logprob: -11.406449317932129
    9. 'int' → logprob: -12.281449317932129
    10. 'not' → logprob: -12.468949317932129

Token 246: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04899778217077255
    2. '==' → logprob: -3.0489978790283203
    3. '=='' → logprob: -8.92399787902832
    4. ' !=' → logprob: -9.29899787902832
    5. '=' → logprob: -9.67399787902832
    6. ' =='' → logprob: -10.29899787902832
    7. ' ' → logprob: -10.42399787902832
    8. '=="' → logprob: -10.92399787902832
    9. '!=' → logprob: -11.04899787902832
    10. ' =' → logprob: -11.42399787902832

Token 247: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.21410733461380005
    2. '"' → logprob: -1.7141072750091553
    3. ''O' → logprob: -5.214107513427734
    4. ''o' → logprob: -5.964107513427734
    5. ''A' → logprob: -6.214107513427734
    6. ''a' → logprob: -6.714107513427734
    7. '"A' → logprob: -7.589107513427734
    8. '"O' → logprob: -8.214107513427734
    9. '1' → logprob: -9.464107513427734
    10. '"B' → logprob: -9.714107513427734

Token 248: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11546818912029266
    2. '0' → logprob: -2.2404682636260986
    3. 'a' → logprob: -5.9904680252075195
    4. '"' → logprob: -9.99046802520752
    5. 'A' → logprob: -10.49046802520752
    6. ''' → logprob: -10.49046802520752
    7. '#' → logprob: -12.24046802520752
    8. '-' → logprob: -12.49046802520752
    9. 'K' → logprob: -12.61546802520752
    10. 'R' → logprob: -12.61546802520752

Token 249: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.06638943403959274
    2. '":
' → logprob: -2.816389322280884
    3. '"' → logprob: -5.441389560699463
    4. '":
' → logprob: -10.066389083862305
    5. '":

' → logprob: -10.941389083862305
    6. '"):
' → logprob: -12.066389083862305
    7. '"):' → logprob: -12.941389083862305
    8. '0' → logprob: -12.941389083862305
    9. '">' → logprob: -13.066389083862305
    10. '"":' → logprob: -13.941389083862305

Token 250: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1878315508365631
    2. '       ' → logprob: -2.6878316402435303
    3. ':
' → logprob: -2.6878316402435303
    4. '
' → logprob: -4.062831401824951
    5. ':' → logprob: -5.062831401824951
    6. 'cnt' → logprob: -5.187831401824951
    7. 'K' → logprob: -6.187831401824951
    8. ' K' → logprob: -6.687831401824951
    9. ' cnt' → logprob: -6.937831401824951
    10. ' and' → logprob: -7.687831401824951

Token 251: ' K' (ID: 658)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.2803587317466736
    2. 'K' (adapté à ' K') → logprob: -2.6553587913513184
    3. ' cnt' → logprob: -2.7803587913513184
    4. ' K' → logprob: -3.4053587913513184
    5. '
' → logprob: -3.4053587913513184
    6. '       ' → logprob: -4.030358791351318
    7. '0' → logprob: -4.905358791351318
    8. '           ' → logprob: -5.405358791351318
    9. '   ' → logprob: -5.655358791351318
    10. ':' → logprob: -5.655358791351318

Token 252: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.010907744988799095
    2. ' -=' → logprob: -5.0109076499938965
    3. '-' → logprob: -5.5109076499938965
    4. '=' → logprob: -8.885908126831055
    5. '+=' → logprob: -13.010908126831055
    6. ' -' → logprob: -14.885908126831055
    7. '*=' → logprob: -17.135908126831055
    8. ' =' → logprob: -17.385908126831055
    9. '   ' → logprob: -18.260908126831055
    10. ' ' → logprob: -18.635908126831055

Token 253: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -19.000017166137695
    4. '<|end|>' → logprob: -19.500017166137695
    5. 'cnt' → logprob: -20.750017166137695
    6. '  ' → logprob: -20.875017166137695
    7. '１' → logprob: -20.875017166137695
    8. '       ' → logprob: -21.250017166137695
    9. '```' → logprob: -21.312517166137695
    10. '0' → logprob: -21.375017166137695

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. 'cnt' → logprob: -16.375001907348633
    4. 's' → logprob: -17.250001907348633
    5. '0' → logprob: -18.500001907348633
    6. '2' → logprob: -18.750001907348633
    7. 'count' → logprob: -18.750001907348633
    8. 'c' → logprob: -18.875001907348633
    9. '   ' → logprob: -19.000001907348633
    10. 'int' → logprob: -20.125001907348633

Token 255: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.698835551738739
    2. '       ' → logprob: -0.698835551738739
    3. 'else' → logprob: -5.573835372924805
    4. '   ' → logprob: -7.323835372924805
    5. ' else' → logprob: -7.448835372924805
    6. '           ' → logprob: -8.073835372924805
    7. 'elif' → logprob: -9.573835372924805
    8. 'cnt' → logprob: -9.573835372924805
    9. '
' → logprob: -10.198835372924805
    10. ';
' → logprob: -10.698835372924805

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07851316779851913
    2. '
' → logprob: -2.9535131454467773
    3. 'else' → logprob: -3.9535131454467773
    4. '   ' → logprob: -5.953513145446777
    5. 'cnt' → logprob: -7.578513145446777
    6. '           ' → logprob: -7.828513145446777
    7. ' else' → logprob: -8.078513145446777
    8. 'elif' → logprob: -8.328513145446777
    9. 'count' → logprob: -11.328513145446777
    10. 'continue' → logprob: -11.328513145446777

Token 257: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.14882715046405792
    2. ' else' → logprob: -2.398827075958252
    3. '       ' → logprob: -3.773827075958252
    4. 'elif' → logprob: -3.898827075958252
    5. '   ' → logprob: -5.773827075958252
    6. ' elif' → logprob: -7.523827075958252
    7. '
' → logprob: -8.39882755279541
    8. 'cnt' → logprob: -8.89882755279541
    9. '    ' → logprob: -9.52382755279541
    10. '     ' → logprob: -10.77382755279541

Token 258: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07286066561937332
    2. ':
' → logprob: -3.4478607177734375
    3. ':' → logprob: -3.6978607177734375
    4. 'print' → logprob: -5.3228607177734375
    5. '       ' → logprob: -5.4478607177734375
    6. '<|end|>' → logprob: -7.1978607177734375
    7. '               ' → logprob: -7.4478607177734375
    8. '{' → logprob: -7.5728607177734375
    9. '.' → logprob: -7.8228607177734375
    10. '          ' → logprob: -7.9478607177734375

Token 259: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22886674106121063
    2. 'print' → logprob: -1.603866696357727
    3. '       ' → logprob: -5.7288665771484375
    4. ' print' → logprob: -8.978866577148438
    5. 'break' → logprob: -10.103866577148438
    6. '   ' → logprob: -10.853866577148438
    7. 'count' → logprob: -12.978866577148438
    8. '	       ' → logprob: -13.353866577148438
    9. '               ' → logprob: -13.603866577148438
    10. '         ' → logprob: -13.728866577148438

Token 260: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06833971291780472
    2. 'cnt' → logprob: -3.0683398246765137
    3. 'break' → logprob: -5.318339824676514
    4. '           ' → logprob: -5.443339824676514
    5. '       ' → logprob: -5.568339824676514
    6. ' print' → logprob: -5.818339824676514
    7. ' cnt' → logprob: -6.443339824676514
    8. 'if' → logprob: -7.693339824676514
    9. 'count' → logprob: -8.193339347839355
    10. '   ' → logprob: -8.193339347839355

Token 261: '(s' (ID: 1858)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.18400421738624573
    2. 'pow' → logprob: -2.434004306793213
    3. '(cnt' → logprob: -3.434004306793213
    4. '(' → logprob: -3.934004306793213
    5. '0' → logprob: -4.434004306793213
    6. '1' → logprob: -4.684004306793213
    7. '(pow' → logprob: -5.934004306793213
    8. 'int' → logprob: -6.559004306793213
    9. 's' → logprob: -7.184004306793213
    10. '2' → logprob: -7.309004306793213

Token 262: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000839046377222985
    2. '*' → logprob: -8.375839233398438
    3. '**' → logprob: -8.375839233398438
    4. ')
' → logprob: -8.375839233398438
    5. ' *' → logprob: -10.375839233398438
    6. '+' → logprob: -11.000839233398438
    7. ' )' → logprob: -11.125839233398438
    8. ' **' → logprob: -11.500839233398438
    9. ')**' → logprob: -11.625839233398438
    10. '*)' → logprob: -11.750839233398438

Token 263: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02848610281944275
    2. '<|end|>' → logprob: -3.7784860134124756
    3. '
' → logprob: -5.653486251831055
    4. '       ' → logprob: -7.153486251831055
    5. '   ' → logprob: -8.403486251831055
    6. '<|end|>' → logprob: -8.653486251831055
    7. '               ' → logprob: -8.903486251831055
    8. ')' → logprob: -8.903486251831055
    9. ' ' → logprob: -9.653486251831055
    10. '```' → logprob: -10.028486251831055

Token 264: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.1855776607990265
    2. '       ' → logprob: -2.310577630996704
    3. '           ' → logprob: -3.060577630996704
    4. ' break' → logprob: -4.685577869415283
    5. 'exit' → logprob: -4.935577869415283
    6. '	break' → logprob: -6.060577869415283
    7. '   ' → logprob: -7.685577869415283
    8. '' → logprob: -7.810577869415283
    9. 'print' → logprob: -7.935577869415283
    10. '\n' → logprob: -8.185577392578125

Token 265: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 266: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 267: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 268: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001341315801255405
    2. ':
' → logprob: -6.626341342926025
    3. ' :' → logprob: -11.126340866088867
    4. '   ' → logprob: -15.376340866088867
    5. ' :
' → logprob: -15.751340866088867
    6. ':

' → logprob: -16.501340866088867
    7. '{' → logprob: -16.626340866088867
    8. '：' → logprob: -16.876340866088867
    9. ':
' → logprob: -17.376340866088867
    10. ',' → logprob: -18.126340866088867

Token 269: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00250348262488842
    2. '1' → logprob: -6.127503395080566
    3. '   ' → logprob: -8.127503395080566
    4. '0' → logprob: -11.502503395080566
    5. ' print' → logprob: -11.502503395080566
    6. '       ' → logprob: -13.627503395080566
    7. '    
' → logprob: -14.752503395080566
    8. ' ' → logprob: -15.502503395080566
    9. '	print' → logprob: -15.502503395080566
    10. 'pr' → logprob: -15.627503395080566

Token 270: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01580864004790783
    2. '1' → logprob: -4.390808582305908
    3. '0' → logprob: -5.765808582305908
    4. '   ' → logprob: -9.140809059143066
    5. '-' → logprob: -10.640809059143066
    6. ' print' → logprob: -10.765809059143066
    7. '  ' → logprob: -13.765809059143066
    8. ' ' → logprob: -13.890809059143066
    9. '    
' → logprob: -14.328309059143066
    10. '	print' → logprob: -15.015809059143066

Token 271: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08960931748151779
    2. '1' → logprob: -2.464609384536743
    3. '(-' → logprob: -7.589609146118164
    4. ' (' → logprob: -9.839609146118164
    5. '(
' → logprob: -10.214609146118164
    6. '
' → logprob: -10.714609146118164
    7. '0' → logprob: -10.839609146118164
    8. '-' → logprob: -12.089609146118164
    9. '('' → logprob: -12.089609146118164
    10. ' ' → logprob: -12.464609146118164

Token 272: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023340633139014244
    2. '0' → logprob: -4.023340702056885
    3. '-' → logprob: -5.273340702056885
    4. '(' → logprob: -10.273340225219727
    5. ' ' → logprob: -12.023340225219727
    6. 's' → logprob: -12.648340225219727
    7. ' -' → logprob: -13.148340225219727
    8. '(-' → logprob: -13.523340225219727
    9. '"' → logprob: -14.273340225219727
    10. ')' → logprob: -14.398340225219727

Token 273: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.842555426876061e-06
    2. ')
' → logprob: -12.500004768371582
    3. ' )' → logprob: -14.500004768371582
    4. '))' → logprob: -15.875004768371582
    5. '<|end|>' → logprob: -16.3750057220459
    6. '")' → logprob: -16.8750057220459
    7. '`)' → logprob: -17.1250057220459
    8. '')' → logprob: -17.3750057220459
    9. '```' → logprob: -17.3750057220459
    10. ')#' → logprob: -17.7500057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 271
Tokens correctement prédits (1ère position, stricte): 112
Tokens correctement prédits (1ère position, avec adaptation): 118
Tokens correctement prédits (top 10): 211
Précision stricte (1ère position): 41.33%
Précision adaptée (1ère position): 43.54%
Précision (top 10): 77.86%
================================================================================
