================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:30
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin, stdout

def main():
    N = int(stdin.readline())
    even = N % 2 == 0
    M = N * (N - 1) // 2 - (N // 2 if even else (N - 1) // 2)
    s = N + 1 if even else N
    pairs = (f"{i} {j}" for i in range(1, N) for j in range(i + 1, N + 1) if i + j != s)
    stdout.write(f"{M}\n" + "\n".join(pairs) + "\n")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.08562316000461578
    2. ' argv' → logprob: -2.585623264312744
    3. 'exit' → logprob: -5.960623264312744
    4. ' exit' → logprob: -6.710623264312744
    5. 'import' → logprob: -6.960623264312744
    6. 'stdout' → logprob: -6.960623264312744
    7. 'path' → logprob: -7.835623264312744
    8. 'stdin' → logprob: -7.960623264312744
    9. 'version' → logprob: -9.710622787475586
    10. ' path' → logprob: -10.085622787475586

Token 4: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10230562835931778
    2. '\n' → logprob: -2.7273056507110596
    3. '.readline' → logprob: -3.7273056507110596
    4. '\' → logprob: -6.3523054122924805
    5. 'newline' → logprob: -6.6023054122924805
    6. '
' → logprob: -6.8523054122924805
    7. '.read' → logprob: -7.2273054122924805
    8. 'for' → logprob: -7.4773054122924805
    9. 'import' → logprob: -7.4773054122924805
    10. '' → logprob: -7.8523054122924805

Token 5: ' stdout' (ID: 48014)
  Prédit: 'stdout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdout' → logprob: -0.006253453902900219
    2. ' stdout' → logprob: -5.131253242492676
    3. 'stderr' → logprob: -8.131253242492676
    4. 'argv' → logprob: -10.756253242492676
    5. '.stdout' → logprob: -12.881253242492676
    6. 'std' → logprob: -13.756253242492676
    7. '_stdout' → logprob: -14.006253242492676
    8. ' stderr' → logprob: -14.256253242492676
    9. '(stdout' → logprob: -14.381253242492676
    10. 'exit' → logprob: -14.381253242492676

Token 6: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0892961397767067
    2. '\n' → logprob: -2.8392961025238037
    3. '.readline' → logprob: -4.589296340942383
    4. '```' → logprob: -5.089296340942383
    5. '
' → logprob: -5.214296340942383
    6. '\' → logprob: -6.464296340942383
    7. 'import' → logprob: -6.714296340942383
    8. 'newline' → logprob: -7.089296340942383
    9. '.
' → logprob: -7.964296340942383
    10. '.read' → logprob: -8.714296340942383

Token 7: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04131024330854416
    2. '\n' → logprob: -4.4163103103637695
    3. '.readline' → logprob: -4.5413103103637695
    4. '
' → logprob: -4.7913103103637695
    5. 'print' → logprob: -6.0413103103637695
    6. 'import' → logprob: -6.5413103103637695
    7. '```' → logprob: -6.7913103103637695
    8. ',' → logprob: -6.9163103103637695
    9. '.
' → logprob: -7.2913103103637695
    10. '\' → logprob: -7.4163103103637695

Token 8: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04711734503507614
    2. ' read' → logprob: -3.672117233276367
    3. ' process' → logprob: -4.297117233276367
    4. ' main' → logprob: -6.797117233276367
    5. ' space' → logprob: -6.922117233276367
    6. ' my' → logprob: -7.047117233276367
    7. ' parse' → logprob: -7.172117233276367
    8. ' calculate' → logprob: -7.672117233276367
    9. ' hello' → logprob: -7.672117233276367
    10. ' func' → logprob: -8.047117233276367

Token 9: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.41083452105522156
    2. '():' → logprob: -1.160834550857544
    3. ':' → logprob: -4.285834312438965
    4. '(:' → logprob: -4.660834312438965
    5. ' ():' → logprob: -9.035834312438965
    6. ' (' → logprob: -9.785834312438965
    7. '()' → logprob: -9.785834312438965
    8. '(":' → logprob: -10.035834312438965
    9. '```' → logprob: -10.035834312438965
    10. '):' → logprob: -10.285834312438965

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015621828846633434
    2. '    ' → logprob: -4.515621662139893
    3. ' ' → logprob: -7.390621662139893
    4. '(stdin' → logprob: -7.640621662139893
    5. ' readline' → logprob: -7.890621662139893
    6. 'stdin' → logprob: -7.890621662139893
    7. 'input' → logprob: -8.14062213897705
    8. '    
' → logprob: -8.26562213897705
    9. 'stdout' → logprob: -8.64062213897705
    10. ' indentation' → logprob: -8.64062213897705

Token 11: ' N' (ID: 478)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9449304342269897
    2. 'for' → logprob: -1.4449304342269897
    3. 'n' → logprob: -1.5699304342269897
    4. 'data' → logprob: -3.0699305534362793
    5. ' for' → logprob: -3.3199305534362793
    6. 'line' → logprob: -4.069930553436279
    7. ' ' → logprob: -4.319930553436279
    8. 'input' → logprob: -4.444930553436279
    9. ' line' → logprob: -4.944930553436279
    10. ' n' → logprob: -5.194930553436279

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22387324273586273
    2. ' ' → logprob: -2.0988731384277344
    3. '=' → logprob: -2.7238731384277344
    4. ',' → logprob: -5.598873138427734
    5. '  ' → logprob: -5.598873138427734
    6. ' ,' → logprob: -6.973873138427734
    7. ')' → logprob: -6.973873138427734
    8. '   ' → logprob: -7.348873138427734
    9. '.' → logprob: -7.598873138427734
    10. '_' → logprob: -7.848873138427734

Token 13: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.012601948343217373
    2. 'int' → logprob: -4.387601852416992
    3. ' ' → logprob: -9.387601852416992
    4. ' input' → logprob: -12.887601852416992
    5. '=int' → logprob: -13.012601852416992
    6. '  ' → logprob: -14.012601852416992
    7. ' map' → logprob: -14.637601852416992
    8. '	int' → logprob: -14.887601852416992
    9. '<int' → logprob: -14.887601852416992
    10. '[int' → logprob: -15.137601852416992

Token 14: '(stdin' (ID: 176594)
  Prédit: '(stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stdin' → logprob: -0.10240129381418228
    2. '(' → logprob: -2.3524012565612793
    3. '(input' → logprob: -6.227401256561279
    4. '(st' → logprob: -8.602401733398438
    5. ' (' → logprob: -10.977401733398438
    6. '(
' → logprob: -12.102401733398438
    7. '()' → logprob: -12.727401733398438
    8. 'stdin' → logprob: -13.352401733398438
    9. '(

' → logprob: -13.727401733398438
    10. '(std' → logprob: -13.852401733398438

Token 15: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0002390594017924741
    2. '.read' → logprob: -8.500239372253418
    3. '.' → logprob: -10.250239372253418
    4. '.readlines' → logprob: -16.1252384185791
    5. '().' → logprob: -16.5002384185791
    6. '.Read' → logprob: -17.1252384185791
    7. ' .' → logprob: -17.3752384185791
    8. ' readline' → logprob: -17.3752384185791
    9. 'read' → logprob: -18.7502384185791
    10. ')' → logprob: -19.3752384185791

Token 16: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.021154718473553658
    2. '()' → logprob: -3.8961546421051025
    3. '()))' → logprob: -8.021154403686523
    4. '().' → logprob: -8.646154403686523
    5. ')' → logprob: -9.646154403686523
    6. '(' → logprob: -11.021154403686523
    7. ' ())' → logprob: -11.021154403686523
    8. '())
' → logprob: -13.146154403686523
    9. '();)' → logprob: -13.396154403686523
    10. '('' → logprob: -13.396154403686523

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07532291114330292
    2. '\' → logprob: -3.7003228664398193
    3. '\n' → logprob: -4.075323104858398
    4. '    
' → logprob: -4.575323104858398
    5. ' ' → logprob: -5.950323104858398
    6. ')' → logprob: -5.950323104858398
    7. '    ' → logprob: -6.075323104858398
    8. ' for' → logprob: -6.075323104858398
    9. 'for' → logprob: -6.200323104858398
    10. '```' → logprob: -6.325323104858398

Token 18: ' even' (ID: 1952)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13186879456043243
    2. 'for' → logprob: -2.756868839263916
    3. ' for' → logprob: -3.506868839263916
    4. '\' → logprob: -5.131868839263916
    5. '    
' → logprob: -5.381868839263916
    6. ' ' → logprob: -5.631868839263916
    7. '    ' → logprob: -5.631868839263916
    8. '\n' → logprob: -5.756868839263916
    9. 'data' → logprob: -6.631868839263916
    10. ' \' → logprob: -6.881868839263916

Token 19: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27138882875442505
    2. '_count' → logprob: -1.8963887691497803
    3. 's' → logprob: -3.3963887691497803
    4. '_sum' → logprob: -4.021389007568359
    5. '_numbers' → logprob: -4.271389007568359
    6. '_num' → logprob: -5.146389007568359
    7. '_counts' → logprob: -5.271389007568359
    8. '_nums' → logprob: -5.771389007568359
    9. ' =' → logprob: -5.896389007568359
    10. '_indices' → logprob: -6.896389007568359

Token 20: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19939061999320984
    2. '0' → logprob: -1.9493906497955322
    3. ' N' → logprob: -3.4493906497955322
    4. ' []' → logprob: -5.449390411376953
    5. '[]' → logprob: -6.449390411376953
    6. 'N' → logprob: -7.699390411376953
    7. ' [' → logprob: -9.199390411376953
    8. '   ' → logprob: -9.824390411376953
    9. '  ' → logprob: -10.324390411376953
    10. ' (' → logprob: -10.699390411376953

Token 21: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.017885463312268257
    2. '%' → logprob: -4.142885684967041
    3. ' &' → logprob: -6.767885684967041
    4. ' ' → logprob: -8.017885208129883
    5. ' //' → logprob: -8.267885208129883
    6. ' if' → logprob: -10.642885208129883
    7. ' +' → logprob: -11.017885208129883
    8. ' *' → logprob: -11.142885208129883
    9. '<|end|>' → logprob: -11.642885208129883
    10. '-' → logprob: -12.017885208129883

Token 22: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.16022524237632751
    2. ' ' → logprob: -1.91022527217865
    3. '```' → logprob: -14.660224914550781
    4. '  ' → logprob: -15.035224914550781
    5. '   ' → logprob: -15.660224914550781
    6. ' ' → logprob: -16.41022491455078
    7. '    ' → logprob: -17.53522491455078
    8. '۲' → logprob: -17.91022491455078
    9. '4' → logprob: -18.22272491455078
    10. '0' → logprob: -18.72272491455078

Token 23: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.250015258789062
    4. '```' → logprob: -16.625015258789062
    5. '  ' → logprob: -17.625015258789062
    6. '    ' → logprob: -20.437515258789062
    7. '0' → logprob: -20.562515258789062
    8. '۲' → logprob: -20.625015258789062
    9. '٢' → logprob: -20.875015258789062
    10. '     ' → logprob: -20.937515258789062

Token 24: ' ==' (ID: 951)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5147619843482971
    2. '0' → logprob: -1.1397619247436523
    3. ' ==' → logprob: -2.6397619247436523
    4. '==' → logprob: -4.639761924743652
    5. '=' → logprob: -7.014761924743652
    6. ' ' → logprob: -9.264761924743652
    7. ')' → logprob: -9.264761924743652
    8. '2' → logprob: -9.514761924743652
    9. '```' → logprob: -9.514761924743652
    10. ' =' → logprob: -10.014761924743652

Token 25: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2519296407699585
    2. '0' → logprob: -1.5019296407699585
    3. ' ' → logprob: -14.75192928314209
    4. '  ' → logprob: -16.501930236816406
    5. '```' → logprob: -16.876930236816406
    6. '1' → logprob: -16.876930236816406
    7. '=' → logprob: -17.626930236816406
    8. '   ' → logprob: -18.376930236816406
    9. '2' → logprob: -19.064430236816406
    10. ' ' → logprob: -20.064430236816406

Token 26: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.0126840758603066e-05
    2. ' ' → logprob: -10.125040054321289
    3. '1' → logprob: -18.50004005432129
    4. '```' → logprob: -18.62504005432129
    5. '   ' → logprob: -19.50004005432129
    6. '00' → logprob: -19.50004005432129
    7. '۰' → logprob: -19.50004005432129
    8. '٠' → logprob: -20.31254005432129
    9. '  ' → logprob: -20.43754005432129
    10. '2' → logprob: -20.62504005432129

Token 27: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4600435197353363
    2. '\n' → logprob: -1.9600435495376587
    3. '   ' → logprob: -2.210043430328369
    4. ':' → logprob: -2.585043430328369
    5. '\' → logprob: -3.960043430328369
    6. '    
' → logprob: -4.835043430328369
    7. '```' → logprob: -5.585043430328369
    8. 'newline' → logprob: -5.960043430328369
    9. ':
' → logprob: -6.085043430328369
    10. '<|end|>' → logprob: -6.585043430328369

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06853486597537994
    2. '
' → logprob: -3.0685348510742188
    3. '    
' → logprob: -4.943534851074219
    4. '<|end|>' → logprob: -5.818534851074219
    5. ')' → logprob: -6.318534851074219
    6. ':' → logprob: -6.443534851074219
    7. '\n' → logprob: -6.568534851074219
    8. '\' → logprob: -6.818534851074219
    9. '```' → logprob: -6.818534851074219
    10. ' ' → logprob: -7.193534851074219

Token 29: ' M' (ID: 391)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002530833473429084
    2. '
' → logprob: -6.752531051635742
    3. '    
' → logprob: -7.377531051635742
    4. '\n' → logprob: -7.752531051635742
    5. '\' → logprob: -9.627531051635742
    6. '```' → logprob: -9.627531051635742
    7. 'if' → logprob: -10.127531051635742
    8. ' ' → logprob: -10.877531051635742
    9. '  ' → logprob: -11.002531051635742
    10. '    ' → logprob: -11.127531051635742

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08631843328475952
    2. '=' → logprob: -2.5863184928894043
    3. ' ' → logprob: -5.086318492889404
    4. 'ax' → logprob: -7.086318492889404
    5. 'a' → logprob: -8.461318016052246
    6. '   ' → logprob: -9.836318016052246
    7. '  ' → logprob: -10.461318016052246
    8. '.' → logprob: -11.086318016052246
    9. ' a' → logprob: -11.586318016052246
    10. ' ' → logprob: -11.711318016052246

Token 31: ' N' (ID: 478)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6937690377235413
    2. ' N' → logprob: -0.8187690377235413
    3. 'int' → logprob: -3.3187689781188965
    4. ' ' → logprob: -4.3187689781188965
    5. 'N' → logprob: -4.8187689781188965
    6. '10' → logprob: -8.568769454956055
    7. '1' → logprob: -8.568769454956055
    8. '0' → logprob: -8.693769454956055
    9. ' stdin' → logprob: -8.818769454956055
    10. '2' → logprob: -8.943769454956055

Token 32: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8040103316307068
    2. ' +' → logprob: -1.0540103912353516
    3. ' //' → logprob: -2.1790103912353516
    4. ' *' → logprob: -3.1790103912353516
    5. '*' → logprob: -4.304010391235352
    6. '//' → logprob: -5.054010391235352
    7. ' if' → logprob: -5.179010391235352
    8. '-' → logprob: -5.429010391235352
    9. ' -' → logprob: -5.554010391235352
    10. ' ' → logprob: -5.679010391235352

Token 33: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1104968935251236
    2. ' ' → logprob: -2.610496997833252
    3. 'N' → logprob: -3.985496997833252
    4. ' N' → logprob: -5.110496997833252
    5. '3' → logprob: -5.735496997833252
    6. '4' → logprob: -6.610496997833252
    7. '10' → logprob: -6.610496997833252
    8. '5' → logprob: -8.610496520996094
    9. '  ' → logprob: -9.860496520996094
    10. '1' → logprob: -9.860496520996094

Token 34: 'N' (ID: 45)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4196636378765106
    2. ' (' → logprob: -1.794663667678833
    3. 'N' → logprob: -2.294663667678833
    4. '2' → logprob: -3.169663667678833
    5. '(' → logprob: -3.794663667678833
    6. ' N' → logprob: -5.169663429260254
    7. ' ' → logprob: -5.544663429260254
    8. '1' → logprob: -7.794663429260254
    9. '(M' → logprob: -8.044663429260254
    10. '3' → logprob: -8.044663429260254

Token 35: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.14804470539093018
    2. ' +' → logprob: -2.0230445861816406
    3. '-' → logprob: -5.523044586181641
    4. ' -' → logprob: -6.648044586181641
    5. ' ' → logprob: -10.64804458618164
    6. '1' → logprob: -10.77304458618164
    7. ')' → logprob: -11.77304458618164
    8. '+)' → logprob: -12.27304458618164
    9. ' )' → logprob: -13.02304458618164
    10. '2' → logprob: -13.96054458618164

Token 36: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3132837414741516
    2. ' ' → logprob: -1.3132836818695068
    3. '    ' → logprob: -12.188283920288086
    4. '   ' → logprob: -12.313283920288086
    5. ' ' → logprob: -12.625783920288086
    6. '<|end|>' → logprob: -13.188283920288086
    7. '  ' → logprob: -13.438283920288086
    8. ')' → logprob: -13.938283920288086
    9. '```' → logprob: -13.938283920288086
    10. '2' → logprob: -14.688283920288086

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005555360112339258
    2. ' ' → logprob: -7.500555515289307
    3. '   ' → logprob: -13.813055992126465
    4. '2' → logprob: -15.063055992126465
    5. ')' → logprob: -15.625555992126465
    6. '```' → logprob: -15.688055992126465
    7. '  ' → logprob: -15.875555992126465
    8. '    ' → logprob: -16.12555503845215
    9. ' ' → logprob: -16.25055503845215
    10. '１' → logprob: -16.56305503845215

Token 38: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011533333919942379
    2. ' )' → logprob: -4.511533260345459
    3. ')//' → logprob: -8.011533737182617
    4. '//' → logprob: -9.636533737182617
    5. ' //' → logprob: -9.761533737182617
    6. ' ' → logprob: -12.136533737182617
    7. '))' → logprob: -12.261533737182617
    8. ')/' → logprob: -12.511533737182617
    9. ')
' → logprob: -13.261533737182617
    10. ')))' → logprob: -13.386533737182617

Token 39: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6263166069984436
    2. '   ' → logprob: -1.1263165473937988
    3. ' //' → logprob: -3.001316547393799
    4. ' )' → logprob: -4.001316547393799
    5. '//' → logprob: -4.001316547393799
    6. '
' → logprob: -4.126316547393799
    7. ' ' → logprob: -4.876316547393799
    8. '    ' → logprob: -5.376316547393799
    9. ' if' → logprob: -5.501316547393799
    10. '()' → logprob: -5.626316547393799

Token 40: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007231564959511161
    2. ' ' → logprob: -7.375723361968994
    3. '1' → logprob: -9.250722885131836
    4. '4' → logprob: -15.250722885131836
    5. '3' → logprob: -16.000722885131836
    6. '```' → logprob: -16.500722885131836
    7. '202' → logprob: -17.750722885131836
    8. '6' → logprob: -18.125722885131836
    9. '   ' → logprob: -18.188222885131836
    10. '  ' → logprob: -18.313222885131836

Token 41: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005936143919825554
    2. '1' → logprob: -5.130936145782471
    3. ' ' → logprob: -11.880935668945312
    4. '```' → logprob: -15.755935668945312
    5. '3' → logprob: -15.818435668945312
    6. '4' → logprob: -16.318435668945312
    7. '202' → logprob: -17.193435668945312
    8. '   ' → logprob: -17.318435668945312
    9. '  ' → logprob: -17.818435668945312
    10. '۲' → logprob: -18.130935668945312

Token 42: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03578021004796028
    2. '
' → logprob: -4.035780429840088
    3. '    
' → logprob: -4.410780429840088
    4. '<|end|>' → logprob: -5.660780429840088
    5. ')' → logprob: -7.410780429840088
    6. '\n' → logprob: -8.16077995300293
    7. '<|end|>' → logprob: -8.41077995300293
    8. '```' → logprob: -8.78577995300293
    9. ' if' → logprob: -9.03577995300293
    10. ' 
' → logprob: -9.03577995300293

Token 43: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9268510937690735
    2. '(' → logprob: -2.0518510341644287
    3. ' N' → logprob: -2.0518510341644287
    4. '1' → logprob: -2.3018510341644287
    5. 'N' → logprob: -2.5518510341644287
    6. ' even' → logprob: -2.5518510341644287
    7. 'even' → logprob: -2.9268510341644287
    8. '(N' → logprob: -4.176851272583008
    9. ' ' → logprob: -4.426851272583008
    10. ' M' → logprob: -5.801851272583008

Token 44: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.14900155365467072
    2. ' N' → logprob: -2.7740015983581543
    3. '1' → logprob: -3.1490015983581543
    4. 'even' → logprob: -3.6490015983581543
    5. ' even' → logprob: -6.649001598358154
    6. ')' → logprob: -6.899001598358154
    7. ' ' → logprob: -7.149001598358154
    8. '   ' → logprob: -7.274001598358154
    9. ' (' → logprob: -7.399001598358154
    10. '(' → logprob: -7.399001598358154

Token 45: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -1.037307620048523
    2. ' -' → logprob: -1.287307620048523
    3. '-' → logprob: -1.787307620048523
    4. '//' → logprob: -1.787307620048523
    5. ' *' → logprob: -4.7873077392578125
    6. ' ' → logprob: -4.7873077392578125
    7. ' if' → logprob: -4.9123077392578125
    8. '*' → logprob: -6.0373077392578125
    9. 'if' → logprob: -6.2873077392578125
    10. '1' → logprob: -6.7873077392578125

Token 46: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.029989054426550865
    2. ' ' → logprob: -3.529989004135132
    3. '3' → logprob: -8.904989242553711
    4. '4' → logprob: -9.654989242553711
    5. '1' → logprob: -11.404989242553711
    6. '  ' → logprob: -11.779989242553711
    7. '   ' → logprob: -12.217489242553711
    8. '```' → logprob: -12.529989242553711
    9. ')' → logprob: -12.592489242553711
    10. '6' → logprob: -13.342489242553711

Token 47: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0014380889479070902
    2. '1' → logprob: -6.626438140869141
    3. '4' → logprob: -9.50143814086914
    4. ' ' → logprob: -11.37643814086914
    5. '3' → logprob: -11.50143814086914
    6. '   ' → logprob: -12.62643814086914
    7. '```' → logprob: -13.25143814086914
    8. '  ' → logprob: -13.37643814086914
    9. ')' → logprob: -13.56393814086914
    10. '``' → logprob: -13.81393814086914

Token 48: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09149675071239471
    2. '*' → logprob: -3.466496706008911
    3. ' *' → logprob: -3.716496706008911
    4. ')*(' → logprob: -4.46649694442749
    5. ' )' → logprob: -4.71649694442749
    6. ')*' → logprob: -5.21649694442749
    7. '*(' → logprob: -6.34149694442749
    8. '))' → logprob: -6.46649694442749
    9. ')**' → logprob: -7.21649694442749
    10. ')))' → logprob: -7.46649694442749

Token 49: ' even' (ID: 1952)
  Prédit: ' even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' even' → logprob: -0.4588823914527893
    2. 'even' → logprob: -1.0838823318481445
    3. ' not' → logprob: -3.5838823318481445
    4. 'not' → logprob: -6.5838823318481445
    5. ' N' → logprob: -8.458882331848145
    6. ' ' → logprob: -8.958882331848145
    7. 'N' → logprob: -9.208882331848145
    8. '   ' → logprob: -9.833882331848145
    9. '  ' → logprob: -10.833882331848145
    10. 'e' → logprob: -10.958882331848145

Token 50: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.030808163806796074
    2. 'else' → logprob: -3.530808210372925
    3. ')' → logprob: -7.155807971954346
    4. ' )' → logprob: -9.030808448791504
    5. ' ' → logprob: -9.030808448791504
    6. '-' → logprob: -11.405808448791504
    7. ' -' → logprob: -12.530808448791504
    8. '```' → logprob: -12.905808448791504
    9. '*' → logprob: -13.030808448791504
    10. '0' → logprob: -13.093308448791504

Token 51: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1708083152770996
    2. '1' → logprob: -1.4208083152770996
    3. '(N' → logprob: -1.6708083152770996
    4. ' (' → logprob: -1.9208083152770996
    5. 'N' → logprob: -2.7958083152770996
    6. ' ' → logprob: -3.5458083152770996
    7. ' N' → logprob: -4.1708083152771
    8. '((' → logprob: -5.2958083152771
    9. '   ' → logprob: -6.9208083152771
    10. ' ((' → logprob: -7.0458083152771

Token 52: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1319209337234497
    2. '(N' → logprob: -2.50692081451416
    3. ' N' → logprob: -4.00692081451416
    4. '1' → logprob: -4.25692081451416
    5. ' (' → logprob: -5.50692081451416
    6. '2' → logprob: -6.63192081451416
    7. '0' → logprob: -6.75692081451416
    8. '(' → logprob: -7.13192081451416
    9. '3' → logprob: -7.38192081451416
    10. ' ' → logprob: -7.50692081451416

Token 53: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6943567991256714
    2. ' -' → logprob: -1.3193567991256714
    3. ' //' → logprob: -1.9443567991256714
    4. '+' → logprob: -3.569356918334961
    5. '//' → logprob: -3.569356918334961
    6. ' ' → logprob: -4.319356918334961
    7. ' +' → logprob: -4.819356918334961
    8. ' *' → logprob: -5.819356918334961
    9. '1' → logprob: -5.944356918334961
    10. '*' → logprob: -5.944356918334961

Token 54: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018955497071146965
    2. ' ' → logprob: -4.018955707550049
    3. '2' → logprob: -7.268955707550049
    4. '   ' → logprob: -10.95645523071289
    5. ')' → logprob: -11.08145523071289
    6. ' (' → logprob: -11.26895523071289
    7. '3' → logprob: -11.76895523071289
    8. '  ' → logprob: -11.83145523071289
    9. ' N' → logprob: -11.95645523071289
    10. '0' → logprob: -12.08145523071289

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014236874412745237
    2. '2' → logprob: -6.7514238357543945
    3. ' ' → logprob: -9.001423835754395
    4. '3' → logprob: -9.501423835754395
    5. '(N' → logprob: -11.626423835754395
    6. 'N' → logprob: -11.751423835754395
    7. '   ' → logprob: -11.938923835754395
    8. '(' → logprob: -12.126423835754395
    9. '0' → logprob: -12.376423835754395
    10. '```' → logprob: -12.751423835754395

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00993327610194683
    2. '))' → logprob: -5.2599334716796875
    3. ')//' → logprob: -5.6349334716796875
    4. '//' → logprob: -7.7599334716796875
    5. ')))' → logprob: -7.8849334716796875
    6. ' )' → logprob: -8.384933471679688
    7. ' //' → logprob: -10.759933471679688
    8. '```' → logprob: -11.134933471679688
    9. '   ' → logprob: -11.822433471679688
    10. ' ' → logprob: -12.072433471679688

Token 57: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12563830614089966
    2. '))' → logprob: -3.250638246536255
    3. ' //' → logprob: -3.500638246536255
    4. '//' → logprob: -3.625638246536255
    5. ' )' → logprob: -4.750638484954834
    6. ')))' → logprob: -5.375638484954834
    7. ')//' → logprob: -5.875638484954834
    8. '   ' → logprob: -6.375638484954834
    9. '```' → logprob: -6.375638484954834
    10. ' ' → logprob: -7.000638484954834

Token 58: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.009815946221351624
    2. ' ' → logprob: -4.6348161697387695
    3. '1' → logprob: -10.25981616973877
    4. ')' → logprob: -11.63481616973877
    5. '```' → logprob: -12.88481616973877
    6. '3' → logprob: -13.13481616973877
    7. '4' → logprob: -13.19731616973877
    8. '   ' → logprob: -13.25981616973877
    9. '  ' → logprob: -13.44731616973877
    10. '6' → logprob: -14.25981616973877

Token 59: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.875096321105957
    3. '1' → logprob: -10.250096321105957
    4. '```' → logprob: -13.187596321105957
    5. '3' → logprob: -14.062596321105957
    6. '4' → logprob: -14.437596321105957
    7. ')' → logprob: -14.562596321105957
    8. '   ' → logprob: -14.812596321105957
    9. '22' → logprob: -15.062596321105957
    10. '6' → logprob: -15.125096321105957

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012264199322089553
    2. '))' → logprob: -7.251226425170898
    3. ')))' → logprob: -8.376226425170898
    4. ' )' → logprob: -8.876226425170898
    5. ')
' → logprob: -9.376226425170898
    6. '   ' → logprob: -10.126226425170898
    7. '+' → logprob: -12.251226425170898
    8. '*' → logprob: -13.001226425170898
    9. '`)' → logprob: -13.126226425170898
    10. ')**' → logprob: -13.501226425170898

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06406254321336746
    2. '
' → logprob: -3.8140625953674316
    3. '\n' → logprob: -4.314062595367432
    4. '    
' → logprob: -4.689062595367432
    5. '<|end|>' → logprob: -4.814062595367432
    6. ')' → logprob: -5.564062595367432
    7. '```' → logprob: -6.314062595367432
    8. '\' → logprob: -6.314062595367432
    9. '  
' → logprob: -7.939062595367432
    10. ' ' → logprob: -8.064062118530273

Token 62: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04830445721745491
    2. '
' → logprob: -4.423304557800293
    3. '\n' → logprob: -4.423304557800293
    4. '<|end|>' → logprob: -4.673304557800293
    5. '    
' → logprob: -5.423304557800293
    6. '\' → logprob: -5.673304557800293
    7. ')' → logprob: -6.673304557800293
    8. '```' → logprob: -6.798304557800293
    9. 'newline' → logprob: -7.048304557800293
    10. ' ' → logprob: -7.548304557800293

Token 63: ' =' (ID: 314)
  Prédit: 'td'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'td' → logprob: -0.006112939678132534
    2. 't' → logprob: -5.506113052368164
    3. 'tr' → logprob: -7.131113052368164
    4. 'um' → logprob: -7.131113052368164
    5. ' =' → logprob: -8.631113052368164
    6. 'et' → logprob: -10.381113052368164
    7. 'trs' → logprob: -10.381113052368164
    8. 'tring' → logprob: -10.506113052368164
    9. '=' → logprob: -10.756113052368164
    10. 'tar' → logprob: -10.881113052368164

Token 64: ' N' (ID: 478)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -1.4001497030258179
    2. '"' → logprob: -1.7751497030258179
    3. ' "' → logprob: -1.9001497030258179
    4. ' ""' → logprob: -2.1501498222351074
    5. ' stdin' → logprob: -2.9001498222351074
    6. ' ' → logprob: -3.0251498222351074
    7. 'stdin' → logprob: -3.4001498222351074
    8. ' []' → logprob: -3.5251498222351074
    9. '''' → logprob: -3.7751498222351074
    10. ' ''' → logprob: -3.7751498222351074

Token 65: ' +' (ID: 659)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -1.5450350046157837
    2. 'um' → logprob: -1.9200350046157837
    3. '+' → logprob: -2.295034885406494
    4. ' ' → logprob: -2.420034885406494
    5. ' +' → logprob: -2.670034885406494
    6. ' =' → logprob: -2.795034885406494
    7. ' *' → logprob: -3.045034885406494
    8. '**' → logprob: -3.170034885406494
    9. '//' → logprob: -3.295034885406494
    10. '-' → logprob: -3.670034885406494

Token 66: ' ' (ID: 220)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.5718265175819397
    2. ' M' → logprob: -1.196826457977295
    3. '1' → logprob: -2.196826457977295
    4. '"' → logprob: -4.821826457977295
    5. ' ' → logprob: -5.571826457977295
    6. ' (' → logprob: -5.946826457977295
    7. '(' → logprob: -6.196826457977295
    8. '2' → logprob: -6.571826457977295
    9. 's' → logprob: -7.071826457977295
    10. 'N' → logprob: -7.196826457977295

Token 67: '1' (ID: 16)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.004514969885349274
    2. '1' → logprob: -6.504515171051025
    3. '(M' → logprob: -6.879515171051025
    4. '2' → logprob: -7.379515171051025
    5. 'N' → logprob: -7.504515171051025
    6. ' M' → logprob: -8.129514694213867
    7. '(' → logprob: -8.254514694213867
    8. 's' → logprob: -9.504514694213867
    9. '(N' → logprob: -10.129514694213867
    10. 'str' → logprob: -10.629514694213867

Token 68: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0684400200843811
    2. '<|end|>' → logprob: -3.3184399604797363
    3. '\n' → logprob: -4.443439960479736
    4. '   ' → logprob: -5.068439960479736
    5. ')' → logprob: -5.818439960479736
    6. ' ' → logprob: -6.818439960479736
    7. '#' → logprob: -7.068439960479736
    8. '\' → logprob: -7.318439960479736
    9. 'for' → logprob: -7.568439960479736
    10. '    
' → logprob: -7.568439960479736

Token 69: ' even' (ID: 1952)
  Prédit: ' even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' even' → logprob: -0.0811481922864914
    2. ' not' → logprob: -3.081148147583008
    3. 'even' → logprob: -3.456148147583008
    4. ' ' → logprob: -8.331148147583008
    5. 'not' → logprob: -8.831148147583008
    6. ' N' → logprob: -9.581148147583008
    7. ' M' → logprob: -11.956148147583008
    8. 'N' → logprob: -12.081148147583008
    9. ' odd' → logprob: -12.706148147583008
    10. ' s' → logprob: -12.706148147583008

Token 70: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.009771435521543026
    2. 'else' → logprob: -4.634771347045898
    3. ' ' → logprob: -11.884771347045898
    4. '	else' → logprob: -11.884771347045898
    5. ' ' → logprob: -14.884771347045898
    6. '<|end|>' → logprob: -14.884771347045898
    7. '<|end|>' → logprob: -15.259771347045898
    8. '_else' → logprob: -15.759771347045898
    9. '-' → logprob: -16.6347713470459
    10. ')' → logprob: -16.6347713470459

Token 71: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.22695040702819824
    2. 'N' → logprob: -1.6019504070281982
    3. ' ' → logprob: -7.476950645446777
    4. ' (' → logprob: -8.351950645446777
    5. ' M' → logprob: -8.726950645446777
    6. '2' → logprob: -8.726950645446777
    7. '0' → logprob: -9.226950645446777
    8. ' ' → logprob: -9.476950645446777
    9. '   ' → logprob: -9.851950645446777
    10. '1' → logprob: -10.351950645446777

Token 72: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7928533554077148
    2. '+' → logprob: -1.1678533554077148
    3. ' +' → logprob: -3.042853355407715
    4. '<|end|>' → logprob: -3.167853355407715
    5. ' for' → logprob: -3.542853355407715
    6. ' ' → logprob: -3.667853355407715
    7. '
' → logprob: -4.167853355407715
    8. '-' → logprob: -4.292853355407715
    9. '%' → logprob: -4.542853355407715
    10. ')' → logprob: -5.167853355407715

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1570112258195877
    2. '<|end|>' → logprob: -2.5320112705230713
    3. '
' → logprob: -2.9070112705230713
    4. '    
' → logprob: -5.407011032104492
    5. '```' → logprob: -6.657011032104492
    6. ')' → logprob: -6.782011032104492
    7. '\n' → logprob: -7.282011032104492
    8. '<|end|>' → logprob: -7.532011032104492
    9. 'newline' → logprob: -7.657011032104492
    10. ' for' → logprob: -7.907011032104492

Token 74: ' pairs' (ID: 24702)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08160226792097092
    2. '
' → logprob: -3.4566023349761963
    3. '    
' → logprob: -4.081602096557617
    4. '\n' → logprob: -4.456602096557617
    5. ' for' → logprob: -5.581602096557617
    6. ')' → logprob: -5.956602096557617
    7. 'for' → logprob: -6.206602096557617
    8. ' 
' → logprob: -6.831602096557617
    9. ' ' → logprob: -6.956602096557617
    10. '+' → logprob: -7.081602096557617

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01127086766064167
    2. '=' → logprob: -4.511270999908447
    3. ' ' → logprob: -9.261270523071289
    4. '_' → logprob: -10.636270523071289
    5. '   ' → logprob: -11.011270523071289
    6. 's' → logprob: -11.011270523071289
    7. ',' → logprob: -11.511270523071289
    8. ')' → logprob: -11.636270523071289
    9. '_count' → logprob: -11.636270523071289
    10. ' +=' → logprob: -11.761270523071289

Token 76: ' (' (ID: 350)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.07432618737220764
    2. '[]' → logprob: -3.324326276779175
    3. ' s' → logprob: -4.074326038360596
    4. ' [' → logprob: -4.699326038360596
    5. ' [(' → logprob: -5.824326038360596
    6. 's' → logprob: -6.324326038360596
    7. ' (' → logprob: -6.699326038360596
    8. ' ' → logprob: -6.824326038360596
    9. '[s' → logprob: -7.199326038360596
    10. ' set' → logprob: -7.699326038360596

Token 77: 'f' (ID: 69)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5262988209724426
    2. ' s' → logprob: -1.5262987613677979
    3. ' (' → logprob: -3.026298761367798
    4. '(s' → logprob: -3.151298761367798
    5. 'N' → logprob: -3.526298761367798
    6. 'M' → logprob: -3.901298761367798
    7. ' M' → logprob: -4.026298999786377
    8. ' N' → logprob: -4.276298999786377
    9. '(' → logprob: -5.651298999786377
    10. ' ' → logprob: -6.401298999786377

Token 78: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.3089864253997803
    2. '"' → logprob: -1.4339864253997803
    3. ''{' → logprob: -3.8089864253997803
    4. ''' → logprob: -6.058986663818359
    5. '")' → logprob: -7.308986663818359
    6. '"s' → logprob: -7.808986663818359
    7. '"(' → logprob: -7.808986663818359
    8. '"a' → logprob: -8.30898666381836
    9. '"N' → logprob: -8.80898666381836
    10. '",' → logprob: -9.05898666381836

Token 79: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2616661489009857
    2. 's' → logprob: -1.511666178703308
    3. 'x' → logprob: -5.886666297912598
    4. 'N' → logprob: -6.386666297912598
    5. '0' → logprob: -6.886666297912598
    6. ' i' → logprob: -7.011666297912598
    7. 'n' → logprob: -7.386666297912598
    8. '1' → logprob: -7.511666297912598
    9. 'a' → logprob: -8.136666297912598
    10. 'k' → logprob: -8.261666297912598

Token 80: '}' (ID: 92)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0836627185344696
    2. ' ,' → logprob: -3.208662748336792
    3. '}' → logprob: -4.458662509918213
    4. '},{' → logprob: -4.458662509918213
    5. '+' → logprob: -5.083662509918213
    6. '},' → logprob: -6.083662509918213
    7. ' +' → logprob: -6.208662509918213
    8. ' ' → logprob: -7.083662509918213
    9. ' *' → logprob: -7.208662509918213
    10. '*' → logprob: -7.333662509918213

Token 81: ' {' (ID: 354)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2649106979370117
    2. '}' → logprob: -2.8899106979370117
    3. ' ,' → logprob: -3.1399106979370117
    4. ' {' → logprob: -3.2649106979370117
    5. ' j' → logprob: -3.5149106979370117
    6. ' "' → logprob: -4.139910697937012
    7. ' }' → logprob: -4.639910697937012
    8. '},{' → logprob: -4.889910697937012
    9. ',j' → logprob: -5.139910697937012
    10. ' i' → logprob: -5.514910697937012

Token 82: 'j' (ID: 73)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3247297406196594
    2. 'j' → logprob: -1.5747296810150146
    3. 'i' → logprob: -2.6997296810150146
    4. 'N' → logprob: -6.949729919433594
    5. '(s' → logprob: -7.074729919433594
    6. '(i' → logprob: -7.449729919433594
    7. 'M' → logprob: -9.199729919433594
    8. ' s' → logprob: -9.324729919433594
    9. '   ' → logprob: -9.949729919433594
    10. '(' → logprob: -9.949729919433594

Token 83: '}"' (ID: 21503)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.45186665654182434
    2. '\n' → logprob: -1.076866626739502
    3. '}"' → logprob: -5.201866626739502
    4. ' "' → logprob: -5.201866626739502
    5. '}\' → logprob: -5.326866626739502
    6. ' for' → logprob: -5.701866626739502
    7. '")' → logprob: -6.326866626739502
    8. '}' → logprob: -7.076866626739502
    9. 'for' → logprob: -7.951866626739502
    10. '}")' → logprob: -8.70186710357666

Token 84: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10052376985549927
    2. 'for' → logprob: -2.3505237102508545
    3. '	for' → logprob: -8.725523948669434
    4. '\n' → logprob: -9.475523948669434
    5. ')' → logprob: -10.725523948669434
    6. '   ' → logprob: -10.975523948669434
    7. ' ' → logprob: -11.225523948669434
    8. '    ' → logprob: -12.100523948669434
    9. '
' → logprob: -12.350523948669434
    10. '  ' → logprob: -12.600523948669434

Token 85: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16768109798431396
    2. ' j' → logprob: -2.0426812171936035
    3. 'i' → logprob: -4.0426812171936035
    4. 'j' → logprob: -5.1676812171936035
    5. ' ' → logprob: -6.6676812171936035
    6. ' range' → logprob: -9.667680740356445
    7. ' ' → logprob: -10.542680740356445
    8. ' s' → logprob: -10.667680740356445
    9. '	i' → logprob: -11.042680740356445
    10. '  ' → logprob: -11.417680740356445

Token 86: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005298623349517584
    2. 'in' → logprob: -5.255298614501953
    3. ' ' → logprob: -10.380298614501953
    4. ' i' → logprob: -11.630298614501953
    5. ',' → logprob: -12.130298614501953
    6. '	in' → logprob: -12.255298614501953
    7. '  ' → logprob: -12.380298614501953
    8. '   ' → logprob: -13.505298614501953
    9. ')' → logprob: -13.817798614501953
    10. '1' → logprob: -14.005298614501953

Token 87: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029770972207188606
    2. 'range' → logprob: -3.529771089553833
    3. ' ' → logprob: -11.779770851135254
    4. ' s' → logprob: -12.404770851135254
    5. '	range' → logprob: -12.779770851135254
    6. ' xrange' → logprob: -13.904770851135254
    7. ')' → logprob: -14.154770851135254
    8. ' ran' → logprob: -14.404770851135254
    9. 's' → logprob: -14.404770851135254
    10. '  ' → logprob: -14.529770851135254

Token 88: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005259491503238678
    2. '(s' → logprob: -5.2552595138549805
    3. '1' → logprob: -11.13025951385498
    4. 's' → logprob: -11.88025951385498
    5. ' (' → logprob: -13.63025951385498
    6. '(
' → logprob: -14.25525951385498
    7. '   ' → logprob: -14.38025951385498
    8. ')' → logprob: -14.38025951385498
    9. '(n' → logprob: -15.25525951385498
    10. ' ' → logprob: -15.25525951385498

Token 89: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015107057057321072
    2. 's' → logprob: -4.265107154846191
    3. '2' → logprob: -7.140107154846191
    4. ' ' → logprob: -9.140107154846191
    5. ' s' → logprob: -10.890107154846191
    6. '   ' → logprob: -11.640107154846191
    7. '3' → logprob: -12.827607154846191
    8. ')' → logprob: -13.390107154846191
    9. '0' → logprob: -13.515107154846191
    10. '```' → logprob: -13.702607154846191

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035253597889095545
    2. '+' → logprob: -6.503525257110596
    3. ',s' → logprob: -7.253525257110596
    4. 's' → logprob: -7.378525257110596
    5. ' ,' → logprob: -7.628525257110596
    6. '   ' → logprob: -9.128525733947754
    7. ' s' → logprob: -10.753525733947754
    8. ',N' → logprob: -10.753525733947754
    9. ' +' → logprob: -11.003525733947754
    10. '1' → logprob: -11.753525733947754

Token 91: ' N' (ID: 478)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06200891733169556
    2. ' s' → logprob: -2.812008857727051
    3. '	s' → logprob: -10.56200885772705
    4. 'N' → logprob: -11.81200885772705
    5. '   ' → logprob: -12.93700885772705
    6. ' ' → logprob: -13.31200885772705
    7. ' N' → logprob: -14.18700885772705
    8. '{s' → logprob: -14.68700885772705
    9. '6' → logprob: -15.06200885772705
    10. '2' → logprob: -15.06200885772705

Token 92: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026738997548818588
    2. ' +' → logprob: -4.276739120483398
    3. ')' → logprob: -4.401739120483398
    4. '+)' → logprob: -9.151739120483398
    5. ' )' → logprob: -9.526739120483398
    6. ' ' → logprob: -10.651739120483398
    7. '+
' → logprob: -11.526739120483398
    8. '   ' → logprob: -11.901739120483398
    9. ')+' → logprob: -12.151739120483398
    10. '    ' → logprob: -12.276739120483398

Token 93: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.011132238432765007
    2. 'for' → logprob: -4.63613224029541
    3. '   ' → logprob: -6.88613224029541
    4. '+' → logprob: -8.38613224029541
    5. '    ' → logprob: -9.88613224029541
    6. '	for' → logprob: -10.13613224029541
    7. ' ' → logprob: -11.51113224029541
    8. '       ' → logprob: -11.51113224029541
    9. '  ' → logprob: -12.51113224029541
    10. ')' → logprob: -12.51113224029541

Token 94: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.006744031794369221
    2. 'j' → logprob: -5.006743907928467
    3. ' ' → logprob: -11.131744384765625
    4. '	j' → logprob: -11.631744384765625
    5. '  ' → logprob: -13.756744384765625
    6. '   ' → logprob: -13.881744384765625
    7. '    ' → logprob: -13.881744384765625
    8. ' range' → logprob: -14.131744384765625
    9. '```' → logprob: -15.506744384765625
    10. '<|end|>' → logprob: -15.506744384765625

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05503031983971596
    2. 'in' → logprob: -2.930030345916748
    3. 'range' → logprob: -9.93002986907959
    4. ' ' → logprob: -10.18002986907959
    5. '=' → logprob: -11.68002986907959
    6. '<|end|>' → logprob: -11.68002986907959
    7. '  ' → logprob: -11.93002986907959
    8. 's' → logprob: -12.05502986907959
    9. '	in' → logprob: -12.18002986907959
    10. '   ' → logprob: -12.43002986907959

Token 96: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16025042533874512
    2. 'range' → logprob: -1.9102504253387451
    3. '(range' → logprob: -11.035250663757324
    4. ' ' → logprob: -11.910250663757324
    5. '	range' → logprob: -13.160250663757324
    6. '  ' → logprob: -14.160250663757324
    7. '   ' → logprob: -15.410250663757324
    8. '_range' → logprob: -15.910250663757324
    9. ' xrange' → logprob: -15.910250663757324
    10. '<|end|>' → logprob: -16.535249710083008

Token 97: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00034702493576332927
    2. '(' → logprob: -8.000347137451172
    3. '=i' → logprob: -12.375347137451172
    4. '=(' → logprob: -12.750347137451172
    5. '(s' → logprob: -13.000347137451172
    6. '((' → logprob: -14.250347137451172
    7. ' (' → logprob: -15.000347137451172
    8. ')' → logprob: -15.000347137451172
    9. ' ' → logprob: -15.750347137451172
    10. '   ' → logprob: -16.125347137451172

Token 98: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.043042805045843124
    2. ' +' → logprob: -3.1680428981781006
    3. '+i' → logprob: -11.41804313659668
    4. '1' → logprob: -11.79304313659668
    5. '+,' → logprob: -12.04304313659668
    6. '+s' → logprob: -13.04304313659668
    7. ',' → logprob: -13.29304313659668
    8. '()+' → logprob: -13.29304313659668
    9. '+)' → logprob: -13.29304313659668
    10. '+n' → logprob: -13.41804313659668

Token 99: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015705463010817766
    2. ' ' → logprob: -9.125157356262207
    3. '2' → logprob: -10.625157356262207
    4. 's' → logprob: -11.500157356262207
    5. 'i' → logprob: -12.250157356262207
    6. '   ' → logprob: -12.875157356262207
    7. ')' → logprob: -13.000157356262207
    8. 'N' → logprob: -13.375157356262207
    9. ',' → logprob: -13.875157356262207
    10. '(' → logprob: -15.000157356262207

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010005383752286434
    2. 'N' → logprob: -4.885005474090576
    3. '2' → logprob: -6.385005474090576
    4. 's' → logprob: -7.885005474090576
    5. ' ' → logprob: -8.635004997253418
    6. 'i' → logprob: -9.010004997253418
    7. ' N' → logprob: -11.010004997253418
    8. '   ' → logprob: -12.760004997253418
    9. '3' → logprob: -13.135004997253418
    10. '```' → logprob: -13.260004997253418

Token 101: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008226146455854177
    2. ' ,' → logprob: -8.000823020935059
    3. 's' → logprob: -8.125823020935059
    4. ',s' → logprob: -9.500823020935059
    5. ',N' → logprob: -9.750823020935059
    6. '(),' → logprob: -10.375823020935059
    7. '   ' → logprob: -11.750823020935059
    8. ',n' → logprob: -12.000823020935059
    9. ')' → logprob: -13.375823020935059
    10. '1' → logprob: -13.500823020935059

Token 102: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5280410647392273
    2. 's' → logprob: -1.028041124343872
    3. ' N' → logprob: -3.278041124343872
    4. ' s' → logprob: -4.278040885925293
    5. '   ' → logprob: -7.528040885925293
    6. ' ' → logprob: -8.028040885925293
    7. '  ' → logprob: -10.778040885925293
    8. 'n' → logprob: -11.028040885925293
    9. '    ' → logprob: -11.278040885925293
    10. '	N' → logprob: -11.528040885925293

Token 103: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5760757327079773
    2. ' +' → logprob: -0.8260757327079773
    3. '   ' → logprob: -9.451075553894043
    4. ')' → logprob: -10.326075553894043
    5. '1' → logprob: -12.326075553894043
    6. ' ' → logprob: -12.451075553894043
    7. '    ' → logprob: -12.826075553894043
    8. ' +
' → logprob: -12.951075553894043
    9. '+
' → logprob: -13.326075553894043
    10. ' plus' → logprob: -13.576075553894043

Token 104: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031305922311730683
    2. ' ' → logprob: -8.500312805175781
    3. '2' → logprob: -9.125312805175781
    4. '   ' → logprob: -15.125312805175781
    5. '+' → logprob: -16.37531280517578
    6. 's' → logprob: -16.87531280517578
    7. '  ' → logprob: -16.87531280517578
    8. '```' → logprob: -17.25031280517578
    9. ')' → logprob: -17.62531280517578
    10. '3' → logprob: -17.75031280517578

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. '2' → logprob: -11.500015258789062
    3. ' ' → logprob: -12.500015258789062
    4. '   ' → logprob: -15.437515258789062
    5. '+' → logprob: -16.000015258789062
    6. '```' → logprob: -16.500015258789062
    7. '``' → logprob: -16.750015258789062
    8. '"' → logprob: -17.375015258789062
    9. ')' → logprob: -17.375015258789062
    10. '`' → logprob: -17.500015258789062

Token 106: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04671116918325424
    2. ' if' → logprob: -3.1717112064361572
    3. ' )' → logprob: -6.171710968017578
    4. '   ' → logprob: -7.171710968017578
    5. '))' → logprob: -8.421710968017578
    6. 'if' → logprob: -8.546710968017578
    7. '       ' → logprob: -8.671710968017578
    8. ' ' → logprob: -9.046710968017578
    9. '           ' → logprob: -10.796710968017578
    10. ',' → logprob: -10.796710968017578

Token 107: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05340123176574707
    2. ')' → logprob: -3.053401231765747
    3. '   ' → logprob: -5.803400993347168
    4. 'if' → logprob: -7.428400993347168
    5. '	if' → logprob: -7.928400993347168
    6. ' )' → logprob: -7.928400993347168
    7. ' ' → logprob: -8.553400993347168
    8. '       ' → logprob: -9.428400993347168
    9. '    ' → logprob: -10.303400993347168
    10. '<|end|>' → logprob: -10.553400993347168

Token 108: ' i' (ID: 575)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9519680142402649
    2. '(i' → logprob: -1.3269679546356201
    3. '(j' → logprob: -1.7019679546356201
    4. 'j' → logprob: -2.82696795463562
    5. ' j' → logprob: -2.95196795463562
    6. 'i' → logprob: -4.451968193054199
    7. ' i' → logprob: -4.701968193054199
    8. ' not' → logprob: -5.076968193054199
    9. '(abs' → logprob: -5.076968193054199
    10. '   ' → logprob: -5.701968193054199

Token 109: ' +' (ID: 659)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.6193819642066956
    2. '!=' → logprob: -0.8693819642066956
    3. ' +' → logprob: -3.994381904602051
    4. '+' → logprob: -4.244381904602051
    5. '%' → logprob: -5.869381904602051
    6. ' <' → logprob: -6.244381904602051
    7. '<' → logprob: -6.744381904602051
    8. '==' → logprob: -7.119381904602051
    9. ' ==' → logprob: -7.244381904602051
    10. ' ' → logprob: -7.369381904602051

Token 110: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.004238785710185766
    2. ' j' → logprob: -5.504238605499268
    3. 's' → logprob: -8.879239082336426
    4. ' ' → logprob: -12.629239082336426
    5. '	j' → logprob: -12.629239082336426
    6. '<|end|>' → logprob: -12.629239082336426
    7. ' s' → logprob: -12.754239082336426
    8. '1' → logprob: -13.254239082336426
    9. '   ' → logprob: -13.379239082336426
    10. '_j' → logprob: -14.129239082336426

Token 111: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.7926470637321472
    2. ' !=' → logprob: -0.9176470637321472
    3. ' <=' → logprob: -2.417647123336792
    4. '<=' → logprob: -3.292647123336792
    5. ' >=' → logprob: -4.792646884918213
    6. '==' → logprob: -5.417646884918213
    7. '>=' → logprob: -5.542646884918213
    8. ' ==' → logprob: -6.042646884918213
    9. ' <' → logprob: -7.167646884918213
    10. '<' → logprob: -7.542646884918213

Token 112: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0699453204870224
    2. ' s' → logprob: -2.6949453353881836
    3. ' ' → logprob: -12.319945335388184
    4. '	s' → logprob: -13.444945335388184
    5. '{s' → logprob: -13.944945335388184
    6. '2' → logprob: -14.569945335388184
    7. '    ' → logprob: -14.819945335388184
    8. '   ' → logprob: -14.944945335388184
    9. '<|end|>' → logprob: -15.194945335388184
    10. '`s' → logprob: -16.069944381713867

Token 113: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004535526386462152
    2. ')
' → logprob: -7.750453472137451
    3. ' )' → logprob: -11.37545394897461
    4. '")' → logprob: -12.12545394897461
    5. '   ' → logprob: -13.37545394897461
    6. ')

' → logprob: -13.50045394897461
    7. ')
' → logprob: -13.87545394897461
    8. ' ' → logprob: -14.62545394897461
    9. ' and' → logprob: -15.00045394897461
    10. '')' → logprob: -15.50045394897461

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021594872698187828
    2. 'for' → logprob: -4.521595001220703
    3. ' for' → logprob: -4.771595001220703
    4. '    
' → logprob: -6.521595001220703
    5. '
' → logprob: -8.146595001220703
    6. '<|end|>' → logprob: -8.396595001220703
    7. '    ' → logprob: -12.146595001220703
    8. ' 
' → logprob: -12.271595001220703
    9. '```' → logprob: -12.646595001220703
    10. '        
' → logprob: -12.646595001220703

Token 115: ' stdout' (ID: 48014)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7664101123809814
    2. 'stdout' (adapté à ' stdout') → logprob: -1.1414101123809814
    3. '   ' → logprob: -1.6414101123809814
    4. ' for' → logprob: -4.266409873962402
    5. '    
' → logprob: -5.641409873962402
    6. '
' → logprob: -5.766409873962402
    7. '```' → logprob: -7.766409873962402
    8. 'stdin' → logprob: -8.016409873962402
    9. ' stdout' → logprob: -9.016409873962402
    10. ' 
' → logprob: -9.141409873962402

Token 116: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.00012833021173719317
    2. '.w' → logprob: -9.125128746032715
    3. '.' → logprob: -10.875128746032715
    4. '.Write' → logprob: -15.500128746032715
    5. '.writerow' → logprob: -15.750128746032715
    6. '.readline' → logprob: -16.7501277923584
    7. 'write' → logprob: -17.0001277923584
    8. '.flush' → logprob: -17.2501277923584
    9. ' .' → logprob: -18.0001277923584
    10. '.writer' → logprob: -18.7501277923584

Token 117: '(f' (ID: 1526)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.3896622061729431
    2. '("\' → logprob: -1.139662265777588
    3. '(' → logprob: -5.889662265777588
    4. '(f' → logprob: -11.63966178894043
    5. '('' → logprob: -12.26466178894043
    6. '("' → logprob: -13.01466178894043
    7. '(
' → logprob: -13.88966178894043
    8. '"\' → logprob: -13.88966178894043
    9. ''\' → logprob: -14.63966178894043
    10. ' ("\' → logprob: -14.63966178894043

Token 118: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.004767361097037792
    2. '"\' → logprob: -5.879767417907715
    3. '"' → logprob: -6.504767417907715
    4. ''{' → logprob: -8.004767417907715
    5. '""' → logprob: -9.379767417907715
    6. ''\' → logprob: -12.004767417907715
    7. '(f' → logprob: -12.004767417907715
    8. '"N' → logprob: -12.129767417907715
    9. ''' → logprob: -12.379767417907715
    10. '(' → logprob: -12.379767417907715

Token 119: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0010673471260815859
    2. 'len' → logprob: -7.376067161560059
    3. 'N' → logprob: -7.751067161560059
    4. ' M' → logprob: -12.001067161560059
    5. 'pairs' → logprob: -13.626067161560059
    6. 'str' → logprob: -14.001067161560059
    7. '   ' → logprob: -14.126067161560059
    8. '(M' → logprob: -14.876067161560059
    9. 'f' → logprob: -15.751067161560059
    10. '(len' → logprob: -16.126068115234375

Token 120: '}\' (ID: 21170)
  Prédit: '}\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}\' → logprob: -0.4813636243343353
    2. '\n' → logprob: -0.9813636541366577
    3. '"\' → logprob: -4.981363773345947
    4. ''\' → logprob: -8.481363296508789
    5. '
' → logprob: -9.356363296508789
    6. ')\' → logprob: -9.606363296508789
    7. '}
' → logprob: -11.481363296508789
    8. '}' → logprob: -11.606363296508789
    9. '+"\' → logprob: -12.231363296508789
    10. '+'\' → logprob: -13.731363296508789

Token 121: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -3.531315314830863e-06
    2. '"\' → logprob: -13.000003814697266
    3. '
' → logprob: -13.625003814697266
    4. ''\' → logprob: -16.750003814697266
    5. '\
' → logprob: -18.750003814697266
    6. 'n' → logprob: -19.250003814697266
    7. '\' → logprob: -19.375003814697266
    8. '

' → logprob: -19.500003814697266
    9. '\\' → logprob: -20.125003814697266
    10. '```' → logprob: -20.375003814697266

Token 122: '"' (ID: 1)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20152725279331207
    2. '")' → logprob: -1.8265272378921509
    3. ')
' → logprob: -3.9515273571014404
    4. '"' → logprob: -6.451527118682861
    5. '")
' → logprob: -7.701527118682861
    6. '')' → logprob: -9.32652759552002
    7. ')

' → logprob: -9.57652759552002
    8. '{"' → logprob: -10.95152759552002
    9. '```' → logprob: -10.95152759552002
    10. ')\' → logprob: -11.32652759552002

Token 123: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012558624148368835
    2. ')
' → logprob: -4.387558460235596
    3. '   ' → logprob: -10.512558937072754
    4. ')

' → logprob: -11.387558937072754
    5. '<|end|>' → logprob: -12.762558937072754
    6. '+' → logprob: -12.887558937072754
    7. ')
' → logprob: -14.012558937072754
    8. ')\' → logprob: -14.387558937072754
    9. ')+' → logprob: -14.512558937072754
    10. '")' → logprob: -15.012558937072754

Token 124: ' "\' (ID: 6512)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.006077752448618412
    2. ' "\' → logprob: -5.256077766418457
    3. ''\' → logprob: -7.131077766418457
    4. '"' → logprob: -10.631077766418457
    5. ' '\' → logprob: -11.631077766418457
    6. '   ' → logprob: -11.756077766418457
    7. '
' → logprob: -14.006077766418457
    8. '""' → logprob: -14.131077766418457
    9. '("\' → logprob: -14.756077766418457
    10. '\n' → logprob: -15.131077766418457

Token 125: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009253957541659474
    2. '\n' → logprob: -7.000925540924072
    3. '
' → logprob: -11.250925064086914
    4. '".' → logprob: -14.500925064086914
    5. '"\' → logprob: -15.000925064086914
    6. 'join' → logprob: -16.250925064086914
    7. ' n' → logprob: -18.125925064086914
    8. '("\' → logprob: -18.625925064086914
    9. '\
' → logprob: -19.000925064086914
    10. '
' → logprob: -19.250925064086914

Token 126: '".' (ID: 4050)
  Prédit: '".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -0.02844635397195816
    2. '.join' → logprob: -3.6534464359283447
    3. '.' → logprob: -6.528446197509766
    4. 'join' → logprob: -7.903446197509766
    5. ''.' → logprob: -8.403446197509766
    6. '''.' → logprob: -10.153446197509766
    7. ').' → logprob: -10.778446197509766
    8. '").' → logprob: -11.778446197509766
    9. '`.' → logprob: -12.403446197509766
    10. '```' → logprob: -12.528446197509766

Token 127: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -2.3080716346157715e-05
    2. ' join' → logprob: -10.750022888183594
    3. '.' → logprob: -14.750022888183594
    4. '.join' → logprob: -14.750022888183594
    5. ' ' → logprob: -15.750022888183594
    6. '```' → logprob: -15.750022888183594
    7. 'jo' → logprob: -15.875022888183594
    8. 'j' → logprob: -16.000022888183594
    9. 'write' → logprob: -16.125022888183594
    10. '(join' → logprob: -17.000022888183594

Token 128: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0007436376181431115
    2. 'pairs' → logprob: -7.250743865966797
    3. 'p' → logprob: -11.125743865966797
    4. '(list' → logprob: -11.250743865966797
    5. 'list' → logprob: -12.375743865966797
    6. ')p' → logprob: -14.250743865966797
    7. ')' → logprob: -14.500743865966797
    8. '(' → logprob: -15.750743865966797
    9. '(pair' → logprob: -16.000743865966797
    10. ' pairs' → logprob: -16.000743865966797

Token 129: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -1.0087516784551553e-05
    2. 'air' → logprob: -12.37501049041748
    3. 'pairs' → logprob: -12.75001049041748
    4. 'a' → logprob: -13.87501049041748
    5. '[' → logprob: -14.50001049041748
    6. 'aires' → logprob: -14.62501049041748
    7. ')' → logprob: -15.00001049041748
    8. 'ars' → logprob: -16.625009536743164
    9. '```' → logprob: -16.625009536743164
    10. '#' → logprob: -16.750009536743164

Token 130: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16590279340744019
    2. '))' → logprob: -1.915902853012085
    3. '+' → logprob: -5.790902614593506
    4. '())' → logprob: -6.790902614593506
    5. '()' → logprob: -7.165902614593506
    6. ')+' → logprob: -7.540902614593506
    7. ' +' → logprob: -10.540903091430664
    8. '))
' → logprob: -10.665903091430664
    9. '`)' → logprob: -10.665903091430664
    10. '()))' → logprob: -10.915903091430664

Token 131: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006811410654336214
    2. '+' → logprob: -5.131811618804932
    3. ')
' → logprob: -8.131811141967773
    4. ' +' → logprob: -8.881811141967773
    5. '())' → logprob: -9.006811141967773
    6. '   ' → logprob: -9.256811141967773
    7. '()' → logprob: -9.631811141967773
    8. ')+' → logprob: -10.131811141967773
    9. ')\' → logprob: -10.381811141967773
    10. '+)' → logprob: -10.881811141967773

Token 132: ' "\' (ID: 6512)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.0005548207554966211
    2. ''\' → logprob: -8.000555038452148
    3. '\n' → logprob: -8.500555038452148
    4. ' "\' → logprob: -11.250555038452148
    5. '("\' → logprob: -13.375555038452148
    6. '   ' → logprob: -14.000555038452148
    7. '`\' → logprob: -15.375555038452148
    8. '"' → logprob: -16.62555503845215
    9. '
' → logprob: -16.62555503845215
    10. '="\' → logprob: -17.00055503845215

Token 133: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00020461321400944144
    2. '\n' → logprob: -8.500205039978027
    3. '"\' → logprob: -13.750205039978027
    4. '"' → logprob: -17.87520408630371
    5. ' n' → logprob: -19.00020408630371
    6. '	n' → logprob: -19.87520408630371
    7. '\' → logprob: -20.12520408630371
    8. '
' → logprob: -20.87520408630371
    9. '(n' → logprob: -20.87520408630371
    10. '```' → logprob: -20.87520408630371

Token 134: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.07945027202367783
    2. ')' → logprob: -2.5794503688812256
    3. ')")' → logprob: -7.5794501304626465
    4. ')"' → logprob: -10.579450607299805
    5. '"' → logprob: -11.079450607299805
    6. '}")' → logprob: -12.454450607299805
    7. '')' → logprob: -13.329450607299805
    8. '")
' → logprob: -13.829450607299805
    9. '”)' → logprob: -14.954450607299805
    10. ' )' → logprob: -15.079450607299805

Token 135: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.024780338630080223
    2. 'main' → logprob: -3.8997802734375
    3. '
' → logprob: -6.2747802734375
    4. '\n' → logprob: -6.3997802734375
    5. '```' → logprob: -8.5247802734375
    6. '\' → logprob: -8.7747802734375
    7. '<|end|>' → logprob: -9.5247802734375
    8. '    
' → logprob: -9.6497802734375
    9. ' if' → logprob: -9.7747802734375
    10. 'print' → logprob: -10.3997802734375

Token 136: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16022545099258423
    2. '__' → logprob: -1.9102253913879395
    3. ' ' → logprob: -14.660225868225098
    4. '_name' → logprob: -14.910225868225098
    5. 'name' → logprob: -15.285225868225098
    6. '_' → logprob: -16.03522491455078
    7. '/__' → logprob: -16.28522491455078
    8. '___' → logprob: -16.91022491455078
    9. 'Name' → logprob: -17.28522491455078
    10. ' ' → logprob: -17.41022491455078

Token 137: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.013094472698867321
    2. ' ==' → logprob: -5.263094425201416
    3. '==' → logprob: -5.513094425201416
    4. '.__' → logprob: -5.888094425201416
    5. ' __' → logprob: -7.388094425201416
    6. '__.__' → logprob: -9.013094902038574
    7. '```' → logprob: -10.013094902038574
    8. '__.' → logprob: -10.138094902038574
    9. '[' → logprob: -10.263094902038574
    10. '_name' → logprob: -10.513094902038574

Token 138: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00013846253568772227
    2. '__.__' → logprob: -9.125138282775879
    3. '==' → logprob: -11.000138282775879
    4. '__["' → logprob: -12.625138282775879
    5. '___' → logprob: -12.875138282775879
    6. '__.' → logprob: -13.000138282775879
    7. '____' → logprob: -13.875138282775879
    8. '=="' → logprob: -14.375138282775879
    9. '__
' → logprob: -14.625138282775879
    10. '__
' → logprob: -14.750138282775879

Token 139: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3057841658592224
    2. '==' → logprob: -1.5557842254638672
    3. ' ==' → logprob: -3.055784225463867
    4. '=="' → logprob: -5.305784225463867
    5. '=='' → logprob: -8.180784225463867
    6. '_' → logprob: -10.555784225463867
    7. '___' → logprob: -10.930784225463867
    8. '===' → logprob: -11.305784225463867
    9. '__.__' → logprob: -11.555784225463867
    10. '=' → logprob: -12.555784225463867

Token 140: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006731472443789244
    2. ''' → logprob: -5.0067315101623535
    3. ' "__' → logprob: -11.506731033325195
    4. '__' → logprob: -12.131731033325195
    5. '"user' → logprob: -15.381731033325195
    6. '"name' → logprob: -16.131731033325195
    7. ' '__' → logprob: -16.256731033325195
    8. ' "' → logprob: -17.506731033325195
    9. '"_' → logprob: -17.756731033325195
    10. ''"' → logprob: -17.756731033325195

Token 141: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.034343503415584564
    2. '__' → logprob: -3.4093434810638428
    3. 'name' → logprob: -7.534343719482422
    4. '```' → logprob: -9.784343719482422
    5. '__":
' → logprob: -10.534343719482422
    6. 'm' → logprob: -10.784343719482422
    7. '_main' → logprob: -11.034343719482422
    8. '"' → logprob: -11.909343719482422
    9. '__
' → logprob: -12.284343719482422
    10. 'built' → logprob: -12.284343719482422

Token 142: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.1002865731716156
    2. '__' → logprob: -2.3502864837646484
    3. '__':
' → logprob: -9.725286483764648
    4. '_' → logprob: -11.850286483764648
    5. '__.' → logprob: -11.850286483764648
    6. '__.__' → logprob: -12.975286483764648
    7. '__["' → logprob: -13.100286483764648
    8. '__:' → logprob: -14.225286483764648
    9. '__
' → logprob: -15.600286483764648
    10. '__("' → logprob: -15.975286483764648

Token 143: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.002038795268163085
    2. '	main' → logprob: -6.877038955688477
    3. ' main' → logprob: -7.502038955688477
    4. '   ' → logprob: -8.002038955688477
    5. '"' → logprob: -9.252038955688477
    6. '__' → logprob: -11.127038955688477
    7. '_main' → logprob: -12.252038955688477
    8. '    
' → logprob: -14.002038955688477
    9. ''' → logprob: -14.627038955688477
    10. '(main' → logprob: -14.752038955688477

Token 144: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -3.128163257315464e-07
    2. ' main' → logprob: -15.5
    3. '	main' → logprob: -20.0
    4. '   ' → logprob: -22.625
    5. '(main' → logprob: -24.25
    6. '.main' → logprob: -24.625
    7. '_main' → logprob: -26.0
    8. 'mainwindow' → logprob: -26.125
    9. 'Main' → logprob: -26.25
    10. 'import' → logprob: -27.625

Token 145: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0010370950913056731
    2. '(' → logprob: -7.001037120819092
    3. '()
' → logprob: -9.126036643981934
    4. '(
' → logprob: -12.126036643981934
    5. '()

' → logprob: -12.501036643981934
    6. '()`' → logprob: -12.626036643981934
    7. '();' → logprob: -14.251036643981934
    8. '()"' → logprob: -14.501036643981934
    9. '()">' → logprob: -14.501036643981934
    10. '()]' → logprob: -14.876036643981934


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 143
Tokens correctement prédits (1ère position, stricte): 69
Tokens correctement prédits (1ère position, avec adaptation): 70
Tokens correctement prédits (top 10): 124
Précision stricte (1ère position): 48.25%
Précision adaptée (1ère position): 48.95%
Précision (top 10): 86.71%
================================================================================
