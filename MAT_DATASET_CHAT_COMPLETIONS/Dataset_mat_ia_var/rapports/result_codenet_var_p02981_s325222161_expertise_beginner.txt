================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
numbers = input().split()
a = int(numbers[0])
b = int(numbers[1])
c = int(numbers[2])

result1 = a * b
result2 = c

if result1 < result2:
    print(result1)
else:
    print(result2)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'numbers' (ID: 85055)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0047959499061107635
    2. ''' → logprob: -6.004796028137207
    3. '"' → logprob: -7.379796028137207
    4. '```' → logprob: -7.629796028137207
    5. '`' → logprob: -7.879796028137207
    6. '()' → logprob: -8.254796028137207
    7. '.' → logprob: -8.629796028137207
    8. '('' → logprob: -9.004796028137207
    9. '(
' → logprob: -9.879796028137207
    10. '[' → logprob: -9.879796028137207

Token 4: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005245498847216368
    2. 'strip' → logprob: -5.255245685577393
    3. ' split' → logprob: -12.505245208740234
    4. '.split' → logprob: -12.630245208740234
    5. 'replace' → logprob: -13.130245208740234
    6. 'spl' → logprob: -13.880245208740234
    7. 'rstrip' → logprob: -13.880245208740234
    8. '```' → logprob: -14.880245208740234
    9. 'isdigit' → logprob: -16.130245208740234
    10. 'lower' → logprob: -16.630245208740234

Token 5: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008657712489366531
    2. '()' → logprob: -4.883657932281494
    3. '`' → logprob: -8.133657455444336
    4. '```' → logprob: -8.758657455444336
    5. '('' → logprob: -8.883657455444336
    6. '"' → logprob: -8.883657455444336
    7. '(
' → logprob: -9.133657455444336
    8. ''' → logprob: -9.508657455444336
    9. '(`' → logprob: -10.633657455444336
    10. '(

' → logprob: -11.008657455444336

Token 6: 'a' (ID: 64)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9764617681503296
    2. '[' → logprob: -1.1014617681503296
    3. '.' → logprob: -2.101461887359619
    4. ' =' → logprob: -2.851461887359619
    5. 'numbers' → logprob: -3.726461887359619
    6. 'for' → logprob: -4.101461887359619
    7. '```' → logprob: -4.726461887359619
    8. 'nums' → logprob: -4.851461887359619
    9. '[:]' → logprob: -4.851461887359619
    10. 'print' → logprob: -5.101461887359619

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05012043938040733
    2. ' =' → logprob: -3.3001203536987305
    3. '=' → logprob: -5.1751203536987305
    4. '.' → logprob: -6.0501203536987305
    5. 's' → logprob: -6.0501203536987305
    6. ' ' → logprob: -8.05012035369873
    7. ',' → logprob: -8.55012035369873
    8. '_' → logprob: -8.67512035369873
    9. '_numbers' → logprob: -8.80012035369873
    10. '[int' → logprob: -9.17512035369873

Token 8: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01831042394042015
    2. ' int' → logprob: -4.018310546875
    3. '[int' → logprob: -9.518310546875
    4. 'numbers' → logprob: -9.643310546875
    5. 'float' → logprob: -11.393310546875
    6. 'len' → logprob: -12.893310546875
    7. ' numbers' → logprob: -13.018310546875
    8. 'list' → logprob: -13.018310546875
    9. '[]' → logprob: -13.643310546875
    10. ' float' → logprob: -14.518310546875

Token 9: '(numbers' (ID: 98592)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5760149955749512
    2. '(numbers' → logprob: -0.8260149955749512
    3. '(a' → logprob: -10.07601547241211
    4. '(n' → logprob: -10.95101547241211
    5. '(nums' → logprob: -12.20101547241211
    6. '(number' → logprob: -12.95101547241211
    7. ' (' → logprob: -13.45101547241211
    8. '('' → logprob: -14.20101547241211
    9. '(
' → logprob: -14.20101547241211
    10. '(num' → logprob: -14.45101547241211

Token 10: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. ')' → logprob: -13.500001907348633
    3. ' [' → logprob: -15.125001907348633
    4. '0' → logprob: -16.500001907348633
    5. '[a' → logprob: -18.125001907348633
    6. '[
' → logprob: -18.625001907348633
    7. '\[' → logprob: -18.625001907348633
    8. '```' → logprob: -19.250001907348633
    9. ' ' → logprob: -19.625001907348633
    10. ' )' → logprob: -19.750001907348633

Token 11: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. '1' → logprob: -12.750003814697266
    3. ' ' → logprob: -14.125003814697266
    4. ')' → logprob: -19.125003814697266
    5. ''' → logprob: -19.375003814697266
    6. '۰' → logprob: -19.625003814697266
    7. '   ' → logprob: -19.750003814697266
    8. ']' → logprob: -20.062503814697266
    9. '０' → logprob: -20.187503814697266
    10. '```' → logprob: -20.187503814697266

Token 12: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00040660108788870275
    2. ']' → logprob: -8.250406265258789
    3. ')' → logprob: -9.000406265258789
    4. ' ])' → logprob: -11.000406265258789
    5. '])
' → logprob: -13.375406265258789
    6. ''])' → logprob: -13.625406265258789
    7. ')])' → logprob: -14.375406265258789
    8. ')]' → logprob: -14.625406265258789
    9. '+' → logprob: -15.000406265258789
    10. ']))' → logprob: -15.375406265258789

Token 13: 'b' (ID: 65)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02316209487617016
    2. 'b' → logprob: -4.273161888122559
    3. '+b' → logprob: -6.273161888122559
    4. ' ' → logprob: -6.523161888122559
    5. '+
' → logprob: -6.648161888122559
    6. '*' → logprob: -6.648161888122559
    7. '<|end|>' → logprob: -6.898161888122559
    8. '```' → logprob: -7.898161888122559
    9. '=' → logprob: -8.023161888122559
    10. ')' → logprob: -8.648161888122559

Token 14: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5218899250030518
    2. ' =' → logprob: -1.1468899250030518
    3. ')' → logprob: -2.8968899250030518
    4. '[' → logprob: -3.7718899250030518
    5. ' ' → logprob: -5.021889686584473
    6. '_' → logprob: -7.021889686584473
    7. '+' → logprob: -7.021889686584473
    8. '<|end|>' → logprob: -7.021889686584473
    9. ' )' → logprob: -8.271889686584473
    10. '  ' → logprob: -8.396889686584473

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10020915418863297
    2. 'int' → logprob: -2.3502092361450195
    3. ' a' → logprob: -14.10020923614502
    4. ' ' → logprob: -14.35020923614502
    5. 'a' → logprob: -14.97520923614502
    6. ' numbers' → logprob: -15.10020923614502
    7. '=int' → logprob: -15.22520923614502
    8. '(int' → logprob: -15.47520923614502
    9. '<int' → logprob: -16.725208282470703
    10. 'numbers' → logprob: -17.100208282470703

Token 16: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -0.5760571360588074
    2. '(' → logprob: -0.8260571360588074
    3. '(n' → logprob: -9.826057434082031
    4. ' (' → logprob: -10.201057434082031
    5. '(b' → logprob: -11.451057434082031
    6. '(a' → logprob: -12.701057434082031
    7. '(nums' → logprob: -12.826057434082031
    8. '('' → logprob: -12.951057434082031
    9. '(number' → logprob: -14.451057434082031
    10. ' ' → logprob: -14.451057434082031

Token 17: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.173704271830502e-06
    2. ')' → logprob: -13.37500286102295
    3. '[
' → logprob: -14.87500286102295
    4. '1' → logprob: -15.12500286102295
    5. 'b' → logprob: -15.50000286102295
    6. ' [' → logprob: -15.50000286102295
    7. '])' → logprob: -15.50000286102295
    8. '```' → logprob: -16.375003814697266
    9. '[b' → logprob: -16.625003814697266
    10. ']' → logprob: -17.125003814697266

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.463036435074173e-05
    2. '0' → logprob: -10.625024795532227
    3. '])' → logprob: -16.000024795532227
    4. ' ' → logprob: -16.125024795532227
    5. '2' → logprob: -17.250024795532227
    6. '```' → logprob: -17.250024795532227
    7. ']' → logprob: -17.625024795532227
    8. ')' → logprob: -19.125024795532227
    9. '１' → logprob: -19.125024795532227
    10. '   ' → logprob: -19.500024795532227

Token 19: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07226122915744781
    2. '])' → logprob: -2.947261333465576
    3. ']' → logprob: -4.072261333465576
    4. ')])' → logprob: -9.072260856628418
    5. ')]' → logprob: -10.322260856628418
    6. '）' → logprob: -11.447260856628418
    7. ''])' → logprob: -11.572260856628418
    8. '))' → logprob: -12.197260856628418
    9. ']))' → logprob: -12.822260856628418
    10. '+' → logprob: -13.072260856628418

Token 20: 'c' (ID: 66)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.015283406712114811
    2. 'c' → logprob: -4.890283584594727
    3. 'if' → logprob: -5.640283584594727
    4. '+
' → logprob: -7.015283584594727
    5. '#' → logprob: -7.265283584594727
    6. '*' → logprob: -7.515283584594727
    7. 'i' → logprob: -7.640283584594727
    8. '+c' → logprob: -8.140283584594727
    9. '=' → logprob: -8.515283584594727
    10. 'a' → logprob: -8.640283584594727

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29702213406562805
    2. '=' → logprob: -1.4220221042633057
    3. '_' → logprob: -4.422022342681885
    4. ' ' → logprob: -7.297022342681885
    5. ')' → logprob: -7.422022342681885
    6. '+' → logprob: -7.672022342681885
    7. '  ' → logprob: -8.047021865844727
    8. '.' → logprob: -8.297021865844727
    9. '<|end|>' → logprob: -8.547021865844727
    10. '>' → logprob: -8.672021865844727

Token 22: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.10041994601488113
    2. 'int' → logprob: -2.3504199981689453
    3. ' a' → logprob: -9.225419998168945
    4. 'a' → logprob: -9.350419998168945
    5. '(int' → logprob: -11.350419998168945
    6. ' ' → logprob: -12.350419998168945
    7. '=int' → logprob: -13.100419998168945
    8. ' b' → logprob: -13.350419998168945
    9. '<int' → logprob: -13.350419998168945
    10. '0' → logprob: -13.850419998168945

Token 23: '(numbers' (ID: 98592)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008852534228935838
    2. '(numbers' → logprob: -7.125885486602783
    3. '('' → logprob: -10.375885009765625
    4. '("("' → logprob: -11.125885009765625
    5. '(n' → logprob: -11.250885009765625
    6. '()' → logprob: -12.750885009765625
    7. ' (' → logprob: -12.750885009765625
    8. '(a' → logprob: -12.875885009765625
    9. '(`' → logprob: -13.625885009765625
    10. '(
' → logprob: -13.625885009765625

Token 24: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. '```' → logprob: -14.500001907348633
    3. ')' → logprob: -14.750001907348633
    4. '2' → logprob: -15.000001907348633
    5. '3' → logprob: -15.125001907348633
    6. '[
' → logprob: -15.375001907348633
    7. '(' → logprob: -15.750001907348633
    8. '])' → logprob: -15.875001907348633
    9. '0' → logprob: -16.125001907348633
    10. ']' → logprob: -16.875001907348633

Token 25: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.816093228830141e-06
    2. '0' → logprob: -13.00000286102295
    3. '1' → logprob: -15.12500286102295
    4. '```' → logprob: -16.000001907348633
    5. '])' → logprob: -16.875001907348633
    6. ' ' → logprob: -17.375001907348633
    7. '3' → logprob: -17.437501907348633
    8. '２' → logprob: -17.812501907348633
    9. '``' → logprob: -17.937501907348633
    10. '   ' → logprob: -18.062501907348633

Token 26: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ']' → logprob: -14.500001907348633
    3. '')' → logprob: -14.875001907348633
    4. '}' → logprob: -16.125001907348633
    5. ' )' → logprob: -16.125001907348633
    6. '))' → logprob: -16.500001907348633
    7. '")' → logprob: -16.625001907348633
    8. '`)' → logprob: -16.750001907348633
    9. '）' → logprob: -16.750001907348633
    10. ')
' → logprob: -17.125001907348633

Token 27: 'result' (ID: 2521)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8132064938545227
    2. 'i' → logprob: -1.063206434249878
    3. 'd' → logprob: -1.813206434249878
    4. 's' → logprob: -3.813206434249878
    5. 'x' → logprob: -5.188206672668457
    6. '#' → logprob: -5.813206672668457
    7. '+' → logprob: -5.938206672668457
    8. '=' → logprob: -6.188206672668457
    9. 'sum' → logprob: -6.188206672668457
    10. 'n' → logprob: -6.313206672668457

Token 28: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5715665221214294
    2. '=' → logprob: -1.0715665817260742
    3. ' ' → logprob: -3.071566581726074
    4. '+' → logprob: -3.821566581726074
    5. '_' → logprob: -4.196566581726074
    6. '<|end|>' → logprob: -6.321566581726074
    7. ' +=' → logprob: -6.571566581726074
    8. '(' → logprob: -6.821566581726074
    9. ')' → logprob: -7.071566581726074
    10. '*' → logprob: -7.196566581726074

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6545486450195312
    2. '_' → logprob: -1.1545486450195312
    3. '=' → logprob: -2.1545486450195312
    4. '+' → logprob: -3.2795486450195312
    5. ' ' → logprob: -5.654548645019531
    6. '(' → logprob: -5.779548645019531
    7. ' +' → logprob: -7.154548645019531
    8. '_space' → logprob: -7.404548645019531
    9. '*' → logprob: -7.529548645019531
    10. '1' → logprob: -7.654548645019531

Token 30: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12958376109600067
    2. ' a' → logprob: -2.1295838356018066
    3. '(a' → logprob: -6.504583835601807
    4. ' max' → logprob: -8.004583358764648
    5. 'max' → logprob: -8.129583358764648
    6. ' (' → logprob: -8.129583358764648
    7. '(' → logprob: -9.379583358764648
    8. ' ' → logprob: -10.129583358764648
    9. 'min' → logprob: -10.629583358764648
    10. ' min' → logprob: -10.629583358764648

Token 31: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1277235746383667
    2. ' +' → logprob: -2.1277236938476562
    3. '*' → logprob: -7.377723693847656
    4. '**' → logprob: -9.877723693847656
    5. ' *' → logprob: -9.877723693847656
    6. ' **' → logprob: -11.252723693847656
    7. '_' → logprob: -11.502723693847656
    8. ' ' → logprob: -11.502723693847656
    9. '>' → logprob: -11.502723693847656
    10. '-' → logprob: -12.002723693847656

Token 32: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.38912826776504517
    2. ' b' → logprob: -1.1391282081604004
    3. ' ' → logprob: -6.5141282081604
    4. '2' → logprob: -8.639128684997559
    5. ' c' → logprob: -9.264128684997559
    6. 'c' → logprob: -9.264128684997559
    7. 'a' → logprob: -9.639128684997559
    8. '3' → logprob: -9.639128684997559
    9. ' (' → logprob: -9.889128684997559
    10. '100' → logprob: -10.264128684997559

Token 33: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16249261796474457
    2. '*' → logprob: -2.037492513656616
    3. ' +' → logprob: -5.037492752075195
    4. ' ' → logprob: -5.537492752075195
    5. ')' → logprob: -5.787492752075195
    6. '<|end|>' → logprob: -5.787492752075195
    7. '**' → logprob: -6.537492752075195
    8. ' *' → logprob: -7.662492752075195
    9. '-' → logprob: -7.912492752075195
    10. '>' → logprob: -8.537492752075195

Token 34: 'result' (ID: 2521)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06649630516767502
    2. '*' → logprob: -3.3164963722229004
    3. ' ' → logprob: -4.6914963722229
    4. ' +' → logprob: -4.6914963722229
    5. '<|end|>' → logprob: -5.0664963722229
    6. ')' → logprob: -7.3164963722229
    7. '-' → logprob: -7.5664963722229
    8. '**' → logprob: -7.9414963722229
    9. '+c' → logprob: -8.066495895385742
    10. '>' → logprob: -8.191495895385742

Token 35: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.007615152280777693
    2. '1' → logprob: -4.882615089416504
    3. '_' → logprob: -12.757615089416504
    4. ' ' → logprob: -13.132615089416504
    5. '[' → logprob: -13.257615089416504
    6. ')' → logprob: -14.632615089416504
    7. '0' → logprob: -15.007615089416504
    8. '  ' → logprob: -15.132615089416504
    9. '₂' → logprob: -15.257615089416504
    10. '۲' → logprob: -15.507615089416504

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3511990010738373
    2. ' ' → logprob: -1.2261990308761597
    3. ' *' → logprob: -6.601199150085449
    4. '=' → logprob: -6.976199150085449
    5. '  ' → logprob: -9.72619915008545
    6. '*' → logprob: -9.85119915008545
    7. '_' → logprob: -9.85119915008545
    8. '<|end|>' → logprob: -10.22619915008545
    9. ')' → logprob: -10.35119915008545
    10. ' ' → logprob: -10.47619915008545

Token 37: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.09153036028146744
    2. 'c' → logprob: -2.5915303230285645
    3. ' a' → logprob: -4.8415303230285645
    4. 'a' → logprob: -5.5915303230285645
    5. ' ' → logprob: -7.2165303230285645
    6. ' b' → logprob: -9.341530799865723
    7. '"' → logprob: -10.591530799865723
    8. ''' → logprob: -10.841530799865723
    9. 'b' → logprob: -10.841530799865723
    10. '  ' → logprob: -12.216530799865723

Token 38: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2788389921188354
    2. ' +' → logprob: -1.2788389921188354
    3. '*' → logprob: -1.5288389921188354
    4. ' *' → logprob: -1.7788389921188354
    5. '-' → logprob: -4.028839111328125
    6. '**' → logprob: -4.403839111328125
    7. ' ' → logprob: -4.903839111328125
    8. ' **' → logprob: -5.278839111328125
    9. ' -' → logprob: -5.528839111328125
    10. '>' → logprob: -5.903839111328125

Token 39: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.025202156975865364
    2. '*' → logprob: -4.02520227432251
    3. '-' → logprob: -6.77520227432251
    4. ' ' → logprob: -7.02520227432251
    5. '+
' → logprob: -7.02520227432251
    6. ' +' → logprob: -7.15020227432251
    7. '=' → logprob: -7.52520227432251
    8. '**' → logprob: -7.65020227432251
    9. '\n' → logprob: -7.65020227432251
    10. '%' → logprob: -8.275201797485352

Token 40: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.061567600816488266
    2. ' ' → logprob: -3.061567544937134
    3. 'result' → logprob: -4.561567783355713
    4. ' a' → logprob: -6.061567783355713
    5. ' (' → logprob: -10.061567306518555
    6. '(result' → logprob: -10.811567306518555
    7. '  ' → logprob: -10.811567306518555
    8. 'a' → logprob: -10.936567306518555
    9. ' ' → logprob: -12.186567306518555
    10. ' not' → logprob: -13.186567306518555

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.050756435841321945
    2. ' ' → logprob: -3.5507564544677734
    3. ' ==' → logprob: -4.175756454467773
    4. ' >' → logprob: -5.675756454467773
    5. ' _' → logprob: -7.425756454467773
    6. '_' → logprob: -7.675756454467773
    7. ' <' → logprob: -8.050756454467773
    8. '==' → logprob: -8.675756454467773
    9. '  ' → logprob: -8.925756454467773
    10. ' <=' → logprob: -9.175756454467773

Token 42: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.088033527135849
    2. ' <' → logprob: -2.713033437728882
    3. '>' → logprob: -4.588033676147461
    4. ' <=' → logprob: -5.713033676147461
    5. ' ==' → logprob: -6.088033676147461
    6. ' >=' → logprob: -6.963033676147461
    7. '<' → logprob: -7.213033676147461
    8. ' ' → logprob: -7.963033676147461
    9. '==' → logprob: -9.338033676147461
    10. ' !=' → logprob: -10.463033676147461

Token 43: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.3487921953201294
    2. 'result' → logprob: -1.2237921953201294
    3. ' ' → logprob: -8.47379207611084
    4. ' c' → logprob: -9.47379207611084
    5. '=result' → logprob: -10.47379207611084
    6. 'c' → logprob: -10.97379207611084
    7. '(result' → logprob: -12.72379207611084
    8. '0' → logprob: -12.72379207611084
    9. ' ' → logprob: -12.97379207611084
    10. '=' → logprob: -13.22379207611084

Token 44: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.87500286102295
    3. 's' → logprob: -14.68750286102295
    4. '1' → logprob: -14.75000286102295
    5. '۲' → logprob: -15.75000286102295
    6. '２' → logprob: -15.93750286102295
    7. '२' → logprob: -16.812501907348633
    8. '২' → logprob: -17.000001907348633
    9. '```' → logprob: -17.062501907348633
    10. '٢' → logprob: -17.437501907348633

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.47757811343763e-05
    2. ' :' → logprob: -10.125044822692871
    3. ':
' → logprob: -12.500044822692871
    4. ':**' → logprob: -14.750044822692871
    5. '>' → logprob: -16.250043869018555
    6. '>:' → logprob: -16.375043869018555
    7. '):' → logprob: -16.875043869018555
    8. '.' → logprob: -17.500043869018555
    9. ' and' → logprob: -17.500043869018555
    10. ':return' → logprob: -17.500043869018555

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9213176369667053
    2. '\n' → logprob: -0.9213176369667053
    3. 'print' → logprob: -2.5463175773620605
    4. ' print' → logprob: -3.1713175773620605
    5. '    ' → logprob: -3.4213175773620605
    6. ':' → logprob: -3.4213175773620605
    7. ':
' → logprob: -5.7963175773620605
    8. '\' → logprob: -5.7963175773620605
    9. ' ' → logprob: -6.0463175773620605
    10. '    
' → logprob: -6.1713175773620605

Token 47: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3237588107585907
    2. 'print' (adapté à ' print') → logprob: -1.323758840560913
    3. '   ' → logprob: -5.073758602142334
    4. '    ' → logprob: -5.698758602142334
    5. ' ' → logprob: -8.698759078979492
    6. ' pass' → logprob: -9.073759078979492
    7. ' result' → logprob: -9.073759078979492
    8. ' 
' → logprob: -9.323759078979492
    9. '\n' → logprob: -9.448759078979492
    10. '    
' → logprob: -9.698759078979492

Token 48: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008840406313538551
    2. '(result' → logprob: -4.883840560913086
    3. '("' → logprob: -7.883840560913086
    4. '()' → logprob: -8.383840560913086
    5. '('' → logprob: -8.508840560913086
    6. 'result' → logprob: -8.758840560913086
    7. '("("' → logprob: -9.008840560913086
    8. '(a' → logprob: -10.008840560913086
    9. '(
' → logprob: -10.758840560913086
    10. '(True' → logprob: -10.883840560913086

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00766790984198451
    2. '2' → logprob: -4.8826680183410645
    3. ')' → logprob: -9.757667541503906
    4. ' ' → logprob: -12.632667541503906
    5. '))' → logprob: -15.445167541503906
    6. ' )' → logprob: -16.257667541503906
    7. '0' → logprob: -17.007667541503906
    8. '   ' → logprob: -17.007667541503906
    9. '  ' → logprob: -17.257667541503906
    10. 'result' → logprob: -18.320167541503906

Token 50: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.664371848164592e-05
    2. ')
' → logprob: -11.375016212463379
    3. ' )' → logprob: -12.750016212463379
    4. 'else' → logprob: -14.250016212463379
    5. '*' → logprob: -14.500016212463379
    6. '   ' → logprob: -15.250016212463379
    7. ' else' → logprob: -15.750016212463379
    8. ' ' → logprob: -15.750016212463379
    9. '))' → logprob: -16.000017166137695
    10. '')' → logprob: -16.375017166137695

Token 51: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.006717267446219921
    2. ' else' → logprob: -5.131717205047607
    3. 'elif' → logprob: -7.256717205047607
    4. '<|end|>' → logprob: -9.881717681884766
    5. ')' → logprob: -11.756717681884766
    6. '*' → logprob: -12.131717681884766
    7. 'e' → logprob: -12.881717681884766
    8. '#else' → logprob: -13.006717681884766
    9. '_else' → logprob: -13.131717681884766
    10. '```' → logprob: -13.131717681884766

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.505351095460355e-05
    2. ' :' → logprob: -9.625075340270996
    3. ':
' → logprob: -12.125075340270996
    4. '   ' → logprob: -13.000075340270996
    5. '<|end|>' → logprob: -14.750075340270996
    6. '():' → logprob: -15.500075340270996
    7. '```' → logprob: -16.37507438659668
    8. '  ' → logprob: -16.50007438659668
    9. ':return' → logprob: -16.62507438659668
    10. '.' → logprob: -16.62507438659668

Token 53: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.12460797280073166
    2. 'print' → logprob: -2.499608039855957
    3. ' result' → logprob: -3.499608039855957
    4. '   ' → logprob: -6.124608039855957
    5. 'result' → logprob: -6.124608039855957
    6. '    ' → logprob: -7.999608039855957
    7. ' ' → logprob: -10.124608039855957
    8. '(print' → logprob: -10.874608039855957
    9. ' ' → logprob: -11.124608039855957
    10. '  ' → logprob: -11.749608039855957

Token 54: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.022296831011772156
    2. ' print' → logprob: -4.022296905517578
    3. 'result' → logprob: -5.522296905517578
    4. ' result' → logprob: -8.897296905517578
    5. 'pr' → logprob: -13.772296905517578
    6. '(print' → logprob: -13.897296905517578
    7. '   ' → logprob: -14.272296905517578
    8. 'c' → logprob: -14.522296905517578
    9. 'prin' → logprob: -14.522296905517578
    10. '.print' → logprob: -15.397296905517578

Token 55: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.4741341769695282
    2. '(' → logprob: -0.9741342067718506
    3. 'result' → logprob: -9.97413444519043
    4. '(c' → logprob: -12.22413444519043
    5. '()' → logprob: -13.34913444519043
    6. '(res' → logprob: -13.84913444519043
    7. '((' → logprob: -14.34913444519043
    8. ' (' → logprob: -14.59913444519043
    9. '(
' → logprob: -15.09913444519043
    10. '('' → logprob: -15.22413444519043

Token 56: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. '1' → logprob: -14.250000953674316
    3. ')' → logprob: -18.25
    4. ' ' → logprob: -18.25
    5. '۲' → logprob: -19.1875
    6. '```' → logprob: -20.125
    7. '   ' → logprob: -20.1875
    8. '[' → logprob: -20.5
    9. '_' → logprob: -20.625
    10. '２' → logprob: -20.6875

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.375
    3. ' )' → logprob: -16.125
    4. '))' → logprob: -16.5
    5. ')`' → logprob: -19.125
    6. '}' → logprob: -19.25
    7. '')' → logprob: -19.625
    8. '+' → logprob: -19.875
    9. '```' → logprob: -19.875
    10. ')#' → logprob: -20.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 55
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 44
Précision stricte (1ère position): 47.27%
Précision adaptée (1ère position): 49.09%
Précision (top 10): 80.00%
================================================================================
