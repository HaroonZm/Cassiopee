================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
a, b, k = map(int, input().split())
for i in range(k):
    if i % 2 == 0:
        if a % 2 == 1:
            a -= 1
        b += a // 2
        a //= 2
    else:
        if b % 2 == 1:
            b -= 1
        a += b // 2
        b //= 2
print(a, b)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'a' (ID: 64)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' b' (ID: 287)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2113417536020279
    2. '+' → logprob: -1.7113417387008667
    3. ',' → logprob: -5.336341857910156
    4. ' =' → logprob: -5.586341857910156
    5. ' ' → logprob: -8.086341857910156
    6. ' +' → logprob: -8.586341857910156
    7. '*' → logprob: -8.711341857910156
    8. '+=' → logprob: -8.961341857910156
    9. '.' → logprob: -9.086341857910156
    10. '[' → logprob: -9.586341857910156

Token 4: ' k' (ID: 372)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03700224682688713
    2. ',' → logprob: -4.412002086639404
    3. ' =' → logprob: -4.412002086639404
    4. 'c' → logprob: -4.912002086639404
    5. ' ' → logprob: -5.787002086639404
    6. '+' → logprob: -7.537002086639404
    7. ',c' → logprob: -8.162002563476562
    8. '_' → logprob: -8.412002563476562
    9. ')' → logprob: -8.662002563476562
    10. '.' → logprob: -9.162002563476562

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07682061940431595
    2. '+' → logprob: -2.7018206119537354
    3. ' =' → logprob: -5.5768208503723145
    4. '*' → logprob: -6.4518208503723145
    5. ')' → logprob: -8.076820373535156
    6. ',' → logprob: -8.201820373535156
    7. '**' → logprob: -8.576820373535156
    8. '[' → logprob: -8.701820373535156
    9. '```' → logprob: -9.076820373535156
    10. '+=' → logprob: -9.326820373535156

Token 6: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03771700710058212
    2. '0' → logprob: -3.53771710395813
    3. '1' → logprob: -5.287716865539551
    4. ' a' → logprob: -7.037716865539551
    5. 'a' → logprob: -7.412716865539551
    6. '10' → logprob: -7.787716865539551
    7. ' [' → logprob: -8.16271686553955
    8. ' map' → logprob: -8.91271686553955
    9. ' input' → logprob: -9.03771686553955
    10. 'input' → logprob: -9.41271686553955

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007844390347599983
    2. '(lambda' → logprob: -5.7578444480896
    3. '```' → logprob: -5.7578444480896
    4. '<|end|>' → logprob: -7.3828444480896
    5. ')' → logprob: -7.8828444480896
    6. '(user' → logprob: -9.632843971252441
    7. '`' → logprob: -9.757843971252441
    8. '(
' → logprob: -9.882843971252441
    9. ' (' → logprob: -10.257843971252441
    10. '<|end|>' → logprob: -10.632843971252441

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.45997706055641174
    2. ')' → logprob: -1.3349770307540894
    3. '(' → logprob: -2.334977149963379
    4. 'input' → logprob: -5.584977149963379
    5. '```' → logprob: -6.709977149963379
    6. '(user' → logprob: -7.334977149963379
    7. ' input' → logprob: -7.709977149963379
    8. '<|end|>' → logprob: -8.209977149963379
    9. ',' → logprob: -8.334977149963379
    10. '`)' → logprob: -8.334977149963379

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12697996199131012
    2. ' input' → logprob: -2.1269800662994385
    3. '(input' → logprob: -10.12697982788086
    4. ')' → logprob: -11.50197982788086
    5. ',input' → logprob: -14.12697982788086
    6. '=input' → logprob: -14.62697982788086
    7. '<input' → logprob: -15.87697982788086
    8. ' )' → logprob: -16.12697982788086
    9. '	input' → logprob: -16.12697982788086
    10. '[input' → logprob: -16.12697982788086

Token 10: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0765235424041748
    2. '()' → logprob: -1.0765235424041748
    3. '())' → logprob: -1.3265235424041748
    4. ')' → logprob: -3.701523542404175
    5. '(()' → logprob: -4.701523780822754
    6. '(token' → logprob: -6.326523780822754
    7. '('' → logprob: -6.451523780822754
    8. '<|end|>' → logprob: -6.451523780822754
    9. '();)' → logprob: -6.576523780822754
    10. '().' → logprob: -6.951523780822754

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00019376569252926856
    2. 'strip' → logprob: -8.62519359588623
    3. ' split' → logprob: -12.12519359588623
    4. ')' → logprob: -12.50019359588623
    5. 'rstrip' → logprob: -12.87519359588623
    6. '(split' → logprob: -13.50019359588623
    7. 'spl' → logprob: -14.62519359588623
    8. '```' → logprob: -15.12519359588623
    9. 'read' → logprob: -15.87519359588623
    10. 'startswith' → logprob: -16.375194549560547

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027788840234279633
    2. '())' → logprob: -3.7777888774871826
    3. '))' → logprob: -5.5277886390686035
    4. '()' → logprob: -8.277789115905762
    5. '`)' → logprob: -8.777789115905762
    6. '(' → logprob: -9.777789115905762
    7. ')`' → logprob: -10.777789115905762
    8. '()))' → logprob: -10.902789115905762
    9. ')))' → logprob: -11.652789115905762
    10. '')' → logprob: -11.777789115905762

Token 13: 'for' (ID: 1938)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06128039211034775
    2. '#' → logprob: -3.5612804889678955
    3. '*' → logprob: -4.061280250549316
    4. '=' → logprob: -5.811280250549316
    5. 'if' → logprob: -6.186280250549316
    6. '+
' → logprob: -6.436280250549316
    7. ',' → logprob: -6.811280250549316
    8. '-' → logprob: -6.811280250549316
    9. '>' → logprob: -6.936280250549316
    10. ':' → logprob: -7.436280250549316

Token 14: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3829328715801239
    2. ' i' → logprob: -1.2579329013824463
    3. '  ' → logprob: -4.007932662963867
    4. 'i' → logprob: -4.757932662963867
    5. '_' → logprob: -5.132932662963867
    6. ' _' → logprob: -7.757932662963867
    7. ' x' → logprob: -9.132932662963867
    8. ' a' → logprob: -9.257932662963867
    9. ' ‌' → logprob: -9.757932662963867
    10. ' token' → logprob: -10.132932662963867

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10830900818109512
    2. 'in' → logprob: -2.358309030532837
    3. ' ' → logprob: -5.233308792114258
    4. '  ' → logprob: -6.983308792114258
    5. ' n' → logprob: -7.983308792114258
    6. '_' → logprob: -7.983308792114258
    7. 'range' → logprob: -8.358308792114258
    8. 'n' → logprob: -8.608308792114258
    9. ')' → logprob: -8.733308792114258
    10. ' i' → logprob: -9.358308792114258

Token 16: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759537816047668
    2. 'range' → logprob: -0.8259537816047668
    3. ' ' → logprob: -12.200953483581543
    4. ' a' → logprob: -12.575953483581543
    5. '	range' → logprob: -12.700953483581543
    6. 'a' → logprob: -13.700953483581543
    7. '(range' → logprob: -14.200953483581543
    8. '  ' → logprob: -15.950953483581543
    9. '.range' → logprob: -16.32595443725586
    10. 'b' → logprob: -16.32595443725586

Token 17: '(k' (ID: 12125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.027555538341403008
    2. '(a' → logprob: -3.652555465698242
    3. '(k' → logprob: -7.402555465698242
    4. '(i' → logprob: -8.027555465698242
    5. '(b' → logprob: -9.027555465698242
    6. ' (' → logprob: -9.152555465698242
    7. '(len' → logprob: -10.152555465698242
    8. '((' → logprob: -10.652555465698242
    9. '(n' → logprob: -11.277555465698242
    10. '(range' → logprob: -12.152555465698242

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019323242595419288
    2. '+' → logprob: -7.251932144165039
    3. ')' → logprob: -7.876932144165039
    4. ':' → logprob: -8.001932144165039
    5. ' ):' → logprob: -8.251932144165039
    6. ',' → logprob: -8.501932144165039
    7. '):
' → logprob: -10.626932144165039
    8. ' ' → logprob: -12.751932144165039
    9. '+:' → logprob: -12.876932144165039
    10. '**' → logprob: -12.876932144165039

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034976936876773834
    2. '    
' → logprob: -4.159976959228516
    3. '    ' → logprob: -5.409976959228516
    4. '<|end|>' → logprob: -5.534976959228516
    5. ':' → logprob: -6.034976959228516
    6. '```' → logprob: -6.409976959228516
    7. ' 
' → logprob: -6.534976959228516
    8. ' ' → logprob: -6.659976959228516
    9. 'a' → logprob: -7.409976959228516
    10. ',' → logprob: -7.534976959228516

Token 20: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8529055118560791
    2. ' a' → logprob: -1.852905511856079
    3. 'a' → logprob: -2.227905511856079
    4. ' if' → logprob: -2.727905511856079
    5. '    ' → logprob: -2.977905511856079
    6. ' ' → logprob: -3.852905511856079
    7. ' n' → logprob: -3.977905511856079
    8. 'print' → logprob: -3.977905511856079
    9. '```' → logprob: -4.1029052734375
    10. 'if' (adapté à ' if') → logprob: -4.1029052734375

Token 21: ' i' (ID: 575)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.06794540584087372
    2. 'a' → logprob: -3.0679454803466797
    3. ' ' → logprob: -4.19294548034668
    4. ' b' → logprob: -6.31794548034668
    5. ' i' → logprob: -6.69294548034668
    6. ' (' → logprob: -7.31794548034668
    7. '(a' → logprob: -9.06794548034668
    8. 'i' → logprob: -9.44294548034668
    9. 'b' → logprob: -10.06794548034668
    10. ' not' → logprob: -10.44294548034668

Token 22: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.7816131114959717
    2. ' ==' → logprob: -1.1566131114959717
    3. ' ' → logprob: -1.7816131114959717
    4. ' <' → logprob: -3.5316131114959717
    5. '%' → logprob: -4.156613349914551
    6. '==' → logprob: -4.656613349914551
    7. '  ' → logprob: -7.031613349914551
    8. '   ' → logprob: -7.281613349914551
    9. ' <=' → logprob: -7.531613349914551
    10. ' >' → logprob: -7.656613349914551

Token 23: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.051199380308389664
    2. ' ' → logprob: -3.676199436187744
    3. 'a' → logprob: -3.801199436187744
    4. ' a' → logprob: -6.926199436187744
    5. 'b' → logprob: -7.301199436187744
    6. '3' → logprob: -7.926199436187744
    7. ' b' → logprob: -9.051198959350586
    8. '4' → logprob: -9.926198959350586
    9. '```' → logprob: -11.301198959350586
    10. '(a' → logprob: -11.676198959350586

Token 24: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3265667259693146
    2. 'a' → logprob: -1.3265666961669922
    3. 'b' → logprob: -4.451566696166992
    4. '3' → logprob: -6.826566696166992
    5. ' ' → logprob: -8.326566696166992
    6. ' a' → logprob: -9.576566696166992
    7. '4' → logprob: -10.201566696166992
    8. '(a' → logprob: -10.451566696166992
    9. 'k' → logprob: -10.826566696166992
    10. '10' → logprob: -11.201566696166992

Token 25: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02500278688967228
    2. '==' → logprob: -3.7750027179718018
    3. ' ' → logprob: -6.400002956390381
    4. ' !=' → logprob: -10.150002479553223
    5. ' =' → logprob: -11.400002479553223
    6. '0' → logprob: -11.775002479553223
    7. ':' → logprob: -11.775002479553223
    8. '=' → logprob: -12.025002479553223
    9. '```' → logprob: -12.400002479553223
    10. ')' → logprob: -12.525002479553223

Token 26: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46601539850234985
    2. ' ' → logprob: -1.091015338897705
    3. '2' → logprob: -3.341015338897705
    4. '1' → logprob: -6.716015338897705
    5. '```' → logprob: -12.653515815734863
    6. '   ' → logprob: -12.716015815734863
    7. '  ' → logprob: -13.216015815734863
    8. '==' → logprob: -13.466015815734863
    9. '<|end|>' → logprob: -14.091015815734863
    10. ' ==' → logprob: -15.028515815734863

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6388252377510071
    2. '2' → logprob: -0.7638252377510071
    3. ' ' → logprob: -5.138825416564941
    4. '1' → logprob: -8.013825416564941
    5. '   ' → logprob: -12.638825416564941
    6. '```' → logprob: -12.763825416564941
    7. '  ' → logprob: -13.263825416564941
    8. '3' → logprob: -14.076325416564941
    9. 'a' → logprob: -14.326325416564941
    10. '==' → logprob: -15.638825416564941

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038956227945163846
    2. ' :' → logprob: -8.250389099121094
    3. ':
' → logprob: -9.250389099121094
    4. '   ' → logprob: -11.750389099121094
    5. '):' → logprob: -12.125389099121094
    6. ':**' → logprob: -12.125389099121094
    7. ',' → logprob: -12.500389099121094
    8. '       ' → logprob: -12.750389099121094
    9. ' and' → logprob: -13.250389099121094
    10. '>:' → logprob: -13.875389099121094

Token 29: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5147575736045837
    2. '       ' → logprob: -1.8897576332092285
    3. '    ' → logprob: -2.3897576332092285
    4. ' ' → logprob: -2.5147576332092285
    5. ' a' → logprob: -3.6397576332092285
    6. ':' → logprob: -3.6397576332092285
    7. ' print' → logprob: -4.7647576332092285
    8. ' :' → logprob: -5.3897576332092285
    9. '     ' → logprob: -5.7647576332092285
    10. ',' → logprob: -6.1397576332092285

Token 30: ' if' (ID: 538)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.8001828193664551
    2. ' a' → logprob: -1.050182819366455
    3. 'print' → logprob: -2.550182819366455
    4. ' ' → logprob: -3.425182819366455
    5. '   ' → logprob: -3.675182819366455
    6. '       ' → logprob: -3.800182819366455
    7. 'a' → logprob: -3.800182819366455
    8. '    ' → logprob: -4.175182819366455
    9. '        ' → logprob: -6.800182819366455
    10. ' b' → logprob: -6.800182819366455

Token 31: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5934507846832275
    2. 'a' → logprob: -0.8434507846832275
    3. ' (' → logprob: -4.843450546264648
    4. '(a' → logprob: -5.093450546264648
    5. ' b' → logprob: -6.343450546264648
    6. 'b' → logprob: -7.093450546264648
    7. ' i' → logprob: -7.968450546264648
    8. 'i' → logprob: -8.593450546264648
    9. ' ' → logprob: -9.093450546264648
    10. '(i' → logprob: -10.218450546264648

Token 32: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.43835246562957764
    2. '>' → logprob: -1.0633524656295776
    3. ' >=' → logprob: -5.563352584838867
    4. '%' → logprob: -6.438352584838867
    5. '>=' → logprob: -6.563352584838867
    6. ' <=' → logprob: -7.188352584838867
    7. ' ' → logprob: -7.563352584838867
    8. ' %' → logprob: -7.563352584838867
    9. ' <' → logprob: -7.938352584838867
    10. '<=' → logprob: -8.438352584838867

Token 33: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0036472335923463106
    2. ' ' → logprob: -5.878647327423096
    3. 'b' → logprob: -7.503647327423096
    4. '3' → logprob: -8.628646850585938
    5. '7' → logprob: -10.128646850585938
    6. '5' → logprob: -10.378646850585938
    7. '10' → logprob: -11.128646850585938
    8. '4' → logprob: -11.378646850585938
    9. '   ' → logprob: -12.503646850585938
    10. '  ' → logprob: -12.503646850585938

Token 34: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.619311974034645e-05
    2. ' ' → logprob: -11.625036239624023
    3. 'b' → logprob: -11.625036239624023
    4. '10' → logprob: -11.875036239624023
    5. '   ' → logprob: -12.250036239624023
    6. '3' → logprob: -12.750036239624023
    7. '  ' → logprob: -14.000036239624023
    8. '>' → logprob: -14.750036239624023
    9. '

' → logprob: -14.750036239624023
    10. '5' → logprob: -15.250036239624023

Token 35: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5803013443946838
    2. '==' → logprob: -0.8303013443946838
    3. ' !=' → logprob: -6.080301284790039
    4. '0' → logprob: -6.955301284790039
    5. '!=' → logprob: -7.330301284790039
    6. ' ' → logprob: -7.955301284790039
    7. '=' → logprob: -10.205301284790039
    8. ')' → logprob: -11.080301284790039
    9. ':' → logprob: -11.580301284790039
    10. ')==' → logprob: -11.580301284790039

Token 36: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03206834942102432
    2. '1' → logprob: -4.032068252563477
    3. ' ' → logprob: -4.282068252563477
    4. '2' → logprob: -13.407068252563477
    5. 'b' → logprob: -13.407068252563477
    6. '```' → logprob: -13.969568252563477
    7. '   ' → logprob: -14.719568252563477
    8. '==' → logprob: -14.782068252563477
    9. 'a' → logprob: -15.157068252563477
    10. '<|end|>' → logprob: -15.344568252563477

Token 37: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012891478836536407
    2. '1' → logprob: -4.3878912925720215
    3. ' ' → logprob: -7.8878912925720215
    4. '2' → logprob: -13.51289176940918
    5. '```' → logprob: -14.32539176940918
    6. '<|end|>' → logprob: -14.38789176940918
    7. 'b' → logprob: -14.88789176940918
    8. '۰' → logprob: -14.95039176940918
    9. '!' → logprob: -15.26289176940918
    10. 'a' → logprob: -15.63789176940918

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010981322266161442
    2. ' and' → logprob: -4.635981559753418
    3. ' :' → logprob: -7.760981559753418
    4. ':
' → logprob: -8.260981559753418
    5. '):' → logprob: -8.635981559753418
    6. 'and' → logprob: -8.760981559753418
    7. ' or' → logprob: -9.510981559753418
    8. '<|end|>' → logprob: -10.010981559753418
    9. '           ' → logprob: -10.635981559753418
    10. '       ' → logprob: -10.885981559753418

Token 39: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09012806415557861
    2. ':' → logprob: -2.590127944946289
    3. ' :' → logprob: -5.590127944946289
    4. '       ' → logprob: -6.465127944946289
    5. ' a' → logprob: -6.590127944946289
    6. 'a' → logprob: -6.715127944946289
    7. '               ' → logprob: -6.965127944946289
    8. ' and' → logprob: -7.965127944946289
    9. ',' → logprob: -8.215127944946289
    10. '```' → logprob: -8.215127944946289

Token 40: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.38847804069519043
    2. 'a' (adapté à ' a') → logprob: -1.1384780406951904
    3. '           ' → logprob: -8.01347827911377
    4. '   ' → logprob: -8.13847827911377
    5. ' print' → logprob: -8.13847827911377
    6. '               ' → logprob: -8.51347827911377
    7. 'print' → logprob: -8.76347827911377
    8. 'b' → logprob: -8.88847827911377
    9. ' b' → logprob: -9.38847827911377
    10. '    ' → logprob: -10.51347827911377

Token 41: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.6057482361793518
    2. ' -=' → logprob: -0.8557482361793518
    3. '+=' → logprob: -3.980748176574707
    4. '=' → logprob: -5.230748176574707
    5. ' +=' → logprob: -5.980748176574707
    6. '-' → logprob: -5.980748176574707
    7. ' =' → logprob: -9.105748176574707
    8. '*=' → logprob: -9.730748176574707
    9. ' ' → logprob: -10.355748176574707
    10. ' *=' → logprob: -10.730748176574707

Token 42: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00194279954303056
    2. ' ' → logprob: -6.2519426345825195
    3. '2' → logprob: -11.37694263458252
    4. 'b' → logprob: -13.37694263458252
    5. '   ' → logprob: -14.62694263458252
    6. 'a' → logprob: -15.50194263458252
    7. '  ' → logprob: -15.62694263458252
    8. '0' → logprob: -16.501943588256836
    9. '3' → logprob: -16.876943588256836
    10. '11' → logprob: -17.189443588256836

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.315936429426074e-05
    2. ' ' → logprob: -9.500082969665527
    3. '2' → logprob: -11.875082969665527
    4. 'b' → logprob: -14.375082969665527
    5. '   ' → logprob: -15.250082969665527
    6. 'a' → logprob: -15.500082969665527
    7. '  ' → logprob: -16.250083923339844
    8. '11' → logprob: -16.312583923339844
    9. '10' → logprob: -16.750083923339844
    10. '3' → logprob: -17.625083923339844

Token 44: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.24145029485225677
    2. '       ' → logprob: -1.866450309753418
    3. '   ' → logprob: -3.616450309753418
    4. ' else' → logprob: -3.741450309753418
    5. '           ' → logprob: -5.741450309753418
    6. '    ' → logprob: -6.366450309753418
    7. 'elif' → logprob: -6.866450309753418
    8. 'b' → logprob: -7.241450309753418
    9. 'a' → logprob: -7.616450309753418
    10. '1' → logprob: -7.866450309753418

Token 45: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5663368701934814
    2. ' else' → logprob: -1.5663368701934814
    3. '       ' → logprob: -2.3163368701934814
    4. 'else' → logprob: -2.5663368701934814
    5. 'a' → logprob: -3.6913368701934814
    6. ' a' → logprob: -4.941336631774902
    7. 'b' → logprob: -5.191336631774902
    8. ' ' → logprob: -5.566336631774902
    9. '           ' → logprob: -6.066336631774902
    10. ' b' → logprob: -6.691336631774902

Token 46: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2712603211402893
    2. 'b' (adapté à ' b') → logprob: -1.6462602615356445
    3. ' a' → logprob: -4.2712602615356445
    4. '       ' → logprob: -4.5212602615356445
    5. '   ' → logprob: -4.5212602615356445
    6. ' b' → logprob: -5.1462602615356445
    7. '           ' → logprob: -6.7712602615356445
    8. 'else' → logprob: -7.5212602615356445
    9. '0' → logprob: -8.396260261535645
    10. '```' → logprob: -8.521260261535645

Token 47: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06658240407705307
    2. '+=' → logprob: -2.816582441329956
    3. ' -=' → logprob: -5.566582202911377
    4. '+' → logprob: -9.066582679748535
    5. ' ' → logprob: -9.316582679748535
    6. '=' → logprob: -9.316582679748535
    7. ' =' → logprob: -9.566582679748535
    8. ' //' → logprob: -9.566582679748535
    9. '-=' → logprob: -9.566582679748535
    10. ',' → logprob: -9.691582679748535

Token 48: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004299322608858347
    2. '1' → logprob: -5.879299163818359
    3. ' a' → logprob: -6.629299163818359
    4. '(a' → logprob: -9.00429916381836
    5. '(' → logprob: -11.50429916381836
    6. '   ' → logprob: -11.50429916381836
    7. ' (' → logprob: -11.62929916381836
    8. ' ' → logprob: -11.75429916381836
    9. '2' → logprob: -12.25429916381836
    10. 'b' → logprob: -12.75429916381836

Token 49: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.4743584990501404
    2. 'else' → logprob: -1.5993585586547852
    3. ' else' → logprob: -2.724358558654785
    4. ' //' → logprob: -3.224358558654785
    5. '<|end|>' → logprob: -3.599358558654785
    6. '   ' → logprob: -4.224358558654785
    7. '```' → logprob: -4.724358558654785
    8. ' ' → logprob: -5.224358558654785
    9. '1' → logprob: -6.349358558654785
    10. '2' → logprob: -6.474358558654785

Token 50: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -16.000017166137695
    4. '10' → logprob: -17.000017166137695
    5. '20' → logprob: -17.125017166137695
    6. '  ' → logprob: -18.250017166137695
    7. '```' → logprob: -18.500017166137695
    8. '200' → logprob: -19.500017166137695
    9. '1' → logprob: -19.750017166137695
    10. '₂' → logprob: -19.875017166137695

Token 51: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1637164789135568e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -17.000011444091797
    4. '20' → logprob: -17.500011444091797
    5. '10' → logprob: -17.750011444091797
    6. '```' → logprob: -18.125011444091797
    7. '  ' → logprob: -18.875011444091797
    8. '２' → logprob: -19.000011444091797
    9. '200' → logprob: -19.625011444091797
    10. '₂' → logprob: -19.750011444091797

Token 52: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.971796452999115
    2. '<|end|>' → logprob: -1.2217965126037598
    3. '       ' → logprob: -1.8467965126037598
    4. ' else' → logprob: -2.7217965126037598
    5. ' ' → logprob: -3.3467965126037598
    6. 'else' → logprob: -3.4717965126037598
    7. 'a' → logprob: -4.34679651260376
    8. ' 
' → logprob: -5.72179651260376
    9. '```' → logprob: -5.72179651260376
    10. '    
' → logprob: -5.84679651260376

Token 53: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.747122585773468
    2. '   ' → logprob: -1.2471225261688232
    3. '       ' → logprob: -1.4971225261688232
    4. '<|end|>' → logprob: -5.372122764587402
    5. '```' → logprob: -5.622122764587402
    6. 'else' → logprob: -5.997122764587402
    7. ' a' → logprob: -6.122122764587402
    8. ' else' → logprob: -6.747122764587402
    9. ' ' → logprob: -7.247122764587402
    10. '  ' → logprob: -9.622122764587402

Token 54: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.0015972222900018096
    2. ' a' → logprob: -7.2515974044799805
    3. '   ' → logprob: -7.2515974044799805
    4. '       ' → logprob: -8.75159740447998
    5. 'else' → logprob: -11.37659740447998
    6. '```' → logprob: -12.25159740447998
    7. ' else' → logprob: -13.62659740447998
    8. ' ' → logprob: -14.25159740447998
    9. '	a' → logprob: -14.50159740447998
    10. '  ' → logprob: -15.25159740447998

Token 55: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.07928510755300522
    2. '=' → logprob: -2.579285144805908
    3. '//' → logprob: -8.20428466796875
    4. ' //' → logprob: -9.20428466796875
    5. ' =' → logprob: -11.07928466796875
    6. '-=' → logprob: -12.95428466796875
    7. '/=' → logprob: -12.95428466796875
    8. ' ' → logprob: -14.70428466796875
    9. '+=' → logprob: -15.45428466796875
    10. '```' → logprob: -16.20428466796875

Token 56: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2352385965641588e-05
    2. '2' → logprob: -11.375012397766113
    3. '/=' → logprob: -14.500012397766113
    4. '=}' → logprob: -15.750012397766113
    5. '=.' → logprob: -16.875011444091797
    6. '=/' → logprob: -17.750011444091797
    7. '=*/' → logprob: -18.125011444091797
    8. ' ' → logprob: -18.250011444091797
    9. ' =' → logprob: -18.500011444091797
    10. '=?' → logprob: -18.625011444091797

Token 57: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.000051498413086
    4. '  ' → logprob: -17.875051498413086
    5. '```' → logprob: -18.500051498413086
    6. '２' → logprob: -19.000051498413086
    7. '۲' → logprob: -19.000051498413086
    8. '=' → logprob: -19.625051498413086
    9. '२' → logprob: -19.687551498413086
    10. '    ' → logprob: -19.812551498413086

Token 58: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '２' → logprob: -18.125019073486328
    4. '```' → logprob: -18.125019073486328
    5. '   ' → logprob: -18.250019073486328
    6. '۲' → logprob: -18.375019073486328
    7. '  ' → logprob: -18.750019073486328
    8. '२' → logprob: -19.125019073486328
    9. '٢' → logprob: -19.750019073486328
    10. '=' → logprob: -19.812519073486328

Token 59: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05876317620277405
    2. '<|end|>' → logprob: -3.058763265609741
    3. 'else' → logprob: -4.808763027191162
    4. ' else' → logprob: -7.308763027191162
    5. '```' → logprob: -7.558763027191162
    6. '	else' → logprob: -8.30876350402832
    7. '    
' → logprob: -8.68376350402832
    8. '<|end|>' → logprob: -8.68376350402832
    9. 'a' → logprob: -9.80876350402832
    10. 'elif' → logprob: -10.18376350402832

Token 60: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.09168656170368195
    2. ' else' → logprob: -2.716686487197876
    3. '   ' → logprob: -3.841686487197876
    4. '	else' → logprob: -10.341686248779297
    5. 'elif' → logprob: -11.341686248779297
    6. '```' → logprob: -12.591686248779297
    7. ' ' → logprob: -12.716686248779297
    8. 'e' → logprob: -13.591686248779297
    9. ' elif' → logprob: -13.841686248779297
    10. '    
' → logprob: -13.841686248779297

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2901422679424286
    2. ':
' → logprob: -1.665142297744751
    3. '       ' → logprob: -2.915142297744751
    4. '   ' → logprob: -4.915142059326172
    5. '```' → logprob: -7.665142059326172
    6. ' :' → logprob: -8.290142059326172
    7. ' :
' → logprob: -9.290142059326172
    8. '        
' → logprob: -9.790142059326172
    9. '<|end|>' → logprob: -10.165142059326172
    10. '    ' → logprob: -10.165142059326172

Token 63: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2935275435447693
    2. '       ' → logprob: -1.418527603149414
    3. 'if' → logprob: -4.668527603149414
    4. ' if' → logprob: -6.043527603149414
    5. '```' → logprob: -7.668527603149414
    6. 'a' → logprob: -10.543527603149414
    7. 'b' → logprob: -10.668527603149414
    8. '	if' → logprob: -11.918527603149414
    9. '    ' → logprob: -12.418527603149414
    10. '           ' → logprob: -13.168527603149414

Token 64: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20817416906356812
    2. ' if' → logprob: -1.833174228668213
    3. '       ' → logprob: -3.708174228668213
    4. '   ' → logprob: -5.958174228668213
    5. 'b' → logprob: -7.583174228668213
    6. '```' → logprob: -7.958174228668213
    7. 'a' → logprob: -10.583173751831055
    8. ' ' → logprob: -11.458173751831055
    9. ' b' → logprob: -11.708173751831055
    10. 'c' → logprob: -12.083173751831055

Token 65: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.38691890239715576
    2. 'b' → logprob: -1.1369189023971558
    3. '   ' → logprob: -10.261919021606445
    4. 'a' → logprob: -12.136919021606445
    5. ' ' → logprob: -12.386919021606445
    6. ' a' → logprob: -13.761919021606445
    7. '  ' → logprob: -14.886919021606445
    8. '	b' → logprob: -15.136919021606445
    9. '>b' → logprob: -15.261919021606445
    10. ' c' → logprob: -15.511919021606445

Token 66: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.34845250844955444
    2. '%' → logprob: -1.2234525680541992
    3. ' ' → logprob: -11.9734525680542
    4. '   ' → logprob: -14.9734525680542
    5. '>' → logprob: -15.3484525680542
    6. ' ' → logprob: -15.5984525680542
    7. '<|end|>' → logprob: -16.098451614379883
    8. '1' → logprob: -16.473451614379883
    9. '```' → logprob: -16.473451614379883
    10. '#' → logprob: -16.473451614379883

Token 67: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.026310397312045097
    2. ' ' → logprob: -3.651310443878174
    3. '   ' → logprob: -12.401309967041016
    4. '```' → logprob: -12.776309967041016
    5. '1' → logprob: -13.651309967041016
    6. '<|end|>' → logprob: -14.276309967041016
    7. '  ' → logprob: -14.776309967041016
    8. '۲' → logprob: -16.088809967041016
    9. '`' → logprob: -16.276309967041016
    10. '<|end|>' → logprob: -16.401309967041016

Token 68: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004427051462698728
    2. ' ' → logprob: -7.7504425048828125
    3. '   ' → logprob: -12.750442504882812
    4. '1' → logprob: -13.187942504882812
    5. '```' → logprob: -13.250442504882812
    6. '<|end|>' → logprob: -13.687942504882812
    7. '`' → logprob: -14.875442504882812
    8. '{' → logprob: -15.125442504882812
    9. '  ' → logprob: -15.187942504882812
    10. '-' → logprob: -15.437942504882812

Token 69: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5231671333312988
    2. ' ==' → logprob: -0.8981671333312988
    3. ' ' → logprob: -10.64816665649414
    4. '=' → logprob: -12.27316665649414
    5. '1' → logprob: -12.64816665649414
    6. ')==' → logprob: -12.64816665649414
    7. ':' → logprob: -13.14816665649414
    8. '   ' → logprob: -13.27316665649414
    9. ')' → logprob: -13.64816665649414
    10. '==
' → logprob: -14.02316665649414

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16024088859558105
    2. ' ' → logprob: -1.910240888595581
    3. '0' → logprob: -11.16024112701416
    4. '   ' → logprob: -14.09774112701416
    5. '>' → logprob: -14.91024112701416
    6. '  ' → logprob: -15.84774112701416
    7. '==' → logprob: -16.097740173339844
    8. '<|end|>' → logprob: -16.160240173339844
    9. '```' → logprob: -16.160240173339844
    10. '2' → logprob: -16.410240173339844

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035536551149562
    2. ' ' → logprob: -8.00035572052002
    3. '0' → logprob: -11.62535572052002
    4. 'b' → logprob: -12.43785572052002
    5. '   ' → logprob: -13.75035572052002
    6. '-' → logprob: -14.12535572052002
    7. '<|end|>' → logprob: -14.12535572052002
    8. '```' → logprob: -14.62535572052002
    9. 's' → logprob: -15.06285572052002
    10. 'a' → logprob: -15.25035572052002

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029295286163687706
    2. ':
' → logprob: -4.029295444488525
    3. '           ' → logprob: -5.029295444488525
    4. '       ' → logprob: -5.654295444488525
    5. ',' → logprob: -8.154294967651367
    6. '<|end|>' → logprob: -8.154294967651367
    7. 'b' → logprob: -8.654294967651367
    8. '   ' → logprob: -9.904294967651367
    9. ':

' → logprob: -10.279294967651367
    10. '):
' → logprob: -10.654294967651367

Token 73: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000486680306494236
    2. '```' → logprob: -8.625486373901367
    3. 'b' → logprob: -9.125486373901367
    4. '   ' → logprob: -9.250486373901367
    5. '       ' → logprob: -9.750486373901367
    6. '<|end|>' → logprob: -11.750486373901367
    7. ' ' → logprob: -11.875486373901367
    8. '	       ' → logprob: -12.250486373901367
    9. '          ' → logprob: -12.500486373901367
    10. '>' → logprob: -12.875486373901367

Token 74: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.10918068140745163
    2. ' b' → logprob: -2.9841806888580322
    3. '       ' → logprob: -3.4841806888580322
    4. '           ' → logprob: -3.8591806888580322
    5. '```' → logprob: -7.609180450439453
    6. '   ' → logprob: -7.984180450439453
    7. 'a' → logprob: -9.859180450439453
    8. ' ' → logprob: -9.984180450439453
    9. '               ' → logprob: -10.109180450439453
    10. '	b' → logprob: -10.984180450439453

Token 75: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.38753166794776917
    2. '-=' → logprob: -1.1375316381454468
    3. '-' → logprob: -7.387531757354736
    4. '=' → logprob: -10.887531280517578
    5. '   ' → logprob: -11.762531280517578
    6. '+=' → logprob: -12.137531280517578
    7. '<|end|>' → logprob: -13.137531280517578
    8. '           ' → logprob: -13.887531280517578
    9. ' +=' → logprob: -13.887531280517578
    10. ' -' → logprob: -13.887531280517578

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003362966235727072
    2. ' ' → logprob: -8.000336647033691
    3. '   ' → logprob: -14.250336647033691
    4. '<|end|>' → logprob: -16.625335693359375
    5. '```' → logprob: -16.750335693359375
    6. '       ' → logprob: -17.375335693359375
    7. '           ' → logprob: -17.875335693359375
    8. '  ' → logprob: -18.125335693359375
    9. ')' → logprob: -18.625335693359375
    10. '2' → logprob: -18.875335693359375

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.875001907348633
    4. '2' → logprob: -18.125001907348633
    5. '```' → logprob: -18.250001907348633
    6. '<|end|>' → logprob: -19.562501907348633
    7. '１' → logprob: -20.000001907348633
    8. '۱' → logprob: -20.125001907348633
    9. '  ' → logprob: -20.187501907348633
    10. '-' → logprob: -20.312501907348633

Token 78: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004880300257354975
    2. '```' → logprob: -5.754880428314209
    3. '   ' → logprob: -6.754880428314209
    4. 'a' → logprob: -7.879880428314209
    5. 'b' → logprob: -9.37987995147705
    6. '``' → logprob: -9.87987995147705
    7. '     ' → logprob: -12.37987995147705
    8. '<|end|>' → logprob: -12.50487995147705
    9. '      ' → logprob: -12.75487995147705
    10. ' a' → logprob: -12.87987995147705

Token 79: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7142853140830994
    2. '       ' → logprob: -0.7142853140830994
    3. '   ' → logprob: -3.964285373687744
    4. '```' → logprob: -6.589285373687744
    5. ' a' → logprob: -7.714285373687744
    6. '``' → logprob: -9.964284896850586
    7. '	a' → logprob: -11.339284896850586
    8. '<|end|>' → logprob: -11.339284896850586
    9. '     ' → logprob: -11.714284896850586
    10. 'b' → logprob: -11.964284896850586

Token 80: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -2.3438327843905427e-05
    2. ' a' → logprob: -11.00002384185791
    3. '   ' → logprob: -12.00002384185791
    4. '```' → logprob: -14.87502384185791
    5. '       ' → logprob: -15.75002384185791
    6. '	a' → logprob: -17.750022888183594
    7. '>a' → logprob: -18.000022888183594
    8. '``' → logprob: -19.375022888183594
    9. ',a' → logprob: -19.625022888183594
    10. '_a' → logprob: -19.625022888183594

Token 81: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.18326206505298615
    2. '+=' → logprob: -1.8082621097564697
    3. '+' → logprob: -5.808261871337891
    4. ' +' → logprob: -7.683261871337891
    5. ']+=' → logprob: -11.05826187133789
    6. '=' → logprob: -11.43326187133789
    7. '<|end|>' → logprob: -12.05826187133789
    8. '+='' → logprob: -12.43326187133789
    9. ' ' → logprob: -13.05826187133789
    10. '+=(' → logprob: -13.05826187133789

Token 82: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5759395360946655
    2. 'b' → logprob: -0.8259395360946655
    3. ' ' → logprob: -15.825939178466797
    4. '<|end|>' → logprob: -17.325939178466797
    5. '(b' → logprob: -18.075939178466797
    6. ' (' → logprob: -18.200939178466797
    7. '   ' → logprob: -18.450939178466797
    8. '```' → logprob: -18.825939178466797
    9. 'a' → logprob: -18.950939178466797
    10. ' б' → logprob: -19.325939178466797

Token 83: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.28135058283805847
    2. ' //' → logprob: -1.4063506126403809
    3. '```' → logprob: -8.781350135803223
    4. ' ' → logprob: -11.156350135803223
    5. '2' → logprob: -11.406350135803223
    6. '`' → logprob: -11.656350135803223
    7. '1' → logprob: -12.656350135803223
    8. ' ' → logprob: -13.156350135803223
    9. '   ' → logprob: -13.406350135803223
    10. '//=' → logprob: -13.656350135803223

Token 84: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '   ' → logprob: -16.875009536743164
    4. '۲' → logprob: -18.625009536743164
    5. '  ' → logprob: -19.125009536743164
    6. '２' → logprob: -19.750009536743164
    7. '२' → logprob: -20.000009536743164
    8. '```' → logprob: -20.125009536743164
    9. '২' → logprob: -20.937509536743164
    10. '<|end|>' → logprob: -21.125009536743164

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '   ' → logprob: -18.125001907348633
    4. '۲' → logprob: -19.500001907348633
    5. '２' → logprob: -20.000001907348633
    6. '  ' → logprob: -20.125001907348633
    7. '२' → logprob: -20.437501907348633
    8. '```' → logprob: -20.687501907348633
    9. '1' → logprob: -21.000001907348633
    10. '২' → logprob: -21.062501907348633

Token 86: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4825279712677002
    2. 'b' → logprob: -1.3575279712677002
    3. ' b' → logprob: -2.1075279712677
    4. '2' → logprob: -6.357527732849121
    5. '```' → logprob: -6.607527732849121
    6. '   ' → logprob: -7.857527732849121
    7. ' ' → logprob: -8.607527732849121
    8. '1' → logprob: -8.857527732849121
    9. ' ' → logprob: -9.607527732849121
    10. '`' → logprob: -10.732527732849121

Token 87: '       ' (ID: 309)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1315782070159912
    2. '       ' → logprob: -2.381578207015991
    3. ' b' → logprob: -3.506578207015991
    4. '```' → logprob: -7.38157844543457
    5. '   ' → logprob: -8.38157844543457
    6. ' ' → logprob: -11.13157844543457
    7. '	b' → logprob: -12.25657844543457
    8. '  ' → logprob: -12.50657844543457
    9. '      ' → logprob: -12.88157844543457
    10. '     ' → logprob: -13.50657844543457

Token 88: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.0002529952325858176
    2. ' b' → logprob: -8.375252723693848
    3. '```' → logprob: -11.375252723693848
    4. '2' → logprob: -12.250252723693848
    5. '1' → logprob: -12.625252723693848
    6. '   ' → logprob: -13.000252723693848
    7. ' ' → logprob: -15.000252723693848
    8. '4' → logprob: -16.250253677368164
    9. '0' → logprob: -17.250253677368164
    10. '       ' → logprob: -17.375253677368164

Token 89: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.05065728351473808
    2. '//' → logprob: -3.050657272338867
    3. ' //' → logprob: -6.300657272338867
    4. '=' → logprob: -8.425657272338867
    5. '/=' → logprob: -11.300657272338867
    6. ' ' → logprob: -15.050657272338867
    7. '```' → logprob: -15.675657272338867
    8. '+=' → logprob: -16.175657272338867
    9. ' =' → logprob: -16.550657272338867
    10. '-=' → logprob: -16.675657272338867

Token 90: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015030752401798964
    2. '2' → logprob: -6.501502990722656
    3. ' ' → logprob: -14.501502990722656
    4. '/=' → logprob: -16.376502990722656
    5. '=
' → logprob: -17.376502990722656
    6. '256' → logprob: -18.126502990722656
    7. '=/' → logprob: -18.376502990722656
    8. ' =' → logprob: -18.501502990722656
    9. '+=' → logprob: -19.001502990722656
    10. '=

' → logprob: -19.126502990722656

Token 91: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.47495681833243e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -14.875024795532227
    4. '```' → logprob: -18.125024795532227
    5. '  ' → logprob: -18.375024795532227
    6. '۲' → logprob: -18.500024795532227
    7. '２' → logprob: -18.750024795532227
    8. '       ' → logprob: -19.375024795532227
    9. '1' → logprob: -20.000024795532227
    10. '<|end|>' → logprob: -20.000024795532227

Token 92: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.625001907348633
    4. '۲' → logprob: -18.375001907348633
    5. '```' → logprob: -18.750001907348633
    6. '２' → logprob: -18.875001907348633
    7. '  ' → logprob: -20.125001907348633
    8. '२' → logprob: -20.687501907348633
    9. '٢' → logprob: -20.750001907348633
    10. '<|end|>' → logprob: -20.812501907348633

Token 93: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.280175097752362e-05
    2. '```' → logprob: -9.875082969665527
    3. '
' → logprob: -10.500082969665527
    4. ' print' → logprob: -13.250082969665527
    5. '``' → logprob: -14.000082969665527
    6. '`
' → logprob: -15.250082969665527
    7. '`' → logprob: -15.625082969665527
    8. '  
' → logprob: -16.00008201599121
    9. '    
' → logprob: -16.00008201599121
    10. 'a' → logprob: -16.12508201599121

Token 94: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.078839502763003e-05
    2. '```' → logprob: -9.750090599060059
    3. ' print' → logprob: -10.875090599060059
    4. 'a' → logprob: -11.750090599060059
    5. '``' → logprob: -13.125090599060059
    6. '
' → logprob: -13.125090599060059
    7. ')
' → logprob: -14.625090599060059
    8. '`
' → logprob: -15.500090599060059
    9. '\' → logprob: -15.625090599060059
    10. '(print' → logprob: -15.625090599060059

Token 95: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.006064836401492357
    2. '(' → logprob: -5.1310648918151855
    3. '(b' → logprob: -9.631064414978027
    4. '((' → logprob: -10.256064414978027
    5. 'a' → logprob: -11.256064414978027
    6. '('' → logprob: -12.256064414978027
    7. '()' → logprob: -12.381064414978027
    8. '(max' → logprob: -12.506064414978027
    9. '(min' → logprob: -12.756064414978027
    10. '(sum' → logprob: -13.006064414978027

Token 96: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2631050646305084
    2. ',' → logprob: -1.513105034828186
    3. ',b' → logprob: -4.5131049156188965
    4. '+b' → logprob: -9.638105392456055
    5. '+' → logprob: -10.138105392456055
    6. ')b' → logprob: -11.263105392456055
    7. ',)' → logprob: -11.638105392456055
    8. ' +' → logprob: -11.888105392456055
    9. ' )' → logprob: -12.513105392456055
    10. ' ,' → logprob: -12.513105392456055

Token 97: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.5491004129871726e-05
    2. ' b' → logprob: -10.000045776367188
    3. ' ' → logprob: -21.750045776367188
    4. '    ' → logprob: -21.875045776367188
    5. '   ' → logprob: -22.125045776367188
    6. '	b' → logprob: -22.125045776367188
    7. ')b' → logprob: -22.375045776367188
    8. '(b' → logprob: -23.375045776367188
    9. '  ' → logprob: -23.750045776367188
    10. ')' → logprob: -23.875045776367188

Token 98: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')`' → logprob: -16.25
    3. '))' → logprob: -17.75
    4. ' )' → logprob: -19.0
    5. ')#' → logprob: -19.0
    6. ')
' → logprob: -19.375
    7. '),' → logprob: -19.625
    8. ')**' → logprob: -19.625
    9. '#' → logprob: -19.625
    10. '')' → logprob: -20.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 96
Tokens correctement prédits (1ère position, stricte): 33
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 85
Précision stricte (1ère position): 34.38%
Précision adaptée (1ère position): 40.62%
Précision (top 10): 88.54%
================================================================================
