================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:59:03
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import deque

def solve():
    """
    Reads a tree structure from stdin, assigns values (colors) to each node in a greedy manner,
    and outputs the sum of all assigned colors except for the largest one, as well as the colors
    assigned to each node.
    
    The input must be formatted as:
    - An integer N (number of nodes)
    - N-1 lines with pairs of integers (edges of the tree, 1-based indices)
    - A line with N space-separated integers (the available colors/values)
    
    Prints:
    - The sum of assigned colors except the largest one
    - The list of colors assigned to each node, in order
    """

    # Local function 'input' reads a line from stdin (faster input in contests)
    input = sys.stdin.readline

    # Read number of nodes in the tree
    N = int(input())

    # Initialize adjacency list for all nodes (0-based indexing)
    Edge = [[] for _ in range(N)]

    # Read tree edges, build adjacency list (convert to 0-based indexing)
    for _ in range(N - 1):
        a, b = map(int, input().split())
        Edge[a - 1].append(b - 1)
        Edge[b - 1].append(a - 1)

    # Read colors/values, convert to list of integers and sort descendingly (largest first)
    C = [int(c) for c in input().split()]
    C.sort(reverse=True)

    # Initialize a list to store the assigned color for each node (None means not assigned yet)
    Color = [None] * N

    # Assign the largest color to node 0 (usually the root in such problems)
    Color[0] = C[0]

    # Prepare a queue for BFS traversal; store tuples of (current node, parent node)
    q = deque()
    for e in Edge[0]:
        q.append((e, 0))

    # Initialize the answer to 0 (will sum the assigned colors except the largest one)
    ans = 0

    # Assign the next largest colors one by one to the rest of the nodes using BFS order
    for i in range(1, N):
        # Get the next node to process and its parent
        nowN, preN = q.popleft()
        # Add this color to the answer (since the largest, C[0], is not included in ans)
        ans += C[i]
        # Assign the color to the node
        Color[nowN] = C[i]
        # Add unvisited neighbors to the BFS queue (avoid going back to parent)
        for e in Edge[nowN]:
            if e != preN:
                q.append((e, nowN))

    # Output the result: the sum and the assigned color list
    print(ans)
    print(" ".join(map(str, Color)))

    return 0

if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6975938677787781
    2. '\n' → logprob: -0.8225938677787781
    3. '<|end|>' → logprob: -3.572593927383423
    4. '\' → logprob: -4.322593688964844
    5. 'newline' → logprob: -5.072593688964844
    6. 'import' → logprob: -5.322593688964844
    7. '<|end|>' → logprob: -5.947593688964844
    8. '```' → logprob: -6.572593688964844
    9. '' → logprob: -6.697593688964844
    10. '
' → logprob: -6.947593688964844

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.007319451309740543
    2. 'os' → logprob: -6.257319450378418
    3. ' math' → logprob: -6.257319450378418
    4. ' collections' → logprob: -6.882319450378418
    5. ' ' → logprob: -7.132319450378418
    6. ' typing' → logprob: -7.882319450378418
    7. ' pathlib' → logprob: -8.007319450378418
    8. ' datetime' → logprob: -9.132319450378418
    9. 'collections' → logprob: -9.382319450378418
    10. ' Py' → logprob: -9.382319450378418

Token 5: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7340998649597168
    2. ' import' → logprob: -0.7340998649597168
    3. '.' → logprob: -3.234099864959717
    4. ' ' → logprob: -8.859100341796875
    5. '.import' → logprob: -8.984100341796875
    6. '```' → logprob: -9.109100341796875
    7. '_' → logprob: -9.234100341796875
    8. '<|end|>' → logprob: -9.234100341796875
    9. '	import' → logprob: -10.109100341796875
    10. '_import' → logprob: -10.109100341796875

Token 6: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.2618234157562256
    2. ' deque' → logprob: -1.7618234157562256
    3. ' abc' → logprob: -3.0118234157562256
    4. 'deque' → logprob: -4.886823654174805
    5. 'abc' → logprob: -7.136823654174805
    6. ' named' → logprob: -7.761823654174805
    7. ' Counter' → logprob: -7.886823654174805
    8. ' import' → logprob: -9.261823654174805
    9. 'default' → logprob: -10.511823654174805
    10. ' ' → logprob: -10.511823654174805

Token 7: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.9239856600761414
    2. '\n' → logprob: -1.0489857196807861
    3. '
' → logprob: -1.9239857196807861
    4. 'import' → logprob: -3.173985719680786
    5. '```' → logprob: -3.423985719680786
    6. '\' → logprob: -3.798985719680786
    7. '<|end|>' → logprob: -5.923985481262207
    8. 'newline' → logprob: -6.173985481262207
    9. '' → logprob: -6.923985481262207
    10. '<|end|>' → logprob: -7.048985481262207

Token 8: 'def' (ID: 1314)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.5188905000686646
    2. 'd' → logprob: -1.6438905000686646
    3. '```' → logprob: -1.8938905000686646
    4. 'def' → logprob: -2.268890380859375
    5. '`' → logprob: -2.393890380859375
    6. 'import' → logprob: -2.893890380859375
    7. '\n' → logprob: -3.018890380859375
    8. '.' → logprob: -4.018890380859375
    9. 'a' → logprob: -4.393890380859375
    10. 'b' → logprob: -4.393890380859375

Token 9: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001463692169636488
    2. ' bfs' → logprob: -6.876463890075684
    3. ' process' → logprob: -9.251463890075684
    4. ' space' → logprob: -9.876463890075684
    5. ' dfs' → logprob: -10.126463890075684
    6. ' main' → logprob: -10.376463890075684
    7. ' ```' → logprob: -10.376463890075684
    8. ' ' → logprob: -11.001463890075684
    9. ' )' → logprob: -11.126463890075684
    10. ' BFS' → logprob: -11.501463890075684

Token 10: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010926724411547184
    2. '_' → logprob: -5.385926723480225
    3. '():' → logprob: -5.885926723480225
    4. '```' → logprob: -6.760926723480225
    5. ':' → logprob: -7.010926723480225
    6. ' (' → logprob: -7.635926723480225
    7. '(:' → logprob: -8.635927200317383
    8. '(
' → logprob: -9.760927200317383
    9. '("("' → logprob: -9.760927200317383
    10. '):' → logprob: -10.010927200317383

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2636127471923828
    2. '    
' → logprob: -2.388612747192383
    3. '    ' → logprob: -3.138612747192383
    4. '```' → logprob: -3.513612747192383
    5. '\' → logprob: -4.013612747192383
    6. '\n' → logprob: -4.263612747192383
    7. ' 
' → logprob: -4.638612747192383
    8. '<|end|>' → logprob: -4.763612747192383
    9. '
' → logprob: -5.138612747192383
    10. '     
' → logprob: -5.888612747192383

Token 12: ' """
' (ID: 7037)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1439352184534073
    2. ' queue' → logprob: -3.018935203552246
    3. 'n' → logprob: -3.643935203552246
    4. '   ' → logprob: -3.768935203552246
    5. ' input' → logprob: -4.018935203552246
    6. ' q' → logprob: -5.268935203552246
    7. ' import' → logprob: -5.893935203552246
    8. 'input' → logprob: -6.393935203552246
    9. 'queue' → logprob: -6.893935203552246
    10. '    ' → logprob: -7.018935203552246

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12521736323833466
    2. 'The' → logprob: -3.5002174377441406
    3. 'Find' → logprob: -3.5002174377441406
    4. 'Given' → logprob: -4.250217437744141
    5. 'def' → logprob: -4.625217437744141
    6. 'Calculate' → logprob: -5.375217437744141
    7. ' Given' → logprob: -5.750217437744141
    8. '"""' → logprob: -6.000217437744141
    9. ' The' → logprob: -6.000217437744141
    10. 'Read' → logprob: -6.250217437744141

Token 14: ' Reads' (ID: 88839)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14431306719779968
    2. '#' → logprob: -4.019312858581543
    3. 'Find' → logprob: -4.019312858581543
    4. 'pass' → logprob: -4.144312858581543
    5. 'Given' → logprob: -4.394312858581543
    6. 'The' → logprob: -4.644312858581543
    7. 'Pass' → logprob: -4.644312858581543
    8. 'input' → logprob: -5.144312858581543
    9. '"""' → logprob: -5.144312858581543
    10. 'Calculate' → logprob: -5.144312858581543

Token 15: ' a' (ID: 261)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.08365055173635483
    2. 'input' → logprob: -3.458650588989258
    3. ' the' → logprob: -3.708650588989258
    4. ' a' → logprob: -5.083650588989258
    5. ' from' → logprob: -5.333650588989258
    6. ' sys' → logprob: -5.333650588989258
    7. ' ' → logprob: -5.833650588989258
    8. ' an' → logprob: -6.333650588989258
    9. ' standard' → logprob: -6.708650588989258
    10. ' data' → logprob: -7.833650588989258

Token 16: ' tree' (ID: 8165)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6314679384231567
    2. ' line' → logprob: -1.8814679384231567
    3. ' string' → logprob: -2.381467819213867
    4. ' single' → logprob: -3.256467819213867
    5. ' list' → logprob: -3.631467819213867
    6. ' sequence' → logprob: -3.631467819213867
    7. ' grid' → logprob: -4.131467819213867
    8. 'string' → logprob: -4.131467819213867
    9. ' graph' → logprob: -4.256467819213867
    10. 'line' → logprob: -4.256467819213867

Token 17: ' structure' (ID: 8866)
  Prédit: ' from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.042380768805742264
    2. 'from' → logprob: -4.0423808097839355
    3. ' and' → logprob: -4.9173808097839355
    4. ' node' → logprob: -5.2923808097839355
    5. ',' → logprob: -5.7923808097839355
    6. ' structure' → logprob: -6.0423808097839355
    7. '   ' → logprob: -6.5423808097839355
    8. ' in' → logprob: -7.4173808097839355
    9. ' represented' → logprob: -7.5423808097839355
    10. ' root' → logprob: -7.5423808097839355

Token 18: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.35981485247612
    2. ' and' → logprob: -1.6098148822784424
    3. '   ' → logprob: -2.9848148822784424
    4. ',' → logprob: -3.6098148822784424
    5. 'from' → logprob: -4.484814643859863
    6. '<|end|>' → logprob: -5.109814643859863
    7. ' with' → logprob: -6.734814643859863
    8. '    ' → logprob: -6.859814643859863
    9. ' to' → logprob: -6.984814643859863
    10. ' ,' → logprob: -7.234814643859863

Token 19: ' stdin' (ID: 75143)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6620920300483704
    2. ' standard' → logprob: -0.9120920300483704
    3. ' stdin' → logprob: -2.6620919704437256
    4. ' sys' → logprob: -4.787092208862305
    5. ' the' → logprob: -6.537092208862305
    6. 'stdin' → logprob: -6.662092208862305
    7. 'input' → logprob: -7.162092208862305
    8. 'standard' → logprob: -7.287092208862305
    9. 'sys' → logprob: -8.537092208862305
    10. ' a' → logprob: -11.537092208862305

Token 20: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.065898597240448
    2. ',' → logprob: -2.9408986568450928
    3. ' and' → logprob: -5.440898418426514
    4. '    ' → logprob: -6.565898418426514
    5. '\n' → logprob: -6.690898418426514
    6. '
' → logprob: -7.190898418426514
    7. '```' → logprob: -7.565898418426514
    8. ')' → logprob: -7.565898418426514
    9. '.' → logprob: -7.815898418426514
    10. '    
' → logprob: -8.190898895263672

Token 21: ' assigns' (ID: 113134)
  Prédit: ' processes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' processes' → logprob: -0.3568258583545685
    2. '   ' → logprob: -2.106825828552246
    3. ' builds' → logprob: -2.606825828552246
    4. ' parses' → logprob: -2.981825828552246
    5. ' constructs' → logprob: -4.106825828552246
    6. ' and' → logprob: -4.731825828552246
    7. ' then' → logprob: -4.856825828552246
    8. 'process' → logprob: -5.356825828552246
    9. ' token' → logprob: -5.731825828552246
    10. 'build' → logprob: -5.731825828552246

Token 22: ' values' (ID: 4824)
  Prédit: ' colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' colors' → logprob: -0.5697101950645447
    2. 'colors' → logprob: -2.3197102546691895
    3. ' labels' → logprob: -2.9447102546691895
    4. ' levels' → logprob: -3.3197102546691895
    5. 'levels' → logprob: -3.4447102546691895
    6. ' depths' → logprob: -3.5697102546691895
    7. ' parents' → logprob: -3.6947102546691895
    8. 'labels' → logprob: -4.0697102546691895
    9. ' weights' → logprob: -4.1947102546691895
    10. ' unique' → logprob: -4.1947102546691895

Token 23: ' (' (ID: 350)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.0841941311955452
    2. ',' → logprob: -3.0841941833496094
    3. '=' → logprob: -3.7091941833496094
    4. '   ' → logprob: -5.709194183349609
    5. ' =' → logprob: -5.834194183349609
    6. 'to' → logprob: -5.959194183349609
    7. ' based' → logprob: -7.584194183349609
    8. ' ,' → logprob: -7.584194183349609
    9. ' ' → logprob: -8.45919418334961
    10. ' and' → logprob: -9.08419418334961

Token 24: 'colors' (ID: 31731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9859032034873962
    2. '0' → logprob: -2.110903263092041
    3. '1' → logprob: -2.360903263092041
    4. ' to' → logprob: -2.735903263092041
    5. 'to' → logprob: -2.860903263092041
    6. '   ' → logprob: -3.860903263092041
    7. ' None' → logprob: -3.860903263092041
    8. ' node' → logprob: -3.985903263092041
    9. 'node' → logprob: -4.235903263092041
    10. 'starting' → logprob: -4.235903263092041

Token 25: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015943804755806923
    2. ' to' → logprob: -4.390944004058838
    3. '=' → logprob: -6.265944004058838
    4. '),' → logprob: -7.640944004058838
    5. ' )' → logprob: -7.765944004058838
    6. ',' → logprob: -8.39094352722168
    7. '   ' → logprob: -8.51594352722168
    8. ' =' → logprob: -9.64094352722168
    9. 'to' → logprob: -10.14094352722168
    10. ' or' → logprob: -11.01594352722168

Token 26: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.007057165261358023
    2. ',' → logprob: -6.132057189941406
    3. '=' → logprob: -6.382057189941406
    4. 'to' → logprob: -6.632057189941406
    5. '   ' → logprob: -7.382057189941406
    6. ' =' → logprob: -7.382057189941406
    7. ')' → logprob: -8.507057189941406
    8. ' based' → logprob: -8.507057189941406
    9. ' ' → logprob: -9.382057189941406
    10. ' ,' → logprob: -10.507057189941406

Token 27: ' each' (ID: 2454)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.24535810947418213
    2. ' each' → logprob: -1.7453581094741821
    3. ' the' → logprob: -3.9953579902648926
    4. 'nodes' → logprob: -4.370357990264893
    5. 'each' → logprob: -4.620357990264893
    6. ' its' → logprob: -7.495357990264893
    7. ' vertices' → logprob: -7.745357990264893
    8. ' leaves' → logprob: -8.12035846710205
    9. ' all' → logprob: -8.12035846710205
    10. 'the' → logprob: -8.49535846710205

Token 28: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.002864200621843338
    2. 'node' → logprob: -6.127864360809326
    3. ' vertex' → logprob: -7.627864360809326
    4. ' edge' → logprob: -9.252863883972168
    5. 'def' → logprob: -11.627863883972168
    6. '_node' → logprob: -11.627863883972168
    7. ' leaf' → logprob: -11.627863883972168
    8. ' child' → logprob: -11.752863883972168
    9. 'vertex' → logprob: -11.752863883972168
    10. ' line' → logprob: -11.877863883972168

Token 29: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09131701290607452
    2. '   ' → logprob: -2.7163169384002686
    3. ' ,' → logprob: -4.341317176818848
    4. ' based' → logprob: -5.466317176818848
    5. ' and' → logprob: -6.216317176818848
    6. ' ' → logprob: -8.091317176818848
    7. ')' → logprob: -8.216317176818848
    8. ' to' → logprob: -8.466317176818848
    9. ',
' → logprob: -8.591317176818848
    10. ' according' → logprob: -9.091317176818848

Token 30: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.23242589831352234
    2. ' the' → logprob: -1.7324259281158447
    3. 'a' → logprob: -4.982425689697266
    4. ' range' → logprob: -4.982425689697266
    5. ' order' → logprob: -5.107425689697266
    6. 'the' → logprob: -5.482425689697266
    7. ' accordance' → logprob: -6.607425689697266
    8. ' an' → logprob: -6.607425689697266
    9. ' different' → logprob: -6.982425689697266
    10. 'range' → logprob: -7.482425689697266

Token 31: ' greedy' (ID: 107110)
  Prédit: ' way'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' way' → logprob: -0.756766676902771
    2. ' valid' → logprob: -2.0067667961120605
    3. ' breadth' → logprob: -2.1317667961120605
    4. ' consistent' → logprob: -2.2567667961120605
    5. ' balanced' → logprob: -3.8817667961120605
    6. ' dfs' → logprob: -4.1317667961120605
    7. ' top' → logprob: -4.1317667961120605
    8. ' depth' → logprob: -4.2567667961120605
    9. ' DFS' → logprob: -4.5067667961120605
    10. ' BFS' → logprob: -4.5067667961120605

Token 32: ' manner' (ID: 16010)
  Prédit: ' manner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' manner' → logprob: -0.1001703217625618
    2. ' fashion' → logprob: -2.600170373916626
    3. ' ' → logprob: -4.975170135498047
    4. 'fashion' → logprob: -4.975170135498047
    5. '<|end|>' → logprob: -5.975170135498047
    6. 'm' → logprob: -6.100170135498047
    7. ' way' → logprob: -6.975170135498047
    8. '<|end|>' → logprob: -7.725170135498047
    9. '_' → logprob: -8.350170135498047
    10. ' approach' → logprob: -8.600170135498047

Token 33: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09223359823226929
    2. '   ' → logprob: -2.967233657836914
    3. ' based' → logprob: -4.342233657836914
    4. ' to' → logprob: -4.717233657836914
    5. ' ,' → logprob: -4.717233657836914
    6. ' and' → logprob: -6.217233657836914
    7. ' with' → logprob: -7.717233657836914
    8. ')' → logprob: -7.842233657836914
    9. ' using' → logprob: -7.967233657836914
    10. ' ' → logprob: -8.092233657836914

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4730336666107178
    2. '    ' → logprob: -1.7230336666107178
    3. ' and' → logprob: -2.5980336666107178
    4. ' ensuring' → logprob: -3.4730336666107178
    5. ' assuming' → logprob: -3.5980336666107178
    6. ' based' → logprob: -3.5980336666107178
    7. ',' → logprob: -4.973033905029297
    8. ' ' → logprob: -5.598033905029297
    9. ' with' → logprob: -5.723033905029297
    10. ' starting' → logprob: -5.848033905029297

Token 35: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7325615882873535
    2. ' and' → logprob: -1.3575615882873535
    3. '    ' → logprob: -2.1075615882873535
    4. ' ensuring' → logprob: -2.6075615882873535
    5. ' assuming' → logprob: -4.2325615882873535
    6. ' then' → logprob: -4.4825615882873535
    7. 'and' (adapté à ' and') → logprob: -5.1075615882873535
    8. ' starting' → logprob: -5.1075615882873535
    9. ' avoiding' → logprob: -5.2325615882873535
    10. ' making' → logprob: -5.4825615882873535

Token 36: ' outputs' (ID: 32725)
  Prédit: ' returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' returns' → logprob: -0.324517160654068
    2. ' prints' → logprob: -1.4495171308517456
    3. ' outputs' → logprob: -4.199517250061035
    4. ' calculates' → logprob: -4.449517250061035
    5. 'returns' → logprob: -4.949517250061035
    6. ' then' → logprob: -5.699517250061035
    7. 'outputs' → logprob: -7.199517250061035
    8. ' counts' → logprob: -7.199517250061035
    9. 'print' → logprob: -7.324517250061035
    10. '   ' → logprob: -7.324517250061035

Token 37: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.002775631844997406
    2. 'the' → logprob: -6.2527756690979
    3. ' a' → logprob: -7.6277756690979
    4. ' their' → logprob: -8.127775192260742
    5. '<|end|>' → logprob: -10.877775192260742
    6. ' an' → logprob: -10.877775192260742
    7. '<|end|>' → logprob: -11.877775192260742
    8. ' ' → logprob: -12.627775192260742
    9. ' each' → logprob: -12.627775192260742
    10. 'a' → logprob: -13.127775192260742

Token 38: ' sum' (ID: 4215)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.7807807922363281
    2. ' minimum' → logprob: -1.2807807922363281
    3. ' number' → logprob: -1.5307807922363281
    4. ' maximum' → logprob: -3.405780792236328
    5. 'minimum' → logprob: -4.780780792236328
    6. 'minimal' → logprob: -6.280780792236328
    7. ' maximal' → logprob: -6.405780792236328
    8. ' total' → logprob: -6.655780792236328
    9. 'maximum' → logprob: -7.780780792236328
    10. 'number' → logprob: -8.530780792236328

Token 39: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.12293973565101624
    2. '_' → logprob: -2.9979398250579834
    3. '   ' → logprob: -4.247939586639404
    4. '<|end|>' → logprob: -4.372939586639404
    5. ' ' → logprob: -5.247939586639404
    6. 'of' → logprob: -5.372939586639404
    7. ')' → logprob: -5.372939586639404
    8. '(' → logprob: -5.622939586639404
    9. '    ' → logprob: -5.747939586639404
    10. '  ' → logprob: -5.747939586639404

Token 40: ' all' (ID: 722)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.03339773789048195
    2. ' all' → logprob: -4.158397674560547
    3. ' unique' → logprob: -5.283397674560547
    4. ' assigned' → logprob: -5.408397674560547
    5. ' colors' → logprob: -5.908397674560547
    6. ' distinct' → logprob: -6.533397674560547
    7. 'the' → logprob: -7.033397674560547
    8. ' minimal' → logprob: -7.533397674560547
    9. ' values' → logprob: -7.658397674560547
    10. ' maximal' → logprob: -8.033397674560547

Token 41: ' assigned' (ID: 21482)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -1.1079440116882324
    2. ' colors' → logprob: -1.3579440116882324
    3. ' assigned' → logprob: -1.6079440116882324
    4. ' nodes' → logprob: -2.6079440116882324
    5. ' values' → logprob: -3.6079440116882324
    6. ' the' → logprob: -3.6079440116882324
    7. ' unique' → logprob: -3.7329440116882324
    8. ' color' → logprob: -4.107944011688232
    9. ' distinct' → logprob: -4.482944011688232
    10. 'colors' → logprob: -4.857944011688232

Token 42: ' colors' (ID: 10803)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.6672236919403076
    2. ' colors' → logprob: -0.7922236919403076
    3. 'colors' → logprob: -4.917223930358887
    4. 'values' → logprob: -5.167223930358887
    5. '_colors' → logprob: -5.292223930358887
    6. ' ' → logprob: -5.292223930358887
    7. ' node' → logprob: -5.417223930358887
    8. ' color' → logprob: -6.042223930358887
    9. '_values' → logprob: -6.792223930358887
    10. ' integers' → logprob: -7.167223930358887

Token 43: ' except' (ID: 6384)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4045630395412445
    2. '```' → logprob: -1.904563069343567
    3. '
' → logprob: -2.0295629501342773
    4. '    
' → logprob: -3.6545629501342773
    5. '\n' → logprob: -4.029562950134277
    6. '\' → logprob: -5.154562950134277
    7. 'def' → logprob: -7.279562950134277
    8. '``' → logprob: -7.904562950134277
    9. 'newline' → logprob: -7.904562950134277
    10. '   
' → logprob: -8.029562950134277

Token 44: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6720010638237
    2. ' the' → logprob: -0.7970010638237
    3. 'the' → logprob: -3.9220011234283447
    4. '<|end|>' → logprob: -5.047000885009766
    5. 'for' → logprob: -5.172000885009766
    6. ' ' → logprob: -5.422000885009766
    7. ' possibly' → logprob: -7.172000885009766
    8. '<|end|>' → logprob: -7.672000885009766
    9. ' one' → logprob: -8.047000885009766
    10. ' that' → logprob: -8.922000885009766

Token 45: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.3153574466705322
    2. 'the' → logprob: -1.8153574466705322
    3. ' ' → logprob: -2.5653574466705322
    4. '0' → logprob: -4.440357208251953
    5. ' node' → logprob: -4.440357208251953
    6. '1' → logprob: -5.315357208251953
    7. 'node' → logprob: -6.940357208251953
    8. ' one' → logprob: -8.190357208251953
    9. ' root' → logprob: -8.440357208251953
    10. 'root' → logprob: -9.065357208251953

Token 46: ' largest' (ID: 10574)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.6971728205680847
    2. ' root' → logprob: -0.8221728205680847
    3. ' first' → logprob: -3.3221728801727295
    4. 'first' → logprob: -3.9471728801727295
    5. 'lowest' → logprob: -5.94717264175415
    6. '0' → logprob: -7.32217264175415
    7. 'minimum' → logprob: -7.44717264175415
    8. ' last' → logprob: -7.69717264175415
    9. ' smallest' → logprob: -7.82217264175415
    10. 'last' → logprob: -7.94717264175415

Token 47: ' one' (ID: 1001)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9517221450805664
    2. '\' → logprob: -1.3267221450805664
    3. '   ' → logprob: -2.4517221450805664
    4. '_' → logprob: -2.4517221450805664
    5. '```' → logprob: -3.4517221450805664
    6. ',' → logprob: -3.7017221450805664
    7. '\n' → logprob: -3.9517221450805664
    8. ' 
' → logprob: -3.9517221450805664
    9. '
' → logprob: -4.201722145080566
    10. '.' → logprob: -4.201722145080566

Token 48: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6183254718780518
    2. '
' → logprob: -0.8683254718780518
    3. '    
' → logprob: -3.7433254718780518
    4. '```' → logprob: -4.868325233459473
    5. '\' → logprob: -5.493325233459473
    6. '\n' → logprob: -5.868325233459473
    7. '   
' → logprob: -6.868325233459473
    8. ' 
' → logprob: -7.118325233459473
    9. '  
' → logprob: -7.743325233459473
    10. '     
' → logprob: -9.118325233459473

Token 49: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2052507400512695
    2. '    ' → logprob: -1.5802507400512695
    3. ' and' → logprob: -1.9552507400512695
    4. '```' → logprob: -2.3302507400512695
    5. ' continuing' → logprob: -2.7052507400512695
    6. ' assuming' → logprob: -3.9552507400512695
    7. '    
' → logprob: -4.2052507400512695
    8. '     
' → logprob: -4.4552507400512695
    9. ' ensuring' → logprob: -4.5802507400512695
    10. ' as' → logprob: -4.5802507400512695

Token 50: ' well' (ID: 1775)
  Prédit: ' well'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' well' → logprob: -0.014192064292728901
    2. ' the' → logprob: -4.6391921043396
    3. ' a' → logprob: -6.6391921043396
    4. ' explained' → logprob: -6.6391921043396
    5. ' described' → logprob: -7.1391921043396
    6. 'well' → logprob: -7.6391921043396
    7. ' none' → logprob: -9.389191627502441
    8. ' we' → logprob: -9.514191627502441
    9. ' it' → logprob: -9.889191627502441
    10. ' this' → logprob: -10.014191627502441

Token 51: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.11864592134952545
    2. '   ' → logprob: -2.2436459064483643
    3. ')' → logprob: -6.493646144866943
    4. ',' → logprob: -6.993646144866943
    5. '.' → logprob: -7.618646144866943
    6. '    ' → logprob: -7.993646144866943
    7. '<|end|>' → logprob: -7.993646144866943
    8. ' ' → logprob: -8.118645668029785
    9. '  ' → logprob: -8.118645668029785
    10. 'as' → logprob: -8.368645668029785

Token 52: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.025439618155360222
    2. 'the' → logprob: -3.775439500808716
    3. ' their' → logprob: -6.400439739227295
    4. '   ' → logprob: -8.400439262390137
    5. ' a' → logprob: -9.400439262390137
    6. '<|end|>' → logprob: -9.775439262390137
    7. ' an' → logprob: -10.150439262390137
    8. 'their' → logprob: -10.900439262390137
    9. ' each' → logprob: -11.025439262390137
    10. '```' → logprob: -11.275439262390137

Token 53: ' colors' (ID: 10803)
  Prédit: ' colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' colors' → logprob: -1.314858317375183
    2. ' assigned' → logprob: -1.689858317375183
    3. 'colors' → logprob: -2.0648584365844727
    4. ' color' → logprob: -2.3148584365844727
    5. 'assigned' → logprob: -2.4398584365844727
    6. 'color' → logprob: -2.5648584365844727
    7. ' list' → logprob: -2.6898584365844727
    8. ' corresponding' → logprob: -3.9398584365844727
    9. ' individual' → logprob: -3.9398584365844727
    10. 'list' → logprob: -5.564858436584473

Token 54: '
' (ID: 198)
  Prédit: ' assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' assigned' → logprob: -0.283221036195755
    2. '
' → logprob: -2.6582210063934326
    3. '.' → logprob: -2.7832210063934326
    4. '\n' → logprob: -3.2832210063934326
    5. '```' → logprob: -3.9082210063934326
    6. 'assigned' → logprob: -4.158221244812012
    7. '   ' → logprob: -4.283221244812012
    8. '' → logprob: -5.158221244812012
    9. '.
' → logprob: -5.158221244812012
    10. ':' → logprob: -5.533221244812012

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.900029182434082
    2. ' assigned' → logprob: -1.275029182434082
    3. ' ' → logprob: -1.650029182434082
    4. '.' → logprob: -3.400029182434082
    5. ',' → logprob: -3.900029182434082
    6. ' =' → logprob: -4.275029182434082
    7. '```' → logprob: -4.650029182434082
    8. '=' → logprob: -4.775029182434082
    9. ')' → logprob: -4.900029182434082
    10. 'assigned' → logprob: -5.400029182434082

Token 56: ' assigned' (ID: 21482)
  Prédit: ' assigned'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' assigned' → logprob: -0.3246000409126282
    2. '   ' → logprob: -1.8245999813079834
    3. 'assigned' (adapté à ' assigned') → logprob: -3.0745999813079834
    4. '.' → logprob: -4.1996002197265625
    5. '\n' → logprob: -4.3246002197265625
    6. '```' → logprob: -4.4496002197265625
    7. '
' → logprob: -5.3246002197265625
    8. '"""' → logprob: -5.4496002197265625
    9. ' ' → logprob: -5.8246002197265625
    10. ' for' → logprob: -6.1996002197265625

Token 57: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05516333505511284
    2. '```' → logprob: -3.8051633834838867
    3. ':' → logprob: -4.430163383483887
    4. '\' → logprob: -4.930163383483887
    5. '\n' → logprob: -5.180163383483887
    6. '.' → logprob: -6.180163383483887
    7. '
' → logprob: -6.430163383483887
    8. 'def' → logprob: -7.930163383483887
    9. '"""' → logprob: -8.055163383483887
    10. ' ' → logprob: -8.180163383483887

Token 58: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.04668135941028595
    2. 'each' → logprob: -3.1716814041137695
    3. ' all' → logprob: -6.2966814041137695
    4. ' the' → logprob: -6.6716814041137695
    5. ' nodes' → logprob: -8.17168140411377
    6. 'all' → logprob: -8.54668140411377
    7. 'the' → logprob: -9.42168140411377
    8. 'nodes' → logprob: -12.54668140411377
    9. '```' → logprob: -12.92168140411377
    10. ' sys' → logprob: -13.92168140411377

Token 59: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.07003224641084671
    2. 'node' → logprob: -2.6950323581695557
    3. ' line' → logprob: -9.820032119750977
    4. ' of' → logprob: -11.945032119750977
    5. 'line' → logprob: -12.195032119750977
    6. ' vertex' → logprob: -12.445032119750977
    7. '_node' → logprob: -12.445032119750977
    8. '(node' → logprob: -12.695032119750977
    9. ' remaining' → logprob: -12.820032119750977
    10. '```' → logprob: -12.820032119750977

Token 60: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13248459994792938
    2. '    
' → logprob: -3.2574846744537354
    3. '\n' → logprob: -3.6324846744537354
    4. '```' → logprob: -3.7574846744537354
    5. '\' → logprob: -3.8824846744537354
    6. '
' → logprob: -4.757484436035156
    7. '    ' → logprob: -5.632484436035156
    8. '     
' → logprob: -7.882484436035156
    9. '   
' → logprob: -8.132484436035156
    10. '    
    
' → logprob: -8.132484436035156

Token 61: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07827543467283249
    2. '    
' → logprob: -3.453275442123413
    3. '```' → logprob: -3.953275442123413
    4. '
' → logprob: -4.078275203704834
    5. '"""' → logprob: -5.453275203704834
    6. ' 
' → logprob: -7.078275203704834
    7. '\n' → logprob: -7.203275203704834
    8. 'import' → logprob: -8.078275680541992
    9. '`' → logprob: -8.703275680541992
    10. '    ' → logprob: -8.828275680541992

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008752011694014072
    2. '"""' → logprob: -5.00875186920166
    3. ' """' → logprob: -7.25875186920166
    4. '```' → logprob: -7.38375186920166
    5. '    
' → logprob: -8.75875186920166
    6. '    ' → logprob: -8.88375186920166
    7. ' """
' → logprob: -9.25875186920166
    8. '"""
' → logprob: -9.38375186920166
    9. '
' → logprob: -10.00875186920166
    10. '\n' → logprob: -10.63375186920166

Token 63: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05023586004972458
    2. 'input' → logprob: -3.3002357482910156
    3. ' input' → logprob: -5.800235748291016
    4. 'n' → logprob: -6.050235748291016
    5. 'import' → logprob: -6.050235748291016
    6. '```' → logprob: -6.425235748291016
    7. 'Input' → logprob: -6.550235748291016
    8. '#' → logprob: -8.175235748291016
    9. ' n' → logprob: -8.550235748291016
    10. ' lines' → logprob: -8.675235748291016

Token 64: ' input' (ID: 3422)
  Prédit: ' tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.6677138209342957
    2. ' code' → logprob: -1.5427138805389404
    3. ' function' → logprob: -2.2927138805389404
    4. ' rest' → logprob: -3.4177138805389404
    5. ' remaining' → logprob: -3.7927138805389404
    6. ' solution' → logprob: -4.292713642120361
    7. ' approach' → logprob: -4.292713642120361
    8. 'def' → logprob: -4.667713642120361
    9. ' next' → logprob: -4.792713642120361
    10. ' input' → logprob: -4.792713642120361

Token 65: ' must' (ID: 2804)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.962337076663971
    2. ' consists' → logprob: -0.962337076663971
    3. ' continues' → logprob: -2.962337017059326
    4. ' format' → logprob: -3.212337017059326
    5. '   ' → logprob: -3.462337017059326
    6. ':' → logprob: -3.712337017059326
    7. ' describes' → logprob: -4.087337017059326
    8. ' lines' → logprob: -4.337337017059326
    9. ' line' → logprob: -4.587337017059326
    10. ' ' → logprob: -5.337337017059326

Token 66: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.08757243305444717
    2. ' consist' → logprob: -3.4625723361968994
    3. ' include' → logprob: -3.7125723361968994
    4. ' continue' → logprob: -4.8375725746154785
    5. ' have' → logprob: -5.4625725746154785
    6. ' not' → logprob: -5.5875725746154785
    7. ' describe' → logprob: -5.9625725746154785
    8. ' contain' → logprob: -6.0875725746154785
    9. ' consists' → logprob: -6.3375725746154785
    10. ' complete' → logprob: -7.4625725746154785

Token 67: ' formatted' (ID: 43831)
  Prédit: ' provided'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' provided' → logprob: -0.6065698862075806
    2. ' given' → logprob: -1.3565698862075806
    3. ' a' → logprob: -2.981569766998291
    4. ' read' → logprob: -2.981569766998291
    5. ' in' → logprob: -3.481569766998291
    6. ' formatted' → logprob: -3.606569766998291
    7. ' structured' → logprob: -4.356569766998291
    8. 'provided' → logprob: -4.981569766998291
    9. ' completed' → logprob: -5.481569766998291
    10. ' complete' → logprob: -6.231569766998291

Token 68: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.03818562626838684
    2. ' for' → logprob: -4.4131855964660645
    3. ' to' → logprob: -4.6631855964660645
    4. ' with' → logprob: -5.4131855964660645
    5. ' like' → logprob: -5.7881855964660645
    6. ':' → logprob: -6.1631855964660645
    7. 'as' → logprob: -6.2881855964660645
    8. '   ' → logprob: -7.2881855964660645
    9. ' in' → logprob: -7.2881855964660645
    10. ' ' → logprob: -7.5381855964660645

Token 69: ':
' (ID: 734)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.031556487083435
    2. ' follows' → logprob: -1.031556487083435
    3. ' described' → logprob: -1.531556487083435
    4. 'a' → logprob: -4.281556606292725
    5. ' n' → logprob: -4.406556606292725
    6. '```' → logprob: -4.781556606292725
    7. ' the' → logprob: -5.031556606292725
    8. 'des' → logprob: -5.406556606292725
    9. 'n' → logprob: -5.531556606292725
    10. ' lines' → logprob: -5.656556606292725

Token 70: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9948969483375549
    2. ' ' → logprob: -1.8698968887329102
    3. '\n' → logprob: -2.11989688873291
    4. '    ' → logprob: -2.36989688873291
    5. '<|end|>' → logprob: -2.61989688873291
    6. '```' → logprob: -3.24489688873291
    7. ' n' → logprob: -3.36989688873291
    8. '\' → logprob: -3.74489688873291
    9. 'n' → logprob: -4.11989688873291
    10. ' (' → logprob: -4.24489688873291

Token 71: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3656684160232544
    2. 'n' → logprob: -1.6156684160232544
    3. ' n' → logprob: -1.6156684160232544
    4. ' ' → logprob: -1.8656684160232544
    5. '    ' → logprob: -2.490668296813965
    6. '(' → logprob: -3.490668296813965
    7. '"' → logprob: -4.240668296813965
    8. ''' → logprob: -4.615668296813965
    9. ' (' → logprob: -4.740668296813965
    10. '\n' → logprob: -4.740668296813965

Token 72: ' An' (ID: 1689)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21264497935771942
    2. ' n' → logprob: -1.7126449346542358
    3. '   ' → logprob: -5.462645053863525
    4. '    ' → logprob: -6.087645053863525
    5. ' ' → logprob: -6.087645053863525
    6. '(n' → logprob: -7.587645053863525
    7. ' (' → logprob: -7.587645053863525
    8. '(' → logprob: -7.712645053863525
    9. ' )' → logprob: -7.962645053863525
    10. ' input' → logprob: -9.337644577026367

Token 73: ' integer' (ID: 16336)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4501100778579712
    2. 'n' → logprob: -2.2001099586486816
    3. ' integer' → logprob: -2.3251099586486816
    4. ' ' → logprob: -3.2001099586486816
    5. ' input' → logprob: -3.7001099586486816
    6. ' space' → logprob: -4.450109958648682
    7. ' )' → logprob: -4.450109958648682
    8. 'y' → logprob: -4.825109958648682
    9. ' empty' → logprob: -4.950109958648682
    10. ')' → logprob: -4.950109958648682

Token 74: ' N' (ID: 478)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8992077708244324
    2. '(' → logprob: -1.5242078304290771
    3. '<|end|>' → logprob: -2.024207830429077
    4. ' (' → logprob: -3.024207830429077
    5. ' \' → logprob: -3.399207830429077
    6. '   ' → logprob: -3.774207830429077
    7. 'n' → logprob: -4.149207592010498
    8. ',' → logprob: -4.274207592010498
    9. ' n' → logprob: -4.274207592010498
    10. '  ' → logprob: -4.649207592010498

Token 75: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.212827205657959
    2. ')' → logprob: -1.462827205657959
    3. ',' → logprob: -2.212827205657959
    4. '(' → logprob: -2.837827205657959
    5. '\' → logprob: -3.087827205657959
    6. '\n' → logprob: -3.212827205657959
    7. ' ' → logprob: -3.337827205657959
    8. '=' → logprob: -3.462827205657959
    9. ':' → logprob: -3.712827205657959
    10. '<|end|>' → logprob: -3.962827205657959

Token 76: 'number' (ID: 8096)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17196515202522278
    2. '\n' → logprob: -1.9219651222229004
    3. ' )' → logprob: -5.2969651222229
    4. '   ' → logprob: -6.5469651222229
    5. ' ' → logprob: -7.1719651222229
    6. ')\' → logprob: -7.4219651222229
    7. ',' → logprob: -7.6719651222229
    8. '```' → logprob: -7.6719651222229
    9. '
' → logprob: -7.9219651222229
    10. ' \' → logprob: -8.296965599060059

Token 77: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5570400953292847
    2. '_of' → logprob: -1.3070400953292847
    3. ' of' → logprob: -2.307040214538574
    4. '_' → logprob: -3.807040214538574
    5. ')' → logprob: -3.932040214538574
    6. 'of' → logprob: -5.057040214538574
    7. 's' → logprob: -6.182040214538574
    8. ' =' → logprob: -6.432040214538574
    9. '\' → logprob: -7.182040214538574
    10. ' ' → logprob: -7.307040214538574

Token 78: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.005556028801947832
    2. 'nodes' → logprob: -5.380556106567383
    3. ' ' → logprob: -7.380556106567383
    4. '_nodes' → logprob: -8.380556106567383
    5. ' vertices' → logprob: -10.130556106567383
    6. ' )' → logprob: -11.005556106567383
    7. ' spaces' → logprob: -11.755556106567383
    8. ' node' → logprob: -12.880556106567383
    9. '	nodes' → logprob: -12.880556106567383
    10. ')' → logprob: -13.005556106567383

Token 79: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020568605395965278
    2. '   ' → logprob: -9.625205993652344
    3. ')
' → logprob: -9.750205993652344
    4. ' )' → logprob: -9.750205993652344
    5. '=' → logprob: -11.625205993652344
    6. '\n' → logprob: -12.625205993652344
    7. '```' → logprob: -13.000205993652344
    8. '):' → logprob: -13.250205993652344
    9. '),' → logprob: -13.250205993652344
    10. ')\' → logprob: -13.875205993652344

Token 80: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1014457419514656
    2. '\' → logprob: -2.8514456748962402
    3. '   ' → logprob: -4.72644567489624
    4. '```' → logprob: -4.85144567489624
    5. ''\' → logprob: -4.97644567489624
    6. '"\' → logprob: -5.35144567489624
    7. '
' → logprob: -5.97644567489624
    8. ' \' → logprob: -6.60144567489624
    9. ' 
' → logprob: -6.85144567489624
    10. 'newline' → logprob: -7.47644567489624

Token 81: ' -' (ID: 533)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.08380787074565887
    2. '   ' → logprob: -3.208807945251465
    3. '```' → logprob: -4.583807945251465
    4. '\' → logprob: -4.708807945251465
    5. '
' → logprob: -4.958807945251465
    6. ',' → logprob: -5.833807945251465
    7. ':' → logprob: -6.208807945251465
    8. ' 
' → logprob: -6.333807945251465
    9. ')' → logprob: -6.458807945251465
    10. 'n' → logprob: -6.958807945251465

Token 82: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.10302228480577469
    2. ' n' → logprob: -2.978022336959839
    3. '   ' → logprob: -4.47802209854126
    4. 'n' → logprob: -4.47802209854126
    5. 'N' → logprob: -5.10302209854126
    6. '\n' → logprob: -5.97802209854126
    7. '```' → logprob: -6.47802209854126
    8. ' (' → logprob: -6.60302209854126
    9. ' edges' → logprob: -6.60302209854126
    10. ' A' → logprob: -6.60302209854126

Token 83: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.018267817795276642
    2. ' -' → logprob: -4.018267631530762
    3. ' lines' → logprob: -10.143267631530762
    4. '```' → logprob: -11.018267631530762
    5. '
' → logprob: -11.893267631530762
    6. ')' → logprob: -12.018267631530762
    7. ' integers' → logprob: -12.268267631530762
    8. ' ' → logprob: -12.268267631530762
    9. '   ' → logprob: -12.518267631530762
    10. '−' → logprob: -12.518267631530762

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002091615227982402
    2. ' -' → logprob: -7.127091407775879
    3. '-' → logprob: -7.752091407775879
    4. ')' → logprob: -8.502091407775879
    5. ' lines' → logprob: -8.627091407775879
    6. 'lines' → logprob: -8.877091407775879
    7. ' ' → logprob: -9.377091407775879
    8. 'input' → logprob: -9.752091407775879
    9. ' line' → logprob: -10.252091407775879
    10. '```' → logprob: -10.502091407775879

Token 85: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.1721917688846588
    2. ' edges' → logprob: -2.047191858291626
    3. ' ' → logprob: -3.797191858291626
    4. '<|end|>' → logprob: -5.422191619873047
    5. '<|end|>' → logprob: -7.297191619873047
    6. 'edges' → logprob: -8.047191619873047
    7. ' line' → logprob: -8.797191619873047
    8. '  ' → logprob: -9.172191619873047
    9. ' more' → logprob: -9.297191619873047
    10. ' 
' → logprob: -9.297191619873047

Token 86: ' with' (ID: 483)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3131544589996338
    2. '   ' → logprob: -1.6881544589996338
    3. '```' → logprob: -2.313154458999634
    4. '\' → logprob: -2.813154458999634
    5. ' for' → logprob: -3.188154458999634
    6. ' ' → logprob: -3.188154458999634
    7. ''' → logprob: -3.188154458999634
    8. '_' → logprob: -3.438154458999634
    9. ',' → logprob: -3.563154458999634
    10. ')' → logprob: -3.938154458999634

Token 87: ' pairs' (ID: 24702)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.22554048895835876
    2. ' u' → logprob: -2.2255403995513916
    3. ' node' → logprob: -3.9755403995513916
    4. ' sys' → logprob: -4.100540637969971
    5. ' two' → logprob: -4.225540637969971
    6. ' a' → logprob: -4.225540637969971
    7. ' the' → logprob: -4.475540637969971
    8. ' pairs' → logprob: -4.975540637969971
    9. ' an' → logprob: -6.350540637969971
    10. ' adjacency' → logprob: -6.600540637969971

Token 88: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.009867764078080654
    2. '(' → logprob: -5.6348676681518555
    3. '<|end|>' → logprob: -5.7598676681518555
    4. ' (' → logprob: -6.3848676681518555
    5. ' ' → logprob: -8.134867668151855
    6. 'of' → logprob: -8.509867668151855
    7. '(
' → logprob: -8.884867668151855
    8. ')' → logprob: -9.384867668151855
    9. '```' → logprob: -9.384867668151855
    10. '<|end|>' → logprob: -9.509867668151855

Token 89: ' integers' (ID: 54912)
  Prédit: ' integers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' integers' → logprob: -0.001325837685726583
    2. ' nodes' → logprob: -7.376325607299805
    3. 'inte' → logprob: -7.751325607299805
    4. ' node' → logprob: -8.751325607299805
    5. 'int' → logprob: -10.501325607299805
    6. ' integer' → logprob: -10.751325607299805
    7. ' u' → logprob: -11.001325607299805
    8. 'node' → logprob: -11.251325607299805
    9. ' int' → logprob: -11.251325607299805
    10. ' ints' → logprob: -12.126325607299805

Token 90: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2086507081985474
    2. ' ' → logprob: -1.4586507081985474
    3. ' representing' → logprob: -1.4586507081985474
    4. ',' → logprob: -2.333650588989258
    5. '(' → logprob: -2.833650588989258
    6. '<|end|>' → logprob: -3.208650588989258
    7. '```' → logprob: -5.333650588989258
    8. '   ' → logprob: -5.333650588989258
    9. ' ,' → logprob: -5.458650588989258
    10. ' that' → logprob: -5.708650588989258

Token 91: 'edges' (ID: 39127)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.2538677453994751
    2. 'u' → logprob: -1.503867745399475
    3. 'a' → logprob: -6.8788676261901855
    4. ')' → logprob: -7.7538676261901855
    5. ' a' → logprob: -7.8788676261901855
    6. ' )' → logprob: -10.128868103027344
    7. ' ' → logprob: -10.878868103027344
    8. ' ' → logprob: -11.628868103027344
    9. ' parent' → logprob: -11.628868103027344
    10. ',' → logprob: -12.878868103027344

Token 92: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016321154311299324
    2. ',' → logprob: -4.766321182250977
    3. ' )' → logprob: -5.016321182250977
    4. '),' → logprob: -7.766321182250977
    5. ' ,' → logprob: -8.516321182250977
    6. '):' → logprob: -9.266321182250977
    7. ' ' → logprob: -9.391321182250977
    8. '   ' → logprob: -9.641321182250977
    9. ')
' → logprob: -10.641321182250977
    10. ').' → logprob: -10.891321182250977

Token 93: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.011293021030724049
    2. 'the' → logprob: -4.636292934417725
    3. ' a' → logprob: -6.886292934417725
    4. ' nodes' → logprob: -8.136293411254883
    5. ')' → logprob: -9.011293411254883
    6. 'a' → logprob: -10.386293411254883
    7. ' each' → logprob: -10.761293411254883
    8. ' edges' → logprob: -11.261293411254883
    9. ' )' → logprob: -11.636293411254883
    10. ' an' → logprob: -11.886293411254883

Token 94: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.018453093245625496
    2. 'tree' → logprob: -4.018453121185303
    3. ' graph' → logprob: -8.518452644348145
    4. ')' → logprob: -10.893452644348145
    5. 'graph' → logprob: -11.268452644348145
    6. ' ' → logprob: -11.268452644348145
    7. '(tree' → logprob: -11.393452644348145
    8. ' form' → logprob: -11.768452644348145
    9. '_tree' → logprob: -11.768452644348145
    10. '	tree' → logprob: -12.018452644348145

Token 95: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012944045010954142
    2. ')
' → logprob: -6.7512946128845215
    3. '):' → logprob: -10.126294136047363
    4. ',' → logprob: -10.376294136047363
    5. ' )' → logprob: -11.126294136047363
    6. '```' → logprob: -11.501294136047363
    7. '#' → logprob: -12.751294136047363
    8. '),' → logprob: -12.876294136047363
    9. ')\' → logprob: -13.001294136047363
    10. ')

' → logprob: -13.126294136047363

Token 96: ' ' (ID: 220)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.28238821029663086
    2. ')' → logprob: -1.5323882102966309
    3. ' ,' → logprob: -4.782388210296631
    4. ' continuing' → logprob: -5.157388210296631
    5. ' each' → logprob: -5.282388210296631
    6. ' ),' → logprob: -6.157388210296631
    7. ' representing' → logprob: -6.907388210296631
    8. ' ' → logprob: -7.032388210296631
    9. ' with' → logprob: -7.032388210296631
    10. ',' → logprob: -7.282388210296631

Token 97: '1' (ID: 16)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.610429048538208
    2. ' u' → logprob: -1.360429048538208
    3. ' representing' → logprob: -2.235429048538208
    4. ' each' → logprob: -3.235429048538208
    5. ')' → logprob: -3.985429048538208
    6. 'each' → logprob: -5.110428810119629
    7. ' indicating' → logprob: -5.235428810119629
    8. ' describing' → logprob: -5.610428810119629
    9. 'represent' → logprob: -5.860428810119629
    10. ' connecting' → logprob: -5.985428810119629

Token 98: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.055241622030735016
    2. ')' → logprob: -3.555241584777832
    3. '-index' → logprob: -4.555241584777832
    4. '-' → logprob: -4.805241584777832
    5. ' -' → logprob: -6.305241584777832
    6. 'based' → logprob: -6.430241584777832
    7. ')-' → logprob: -7.055241584777832
    8. ' )' → logprob: -7.430241584777832
    9. '-)' → logprob: -7.555241584777832
    10. ' based' → logprob: -8.305241584777832

Token 99: ' indices' (ID: 30378)
  Prédit: ' indexing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indexing' → logprob: -0.21939992904663086
    2. ')' → logprob: -1.9693999290466309
    3. ' indices' → logprob: -3.719399929046631
    4. ' numbering' → logprob: -4.219399929046631
    5. ' nodes' → logprob: -4.719399929046631
    6. 'indices' → logprob: -5.594399929046631
    7. 'index' → logprob: -5.844399929046631
    8. ' node' → logprob: -7.094399929046631
    9. '<|end|>' → logprob: -7.094399929046631
    10. ' index' → logprob: -7.344399929046631

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00414393050596118
    2. ')
' → logprob: -5.504143714904785
    3. '):' → logprob: -10.629143714904785
    4. ')

' → logprob: -12.004143714904785
    5. ',' → logprob: -12.004143714904785
    6. '):
' → logprob: -12.129143714904785
    7. '```' → logprob: -12.129143714904785
    8. '   ' → logprob: -12.754143714904785
    9. '")' → logprob: -12.879143714904785
    10. '),' → logprob: -13.004143714904785

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23541513085365295
    2. '\n' → logprob: -2.36041522026062
    3. '
' → logprob: -2.61041522026062
    4. '    
' → logprob: -3.48541522026062
    5. '```' → logprob: -5.860414981842041
    6. ' 
' → logprob: -6.235414981842041
    7. ')' → logprob: -6.485414981842041
    8. '  
' → logprob: -7.110414981842041
    9. ')
' → logprob: -7.360414981842041
    10. '   
' → logprob: -7.485414981842041

Token 102: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4166446328163147
    2. '
' → logprob: -1.41664457321167
    3. '\n' → logprob: -2.79164457321167
    4. '```' → logprob: -3.79164457321167
    5. '    
' → logprob: -5.04164457321167
    6. ' 
' → logprob: -6.16664457321167
    7. '\' → logprob: -6.91664457321167
    8. 'def' → logprob: -6.91664457321167
    9. 'n' → logprob: -7.04164457321167
    10. ')' → logprob: -7.79164457321167

Token 103: ' A' (ID: 355)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08076923340559006
    2. 'An' → logprob: -3.5807693004608154
    3. ' An' → logprob: -3.9557693004608154
    4. ' an' → logprob: -4.830769062042236
    5. 'A' → logprob: -5.080769062042236
    6. ' N' → logprob: -5.205769062042236
    7. ' A' → logprob: -5.955769062042236
    8. 'N' → logprob: -6.455769062042236
    9. 'The' → logprob: -6.705769062042236
    10. '
' → logprob: -7.455769062042236

Token 104: ' line' (ID: 2543)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6728670597076416
    2. 'll' → logprob: -2.2978670597076416
    3. 'd' → logprob: -2.4228670597076416
    4. ' ' → logprob: -2.9228670597076416
    5. 'p' → logprob: -3.5478670597076416
    6. '   ' → logprob: -3.9228670597076416
    7. 'dd' → logprob: -4.1728668212890625
    8. 'l' → logprob: -4.1728668212890625
    9. 'rray' → logprob: -4.4228668212890625
    10. 'b' → logprob: -4.5478668212890625

Token 105: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.8723235130310059
    2. ' =' → logprob: -1.7473235130310059
    3. ' of' → logprob: -1.7473235130310059
    4. '   ' → logprob: -2.122323513031006
    5. 'with' → logprob: -3.372323513031006
    6. '=' → logprob: -3.622323513031006
    7. ' for' → logprob: -4.122323513031006
    8. ' containing' → logprob: -5.122323513031006
    9. ' to' → logprob: -5.247323513031006
    10. ' N' → logprob: -5.622323513031006

Token 106: ' N' (ID: 478)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.418609857559204
    2. ' the' → logprob: -1.543609857559204
    3. ' an' → logprob: -2.043609857559204
    4. 'the' → logprob: -2.043609857559204
    5. 'a' → logprob: -2.293609857559204
    6. ')' → logprob: -2.793609857559204
    7. ' N' → logprob: -4.168609619140625
    8. 'n' → logprob: -4.418609619140625
    9. ' no' → logprob: -4.543609619140625
    10. 'N' → logprob: -4.668609619140625

Token 107: ' space' (ID: 4918)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6435630917549133
    2. '```' → logprob: -2.0185630321502686
    3. '
' → logprob: -2.7685630321502686
    4. '   ' → logprob: -3.0185630321502686
    5. 'def' → logprob: -3.2685630321502686
    6. ',' → logprob: -3.5185630321502686
    7. '):' → logprob: -3.5185630321502686
    8. ')' → logprob: -4.143563270568848
    9. '[' → logprob: -4.268563270568848
    10. '<|end|>' → logprob: -4.643563270568848

Token 108: '-separated' (ID: 189658)
  Prédit: '-separated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-separated' → logprob: -0.01940385438501835
    2. ' separated' → logprob: -4.26940393447876
    3. 'se' → logprob: -5.89440393447876
    4. '-' → logprob: -7.01940393447876
    5. ')' → logprob: -8.269403457641602
    6. '-del' → logprob: -8.519403457641602
    7. ',' → logprob: -8.769403457641602
    8. 's' → logprob: -9.019403457641602
    9. '=' → logprob: -9.144403457641602
    10. 'del' → logprob: -9.269403457641602

Token 109: ' integers' (ID: 54912)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.03962942957878113
    2. ' integers' → logprob: -3.2896294593811035
    3. 'ints' → logprob: -7.5396294593811035
    4. 'values' → logprob: -7.5396294593811035
    5. 'numbers' → logprob: -7.9146294593811035
    6. 'colors' → logprob: -9.164628982543945
    7. 'tokens' → logprob: -10.789628982543945
    8. 'integer' → logprob: -11.539628982543945
    9. ' values' → logprob: -11.539628982543945
    10. 'strings' → logprob: -12.789628982543945

Token 110: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46791669726371765
    2. '\n' → logprob: -1.34291672706604
    3. '
' → logprob: -2.59291672706604
    4. '    
' → logprob: -3.96791672706604
    5. ':' → logprob: -5.717916488647461
    6. 'def' → logprob: -5.842916488647461
    7. '```' → logprob: -6.092916488647461
    8. ')' → logprob: -6.467916488647461
    9. ',' → logprob: -6.467916488647461
    10. '  
' → logprob: -6.842916488647461

Token 111: 'the' (ID: 3086)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.816127598285675
    2. ' colors' → logprob: -2.1911275386810303
    3. 'the' → logprob: -2.3161275386810303
    4. ')' → logprob: -2.4411275386810303
    5. 'values' → logprob: -3.0661275386810303
    6. ' the' → logprob: -3.0661275386810303
    7. ' values' → logprob: -3.1911275386810303
    8. ' node' → logprob: -3.4411275386810303
    9. 'color' → logprob: -3.9411275386810303
    10. ' initial' → logprob: -4.066127777099609

Token 112: ' available' (ID: 2839)
  Prédit: ' colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' colors' → logprob: -0.8084701299667358
    2. 'colors' → logprob: -1.0584701299667358
    3. 'values' → logprob: -3.1834702491760254
    4. ' values' → logprob: -3.3084702491760254
    5. ' initial' → logprob: -3.3084702491760254
    6. 'maximum' → logprob: -3.9334702491760254
    7. ' maximum' → logprob: -4.558470249176025
    8. 'initial' → logprob: -4.683470249176025
    9. 'color' → logprob: -5.433470249176025
    10. 'desired' → logprob: -5.558470249176025

Token 113: ' colors' (ID: 10803)
  Prédit: ' colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' colors' → logprob: -0.16549310088157654
    2. 'colors' → logprob: -1.915493130683899
    3. '_colors' → logprob: -5.790493011474609
    4. ' values' → logprob: -6.915493011474609
    5. ' color' → logprob: -8.04049301147461
    6. ' tokens' → logprob: -8.29049301147461
    7. ' integers' → logprob: -8.66549301147461
    8. 'values' → logprob: -9.16549301147461
    9. 'color' → logprob: -9.29049301147461
    10. 'tokens' → logprob: -9.54049301147461

Token 114: '/' (ID: 14)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14346079528331757
    2. ' )' → logprob: -2.018460750579834
    3. ',' → logprob: -8.393461227416992
    4. '):' → logprob: -9.018461227416992
    5. ' tokens' → logprob: -9.643461227416992
    6. '),' → logprob: -10.018461227416992
    7. '<|end|>' → logprob: -10.018461227416992
    8. ' for' → logprob: -10.518461227416992
    9. ' ,' → logprob: -10.643461227416992
    10. 'tokens' → logprob: -10.768461227416992

Token 115: 'values' (ID: 7222)
  Prédit: 'values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.49717074632644653
    2. ' values' → logprob: -1.6221706867218018
    3. 'weights' → logprob: -2.3721706867218018
    4. ')' → logprob: -2.6221706867218018
    5. ' weights' → logprob: -4.497170925140381
    6. 'tokens' → logprob: -5.372170925140381
    7. 'nodes' → logprob: -5.872170925140381
    8. ' nodes' → logprob: -6.622170925140381
    9. ' )' → logprob: -6.622170925140381
    10. 's' → logprob: -6.747170925140381

Token 116: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02364780753850937
    2. ' )' → logprob: -3.7736477851867676
    3. '):' → logprob: -8.648648262023926
    4. ')
' → logprob: -9.398648262023926
    5. ',' → logprob: -9.898648262023926
    6. '"""' → logprob: -10.898648262023926
    7. ' )
' → logprob: -11.273648262023926
    8. '):
' → logprob: -12.023648262023926
    9. ').' → logprob: -12.148648262023926
    10. '),' → logprob: -12.148648262023926

Token 117: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.763206958770752
    2. '
' → logprob: -0.888206958770752
    3. '    
' → logprob: -2.388206958770752
    4. '\n' → logprob: -4.388206958770752
    5. '```' → logprob: -4.513206958770752
    6. ' 
' → logprob: -6.388206958770752
    7. '   
' → logprob: -6.638206958770752
    8. '  
' → logprob: -7.138206958770752
    9. '\' → logprob: -7.263206958770752
    10. 'def' → logprob: -7.513206958770752

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02330010198056698
    2. '"""' → logprob: -4.2733001708984375
    3. '```' → logprob: -4.8983001708984375
    4. ')' → logprob: -7.2733001708984375
    5. '
' → logprob: -8.398300170898438
    6. 'def' → logprob: -8.648300170898438
    7. '    
' → logprob: -9.273300170898438
    8. '\n' → logprob: -9.398300170898438
    9. '"""
' → logprob: -9.523300170898438
    10. 'import' → logprob: -9.773300170898438

Token 119: ' Prints' (ID: 92195)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013078469783067703
    2. 'n' → logprob: -4.763078689575195
    3. '#' → logprob: -6.388078689575195
    4. 'N' → logprob: -7.263078689575195
    5. '
' → logprob: -7.638078689575195
    6. '    
' → logprob: -7.638078689575195
    7. 'import' → logprob: -8.138078689575195
    8. '```' → logprob: -8.388078689575195
    9. 'def' → logprob: -8.763078689575195
    10. ' n' → logprob: -9.138078689575195

Token 120: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7135346531867981
    2. '()' → logprob: -0.7135346531867981
    3. '("' → logprob: -5.338534832000732
    4. '(len' → logprob: -6.088534832000732
    5. '(sys' → logprob: -6.463534832000732
    6. '(N' → logprob: -6.588534832000732
    7. '('' → logprob: -6.588534832000732
    8. '("")' → logprob: -6.713534832000732
    9. '(
' → logprob: -6.963534832000732
    10. '   ' → logprob: -7.088534832000732

Token 121: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00986410491168499
    2. '    ' → logprob: -4.759864330291748
    3. '"' → logprob: -7.509864330291748
    4. '       ' → logprob: -8.88486385345459
    5. ' ' → logprob: -9.50986385345459
    6. '(' → logprob: -9.88486385345459
    7. ')' → logprob: -9.88486385345459
    8. '```' → logprob: -9.88486385345459
    9. 'def' → logprob: -10.00986385345459
    10. ' )' → logprob: -10.00986385345459

Token 122: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.057495247572660446
    2. '"' → logprob: -4.0574951171875
    3. 'The' → logprob: -4.6824951171875
    4. ' The' → logprob: -5.3074951171875
    5. ' sum' → logprob: -5.6824951171875
    6. ' max' → logprob: -5.9324951171875
    7. '    ' → logprob: -6.0574951171875
    8. 'sum' → logprob: -6.3074951171875
    9. ' None' → logprob: -6.5574951171875
    10. '(' → logprob: -6.5574951171875

Token 123: ' The' (ID: 623)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8836471438407898
    2. 'The' → logprob: -1.3836472034454346
    3. ' max' → logprob: -2.1336472034454346
    4. 'sum' → logprob: -3.0086472034454346
    5. 'the' → logprob: -3.3836472034454346
    6. ' the' → logprob: -3.7586472034454346
    7. 'int' → logprob: -4.2586469650268555
    8. ' sum' → logprob: -4.2586469650268555
    9. 'color' → logprob: -4.5086469650268555
    10. '1' → logprob: -4.6336469650268555

Token 124: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.09419991821050644
    2. ' maximum' → logprob: -3.0941998958587646
    3. ' total' → logprob: -4.219200134277344
    4. ' max' → logprob: -4.344200134277344
    5. 'sum' → logprob: -4.719200134277344
    6. 'max' → logprob: -5.219200134277344
    7. ' maximal' → logprob: -7.219200134277344
    8. 'maximum' → logprob: -7.219200134277344
    9. ' largest' → logprob: -7.594200134277344
    10. 'total' → logprob: -8.469200134277344

Token 125: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2889602780342102
    2. '_' → logprob: -1.4139602184295654
    3. '()' → logprob: -6.4139604568481445
    4. '('' → logprob: -6.6639604568481445
    5. '   ' → logprob: -6.9139604568481445
    6. ' of' → logprob: -7.0389604568481445
    7. '("' → logprob: -7.1639604568481445
    8. '_of' → logprob: -7.6639604568481445
    9. ' (' → logprob: -7.7889604568481445
    10. ' =' → logprob: -8.038960456848145

Token 126: ' assigned' (ID: 21482)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.7050325274467468
    2. ' all' → logprob: -1.3300325870513916
    3. 'the' → logprob: -1.9550325870513916
    4. ' the' → logprob: -2.4550325870513916
    5. 'assigned' → logprob: -5.0800323486328125
    6. 'colors' → logprob: -6.0800323486328125
    7. ' assigned' → logprob: -6.2050323486328125
    8. '```' → logprob: -7.7050323486328125
    9. ' colors' → logprob: -7.8300323486328125
    10. 'max' → logprob: -7.8300323486328125

Token 127: ' colors' (ID: 10803)
  Prédit: '_colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -0.3263954818248749
    2. '_' → logprob: -1.4513955116271973
    3. ' ' → logprob: -4.326395511627197
    4. ' _' → logprob: -4.826395511627197
    5. ' colors' → logprob: -4.826395511627197
    6. 'colors' → logprob: -5.076395511627197
    7. '_values' → logprob: -6.076395511627197
    8. '_color' → logprob: -6.201395511627197
    9. '(colors' → logprob: -6.326395511627197
    10. ' assigned' → logprob: -8.076395034790039

Token 128: ' except' (ID: 6384)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.588375985622406
    2. '   ' → logprob: -1.3383760452270508
    3. ',' → logprob: -3.088376045227051
    4. '(' → logprob: -3.338376045227051
    5. ' +' → logprob: -3.338376045227051
    6. ')' → logprob: -4.088376045227051
    7. '+' → logprob: -4.463376045227051
    8. ' ' → logprob: -4.838376045227051
    9. ':' → logprob: -5.213376045227051
    10. '_' → logprob: -5.838376045227051

Token 129: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15935125946998596
    2. 'for' → logprob: -2.284351348876953
    3. ' the' → logprob: -3.409351348876953
    4. '_for' → logprob: -5.409351348876953
    5. '_' → logprob: -6.659351348876953
    6. '   ' → logprob: -6.784351348876953
    7. 'the' → logprob: -6.784351348876953
    8. ' of' → logprob: -7.034351348876953
    9. ' ' → logprob: -7.159351348876953
    10. '()' → logprob: -7.659351348876953

Token 130: ' largest' (ID: 10574)
  Prédit: ' largest'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' largest' → logprob: -0.07900986075401306
    2. 'largest' → logprob: -2.579009771347046
    3. 'Largest' → logprob: -10.704010009765625
    4. ' ' → logprob: -11.079010009765625
    5. ' maximum' → logprob: -11.079010009765625
    6. ' biggest' → logprob: -11.329010009765625
    7. 'max' → logprob: -11.579010009765625
    8. ' one' → logprob: -11.829010009765625
    9. ' the' → logprob: -12.329010009765625
    10. ' highest' → logprob: -12.329010009765625

Token 131: ' one' (ID: 1001)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32519158720970154
    2. '\n' → logprob: -2.4501914978027344
    3. '_' → logprob: -2.8251914978027344
    4. ':' → logprob: -3.4501914978027344
    5. '()' → logprob: -3.4501914978027344
    6. '\' → logprob: -3.4501914978027344
    7. ',' → logprob: -5.200191497802734
    8. ' ' → logprob: -5.325191497802734
    9. '"\' → logprob: -5.325191497802734
    10. '   ' → logprob: -5.825191497802734

Token 132: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.729230523109436
    2. ',' → logprob: -1.604230523109436
    3. '   ' → logprob: -1.729230523109436
    4. '\n' → logprob: -2.7292304039001465
    5. '
' → logprob: -3.7292304039001465
    6. ',
' → logprob: -4.2292304039001465
    7. ':
' → logprob: -4.8542304039001465
    8. '\' → logprob: -5.1042304039001465
    9. 'def' → logprob: -5.7292304039001465
    10. '):' → logprob: -5.8542304039001465

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029569385573267937
    2. ',' → logprob: -4.779569149017334
    3. '```' → logprob: -4.779569149017334
    4. '    
' → logprob: -5.654569149017334
    5. '
' → logprob: -5.904569149017334
    6. ')' → logprob: -6.154569149017334
    7. 'def' → logprob: -6.404569149017334
    8. '\n' → logprob: -7.904569149017334
    9. '\' → logprob: -8.029569625854492
    10. 'import' → logprob: -8.154569625854492

Token 134: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04682321473956108
    2. '
' → logprob: -3.546823263168335
    3. '    
' → logprob: -5.171823024749756
    4. '\n' → logprob: -5.921823024749756
    5. ',' → logprob: -6.046823024749756
    6. '```' → logprob: -6.796823024749756
    7. '#' → logprob: -6.921823024749756
    8. 'import' → logprob: -6.921823024749756
    9. 'def' → logprob: -7.171823024749756
    10. '\' → logprob: -7.296823024749756

Token 135: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34835347533226013
    2. ' colors' → logprob: -1.4733535051345825
    3. 'Colors' → logprob: -4.223353385925293
    4. 'colors' → logprob: -4.223353385925293
    5. ' assigned' → logprob: -4.973353385925293
    6. ' node' → logprob: -5.223353385925293
    7. 'The' → logprob: -5.723353385925293
    8. ' The' → logprob: -5.973353385925293
    9. ' Colors' → logprob: -6.473353385925293
    10. 'Assigned' → logprob: -6.473353385925293

Token 136: ' list' (ID: 1562)
  Prédit: ' colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' colors' → logprob: -0.253220796585083
    2. ' assigned' → logprob: -2.003220796585083
    3. 'colors' → logprob: -3.128220796585083
    4. ' list' → logprob: -3.753220796585083
    5. 'assigned' → logprob: -4.628220558166504
    6. ' color' → logprob: -5.253220558166504
    7. ' sum' → logprob: -6.128220558166504
    8. ' sequence' → logprob: -7.003220558166504
    9. 'color' → logprob: -7.003220558166504
    10. ' array' → logprob: -8.003220558166504

Token 137: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.012810753658413887
    2. '(' → logprob: -5.637810707092285
    3. '[' → logprob: -5.887810707092285
    4. ' ' → logprob: -6.262810707092285
    5. '()' → logprob: -6.762810707092285
    6. 'of' → logprob: -6.887810707092285
    7. '[]' → logprob: -7.137810707092285
    8. ')' → logprob: -7.887810707092285
    9. '   ' → logprob: -8.512810707092285
    10. 's' → logprob: -8.762810707092285

Token 138: ' colors' (ID: 10803)
  Prédit: ' assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' assigned' → logprob: -0.6742690205574036
    2. 'assigned' → logprob: -0.7992690205574036
    3. ' colors' → logprob: -3.424268960952759
    4. 'colors' → logprob: -4.924269199371338
    5. 'color' → logprob: -8.04926872253418
    6. ' color' → logprob: -8.04926872253418
    7. ' node' → logprob: -9.17426872253418
    8. ' values' → logprob: -9.29926872253418
    9. ' assignments' → logprob: -10.29926872253418
    10. 'values' → logprob: -11.04926872253418

Token 139: ' assigned' (ID: 21482)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33028995990753174
    2. '   ' → logprob: -1.8302899599075317
    3. '\n' → logprob: -3.330289840698242
    4. '():' → logprob: -3.330289840698242
    5. '(' → logprob: -4.330289840698242
    6. '
' → logprob: -4.955289840698242
    7. '):' → logprob: -5.205289840698242
    8. 'def' → logprob: -5.330289840698242
    9. '```' → logprob: -5.580289840698242
    10. '()' → logprob: -5.705289840698242

Token 140: ' to' (ID: 316)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22662590444087982
    2. '(' → logprob: -1.726625919342041
    3. '():' → logprob: -3.976625919342041
    4. '()' → logprob: -6.851625919342041
    5. ':
' → logprob: -6.976625919342041
    6. '   ' → logprob: -6.976625919342041
    7. '(
' → logprob: -7.226625919342041
    8. '\n' → logprob: -7.476625919342041
    9. '[' → logprob: -7.476625919342041
    10. '\' → logprob: -8.601625442504883

Token 141: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.26295167207717896
    2. 'each' → logprob: -1.5129516124725342
    3. ' nodes' → logprob: -5.012951850891113
    4. ' the' → logprob: -5.887951850891113
    5. ' sys' → logprob: -6.887951850891113
    6. 'nodes' → logprob: -8.637951850891113
    7. 'the' → logprob: -8.762951850891113
    8. 'sys' → logprob: -9.262951850891113
    9. ' a' → logprob: -10.262951850891113
    10. ' all' → logprob: -10.387951850891113

Token 142: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.03718247637152672
    2. '_' → logprob: -3.912182569503784
    3. ' ' → logprob: -5.287182331085205
    4. 'node' → logprob: -5.537182331085205
    5. '_node' → logprob: -5.662182331085205
    6. ' line' → logprob: -6.287182331085205
    7. ' _' → logprob: -6.662182331085205
    8. '(node' → logprob: -7.787182331085205
    9. '_nodes' → logprob: -9.287182807922363
    10. '[node' → logprob: -9.537182807922363

Token 143: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.042553748935461044
    2. '(' → logprob: -3.792553663253784
    3. ':
' → logprob: -4.792553901672363
    4. '():' → logprob: -5.042553901672363
    5. 'def' → logprob: -7.042553901672363
    6. '   ' → logprob: -7.042553901672363
    7. '(
' → logprob: -7.417553901672363
    8. '\n' → logprob: -7.917553901672363
    9. '
' → logprob: -8.167553901672363
    10. '\' → logprob: -8.167553901672363

Token 144: ' in' (ID: 306)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.49255818128585815
    2. ')' → logprob: -1.992558240890503
    3. '   ' → logprob: -2.367558240890503
    4. ' separated' → logprob: -3.242558240890503
    5. '\n' → logprob: -3.367558240890503
    6. 'newline' → logprob: -4.492558002471924
    7. '    ' → logprob: -4.867558002471924
    8. ' \' → logprob: -4.867558002471924
    9. ' )' → logprob: -4.867558002471924
    10. ' sep' → logprob: -4.992558002471924

Token 145: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.059943828731775284
    2. ' the' → logprob: -3.809943914413452
    3. ' one' → logprob: -3.934943914413452
    4. ' a' → logprob: -4.434943675994873
    5. ' space' → logprob: -6.184943675994873
    6. 'order' → logprob: -7.059943675994873
    7. ' ' → logprob: -7.809943675994873
    8. ' node' → logprob: -8.184944152832031
    9. ' original' → logprob: -8.934944152832031
    10. 'the' → logprob: -9.184944152832031

Token 146: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0303926020860672
    2. '():' → logprob: -4.030392646789551
    3. '(' → logprob: -5.405392646789551
    4. ':
' → logprob: -5.780392646789551
    5. 'def' → logprob: -6.030392646789551
    6. '   ' → logprob: -7.530392646789551
    7. '(
' → logprob: -8.40539264678955
    8. '
' → logprob: -8.65539264678955
    9. '```' → logprob: -8.65539264678955
    10. '\n' → logprob: -8.78039264678955

Token 147: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4960716664791107
    2. '   ' → logprob: -1.496071696281433
    3. '
' → logprob: -2.2460715770721436
    4. ':
' → logprob: -3.6210715770721436
    5. 'def' → logprob: -4.871071815490723
    6. '    
' → logprob: -5.246071815490723
    7. '\n' → logprob: -5.496071815490723
    8. '```' → logprob: -5.621071815490723
    9. '\' → logprob: -5.746071815490723
    10. '():' → logprob: -5.871071815490723

Token 148: ' """

' (ID: 28800)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25356361269950867
    2. '   ' → logprob: -1.753563642501831
    3. '(' → logprob: -3.628563642501831
    4. 'def' → logprob: -4.878563404083252
    5. '[' → logprob: -5.003563404083252
    6. ':
' → logprob: -5.753563404083252
    7. '=' → logprob: -6.753563404083252
    8. ' :' → logprob: -6.753563404083252
    9. '
' → logprob: -7.128563404083252
    10. '():' → logprob: -7.628563404083252

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004052398260682821
    2. 'n' → logprob: -5.87905216217041
    3. 'N' → logprob: -6.87905216217041
    4. '    
' → logprob: -9.00405216217041
    5. '
' → logprob: -9.87905216217041
    6. 'import' → logprob: -10.75405216217041
    7. 'input' → logprob: -11.87905216217041
    8. '#' → logprob: -12.12905216217041
    9. '```' → logprob: -12.12905216217041
    10. 'def' → logprob: -13.50405216217041

Token 150: ' #' (ID: 1069)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6389679312705994
    2. 'input' → logprob: -0.8889679312705994
    3. 'n' → logprob: -2.888967990875244
    4. '   ' → logprob: -5.263967990875244
    5. 'import' → logprob: -9.138967514038086
    6. '#' (adapté à ' #') → logprob: -9.513967514038086
    7. ' input' → logprob: -10.013967514038086
    8. 'sys' → logprob: -10.888967514038086
    9. 'read' → logprob: -11.138967514038086
    10. ' N' → logprob: -12.388967514038086

Token 151: ' Local' (ID: 11274)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.007693813648074865
    2. ' input' → logprob: -5.257693767547607
    3. '   ' → logprob: -6.507693767547607
    4. 'n' → logprob: -7.382693767547607
    5. 'N' → logprob: -8.257694244384766
    6. 'import' → logprob: -10.132694244384766
    7. 'read' → logprob: -11.132694244384766
    8. '#' → logprob: -11.882694244384766
    9. 'sys' → logprob: -11.882694244384766
    10. 'data' → logprob: -12.382694244384766

Token 152: ' function' (ID: 1114)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7101050019264221
    2. '_colors' → logprob: -2.0851049423217773
    3. '_max' → logprob: -2.8351049423217773
    4. '_n' → logprob: -2.9601049423217773
    5. ' N' → logprob: -3.0851049423217773
    6. '   ' → logprob: -3.3351049423217773
    7. '_color' → logprob: -3.3351049423217773
    8. ' =' → logprob: -3.8351049423217773
    9. 'N' → logprob: -3.8351049423217773
    10. ' _' → logprob: -3.9601049423217773

Token 153: ' '' (ID: 461)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.681978702545166
    2. ' solve' → logprob: -2.056978702545166
    3. ' bfs' → logprob: -2.556978702545166
    4. ' =' → logprob: -3.056978702545166
    5. ' neighbors' → logprob: -3.181978702545166
    6. '   ' → logprob: -3.306978702545166
    7. ' assign' → logprob: -3.431978702545166
    8. 'def' → logprob: -3.431978702545166
    9. ' color' → logprob: -4.556978702545166
    10. '=' → logprob: -4.931978702545166

Token 154: 'input' (ID: 2586)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.15063297748565674
    2. 'assign' → logprob: -2.400632858276367
    3. 'read' → logprob: -3.400632858276367
    4. 'input' → logprob: -5.025632858276367
    5. 'dfs' → logprob: -5.525632858276367
    6. 'color' → logprob: -6.275632858276367
    7. 'get' → logprob: -6.775632858276367
    8. 'def' → logprob: -7.400632858276367
    9. 'parse' → logprob: -8.525632858276367
    10. ' bfs' → logprob: -8.775632858276367

Token 155: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07413273304700851
    2. '()' → logprob: -2.9491326808929443
    3. '=' → logprob: -4.449132919311523
    4. ''' → logprob: -6.074132919311523
    5. '_line' → logprob: -6.074132919311523
    6. ' ='' → logprob: -7.699132919311523
    7. '   ' → logprob: -7.824132919311523
    8. ')'' → logprob: -8.324132919311523
    9. '_lines' → logprob: -8.324132919311523
    10. '_func' → logprob: -8.699132919311523

Token 156: ' reads' (ID: 31523)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35009264945983887
    2. '=' → logprob: -1.2250926494598389
    3. '   ' → logprob: -7.100092887878418
    4. '()' → logprob: -7.600092887878418
    5. '=sys' → logprob: -8.725092887878418
    6. '=input' → logprob: -9.600092887878418
    7. ' ' → logprob: -10.350092887878418
    8. ':' → logprob: -11.350092887878418
    9. '(' → logprob: -11.350092887878418
    10. '=lambda' → logprob: -11.600092887878418

Token 157: ' a' (ID: 261)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0051104226149618626
    2. '=' → logprob: -6.005110263824463
    3. ' =' → logprob: -6.130110263824463
    4. '=sys' → logprob: -8.630110740661621
    5. 'line' → logprob: -9.505110740661621
    6. '<|end|>' → logprob: -9.880110740661621
    7. '()>' → logprob: -10.880110740661621
    8. '().' → logprob: -11.005110740661621
    9. '(' → logprob: -11.255110740661621
    10. '()

' → logprob: -11.630110740661621

Token 158: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.1414410024881363
    2. '()' → logprob: -2.7664411067962646
    3. ' line' → logprob: -3.3914411067962646
    4. 'input' → logprob: -4.5164408683776855
    5. 'sys' → logprob: -4.7664408683776855
    6. ')' → logprob: -6.1414408683776855
    7. '   ' → logprob: -6.2664408683776855
    8. 'n' → logprob: -6.6414408683776855
    9. 'token' → logprob: -6.6414408683776855
    10. '()\' → logprob: -6.7664408683776855

Token 159: ' from' (ID: 591)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12478107959032059
    2. '=' → logprob: -2.7497811317443848
    3. ' =' → logprob: -2.9997811317443848
    4. '()
' → logprob: -6.374781131744385
    5. '   ' → logprob: -6.999781131744385
    6. '=sys' → logprob: -7.999781131744385
    7. '()\' → logprob: -9.249780654907227
    8. ',' → logprob: -9.374780654907227
    9. ':' → logprob: -9.624780654907227
    10. '(' → logprob: -9.624780654907227

Token 160: ' stdin' (ID: 75143)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.10236921906471252
    2. ' sys' → logprob: -2.3523693084716797
    3. '=sys' → logprob: -7.35236930847168
    4. 'input' → logprob: -7.72736930847168
    5. 'stdin' → logprob: -7.72736930847168
    6. '   ' → logprob: -8.10236930847168
    7. '()' → logprob: -8.60236930847168
    8. '(sys' → logprob: -9.60236930847168
    9. '	sys' → logprob: -9.97736930847168
    10. ' input' → logprob: -11.60236930847168

Token 161: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9967570304870605
    2. '()' → logprob: -1.1217570304870605
    3. '=' → logprob: -1.8717570304870605
    4. ' =' → logprob: -2.1217570304870605
    5. ':' → logprob: -4.3717570304870605
    6. '():' → logprob: -4.9967570304870605
    7. '(' → logprob: -6.1217570304870605
    8. '    ' → logprob: -6.8717570304870605
    9. ' ' → logprob: -7.1217570304870605
    10. 'def' → logprob: -7.1217570304870605

Token 162: 'f' (ID: 69)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12483473867177963
    2. '   ' → logprob: -2.3748347759246826
    3. '()' → logprob: -4.4998345375061035
    4. ' )' → logprob: -5.2498345375061035
    5. '):' → logprob: -5.9998345375061035
    6. ' =' → logprob: -6.4998345375061035
    7. '=' → logprob: -6.4998345375061035
    8. '=sys' → logprob: -7.3748345375061035
    9. '    ' → logprob: -7.9998345375061035
    10. ' ' → logprob: -8.249835014343262

Token 163: 'aster' (ID: 3588)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1975317001342773
    2. 'unc' → logprob: -1.5725317001342773
    3. '   ' → logprob: -2.3225317001342773
    4. 'or' → logprob: -2.5725317001342773
    5. ' =' → logprob: -2.9475317001342773
    6. '=' → logprob: -3.5725317001342773
    7. 'rom' → logprob: -3.5725317001342773
    8. '.readline' → logprob: -3.8225317001342773
    9. '\n' → logprob: -3.9475317001342773
    10. ')
' → logprob: -4.322531700134277

Token 164: ' input' (ID: 3422)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1522103548049927
    2. ')' → logprob: -1.2772103548049927
    3. '()' → logprob: -1.5272103548049927
    4. ' =' → logprob: -2.277210235595703
    5. '   ' → logprob: -3.277210235595703
    6. '()
' → logprob: -3.902210235595703
    7. '=sys' → logprob: -4.277210235595703
    8. '())' → logprob: -5.777210235595703
    9. '=input' → logprob: -6.402210235595703
    10. 'input' → logprob: -6.527210235595703

Token 165: ' in' (ID: 306)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05973677709698677
    2. ')' → logprob: -3.434736728668213
    3. '()
' → logprob: -4.434736728668213
    4. ' =' → logprob: -4.809736728668213
    5. '())' → logprob: -6.059736728668213
    6. '=' → logprob: -6.309736728668213
    7. '   ' → logprob: -6.809736728668213
    8. '().' → logprob: -9.559737205505371
    9. '=sys' → logprob: -9.684737205505371
    10. '.readline' → logprob: -10.059737205505371

Token 166: ' contests' (ID: 76269)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45808279514312744
    2. 'python' → logprob: -1.4580827951431274
    3. 'Python' → logprob: -3.083082675933838
    4. '()' → logprob: -3.458082675933838
    5. ' Python' → logprob: -4.458082675933838
    6. ' sys' → logprob: -4.583082675933838
    7. 'sys' → logprob: -4.833082675933838
    8. ' python' → logprob: -4.958082675933838
    9. 'import' → logprob: -5.333082675933838
    10. 'ython' → logprob: -5.333082675933838

Token 167: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1779240071773529
    2. '()' → logprob: -2.8029239177703857
    3. ' =' → logprob: -3.0529239177703857
    4. '   ' → logprob: -3.5529239177703857
    5. '=' → logprob: -4.177924156188965
    6. '()
' → logprob: -5.552924156188965
    7. '):' → logprob: -6.302924156188965
    8. ')
' → logprob: -6.802924156188965
    9. '=sys' → logprob: -6.927924156188965
    10. ':' → logprob: -7.177924156188965

Token 168: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8094696402549744
    2. '   ' → logprob: -0.9344696402549744
    3. '=' → logprob: -2.059469699859619
    4. 'input' → logprob: -4.059469699859619
    5. '=input' → logprob: -5.059469699859619
    6. '()' → logprob: -5.684469699859619
    7. '=sys' → logprob: -6.434469699859619
    8. 'def' → logprob: -6.434469699859619
    9. ':' → logprob: -6.809469699859619
    10. '    
' → logprob: -7.559469699859619

Token 169: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6008971929550171
    2. 'input' (adapté à ' input') → logprob: -0.9758971929550171
    3. '   ' → logprob: -2.6008973121643066
    4. 'import' → logprob: -8.100896835327148
    5. ' import' → logprob: -9.475896835327148
    6. 'def' → logprob: -9.850896835327148
    7. '	input' → logprob: -10.100896835327148
    8. ' def' → logprob: -10.850896835327148
    9. '=input' → logprob: -10.850896835327148
    10. ' for' → logprob: -11.100896835327148

Token 170: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20381681621074677
    2. ' =' → logprob: -2.3288168907165527
    3. '=' → logprob: -2.4538168907165527
    4. '(' → logprob: -8.078816413879395
    5. '=sys' → logprob: -9.078816413879395
    6. '.readline' → logprob: -9.203816413879395
    7. '_line' → logprob: -9.578816413879395
    8. '()='' → logprob: -9.953816413879395
    9. '   ' → logprob: -10.078816413879395
    10. '()
' → logprob: -10.078816413879395

Token 171: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00043162284418940544
    2. ' sys' → logprob: -7.750431537628174
    3. 'lambda' → logprob: -14.000432014465332
    4. '	sys' → logprob: -16.875431060791016
    5. '=sys' → logprob: -17.000431060791016
    6. 'input' → logprob: -18.500431060791016
    7. '(sys' → logprob: -18.500431060791016
    8. 'stdin' → logprob: -18.875431060791016
    9. '   ' → logprob: -19.500431060791016
    10. ' lambda' → logprob: -21.250431060791016

Token 172: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.4617256056226324e-05
    2. '.stdout' → logprob: -12.000014305114746
    3. 'stdin' → logprob: -12.250014305114746
    4. '.' → logprob: -13.125014305114746
    5. '.readline' → logprob: -13.875014305114746
    6. '.std' → logprob: -14.375014305114746
    7. '.argv' → logprob: -16.250015258789062
    8. ' stdin' → logprob: -17.000015258789062
    9. '(stdin' → logprob: -17.875015258789062
    10. '.stderr' → logprob: -18.125015258789062

Token 173: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.5941604690160602e-05
    2. '.' → logprob: -11.125025749206543
    3. '.stdin' → logprob: -12.000025749206543
    4. '.buffer' → logprob: -12.375025749206543
    5. '.read' → logprob: -14.500025749206543
    6. ' .' → logprob: -16.62502670288086
    7. '.readlines' → logprob: -17.00002670288086
    8. '.stdout' → logprob: -17.75002670288086
    9. '.next' → logprob: -17.75002670288086
    10. '.reader' → logprob: -17.87502670288086

Token 174: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.8236858248710632
    2. '
' → logprob: -1.448685884475708
    3. '   ' → logprob: -1.448685884475708
    4. '    
' → logprob: -2.823685884475708
    5. '()
' → logprob: -3.948685884475708
    6. '(' → logprob: -5.573685646057129
    7. '\n' → logprob: -6.448685646057129
    8. '(n' → logprob: -6.698685646057129
    9. '(
' → logprob: -6.948685646057129
    10. '()\' → logprob: -7.323685646057129

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06769431382417679
    2. 'n' → logprob: -3.5676944255828857
    3. '
' → logprob: -3.8176944255828857
    4. 'N' → logprob: -4.817694187164307
    5. '    
' → logprob: -4.942694187164307
    6. '  
' → logprob: -12.192694664001465
    7. ' N' → logprob: -12.442694664001465
    8. 'import' → logprob: -12.442694664001465
    9. '   
' → logprob: -12.692694664001465
    10. '	n' → logprob: -12.942694664001465

Token 176: ' #' (ID: 1069)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.20346926152706146
    2. 'n' → logprob: -1.7034692764282227
    3. '   ' → logprob: -6.203469276428223
    4. ' N' → logprob: -10.828469276428223
    5. ' n' → logprob: -11.578469276428223
    6. '#' (adapté à ' #') → logprob: -13.203469276428223
    7. '    
' → logprob: -15.578469276428223
    8. '
' → logprob: -16.453468322753906
    9. '	n' → logprob: -16.953468322753906
    10. 'num' → logprob: -17.453468322753906

Token 177: ' Read' (ID: 5405)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.47553858160972595
    2. 'n' → logprob: -0.9755386114120483
    3. '   ' → logprob: -6.975538730621338
    4. '#' → logprob: -8.22553825378418
    5. ' n' → logprob: -8.97553825378418
    6. ' N' → logprob: -8.97553825378418
    7. '
' → logprob: -13.35053825378418
    8. 'def' → logprob: -13.97553825378418
    9. 'import' → logprob: -14.72553825378418
    10. 'num' → logprob: -15.10053825378418

Token 178: ' number' (ID: 2086)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.111570119857788
    2. 'n' → logprob: -1.111570119857788
    3. ' N' → logprob: -1.486570119857788
    4. ' n' → logprob: -2.361570119857788
    5. '   ' → logprob: -4.111570358276367
    6. 'int' → logprob: -5.736570358276367
    7. ' ' → logprob: -7.486570358276367
    8. '(N' → logprob: -7.986570358276367
    9. '(' → logprob: -8.361570358276367
    10. '()' → logprob: -8.736570358276367

Token 179: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008422729559242725
    2. '(
' → logprob: -6.0084228515625
    3. ' =' → logprob: -6.1334228515625
    4. ' (' → logprob: -6.5084228515625
    5. '=' → logprob: -6.5084228515625
    6. '('' → logprob: -8.1334228515625
    7. '()' → logprob: -8.5084228515625
    8. '(N' → logprob: -9.3834228515625
    9. 's' → logprob: -9.6334228515625
    10. '("' → logprob: -10.7584228515625

Token 180: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.6136173605918884
    2. 'N' → logprob: -1.4886174201965332
    3. 'n' → logprob: -1.7386174201965332
    4. ' nodes' → logprob: -3.988617420196533
    5. '_nodes' → logprob: -4.363617420196533
    6. 'tokens' → logprob: -4.738617420196533
    7. 'lines' → logprob: -4.988617420196533
    8. '()' → logprob: -5.488617420196533
    9. ' n' → logprob: -6.863617420196533
    10. '(N' → logprob: -6.863617420196533

Token 181: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4049598276615143
    2. 'N' → logprob: -1.904959797859192
    3. 'n' → logprob: -2.4049599170684814
    4. ' =' → logprob: -3.2799599170684814
    5. '=' → logprob: -3.4049599170684814
    6. '(' → logprob: -4.279959678649902
    7. ' N' → logprob: -6.154959678649902
    8. '(N' → logprob: -6.279959678649902
    9. '()' → logprob: -6.404959678649902
    10. '    
' → logprob: -7.029959678649902

Token 182: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6682177782058716
    2. 'the' → logprob: -1.9182177782058716
    3. ' sys' → logprob: -2.418217658996582
    4. '   ' → logprob: -2.543217658996582
    5. 'n' → logprob: -2.668217658996582
    6. ' n' → logprob: -3.668217658996582
    7. 'N' → logprob: -4.293217658996582
    8. ' N' → logprob: -4.293217658996582
    9. 'sys' → logprob: -4.418217658996582
    10. 'int' → logprob: -4.668217658996582

Token 183: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.02676059678196907
    2. ' tree' → logprob: -3.6517605781555176
    3. 'graph' → logprob: -8.776761054992676
    4. '
' → logprob: -9.151761054992676
    5. '   ' → logprob: -9.276761054992676
    6. 'input' → logprob: -11.026761054992676
    7. 'n' → logprob: -11.401761054992676
    8. '\n' → logprob: -11.651761054992676
    9. '_tree' → logprob: -11.776761054992676
    10. 't' → logprob: -11.901761054992676

Token 184: '
' (ID: 198)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2361278086900711
    2. '   ' → logprob: -2.1111278533935547
    3. 'n' → logprob: -2.4861278533935547
    4. ' N' → logprob: -5.236127853393555
    5. ' n' → logprob: -8.486127853393555
    6. ' =' → logprob: -8.611127853393555
    7. '=' → logprob: -9.236127853393555
    8. '
' → logprob: -9.486127853393555
    9. '(N' → logprob: -10.361127853393555
    10. '    
' → logprob: -10.486127853393555

Token 185: '   ' (ID: 271)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3632565438747406
    2. '   ' → logprob: -1.363256573677063
    3. 'n' → logprob: -3.2382564544677734
    4. '(N' → logprob: -5.738256454467773
    5. ' N' → logprob: -5.863256454467773
    6. '(' → logprob: -6.238256454467773
    7. '(n' → logprob: -6.988256454467773
    8. ' n' → logprob: -8.738256454467773
    9. ' =' → logprob: -9.238256454467773
    10. '()' → logprob: -9.363256454467773

Token 186: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.5846903324127197
    2. 'n' → logprob: -0.8346903324127197
    3. '   ' → logprob: -4.834690093994141
    4. ' n' → logprob: -7.459690093994141
    5. ' N' → logprob: -8.58469009399414
    6. '	n' → logprob: -14.33469009399414
    7. '	N' → logprob: -16.20969009399414
    8. ' ' → logprob: -16.70969009399414
    9. '`' → logprob: -17.58469009399414
    10. '  ' → logprob: -17.58469009399414

Token 187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6934590339660645
    2. ' =' → logprob: -0.6934590339660645
    3. '   ' → logprob: -8.568458557128906
    4. '=int' → logprob: -9.068458557128906
    5. '=input' → logprob: -12.943458557128906
    6. ',' → logprob: -13.318458557128906
    7. ' =
' → logprob: -14.568458557128906
    8. ' ' → logprob: -14.818458557128906
    9. '=
' → logprob: -14.818458557128906
    10. '=sys' → logprob: -15.068458557128906

Token 188: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.47407716512680054
    2. ' int' → logprob: -0.9740771651268005
    3. '   ' → logprob: -16.349077224731445
    4. '(int' → logprob: -16.349077224731445
    5. '=int' → logprob: -18.599077224731445
    6. '[int' → logprob: -18.724077224731445
    7. '	int' → logprob: -18.974077224731445
    8. ' ' → logprob: -18.974077224731445
    9. '<int' → logprob: -20.099077224731445
    10. ':int' → logprob: -20.474077224731445

Token 189: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0018267885316163301
    2. 'input' → logprob: -6.751826763153076
    3. '(' → logprob: -7.376826763153076
    4. '(sys' → logprob: -10.501827239990234
    5. ' (' → logprob: -13.501827239990234
    6. ' input' → logprob: -14.001827239990234
    7. '(
' → logprob: -14.126827239990234
    8. 'sys' → logprob: -15.251827239990234
    9. '=input' → logprob: -17.126827239990234
    10. '()' → logprob: -18.001827239990234

Token 190: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06691092997789383
    2. '().' → logprob: -2.816910982131958
    3. '()' → logprob: -5.316910743713379
    4. ')' → logprob: -11.566910743713379
    5. ' ())' → logprob: -11.941910743713379
    6. '();)' → logprob: -13.191910743713379
    7. '())
' → logprob: -13.316910743713379
    8. '(' → logprob: -13.691910743713379
    9. '()[' → logprob: -13.941910743713379
    10. '()]' → logprob: -15.441910743713379

Token 191: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39704471826553345
    2. 'edges' → logprob: -1.1470446586608887
    3. ' edges' → logprob: -5.022044658660889
    4. '    
' → logprob: -6.772044658660889
    5. 'graph' → logprob: -7.272044658660889
    6. 'adj' → logprob: -7.522044658660889
    7. 'colors' → logprob: -8.272045135498047
    8. '
' → logprob: -8.522045135498047
    9. '_edges' → logprob: -8.897045135498047
    10. '```' → logprob: -8.897045135498047

Token 192: ' #' (ID: 1069)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.10588099807500839
    2. 'adj' → logprob: -3.3558809757232666
    3. 'graph' → logprob: -3.4808809757232666
    4. '#' (adapté à ' #') → logprob: -3.4808809757232666
    5. ' edges' → logprob: -6.480881214141846
    6. '   ' → logprob: -6.855881214141846
    7. 'colors' → logprob: -7.230881214141846
    8. 'tree' → logprob: -7.855881214141846
    9. 'nodes' → logprob: -8.730880737304688
    10. 'neighbors' → logprob: -9.730880737304688

Token 193: ' Initialize' (ID: 19496)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.7804648280143738
    2. 'adj' → logprob: -1.1554648876190186
    3. 'graph' → logprob: -1.5304648876190186
    4. '#' → logprob: -4.9054646492004395
    5. 'neighbors' → logprob: -7.1554646492004395
    6. 'tree' → logprob: -7.1554646492004395
    7. 'g' → logprob: -7.7804646492004395
    8. ' edges' → logprob: -7.9054646492004395
    9. 'nodes' → logprob: -8.655465126037598
    10. 'G' → logprob: -8.905465126037598

Token 194: ' adjacency' (ID: 177015)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.32114118337631226
    2. 'adj' → logprob: -1.446141242980957
    3. ' graph' → logprob: -4.196141242980957
    4. 'colors' → logprob: -4.696141242980957
    5. 'edges' → logprob: -5.071141242980957
    6. ' adj' → logprob: -5.946141242980957
    7. 'color' → logprob: -6.071141242980957
    8. 'g' → logprob: -6.321141242980957
    9. ' edges' → logprob: -7.696141242980957
    10. ' adjacency' → logprob: -7.946141242980957

Token 195: ' list' (ID: 1562)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.018003368750214577
    2. 'list' → logprob: -4.518003463745117
    3. ' =' → logprob: -5.268003463745117
    4. ' list' → logprob: -6.643003463745117
    5. '   ' → logprob: -8.268003463745117
    6. 'List' → logprob: -9.268003463745117
    7. '_' → logprob: -10.143003463745117
    8. '=' → logprob: -10.143003463745117
    9. ' ' → logprob: -10.893003463745117
    10. '_lists' → logprob: -11.518003463745117

Token 196: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16747502982616425
    2. 'adj' → logprob: -2.5424749851226807
    3. 'graph' → logprob: -3.4174749851226807
    4. '=' → logprob: -3.7924749851226807
    5. '   ' → logprob: -4.66747522354126
    6. ' adj' → logprob: -5.54247522354126
    7. ' graph' → logprob: -6.16747522354126
    8. ':' → logprob: -6.29247522354126
    9. ' adjacency' → logprob: -6.66747522354126
    10. '_adj' → logprob: -8.042474746704102

Token 197: ' all' (ID: 722)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6636608242988586
    2. '[' → logprob: -2.038660764694214
    3. '[N' → logprob: -2.288660764694214
    4. ' [[]' → logprob: -2.288660764694214
    5. ' N' → logprob: -2.913660764694214
    6. 'graph' → logprob: -4.038661003112793
    7. '   ' → logprob: -4.163661003112793
    8. ' graph' → logprob: -4.413661003112793
    9. 'range' → logprob: -4.663661003112793
    10. 'the' → logprob: -5.163661003112793

Token 198: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.03199722245335579
    2. 'nodes' → logprob: -3.6569972038269043
    3. '_nodes' → logprob: -5.406997203826904
    4. ' ' → logprob: -7.906997203826904
    5. '	nodes' → logprob: -8.281997680664062
    6. ' N' → logprob: -8.406997680664062
    7. ' vertices' → logprob: -8.781997680664062
    8. '   ' → logprob: -9.406997680664062
    9. 'N' → logprob: -10.406997680664062
    10. 'vertices' → logprob: -10.656997680664062

Token 199: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05559113994240761
    2. 'adj' → logprob: -3.555591106414795
    3. '=' → logprob: -5.055591106414795
    4. ':' → logprob: -5.555591106414795
    5. ' adjacency' → logprob: -5.930591106414795
    6. '   ' → logprob: -5.930591106414795
    7. '[' → logprob: -6.055591106414795
    8. ' adj' → logprob: -6.180591106414795
    9. 'graph' → logprob: -6.430591106414795
    10. '_adj' → logprob: -7.180591106414795

Token 200: '0' (ID: 15)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -1.0843350887298584
    2. 'N' → logprob: -1.4593350887298584
    3. ' [[]' → logprob: -1.4593350887298584
    4. '[N' → logprob: -1.7093350887298584
    5. ' [' → logprob: -5.7093353271484375
    6. '   ' → logprob: -5.7093353271484375
    7. '[' → logprob: -6.0843353271484375
    8. ')' → logprob: -6.2093353271484375
    9. '[]' → logprob: -6.7093353271484375
    10. ' ' → logprob: -6.9593353271484375

Token 201: '-based' (ID: 8235)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0769815593957901
    2. ')' → logprob: -3.326981544494629
    3. '   ' → logprob: -3.951981544494629
    4. '-based' → logprob: -5.826981544494629
    5. '])' → logprob: -5.826981544494629
    6. ' for' → logprob: -6.201981544494629
    7. '][' → logprob: -6.326981544494629
    8. '-index' → logprob: -6.326981544494629
    9. ']-' → logprob: -6.576981544494629
    10. ' ]' → logprob: -6.951981544494629

Token 202: ' indexing' (ID: 105989)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013401387259364128
    2. ')
' → logprob: -5.013401508331299
    3. ' nodes' → logprob: -5.888401508331299
    4. ' indexing' → logprob: -6.263401508331299
    5. ' indices' → logprob: -7.638401508331299
    6. 'indices' → logprob: -7.638401508331299
    7. '_nodes' → logprob: -7.888401508331299
    8. 'nodes' → logprob: -8.38840103149414
    9. ' )' → logprob: -8.88840103149414
    10. 'index' → logprob: -10.26340103149414

Token 203: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0567086823284626
    2. ')
' → logprob: -3.556708574295044
    3. '   ' → logprob: -4.306708812713623
    4. ',' → logprob: -5.056708812713623
    5. '[N' → logprob: -5.181708812713623
    6. ' )' → logprob: -8.056708335876465
    7. '[' → logprob: -8.681708335876465
    8. ' =' → logprob: -8.806708335876465
    9. ' )
' → logprob: -10.181708335876465
    10. '(N' → logprob: -10.181708335876465

Token 204: '   ' (ID: 271)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.6541692614555359
    2. ' adj' → logprob: -1.1541693210601807
    3. ' graph' → logprob: -2.5291693210601807
    4. ' adjacency' → logprob: -3.0291693210601807
    5. 'graph' → logprob: -3.6541693210601807
    6. '   ' → logprob: -4.904169082641602
    7. ' neighbors' → logprob: -7.154169082641602
    8. ' edges' → logprob: -7.279169082641602
    9. 'neighbors' → logprob: -7.529169082641602
    10. '
' → logprob: -8.029169082641602

Token 205: ' Edge' (ID: 16396)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.8205001950263977
    2. 'graph' → logprob: -0.8205001950263977
    3. 'adj' → logprob: -2.445500135421753
    4. ' adj' → logprob: -3.570500135421753
    5. 'g' → logprob: -6.320500373840332
    6. ' adjacency' → logprob: -6.820500373840332
    7. ' g' → logprob: -6.945500373840332
    8. '   ' → logprob: -7.945500373840332
    9. ' edges' → logprob: -8.820500373840332
    10. 'G' → logprob: -8.945500373840332

Token 206: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004317841492593288
    2. ' =' → logprob: -5.504317760467529
    3. '=' → logprob: -9.254318237304688
    4. '   ' → logprob: -10.254318237304688
    5. ' s' → logprob: -10.504318237304688
    6. '[]' → logprob: -10.879318237304688
    7. 'List' → logprob: -10.879318237304688
    8. '_list' → logprob: -11.504318237304688
    9. '[s' → logprob: -11.754318237304688
    10. ' ' → logprob: -12.004318237304688

Token 207: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07891710847616196
    2. ' [[]' → logprob: -2.5789170265197754
    3. ' [' → logprob: -10.578917503356934
    4. '   ' → logprob: -14.203917503356934
    5. '[]' → logprob: -14.828917503356934
    6. '[N' → logprob: -15.203917503356934
    7. 'default' → logprob: -15.578917503356934
    8. '[[' → logprob: -15.828917503356934
    9. ' defaultdict' → logprob: -17.078916549682617
    10. '{' → logprob: -17.078916549682617

Token 208: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05770985037088394
    2. ' for' → logprob: -2.9327099323272705
    3. ')' → logprob: -6.682709693908691
    4. ']' → logprob: -7.557709693908691
    5. '(N' → logprob: -7.557709693908691
    6. ',' → logprob: -8.807709693908691
    7. '   ' → logprob: -9.182709693908691
    8. 'N' → logprob: -9.557709693908691
    9. '
' → logprob: -9.932709693908691
    10. '[N' → logprob: -10.057709693908691

Token 209: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47941854596138
    2. 'range' → logprob: -1.6044185161590576
    3. ' range' → logprob: -1.7294185161590576
    4. ' _' → logprob: -6.479418754577637
    5. 'i' → logprob: -8.354418754577637
    6. '_range' → logprob: -8.479418754577637
    7. 'in' → logprob: -8.479418754577637
    8. '(range' → logprob: -9.479418754577637
    9. ' in' → logprob: -9.729418754577637
    10. ' ' → logprob: -9.979418754577637

Token 210: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0017089712200686336
    2. 'in' → logprob: -6.501708984375
    3. ' range' → logprob: -8.501708984375
    4. ' in' → logprob: -12.751708984375
    5. '_' → logprob: -15.251708984375
    6. '(range' → logprob: -15.501708984375
    7. 'N' → logprob: -17.126708984375
    8. ' ' → logprob: -17.376708984375
    9. ')' → logprob: -18.001708984375
    10. '  ' → logprob: -18.251708984375

Token 211: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.875431060791016
    4. '
' → logprob: -18.125431060791016
    5. ' ' → logprob: -19.250431060791016
    6. '(range' → logprob: -19.500431060791016
    7. '	range' → logprob: -19.750431060791016
    8. '  ' → logprob: -20.000431060791016
    9. 'rang' → logprob: -20.500431060791016
    10. '```' → logprob: -20.625431060791016

Token 212: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3868945837020874
    2. '(N' → logprob: -1.1368945837020874
    3. ' N' → logprob: -11.261894226074219
    4. '   ' → logprob: -12.136894226074219
    5. '(' → logprob: -12.511894226074219
    6. '	N' → logprob: -13.761894226074219
    7. ' (' → logprob: -14.886894226074219
    8. ')' → logprob: -16.13689422607422
    9. ',N' → logprob: -16.76189422607422
    10. '
' → logprob: -17.13689422607422

Token 213: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00017982252757064998
    2. '   ' → logprob: -8.8751802444458
    3. ')' → logprob: -10.5001802444458
    4. ' )' → logprob: -12.6251802444458
    5. ')]
' → logprob: -12.6251802444458
    6. ']' → logprob: -13.5001802444458
    7. ')],' → logprob: -14.0001802444458
    8. ')])' → logprob: -14.3751802444458
    9. '       ' → logprob: -14.6251802444458
    10. '])]' → logprob: -14.7501802444458

Token 214: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14797356724739075
    2. '   ' → logprob: -2.0229735374450684
    3. ' for' → logprob: -5.272973537445068
    4. '	for' → logprob: -9.022974014282227
    5. '
' → logprob: -10.897974014282227
    6. '    
' → logprob: -12.022974014282227
    7. '```' → logprob: -12.772974014282227
    8. ' ' → logprob: -13.147974014282227
    9. 'i' → logprob: -13.272974014282227
    10. '  ' → logprob: -13.522974014282227

Token 215: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004992394242435694
    2. '   ' → logprob: -5.504992485046387
    3. ' for' → logprob: -7.004992485046387
    4. '	for' → logprob: -12.254992485046387
    5. '
' → logprob: -13.879992485046387
    6. '    
' → logprob: -15.004992485046387
    7. ' ' → logprob: -17.12999153137207
    8. ' 
' → logprob: -17.62999153137207
    9. 'i' → logprob: -17.75499153137207
    10. '```' → logprob: -18.12999153137207

Token 216: ' Read' (ID: 5405)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00011331788846291602
    2. ' for' → logprob: -9.125113487243652
    3. '   ' → logprob: -12.375113487243652
    4. '	for' → logprob: -16.750112533569336
    5. 'For' → logprob: -16.750112533569336
    6. '
' → logprob: -17.750112533569336
    7. 'range' → logprob: -18.750112533569336
    8. 'from' → logprob: -19.750112533569336
    9. 'fo' → logprob: -20.000112533569336
    10. '#' → logprob: -20.125112533569336

Token 217: ' tree' (ID: 8165)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.8580885529518127
    2. 'N' → logprob: -1.233088493347168
    3. ' for' → logprob: -2.983088493347168
    4. 'range' → logprob: -3.108088493347168
    5. ' range' → logprob: -3.108088493347168
    6. ' _' → logprob: -3.483088493347168
    7. ' edges' → logprob: -3.483088493347168
    8. '   ' → logprob: -3.483088493347168
    9. '_' → logprob: -3.858088493347168
    10. 'for' → logprob: -4.108088493347168

Token 218: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.10876493155956268
    2. '   ' → logprob: -2.983764886856079
    3. 'edges' → logprob: -3.608764886856079
    4. 'for' → logprob: -4.608765125274658
    5. '_edges' → logprob: -4.858765125274658
    6. ' for' → logprob: -5.233765125274658
    7. '
' → logprob: -6.608765125274658
    8. ' lines' → logprob: -8.6087646484375
    9. 'Edges' → logprob: -8.6087646484375
    10. '(edges' → logprob: -9.2337646484375

Token 219: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.123943030834198
    2. '   ' → logprob: -2.6239430904388428
    3. ' for' → logprob: -3.1239430904388428
    4. '
' → logprob: -10.373943328857422
    5. '	for' → logprob: -10.748943328857422
    6. '    
' → logprob: -11.248943328857422
    7. ' 
' → logprob: -14.248943328857422
    8. ' ' → logprob: -14.248943328857422
    9. 'i' → logprob: -14.498943328857422
    10. '  
' → logprob: -14.748943328857422

Token 220: ' build' (ID: 3024)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6260505318641663
    2. 'for' → logprob: -1.0010504722595215
    3. '   ' → logprob: -2.6260504722595215
    4. '    ' → logprob: -4.3760504722595215
    5. ' i' → logprob: -5.0010504722595215
    6. ' ' → logprob: -6.3760504722595215
    7. 'i' → logprob: -6.5010504722595215
    8. ')' → logprob: -7.8760504722595215
    9. '	for' → logprob: -8.00105094909668
    10. '    
' → logprob: -8.25105094909668

Token 221: ' adjacency' (ID: 177015)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.7650301456451416
    2. ' the' → logprob: -1.7650301456451416
    3. ' Edge' → logprob: -1.8900301456451416
    4. 'the' → logprob: -2.5150301456451416
    5. ' adjacency' → logprob: -2.8900301456451416
    6. '   ' → logprob: -3.8900301456451416
    7. ' edges' → logprob: -4.1400299072265625
    8. ' for' → logprob: -4.3900299072265625
    9. 'for' → logprob: -4.6400299072265625
    10. 'graph' → logprob: -4.8900299072265625

Token 222: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.22754572331905365
    2. ' lists' → logprob: -2.102545738220215
    3. ' list' → logprob: -2.852545738220215
    4. 'lists' → logprob: -3.852545738220215
    5. '_list' → logprob: -6.727545738220215
    6. '   ' → logprob: -6.977545738220215
    7. '
' → logprob: -9.102545738220215
    8. 'List' → logprob: -9.602545738220215
    9. ' ' → logprob: -10.352545738220215
    10. 'for' → logprob: -10.352545738220215

Token 223: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4575880467891693
    2. 'for' → logprob: -1.5825880765914917
    3. ' for' → logprob: -1.8325880765914917
    4. '
' → logprob: -7.457588195800781
    5. '	for' → logprob: -7.707588195800781
    6. '    
' → logprob: -7.707588195800781
    7. ' ' → logprob: -9.707588195800781
    8. 'i' → logprob: -10.082588195800781
    9. '  
' → logprob: -10.207588195800781
    10. '       ' → logprob: -11.082588195800781

Token 224: 'convert' (ID: 26285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3950048685073853
    2. ' range' → logprob: -1.7700048685073853
    3. 'for' → logprob: -1.8950048685073853
    4. '   ' → logprob: -2.0200047492980957
    5. ' for' → logprob: -2.1450047492980957
    6. 'range' → logprob: -2.3950047492980957
    7. 'i' → logprob: -3.1450047492980957
    8. ' _' → logprob: -3.7700047492980957
    9. ' i' → logprob: -4.520004749298096
    10. ')' → logprob: -5.270004749298096

Token 225: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.43808838725090027
    2. '(' → logprob: -2.1880884170532227
    3. ' ' → logprob: -2.5630884170532227
    4. '(u' → logprob: -3.6880884170532227
    5. ' edges' → logprob: -3.8130884170532227
    6. '(i' → logprob: -3.9380884170532227
    7. '   ' → logprob: -4.063088417053223
    8. 'to' → logprob: -4.188088417053223
    9. '(
' → logprob: -5.313088417053223
    10. 'from' → logprob: -5.313088417053223

Token 226: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4561487138271332
    2. ' zero' → logprob: -1.2061487436294556
    3. ' ' → logprob: -2.956148624420166
    4. 'zero' → logprob: -4.206148624420166
    5. '   ' → logprob: -11.831149101257324
    6. '-zero' → logprob: -14.581149101257324
    7. '_zero' → logprob: -14.956149101257324
    8. 'int' → logprob: -14.956149101257324
    9. '    ' → logprob: -15.081149101257324
    10. '  ' → logprob: -15.331149101257324

Token 227: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024124106392264366
    2. 'int' → logprob: -4.1491241455078125
    3. 'zero' → logprob: -4.8991241455078125
    4. ' zero' → logprob: -8.274124145507812
    5. 'i' → logprob: -8.899124145507812
    6. ' ' → logprob: -9.274124145507812
    7. '-' → logprob: -10.524124145507812
    8. 'z' → logprob: -10.774124145507812
    9. '   ' → logprob: -11.399124145507812
    10. 'range' → logprob: -11.649124145507812

Token 228: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.049704693257808685
    2. '-' → logprob: -3.2997047901153564
    3. ')-' → logprob: -4.924704551696777
    4. '-index' → logprob: -6.799704551696777
    5. 'based' → logprob: -6.924704551696777
    6. ')' → logprob: -7.049704551696777
    7. '-base' → logprob: -7.799704551696777
    8. ' -' → logprob: -8.299704551696777
    9. ']-' → logprob: -8.299704551696777
    10. '_based' → logprob: -8.799704551696777

Token 229: ' indexing' (ID: 105989)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.061833105981349945
    2. ' indexing' → logprob: -3.686833143234253
    3. 'indices' → logprob: -4.186832904815674
    4. ' indices' → logprob: -4.186832904815674
    5. 'index' → logprob: -5.936832904815674
    6. ')
' → logprob: -6.811832904815674
    7. ' )' → logprob: -7.811832904815674
    8. ')

' → logprob: -9.436833381652832
    9. ' index' → logprob: -9.561833381652832
    10. '):
' → logprob: -9.561833381652832

Token 230: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3322840631008148
    2. ')
' → logprob: -1.8322840929031372
    3. '   ' → logprob: -2.2072839736938477
    4. 'for' → logprob: -5.082283973693848
    5. ' for' → logprob: -5.332283973693848
    6. '):' → logprob: -7.207283973693848
    7. '):
' → logprob: -7.582283973693848
    8. ')
' → logprob: -9.082283973693848
    9. '       ' → logprob: -10.082283973693848
    10. ' )' → logprob: -10.457283973693848

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35214200615882874
    2. ' for' → logprob: -1.6021419763565063
    3. 'for' → logprob: -2.352142095565796
    4. '
' → logprob: -9.477142333984375
    5. '	for' → logprob: -9.477142333984375
    6. '    
' → logprob: -10.602142333984375
    7. ' ' → logprob: -12.602142333984375
    8. ' 
' → logprob: -12.852142333984375
    9. '    ' → logprob: -13.227142333984375
    10. '```' → logprob: -13.477142333984375

Token 232: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06051679700613022
    2. ' for' → logprob: -3.060516834259033
    3. '   ' → logprob: -4.435516834259033
    4. '	for' → logprob: -12.185516357421875
    5. '
' → logprob: -12.685516357421875
    6. ' ' → logprob: -14.435516357421875
    7. '    
' → logprob: -15.435516357421875
    8. ' 
' → logprob: -15.685516357421875
    9. 'i' → logprob: -15.810516357421875
    10. '    ' → logprob: -15.935516357421875

Token 233: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.20275089144706726
    2. ' _' → logprob: -1.7027509212493896
    3. ' range' → logprob: -6.9527506828308105
    4. ' i' → logprob: -8.077751159667969
    5. ' ' → logprob: -10.827751159667969
    6. 'i' → logprob: -10.952751159667969
    7. 'range' → logprob: -11.077751159667969
    8. ' in' → logprob: -11.327751159667969
    9. '_range' → logprob: -13.077751159667969
    10. '_i' → logprob: -13.202751159667969

Token 234: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.42956504225730896
    2. ' in' → logprob: -1.0545650720596313
    3. ' ' → logprob: -7.429564952850342
    4. 'range' → logprob: -9.1795654296875
    5. 'i' → logprob: -9.6795654296875
    6. '  ' → logprob: -10.5545654296875
    7. 'import' → logprob: -10.6795654296875
    8. '(' → logprob: -11.4295654296875
    9. '   ' → logprob: -11.5545654296875
    10. ' i' → logprob: -11.5545654296875

Token 235: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001504982472397387
    2. ' range' → logprob: -6.501504898071289
    3. '(range' → logprob: -14.626504898071289
    4. ' ' → logprob: -15.126504898071289
    5. 'r' → logprob: -15.251504898071289
    6. '	range' → logprob: -15.251504898071289
    7. '   ' → logprob: -15.376504898071289
    8. 'rang' → logprob: -15.501504898071289
    9. 'ange' → logprob: -15.626504898071289
    10. 'ran' → logprob: -16.00150489807129

Token 236: '(N' (ID: 10564)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.13047441840171814
    2. 'N' → logprob: -2.255474328994751
    3. '(N' → logprob: -4.13047456741333
    4. ' (' → logprob: -7.50547456741333
    5. ' ' → logprob: -8.005474090576172
    6. '(' → logprob: -8.505474090576172
    7. '   ' → logprob: -8.755474090576172
    8. '1' → logprob: -9.005474090576172
    9. ' range' → logprob: -10.880474090576172
    10. '  ' → logprob: -11.880474090576172

Token 237: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00989172700792551
    2. ' -' → logprob: -4.634891510009766
    3. ')' → logprob: -9.384891510009766
    4. '1' → logprob: -10.259891510009766
    5. '   ' → logprob: -11.759891510009766
    6. ')-' → logprob: -13.384891510009766
    7. '):
' → logprob: -13.509891510009766
    8. ' ' → logprob: -13.509891510009766
    9. '-)' → logprob: -13.634891510009766
    10. '-
' → logprob: -13.759891510009766

Token 238: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00975809432566166
    2. ' ' → logprob: -4.634757995605469
    3. '<|end|>' → logprob: -13.509757995605469
    4. '2' → logprob: -15.384757995605469
    5. ')' → logprob: -15.759757995605469
    6. '   ' → logprob: -16.13475799560547
    7. 'import' → logprob: -16.44725799560547
    8. '```' → logprob: -16.50975799560547
    9. '<|end|>' → logprob: -17.07225799560547
    10. '0' → logprob: -17.88475799560547

Token 239: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. ')' → logprob: -17.6250057220459
    4. '
' → logprob: -18.6250057220459
    5. '2' → logprob: -19.2500057220459
    6. '   ' → logprob: -19.6250057220459
    7. '```' → logprob: -20.0000057220459
    8. '１' → logprob: -20.1250057220459
    9. '۱' → logprob: -20.2500057220459
    10. 'import' → logprob: -20.7500057220459

Token 240: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.10044173151254654
    2. '):' → logprob: -2.3504416942596436
    3. '   ' → logprob: -9.100441932678223
    4. '):
' → logprob: -9.350441932678223
    5. ':
' → logprob: -11.475441932678223
    6. ':' → logprob: -11.725441932678223
    7. ')' → logprob: -11.850441932678223
    8. ' ):
' → logprob: -12.100441932678223
    9. ' ):' → logprob: -13.725441932678223
    10. '):

' → logprob: -13.850441932678223

Token 241: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.060111403465271
    2. 'u' → logprob: -1.185111403465271
    3. ' u' → logprob: -1.560111403465271
    4. '   ' → logprob: -2.0601115226745605
    5. ' line' → logprob: -4.8101115226745605
    6. 'a' → logprob: -7.1851115226745605
    7. ' a' → logprob: -7.1851115226745605
    8. 'line' → logprob: -8.185111045837402
    9. '	u' → logprob: -8.935111045837402
    10. ' l' → logprob: -9.435111045837402

Token 242: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.11326894164085388
    2. 'a' (adapté à ' a') → logprob: -2.3632688522338867
    3. ' u' → logprob: -4.488268852233887
    4. '   ' → logprob: -7.238268852233887
    5. ' a' → logprob: -7.488268852233887
    6. 'x' → logprob: -8.363268852233887
    7. 'v' → logprob: -8.738268852233887
    8. ' ' → logprob: -11.238268852233887
    9. 'l' → logprob: -11.488268852233887
    10. 's' → logprob: -11.738268852233887

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1005331501364708
    2. ' ,' → logprob: -2.3505332469940186
    3. '_,' → logprob: -8.350533485412598
    4. ',b' → logprob: -10.100533485412598
    5. ',a' → logprob: -10.600533485412598
    6. ',
' → logprob: -12.475533485412598
    7. ',int' → logprob: -12.725533485412598
    8. 'a' → logprob: -12.850533485412598
    9. ',_' → logprob: -12.850533485412598
    10. ',input' → logprob: -12.850533485412598

Token 244: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.1602402776479721
    2. ' b' → logprob: -1.9102402925491333
    3. ' ' → logprob: -11.160240173339844
    4. ' 
' → logprob: -13.535240173339844
    5. ' ' → logprob: -15.160240173339844
    6. 'space' → logprob: -16.285240173339844
    7. 'c' → logprob: -17.410240173339844
    8. '  
' → logprob: -17.535240173339844
    9. '  ' → logprob: -17.660240173339844
    10. '	b' → logprob: -17.660240173339844

Token 245: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193077325820923
    2. '=' → logprob: -1.5019307136535645
    3. '   ' → logprob: -14.501931190490723
    4. '=input' → logprob: -15.126931190490723
    5. ')' → logprob: -15.501931190490723
    6. '    ' → logprob: -16.126930236816406
    7. ',' → logprob: -16.251930236816406
    8. ' ' → logprob: -16.376930236816406
    9. ' =
' → logprob: -16.376930236816406
    10. '＝' → logprob: -16.751930236816406

Token 246: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.16026383638381958
    2. 'map' → logprob: -1.9102637767791748
    3. ' [' → logprob: -11.285264015197754
    4. ' list' → logprob: -11.660264015197754
    5. '[' → logprob: -11.910264015197754
    6. ' input' → logprob: -12.410264015197754
    7. 'list' → logprob: -13.035264015197754
    8. '   ' → logprob: -13.285264015197754
    9. ' ' → logprob: -13.785264015197754
    10. 'input' → logprob: -13.910264015197754

Token 247: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.009331130422651768
    2. '(input' → logprob: -4.884331226348877
    3. 'int' → logprob: -6.634331226348877
    4. '(' → logprob: -8.134330749511719
    5. 'input' → logprob: -9.509330749511719
    6. '(lambda' → logprob: -10.884330749511719
    7. '(str' → logprob: -11.259330749511719
    8. '<int' → logprob: -12.884330749511719
    9. '```' → logprob: -13.759330749511719
    10. ' (' → logprob: -13.884330749511719

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14725002646446228
    2. ',input' → logprob: -2.272249937057495
    3. '(),' → logprob: -4.147250175476074
    4. '(input' → logprob: -4.522250175476074
    5. '   ' → logprob: -6.272250175476074
    6. 'input' → logprob: -6.397250175476074
    7. '(' → logprob: -6.647250175476074
    8. ' ,' → logprob: -6.772250175476074
    9. '().' → logprob: -7.522250175476074
    10. '()' → logprob: -9.022250175476074

Token 249: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023245712742209435
    2. ' input' → logprob: -3.7732458114624023
    3. 'sys' → logprob: -15.898245811462402
    4. ' sys' → logprob: -18.023244857788086
    5. '(input' → logprob: -18.398244857788086
    6. '=input' → logprob: -18.523244857788086
    7. ' ' → logprob: -19.023244857788086
    8. ')' → logprob: -19.273244857788086
    9. ',input' → logprob: -19.273244857788086
    10. '	input' → logprob: -19.648244857788086

Token 250: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.4736459888808895e-05
    2. '.strip' → logprob: -12.250014305114746
    3. '()' → logprob: -12.375014305114746
    4. '   ' → logprob: -13.125014305114746
    5. '.readline' → logprob: -13.250014305114746
    6. '()[' → logprob: -15.000014305114746
    7. '()
' → logprob: -15.000014305114746
    8. '(' → logprob: -15.375014305114746
    9. '.split' → logprob: -15.375014305114746
    10. ')' → logprob: -15.750014305114746

Token 251: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.006720229052007198
    2. 'strip' → logprob: -5.006720066070557
    3. 'rstrip' → logprob: -12.256720542907715
    4. ' split' → logprob: -16.6317195892334
    5. '(split' → logprob: -18.1317195892334
    6. 'read' → logprob: -18.2567195892334
    7. '.split' → logprob: -19.1317195892334
    8. 'spl' → logprob: -19.1317195892334
    9. '().' → logprob: -19.6317195892334
    10. ' strip' → logprob: -20.1317195892334

Token 252: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3423358201980591
    2. '())
' → logprob: -1.842335820198059
    3. ')' → logprob: -2.0923357009887695
    4. ')
' → logprob: -5.0923357009887695
    5. '()' → logprob: -6.4673357009887695
    6. '()
' → logprob: -8.46733570098877
    7. '(' → logprob: -9.84233570098877
    8. '())
' → logprob: -10.96733570098877
    9. ' )' → logprob: -11.46733570098877
    10. '   ' → logprob: -11.59233570098877

Token 253: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10805598646402359
    2. 'a' → logprob: -3.10805606842041
    3. ' a' → logprob: -3.60805606842041
    4. '        
' → logprob: -4.35805606842041
    5. '<|end|>' → logprob: -5.23305606842041
    6. '   ' → logprob: -5.73305606842041
    7. ')' → logprob: -5.85805606842041
    8. '
' → logprob: -6.10805606842041
    9. ' 
' → logprob: -6.60805606842041
    10. '    
' → logprob: -7.10805606842041

Token 254: ' Edge' (ID: 16396)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.062792107462883
    2. ' a' → logprob: -2.9377920627593994
    3. '   ' → logprob: -5.4377923011779785
    4. 'Edge' (adapté à ' Edge') → logprob: -6.1877923011779785
    5. '       ' → logprob: -7.0627923011779785
    6. ' Edge' → logprob: -7.4377923011779785
    7. '	a' → logprob: -10.68779182434082
    8. ' ' → logprob: -12.81279182434082
    9. '    ' → logprob: -14.06279182434082
    10. '  ' → logprob: -14.06279182434082

Token 255: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.0339031834737398e-05
    2. '[' → logprob: -11.375020027160645
    3. 'a' → logprob: -12.625020027160645
    4. '   ' → logprob: -12.750020027160645
    5. '[b' → logprob: -13.125020027160645
    6. ' [' → logprob: -15.125020027160645
    7. '       ' → logprob: -16.62502098083496
    8. '[int' → logprob: -17.12502098083496
    9. '```' → logprob: -17.12502098083496
    10. '[
' → logprob: -17.25002098083496

Token 256: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3971621096134186
    2. '[' → logprob: -1.1471620798110962
    3. ' -' → logprob: -5.647161960601807
    4. '[a' → logprob: -5.647161960601807
    5. 'a' → logprob: -6.772161960601807
    6. '   ' → logprob: -7.647161960601807
    7. '[-' → logprob: -7.647161960601807
    8. '1' → logprob: -7.647161960601807
    9. '[i' → logprob: -9.022162437438965
    10. '[
' → logprob: -9.272162437438965

Token 257: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2378600735682994e-05
    2. ' ' → logprob: -10.375032424926758
    3. '<|end|>' → logprob: -14.375032424926758
    4. '2' → logprob: -15.625032424926758
    5. '   ' → logprob: -16.500032424926758
    6. '```' → logprob: -16.812532424926758
    7. 'to' → logprob: -17.375032424926758
    8. '<|end|>' → logprob: -17.375032424926758
    9. '`' → logprob: -17.437532424926758
    10. '0' → logprob: -17.500032424926758

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. '2' → logprob: -15.12501335144043
    4. '   ' → logprob: -16.37501335144043
    5. '```' → logprob: -17.25001335144043
    6. '<|end|>' → logprob: -17.50001335144043
    7. ')' → logprob: -18.37501335144043
    8. '0' → logprob: -18.43751335144043
    9. '  ' → logprob: -18.93751335144043
    10. 'to' → logprob: -19.31251335144043

Token 259: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -4.429896944202483e-05
    2. ').' → logprob: -11.000043869018555
    3. ']' → logprob: -11.500043869018555
    4. '.append' → logprob: -11.625043869018555
    5. ' ].' → logprob: -12.125043869018555
    6. '.' → logprob: -12.875043869018555
    7. '   ' → logprob: -15.625043869018555
    8. '.app' → logprob: -17.000043869018555
    9. ''].' → logprob: -17.250043869018555
    10. ')].' → logprob: -17.375043869018555

Token 260: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. ' append' → logprob: -15.625
    3. '.append' → logprob: -16.875
    4. 'appen' → logprob: -17.5
    5. 'app' → logprob: -18.75
    6. '	append' → logprob: -19.375
    7. '_append' → logprob: -19.875
    8. 'Append' → logprob: -20.125
    9. 'push' → logprob: -22.25
    10. 'add' → logprob: -23.25

Token 261: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16045179963111877
    2. '(b' → logprob: -1.9104517698287964
    3. ' b' → logprob: -8.410451889038086
    4. '(' → logprob: -12.660451889038086
    5. '	b' → logprob: -14.035451889038086
    6. '(
' → logprob: -14.535451889038086
    7. ' (' → logprob: -14.535451889038086
    8. ')b' → logprob: -16.160451889038086
    9. '   ' → logprob: -16.910451889038086
    10. '[b' → logprob: -19.410451889038086

Token 262: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.04301837086677551
    2. '-' → logprob: -3.168018341064453
    3. '   ' → logprob: -12.168018341064453
    4. '[' → logprob: -12.168018341064453
    5. ' ' → logprob: -12.418018341064453
    6. ')' → logprob: -12.668018341064453
    7. '<|end|>' → logprob: -14.543018341064453
    8. '<|end|>' → logprob: -15.793018341064453
    9. ' -=' → logprob: -16.168018341064453
    10. '1' → logprob: -16.168018341064453

Token 263: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028095098678022623
    2. ' ' → logprob: -5.877809524536133
    3. '2' → logprob: -12.877809524536133
    4. '   ' → logprob: -13.752809524536133
    5. '```' → logprob: -15.190309524536133
    6. '<|end|>' → logprob: -15.877809524536133
    7. ')' → logprob: -15.940309524536133
    8. '
' → logprob: -16.690309524536133
    9. ',' → logprob: -16.940309524536133
    10. '0' → logprob: -17.002809524536133

Token 264: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001363168703392148
    2. '2' → logprob: -9.250136375427246
    3. ' ' → logprob: -10.125136375427246
    4. '   ' → logprob: -16.87513542175293
    5. '```' → logprob: -17.43763542175293
    6. ')' → logprob: -17.87513542175293
    7. '-' → logprob: -18.06263542175293
    8. '۱' → logprob: -18.18763542175293
    9. '11' → logprob: -18.18763542175293
    10. '<|end|>' → logprob: -18.43763542175293

Token 265: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04873690754175186
    2. ')
' → logprob: -3.298736810684204
    3. '       ' → logprob: -4.548737049102783
    4. ' )' → logprob: -10.298736572265625
    5. '<|end|>' → logprob: -11.923736572265625
    6. ' )
' → logprob: -12.423736572265625
    7. '   ' → logprob: -12.548736572265625
    8. ')
' → logprob: -12.798736572265625
    9. '),' → logprob: -13.173736572265625
    10. '[' → logprob: -13.298736572265625

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001820481731556356
    2. ' Edge' → logprob: -6.7518205642700195
    3. 'Edge' → logprob: -7.5018205642700195
    4. '   ' → logprob: -10.00182056427002
    5. '	' → logprob: -10.62682056427002
    6. '<Edge' → logprob: -11.62682056427002
    7. ' ' → logprob: -12.50182056427002
    8. '      ' → logprob: -12.87682056427002
    9. '<|end|>' → logprob: -13.12682056427002
    10. '           ' → logprob: -13.12682056427002

Token 267: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' (adapté à ' Edge') → logprob: -0.21824567019939423
    2. ' Edge' → logprob: -1.7182456254959106
    3. '       ' → logprob: -4.093245506286621
    4. '   ' → logprob: -12.968245506286621
    5. '.Edge' → logprob: -13.593245506286621
    6. '<Edge' → logprob: -14.093245506286621
    7. '_edge' → logprob: -14.343245506286621
    8. '           ' → logprob: -15.468245506286621
    9. '        ' → logprob: -15.468245506286621
    10. '      ' → logprob: -15.468245506286621

Token 268: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.375
    3. '[a' → logprob: -15.875
    4. 'b' → logprob: -17.0
    5. '   ' → logprob: -18.0
    6. ' [' → logprob: -18.0
    7. '```' → logprob: -20.75
    8. '       ' → logprob: -20.875
    9. '[
' → logprob: -21.125
    10. '[(' → logprob: -21.875

Token 269: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026802031323313713
    2. '-' → logprob: -3.6518020629882812
    3. '[' → logprob: -7.651802062988281
    4. ' ' → logprob: -11.026802062988281
    5. '[-' → logprob: -12.776802062988281
    6. '   ' → logprob: -13.026802062988281
    7. ' [' → logprob: -13.526802062988281
    8. ')' → logprob: -14.276802062988281
    9. 'def' → logprob: -14.276802062988281
    10. '<|end|>' → logprob: -14.526802062988281

Token 270: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043233807082287967
    2. ' ' → logprob: -7.75043249130249
    3. '   ' → logprob: -14.500432014465332
    4. '<|end|>' → logprob: -14.937932014465332
    5. '```' → logprob: -15.250432014465332
    6. '<|end|>' → logprob: -16.62543296813965
    7. '2' → logprob: -17.12543296813965
    8. '>' → logprob: -17.25043296813965
    9. '[' → logprob: -17.31293296813965
    10. ')' → logprob: -17.37543296813965

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.897412822581828e-05
    2. ' ' → logprob: -9.625068664550781
    3. '   ' → logprob: -14.062568664550781
    4. '2' → logprob: -14.875068664550781
    5. '```' → logprob: -14.937568664550781
    6. '<|end|>' → logprob: -15.250068664550781
    7. '-' → logprob: -16.12506866455078
    8. '>' → logprob: -16.31256866455078
    9. 'b' → logprob: -16.37506866455078
    10. '[' → logprob: -16.62506866455078

Token 272: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0005208624061197042
    2. ').' → logprob: -8.250520706176758
    3. '.append' → logprob: -8.625520706176758
    4. ' ].' → logprob: -10.125520706176758
    5. '.' → logprob: -11.125520706176758
    6. '       ' → logprob: -11.750520706176758
    7. ']' → logprob: -11.875520706176758
    8. ' .' → logprob: -12.125520706176758
    9. '   ' → logprob: -12.875520706176758
    10. '}.' → logprob: -14.625520706176758

Token 273: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -8.537868779967539e-06
    2. ' append' → logprob: -11.750008583068848
    3. '.append' → logprob: -15.750008583068848
    4. '[a' → logprob: -16.00000762939453
    5. 'Append' → logprob: -16.25000762939453
    6. 'add' → logprob: -16.62500762939453
    7. '[' → logprob: -17.25000762939453
    8. 'a' → logprob: -17.62500762939453
    9. '_append' → logprob: -17.62500762939453
    10. 'appen' → logprob: -17.87500762939453

Token 274: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -9.329167369287461e-05
    2. 'a' → logprob: -9.375093460083008
    3. '(' → logprob: -11.875093460083008
    4. ' a' → logprob: -14.375093460083008
    5. ' (' → logprob: -14.625093460083008
    6. '(
' → logprob: -14.875093460083008
    7. '	a' → logprob: -17.500093460083008
    8. '   ' → logprob: -17.750093460083008
    9. '[a' → logprob: -18.000093460083008
    10. ')a' → logprob: -18.500093460083008

Token 275: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3900911509990692
    2. '-' → logprob: -1.1400911808013916
    3. '[' → logprob: -5.7650909423828125
    4. ' ' → logprob: -10.265090942382812
    5. ')' → logprob: -10.765090942382812
    6. '   ' → logprob: -11.765090942382812
    7. '[-' → logprob: -12.890090942382812
    8. '1' → logprob: -12.890090942382812
    9. ' [' → logprob: -13.140090942382812
    10. '       ' → logprob: -13.140090942382812

Token 276: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009756443090736866
    2. ' ' → logprob: -4.634756565093994
    3. '   ' → logprob: -15.697256088256836
    4. '0' → logprob: -16.634756088256836
    5. '2' → logprob: -16.822256088256836
    6. '```' → logprob: -16.822256088256836
    7. '１' → logprob: -16.884756088256836
    8. ' ' → logprob: -16.947256088256836
    9. ')' → logprob: -16.947256088256836
    10. '-' → logprob: -17.572256088256836

Token 277: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. ')' → logprob: -17.12500762939453
    4. '   ' → logprob: -17.62500762939453
    5. '```' → logprob: -17.81250762939453
    6. '-' → logprob: -17.87500762939453
    7. '１' → logprob: -18.12500762939453
    8. '۱' → logprob: -18.50000762939453
    9. '0' → logprob: -19.18750762939453
    10. '2' → logprob: -19.31250762939453

Token 278: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006894402904435992
    2. '<|end|>' → logprob: -7.375689506530762
    3. ')
' → logprob: -10.000689506530762
    4. '
' → logprob: -12.000689506530762
    5. '<|end|>' → logprob: -12.875689506530762
    6. ' )' → logprob: -12.875689506530762
    7. '```' → logprob: -13.500689506530762
    8. ')return' → logprob: -13.875689506530762
    9. '   ' → logprob: -14.375689506530762
    10. '       ' → logprob: -15.000689506530762

Token 279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18033286929130554
    2. 'colors' → logprob: -2.305332899093628
    3. '    
' → logprob: -3.555332899093628
    4. '
' → logprob: -3.680332899093628
    5. '```' → logprob: -4.930332660675049
    6. '#' → logprob: -6.305332660675049
    7. ' colors' → logprob: -6.805332660675049
    8. 'c' → logprob: -8.180333137512207
    9. 'color' → logprob: -8.180333137512207
    10. '  
' → logprob: -9.180333137512207

Token 280: ' #' (ID: 1069)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.07552322000265121
    2. 'color' → logprob: -3.5755231380462646
    3. '#' (adapté à ' #') → logprob: -3.7005231380462646
    4. 'C' → logprob: -5.075523376464844
    5. 'vals' → logprob: -6.200523376464844
    6. 'K' → logprob: -6.325523376464844
    7. 'c' → logprob: -6.575523376464844
    8. 'values' → logprob: -6.575523376464844
    9. 'available' → logprob: -6.575523376464844
    10. 'col' → logprob: -6.825523376464844

Token 281: ' Read' (ID: 5405)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.1567867398262024
    2. 'color' → logprob: -2.7817866802215576
    3. 'vals' → logprob: -3.7817866802215576
    4. 'C' → logprob: -3.9067866802215576
    5. 'col' → logprob: -4.781786918640137
    6. 'c' → logprob: -4.906786918640137
    7. 'values' → logprob: -5.406786918640137
    8. 'K' → logprob: -5.781786918640137
    9. '#' → logprob: -6.406786918640137
    10. 'available' → logprob: -6.406786918640137

Token 282: ' colors' (ID: 10803)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.20843975245952606
    2. 'vals' → logprob: -2.708439826965332
    3. 'values' → logprob: -3.458439826965332
    4. 'color' → logprob: -4.083439826965332
    5. 'c' → logprob: -4.333439826965332
    6. 'C' → logprob: -4.333439826965332
    7. ' colors' → logprob: -4.708439826965332
    8. 'V' → logprob: -5.208439826965332
    9. 'arr' → logprob: -5.333439826965332
    10. 'A' → logprob: -5.458439826965332

Token 283: '/' (ID: 14)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25686582922935486
    2. '=' → logprob: -1.8818658590316772
    3. '   ' → logprob: -2.7568657398223877
    4. 'colors' → logprob: -4.631865978240967
    5. ' colors' → logprob: -7.881865978240967
    6. '=color' → logprob: -9.131865501403809
    7. 'vals' → logprob: -9.631865501403809
    8. '/colors' → logprob: -9.881865501403809
    9. '_colors' → logprob: -10.006865501403809
    10. 's' → logprob: -10.131865501403809

Token 284: 'values' (ID: 7222)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.08401274681091309
    2. 'values' → logprob: -2.584012746810913
    3. ' colors' → logprob: -6.459012985229492
    4. ' vals' → logprob: -6.584012985229492
    5. 'vals' → logprob: -7.084012985229492
    6. 'colors' → logprob: -8.209012985229492
    7. ' list' → logprob: -8.584012985229492
    8. ' value' → logprob: -9.209012985229492
    9. ' color' → logprob: -9.334012985229492
    10. ' data' → logprob: -9.709012985229492

Token 285: ',' (ID: 11)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.2794826626777649
    2. 'C' → logprob: -2.77948260307312
    3. ' colors' → logprob: -3.02948260307312
    4. '   ' → logprob: -3.52948260307312
    5. 'c' → logprob: -3.52948260307312
    6. 'color' → logprob: -4.404482841491699
    7. ' =' → logprob: -4.529482841491699
    8. 'vals' → logprob: -4.654482841491699
    9. 'V' → logprob: -5.404482841491699
    10. ' C' → logprob: -5.529482841491699

Token 286: ' convert' (ID: 8452)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.5357723832130432
    2. 'C' → logprob: -2.6607723236083984
    3. ' colors' → logprob: -2.7857723236083984
    4. 'c' → logprob: -3.1607723236083984
    5. 'color' → logprob: -3.1607723236083984
    6. 'vals' → logprob: -3.4107723236083984
    7. 'V' → logprob: -3.6607723236083984
    8. 'A' → logprob: -4.035772323608398
    9. 'col' → logprob: -4.160772323608398
    10. 'values' → logprob: -4.160772323608398

Token 287: ' to' (ID: 316)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.2514238655567169
    2. 'list' → logprob: -2.1264238357543945
    3. ' colors' → logprob: -3.6264238357543945
    4. '=' → logprob: -4.1264238357543945
    5. 'color' → logprob: -4.6264238357543945
    6. ' list' → logprob: -4.8764238357543945
    7. '(colors' → logprob: -5.0014238357543945
    8. ' =' → logprob: -5.1264238357543945
    9. 'values' → logprob: -5.2514238357543945
    10. '   ' → logprob: -5.2514238357543945

Token 288: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.004089443478733301
    2. ' list' → logprob: -5.50408935546875
    3. 'a' → logprob: -12.37908935546875
    4. 'ints' → logprob: -12.75408935546875
    5. 'sorted' → logprob: -13.50408935546875
    6. 'int' → logprob: -13.75408935546875
    7. 'inte' → logprob: -14.00408935546875
    8. ' integers' → logprob: -15.37908935546875
    9. ' a' → logprob: -15.62908935546875
    10. 'lst' → logprob: -16.37908935546875

Token 289: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34592580795288086
    2. 'colors' → logprob: -1.7209258079528809
    3. ' =' → logprob: -2.720925807952881
    4. ' colors' → logprob: -3.595925807952881
    5. '=' → logprob: -4.720925807952881
    6. '(colors' → logprob: -5.720925807952881
    7. 'c' → logprob: -6.220925807952881
    8. 's' → logprob: -6.970925807952881
    9. 'vals' → logprob: -7.095925807952881
    10. 'C' → logprob: -7.095925807952881

Token 290: ' integers' (ID: 54912)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000947545631788671
    2. 'ints' → logprob: -7.00094747543335
    3. 'inte' → logprob: -10.250947952270508
    4. 'list' → logprob: -15.500947952270508
    5. 'map' → logprob: -15.500947952270508
    6. '[int' → logprob: -15.875947952270508
    7. ':int' → logprob: -17.625947952270508
    8. ' int' → logprob: -17.625947952270508
    9. '=int' → logprob: -18.250947952270508
    10. ' ints' → logprob: -18.250947952270508

Token 291: ' and' (ID: 326)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.5792550444602966
    2. '   ' → logprob: -1.2042551040649414
    3. ' colors' → logprob: -3.2042551040649414
    4. 'C' → logprob: -3.5792551040649414
    5. 'color' → logprob: -3.7042551040649414
    6. 'c' → logprob: -4.079255104064941
    7. 'col' → logprob: -4.954255104064941
    8. 'cols' → logprob: -5.079255104064941
    9. 'vals' → logprob: -5.204255104064941
    10. ' color' → logprob: -6.454255104064941

Token 292: ' sort' (ID: 4506)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.17615213990211487
    2. ' sort' → logprob: -1.9261521100997925
    3. 'sorted' → logprob: -4.426152229309082
    4. ' sorted' → logprob: -5.676152229309082
    5. ' map' → logprob: -8.426152229309082
    6. 'map' → logprob: -9.051152229309082
    7. '.sort' → logprob: -11.051152229309082
    8. 'split' → logprob: -11.301152229309082
    9. '```' → logprob: -11.426152229309082
    10. 's' → logprob: -11.676152229309082

Token 293: ' descending' (ID: 89489)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.6263793110847473
    2. 'C' → logprob: -2.1263792514801025
    3. ' colors' → logprob: -2.3763792514801025
    4. 'c' → logprob: -2.7513792514801025
    5. '   ' → logprob: -3.0013792514801025
    6. ' C' → logprob: -3.7513792514801025
    7. 'color' → logprob: -4.126379489898682
    8. 'col' → logprob: -4.126379489898682
    9. 'cols' → logprob: -4.626379489898682
    10. 'vals' → logprob: -4.626379489898682

Token 294: 'ly' (ID: 423)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.3531516492366791
    2. '   ' → logprob: -2.603151559829712
    3. ' colors' → logprob: -2.728151559829712
    4. 'c' → logprob: -3.228151559829712
    5. '
' → logprob: -3.228151559829712
    6. 'C' → logprob: -3.478151559829712
    7. 'color' → logprob: -5.103151798248291
    8. 'col' → logprob: -5.228151798248291
    9. 'values' → logprob: -5.353151798248291
    10. 'V' → logprob: -5.603151798248291

Token 295: ' (' (ID: 350)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.33362075686454773
    2. '   ' → logprob: -2.08362078666687
    3. ' colors' → logprob: -2.33362078666687
    4. 'c' → logprob: -4.083620548248291
    5. '
' → logprob: -4.333620548248291
    6. 'C' → logprob: -4.708620548248291
    7. 'color' → logprob: -5.083620548248291
    8. 'cols' → logprob: -5.958620548248291
    9. ' C' → logprob: -6.333620548248291
    10. '    
' → logprob: -6.333620548248291

Token 296: 'largest' (ID: 191832)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.4033280611038208
    2. ' colors' → logprob: -1.2783280611038208
    3. ' reverse' → logprob: -4.528327941894531
    4. ')' → logprob: -4.653327941894531
    5. 'reverse' → logprob: -4.653327941894531
    6. 'c' → logprob: -5.403327941894531
    7. ')
' → logprob: -6.528327941894531
    8. ' )' → logprob: -6.653327941894531
    9. 'color' → logprob: -6.778327941894531
    10. '   ' → logprob: -6.778327941894531

Token 297: ' first' (ID: 1577)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2896994352340698
    2. '_colors' → logprob: -1.6646994352340698
    3. 'colors' → logprob: -3.9146995544433594
    4. ')
' → logprob: -4.164699554443359
    5. ' =' → logprob: -5.039699554443359
    6. ' )' → logprob: -5.539699554443359
    7. ',' → logprob: -5.664699554443359
    8. ' colors' → logprob: -5.789699554443359
    9. '=' → logprob: -6.164699554443359
    10. '_values' → logprob: -6.289699554443359

Token 298: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4382818043231964
    2. ')' → logprob: -1.063281774520874
    3. '   ' → logprob: -5.063282012939453
    4. 'colors' → logprob: -5.938282012939453
    5. ')

' → logprob: -8.438282012939453
    6. ' )
' → logprob: -8.938282012939453
    7. ',' → logprob: -9.813282012939453
    8. ' colors' → logprob: -10.063282012939453
    9. ')
' → logprob: -10.563282012939453
    10. ' )' → logprob: -10.688282012939453

Token 299: '   ' (ID: 271)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.48111265897750854
    2. '   ' → logprob: -1.1061127185821533
    3. 'c' → logprob: -4.231112480163574
    4. ' colors' → logprob: -4.356112480163574
    5. 'C' → logprob: -4.731112480163574
    6. 'color' → logprob: -5.481112480163574
    7. 'cols' → logprob: -6.356112480163574
    8. '```' → logprob: -6.356112480163574
    9. 'vals' → logprob: -6.606112480163574
    10. 'values' → logprob: -6.856112480163574

Token 300: ' C' (ID: 363)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.22766003012657166
    2. 'color' → logprob: -2.7276599407196045
    3. ' colors' → logprob: -3.2276599407196045
    4. 'c' → logprob: -3.8526599407196045
    5. 'C' (adapté à ' C') → logprob: -4.102660179138184
    6. 'col' → logprob: -4.602660179138184
    7. 'cols' → logprob: -4.852660179138184
    8. 'vals' → logprob: -4.852660179138184
    9. 'values' → logprob: -5.102660179138184
    10. 'A' → logprob: -5.602660179138184

Token 301: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931489109992981
    2. ' =' → logprob: -0.6931489109992981
    3. ' ' → logprob: -13.693148612976074
    4. '   ' → logprob: -14.943148612976074
    5. 's' → logprob: -15.943148612976074
    6. ',' → logprob: -17.06814956665039
    7. '_' → logprob: -17.31814956665039
    8. '=list' → logprob: -17.56814956665039
    9. '＝' → logprob: -17.69314956665039
    10. ' ' → logprob: -18.06814956665039

Token 302: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00160138716455549
    2. ' list' → logprob: -6.751601219177246
    3. 'sorted' → logprob: -7.751601219177246
    4. ' sorted' → logprob: -13.751601219177246
    5. 'map' → logprob: -17.751602172851562
    6. '   ' → logprob: -17.876602172851562
    7. '	list' → logprob: -20.126602172851562
    8. '=list' → logprob: -20.376602172851562
    9. ' ' → logprob: -20.626602172851562
    10. '  ' → logprob: -21.126602172851562

Token 303: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0001601539261173457
    2. '*' → logprob: -8.750160217285156
    3. ']int' → logprob: -13.750160217285156
    4. ' int' → logprob: -14.750160217285156
    5. ']' → logprob: -16.500160217285156
    6. '[int' → logprob: -16.875160217285156
    7. '0' → logprob: -17.250160217285156
    8. '<int' → logprob: -17.250160217285156
    9. '(int' → logprob: -17.625160217285156
    10. ':int' → logprob: -17.625160217285156

Token 304: '(c' (ID: 2410)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.019546959549188614
    2. '(i' → logprob: -4.144546985626221
    3. 'x' → logprob: -6.144546985626221
    4. '(c' → logprob: -6.769546985626221
    5. 'c' → logprob: -9.019546508789062
    6. 'i' → logprob: -10.144546508789062
    7. '(s' → logprob: -11.269546508789062
    8. '(_)' → logprob: -11.519546508789062
    9. '(' → logprob: -11.644546508789062
    10. '(token' → logprob: -11.769546508789062

Token 305: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00025966696557588875
    2. '())' → logprob: -9.125259399414062
    3. '.strip' → logprob: -9.875259399414062
    4. '()' → logprob: -10.125259399414062
    5. 'for' → logprob: -11.125259399414062
    6. ' )' → logprob: -11.250259399414062
    7. ')
' → logprob: -11.375259399414062
    8. '(i' → logprob: -12.500259399414062
    9. 'input' → logprob: -12.875259399414062
    10. ' for' → logprob: -13.250259399414062

Token 306: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10596120357513428
    2. ' for' → logprob: -2.355961322784424
    3. ')' → logprob: -5.355961322784424
    4. '()' → logprob: -6.980961322784424
    5. '
' → logprob: -10.980960845947266
    6. 'token' → logprob: -11.355960845947266
    7. ' ' → logprob: -11.480960845947266
    8. 'x' → logprob: -11.730960845947266
    9. '(x' → logprob: -11.855960845947266
    10. 'i' → logprob: -11.855960845947266

Token 307: ' c' (ID: 274)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011074470356106758
    2. ' input' → logprob: -4.511074542999268
    3. 'sys' → logprob: -10.76107406616211
    4. ' sys' → logprob: -13.38607406616211
    5. '(input' → logprob: -13.63607406616211
    6. 'in' → logprob: -14.26107406616211
    7. '=input' → logprob: -14.26107406616211
    8. '_' → logprob: -14.38607406616211
    9. '_input' → logprob: -14.88607406616211
    10. 'range' → logprob: -15.51107406616211

Token 308: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3875531852245331
    2. 'in' → logprob: -1.1375532150268555
    3. 'import' → logprob: -8.262553215026855
    4. '	in' → logprob: -9.637553215026855
    5. 'input' → logprob: -9.762553215026855
    6. '=' → logprob: -10.012553215026855
    7. ',' → logprob: -10.387553215026855
    8. 'c' → logprob: -10.762553215026855
    9. 's' → logprob: -10.950053215026855
    10. '(' → logprob: -10.950053215026855

Token 309: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0007207724265754223
    2. ' input' → logprob: -7.250720977783203
    3. 'sys' → logprob: -11.500720977783203
    4. '(input' → logprob: -15.125720977783203
    5. '
' → logprob: -15.875720977783203
    6. ' sys' → logprob: -16.500720977783203
    7. '   ' → logprob: -17.125720977783203
    8. ' ' → logprob: -17.500720977783203
    9. '	input' → logprob: -17.625720977783203
    10. '<input' → logprob: -17.875720977783203

Token 310: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.200166469876422e-06
    2. '()' → logprob: -12.250004768371582
    3. '.split' → logprob: -15.375004768371582
    4. '.strip' → logprob: -16.5000057220459
    5. 'split' → logprob: -17.1250057220459
    6. ' ().' → logprob: -17.8750057220459
    7. '()
' → logprob: -18.2500057220459
    8. '()].' → logprob: -18.7500057220459
    9. '()]' → logprob: -19.0000057220459
    10. '(' → logprob: -19.2500057220459

Token 311: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.16030606627464294
    2. 'strip' → logprob: -1.9103060960769653
    3. 'rstrip' → logprob: -9.410305976867676
    4. 'read' → logprob: -17.660306930541992
    5. '(split' → logprob: -17.910306930541992
    6. ' split' → logprob: -18.160306930541992
    7. 'spl' → logprob: -18.410306930541992
    8. ' strip' → logprob: -19.410306930541992
    9. 'decode' → logprob: -21.035306930541992
    10. 'replace' → logprob: -21.410306930541992

Token 312: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.007547357585281134
    2. '()]
' → logprob: -5.507547378540039
    3. ']' → logprob: -5.757547378540039
    4. '()' → logprob: -8.507547378540039
    5. ')]' → logprob: -9.507547378540039
    6. ']
' → logprob: -10.882547378540039
    7. '())' → logprob: -13.132547378540039
    8. '()][' → logprob: -13.257547378540039
    9. '()
' → logprob: -13.382547378540039
    10. '(' → logprob: -13.632547378540039

Token 313: '   ' (ID: 271)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.06408880650997162
    2. '   ' → logprob: -2.814088821411133
    3. '
' → logprob: -6.314088821411133
    4. '```' → logprob: -8.314088821411133
    5. ' C' → logprob: -10.814088821411133
    6. '    
' → logprob: -10.939088821411133
    7. '	C' → logprob: -12.189088821411133
    8. '``' → logprob: -12.564088821411133
    9. '`' → logprob: -13.064088821411133
    10. ')' → logprob: -13.064088821411133

Token 314: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' (adapté à ' C') → logprob: -0.00024203950306400657
    2. '   ' → logprob: -9.125242233276367
    3. '
' → logprob: -9.250242233276367
    4. ' C' → logprob: -10.250242233276367
    5. '```' → logprob: -13.875242233276367
    6. '    
' → logprob: -15.375242233276367
    7. '`' → logprob: -15.875242233276367
    8. '	C' → logprob: -16.750242233276367
    9. '``' → logprob: -16.750242233276367
    10. ' ' → logprob: -17.125242233276367

Token 315: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0005549400229938328
    2. '.' → logprob: -7.500555038452148
    3. '=' → logprob: -13.500555038452148
    4. 'sort' → logprob: -15.125555038452148
    5. '.s' → logprob: -15.875555038452148
    6. '.sorted' → logprob: -16.37555503845215
    7. ' .' → logprob: -16.75055503845215
    8. '   ' → logprob: -17.50055503845215
    9. ' sort' → logprob: -17.50055503845215
    10. '	sort' → logprob: -17.62555503845215

Token 316: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.004088966641575098
    2. 'reverse' → logprob: -5.504088878631592
    3. 'Reverse' → logprob: -11.87908935546875
    4. '.reverse' → logprob: -13.50408935546875
    5. '_reverse' → logprob: -13.62908935546875
    6. '(' → logprob: -14.25408935546875
    7. ' reverse' → logprob: -15.25408935546875
    8. '()' → logprob: -15.75408935546875
    9. '(re' → logprob: -17.00408935546875
    10. '   ' → logprob: -17.12908935546875

Token 317: '=True' (ID: 7827)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.43632596731185913
    2. ')' → logprob: -1.311326026916504
    3. '()' → logprob: -2.811326026916504
    4. '=True' → logprob: -3.811326026916504
    5. '(True' → logprob: -6.686326026916504
    6. '();)' → logprob: -9.061326026916504
    7. '=' → logprob: -9.186326026916504
    8. '(),' → logprob: -9.436326026916504
    9. '()]' → logprob: -9.686326026916504
    10. '()
' → logprob: -9.686326026916504

Token 318: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0921942703134846e-05
    2. '   ' → logprob: -11.87501049041748
    3. ')
' → logprob: -12.62501049041748
    4. ' )' → logprob: -14.62501049041748
    5. ')

' → logprob: -17.250011444091797
    6. '))' → logprob: -18.125011444091797
    7. '[' → logprob: -18.375011444091797
    8. ']' → logprob: -18.500011444091797
    9. ')#' → logprob: -18.500011444091797
    10. '),' → logprob: -18.500011444091797

Token 319: '   ' (ID: 271)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -1.0103039741516113
    2. '   ' → logprob: -1.1353039741516113
    3. 'assigned' → logprob: -2.0103039741516113
    4. 'color' → logprob: -2.2603039741516113
    5. 'visited' → logprob: -3.7603039741516113
    6. '
' → logprob: -4.385303974151611
    7. 'ans' → logprob: -4.760303974151611
    8. 'used' → logprob: -5.010303974151611
    9. ' colors' → logprob: -5.135303974151611
    10. '    
' → logprob: -6.260303974151611

Token 320: ' #' (ID: 1069)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.416386604309082
    2. 'color' → logprob: -1.666386604309082
    3. 'ans' → logprob: -1.916386604309082
    4. 'visited' → logprob: -2.041386604309082
    5. 'colors' → logprob: -2.666386604309082
    6. 'assigned' → logprob: -2.916386604309082
    7. 'Q' → logprob: -3.416386604309082
    8. 'q' → logprob: -4.166386604309082
    9. 'col' → logprob: -4.541386604309082
    10. 'dist' → logprob: -4.791386604309082

Token 321: ' Initialize' (ID: 19496)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.1275373697280884
    2. 'color' → logprob: -1.8775373697280884
    3. 'visited' → logprob: -2.002537250518799
    4. 'ans' → logprob: -2.377537250518799
    5. 'assigned' → logprob: -2.627537250518799
    6. 'colors' → logprob: -3.252537250518799
    7. 'q' → logprob: -3.752537250518799
    8. 'dist' → logprob: -4.252537250518799
    9. 'Q' → logprob: -4.252537250518799
    10. 'que' → logprob: -4.377537250518799

Token 322: ' a' (ID: 261)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.8964480757713318
    2. 'used' → logprob: -1.8964481353759766
    3. 'color' → logprob: -2.0214481353759766
    4. 'assigned' → logprob: -2.7714481353759766
    5. 'visited' → logprob: -3.1464481353759766
    6. 'colors' → logprob: -3.1464481353759766
    7. 'Ans' → logprob: -3.6464481353759766
    8. 'answer' → logprob: -4.146448135375977
    9. 'dist' → logprob: -4.271448135375977
    10. 'dp' → logprob: -4.521448135375977

Token 323: ' list' (ID: 1562)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.4775540828704834
    2. 'color' → logprob: -1.6025540828704834
    3. 'colors' → logprob: -1.6025540828704834
    4. 'deque' → logprob: -2.6025540828704834
    5. 'ans' → logprob: -2.8525540828704834
    6. 'dp' → logprob: -2.9775540828704834
    7. 'dist' → logprob: -3.7275540828704834
    8. 'ss' → logprob: -3.8525540828704834
    9. 'used' → logprob: -3.8525540828704834
    10. 'assigned' → logprob: -3.9775540828704834

Token 324: ' to' (ID: 316)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6881499886512756
    2. '   ' → logprob: -1.3131499290466309
    3. ' to' → logprob: -2.938149929046631
    4. 'colors' → logprob: -3.313149929046631
    5. 'of' → logprob: -3.563149929046631
    6. 'assigned' → logprob: -3.688149929046631
    7. ' colors' → logprob: -4.188149929046631
    8. ' ans' → logprob: -4.313149929046631
    9. ' assigned' → logprob: -4.438149929046631
    10. ' for' → logprob: -4.563149929046631

Token 325: ' store' (ID: 4897)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.8011665344238281
    2. 'assigned' → logprob: -1.6761665344238281
    3. 'color' → logprob: -2.176166534423828
    4. '[-' → logprob: -2.551166534423828
    5. '[' → logprob: -2.801166534423828
    6. 'colors' → logprob: -3.301166534423828
    7. 'visited' → logprob: -3.426166534423828
    8. ' assigned' → logprob: -5.051166534423828
    9. 'deque' → logprob: -5.176166534423828
    10. ' color' → logprob: -5.426166534423828

Token 326: ' the' (ID: 290)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0931050777435303
    2. 'colors' → logprob: -1.2181050777435303
    3. 'assigned' → logprob: -1.5931050777435303
    4. 'color' → logprob: -2.5931050777435303
    5. 'used' → logprob: -3.5931050777435303
    6. 'answer' → logprob: -3.7181050777435303
    7. 'visited' → logprob: -4.218105316162109
    8. 'Ans' → logprob: -5.718105316162109
    9. 'the' → logprob: -5.843105316162109
    10. 'res' → logprob: -6.093105316162109

Token 327: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.8021205067634583
    2. 'color' → logprob: -1.0521204471588135
    3. 'colors' → logprob: -2.0521204471588135
    4. 'answer' → logprob: -2.9271204471588135
    5. 'ans' → logprob: -4.927120685577393
    6. 'used' → logprob: -5.552120685577393
    7. 'result' → logprob: -6.177120685577393
    8. 'value' → logprob: -6.802120685577393
    9. 'visited' → logprob: -6.927120685577393
    10. 'answers' → logprob: -6.927120685577393

Token 328: ' color' (ID: 3089)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.21092075109481812
    2. 'color' → logprob: -1.960920810699463
    3. ' colors' → logprob: -3.210920810699463
    4. ' color' → logprob: -5.710920810699463
    5. 'values' → logprob: -6.210920810699463
    6. '_colors' → logprob: -6.585920810699463
    7. '_color' → logprob: -7.710920810699463
    8. 'Colors' → logprob: -7.960920810699463
    9. 'ans' → logprob: -7.960920810699463
    10. 'Color' → logprob: -8.210920333862305

Token 329: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16825422644615173
    2. ' =' → logprob: -1.9182542562484741
    3. '=' → logprob: -5.543254375457764
    4. 'for' → logprob: -7.043254375457764
    5. ' for' → logprob: -7.668254375457764
    6. '_for' → logprob: -7.918254375457764
    7. 'assigned' → logprob: -8.168253898620605
    8. 'values' → logprob: -8.293253898620605
    9. 'colors' → logprob: -8.293253898620605
    10. '_colors' → logprob: -8.668253898620605

Token 330: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.5768188834190369
    2. ' each' → logprob: -0.8268188834190369
    3. ' node' → logprob: -7.826818943023682
    4. '_' → logprob: -8.701818466186523
    5. 'node' → logprob: -8.701818466186523
    6. 'i' → logprob: -9.451818466186523
    7. ' i' → logprob: -10.451818466186523
    8. '_each' → logprob: -10.826818466186523
    9. ' nodes' → logprob: -12.576818466186523
    10. 'Each' → logprob: -13.076818466186523

Token 331: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.25210094451904297
    2. ' node' → logprob: -1.502100944519043
    3. '_node' → logprob: -9.502100944519043
    4. 'vertex' → logprob: -10.002100944519043
    5. '[node' → logprob: -11.377100944519043
    6. ' vertex' → logprob: -11.752100944519043
    7. '(node' → logprob: -11.752100944519043
    8. 'Node' → logprob: -12.127100944519043
    9. '=node' → logprob: -12.377100944519043
    10. 'color' → logprob: -12.752100944519043

Token 332: ' (' (ID: 350)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -1.374122977256775
    2. 'colors' → logprob: -1.874122977256775
    3. 'color' → logprob: -1.999122977256775
    4. '   ' → logprob: -2.3741230964660645
    5. 'ans' → logprob: -2.4991230964660645
    6. ' color' → logprob: -2.6241230964660645
    7. ' colors' → logprob: -2.7491230964660645
    8. ' assigned' → logprob: -3.1241230964660645
    9. ' ans' → logprob: -3.3741230964660645
    10. 'col' → logprob: -4.3741230964660645

Token 333: 'None' (ID: 8505)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.1423625946044922
    2. 'colors' → logprob: -1.5173625946044922
    3. 'assigned' → logprob: -2.017362594604492
    4. 'color' → logprob: -2.517362594604492
    5. '[-' → logprob: -2.892362594604492
    6. 'ans' → logprob: -3.267362594604492
    7. ' colors' → logprob: -3.642362594604492
    8. '[' → logprob: -3.767362594604492
    9. '0' → logprob: -3.892362594604492
    10. ' ans' → logprob: -4.017362594604492

Token 334: ' means' (ID: 4748)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024488283321261406
    2. ']' → logprob: -4.27448844909668
    3. ')
' → logprob: -5.64948844909668
    4. ' for' → logprob: -5.89948844909668
    5. '   ' → logprob: -6.52448844909668
    6. 'for' → logprob: -6.52448844909668
    7. ' =' → logprob: -8.52448844909668
    8. ',' → logprob: -8.52448844909668
    9. 'None' → logprob: -8.89948844909668
    10. ' or' → logprob: -9.14948844909668

Token 335: ' not' (ID: 625)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.34507057070732117
    2. 'None' → logprob: -1.8450706005096436
    3. 'un' → logprob: -3.0950706005096436
    4. '   ' → logprob: -3.4700706005096436
    5. ' None' → logprob: -3.9700706005096436
    6. ' not' → logprob: -3.9700706005096436
    7. ' no' → logprob: -4.5950703620910645
    8. 'not' → logprob: -4.7200703620910645
    9. 'no' → logprob: -7.7200703620910645
    10. 'assigned' → logprob: -9.470070838928223

Token 336: ' assigned' (ID: 21482)
  Prédit: 'assigned'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assigned' → logprob: -0.6909623146057129
    2. ' assigned' → logprob: -1.190962314605713
    3. ' None' → logprob: -1.815962314605713
    4. 'None' → logprob: -3.690962314605713
    5. ' yet' → logprob: -5.065962314605713
    6. '   ' → logprob: -7.315962314605713
    7. '_ass' → logprob: -8.815961837768555
    8. 'yet' → logprob: -10.065961837768555
    9. '_' → logprob: -10.190961837768555
    10. '=None' → logprob: -10.690961837768555

Token 337: ' yet' (ID: 5073)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011760591296479106
    2. ')
' → logprob: -7.376175880432129
    3. ' yet' → logprob: -7.626175880432129
    4. '   ' → logprob: -10.626175880432129
    5. ',' → logprob: -11.001175880432129
    6. 'color' → logprob: -12.251175880432129
    7. ' )' → logprob: -12.376175880432129
    8. '=' → logprob: -13.126175880432129
    9. 'yet' → logprob: -13.376175880432129
    10. ' =' → logprob: -13.501175880432129

Token 338: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005412388709373772
    2. ')
' → logprob: -7.7505412101745605
    3. '   ' → logprob: -9.250541687011719
    4. ',' → logprob: -11.625541687011719
    5. ' )' → logprob: -12.750541687011719
    6. ')

' → logprob: -14.500541687011719
    7. '[' → logprob: -15.250541687011719
    8. ']' → logprob: -15.250541687011719
    9. '`)' → logprob: -15.500541687011719
    10. '  ' → logprob: -15.625541687011719

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9313416481018066
    2. 'assigned' → logprob: -1.3063416481018066
    3. 'colors' → logprob: -1.5563416481018066
    4. 'color' → logprob: -3.0563416481018066
    5. ' colors' → logprob: -3.8063416481018066
    6. 'ans' → logprob: -4.056341648101807
    7. ' assigned' → logprob: -4.306341648101807
    8. ' color' → logprob: -4.931341648101807
    9. ' ans' → logprob: -5.681341648101807
    10. 'col' → logprob: -5.806341648101807

Token 340: ' Color' (ID: 6822)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.3964571952819824
    2. 'color' → logprob: -1.3964571952819824
    3. 'assigned' → logprob: -1.3964571952819824
    4. 'colors' → logprob: -2.1464571952819824
    5. 'answer' → logprob: -4.271457195281982
    6. 'A' → logprob: -4.271457195281982
    7. 'col' → logprob: -4.396457195281982
    8. 'assign' → logprob: -4.396457195281982
    9. 'res' → logprob: -4.396457195281982
    10. 'Color' (adapté à ' Color') → logprob: -5.396457195281982

Token 341: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2025197148323059
    2. ' =' → logprob: -1.7025196552276611
    3. 's' → logprob: -6.82751989364624
    4. '   ' → logprob: -11.827519416809082
    5. 'assigned' → logprob: -12.452519416809082
    6. '=[]' → logprob: -12.577519416809082
    7. '=[' → logprob: -13.452519416809082
    8. ' ' → logprob: -13.577519416809082
    9. 'Assigned' → logprob: -13.577519416809082
    10. '[' → logprob: -14.452519416809082

Token 342: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001281303120777011
    2. ' [' → logprob: -6.751281261444092
    3. '[N' → logprob: -9.62628173828125
    4. '[n' → logprob: -10.12628173828125
    5. '   ' → logprob: -12.87628173828125
    6. '[len' → logprob: -13.87628173828125
    7. '[node' → logprob: -14.37628173828125
    8. '[num' → logprob: -15.12628173828125
    9. '[int' → logprob: -15.62628173828125
    10. ' ' → logprob: -16.50128173828125

Token 343: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.60414821645827e-06
    2. ' None' → logprob: -12.750004768371582
    3. '   ' → logprob: -14.125004768371582
    4. '-' → logprob: -14.500004768371582
    5. '0' → logprob: -15.000004768371582
    6. '
' → logprob: -17.125003814697266
    7. '_None' → logprob: -18.000003814697266
    8. '(None' → logprob: -18.375003814697266
    9. ',None' → logprob: -19.250003814697266
    10. 'none' → logprob: -19.375003814697266

Token 344: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.33478108048439026
    2. 'for' → logprob: -1.8347810506820679
    3. ' for' → logprob: -2.2097811698913574
    4. ']*' → logprob: -4.209781169891357
    5. ')' → logprob: -9.0847806930542
    6. '   ' → logprob: -10.0847806930542
    7. '(N' → logprob: -10.0847806930542
    8. ']*(' → logprob: -10.3347806930542
    9. ' ]' → logprob: -10.9597806930542
    10. '	for' → logprob: -11.5847806930542

Token 345: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5529273152351379
    2. ' for' → logprob: -1.8029272556304932
    3. 'for' → logprob: -2.302927255630493
    4. '(N' → logprob: -2.677927255630493
    5. '<|end|>' → logprob: -3.052927255630493
    6. '(' → logprob: -3.427927255630493
    7. '   ' → logprob: -5.302927494049072
    8. '[' → logprob: -6.427927494049072
    9. '<|end|>' → logprob: -6.927927494049072
    10. '  
' → logprob: -7.052927494049072

Token 346: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.128163257315464e-07
    2. ' N' → logprob: -15.5
    3. '(N' → logprob: -18.125
    4. '   ' → logprob: -19.75
    5. '	N' → logprob: -22.25
    6. '[N' → logprob: -24.25
    7. '(' → logprob: -24.625
    8. '
' → logprob: -25.375
    9. '_N' → logprob: -25.375
    10. 'Ｎ' → logprob: -25.875

Token 347: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2766961455345154
    2. '
' → logprob: -1.6516962051391602
    3. 'visited' → logprob: -4.02669620513916
    4. '    
' → logprob: -4.40169620513916
    5. 'queue' → logprob: -4.52669620513916
    6. 'deque' → logprob: -6.65169620513916
    7. ' queue' → logprob: -6.77669620513916
    8. 'q' → logprob: -6.90169620513916
    9. 'Q' → logprob: -7.02669620513916
    10. 'assigned' → logprob: -7.15169620513916

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07951974123716354
    2. 'Color' → logprob: -2.704519748687744
    3. 'queue' → logprob: -4.829519748687744
    4. 'deque' → logprob: -8.079519271850586
    5. ' Color' → logprob: -8.454519271850586
    6. ' queue' → logprob: -8.454519271850586
    7. 'from' → logprob: -8.579519271850586
    8. 'q' → logprob: -8.704519271850586
    9. '```' → logprob: -8.829519271850586
    10. '	Color' → logprob: -9.704519271850586

Token 349: ' #' (ID: 1069)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.3295503556728363
    2. '   ' → logprob: -1.9545503854751587
    3. 'queue' → logprob: -2.204550266265869
    4. 'from' → logprob: -4.329550266265869
    5. '#' (adapté à ' #') → logprob: -5.579550266265869
    6. 'q' → logprob: -5.579550266265869
    7. 'deque' → logprob: -5.704550266265869
    8. 'Q' → logprob: -6.954550266265869
    9. 'visited' → logprob: -6.954550266265869
    10. 'start' → logprob: -7.454550266265869

Token 350: ' Assign' (ID: 60840)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.7896114587783813
    2. 'queue' → logprob: -0.7896114587783813
    3. 'q' → logprob: -3.039611339569092
    4. 'from' → logprob: -4.539611339569092
    5. 'Q' → logprob: -4.664611339569092
    6. 'que' → logprob: -5.164611339569092
    7. 'dq' → logprob: -5.414611339569092
    8. 'visited' → logprob: -5.539611339569092
    9. 'start' → logprob: -5.789611339569092
    10. 'deque' → logprob: -5.914611339569092

Token 351: ' the' (ID: 290)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.12460575997829437
    2. ' Color' → logprob: -2.374605655670166
    3. '0' → logprob: -4.249605655670166
    4. '(' → logprob: -5.749605655670166
    5. '[' → logprob: -5.749605655670166
    6. ' ' → logprob: -6.624605655670166
    7. '_color' → logprob: -7.499605655670166
    8. '(Color' → logprob: -7.499605655670166
    9. '	Color' → logprob: -8.624606132507324
    10. '1' → logprob: -8.624606132507324

Token 352: ' largest' (ID: 10574)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.0020148828625679016
    2. 'from' → logprob: -6.377015113830566
    3. 'queue' → logprob: -8.627015113830566
    4. 'root' → logprob: -10.502015113830566
    5. 'max' → logprob: -10.877015113830566
    6. 'start' → logprob: -10.877015113830566
    7. 'visited' → logprob: -11.127015113830566
    8. 'largest' → logprob: -11.127015113830566
    9. ' Color' → logprob: -11.252015113830566
    10. 'import' → logprob: -11.502015113830566

Token 353: ' color' (ID: 3089)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7510030269622803
    2. ' color' → logprob: -1.2510030269622803
    3. 'color' → logprob: -1.7510030269622803
    4. ' C' → logprob: -3.0010030269622803
    5. 'Color' → logprob: -4.501003265380859
    6. '_color' → logprob: -5.126003265380859
    7. '_' → logprob: -8.37600326538086
    8. ' =' → logprob: -8.50100326538086
    9. ' Color' → logprob: -8.62600326538086
    10. ')' → logprob: -8.75100326538086

Token 354: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2792818248271942
    2. 'Color' → logprob: -2.4042818546295166
    3. '[' → logprob: -2.7792818546295166
    4. 'to' → logprob: -3.0292818546295166
    5. ' Color' → logprob: -3.2792818546295166
    6. '   ' → logprob: -6.4042816162109375
    7. '	Color' → logprob: -6.5292816162109375
    8. ' =' → logprob: -6.7792816162109375
    9. '(Color' → logprob: -8.154281616210938
    10. ' [' → logprob: -9.404281616210938

Token 355: ' node' (ID: 4596)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.002845768118277192
    2. ' Color' → logprob: -6.002845764160156
    3. 'the' → logprob: -8.502845764160156
    4. '0' → logprob: -8.752845764160156
    5. ' the' → logprob: -11.877845764160156
    6. ' ' → logprob: -14.127845764160156
    7. 'Node' → logprob: -14.502845764160156
    8. 'root' → logprob: -15.252845764160156
    9. 'node' → logprob: -15.502845764160156
    10. '	Color' → logprob: -15.502845764160156

Token 356: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006939144805073738
    2. '[' → logprob: -5.256938934326172
    3. ' ' → logprob: -6.381938934326172
    4. 's' → logprob: -12.006938934326172
    5. ' [' → logprob: -13.131938934326172
    6. '   ' → logprob: -13.506938934326172
    7. '(' → logprob: -14.006938934326172
    8. 'Color' → logprob: -14.506938934326172
    9. '```' → logprob: -15.381938934326172
    10. '`' → logprob: -15.631938934326172

Token 357: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.981667537620524e-06
    2. '[' → logprob: -13.500001907348633
    3. ' ' → logprob: -14.500001907348633
    4. '(' → logprob: -18.000001907348633
    5. '```' → logprob: -19.000001907348633
    6. 'Color' → logprob: -19.250001907348633
    7. '
' → logprob: -19.250001907348633
    8. '_' → logprob: -19.375001907348633
    9. '０' → logprob: -20.625001907348633
    10. '۰' → logprob: -21.375001907348633

Token 358: ' (' (ID: 350)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.29194706678390503
    2. '
' → logprob: -1.4169471263885498
    3. ' Color' → logprob: -4.791946887969971
    4. '   ' → logprob: -6.416946887969971
    5. '[' → logprob: -7.666946887969971
    6. '	Color' → logprob: -8.416947364807129
    7. '    
' → logprob: -10.666947364807129
    8. '(Color' → logprob: -10.791947364807129
    9. ' =' → logprob: -11.166947364807129
    10. ' 
' → logprob: -11.166947364807129

Token 359: 'usually' (ID: 77091)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008713372983038425
    2. 'Color' → logprob: -4.758713245391846
    3. ' ' → logprob: -10.008713722229004
    4. '   ' → logprob: -10.633713722229004
    5. ' Color' → logprob: -10.633713722229004
    6. ')' → logprob: -13.008713722229004
    7. 'C' → logprob: -13.883713722229004
    8. '	Color' → logprob: -14.633713722229004
    9. '#' → logprob: -15.258713722229004
    10. 'color' → logprob: -15.383713722229004

Token 360: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5198665857315063
    2. ' the' → logprob: -1.0198665857315063
    3. 'root' → logprob: -3.644866466522217
    4. '0' → logprob: -4.769866466522217
    5. ' root' → logprob: -5.019866466522217
    6. ' node' → logprob: -6.894866466522217
    7. ')' → logprob: -7.644866466522217
    8. 'node' → logprob: -7.769866466522217
    9. 'a' → logprob: -8.019866943359375
    10. '   ' → logprob: -8.144866943359375

Token 361: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.028474746271967888
    2. ' root' → logprob: -4.153474807739258
    3. '0' → logprob: -4.403474807739258
    4. 'first' → logprob: -9.528474807739258
    5. ' ' → logprob: -10.778474807739258
    6. 'starting' → logprob: -11.278474807739258
    7. ' first' → logprob: -12.278474807739258
    8. 'start' → logprob: -12.278474807739258
    9. '   ' → logprob: -12.528474807739258
    10. '[root' → logprob: -13.028474807739258

Token 362: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037383255548775196
    2. '[' → logprob: -6.1287384033203125
    3. '   ' → logprob: -7.1287384033203125
    4. ')
' → logprob: -7.3787384033203125
    5. ' )' → logprob: -9.753738403320312
    6. ']' → logprob: -10.128738403320312
    7. ',' → logprob: -11.753738403320312
    8. ').' → logprob: -12.128738403320312
    9. '.' → logprob: -13.003738403320312
    10. '0' → logprob: -13.503738403320312

Token 363: ' such' (ID: 2238)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7453233599662781
    2. 'a' → logprob: -1.7453234195709229
    3. '0' → logprob: -1.8703234195709229
    4. 'this' → logprob: -2.370323419570923
    5. 'tree' → logprob: -2.995323419570923
    6. ' the' → logprob: -4.120323181152344
    7. ' this' → logprob: -4.620323181152344
    8. 'most' → logprob: -4.745323181152344
    9. ' a' → logprob: -5.370323181152344
    10. 'many' → logprob: -5.495323181152344

Token 364: ' problems' (ID: 6840)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.7428662180900574
    2. 'trees' → logprob: -1.3678662776947021
    3. ' problems' → logprob: -2.742866277694702
    4. 'tree' → logprob: -2.742866277694702
    5. ' trees' → logprob: -2.992866277694702
    6. 'cases' → logprob: -3.242866277694702
    7. ' tree' → logprob: -3.617866277694702
    8. 'a' → logprob: -4.742866039276123
    9. ' cases' → logprob: -5.867866039276123
    10. ' a' → logprob: -5.867866039276123

Token 365: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038849886041134596
    2. '   ' → logprob: -5.753884792327881
    3. ')
' → logprob: -7.503884792327881
    4. ' )' → logprob: -9.503885269165039
    5. '[' → logprob: -9.753885269165039
    6. '
' → logprob: -11.878885269165039
    7. ',' → logprob: -12.503885269165039
    8. ').' → logprob: -12.753885269165039
    9. '.' → logprob: -13.128885269165039
    10. ']' → logprob: -13.253885269165039

Token 366: '   ' (ID: 271)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.031067516654729843
    2. '   ' → logprob: -3.5310676097869873
    3. '    
' → logprob: -8.031067848205566
    4. '	Color' → logprob: -8.031067848205566
    5. ' Color' → logprob: -8.156067848205566
    6. '
' → logprob: -8.531067848205566
    7. '`' → logprob: -10.156067848205566
    8. '[' → logprob: -10.531067848205566
    9. '```' → logprob: -10.531067848205566
    10. '  
' → logprob: -10.906067848205566

Token 367: ' Color' (ID: 6822)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' (adapté à ' Color') → logprob: -0.00013691288768313825
    2. ' Color' → logprob: -9.250137329101562
    3. '   ' → logprob: -10.125137329101562
    4. '	Color' → logprob: -14.375137329101562
    5. '
' → logprob: -17.000137329101562
    6. '_Color' → logprob: -18.625137329101562
    7. 'color' → logprob: -19.125137329101562
    8. '```' → logprob: -19.375137329101562
    9. '.Color' → logprob: -19.625137329101562
    10. 'COLOR' → logprob: -19.625137329101562

Token 368: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7432603272027336e-06
    2. '\[' → logprob: -14.750001907348633
    3. '```' → logprob: -14.750001907348633
    4. '=' → logprob: -15.000001907348633
    5. ' [' → logprob: -15.125001907348633
    6. ' =' → logprob: -15.500001907348633
    7. '
' → logprob: -16.625001907348633
    8. '=[' → logprob: -18.125001907348633
    9. '0' → logprob: -18.125001907348633
    10. '[
' → logprob: -18.625001907348633

Token 369: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '[' → logprob: -16.375
    4. '
' → logprob: -17.0
    5. '   ' → logprob: -17.875
    6. '```' → logprob: -18.625
    7. '۰' → logprob: -20.0
    8. '00' → logprob: -20.0
    9. ')' → logprob: -20.125
    10. '=' → logprob: -20.25

Token 370: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0921942703134846e-05
    2. ']=' → logprob: -11.62501049041748
    3. '=' → logprob: -14.00001049041748
    4. ' ]' → logprob: -14.25001049041748
    5. ')' → logprob: -15.37501049041748
    6. '[' → logprob: -16.125011444091797
    7. ']
' → logprob: -16.500011444091797
    8. '],' → logprob: -19.625011444091797
    9. '   ' → logprob: -19.750011444091797
    10. ' =' → logprob: -19.750011444091797

Token 371: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.038048144429922104
    2. ' =' → logprob: -3.288048028945923
    3. '=C' → logprob: -11.913047790527344
    4. '＝' → logprob: -18.288047790527344
    5. ',' → logprob: -18.413047790527344
    6. '=

' → logprob: -18.413047790527344
    7. '=color' → logprob: -18.913047790527344
    8. '=
' → logprob: -19.163047790527344
    9. '   ' → logprob: -19.413047790527344
    10. ' ' → logprob: -19.663047790527344

Token 372: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -5.5577775128767826e-06
    2. ' C' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.6250057220459
    4. 'c' → logprob: -20.0000057220459
    5. '	C' → logprob: -20.0000057220459
    6. '0' → logprob: -21.1250057220459
    7. ' ' → logprob: -21.3750057220459
    8. '`' → logprob: -22.1250057220459
    9. '[C' → logprob: -22.5000057220459
    10. '*C' → logprob: -22.6250057220459

Token 373: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029764965176582336
    2. '0' → logprob: -3.5297648906707764
    3. '```' → logprob: -12.029765129089355
    4. ' [' → logprob: -12.904765129089355
    5. '\[' → logprob: -13.029765129089355
    6. ' ' → logprob: -13.779765129089355
    7. '   ' → logprob: -13.904765129089355
    8. '[
' → logprob: -15.154765129089355
    9. '`' → logprob: -15.529765129089355
    10. '
' → logprob: -15.529765129089355

Token 374: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -16.875
    3. '[' → logprob: -17.125
    4. '۰' → logprob: -17.875
    5. '<|end|>' → logprob: -18.75
    6. '   ' → logprob: -19.625
    7. '০' → logprob: -20.125
    8. '000' → logprob: -20.375
    9. ')' → logprob: -20.5
    10. '```' → logprob: -20.5625

Token 375: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014297730289399624
    2. ']' → logprob: -4.264297962188721
    3. ' )' → logprob: -10.389297485351562
    4. '   ' → logprob: -10.639297485351562
    5. ')
' → logprob: -10.639297485351562
    6. ')]' → logprob: -11.264297485351562
    7. '[' → logprob: -11.389297485351562
    8. '])' → logprob: -11.639297485351562
    9. '<|end|>' → logprob: -11.639297485351562
    10. '}' → logprob: -12.264297485351562

Token 376: '   ' (ID: 271)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.7013157606124878
    2. '   ' → logprob: -0.8263157606124878
    3. 'q' → logprob: -3.4513158798217773
    4. 'from' → logprob: -4.326315879821777
    5. 'visited' → logprob: -5.076315879821777
    6. 'color' → logprob: -5.701315879821777
    7. ' queue' → logprob: -5.951315879821777
    8. 'used' → logprob: -5.951315879821777
    9. '```' → logprob: -6.576315879821777
    10. 'assigned' → logprob: -6.826315879821777

Token 377: ' #' (ID: 1069)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.1680009961128235
    2. 'q' → logprob: -2.0430009365081787
    3. 'from' → logprob: -4.918001174926758
    4. 'dq' → logprob: -5.168001174926758
    5. 'visited' → logprob: -5.793001174926758
    6. 'que' → logprob: -5.918001174926758
    7. 'Q' → logprob: -5.918001174926758
    8. 'used' → logprob: -6.293001174926758
    9. 'color' → logprob: -7.043001174926758
    10. 'deque' → logprob: -8.293001174926758

Token 378: ' Prepare' (ID: 49102)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.23939640820026398
    2. 'q' → logprob: -1.7393964529037476
    3. 'dq' → logprob: -4.239396572113037
    4. 'que' → logprob: -4.614396572113037
    5. 'visited' → logprob: -5.239396572113037
    6. 'Q' → logprob: -5.239396572113037
    7. 'used' → logprob: -7.114396572113037
    8. 'from' → logprob: -7.114396572113037
    9. 'deque' → logprob: -8.364396095275879
    10. 'color' → logprob: -8.614396095275879

Token 379: ' a' (ID: 261)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.06532476097345352
    2. 'que' → logprob: -3.8153247833251953
    3. 'q' → logprob: -3.9403247833251953
    4. 'Q' → logprob: -4.815324783325195
    5. ' queue' → logprob: -5.190324783325195
    6. 'visited' → logprob: -5.315324783325195
    7. '   ' → logprob: -6.315324783325195
    8. 'used' → logprob: -7.690324783325195
    9. 'dq' → logprob: -8.565324783325195
    10. 'a' → logprob: -8.565324783325195

Token 380: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.007269867695868015
    2. 'deque' → logprob: -5.632269859313965
    3. ' queue' → logprob: -6.257269859313965
    4. 'que' → logprob: -6.757269859313965
    5. 'q' → logprob: -7.632269859313965
    6. 'dq' → logprob: -10.007269859313965
    7. 'visited' → logprob: -10.382269859313965
    8. 'stack' → logprob: -11.632269859313965
    9. 'Q' → logprob: -12.007269859313965
    10. 'de' → logprob: -13.257269859313965

Token 381: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3541756272315979
    2. '=' → logprob: -1.2291755676269531
    3. '   ' → logprob: -6.479175567626953
    4. 'queue' → logprob: -6.604175567626953
    5. 'deque' → logprob: -6.854175567626953
    6. '(queue' → logprob: -6.979175567626953
    7. 'q' → logprob: -7.604175567626953
    8. ' queue' → logprob: -9.604175567626953
    9. ' for' → logprob: -9.729175567626953
    10. ',' → logprob: -10.229175567626953

Token 382: ' BFS' (ID: 190016)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.001955275423824787
    2. 'b' → logprob: -6.751955509185791
    3. 'queue' → logprob: -7.751955509185791
    4. 'q' → logprob: -8.501955032348633
    5. ' deque' → logprob: -9.376955032348633
    6. 'que' → logprob: -10.376955032348633
    7. 'de' → logprob: -11.376955032348633
    8. 'dq' → logprob: -11.501955032348633
    9. 'Q' → logprob: -12.251955032348633
    10. ' BFS' → logprob: -12.876955032348633

Token 383: ' traversal' (ID: 131388)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5312839150428772
    2. '=' → logprob: -2.0312838554382324
    3. 'queue' → logprob: -2.0312838554382324
    4. 'q' → logprob: -3.0312838554382324
    5. '   ' → logprob: -3.1562838554382324
    6. '(queue' → logprob: -3.5312838554382324
    7. ' queue' → logprob: -4.031283855438232
    8. 'deque' → logprob: -5.406283855438232
    9. '	queue' → logprob: -6.031283855438232
    10. 'Q' → logprob: -6.656283855438232

Token 384: ';' (ID: 26)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21909575164318085
    2. 'queue' → logprob: -1.8440957069396973
    3. ' queue' → logprob: -3.8440957069396973
    4. 'q' → logprob: -4.469095706939697
    5. '
' → logprob: -5.844095706939697
    6. '	queue' → logprob: -7.094095706939697
    7. 'deque' → logprob: -7.469095706939697
    8. '    
' → logprob: -7.469095706939697
    9. 'que' → logprob: -8.719096183776855
    10. 'Q' → logprob: -8.719096183776855

Token 385: ' store' (ID: 4897)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.5889184474945068
    2. 'q' → logprob: -1.4639184474945068
    3. 'queue' → logprob: -2.088918447494507
    4. ' q' → logprob: -2.588918447494507
    5. 'Q' → logprob: -4.963918685913086
    6. '   ' → logprob: -5.963918685913086
    7. ' Q' → logprob: -6.338918685913086
    8. ' que' → logprob: -6.463918685913086
    9. 'que' → logprob: -6.588918685913086
    10. 'deque' → logprob: -8.463918685913086

Token 386: ' tuples' (ID: 112464)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.04289618507027626
    2. ' deque' → logprob: -4.167896270751953
    3. 'de' → logprob: -4.417896270751953
    4. '(' → logprob: -5.417896270751953
    5. 'from' → logprob: -5.667896270751953
    6. 'q' → logprob: -6.167896270751953
    7. 'nodes' → logprob: -6.667896270751953
    8. ' nodes' → logprob: -6.792896270751953
    9. '(de' → logprob: -7.667896270751953
    10. '(queue' → logprob: -8.292896270751953

Token 387: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9955326318740845
    2. '(node' → logprob: -1.6205326318740845
    3. '[(' → logprob: -2.120532512664795
    4. ' (' → logprob: -2.370532512664795
    5. '   ' → logprob: -2.495532512664795
    6. ' of' → logprob: -2.745532512664795
    7. '(queue' → logprob: -3.245532512664795
    8. '([(' → logprob: -4.745532512664795
    9. '(nodes' → logprob: -4.745532512664795
    10. '((' → logprob: -5.745532512664795

Token 388: ' (' (ID: 350)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0009440997382625937
    2. '(' → logprob: -7.750944137573242
    3. '(current' → logprob: -8.000944137573242
    4. 'node' → logprob: -9.750944137573242
    5. ' (' → logprob: -9.750944137573242
    6. '(nodes' → logprob: -10.125944137573242
    7. '(vertex' → logprob: -12.250944137573242
    8. '(int' → logprob: -12.375944137573242
    9. '(de' → logprob: -13.375944137573242
    10. '(root' → logprob: -13.500944137573242

Token 389: 'current' (ID: 5804)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.026625949889421463
    2. 'current' → logprob: -4.401626110076904
    3. '0' → logprob: -4.901626110076904
    4. ' node' → logprob: -5.526626110076904
    5. '(node' → logprob: -6.151626110076904
    6. 'index' → logprob: -9.526625633239746
    7. 'int' → logprob: -9.901625633239746
    8. ' current' → logprob: -10.151625633239746
    9. 'vertex' → logprob: -10.276625633239746
    10. 'neighbor' → logprob: -10.401625633239746

Token 390: ' node' (ID: 4596)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.74063640832901
    2. 'node' → logprob: -1.1156363487243652
    3. ',' → logprob: -2.2406363487243652
    4. ' node' → logprob: -2.4906363487243652
    5. ',node' → logprob: -5.490636348724365
    6. ' ,' → logprob: -6.865636348724365
    7. 'Node' → logprob: -7.990636348724365
    8. '_index' → logprob: -8.615636825561523
    9. '_vertex' → logprob: -8.740636825561523
    10. '	node' → logprob: -9.240636825561523

Token 391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2378600735682994e-05
    2. ',node' → logprob: -11.125032424926758
    3. ' ,' → logprob: -12.000032424926758
    4. ',
' → logprob: -12.000032424926758
    5. '   ' → logprob: -14.250032424926758
    6. ',current' → logprob: -14.375032424926758
    7. ')' → logprob: -14.375032424926758
    8. ',index' → logprob: -14.625032424926758
    9. '‌,' → logprob: -14.750032424926758
    10. 's' → logprob: -15.250032424926758

Token 392: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.635018527507782
    2. 'used' → logprob: -2.0100185871124268
    3. 'color' → logprob: -2.6350185871124268
    4. 'depth' → logprob: -2.7600185871124268
    5. '0' → logprob: -3.5100185871124268
    6. 'neighbor' → logprob: -3.5100185871124268
    7. 'visited' → logprob: -3.6350185871124268
    8. 'assigned' → logprob: -3.8850185871124268
    9. 'available' → logprob: -4.010018348693848
    10. '-' → logprob: -4.135018348693848

Token 393: ' node' (ID: 4596)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010700009443098679
    2. '_node' → logprob: -10.250106811523438
    3. ')
' → logprob: -10.375106811523438
    4. ',' → logprob: -10.375106811523438
    5. 'node' → logprob: -12.500106811523438
    6. ' )' → logprob: -13.250106811523438
    7. '),' → logprob: -13.375106811523438
    8. ')

' → logprob: -14.750106811523438
    9. ' node' → logprob: -15.000106811523438
    10. ',node' → logprob: -15.125106811523438

Token 394: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011200665176147595
    2. ')
' → logprob: -9.12511157989502
    3. ' )' → logprob: -13.50011157989502
    4. ',' → logprob: -14.25011157989502
    5. ')

' → logprob: -15.25011157989502
    6. '),' → logprob: -15.25011157989502
    7. ')
' → logprob: -16.250112533569336
    8. '   ' → logprob: -16.500112533569336
    9. '<|end|>' → logprob: -16.500112533569336
    10. ')`' → logprob: -17.125112533569336

Token 395: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040105968713760376
    2. 'queue' → logprob: -3.5401060581207275
    3. 'q' → logprob: -4.915105819702148
    4. ' queue' → logprob: -6.540105819702148
    5. 'deque' → logprob: -7.665105819702148
    6. '```' → logprob: -8.040105819702148
    7. '
' → logprob: -8.165105819702148
    8. 'Q' → logprob: -8.665105819702148
    9. 'que' → logprob: -9.290105819702148
    10. '    
' → logprob: -9.540105819702148

Token 396: ' q' (ID: 2335)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.9310365915298462
    2. '   ' → logprob: -1.3060365915298462
    3. 'q' (adapté à ' q') → logprob: -1.6810365915298462
    4. ' queue' → logprob: -2.5560364723205566
    5. 'que' → logprob: -3.3060364723205566
    6. 'Q' → logprob: -3.6810364723205566
    7. ' que' → logprob: -5.806036472320557
    8. ' q' → logprob: -5.931036472320557
    9. 'from' → logprob: -6.056036472320557
    10. ' Q' → logprob: -7.931036472320557

Token 397: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126929372549057
    2. '=' → logprob: -2.12692928314209
    3. 'ue' → logprob: -14.37692928314209
    4. 'u' → logprob: -15.62692928314209
    5. ' ' → logprob: -15.87692928314209
    6. '=q' → logprob: -16.001930236816406
    7. 'deque' → logprob: -16.001930236816406
    8. ',' → logprob: -17.126930236816406
    9. '=[]' → logprob: -17.376930236816406
    10. '   ' → logprob: -17.626930236816406

Token 398: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.011048054322600365
    2. ' deque' → logprob: -4.511047840118408
    3. 'Deque' → logprob: -16.51104736328125
    4. '   ' → logprob: -16.51104736328125
    5. 'collections' → logprob: -17.01104736328125
    6. '[(' → logprob: -17.01104736328125
    7. ' ' → logprob: -18.13604736328125
    8. 'de' → logprob: -18.76104736328125
    9. 'dq' → logprob: -20.13604736328125
    10. '(de' → logprob: -20.26104736328125

Token 399: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.00013536323967855424
    2. '()
' → logprob: -9.62513542175293
    3. '()' → logprob: -9.87513542175293
    4. '([' → logprob: -11.50013542175293
    5. '[(' → logprob: -11.87513542175293
    6. '((' → logprob: -15.00013542175293
    7. '([
' → logprob: -15.12513542175293
    8. '(' → logprob: -16.50013542175293
    9. '()

' → logprob: -17.62513542175293
    10. '([{' → logprob: -18.62513542175293

Token 400: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02702459692955017
    2. '   ' → logprob: -4.027024745941162
    3. 'q' → logprob: -4.777024745941162
    4. '(q' → logprob: -8.652024269104004
    5. ' (' → logprob: -9.652024269104004
    6. ' q' → logprob: -9.777024269104004
    7. '0' → logprob: -10.027024269104004
    8. '```' → logprob: -10.402024269104004
    9. '[' → logprob: -11.777024269104004
    10. '()' → logprob: -12.027024269104004

Token 401: ' for' (ID: 395)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0013563097454607487
    2. '   ' → logprob: -7.00135612487793
    3. '(' → logprob: -7.87635612487793
    4. ' q' → logprob: -9.75135612487793
    5. '0' → logprob: -12.62635612487793
    6. '
' → logprob: -13.75135612487793
    7. '	q' → logprob: -13.87635612487793
    8. ' (' → logprob: -14.25135612487793
    9. '    
' → logprob: -14.87635612487793
    10. '```' → logprob: -15.37635612487793

Token 402: ' e' (ID: 319)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.28721538186073303
    2. 'v' → logprob: -1.9122153520584106
    3. 'child' → logprob: -2.6622154712677
    4. ' neighbor' → logprob: -5.162215232849121
    5. '(' → logprob: -5.287215232849121
    6. 'nei' → logprob: -5.537215232849121
    7. 'i' → logprob: -5.662215232849121
    8. 'nbr' → logprob: -6.037215232849121
    9. 'n' → logprob: -6.162215232849121
    10. 'c' → logprob: -6.412215232849121

Token 403: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7718089818954468
    2. 'in' → logprob: -1.3968089818954468
    3. 'dge' → logprob: -1.7718089818954468
    4. 'd' → logprob: -2.7718091011047363
    5. '(' → logprob: -3.0218091011047363
    6. '0' → logprob: -6.521809101104736
    7. 'e' → logprob: -7.021809101104736
    8. 'de' → logprob: -7.521809101104736
    9. '1' → logprob: -7.771809101104736
    10. '_edge' → logprob: -7.896809101104736

Token 404: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -0.0002659847668837756
    2. ' Edge' → logprob: -8.375266075134277
    3. '<Edge' → logprob: -11.250266075134277
    4. '[' → logprob: -11.500266075134277
    5. '.Edge' → logprob: -12.250266075134277
    6. '(' → logprob: -12.375266075134277
    7. '[(' → logprob: -13.500266075134277
    8. '_edge' → logprob: -14.250266075134277
    9. '   ' → logprob: -15.000266075134277
    10. ' ' → logprob: -15.625266075134277

Token 405: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.843177233240567e-05
    2. '0' → logprob: -11.500018119812012
    3. ' [' → logprob: -12.875018119812012
    4. 's' → logprob: -13.875018119812012
    5. '```' → logprob: -13.875018119812012
    6. 'q' → logprob: -14.250018119812012
    7. '   ' → logprob: -14.500018119812012
    8. '[q' → logprob: -14.500018119812012
    9. '\[' → logprob: -14.875018119812012
    10. '[
' → logprob: -15.250018119812012

Token 406: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004649184178560972
    2. '[' → logprob: -5.3796491622924805
    3. ' ' → logprob: -10.62964916229248
    4. '(' → logprob: -13.37964916229248
    5. '   ' → logprob: -13.75464916229248
    6. 'q' → logprob: -14.50464916229248
    7. '][' → logprob: -15.37964916229248
    8. '[
' → logprob: -15.75464916229248
    9. '1' → logprob: -16.192150115966797
    10. 'Color' → logprob: -16.254650115966797

Token 407: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.021847769618034363
    2. ']:
' → logprob: -3.896847724914551
    3. ']' → logprob: -7.146847724914551
    4. ']:
' → logprob: -7.896847724914551
    5. ']):' → logprob: -9.39684772491455
    6. '):' → logprob: -11.02184772491455
    7. ']>' → logprob: -11.52184772491455
    8. ']):
' → logprob: -11.64684772491455
    9. '   ' → logprob: -11.89684772491455
    10. ':' → logprob: -12.52184772491455

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009118633344769478
    2. 'q' → logprob: -5.884118556976318
    3. ' q' → logprob: -5.884118556976318
    4. '   ' → logprob: -6.259118556976318
    5. '	q' → logprob: -6.634118556976318
    6. ',q' → logprob: -9.134119033813477
    7. '	   ' → logprob: -9.384119033813477
    8. '    ' → logprob: -10.384119033813477
    9. '      ' → logprob: -11.384119033813477
    10. '	' → logprob: -12.134119033813477

Token 409: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -3.4121114822482923e-06
    2. '   ' → logprob: -12.875003814697266
    3. ' q' → logprob: -14.125003814697266
    4. '	q' → logprob: -17.500003814697266
    5. '       ' → logprob: -19.250003814697266
    6. 'Color' → logprob: -19.250003814697266
    7. '
' → logprob: -20.000003814697266
    8. '_q' → logprob: -20.000003814697266
    9. '(q' → logprob: -20.500003814697266
    10. '```' → logprob: -20.625003814697266

Token 410: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.7014437364414334e-05
    2. '.' → logprob: -10.62502670288086
    3. 'append' → logprob: -13.50002670288086
    4. '   ' → logprob: -14.62502670288086
    5. ' .' → logprob: -15.00002670288086
    6. '.enqueue' → logprob: -15.37502670288086
    7. ').' → logprob: -16.50002670288086
    8. '.Append' → logprob: -16.87502670288086
    9. '.put' → logprob: -16.87502670288086
    10. '.push' → logprob: -16.87502670288086

Token 411: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -9.698698704596609e-05
    2. '(' → logprob: -9.875097274780273
    3. '(e' → logprob: -10.000097274780273
    4. '([' → logprob: -17.875097274780273
    5. '(((' → logprob: -18.125097274780273
    6. '   ' → logprob: -18.500097274780273
    7. ' ((' → logprob: -18.875097274780273
    8. '(('' → logprob: -19.250097274780273
    9. '[(' → logprob: -19.375097274780273
    10. ' (' → logprob: -20.375097274780273

Token 412: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -3.054500666621607e-06
    2. ' e' → logprob: -13.37500286102295
    3. '0' → logprob: -13.87500286102295
    4. '(e' → logprob: -15.75000286102295
    5. '   ' → logprob: -16.125003814697266
    6. ')e' → logprob: -16.375003814697266
    7. '(' → logprob: -16.875003814697266
    8. ',' → logprob: -17.250003814697266
    9. '	e' → logprob: -17.250003814697266
    10. ',e' → logprob: -17.250003814697266

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002612997777760029
    2. ' ,' → logprob: -6.127613067626953
    3. '0' → logprob: -7.877613067626953
    4. '[' → logprob: -11.002613067626953
    5. '1' → logprob: -12.252613067626953
    6. '-' → logprob: -12.752613067626953
    7. ',
' → logprob: -12.752613067626953
    8. ',q' → logprob: -12.752613067626953
    9. '`,' → logprob: -13.002613067626953
    10. 'e' → logprob: -13.002613067626953

Token 414: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -15.125003814697266
    4. '۰' → logprob: -17.875003814697266
    5. '０' → logprob: -18.812503814697266
    6. '[' → logprob: -18.812503814697266
    7. ')' → logprob: -19.812503814697266
    8. '  ' → logprob: -20.062503814697266
    9. '00' → logprob: -20.062503814697266
    10. '`' → logprob: -20.125003814697266

Token 415: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -17.125
    4. '۰' → logprob: -18.375
    5. '０' → logprob: -19.8125
    6. 'None' → logprob: -20.3125
    7. '-' → logprob: -20.75
    8. '[' → logprob: -20.8125
    9. ')' → logprob: -21.0
    10. '০' → logprob: -21.1875

Token 416: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00017874970217235386
    2. '))
' → logprob: -9.250178337097168
    3. ')' → logprob: -10.250178337097168
    4. ',' → logprob: -10.250178337097168
    5. ' ))' → logprob: -11.625178337097168
    6. '   ' → logprob: -13.625178337097168
    7. ')))' → logprob: -14.625178337097168
    8. '));' → logprob: -14.750178337097168
    9. '),' → logprob: -14.750178337097168
    10. '))

' → logprob: -15.500178337097168

Token 417: '   ' (ID: 271)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3932507038116455
    2. 'i' → logprob: -1.3932507038116455
    3. '   ' → logprob: -3.2682507038116455
    4. 'index' → logprob: -4.143250465393066
    5. 'color' → logprob: -4.393250465393066
    6. 'c' → logprob: -5.643250465393066
    7. 'pos' → logprob: -6.393250465393066
    8. '```' → logprob: -6.393250465393066
    9. ' idx' → logprob: -7.268250465393066
    10. ' i' → logprob: -7.518250465393066

Token 418: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0319877564907074
    2. 'index' → logprob: -3.9069876670837402
    3. 'i' → logprob: -4.78198766708374
    4. 'pos' → logprob: -6.65698766708374
    5. 'color' → logprob: -7.03198766708374
    6. 'cnt' → logprob: -7.90698766708374
    7. 'c' → logprob: -9.156988143920898
    8. 'used' → logprob: -9.531988143920898
    9. '   ' → logprob: -9.906988143920898
    10. 'ptr' → logprob: -10.031988143920898

Token 419: ' Initialize' (ID: 19496)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.03641297295689583
    2. 'index' → logprob: -3.5364129543304443
    3. 'color' → logprob: -5.661413192749023
    4. 'pos' → logprob: -6.911413192749023
    5. 'cnt' → logprob: -7.161413192749023
    6. 'i' → logprob: -7.536413192749023
    7. 'used' → logprob: -8.161413192749023
    8. 'cur' → logprob: -8.911413192749023
    9. 'current' → logprob: -9.411413192749023
    10. 'count' → logprob: -9.661413192749023

Token 420: ' the' (ID: 290)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.04477051645517349
    2. 'index' → logprob: -4.16977071762085
    3. 'used' → logprob: -4.54477071762085
    4. 'cnt' → logprob: -5.04477071762085
    5. 'color' → logprob: -5.29477071762085
    6. 'pos' → logprob: -5.91977071762085
    7. 'i' → logprob: -7.16977071762085
    8. 'count' → logprob: -7.41977071762085
    9. 'ptr' → logprob: -7.79477071762085
    10. 'cur' → logprob: -8.044770240783691

Token 421: ' answer' (ID: 6052)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.18724371492862701
    2. 'index' → logprob: -2.312243700027466
    3. 'used' → logprob: -3.437243700027466
    4. 'color' → logprob: -3.812243700027466
    5. 'cnt' → logprob: -5.062243938446045
    6. 'pos' → logprob: -5.187243938446045
    7. 'cur' → logprob: -7.062243938446045
    8. 'count' → logprob: -7.062243938446045
    9. 'assigned' → logprob: -7.437243938446045
    10. 'ptr' → logprob: -7.562243938446045

Token 422: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40924251079559326
    2. '=' → logprob: -1.1592425107955933
    3. 'ans' → logprob: -4.784242630004883
    4. 'sum' → logprob: -5.034242630004883
    5. ' ans' → logprob: -5.909242630004883
    6. '   ' → logprob: -6.784242630004883
    7. '_sum' → logprob: -7.034242630004883
    8. '_ans' → logprob: -7.284242630004883
    9. 's' → logprob: -7.409242630004883
    10. 'answer' → logprob: -7.659242630004883

Token 423: ' ' (ID: 220)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.04731270298361778
    2. '0' → logprob: -3.4223127365112305
    3. 'Color' → logprob: -4.4223127365112305
    4. 'sum' → logprob: -6.7973127365112305
    5. ' C' → logprob: -8.29731273651123
    6. ' ' → logprob: -9.42231273651123
    7. ' Color' → logprob: -10.54731273651123
    8. '   ' → logprob: -11.17231273651123
    9. '```' → logprob: -11.42231273651123
    10. 'the' → logprob: -11.54731273651123

Token 424: '0' (ID: 15)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.13075768947601318
    2. '0' → logprob: -2.6307578086853027
    3. 'Color' → logprob: -3.0057578086853027
    4. 'sum' → logprob: -7.130757808685303
    5. 'max' → logprob: -10.255757331848145
    6. 'color' → logprob: -10.380757331848145
    7. '-' → logprob: -10.505757331848145
    8. '-C' → logprob: -10.630757331848145
    9. 'ans' → logprob: -11.130757331848145
    10. ' C' → logprob: -11.130757331848145

Token 425: ' (' (ID: 350)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0643267631530762
    2. 'answer' → logprob: -1.1893267631530762
    3. '   ' → logprob: -1.4393267631530762
    4. '
' → logprob: -2.314326763153076
    5. ' ans' → logprob: -4.689326763153076
    6. ' =' → logprob: -6.064326763153076
    7. ' answer' → logprob: -7.564326763153076
    8. '=' → logprob: -7.564326763153076
    9. '	ans' → logprob: -7.814326763153076
    10. '_ans' → logprob: -7.814326763153076

Token 426: 'will' (ID: 21053)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4773411452770233
    2. '0' → logprob: -1.4773411750793457
    3. 'sum' → logprob: -2.8523411750793457
    4. 'C' → logprob: -3.2273411750793457
    5. 'answer' → logprob: -3.3523411750793457
    6. 'idx' → logprob: -5.727341175079346
    7. 'assigned' → logprob: -5.727341175079346
    8. 'total' → logprob: -5.852341175079346
    9. 'color' → logprob: -5.977341175079346
    10. '1' → logprob: -6.352341175079346

Token 427: ' sum' (ID: 4215)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.5462650656700134
    2. 'be' → logprob: -1.5462651252746582
    3. ' accumulate' → logprob: -2.796265125274658
    4. 'store' → logprob: -2.921265125274658
    5. '+=' → logprob: -3.796265125274658
    6. 'hold' → logprob: -4.296265125274658
    7. 'sum' → logprob: -4.546265125274658
    8. ' be' → logprob: -4.671265125274658
    9. 'count' → logprob: -4.921265125274658
    10. '=' → logprob: -5.171265125274658

Token 428: ' the' (ID: 290)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -1.2395892143249512
    2. 'C' → logprob: -1.4895892143249512
    3. ' +=' → logprob: -2.114589214324951
    4. '   ' → logprob: -2.364589214324951
    5. ')' → logprob: -2.614589214324951
    6. 'the' → logprob: -3.239589214324951
    7. '=' → logprob: -3.614589214324951
    8. '(C' → logprob: -3.739589214324951
    9. ' C' → logprob: -3.864589214324951
    10. ' the' → logprob: -3.989589214324951

Token 429: ' assigned' (ID: 21482)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.2132873833179474
    2. ' C' → logprob: -2.963287353515625
    3. 'Color' → logprob: -3.213287353515625
    4. ' colors' → logprob: -3.463287353515625
    5. 'colors' → logprob: -4.213287353515625
    6. 'c' → logprob: -4.588287353515625
    7. '_' → logprob: -5.088287353515625
    8. ')' → logprob: -5.213287353515625
    9. ' color' → logprob: -5.463287353515625
    10. 'assigned' → logprob: -5.463287353515625

Token 430: ' colors' (ID: 10803)
  Prédit: ' colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' colors' → logprob: -0.741186797618866
    2. 'colors' → logprob: -0.741186797618866
    3. '_colors' → logprob: -4.241186618804932
    4. ' ' → logprob: -4.991186618804932
    5. ')' → logprob: -5.241186618804932
    6. '=' → logprob: -5.491186618804932
    7. 'color' → logprob: -5.741186618804932
    8. '   ' → logprob: -6.116186618804932
    9. ' color' → logprob: -6.241186618804932
    10. '_color' → logprob: -6.241186618804932

Token 431: ' except' (ID: 6384)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9888368248939514
    2. ' -' → logprob: -1.3638367652893066
    3. 'except' → logprob: -1.9888367652893066
    4. '[' → logprob: -2.6138367652893066
    5. '-' → logprob: -2.9888367652893066
    6. ',' → logprob: -3.4888367652893066
    7. ' except' → logprob: -3.8638367652893066
    8. 'excluding' → logprob: -3.8638367652893066
    9. '   ' → logprob: -4.613836765289307
    10. '+' → logprob: -5.113836765289307

Token 432: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7601401209831238
    2. ' the' → logprob: -1.3851401805877686
    3. 'for' → logprob: -2.0101401805877686
    4. 'C' → logprob: -2.3851401805877686
    5. ' for' → logprob: -3.3851401805877686
    6. 'Color' → logprob: -4.6351399421691895
    7. ' C' → logprob: -4.6351399421691895
    8. 'largest' → logprob: -6.7601399421691895
    9. ' Color' → logprob: -8.010140419006348
    10. '   ' → logprob: -8.260140419006348

Token 433: ' largest' (ID: 10574)
  Prédit: 'largest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'largest' → logprob: -0.10221683979034424
    2. 'first' → logprob: -2.3522167205810547
    3. '0' → logprob: -6.852216720581055
    4. ' largest' → logprob: -7.852216720581055
    5. ' first' → logprob: -8.727216720581055
    6. 'max' → logprob: -8.852216720581055
    7. 'one' → logprob: -9.602216720581055
    8. 'last' → logprob: -9.727216720581055
    9. '[' → logprob: -10.227216720581055
    10. '```' → logprob: -10.602216720581055

Token 434: ' one' (ID: 1001)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02721383422613144
    2. ' )' → logprob: -4.652214050292969
    3. ' one' → logprob: -4.902214050292969
    4. 'color' → logprob: -5.527214050292969
    5. 'one' → logprob: -5.652214050292969
    6. ' color' → logprob: -7.027214050292969
    7. ')
' → logprob: -7.402214050292969
    8. '_color' → logprob: -8.277214050292969
    9. 'Color' → logprob: -8.777214050292969
    10. 'assigned' → logprob: -9.277214050292969

Token 435: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009223000961355865
    2. '+' → logprob: -8.000922203063965
    3. '   ' → logprob: -8.375922203063965
    4. ' )' → logprob: -9.125922203063965
    5. ')
' → logprob: -9.375922203063965
    6. ',' → logprob: -9.750922203063965
    7. 'except' → logprob: -10.500922203063965
    8. ' +' → logprob: -10.625922203063965
    9. 'for' → logprob: -11.125922203063965
    10. '```' → logprob: -11.750922203063965

Token 436: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16167475283145905
    2. 'ans' → logprob: -2.786674737930298
    3. 'answer' → logprob: -3.661674737930298
    4. 'idx' → logprob: -3.911674737930298
    5. 'color' → logprob: -4.661674976348877
    6. 'i' → logprob: -4.911674976348877
    7. ' ans' → logprob: -4.911674976348877
    8. 'index' → logprob: -5.786674976348877
    9. '```' → logprob: -5.911674976348877
    10. 'sum' → logprob: -6.286674976348877

Token 437: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.06216665729880333
    2. 'answer' → logprob: -2.812166690826416
    3. 'Ans' → logprob: -9.937166213989258
    4. 'sum' → logprob: -10.687166213989258
    5. '```' → logprob: -10.687166213989258
    6. 'res' → logprob: -10.812166213989258
    7. 'total' → logprob: -11.312166213989258
    8. '_ans' → logprob: -11.437166213989258
    9. 'Answer' → logprob: -11.562166213989258
    10. ' ans' → logprob: -11.562166213989258

Token 438: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021023452281952
    2. '=' → logprob: -2.350210189819336
    3. ' +=' → logprob: -13.350210189819336
    4. ' ' → logprob: -14.475210189819336
    5. ')' → logprob: -14.600210189819336
    6. '   ' → logprob: -15.475210189819336
    7. ',' → logprob: -15.600210189819336
    8. '_' → logprob: -15.725210189819336
    9. '+=' → logprob: -16.100210189819336
    10. ' =
' → logprob: -16.475210189819336

Token 439: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03837652876973152
    2. 'C' → logprob: -3.413376569747925
    3. ' ' → logprob: -5.788376331329346
    4. ' C' → logprob: -6.413376331329346
    5. '+C' → logprob: -12.413376808166504
    6. 'sum' → logprob: -12.538376808166504
    7. '+' → logprob: -13.288376808166504
    8. '   ' → logprob: -14.038376808166504
    9. '`' → logprob: -14.288376808166504
    10. '
' → logprob: -14.350876808166504

Token 440: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02987498603761196
    2. 'C' → logprob: -3.5298750400543213
    3. ' ' → logprob: -9.779874801635742
    4. 'Color' → logprob: -10.404874801635742
    5. ' C' → logprob: -10.904874801635742
    6. 'sum' → logprob: -11.154874801635742
    7. 'int' → logprob: -14.279874801635742
    8. 'color' → logprob: -14.592374801635742
    9. '   ' → logprob: -15.029874801635742
    10. '1' → logprob: -15.217374801635742

Token 441: '

' (ID: 279)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.8594664335250854
    2. '   ' → logprob: -0.9844664335250854
    3. '
' → logprob: -2.109466552734375
    4. 'i' → logprob: -3.984466552734375
    5. ' idx' → logprob: -3.984466552734375
    6. 'index' → logprob: -4.484466552734375
    7. ',' → logprob: -4.984466552734375
    8. '	idx' → logprob: -5.234466552734375
    9. 'color' → logprob: -5.359466552734375
    10. ' i' → logprob: -5.484466552734375

Token 442: '   ' (ID: 271)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.41228899359703064
    2. '   ' → logprob: -1.412289023399353
    3. 'i' → logprob: -3.4122889041900635
    4. 'index' → logprob: -3.9122889041900635
    5. 'color' → logprob: -4.037289142608643
    6. 'pos' → logprob: -5.162289142608643
    7. ' idx' → logprob: -5.662289142608643
    8. 'cnt' → logprob: -5.912289142608643
    9. 'c' → logprob: -6.287289142608643
    10. 'cur' → logprob: -6.412289142608643

Token 443: ' #' (ID: 1069)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0665944516658783
    2. 'index' → logprob: -3.566594362258911
    3. 'pos' → logprob: -4.56659460067749
    4. 'color' → logprob: -4.81659460067749
    5. 'i' → logprob: -4.81659460067749
    6. 'cnt' → logprob: -5.56659460067749
    7. 'cur' → logprob: -6.56659460067749
    8. 'c' → logprob: -6.81659460067749
    9. 'ptr' → logprob: -7.31659460067749
    10. 'id' → logprob: -7.81659460067749

Token 444: ' Assign' (ID: 60840)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.06954941898584366
    2. 'index' → logprob: -3.069549322128296
    3. 'color' → logprob: -4.444549560546875
    4. 'pos' → logprob: -5.694549560546875
    5. 'i' → logprob: -5.944549560546875
    6. 'cnt' → logprob: -6.694549560546875
    7. 'cur' → logprob: -8.069549560546875
    8. 'for' → logprob: -8.319549560546875
    9. 'used' → logprob: -8.569549560546875
    10. 'c' → logprob: -8.569549560546875

Token 445: ' the' (ID: 290)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.09351181983947754
    2. 'index' → logprob: -3.3435118198394775
    3. 'color' → logprob: -3.4685118198394775
    4. ' idx' → logprob: -4.468511581420898
    5. 'i' → logprob: -5.093511581420898
    6. 'cnt' → logprob: -6.093511581420898
    7. 'pos' → logprob: -7.093511581420898
    8. ' color' → logprob: -7.343511581420898
    9. '   ' → logprob: -8.593511581420898
    10. ' index' → logprob: -8.593511581420898

Token 446: ' next' (ID: 2613)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.7124413847923279
    2. 'color' → logprob: -0.9624413847923279
    3. 'index' → logprob: -2.3374414443969727
    4. 'next' → logprob: -4.587441444396973
    5. 'pos' → logprob: -5.337441444396973
    6. 'current' → logprob: -5.462441444396973
    7. 'i' → logprob: -5.962441444396973
    8. 'cur' → logprob: -6.462441444396973
    9. 'cnt' → logprob: -6.587441444396973
    10. 'for' → logprob: -6.837441444396973

Token 447: ' largest' (ID: 10574)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.6449314951896667
    2. 'idx' → logprob: -1.8949315547943115
    3. 'i' → logprob: -2.6449315547943115
    4. '_color' → logprob: -2.7699315547943115
    5. 'token' → logprob: -2.8949315547943115
    6. ' color' → logprob: -3.2699315547943115
    7. '_idx' → logprob: -4.019931316375732
    8. '_token' → logprob: -4.144931316375732
    9. '=' → logprob: -4.644931316375732
    10. 'index' → logprob: -4.769931316375732

Token 448: ' colors' (ID: 10803)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.32315319776535034
    2. ' color' → logprob: -1.6981532573699951
    3. '_color' → logprob: -2.573153257369995
    4. '_' → logprob: -4.573153018951416
    5. 'colors' → logprob: -6.073153018951416
    6. '_colors' → logprob: -6.698153018951416
    7. ')' → logprob: -6.948153018951416
    8. ' colors' → logprob: -7.448153018951416
    9. '   ' → logprob: -7.823153018951416
    10. 'c' → logprob: -8.448153495788574

Token 449: ' one' (ID: 1001)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38050025701522827
    2. 'idx' → logprob: -1.630500316619873
    3. 'i' → logprob: -3.005500316619873
    4. ',' → logprob: -3.255500316619873
    5. 'index' → logprob: -4.130500316619873
    6. 'color' → logprob: -5.255500316619873
    7. 'for' → logprob: -5.380500316619873
    8. ',i' → logprob: -6.005500316619873
    9. ' idx' → logprob: -6.880500316619873
    10. ' i' → logprob: -7.505500316619873

Token 450: ' by' (ID: 656)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.05650996416807175
    2. ' by' → logprob: -3.1815099716186523
    3. 'at' → logprob: -5.806509971618652
    4. '-by' → logprob: -6.181509971618652
    5. '   ' → logprob: -6.306509971618652
    6. '=' → logprob: -6.431509971618652
    7. 'for' → logprob: -7.556509971618652
    8. '+=' → logprob: -7.806509971618652
    9. '```' → logprob: -7.806509971618652
    10. ' at' → logprob: -7.931509971618652

Token 451: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.14491963386535645
    2. '1' → logprob: -2.0199196338653564
    3. ' one' → logprob: -6.644919395446777
    4. 'step' → logprob: -7.894919395446777
    5. 'i' → logprob: -8.644919395446777
    6. '0' → logprob: -9.269919395446777
    7. ' ' → logprob: -10.019919395446777
    8. 'index' → logprob: -10.144919395446777
    9. 'ones' → logprob: -10.144919395446777
    10. 'One' → logprob: -10.894919395446777

Token 452: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03142869099974632
    2. 'idx' → logprob: -4.406428813934326
    3. 'for' → logprob: -4.656428813934326
    4. 'i' → logprob: -5.031428813934326
    5. ',' → logprob: -7.031428813934326
    6. 'index' → logprob: -7.156428813934326
    7. '
' → logprob: -7.906428813934326
    8. 'color' → logprob: -8.031428337097168
    9. ',i' → logprob: -9.531428337097168
    10. ' for' → logprob: -9.781428337097168

Token 453: ' the' (ID: 290)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.8909033536911011
    2. 'each' → logprob: -1.640903353691101
    3. 'q' → logprob: -2.1409034729003906
    4. 'neighbors' → logprob: -2.3909034729003906
    5. 'children' → logprob: -2.8909034729003906
    6. ' nodes' → logprob: -3.3909034729003906
    7. 'the' → logprob: -3.8909034729003906
    8. 'child' → logprob: -4.140903472900391
    9. 'Color' → logprob: -4.140903472900391
    10. 'node' → logprob: -4.390903472900391

Token 454: ' rest' (ID: 2867)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.3974120318889618
    2. 'node' → logprob: -2.022412061691284
    3. ' nodes' → logprob: -2.772412061691284
    4. 'q' → logprob: -3.022412061691284
    5. 'neighbors' → logprob: -3.647412061691284
    6. 'children' → logprob: -4.147411823272705
    7. 'child' → logprob: -4.772411823272705
    8. 'neighbor' → logprob: -5.022411823272705
    9. ' node' → logprob: -5.397411823272705
    10. 'next' → logprob: -5.647411823272705

Token 455: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3947792053222656
    2. '   ' → logprob: -1.7697792053222656
    3. 'of' → logprob: -1.8947792053222656
    4. 'for' → logprob: -6.019779205322266
    5. ' for' → logprob: -7.644779205322266
    6. ',' → logprob: -7.894779205322266
    7. ' in' → logprob: -8.144779205322266
    8. '.' → logprob: -8.269779205322266
    9. 'tokens' → logprob: -8.394779205322266
    10. '  ' → logprob: -8.769779205322266

Token 456: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.023145196959376335
    2. ' the' → logprob: -4.2731451988220215
    3. 'nodes' → logprob: -4.7731451988220215
    4. ' nodes' → logprob: -8.273144721984863
    5. 'q' → logprob: -8.898144721984863
    6. '   ' → logprob: -10.023144721984863
    7. 'Color' → logprob: -11.148144721984863
    8. '```' → logprob: -11.898144721984863
    9. '(nodes' → logprob: -11.898144721984863
    10. '#' → logprob: -12.898144721984863

Token 457: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.01434342935681343
    2. ' nodes' → logprob: -4.38934326171875
    3. 'Color' → logprob: -7.01434326171875
    4. 'q' → logprob: -7.63934326171875
    5. 'node' → logprob: -9.01434326171875
    6. 'C' → logprob: -9.88934326171875
    7. 'children' → logprob: -10.01434326171875
    8. 'N' → logprob: -10.26434326171875
    9. 'for' → logprob: -10.26434326171875
    10. '(nodes' → logprob: -10.63934326171875

Token 458: ' using' (ID: 2360)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46877965331077576
    2. 'idx' → logprob: -1.5937796831130981
    3. 'i' → logprob: -2.7187795639038086
    4. 'for' → logprob: -3.3437795639038086
    5. ',' → logprob: -3.5937795639038086
    6. '
' → logprob: -4.593779563903809
    7. ' i' → logprob: -4.843779563903809
    8. ' idx' → logprob: -4.843779563903809
    9. ' for' → logprob: -4.968779563903809
    10. 'index' → logprob: -5.718779563903809

Token 459: ' BFS' (ID: 190016)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.12432198226451874
    2. 'B' → logprob: -2.874321937561035
    3. ' q' → logprob: -3.749321937561035
    4. 'the' → logprob: -4.249321937561035
    5. ' the' → logprob: -4.624321937561035
    6. 'b' → logprob: -5.249321937561035
    7. ' BFS' → logprob: -5.874321937561035
    8. 'a' → logprob: -6.624321937561035
    9. '   ' → logprob: -7.374321937561035
    10. ' a' → logprob: -7.374321937561035

Token 460: ' order' (ID: 2569)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019916653633117676
    2. 'idx' → logprob: -5.269916534423828
    3. 'i' → logprob: -5.644916534423828
    4. '
' → logprob: -5.769916534423828
    5. 'for' → logprob: -5.894916534423828
    6. '    
' → logprob: -7.019916534423828
    7. 'color' → logprob: -7.269916534423828
    8. 'index' → logprob: -7.269916534423828
    9. ',' → logprob: -7.519916534423828
    10. ' for' → logprob: -7.644916534423828

Token 461: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040402304381132126
    2. 'i' → logprob: -4.540402412414551
    3. ' i' → logprob: -5.665402412414551
    4. 'while' → logprob: -5.790402412414551
    5. 'idx' → logprob: -5.790402412414551
    6. '    
' → logprob: -6.165402412414551
    7. 'color' → logprob: -6.165402412414551
    8. 'index' → logprob: -6.165402412414551
    9. 'for' → logprob: -6.290402412414551
    10. 'c' → logprob: -6.290402412414551

Token 462: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.050418827682733536
    2. '
' → logprob: -3.5504188537597656
    3. 'idx' → logprob: -5.050418853759766
    4. 'i' → logprob: -5.175418853759766
    5. '```' → logprob: -6.300418853759766
    6. '    
' → logprob: -6.300418853759766
    7. 'index' → logprob: -6.550418853759766
    8. 'color' → logprob: -6.925418853759766
    9. ' i' → logprob: -7.425418853759766
    10. 'for' → logprob: -7.675418853759766

Token 463: ' for' (ID: 395)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.10782269388437271
    2. 'index' → logprob: -2.8578226566314697
    3. 'for' (adapté à ' for') → logprob: -4.232822895050049
    4. 'i' → logprob: -4.232822895050049
    5. 'color' → logprob: -4.482822895050049
    6. 'pos' → logprob: -6.857822895050049
    7. 'cnt' → logprob: -7.107822895050049
    8. '   ' → logprob: -7.232822895050049
    9. 'c' → logprob: -7.857822895050049
    10. 'ptr' → logprob: -8.35782241821289

Token 464: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02852468192577362
    2. ' i' → logprob: -3.77852463722229
    3. 'idx' → logprob: -6.153524875640869
    4. '_i' → logprob: -6.778524875640869
    5. 'color' → logprob: -7.653524875640869
    6. 'c' → logprob: -7.778524875640869
    7. ' idx' → logprob: -8.028524398803711
    8. 'index' → logprob: -8.653524398803711
    9. ' color' → logprob: -9.278524398803711
    10. 'node' → logprob: -9.778524398803711

Token 465: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026728099212050438
    2. 'in' → logprob: -3.6517281532287598
    3. ',' → logprob: -8.901727676391602
    4. '   ' → logprob: -9.151727676391602
    5. '	in' → logprob: -9.526727676391602
    6. '1' → logprob: -9.776727676391602
    7. ' ' → logprob: -11.526727676391602
    8. '    ' → logprob: -11.651727676391602
    9. '=' → logprob: -11.901727676391602
    10. ' i' → logprob: -12.151727676391602

Token 466: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00026169343618676066
    2. ' range' → logprob: -8.250261306762695
    3. '
' → logprob: -16.375261306762695
    4. '(range' → logprob: -16.625261306762695
    5. '   ' → logprob: -17.000261306762695
    6. '	range' → logprob: -17.125261306762695
    7. '```' → logprob: -17.500261306762695
    8. 'q' → logprob: -17.875261306762695
    9. 'C' → logprob: -17.875261306762695
    10. '1' → logprob: -18.625261306762695

Token 467: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5760319232940674
    2. '1' → logprob: -0.8260319232940674
    3. '   ' → logprob: -10.201031684875488
    4. ',' → logprob: -10.326031684875488
    5. ' ' → logprob: -10.951031684875488
    6. ' (' → logprob: -13.201031684875488
    7. '[' → logprob: -13.951031684875488
    8. ')' → logprob: -14.576031684875488
    9. '
' → logprob: -14.826031684875488
    10. '2' → logprob: -15.201031684875488

Token 468: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.610702363715973e-06
    2. ' ' → logprob: -11.625009536743164
    3. '   ' → logprob: -14.875009536743164
    4. 'N' → logprob: -15.875009536743164
    5. '2' → logprob: -16.500009536743164
    6. 'len' → logprob: -16.875009536743164
    7. '(' → logprob: -17.250009536743164
    8. 'i' → logprob: -17.875009536743164
    9. '  ' → logprob: -18.250009536743164
    10. '0' → logprob: -18.562509536743164

Token 469: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001037815964082256
    2. ',N' → logprob: -10.000103950500488
    3. ',len' → logprob: -10.125103950500488
    4. ' ,' → logprob: -11.000103950500488
    5. ',
' → logprob: -13.875103950500488
    6. ',i' → logprob: -16.000102996826172
    7. 'N' → logprob: -16.375102996826172
    8. '1' → logprob: -16.500102996826172
    9. ',n' → logprob: -16.500102996826172
    10. '   ' → logprob: -17.000102996826172

Token 470: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.8889261304575484e-06
    2. 'len' → logprob: -12.750003814697266
    3. ' N' → logprob: -14.000003814697266
    4. '   ' → logprob: -15.875003814697266
    5. '	N' → logprob: -19.875003814697266
    6. '
' → logprob: -20.125003814697266
    7. ' ' → logprob: -20.250003814697266
    8. 'Ｎ' → logprob: -20.625003814697266
    9. ' len' → logprob: -20.750003814697266
    10. '  ' → logprob: -20.875003814697266

Token 471: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5235626101493835
    2. '):' → logprob: -0.8985626101493835
    3. '   ' → logprob: -8.39856243133545
    4. ':' → logprob: -9.14856243133545
    5. ')' → logprob: -9.52356243133545
    6. '):
' → logprob: -11.14856243133545
    7. ':
' → logprob: -11.52356243133545
    8. ',' → logprob: -13.39856243133545
    9. '+' → logprob: -13.52356243133545
    10. '):

' → logprob: -13.89856243133545

Token 472: '       ' (ID: 309)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.7335641384124756
    2. '       ' → logprob: -1.1085641384124756
    3. ' Color' → logprob: -2.6085641384124756
    4. '<|end|>' → logprob: -3.4835641384124756
    5. '	Color' → logprob: -3.4835641384124756
    6. '   ' → logprob: -3.7335641384124756
    7. '<Color' → logprob: -4.983564376831055
    8. ':' → logprob: -5.608564376831055
    9. ',' → logprob: -5.608564376831055
    10. ')' → logprob: -5.983564376831055

Token 473: ' #' (ID: 1069)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.32140201330184937
    2. 'v' → logprob: -1.4464020729064941
    3. 'u' → logprob: -3.946402072906494
    4. 'cur' → logprob: -4.446402072906494
    5. '   ' → logprob: -5.446402072906494
    6. 'current' → logprob: -6.196402072906494
    7. 'curr' → logprob: -7.196402072906494
    8. 'now' → logprob: -7.696402072906494
    9. 'c' → logprob: -7.946402072906494
    10. 'n' → logprob: -8.696401596069336

Token 474: ' Get' (ID: 2942)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.2560178339481354
    2. 'v' → logprob: -2.0060179233551025
    3. 'cur' → logprob: -3.0060179233551025
    4. 'u' → logprob: -3.8810179233551025
    5. 'current' → logprob: -4.381017684936523
    6. 'curr' → logprob: -5.631017684936523
    7. 'c' → logprob: -6.131017684936523
    8. '   ' → logprob: -7.006017684936523
    9. 'color' → logprob: -7.131017684936523
    10. 'now' → logprob: -7.881017684936523

Token 475: ' the' (ID: 290)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.3264229893684387
    2. 'u' → logprob: -2.201422929763794
    3. 'v' → logprob: -2.576422929763794
    4. ' node' → logprob: -2.701422929763794
    5. 'current' → logprob: -5.076423168182373
    6. ' u' → logprob: -5.326423168182373
    7. 'cur' → logprob: -5.451423168182373
    8. ' v' → logprob: -5.701423168182373
    9. 'c' → logprob: -6.826423168182373
    10. 'e' → logprob: -7.076423168182373

Token 476: ' next' (ID: 2613)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.8533679246902466
    2. 'v' → logprob: -1.1033679246902466
    3. 'u' → logprob: -2.228367805480957
    4. 'current' → logprob: -2.353367805480957
    5. 'cur' → logprob: -3.353367805480957
    6. 'curr' → logprob: -6.228367805480957
    7. 'now' → logprob: -6.728367805480957
    8. 'x' → logprob: -7.603367805480957
    9. 'c' → logprob: -8.228367805480957
    10. ' node' → logprob: -8.478367805480957

Token 477: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.8367377519607544
    2. 'node' → logprob: -1.2117377519607544
    3. 'color' → logprob: -2.461737632751465
    4. ' color' → logprob: -3.086737632751465
    5. '_color' → logprob: -3.336737632751465
    6. 'token' → logprob: -3.461737632751465
    7. ' token' → logprob: -3.961737632751465
    8. 'e' → logprob: -4.336737632751465
    9. ' e' → logprob: -5.211737632751465
    10. '(' → logprob: -5.211737632751465

Token 478: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00091217877343297
    2. ',node' → logprob: -8.750911712646484
    3. '_,' → logprob: -9.000911712646484
    4. '=' → logprob: -9.000911712646484
    5. ',
' → logprob: -9.125911712646484
    6. ' =' → logprob: -9.500911712646484
    7. ')' → logprob: -9.500911712646484
    8. '   ' → logprob: -10.000911712646484
    9. ' ,' → logprob: -10.125911712646484
    10. ',q' → logprob: -10.375911712646484

Token 479: ' process' (ID: 2273)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.3824516534805298
    2. 'color' → logprob: -1.6324516534805298
    3. 'process' → logprob: -2.5074515342712402
    4. 'visit' → logprob: -3.2574515342712402
    5. ' color' → logprob: -7.13245153427124
    6. 'q' → logprob: -8.382452011108398
    7. ' visit' → logprob: -8.757452011108398
    8. ' process' → logprob: -8.757452011108398
    9. ' assign' → logprob: -8.882452011108398
    10. '_color' → logprob: -9.007452011108398

Token 480: ' and' (ID: 326)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.7262160181999207
    2. ',' → logprob: -1.4762160778045654
    3. ' node' → logprob: -1.8512160778045654
    4. '(node' → logprob: -3.1012160778045654
    5. 'u' → logprob: -3.7262160778045654
    6. ',node' → logprob: -3.7262160778045654
    7. 'v' → logprob: -4.101215839385986
    8. 'n' → logprob: -5.976215839385986
    9. '       ' → logprob: -5.976215839385986
    10. ' (' → logprob: -6.226215839385986

Token 481: ' its' (ID: 1617)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.2833411991596222
    2. ' its' → logprob: -2.0333411693573
    3. ' parent' → logprob: -2.5333411693573
    4. 'p' → logprob: -3.7833411693573
    5. 'its' → logprob: -5.408341407775879
    6. ' p' → logprob: -6.158341407775879
    7. ',parent' → logprob: -6.283341407775879
    8. '_,' → logprob: -6.658341407775879
    9. 'par' → logprob: -7.033341407775879
    10. ',' → logprob: -7.533341407775879

Token 482: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.08294451236724854
    2. '_,' → logprob: -2.957944393157959
    3. 'node' → logprob: -4.582944393157959
    4. ',parent' → logprob: -4.957944393157959
    5. '_parent' → logprob: -5.832944393157959
    6. ' parent' → logprob: -6.082944393157959
    7. ',' → logprob: -6.457944393157959
    8. 'current' → logprob: -7.332944393157959
    9. 'cur' → logprob: -7.457944393157959
    10. 'p' → logprob: -7.707944393157959

Token 483: '
' (ID: 198)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.7816714644432068
    2. ',' → logprob: -1.5316715240478516
    3. '(node' → logprob: -2.9066715240478516
    4. ' node' → logprob: -3.0316715240478516
    5. '   ' → logprob: -3.2816715240478516
    6. 'n' → logprob: -3.2816715240478516
    7. '       ' → logprob: -3.7816715240478516
    8. 'v' → logprob: -3.7816715240478516
    9. 'u' → logprob: -3.9066715240478516
    10. ' (' → logprob: -4.281671524047852

Token 484: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27049168944358826
    2. ',' → logprob: -2.020491600036621
    3. 'node' → logprob: -2.895491600036621
    4. '   ' → logprob: -4.270491600036621
    5. '(node' → logprob: -4.520491600036621
    6. ' node' → logprob: -5.270491600036621
    7. 'n' → logprob: -5.895491600036621
    8. ',node' → logprob: -6.145491600036621
    9. 'current' → logprob: -6.270491600036621
    10. ' (' → logprob: -6.270491600036621

Token 485: ' now' (ID: 1954)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.6475602984428406
    2. 'v' → logprob: -1.2725603580474854
    3. 'u' → logprob: -1.7725603580474854
    4. 'cur' → logprob: -4.022560119628906
    5. 'current' → logprob: -5.897560119628906
    6. 'curr' → logprob: -6.022560119628906
    7. '   ' → logprob: -6.522560119628906
    8. 'now' (adapté à ' now') → logprob: -6.772560119628906
    9. 'c' → logprob: -8.647560119628906
    10. 'n' → logprob: -8.897560119628906

Token 486: 'N' (ID: 45)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009084834600798786
    2. '=' → logprob: -7.250908374786377
    3. ' ,' → logprob: -9.625908851623535
    4. ',node' → logprob: -10.250908851623535
    5. ' =' → logprob: -10.500908851623535
    6. '_,' → logprob: -11.125908851623535
    7. ',
' → logprob: -11.750908851623535
    8. ',n' → logprob: -11.875908851623535
    9. ',q' → logprob: -11.875908851623535
    10. '   ' → logprob: -12.375908851623535

Token 487: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005344043951481581
    2. '=' → logprob: -5.505343914031982
    3. ' =' → logprob: -7.005343914031982
    4. ' ,' → logprob: -8.38034439086914
    5. ')' → logprob: -10.38034439086914
    6. ',
' → logprob: -10.63034439086914
    7. ',q' → logprob: -11.00534439086914
    8. '   ' → logprob: -11.50534439086914
    9. ',n' → logprob: -12.38034439086914
    10. ',i' → logprob: -12.38034439086914

Token 488: ' pre' (ID: 876)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.5846121907234192
    2. 'par' → logprob: -1.0846121311187744
    3. 'parent' → logprob: -2.8346121311187744
    4. 'pa' → logprob: -4.4596123695373535
    5. 'p' → logprob: -4.8346123695373535
    6. 'pre' → logprob: -5.0846123695373535
    7. ' now' → logprob: -5.4596123695373535
    8. 'prev' → logprob: -5.5846123695373535
    9. 'from' → logprob: -6.2096123695373535
    10. '_par' → logprob: -6.2096123695373535

Token 489: 'N' (ID: 45)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44520512223243713
    2. ' =' → logprob: -1.3202050924301147
    3. 'v' → logprob: -2.5702052116394043
    4. 'N' → logprob: -4.945205211639404
    5. '_node' → logprob: -5.945205211639404
    6. ')' → logprob: -6.320205211639404
    7. 'V' → logprob: -7.195205211639404
    8. 'node' → logprob: -7.320205211639404
    9. 't' → logprob: -7.445205211639404
    10. '_' → logprob: -7.945205211639404

Token 490: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14297743141651154
    2. ' =' → logprob: -2.017977476119995
    3. ')' → logprob: -8.392977714538574
    4. ')=' → logprob: -9.642977714538574
    5. '   ' → logprob: -11.767977714538574
    6. ' ' → logprob: -14.267977714538574
    7. '       ' → logprob: -14.767977714538574
    8. '=q' → logprob: -14.767977714538574
    9. ',' → logprob: -15.017977714538574
    10. '),' → logprob: -15.142977714538574

Token 491: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.00010986098641296849
    2. ' q' → logprob: -9.125109672546387
    3. '   ' → logprob: -14.000109672546387
    4. 'deque' → logprob: -16.875110626220703
    5. 'queue' → logprob: -17.125110626220703
    6. '	q' → logprob: -17.500110626220703
    7. '    ' → logprob: -17.875110626220703
    8. 'None' → logprob: -18.125110626220703
    9. '  ' → logprob: -18.250110626220703
    10. ' ' → logprob: -18.500110626220703

Token 492: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.016509711742401123
    2. '.pop' → logprob: -4.141509532928467
    3. '.' → logprob: -8.641510009765625
    4. '   ' → logprob: -8.641510009765625
    5. '.append' → logprob: -9.516510009765625
    6. '       ' → logprob: -11.016510009765625
    7. ').' → logprob: -11.391510009765625
    8. '[i' → logprob: -12.266510009765625
    9. '.dequeue' → logprob: -12.766510009765625
    10. ')' → logprob: -13.266510009765625

Token 493: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0005426656571216881
    2. 'op' → logprob: -7.625542640686035
    3. 'ople' → logprob: -9.875542640686035
    4. 'opl' → logprob: -12.875542640686035
    5. 'oplevel' → logprob: -15.625542640686035
    6. 'p' → logprob: -15.750542640686035
    7. 'opt' → logprob: -15.875542640686035
    8. '```' → logprob: -16.25054359436035
    9. 'opf' → logprob: -17.00054359436035
    10. 'ple' → logprob: -17.25054359436035

Token 494: '()
' (ID: 1234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02015373297035694
    2. '       ' → logprob: -4.270153522491455
    3. '<|end|>' → logprob: -6.020153522491455
    4. ',' → logprob: -7.020153522491455
    5. '
' → logprob: -7.145153522491455
    6. ')
' → logprob: -7.270153522491455
    7. '<|end|>' → logprob: -7.770153522491455
    8. '   ' → logprob: -8.270153999328613
    9. '        
' → logprob: -9.395153999328613
    10. '#' → logprob: -9.895153999328613

Token 495: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6326528787612915
    2. '   ' → logprob: -0.8826528787612915
    3. '    
' → logprob: -4.007652759552002
    4. '        
' → logprob: -4.757652759552002
    5. '
' → logprob: -5.132652759552002
    6. 'Color' → logprob: -5.257652759552002
    7. ' ans' → logprob: -6.257652759552002
    8. 'color' → logprob: -6.382652759552002
    9. '<|end|>' → logprob: -6.382652759552002
    10. '    ' → logprob: -6.757652759552002

Token 496: ' #' (ID: 1069)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.11218271404504776
    2. '   ' → logprob: -2.6121826171875
    3. 'ans' → logprob: -3.8621826171875
    4. '       ' → logprob: -4.6121826171875
    5. 'color' → logprob: -7.1121826171875
    6. 'assigned' → logprob: -8.2371826171875
    7. 'while' → logprob: -8.7371826171875
    8. 'for' → logprob: -9.3621826171875
    9. '	Color' → logprob: -9.7371826171875
    10. ' Color' → logprob: -9.9871826171875

Token 497: ' Add' (ID: 4063)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.19178122282028198
    2. 'ans' → logprob: -1.9417812824249268
    3. 'while' → logprob: -4.691781044006348
    4. 'for' → logprob: -4.941781044006348
    5. 'assigned' → logprob: -5.191781044006348
    6. 'color' → logprob: -5.316781044006348
    7. 'c' → logprob: -7.066781044006348
    8. '#' → logprob: -7.566781044006348
    9. 'used' → logprob: -7.566781044006348
    10. 'assign' → logprob: -8.066781044006348

Token 498: ' this' (ID: 495)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.025065578520298004
    2. 'Color' → logprob: -4.0250654220581055
    3. 'ans' → logprob: -5.6500654220581055
    4. ' C' → logprob: -6.0250654220581055
    5. '   ' → logprob: -7.4000654220581055
    6. ' ans' → logprob: -8.775065422058105
    7. ' Color' → logprob: -9.150065422058105
    8. '(ans' → logprob: -10.275065422058105
    9. '	C' → logprob: -11.275065422058105
    10. '(C' → logprob: -11.900065422058105

Token 499: ' color' (ID: 3089)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.7451850771903992
    2. ' color' → logprob: -1.495185136795044
    3. '   ' → logprob: -2.745185136795044
    4. 'color' → logprob: -2.745185136795044
    5. 'C' → logprob: -2.995185136795044
    6. ' line' → logprob: -3.995185136795044
    7. '_color' → logprob: -4.370184898376465
    8. ' assigned' → logprob: -4.370184898376465
    9. ' code' → logprob: -4.745184898376465
    10. ')' → logprob: -4.870184898376465

Token 500: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7948483228683472
    2. ' =' → logprob: -1.1698483228683472
    3. '+=' → logprob: -1.7948483228683472
    4. ' +=' → logprob: -2.6698484420776367
    5. '   ' → logprob: -6.169848442077637
    6. '=C' → logprob: -8.794848442077637
    7. 'ans' → logprob: -9.169848442077637
    8. ' ans' → logprob: -10.294848442077637
    9. '(ans' → logprob: -10.544848442077637
    10. '       ' → logprob: -10.669848442077637

Token 501: ' the' (ID: 290)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0007320931763388216
    2. ' ans' → logprob: -7.250731945037842
    3. '	ans' → logprob: -11.500732421875
    4. '(ans' → logprob: -11.750732421875
    5. 'Color' → logprob: -13.125732421875
    6. '
' → logprob: -14.500732421875
    7. 'C' → logprob: -14.750732421875
    8. 'answer' → logprob: -15.125732421875
    9. 'the' → logprob: -15.250732421875
    10. '   ' → logprob: -15.750732421875

Token 502: ' answer' (ID: 6052)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0012216555187478662
    2. 'Color' → logprob: -7.501221656799316
    3. 'C' → logprob: -7.626221656799316
    4. ' ans' → logprob: -8.751221656799316
    5. 'answer' → logprob: -12.376221656799316
    6. '   ' → logprob: -12.626221656799316
    7. '+=' → logprob: -13.251221656799316
    8. ' Color' → logprob: -13.376221656799316
    9. 'assigned' → logprob: -13.376221656799316
    10. ' C' → logprob: -13.501221656799316

Token 503: ' (' (ID: 350)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.09872564673423767
    2. ' +=' → logprob: -2.5987255573272705
    3. 'ans' → logprob: -4.22372579574585
    4. ' ans' → logprob: -5.59872579574585
    5. '   ' → logprob: -7.22372579574585
    6. '(ans' → logprob: -8.223725318908691
    7. '+' → logprob: -9.348725318908691
    8. '=' → logprob: -9.848725318908691
    9. '	ans' → logprob: -9.848725318908691
    10. '```' → logprob: -10.598725318908691

Token 504: 'since' (ID: 21910)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.024146217852830887
    2. 'C' → logprob: -3.774146318435669
    3. ' ans' → logprob: -7.14914608001709
    4. ' C' → logprob: -10.27414608001709
    5. '(ans' → logprob: -10.52414608001709
    6. 'Color' → logprob: -11.14914608001709
    7. '	ans' → logprob: -11.52414608001709
    8. '   ' → logprob: -11.77414608001709
    9. '       ' → logprob: -12.64914608001709
    10. '           ' → logprob: -12.77414608001709

Token 505: ' the' (ID: 290)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4528975486755371
    2. 'C' → logprob: -1.077897548675537
    3. 'Color' → logprob: -4.452897548675537
    4. ' i' → logprob: -5.077897548675537
    5. ' C' → logprob: -6.327897548675537
    6. 'ans' → logprob: -6.452897548675537
    7. 'the' → logprob: -7.452897548675537
    8. 'now' → logprob: -7.827897548675537
    9. 'it' → logprob: -8.077898025512695
    10. 'we' → logprob: -8.202898025512695

Token 506: ' largest' (ID: 10574)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.3125733435153961
    2. 'i' → logprob: -2.8125734329223633
    3. 'largest' → logprob: -3.6875734329223633
    4. 'C' → logprob: -3.8125734329223633
    5. ' code' → logprob: -3.8125734329223633
    6. 'assigned' → logprob: -4.312573432922363
    7. ' Color' → logprob: -4.562573432922363
    8. 'color' → logprob: -4.812573432922363
    9. ' next' → logprob: -4.812573432922363
    10. 'colors' → logprob: -4.812573432922363

Token 507: ',' (ID: 11)
  Prédit: ' color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.5487562417984009
    2. ' C' → logprob: -1.9237562417984009
    3. ')' → logprob: -2.2987561225891113
    4. ' is' → logprob: -3.1737561225891113
    5. 'C' → logprob: -3.1737561225891113
    6. 'color' → logprob: -3.7987561225891113
    7. ' )' → logprob: -4.298756122589111
    8. '   ' → logprob: -4.923756122589111
    9. '_color' → logprob: -5.173756122589111
    10. 'Color' → logprob: -5.548756122589111

Token 508: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.2314930558204651
    2. ' C' → logprob: -1.8564929962158203
    3. ' not' → logprob: -3.6064929962158203
    4. 'not' → logprob: -4.60649299621582
    5. ' which' → logprob: -5.73149299621582
    6. 'which' → logprob: -5.73149299621582
    7. ' is' → logprob: -6.85649299621582
    8. '=' → logprob: -7.35649299621582
    9. ' ans' → logprob: -7.35649299621582
    10. ')' → logprob: -7.35649299621582

Token 509: '[' (ID: 58)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000591874762903899
    2. '[' → logprob: -7.87559175491333
    3. '```' → logprob: -9.500592231750488
    4. '
' → logprob: -10.875592231750488
    5. ')' → logprob: -10.875592231750488
    6. ' [' → logprob: -11.125592231750488
    7. 'i' → logprob: -11.500592231750488
    8. '   ' → logprob: -11.500592231750488
    9. ')[' → logprob: -11.625592231750488
    10. '#' → logprob: -12.000592231750488

Token 510: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02070935070514679
    2. 'i' → logprob: -3.895709276199341
    3. ' ' → logprob: -10.020709037780762
    4. '   ' → logprob: -10.520709037780762
    5. ']' → logprob: -10.770709037780762
    6. ' i' → logprob: -11.395709037780762
    7. '],' → logprob: -11.520709037780762
    8. '[' → logprob: -11.770709037780762
    9. '```' → logprob: -11.770709037780762
    10. '       ' → logprob: -12.458209037780762

Token 511: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.003718723077327013
    2. ']' → logprob: -5.628718852996826
    3. '])' → logprob: -10.128718376159668
    4. 'is' → logprob: -11.128718376159668
    5. '#' → logprob: -11.378718376159668
    6. ' ],' → logprob: -11.378718376159668
    7. '],
' → logprob: -11.878718376159668
    8. '),' → logprob: -12.253718376159668
    9. ':],' → logprob: -12.253718376159668
    10. ']),' → logprob: -12.628718376159668

Token 512: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4814092516899109
    2. 'is' → logprob: -1.6064093112945557
    3. ')' → logprob: -2.3564093112945557
    4. ' was' → logprob: -3.2314093112945557
    5. 'was' → logprob: -3.9814093112945557
    6. ' has' → logprob: -4.731409072875977
    7. ',' → logprob: -5.731409072875977
    8. ' )' → logprob: -5.981409072875977
    9. '=' → logprob: -6.231409072875977
    10. '),' → logprob: -6.356409072875977

Token 513: ' not' (ID: 625)
  Prédit: 'already'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'already' → logprob: -0.8797016739845276
    2. 'not' → logprob: -1.2547016143798828
    3. 'excluded' → logprob: -1.2547016143798828
    4. 'assigned' → logprob: -4.504701614379883
    5. ' not' → logprob: -6.879701614379883
    6. 'used' → logprob: -7.504701614379883
    7. ' already' → logprob: -7.629701614379883
    8. ' excluded' → logprob: -7.629701614379883
    9. 'reserved' → logprob: -7.629701614379883
    10. 'sk' → logprob: -8.379701614379883

Token 514: ' included' (ID: 7360)
  Prédit: 'added'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'added' → logprob: -0.061069026589393616
    2. ' added' → logprob: -3.6860690116882324
    3. 'ans' → logprob: -4.061069011688232
    4. 'included' → logprob: -5.061069011688232
    5. 'count' → logprob: -5.311069011688232
    6. ' counted' → logprob: -6.436069011688232
    7. '0' → logprob: -7.186069011688232
    8. ' ans' → logprob: -7.436069011688232
    9. ' included' → logprob: -7.561069011688232
    10. 'in' → logprob: -7.686069011688232

Token 515: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01945623755455017
    2. ' )' → logprob: -4.644456386566162
    3. ')
' → logprob: -5.144456386566162
    4. ' +=' → logprob: -6.394456386566162
    5. ' in' → logprob: -7.019456386566162
    6. '+=' → logprob: -7.769456386566162
    7. ' )
' → logprob: -8.519455909729004
    8. ',' → logprob: -8.769455909729004
    9. '),' → logprob: -8.894455909729004
    10. '+' → logprob: -9.394455909729004

Token 516: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0011786778923124075
    2. ' ans' → logprob: -6.751178741455078
    3. '	ans' → logprob: -12.501178741455078
    4. '(ans' → logprob: -13.126178741455078
    5. 'the' → logprob: -13.501178741455078
    6. 'answer' → logprob: -14.251178741455078
    7. ' the' → logprob: -15.626178741455078
    8. '   ' → logprob: -16.001178741455078
    9. ')' → logprob: -16.126178741455078
    10. '```' → logprob: -16.126178741455078

Token 517: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01250199880450964
    2. ' )' → logprob: -5.262502193450928
    3. ' +=' → logprob: -5.762502193450928
    4. ')
' → logprob: -5.887502193450928
    5. ' +' → logprob: -8.01250171661377
    6. '+' → logprob: -8.01250171661377
    7. '+=' → logprob: -8.51250171661377
    8. '   ' → logprob: -9.26250171661377
    9. ' )
' → logprob: -9.26250171661377
    10. ',' → logprob: -9.63750171661377

Token 518: '       ' (ID: 309)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.8401336669921875
    2. 'ans' → logprob: -1.4651336669921875
    3. '       ' → logprob: -1.5901336669921875
    4. '   ' → logprob: -2.0901336669921875
    5. '(ans' → logprob: -5.2151336669921875
    6. '	ans' → logprob: -6.2151336669921875
    7. '
' → logprob: -7.5901336669921875
    8. '`' → logprob: -8.215133666992188
    9. '=' → logprob: -8.465133666992188
    10. '+' → logprob: -8.465133666992188

Token 519: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -4.47757811343763e-05
    2. ' ans' → logprob: -10.250044822692871
    3. '   ' → logprob: -12.000044822692871
    4. '	ans' → logprob: -13.000044822692871
    5. '(ans' → logprob: -14.375044822692871
    6. '       ' → logprob: -14.875044822692871
    7. '```' → logprob: -17.375043869018555
    8. '
' → logprob: -18.250043869018555
    9. '_ans' → logprob: -18.750043869018555
    10. '`' → logprob: -19.125043869018555

Token 520: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2521035671234131
    2. ' +=' → logprob: -1.502103567123413
    3. '+' → logprob: -9.002103805541992
    4. '   ' → logprob: -10.002103805541992
    5. ']+=' → logprob: -13.127103805541992
    6. '+=(' → logprob: -13.377103805541992
    7. '```' → logprob: -14.502103805541992
    8. '=' → logprob: -14.627103805541992
    9. '    ' → logprob: -14.752103805541992
    10. ' +' → logprob: -15.252103805541992

Token 521: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -5.848420551046729e-05
    2. ' C' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.625059127807617
    4. 'Color' → logprob: -18.250059127807617
    5. '	C' → logprob: -18.375059127807617
    6. ' ' → logprob: -19.500059127807617
    7. '(C' → logprob: -20.000059127807617
    8. '```' → logprob: -20.000059127807617
    9. 'c' → logprob: -20.375059127807617
    10. '
' → logprob: -20.500059127807617

Token 522: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00019340807921253145
    2. 'i' → logprob: -8.62519359588623
    3. '[' → logprob: -11.25019359588623
    4. '[
' → logprob: -14.37519359588623
    5. ' i' → logprob: -16.875192642211914
    6. '   ' → logprob: -17.250192642211914
    7. '```' → logprob: -17.750192642211914
    8. '(i' → logprob: -18.375192642211914
    9. '
' → logprob: -18.875192642211914
    10. '[I' → logprob: -19.000192642211914

Token 523: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01933886483311653
    2. ')' → logprob: -4.394339084625244
    3. '])' → logprob: -5.019339084625244
    4. ')]' → logprob: -9.644338607788086
    5. ' ]' → logprob: -9.644338607788086
    6. ']
' → logprob: -10.394338607788086
    7. '[' → logprob: -11.019338607788086
    8. '[i' → logprob: -12.394338607788086
    9. '   ' → logprob: -13.019338607788086
    10. ' )' → logprob: -13.144338607788086

Token 524: '       ' (ID: 309)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.628869891166687
    2. '   ' → logprob: -1.003869891166687
    3. '       ' → logprob: -2.3788700103759766
    4. '	Color' → logprob: -5.003870010375977
    5. '```' → logprob: -8.753870010375977
    6. ' Color' → logprob: -9.128870010375977
    7. '        
' → logprob: -9.253870010375977
    8. '<Color' → logprob: -9.378870010375977
    9. '    
' → logprob: -9.503870010375977
    10. '<|end|>' → logprob: -9.753870010375977

Token 525: ' #' (ID: 1069)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.5319433212280273
    2. '       ' → logprob: -1.0319433212280273
    3. '   ' → logprob: -2.9069433212280273
    4. '	Color' → logprob: -6.781943321228027
    5. ' Color' → logprob: -9.031943321228027
    6. 'for' → logprob: -9.906943321228027
    7. '```' → logprob: -10.031943321228027
    8. '#' (adapté à ' #') → logprob: -10.281943321228027
    9. '_color' → logprob: -10.531943321228027
    10. 'color' → logprob: -10.656943321228027

Token 526: ' Assign' (ID: 60840)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -6.988221684878226e-06
    2. '   ' → logprob: -12.000006675720215
    3. ' Color' → logprob: -14.625006675720215
    4. '#' → logprob: -15.875006675720215
    5. '       ' → logprob: -16.12500762939453
    6. 'color' → logprob: -16.37500762939453
    7. '	Color' → logprob: -16.87500762939453
    8. 'for' → logprob: -17.62500762939453
    9. '_Color' → logprob: -18.75000762939453
    10. 'assigned' → logprob: -19.00000762939453

Token 527: ' the' (ID: 290)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.0038933036848902702
    2. 'C' → logprob: -6.3788933753967285
    3. ' Color' → logprob: -6.5038933753967285
    4. '[now' → logprob: -7.7538933753967285
    5. 'now' → logprob: -8.50389289855957
    6. '(Color' → logprob: -11.00389289855957
    7. ' now' → logprob: -11.50389289855957
    8. '(now' → logprob: -11.75389289855957
    9. '   ' → logprob: -11.75389289855957
    10. ' C' → logprob: -12.50389289855957

Token 528: ' color' (ID: 3089)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.016068270429968834
    2. 'C' → logprob: -4.141068458557129
    3. ' Color' → logprob: -11.016068458557129
    4. 'i' → logprob: -12.266068458557129
    5. 'color' → logprob: -12.516068458557129
    6. 'next' → logprob: -12.891068458557129
    7. '_color' → logprob: -13.641068458557129
    8. '   ' → logprob: -14.016068458557129
    9. '	Color' → logprob: -14.516068458557129
    10. '```' → logprob: -14.516068458557129

Token 529: ' to' (ID: 316)
  Prédit: '[now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[now' → logprob: -0.01828608103096485
    2. '[' → logprob: -4.018286228179932
    3. '[next' → logprob: -9.143285751342773
    4. '[to' → logprob: -11.268285751342773
    5. '   ' → logprob: -12.143285751342773
    6. '=' → logprob: -12.893285751342773
    7. '[i' → logprob: -13.018285751342773
    8. ' =' → logprob: -13.393285751342773
    9. '[current' → logprob: -14.018285751342773
    10. 'Color' → logprob: -14.268285751342773

Token 530: ' the' (ID: 290)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Color' → logprob: -0.08010397106409073
    2. 'now' → logprob: -2.580103874206543
    3. ' now' → logprob: -7.330103874206543
    4. ' Color' → logprob: -7.830103874206543
    5. '[now' → logprob: -9.205103874206543
    6. '   ' → logprob: -10.205103874206543
    7. 'Now' → logprob: -11.580103874206543
    8. '(now' → logprob: -12.705103874206543
    9. 'the' → logprob: -12.705103874206543
    10. '	Color' → logprob: -13.080103874206543

Token 531: ' node' (ID: 4596)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.01963755115866661
    2. 'Color' → logprob: -4.019637584686279
    3. '[now' → logprob: -6.644637584686279
    4. ' now' → logprob: -8.644637107849121
    5. 'Now' → logprob: -12.519637107849121
    6. '   ' → logprob: -13.019637107849121
    7. '(now' → logprob: -13.644637107849121
    8. 'color' → logprob: -14.769637107849121
    9. '[' → logprob: -15.019637107849121
    10. 'current' → logprob: -15.144637107849121

Token 532: '
' (ID: 198)
  Prédit: '[now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[now' → logprob: -0.17988374829292297
    2. '   ' → logprob: -2.5548837184906006
    3. '[' → logprob: -2.8048837184906006
    4. 'Color' → logprob: -3.6798837184906006
    5. '[next' → logprob: -7.67988395690918
    6. ' now' → logprob: -8.05488395690918
    7. '       ' → logprob: -8.67988395690918
    8. ' Color' → logprob: -9.55488395690918
    9. '```' → logprob: -9.92988395690918
    10. '
' → logprob: -10.92988395690918

Token 533: '       ' (ID: 309)
  Prédit: '[now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[now' → logprob: -0.006878410466015339
    2. '[' → logprob: -5.75687837600708
    3. '   ' → logprob: -6.00687837600708
    4. ' now' → logprob: -7.00687837600708
    5. 'Color' → logprob: -8.506878852844238
    6. '[next' → logprob: -9.381878852844238
    7. ' Color' → logprob: -11.506878852844238
    8. 'now' → logprob: -11.756878852844238
    9. '```' → logprob: -12.131878852844238
    10. '       ' → logprob: -12.256878852844238

Token 534: ' Color' (ID: 6822)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' (adapté à ' Color') → logprob: -2.4153549020411447e-05
    2. '   ' → logprob: -10.75002384185791
    3. ' Color' → logprob: -13.00002384185791
    4. '	Color' → logprob: -15.50002384185791
    5. '       ' → logprob: -16.500024795532227
    6. '_Color' → logprob: -19.125024795532227
    7. '```' → logprob: -19.625024795532227
    8. 'color' → logprob: -21.125024795532227
    9. '<Color' → logprob: -21.125024795532227
    10. 'COLOR' → logprob: -21.500024795532227

Token 535: '[now' (ID: 195791)
  Prédit: '[now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[now' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.500003814697266
    3. '[next' → logprob: -16.000003814697266
    4. '\[' → logprob: -17.125003814697266
    5. '[
' → logprob: -17.625003814697266
    6. '```' → logprob: -17.875003814697266
    7. 'now' → logprob: -18.000003814697266
    8. '   ' → logprob: -18.625003814697266
    9. '[current' → logprob: -18.750003814697266
    10. ' [' → logprob: -18.875003814697266

Token 536: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0002529952325858176
    2. '[' → logprob: -8.375252723693848
    3. '][' → logprob: -11.625252723693848
    4. '[now' → logprob: -12.625252723693848
    5. '[N' → logprob: -12.750252723693848
    6. '```' → logprob: -13.000252723693848
    7. '   ' → logprob: -13.500252723693848
    8. ']' → logprob: -14.125252723693848
    9. ' N' → logprob: -14.875252723693848
    10. '
' → logprob: -15.375252723693848

Token 537: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005755512393079698
    2. '=' → logprob: -8.12557601928711
    3. ']=' → logprob: -8.37557601928711
    4. ' ]' → logprob: -10.12557601928711
    5. ' =' → logprob: -12.00057601928711
    6. ')' → logprob: -12.75057601928711
    7. '   ' → logprob: -16.62557601928711
    8. ']
' → logprob: -17.12557601928711
    9. ')=' → logprob: -18.37557601928711
    10. '`]' → logprob: -18.62557601928711

Token 538: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0015031944494694471
    2. ' =' → logprob: -6.501502990722656
    3. '=C' → logprob: -14.001502990722656
    4. '=
' → logprob: -17.626502990722656
    5. '＝' → logprob: -18.626502990722656
    6. '=

' → logprob: -19.126502990722656
    7. '=c' → logprob: -20.001502990722656
    8. ')=' → logprob: -20.251502990722656
    9. ')' → logprob: -20.251502990722656
    10. '=i' → logprob: -20.376502990722656

Token 539: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00020354038861114532
    2. ' C' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.00020408630371
    4. ' ' → logprob: -19.87520408630371
    5. '	C' → logprob: -20.12520408630371
    6. ' ' → logprob: -20.50020408630371
    7. '`' → logprob: -21.00020408630371
    8. '```' → logprob: -21.12520408630371
    9. 'c' → logprob: -21.75020408630371
    10. '*C' → logprob: -22.37520408630371

Token 540: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4736459888808895e-05
    2. '[' → logprob: -11.625014305114746
    3. 'i' → logprob: -12.250014305114746
    4. '```' → logprob: -14.750014305114746
    5. '[
' → logprob: -15.375014305114746
    6. '\[' → logprob: -15.875014305114746
    7. ' [' → logprob: -16.125015258789062
    8. ' i' → logprob: -17.625015258789062
    9. '   ' → logprob: -17.625015258789062
    10. '
' → logprob: -18.250015258789062

Token 541: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012916665291413665
    2. ')
' → logprob: -7.126291751861572
    3. ']' → logprob: -7.751291751861572
    4. '   ' → logprob: -10.751291275024414
    5. ')

' → logprob: -11.501291275024414
    6. '       ' → logprob: -12.001291275024414
    7. ')]' → logprob: -12.126291275024414
    8. '])' → logprob: -12.626291275024414
    9. '<|end|>' → logprob: -12.751291275024414
    10. ' )' → logprob: -12.876291275024414

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42538392543792725
    2. '   ' → logprob: -1.1753839254379272
    3. 'for' → logprob: -3.675384044647217
    4. ' for' → logprob: -5.300384044647217
    5. '```' → logprob: -5.300384044647217
    6. '        
' → logprob: -6.800384044647217
    7. '
' → logprob: -6.925384044647217
    8. '``' → logprob: -8.800383567810059
    9. '    
' → logprob: -9.050383567810059
    10. '	for' → logprob: -10.800383567810059

Token 543: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015900392085313797
    2. '   ' → logprob: -4.265900611877441
    3. '       ' → logprob: -6.515900611877441
    4. ' for' → logprob: -8.640900611877441
    5. '```' → logprob: -10.015900611877441
    6. '#' (adapté à ' #') → logprob: -11.015900611877441
    7. '	for' → logprob: -11.265900611877441
    8. '    
' → logprob: -13.390900611877441
    9. '``' → logprob: -13.765900611877441
    10. '
' → logprob: -13.765900611877441

Token 544: ' Add' (ID: 4063)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.747814349073451e-05
    2. '#' → logprob: -11.000017166137695
    3. '   ' → logprob: -14.375017166137695
    4. ' for' → logprob: -15.750017166137695
    5. '       ' → logprob: -17.875017166137695
    6. '
' → logprob: -18.000017166137695
    7. '	for' → logprob: -18.625017166137695
    8. 'For' → logprob: -18.875017166137695
    9. '```' → logprob: -19.625017166137695
    10. '    
' → logprob: -20.000017166137695

Token 545: ' un' (ID: 537)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11734864115715027
    2. ' for' → logprob: -2.2423486709594727
    3. 'child' → logprob: -7.117348670959473
    4. 'e' → logprob: -7.742348670959473
    5. 'neighbors' → logprob: -7.867348670959473
    6. '   ' → logprob: -8.117348670959473
    7. 'node' → logprob: -8.367348670959473
    8. '(e' → logprob: -8.617348670959473
    9. ' (' → logprob: -8.617348670959473
    10. '(node' → logprob: -8.742348670959473

Token 546: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.009147689677774906
    2. 'for' → logprob: -4.884147644042969
    3. '       ' → logprob: -7.134147644042969
    4. ' visited' → logprob: -8.259147644042969
    5. '   ' → logprob: -8.759147644042969
    6. 'vis' → logprob: -9.134147644042969
    7. 'used' → logprob: -10.259147644042969
    8. 'assigned' → logprob: -10.259147644042969
    9. '```' → logprob: -10.384147644042969
    10. ' for' → logprob: -10.384147644042969

Token 547: ' neighbors' (ID: 31655)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.10171250253915787
    2. ' neighbors' → logprob: -2.601712465286255
    3. 'neighbor' → logprob: -4.976712703704834
    4. 'nodes' → logprob: -4.976712703704834
    5. 'for' → logprob: -5.976712703704834
    6. 'adj' → logprob: -6.351712703704834
    7. ' nodes' → logprob: -6.476712703704834
    8. 'children' → logprob: -6.851712703704834
    9. ' for' → logprob: -7.351712703704834
    10. 'edges' → logprob: -8.476712226867676

Token 548: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6205260157585144
    2. 'for' → logprob: -0.8705260157585144
    3. ' of' → logprob: -3.995526075363159
    4. '       ' → logprob: -4.49552583694458
    5. 'of' → logprob: -5.49552583694458
    6. ' to' → logprob: -5.99552583694458
    7. '	for' → logprob: -6.49552583694458
    8. 'to' → logprob: -6.74552583694458
    9. '   ' → logprob: -6.74552583694458
    10. '           ' → logprob: -7.37052583694458

Token 549: ' the' (ID: 290)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.007485711015760899
    2. 'the' → logprob: -5.007485866546631
    3. 'Edge' → logprob: -8.007485389709473
    4. ' q' → logprob: -8.757485389709473
    5. ' the' → logprob: -9.257485389709473
    6. 'deque' → logprob: -9.757485389709473
    7. ' Edge' → logprob: -9.882485389709473
    8. '   ' → logprob: -10.507485389709473
    9. 'queue' → logprob: -10.757485389709473
    10. '```' → logprob: -11.007485389709473

Token 550: ' BFS' (ID: 190016)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.09194647520780563
    2. 'q' → logprob: -2.4669463634490967
    3. 'deque' → logprob: -6.341946601867676
    4. ' queue' → logprob: -6.841946601867676
    5. 'for' → logprob: -9.216946601867676
    6. '```' → logprob: -10.466946601867676
    7. 'que' → logprob: -11.091946601867676
    8. '   ' → logprob: -11.341946601867676
    9. '(queue' → logprob: -12.091946601867676
    10. '       ' → logprob: -12.341946601867676

Token 551: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.7215563058853149
    2. ' queue' → logprob: -1.221556305885315
    3. 'for' → logprob: -2.2215561866760254
    4. ' for' → logprob: -2.8465561866760254
    5. '   ' → logprob: -3.7215561866760254
    6. '       ' → logprob: -4.346556186676025
    7. '```' → logprob: -4.846556186676025
    8. '
' → logprob: -5.846556186676025
    9. 'q' → logprob: -5.846556186676025
    10. '``' → logprob: -7.221556186676025

Token 552: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22322188317775726
    2. ' for' → logprob: -2.098221778869629
    3. 'for' → logprob: -2.598221778869629
    4. '	for' → logprob: -6.223221778869629
    5. '   ' → logprob: -7.848221778869629
    6. '```' → logprob: -8.348221778869629
    7. '<|end|>' → logprob: -9.223221778869629
    8. '
' → logprob: -9.223221778869629
    9. '        
' → logprob: -10.098221778869629
    10. '	' → logprob: -10.348221778869629

Token 553: 'avoid' (ID: 138714)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.014007294550538063
    2. ' for' → logprob: -4.639007091522217
    3. '       ' → logprob: -5.514007091522217
    4. '           ' → logprob: -8.639007568359375
    5. '```' → logprob: -11.014007568359375
    6. '               ' → logprob: -11.889007568359375
    7. '   ' → logprob: -12.264007568359375
    8. ')' → logprob: -13.014007568359375
    9. '	for' → logprob: -13.639007568359375
    10. '
' → logprob: -13.764007568359375

Token 554: ' going' (ID: 2966)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.2806558907032013
    2. 'now' → logprob: -1.655655860900879
    3. 'neighbor' → logprob: -3.780655860900879
    4. ' now' → logprob: -4.530655860900879
    5. 'neighbors' → logprob: -4.655655860900879
    6. ' visiting' → logprob: -5.655655860900879
    7. ' pre' → logprob: -6.030655860900879
    8. 'visited' → logprob: -6.405655860900879
    9. 'vis' → logprob: -7.030655860900879
    10. ' neighbor' → logprob: -7.780655860900879

Token 555: ' back' (ID: 1602)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.23418539762496948
    2. ' back' → logprob: -1.6091854572296143
    3. 'pre' → logprob: -5.609185218811035
    4. 'to' → logprob: -6.109185218811035
    5. 'now' → logprob: -6.109185218811035
    6. '(pre' → logprob: -8.609185218811035
    7. '[now' → logprob: -8.734185218811035
    8. ' now' → logprob: -9.359185218811035
    9. ' to' → logprob: -9.734185218811035
    10. '_back' → logprob: -10.734185218811035

Token 556: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.39605358242988586
    2. ' to' → logprob: -1.1460535526275635
    3. '       ' → logprob: -5.771053791046143
    4. 'pre' → logprob: -6.396053791046143
    5. ')' → logprob: -6.771053791046143
    6. 'if' → logprob: -6.896053791046143
    7. '(pre' → logprob: -6.896053791046143
    8. '           ' → logprob: -8.021053314208984
    9. ' if' → logprob: -8.271053314208984
    10. '   ' → logprob: -8.521053314208984

Token 557: ' parent' (ID: 5980)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.00021879478299524635
    2. ' pre' → logprob: -8.500218391418457
    3. 'the' → logprob: -11.125218391418457
    4. 'now' → logprob: -15.250218391418457
    5. 'parent' → logprob: -16.375219345092773
    6. ' the' → logprob: -16.625219345092773
    7. 'previous' → logprob: -16.625219345092773
    8. '	pre' → logprob: -16.750219345092773
    9. '   ' → logprob: -17.000219345092773
    10. 'prev' → logprob: -17.125219345092773

Token 558: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6880601644515991
    2. ')' → logprob: -1.1880601644515991
    3. '       ' → logprob: -1.9380601644515991
    4. '):
' → logprob: -3.6880602836608887
    5. ' if' → logprob: -4.563060283660889
    6. 'if' → logprob: -5.188060283660889
    7. ',' → logprob: -5.688060283660889
    8. '           ' → logprob: -6.813060283660889
    9. '):' → logprob: -7.688060283660889
    10. ' )
' → logprob: -7.688060283660889

Token 559: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.092278391122818
    2. ' for' → logprob: -2.967278480529785
    3. '	for' → logprob: -4.092278480529785
    4. 'for' → logprob: -4.092278480529785
    5. '   ' → logprob: -6.217278480529785
    6. '```' → logprob: -7.592278480529785
    7. '	' → logprob: -7.842278480529785
    8. '           ' → logprob: -8.467278480529785
    9. '<|end|>' → logprob: -9.592278480529785
    10. '	   ' → logprob: -10.217278480529785

Token 560: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011756856925785542
    2. '       ' → logprob: -4.511756896972656
    3. ' for' → logprob: -7.386756896972656
    4. '   ' → logprob: -9.511756896972656
    5. '	for' → logprob: -11.386756896972656
    6. '```' → logprob: -12.636756896972656
    7. '           ' → logprob: -14.761756896972656
    8. '``' → logprob: -15.136756896972656
    9. '        
' → logprob: -16.136756896972656
    10. '
' → logprob: -16.761756896972656

Token 561: ' e' (ID: 319)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.9816325902938843
    2. 'n' → logprob: -1.3566325902938843
    3. 'ne' → logprob: -2.481632709503174
    4. 'v' → logprob: -2.731632709503174
    5. 'e' → logprob: -2.731632709503174
    6. 'x' → logprob: -3.356632709503174
    7. 'next' → logprob: -3.481632709503174
    8. 'to' → logprob: -3.731632709503174
    9. ' nxt' → logprob: -3.981632709503174
    10. 'nv' → logprob: -4.856632709503174

Token 562: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1798466145992279
    2. 'in' → logprob: -1.8048466444015503
    3. ' ' → logprob: -10.05484676361084
    4. 'e' → logprob: -10.55484676361084
    5. '	in' → logprob: -10.92984676361084
    6. ' e' → logprob: -12.80484676361084
    7. '  ' → logprob: -12.92984676361084
    8. '   ' → logprob: -13.42984676361084
    9. 's' → logprob: -13.42984676361084
    10. ',' → logprob: -14.17984676361084

Token 563: ' Edge' (ID: 16396)
  Prédit: 'Edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Edge' → logprob: -2.618001053633634e-05
    2. ' Edge' → logprob: -10.625025749206543
    3. 'Color' → logprob: -14.125025749206543
    4. 'now' → logprob: -14.250025749206543
    5. '<Edge' → logprob: -15.250025749206543
    6. 'pre' → logprob: -16.62502670288086
    7. '.Edge' → logprob: -16.62502670288086
    8. '_edge' → logprob: -16.62502670288086
    9. '(' → logprob: -17.12502670288086
    10. 'Range' → logprob: -17.62502670288086

Token 564: '[now' (ID: 195791)
  Prédit: '[now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[now' → logprob: -9.088346359931165e-07
    2. 'now' → logprob: -14.875000953674316
    3. '[' → logprob: -15.000000953674316
    4. '(now' → logprob: -16.875
    5. '   ' → logprob: -17.25
    6. '```' → logprob: -17.75
    7. '[current' → logprob: -18.25
    8. '\[' → logprob: -18.25
    9. '[
' → logprob: -18.625
    10. '[next' → logprob: -19.25

Token 565: 'N' (ID: 45)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -0.06196589022874832
    2. 'N' → logprob: -2.9369659423828125
    3. '[now' → logprob: -5.4369659423828125
    4. ' now' → logprob: -6.0619659423828125
    5. '[' → logprob: -8.186965942382812
    6. '0' → logprob: -10.936965942382812
    7. 'Now' → logprob: -10.936965942382812
    8. 'n' → logprob: -11.186965942382812
    9. '(now' → logprob: -11.311965942382812
    10. '.now' → logprob: -11.811965942382812

Token 566: ']:
' (ID: 22152)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1927538961172104
    2. ':' → logprob: -3.192753791809082
    3. ']:
' → logprob: -3.192753791809082
    4. '):
' → logprob: -3.317753791809082
    5. '           ' → logprob: -3.442753791809082
    6. ' if' → logprob: -4.317753791809082
    7. 'if' → logprob: -4.942753791809082
    8. '       ' → logprob: -5.942753791809082
    9. ']:' → logprob: -7.317753791809082
    10. '):' → logprob: -7.817753791809082

Token 567: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4373856484889984
    2. '           ' → logprob: -1.8123856782913208
    3. ' if' → logprob: -2.1873855590820312
    4. '<|end|>' → logprob: -3.1873855590820312
    5. '	       ' → logprob: -3.9373855590820312
    6. 'if' → logprob: -4.812385559082031
    7. '	' → logprob: -5.812385559082031
    8. '               ' → logprob: -6.687385559082031
    9. '        ' → logprob: -6.812385559082031
    10. '	if' → logprob: -7.062385559082031

Token 568: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02813868783414364
    2. ' if' → logprob: -4.278138637542725
    3. '               ' → logprob: -4.278138637542725
    4. '           ' → logprob: -12.028139114379883
    5. '	if' → logprob: -13.278139114379883
    6. '	           ' → logprob: -14.403139114379883
    7. '   ' → logprob: -15.153139114379883
    8. '			' → logprob: -15.403139114379883
    9. 'If' → logprob: -15.778139114379883
    10. ';if' → logprob: -15.903139114379883

Token 569: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0006488138460554183
    2. ' e' → logprob: -7.3756489753723145
    3. 'Color' → logprob: -10.750648498535156
    4. ' Color' → logprob: -15.125648498535156
    5. 'not' → logprob: -15.250648498535156
    6. '   ' → logprob: -15.625648498535156
    7. '	e' → logprob: -16.750648498535156
    8. 'color' → logprob: -17.625648498535156
    9. ' not' → logprob: -17.875648498535156
    10. ' ' → logprob: -18.000648498535156

Token 570: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.16024941205978394
    2. ' !=' → logprob: -1.9102494716644287
    3. '()!=' → logprob: -11.285249710083008
    4. ')!=' → logprob: -12.035249710083008
    5. '!==' → logprob: -13.160249710083008
    6. ']!=' → logprob: -13.160249710083008
    7. '!=-' → logprob: -14.660249710083008
    8. '!=(' → logprob: -14.660249710083008
    9. '[' → logprob: -14.910249710083008
    10. '```' → logprob: -15.410249710083008

Token 571: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -1.9361264946837764e-07
    2. ' pre' → logprob: -16.5
    3. '	pre' → logprob: -23.5
    4. '   ' → logprob: -23.875
    5. 'now' → logprob: -25.25
    6. '(pre' → logprob: -25.375
    7. ' ' → logprob: -26.25
    8. 'prev' → logprob: -26.375
    9. 'pro' → logprob: -26.375
    10. 'prem' → logprob: -27.125

Token 572: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: 0.0
    2. ' N' → logprob: -18.625
    3. '```' → logprob: -19.125
    4. 'n' → logprob: -19.25
    5. '[' → logprob: -19.25
    6. '   ' → logprob: -19.625
    7. '
' → logprob: -19.625
    8. ' ' → logprob: -20.25
    9. '`' → logprob: -20.75
    10. '#' → logprob: -21.625

Token 573: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6576091647148132
    2. ' and' → logprob: -1.032609224319458
    3. '               ' → logprob: -2.282609224319458
    4. ':' → logprob: -3.907609224319458
    5. '):
' → logprob: -6.157608985900879
    6. 'and' → logprob: -7.157608985900879
    7. '           ' → logprob: -8.032608985900879
    8. ')' → logprob: -9.157608985900879
    9. ' :
' → logprob: -9.657608985900879
    10. '):' → logprob: -10.032608985900879

Token 574: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009007388725876808
    2. ' q' → logprob: -7.625900745391846
    3. 'q' → logprob: -8.625900268554688
    4. '	           ' → logprob: -9.625900268554688
    5. '			' → logprob: -10.000900268554688
    6. '		       ' → logprob: -10.375900268554688
    7. '	q' → logprob: -10.875900268554688
    8. '              ' → logprob: -11.375900268554688
    9. '	       ' → logprob: -11.500900268554688
    10. '           ' → logprob: -11.750900268554688

Token 575: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -0.02211354300379753
    2. ' q' → logprob: -3.897113561630249
    3. '                   ' → logprob: -7.02211332321167
    4. '               ' → logprob: -8.147113800048828
    5. '	q' → logprob: -8.147113800048828
    6. '                       ' → logprob: -9.647113800048828
    7. '   ' → logprob: -11.772113800048828
    8. '```' → logprob: -12.397113800048828
    9. '                    ' → logprob: -12.522113800048828
    10. '                ' → logprob: -12.897113800048828

Token 576: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.542423165636137e-05
    2. '.' → logprob: -9.375085830688477
    3. 'append' → logprob: -15.625085830688477
    4. '.app' → logprob: -15.625085830688477
    5. '.enqueue' → logprob: -15.875085830688477
    6. '.Append' → logprob: -16.500085830688477
    7. 'app' → logprob: -17.875085830688477
    8. '.put' → logprob: -18.250085830688477
    9. '.p' → logprob: -18.375085830688477
    10. ' .' → logprob: -18.500085830688477

Token 577: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0010705619351938367
    2. '(e' → logprob: -7.001070499420166
    3. '(' → logprob: -8.751070976257324
    4. ' (' → logprob: -14.751070976257324
    5. '(
' → logprob: -15.376070976257324
    6. ' ((' → logprob: -16.876070022583008
    7. '   ' → logprob: -17.126070022583008
    8. '(E' → logprob: -17.376070022583008
    9. '(('' → logprob: -17.876070022583008
    10. '```' → logprob: -18.376070022583008

Token 578: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -3.4121114822482923e-06
    2. ' e' → logprob: -12.750003814697266
    3. '(e' → logprob: -14.875003814697266
    4. '   ' → logprob: -17.125003814697266
    5. '	e' → logprob: -17.125003814697266
    6. ')e' → logprob: -17.875003814697266
    7. '               ' → logprob: -18.125003814697266
    8. '                   ' → logprob: -18.125003814697266
    9. '(' → logprob: -18.625003814697266
    10. ',e' → logprob: -19.125003814697266

Token 579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033279068302363157
    2. ',e' → logprob: -6.2533278465271
    3. '[now' → logprob: -7.1283278465271
    4. 'now' → logprob: -8.128328323364258
    5. 'e' → logprob: -8.503328323364258
    6. ' ,' → logprob: -10.503328323364258
    7. '[' → logprob: -11.128328323364258
    8. '(now' → logprob: -11.378328323364258
    9. '   ' → logprob: -11.503328323364258
    10. ',n' → logprob: -12.128328323364258

Token 580: ' now' (ID: 1954)
  Prédit: 'now'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'now' → logprob: -6.897412822581828e-05
    2. ' now' → logprob: -9.625068664550781
    3. 'nown' → logprob: -13.875068664550781
    4. '   ' → logprob: -14.125068664550781
    5. '[now' → logprob: -14.125068664550781
    6. '	now' → logprob: -15.125068664550781
    7. 'Now' → logprob: -16.87506866455078
    8. 'no' → logprob: -17.25006866455078
    9. '(now' → logprob: -17.37506866455078
    10. '0' → logprob: -17.87506866455078

Token 581: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.3856492842023727e-06
    2. 'now' → logprob: -13.875000953674316
    3. 'Now' → logprob: -15.500000953674316
    4. '[now' → logprob: -16.375001907348633
    5. '```' → logprob: -16.875001907348633
    6. '[' → logprob: -17.250001907348633
    7. ' now' → logprob: -17.500001907348633
    8. '_now' → logprob: -18.562501907348633
    9. 'Н' → logprob: -18.687501907348633
    10. '   ' → logprob: -18.875001907348633

Token 582: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003876550472341478
    2. '))
' → logprob: -7.875387668609619
    3. ')' → logprob: -12.000387191772461
    4. ')))' → logprob: -13.875387191772461
    5. '()))' → logprob: -15.625387191772461
    6. '))

' → logprob: -15.625387191772461
    7. ' ))' → logprob: -16.75038719177246
    8. '               ' → logprob: -17.75038719177246
    9. ')
' → logprob: -18.37538719177246
    10. '       ' → logprob: -18.37538719177246

Token 583: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 584: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3885614275932312
    2. '
' → logprob: -1.638561487197876
    3. '```' → logprob: -2.388561487197876
    4. 'print' → logprob: -3.388561487197876
    5. '    
' → logprob: -6.388561248779297
    6. '``' → logprob: -7.638561248779297
    7. '  
' → logprob: -11.388561248779297
    8. '

' → logprob: -11.763561248779297
    9. ' print' → logprob: -13.513561248779297
    10. '        
' → logprob: -13.638561248779297

Token 585: ' Output' (ID: 18315)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005810309085063636
    2. '   ' → logprob: -7.50058126449585
    3. '```' → logprob: -10.500580787658691
    4. '
' → logprob: -15.000580787658691
    5. '``' → logprob: -15.875580787658691
    6. ' print' → logprob: -16.125581741333008
    7. '#print' → logprob: -17.750581741333008
    8. '    
' → logprob: -18.000581741333008
    9. '	print' → logprob: -18.750581741333008
    10. '#' → logprob: -19.250581741333008

Token 586: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6947332620620728
    2. 'print' → logprob: -0.6947332620620728
    3. '```' → logprob: -6.944733142852783
    4. '
' → logprob: -7.444733142852783
    5. ' print' → logprob: -10.819733619689941
    6. '``' → logprob: -11.944733619689941
    7. '    
' → logprob: -12.194733619689941
    8. '`' → logprob: -13.194733619689941
    9. '(print' → logprob: -13.444733619689941
    10. '\' → logprob: -14.444733619689941

Token 587: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00021176543668843806
    2. 'ans' → logprob: -8.500211715698242
    3. '   ' → logprob: -12.000211715698242
    4. ' print' → logprob: -13.500211715698242
    5. '(ans' → logprob: -15.375211715698242
    6. '```' → logprob: -15.625211715698242
    7. 'pr' → logprob: -15.875211715698242
    8. 'answer' → logprob: -15.875211715698242
    9. '
' → logprob: -16.875211715698242
    10. 'println' → logprob: -17.625211715698242

Token 588: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009720788337290287
    2. 'print' → logprob: -5.259720802307129
    3. '
' → logprob: -5.759720802307129
    4. '```' → logprob: -6.759720802307129
    5. '    
' → logprob: -8.759720802307129
    6. '``' → logprob: -11.884720802307129
    7. '  
' → logprob: -14.759720802307129
    8. ' print' → logprob: -15.384720802307129
    9. '`' → logprob: -15.384720802307129
    10. '`
' → logprob: -16.134719848632812

Token 589: ' the' (ID: 290)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017708512023091316
    2. '   ' → logprob: -4.5177083015441895
    3. '```' → logprob: -5.0177083015441895
    4. '``' → logprob: -11.392708778381348
    5. ' print' → logprob: -12.267708778381348
    6. '
' → logprob: -12.767708778381348
    7. '`' → logprob: -15.892708778381348
    8. '	print' → logprob: -17.64270782470703
    9. '    
' → logprob: -18.01770782470703
    10. '`
' → logprob: -19.14270782470703

Token 590: ' sum' (ID: 4215)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00032485672272741795
    2. 'ans' → logprob: -8.250325202941895
    3. '   ' → logprob: -10.250325202941895
    4. ' print' → logprob: -11.000325202941895
    5. 'pr' → logprob: -12.625325202941895
    6. '```' → logprob: -12.625325202941895
    7. '
' → logprob: -13.375325202941895
    8. 'answer' → logprob: -13.875325202941895
    9. 'first' → logprob: -14.625325202941895
    10. '`' → logprob: -14.875325202941895

Token 591: ' and' (ID: 326)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.21370452642440796
    2. '(' → logprob: -1.9637045860290527
    3. '()' → logprob: -3.2137045860290527
    4. '   ' → logprob: -4.588704586029053
    5. ',' → logprob: -7.213704586029053
    6. '()
' → logprob: -7.713704586029053
    7. '(
' → logprob: -8.088704109191895
    8. '(f' → logprob: -9.713704109191895
    9. '```' → logprob: -10.088704109191895
    10. '(),' → logprob: -11.213704109191895

Token 592: ' the' (ID: 290)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.18542960286140442
    2. 'the' → logprob: -3.310429573059082
    3. '("' → logprob: -3.435429573059082
    4. ''' → logprob: -3.435429573059082
    5. 'Color' → logprob: -4.310429573059082
    6. '(' → logprob: -4.435429573059082
    7. '('' → logprob: -4.560429573059082
    8. '
' → logprob: -4.935429573059082
    9. ' the' → logprob: -5.060429573059082
    10. 'print' → logprob: -5.810429573059082

Token 593: ' assigned' (ID: 21482)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.035010576248169
    2. 'largest' → logprob: -1.785010576248169
    3. 'colors' → logprob: -1.910010576248169
    4. ''' → logprob: -1.910010576248169
    5. 'max' → logprob: -2.535010576248169
    6. 'assigned' → logprob: -3.410010576248169
    7. 'list' → logprob: -3.660010576248169
    8. 'Color' → logprob: -4.16001033782959
    9. ' colors' → logprob: -4.53501033782959
    10. ' largest' → logprob: -5.41001033782959

Token 594: ' color' (ID: 3089)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.7025407552719116
    2. ' colors' → logprob: -1.4525407552719116
    3. '(' → logprob: -1.5775407552719116
    4. 'Colors' → logprob: -3.827540874481201
    5. 'Color' → logprob: -4.327540874481201
    6. '()' → logprob: -4.952540874481201
    7. '("' → logprob: -5.202540874481201
    8. '('' → logprob: -5.577540874481201
    9. '(
' → logprob: -5.702540874481201
    10. '(colors' → logprob: -6.202540874481201

Token 595: ' list' (ID: 1562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3536372184753418
    2. '   ' → logprob: -1.6036372184753418
    3. '()
' → logprob: -3.103637218475342
    4. '(' → logprob: -3.478637218475342
    5. '()' → logprob: -4.228637218475342
    6. '```' → logprob: -5.478637218475342
    7. '
' → logprob: -7.478637218475342
    8. 's' → logprob: -7.603637218475342
    9. '("\' → logprob: -8.1036376953125
    10. '``' → logprob: -8.6036376953125

Token 596: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011690753512084484
    2. 'print' → logprob: -5.011690616607666
    3. '
' → logprob: -6.011690616607666
    4. '```' → logprob: -6.011690616607666
    5. '    
' → logprob: -10.011691093444824
    6. '``' → logprob: -11.011691093444824
    7. '  
' → logprob: -14.886691093444824
    8. ' print' → logprob: -15.011691093444824
    9. '\' → logprob: -15.011691093444824
    10. '`
' → logprob: -15.261691093444824

Token 597: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10259205102920532
    2. '```' → logprob: -2.8525919914245605
    3. '
' → logprob: -3.3525919914245605
    4. 'print' → logprob: -5.4775919914245605
    5. '``' → logprob: -7.8525919914245605
    6. '    
' → logprob: -8.352592468261719
    7. '  
' → logprob: -12.602592468261719
    8. '`
' → logprob: -12.852592468261719
    9. ' print' → logprob: -12.977592468261719
    10. '`' → logprob: -13.352592468261719

Token 598: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0060119833797216415
    2. '```' → logprob: -5.506011962890625
    3. '   ' → logprob: -6.256011962890625
    4. '``' → logprob: -12.006011962890625
    5. ' print' → logprob: -12.381011962890625
    6. '
' → logprob: -13.006011962890625
    7. '`' → logprob: -16.381011962890625
    8. '	print' → logprob: -17.006011962890625
    9. '    
' → logprob: -19.256011962890625
    10. '(print' → logprob: -19.381011962890625

Token 599: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.541112427134067e-05
    2. '(' → logprob: -9.500075340270996
    3. 'ans' → logprob: -15.625075340270996
    4. '(
' → logprob: -15.875075340270996
    5. '(f' → logprob: -16.750076293945312
    6. ' (' → logprob: -17.000076293945312
    7. '(answer' → logprob: -17.250076293945312
    8. '	ans' → logprob: -17.750076293945312
    9. '()' → logprob: -18.250076293945312
    10. '(abs' → logprob: -18.375076293945312

Token 600: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010772839188575745
    2. ')' → logprob: -4.885772705078125
    3. ')
' → logprob: -5.760772705078125
    4. ',
' → logprob: -12.635772705078125
    5. ' ,' → logprob: -12.635772705078125
    6. ',end' → logprob: -13.135772705078125
    7. '   ' → logprob: -13.260772705078125
    8. ',)
' → logprob: -14.385772705078125
    9. ',"' → logprob: -14.510772705078125
    10. ',)' → logprob: -15.010772705078125

Token 601: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00025514091248624027
    2. ' print' → logprob: -9.000255584716797
    3. '   ' → logprob: -9.250255584716797
    4. '```' → logprob: -10.250255584716797
    5. '``' → logprob: -15.875255584716797
    6. '(print' → logprob: -16.875255584716797
    7. '    
' → logprob: -17.000255584716797
    8. '	print' → logprob: -17.000255584716797
    9. '  
' → logprob: -17.500255584716797
    10. '('' → logprob: -17.625255584716797

Token 602: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -5.2524021157296374e-05
    2. '   ' → logprob: -10.000052452087402
    3. ' print' → logprob: -12.000052452087402
    4. '```' → logprob: -14.000052452087402
    5. '	print' → logprob: -18.87505340576172
    6. 'for' → logprob: -19.87505340576172
    7. '`' → logprob: -20.37505340576172
    8. '
' → logprob: -21.00005340576172
    9. '(print' → logprob: -21.12505340576172
    10. '``' → logprob: -21.25005340576172

Token 603: '("' (ID: 568)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.06843233853578568
    2. '('' → logprob: -2.818432331085205
    3. '("' → logprob: -5.068432331085205
    4. '(' → logprob: -8.818432807922363
    5. '(Color' → logprob: -13.193432807922363
    6. '(*(' → logprob: -13.943432807922363
    7. '(*)' → logprob: -14.943432807922363
    8. '()' → logprob: -15.568432807922363
    9. ' (*' → logprob: -16.193431854248047
    10. '*' → logprob: -16.693431854248047

Token 604: ' ".' (ID: 11730)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3520512282848358
    2. '*' → logprob: -1.6020512580871582
    3. ''' → logprob: -2.352051258087158
    4. '(*' → logprob: -9.47705078125
    5. '"C' → logprob: -12.10205078125
    6. '('' → logprob: -12.60205078125
    7. '
' → logprob: -13.22705078125
    8. '("' → logprob: -13.35205078125
    9. '*"' → logprob: -13.60205078125
    10. '*C' → logprob: -13.72705078125

Token 605: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.438573680294212e-06
    2. 'print' → logprob: -12.375005722045898
    3. '.join' → logprob: -14.125005722045898
    4. '.' → logprob: -15.375005722045898
    5. ' join' → logprob: -16.0000057220459
    6. '".' → logprob: -17.1250057220459
    7. 'j' → logprob: -18.0000057220459
    8. 'jo' → logprob: -18.1250057220459
    9. ''.' → logprob: -19.0000057220459
    10. 'write' → logprob: -19.0000057220459

Token 606: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.11770836263895035
    2. 'map' → logprob: -2.367708444595337
    3. '(str' → logprob: -4.117708206176758
    4. 'str' → logprob: -6.867708206176758
    5. '[str' → logprob: -10.617708206176758
    6. ' map' → logprob: -13.117708206176758
    7. '	map' → logprob: -15.492708206176758
    8. '.map' → logprob: -15.992708206176758
    9. ',map' → logprob: -16.867708206176758
    10. 'Map' → logprob: -17.492708206176758

Token 607: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -7.660315895918757e-05
    2. 'str' → logprob: -9.500076293945312
    3. '=str' → logprob: -14.250076293945312
    4. ' str' → logprob: -15.000076293945312
    5. '```' → logprob: -15.250076293945312
    6. '[str' → logprob: -15.750076293945312
    7. '	str' → logprob: -16.250076293945312
    8. '(' → logprob: -16.375076293945312
    9. '   ' → logprob: -17.500076293945312
    10. ',str' → logprob: -18.125076293945312

Token 608: ',' (ID: 11)
  Prédit: '(Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Color' → logprob: -5.7530574849806726e-05
    2. ',' → logprob: -10.125057220458984
    3. 'Color' → logprob: -11.000057220458984
    4. '	Color' → logprob: -14.625057220458984
    5. '(' → logprob: -16.375057220458984
    6. '<Color' → logprob: -16.500057220458984
    7. ' (' → logprob: -17.125057220458984
    8. '(C' → logprob: -17.500057220458984
    9. '(Code' → logprob: -17.500057220458984
    10. ' Color' → logprob: -17.750057220458984

Token 609: ' Color' (ID: 6822)
  Prédit: 'Color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Color' → logprob: -3.128163257315464e-07
    2. ' Color' → logprob: -15.5
    3. '(Color' → logprob: -17.5
    4. '	Color' → logprob: -18.75
    5. '   ' → logprob: -20.625
    6. '_Color' → logprob: -21.25
    7. '<Color' → logprob: -21.625
    8. '.Color' → logprob: -22.625
    9. 'COLOR' → logprob: -22.75
    10. 'color' → logprob: -24.875

Token 610: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003490514063742012
    2. ')))' → logprob: -8.000349044799805
    3. '))
' → logprob: -11.500349044799805
    4. '()))' → logprob: -13.625349044799805
    5. ')' → logprob: -13.875349044799805
    6. '   ' → logprob: -14.000349044799805
    7. ' ))' → logprob: -14.875349044799805
    8. '}))' → logprob: -17.125349044799805
    9. ' ' → logprob: -17.750349044799805
    10. '))))' → logprob: -17.875349044799805

Token 611: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 612: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 613: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 614: '0' (ID: 15)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 615: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 616: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 617: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02633490227162838
    2. '__' → logprob: -3.6513350009918213
    3. ' ' → logprob: -11.026334762573242
    4. '_' → logprob: -11.401334762573242
    5. '_name' → logprob: -12.651334762573242
    6. '___' → logprob: -13.651334762573242
    7. ' ' → logprob: -14.276334762573242
    8. 'name' → logprob: -14.276334762573242
    9. ' _' → logprob: -14.651334762573242
    10. '  ' → logprob: -14.901334762573242

Token 618: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01859235391020775
    2. ' ==' → logprob: -4.268592357635498
    3. ' __' → logprob: -5.768592357635498
    4. '==' → logprob: -7.143592357635498
    5. '.__' → logprob: -8.26859188079834
    6. '__.__' → logprob: -9.76859188079834
    7. 'name' → logprob: -10.51859188079834
    8. '__':
' → logprob: -11.01859188079834
    9. '__.' → logprob: -11.14359188079834
    10. '__[' → logprob: -11.14359188079834

Token 619: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.1756367712223437e-05
    2. '__.__' → logprob: -11.750011444091797
    3. '==' → logprob: -13.000011444091797
    4. '__.' → logprob: -14.250011444091797
    5. '___' → logprob: -15.000011444091797
    6. '____' → logprob: -15.500011444091797
    7. ' ==' → logprob: -15.625011444091797
    8. '=="' → logprob: -16.625011444091797
    9. '__('' → logprob: -17.125011444091797
    10. '__
' → logprob: -17.250011444091797

Token 620: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.26812607049942017
    2. '==' → logprob: -2.3931260108947754
    3. '=="' → logprob: -2.5181260108947754
    4. ' ==' → logprob: -2.7681260108947754
    5. '=='' → logprob: -7.893126010894775
    6. '__.__' → logprob: -10.643126487731934
    7. '==
' → logprob: -11.393126487731934
    8. ' =="' → logprob: -12.018126487731934
    9. '==="' → logprob: -12.018126487731934
    10. '__":
' → logprob: -12.393126487731934

Token 621: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0019372005481272936
    2. ''' → logprob: -6.251937389373779
    3. '__' → logprob: -12.001936912536621
    4. ' "__' → logprob: -13.001936912536621
    5. '"name' → logprob: -16.501937866210938
    6. '"user' → logprob: -16.751937866210938
    7. '("__' → logprob: -17.126937866210938
    8. '   ' → logprob: -17.626937866210938
    9. '"_' → logprob: -18.126937866210938
    10. '"is' → logprob: -18.751937866210938

Token 622: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.006740708369761705
    2. '__' → logprob: -5.006740570068359
    3. '"' → logprob: -11.13174057006836
    4. '_main' → logprob: -12.38174057006836
    5. 'name' → logprob: -12.88174057006836
    6. ''' → logprob: -13.25674057006836
    7. ' main' → logprob: -13.63174057006836
    8. '___' → logprob: -15.25674057006836
    9. '__":
' → logprob: -15.63174057006836
    10. 'Main' → logprob: -16.38174057006836

Token 623: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.040648203343153
    2. '__' → logprob: -3.2906482219696045
    3. '__':
' → logprob: -6.040647983551025
    4. '():
' → logprob: -8.915648460388184
    5. '__:' → logprob: -9.665648460388184
    6. '__()
' → logprob: -11.915648460388184
    7. '__["' → logprob: -12.290648460388184
    8. ':' → logprob: -12.915648460388184
    9. '==' → logprob: -13.665648460388184
    10. '():' → logprob: -13.665648460388184

Token 624: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10902386903762817
    2. 'solve' → logprob: -2.3590238094329834
    3. '	s' → logprob: -5.4840240478515625
    4. ' solve' → logprob: -5.7340240478515625
    5. '```' → logprob: -7.1090240478515625
    6. '.solve' → logprob: -8.109024047851562
    7. '   ' → logprob: -8.984024047851562
    8. ' ' → logprob: -9.734024047851562
    9. '(s' → logprob: -11.234024047851562
    10. '\t' → logprob: -11.234024047851562

Token 625: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -5.5577775128767826e-06
    2. '   ' → logprob: -12.250005722045898
    3. ' solve' → logprob: -14.250005722045898
    4. '.solve' → logprob: -17.2500057220459
    5. '```' → logprob: -18.7500057220459
    6. 'import' → logprob: -19.2500057220459
    7. 'resolve' → logprob: -21.8750057220459
    8. 'save' → logprob: -22.5000057220459
    9. 's' → logprob: -22.6250057220459
    10. 'sys' → logprob: -23.1250057220459

Token 626: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008891870966181159
    2. '()
' → logprob: -7.250889301300049
    3. '(' → logprob: -8.87588882446289
    4. '();' → logprob: -11.87588882446289
    5. '```' → logprob: -11.87588882446289
    6. '()<' → logprob: -12.12588882446289
    7. '()`' → logprob: -12.37588882446289
    8. '()\' → logprob: -12.75088882446289
    9. '<|end|>' → logprob: -12.75088882446289
    10. ' ()' → logprob: -13.12588882446289


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 624
Tokens correctement prédits (1ère position, stricte): 173
Tokens correctement prédits (1ère position, avec adaptation): 188
Tokens correctement prédits (top 10): 415
Précision stricte (1ère position): 27.72%
Précision adaptée (1ère position): 30.13%
Précision (top 10): 66.51%
================================================================================
