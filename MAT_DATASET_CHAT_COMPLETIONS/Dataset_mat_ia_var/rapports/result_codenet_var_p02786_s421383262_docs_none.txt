================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:28:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
n = int(input())
n_log = math.log(n,2)
n_log_2 = math.floor(n_log)
print(2**(n_log_2+1)-1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005792465526610613
    2. '```' → logprob: -8.750578880310059
    3. '\n' → logprob: -9.000578880310059
    4. '<|end|>' → logprob: -9.625578880310059
    5. '\' → logprob: -9.750578880310059
    6. 'import' → logprob: -10.250578880310059
    7. '.pi' → logprob: -10.625578880310059
    8. '.e' → logprob: -10.875578880310059
    9. 'def' → logprob: -11.375578880310059
    10. '.

' → logprob: -11.625578880310059

Token 4: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4599732756614685
    2. '=' → logprob: -1.8349733352661133
    3. '_' → logprob: -2.4599733352661133
    4. ' ' → logprob: -3.7099733352661133
    5. 'u' → logprob: -3.9599733352661133
    6. ',' → logprob: -3.9599733352661133
    7. ')' → logprob: -3.9599733352661133
    8. 'e' → logprob: -4.834973335266113
    9. ' =' → logprob: -4.959973335266113
    10. '+' → logprob: -5.209973335266113

Token 5: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0904645025730133
    2. ' int' → logprob: -2.5904645919799805
    3. '10' → logprob: -5.5904645919799805
    4. 'int' → logprob: -5.7154645919799805
    5. '0' → logprob: -6.3404645919799805
    6. '5' → logprob: -6.7154645919799805
    7. '1' → logprob: -7.0904645919799805
    8. ' math' → logprob: -7.7154645919799805
    9. '2' → logprob: -9.84046459197998
    10. '20' → logprob: -9.96546459197998

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.894790981779806e-05
    2. '()' → logprob: -11.500048637390137
    3. '('' → logprob: -11.750048637390137
    4. '(n' → logprob: -11.750048637390137
    5. '(input' → logprob: -12.000048637390137
    6. ' (' → logprob: -12.500048637390137
    7. '(`' → logprob: -12.500048637390137
    8. '(math' → logprob: -12.750048637390137
    9. '(
' → logprob: -13.625048637390137
    10. '```' → logprob: -14.125048637390137

Token 7: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7044256925582886
    2. ')' → logprob: -0.7044256925582886
    3. '()' → logprob: -4.954425811767578
    4. '())' → logprob: -5.704425811767578
    5. '(
' → logprob: -8.454425811767578
    6. '))' → logprob: -8.579425811767578
    7. '('' → logprob: -9.329425811767578
    8. '")' → logprob: -9.454425811767578
    9. '`)' → logprob: -9.954425811767578
    10. '(

' → logprob: -9.954425811767578

Token 8: 'n' (ID: 77)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.8503400683403015
    2. 's' → logprob: -1.4753401279449463
    3. 'result' → logprob: -2.1003401279449463
    4. 'if' → logprob: -2.9753401279449463
    5. 'f' → logprob: -2.9753401279449463
    6. 'for' → logprob: -3.3503401279449463
    7. 'fact' → logprob: -3.4753401279449463
    8. 'x' → logprob: -3.4753401279449463
    9. '`' → logprob: -5.850339889526367
    10. '```' → logprob: -6.100339889526367

Token 9: '_log' (ID: 9545)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.7413730025291443
    2. '*' → logprob: -1.366373062133789
    3. '+' → logprob: -1.491373062133789
    4. '%' → logprob: -3.491373062133789
    5. '\' → logprob: -5.616373062133789
    6. '```' → logprob: -5.991373062133789
    7. ' **' → logprob: -6.616373062133789
    8. '#' → logprob: -6.991373062133789
    9. ')' → logprob: -7.116373062133789
    10. ' ' → logprob: -7.366373062133789

Token 10: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5641903877258301
    2. '10' → logprob: -1.06419038772583
    3. '_' → logprob: -2.56419038772583
    4. 'arith' → logprob: -5.68919038772583
    5. '1' → logprob: -5.81419038772583
    6. '2' → logprob: -6.81419038772583
    7. '(n' → logprob: -7.43919038772583
    8. ')' → logprob: -8.314189910888672
    9. '()' → logprob: -8.439189910888672
    10. '(math' → logprob: -9.189189910888672

Token 11: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.5779892802238464
    2. ' math' → logprob: -0.8279892802238464
    3. '(math' → logprob: -6.827989101409912
    4. ' n' → logprob: -7.202989101409912
    5. 'n' → logprob: -8.57798957824707
    6. '(' → logprob: -11.57798957824707
    7. ' ' → logprob: -12.20298957824707
    8. '10' → logprob: -12.32798957824707
    9. '(n' → logprob: -12.45298957824707
    10. 'int' → logprob: -12.70298957824707

Token 12: '.log' (ID: 2659)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5812063217163086
    2. '.log' → logprob: -0.8312063217163086
    3. '.sqrt' → logprob: -5.331206321716309
    4. '.pow' → logprob: -8.956206321716309
    5. ' .' → logprob: -9.706206321716309
    6. '.ceil' → logprob: -9.706206321716309
    7. '.exp' → logprob: -10.081206321716309
    8. '.floor' → logprob: -10.456206321716309
    9. '.sin' → logprob: -10.706206321716309
    10. '.pi' → logprob: -10.706206321716309

Token 13: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3066196143627167
    2. '(' → logprob: -1.431619644165039
    3. '10' → logprob: -3.806619644165039
    4. ' (' → logprob: -6.306619644165039
    5. 'n' → logprob: -7.306619644165039
    6. ')' → logprob: -9.181619644165039
    7. '2' → logprob: -9.431619644165039
    8. ' n' → logprob: -10.056619644165039
    9. '(x' → logprob: -10.056619644165039
    10. ' ' → logprob: -10.556619644165039

Token 14: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02479836530983448
    2. ',' → logprob: -3.7747983932495117
    3. '(n' → logprob: -7.024798393249512
    4. '(' → logprob: -8.149798393249512
    5. ' )' → logprob: -9.024798393249512
    6. ',n' → logprob: -10.024798393249512
    7. '))' → logprob: -10.399798393249512
    8. '2' → logprob: -10.399798393249512
    9. ' ,' → logprob: -10.399798393249512
    10. '+' → logprob: -10.899798393249512

Token 15: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4804185926914215
    2. '10' → logprob: -0.9804185628890991
    3. ' ' → logprob: -5.230418682098389
    4. ')' → logprob: -7.105418682098389
    5. 'math' → logprob: -9.85541820526123
    6. ' math' → logprob: -9.98041820526123
    7. ' )' → logprob: -10.23041820526123
    8. ' n' → logprob: -12.23041820526123
    9. '1' → logprob: -12.85541820526123
    10. 'n' → logprob: -13.23041820526123

Token 16: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005551783833652735
    2. '))' → logprob: -7.500555038452148
    3. ' )' → logprob: -14.000555038452148
    4. ')))' → logprob: -15.000555038452148
    5. ')n' → logprob: -15.250555038452148
    6. ')
' → logprob: -15.375555038452148
    7. ')**' → logprob: -16.12555503845215
    8. ')`' → logprob: -16.37555503845215
    9. '()' → logprob: -16.50055503845215
    10. '**' → logprob: -16.62555503845215

Token 17: 'n' (ID: 77)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03270585462450981
    2. '**' → logprob: -4.532705783843994
    3. 'if' → logprob: -4.532705783843994
    4. '(' → logprob: -5.407705783843994
    5. '*' → logprob: -6.407705783843994
    6. '+' → logprob: -7.032705783843994
    7. ' if' → logprob: -7.032705783843994
    8. ')
' → logprob: -7.782705783843994
    9. 'print' → logprob: -8.032706260681152
    10. '#' → logprob: -8.032706260681152

Token 18: '_log' (ID: 9545)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.22286704182624817
    2. '<|end|>' → logprob: -2.347867012023926
    3. '+' → logprob: -3.347867012023926
    4. ')' → logprob: -3.972867012023926
    5. ' ' → logprob: -4.222867012023926
    6. ' **' → logprob: -4.472867012023926
    7. '*' → logprob: -4.972867012023926
    8. '_' → logprob: -4.972867012023926
    9. '%' → logprob: -5.722867012023926
    10. '#' → logprob: -6.222867012023926

Token 19: '_' (ID: 62)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2086962461471558
    2. '*' → logprob: -1.2086962461471558
    3. '**' → logprob: -1.5836962461471558
    4. '<|end|>' → logprob: -2.0836963653564453
    5. '+' → logprob: -3.7086963653564453
    6. ' ' → logprob: -4.583696365356445
    7. '#' → logprob: -4.708696365356445
    8. '%' → logprob: -5.333696365356445
    9. '```' → logprob: -5.583696365356445
    10. '\' → logprob: -5.833696365356445

Token 20: '2' (ID: 17)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0982086658477783
    2. 'ceil' → logprob: -1.0982086658477783
    3. 'floor' → logprob: -1.5982086658477783
    4. '2' → logprob: -2.0982086658477783
    5. '10' → logprob: -6.223208427429199
    6. 'math' → logprob: -6.598208427429199
    7. 'n' → logprob: -6.723208427429199
    8. '1' → logprob: -6.723208427429199
    9. 'ce' → logprob: -7.348208427429199
    10. '_' → logprob: -8.3482084274292

Token 21: ' =' (ID: 314)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.7441498637199402
    2. ')' → logprob: -1.369149923324585
    3. ' **' → logprob: -1.494149923324585
    4. '*' → logprob: -4.369149684906006
    5. ' ' → logprob: -4.744149684906006
    6. ' *' → logprob: -4.994149684906006
    7. '(' → logprob: -5.619149684906006
    8. '()' → logprob: -5.619149684906006
    9. '(n' → logprob: -5.994149684906006
    10. ' )' → logprob: -6.369149684906006

Token 22: ' math' (ID: 13324)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4655663073062897
    2. ' n' → logprob: -1.0905662775039673
    3. '2' → logprob: -3.965566396713257
    4. ' math' → logprob: -4.965566158294678
    5. 'math' → logprob: -5.465566158294678
    6. ' ' → logprob: -5.965566158294678
    7. '(n' → logprob: -6.090566158294678
    8. 'int' → logprob: -7.465566158294678
    9. ' (' → logprob: -8.840566635131836
    10. ' int' → logprob: -8.840566635131836

Token 23: '.floor' (ID: 23934)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.021989699453115463
    2. '.log' → logprob: -4.021989822387695
    3. '.sqrt' → logprob: -6.146989822387695
    4. ' .' → logprob: -6.521989822387695
    5. '.pow' → logprob: -8.771989822387695
    6. '.ceil' → logprob: -11.646989822387695
    7. 'log' → logprob: -12.021989822387695
    8. '.cos' → logprob: -12.021989822387695
    9. '.s' → logprob: -12.146989822387695
    10. '.n' → logprob: -12.396989822387695

Token 24: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2015770524740219
    2. '(' → logprob: -1.701577067375183
    3. ' (' → logprob: -8.826577186584473
    4. '(math' → logprob: -12.201577186584473
    5. '((' → logprob: -12.951577186584473
    6. '(log' → logprob: -13.201577186584473
    7. '(

' → logprob: -13.326577186584473
    8. ')' → logprob: -13.326577186584473
    9. '(
' → logprob: -13.451577186584473
    10. '(s' → logprob: -14.326577186584473

Token 25: '_log' (ID: 9545)
  Prédit: '_log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_log' → logprob: -0.002062711166217923
    2. '/log' → logprob: -6.377062797546387
    3. '/' → logprob: -8.752062797546387
    4. ')' → logprob: -9.002062797546387
    5. '_logs' → logprob: -10.877062797546387
    6. '_' → logprob: -11.127062797546387
    7. ' /' → logprob: -11.627062797546387
    8. '-log' → logprob: -11.752062797546387
    9. 'log' → logprob: -12.377062797546387
    10. '))' → logprob: -12.377062797546387

Token 26: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001350234029814601
    2. '+' → logprob: -7.126350402832031
    3. '))' → logprob: -8.626350402832031
    4. '**' → logprob: -9.501350402832031
    5. ' +' → logprob: -9.501350402832031
    6. ' )' → logprob: -9.626350402832031
    7. ')))' → logprob: -10.251350402832031
    8. ')+' → logprob: -10.376350402832031
    9. ')**' → logprob: -11.126350402832031
    10. '/' → logprob: -11.251350402832031

Token 27: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012830996885895729
    2. '+
' → logprob: -5.512831211090088
    3. ' +' → logprob: -5.887831211090088
    4. '<|end|>' → logprob: -6.637831211090088
    5. '**' → logprob: -6.762831211090088
    6. '*' → logprob: -6.762831211090088
    7. '
' → logprob: -7.512831211090088
    8. ' ' → logprob: -7.512831211090088
    9. ')' → logprob: -7.762831211090088
    10. '#' → logprob: -8.76283073425293

Token 28: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00031949623371474445
    2. '(n' → logprob: -8.125319480895996
    3. '('' → logprob: -11.375319480895996
    4. '("("' → logprob: -12.500319480895996
    5. '()' → logprob: -12.625319480895996
    6. '((' → logprob: -13.000319480895996
    7. ' (' → logprob: -14.250319480895996
    8. '(math' → logprob: -14.375319480895996
    9. '(`' → logprob: -15.375319480895996
    10. ')' → logprob: -15.375319480895996

Token 29: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4297034442424774
    2. '2' → logprob: -1.0547034740447998
    3. 'math' → logprob: -8.179703712463379
    4. '(n' → logprob: -8.304703712463379
    5. 'pow' → logprob: -9.179703712463379
    6. '(' → logprob: -9.304703712463379
    7. ' n' → logprob: -9.429703712463379
    8. ')' → logprob: -9.554703712463379
    9. '1' → logprob: -9.929703712463379
    10. 'int' → logprob: -10.679703712463379

Token 30: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.18048854172229767
    2. ' **' → logprob: -1.8054885864257812
    3. '*' → logprob: -8.055488586425781
    4. ')' → logprob: -8.430488586425781
    5. '**)' → logprob: -10.055488586425781
    6. ' **)' → logprob: -10.180488586425781
    7. ' *' → logprob: -10.180488586425781
    8. ' ' → logprob: -10.305488586425781
    9. '*n' → logprob: -10.680488586425781
    10. ' ' → logprob: -11.180488586425781

Token 31: '(' (ID: 7)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0020220205187797546
    2. '(n' → logprob: -6.377021789550781
    3. ' n' → logprob: -8.127021789550781
    4. '(' → logprob: -10.752021789550781
    5. ')n' → logprob: -13.377021789550781
    6. ' (' → logprob: -14.127021789550781
    7. '_n' → logprob: -14.877021789550781
    8. '	n' → logprob: -15.877021789550781
    9. ')' → logprob: -16.50202178955078
    10. '{' → logprob: -16.75202178955078

Token 32: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0011780819622799754
    2. ' n' → logprob: -6.75117826461792
    3. '(n' → logprob: -11.876177787780762
    4. ')n' → logprob: -14.126177787780762
    5. '	n' → logprob: -16.126178741455078
    6. ' ' → logprob: -17.001178741455078
    7. '_n' → logprob: -17.501178741455078
    8. ')' → logprob: -17.751178741455078
    9. '  ' → logprob: -18.001178741455078
    10. '   ' → logprob: -18.501178741455078

Token 33: '_log' (ID: 9545)
  Prédit: '_log'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_log' → logprob: -0.0002774246677290648
    2. '_n' → logprob: -8.250277519226074
    3. '_' → logprob: -11.625277519226074
    4. 'log' → logprob: -13.125277519226074
    5. '_logs' → logprob: -14.000277519226074
    6. ')' → logprob: -14.000277519226074
    7. '-log' → logprob: -14.625277519226074
    8. ''_' → logprob: -14.625277519226074
    9. '_floor' → logprob: -14.875277519226074
    10. '```' → logprob: -15.375277519226074

Token 34: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.1093578804284334e-05
    2. '))' → logprob: -10.875051498413086
    3. '-' → logprob: -11.500051498413086
    4. '_n' → logprob: -12.000051498413086
    5. '2' → logprob: -12.125051498413086
    6. ')' → logprob: -12.250051498413086
    7. '_)' → logprob: -12.875051498413086
    8. '_
' → logprob: -13.500051498413086
    9. ' -' → logprob: -14.375051498413086
    10. '_log' → logprob: -15.625051498413086

Token 35: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17999807000160217
    2. '_' → logprob: -1.8049980401992798
    3. ' ' → logprob: -8.804998397827148
    4. ')' → logprob: -10.304998397827148
    5. '))' → logprob: -10.679998397827148
    6. ' _' → logprob: -10.679998397827148
    7. '-' → logprob: -11.554998397827148
    8. '+' → logprob: -12.929998397827148
    9. ')_' → logprob: -12.929998397827148
    10. '   ' → logprob: -13.929998397827148

Token 36: '+' (ID: 10)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16146999597549438
    2. ')' → logprob: -1.9114699363708496
    3. '+' → logprob: -6.91146993637085
    4. ')))' → logprob: -8.661470413208008
    5. ')+' → logprob: -9.786470413208008
    6. ' ))' → logprob: -12.161470413208008
    7. '-' → logprob: -12.286470413208008
    8. ' )' → logprob: -12.911470413208008
    9. '**' → logprob: -13.661470413208008
    10. ')**' → logprob: -14.036470413208008

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.967624019831419e-05
    2. ' ' → logprob: -9.750060081481934
    3. '2' → logprob: -14.500060081481934
    4. ')' → logprob: -14.500060081481934
    5. '   ' → logprob: -16.125059127807617
    6. '+' → logprob: -16.312559127807617
    7. '0' → logprob: -16.937559127807617
    8. '))' → logprob: -16.937559127807617
    9. '-' → logprob: -17.437559127807617
    10. '  ' → logprob: -17.562559127807617

Token 38: ')-' (ID: 14080)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5759484171867371
    2. ')' → logprob: -0.8259484171867371
    3. ')))' → logprob: -11.700948715209961
    4. ' )' → logprob: -15.200948715209961
    5. ')
' → logprob: -15.825948715209961
    6. ' ))' → logprob: -16.20094871520996
    7. '))
' → logprob: -16.70094871520996
    8. '})' → logprob: -17.07594871520996
    9. ')}' → logprob: -17.20094871520996
    10. ')**' → logprob: -17.20094871520996

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02980569191277027
    2. 'n' → logprob: -3.5298056602478027
    3. ' n' → logprob: -10.029806137084961
    4. ' ' → logprob: -12.029806137084961
    5. ')' → logprob: -13.404806137084961
    6. ')n' → logprob: -13.529806137084961
    7. '(n' → logprob: -14.029806137084961
    8. '	n' → logprob: -15.029806137084961
    9. 'int' → logprob: -15.404806137084961
    10. '<n' → logprob: -15.592306137084961

Token 40: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. '))' → logprob: -15.125000953674316
    3. ' )' → logprob: -15.250000953674316
    4. '')' → logprob: -16.75
    5. ')
' → logprob: -17.0
    6. '`)' → logprob: -17.25
    7. '）' → logprob: -18.0
    8. ')`' → logprob: -18.5
    9. ')#' → logprob: -19.25
    10. '")' → logprob: -19.625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 38
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 13
Tokens correctement prédits (top 10): 25
Précision stricte (1ère position): 34.21%
Précision adaptée (1ère position): 34.21%
Précision (top 10): 65.79%
================================================================================
