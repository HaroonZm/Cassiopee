================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def bizarre(n, x, a):
    a = sorted(a)
    compteur = 0; somme = 0
    idx = 0
    while idx < len(a):
        valeur = a[idx]
        if (somme + valeur) <= x:
            compteur += 1
        somme += valeur
        idx += 1
    if somme < x:
        return compteur - 1
    else:
        return compteur

if __name__ == '__main__':
    from sys import stdin
    lecture = stdin.readline
    n_x = lecture().strip().split()
    n, x = int(n_x[0]), int(n_x[1])
    donnees = [int(num) for num in lecture().strip().split()]
    def afficher(r): print(r)
    afficher(bizarre(n, x, donnees))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' bizarre' (ID: 61150)
  → Token d'amorce (pas de prédiction)

Token 2: '(n' (ID: 2406)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.475312739610672
    2. ')' → logprob: -0.9753127098083496
    3. ':' → logprob: -6.85031270980835
    4. '*' → logprob: -9.850313186645508
    5. ',' → logprob: -10.100313186645508
    6. '[' → logprob: -11.475313186645508
    7. '_' → logprob: -11.475313186645508
    8. '=' → logprob: -11.725313186645508
    9. '+' → logprob: -11.975313186645508
    10. ')>' → logprob: -12.350313186645508

Token 4: ' x' (ID: 1215)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6925598382949829
    2. ' )' → logprob: -1.817559838294983
    3. '):' → logprob: -2.8175597190856934
    4. ' ):' → logprob: -3.0675597190856934
    5. ' x' → logprob: -3.1925597190856934
    6. ' ' → logprob: -3.8175597190856934
    7. ' k' → logprob: -3.8175597190856934
    8. 'x' → logprob: -3.8175597190856934
    9. 'm' → logprob: -3.9425597190856934
    10. 's' → logprob: -3.9425597190856934

Token 5: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10129526257514954
    2. ')' → logprob: -2.351295232772827
    3. ',' → logprob: -7.476295471191406
    4. ':' → logprob: -7.976295471191406
    5. ''):' → logprob: -10.351295471191406
    6. '```' → logprob: -10.351295471191406
    7. '*' → logprob: -10.851295471191406
    8. '):
' → logprob: -10.976295471191406
    9. '=' → logprob: -11.101295471191406
    10. '**' → logprob: -11.226295471191406

Token 6: ' a' (ID: 261)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.15279076993465424
    2. '):' → logprob: -3.0277907848358154
    3. ')' → logprob: -3.1527907848358154
    4. ' y' → logprob: -3.7777907848358154
    5. ',' → logprob: -4.152790546417236
    6. ' ' → logprob: -5.277790546417236
    7. '=' → logprob: -6.527790546417236
    8. ',y' → logprob: -6.652790546417236
    9. 'a' → logprob: -6.902790546417236
    10. 's' → logprob: -7.777790546417236

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17107713222503662
    2. ')' → logprob: -1.9210771322250366
    3. ',' → logprob: -4.671077251434326
    4. '[' → logprob: -7.671077251434326
    5. 's' → logprob: -8.671076774597168
    6. '=' → logprob: -8.921076774597168
    7. ':' → logprob: -9.171076774597168
    8. ',b' → logprob: -9.296076774597168
    9. '*' → logprob: -9.546076774597168
    10. '```' → logprob: -9.796076774597168

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.30412420630455017
    2. '   ' → logprob: -1.4291242361068726
    3. '```' → logprob: -4.054124355316162
    4. '\n' → logprob: -6.179124355316162
    5. '\t' → logprob: -7.554124355316162
    6. ':\' → logprob: -7.554124355316162
    7. ' ' → logprob: -7.929124355316162
    8. '\' → logprob: -8.054123878479004
    9. '``' → logprob: -8.304123878479004
    10. '`' → logprob: -8.929123878479004

Token 9: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21323364973068237
    2. ' ' → logprob: -2.338233709335327
    3. ':' → logprob: -3.088233709335327
    4. '    ' → logprob: -4.213233470916748
    5. '       ' → logprob: -5.213233470916748
    6. '\t' → logprob: -5.338233470916748
    7. '\' → logprob: -5.713233470916748
    8. ' if' → logprob: -5.838233470916748
    9. '```' → logprob: -5.963233470916748
    10. ''' → logprob: -5.963233470916748

Token 10: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04783443734049797
    2. '.' → logprob: -3.5478343963623047
    3. '.append' → logprob: -4.547834396362305
    4. '=' → logprob: -5.672834396362305
    5. '[:]' → logprob: -6.672834396362305
    6. '+' → logprob: -7.172834396362305
    7. '[a' → logprob: -7.672834396362305
    8. ',' → logprob: -7.797834396362305
    9. '[]' → logprob: -8.422834396362305
    10. ' =' → logprob: -9.047834396362305

Token 11: ' sorted' (ID: 20099)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.863683819770813
    2. ' a' → logprob: -1.113683819770813
    3. 'a' → logprob: -2.4886837005615234
    4. ' []' → logprob: -3.2386837005615234
    5. ' n' → logprob: -3.2386837005615234
    6. 'n' → logprob: -3.6136837005615234
    7. '[]' → logprob: -4.113683700561523
    8. '[' → logprob: -4.113683700561523
    9. ' list' → logprob: -4.988683700561523
    10. '[n' → logprob: -4.988683700561523

Token 12: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1129617989063263
    2. '(a' → logprob: -2.237961769104004
    3. 'a' → logprob: -10.112961769104004
    4. '((' → logprob: -10.362961769104004
    5. '(n' → logprob: -10.487961769104004
    6. '```' → logprob: -11.862961769104004
    7. '(
' → logprob: -12.487961769104004
    8. '(open' → logprob: -12.737961769104004
    9. '(x' → logprob: -12.737961769104004
    10. ')' → logprob: -13.237961769104004

Token 13: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25306013226509094
    2. ',' → logprob: -1.5030601024627686
    3. '(' → logprob: -7.878060340881348
    4. '(n' → logprob: -8.878060340881348
    5. ' ,' → logprob: -9.003060340881348
    6. '   ' → logprob: -9.378060340881348
    7. '(a' → logprob: -9.503060340881348
    8. ',a' → logprob: -10.003060340881348
    9. '[' → logprob: -10.253060340881348
    10. ',
' → logprob: -10.378060340881348

Token 14: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11892833560705185
    2. ':' → logprob: -2.8689284324645996
    3. ',' → logprob: -4.6189284324646
    4. ':
' → logprob: -5.1189284324646
    5. '
' → logprob: -5.2439284324646
    6. ')' → logprob: -5.4939284324646
    7. '.' → logprob: -5.6189284324646
    8. '[
' → logprob: -5.6189284324646
    9. '[n' → logprob: -5.8689284324646
    10. '```' → logprob: -5.9939284324646

Token 15: ' compteur' (ID: 163344)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6449176073074341
    2. ',' → logprob: -2.6449174880981445
    3. 'if' → logprob: -2.6449174880981445
    4. 'for' → logprob: -2.8949174880981445
    5. ' if' → logprob: -3.0199174880981445
    6. ' for' → logprob: -3.6449174880981445
    7. '\n' → logprob: -3.6449174880981445
    8. ' ' → logprob: -3.6449174880981445
    9. '```' → logprob: -4.0199174880981445
    10. '`' → logprob: -4.1449174880981445

Token 16: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04762862250208855
    2. ' =' → logprob: -4.047628402709961
    3. 's' → logprob: -4.297628402709961
    4. '=' → logprob: -4.547628402709961
    5. ' ' → logprob: -6.172628402709961
    6. '[' → logprob: -6.547628402709961
    7. '(' → logprob: -7.297628402709961
    8. '_space' → logprob: -8.797628402709961
    9. 'space' → logprob: -9.672628402709961
    10. ')' → logprob: -9.672628402709961

Token 17: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.576058030128479
    2. ' ' → logprob: -0.826058030128479
    3. ' {}' → logprob: -9.826058387756348
    4. '{}' → logprob: -10.576058387756348
    5. ' []' → logprob: -11.951058387756348
    6. '1' → logprob: -12.201058387756348
    7. ' [' → logprob: -12.576058387756348
    8. 'len' → logprob: -12.576058387756348
    9. ' ' → logprob: -12.701058387756348
    10. '[]' → logprob: -12.701058387756348

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012811839114874601
    2. ' ' → logprob: -7.001281261444092
    3. '1' → logprob: -8.626280784606934
    4. '{}' → logprob: -8.751280784606934
    5. 'len' → logprob: -11.626280784606934
    6. '[' → logprob: -11.751280784606934
    7. '{' → logprob: -12.501280784606934
    8. 'a' → logprob: -12.751280784606934
    9. 'n' → logprob: -13.001280784606934
    10. '[]' → logprob: -13.251280784606934

Token 19: ';' (ID: 26)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3748503923416138
    2. '
' → logprob: -1.6248503923416138
    3. ' for' → logprob: -1.9998503923416138
    4. '\' → logprob: -1.9998503923416138
    5. '   ' → logprob: -2.124850273132324
    6. ' ' → logprob: -3.624850273132324
    7. 'for' → logprob: -3.874850273132324
    8. '<|end|>' → logprob: -3.874850273132324
    9. '```' → logprob: -3.874850273132324
    10. ' 
' → logprob: -4.374850273132324

Token 20: ' somme' (ID: 64484)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.543908417224884
    2. ' ' → logprob: -1.5439083576202393
    3. 'for' → logprob: -2.2939083576202393
    4. '\n' → logprob: -3.4189083576202393
    5. '```' → logprob: -4.043908596038818
    6. ' 
' → logprob: -4.293908596038818
    7. '   ' → logprob: -4.793908596038818
    8. '
' → logprob: -5.168908596038818
    9. ' i' → logprob: -5.293908596038818
    10. 'n' → logprob: -5.418908596038818

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22395767271518707
    2. ' +=' → logprob: -1.7239576578140259
    3. '=' → logprob: -4.598957538604736
    4. '_' → logprob: -5.223957538604736
    5. '<|end|>' → logprob: -6.348957538604736
    6. 's' → logprob: -6.473957538604736
    7. ' ' → logprob: -6.973957538604736
    8. '+=' → logprob: -6.973957538604736
    9. '+' → logprob: -7.473957538604736
    10. ' +' → logprob: -8.348958015441895

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.38700494170188904
    2. '0' → logprob: -1.1370049715042114
    3. ' sum' → logprob: -10.887004852294922
    4. 'sum' → logprob: -10.887004852294922
    5. ' a' → logprob: -11.012004852294922
    6. ' n' → logprob: -11.012004852294922
    7. ' x' → logprob: -11.137004852294922
    8. 'x' → logprob: -11.512004852294922
    9. 'a' → logprob: -11.762004852294922
    10. ' ' → logprob: -11.887004852294922

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004739841446280479
    2. ' ' → logprob: -5.379739761352539
    3. 'sum' → logprob: -9.879739761352539
    4. 'a' → logprob: -10.754739761352539
    5. 'x' → logprob: -10.879739761352539
    6. 'n' → logprob: -11.504739761352539
    7. ' sum' → logprob: -12.004739761352539
    8. 's' → logprob: -12.879739761352539
    9. ' a' → logprob: -13.254739761352539
    10. ' n' → logprob: -13.379739761352539

Token 24: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3335151672363281
    2. 'for' → logprob: -1.4585151672363281
    3. ' for' → logprob: -1.4585151672363281
    4. ' ' → logprob: -1.9585151672363281
    5. '   ' → logprob: -3.083515167236328
    6. ' 
' → logprob: -4.083515167236328
    7. '<|end|>' → logprob: -4.083515167236328
    8. '\n' → logprob: -4.458515167236328
    9. '  
' → logprob: -4.458515167236328
    10. '  ' → logprob: -5.083515167236328

Token 25: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0515638589859009
    2. ' for' → logprob: -1.9265638589859009
    3. '<|end|>' → logprob: -2.0515637397766113
    4. '\n' → logprob: -2.3015637397766113
    5. '   ' → logprob: -2.4265637397766113
    6. ' 
' → logprob: -2.9265637397766113
    7. '
' → logprob: -3.0515637397766113
    8. 'for' → logprob: -3.1765637397766113
    9. '  ' → logprob: -4.926563739776611
    10. '  
' → logprob: -5.176563739776611

Token 26: ' idx' (ID: 14016)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.187367558479309
    2. '\n' → logprob: -1.312367558479309
    3. ' ' → logprob: -1.562367558479309
    4. 'for' → logprob: -2.3123674392700195
    5. '<|end|>' → logprob: -3.0623674392700195
    6. ' 
' → logprob: -4.1873674392700195
    7. '
' → logprob: -4.1873674392700195
    8. '   ' → logprob: -4.3123674392700195
    9. '\' → logprob: -5.3123674392700195
    10. '' → logprob: -5.6873674392700195

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17203742265701294
    2. ' ' → logprob: -2.297037363052368
    3. '_' → logprob: -3.422037363052368
    4. '=' → logprob: -3.797037363052368
    5. ' +=' → logprob: -7.547037601470947
    6. '  ' → logprob: -7.672037601470947
    7. ' _' → logprob: -7.797037601470947
    8. ',' → logprob: -8.422037124633789
    9. ')' → logprob: -8.922037124633789
    10. '<|end|>' → logprob: -9.047037124633789

Token 28: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11289843916893005
    2. '0' → logprob: -2.237898349761963
    3. ' n' → logprob: -10.612898826599121
    4. ' len' → logprob: -10.737898826599121
    5. 'len' → logprob: -11.612898826599121
    6. ' -' → logprob: -11.862898826599121
    7. 'n' → logprob: -12.487898826599121
    8. '1' → logprob: -13.112898826599121
    9. 's' → logprob: -13.862898826599121
    10. 'x' → logprob: -14.050398826599121

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014215452829375863
    2. ' ' → logprob: -6.6264214515686035
    3. '-' → logprob: -10.126421928405762
    4. 'len' → logprob: -10.501421928405762
    5. 'n' → logprob: -11.376421928405762
    6. ' -' → logprob: -12.001421928405762
    7. '1' → logprob: -12.751421928405762
    8. 'a' → logprob: -13.126421928405762
    9. 'x' → logprob: -13.626421928405762
    10. ' n' → logprob: -14.001421928405762

Token 30: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5001583695411682
    2. ' ' → logprob: -1.5001583099365234
    3. '<|end|>' → logprob: -2.3751583099365234
    4. ' 
' → logprob: -3.8751583099365234
    5. ':' → logprob: -4.250158309936523
    6. '   ' → logprob: -4.875158309936523
    7. ',' → logprob: -5.250158309936523
    8. '  
' → logprob: -5.375158309936523
    9. ' for' → logprob: -5.875158309936523
    10. '   
' → logprob: -5.875158309936523

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0401133298873901
    2. '<|end|>' → logprob: -1.6651133298873901
    3. ' 
' → logprob: -2.1651134490966797
    4. '
' → logprob: -2.2901134490966797
    5. ' ' → logprob: -2.5401134490966797
    6. '\n' → logprob: -3.0401134490966797
    7. '    
' → logprob: -3.2901134490966797
    8. '  
' → logprob: -4.04011344909668
    9. '   
' → logprob: -4.29011344909668
    10. ' while' → logprob: -4.54011344909668

Token 32: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0425165891647339
    2. ' while' → logprob: -1.2925165891647339
    3. ' ' → logprob: -2.4175167083740234
    4. '```' → logprob: -2.7925167083740234
    5. '\n' → logprob: -3.0425167083740234
    6. 'while' (adapté à ' while') → logprob: -3.1675167083740234
    7. '<|end|>' → logprob: -3.4175167083740234
    8. ':' → logprob: -3.6675167083740234
    9. ',' → logprob: -4.292516708374023
    10. '    ' → logprob: -4.917516708374023

Token 33: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.006914991419762373
    2. 'idx' → logprob: -5.756915092468262
    3. ' compteur' → logprob: -5.881915092468262
    4. ' n' → logprob: -7.881915092468262
    5. ' somme' → logprob: -8.256915092468262
    6. ' x' → logprob: -9.381915092468262
    7. 's' → logprob: -10.131915092468262
    8. ' ' → logprob: -10.131915092468262
    9. '(idx' → logprob: -10.381915092468262
    10. ' a' → logprob: -11.006915092468262

Token 34: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.011931445449590683
    2. '<' → logprob: -4.511931419372559
    3. ' <=' → logprob: -7.761931419372559
    4. ' ' → logprob: -7.886931419372559
    5. '<len' → logprob: -9.886931419372559
    6. '<=' → logprob: -11.386931419372559
    7. '[' → logprob: -12.011931419372559
    8. '<n' → logprob: -12.011931419372559
    9. '<size' → logprob: -13.386931419372559
    10. ' <
' → logprob: -13.636931419372559

Token 35: ' len' (ID: 4631)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4372221827507019
    2. 'n' → logprob: -1.0622222423553467
    3. 'len' → logprob: -5.062222003936768
    4. ' len' → logprob: -6.187222003936768
    5. ' ' → logprob: -9.312222480773926
    6. '	n' → logprob: -13.562222480773926
    7. '   ' → logprob: -13.562222480773926
    8. 'x' → logprob: -13.937222480773926
    9. '  ' → logprob: -14.312222480773926
    10. '(n' → logprob: -14.437222480773926

Token 36: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.016052667051553726
    2. '(' → logprob: -4.141052722930908
    3. '(n' → logprob: -11.64105224609375
    4. 'a' → logprob: -12.14105224609375
    5. '(s' → logprob: -13.26605224609375
    6. ' (' → logprob: -13.64105224609375
    7. '(x' → logprob: -14.76605224609375
    8. ')' → logprob: -15.89105224609375
    9. '(
' → logprob: -15.89105224609375
    10. '(

' → logprob: -16.14105224609375

Token 37: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005562905687838793
    2. ' and' → logprob: -5.880562782287598
    3. ' )' → logprob: -6.130562782287598
    4. 'and' → logprob: -7.880562782287598
    5. '):' → logprob: -8.630562782287598
    6. '):
' → logprob: -11.630562782287598
    7. ' ):' → logprob: -12.380562782287598
    8. ' ' → logprob: -12.880562782287598
    9. '   ' → logprob: -13.255562782287598
    10. '[' → logprob: -14.005562782287598

Token 38: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30841773748397827
    2. ' ' → logprob: -2.308417797088623
    3. ':' → logprob: -3.058417797088623
    4. '    ' → logprob: -3.308417797088623
    5. '   ' → logprob: -3.933417797088623
    6. ' :' → logprob: -4.183417797088623
    7. '        
' → logprob: -4.683417797088623
    8. '<|end|>' → logprob: -4.683417797088623
    9. ' 
' → logprob: -5.058417797088623
    10. '     
' → logprob: -5.433417797088623

Token 39: ' valeur' (ID: 41664)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.916843831539154
    2. ' ' → logprob: -1.4168438911437988
    3. ' if' → logprob: -1.6668438911437988
    4. '    ' → logprob: -3.166843891143799
    5. 's' → logprob: -3.666843891143799
    6. '     
' → logprob: -3.666843891143799
    7. 'if' → logprob: -4.166843891143799
    8. '    
' → logprob: -4.416843891143799
    9. '   ' → logprob: -4.541843891143799
    10. '       ' → logprob: -4.791843891143799

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021535951644182205
    2. 's' → logprob: -4.146535873413086
    3. '=' → logprob: -5.271535873413086
    4. ',' → logprob: -8.771535873413086
    5. ' ' → logprob: -8.896535873413086
    6. '   ' → logprob: -11.396535873413086
    7. '=s' → logprob: -12.021535873413086
    8. ')' → logprob: -12.271535873413086
    9. '    ' → logprob: -12.646535873413086
    10. ' +=' → logprob: -12.771535873413086

Token 41: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5803343653678894
    2. 'a' → logprob: -0.8303343653678894
    3. 'x' → logprob: -6.080334186553955
    4. ' x' → logprob: -6.705334186553955
    5. 'n' → logprob: -7.830334186553955
    6. ' n' → logprob: -8.205334663391113
    7. ' ' → logprob: -9.830334663391113
    8. ' ' → logprob: -10.455334663391113
    9. '0' → logprob: -10.705334663391113
    10. '	a' → logprob: -10.955334663391113

Token 42: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0007310202927328646
    2. '[' → logprob: -7.500730991363525
    3. '   ' → logprob: -10.000731468200684
    4. ' [' → logprob: -10.000731468200684
    5. 'idx' → logprob: -10.625731468200684
    6. '```' → logprob: -11.000731468200684
    7. ' idx' → logprob: -11.375731468200684
    8. ' ' → logprob: -12.000731468200684
    9. '	idx' → logprob: -12.000731468200684
    10. '[val' → logprob: -12.500731468200684

Token 43: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04054952412843704
    2. ')' → logprob: -3.5405495166778564
    3. ']+' → logprob: -5.6655497550964355
    4. ' ]' → logprob: -6.0405497550964355
    5. '])' → logprob: -6.1655497550964355
    6. '[' → logprob: -6.9155497550964355
    7. ']
' → logprob: -7.4155497550964355
    8. ' )' → logprob: -8.040549278259277
    9. '+' → logprob: -8.290549278259277
    10. ')]' → logprob: -8.790549278259277

Token 44: '       ' (ID: 309)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3541725277900696
    2. '<|end|>' → logprob: -1.8541724681854248
    3. ' +' → logprob: -3.104172468185425
    4. ' if' → logprob: -3.604172468185425
    5. ' ' → logprob: -4.479172706604004
    6. '
' → logprob: -4.604172706604004
    7. '+
' → logprob: -4.604172706604004
    8. ' 
' → logprob: -5.104172706604004
    9. '<|end|>' → logprob: -5.104172706604004
    10. '       ' → logprob: -5.229172706604004

Token 45: ' if' (ID: 538)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3799468278884888
    2. '<|end|>' → logprob: -1.3799468278884888
    3. ' ' → logprob: -1.5049468278884888
    4. ' if' → logprob: -1.8799468278884888
    5. 'if' (adapté à ' if') → logprob: -3.129946708679199
    6. '<|end|>' → logprob: -3.629946708679199
    7. ' 
' → logprob: -4.254946708679199
    8. ' +' → logprob: -4.504946708679199
    9. '       ' → logprob: -5.504946708679199
    10. '        ' → logprob: -5.504946708679199

Token 46: ' (' (ID: 350)
  Prédit: ' valeur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.2664743661880493
    2. ' x' → logprob: -2.2664742469787598
    3. ' ' → logprob: -2.6414742469787598
    4. 'val' → logprob: -4.14147424697876
    5. ' somme' → logprob: -4.39147424697876
    6. ' val' → logprob: -4.76647424697876
    7. 'x' → logprob: -5.01647424697876
    8. 's' → logprob: -5.89147424697876
    9. ' n' → logprob: -5.89147424697876
    10. ' abs' → logprob: -6.14147424697876

Token 47: 's' (ID: 82)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.129376769065857
    2. 'x' → logprob: -1.379376769065857
    3. 'val' → logprob: -1.754376769065857
    4. ' valeur' → logprob: -1.879376769065857
    5. ' somme' → logprob: -3.6293768882751465
    6. 's' → logprob: -3.8793768882751465
    7. ' val' → logprob: -4.6293768882751465
    8. ' abs' → logprob: -4.7543768882751465
    9. ' n' → logprob: -4.7543768882751465
    10. 'abs' → logprob: -5.5043768882751465

Token 48: 'omme' (ID: 30420)
  Prédit: 'omme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omme' → logprob: -0.030503958463668823
    2. ')' → logprob: -5.030503749847412
    3. ' ==' → logprob: -5.405503749847412
    4. 'um' → logprob: -5.655503749847412
    5. '>' → logprob: -5.655503749847412
    6. '==' → logprob: -5.780503749847412
    7. 'o' → logprob: -6.655503749847412
    8. 'ome' → logprob: -6.780503749847412
    9. 'om' → logprob: -6.905503749847412
    10. 'e' → logprob: -7.155503749847412

Token 49: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16027744114398956
    2. '+' → logprob: -1.9102774858474731
    3. ' ' → logprob: -10.910277366638184
    4. ' plus' → logprob: -12.035277366638184
    5. '+x' → logprob: -12.285277366638184
    6. ')' → logprob: -12.285277366638184
    7. ' ' → logprob: -12.535277366638184
    8. ' <=' → logprob: -12.660277366638184
    9. '+s' → logprob: -13.160277366638184
    10. ' <' → logprob: -13.660277366638184

Token 50: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.4296470880508423
    2. ' valeur' → logprob: -1.0546470880508423
    3. ' val' → logprob: -7.304646968841553
    4. ' ' → logprob: -9.179647445678711
    5. 'value' → logprob: -10.179647445678711
    6. ' vale' → logprob: -10.429647445678711
    7. '```' → logprob: -10.679647445678711
    8. 'a' → logprob: -11.429647445678711
    9. ' valeurs' → logprob: -11.429647445678711
    10. '1' → logprob: -11.554647445678711

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16110171377658844
    2. ' <=' → logprob: -2.036101818084717
    3. ' )' → logprob: -4.286101818084717
    4. '<=' → logprob: -5.786101818084717
    5. ')<=' → logprob: -6.786101818084717
    6. ' >' → logprob: -9.161101341247559
    7. ' <' → logprob: -9.536101341247559
    8. ' ' → logprob: -10.286101341247559
    9. '>' → logprob: -10.661101341247559
    10. ')>' → logprob: -11.911101341247559

Token 52: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.007046406157314777
    2. '<=' → logprob: -5.257046222686768
    3. ' ' → logprob: -7.507046222686768
    4. ' <' → logprob: -7.507046222686768
    5. ' >' → logprob: -7.757046222686768
    6. ')' → logprob: -8.882046699523926
    7. '>' → logprob: -9.882046699523926
    8. ' ==' → logprob: -10.382046699523926
    9. '<' → logprob: -10.882046699523926
    10. ' >=' → logprob: -11.382046699523926

Token 53: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.11353799700737
    2. 'x' → logprob: -2.2385380268096924
    3. ' n' → logprob: -7.363537788391113
    4. 'n' → logprob: -9.613537788391113
    5. ' ' → logprob: -11.863537788391113
    6. ' ' → logprob: -12.113537788391113
    7. '	x' → logprob: -13.988537788391113
    8. ' (' → logprob: -14.738537788391113
    9. '(x' → logprob: -15.488537788391113
    10. '   ' → logprob: -16.36353874206543

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006434533279389143
    2. ':
' → logprob: -7.750643253326416
    3. ' :' → logprob: -8.750643730163574
    4. ' and' → logprob: -10.625643730163574
    5. '):' → logprob: -10.625643730163574
    6. '       ' → logprob: -13.750643730163574
    7. '<|end|>' → logprob: -14.125643730163574
    8. ':return' → logprob: -14.500643730163574
    9. ')' → logprob: -14.625643730163574
    10. ':

' → logprob: -14.625643730163574

Token 55: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06755203753709793
    2. '       ' → logprob: -3.317552089691162
    3. ':
' → logprob: -4.192552089691162
    4. ' :' → logprob: -5.192552089691162
    5. '<|end|>' → logprob: -5.567552089691162
    6. '
' → logprob: -7.067552089691162
    7. ' :
' → logprob: -7.692552089691162
    8. '):' → logprob: -7.942552089691162
    9. ' ' → logprob: -7.942552089691162
    10. '+' → logprob: -8.067551612854004

Token 56: ' compteur' (ID: 163344)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.963913083076477
    2. ' 
' → logprob: -1.588913083076477
    3. '           ' → logprob: -1.963913083076477
    4. ' somme' → logprob: -2.9639129638671875
    5. '               ' → logprob: -3.0889129638671875
    6. '\' → logprob: -3.2139129638671875
    7. ' compteur' → logprob: -3.7139129638671875
    8. ' ' → logprob: -3.9639129638671875
    9. '       ' → logprob: -3.9639129638671875
    10. '\n' → logprob: -4.4639129638671875

Token 57: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0005090686026960611
    2. '+=' → logprob: -7.625509262084961
    3. ' =' → logprob: -12.000509262084961
    4. ' +' → logprob: -12.000509262084961
    5. '<|end|>' → logprob: -12.375509262084961
    6. '+' → logprob: -12.750509262084961
    7. ' ' → logprob: -13.625509262084961
    8. ']+=' → logprob: -16.25050926208496
    9. '<|end|>' → logprob: -16.37550926208496
    10. ' ' → logprob: -16.75050926208496

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004622968845069408
    2. ' ' → logprob: -5.379622936248779
    3. 'val' → logprob: -13.379623413085938
    4. ' ' → logprob: -14.129623413085938
    5. '   ' → logprob: -15.629623413085938
    6. 'value' → logprob: -16.629623413085938
    7. ' val' → logprob: -16.629623413085938
    8. '<|end|>' → logprob: -16.754623413085938
    9. ' valeur' → logprob: -17.254623413085938
    10. '  ' → logprob: -17.629623413085938

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00022713904036208987
    2. ' ' → logprob: -8.750226974487305
    3. 'val' → logprob: -9.625226974487305
    4. 'a' → logprob: -13.375226974487305
    5. 'value' → logprob: -15.125226974487305
    6. '   ' → logprob: -15.750226974487305
    7. ' ' → logprob: -16.500226974487305
    8. '  ' → logprob: -16.750226974487305
    9. ' valeur' → logprob: -16.875226974487305
    10. '0' → logprob: -17.375226974487305

Token 60: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4975311756134033
    2. '
' → logprob: -1.7475311756134033
    3. '<|end|>' → logprob: -2.1225311756134033
    4. 's' → logprob: -3.1225311756134033
    5. '       ' → logprob: -3.7475311756134033
    6. '            
' → logprob: -4.997530937194824
    7. ' 
' → logprob: -5.247530937194824
    8. '        
' → logprob: -5.622530937194824
    9. '<|end|>' → logprob: -5.872530937194824
    10. ' ' → logprob: -6.247530937194824

Token 61: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 62: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2746272385120392
    2. '           ' → logprob: -2.524627208709717
    3. ' 
' → logprob: -3.149627208709717
    4. ' ' → logprob: -3.524627208709717
    5. '        
' → logprob: -4.024627208709717
    6. '<|end|>' → logprob: -4.024627208709717
    7. '
' → logprob: -4.149627208709717
    8. '            
' → logprob: -4.399627208709717
    9. '    
' → logprob: -5.024627208709717
    10. '       ' → logprob: -5.149627208709717

Token 63: ' +=' (ID: 2757)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6954578161239624
    2. ' +=' → logprob: -0.9454578161239624
    3. '+' → logprob: -2.195457935333252
    4. '+=' → logprob: -7.070457935333252
    5. '<|end|>' → logprob: -8.695457458496094
    6. ' =' → logprob: -8.820457458496094
    7. ' ' → logprob: -8.945457458496094
    8. ' ' → logprob: -11.070457458496094
    9. '=' → logprob: -11.445457458496094
    10. ' +
' → logprob: -12.695457458496094

Token 64: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.03970940411090851
    2. ' valeur' → logprob: -3.2897093296051025
    3. ' val' → logprob: -6.414709568023682
    4. ' vale' → logprob: -11.539709091186523
    5. 'value' → logprob: -12.414709091186523
    6. ' ' → logprob: -12.664709091186523
    7. '(val' → logprob: -12.914709091186523
    8. '	val' → logprob: -13.289709091186523
    9. 'a' → logprob: -13.539709091186523
    10. 'vale' → logprob: -13.789709091186523

Token 65: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06590954214334488
    2. '       ' → logprob: -3.6909096240997314
    3. ' 
' → logprob: -4.190909385681152
    4. '        
' → logprob: -5.065909385681152
    5. '\n' → logprob: -5.315909385681152
    6. '<|end|>' → logprob: -5.440909385681152
    7. 'idx' → logprob: -6.440909385681152
    8. '
' → logprob: -6.565909385681152
    9. '    
' → logprob: -6.690909385681152
    10. '  
' → logprob: -6.940909385681152

Token 66: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6461420059204102
    2. '       ' → logprob: -1.5211420059204102
    3. '        
' → logprob: -2.27114200592041
    4. ' 
' → logprob: -2.77114200592041
    5. '<|end|>' → logprob: -3.89614200592041
    6. '\n' → logprob: -4.27114200592041
    7. 'idx' → logprob: -4.39614200592041
    8. '\' → logprob: -4.77114200592041
    9. '```' → logprob: -5.02114200592041
    10. '    
' → logprob: -5.14614200592041

Token 67: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.6627520322799683
    2. 'idx' (adapté à ' idx') → logprob: -0.9127520322799683
    3. '       ' → logprob: -3.037752151489258
    4. ' 
' → logprob: -4.162752151489258
    5. '
' → logprob: -5.412752151489258
    6. '        
' → logprob: -5.787752151489258
    7. '\n' → logprob: -6.162752151489258
    8. '```' → logprob: -6.287752151489258
    9. '\' → logprob: -6.412752151489258
    10. '	idx' → logprob: -6.537752151489258

Token 68: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03216277062892914
    2. '+=' → logprob: -3.657162666320801
    3. '+' → logprob: -5.157162666320801
    4. ' +' → logprob: -9.5321626663208
    5. ' ' → logprob: -11.7821626663208
    6. '<|end|>' → logprob: -12.9071626663208
    7. '++' → logprob: -13.0321626663208
    8. '=' → logprob: -13.9071626663208
    9. '1' → logprob: -14.9071626663208
    10. '+++' → logprob: -15.2821626663208

Token 69: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002476016292348504
    2. ' ' → logprob: -6.002476215362549
    3. '   ' → logprob: -14.87747573852539
    4. '```' → logprob: -16.87747573852539
    5. ' ' → logprob: -17.50247573852539
    6. '  ' → logprob: -18.87747573852539
    7. '       ' → logprob: -19.00247573852539
    8. '    ' → logprob: -19.06497573852539
    9. '0' → logprob: -19.18997573852539
    10. '	' → logprob: -19.75247573852539

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -15.875015258789062
    4. '```' → logprob: -16.375015258789062
    5. '       ' → logprob: -18.062515258789062
    6. '0' → logprob: -18.312515258789062
    7. '  ' → logprob: -18.375015258789062
    8. '2' → logprob: -18.937515258789062
    9. 'def' → logprob: -19.312515258789062
    10. '۱' → logprob: -19.312515258789062

Token 71: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 73: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.7072755098342896
    2. ' compteur' → logprob: -0.8322755098342896
    3. ' ' → logprob: -3.082275390625
    4. ' (' → logprob: -4.207275390625
    5. 's' → logprob: -5.457275390625
    6. ' len' → logprob: -6.207275390625
    7. ' sum' → logprob: -6.957275390625
    8. ' n' → logprob: -7.582275390625
    9. ' sommet' → logprob: -7.832275390625
    10. ' ' → logprob: -7.957275390625

Token 75: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.419478178024292
    2. ' >' → logprob: -1.294478178024292
    3. '<=' → logprob: -3.544478178024292
    4. '>' → logprob: -3.794478178024292
    5. ' ==' → logprob: -4.794478416442871
    6. ' <' → logprob: -5.419478416442871
    7. '==' → logprob: -6.294478416442871
    8. ' >=' → logprob: -6.794478416442871
    9. ' ' → logprob: -7.169478416442871
    10. '<' → logprob: -7.669478416442871

Token 76: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2914581000804901
    2. 'x' → logprob: -1.5414581298828125
    3. '=' → logprob: -3.6664581298828125
    4. ' n' → logprob: -4.5414581298828125
    5. 'n' → logprob: -6.2914581298828125
    6. ' ' → logprob: -7.9164581298828125
    7. '=x' → logprob: -9.291458129882812
    8. ' =' → logprob: -9.916458129882812
    9. '=n' → logprob: -10.041458129882812
    10. ' a' → logprob: -10.041458129882812

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00576014956459403
    2. ':return' → logprob: -5.880760192871094
    3. ' :' → logprob: -6.255760192871094
    4. ' or' → logprob: -7.880760192871094
    5. ' and' → logprob: -8.130760192871094
    6. ':
' → logprob: -8.505760192871094
    7. '   ' → logprob: -10.130760192871094
    8. '       ' → logprob: -10.130760192871094
    9. '+' → logprob: -10.630760192871094
    10. '    ' → logprob: -11.755760192871094

Token 78: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12273719906806946
    2. ':' → logprob: -2.372737169265747
    3. ' return' → logprob: -4.872737407684326
    4. '   ' → logprob: -5.372737407684326
    5. ':return' → logprob: -5.497737407684326
    6. ' :' → logprob: -6.122737407684326
    7. 'return' → logprob: -6.622737407684326
    8. ':
' → logprob: -7.247737407684326
    9. '    ' → logprob: -7.747737407684326
    10. '	return' → logprob: -8.497736930847168

Token 79: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2126414030790329
    2. ' compteur' → logprob: -2.712641477584839
    3. '    ' → logprob: -3.087641477584839
    4. 'return' (adapté à ' return') → logprob: -3.337641477584839
    5. '       ' → logprob: -3.587641477584839
    6. '   ' → logprob: -4.71264123916626
    7. 'comp' → logprob: -5.83764123916626
    8. '        ' → logprob: -7.33764123916626
    9. ' retour' → logprob: -7.33764123916626
    10. ' ' → logprob: -7.83764123916626

Token 80: ' compteur' (ID: 163344)
  Prédit: ' compteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compteur' → logprob: -0.9362600445747375
    2. 'comp' → logprob: -1.4362599849700928
    3. ' None' → logprob: -1.5612599849700928
    4. '0' → logprob: -3.1862599849700928
    5. 'None' → logprob: -3.4362599849700928
    6. ' ' → logprob: -3.5612599849700928
    7. ' len' → logprob: -4.561260223388672
    8. ' -' → logprob: -4.811260223388672
    9. ' n' → logprob: -4.811260223388672
    10. '-' → logprob: -4.936260223388672

Token 81: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.020565390586853
    2. '
' → logprob: -1.145565390586853
    3. ' else' → logprob: -2.1455655097961426
    4. '<|end|>' → logprob: -2.5205655097961426
    5. ' ' → logprob: -2.8955655097961426
    6. ' 
' → logprob: -4.645565509796143
    7. '    
' → logprob: -4.770565509796143
    8. 'else' → logprob: -4.770565509796143
    9. '       ' → logprob: -4.770565509796143
    10. '    ' → logprob: -5.145565509796143

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20142073929309845
    2. ' ' → logprob: -1.701420783996582
    3. '0' → logprob: -12.451420783996582
    4. '2' → logprob: -13.451420783996582
    5. '<|end|>' → logprob: -14.826420783996582
    6. '   ' → logprob: -14.951420783996582
    7. '  ' → logprob: -15.076420783996582
    8. ' ' → logprob: -15.701420783996582
    9. '100' → logprob: -15.701420783996582
    10. '-' → logprob: -16.076419830322266

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7252845029579476e-05
    2. ' ' → logprob: -11.000027656555176
    3. '0' → logprob: -11.500027656555176
    4. '2' → logprob: -15.125027656555176
    5. '   ' → logprob: -17.37502670288086
    6. '-' → logprob: -18.00002670288086
    7. '<|end|>' → logprob: -18.25002670288086
    8. '  ' → logprob: -18.50002670288086
    9. '```' → logprob: -18.50002670288086
    10. '100' → logprob: -18.75002670288086

Token 84: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6047060489654541
    2. '<|end|>' → logprob: -1.104706048965454
    3. '   ' → logprob: -2.479706048965454
    4. ' ' → logprob: -4.604705810546875
    5. ' 
' → logprob: -4.854705810546875
    6. '\n' → logprob: -4.979705810546875
    7. ' else' → logprob: -5.979705810546875
    8. '	return' → logprob: -6.479705810546875
    9. 'return' → logprob: -6.604705810546875
    10. '    
' → logprob: -6.854705810546875

Token 86: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0157772302627563
    2. 'return' → logprob: -1.1407772302627563
    3. '
' → logprob: -2.640777111053467
    4. '<|end|>' → logprob: -2.640777111053467
    5. ' else' → logprob: -2.765777111053467
    6. ' return' → logprob: -2.765777111053467
    7. 'else' (adapté à ' else') → logprob: -3.640777111053467
    8. ' ' → logprob: -4.640777111053467
    9. ' 
' → logprob: -5.390777111053467
    10. '	return' → logprob: -5.515777111053467

Token 87: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23800227046012878
    2. '       ' → logprob: -1.7380023002624512
    3. ':return' → logprob: -4.113002300262451
    4. ':
' → logprob: -4.738002300262451
    5. ' :' → logprob: -5.613002300262451
    6. ' return' → logprob: -5.863002300262451
    7. '   ' → logprob: -5.988002300262451
    8. ' :
' → logprob: -6.738002300262451
    9. '<|end|>' → logprob: -8.738001823425293
    10. '    ' → logprob: -9.238001823425293

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07195188850164413
    2. ' return' → logprob: -3.1969518661499023
    3. ' compteur' → logprob: -3.6969518661499023
    4. 'return' → logprob: -5.821951866149902
    5. ' ' → logprob: -8.696951866149902
    6. '    ' → logprob: -8.946951866149902
    7. ' counter' → logprob: -9.446951866149902
    8. ' compter' → logprob: -9.696951866149902
    9. ' retour' → logprob: -9.821951866149902
    10. ' compt' → logprob: -10.071951866149902

Token 89: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.028773047029972076
    2. ' return' → logprob: -3.653773069381714
    3. 'comp' → logprob: -6.403772830963135
    4. '       ' → logprob: -7.653772830963135
    5. ' compteur' → logprob: -8.403773307800293
    6. '0' → logprob: -10.153773307800293
    7. 'counter' → logprob: -10.278773307800293
    8. '   ' → logprob: -11.278773307800293
    9. '{return' → logprob: -12.153773307800293
    10. '    ' → logprob: -12.528773307800293

Token 90: ' compteur' (ID: 163344)
  Prédit: ' compteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compteur' → logprob: -0.049004942178726196
    2. 'comp' → logprob: -3.0490050315856934
    3. ' ' → logprob: -8.674004554748535
    4. 'counter' → logprob: -9.174004554748535
    5. ' counter' → logprob: -10.299004554748535
    6. ' ' → logprob: -10.424004554748535
    7. ' compte' → logprob: -10.549004554748535
    8. '(comp' → logprob: -11.674004554748535
    9. '	comp' → logprob: -11.799004554748535
    10. ' compter' → logprob: -12.174004554748535

Token 91: '

' (ID: 279)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48323172330856323
    2. '<|end|>' → logprob: -0.9832317233085632
    3. '
' → logprob: -5.983231544494629
    4. ')' → logprob: -6.108231544494629
    5. '<|end|>' → logprob: -6.358231544494629
    6. ' 
' → logprob: -7.483231544494629
    7. '```' → logprob: -7.608231544494629
    8. ':' → logprob: -8.108231544494629
    9. '_' → logprob: -8.608231544494629
    10. '#' → logprob: -8.733231544494629

Token 92: 'if' (ID: 366)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3538876175880432
    2. '<|end|>' → logprob: -1.3538875579833984
    3. ')' → logprob: -3.9788875579833984
    4. '_' → logprob: -4.853887557983398
    5. '```' → logprob: -5.478887557983398
    6. ':' → logprob: -6.228887557983398
    7. '#' → logprob: -6.478887557983398
    8. '
' → logprob: -6.728887557983398
    9. ' 
' → logprob: -7.603887557983398
    10. '<|end|>' → logprob: -7.603887557983398

Token 93: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0010662743588909507
    2. '__' → logprob: -7.001066207885742
    3. ' ' → logprob: -9.501066207885742
    4. ' ' → logprob: -10.001066207885742
    5. ' _' → logprob: -11.001066207885742
    6. '_' → logprob: -11.376066207885742
    7. ' x' → logprob: -13.376066207885742
    8. ' True' → logprob: -13.626066207885742
    9. ' not' → logprob: -13.876066207885742
    10. '  ' → logprob: -14.751066207885742

Token 94: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004800938069820404
    2. ' __' → logprob: -5.879800796508789
    3. '_' → logprob: -7.129800796508789
    4. '.__' → logprob: -8.004800796508789
    5. '__.' → logprob: -8.254800796508789
    6. ' ==' → logprob: -8.629800796508789
    7. '.' → logprob: -8.754800796508789
    8. '__.__' → logprob: -9.004800796508789
    9. '___' → logprob: -10.254800796508789
    10. '__[' → logprob: -10.879800796508789

Token 95: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -6.56364209135063e-05
    2. '==' → logprob: -10.375065803527832
    3. '__.__' → logprob: -11.250065803527832
    4. '_' → logprob: -11.750065803527832
    5. ' ==' → logprob: -11.875065803527832
    6. '___' → logprob: -12.875065803527832
    7. '=="' → logprob: -13.750065803527832
    8. '____' → logprob: -14.375065803527832
    9. ' __' → logprob: -14.875065803527832
    10. '__["' → logprob: -15.000065803527832

Token 96: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.14463290572166443
    2. ' ==' → logprob: -2.0196328163146973
    3. '==' → logprob: -7.144632816314697
    4. ' =="' → logprob: -8.144633293151855
    5. '_' → logprob: -8.394633293151855
    6. '=="' → logprob: -8.519633293151855
    7. ' ' → logprob: -8.769633293151855
    8. '__.__' → logprob: -9.269633293151855
    9. '__":
' → logprob: -9.394633293151855
    10. ' __' → logprob: -10.144633293151855

Token 97: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.023273199796676636
    2. ''' → logprob: -3.773273229598999
    3. ' "__' → logprob: -11.148273468017578
    4. ' "' → logprob: -11.523273468017578
    5. '__' → logprob: -12.898273468017578
    6. ' '__' → logprob: -14.898273468017578
    7. '"user' → logprob: -15.273273468017578
    8. ' '' → logprob: -15.773273468017578
    9. '"name' → logprob: -17.023273468017578
    10. '"time' → logprob: -18.148273468017578

Token 98: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0002889874158427119
    2. 'name' → logprob: -8.500288963317871
    3. 'm' → logprob: -9.625288963317871
    4. 'ma' → logprob: -11.500288963317871
    5. ' main' → logprob: -12.250288963317871
    6. 'mai' → logprob: -13.125288963317871
    7. 'maine' → logprob: -13.500288963317871
    8. '_main' → logprob: -15.375288963317871
    9. '__':
' → logprob: -15.750288963317871
    10. 'python' → logprob: -15.750288963317871

Token 99: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12968522310256958
    2. '__:' → logprob: -2.129685163497925
    3. '__':
' → logprob: -6.504685401916504
    4. ':' → logprob: -6.879685401916504
    5. '_' → logprob: -9.129685401916504
    6. '__":
' → logprob: -9.879685401916504
    7. '():' → logprob: -11.504685401916504
    8. '__('' → logprob: -11.629685401916504
    9. '__((' → logprob: -11.629685401916504
    10. '__
' → logprob: -12.504685401916504

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.413839727640152
    2. ' ' → logprob: -2.038839817047119
    3. '(n' → logprob: -2.413839817047119
    4. '<|end|>' → logprob: -3.413839817047119
    5. ' 
' → logprob: -4.163839817047119
    6. ' n' → logprob: -4.538839817047119
    7. '    
' → logprob: -4.538839817047119
    8. '(' → logprob: -4.663839817047119
    9. ':' → logprob: -4.663839817047119
    10. '    ' → logprob: -4.913839817047119

Token 101: ' from' (ID: 591)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5803380608558655
    2. 'n' → logprob: -0.8303380608558655
    3. ' import' → logprob: -6.330338001251221
    4. 'x' → logprob: -7.455338001251221
    5. 'import' → logprob: -7.705338001251221
    6. ' x' → logprob: -7.830338001251221
    7. ' t' → logprob: -8.580338478088379
    8. ' print' → logprob: -8.580338478088379
    9. 't' → logprob: -8.830338478088379
    10. 'a' → logprob: -8.955338478088379

Token 102: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.06818583607673645
    2. 'sys' → logprob: -3.568185806274414
    3. ' math' → logprob: -3.818185806274414
    4. ' itertools' → logprob: -5.068185806274414
    5. ' random' → logprob: -5.318185806274414
    6. '_' → logprob: -6.193185806274414
    7. ' collections' → logprob: -6.693185806274414
    8. ' ' → logprob: -7.318185806274414
    9. 'random' → logprob: -8.943185806274414
    10. '	sys' → logprob: -9.318185806274414

Token 103: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0004275699320714921
    2. 'import' → logprob: -7.875427722930908
    3. '	import' → logprob: -10.37542724609375
    4. '<|end|>' → logprob: -11.87542724609375
    5. '.argv' → logprob: -12.87542724609375
    6. '.stdin' → logprob: -13.00042724609375
    7. ' ' → logprob: -13.75042724609375
    8. ' importar' → logprob: -13.87542724609375
    9. ' im' → logprob: -14.75042724609375
    10. '<|end|>' → logprob: -14.87542724609375

Token 104: ' stdin' (ID: 75143)
  Prédit: ' stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.39998042583465576
    2. 'stdin' → logprob: -1.1499804258346558
    3. 'argv' → logprob: -4.899980545043945
    4. ' argv' → logprob: -5.274980545043945
    5. '.stdin' → logprob: -8.774980545043945
    6. ' ' → logprob: -9.024980545043945
    7. ' exit' → logprob: -10.024980545043945
    8. 'stderr' → logprob: -10.649980545043945
    9. '(stdin' → logprob: -10.649980545043945
    10. 'stdout' → logprob: -10.649980545043945

Token 105: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 107: ' lecture' (ID: 31993)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8441134095191956
    2. 'for' → logprob: -1.0941133499145508
    3. 'data' → logprob: -2.469113349914551
    4. 'n' → logprob: -2.969113349914551
    5. ' data' → logprob: -3.094113349914551
    6. 'input' → logprob: -3.719113349914551
    7. ' lines' → logprob: -4.594113349914551
    8. ' input' → logprob: -4.594113349914551
    9. ' n' → logprob: -5.219113349914551
    10. ' line' → logprob: -7.219113349914551

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5770668983459473
    2. '=' → logprob: -0.8270668983459473
    3. '.readline' → logprob: -7.452066898345947
    4. 's' → logprob: -9.202066421508789
    5. 'import' → logprob: -9.327066421508789
    6. '_' → logprob: -9.577066421508789
    7. 'line' → logprob: -10.452066421508789
    8. '=sys' → logprob: -10.452066421508789
    9. 'data' → logprob: -10.702066421508789
    10. '=input' → logprob: -10.827066421508789

Token 109: ' stdin' (ID: 75143)
  Prédit: ' stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stdin' → logprob: -0.23247642815113068
    2. 'stdin' → logprob: -1.6074764728546143
    3. '(stdin' → logprob: -5.607476234436035
    4. '.stdin' → logprob: -5.732476234436035
    5. ' readline' → logprob: -9.607476234436035
    6. ' ' → logprob: -11.107476234436035
    7. ' std' → logprob: -11.357476234436035
    8. '.readline' → logprob: -11.607476234436035
    9. 'stdio' → logprob: -12.857476234436035
    10. '.readlines' → logprob: -12.857476234436035

Token 110: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008403223007917404
    2. '.read' → logprob: -5.258403301239014
    3. '.readlines' → logprob: -5.883403301239014
    4. '.' → logprob: -7.883403301239014
    5. '.Read' → logprob: -14.133402824401855
    6. '<|end|>' → logprob: -14.883402824401855
    7. 'read' → logprob: -15.133402824401855
    8. ' readline' → logprob: -16.133403778076172
    9. '.Reader' → logprob: -16.258403778076172
    10. '.buffer' → logprob: -16.383403778076172

Token 111: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.000428761966759339
    2. '()
' → logprob: -8.125429153442383
    3. '().' → logprob: -9.625429153442383
    4. '())' → logprob: -10.375429153442383
    5. '()

' → logprob: -10.750429153442383
    6. '(' → logprob: -12.875429153442383
    7. ')' → logprob: -13.125429153442383
    8. '()`' → logprob: -13.250429153442383
    9. '()\' → logprob: -13.250429153442383
    10. '();' → logprob: -13.625429153442383

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5014280080795288
    2. '()' → logprob: -1.3764280080795288
    3. '
' → logprob: -3.0014281272888184
    4. 'n' → logprob: -3.3764281272888184
    5. '()
' → logprob: -4.001428127288818
    6. '(n' → logprob: -4.751428127288818
    7. '    
' → logprob: -4.876428127288818
    8. ' n' → logprob: -5.626428127288818
    9. '  
' → logprob: -5.751428127288818
    10. '<|end|>' → logprob: -6.126428127288818

Token 113: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.062396276742219925
    2. ' n' → logprob: -2.937396287918091
    3. ' line' → logprob: -6.562396049499512
    4. ' for' → logprob: -6.812396049499512
    5. 'for' → logprob: -6.937396049499512
    6. 'nb' → logprob: -7.187396049499512
    7. 'ligne' → logprob: -7.687396049499512
    8. 'line' → logprob: -7.937396049499512
    9. 't' → logprob: -8.437396049499512
    10. 'a' → logprob: -8.437396049499512

Token 114: '_x' (ID: 7054)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013304696418344975
    2. ' =' → logprob: -4.638304710388184
    3. ' ,' → logprob: -5.763304710388184
    4. '=' → logprob: -8.138304710388184
    5. ' ' → logprob: -10.263304710388184
    6. '(),' → logprob: -10.763304710388184
    7. 's' → logprob: -11.263304710388184
    8. ')' → logprob: -11.513304710388184
    9. ',n' → logprob: -12.138304710388184
    10. '()' → logprob: -12.763304710388184

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0157273281365633
    2. '=' → logprob: -4.265727519989014
    3. ',' → logprob: -6.515727519989014
    4. 's' → logprob: -10.015727043151855
    5. ' ,' → logprob: -10.765727043151855
    6. ' ' → logprob: -11.390727043151855
    7. '  ' → logprob: -14.015727043151855
    8. '   ' → logprob: -14.640727043151855
    9. ')' → logprob: -14.765727043151855
    10. ',n' → logprob: -15.015727043151855

Token 116: ' lecture' (ID: 31993)
  Prédit: ' lecture'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lecture' → logprob: -0.636379063129425
    2. 'lecture' → logprob: -0.761379063129425
    3. ' list' → logprob: -6.261379241943359
    4. 'list' → logprob: -6.386379241943359
    5. '[' → logprob: -10.01137924194336
    6. ' ' → logprob: -10.38637924194336
    7. ' [' → logprob: -10.76137924194336
    8. 'Lecture' → logprob: -11.26137924194336
    9. ' reading' → logprob: -11.63637924194336
    10. ' tuple' → logprob: -11.63637924194336

Token 117: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0297523383051157
    2. '()' → logprob: -3.529752254486084
    3. ' ().' → logprob: -14.404752731323242
    4. '(' → logprob: -14.529752731323242
    5. '.strip' → logprob: -14.904752731323242
    6. '()
' → logprob: -15.779752731323242
    7. ' ()' → logprob: -15.779752731323242
    8. '())' → logprob: -16.154752731323242
    9. '()

' → logprob: -16.529752731323242
    10. '()).' → logprob: -18.279752731323242

Token 118: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.06282457709312439
    2. 'split' → logprob: -2.8128244876861572
    3. 'rstrip' → logprob: -7.062824726104736
    4. ' strip' → logprob: -17.062824249267578
    5. ' split' → logprob: -17.562824249267578
    6. 'rs' → logprob: -18.187824249267578
    7. '.strip' → logprob: -19.937824249267578
    8. 'spl' → logprob: -20.062824249267578
    9. 'str' → logprob: -20.437824249267578
    10. '(split' → logprob: -20.562824249267578

Token 119: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00523612555116415
    2. '()' → logprob: -5.2552361488342285
    3. '('' → logprob: -13.75523567199707
    4. '(' → logprob: -14.38023567199707
    5. '().'' → logprob: -15.13023567199707
    6. 'split' → logprob: -15.88023567199707
    7. '.split' → logprob: -16.88023567199707
    8. ' ().' → logprob: -17.00523567199707
    9. '()

' → logprob: -17.25523567199707
    10. '()).' → logprob: -17.50523567199707

Token 120: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -15.0
    3. 'spl' → logprob: -17.875
    4. '(split' → logprob: -18.125
    5. 'rstrip' → logprob: -18.25
    6. 'strip' → logprob: -18.75
    7. 'plit' → logprob: -19.25
    8. '.split' → logprob: -19.25
    9. '```' → logprob: -20.375
    10. ' ' → logprob: -20.75

Token 121: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00725188385695219
    2. '('' → logprob: -5.007251739501953
    3. '(' → logprob: -7.632251739501953
    4. '(',' → logprob: -11.007251739501953
    5. '())' → logprob: -11.382251739501953
    6. '("' → logprob: -11.382251739501953
    7. '()]' → logprob: -12.007251739501953
    8. '("("' → logprob: -13.757251739501953
    9. '(),' → logprob: -14.007251739501953
    10. '('.')' → logprob: -14.007251739501953

Token 122: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7518519759178162
    2. '   ' → logprob: -1.751852035522461
    3. '[n' → logprob: -2.251852035522461
    4. '[' → logprob: -2.626852035522461
    5. '<|end|>' → logprob: -2.876852035522461
    6. ' 
' → logprob: -3.126852035522461
    7. 'n' → logprob: -3.501852035522461
    8. ' n' → logprob: -4.126852035522461
    9. '    
' → logprob: -5.126852035522461
    10. '  ' → logprob: -5.376852035522461

Token 123: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.01600949652493
    2. '[' → logprob: -5.141009330749512
    3. 'a' → logprob: -5.266009330749512
    4. 'x' → logprob: -6.266009330749512
    5. '[n' → logprob: -6.891009330749512
    6. ' ' → logprob: -7.391009330749512
    7. ' n' → logprob: -8.266009330749512
    8. ' 
' → logprob: -8.641009330749512
    9. '   ' → logprob: -8.766009330749512
    10. '[
' → logprob: -9.266009330749512

Token 124: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04195746034383774
    2. ' =' → logprob: -3.791957378387451
    3. '=' → logprob: -4.416957378387451
    4. '[' → logprob: -5.541957378387451
    5. ')' → logprob: -7.166957378387451
    6. '<|end|>' → logprob: -7.166957378387451
    7. ' ,' → logprob: -8.29195785522461
    8. ' ' → logprob: -8.41695785522461
    9. '_' → logprob: -9.04195785522461
    10. '_,' → logprob: -9.54195785522461

Token 125: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.42894041538238525
    2. 'x' → logprob: -1.1789404153823853
    3. ' ' → logprob: -3.8039402961730957
    4. '<|end|>' → logprob: -4.428940296173096
    5. 'int' → logprob: -5.178940296173096
    6. ' int' → logprob: -7.303940296173096
    7. ' n' → logprob: -8.053940773010254
    8. ' ' → logprob: -9.428940773010254
    9. '=int' → logprob: -9.803940773010254
    10. 'space' → logprob: -10.178940773010254

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143605768680573
    2. '=' → logprob: -1.7014360427856445
    3. ',' → logprob: -10.951436042785645
    4. ')' → logprob: -13.326436042785645
    5. '=int' → logprob: -13.701436042785645
    6. ' =
' → logprob: -14.201436042785645
    7. '<|end|>' → logprob: -14.201436042785645
    8. '=

' → logprob: -15.451436042785645
    9. '[' → logprob: -15.576436042785645
    10. ' ' → logprob: -15.826436042785645

Token 127: ' int' (ID: 677)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.6705130934715271
    2. ' int' → logprob: -1.1705131530761719
    3. 'int' → logprob: -1.9205131530761719
    4. 'map' → logprob: -3.545513153076172
    5. '[int' → logprob: -5.920513153076172
    6. ' n' → logprob: -8.670513153076172
    7. ' [' → logprob: -9.920513153076172
    8. ' ' → logprob: -10.420513153076172
    9. 'n' → logprob: -11.545513153076172
    10. ' list' → logprob: -12.420513153076172

Token 128: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.018152514472603798
    2. '(' → logprob: -4.018152713775635
    3. '((' → logprob: -13.643152236938477
    4. '('' → logprob: -15.018152236938477
    5. '(
' → logprob: -15.143152236938477
    6. '(x' → logprob: -15.393152236938477
    7. ' (' → logprob: -15.393152236938477
    8. '()' → logprob: -16.143152236938477
    9. '("("' → logprob: -16.268152236938477
    10. '(

' → logprob: -17.018152236938477

Token 129: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.18296854197978973
    2. '(n' → logprob: -1.8079684972763062
    3. '(' → logprob: -6.557968616485596
    4. '_n' → logprob: -7.057968616485596
    5. '[' → logprob: -8.057968139648438
    6. ')' → logprob: -8.057968139648438
    7. '(x' → logprob: -8.807968139648438
    8. '(_' → logprob: -9.932968139648438
    9. ' )' → logprob: -10.057968139648438
    10. '_' → logprob: -11.432968139648438

Token 130: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3425219549390022e-05
    2. '0' → logprob: -11.25001335144043
    3. ' [' → logprob: -15.37501335144043
    4. '[
' → logprob: -16.25001335144043
    5. ')' → logprob: -17.62501335144043
    6. ' ' → logprob: -18.37501335144043
    7. '(' → logprob: -18.75001335144043
    8. '[-' → logprob: -19.62501335144043
    9. 's' → logprob: -19.87501335144043
    10. '\[' → logprob: -20.25001335144043

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '[' → logprob: -16.625001907348633
    4. '   ' → logprob: -19.125001907348633
    5. ')' → logprob: -20.125001907348633
    6. '  ' → logprob: -20.375001907348633
    7. '(' → logprob: -21.625001907348633
    8. '1' → logprob: -21.750001907348633
    9. '    ' → logprob: -21.875001907348633
    10. ']' → logprob: -22.375001907348633

Token 132: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.06198785454034805
    2. ')' → logprob: -2.81198787689209
    3. ' ),' → logprob: -11.43698787689209
    4. ',' → logprob: -12.43698787689209
    5. '),(' → logprob: -12.93698787689209
    6. '],' → logprob: -13.93698787689209
    7. '),

' → logprob: -14.56198787689209
    8. '),
' → logprob: -14.68698787689209
    9. ').' → logprob: -15.43698787689209
    10. ' )' → logprob: -15.93698787689209

Token 133: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.04858918860554695
    2. 'int' → logprob: -3.0485892295837402
    3. '[int' → logprob: -14.173588752746582
    4. '=int' → logprob: -14.548588752746582
    5. '(int' → logprob: -14.923588752746582
    6. '<int' → logprob: -15.173588752746582
    7. '	int' → logprob: -16.5485897064209
    8. ':int' → logprob: -17.1735897064209
    9. ' ' → logprob: -17.9235897064209
    10. ' 
' → logprob: -18.0485897064209

Token 134: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.012873944826424122
    2. '(' → logprob: -4.387874126434326
    3. 'n' → logprob: -8.137873649597168
    4. '('' → logprob: -10.012873649597168
    5. ''' → logprob: -11.262873649597168
    6. ' n' → logprob: -11.512873649597168
    7. ' (' → logprob: -13.262873649597168
    8. '"' → logprob: -14.012873649597168
    9. '(
' → logprob: -14.012873649597168
    10. 'x' → logprob: -15.637873649597168

Token 135: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.026399925351142883
    2. '_n' → logprob: -3.651399850845337
    3. '(n' → logprob: -10.651399612426758
    4. ')' → logprob: -10.776399612426758
    5. ' _' → logprob: -11.276399612426758
    6. '_' → logprob: -11.526399612426758
    7. ' ' → logprob: -11.776399612426758
    8. '[n' → logprob: -11.776399612426758
    9. '[' → logprob: -12.151399612426758
    10. ')_' → logprob: -12.776399612426758

Token 136: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23462823033332825
    2. '_x' → logprob: -1.6096282005310059
    3. '1' → logprob: -5.109628200531006
    4. '_' → logprob: -6.109628200531006
    5. ' ' → logprob: -7.859628200531006
    6. '-' → logprob: -8.609628677368164
    7. 'x' → logprob: -8.984628677368164
    8. '(' → logprob: -9.234628677368164
    9. '```' → logprob: -10.484628677368164
    10. '])' → logprob: -10.609628677368164

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012523093027994037
    2. ' ' → logprob: -9.00012493133545
    3. '   ' → logprob: -14.62512493133545
    4. 'n' → logprob: -14.87512493133545
    5. '  ' → logprob: -15.12512493133545
    6. '0' → logprob: -15.62512493133545
    7. ' n' → logprob: -16.250125885009766
    8. '    ' → logprob: -16.375125885009766
    9. '-' → logprob: -16.750125885009766
    10. '
' → logprob: -16.875125885009766

Token 138: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ')
' → logprob: -12.750004768371582
    3. '<|end|>' → logprob: -14.375004768371582
    4. ' )' → logprob: -15.500004768371582
    5. ')

' → logprob: -15.625004768371582
    6. '),' → logprob: -15.625004768371582
    7. '}' → logprob: -16.750003814697266
    8. '))' → logprob: -17.000003814697266
    9. ')}' → logprob: -17.125003814697266
    10. '   ' → logprob: -17.125003814697266

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0197166204452515
    2. '<|end|>' → logprob: -1.3947166204452515
    3. '
' → logprob: -1.5197166204452515
    4. 'a' → logprob: -2.269716739654541
    5. '    
' → logprob: -3.394716739654541
    6. 'n' → logprob: -4.519716739654541
    7. '<|end|>' → logprob: -5.144716739654541
    8. 'newline' → logprob: -5.519716739654541
    9. ')' → logprob: -6.144716739654541
    10. ' 
' → logprob: -6.394716739654541

Token 140: ' donne' (ID: 30004)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001126026691053994
    2. '   ' → logprob: -10.000112533569336
    3. 'arr' → logprob: -11.125112533569336
    4. 'array' → logprob: -11.375112533569336
    5. 'data' → logprob: -11.875112533569336
    6. ' a' → logprob: -12.125112533569336
    7. '    
' → logprob: -12.750112533569336
    8. 'n' → logprob: -13.000112533569336
    9. 'A' → logprob: -13.125112533569336
    10. 'ligne' → logprob: -13.125112533569336

Token 141: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.14826160669326782
    2. 'e' → logprob: -2.273261547088623
    3. ' =' → logprob: -4.023261547088623
    4. 's' → logprob: -4.148261547088623
    5. '=' → logprob: -7.023261547088623
    6. 'a' → logprob: -9.023262023925781
    7. '_e' → logprob: -10.398262023925781
    8. 'ees' → logprob: -10.523262023925781
    9. '_' → logprob: -11.023262023925781
    10. '   ' → logprob: -12.023262023925781

Token 142: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693744897842407
    2. '=' → logprob: -2.1269373893737793
    3. '_' → logprob: -12.876937866210938
    4. ',' → logprob: -13.251937866210938
    5. ' ' → logprob: -13.626937866210938
    6. ')' → logprob: -14.001937866210938
    7. '=[]' → logprob: -14.376937866210938
    8. ' ' → logprob: -14.376937866210938
    9. 's' → logprob: -14.751937866210938
    10. '[' → logprob: -14.876937866210938

Token 143: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9089536070823669
    2. '[' → logprob: -1.4089536666870117
    3. '[]' → logprob: -1.4089536666870117
    4. '[list' → logprob: -3.1589536666870117
    5. ' list' → logprob: -3.5339536666870117
    6. ' [' → logprob: -3.7839536666870117
    7. ' []' → logprob: -4.533953666687012
    8. '[]
' → logprob: -7.033953666687012
    9. '[n' → logprob: -7.658953666687012
    10. '[int' → logprob: -8.033953666687012

Token 144: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.2961512513575144e-05
    2. ' int' → logprob: -10.750022888183594
    3. '   ' → logprob: -14.250022888183594
    4. '  ' → logprob: -15.125022888183594
    5. ']int' → logprob: -15.125022888183594
    6. '
' → logprob: -16.750022888183594
    7. ' ' → logprob: -17.000022888183594
    8. '0' → logprob: -17.000022888183594
    9. '[int' → logprob: -17.000022888183594
    10. '<int' → logprob: -17.125022888183594

Token 145: '(num' (ID: 15828)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5916310548782349
    2. '(' → logprob: -1.2166310548782349
    3. '(x' → logprob: -1.9666310548782349
    4. '(_)' → logprob: -5.591630935668945
    5. '(s' → logprob: -6.466630935668945
    6. '(e' → logprob: -6.966630935668945
    7. '(item' → logprob: -7.091630935668945
    8. '(n' → logprob: -7.466630935668945
    9. '(y' → logprob: -7.591630935668945
    10. '()' → logprob: -7.591630935668945

Token 146: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006335660815238953
    2. '()' → logprob: -5.631335735321045
    3. '())' → logprob: -6.506335735321045
    4. '(' → logprob: -7.256335735321045
    5. '(x' → logprob: -8.131335258483887
    6. '(line' → logprob: -10.006335258483887
    7. '(i' → logprob: -10.131335258483887
    8. ' for' → logprob: -10.381335258483887
    9. 'for' → logprob: -10.631335258483887
    10. ' )' → logprob: -10.631335258483887

Token 147: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7711254358291626
    2. '(' → logprob: -1.6461254358291626
    3. ' for' → logprob: -1.6461254358291626
    4. 'for' → logprob: -2.646125316619873
    5. '(x' → logprob: -3.146125316619873
    6. '(s' → logprob: -4.396125316619873
    7. '(token' → logprob: -5.146125316619873
    8. '(line' → logprob: -5.146125316619873
    9. '(i' → logprob: -5.646125316619873
    10. ')' → logprob: -6.146125316619873

Token 148: ' num' (ID: 2269)
  Prédit: ' lecture'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lecture' → logprob: -0.09808812290430069
    2. 'lecture' → logprob: -2.473088026046753
    3. ' ' → logprob: -5.848088264465332
    4. ' _' → logprob: -6.598088264465332
    5. ' num' → logprob: -6.598088264465332
    6. ' line' → logprob: -7.098088264465332
    7. '_' → logprob: -7.223088264465332
    8. 'num' → logprob: -7.598088264465332
    9. ' ' → logprob: -7.848088264465332
    10. ' stdin' → logprob: -8.598088264465332

Token 149: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0095480652526021
    2. 'in' → logprob: -4.759548187255859
    3. '_' → logprob: -7.509548187255859
    4. ' ' → logprob: -8.75954818725586
    5. '  ' → logprob: -9.63454818725586
    6. '=' → logprob: -9.63454818725586
    7. '(' → logprob: -10.25954818725586
    8. 'lecture' → logprob: -11.13454818725586
    9. 'Lecture' → logprob: -11.75954818725586
    10. '(stdin' → logprob: -11.88454818725586

Token 150: ' lecture' (ID: 31993)
  Prédit: 'lecture'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lecture' → logprob: -0.06197284162044525
    2. ' lecture' → logprob: -2.8119728565216064
    3. 'lect' → logprob: -13.311972618103027
    4. ' ' → logprob: -13.311972618103027
    5. '  ' → logprob: -14.686972618103027
    6. 'stdin' → logprob: -14.936972618103027
    7. 'Lecture' → logprob: -15.561972618103027
    8. 'lesson' → logprob: -15.686972618103027
    9. 'lection' → logprob: -15.811972618103027
    10. ' stdin' → logprob: -15.811972618103027

Token 151: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0009172935388050973
    2. '()' → logprob: -7.125917434692383
    3. '()]' → logprob: -9.125917434692383
    4. '().'' → logprob: -13.875917434692383
    5. '()].' → logprob: -14.000917434692383
    6. ' ().' → logprob: -14.500917434692383
    7. '())' → logprob: -14.625917434692383
    8. '()[' → logprob: -15.125917434692383
    9. '()
' → logprob: -15.375917434692383
    10. '().__' → logprob: -15.750917434692383

Token 152: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0020069109741598368
    2. 'split' → logprob: -6.252007007598877
    3. 'rstrip' → logprob: -9.502006530761719
    4. ' strip' → logprob: -13.377006530761719
    5. '(strip' → logprob: -13.627006530761719
    6. '.strip' → logprob: -14.627006530761719
    7. '().' → logprob: -15.127006530761719
    8. '-strip' → logprob: -17.00200653076172
    9. '_strip' → logprob: -17.12700653076172
    10. '()' → logprob: -17.37700653076172

Token 153: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.988221684878226e-06
    2. '()' → logprob: -12.375006675720215
    3. ' ().' → logprob: -12.875006675720215
    4. '.split' → logprob: -18.50000762939453
    5. '()]' → logprob: -18.87500762939453
    6. '().'' → logprob: -18.87500762939453
    7. '()[' → logprob: -19.12500762939453
    8. '()].' → logprob: -19.75000762939453
    9. '(' → logprob: -20.12500762939453
    10. '.' → logprob: -20.87500762939453

Token 154: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.842555426876061e-06
    2. ' split' → logprob: -12.250004768371582
    3. '(split' → logprob: -17.7500057220459
    4. '.split' → logprob: -18.1250057220459
    5. 'rstrip' → logprob: -18.3750057220459
    6. 'spl' → logprob: -19.6250057220459
    7. 'strip' → logprob: -20.2500057220459
    8. ' ' → logprob: -20.8750057220459
    9. 'replace' → logprob: -21.8750057220459
    10. '_split' → logprob: -22.3750057220459

Token 155: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0009134899592027068
    2. ']' → logprob: -7.125913619995117
    3. '()' → logprob: -9.500913619995117
    4. '(' → logprob: -10.375913619995117
    5. ')]' → logprob: -13.375913619995117
    6. '())' → logprob: -14.750913619995117
    7. ']()' → logprob: -14.750913619995117
    8. '()]
' → logprob: -15.000913619995117
    9. '('' → logprob: -16.000913619995117
    10. '()],' → logprob: -16.875913619995117

Token 156: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.026269176974892616
    2. '   ' → logprob: -4.15126895904541
    3. '
' → logprob: -4.90126895904541
    4. ' print' → logprob: -6.65126895904541
    5. '<|end|>' → logprob: -7.40126895904541
    6. '    
' → logprob: -7.90126895904541
    7. 'result' → logprob: -8.77626895904541
    8. '```' → logprob: -9.40126895904541
    9. ')' → logprob: -9.52626895904541
    10. '  
' → logprob: -10.90126895904541

Token 157: ' def' (ID: 1056)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.440506407059729e-05
    2. ' print' → logprob: -10.87503433227539
    3. 'result' → logprob: -11.12503433227539
    4. '
' → logprob: -15.87503433227539
    5. 'pr' → logprob: -16.00003433227539
    6. 'prin' → logprob: -16.00003433227539
    7. '   ' → logprob: -16.25003433227539
    8. 'r' → logprob: -16.50003433227539
    9. 'res' → logprob: -17.37503433227539
    10. '    
' → logprob: -17.50003433227539

Token 158: ' afficher' (ID: 146524)
  Prédit: ' test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' test' → logprob: -0.8679100871086121
    2. ' main' → logprob: -1.2429101467132568
    3. ' bizarre' → logprob: -2.992910146713257
    4. '_' → logprob: -3.492910146713257
    5. 'test' → logprob: -3.867910146713257
    6. 'result' → logprob: -3.867910146713257
    7. 'main' → logprob: -3.992910146713257
    8. 'b' → logprob: -3.992910146713257
    9. '_result' → logprob: -4.242909908294678
    10. ' result' → logprob: -4.242909908294678

Token 159: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4728506803512573
    2. '():' → logprob: -1.0978506803512573
    3. '()' → logprob: -3.347850799560547
    4. '(a' → logprob: -5.722850799560547
    5. '(n' → logprob: -6.347850799560547
    6. '(b' → logprob: -7.097850799560547
    7. '(s' → logprob: -7.722850799560547
    8. '_' → logprob: -7.972850799560547
    9. '("")' → logprob: -9.222850799560547
    10. ' (' → logprob: -9.347850799560547

Token 160: '):' (ID: 3127)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.011869953945279121
    2. 'és' → logprob: -4.88686990737915
    3. '(es' → logprob: -5.51186990737915
    4. 'e' → logprob: -8.886870384216309
    5. ' es' → logprob: -11.136870384216309
    6. 'esu' → logprob: -11.386870384216309
    7. 's' → logprob: -11.511870384216309
    8. '(s' → logprob: -11.886870384216309
    9. '(result' → logprob: -12.136870384216309
    10. ')' → logprob: -12.511870384216309

Token 161: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.8479366302490234
    2. 'print' → logprob: -1.3479366302490234
    3. '       ' → logprob: -1.4729366302490234
    4. '   ' → logprob: -2.8479366302490234
    5. '    ' → logprob: -5.347936630249023
    6. ' 
' → logprob: -5.597936630249023
    7. '<|end|>' → logprob: -5.722936630249023
    8. ' return' → logprob: -5.847936630249023
    9. ' ' → logprob: -6.222936630249023
    10. '    
' → logprob: -6.347936630249023

Token 162: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.013175999745726585
    2. '(' → logprob: -4.388175964355469
    3. '(f' → logprob: -8.013175964355469
    4. '("' → logprob: -8.888175964355469
    5. '('' → logprob: -9.263175964355469
    6. '()' → logprob: -10.263175964355469
    7. '(*' → logprob: -10.638175964355469
    8. 'r' → logprob: -11.013175964355469
    9. '(result' → logprob: -11.888175964355469
    10. '((' → logprob: -12.013175964355469

Token 163: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.537868779967539e-06
    2. '())' → logprob: -12.375008583068848
    3. '()' → logprob: -13.125008583068848
    4. '))' → logprob: -13.625008583068848
    5. ')`' → logprob: -14.875008583068848
    6. ' )' → logprob: -15.625008583068848
    7. '(' → logprob: -15.625008583068848
    8. ')}' → logprob: -16.75000762939453
    9. ')#' → logprob: -16.75000762939453
    10. ',' → logprob: -17.00000762939453

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21169120073318481
    2. '    
' → logprob: -2.33669114112854
    3. '
' → logprob: -2.96169114112854
    4. 'r' → logprob: -4.086691379547119
    5. 'aff' → logprob: -4.211691379547119
    6. '  
' → logprob: -5.711691379547119
    7. '<|end|>' → logprob: -6.461691379547119
    8. ' 
' → logprob: -6.586691379547119
    9. '_aff' → logprob: -6.711691379547119
    10. 'result' → logprob: -7.086691379547119

Token 165: ' afficher' (ID: 146524)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.02200591005384922
    2. 'result' → logprob: -4.647006034851074
    3. 'r' → logprob: -5.272006034851074
    4. '   ' → logprob: -5.397006034851074
    5. '    
' → logprob: -6.522006034851074
    6. '
' → logprob: -7.897006034851074
    7. 'res' → logprob: -8.897006034851074
    8. 'print' → logprob: -9.147006034851074
    9. 'rés' → logprob: -9.397006034851074
    10. ' afficher' → logprob: -9.522006034851074

Token 166: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.07891027629375458
    2. '(' → logprob: -2.5789103507995605
    3. '(
' → logprob: -10.953909873962402
    4. '((' → logprob: -14.078909873962402
    5. '()' → logprob: -14.578909873962402
    6. '(

' → logprob: -14.703909873962402
    7. 'b' → logprob: -15.203909873962402
    8. '('' → logprob: -15.453909873962402
    9. ' (' → logprob: -15.453909873962402
    10. '("("' → logprob: -15.578909873962402

Token 167: 'izarre' (ID: 54933)
  Prédit: 'izarre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izarre' → logprob: -0.0005841302336193621
    2. 'izzare' → logprob: -7.750584125518799
    3. 'izar' → logprob: -8.875584602355957
    4. 'izare' → logprob: -11.875584602355957
    5. 'iz' → logprob: -12.625584602355957
    6. 'izz' → logprob: -13.000584602355957
    7. 'izard' → logprob: -14.375584602355957
    8. 'azar' → logprob: -15.500584602355957
    9. 'zar' → logprob: -15.750584602355957
    10. 'izzard' → logprob: -16.75058364868164

Token 168: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.021191369742155075
    2. '(' → logprob: -3.896191358566284
    3. ' (' → logprob: -7.646191596984863
    4. ')' → logprob: -9.271191596984863
    5. '(x' → logprob: -9.896191596984863
    6. ')(' → logprob: -11.021191596984863
    7. '(
' → logprob: -11.646191596984863
    8. ' ' → logprob: -14.396191596984863
    9. '((' → logprob: -14.521191596984863
    10. '(

' → logprob: -15.896191596984863

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010724655585363507
    2. ',x' → logprob: -6.876072406768799
    3. ' ,' → logprob: -10.251072883605957
    4. '(x' → logprob: -13.001072883605957
    5. '(' → logprob: -13.626072883605957
    6. ',
' → logprob: -15.251072883605957
    7. 'x' → logprob: -15.376072883605957
    8. ' ' → logprob: -15.751072883605957
    9. ' x' → logprob: -16.50107192993164
    10. ')' → logprob: -17.00107192993164

Token 170: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804149478673935
    2. ' x' → logprob: -3.288041591644287
    3. ' ' → logprob: -17.788042068481445
    4. '	x' → logprob: -18.288042068481445
    5. ')x' → logprob: -18.288042068481445
    6. '(x' → logprob: -18.538042068481445
    7. '<|end|>' → logprob: -18.663042068481445
    8. ')' → logprob: -18.913042068481445
    9. ' 
' → logprob: -20.788042068481445
    10. '    ' → logprob: -21.288042068481445

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014656837447546422
    2. ' ,' → logprob: -9.250146865844727
    3. ',d' → logprob: -10.000146865844727
    4. ',a' → logprob: -12.375146865844727
    5. ',
' → logprob: -15.625146865844727
    6. 'a' → logprob: -15.875146865844727
    7. '   ' → logprob: -16.000146865844727
    8. ',n' → logprob: -16.375146865844727
    9. ',b' → logprob: -16.375146865844727
    10. '```' → logprob: -17.375146865844727

Token 172: ' donne' (ID: 30004)
  Prédit: 'don'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'don' → logprob: -0.016426347196102142
    2. ' donne' → logprob: -4.1414265632629395
    3. ' don' → logprob: -7.8914265632629395
    4. 'd' → logprob: -11.391426086425781
    5. ' donn' → logprob: -13.016426086425781
    6. ' dona' → logprob: -13.891426086425781
    7. ' ' → logprob: -14.266426086425781
    8. 'done' → logprob: -14.891426086425781
    9. ' donate' → logprob: -15.016426086425781
    10. '(d' → logprob: -15.016426086425781

Token 173: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -3.054500666621607e-06
    2. 'e' → logprob: -13.62500286102295
    3. 'ed' → logprob: -14.12500286102295
    4. 'ees' → logprob: -14.37500286102295
    5. '   ' → logprob: -15.62500286102295
    6. 'd' → logprob: -16.750003814697266
    7. 's' → logprob: -17.000003814697266
    8. 'ces' → logprob: -17.125003814697266
    9. 'r' → logprob: -17.250003814697266
    10. 'tes' → logprob: -17.750003814697266

Token 174: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04859600216150284
    2. ')' → logprob: -3.048595905303955
    3. '))
' → logprob: -12.173596382141113
    4. ')))' → logprob: -13.423596382141113
    5. ')
' → logprob: -13.798596382141113
    6. ' ))' → logprob: -14.673596382141113
    7. ' )' → logprob: -16.423595428466797
    8. '()))' → logprob: -16.548595428466797
    9. '),' → logprob: -16.673595428466797
    10. ' ' → logprob: -17.048595428466797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 172
Tokens correctement prédits (1ère position, stricte): 85
Tokens correctement prédits (1ère position, avec adaptation): 88
Tokens correctement prédits (top 10): 133
Précision stricte (1ère position): 49.42%
Précision adaptée (1ère position): 51.16%
Précision (top 10): 77.33%
================================================================================
