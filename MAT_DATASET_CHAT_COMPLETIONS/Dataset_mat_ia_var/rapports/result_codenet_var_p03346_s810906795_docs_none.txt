================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
LCIS = [0 for i in range(N+1)]
for i in range(N):
    A = int(input())
    LCIS[A] = LCIS[A-1] + 1
print(N - max(LCIS))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002943479048553854
    2. ''' → logprob: -8.75029468536377
    3. '`' → logprob: -10.00029468536377
    4. '```' → logprob: -10.62529468536377
    5. '(
' → logprob: -10.75029468536377
    6. '(N' → logprob: -11.00029468536377
    7. '\(' → logprob: -12.25029468536377
    8. ')' → logprob: -12.25029468536377
    9. '"' → logprob: -12.62529468536377
    10. '("("' → logprob: -12.87529468536377

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5316423177719116
    2. ')' → logprob: -0.9066423177719116
    3. '()' → logprob: -5.156642436981201
    4. '())' → logprob: -6.656642436981201
    5. '(
' → logprob: -7.656642436981201
    6. '```' → logprob: -8.781641960144043
    7. '))' → logprob: -8.906641960144043
    8. '")' → logprob: -9.406641960144043
    9. '')' → logprob: -9.531641960144043
    10. '(

' → logprob: -9.906641960144043

Token 5: 'LC' (ID: 10566)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8320107460021973
    2. 'for' → logprob: -1.8320107460021973
    3. 'a' → logprob: -2.0820107460021973
    4. 's' → logprob: -2.2070107460021973
    5. '*' → logprob: -2.5820107460021973
    6. ''' → logprob: -2.8320107460021973
    7. '#' → logprob: -3.2070107460021973
    8. ')' → logprob: -3.2070107460021973
    9. 'i' → logprob: -3.3320107460021973
    10. 'x' → logprob: -3.3320107460021973

Token 6: 'IS' (ID: 2291)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0024780353996902704
    2. ' =' → logprob: -6.502478122711182
    3. 'm' → logprob: -8.377477645874023
    4. '[' → logprob: -8.502477645874023
    5. 'L' → logprob: -9.252477645874023
    6. '=' → logprob: -9.377477645874023
    7. '_' → logprob: -9.752477645874023
    8. '.append' → logprob: -9.877477645874023
    9. 'Ms' → logprob: -9.877477645874023
    10. '[]' → logprob: -10.252477645874023

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5512182116508484
    2. '_' → logprob: -1.1762182712554932
    3. ' =' → logprob: -2.426218271255493
    4. '[' → logprob: -4.051218032836914
    5. '(' → logprob: -5.426218032836914
    6. 's' → logprob: -6.426218032836914
    7. '_=' → logprob: -6.801218032836914
    8. '.' → logprob: -7.676218032836914
    9. ' ' → logprob: -7.926218032836914
    10. '=[]' → logprob: -8.176218032836914

Token 8: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.2883598506450653
    2. '[' → logprob: -1.5383598804473877
    3. ' []' → logprob: -3.6633598804473877
    4. '[]' → logprob: -4.663359642028809
    5. ' ' → logprob: -7.663359642028809
    6. '0' → logprob: -9.413359642028809
    7. '[int' → logprob: -10.413359642028809
    8. '[N' → logprob: -10.413359642028809
    9. ' [[]' → logprob: -10.538359642028809
    10. '[input' → logprob: -10.663359642028809

Token 9: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007707300130277872
    2. '1' → logprob: -5.007707118988037
    3. ']' → logprob: -7.882707118988037
    4. 'int' → logprob: -8.257707595825195
    5. 'N' → logprob: -8.382707595825195
    6. '[]' → logprob: -9.882707595825195
    7. '-' → logprob: -10.757707595825195
    8. '[int' → logprob: -11.507707595825195
    9. ' ' → logprob: -11.632707595825195
    10. ']int' → logprob: -11.757707595825195

Token 10: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011793611571192741
    2. ',' → logprob: -4.761793613433838
    3. ']*' → logprob: -6.511793613433838
    4. ' ]' → logprob: -6.636793613433838
    5. ' for' → logprob: -8.13679313659668
    6. ')]' → logprob: -10.38679313659668
    7. ')' → logprob: -11.13679313659668
    8. ']*(' → logprob: -11.51179313659668
    9. 'for' → logprob: -12.01179313659668
    10. ']+' → logprob: -12.51179313659668

Token 11: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.18566805124282837
    2. '_' → logprob: -1.8106679916381836
    3. ' i' → logprob: -5.560667991638184
    4. ' ' → logprob: -6.435667991638184
    5. ' range' → logprob: -8.935667991638184
    6. 'range' → logprob: -9.060667991638184
    7. 'i' → logprob: -9.685667991638184
    8. '_range' → logprob: -9.685667991638184
    9. '_i' → logprob: -10.685667991638184
    10. ' in' → logprob: -11.435667991638184

Token 12: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011090267449617386
    2. 'in' → logprob: -4.511090278625488
    3. ' ' → logprob: -11.011090278625488
    4. 'range' → logprob: -11.386090278625488
    5. ' range' → logprob: -12.136090278625488
    6. '<|end|>' → logprob: -12.386090278625488
    7. ')' → logprob: -13.886090278625488
    8. '	in' → logprob: -14.261090278625488
    9. '<|end|>' → logprob: -14.386090278625488
    10. ']' → logprob: -14.761090278625488

Token 13: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03804286941885948
    2. 'range' → logprob: -3.2880427837371826
    3. '	range' → logprob: -14.038043022155762
    4. '(range' → logprob: -14.788043022155762
    5. '_range' → logprob: -17.538042068481445
    6. ')' → logprob: -17.538042068481445
    7. ' xrange' → logprob: -17.663042068481445
    8. ' ' → logprob: -18.288042068481445
    9. '.range' → logprob: -19.538042068481445
    10. ' rango' → logprob: -19.913042068481445

Token 14: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.048758476972579956
    2. '(' → logprob: -3.0487585067749023
    3. '(n' → logprob: -9.298758506774902
    4. '(len' → logprob: -9.548758506774902
    5. '(
' → logprob: -12.423758506774902
    6. ' (' → logprob: -13.423758506774902
    7. '(

' → logprob: -14.423758506774902
    8. '(range' → logprob: -14.798758506774902
    9. '((' → logprob: -15.048758506774902
    10. ')' → logprob: -15.048758506774902

Token 15: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.065608562901616e-05
    2. '])]' → logprob: -10.375081062316895
    3. ']' → logprob: -10.625081062316895
    4. ')])' → logprob: -11.625081062316895
    5. ')' → logprob: -12.000081062316895
    6. ' )' → logprob: -12.250081062316895
    7. '])' → logprob: -12.750081062316895
    8. '')]' → logprob: -14.500081062316895
    9. ' ]' → logprob: -14.625081062316895
    10. ')],' → logprob: -14.750081062316895

Token 16: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006467910134233534
    2. '2' → logprob: -7.875646591186523
    3. ' ' → logprob: -8.250646591186523
    4. '(' → logprob: -12.750646591186523
    5. '   ' → logprob: -14.625646591186523
    6. '  ' → logprob: -14.750646591186523
    7. '+' → logprob: -14.750646591186523
    8. 'N' → logprob: -15.125646591186523
    9. '(N' → logprob: -15.750646591186523
    10. ')' → logprob: -15.875646591186523

Token 17: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00030269217677414417
    2. ')])' → logprob: -9.2503023147583
    3. '])]' → logprob: -9.3753023147583
    4. ')' → logprob: -9.3753023147583
    5. ' )' → logprob: -11.2503023147583
    6. '])' → logprob: -11.2503023147583
    7. ']' → logprob: -11.7503023147583
    8. '')]' → logprob: -14.0003023147583
    9. ')],' → logprob: -14.2503023147583
    10. ')]
' → logprob: -14.8753023147583

Token 18: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12230859696865082
    2. '
' → logprob: -2.7473084926605225
    3. ' for' → logprob: -2.9973084926605225
    4. ' 
' → logprob: -8.122308731079102
    5. '<|end|>' → logprob: -8.372308731079102
    6. '\n' → logprob: -8.747308731079102
    7. 'max' → logprob: -8.872308731079102
    8. '0' → logprob: -9.997308731079102
    9. '
' → logprob: -10.247308731079102
    10. '' → logprob: -10.622308731079102

Token 19: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0031262633856385946
    2. 'i' → logprob: -6.12812614440918
    3. ' ' → logprob: -8.00312614440918
    4. ' range' → logprob: -8.12812614440918
    5. '_' → logprob: -9.00312614440918
    6. ' ' → logprob: -9.37812614440918
    7. ' _' → logprob: -9.75312614440918
    8. ' in' → logprob: -11.12812614440918
    9. 'range' → logprob: -12.00312614440918
    10. ' j' → logprob: -12.12812614440918

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016306141391396523
    2. 'in' → logprob: -4.141305923461914
    3. ' ' → logprob: -8.391305923461914
    4. '	in' → logprob: -10.516305923461914
    5. '  ' → logprob: -12.016305923461914
    6. '+' → logprob: -13.141305923461914
    7. 'n' → logprob: -13.641305923461914
    8. '1' → logprob: -13.891305923461914
    9. '<|end|>' → logprob: -13.891305923461914
    10. '(' → logprob: -14.141305923461914

Token 21: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.06198393553495407
    2. 'range' → logprob: -2.811983823776245
    3. ' ' → logprob: -11.311984062194824
    4. '(range' → logprob: -13.311984062194824
    5. '	range' → logprob: -14.061984062194824
    6. ' in' → logprob: -14.561984062194824
    7. ' xrange' → logprob: -14.811984062194824
    8. ')' → logprob: -15.061984062194824
    9. '  ' → logprob: -15.436984062194824
    10. '1' → logprob: -15.936984062194824

Token 22: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0035651428624987602
    2. '(N' → logprob: -5.753565311431885
    3. ' (' → logprob: -7.878565311431885
    4. '(i' → logprob: -12.753564834594727
    5. '(n' → logprob: -13.503564834594727
    6. ' ' → logprob: -13.628564834594727
    7. '(len' → logprob: -14.128564834594727
    8. '(
' → logprob: -14.253564834594727
    9. '1' → logprob: -14.378564834594727
    10. '(L' → logprob: -15.503564834594727

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2617049813270569
    2. '+' → logprob: -1.511704921722412
    3. ')' → logprob: -5.511704921722412
    4. ' ):' → logprob: -6.511704921722412
    5. ' +' → logprob: -6.761704921722412
    6. '):
' → logprob: -6.761704921722412
    7. '-' → logprob: -6.886704921722412
    8. ' ' → logprob: -7.636704921722412
    9. '1' → logprob: -9.38670539855957
    10. ')]' → logprob: -9.76170539855957

Token 24: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07734506577253342
    2. '   ' → logprob: -3.202345132827759
    3. '    ' → logprob: -4.20234489440918
    4. ' for' → logprob: -4.70234489440918
    5. '<|end|>' → logprob: -5.07734489440918
    6. ' 
' → logprob: -8.07734489440918
    7. ' i' → logprob: -8.20234489440918
    8. ' code' → logprob: -8.32734489440918
    9. ' ind' → logprob: -8.45234489440918
    10. ' input' → logprob: -8.57734489440918

Token 25: ' A' (ID: 355)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.3684005737304688
    2. ' for' → logprob: -1.7434005737304688
    3. ' ' → logprob: -1.8684005737304688
    4. 'for' → logprob: -2.1184005737304688
    5. ' range' → logprob: -2.2434005737304688
    6. '   ' → logprob: -2.2434005737304688
    7. 'int' → logprob: -3.4934005737304688
    8. 'input' → logprob: -4.368400573730469
    9. ' LC' → logprob: -4.993400573730469
    10. ' input' → logprob: -5.368400573730469

Token 26: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20899617671966553
    2. '[' → logprob: -1.7089961767196655
    3. '[N' → logprob: -6.208996295928955
    4. '[int' → logprob: -6.208996295928955
    5. '[input' → logprob: -6.833996295928955
    6. '[]' → logprob: -7.458996295928955
    7. ' =' → logprob: -7.583996295928955
    8. '[A' → logprob: -8.208995819091797
    9. '[n' → logprob: -8.708995819091797
    10. '[user' → logprob: -8.958995819091797

Token 27: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2813127636909485
    2. 'int' → logprob: -1.4063127040863037
    3. ' list' → logprob: -9.906312942504883
    4. '[int' → logprob: -10.156312942504883
    5. 'list' → logprob: -11.531312942504883
    6. '(int' → logprob: -11.531312942504883
    7. '0' → logprob: -11.656312942504883
    8. ' input' → logprob: -11.656312942504883
    9. '<int' → logprob: -11.906312942504883
    10. ' ' → logprob: -12.156312942504883

Token 28: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0005588700296357274
    2. '(' → logprob: -7.500558853149414
    3. 'input' → logprob: -12.375558853149414
    4. '()' → logprob: -14.500558853149414
    5. ' (' → logprob: -14.875558853149414
    6. '=input' → logprob: -15.375558853149414
    7. ' input' → logprob: -15.625558853149414
    8. ',input' → logprob: -15.750558853149414
    9. ')' → logprob: -17.125558853149414
    10. '(

' → logprob: -17.250558853149414

Token 29: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03881237655878067
    2. '()' → logprob: -3.4138123989105225
    3. ')' → logprob: -5.288812160491943
    4. '()))' → logprob: -9.913812637329102
    5. '(' → logprob: -10.663812637329102
    6. '())
' → logprob: -11.288812637329102
    7. ' ())' → logprob: -11.913812637329102
    8. '()
' → logprob: -12.788812637329102
    9. '();)' → logprob: -13.413812637329102
    10. '))' → logprob: -13.538812637329102

Token 30: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4110874533653259
    2. '<|end|>' → logprob: -1.2860875129699707
    3. '   ' → logprob: -3.2860875129699707
    4. ' 
' → logprob: -4.786087512969971
    5. '    ' → logprob: -5.536087512969971
    6. '<|end|>' → logprob: -6.036087512969971
    7. '  ' → logprob: -6.161087512969971
    8. ' for' → logprob: -6.411087512969971
    9. '    
' → logprob: -6.786087512969971
    10. ' LC' → logprob: -7.536087512969971

Token 31: ' LC' (ID: 59501)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.60286545753479
    2. ' ' → logprob: -1.72786545753479
    3. 'if' → logprob: -1.85286545753479
    4. '    ' → logprob: -3.35286545753479
    5. ' for' → logprob: -3.72786545753479
    6. '   ' → logprob: -3.72786545753479
    7. 'for' → logprob: -4.227865219116211
    8. ' 
' → logprob: -5.852865219116211
    9. 'i' → logprob: -5.977865219116211
    10. '```' → logprob: -6.352865219116211

Token 32: 'IS' (ID: 2291)
  Prédit: 'IS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IS' → logprob: -0.00010485442908247933
    2. 'S' → logprob: -9.625104904174805
    3. 'I' → logprob: -10.500104904174805
    4. ' IS' → logprob: -11.875104904174805
    5. 'Is' → logprob: -14.000104904174805
    6. '_IS' → logprob: -14.750104904174805
    7. '=' → logprob: -15.000104904174805
    8. 'is' → logprob: -15.000104904174805
    9. '<IS' → logprob: -15.000104904174805
    10. '[' → logprob: -15.375104904174805

Token 33: '[A' (ID: 58391)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.26314520835876465
    2. '[i' → logprob: -1.5131452083587646
    3. '[A' → logprob: -4.513145446777344
    4. '[I' → logprob: -9.638145446777344
    5. '[a' → logprob: -10.638145446777344
    6. '[...]' → logprob: -11.013145446777344
    7. '\[' → logprob: -11.763145446777344
    8. '[N' → logprob: -11.888145446777344
    9. '[max' → logprob: -12.138145446777344
    10. '```' → logprob: -12.388145446777344

Token 34: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007919494062662125
    2. ']+=' → logprob: -5.3829193115234375
    3. ']=' → logprob: -6.2579193115234375
    4. ' ]' → logprob: -7.3829193115234375
    5. ')' → logprob: -8.382919311523438
    6. '=' → logprob: -8.757919311523438
    7. '+' → logprob: -8.757919311523438
    8. ')]' → logprob: -10.132919311523438
    9. ']+' → logprob: -10.257919311523438
    10. ']==' → logprob: -10.507919311523438

Token 35: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6292181015014648
    2. ' =' → logprob: -0.8792181015014648
    3. '+=' → logprob: -3.254218101501465
    4. '=' → logprob: -4.379218101501465
    5. '+' → logprob: -7.754218101501465
    6. ']+=' → logprob: -9.004218101501465
    7. ' +' → logprob: -9.254218101501465
    8. ' ' → logprob: -10.754218101501465
    9. '<|end|>' → logprob: -11.379218101501465
    10. ']' → logprob: -11.754218101501465

Token 36: ' LC' (ID: 59501)
  Prédit: 'LC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LC' → logprob: -0.338148295879364
    2. '1' → logprob: -2.338148355484009
    3. 'max' → logprob: -2.463148355484009
    4. ' LC' → logprob: -2.588148355484009
    5. ' max' → logprob: -3.588148355484009
    6. ' ' → logprob: -7.08814811706543
    7. '0' → logprob: -7.21314811706543
    8. '   ' → logprob: -7.96314811706543
    9. '(max' → logprob: -9.15064811706543
    10. '(' → logprob: -9.83814811706543

Token 37: 'IS' (ID: 2291)
  Prédit: 'IS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IS' → logprob: -7.839121826691553e-05
    2. 'I' → logprob: -9.625078201293945
    3. 'S' → logprob: -12.375078201293945
    4. ' IS' → logprob: -13.000078201293945
    5. 'Is' → logprob: -13.375078201293945
    6. '<IS' → logprob: -14.000078201293945
    7. 'is' → logprob: -14.375078201293945
    8. ' ' → logprob: -14.625078201293945
    9. '1' → logprob: -15.125078201293945
    10. '   ' → logprob: -15.375078201293945

Token 38: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.051570575684309006
    2. '[' → logprob: -3.0515706539154053
    3. '<|end|>' → logprob: -6.676570415496826
    4. 'A' → logprob: -7.051570415496826
    5. '[max' → logprob: -8.426570892333984
    6. '[
' → logprob: -8.676570892333984
    7. '[a' → logprob: -9.301570892333984
    8. '[i' → logprob: -9.676570892333984
    9. '```' → logprob: -9.801570892333984
    10. ' ' → logprob: -10.051570892333984

Token 39: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.05553363263607025
    2. ' -' → logprob: -2.9305336475372314
    3. '[i' → logprob: -7.555533409118652
    4. ']' → logprob: -10.555533409118652
    5. '[A' → logprob: -10.680533409118652
    6. ' ' → logprob: -11.055533409118652
    7. '[' → logprob: -11.180533409118652
    8. '1' → logprob: -11.305533409118652
    9. '[-' → logprob: -11.680533409118652
    10. '   ' → logprob: -12.180533409118652

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.060365608893335e-05
    2. ' ' → logprob: -10.500041007995605
    3. ']' → logprob: -12.250041007995605
    4. '   ' → logprob: -12.750041007995605
    5. ']+' → logprob: -13.250041007995605
    6. '```' → logprob: -13.750041007995605
    7. '-' → logprob: -14.625041007995605
    8. ')' → logprob: -15.125041007995605
    9. '  ' → logprob: -15.937541007995605
    10. '`' → logprob: -16.00004005432129

Token 41: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0089762844145298
    2. ' +' → logprob: -5.508976459503174
    3. ']+' → logprob: -5.758976459503174
    4. ']' → logprob: -6.383976459503174
    5. ')+' → logprob: -10.633975982666016
    6. ')' → logprob: -12.133975982666016
    7. '+]' → logprob: -12.508975982666016
    8. '1' → logprob: -13.133975982666016
    9. '}+' → logprob: -13.633975982666016
    10. '<|end|>' → logprob: -13.633975982666016

Token 42: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01815216802060604
    2. ' +' → logprob: -4.018152236938477
    3. '<|end|>' → logprob: -14.268152236938477
    4. ' plus' → logprob: -14.393152236938477
    5. '＋' → logprob: -15.268152236938477
    6. '+
' → logprob: -15.518152236938477
    7. '()+' → logprob: -15.643152236938477
    8. ' ' → logprob: -16.143152236938477
    9. '```' → logprob: -16.643152236938477
    10. '1' → logprob: -16.643152236938477

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.37509536743164
    4. '```' → logprob: -18.50009536743164
    5. '+' → logprob: -19.87509536743164
    6. ' ' → logprob: -20.12509536743164
    7. '0' → logprob: -20.37509536743164
    8. '  ' → logprob: -20.37509536743164
    9. '１' → logprob: -20.50009536743164
    10. '۱' → logprob: -20.56259536743164

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -19.000003814697266
    4. '```' → logprob: -20.125003814697266
    5. '+' → logprob: -20.500003814697266
    6. '１' → logprob: -21.375003814697266
    7. '۱' → logprob: -21.500003814697266
    8. '<|end|>' → logprob: -21.500003814697266
    9. '  ' → logprob: -21.625003814697266
    10. ' ' → logprob: -21.875003814697266

Token 45: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07918476313352585
    2. '(max' → logprob: -2.5791847705841064
    3. '(L' → logprob: -8.829184532165527
    4. '(sum' → logprob: -9.204184532165527
    5. '(len' → logprob: -10.704184532165527
    6. '(min' → logprob: -11.829184532165527
    7. 'max' → logprob: -11.954184532165527
    8. '()' → logprob: -12.829184532165527
    9. '((' → logprob: -13.704184532165527
    10. '('' → logprob: -13.704184532165527

Token 48: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.0219828002154827e-05
    2. '))' → logprob: -12.000020027160645
    3. '-' → logprob: -12.250020027160645
    4. ')
' → logprob: -13.125020027160645
    5. '')' → logprob: -13.375020027160645
    6. ' )' → logprob: -13.500020027160645
    7. '`)' → logprob: -13.625020027160645
    8. '")' → logprob: -14.750020027160645
    9. '-)' → logprob: -15.000020027160645
    10. '*' → logprob: -15.250020027160645

Token 49: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.47421911358833313
    2. ' max' → logprob: -0.9742190837860107
    3. 'LC' → logprob: -9.47421932220459
    4. 'min' → logprob: -10.47421932220459
    5. ' LC' → logprob: -10.72421932220459
    6. ' min' → logprob: -11.84921932220459
    7. '(max' → logprob: -12.34921932220459
    8. '	max' → logprob: -13.09921932220459
    9. '[max' → logprob: -14.84921932220459
    10. 'm' → logprob: -15.47421932220459

Token 50: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.246537173457909e-06
    2. '(L' → logprob: -12.500003814697266
    3. '(`' → logprob: -15.250003814697266
    4. '(
' → logprob: -15.750003814697266
    5. ' (' → logprob: -16.125003814697266
    6. '(

' → logprob: -17.000003814697266
    7. ')' → logprob: -17.750003814697266
    8. '(l' → logprob: -17.875003814697266
    9. '((' → logprob: -18.500003814697266
    10. '（' → logprob: -19.125003814697266

Token 51: 'LC' (ID: 10566)
  Prédit: 'LC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LC' → logprob: -0.0008945476147346199
    2. '(' → logprob: -7.125894546508789
    3. ' LC' → logprob: -9.375894546508789
    4. ')' → logprob: -13.000894546508789
    5. 'LS' → logprob: -13.625894546508789
    6. 'L' → logprob: -14.125894546508789
    7. '(L' → logprob: -15.750894546508789
    8. '[' → logprob: -15.750894546508789
    9. 'LCD' → logprob: -16.12589454650879
    10. '   ' → logprob: -16.25089454650879

Token 52: 'IS' (ID: 2291)
  Prédit: 'IS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IS' → logprob: -6.704273118884885e-07
    2. 'I' → logprob: -15.000000953674316
    3. ' IS' → logprob: -15.875000953674316
    4. ')' → logprob: -17.25
    5. 'Is' → logprob: -17.625
    6. '(IS' → logprob: -17.625
    7. 'S' → logprob: -17.75
    8. 'ИС' → logprob: -18.0
    9. '<IS' → logprob: -18.5
    10. '   ' → logprob: -18.625

Token 53: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.04305422678589821
    2. ')' → logprob: -3.1680543422698975
    3. ')))' → logprob: -10.293054580688477
    4. '))
' → logprob: -11.168054580688477
    5. ' ))' → logprob: -12.668054580688477
    6. '])' → logprob: -14.668054580688477
    7. ')
' → logprob: -14.918054580688477
    8. ' )' → logprob: -14.918054580688477
    9. '()))' → logprob: -14.918054580688477
    10. ''))' → logprob: -15.168054580688477


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 51
Tokens correctement prédits (1ère position, stricte): 23
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 40
Précision stricte (1ère position): 45.10%
Précision adaptée (1ère position): 45.10%
Précision (top 10): 78.43%
================================================================================
