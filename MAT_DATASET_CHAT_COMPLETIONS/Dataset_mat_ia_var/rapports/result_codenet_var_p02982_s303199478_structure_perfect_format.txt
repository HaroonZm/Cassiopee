================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:52:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math

N, D = map(int, input().split())
x = []
count = 0

for i in range(N):
    x.append(list(map(int, input().split())))

for i in range(N):
    for j in range(i + 1, N):
        s = 0
        for k in range(D):
            s += (x[j][k] - x[i][k]) ** 2
        if math.sqrt(s) == int(math.sqrt(s)):
            count += 1

print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -6.289473822107539e-05
    2. 'import' → logprob: -11.625062942504883
    3. '```' → logprob: -11.625062942504883
    4. '\' → logprob: -11.875062942504883
    5. '<|end|>' → logprob: -12.375062942504883
    6. '.\' → logprob: -12.500062942504883
    7. '.pi' → logprob: -12.625062942504883
    8. '.e' → logprob: -12.625062942504883
    9. '\n' → logprob: -12.875062942504883
    10. 'def' → logprob: -13.250062942504883

Token 4: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8004316687583923
    2. ')' → logprob: -1.800431728363037
    3. '=' → logprob: -2.300431728363037
    4. 'u' → logprob: -2.550431728363037
    5. 'a' → logprob: -2.675431728363037
    6. '.' → logprob: -2.800431728363037
    7. ',' → logprob: -4.050431728363037
    8. ' ' → logprob: -4.425431728363037
    9. ' =' → logprob: -4.425431728363037
    10. ' )' → logprob: -5.175431728363037

Token 5: ' D' (ID: 415)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.5292165875434875
    2. ' M' → logprob: -1.2792165279388428
    3. 'K' → logprob: -2.7792165279388428
    4. ' ' → logprob: -3.0292165279388428
    5. 'M' → logprob: -4.029216766357422
    6. ' =' → logprob: -6.529216766357422
    7. ' space' → logprob: -7.279216766357422
    8. 'space' → logprob: -7.529216766357422
    9. 'x' → logprob: -8.529216766357422
    10. ' x' → logprob: -8.779216766357422

Token 6: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6933844685554504
    2. ' =' → logprob: -0.6933844685554504
    3. ',' → logprob: -8.443384170532227
    4. ')' → logprob: -11.193384170532227
    5. ' ' → logprob: -13.193384170532227
    6. ' ,' → logprob: -13.318384170532227
    7. ' =
' → logprob: -14.068384170532227
    8. '[' → logprob: -14.443384170532227
    9. '.' → logprob: -14.568384170532227
    10. '=

' → logprob: -14.943384170532227

Token 7: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.1443781852722168
    2. 'map' → logprob: -2.019378185272217
    3. 'int' → logprob: -7.644378185272217
    4. ' int' → logprob: -7.644378185272217
    5. ' ' → logprob: -7.894378185272217
    6. '10' → logprob: -8.519378662109375
    7. '0' → logprob: -9.394378662109375
    8. ' input' → logprob: -10.644378662109375
    9. 'input' → logprob: -10.769378662109375
    10. '5' → logprob: -11.144378662109375

Token 8: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022794514894485474
    2. '(int' → logprob: -4.272794723510742
    3. '(lambda' → logprob: -5.272794723510742
    4. '(str' → logprob: -6.272794723510742
    5. '<|end|>' → logprob: -7.272794723510742
    6. '```' → logprob: -9.022794723510742
    7. '(
' → logprob: -9.522794723510742
    8. '()' → logprob: -9.522794723510742
    9. '(`' → logprob: -10.022794723510742
    10. '(len' → logprob: -10.147794723510742

Token 9: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.36245042085647583
    2. ')' → logprob: -1.737450361251831
    3. '(' → logprob: -2.362450361251831
    4. 'input' → logprob: -4.11245059967041
    5. ',' → logprob: -4.23745059967041
    6. '```' → logprob: -7.48745059967041
    7. ',input' → logprob: -7.48745059967041
    8. ' input' → logprob: -7.61245059967041
    9. '(int' → logprob: -8.48745059967041
    10. '`' → logprob: -8.61245059967041

Token 10: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.47408756613731384
    2. 'input' → logprob: -0.9740875959396362
    3. ')' → logprob: -11.599087715148926
    4. ' )' → logprob: -13.974087715148926
    5. '(input' → logprob: -15.224087715148926
    6. ' ' → logprob: -16.09908676147461
    7. ',input' → logprob: -16.09908676147461
    8. '=input' → logprob: -16.59908676147461
    9. '	input' → logprob: -17.47408676147461
    10. 'str' → logprob: -18.22408676147461

Token 11: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.35213831067085266
    2. '()' → logprob: -1.4771382808685303
    3. '().' → logprob: -3.7271382808685303
    4. '(' → logprob: -3.7271382808685303
    5. ')' → logprob: -4.727138519287109
    6. '('' → logprob: -5.602138519287109
    7. '(""))' → logprob: -5.852138519287109
    8. '(()' → logprob: -6.727138519287109
    9. '()))' → logprob: -7.227138519287109
    10. '());' → logprob: -7.477138519287109

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0024838652461767197
    2. 'strip' → logprob: -6.00248384475708
    3. 'rstrip' → logprob: -11.877484321594238
    4. 'read' → logprob: -14.377484321594238
    5. ' split' → logprob: -14.502484321594238
    6. '(split' → logprob: -16.627483367919922
    7. ')' → logprob: -16.752483367919922
    8. 'spl' → logprob: -17.377483367919922
    9. '_split' → logprob: -17.502483367919922
    10. ' strip' → logprob: -19.502483367919922

Token 13: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02350529655814171
    2. '))' → logprob: -3.773505210876465
    3. '())' → logprob: -8.773505210876465
    4. '`)' → logprob: -10.023505210876465
    5. '(' → logprob: -11.273505210876465
    6. '()' → logprob: -11.523505210876465
    7. '),' → logprob: -11.898505210876465
    8. ')))' → logprob: -12.148505210876465
    9. ')`' → logprob: -12.273505210876465
    10. '')' → logprob: -12.273505210876465

Token 14: 'x' (ID: 87)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.5519767999649048
    2. 'a' → logprob: -1.8019767999649048
    3. 'x' → logprob: -1.9269767999649048
    4. 's' → logprob: -2.1769766807556152
    5. 'for' → logprob: -2.9269766807556152
    6. '```' → logprob: -3.8019766807556152
    7. 'if' → logprob: -3.9269766807556152
    8. 'A' → logprob: -3.9269766807556152
    9. 'data' → logprob: -4.051976680755615
    10. 'max' → logprob: -4.301976680755615

Token 15: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5266596078872681
    2. 's' → logprob: -1.776659607887268
    3. '_' → logprob: -1.901659607887268
    4. '[i' → logprob: -3.0266594886779785
    5. '[:]' → logprob: -5.0266594886779785
    6. '1' → logprob: -5.1516594886779785
    7. ',' → logprob: -5.2766594886779785
    8. '0' → logprob: -5.5266594886779785
    9. '[]' → logprob: -5.6516594886779785
    10. ' =' → logprob: -6.2766594886779785

Token 16: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.0310249328613281
    2. ' list' → logprob: -1.4060249328613281
    3. '[int' → logprob: -2.406024932861328
    4. '[' → logprob: -2.406024932861328
    5. '[]' → logprob: -2.406024932861328
    6. ' []' → logprob: -2.781024932861328
    7. ' [' → logprob: -2.906024932861328
    8. '[list' → logprob: -5.156024932861328
    9. 'int' → logprob: -6.656024932861328
    10. '[input' → logprob: -7.031024932861328

Token 17: 'count' (ID: 5420)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007785348570905626
    2. ' for' → logprob: -7.375778675079346
    3. '_' → logprob: -9.375778198242188
    4. 'x' → logprob: -9.875778198242188
    5. '[' → logprob: -12.875778198242188
    6. 'i' → logprob: -12.875778198242188
    7. '0' → logprob: -13.375778198242188
    8. '```' → logprob: -13.500778198242188
    9. '	for' → logprob: -13.500778198242188
    10. 'n' → logprob: -14.125778198242188

Token 18: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4822307825088501
    2. '=' → logprob: -1.48223078250885
    3. ' =' → logprob: -2.1072306632995605
    4. '_' → logprob: -3.4822306632995605
    5. 's' → logprob: -6.7322306632995605
    6. ' ' → logprob: -7.4822306632995605
    7. '[' → logprob: -7.8572306632995605
    8. ' (' → logprob: -8.357231140136719
    9. ',' → logprob: -8.857231140136719
    10. ')' → logprob: -9.107231140136719

Token 19: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03804768621921539
    2. ' ' → logprob: -3.2880477905273438
    3. '1' → logprob: -12.288047790527344
    4. '[' → logprob: -15.288047790527344
    5. '   ' → logprob: -15.475547790527344
    6. '  ' → logprob: -15.600547790527344
    7. 'int' → logprob: -15.975547790527344
    8. '{}' → logprob: -15.975547790527344
    9. '{' → logprob: -16.225547790527344
    10. '=' → logprob: -16.288047790527344

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010926496179308742
    2. ' ' → logprob: -9.125109672546387
    3. '1' → logprob: -16.37510871887207
    4. 'int' → logprob: -16.87510871887207
    5. '=' → logprob: -17.37510871887207
    6. '[' → logprob: -17.93760871887207
    7. '```' → logprob: -18.00010871887207
    8. '  ' → logprob: -18.50010871887207
    9. '000' → logprob: -18.62510871887207
    10. '100' → logprob: -18.62510871887207

Token 21: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002512639155611396
    2. ' for' → logprob: -6.002512454986572
    3. '
' → logprob: -11.25251293182373
    4. '\n' → logprob: -12.25251293182373
    5. '' → logprob: -12.37751293182373
    6. 'x' → logprob: -12.75251293182373
    7. '<|end|>' → logprob: -12.75251293182373
    8. '```' → logprob: -12.87751293182373
    9. '\' → logprob: -13.25251293182373
    10. '	for' → logprob: -14.25251293182373

Token 22: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -3.130576806142926e-05
    2. ' for' → logprob: -10.375031471252441
    3. '	for' → logprob: -17.250030517578125
    4. '
' → logprob: -17.500030517578125
    5. '```' → logprob: -18.375030517578125
    6. '<|end|>' → logprob: -18.500030517578125
    7. 'x' → logprob: -19.000030517578125
    8. 'For' → logprob: -19.375030517578125
    9. ' 
' → logprob: -21.125030517578125
    10. '  
' → logprob: -21.500030517578125

Token 23: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4650161862373352
    2. ' i' → logprob: -1.2150161266326904
    3. ' _' → logprob: -2.5900161266326904
    4. '_' → logprob: -9.09001636505127
    5. '  ' → logprob: -11.09001636505127
    6. 'i' → logprob: -11.46501636505127
    7. ' I' → logprob: -11.96501636505127
    8. ' range' → logprob: -13.09001636505127
    9. '_i' → logprob: -13.59001636505127
    10. ' ' → logprob: -13.71501636505127

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03861718624830246
    2. 'in' → logprob: -3.2886171340942383
    3. ' ' → logprob: -7.538617134094238
    4. '	in' → logprob: -11.288617134094238
    5. '  ' → logprob: -11.413617134094238
    6. 'import' → logprob: -12.788617134094238
    7. '_' → logprob: -13.413617134094238
    8. ',' → logprob: -13.413617134094238
    9. 'In' → logprob: -13.788617134094238
    10. ')' → logprob: -13.788617134094238

Token 25: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16024494171142578
    2. 'range' → logprob: -1.9102449417114258
    3. ' ' → logprob: -11.785244941711426
    4. ' x' → logprob: -11.910244941711426
    5. 'x' → logprob: -13.285244941711426
    6. ' xrange' → logprob: -13.910244941711426
    7. '	range' → logprob: -14.160244941711426
    8. '  ' → logprob: -14.285244941711426
    9. ' in' → logprob: -14.785244941711426
    10. '   ' → logprob: -15.160244941711426

Token 26: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006542827934026718
    2. '(N' → logprob: -5.131542682647705
    3. ' (' → logprob: -7.756542682647705
    4. '(len' → logprob: -8.756543159484863
    5. '(n' → logprob: -11.131543159484863
    6. '(
' → logprob: -12.006543159484863
    7. ' ' → logprob: -13.381543159484863
    8. '(i' → logprob: -13.506543159484863
    9. '(range' → logprob: -13.881543159484863
    10. '(

' → logprob: -14.006543159484863

Token 27: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0009212272125296295
    2. '):
' → logprob: -7.250921249389648
    3. ')' → logprob: -9.000921249389648
    4. '-' → logprob: -10.375921249389648
    5. ' ):' → logprob: -10.500921249389648
    6. ':' → logprob: -10.750921249389648
    7. '+' → logprob: -12.625921249389648
    8. '   ' → logprob: -13.875921249389648
    9. '):
' → logprob: -13.875921249389648
    10. ' ' → logprob: -14.375921249389648

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06429284811019897
    2. ' x' → logprob: -3.6892929077148438
    3. ' ' → logprob: -4.439292907714844
    4. 'x' → logprob: -4.564292907714844
    5. '    
' → logprob: -5.189292907714844
    6. ' 
' → logprob: -5.314292907714844
    7. '```' → logprob: -6.564292907714844
    8. '    ' → logprob: -6.939292907714844
    9. '<|end|>' → logprob: -7.564292907714844
    10. ' ```' → logprob: -8.314292907714844

Token 29: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.4484863877296448
    2. 'a' → logprob: -1.198486328125
    3. 'xi' → logprob: -3.823486328125
    4. ' x' → logprob: -4.573486328125
    5. ' a' → logprob: -5.198486328125
    6. '   ' → logprob: -5.448486328125
    7. 'data' → logprob: -5.448486328125
    8. 'int' → logprob: -6.573486328125
    9. '_x' → logprob: -6.698486328125
    10. '_' → logprob: -6.698486328125

Token 30: '.append' (ID: 3709)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5759498476982117
    2. '.append' → logprob: -0.8259498476982117
    3. '.app' → logprob: -12.200949668884277
    4. '.extend' → logprob: -13.575949668884277
    5. 'append' → logprob: -13.825949668884277
    6. '.=' → logprob: -14.325949668884277
    7. '.ap' → logprob: -14.575949668884277
    8. ' .' → logprob: -14.825949668884277
    9. '=' → logprob: -14.825949668884277
    10. '.Append' → logprob: -15.575949668884277

Token 31: '(list' (ID: 13116)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9034175872802734
    2. '(list' → logprob: -0.9034175872802734
    3. '(float' → logprob: -2.5284175872802734
    4. '(int' → logprob: -2.9034175872802734
    5. '(tuple' → logprob: -2.9034175872802734
    6. '(math' → logprob: -10.278417587280273
    7. '((' → logprob: -10.528417587280273
    8. '([' → logprob: -10.653417587280273
    9. '(
' → logprob: -10.903417587280273
    10. '(map' → logprob: -11.028417587280273

Token 32: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -5.860340752406046e-05
    2. '(' → logprob: -9.7500581741333
    3. 'map' → logprob: -16.500059127807617
    4. '(int' → logprob: -17.125059127807617
    5. '(float' → logprob: -17.250059127807617
    6. ' (' → logprob: -17.500059127807617
    7. '(range' → logprob: -18.000059127807617
    8. '(math' → logprob: -18.000059127807617
    9. '(eval' → logprob: -18.125059127807617
    10. '	map' → logprob: -18.500059127807617

Token 33: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -8.208653162000701e-05
    2. '(float' → logprob: -9.500082015991211
    3. 'int' → logprob: -12.875082015991211
    4. '(' → logprob: -13.000082015991211
    5. '<int' → logprob: -13.625082015991211
    6. ',int' → logprob: -14.750082015991211
    7. '=int' → logprob: -15.250082015991211
    8. '[int' → logprob: -15.500082015991211
    9. '```' → logprob: -16.25008201599121
    10. ' int' → logprob: -16.62508201599121

Token 34: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1335093230009079
    2. ',input' → logprob: -2.133509397506714
    3. ',' → logprob: -5.258509159088135
    4. 'input' → logprob: -7.133509159088135
    5. '(' → logprob: -7.633509159088135
    6. ' input' → logprob: -10.633509635925293
    7. '=input' → logprob: -10.633509635925293
    8. ')' → logprob: -12.383509635925293
    9. ' ,' → logprob: -12.508509635925293
    10. '	input' → logprob: -12.633509635925293

Token 35: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018150413408875465
    2. ' input' → logprob: -4.018150329589844
    3. '(input' → logprob: -14.893150329589844
    4. ',input' → logprob: -16.518150329589844
    5. '	input' → logprob: -17.143150329589844
    6. '=input' → logprob: -17.268150329589844
    7. 'x' → logprob: -17.893150329589844
    8. '<input' → logprob: -18.143150329589844
    9. ' ' → logprob: -18.268150329589844
    10. 'list' → logprob: -18.518150329589844

Token 36: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.644463479053229e-05
    2. '()' → logprob: -10.000046730041504
    3. ' ().' → logprob: -14.000046730041504
    4. '()))' → logprob: -17.250045776367188
    5. '>().' → logprob: -17.375045776367188
    6. '.' → logprob: -17.625045776367188
    7. '()
' → logprob: -17.750045776367188
    8. '   ' → logprob: -17.875045776367188
    9. '())))' → logprob: -18.000045776367188
    10. '(' → logprob: -18.250045776367188

Token 37: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6047699318733066e-05
    2. 'strip' → logprob: -11.500016212463379
    3. 'rstrip' → logprob: -12.125016212463379
    4. 'spl' → logprob: -15.750016212463379
    5. ' split' → logprob: -15.875016212463379
    6. '(split' → logprob: -16.250015258789062
    7. 's' → logprob: -17.500015258789062
    8. 'read' → logprob: -18.375015258789062
    9. 'plit' → logprob: -18.625015258789062
    10. 'sp' → logprob: -19.125015258789062

Token 38: '()))' (ID: 16829)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.4857274293899536
    2. ')))' → logprob: -1.2357274293899536
    3. '()))' → logprob: -3.110727310180664
    4. '())' → logprob: -3.735727310180664
    5. '()' → logprob: -4.110727310180664
    6. '(' → logprob: -5.235727310180664
    7. ')' → logprob: -5.860727310180664
    8. '))' → logprob: -7.360727310180664
    9. '())))
' → logprob: -8.110727310180664
    10. '))))' → logprob: -8.860727310180664

Token 39: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003187810070812702
    2. '))' → logprob: -9.12531852722168
    3. ' )' → logprob: -9.25031852722168
    4. '   ' → logprob: -9.50031852722168
    5. ')
' → logprob: -10.37531852722168
    6. ' ' → logprob: -12.12531852722168
    7. ')))' → logprob: -14.25031852722168
    8. '`)' → logprob: -15.12531852722168
    9. '  ' → logprob: -15.25031852722168
    10. '[' → logprob: -15.87531852722168

Token 40: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.387458365177736e-05
    2. ' for' → logprob: -9.500083923339844
    3. '```' → logprob: -12.250083923339844
    4. '``' → logprob: -12.750083923339844
    5. '
' → logprob: -14.000083923339844
    6. '   ' → logprob: -15.250083923339844
    7. '	for' → logprob: -16.875083923339844
    8. '  
' → logprob: -17.125083923339844
    9. '    
' → logprob: -17.375083923339844
    10. '\' → logprob: -18.125083923339844

Token 41: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.019573615863919258
    2. ' ' → logprob: -4.39457368850708
    3. ' j' → logprob: -5.01957368850708
    4. 'i' → logprob: -8.894573211669922
    5. '  ' → logprob: -8.894573211669922
    6. '_' → logprob: -9.394573211669922
    7. ' I' → logprob: -11.019573211669922
    8. ' space' → logprob: -11.144573211669922
    9. ' ' → logprob: -11.269573211669922
    10. ' _' → logprob: -11.769573211669922

Token 42: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.035188719630241394
    2. 'in' → logprob: -3.410188674926758
    3. ' ' → logprob: -6.535188674926758
    4. '+' → logprob: -9.910188674926758
    5. '  ' → logprob: -11.660188674926758
    6. ' i' → logprob: -11.785188674926758
    7. '	in' → logprob: -12.535188674926758
    8. '<|end|>' → logprob: -12.660188674926758
    9. '   ' → logprob: -12.910188674926758
    10. 'range' → logprob: -13.035188674926758

Token 43: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.048590321093797684
    2. 'range' → logprob: -3.0485904216766357
    3. '(range' → logprob: -13.298590660095215
    4. '	range' → logprob: -14.798590660095215
    5. ' xrange' → logprob: -15.048590660095215
    6. ' ' → logprob: -15.173590660095215
    7. '```' → logprob: -16.7985897064209
    8. ')' → logprob: -16.9235897064209
    9. ' rang' → logprob: -17.0485897064209
    10. ' r' → logprob: -17.6735897064209

Token 44: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.38732555508613586
    2. '(' → logprob: -1.1373255252838135
    3. ' (' → logprob: -7.887325763702393
    4. '(n' → logprob: -10.012325286865234
    5. '(len' → logprob: -10.762325286865234
    6. '(
' → logprob: -12.512325286865234
    7. '(range' → logprob: -13.512325286865234
    8. '(i' → logprob: -13.637325286865234
    9. ' ' → logprob: -13.637325286865234
    10. '(M' → logprob: -14.012325286865234

Token 45: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.043930668383836746
    2. '+' → logprob: -3.168930768966675
    3. '):
' → logprob: -7.543930530548096
    4. '-' → logprob: -8.543931007385254
    5. ' ):' → logprob: -9.293931007385254
    6. ' +' → logprob: -9.668931007385254
    7. ')' → logprob: -10.043931007385254
    8. ' -' → logprob: -12.668931007385254
    9. '):

' → logprob: -13.918931007385254
    10. '   ' → logprob: -14.293931007385254

Token 46: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1970452517271042
    2. '   ' → logprob: -2.19704532623291
    3. 'for' → logprob: -2.69704532623291
    4. ' ' → logprob: -9.07204532623291
    5. '	for' → logprob: -9.32204532623291
    6. '```' → logprob: -9.69704532623291
    7. '  ' → logprob: -10.69704532623291
    8. '+' → logprob: -12.32204532623291
    9. '    ' → logprob: -12.82204532623291
    10. ' ```' → logprob: -13.07204532623291

Token 47: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014277744106948376
    2. ' for' → logprob: -4.264277935028076
    3. 'range' → logprob: -9.764277458190918
    4. '   ' → logprob: -10.014277458190918
    5. ' range' → logprob: -11.639277458190918
    6. '```' → logprob: -13.139277458190918
    7. 'j' → logprob: -14.264277458190918
    8. ' j' → logprob: -15.264277458190918
    9. '	for' → logprob: -15.639277458190918
    10. '_for' → logprob: -16.889278411865234

Token 48: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.381450891494751
    2. ' range' → logprob: -1.256450891494751
    3. 'range' → logprob: -4.006450653076172
    4. 'j' → logprob: -4.256450653076172
    5. ' ' → logprob: -10.381450653076172
    6. ' i' → logprob: -10.631450653076172
    7. '(range' → logprob: -10.881450653076172
    8. ' (' → logprob: -12.381450653076172
    9. ' xrange' → logprob: -12.631450653076172
    10. '_range' → logprob: -12.881450653076172

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16065596044063568
    2. 'in' → logprob: -1.9106559753417969
    3. ' ' → logprob: -8.660655975341797
    4. ' i' → logprob: -9.410655975341797
    5. '	in' → logprob: -9.910655975341797
    6. 'range' → logprob: -10.285655975341797
    7. '(' → logprob: -10.535655975341797
    8. '   ' → logprob: -11.160655975341797
    9. 'i' → logprob: -11.160655975341797
    10. ' range' → logprob: -12.035655975341797

Token 50: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20161789655685425
    2. 'range' → logprob: -1.701617956161499
    3. ' i' → logprob: -9.076618194580078
    4. 'i' → logprob: -9.826618194580078
    5. '(range' → logprob: -10.326618194580078
    6. ' ' → logprob: -13.576618194580078
    7. '	range' → logprob: -13.701618194580078
    8. '(i' → logprob: -14.326618194580078
    9. ' xrange' → logprob: -15.326618194580078
    10. '_range' → logprob: -16.701618194580078

Token 51: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0005319446790963411
    2. '(' → logprob: -7.625532150268555
    3. '(N' → logprob: -10.125532150268555
    4. '(j' → logprob: -13.625532150268555
    5. ' (' → logprob: -13.750532150268555
    6. 'i' → logprob: -14.250532150268555
    7. '(range' → logprob: -14.875532150268555
    8. '(
' → logprob: -15.875532150268555
    9. '(I' → logprob: -16.000532150268555
    10. ')' → logprob: -16.250532150268555

Token 52: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026307502761483192
    2. ' +' → logprob: -3.6513075828552246
    3. '1' → logprob: -12.401307106018066
    4. '+
' → logprob: -13.526307106018066
    5. '+i' → logprob: -14.151307106018066
    6. ' +
' → logprob: -15.526307106018066
    7. '+)' → logprob: -15.526307106018066
    8. ' ' → logprob: -15.526307106018066
    9. '+j' → logprob: -15.526307106018066
    10. '   ' → logprob: -16.026308059692383

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.036524842376821e-05
    2. ' ' → logprob: -10.125040054321289
    3. '<|end|>' → logprob: -15.875040054321289
    4. '   ' → logprob: -17.75004005432129
    5. '<|end|>' → logprob: -18.75004005432129
    6. '```' → logprob: -18.81254005432129
    7. '１' → logprob: -19.37504005432129
    8. '  ' → logprob: -19.37504005432129
    9. '१' → logprob: -19.56254005432129
    10. '    ' → logprob: -19.62504005432129

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.625003814697266
    3. '<|end|>' → logprob: -16.125003814697266
    4. '```' → logprob: -17.250003814697266
    5. '   ' → logprob: -18.062503814697266
    6. 'i' → logprob: -18.437503814697266
    7. '0' → logprob: -18.500003814697266
    8. '१' → logprob: -19.000003814697266
    9. '১' → logprob: -19.187503814697266
    10. '<|end|>' → logprob: -19.250003814697266

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002423217985779047
    2. ' ,' → logprob: -6.252423286437988
    3. ',N' → logprob: -7.627423286437988
    4. 'N' → logprob: -12.127423286437988
    5. '   ' → logprob: -14.127423286437988
    6. ',n' → logprob: -14.502423286437988
    7. '<|end|>' → logprob: -15.252423286437988
    8. '(),' → logprob: -15.752423286437988
    9. ',
' → logprob: -16.002422332763672
    10. ' N' → logprob: -16.002422332763672

Token 56: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0031796174589544535
    2. ' N' → logprob: -5.753179550170898
    3. '   ' → logprob: -13.503179550170898
    4. ' ' → logprob: -15.128179550170898
    5. '	N' → logprob: -15.253179550170898
    6. '  ' → logprob: -17.2531795501709
    7. 'n' → logprob: -17.3781795501709
    8. ')' → logprob: -17.3781795501709
    9. '    ' → logprob: -17.5031795501709
    10. '<N' → logprob: -18.5031795501709

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018268341955263168
    2. '):
' → logprob: -8.87518310546875
    3. ':' → logprob: -11.12518310546875
    4. ' ):' → logprob: -11.12518310546875
    5. ')' → logprob: -11.37518310546875
    6. '   ' → logprob: -14.37518310546875
    7. '():' → logprob: -14.87518310546875
    8. '):

' → logprob: -15.50018310546875
    9. '):
' → logprob: -16.00018310546875
    10. ')):' → logprob: -16.12518310546875

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012942441739141941
    2. '        
' → logprob: -5.262942314147949
    3. ' ' → logprob: -6.762942314147949
    4. ':' → logprob: -6.887942314147949
    5. ' 
' → logprob: -7.137942314147949
    6. '    ' → logprob: -7.262942314147949
    7. '        ' → logprob: -7.262942314147949
    8. '   ' → logprob: -7.512942314147949
    9. '     ' → logprob: -8.26294231414795
    10. '      ' → logprob: -8.51294231414795

Token 59: ' s' (ID: 265)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.5537726283073425
    2. '           ' → logprob: -1.5537726879119873
    3. ' dx' → logprob: -1.9287726879119873
    4. 'distance' → logprob: -3.9287726879119873
    5. 'dist' → logprob: -4.303772449493408
    6. '   ' → logprob: -4.803772449493408
    7. 'd' → logprob: -5.303772449493408
    8. '       ' → logprob: -5.553772449493408
    9. ' math' → logprob: -5.803772449493408
    10. 'math' → logprob: -5.803772449493408

Token 60: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.06703680753707886
    2. 'q' → logprob: -2.9420368671417236
    3. 'qrt' → logprob: -5.8170366287231445
    4. '=' → logprob: -5.8170366287231445
    5. ' =' → logprob: -6.9420366287231445
    6. 'quared' → logprob: -6.9420366287231445
    7. 'u' → logprob: -7.1920366287231445
    8. 'quare' → logprob: -7.8170366287231445
    9. 'x' → logprob: -7.9420366287231445
    10. 'qr' → logprob: -8.192036628723145

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022971592843532562
    2. 'sum' → logprob: -6.3772969245910645
    3. 'math' → logprob: -7.6272969245910645
    4. ' ' → logprob: -9.377297401428223
    5. ' sum' → logprob: -11.877297401428223
    6. ' math' → logprob: -12.127297401428223
    7. '   ' → logprob: -12.752297401428223
    8. '1' → logprob: -12.877297401428223
    9. '[' → logprob: -14.127297401428223
    10. 'm' → logprob: -14.377297401428223

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002570544835180044
    2. 'sum' → logprob: -6.252570629119873
    3. 'math' → logprob: -7.377570629119873
    4. '[' → logprob: -12.252570152282715
    5. ' ' → logprob: -12.877570152282715
    6. '1' → logprob: -13.002570152282715
    7. '[x' → logprob: -14.127570152282715
    8. 'x' → logprob: -14.377570152282715
    9. '(' → logprob: -14.502570152282715
    10. '2' → logprob: -14.752570152282715

Token 63: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0228671096265316
    2. '<|end|>' → logprob: -4.022867202758789
    3. '           ' → logprob: -6.022867202758789
    4. '               ' → logprob: -7.397867202758789
    5. '   ' → logprob: -7.647867202758789
    6. ' ' → logprob: -7.772867202758789
    7. '      ' → logprob: -8.647867202758789
    8. '        ' → logprob: -9.397867202758789
    9. '          ' → logprob: -9.647867202758789
    10. '
' → logprob: -9.772867202758789

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006122417747974396
    2. '<|end|>' → logprob: -6.131122589111328
    3. 'for' → logprob: -6.256122589111328
    4. ' for' → logprob: -7.006122589111328
    5. '
' → logprob: -8.006122589111328
    6. '           ' → logprob: -8.381122589111328
    7. ' ' → logprob: -9.256122589111328
    8. '   ' → logprob: -9.631122589111328
    9. '               ' → logprob: -9.756122589111328
    10. '        
' → logprob: -9.881122589111328

Token 65: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011311646550893784
    2. ' for' → logprob: -4.6363115310668945
    3. '       ' → logprob: -7.2613115310668945
    4. ' ' → logprob: -7.5113115310668945
    5. 's' → logprob: -10.011311531066895
    6. '        ' → logprob: -10.136311531066895
    7. '           ' → logprob: -10.136311531066895
    8. '**' → logprob: -10.511311531066895
    9. '   ' → logprob: -11.011311531066895
    10. '  ' → logprob: -11.386311531066895

Token 66: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0005656610010191798
    2. ' k' → logprob: -7.500565528869629
    3. 'd' → logprob: -11.375565528869629
    4. 'a' → logprob: -14.000565528869629
    5. 'c' → logprob: -16.375566482543945
    6. 'l' → logprob: -16.625566482543945
    7. ' ' → logprob: -17.125566482543945
    8. 't' → logprob: -17.750566482543945
    9. ' d' → logprob: -17.750566482543945
    10. 'x' → logprob: -18.000566482543945

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021974791307002306
    2. 'in' → logprob: -6.127197265625
    3. ' ' → logprob: -12.377197265625
    4. '   ' → logprob: -12.627197265625
    5. '<|end|>' → logprob: -13.752197265625
    6. 'range' → logprob: -14.002197265625
    7. '    ' → logprob: -14.127197265625
    8. '	in' → logprob: -14.752197265625
    9. ',' → logprob: -15.002197265625
    10. '  ' → logprob: -15.002197265625

Token 68: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12693272531032562
    2. ' range' → logprob: -2.1269326210021973
    3. '(range' → logprob: -12.501933097839355
    4. '	range' → logprob: -14.126933097839355
    5. 'x' → logprob: -16.37693214416504
    6. ' xrange' → logprob: -16.62693214416504
    7. '_range' → logprob: -17.50193214416504
    8. '.range' → logprob: -17.62693214416504
    9. 'rang' → logprob: -18.25193214416504
    10. 'ange' → logprob: -18.50193214416504

Token 69: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.0002492999192327261
    2. '(' → logprob: -8.500248908996582
    3. 'D' → logprob: -10.750248908996582
    4. '(len' → logprob: -10.750248908996582
    5. '(d' → logprob: -14.125248908996582
    6. '(N' → logprob: -14.625248908996582
    7. ' (' → logprob: -14.875248908996582
    8. '(
' → logprob: -15.000248908996582
    9. 'len' → logprob: -15.625248908996582
    10. '(M' → logprob: -15.750248908996582

Token 70: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0034116776660084724
    2. '):
' → logprob: -5.753411769866943
    3. ' ):' → logprob: -8.878411293029785
    4. '       ' → logprob: -10.003411293029785
    5. '           ' → logprob: -11.003411293029785
    6. ':' → logprob: -11.128411293029785
    7. '   ' → logprob: -11.753411293029785
    8. ')' → logprob: -12.128411293029785
    9. '):
' → logprob: -13.378411293029785
    10. ' ):
' → logprob: -14.253411293029785

Token 71: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10172681510448456
    2. 's' → logprob: -2.351726770401001
    3. ' s' → logprob: -6.85172700881958
    4. ' ' → logprob: -9.101726531982422
    5. '               ' → logprob: -9.101726531982422
    6. '<|end|>' → logprob: -9.601726531982422
    7. '            
' → logprob: -10.101726531982422
    8. '          ' → logprob: -10.226726531982422
    9. '            ' → logprob: -10.726726531982422
    10. '       ' → logprob: -10.976726531982422

Token 72: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.3023099899291992
    2. '           ' → logprob: -1.5523099899291992
    3. '               ' → logprob: -3.552309989929199
    4. ' s' → logprob: -3.927309989929199
    5. ' ' → logprob: -7.927309989929199
    6. '            ' → logprob: -8.8023099899292
    7. '          ' → logprob: -9.8023099899292
    8. '             ' → logprob: -10.3023099899292
    9. '       ' → logprob: -10.4273099899292
    10. '                   ' → logprob: -10.5523099899292

Token 73: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.027195267379283905
    2. ' +=' → logprob: -3.9021952152252197
    3. '+=(' → logprob: -5.027195453643799
    4. '+' → logprob: -10.15219497680664
    5. ']+=' → logprob: -11.02719497680664
    6. '=' → logprob: -12.15219497680664
    7. '   ' → logprob: -12.15219497680664
    8. '	' → logprob: -12.90219497680664
    9. '+='' → logprob: -13.15219497680664
    10. '+="' → logprob: -14.15219497680664

Token 74: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.39813899993896484
    2. ' (' → logprob: -1.1481389999389648
    3. '(abs' → logprob: -5.273138999938965
    4. '(math' → logprob: -5.523138999938965
    5. '(pow' → logprob: -6.898138999938965
    6. '   ' → logprob: -7.148138999938965
    7. '(' → logprob: -9.398138999938965
    8. '(a' → logprob: -10.273138999938965
    9. 'pow' → logprob: -10.898138999938965
    10. '(s' → logprob: -11.023138999938965

Token 75: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1279553291387856e-05
    2. '(x' → logprob: -12.125011444091797
    3. ' x' → logprob: -12.125011444091797
    4. ')x' → logprob: -15.375011444091797
    5. '	x' → logprob: -16.125011444091797
    6. '   ' → logprob: -16.500011444091797
    7. '[x' → logprob: -19.625011444091797
    8. ')' → logprob: -19.875011444091797
    9. '{x' → logprob: -20.250011444091797
    10. ' (' → logprob: -20.250011444091797

Token 76: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00023405285901390016
    2. '[j' → logprob: -8.37523365020752
    3. '[k' → logprob: -13.37523365020752
    4. '[' → logprob: -13.50023365020752
    5. 'i' → logprob: -15.62523365020752
    6. '[I' → logprob: -16.250234603881836
    7. '[x' → logprob: -16.500234603881836
    8. ')[' → logprob: -16.750234603881836
    9. ' [' → logprob: -16.875234603881836
    10. '```' → logprob: -18.000234603881836

Token 77: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -6.456358823925257e-05
    2. '][' → logprob: -9.875064849853516
    3. 'k' → logprob: -12.000064849853516
    4. '[' → logprob: -12.250064849853516
    5. ' [' → logprob: -13.375064849853516
    6. '[i' → logprob: -16.125064849853516
    7. ' k' → logprob: -16.750064849853516
    8. '[m' → logprob: -17.375064849853516
    9. '[l' → logprob: -17.375064849853516
    10. '[j' → logprob: -17.500064849853516

Token 78: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.320199877838604e-07
    2. ' k' → logprob: -14.875
    3. '[k' → logprob: -18.625
    4. '	k' → logprob: -19.0
    5. 'к' → logprob: -20.75
    6. '"k' → logprob: -20.75
    7. '```' → logprob: -21.75
    8. ' ' → logprob: -21.75
    9. '][' → logprob: -22.25
    10. '-k' → logprob: -22.25

Token 79: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.42882370948791504
    2. '-' → logprob: -1.053823709487915
    3. ']' → logprob: -10.053823471069336
    4. '-x' → logprob: -10.303823471069336
    5. ' ' → logprob: -10.803823471069336
    6. ')' → logprob: -11.178823471069336
    7. '   ' → logprob: -12.553823471069336
    8. ']-' → logprob: -13.053823471069336
    9. '  ' → logprob: -13.928823471069336
    10. '-
' → logprob: -14.553823471069336

Token 80: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.474081814289093
    2. ' -' → logprob: -0.974081814289093
    3. '-x' → logprob: -13.349081993103027
    4. ' ' → logprob: -13.599081993103027
    5. ' ' → logprob: -14.349081993103027
    6. '-
' → logprob: -14.974081993103027
    7. ' -
' → logprob: -15.599081993103027
    8. '   ' → logprob: -15.724081993103027
    9. '	' → logprob: -15.849081993103027
    10. '  ' → logprob: -15.974081993103027

Token 81: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007627330720424652
    2. ' x' → logprob: -4.882627487182617
    3. '<|end|>' → logprob: -11.007627487182617
    4. ')x' → logprob: -12.632627487182617
    5. ')' → logprob: -14.632627487182617
    6. '	x' → logprob: -14.882627487182617
    7. '<|end|>' → logprob: -15.382627487182617
    8. ' ' → logprob: -15.632627487182617
    9. '  ' → logprob: -17.007627487182617
    10. '   ' → logprob: -17.632627487182617

Token 82: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.869017852295656e-06
    2. '[' → logprob: -12.875006675720215
    3. 'i' → logprob: -13.500006675720215
    4. '[j' → logprob: -13.625006675720215
    5. '[I' → logprob: -14.250006675720215
    6. '][' → logprob: -14.375006675720215
    7. ' [' → logprob: -16.12500762939453
    8. '```' → logprob: -16.50000762939453
    9. '[k' → logprob: -17.12500762939453
    10. '{i' → logprob: -17.37500762939453

Token 83: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00021903318702243268
    2. '[k' → logprob: -8.750219345092773
    3. ']' → logprob: -10.375219345092773
    4. ' ][' → logprob: -11.000219345092773
    5. '[' → logprob: -12.375219345092773
    6. '])' → logprob: -13.375219345092773
    7. '[j' → logprob: -13.625219345092773
    8. '"][' → logprob: -13.875219345092773
    9. ')][' → logprob: -14.000219345092773
    10. ''][' → logprob: -14.375219345092773

Token 84: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.6240566083070007e-06
    2. ' k' → logprob: -13.375001907348633
    3. '[k' → logprob: -17.625001907348633
    4. '	k' → logprob: -17.750001907348633
    5. '```' → logprob: -18.875001907348633
    6. '<|end|>' → logprob: -19.000001907348633
    7. '1' → logprob: -19.250001907348633
    8. ' ' → logprob: -19.375001907348633
    9. '   ' → logprob: -19.500001907348633
    10. ')' → logprob: -19.500001907348633

Token 85: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09088921546936035
    2. ')**' → logprob: -2.4658892154693604
    3. '])' → logprob: -6.840888977050781
    4. ' )' → logprob: -7.215888977050781
    5. '）' → logprob: -10.215888977050781
    6. '   ' → logprob: -10.215888977050781
    7. '       ' → logprob: -10.715888977050781
    8. '))' → logprob: -11.215888977050781
    9. '`)' → logprob: -11.840888977050781
    10. '})' → logprob: -11.840888977050781

Token 86: ' **' (ID: 6240)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.19288483262062073
    2. '**' → logprob: -2.442884922027588
    3. ')**' → logprob: -3.067884922027588
    4. ')' → logprob: -3.192884922027588
    5. ' **' → logprob: -8.31788444519043
    6. ' ' → logprob: -8.44288444519043
    7. '```' → logprob: -8.69288444519043
    8. '*' → logprob: -8.81788444519043
    9. ' )' → logprob: -9.44288444519043
    10. ']' → logprob: -10.19288444519043

Token 87: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '   ' → logprob: -17.00020408630371
    4. '```' → logprob: -17.00020408630371
    5. '۲' → logprob: -17.25020408630371
    6. '  ' → logprob: -17.25020408630371
    7. '２' → logprob: -17.75020408630371
    8. '    ' → logprob: -18.37520408630371
    9. ' ' → logprob: -18.56270408630371
    10. '﻿' → logprob: -18.62520408630371

Token 88: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.000431861262768507
    2. ' ' → logprob: -7.750432014465332
    3. '```' → logprob: -15.125432014465332
    4. '  ' → logprob: -16.000431060791016
    5. '   ' → logprob: -16.062931060791016
    6. '۲' → logprob: -16.187931060791016
    7. '(' → logprob: -17.000431060791016
    8. '

' → logprob: -17.125431060791016
    9. '
' → logprob: -17.250431060791016
    10. ' ' → logprob: -17.312931060791016

Token 89: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3083592355251312
    2. '       ' → logprob: -1.4333592653274536
    3. '        
' → logprob: -4.683359146118164
    4. ')' → logprob: -5.308359146118164
    5. '
' → logprob: -5.933359146118164
    6. '<|end|>' → logprob: -6.308359146118164
    7. ' ' → logprob: -6.433359146118164
    8. '  
' → logprob: -6.433359146118164
    9. '   ' → logprob: -7.183359146118164
    10. ' 
' → logprob: -7.308359146118164

Token 90: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5233899354934692
    2. '
' → logprob: -1.0233899354934692
    3. '        
' → logprob: -3.7733898162841797
    4. '  
' → logprob: -5.27338981628418
    5. ' 
' → logprob: -5.52338981628418
    6. '   ' → logprob: -5.89838981628418
    7. 'if' → logprob: -6.27338981628418
    8. ' ' → logprob: -6.39838981628418
    9. '\n' → logprob: -6.39838981628418
    10. ')' → logprob: -6.39838981628418

Token 91: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.427202969789505
    2. '       ' → logprob: -1.6772029399871826
    3. ' if' → logprob: -2.3022029399871826
    4. '   ' → logprob: -3.4272029399871826
    5. 'distance' → logprob: -4.177203178405762
    6. '```' → logprob: -5.802203178405762
    7. '
' → logprob: -5.927203178405762
    8. '        
' → logprob: -6.302203178405762
    9. ' ' → logprob: -6.802203178405762
    10. 'import' → logprob: -7.427203178405762

Token 92: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.20680487155914307
    2. 'math' → logprob: -1.706804871559143
    3. ' int' → logprob: -5.7068047523498535
    4. 'int' → logprob: -6.4568047523498535
    5. ' ' → logprob: -8.581805229187012
    6. '(math' → logprob: -8.831805229187012
    7. ' s' → logprob: -10.331805229187012
    8. '   ' → logprob: -10.331805229187012
    9. ' m' → logprob: -10.581805229187012
    10. 'm' → logprob: -10.706805229187012

Token 93: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.12861484289169312
    2. '.' → logprob: -2.128614902496338
    3. '.is' → logprob: -6.753614902496338
    4. '.s' → logprob: -7.628614902496338
    5. '.isnan' → logprob: -11.25361442565918
    6. '.Sqrt' → logprob: -11.25361442565918
    7. '.pi' → logprob: -13.75361442565918
    8. ' .' → logprob: -13.87861442565918
    9. '.ceil' → logprob: -14.12861442565918
    10. '.dist' → logprob: -14.25361442565918

Token 94: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0001307142956648022
    2. '(' → logprob: -9.000130653381348
    3. 's' → logprob: -11.875130653381348
    4. ' (' → logprob: -15.125130653381348
    5. '(
' → logprob: -17.000131607055664
    6. '((' → logprob: -17.625131607055664
    7. '(count' → logprob: -18.625131607055664
    8. '(x' → logprob: -19.250131607055664
    9. ' ' → logprob: -19.500131607055664
    10. ')' → logprob: -19.625131607055664

Token 95: ')' (ID: 8)
  Prédit: ').'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.49369949102401733
    2. ')' → logprob: -0.9936994910240173
    3. ')%' → logprob: -3.993699550628662
    4. ')==' → logprob: -8.118699073791504
    5. ' ).' → logprob: -8.368699073791504
    6. ')<=' → logprob: -8.368699073791504
    7. '%' → logprob: -8.868699073791504
    8. ' )' → logprob: -9.868699073791504
    9. '<=' → logprob: -11.993699073791504
    10. ')`' → logprob: -12.243699073791504

Token 96: ' ==' (ID: 951)
  Prédit: '.is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.6470171809196472
    2. '.' → logprob: -1.272017240524292
    3. '==' → logprob: -2.147017240524292
    4. '%' → logprob: -2.647017240524292
    5. '<=' → logprob: -6.147017002105713
    6. ').' → logprob: -6.522017002105713
    7. '%.' → logprob: -6.522017002105713
    8. ' ==' → logprob: -6.772017002105713
    9. 'is' → logprob: -6.772017002105713
    10. ' .' → logprob: -8.022017478942871

Token 97: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0024800582323223352
    2. ' int' → logprob: -6.0024800300598145
    3. '	int' → logprob: -13.502480506896973
    4. '(int' → logprob: -14.002480506896973
    5. 'round' → logprob: -14.877480506896973
    6. 'math' → logprob: -14.877480506896973
    7. '<int' → logprob: -15.002480506896973
    8. ' ' → logprob: -15.002480506896973
    9. '1' → logprob: -15.127480506896973
    10. '[int' → logprob: -15.127480506896973

Token 98: '(math' (ID: 86464)
  Prédit: '(math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.02981332130730152
    2. '(' → logprob: -3.529813289642334
    3. ' (' → logprob: -10.779813766479492
    4. 'math' → logprob: -10.904813766479492
    5. ' math' → logprob: -11.154813766479492
    6. '(s' → logprob: -11.904813766479492
    7. '(Math' → logprob: -13.404813766479492
    8. '(
' → logprob: -14.654813766479492
    9. '(round' → logprob: -16.029813766479492
    10. '(m' → logprob: -16.404813766479492

Token 99: '.sqrt' (ID: 38011)
  Prédit: '.sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.0015354545321315527
    2. '.' → logprob: -6.501535415649414
    3. 'sqrt' → logprob: -10.376535415649414
    4. ' sqrt' → logprob: -14.251535415649414
    5. ' .' → logprob: -14.626535415649414
    6. '.Sqrt' → logprob: -14.626535415649414
    7. '.floor' → logprob: -16.501535415649414
    8. '√' → logprob: -16.501535415649414
    9. '.math' → logprob: -16.751535415649414
    10. '.s' → logprob: -16.876535415649414

Token 100: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0006410692585632205
    2. '(math' → logprob: -8.000640869140625
    3. '(' → logprob: -8.250640869140625
    4. 's' → logprob: -10.125640869140625
    5. ' (' → logprob: -12.625640869140625
    6. 'math' → logprob: -14.500640869140625
    7. '(
' → logprob: -15.000640869140625
    8. '```' → logprob: -16.375640869140625
    9. ' ' → logprob: -16.875640869140625
    10. ')' → logprob: -17.250640869140625

Token 101: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.12314612418413162
    2. '))' → logprob: -2.8731460571289062
    3. '):' → logprob: -2.8731460571289062
    4. ')):
' → logprob: -6.998146057128906
    5. ')' → logprob: -7.373146057128906
    6. ' ))' → logprob: -8.248146057128906
    7. '(s' → logprob: -8.498146057128906
    8. 's' → logprob: -8.748146057128906
    9. ')):
' → logprob: -8.748146057128906
    10. '       ' → logprob: -8.998146057128906

Token 102: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017445837147533894
    2. '               ' → logprob: -9.125174522399902
    3. '            
' → logprob: -11.125174522399902
    4. '
' → logprob: -11.500174522399902
    5. ' count' → logprob: -11.625174522399902
    6. 'count' → logprob: -11.750174522399902
    7. '          ' → logprob: -12.375174522399902
    8. '		' → logprob: -13.000174522399902
    9. '       ' → logprob: -13.125174522399902
    10. '	       ' → logprob: -13.250174522399902

Token 103: ' count' (ID: 3605)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13243740797042847
    2. '               ' → logprob: -2.5074374675750732
    3. 'count' (adapté à ' count') → logprob: -3.6324374675750732
    4. ' count' → logprob: -4.132437229156494
    5. '       ' → logprob: -10.257437705993652
    6. '	count' → logprob: -11.882437705993652
    7. '
' → logprob: -12.132437705993652
    8. '                   ' → logprob: -12.632437705993652
    9. '   ' → logprob: -12.757437705993652
    10. '          ' → logprob: -13.007437705993652

Token 104: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6557836532592773
    2. '+=' → logprob: -0.7807836532592773
    3. '+' → logprob: -3.7807836532592773
    4. '[' → logprob: -10.530783653259277
    5. '=' → logprob: -10.780783653259277
    6. '++' → logprob: -11.280783653259277
    7. ' +' → logprob: -11.655783653259277
    8. ')' → logprob: -11.780783653259277
    9. '+='' → logprob: -11.780783653259277
    10. ']+=' → logprob: -12.155783653259277

Token 105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.500015258789062
    4. '           ' → logprob: -18.625015258789062
    5. '<|end|>' → logprob: -19.000015258789062
    6. '       ' → logprob: -19.250015258789062
    7. '```' → logprob: -19.250015258789062
    8. '+' → logprob: -19.500015258789062
    9. '  ' → logprob: -19.750015258789062
    10. '１' → logprob: -19.875015258789062

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '１' → logprob: -20.375
    4. '```' → logprob: -20.625
    5. '<|end|>' → logprob: -20.75
    6. '   ' → logprob: -21.25
    7. '۱' → logprob: -21.375
    8. 'count' → logprob: -21.75
    9. '१' → logprob: -22.125
    10. '2' → logprob: -22.5

Token 107: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00019257364328950644
    2. '
' → logprob: -8.750192642211914
    3. ' print' → logprob: -10.625192642211914
    4. ')' → logprob: -12.625192642211914
    5. '```' → logprob: -12.750192642211914
    6. '  
' → logprob: -14.000192642211914
    7. ' 
' → logprob: -14.375192642211914
    8. '

' → logprob: -14.500192642211914
    9. '
' → logprob: -14.875192642211914
    10. '(print' → logprob: -15.000192642211914

Token 108: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.15310683415737e-05
    2. ' print' → logprob: -11.375021934509277
    3. '
' → logprob: -11.625021934509277
    4. ')' → logprob: -14.500021934509277
    5. 'p' → logprob: -15.750021934509277
    6. 'pr' → logprob: -15.875021934509277
    7. '```' → logprob: -16.62502098083496
    8. '.print' → logprob: -16.87502098083496
    9. '
' → logprob: -17.25002098083496
    10. '(print' → logprob: -17.37502098083496

Token 109: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.5759466886520386
    2. '(' → logprob: -0.8259466886520386
    3. '(
' → logprob: -13.325946807861328
    4. '((' → logprob: -13.700946807861328
    5. '('' → logprob: -13.700946807861328
    6. ' (' → logprob: -13.950946807861328
    7. 'count' → logprob: -14.075946807861328
    8. '()' → logprob: -14.575946807861328
    9. '(print' → logprob: -15.325946807861328
    10. '(cnt' → logprob: -15.825946807861328

Token 110: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.500000953674316
    3. ')`' → logprob: -16.25
    4. '))' → logprob: -16.875
    5. '()' → logprob: -17.75
    6. '(' → logprob: -17.875
    7. '())' → logprob: -18.375
    8. ')
' → logprob: -18.5
    9. ')**' → logprob: -19.0
    10. ')}' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 108
Tokens correctement prédits (1ère position, stricte): 49
Tokens correctement prédits (1ère position, avec adaptation): 54
Tokens correctement prédits (top 10): 100
Précision stricte (1ère position): 45.37%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 92.59%
================================================================================
