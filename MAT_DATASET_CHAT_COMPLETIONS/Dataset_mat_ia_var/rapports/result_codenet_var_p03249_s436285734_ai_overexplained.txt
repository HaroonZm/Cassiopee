================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys  # Importation du module système pour la gestion d'entrée/sortie et des fonctionnalités systèmes
input = sys.stdin.readline  # Redéfinition de la fonction input avec une lecture plus rapide de ligne pour les grands inputs

# Lecture d'un entier N depuis l'entrée standard et conversion en entier avec int
N = int(input())

# Création d'une liste D :
# Index 0 contient None car les sommets sont numérotés à partir de 1.
# Ensuite, on lit N entiers depuis l'entrée, un pour chaque sommet, et on les place dans la liste.
D = [None] + [int(input()) for _ in range(N)]

# Création d'une liste parent :
# parent[i] contiendra le parent du sommet i. On initialise par None. 
# On met N+1 éléments car les sommets sont de 1 à N inclus (on ignore l'indice 0).
parent = [None] * (N + 1)

# Création de la liste size :
# size[i] servira à garder la taille du sous-arbre (nombre de sommets dedans, lui-même inclus) pour le sommet i.
# On met None à l'indice 0 car on ne l'utilise pas.
# Pour chaque sommet de 1 à N, la taille initiale du sous-arbre est 1 (lui-même).
size = [None] + [1] * N

# Création d'un dictionnaire pour associer à chaque valeur d (stockée dans D) l'indice i correspondant.
# Utile pour retrouver l'indice d'un sommet à partir de sa valeur D[i].
d_to_i = {d: i for i, d in enumerate(D)}

# Création d'une liste D_desc :
# On trie les valeurs D[1:] (celles associées aux sommets, car D[0] est None) dans l'ordre décroissant.
D_desc = sorted(D[1:], reverse=True)

# Création d'une liste D_subtree :
# D_subtree[i] servira à accumuler la somme des tailles des sous-arbres des enfants du sommet i.
# On l'initialise à zéro pour tous les sommets (positions 0 à N).
D_subtree = [0] * (N + 1)

# Initialisation d'une liste qui stockera les arêtes du résultat sous forme de chaînes 'i p'
edges = []

# On suppose a priori que la construction va réussir, donc bl = True
bl = True

# Parcours des valeurs de D dans l'ordre décroissant, sauf la dernière valeur (le "root")
for d in D_desc[:-1]:
    # Recherche de l'indice i correspondant à la valeur d dans le dictionnaire
    i = d_to_i[d]
    # Calcul de la valeur attendue du parent de ce sommet i
    # d est la valeur D[i]
    # On enlève N (nombre total de sommets)
    # puis on ajoute deux fois la taille du sous-arbre courant
    # Ce calcul est spécifique à l'algorithme ici (ex : reconstruction d'un arbre depuis la taille de sous-arbre)
    d_parent = d - N + 2 * size[i]
    # Vérification si la valeur du parent existe bien dans d_to_i (sinon impossible de construire l'arbre)
    if d_parent not in d_to_i:
        # Si on ne trouve pas un parent valide, on arrête tout et on marque échec
        bl = False
        break
    # Trouve l'indice du parent
    p = d_to_i[d_parent]
    # On ajoute cette arête au résultat sous la forme 'i p'
    edges.append('{} {}'.format(i, p))
    # On note que le parent du sommet i est p
    parent[i] = p
    # On met à jour la taille du sous-arbre du parent p en rajoutant la taille du sous-arbre i
    size[p] += size[i]
    # On additionne aussi à D_subtree[p] la somme des tailles des sous-arbres en-dessous de i, plus la taille de i lui-même
    D_subtree[p] += D_subtree[i] + size[i]

# Le sommet racine doit être le sommet à la valeur D_desc[-1] (plus petite valeur restante après la boucle)
root = d_to_i[D_desc[-1]]

# On vérifie une condition supplémentaire pour valider que la reconstruction est correcte :
# La somme des sous-arbres de la racine doit être égale à la valeur D[root] attendue
bl &= (D_subtree[root] == D[root])

# Si tout s'est bien passé, on affiche chaque arête, chacune sur une ligne (ordre de la construction)
if bl:
    print('\n'.join(edges))
# Sinon il n'existait pas de telle construction possible, on affiche -1
else:
    print(-1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.39417028427124023
    2. '\n' → logprob: -1.5191702842712402
    3. '\' → logprob: -2.7691702842712402
    4. '<|end|>' → logprob: -3.7691702842712402
    5. '' → logprob: -4.89417028427124
    6. 'import' → logprob: -5.51917028427124
    7. '\r' → logprob: -5.76917028427124
    8. '#' → logprob: -6.39417028427124
    9. 'newline' → logprob: -6.76917028427124
    10. ' ' → logprob: -7.01917028427124

Token 4: ' Import' (ID: 19998)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.058482568711042404
    2. '  ' → logprob: -3.0584826469421387
    3. '<|end|>' → logprob: -5.183482646942139
    4. '<|end|>' → logprob: -7.183482646942139
    5. 'import' → logprob: -7.558482646942139
    6. '!' → logprob: -7.683482646942139
    7. '.' → logprob: -7.683482646942139
    8. '[' → logprob: -8.55848217010498
    9. ' import' → logprob: -8.55848217010498
    10. '    ' → logprob: -8.80848217010498

Token 5: 'ation' (ID: 387)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005938397720456123
    2. ' .' → logprob: -6.005938529968262
    3. '<|end|>' → logprob: -6.630938529968262
    4. ' sys' → logprob: -8.380938529968262
    5. '<|end|>' → logprob: -8.505938529968262
    6. 'ing' → logprob: -8.505938529968262
    7. '.sys' → logprob: -8.630938529968262
    8. ' ' → logprob: -8.755938529968262
    9. '.system' → logprob: -8.880938529968262
    10. ',' → logprob: -8.880938529968262

Token 6: ' du' (ID: 1462)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006024303380399942
    2. '<|end|>' → logprob: -6.256024360656738
    3. ',' → logprob: -6.506024360656738
    4. 'import' → logprob: -6.631024360656738
    5. '<|end|>' → logprob: -8.381024360656738
    6. '\' → logprob: -8.506024360656738
    7. '.import' → logprob: -9.131024360656738
    8. '\n' → logprob: -9.131024360656738
    9. '```' → logprob: -9.256024360656738
    10. 'newline' → logprob: -9.631024360656738

Token 7: ' module' (ID: 8827)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.24465227127075195
    2. 'sys' → logprob: -2.244652271270752
    3. ' ' → logprob: -2.869652271270752
    4. ' module' → logprob: -4.119652271270752
    5. 's' → logprob: -4.619652271270752
    6. ' système' → logprob: -4.869652271270752
    7. ' os' → logprob: -5.494652271270752
    8. ' system' → logprob: -5.494652271270752
    9. 'os' → logprob: -5.869652271270752
    10. 'module' → logprob: -5.994652271270752

Token 8: ' système' (ID: 30034)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15606169402599335
    2. ' ' → logprob: -2.7810616493225098
    3. '<|end|>' → logprob: -4.03106164932251
    4. '' → logprob: -4.28106164932251
    5. ',' → logprob: -4.28106164932251
    6. '\n' → logprob: -4.40606164932251
    7. '\' → logprob: -4.90606164932251
    8. 'import' → logprob: -4.90606164932251
    9. '
' → logprob: -6.03106164932251
    10. '

' → logprob: -6.15606164932251

Token 9: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0595905780792236
    2. '\n' → logprob: -1.5595905780792236
    3. '' → logprob: -2.0595905780792236
    4. 'import' → logprob: -2.3095905780792236
    5. ' ' → logprob: -2.6845905780792236
    6. '\' → logprob: -2.9345905780792236
    7. '
' → logprob: -3.1845905780792236
    8. '<|end|>' → logprob: -3.9345905780792236
    9. ',' → logprob: -4.8095903396606445
    10. '

' → logprob: -4.9345903396606445

Token 10: ' la' (ID: 557)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.803942859172821
    2. 'l' → logprob: -1.8039429187774658
    3. ' la' → logprob: -2.053942918777466
    4. 'la' → logprob: -2.928942918777466
    5. 'g' → logprob: -2.928942918777466
    6. ' l' → logprob: -3.553942918777466
    7. ' manip' → logprob: -3.803942918777466
    8. 'r' → logprob: -4.303942680358887
    9. 'inter' → logprob: -4.553942680358887
    10. ' permettre' → logprob: -4.678942680358887

Token 11: ' gestion' (ID: 29607)
  Prédit: 'gestion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gestion' → logprob: -0.03667409345507622
    2. 'lecture' → logprob: -3.9116740226745605
    3. ' gestion' → logprob: -4.7866740226745605
    4. 'man' → logprob: -5.9116740226745605
    5. 'prise' → logprob: -7.0366740226745605
    6. 's' → logprob: -7.1616740226745605
    7. 'compat' → logprob: -7.5366740226745605
    8. 'import' → logprob: -7.9116740226745605
    9. ' manipulation' → logprob: -8.036674499511719
    10. 'gest' → logprob: -8.036674499511719

Token 12: ' d' (ID: 272)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.4604671001434326
    2. '.' → logprob: -1.5854671001434326
    3. ' ' → logprob: -2.2104671001434326
    4. ',' → logprob: -2.3354671001434326
    5. '_' → logprob: -2.5854671001434326
    6. 'import' → logprob: -2.7104671001434326
    7. 's' → logprob: -2.8354671001434326
    8. ' de' → logprob: -2.9604671001434326
    9. '\n' → logprob: -3.9604671001434326
    10. '<|end|>' → logprob: -3.9604671001434326

Token 13: ''entrée' (ID: 115820)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.4447484314441681
    2. ''esp' → logprob: -2.0697484016418457
    3. 'e' → logprob: -2.8197484016418457
    4. ''espace' → logprob: -3.1947484016418457
    5. ''e' → logprob: -3.5697484016418457
    6. ''' → logprob: -3.5697484016418457
    7. ''import' → logprob: -3.9447484016418457
    8. ''ex' → logprob: -4.194748401641846
    9. 's' → logprob: -4.694748401641846
    10. ''s' → logprob: -5.319748401641846

Token 14: '/s' (ID: 5031)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1697418689727783
    2. ',' → logprob: -1.6697418689727783
    3. 'import' → logprob: -1.7947418689727783
    4. '' → logprob: -2.1697418689727783
    5. '
' → logprob: -2.2947418689727783
    6. '.' → logprob: -2.9197418689727783
    7. '\' → logprob: -3.4197418689727783
    8. ' ' → logprob: -4.544741630554199
    9. '

' → logprob: -5.044741630554199
    10. '#' → logprob: -6.169741630554199

Token 15: 'ort' (ID: 390)
  Prédit: 'ort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.04909925162792206
    2. 'or' → logprob: -4.299099445343018
    3. 'o' → logprob: -4.299099445343018
    4. 'orti' → logprob: -4.674099445343018
    5. '```' → logprob: -6.549099445343018
    6. 'orts' → logprob: -6.924099445343018
    7. 't' → logprob: -7.049099445343018
    8. 'orte' → logprob: -7.174099445343018
    9. '>' → logprob: -7.299099445343018
    10. '/output' → logprob: -7.986599445343018

Token 16: 'ie' (ID: 396)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5481250882148743
    2. 'e' → logprob: -1.1731250286102295
    3. '()' → logprob: -3.5481250286102295
    4. 'u' → logprob: -3.7981250286102295
    5. 'es' → logprob: -4.048125267028809
    6. 's' → logprob: -4.423125267028809
    7. '.' → logprob: -4.923125267028809
    8. ')' → logprob: -5.673125267028809
    9. 'put' → logprob: -5.923125267028809
    10. 'a' → logprob: -6.048125267028809

Token 17: ' et' (ID: 859)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4059963524341583
    2. '
' → logprob: -1.780996322631836
    3. 'import' → logprob: -2.280996322631836
    4. '

' → logprob: -3.530996322631836
    5. '\' → logprob: -5.030996322631836
    6. '<|end|>' → logprob: -5.155996322631836
    7. ',' → logprob: -5.155996322631836
    8. '' → logprob: -5.280996322631836
    9. 'newline' → logprob: -5.780996322631836
    10. '```' → logprob: -6.030996322631836

Token 18: ' des' (ID: 731)
  Prédit: ' sortie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sortie' → logprob: -1.3326290845870972
    2. ' la' → logprob: -2.4576292037963867
    3. 'import' → logprob: -2.5826292037963867
    4. 'la' → logprob: -2.5826292037963867
    5. 'output' → logprob: -2.8326292037963867
    6. 'sort' → logprob: -2.8326292037963867
    7. ' manipulation' → logprob: -2.9576292037963867
    8. 'argv' → logprob: -2.9576292037963867
    9. ' l' → logprob: -3.3326292037963867
    10. ' gestion' → logprob: -3.9576292037963867

Token 19: ' fonctionnalités' (ID: 111283)
  Prédit: 'arguments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arguments' → logprob: -0.5873960256576538
    2. ' arguments' → logprob: -1.0873960256576538
    3. 'argv' → logprob: -3.4623961448669434
    4. ' argv' → logprob: -4.462396144866943
    5. 'arg' → logprob: -4.837396144866943
    6. ' argparse' → logprob: -5.337396144866943
    7. 'import' → logprob: -5.587396144866943
    8. ' fichiers' → logprob: -5.587396144866943
    9. ' chemins' → logprob: -5.587396144866943
    10. 'param' → logprob: -5.712396144866943

Token 20: ' systèmes' (ID: 79573)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1936283111572266
    2. '\n' → logprob: -1.6936283111572266
    3. 'import' → logprob: -1.8186283111572266
    4. ',' → logprob: -2.8186283111572266
    5. '.' → logprob: -2.9436283111572266
    6. '

' → logprob: -2.9436283111572266
    7. '' → logprob: -3.0686283111572266
    8. '\' → logprob: -3.1936283111572266
    9. '<|end|>' → logprob: -3.1936283111572266
    10. ' ' → logprob: -3.3186283111572266

Token 21: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38954949378967285
    2. '

' → logprob: -1.8895494937896729
    3. '\n' → logprob: -2.139549493789673
    4. '' → logprob: -3.764549493789673
    5. 'import' → logprob: -4.139549255371094
    6. '<|end|>' → logprob: -5.639549255371094
    7. '\' → logprob: -5.764549255371094
    8. ' ' → logprob: -6.389549255371094
    9. '
' → logprob: -7.139549255371094
    10. '.' → logprob: -7.139549255371094

Token 22: 'input' (ID: 2586)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0342289209365845
    2. '\n' → logprob: -1.4092289209365845
    3. 'import' → logprob: -1.6592289209365845
    4. '

' → logprob: -2.034228801727295
    5. '' → logprob: -3.534228801727295
    6. '<|end|>' → logprob: -4.159228801727295
    7. ',' → logprob: -4.534228801727295
    8. '\' → logprob: -5.034228801727295
    9. ' ' → logprob: -5.409228801727295
    10. '```' → logprob: -6.034228801727295

Token 23: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016849694773554802
    2. '.' → logprob: -4.141849517822266
    3. ' (' → logprob: -7.641849517822266
    4. '()' → logprob: -8.766849517822266
    5. ')' → logprob: -10.141849517822266
    6. '(
' → logprob: -10.516849517822266
    7. ' .' → logprob: -10.641849517822266
    8. '(.)' → logprob: -10.641849517822266
    9. ' ' → logprob: -11.641849517822266
    10. '(

' → logprob: -11.766849517822266

Token 24: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0797702968120575
    2. 'sys' → logprob: -2.57977032661438
    3. ' input' → logprob: -7.454770088195801
    4. 'input' → logprob: -8.2047700881958
    5. ' ' → logprob: -12.0797700881958
    6. '(sys' → logprob: -12.0797700881958
    7. '	sys' → logprob: -12.0797700881958
    8. '=sys' → logprob: -12.3297700881958
    9. ' lambda' → logprob: -12.4547700881958
    10. 'lambda' → logprob: -13.7047700881958

Token 25: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02346419170498848
    2. '.stdin' → logprob: -4.023464202880859
    3. ' .' → logprob: -5.648464202880859
    4. '.readline' → logprob: -7.023464202880859
    5. '.stdout' → logprob: -7.898464202880859
    6. '.argv' → logprob: -8.14846420288086
    7. '.setdefault' → logprob: -9.02346420288086
    8. '.exit' → logprob: -11.14846420288086
    9. '.stderr' → logprob: -11.14846420288086
    10. '.input' → logprob: -11.52346420288086

Token 26: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.4406781792640686
    2. '.' → logprob: -1.0656781196594238
    3. '.read' → logprob: -4.440678119659424
    4. '.readlines' → logprob: -9.940678596496582
    5. ' .' → logprob: -10.315678596496582
    6. '.Read' → logprob: -11.690678596496582
    7. 'read' → logprob: -12.190678596496582
    8. '.\' → logprob: -12.565678596496582
    9. '.write' → logprob: -12.690678596496582
    10. '.buffer' → logprob: -13.315678596496582

Token 27: ' ' (ID: 220)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09454529732465744
    2. '(' → logprob: -2.469545364379883
    3. '(
' → logprob: -5.844545364379883
    4. '()
' → logprob: -6.594545364379883
    5. '
' → logprob: -7.719545364379883
    6. '(

' → logprob: -8.594545364379883
    7. '()

' → logprob: -8.719545364379883
    8. '()\' → logprob: -8.969545364379883
    9. ')' → logprob: -9.594545364379883
    10. ' ' → logprob: -9.719545364379883

Token 28: ' #' (ID: 1069)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11309190839529037
    2. '(' → logprob: -2.3630919456481934
    3. '
' → logprob: -5.113091945648193
    4. '(
' → logprob: -5.613091945648193
    5. '()
' → logprob: -6.738091945648193
    6. '()

' → logprob: -7.488091945648193
    7. '(

' → logprob: -7.488091945648193
    8. '

' → logprob: -8.113091468811035
    9. '#' → logprob: -9.238091468811035
    10. '\n' → logprob: -9.363091468811035

Token 29: ' Red' (ID: 5952)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08125689625740051
    2. ' input' → logprob: -3.831256866455078
    3. 'input' → logprob: -3.831256866455078
    4. ' readline' → logprob: -4.581256866455078
    5. ' read' → logprob: -5.706256866455078
    6. '  ' → logprob: -5.706256866455078
    7. ' #' → logprob: -6.081256866455078
    8. 'read' → logprob: -6.456256866455078
    9. '#' → logprob: -6.581256866455078
    10. 's' → logprob: -6.706256866455078

Token 30: 'é' (ID: 377)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.09494628757238388
    2. 'é' → logprob: -3.0949463844299316
    3. 'irection' → logprob: -3.5949463844299316
    4. 'irect' → logprob: -4.969946384429932
    5. 'efined' → logprob: -5.344946384429932
    6. 'e' → logprob: -6.219946384429932
    7. 'éf' → logprob: -6.344946384429932
    8. 'efi' → logprob: -7.094946384429932
    9. 'ir' → logprob: -7.969946384429932
    10. '```' → logprob: -8.594945907592773

Token 31: 'fin' (ID: 6994)
  Prédit: 'fin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fin' → logprob: -0.0019036511657759547
    2. 'é' → logprob: -7.001903533935547
    3. 'f' → logprob: -7.501903533935547
    4. 'dé' → logprob: -9.376903533935547
    5. 'ef' → logprob: -9.501903533935547
    6. 'éf' → logprob: -10.126903533935547
    7. 'inition' → logprob: -10.376903533935547
    8. 'fine' → logprob: -10.751903533935547
    9. 'definition' → logprob: -10.876903533935547
    10. ' finition' → logprob: -11.001903533935547

Token 32: 'ition' (ID: 868)
  Prédit: 'inition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inition' → logprob: -0.12422628700733185
    2. 'inir' → logprob: -2.4992263317108154
    3. 'ition' → logprob: -3.4992263317108154
    4. 'ir' → logprob: -6.124226093292236
    5. 'init' → logprob: -7.499226093292236
    6. 'in' → logprob: -7.874226093292236
    7. 'ining' → logprob: -8.124226570129395
    8. '```' → logprob: -8.249226570129395
    9. 'ini' → logprob: -8.374226570129395
    10. 'i' → logprob: -9.374226570129395

Token 33: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06808272004127502
    2. ' de' → logprob: -3.193082809448242
    3. 'input' → logprob: -5.068082809448242
    4. '(input' → logprob: -5.193082809448242
    5. '(' → logprob: -5.943082809448242
    6. '=input' → logprob: -6.318082809448242
    7. ' input' → logprob: -6.818082809448242
    8. ' (' → logprob: -6.818082809448242
    9. ' of' → logprob: -6.943082809448242
    10. ' =' → logprob: -7.068082809448242

Token 34: ' la' (ID: 557)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.521443784236908
    2. ' ' → logprob: -1.3964438438415527
    3. 'input' → logprob: -2.0214438438415527
    4. ' l' → logprob: -3.8964438438415527
    5. ' la' → logprob: -6.396443843841553
    6. '(input' → logprob: -6.521443843841553
    7. 'l' → logprob: -6.646443843841553
    8. ' ' → logprob: -7.396443843841553
    9. '=input' → logprob: -7.896443843841553
    10. '  ' → logprob: -9.146443367004395

Token 35: ' fonction' (ID: 17610)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.622393012046814
    2. ' input' → logprob: -0.872393012046814
    3. ' ' → logprob: -3.7473931312561035
    4. ' fonction' → logprob: -4.8723931312561035
    5. 'entrée' → logprob: -5.4973931312561035
    6. ' built' → logprob: -6.2473931312561035
    7. ' lecture' → logprob: -6.4973931312561035
    8. 'fonction' → logprob: -6.4973931312561035
    9. ' function' → logprob: -6.7473931312561035
    10. 'n' → logprob: -7.3723931312561035

Token 36: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08514539897441864
    2. ' input' → logprob: -3.2101454734802246
    3. '(input' → logprob: -3.3351454734802246
    4. '=input' → logprob: -5.960145473480225
    5. ' ' → logprob: -6.585145473480225
    6. '(' → logprob: -7.335145473480225
    7. '()' → logprob: -7.960145473480225
    8. '_input' → logprob: -9.460144996643066
    9. ' de' → logprob: -9.710144996643066
    10. 'read' → logprob: -9.835144996643066

Token 37: ' avec' (ID: 3937)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24689637124538422
    2. '()' → logprob: -2.496896266937256
    3. '(
' → logprob: -3.746896266937256
    4. '

' → logprob: -3.871896266937256
    5. '
' → logprob: -4.121896266937256
    6. ')' → logprob: -4.246896266937256
    7. '#' → logprob: -4.246896266937256
    8. '(

' → logprob: -4.496896266937256
    9. ' ' → logprob: -4.746896266937256
    10. 'def' → logprob: -4.996896266937256

Token 38: ' une' (ID: 2463)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.25000783801078796
    2. 'sys' → logprob: -2.5000078678131104
    3. ' input' → logprob: -3.1250078678131104
    4. ' ' → logprob: -3.5000078678131104
    5. 'input' → logprob: -3.5000078678131104
    6. ' une' → logprob: -4.250007629394531
    7. ' un' → logprob: -5.375007629394531
    8. 'un' → logprob: -5.625007629394531
    9. ' ' → logprob: -5.875007629394531
    10. '=sys' → logprob: -6.000007629394531

Token 39: ' lecture' (ID: 31993)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05704968050122261
    2. ' espace' → logprob: -3.5570497512817383
    3. 'n' → logprob: -4.432049751281738
    4. 'space' → logprob: -5.932049751281738
    5. ' space' → logprob: -5.932049751281738
    6. ' ' → logprob: -6.182049751281738
    7. '  ' → logprob: -6.182049751281738
    8. ' 
' → logprob: -6.307049751281738
    9. ' newline' → logprob: -7.807049751281738
    10. '  
' → logprob: -8.182049751281738

Token 40: ' plus' (ID: 2932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012567342258989811
    2. '()' → logprob: -4.762567520141602
    3. ' ' → logprob: -6.137567520141602
    4. ' (' → logprob: -6.637567520141602
    5. 's' → logprob: -8.887567520141602
    6. '(
' → logprob: -8.887567520141602
    7. ')' → logprob: -10.012567520141602
    8. ' ()' → logprob: -10.637567520141602
    9. 'newline' → logprob: -11.137567520141602
    10. '  ' → logprob: -11.512567520141602

Token 41: ' rapide' (ID: 44887)
  Prédit: ' rapide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rapide' → logprob: -0.34320423007011414
    2. ' efficace' → logprob: -1.8432042598724365
    3. ' optim' → logprob: -2.5932042598724365
    4. 'rap' → logprob: -3.8432042598724365
    5. ' plus' → logprob: -4.718204021453857
    6. 'optim' → logprob: -5.093204021453857
    7. ' optimale' → logprob: -5.218204021453857
    8. ' fast' → logprob: -6.218204021453857
    9. ' rap' → logprob: -6.593204021453857
    10. ' performant' → logprob: -6.718204021453857

Token 42: ' de' (ID: 334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3625084161758423
    2. '

' → logprob: -1.6125084161758423
    3. '\n' → logprob: -3.3625082969665527
    4. '' → logprob: -4.362508296966553
    5. '#' → logprob: -4.487508296966553
    6. '<|end|>' → logprob: -4.612508296966553
    7. ' ' → logprob: -5.112508296966553
    8. '\' → logprob: -5.362508296966553
    9. '(' → logprob: -5.487508296966553
    10. '  
' → logprob: -5.612508296966553

Token 43: ' ligne' (ID: 19583)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15194381773471832
    2. ' ' → logprob: -3.0269439220428467
    3. '\' → logprob: -3.4019439220428467
    4. '(' → logprob: -4.401943683624268
    5. '\n' → logprob: -4.526943683624268
    6. '()\' → logprob: -4.651943683624268
    7. ' l' → logprob: -5.401943683624268
    8. '<|end|>' → logprob: -5.776943683624268
    9. ' ()' → logprob: -6.026943683624268
    10. 'l' → logprob: -6.151943683624268

Token 44: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2569221556186676
    2. '

' → logprob: -2.1319222450256348
    3. '\n' → logprob: -3.0069222450256348
    4. '#' → logprob: -4.381922245025635
    5. ' ' → logprob: -4.506922245025635
    6. '<|end|>' → logprob: -4.881922245025635
    7. '' → logprob: -5.381922245025635
    8. '\' → logprob: -5.881922245025635
    9. '```' → logprob: -6.006922245025635
    10. '(' → logprob: -6.006922245025635

Token 45: ' les' (ID: 1341)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5973018407821655
    2. ' l' → logprob: -1.9723018407821655
    3. '()' → logprob: -2.222301959991455
    4. 'les' → logprob: -2.972301959991455
    5. ' les' → logprob: -4.097301959991455
    6. '<|end|>' → logprob: -4.097301959991455
    7. '```' → logprob: -4.097301959991455
    8. ' éviter' → logprob: -4.347301959991455
    9. 'optim' → logprob: -4.847301959991455
    10. 's' → logprob: -4.847301959991455

Token 46: ' grands' (ID: 43085)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -1.5521361827850342
    2. 'stdin' → logprob: -1.9271361827850342
    3. ' code' → logprob: -2.552136182785034
    4. 'f' → logprob: -2.802136182785034
    5. ' stdin' → logprob: -2.927136182785034
    6. ' input' → logprob: -3.427136182785034
    7. 'sys' → logprob: -3.552136182785034
    8. 'input' → logprob: -3.552136182785034
    9. 's' → logprob: -3.802136182785034
    10. 'import' → logprob: -3.927136182785034

Token 47: ' inputs' (ID: 21963)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9571577310562134
    2. ' volumes' → logprob: -2.082157611846924
    3. ' ' → logprob: -3.082157611846924
    4. ' inputs' → logprob: -3.207157611846924
    5. 'inputs' → logprob: -3.332157611846924
    6. ' fichiers' → logprob: -3.332157611846924
    7. ' s' → logprob: -3.582157611846924
    8. 'program' → logprob: -3.707157611846924
    9. 'f' → logprob: -3.707157611846924
    10. 'entr' → logprob: -3.832157611846924

Token 48: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21050047874450684
    2. '

' → logprob: -1.9605004787445068
    3. '\n' → logprob: -4.085500717163086
    4. '' → logprob: -4.335500717163086
    5. '#' → logprob: -4.960500717163086
    6. ' ' → logprob: -6.210500717163086
    7. '<|end|>' → logprob: -6.335500717163086
    8. '


' → logprob: -6.585500717163086
    9. '  
' → logprob: -6.835500717163086
    10. '\' → logprob: -7.085500717163086

Token 49: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0785773992538452
    2. '
' → logprob: -1.2035773992538452
    3. '\n' → logprob: -1.7035773992538452
    4. 'def' → logprob: -3.2035775184631348
    5. ' ' → logprob: -3.4535775184631348
    6. '

' → logprob: -3.7035775184631348
    7. '\' → logprob: -3.7035775184631348
    8. '' → logprob: -4.328577518463135
    9. '<|end|>' → logprob: -5.078577518463135
    10. '  
' → logprob: -5.328577518463135

Token 50: ' Lecture' (ID: 106534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5526217818260193
    2. 'def' → logprob: -1.302621841430664
    3. '#' → logprob: -2.052621841430664
    4. 'n' → logprob: -4.677621841430664
    5. 'd' → logprob: -5.427621841430664
    6. ' #' → logprob: -5.677621841430664
    7. 'import' → logprob: -6.302621841430664
    8. ' def' → logprob: -7.177621841430664
    9. 'a' → logprob: -7.302621841430664
    10. '\' → logprob: -7.427621841430664

Token 51: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5328131318092346
    2. '()' → logprob: -0.9078131318092346
    3. 's' → logprob: -5.90781307220459
    4. ')' → logprob: -6.78281307220459
    5. '#' → logprob: -7.15781307220459
    6. 'user' → logprob: -7.15781307220459
    7. '(
' → logprob: -7.28281307220459
    8. 'n' → logprob: -7.90781307220459
    9. '_' → logprob: -8.03281307220459
    10. 'data' → logprob: -8.15781307220459

Token 52: ''un' (ID: 9788)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5159856081008911
    2. 'e' → logprob: -2.0159854888916016
    3. ' ' → logprob: -2.5159854888916016
    4. ' la' → logprob: -2.8909854888916016
    5. ' =' → logprob: -3.3909854888916016
    6. ' des' → logprob: -3.7659854888916016
    7. 'es' → logprob: -3.7659854888916016
    8. 'une' → logprob: -4.390985488891602
    9. '_' → logprob: -4.640985488891602
    10. 's' → logprob: -4.765985488891602

Token 53: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34670084714889526
    2. ' nombre' → logprob: -1.34670090675354
    3. 'nombre' → logprob: -3.97170090675354
    4. ' entier' → logprob: -5.846700668334961
    5. ' nombres' → logprob: -6.096700668334961
    6. 'n' → logprob: -6.346700668334961
    7. ' n' → logprob: -6.596700668334961
    8. 'e' → logprob: -7.346700668334961
    9. ' )' → logprob: -7.471700668334961
    10. '  ' → logprob: -8.221700668334961

Token 54: ' N' (ID: 478)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015175038948655128
    2. '()' → logprob: -4.890174865722656
    3. 'n' → logprob: -5.390174865722656
    4. '(n' → logprob: -6.515174865722656
    5. '(
' → logprob: -7.140174865722656
    6. 's' → logprob: -7.890174865722656
    7. 'a' → logprob: -9.640174865722656
    8. ')' → logprob: -9.890174865722656
    9. ',' → logprob: -9.890174865722656
    10. '(int' → logprob: -11.015174865722656

Token 55: ' depuis' (ID: 16277)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13543125987052917
    2. '()' → logprob: -2.2604312896728516
    3. '(N' → logprob: -5.010431289672852
    4. '(
' → logprob: -5.260431289672852
    5. 'n' → logprob: -5.760431289672852
    6. '(n' → logprob: -6.510431289672852
    7. '\n' → logprob: -6.885431289672852
    8. 'N' → logprob: -7.010431289672852
    9. ')' → logprob: -7.260431289672852
    10. '=' → logprob: -7.760431289672852

Token 56: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1223958358168602
    2. 'la' → logprob: -3.2473957538604736
    3. 'input' → logprob: -3.3723957538604736
    4. 'l' → logprob: -3.8723957538604736
    5. ' la' → logprob: -4.997395992279053
    6. ' input' → logprob: -5.372395992279053
    7. 'sys' → logprob: -5.372395992279053
    8. '(' → logprob: -6.872395992279053
    9. ':' → logprob: -7.372395992279053
    10. ' l' → logprob: -7.872395992279053

Token 57: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.351591020822525
    2. ''utilisateur' → logprob: -2.601591110229492
    3. ''entrée' → logprob: -2.976591110229492
    4. '_' → logprob: -3.226591110229492
    5. ' ' → logprob: -3.601591110229492
    6. 'a' → logprob: -3.851591110229492
    7. 'e' → logprob: -4.101591110229492
    8. ' input' → logprob: -4.226591110229492
    9. 'input' → logprob: -4.601591110229492
    10. ''espace' → logprob: -5.101591110229492

Token 58: ' standard' (ID: 7024)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03366679325699806
    2. 'n' → logprob: -4.533666610717773
    3. 'N' → logprob: -5.283666610717773
    4. '(
' → logprob: -5.408666610717773
    5. '()' → logprob: -5.408666610717773
    6. '(N' → logprob: -5.658666610717773
    7. '\n' → logprob: -6.533666610717773
    8. '(n' → logprob: -6.783666610717773
    9. '```' → logprob: -8.158666610717773
    10. ')' → logprob: -8.283666610717773

Token 59: ' et' (ID: 859)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03379933908581734
    2. '(
' → logprob: -3.658799409866333
    3. '()' → logprob: -5.533799171447754
    4. 'N' → logprob: -6.658799171447754
    5. 'n' → logprob: -7.658799171447754
    6. '
' → logprob: -7.908799171447754
    7. '\n' → logprob: -8.033799171447754
    8. '(N' → logprob: -8.283799171447754
    9. '()
' → logprob: -8.783799171447754
    10. '\' → logprob: -9.158799171447754

Token 60: ' conversion' (ID: 22165)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06703747808933258
    2. 'n' → logprob: -4.317037582397461
    3. ' =' → logprob: -4.942037582397461
    4. '=' → logprob: -5.192037582397461
    5. ' N' → logprob: -5.567037582397461
    6. '```' → logprob: -5.817037582397461
    7. 'input' → logprob: -5.942037582397461
    8. 'int' → logprob: -5.942037582397461
    9. 'l' → logprob: -6.067037582397461
    10. ',' → logprob: -6.192037582397461

Token 61: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003467865171842277
    2. '(
' → logprob: -8.750347137451172
    3. ' (' → logprob: -9.375347137451172
    4. '(N' → logprob: -10.375347137451172
    5. '(int' → logprob: -11.250347137451172
    6. '()' → logprob: -11.750347137451172
    7. 's' → logprob: -12.000347137451172
    8. 'N' → logprob: -12.000347137451172
    9. ' ' → logprob: -12.375347137451172
    10. '('' → logprob: -12.375347137451172

Token 62: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08511442691087723
    2. ' int' → logprob: -2.5851144790649414
    3. 'int' → logprob: -5.460114479064941
    4. ' entier' → logprob: -7.210114479064941
    5. ' integer' → logprob: -8.210114479064941
    6. '  ' → logprob: -8.460114479064941
    7. ' i' → logprob: -8.460114479064941
    8. ' ent' → logprob: -8.960114479064941
    9. '=int' → logprob: -8.960114479064941
    10. '_' → logprob: -9.835114479064941

Token 63: ' avec' (ID: 3937)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5560405254364014
    2. 'N' → logprob: -0.9310405254364014
    3. 'n' → logprob: -4.0560407638549805
    4. '(
' → logprob: -4.3060407638549805
    5. '()' → logprob: -8.05604076385498
    6. 'a' → logprob: -8.18104076385498
    7. '(N' → logprob: -8.80604076385498
    8. '\n' → logprob: -8.93104076385498
    9. '```' → logprob: -9.18104076385498
    10. ' N' → logprob: -9.30604076385498

Token 64: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.19433309137821198
    2. 'int' → logprob: -2.194333076477051
    3. ' ' → logprob: -2.819333076477051
    4. ' la' → logprob: -6.069333076477051
    5. '=int' → logprob: -6.819333076477051
    6. ' l' → logprob: -7.319333076477051
    7. ' n' → logprob: -8.31933307647705
    8. 'l' → logprob: -8.31933307647705
    9. ' i' → logprob: -9.06933307647705
    10. '(int' → logprob: -9.19433307647705

Token 65: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009112855419516563
    2. '(
' → logprob: -4.88411283493042
    3. 'N' → logprob: -7.13411283493042
    4. '(N' → logprob: -8.009113311767578
    5. '()' → logprob: -8.259113311767578
    6. 'n' → logprob: -10.634113311767578
    7. 's' → logprob: -11.259113311767578
    8. '\(' → logprob: -11.259113311767578
    9. '(n' → logprob: -11.884113311767578
    10. '\' → logprob: -12.134113311767578

Token 66: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10517280548810959
    2. 'N' → logprob: -2.730172872543335
    3. '(
' → logprob: -3.980172872543335
    4. '(N' → logprob: -4.480172634124756
    5. 'n' → logprob: -5.730172634124756
    6. '()' → logprob: -7.855172634124756
    7. '(n' → logprob: -8.355173110961914
    8. 'a' → logprob: -9.105173110961914
    9. '```' → logprob: -9.355173110961914
    10. '\(' → logprob: -9.480173110961914

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07000234723091125
    2. '=' → logprob: -2.695002317428589
    3. '=int' → logprob: -10.570002555847168
    4. ' ' → logprob: -10.945002555847168
    5. ')' → logprob: -11.695002555847168
    6. ' =
' → logprob: -12.195002555847168
    7. ',' → logprob: -12.195002555847168
    8. '.' → logprob: -13.820002555847168
    9. '=input' → logprob: -14.195002555847168
    10. ' ' → logprob: -14.945002555847168

Token 68: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.01286923885345459
    2. 'int' → logprob: -4.387869358062744
    3. ' input' → logprob: -8.387868881225586
    4. ' ' → logprob: -9.137868881225586
    5. 'input' → logprob: -11.012868881225586
    6. ' in' → logprob: -12.762868881225586
    7. '=int' → logprob: -12.887868881225586
    8. ' ' → logprob: -14.387868881225586
    9. '<int' → logprob: -15.137868881225586
    10. ' 
' → logprob: -15.262868881225586

Token 69: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.47415420413017273
    2. '(' → logprob: -0.9741542339324951
    3. ' (' → logprob: -10.474154472351074
    4. '(
' → logprob: -10.849154472351074
    5. 'input' → logprob: -10.849154472351074
    6. '(sys' → logprob: -12.724154472351074
    7. '('' → logprob: -13.099154472351074
    8. '()' → logprob: -13.849154472351074
    9. '(s' → logprob: -13.849154472351074
    10. '(

' → logprob: -14.224154472351074

Token 70: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0008504862780682743
    2. '()' → logprob: -7.125850677490234
    3. ' ())' → logprob: -11.000850677490234
    4. '())
' → logprob: -11.250850677490234
    5. '().' → logprob: -11.875850677490234
    6. ')' → logprob: -12.375850677490234
    7. '(' → logprob: -12.875850677490234
    8. '()))' → logprob: -13.625850677490234
    9. '()
' → logprob: -14.625850677490234
    10. '())

' → logprob: -15.000850677490234

Token 71: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3692551255226135
    2. '#' → logprob: -2.6192550659179688
    3. '
' → logprob: -2.8692550659179688
    4. 'for' → logprob: -3.1192550659179688
    5. ')' → logprob: -3.4942550659179688
    6. '(' → logprob: -3.7442550659179688
    7. '<|end|>' → logprob: -4.119255065917969
    8. '\n' → logprob: -4.619255065917969
    9. ' for' → logprob: -4.869255065917969
    10. ' 
' → logprob: -4.994255065917969

Token 72: ' Cré' (ID: 109203)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34009090065956116
    2. 's' → logprob: -2.4650909900665283
    3. ' for' → logprob: -2.5900909900665283
    4. 'result' → logprob: -3.3400909900665283
    5. '#' → logprob: -3.5900909900665283
    6. 'factor' → logprob: -4.340090751647949
    7. 'def' → logprob: -4.965090751647949
    8. 'data' → logprob: -5.090090751647949
    9. 'sum' → logprob: -5.215090751647949
    10. 'lst' → logprob: -5.465090751647949

Token 73: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.2557261884212494
    2. 'a' → logprob: -2.1307260990142822
    3. 'er' → logprob: -3.3807260990142822
    4. 'at' → logprob: -3.5057260990142822
    5. 'ate' → logprob: -3.5057260990142822
    6. 'd' → logprob: -5.130726337432861
    7. '#' → logprob: -5.880726337432861
    8. 'e' → logprob: -7.130726337432861
    9. 'ati' → logprob: -7.255726337432861
    10. 'atio' → logprob: -8.130725860595703

Token 74: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00617810245603323
    2. '()' → logprob: -6.13117790222168
    3. ')' → logprob: -6.88117790222168
    4. ' ' → logprob: -7.38117790222168
    5. '#' → logprob: -7.50617790222168
    6. 's' → logprob: -8.00617790222168
    7. ' (' → logprob: -8.13117790222168
    8. '(
' → logprob: -8.38117790222168
    9. 'a' → logprob: -8.50617790222168
    10. ',' → logprob: -8.63117790222168

Token 75: ''une' (ID: 13337)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003637965302914381
    2. '('' → logprob: -6.378637790679932
    3. ' (' → logprob: -7.253637790679932
    4. '[' → logprob: -7.878637790679932
    5. '([]' → logprob: -8.12863826751709
    6. '[]' → logprob: -8.75363826751709
    7. '("' → logprob: -9.00363826751709
    8. ' ' → logprob: -9.25363826751709
    9. '(
' → logprob: -10.00363826751709
    10. 'a' → logprob: -10.75363826751709

Token 76: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.23003894090652466
    2. ' liste' → logprob: -2.23003888130188
    3. 'list' → logprob: -2.98003888130188
    4. ' list' → logprob: -3.98003888130188
    5. '[]' → logprob: -4.855039119720459
    6. 's' → logprob: -5.605039119720459
    7. '_' → logprob: -6.105039119720459
    8. 'l' → logprob: -6.230039119720459
    9. '=[]' → logprob: -6.355039119720459
    10. 'd' → logprob: -6.480039119720459

Token 77: ' D' (ID: 415)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6886186599731445
    2. ' =' → logprob: -1.4386186599731445
    3. '[]' → logprob: -2.3136186599731445
    4. '[' → logprob: -3.1886186599731445
    5. '_' → logprob: -3.5636186599731445
    6. '=[]' → logprob: -4.0636186599731445
    7. 'des' → logprob: -4.1886186599731445
    8. 'd' → logprob: -4.5636186599731445
    9. 'data' → logprob: -5.0636186599731445
    10. ' ' → logprob: -5.4386186599731445

Token 78: ' :
' (ID: 10039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06320109963417053
    2. '=[]' → logprob: -3.5632011890411377
    3. '=' → logprob: -4.063200950622559
    4. '[]' → logprob: -4.563200950622559
    5. 'e' → logprob: -6.688200950622559
    6. '[' → logprob: -6.688200950622559
    7. '=[]
' → logprob: -7.563200950622559
    8. ' []' → logprob: -7.688200950622559
    9. ' ' → logprob: -7.938200950622559
    10. ' =[' → logprob: -8.438200950622559

Token 79: '#' (ID: 2)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.46263542771339417
    2. '[]' → logprob: -1.7126353979110718
    3. '[' → logprob: -2.7126355171203613
    4. ' D' → logprob: -2.9626355171203613
    5. ' []' → logprob: -3.0876355171203613
    6. ' =' → logprob: -4.587635517120361
    7. ' [' → logprob: -5.462635517120361
    8. '=[]' → logprob: -5.462635517120361
    9. 's' → logprob: -5.962635517120361
    10. 'd' → logprob: -6.837635517120361

Token 80: ' Index' (ID: 14580)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.8513103723526001
    2. '[]' → logprob: -1.8513103723526
    3. ' D' → logprob: -1.9763103723526
    4. ' [' → logprob: -1.9763103723526
    5. 'D' → logprob: -2.3513102531433105
    6. '[' → logprob: -3.2263102531433105
    7. '[D' → logprob: -6.9763102531433105
    8. ' ' → logprob: -7.7263102531433105
    9. 'd' → logprob: -8.226310729980469
    10. '[:]' → logprob: -8.351310729980469

Token 81: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39194273948669434
    2. 's' → logprob: -1.5169427394866943
    3. 'es' → logprob: -3.0169427394866943
    4. '=' → logprob: -3.3919427394866943
    5. '=[]' → logprob: -4.766942977905273
    6. 'e' → logprob: -5.641942977905273
    7. '_' → logprob: -5.891942977905273
    8. '[]' → logprob: -7.141942977905273
    9. '=[]
' → logprob: -7.266942977905273
    10. ' ' → logprob: -7.266942977905273

Token 82: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5186410546302795
    2. ' =' → logprob: -1.7686409950256348
    3. 's' → logprob: -2.2686409950256348
    4. ' ' → logprob: -3.0186409950256348
    5. '=' → logprob: -3.2686409950256348
    6. ' des' → logprob: -4.393640995025635
    7. 'es' → logprob: -5.268640995025635
    8. ':' → logprob: -5.393640995025635
    9. 'e' → logprob: -5.643640995025635
    10. '[' → logprob: -5.893640995025635

Token 83: ' contient' (ID: 89067)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5842511653900146
    2. ':' → logprob: -2.3342511653900146
    3. ' =' → logprob: -2.9592511653900146
    4. ',' → logprob: -2.9592511653900146
    5. '=' → logprob: -3.3342511653900146
    6. '0' → logprob: -3.4592511653900146
    7. ' n' → logprob: -3.8342511653900146
    8. ' :' → logprob: -4.084251403808594
    9. '[' → logprob: -4.459251403808594
    10. ' est' → logprob: -4.584251403808594

Token 84: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9235947132110596
    2. ' ' → logprob: -1.7985947132110596
    3. ' la' → logprob: -2.2985947132110596
    4. ' le' → logprob: -2.5485947132110596
    5. ' une' → logprob: -3.0485947132110596
    6. ' des' → logprob: -3.1735947132110596
    7. ' None' → logprob: -3.2985947132110596
    8. ' un' → logprob: -3.4235947132110596
    9. 'le' → logprob: -3.5485947132110596
    10. 'None' → logprob: -4.2985944747924805

Token 85: ' car' (ID: 1669)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08790601789951324
    2. ' ,' → logprob: -2.8379061222076416
    3. '[' → logprob: -3.8379061222076416
    4. ',
' → logprob: -6.4629058837890625
    5. ',[' → logprob: -6.9629058837890625
    6. ' [' → logprob: -7.0879058837890625
    7. ' ,[' → logprob: -8.462905883789062
    8. ' ,
' → logprob: -8.712905883789062
    9. ' ' → logprob: -10.087905883789062
    10. 's' → logprob: -10.212905883789062

Token 86: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.408658742904663
    2. ' les' → logprob: -1.533658742904663
    3. ' on' → logprob: -2.158658742904663
    4. ' aucun' → logprob: -2.658658742904663
    5. ' il' → logprob: -2.908658742904663
    6. 'les' → logprob: -3.033658742904663
    7. ' le' → logprob: -3.158658742904663
    8. ' nous' → logprob: -3.158658742904663
    9. ' la' → logprob: -3.283658742904663
    10. 'l' → logprob: -3.408658742904663

Token 87: ' somm' (ID: 44830)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' indices' → logprob: -1.0086978673934937
    2. ' données' → logprob: -1.5086978673934937
    3. 'indices' → logprob: -2.133697986602783
    4. ' nombres' → logprob: -2.508697986602783
    5. 'd' → logprob: -3.508697986602783
    6. ' jours' → logprob: -3.883697986602783
    7. 'index' → logprob: -4.008697986602783
    8. 'jours' → logprob: -4.758697986602783
    9. ' problèmes' → logprob: -5.196197986602783
    10. 'n' → logprob: -5.196197986602783

Token 88: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.09040405601263046
    2. 'et' → logprob: -3.0904040336608887
    3. 'es' → logprob: -3.2154040336608887
    4. 'e' → logprob: -7.840404033660889
    5. 'it' → logprob: -8.715404510498047
    6. '#' → logprob: -10.090404510498047
    7. 'its' → logprob: -10.965404510498047
    8. 'és' → logprob: -11.090404510498047
    9. 'êts' → logprob: -11.090404510498047
    10. 's' → logprob: -11.215404510498047

Token 89: ' sont' (ID: 5242)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.6532868146896362
    2. ' ne' → logprob: -1.7782868146896362
    3. ' du' → logprob: -2.653286933898926
    4. ' ' → logprob: -3.028286933898926
    5. ' sont' → logprob: -3.278286933898926
    6. 's' → logprob: -3.403286933898926
    7. '0' → logprob: -3.653286933898926
    8. ' commencent' → logprob: -3.778286933898926
    9. 'n' → logprob: -3.903286933898926
    10. ' des' → logprob: -4.153286933898926

Token 90: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.7067631483078003
    2. 'num' → logprob: -0.7067631483078003
    3. ' index' → logprob: -4.70676326751709
    4. 'index' → logprob: -5.83176326751709
    5. '1' → logprob: -7.08176326751709
    6. ' ' → logprob: -8.83176326751709
    7. ' numéro' → logprob: -9.58176326751709
    8. '	num' → logprob: -9.70676326751709
    9. ' numer' → logprob: -9.95676326751709
    10. '
' → logprob: -9.95676326751709

Token 91: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.003764212829992175
    2. 'érés' → logprob: -6.3787641525268555
    3. 'éros' → logprob: -7.1287641525268555
    4. 'rot' → logprob: -7.6287641525268555
    5. 'r' → logprob: -8.753764152526855
    6. '```' → logprob: -9.253764152526855
    7. 'éro' → logprob: -9.753764152526855
    8. '**' → logprob: -10.003764152526855
    9. 'és' → logprob: -10.003764152526855
    10. '1' → logprob: -10.128764152526855

Token 92: 'rot' (ID: 8150)
  Prédit: 'rot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rot' → logprob: -0.0037270416505634785
    2. 'rés' → logprob: -6.378726959228516
    3. 'ros' → logprob: -7.128726959228516
    4. 'rots' → logprob: -7.128726959228516
    5. 'ro' → logprob: -8.503726959228516
    6. 'r' → logprob: -9.128726959228516
    7. 'ront' → logprob: -10.628726959228516
    8. 'res' → logprob: -10.878726959228516
    9. 'rors' → logprob: -11.378726959228516
    10. 'rosis' → logprob: -11.878726959228516

Token 93: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.05647629126906395
    2. 'é' → logprob: -3.431476354598999
    3. 's' → logprob: -3.806476354598999
    4. '0' → logprob: -9.681476593017578
    5. 'es' → logprob: -10.181476593017578
    6. 'rés' → logprob: -10.431476593017578
    7. 'érés' → logprob: -10.556476593017578
    8. 'u' → logprob: -10.556476593017578
    9. '1' → logprob: -10.681476593017578
    10. 'ées' → logprob: -10.931476593017578

Token 94: ' à' (ID: 1221)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.12258440256118774
    2. 'de' → logprob: -2.622584342956543
    3. ' ' → logprob: -3.747584342956543
    4. 'd' → logprob: -4.997584342956543
    5. ' à' → logprob: -5.247584342956543
    6. ' from' → logprob: -6.122584342956543
    7. 's' → logprob: -6.622584342956543
    8. '1' → logprob: -6.872584342956543
    9. '0' → logprob: -7.247584342956543
    10. 'from' → logprob: -7.872584342956543

Token 95: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -0.024176010861992836
    2. 'part' → logprob: -3.8991761207580566
    3. '1' → logprob: -6.774176120758057
    4. 'par' → logprob: -7.024176120758057
    5. ' ' → logprob: -7.274176120758057
    6. ' partie' → logprob: -8.649175643920898
    7. ' partire' → logprob: -8.649175643920898
    8. ' part' → logprob: -8.774175643920898
    9. ' parti' → logprob: -8.899175643920898
    10. ' par' → logprob: -9.774175643920898

Token 96: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6865214705467224
    2. 'de' → logprob: -1.1865215301513672
    3. '1' → logprob: -1.6865215301513672
    4. 'd' → logprob: -5.436521530151367
    5. ' ' → logprob: -6.561521530151367
    6. 'du' → logprob: -8.436521530151367
    7. ' d' → logprob: -9.561521530151367
    8. ' du' → logprob: -9.561521530151367
    9. '```' → logprob: -10.561521530151367
    10. '0' → logprob: -10.811521530151367

Token 97: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008616108447313309
    2. ' ' → logprob: -4.758615970611572
    3. 'un' → logprob: -14.75861644744873
    4. ' ' → logprob: -15.00861644744873
    5. 'l' → logprob: -15.38361644744873
    6. '2' → logprob: -15.88361644744873
    7. '  ' → logprob: -16.133615493774414
    8. '0' → logprob: -16.508615493774414
    9. '```' → logprob: -16.508615493774414
    10. ' un' → logprob: -17.008615493774414

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.081584716506768e-05
    2. ' ' → logprob: -10.875020980834961
    3. 'un' → logprob: -13.625020980834961
    4. 'l' → logprob: -15.125020980834961
    5. '0' → logprob: -15.375020980834961
    6. '```' → logprob: -16.12502098083496
    7. ' ' → logprob: -17.25002098083496
    8. '2' → logprob: -17.75002098083496
    9. 's' → logprob: -17.87502098083496
    10. 'index' → logprob: -17.93752098083496

Token 99: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08214795589447021
    2. ' ,' → logprob: -3.8321480751037598
    3. 'D' → logprob: -3.9571480751037598
    4. '[' → logprob: -3.9571480751037598
    5. ',
' → logprob: -5.20714807510376
    6. ' D' → logprob: -5.20714807510376
    7. '
' → logprob: -5.45714807510376
    8. 's' → logprob: -7.08214807510376
    9. ' ,
' → logprob: -7.33214807510376
    10. 'd' → logprob: -7.95714807510376

Token 100: '#' (ID: 2)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.007680088747292757
    2. ' D' → logprob: -4.8826799392700195
    3. '[' → logprob: -10.50767993927002
    4. ',' → logprob: -11.63267993927002
    5. '
' → logprob: -11.63267993927002
    6. ' ' → logprob: -11.75767993927002
    7. ' 
' → logprob: -12.38267993927002
    8. '```' → logprob: -12.63267993927002
    9. '[
' → logprob: -13.38267993927002
    10. 'd' → logprob: -13.38267993927002

Token 101: ' Ensuite' (ID: 113884)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.03383852541446686
    2. ' D' → logprob: -3.4088385105133057
    3. '[' → logprob: -9.283838272094727
    4. '#' → logprob: -11.033838272094727
    5. 'None' → logprob: -11.408838272094727
    6. '[]' → logprob: -11.533838272094727
    7. ' [' → logprob: -11.783838272094727
    8. '
' → logprob: -12.033838272094727
    9. 'for' → logprob: -12.158838272094727
    10. '```' → logprob: -12.158838272094727

Token 102: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.041014414280653
    2. ' D' → logprob: -4.166014194488525
    3. 'D' → logprob: -4.541014194488525
    4. ' ,' → logprob: -5.541014194488525
    5. '[' → logprob: -5.791014194488525
    6. ' on' → logprob: -6.166014194488525
    7. ' des' → logprob: -6.541014194488525
    8. ' ' → logprob: -7.541014194488525
    9. ' la' → logprob: -7.541014194488525
    10. ' les' → logprob: -7.791014194488525

Token 103: ' on' (ID: 402)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.9473174214363098
    2. ' on' → logprob: -1.572317361831665
    3. ' des' → logprob: -1.822317361831665
    4. '[' → logprob: -2.697317361831665
    5. ' chaque' → logprob: -2.822317361831665
    6. ' [' → logprob: -3.447317361831665
    7. ' None' → logprob: -3.947317361831665
    8. ' une' → logprob: -4.197317600250244
    9. ' la' → logprob: -4.447317600250244
    10. 'D' → logprob: -4.697317600250244

Token 104: ' lit' (ID: 11980)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.48960739374160767
    2. 'lit' → logprob: -2.614607334136963
    3. ' ajoute' → logprob: -2.739607334136963
    4. 'a' → logprob: -2.989607334136963
    5. 'rem' → logprob: -3.489607334136963
    6. ' crée' → logprob: -3.489607334136963
    7. 'append' → logprob: -4.114607334136963
    8. 'initial' → logprob: -4.114607334136963
    9. ' lit' → logprob: -4.239607334136963
    10. ' a' → logprob: -4.239607334136963

Token 105: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.41563358902931213
    2. 'N' → logprob: -1.9156335592269897
    3. ' les' → logprob: -2.9156336784362793
    4. '[' → logprob: -2.9156336784362793
    5. '[N' → logprob: -4.040633678436279
    6. ' une' → logprob: -4.165633678436279
    7. 'les' → logprob: -4.665633678436279
    8. ' la' → logprob: -4.665633678436279
    9. ' ' → logprob: -4.665633678436279
    10. '[]' → logprob: -4.915633678436279

Token 106: ' ent' (ID: 1121)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6625975966453552
    2. ' +' → logprob: -2.41259765625
    3. ' lines' → logprob: -2.78759765625
    4. ' ' → logprob: -3.03759765625
    5. ')' → logprob: -3.41259765625
    6. 'D' → logprob: -3.78759765625
    7. ' lignes' → logprob: -3.78759765625
    8. ' *' → logprob: -4.28759765625
    9. 'N' → logprob: -4.28759765625
    10. 'lines' → logprob: -4.28759765625

Token 107: 'iers' (ID: 11012)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6053148508071899
    2. 'ières' → logprob: -1.23031485080719
    3. 'iers' → logprob: -2.4803147315979004
    4. 'er' → logprob: -3.7303147315979004
    5. 'rees' → logprob: -4.2303147315979
    6. 't' → logprob: -4.2303147315979
    7. 'ries' → logprob: -4.9803147315979
    8. 'rée' → logprob: -5.3553147315979
    9. 'ées' → logprob: -5.9803147315979
    10. 'ités' → logprob: -6.2303147315979

Token 108: ' depuis' (ID: 16277)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' D' → logprob: -1.2858624458312988
    2. ',' → logprob: -1.5358624458312988
    3. 'D' → logprob: -1.5358624458312988
    4. ' =' → logprob: -2.160862445831299
    5. ' ,' → logprob: -2.660862445831299
    6. ' ' → logprob: -3.785862445831299
    7. 's' → logprob: -3.910862445831299
    8. '[' → logprob: -4.285862445831299
    9. '()' → logprob: -4.410862445831299
    10. ' [' → logprob: -4.910862445831299

Token 109: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07758226245641708
    2. ' input' → logprob: -2.702582359313965
    3. 'la' → logprob: -6.077582359313965
    4. 'l' → logprob: -6.202582359313965
    5. '(input' → logprob: -7.202582359313965
    6. 'sys' → logprob: -7.202582359313965
    7. ' la' → logprob: -7.452582359313965
    8. '()' → logprob: -7.577582359313965
    9. ' sys' → logprob: -9.077582359313965
    10. ' l' → logprob: -9.202582359313965

Token 110: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3766348659992218
    2. 'a' → logprob: -1.8766348361968994
    3. ''entrée' → logprob: -2.2516348361968994
    4. 'e' → logprob: -3.6266348361968994
    5. 'entrée' → logprob: -4.1266350746154785
    6. ' input' → logprob: -5.2516350746154785
    7. 'es' → logprob: -5.6266350746154785
    8. 'import' → logprob: -6.8766350746154785
    9. 'range' → logprob: -7.3766350746154785
    10. '=input' → logprob: -8.00163459777832

Token 111: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.4058283567428589
    2. ')' → logprob: -1.6558283567428589
    3. 'D' → logprob: -1.6558283567428589
    4. ',' → logprob: -2.0308284759521484
    5. 's' → logprob: -2.4058284759521484
    6. ' =' → logprob: -2.9058284759521484
    7. '=' → logprob: -3.4058284759521484
    8. '(' → logprob: -3.7808284759521484
    9. '[' → logprob: -5.030828475952148
    10. ']' → logprob: -5.030828475952148

Token 112: ' un' (ID: 537)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' D' → logprob: -1.060121774673462
    2. 's' → logprob: -2.310121774673462
    3. ' sépar' → logprob: -2.435121774673462
    4. ' ' → logprob: -2.810121774673462
    5. ' separated' → logprob: -3.060121774673462
    6. ' puis' → logprob: -3.310121774673462
    7. ' et' → logprob: -3.310121774673462
    8. 'D' → logprob: -3.310121774673462
    9. ' la' → logprob: -3.435121774673462
    10. ' on' → logprob: -4.060121536254883

Token 113: ' pour' (ID: 1930)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3613654375076294
    2. ' ' → logprob: -1.6113654375076294
    3. '=' → logprob: -2.11136531829834
    4. ' =' → logprob: -2.23636531829834
    5. 'for' → logprob: -2.61136531829834
    6. ')' → logprob: -2.98636531829834
    7. 'es' → logprob: -3.11136531829834
    8. ' for' → logprob: -3.61136531829834
    9. 'e' → logprob: -3.98636531829834
    10. '.' → logprob: -4.48636531829834

Token 114: ' chaque' (ID: 21194)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.47649717330932617
    2. '_' → logprob: -1.4764971733093262
    3. ' la' → logprob: -2.476497173309326
    4. ' chaque' → logprob: -3.726497173309326
    5. ' ' → logprob: -4.101497173309326
    6. ' each' → logprob: -4.476497173309326
    7. ' une' → logprob: -6.101497173309326
    8. 'la' → logprob: -6.351497173309326
    9. ' i' → logprob: -6.726497173309326
    10. ' for' → logprob: -6.851497173309326

Token 115: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.0027680248022079468
    2. ' somm' → logprob: -7.502768039703369
    3. 's' → logprob: -8.002767562866211
    4. ' ' → logprob: -8.127767562866211
    5. ')' → logprob: -8.377767562866211
    6. ' )' → logprob: -8.377767562866211
    7. ' node' → logprob: -8.752767562866211
    8. ' vertex' → logprob: -8.877767562866211
    9. ' som' → logprob: -9.002767562866211
    10. ' "' → logprob: -9.127767562866211

Token 116: ',' (ID: 11)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.19876518845558167
    2. ' D' → logprob: -2.073765277862549
    3. ',' → logprob: -3.323765277862549
    4. ' ,' → logprob: -5.198765277862549
    5. '[' → logprob: -5.573765277862549
    6. 's' → logprob: -5.823765277862549
    7. ' ' → logprob: -6.323765277862549
    8. ' =' → logprob: -6.948765277862549
    9. 'd' → logprob: -7.073765277862549
    10. 'data' → logprob: -7.698765277862549

Token 117: ' et' (ID: 859)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' D' → logprob: -0.6337289810180664
    2. 'D' → logprob: -0.7587289810180664
    3. ' ' → logprob: -8.008728981018066
    4. ' ,' → logprob: -8.508728981018066
    5. ',' → logprob: -8.633728981018066
    6. 'd' → logprob: -9.258728981018066
    7. ' 
' → logprob: -9.758728981018066
    8. ' data' → logprob: -10.383728981018066
    9. 's' → logprob: -10.508728981018066
    10. ' )' → logprob: -10.508728981018066

Token 118: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5234017372131348
    2. ' les' → logprob: -1.0234017372131348
    3. ' D' → logprob: -4.523401737213135
    4. ' crée' → logprob: -4.773401737213135
    5. ' stock' → logprob: -5.273401737213135
    6. 'on' → logprob: -5.273401737213135
    7. 'les' → logprob: -5.523401737213135
    8. ' ajoute' → logprob: -6.023401737213135
    9. ' ' → logprob: -6.523401737213135
    10. ' rempl' → logprob: -7.273401737213135

Token 119: ' les' (ID: 1341)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.4375995099544525
    2. ' crée' → logprob: -1.562599539756775
    3. ' les' → logprob: -2.3125994205474854
    4. ' ajoute' → logprob: -4.4375996589660645
    5. 'stock' → logprob: -4.4375996589660645
    6. 'les' → logprob: -5.1875996589660645
    7. ' place' → logprob: -5.6875996589660645
    8. 'aj' → logprob: -6.4375996589660645
    9. ' construit' → logprob: -6.4375996589660645
    10. 'range' → logprob: -6.5625996589660645

Token 120: ' place' (ID: 2475)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.5055734515190125
    2. 'stock' → logprob: -2.0055735111236572
    3. ' ajoute' → logprob: -2.1305735111236572
    4. 'aj' → logprob: -2.3805735111236572
    5. ' place' → logprob: -4.005573272705078
    6. 'range' → logprob: -4.255573272705078
    7. 'place' → logprob: -5.505573272705078
    8. 'met' → logprob: -5.755573272705078
    9. 'append' → logprob: -6.130573272705078
    10. 'st' → logprob: -6.130573272705078

Token 121: ' dans' (ID: 2671)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3662348985671997
    2. ' ' → logprob: -2.49123477935791
    3. ' dans' → logprob: -2.99123477935791
    4. ' in' → logprob: -3.11623477935791
    5. ',' → logprob: -3.99123477935791
    6. 's' → logprob: -4.24123477935791
    7. '[]' → logprob: -4.36623477935791
    8. '[:]' → logprob: -4.61623477935791
    9. ' ]' → logprob: -4.74123477935791
    10. '<|end|>' → logprob: -4.74123477935791

Token 122: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10354552417993546
    2. ' [' → logprob: -2.7285454273223877
    3. ' D' → logprob: -4.478545665740967
    4. '[
' → logprob: -4.478545665740967
    5. 'D' → logprob: -5.853545665740967
    6. '[D' → logprob: -6.103545665740967
    7. ' la' → logprob: -6.478545665740967
    8. ' [
' → logprob: -6.728545665740967
    9. ' une' → logprob: -7.853545665740967
    10. '[]' → logprob: -7.853545665740967

Token 123: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17477519810199738
    2. 'D' → logprob: -2.2997751235961914
    3. '[]' → logprob: -4.049775123596191
    4. '[
' → logprob: -4.174775123596191
    5. ' D' → logprob: -4.799775123596191
    6. 'list' → logprob: -4.799775123596191
    7. '[D' → logprob: -4.924775123596191
    8. ' list' → logprob: -6.799775123596191
    9. ' [' → logprob: -7.924775123596191
    10. 'liste' → logprob: -8.049775123596191

Token 124: '.
' (ID: 558)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.11343232542276382
    2. '[' → logprob: -3.1134324073791504
    3. ' D' → logprob: -3.1134324073791504
    4. '[
' → logprob: -4.98843240737915
    5. ' =' → logprob: -5.36343240737915
    6. ',' → logprob: -6.36343240737915
    7. 's' → logprob: -6.36343240737915
    8. ' [' → logprob: -7.36343240737915
    9. 'd' → logprob: -7.48843240737915
    10. ' [
' → logprob: -7.73843240737915

Token 125: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0017043406842276454
    2. ' D' → logprob: -6.376704216003418
    3. '[' → logprob: -14.501704216003418
    4. '
' → logprob: -15.126704216003418
    5. 'd' → logprob: -15.251704216003418
    6. 's' → logprob: -15.501704216003418
    7. '```' → logprob: -15.626704216003418
    8. '[
' → logprob: -15.876704216003418
    9. 'data' → logprob: -16.376705169677734
    10. ',' → logprob: -16.501705169677734

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.225424125790596
    2. '=' → logprob: -1.6004241704940796
    3. ' =[' → logprob: -12.725423812866211
    4. '=[' → logprob: -12.975423812866211
    5. '[' → logprob: -13.225423812866211
    6. '=[]' → logprob: -13.850423812866211
    7. 's' → logprob: -14.100423812866211
    8. ' =
' → logprob: -14.225423812866211
    9. ' ' → logprob: -14.475423812866211
    10. ' ' → logprob: -15.225423812866211

Token 127: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3868899643421173
    2. '[' → logprob: -1.136889934539795
    3. '[n' → logprob: -12.011890411376953
    4. '[int' → logprob: -12.136890411376953
    5. ' ' → logprob: -13.386890411376953
    6. '[list' → logprob: -13.886890411376953
    7. '[N' → logprob: -14.011890411376953
    8. '[len' → logprob: -14.136890411376953
    9. '[input' → logprob: -14.636890411376953
    10. '[num' → logprob: -14.761890411376953

Token 128: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.9146995327901095e-05
    2. ' None' → logprob: -11.000019073486328
    3. '0' → logprob: -13.750019073486328
    4. 'N' → logprob: -14.875019073486328
    5. '
' → logprob: -15.000019073486328
    6. 'int' → logprob: -15.250019073486328
    7. 'No' → logprob: -16.000019073486328
    8. '(None' → logprob: -16.375019073486328
    9. '   ' → logprob: -16.625019073486328
    10. 'Non' → logprob: -16.750019073486328

Token 129: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0031913816928863525
    2. ']+' → logprob: -5.7531914710998535
    3. '()]' → logprob: -12.253190994262695
    4. ',' → logprob: -12.378190994262695
    5. ' ]' → logprob: -12.878190994262695
    6. 'int' → logprob: -14.253190994262695
    7. ']int' → logprob: -14.378190994262695
    8. ']
' → logprob: -14.878190994262695
    9. ')' → logprob: -15.753190994262695
    10. '`]' → logprob: -16.628190994262695

Token 130: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12620040774345398
    2. ']+' → logprob: -2.7512004375457764
    3. ']' → logprob: -3.1262004375457764
    4. ' +' → logprob: -4.626200199127197
    5. ')+' → logprob: -7.876200199127197
    6. ')' → logprob: -9.001200675964355
    7. '+[' → logprob: -9.001200675964355
    8. '+
' → logprob: -9.751200675964355
    9. '()' → logprob: -10.251200675964355
    10. '
' → logprob: -10.376200675964355

Token 131: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.2556394040584564
    2. 'list' → logprob: -1.5056394338607788
    3. ' list' → logprob: -6.005639553070068
    4. '[' → logprob: -7.505639553070068
    5. '[int' → logprob: -8.00563907623291
    6. ' [' → logprob: -8.25563907623291
    7. '[input' → logprob: -9.88063907623291
    8. '[List' → logprob: -10.88063907623291
    9. '[l' → logprob: -11.38063907623291
    10. '[n' → logprob: -13.13063907623291

Token 132: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.963691804325208e-05
    2. ' int' → logprob: -10.500029563903809
    3. '
' → logprob: -14.500029563903809
    4. '```' → logprob: -15.000029563903809
    5. '  ' → logprob: -15.500029563903809
    6. '<int' → logprob: -15.750029563903809
    7. '(int' → logprob: -15.750029563903809
    8. ' ' → logprob: -16.000030517578125
    9. '   ' → logprob: -16.500030517578125
    10. '*' → logprob: -16.625030517578125

Token 133: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0005359939532354474
    2. '(' → logprob: -8.12553596496582
    3. 'input' → logprob: -8.37553596496582
    4. '(x' → logprob: -11.75053596496582
    5. '(
' → logprob: -14.37553596496582
    6. '(i' → logprob: -15.12553596496582
    7. ' (' → logprob: -15.12553596496582
    8. '(in' → logprob: -15.75053596496582
    9. '()' → logprob: -16.00053596496582
    10. ' input' → logprob: -16.25053596496582

Token 134: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0009623158257454634
    2. '()' → logprob: -7.500962257385254
    3. '().' → logprob: -7.875962257385254
    4. ')' → logprob: -11.625962257385254
    5. '())
' → logprob: -11.625962257385254
    6. '()
' → logprob: -12.000962257385254
    7. ' ())' → logprob: -12.625962257385254
    8. '()]' → logprob: -13.750962257385254
    9. '()))' → logprob: -15.125962257385254
    10. '(' → logprob: -15.125962257385254

Token 135: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005755512393079698
    2. 'for' → logprob: -7.875575542449951
    3. ')' → logprob: -9.12557601928711
    4. ' for' → logprob: -9.62557601928711
    5. '()]' → logprob: -12.37557601928711
    6. ' ()' → logprob: -12.37557601928711
    7. '().' → logprob: -12.50057601928711
    8. '(' → logprob: -12.75057601928711
    9. '())' → logprob: -12.75057601928711
    10. ' ' → logprob: -13.12557601928711

Token 136: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4835070073604584
    2. '_' → logprob: -1.4835070371627808
    3. 'range' → logprob: -1.9835070371627808
    4. ' _' → logprob: -4.10850715637207
    5. ' in' → logprob: -6.23350715637207
    6. '_range' → logprob: -8.48350715637207
    7. ' i' → logprob: -8.60850715637207
    8. 'i' → logprob: -9.48350715637207
    9. ' ' → logprob: -9.98350715637207
    10. '(range' → logprob: -10.85850715637207

Token 137: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014176792465150356
    2. ' range' → logprob: -4.264176845550537
    3. ' in' → logprob: -11.514176368713379
    4. 'in' → logprob: -13.389176368713379
    5. 'rang' → logprob: -14.514176368713379
    6. ' ' → logprob: -14.889176368713379
    7. 'ange' → logprob: -14.889176368713379
    8. '	range' → logprob: -15.014176368713379
    9. '(range' → logprob: -15.639176368713379
    10. '  ' → logprob: -15.889176368713379

Token 138: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.5649528298527e-05
    2. ' range' → logprob: -9.500075340270996
    3. '(range' → logprob: -15.000075340270996
    4. 'rang' → logprob: -15.625075340270996
    5. '	range' → logprob: -16.375076293945312
    6. '```' → logprob: -17.500076293945312
    7. '   ' → logprob: -17.500076293945312
    8. 'x' → logprob: -17.750076293945312
    9. '  ' → logprob: -17.750076293945312
    10. ')' → logprob: -17.875076293945312

Token 139: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00014931005716789514
    2. '(' → logprob: -8.875149726867676
    3. 'N' → logprob: -11.625149726867676
    4. ' (' → logprob: -15.375149726867676
    5. '(n' → logprob: -16.00014877319336
    6. ' N' → logprob: -17.00014877319336
    7. '(
' → logprob: -17.12514877319336
    8. '	N' → logprob: -18.87514877319336
    9. '(D' → logprob: -19.25014877319336
    10. '(int' → logprob: -19.25014877319336

Token 140: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00017600801947992295
    2. ']' → logprob: -9.000176429748535
    3. ')' → logprob: -9.875176429748535
    4. ')]
' → logprob: -14.750176429748535
    5. ' )' → logprob: -15.500176429748535
    6. '])' → logprob: -16.12517547607422
    7. '}]' → logprob: -16.62517547607422
    8. ' ]' → logprob: -16.87517547607422
    9. ')])' → logprob: -17.00017547607422
    10. ')],' → logprob: -17.12517547607422

Token 141: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32538387179374695
    2. '#' → logprob: -1.5753839015960693
    3. '<|end|>' → logprob: -2.9503839015960693
    4. '\n' → logprob: -5.45038366317749
    5. ' 
' → logprob: -5.70038366317749
    6. '[' → logprob: -5.70038366317749
    7. ' ' → logprob: -5.95038366317749
    8. '  
' → logprob: -7.20038366317749
    9. 'D' → logprob: -7.32538366317749
    10. '[
' → logprob: -7.70038366317749

Token 142: ' Cré' (ID: 109203)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -1.4339308738708496
    2. '#' → logprob: -1.8089308738708496
    3. 'result' → logprob: -2.1839308738708496
    4. 'visited' → logprob: -2.3089308738708496
    5. 'graph' → logprob: -2.8089308738708496
    6. 'M' → logprob: -2.8089308738708496
    7. 'for' → logprob: -2.9339308738708496
    8. 'adj' → logprob: -3.0589308738708496
    9. 'dp' → logprob: -3.8089308738708496
    10. 'def' → logprob: -3.9339308738708496

Token 143: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.039100855588912964
    2. 'ate' → logprob: -3.6641008853912354
    3. '#' → logprob: -5.164100646972656
    4. 'at' → logprob: -5.539100646972656
    5. 'a' → logprob: -6.914100646972656
    6. 'er' → logprob: -7.539100646972656
    7. 'def' → logprob: -8.414100646972656
    8. 'tion' → logprob: -8.664100646972656
    9. 'e' → logprob: -8.789100646972656
    10. 'atement' → logprob: -8.789100646972656

Token 144: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.22976621985435486
    2. 'd' → logprob: -1.8547662496566772
    3. 's' → logprob: -3.6047661304473877
    4. '<|end|>' → logprob: -4.979766368865967
    5. ' ' → logprob: -5.604766368865967
    6. ' of' → logprob: -5.729766368865967
    7. ' des' → logprob: -6.354766368865967
    8. ' de' → logprob: -6.479766368865967
    9. '[' → logprob: -6.729766368865967
    10. '[]' → logprob: -7.604766368865967

Token 145: ''une' (ID: 13337)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3344085216522217
    2. ''une' → logprob: -1.7094085216522217
    3. 'une' → logprob: -1.8344085216522217
    4. '[' → logprob: -1.8344085216522217
    5. ' une' → logprob: -2.5844085216522217
    6. '[]' → logprob: -3.3344085216522217
    7. ' a' → logprob: -3.9594085216522217
    8. 'e' → logprob: -3.9594085216522217
    9. '_' → logprob: -3.9594085216522217
    10. ' la' → logprob: -4.084408760070801

Token 146: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.5885812640190125
    2. 'list' → logprob: -1.7135813236236572
    3. ' adjacency' → logprob: -2.7135813236236572
    4. 'graph' → logprob: -2.8385813236236572
    5. 'adj' → logprob: -3.2135813236236572
    6. ' liste' → logprob: -4.088581085205078
    7. '[' → logprob: -4.338581085205078
    8. '[]' → logprob: -4.588581085205078
    9. 'dict' → logprob: -5.088581085205078
    10. 'D' → logprob: -5.463581085205078

Token 147: ' parent' (ID: 5980)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -2.2172083854675293
    2. 'D' → logprob: -2.4672083854675293
    3. 'E' → logprob: -2.4672083854675293
    4. ' D' → logprob: -2.9672083854675293
    5. '[]' → logprob: -2.9672083854675293
    6. ' des' → logprob: -3.0922083854675293
    7. ' d' → logprob: -3.2172083854675293
    8. '[' → logprob: -3.3422083854675293
    9. ' adjacency' → logprob: -3.7172083854675293
    10. 'd' → logprob: -3.7172083854675293

Token 148: ' :
' (ID: 10039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.058486513793468475
    2. '=' → logprob: -2.9334864616394043
    3. 's' → logprob: -5.683486461639404
    4. '=[]' → logprob: -8.933486938476562
    5. 'parent' → logprob: -11.683486938476562
    6. '_parent' → logprob: -11.683486938476562
    7. ']' → logprob: -11.683486938476562
    8. '[]' → logprob: -12.308486938476562
    9. '<|end|>' → logprob: -12.308486938476562
    10. '=[]
' → logprob: -12.558486938476562

Token 149: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.028688833117485046
    2. '[parent' → logprob: -4.403688907623291
    3. 'parent' → logprob: -4.528688907623291
    4. ' [' → logprob: -6.028688907623291
    5. '[N' → logprob: -6.278688907623291
    6. ' =' → logprob: -7.903688907623291
    7. ' parent' → logprob: -8.903688430786133
    8. 'None' → logprob: -8.903688430786133
    9. '=[' → logprob: -9.653688430786133
    10. '#' → logprob: -10.028688430786133

Token 150: ' parent' (ID: 5980)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7133432626724243
    2. 'parent' → logprob: -0.8383432626724243
    3. '[parent' → logprob: -2.9633431434631348
    4. ' parent' → logprob: -4.338343143463135
    5. ' [' → logprob: -4.588343143463135
    6. '[N' → logprob: -7.088343143463135
    7. 'None' → logprob: -7.463343143463135
    8. '[-' → logprob: -7.588343143463135
    9. '#' → logprob: -8.463343620300293
    10. 'parents' → logprob: -9.338343620300293

Token 151: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0701671689748764
    2. '=' → logprob: -2.695167064666748
    3. 's' → logprob: -8.445167541503906
    4. '=[]' → logprob: -12.195167541503906
    5. ']' → logprob: -12.570167541503906
    6. '<|end|>' → logprob: -13.195167541503906
    7. ' =
' → logprob: -13.945167541503906
    8. '=[]
' → logprob: -14.445167541503906
    9. '[' → logprob: -14.570167541503906
    10. '=[' → logprob: -14.695167541503906

Token 152: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003691408783197403
    2. '=' → logprob: -6.25369119644165
    3. ' =' → logprob: -6.62869119644165
    4. ']=' → logprob: -8.378691673278809
    5. '=None' → logprob: -9.753691673278809
    6. 'None' → logprob: -10.128691673278809
    7. 's' → logprob: -10.253691673278809
    8. ' ]' → logprob: -10.628691673278809
    9. ')' → logprob: -10.878691673278809
    10. ':' → logprob: -12.253691673278809

Token 153: ' cont' (ID: 836)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20148371160030365
    2. '=' → logprob: -1.7014837265014648
    3. 's' → logprob: -10.701483726501465
    4. '=[]' → logprob: -11.076483726501465
    5. ':' → logprob: -11.576483726501465
    6. '<|end|>' → logprob: -11.701483726501465
    7. ' ' → logprob: -12.701483726501465
    8. ']' → logprob: -12.701483726501465
    9. '=None' → logprob: -13.076483726501465
    10. ')' → logprob: -13.951483726501465

Token 154: 'i' (ID: 72)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.00067966926144436
    2. 'ients' → logprob: -8.625679969787598
    3. 'i' → logprob: -8.750679969787598
    4. 'iend' → logprob: -8.875679969787598
    5. 'iennent' → logprob: -9.375679969787598
    6. '=' → logprob: -9.625679969787598
    7. 'iens' → logprob: -10.500679969787598
    8. '```' → logprob: -11.625679969787598
    9. 'ien' → logprob: -12.000679969787598
    10. 'ent' → logprob: -13.125679969787598

Token 155: 'endra' (ID: 32364)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.004109034780412912
    2. 'nt' → logprob: -5.629108905792236
    3. 'end' → logprob: -8.629109382629395
    4. '#' → logprob: -9.129109382629395
    5. 'endra' → logprob: -9.629109382629395
    6. 'nd' → logprob: -10.129109382629395
    7. 'ents' → logprob: -10.379109382629395
    8. '
' → logprob: -10.754109382629395
    9. 'nent' → logprob: -11.129109382629395
    10. '```' → logprob: -11.754109382629395

Token 156: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.0893489122390747
    2. 'le' → logprob: -1.3393489122390747
    3. 'l' → logprob: -2.089348793029785
    4. ' l' → logprob: -2.089348793029785
    5. '<|end|>' → logprob: -2.589348793029785
    6. ' ' → logprob: -3.964348793029785
    7. ' la' → logprob: -4.464348793029785
    8. 's' → logprob: -4.464348793029785
    9. ' None' → logprob: -4.589348793029785
    10. 'None' → logprob: -4.839348793029785

Token 157: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.03972316160798073
    2. 'p' → logprob: -3.9147231578826904
    3. ' parent' → logprob: -4.4147233963012695
    4. 'som' → logprob: -6.4147233963012695
    5. 'pere' → logprob: -6.5397233963012695
    6. 's' → logprob: -6.7897233963012695
    7. 'num' → logprob: -7.2897233963012695
    8. 'indice' → logprob: -7.5397233963012695
    9. ' sommet' → logprob: -8.03972339630127
    10. 'index' → logprob: -8.41472339630127

Token 158: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.22421938180923462
    2. 'de' → logprob: -2.34921932220459
    3. ' des' → logprob: -2.97421932220459
    4. 'des' → logprob: -3.97421932220459
    5. ' du' → logprob: -4.59921932220459
    6. 's' → logprob: -4.84921932220459
    7. '<|end|>' → logprob: -5.09921932220459
    8. ' =' → logprob: -6.34921932220459
    9. ')' → logprob: -6.47421932220459
    10. '[i' → logprob: -6.59921932220459

Token 159: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14597663283348083
    2. 'som' → logprob: -2.7709765434265137
    3. ' i' → logprob: -3.2709765434265137
    4. ' sommet' → logprob: -3.3959765434265137
    5. 's' → logprob: -6.645976543426514
    6. ' som' → logprob: -9.270977020263672
    7. 'node' → logprob: -9.645977020263672
    8. 'n' → logprob: -10.145977020263672
    9. ' noe' → logprob: -10.520977020263672
    10. '<|end|>' → logprob: -10.520977020263672

Token 160: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10087817907333374
    2. 'i' → logprob: -2.3508782386779785
    3. '[i' → logprob: -7.8508782386779785
    4. '<|end|>' → logprob: -8.60087776184082
    5. ')' → logprob: -9.97587776184082
    6. ')i' → logprob: -11.10087776184082
    7. '(i' → logprob: -11.85087776184082
    8. ' )' → logprob: -12.22587776184082
    9. '_i' → logprob: -12.35087776184082
    10. ']' → logprob: -12.85087776184082

Token 161: '.' (ID: 13)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16764602065086365
    2. 'parent' → logprob: -2.2926459312438965
    3. '=' → logprob: -4.0426459312438965
    4. ' parent' → logprob: -4.1676459312438965
    5. ']' → logprob: -4.9176459312438965
    6. ',' → logprob: -5.1676459312438965
    7. '(parent' → logprob: -6.6676459312438965
    8. 's' → logprob: -6.6676459312438965
    9. '#' → logprob: -7.2926459312438965
    10. ' ' → logprob: -7.4176459312438965

Token 162: ' On' (ID: 2160)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.5271673202514648
    2. 'parent' → logprob: -0.9021673202514648
    3. ' ' → logprob: -6.527167320251465
    4. '
' → logprob: -7.027167320251465
    5. ' 
' → logprob: -7.652167320251465
    6. '[parent' → logprob: -7.902167320251465
    7. '  
' → logprob: -9.027167320251465
    8. '	parent' → logprob: -9.027167320251465
    9. ',parent' → logprob: -9.152167320251465
    10. '[' → logprob: -9.277167320251465

Token 163: ' initialise' (ID: 145250)
  Prédit: ' initialise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initialise' → logprob: -0.6425769925117493
    2. ' met' → logprob: -1.1425769329071045
    3. 'initial' → logprob: -3.1425769329071045
    4. 'met' → logprob: -3.5175769329071045
    5. 'initialize' → logprob: -4.392577171325684
    6. ' initial' → logprob: -4.767577171325684
    7. ' initialize' → logprob: -4.892577171325684
    8. ' part' → logprob: -5.017577171325684
    9. ' commence' → logprob: -5.267577171325684
    10. 'le' → logprob: -5.642577171325684

Token 164: ' par' (ID: 686)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.7114797830581665
    2. ' parent' → logprob: -0.9614797830581665
    3. ' la' → logprob: -3.211479663848877
    4. '[' → logprob: -3.336479663848877
    5. 'la' → logprob: -3.836479663848877
    6. '[parent' → logprob: -4.586479663848877
    7. ' avec' → logprob: -5.461479663848877
    8. ' ' → logprob: -5.586479663848877
    9. ' le' → logprob: -6.461479663848877
    10. ' par' → logprob: -6.586479663848877

Token 165: ' None' (ID: 4662)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019285132875666022
    2. ' [' → logprob: -6.501928329467773
    3. '[N' → logprob: -8.626928329467773
    4. '[parent' → logprob: -8.876928329467773
    5. 'None' → logprob: -9.501928329467773
    6. '[-' → logprob: -10.876928329467773
    7. ' None' → logprob: -12.626928329467773
    8. '[n' → logprob: -13.251928329467773
    9. 'parent' → logprob: -13.501928329467773
    10. ' ' → logprob: -13.626928329467773

Token 166: '.' (ID: 13)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.46583807468414307
    2. 'parent' → logprob: -1.465838074684143
    3. ' parent' → logprob: -3.3408379554748535
    4. 's' → logprob: -3.4658379554748535
    5. '(parent' → logprob: -4.3408379554748535
    6. '[parent' → logprob: -4.3408379554748535
    7. '[' → logprob: -4.5908379554748535
    8. ' pour' → logprob: -4.7158379554748535
    9. ']' → logprob: -4.9658379554748535
    10. ',' → logprob: -5.2158379554748535

Token 167: ' 
' (ID: 793)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.01440606638789177
    2. ' parent' → logprob: -4.264406204223633
    3. '
' → logprob: -8.639406204223633
    4. '[parent' → logprob: -10.389406204223633
    5. '(parent' → logprob: -11.514406204223633
    6. '_parent' → logprob: -12.264406204223633
    7. '.parent' → logprob: -12.264406204223633
    8. '[' → logprob: -12.514406204223633
    9. ',parent' → logprob: -12.889406204223633
    10. ' =' → logprob: -12.889406204223633

Token 168: '#' (ID: 2)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.026362191885709763
    2. ' parent' → logprob: -3.651362180709839
    3. '
' → logprob: -9.901362419128418
    4. '(parent' → logprob: -13.026362419128418
    5. '[parent' → logprob: -13.151362419128418
    6. '_parent' → logprob: -13.401362419128418
    7. ',parent' → logprob: -13.401362419128418
    8. '	parent' → logprob: -13.651362419128418
    9. '.parent' → logprob: -13.776362419128418
    10. '```' → logprob: -14.401362419128418

Token 169: ' On' (ID: 2160)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0024843348655849695
    2. ' parent' → logprob: -6.002484321594238
    3. 'parents' → logprob: -13.377484321594238
    4. '#' → logprob: -13.502484321594238
    5. '
' → logprob: -13.752484321594238
    6. '[parent' → logprob: -14.002484321594238
    7. '```' → logprob: -14.127484321594238
    8. 'Parent' → logprob: -14.127484321594238
    9. '	parent' → logprob: -14.752484321594238
    10. '.parent' → logprob: -15.127484321594238

Token 170: ' met' (ID: 1421)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.419363260269165
    2. 'n' → logprob: -2.419363260269165
    3. ' continue' → logprob: -2.419363260269165
    4. 'continue' → logprob: -2.544363260269165
    5. 'for' → logprob: -3.044363260269165
    6. 'l' → logprob: -3.169363260269165
    7. 's' → logprob: -3.294363260269165
    8. ' parent' → logprob: -3.419363260269165
    9. 'le' → logprob: -3.794363260269165
    10. ' ajoute' → logprob: -3.794363260269165

Token 171: ' N' (ID: 478)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.5853641033172607
    2. 'parent' → logprob: -0.8353641033172607
    3. ' le' → logprob: -5.46036434173584
    4. ' ' → logprob: -5.83536434173584
    5. '[parent' → logprob: -7.46036434173584
    6. 'le' → logprob: -7.83536434173584
    7. ' None' → logprob: -7.96036434173584
    8. '[' → logprob: -8.33536434173584
    9. 'None' → logprob: -8.96036434173584
    10. ' la' → logprob: -9.21036434173584

Token 172: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16546612977981567
    2. ' +' → logprob: -2.040466070175171
    3. '*[' → logprob: -4.91546630859375
    4. '[' → logprob: -5.29046630859375
    5. ' *' → logprob: -5.79046630859375
    6. '*' → logprob: -5.91546630859375
    7. '+[' → logprob: -6.29046630859375
    8. ' [' → logprob: -6.91546630859375
    9. ' ' → logprob: -8.16546630859375
    10. '[parent' → logprob: -8.91546630859375

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012511172099038959
    2. ' ' → logprob: -9.75012493133545
    3. '2' → logprob: -10.00012493133545
    4. '[' → logprob: -11.37512493133545
    5. '
' → logprob: -12.50012493133545
    6. ' [' → logprob: -12.75012493133545
    7. '

' → logprob: -14.00012493133545
    8. 'None' → logprob: -14.62512493133545
    9. '  ' → logprob: -15.00012493133545
    10. '[N' → logprob: -15.12512493133545

Token 174: ' éléments' (ID: 57375)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4254348576068878
    2. '*[' → logprob: -2.1754348278045654
    3. 'elements' → logprob: -2.9254348278045654
    4. ')' → logprob: -2.9254348278045654
    5. '[parent' → logprob: -3.3004348278045654
    6. ' éléments' → logprob: -3.5504348278045654
    7. ' elements' → logprob: -3.5504348278045654
    8. ']' → logprob: -4.9254350662231445
    9. ' [' → logprob: -5.0504350662231445
    10. '*' → logprob: -5.5504350662231445

Token 175: ' car' (ID: 1669)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7251214981079102
    2. 'parent' → logprob: -1.1001214981079102
    3. '=' → logprob: -2.60012149810791
    4. '=[' → logprob: -3.35012149810791
    5. '[parent' → logprob: -3.47512149810791
    6. '[' → logprob: -4.22512149810791
    7. '(parent' → logprob: -4.85012149810791
    8. ' parent' → logprob: -4.97512149810791
    9. '([' → logprob: -5.10012149810791
    10. ',' → logprob: -5.85012149810791

Token 176: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.06939739733934402
    2. ' l' → logprob: -3.194397449493408
    3. ' on' → logprob: -4.694397449493408
    4. 'les' → logprob: -5.194397449493408
    5. ' la' → logprob: -5.694397449493408
    6. 'l' → logprob: -6.319397449493408
    7. ' le' → logprob: -6.444397449493408
    8. ' nous' → logprob: -6.819397449493408
    9. ' indices' → logprob: -7.319397449493408
    10. 'la' → logprob: -7.444397449493408

Token 177: ' somm' (ID: 44830)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.4799414873123169
    2. ' somm' → logprob: -1.229941487312317
    3. 'indices' → logprob: -3.2299413681030273
    4. 's' → logprob: -4.354941368103027
    5. ' sommet' → logprob: -4.354941368103027
    6. ' graph' → logprob: -5.104941368103027
    7. ' index' → logprob: -5.354941368103027
    8. 'som' → logprob: -5.729941368103027
    9. 'index' → logprob: -5.729941368103027
    10. ' arbres' → logprob: -6.479941368103027

Token 178: 'ets' (ID: 1719)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.672744631767273
    2. 'ets' → logprob: -1.047744631767273
    3. 'ents' → logprob: -3.0477447509765625
    4. 'es' → logprob: -3.4227447509765625
    5. 'ètres' → logprob: -4.0477447509765625
    6. 'ots' → logprob: -4.2977447509765625
    7. 'és' → logprob: -5.4227447509765625
    8. 't' → logprob: -5.5477447509765625
    9. '#' → logprob: -5.6727447509765625
    10. 'êtres' → logprob: -5.6727447509765625

Token 179: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.181997150182724
    2. ' vont' → logprob: -2.431997060775757
    3. 's' → logprob: -3.181997060775757
    4. ' ont' → logprob: -4.556997299194336
    5. ' commencent' → logprob: -4.931997299194336
    6. ' are' → logprob: -5.181997299194336
    7. ' ' → logprob: -6.306997299194336
    8. ' peuvent' → logprob: -6.306997299194336
    9. ' indices' → logprob: -6.431997299194336
    10. 'ont' → logprob: -6.681997299194336

Token 180: ' de' (ID: 334)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.7357073426246643
    2. 'num' → logprob: -1.1107072830200195
    3. ' index' → logprob: -2.2357072830200195
    4. 'index' → logprob: -2.4857072830200195
    5. 'indexed' → logprob: -8.36070728302002
    6. 'indices' → logprob: -8.48570728302002
    7. ' numbered' → logprob: -8.86070728302002
    8. ' indexed' → logprob: -9.23570728302002
    9. ' ' → logprob: -9.48570728302002
    10. ' de' → logprob: -9.86070728302002

Token 181: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0817250981926918
    2. ' ' → logprob: -2.5817251205444336
    3. '0' → logprob: -5.956725120544434
    4. 'index' → logprob: -9.581725120544434
    5. 'l' → logprob: -10.331725120544434
    6. ' index' → logprob: -10.456725120544434
    7. 'range' → logprob: -10.956725120544434
    8. ' la' → logprob: -11.331725120544434
    9. ' range' → logprob: -11.581725120544434
    10. ' indices' → logprob: -11.706725120544434

Token 182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010532920714467764
    2. ' ' → logprob: -7.251053333282471
    3. '0' → logprob: -8.251052856445312
    4. 'index' → logprob: -10.501052856445312
    5. 'indices' → logprob: -10.751052856445312
    6. 'indice' → logprob: -11.251052856445312
    7. 'num' → logprob: -12.126052856445312
    8. 'range' → logprob: -12.251052856445312
    9. 'l' → logprob: -13.001052856445312
    10. ' indices' → logprob: -13.626052856445312

Token 183: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.03463176637887955
    2. 'à' → logprob: -3.6596317291259766
    3. ' ' → logprob: -5.909631729125977
    4. 's' → logprob: -6.909631729125977
    5. '-based' → logprob: -7.034631729125977
    6. ' to' → logprob: -7.284631729125977
    7. ' jusqu' → logprob: -7.409631729125977
    8. ',' → logprob: -7.659631729125977
    9. 'based' → logprob: -8.159631729125977
    10. ')' → logprob: -8.159631729125977

Token 184: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3868713676929474
    2. ' N' → logprob: -1.136871337890625
    3. ' ' → logprob: -15.011871337890625
    4. '>N' → logprob: -18.136871337890625
    5. '	N' → logprob: -18.261871337890625
    6. 'n' → logprob: -18.261871337890625
    7. ' ' → logprob: -18.386871337890625
    8. ',N' → logprob: -18.511871337890625
    9. '<|end|>' → logprob: -18.761871337890625
    10. '
' → logprob: -18.886871337890625

Token 185: ' inclus' (ID: 11891)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.07068713009357452
    2. ' parent' → logprob: -2.8206870555877686
    3. ',' → logprob: -5.070687294006348
    4. ',parent' → logprob: -6.445687294006348
    5. '_parent' → logprob: -8.195687294006348
    6. '[parent' → logprob: -8.945687294006348
    7. '(parent' → logprob: -9.070687294006348
    8. '.parent' → logprob: -9.320687294006348
    9. ' ,' → logprob: -9.945687294006348
    10. ' =' → logprob: -9.945687294006348

Token 186: ' (' (ID: 350)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.06475207209587097
    2. ' parent' → logprob: -2.8147521018981934
    3. ' =' → logprob: -6.314752101898193
    4. '[parent' → logprob: -7.939752101898193
    5. '_parent' → logprob: -8.439751625061035
    6. '[' → logprob: -9.189751625061035
    7. ',parent' → logprob: -9.314751625061035
    8. '=' → logprob: -10.189751625061035
    9. '
' → logprob: -10.314751625061035
    10. ',' → logprob: -10.439751625061035

Token 187: 'on' (ID: 263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030854942742735147
    2. ').' → logprob: -6.878085613250732
    3. 'N' → logprob: -7.628085613250732
    4. 'parent' → logprob: -7.628085613250732
    5. 'range' → logprob: -8.128085136413574
    6. ' )' → logprob: -8.253085136413574
    7. ',' → logprob: -9.128085136413574
    8. ' parent' → logprob: -9.128085136413574
    9. ' N' → logprob: -9.378085136413574
    10. ']' → logprob: -10.253085136413574

Token 188: ' ignore' (ID: 17887)
  Prédit: ' veut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' veut' → logprob: -0.8347121477127075
    2. ' range' → logprob: -1.4597121477127075
    3. ' souhaite' → logprob: -2.334712028503418
    4. 'range' → logprob: -2.584712028503418
    5. ')' → logprob: -3.334712028503418
    6. ' a' → logprob: -3.459712028503418
    7. ' met' → logprob: -3.834712028503418
    8. ' préfère' → logprob: -4.709712028503418
    9. ' veux' → logprob: -4.834712028503418
    10. ' )' → logprob: -5.209712028503418

Token 189: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5350034832954407
    2. ' ' → logprob: -1.910003423690796
    3. ' l' → logprob: -1.910003423690796
    4. ' index' → logprob: -2.660003423690796
    5. 'index' → logprob: -4.410003662109375
    6. ' le' → logprob: -4.535003662109375
    7. 'l' → logprob: -4.660003662109375
    8. ' la' → logprob: -4.660003662109375
    9. '[' → logprob: -5.785003662109375
    10. 'le' → logprob: -6.160003662109375

Token 190: ''ind' (ID: 82245)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007887208834290504
    2. 'index' → logprob: -5.132887363433838
    3. 'indice' → logprob: -7.007887363433838
    4. ' index' → logprob: -8.00788688659668
    5. '[' → logprob: -9.25788688659668
    6. 'indices' → logprob: -9.63288688659668
    7. ')' → logprob: -9.75788688659668
    8. ' ' → logprob: -9.88288688659668
    9. '```' → logprob: -10.00788688659668
    10. '=' → logprob: -10.00788688659668

Token 191: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -7.433829159708694e-05
    2. 'ice' → logprob: -10.37507438659668
    3. 'ices' → logprob: -11.50007438659668
    4. 'é' → logprob: -11.62507438659668
    5. 'dex' → logprob: -11.75007438659668
    6. 'expl' → logprob: -13.12507438659668
    7. '#' → logprob: -13.12507438659668
    8. 'екс' → logprob: -13.37507438659668
    9. 'e' → logprob: -14.00007438659668
    10. 'x' → logprob: -14.12507438659668

Token 192: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10021109133958817
    2. ' ' → logprob: -2.3502111434936523
    3. '[' → logprob: -13.975211143493652
    4. ')' → logprob: -14.100211143493652
    5. '```' → logprob: -14.350211143493652
    6. ' ' → logprob: -14.475211143493652
    7. '00' → logprob: -15.225211143493652
    8. ' #' → logprob: -15.725211143493652
    9. '000' → logprob: -15.975211143493652
    10. ' 
' → logprob: -15.975211143493652

Token 193: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.590104698669165e-05
    2. ' ' → logprob: -9.375085830688477
    3. '[' → logprob: -14.375085830688477
    4. ')' → logprob: -15.500085830688477
    5. '```' → logprob: -16.250085830688477
    6. ',' → logprob: -16.875085830688477
    7. '=' → logprob: -17.125085830688477
    8. ' ' → logprob: -17.625085830688477
    9. '
' → logprob: -18.375085830688477
    10. '۰' → logprob: -18.500085830688477

Token 194: ').
' (ID: 6294)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.41718313097953796
    2. ')]' → logprob: -1.6671831607818604
    3. ')' → logprob: -1.9171831607818604
    4. ' ]' → logprob: -5.292182922363281
    5. ' )' → logprob: -9.292182922363281
    6. '])' → logprob: -9.542182922363281
    7. ')])' → logprob: -10.667182922363281
    8. ').' → logprob: -10.917182922363281
    9. ')].' → logprob: -11.292182922363281
    10. '].' → logprob: -11.792182922363281

Token 195: 'parent' (ID: 4903)
  Prédit: 'parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0003049570368602872
    2. ' parent' → logprob: -8.12530517578125
    3. '[parent' → logprob: -12.25030517578125
    4. '
' → logprob: -13.12530517578125
    5. '```' → logprob: -14.00030517578125
    6. '[' → logprob: -15.12530517578125
    7. 'parents' → logprob: -15.37530517578125
    8. '.parent' → logprob: -15.50030517578125
    9. '(parent' → logprob: -15.50030517578125
    10. ',parent' → logprob: -15.62530517578125

Token 196: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889991998672485
    2. '=' → logprob: -2.57889986038208
    3. ' =[' → logprob: -12.328900337219238
    4. '=[' → logprob: -13.328900337219238
    5. '[' → logprob: -13.953900337219238
    6. ' ' → logprob: -14.203900337219238
    7. ']' → logprob: -14.328900337219238
    8. ')' → logprob: -14.578900337219238
    9. 's' → logprob: -14.703900337219238
    10. '=[]' → logprob: -14.828900337219238

Token 197: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008756381459534168
    2. ' [' → logprob: -4.758756160736084
    3. '[N' → logprob: -8.883756637573242
    4. '[n' → logprob: -12.883756637573242
    5. ' ' → logprob: -14.758756637573242
    6. '   ' → logprob: -15.383756637573242
    7. '[parent' → logprob: -16.883756637573242
    8. '[num' → logprob: -18.008756637573242
    9. '=[' → logprob: -18.133756637573242
    10. '  ' → logprob: -18.258756637573242

Token 198: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.5094070477061905e-05
    2. ' None' → logprob: -11.125015258789062
    3. '(None' → logprob: -15.500015258789062
    4. '[' → logprob: -17.625015258789062
    5. '_None' → logprob: -17.750015258789062
    6. ',None' → logprob: -18.000015258789062
    7. '   ' → logprob: -18.750015258789062
    8. '=None' → logprob: -19.500015258789062
    9. '.None' → logprob: -19.625015258789062
    10. '```' → logprob: -19.625015258789062

Token 199: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004984809085726738
    2. ' for' → logprob: -5.7549848556518555
    3. 'for' → logprob: -6.5049848556518555
    4. ']*(' → logprob: -8.379984855651855
    5. ']+' → logprob: -10.129984855651855
    6. ']*' → logprob: -10.379984855651855
    7. ',' → logprob: -12.254984855651855
    8. '(N' → logprob: -13.254984855651855
    9. ')' → logprob: -13.754984855651855
    10. ' ]' → logprob: -13.879984855651855

Token 200: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1452841758728027
    2. '*' → logprob: -1.2702841758728027
    3. '*(' → logprob: -1.2702841758728027
    4. ']+' → logprob: -3.5202841758728027
    5. ' for' → logprob: -3.5202841758728027
    6. ']*(' → logprob: -3.5202841758728027
    7. ' *' → logprob: -4.645284175872803
    8. '+' → logprob: -4.770284175872803
    9. ',' → logprob: -4.895284175872803
    10. 'for' → logprob: -5.645284175872803

Token 201: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -8.613945101387799e-05
    2. ' (' → logprob: -9.500085830688477
    3. '(' → logprob: -11.750085830688477
    4. 'N' → logprob: -13.125085830688477
    5. '(n' → logprob: -14.000085830688477
    6. '((' → logprob: -14.625085830688477
    7. '   ' → logprob: -17.000085830688477
    8. '(
' → logprob: -17.750085830688477
    9. ' N' → logprob: -18.125085830688477
    10. ' ' → logprob: -18.750085830688477

Token 202: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -3.976922744186595e-05
    2. ' N' → logprob: -10.250040054321289
    3. '(N' → logprob: -12.375040054321289
    4. '   ' → logprob: -16.87504005432129
    5. ' (' → logprob: -17.25004005432129
    6. '(' → logprob: -18.12504005432129
    7. ' ' → logprob: -19.25004005432129
    8. '	N' → logprob: -19.37504005432129
    9. ')' → logprob: -19.50004005432129
    10. '
' → logprob: -20.00004005432129

Token 203: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0017030329909175634
    2. ' +' → logprob: -6.376703262329102
    3. '+
' → logprob: -14.001703262329102
    4. '＋' → logprob: -17.8767032623291
    5. ' +
' → logprob: -18.0017032623291
    6. '()+' → logprob: -18.5017032623291
    7. '1' → logprob: -18.7517032623291
    8. '```' → logprob: -18.7517032623291
    9. ' plus' → logprob: -18.8767032623291
    10. ' ' → logprob: -18.8767032623291

Token 204: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '2' → logprob: -18.125045776367188
    4. ')' → logprob: -18.375045776367188
    5. '
' → logprob: -18.375045776367188
    6. '```' → logprob: -18.375045776367188
    7. '   ' → logprob: -18.625045776367188
    8. '  ' → logprob: -19.437545776367188
    9. '１' → logprob: -19.562545776367188
    10. '

' → logprob: -19.562545776367188

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '2' → logprob: -19.125001907348633
    4. '```' → logprob: -20.000001907348633
    5. '１' → logprob: -20.250001907348633
    6. '   ' → logprob: -20.375001907348633
    7. '۱' → logprob: -20.750001907348633
    8. '
' → logprob: -20.750001907348633
    9. '

' → logprob: -22.000001907348633
    10. '  ' → logprob: -22.062501907348633

Token 206: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -14.750000953674316
    4. ')#' → logprob: -15.375000953674316
    5. ')

' → logprob: -17.125001907348633
    6. ']' → logprob: -17.875001907348633
    7. '<|end|>' → logprob: -18.250001907348633
    8. '#' → logprob: -18.500001907348633
    9. ')`' → logprob: -18.625001907348633
    10. '),' → logprob: -19.000001907348633

Token 207: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03723026439547539
    2. 'i' → logprob: -3.7872302532196045
    3. '#' → logprob: -5.662230491638184
    4. ' for' → logprob: -5.912230491638184
    5. 'max' → logprob: -7.037230491638184
    6. 'edges' → logprob: -7.162230491638184
    7. 'j' → logprob: -7.162230491638184
    8. '0' → logprob: -7.287230491638184
    9. 'Q' → logprob: -7.287230491638184
    10. '<|end|>' → logprob: -7.537230491638184

Token 208: ' Cré' (ID: 109203)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004334575962275267
    2. 'Q' → logprob: -6.504334449768066
    3. 'from' → logprob: -6.754334449768066
    4. '#' → logprob: -7.504334449768066
    5. 'stack' → logprob: -7.879334449768066
    6. 'edges' → logprob: -8.254334449768066
    7. 'import' → logprob: -9.129334449768066
    8. 'adj' → logprob: -9.379334449768066
    9. 'graph' → logprob: -9.629334449768066
    10. 'visited' → logprob: -10.254334449768066

Token 209: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0012501158053055406
    2. 'ption' → logprob: -6.876250267028809
    3. '#' → logprob: -9.001250267028809
    4. 'tion' → logprob: -10.501250267028809
    5. 'lation' → logprob: -10.876250267028809
    6. 'pt' → logprob: -11.376250267028809
    7. 'at' → logprob: -11.751250267028809
    8. 'et' → logprob: -13.001250267028809
    9. 'vation' → logprob: -13.001250267028809
    10. '```' → logprob: -13.126250267028809

Token 210: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.580509603023529
    2. 'd' → logprob: -0.830509603023529
    3. '(' → logprob: -6.330509662628174
    4. '[' → logprob: -6.830509662628174
    5. 's' → logprob: -7.705509662628174
    6. '#' → logprob: -7.830509662628174
    7. ' of' → logprob: -8.330509185791016
    8. '(
' → logprob: -8.955509185791016
    9. ' des' → logprob: -8.955509185791016
    10. ' de' → logprob: -9.955509185791016

Token 211: ' la' (ID: 557)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.7895914316177368
    2. 'graph' → logprob: -0.9145914316177368
    3. 'visited' → logprob: -2.4145913124084473
    4. 'children' → logprob: -4.789591312408447
    5. '[]' → logprob: -5.039591312408447
    6. 'edges' → logprob: -5.164591312408447
    7. 'dist' → logprob: -5.664591312408447
    8. ' adjacency' → logprob: -5.664591312408447
    9. 'G' → logprob: -5.789591312408447
    10. ' graph' → logprob: -6.039591312408447

Token 212: ' liste' (ID: 31719)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3360186219215393
    2. 'adj' → logprob: -2.2110185623168945
    3. 'visited' → logprob: -2.4610185623168945
    4. 'stack' → logprob: -3.3360185623168945
    5. 'queue' → logprob: -3.8360185623168945
    6. 'dp' → logprob: -4.9610185623168945
    7. 'children' → logprob: -5.2110185623168945
    8. 'for' → logprob: -5.5860185623168945
    9. 'Q' → logprob: -6.0860185623168945
    10. ' graph' → logprob: -6.3360185623168945

Token 213: ' size' (ID: 2349)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.6446838974952698
    2. 'adj' → logprob: -2.019683837890625
    3. ' children' → logprob: -2.144683837890625
    4. 'visited' → logprob: -2.644683837890625
    5. 'graph' → logprob: -3.144683837890625
    6. ' graph' → logprob: -3.644683837890625
    7. ' adjacency' → logprob: -3.769683837890625
    8. ' visited' → logprob: -4.144683837890625
    9. ' adj' → logprob: -4.519683837890625
    10. 'edges' → logprob: -4.894683837890625

Token 214: ' :
' (ID: 10039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03366656228899956
    2. '=' → logprob: -3.4086666107177734
    3. 's' → logprob: -11.408666610717773
    4. 'parent' → logprob: -12.283666610717773
    5. '[' → logprob: -13.283666610717773
    6. '=[' → logprob: -13.658666610717773
    7. 'size' → logprob: -14.783666610717773
    8. ' ' → logprob: -14.783666610717773
    9. '=size' → logprob: -15.533666610717773
    10. ' =[' → logprob: -15.658666610717773

Token 215: '#' (ID: 2)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.6249257922172546
    2. '[size' → logprob: -1.3749258518218994
    3. '[' → logprob: -1.6249258518218994
    4. '#' → logprob: -4.99992561340332
    5. ' size' → logprob: -5.49992561340332
    6. ' [' → logprob: -5.87492561340332
    7. '(size' → logprob: -7.74992561340332
    8. '=size' → logprob: -7.87492561340332
    9. '<size' → logprob: -8.99992561340332
    10. '[N' → logprob: -9.62492561340332

Token 216: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.009006763808429241
    2. '#' → logprob: -4.884006977081299
    3. '[' → logprob: -7.384006977081299
    4. '[size' → logprob: -7.384006977081299
    5. ' size' → logprob: -8.88400650024414
    6. '
' → logprob: -12.75900650024414
    7. '(size' → logprob: -12.75900650024414
    8. 'La' → logprob: -13.25900650024414
    9. '[N' → logprob: -13.50900650024414
    10. ' #' → logprob: -13.75900650024414

Token 217: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02325631119310856
    2. '=' → logprob: -3.773256301879883
    3. 's' → logprob: -12.398256301879883
    4. '[' → logprob: -12.773256301879883
    5. ' ' → logprob: -14.023256301879883
    6. ']' → logprob: -14.148256301879883
    7. '=[' → logprob: -14.648256301879883
    8. 'size' → logprob: -15.023256301879883
    9. '=size' → logprob: -15.273256301879883
    10. '<|end|>' → logprob: -15.398256301879883

Token 218: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010250702034682035
    2. '=' → logprob: -7.126025199890137
    3. ']=' → logprob: -9.251025199890137
    4. ' =' → logprob: -9.626025199890137
    5. ' ]' → logprob: -10.376025199890137
    6. ')' → logprob: -10.751025199890137
    7. 's' → logprob: -13.626025199890137
    8. ']
' → logprob: -14.126025199890137
    9. ']

' → logprob: -14.376025199890137
    10. '#' → logprob: -14.876025199890137

Token 219: ' serv' (ID: 2096)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741172194480896
    2. '=' → logprob: -0.9741172194480896
    3. 's' → logprob: -11.224117279052734
    4. '=[' → logprob: -12.349117279052734
    5. ' ' → logprob: -12.724117279052734
    6. '=None' → logprob: -12.849117279052734
    7. ']' → logprob: -12.974117279052734
    8. ' ' → logprob: -13.099117279052734
    9. '=size' → logprob: -13.474117279052734
    10. 'a' → logprob: -13.849117279052734

Token 220: 'ira' (ID: 2633)
  Prédit: 'ant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.8694431185722351
    2. 'ira' → logprob: -1.3694431781768799
    3. 'ra' → logprob: -1.6194431781768799
    4. 'e' → logprob: -2.86944317817688
    5. 'a' → logprob: -3.99444317817688
    6. '[' → logprob: -4.119442939758301
    7. 'era' → logprob: -4.744442939758301
    8. '#' → logprob: -4.869442939758301
    9. 'i' → logprob: -5.119442939758301
    10. 'ent' → logprob: -5.494442939758301

Token 221: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1643488109111786
    2. 'à' → logprob: -2.039348840713501
    3. '<|end|>' → logprob: -4.414348602294922
    4. ' =' → logprob: -5.539348602294922
    5. ' ' → logprob: -6.164348602294922
    6. '=' → logprob: -6.914348602294922
    7. 'a' → logprob: -7.789348602294922
    8. ''à' → logprob: -7.789348602294922
    9. 's' → logprob: -8.414348602294922
    10. '’à' → logprob: -8.914348602294922

Token 222: ' garder' (ID: 63069)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5648608207702637
    2. 'stock' → logprob: -1.9398608207702637
    3. ' stock' → logprob: -2.0648608207702637
    4. '1' → logprob: -2.0648608207702637
    5. ' [' → logprob: -4.314860820770264
    6. '0' → logprob: -4.689860820770264
    7. ' ' → logprob: -5.064860820770264
    8. ' représ' → logprob: -7.439860820770264
    9. 'maint' → logprob: -7.689860820770264
    10. ' compter' → logprob: -7.689860820770264

Token 223: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.25885728001594543
    2. ' la' → logprob: -1.633857250213623
    3. '1' → logprob: -5.008857250213623
    4. 'le' → logprob: -5.258857250213623
    5. 'à' → logprob: -5.258857250213623
    6. ' ' → logprob: -5.633857250213623
    7. '[' → logprob: -5.883857250213623
    8. ' à' → logprob: -6.008857250213623
    9. 'tail' → logprob: -6.008857250213623
    10. '0' → logprob: -6.383857250213623

Token 224: ' taille' (ID: 41644)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.008759336546063423
    2. '1' → logprob: -5.008759498596191
    3. ' taille' → logprob: -6.633759498596191
    4. 'ta' → logprob: -7.883759498596191
    5. '0' → logprob: -8.758759498596191
    6. ' ' → logprob: -9.133759498596191
    7. '   ' → logprob: -10.883759498596191
    8. ' tail' → logprob: -11.883759498596191
    9. 'la' → logprob: -12.008759498596191
    10. '
' → logprob: -12.008759498596191

Token 225: ' du' (ID: 1462)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.06495707482099533
    2. ' de' → logprob: -3.5649571418762207
    3. 'des' → logprob: -4.064957141876221
    4. '_des' → logprob: -4.689957141876221
    5. ' ' → logprob: -6.564957141876221
    6. ' d' → logprob: -6.689957141876221
    7. ' du' → logprob: -6.939957141876221
    8. '[i' → logprob: -7.314957141876221
    9. ')' → logprob: -7.439957141876221
    10. ' )' → logprob: -7.439957141876221

Token 226: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1356310844421387
    2. 'com' → logprob: -1.1356310844421387
    3. 'i' → logprob: -2.5106310844421387
    4. ' sous' → logprob: -3.1356310844421387
    5. ' arbre' → logprob: -3.1356310844421387
    6. 'l' → logprob: -3.5106310844421387
    7. ' compos' → logprob: -3.6356310844421387
    8. 'ensemble' → logprob: -3.7606310844421387
    9. ' subtree' → logprob: -3.8856310844421387
    10. ' i' → logprob: -4.010631084442139

Token 227: '-ar' (ID: 31325)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.05463220179080963
    2. '-ar' → logprob: -3.0546321868896484
    3. 'arb' → logprob: -6.304632186889648
    4. ' arbre' → logprob: -6.429632186889648
    5. '-' → logprob: -6.554632186889648
    6. '_ar' → logprob: -7.804632186889648
    7. '```' → logprob: -8.429632186889648
    8. '-tree' → logprob: -8.929632186889648
    9. ''ar' → logprob: -9.179632186889648
    10. '
' → logprob: -9.679632186889648

Token 228: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.0006609689444303513
    2. 'b' → logprob: -8.00066089630127
    3. 'r' → logprob: -9.37566089630127
    4. 'bo' → logprob: -9.50066089630127
    5. 'e' → logprob: -9.87566089630127
    6. 'br' → logprob: -9.87566089630127
    7. 'ceau' → logprob: -11.25066089630127
    8. 'bor' → logprob: -11.37566089630127
    9. 'm' → logprob: -12.25066089630127
    10. 'ray' → logprob: -12.37566089630127

Token 229: ' (' (ID: 350)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.36657214164733887
    2. ' i' → logprob: -1.7415721416473389
    3. '(i' → logprob: -3.366572141647339
    4. 'i' → logprob: -3.991572141647339
    5. 's' → logprob: -4.241572380065918
    6. ' des' → logprob: -4.616572380065918
    7. ' ' → logprob: -4.991572380065918
    8. ' (' → logprob: -5.116572380065918
    9. ' de' → logprob: -5.241572380065918
    10. ' du' → logprob: -5.491572380065918

Token 230: 'nombre' (ID: 28576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2363826036453247
    2. 'i' → logprob: -2.736382484436035
    3. ' )' → logprob: -2.986382484436035
    4. '[i' → logprob: -3.236382484436035
    5. ')i' → logprob: -3.986382484436035
    6. ' i' → logprob: -4.236382484436035
    7. '(i' → logprob: -4.736382484436035
    8. ' de' → logprob: -5.736382484436035
    9. 'parent' → logprob: -6.486382484436035
    10. 'de' → logprob: -6.736382484436035

Token 231: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2958543002605438
    2. ' d' → logprob: -2.295854330062866
    3. ' des' → logprob: -3.045854330062866
    4. 'de' → logprob: -3.045854330062866
    5. ' =' → logprob: -3.670854330062866
    6. ')' → logprob: -4.670854091644287
    7. 'd' → logprob: -4.795854091644287
    8. '_de' → logprob: -5.670854091644287
    9. '=' → logprob: -5.920854091644287
    10. 'des' → logprob: -6.045854091644287

Token 232: ' somm' (ID: 44830)
  Prédit: ' noe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' noe' → logprob: -0.30222025513648987
    2. 'élé' → logprob: -2.802220344543457
    3. 'n' → logprob: -2.927220344543457
    4. 's' → logprob: -3.302220344543457
    5. 'no' → logprob: -3.677220344543457
    6. 'nodes' → logprob: -3.927220344543457
    7. ' n' → logprob: -4.052220344543457
    8. ' somm' → logprob: -4.177220344543457
    9. 'i' → logprob: -4.802220344543457
    10. 'som' → logprob: -5.177220344543457

Token 233: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.040514618158340454
    2. 'et' → logprob: -3.4155147075653076
    3. 'ètres' → logprob: -5.9155144691467285
    4. 'e' → logprob: -6.7905144691467285
    5. 'êtres' → logprob: -6.7905144691467285
    6. 'êts' → logprob: -7.0405144691467285
    7. 'es' → logprob: -7.9155144691467285
    8. 'è' → logprob: -8.290514945983887
    9. 'ètes' → logprob: -9.040514945983887
    10. 'ettes' → logprob: -9.790514945983887

Token 234: ' dedans' (ID: 183499)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08769277483224869
    2. ' )' → logprob: -2.5876927375793457
    3. '[i' → logprob: -5.212692737579346
    4. 's' → logprob: -7.212692737579346
    5. ' ' → logprob: -7.837692737579346
    6. 'dans' → logprob: -7.962692737579346
    7. '   ' → logprob: -8.462693214416504
    8. ',' → logprob: -8.462693214416504
    9. ' sous' → logprob: -8.962693214416504
    10. ' dans' → logprob: -8.962693214416504

Token 235: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018111666664481163
    2. ' )' → logprob: -4.143111705780029
    3. '[i' → logprob: -6.518111705780029
    4. ',' → logprob: -8.268111228942871
    5. '[' → logprob: -9.018111228942871
    6. 's' → logprob: -9.643111228942871
    7. ' ,' → logprob: -10.893111228942871
    8. ' de' → logprob: -11.268111228942871
    9. '(i' → logprob: -11.518111228942871
    10. ' ' → logprob: -11.518111228942871

Token 236: ' lui' (ID: 10623)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6012809872627258
    2. ' y' → logprob: -1.726280927658081
    3. ')' → logprob: -1.851280927658081
    4. 'including' → logprob: -3.601280927658081
    5. '#' → logprob: -3.976280927658081
    6. ' )' → logprob: -4.22628116607666
    7. 'initial' → logprob: -4.35128116607666
    8. '0' → logprob: -4.72628116607666
    9. ' including' → logprob: -5.22628116607666
    10. '1' → logprob: -5.35128116607666

Token 237: '-même' (ID: 41085)
  Prédit: '-même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-même' → logprob: -0.9247955679893494
    2. 'm' → logprob: -1.2997956275939941
    3. ' compris' → logprob: -2.174795627593994
    4. 'y' → logprob: -2.174795627593994
    5. ')' → logprob: -2.799795627593994
    6. '+' → logprob: -4.049795627593994
    7. '```' → logprob: -4.799795627593994
    8. ' y' → logprob: -5.924795627593994
    9. '-mêmes' → logprob: -5.924795627593994
    10. 'compr' → logprob: -6.049795627593994

Token 238: ' inclus' (ID: 11891)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02150234952569008
    2. ' compris' → logprob: -4.896502494812012
    3. ' inclus' → logprob: -5.146502494812012
    4. ' )' → logprob: -5.396502494812012
    5. '+' → logprob: -6.771502494812012
    6. ' plus' → logprob: -7.021502494812012
    7. ')+' → logprob: -8.396502494812012
    8. ' +' → logprob: -8.646502494812012
    9. 'incl' → logprob: -8.646502494812012
    10. 'y' → logprob: -8.771502494812012

Token 239: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000476190383778885
    2. ' )' → logprob: -7.875476360321045
    3. '[' → logprob: -9.625475883483887
    4. ')
' → logprob: -11.625475883483887
    5. '[i' → logprob: -12.500475883483887
    6. ']' → logprob: -12.625475883483887
    7. '(' → logprob: -12.875475883483887
    8. ' ' → logprob: -13.500475883483887
    9. ',' → logprob: -13.750475883483887
    10. ').' → logprob: -13.875475883483887

Token 240: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03754284232854843
    2. '=' → logprob: -3.6625428199768066
    3. 'size' → logprob: -4.662542819976807
    4. '=size' → logprob: -7.412542819976807
    5. ' size' → logprob: -7.537542819976807
    6. '[size' → logprob: -9.037543296813965
    7. '[' → logprob: -9.162543296813965
    8. '(size' → logprob: -9.162543296813965
    9. '=[' → logprob: -9.287543296813965
    10. '#' → logprob: -9.912543296813965

Token 241: ' le' (ID: 505)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[N' → logprob: -1.0463024377822876
    2. '[i' → logprob: -1.1713024377822876
    3. 'i' → logprob: -2.046302318572998
    4. '[' → logprob: -2.296302318572998
    5. ' [' → logprob: -3.796302318572998
    6. ' i' → logprob: -3.796302318572998
    7. 'N' → logprob: -3.796302318572998
    8. 'range' → logprob: -4.671302318572998
    9. '[parent' → logprob: -5.046302318572998
    10. '[size' → logprob: -5.171302318572998

Token 242: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009632482193410397
    2. ' i' → logprob: -5.009632587432861
    3. 'N' → logprob: -6.509632587432861
    4. 'parent' → logprob: -7.634632587432861
    5. ' sommet' → logprob: -8.134632110595703
    6. 's' → logprob: -9.009632110595703
    7. ')' → logprob: -9.134632110595703
    8. 'sub' → logprob: -9.759632110595703
    9. ' subtree' → logprob: -9.884632110595703
    10. 'som' → logprob: -10.009632110595703

Token 243: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8098928928375244
    2. ' i' → logprob: -1.1848928928375244
    3. '[i' → logprob: -2.0598928928375244
    4. ')' → logprob: -2.1848928928375244
    5. '[' → logprob: -6.059892654418945
    6. ']' → logprob: -6.184892654418945
    7. ' ' → logprob: -6.934892654418945
    8. ' )' → logprob: -7.309892654418945
    9. '=' → logprob: -7.434892654418945
    10. ' =' → logprob: -7.434892654418945

Token 244: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13323475420475006
    2. '=' → logprob: -2.133234739303589
    3. 'size' → logprob: -5.133234977722168
    4. '=size' → logprob: -8.383234977722168
    5. ' size' → logprob: -9.883234977722168
    6. ' ' → logprob: -11.008234977722168
    7. ']' → logprob: -11.133234977722168
    8. 's' → logprob: -11.258234977722168
    9. ',' → logprob: -11.258234977722168
    10. '=[' → logprob: -11.383234977722168

Token 245: '#' (ID: 2)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0062867444939911366
    2. '[' → logprob: -5.13128662109375
    3. ' size' → logprob: -8.38128662109375
    4. '[size' → logprob: -9.13128662109375
    5. ' [' → logprob: -11.00628662109375
    6. '[N' → logprob: -13.50628662109375
    7. '
' → logprob: -14.38128662109375
    8. '(size' → logprob: -14.63128662109375
    9. ' =' → logprob: -15.00628662109375
    10. 'sizes' → logprob: -15.00628662109375

Token 246: ' On' (ID: 2160)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -3.9054008084349334e-05
    2. '[' → logprob: -10.750039100646973
    3. ' size' → logprob: -11.500039100646973
    4. '#' → logprob: -12.125039100646973
    5. '[size' → logprob: -14.125039100646973
    6. '
' → logprob: -14.500039100646973
    7. 's' → logprob: -15.375039100646973
    8. '(size' → logprob: -16.000038146972656
    9. 'siz' → logprob: -16.250038146972656
    10. '0' → logprob: -16.375038146972656

Token 247: ' met' (ID: 1421)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.32645025849342346
    2. '=' → logprob: -2.2014503479003906
    3. ' =' → logprob: -2.9514503479003906
    4. 'rem' → logprob: -3.4514503479003906
    5. 'continue' → logprob: -3.9514503479003906
    6. 'initialize' → logprob: -4.076450347900391
    7. 'initial' → logprob: -4.201450347900391
    8. 'a' → logprob: -4.951450347900391
    9. 'for' → logprob: -5.576450347900391
    10. '=size' → logprob: -5.576450347900391

Token 248: ' None' (ID: 4662)
  Prédit: '[N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[N' → logprob: -0.21660849452018738
    2. '[' → logprob: -1.7166085243225098
    3. ' [' → logprob: -4.46660852432251
    4. 'size' → logprob: -6.46660852432251
    5. '[size' → logprob: -6.71660852432251
    6. '(N' → logprob: -7.34160852432251
    7. ' size' → logprob: -9.716608047485352
    8. 'None' → logprob: -10.216608047485352
    9. ' ' → logprob: -11.216608047485352
    10. '[n' → logprob: -11.341608047485352

Token 249: ' à' (ID: 1221)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5579971075057983
    2. '[' → logprob: -1.9329971075057983
    3. ' *' → logprob: -2.557997226715088
    4. '+' → logprob: -2.807997226715088
    5. '*' → logprob: -2.932997226715088
    6. ')' → logprob: -4.182997226715088
    7. '=' → logprob: -4.182997226715088
    8. ',' → logprob: -4.307997226715088
    9. ' +' → logprob: -4.432997226715088
    10. ' =' → logprob: -4.432997226715088

Token 250: ' l' (ID: 305)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12837520241737366
    2. '[' → logprob: -2.128375291824341
    3. ' ' → logprob: -6.753375053405762
    4. 'None' → logprob: -9.128375053405762
    5. 'l' → logprob: -10.128375053405762
    6. 'i' → logprob: -10.378375053405762
    7. '1' → logprob: -10.628375053405762
    8. ' [' → logprob: -11.253375053405762
    9. 'index' → logprob: -11.378375053405762
    10. '[i' → logprob: -11.378375053405762

Token 251: ''ind' (ID: 82245)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19737732410430908
    2. '(' → logprob: -2.4473772048950195
    3. '[' → logprob: -3.3223772048950195
    4. '(N' → logprob: -3.4473772048950195
    5. 'None' → logprob: -4.5723772048950195
    6. ' (' → logprob: -5.3223772048950195
    7. '(None' → logprob: -5.5723772048950195
    8. ' ' → logprob: -6.6973772048950195
    9. 'i' → logprob: -6.9473772048950195
    10. '[N' → logprob: -7.1973772048950195

Token 252: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0010201864643022418
    2. 'ice' → logprob: -7.5010199546813965
    3. '0' → logprob: -8.126020431518555
    4. 'ices' → logprob: -9.876020431518555
    5. 'x' → logprob: -10.751020431518555
    6. 'exe' → logprob: -10.751020431518555
    7. 'dex' → logprob: -11.501020431518555
    8. ' ' → logprob: -12.001020431518555
    9. '#' → logprob: -12.001020431518555
    10. 'ce' → logprob: -12.126020431518555

Token 253: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00032724079210311174
    2. ' ' → logprob: -8.375327110290527
    3. '[' → logprob: -9.250327110290527
    4. 's' → logprob: -15.125327110290527
    5. ' [' → logprob: -16.375328063964844
    6. '[]' → logprob: -17.375328063964844
    7. '０' → logprob: -17.875328063964844
    8. '   ' → logprob: -18.000328063964844
    9. '۰' → logprob: -18.375328063964844
    10. '  ' → logprob: -18.375328063964844

Token 254: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.045823566731997e-05
    2. '[' → logprob: -11.375020027160645
    3. ' ' → logprob: -11.625020027160645
    4. '(' → logprob: -17.25002098083496
    5. '```' → logprob: -18.00002098083496
    6. '#' → logprob: -18.12502098083496
    7. '   ' → logprob: -18.25002098083496
    8. '1' → logprob: -18.25002098083496
    9. '
' → logprob: -18.25002098083496
    10. '=' → logprob: -18.62502098083496

Token 255: ' car' (ID: 1669)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.81473708152771
    2. ']' → logprob: -1.43973708152771
    3. '=' → logprob: -1.68973708152771
    4. ',' → logprob: -2.81473708152771
    5. 'size' → logprob: -3.43973708152771
    6. '=[' → logprob: -4.064737319946289
    7. '[' → logprob: -4.189737319946289
    8. ')' → logprob: -5.939737319946289
    9. '+' → logprob: -6.689737319946289
    10. '[size' → logprob: -6.814737319946289

Token 256: ' on' (ID: 402)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7021482586860657
    2. 'le' → logprob: -1.952148199081421
    3. 'la' → logprob: -2.327148199081421
    4. '0' → logprob: -2.577148199081421
    5. 'l' → logprob: -2.577148199081421
    6. ' les' → logprob: -3.952148199081421
    7. 'size' → logprob: -4.3271484375
    8. 'on' → logprob: -4.3271484375
    9. 'auc' → logprob: -4.3271484375
    10. ' la' → logprob: -4.5771484375

Token 257: ' ne' (ID: 453)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4815380573272705
    2. ' ne' → logprob: -2.2315380573272705
    3. 'ignore' → logprob: -2.2315380573272705
    4. 'ne' → logprob: -2.4815380573272705
    5. ' n' → logprob: -2.8565380573272705
    6. ' ignore' → logprob: -4.106537818908691
    7. 'a' → logprob: -5.856537818908691
    8. ' commence' → logprob: -6.606537818908691
    9. 'num' → logprob: -7.481537818908691
    10. 's' → logprob: -7.481537818908691

Token 258: ' l' (ID: 305)
  Prédit: 'ignore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ignore' → logprob: -0.49331358075141907
    2. 'n' → logprob: -2.4933135509490967
    3. 'ne' → logprob: -2.6183135509490967
    4. ' ignore' → logprob: -2.7433135509490967
    5. ' n' → logprob: -2.9933135509490967
    6. ' ne' → logprob: -3.2433135509490967
    7. 'g' → logprob: -3.8683135509490967
    8. ' commence' → logprob: -4.868313789367676
    9. 'comp' → logprob: -4.993313789367676
    10. 'comm' → logprob: -5.118313789367676

Token 259: ''util' (ID: 37761)
  Prédit: 'ignore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ignore' → logprob: -0.11426295340061188
    2. ''util' → logprob: -3.6142630577087402
    3. ' ignore' → logprob: -3.8642630577087402
    4. '_ignore' → logprob: -3.9892630577087402
    5. ''' → logprob: -4.36426305770874
    6. 'n' → logprob: -4.48926305770874
    7. 'e' → logprob: -5.61426305770874
    8. '[' → logprob: -6.23926305770874
    9. ''oubl' → logprob: -6.61426305770874
    10. 'a' → logprob: -6.61426305770874

Token 260: 'ise' (ID: 1096)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.0048235999420285225
    2. 'ise' → logprob: -5.379823684692383
    3. 's' → logprob: -9.754823684692383
    4. 'ser' → logprob: -10.004823684692383
    5. 'sé' → logprob: -10.879823684692383
    6. 't' → logprob: -11.254823684692383
    7. 'use' → logprob: -11.379823684692383
    8. '```' → logprob: -11.754823684692383
    9. 'sera' → logprob: -12.004823684692383
    10. 'ses' → logprob: -12.004823684692383

Token 261: ' pas' (ID: 2173)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1830170899629593
    2. '.' → logprob: -2.4330170154571533
    3. 'size' → logprob: -3.1830170154571533
    4. ' ,' → logprob: -5.183017253875732
    5. ' ' → logprob: -5.308017253875732
    6. ' size' → logprob: -5.433017253875732
    7. ']' → logprob: -5.433017253875732
    8. ' pour' → logprob: -5.558017253875732
    9. 'None' → logprob: -5.558017253875732
    10. ')' → logprob: -6.183017253875732

Token 262: '.
' (ID: 558)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.4649263918399811
    2. ',' → logprob: -1.4649263620376587
    3. '[' → logprob: -2.4649264812469482
    4. '[size' → logprob: -4.089926242828369
    5. ' size' → logprob: -4.339926242828369
    6. ' =' → logprob: -4.714926242828369
    7. ',size' → logprob: -5.714926242828369
    8. ' ,' → logprob: -5.964926242828369
    9. '=size' → logprob: -6.214926242828369
    10. ']' → logprob: -6.339926242828369

Token 263: '#' (ID: 2)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.04318210855126381
    2. '[' → logprob: -3.293182134628296
    3. ' size' → logprob: -5.793181896209717
    4. '[size' → logprob: -6.293181896209717
    5. ' [' → logprob: -8.418182373046875
    6. 'sizes' → logprob: -12.168182373046875
    7. 'siz' → logprob: -14.293182373046875
    8. '[s' → logprob: -14.543182373046875
    9. '
' → logprob: -14.668182373046875
    10. ' ' → logprob: -15.168182373046875

Token 264: ' Pour' (ID: 13931)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0027339053340256214
    2. '[' → logprob: -6.1277337074279785
    3. ' size' → logprob: -7.6277337074279785
    4. '[size' → logprob: -10.002734184265137
    5. ' [' → logprob: -11.252734184265137
    6. '
' → logprob: -13.377734184265137
    7. 'sizes' → logprob: -14.502734184265137
    8. 's' → logprob: -15.502734184265137
    9. 'siz' → logprob: -15.502734184265137
    10. '#' → logprob: -15.877734184265137

Token 265: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.19436971843242645
    2. '_' → logprob: -1.8193696737289429
    3. ' i' → logprob: -4.569369792938232
    4. '_i' → logprob: -5.944369792938232
    5. 'size' → logprob: -7.694369792938232
    6. ' _' → logprob: -7.944369792938232
    7. '0' → logprob: -8.569369316101074
    8. '_size' → logprob: -9.569369316101074
    9. '[i' → logprob: -9.569369316101074
    10. '[' → logprob: -10.319369316101074

Token 266: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11300556361675262
    2. ' i' → logprob: -2.2380056381225586
    3. ' sommet' → logprob: -9.113005638122559
    4. '_' → logprob: -10.238005638122559
    5. ' _' → logprob: -11.113005638122559
    6. '_i' → logprob: -11.863005638122559
    7. ' ' → logprob: -12.363005638122559
    8. ' node' → logprob: -12.738005638122559
    9. '	i' → logprob: -12.988005638122559
    10. 'node' → logprob: -13.488005638122559

Token 267: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025089744478464127
    2. ' i' → logprob: -4.400089740753174
    3. ' ,' → logprob: -4.900089740753174
    4. 'i' → logprob: -5.525089740753174
    5. ',i' → logprob: -8.150090217590332
    6. ' ' → logprob: -8.275090217590332
    7. ' on' → logprob: -9.025090217590332
    8. '[i' → logprob: -9.275090217590332
    9. ',
' → logprob: -9.650090217590332
    10. '=' → logprob: -10.275090217590332

Token 268: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.028309280052781105
    2. '1' → logprob: -4.278309345245361
    3. ' range' → logprob: -4.278309345245361
    4. '[' → logprob: -9.028308868408203
    5. ' ' → logprob: -10.403308868408203
    6. '0' → logprob: -11.778308868408203
    7. 'rang' → logprob: -12.278308868408203
    8. '
' → logprob: -12.403308868408203
    9. 'size' → logprob: -12.778308868408203
    10. '2' → logprob: -13.528308868408203

Token 269: '1' (ID: 16)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02491813898086548
    2. '1' → logprob: -3.7749180793762207
    3. ' range' → logprob: -6.399918079376221
    4. '[' → logprob: -12.649918556213379
    5. '2' → logprob: -13.399918556213379
    6. ' ' → logprob: -13.524918556213379
    7. 'rang' → logprob: -13.524918556213379
    8. '0' → logprob: -14.399918556213379
    9. '```' → logprob: -15.024918556213379
    10. '_' → logprob: -15.274918556213379

Token 270: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.18572735786437988
    2. 'à' → logprob: -1.8107273578643799
    3. ')' → logprob: -6.185727119445801
    4. ',' → logprob: -6.185727119445801
    5. 'to' → logprob: -7.435727119445801
    6. ' to' → logprob: -8.9357271194458
    7. 'N' → logprob: -9.1857271194458
    8. 'a' → logprob: -9.1857271194458
    9. 'au' → logprob: -9.1857271194458
    10. ' au' → logprob: -9.1857271194458

Token 271: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011048882268369198
    2. ' N' → logprob: -4.511048793792725
    3. ' ' → logprob: -14.511049270629883
    4. '
' → logprob: -15.261049270629883
    5. ' range' → logprob: -15.636049270629883
    6. 'range' → logprob: -16.386049270629883
    7. '(N' → logprob: -17.136049270629883
    8. ',' → logprob: -17.136049270629883
    9. '	N' → logprob: -17.386049270629883
    10. '```' → logprob: -17.386049270629883

Token 272: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021817844826728106
    2. 'size' → logprob: -6.2521820068359375
    3. ' ,' → logprob: -9.002182006835938
    4. ',size' → logprob: -9.752182006835938
    5. ' size' → logprob: -10.377182006835938
    6. ',
' → logprob: -11.752182006835938
    7. ':' → logprob: -12.252182006835938
    8. '#' → logprob: -12.252182006835938
    9. '),' → logprob: -12.377182006835938
    10. '],' → logprob: -12.502182006835938

Token 273: ' la' (ID: 557)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0948895812034607
    2. ' size' → logprob: -2.4698896408081055
    3. 'None' → logprob: -5.3448896408081055
    4. ' None' → logprob: -7.4698896408081055
    5. '[size' → logprob: -8.344889640808105
    6. '[' → logprob: -8.969889640808105
    7. '0' → logprob: -9.469889640808105
    8. ' [' → logprob: -10.344889640808105
    9. ' ' → logprob: -10.469889640808105
    10. '1' → logprob: -10.719889640808105

Token 274: ' taille' (ID: 41644)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.07054794579744339
    2. ' size' → logprob: -3.0705480575561523
    3. ' taille' → logprob: -4.445548057556152
    4. 'tail' → logprob: -4.695548057556152
    5. 'liste' → logprob: -8.570548057556152
    6. 'value' → logprob: -8.695548057556152
    7. ' liste' → logprob: -9.445548057556152
    8. '#' → logprob: -9.570548057556152
    9. 's' → logprob: -9.820548057556152
    10. 'list' → logprob: -9.945548057556152

Token 275: ' initial' (ID: 4871)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3554452061653137
    2. '=' → logprob: -1.855445146560669
    3. '[i' → logprob: -2.980445146560669
    4. '[' → logprob: -3.480445146560669
    5. '[size' → logprob: -3.480445146560669
    6. ' est' → logprob: -4.230445384979248
    7. ' ' → logprob: -4.980445384979248
    8. 'size' → logprob: -6.355445384979248
    9. '=size' → logprob: -6.480445384979248
    10. 's' → logprob: -6.980445384979248

Token 276: 'e' (ID: 68)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2367824912071228
    2. ' =' → logprob: -1.7367825508117676
    3. '=size' → logprob: -4.236782550811768
    4. 'e' → logprob: -4.736782550811768
    5. 'size' → logprob: -5.486782550811768
    6. ' size' → logprob: -5.986782550811768
    7. ' est' → logprob: -6.736782550811768
    8. '=None' → logprob: -6.861782550811768
    9. ' ' → logprob: -7.736782550811768
    10. '   ' → logprob: -7.986782550811768

Token 277: ' du' (ID: 1462)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.33404797315597534
    2. '=' → logprob: -1.8340480327606201
    3. ' =' → logprob: -2.33404803276062
    4. ' sera' → logprob: -4.084047794342041
    5. 'est' → logprob: -5.959047794342041
    6. ' ' → logprob: -6.084047794342041
    7. 's' → logprob: -6.459047794342041
    8. ' de' → logprob: -7.334047794342041
    9. '=size' → logprob: -7.709047794342041
    10. 'size' → logprob: -7.709047794342041

Token 278: ' sous' (ID: 14487)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.29661718010902405
    2. 's' → logprob: -1.6716171503067017
    3. 'size' → logprob: -3.546617269515991
    4. ' subtree' → logprob: -4.046617031097412
    5. 'None' → logprob: -4.296617031097412
    6. ' None' → logprob: -5.921617031097412
    7. ' ' → logprob: -6.921617031097412
    8. 'ar' → logprob: -7.296617031097412
    9. 'under' → logprob: -7.796617031097412
    10. 'i' → logprob: -7.796617031097412

Token 279: '-ar' (ID: 31325)
  Prédit: '-ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-ar' → logprob: -0.10448398441076279
    2. '_ar' → logprob: -2.4794840812683105
    3. '-' → logprob: -4.9794840812683105
    4. 'ar' → logprob: -5.7294840812683105
    5. '_' → logprob: -5.7294840812683105
    6. ' arbre' → logprob: -6.7294840812683105
    7. ''ar' → logprob: -8.604483604431152
    8. '[i' → logprob: -8.979483604431152
    9. '_tree' → logprob: -9.229483604431152
    10. '-tree' → logprob: -9.854483604431152

Token 280: 'bre' (ID: 9945)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.06288906186819077
    2. '#' → logprob: -3.4378890991210938
    3. 'bre' → logprob: -4.312889099121094
    4. 'tre' → logprob: -6.312889099121094
    5. '_ar' → logprob: -6.437889099121094
    6. '   ' → logprob: -6.562889099121094
    7. ' arbre' → logprob: -6.812889099121094
    8. 'arb' → logprob: -7.187889099121094
    9. 'r' → logprob: -7.312889099121094
    10. ''ar' → logprob: -7.312889099121094

Token 281: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.12052198499441147
    2. 'est' → logprob: -2.8705220222473145
    3. '=' → logprob: -3.4955220222473145
    4. ' =' → logprob: -4.1205220222473145
    5. ' sera' → logprob: -4.8705220222473145
    6. 's' → logprob: -6.6205220222473145
    7. ' vaut' → logprob: -7.7455220222473145
    8. '[' → logprob: -8.620521545410156
    9. ' ' → logprob: -8.870521545410156
    10. '[i' → logprob: -8.995521545410156

Token 282: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02331780269742012
    2. ' ' → logprob: -3.773317813873291
    3. '0' → logprob: -10.023317337036133
    4. 'None' → logprob: -11.648317337036133
    5. ' None' → logprob: -12.148317337036133
    6. 's' → logprob: -12.398317337036133
    7. '  ' → logprob: -13.023317337036133
    8. '[' → logprob: -13.523317337036133
    9. ' =' → logprob: -14.023317337036133
    10. '=' → logprob: -14.023317337036133

Token 283: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007324361358769238
    2. ' ' → logprob: -7.250732421875
    3. '0' → logprob: -11.625732421875
    4. 'None' → logprob: -11.625732421875
    5. '[' → logprob: -12.750732421875
    6. ' None' → logprob: -14.125732421875
    7. '[]' → logprob: -15.750732421875
    8. '
' → logprob: -15.750732421875
    9. ' [' → logprob: -16.125732421875
    10. '  ' → logprob: -16.125732421875

Token 284: ' (' (ID: 350)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6561147570610046
    2. ']' → logprob: -0.9061147570610046
    3. '+' → logprob: -4.15611457824707
    4. ',' → logprob: -4.28111457824707
    5. '[' → logprob: -4.40611457824707
    6. ' ]' → logprob: -4.65611457824707
    7. ']+' → logprob: -4.65611457824707
    8. ' =' → logprob: -4.78111457824707
    9. ')' → logprob: -5.65611457824707
    10. ' [' → logprob: -6.90611457824707

Token 285: 'l' (ID: 75)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05626782402396202
    2. ' )' → logprob: -2.931267738342285
    3. 'size' → logprob: -7.181267738342285
    4. ')
' → logprob: -8.806267738342285
    5. ' ' → logprob: -8.931267738342285
    6. '1' → logprob: -9.306267738342285
    7. ' )
' → logprob: -10.431267738342285
    8. ').' → logprob: -10.431267738342285
    9. ' size' → logprob: -10.681267738342285
    10. ',' → logprob: -10.681267738342285

Token 286: 'ui' (ID: 1866)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12365474551916122
    2. ' )' → logprob: -3.123654842376709
    3. 'e' → logprob: -3.498654842376709
    4. ''espace' → logprob: -5.123654842376709
    5. ']' → logprob: -5.623654842376709
    6. ' ' → logprob: -5.998654842376709
    7. 'a' → logprob: -5.998654842376709
    8. ',' → logprob: -6.373654842376709
    9. ' for' → logprob: -6.373654842376709
    10. ''' → logprob: -6.373654842376709

Token 287: '-même' (ID: 41085)
  Prédit: '-même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-même' → logprob: -0.011961483396589756
    2. 'm' → logprob: -4.636961460113525
    3. ')' → logprob: -7.386961460113525
    4. '```' → logprob: -7.636961460113525
    5. '-m' → logprob: -7.886961460113525
    6. '=' → logprob: -9.136961936950684
    7. '   ' → logprob: -9.511961936950684
    8. '-mêmes' → logprob: -9.636961936950684
    9. ' -' → logprob: -9.761961936950684
    10. 'se' → logprob: -10.011961936950684

Token 288: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003019660711288452
    2. ').' → logprob: -6.1280198097229
    3. ' )' → logprob: -7.7530198097229
    4. '),' → logprob: -8.503019332885742
    5. ')
' → logprob: -9.753019332885742
    6. ',' → logprob: -10.253019332885742
    7. ' compris' → logprob: -10.878019332885742
    8. ' inclus' → logprob: -11.753019332885742
    9. ' pour' → logprob: -11.753019332885742
    10. '.' → logprob: -11.753019332885742

Token 289: 'size' (ID: 4461)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13800594210624695
    2. 'size' → logprob: -2.2630059719085693
    3. ' [' → logprob: -4.63800573348999
    4. '
' → logprob: -4.63800573348999
    5. '[size' → logprob: -6.13800573348999
    6. ' size' → logprob: -6.26300573348999
    7. ' =' → logprob: -7.13800573348999
    8. 'None' → logprob: -8.763006210327148
    9. ' 
' → logprob: -9.263006210327148
    10. '  
' → logprob: -9.638006210327148

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014214513823390007
    2. '=' → logprob: -4.264214515686035
    3. '[' → logprob: -10.014214515686035
    4. ' =[' → logprob: -12.264214515686035
    5. '=[' → logprob: -14.139214515686035
    6. ' ' → logprob: -14.514214515686035
    7. ')' → logprob: -15.639214515686035
    8. ']' → logprob: -17.13921356201172
    9. '```' → logprob: -17.13921356201172
    10. 's' → logprob: -17.13921356201172

Token 291: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3868741989135742
    2. ' [' → logprob: -1.1368741989135742
    3. '[N' → logprob: -13.011874198913574
    4. ' ' → logprob: -14.011874198913574
    5. ' ' → logprob: -16.26187515258789
    6. '=[' → logprob: -16.88687515258789
    7. '[n' → logprob: -17.01187515258789
    8. '([' → logprob: -17.63687515258789
    9. '  ' → logprob: -18.76187515258789
    10. '```' → logprob: -19.01187515258789

Token 292: 'None' (ID: 8505)
  Prédit: 'None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.771655115589965e-05
    2. ' None' → logprob: -11.000018119812012
    3. '1' → logprob: -14.750018119812012
    4. '0' → logprob: -15.875018119812012
    5. '(None' → logprob: -15.875018119812012
    6. ',None' → logprob: -16.375017166137695
    7. '_None' → logprob: -16.875017166137695
    8. '[' → logprob: -17.250017166137695
    9. '=None' → logprob: -17.250017166137695
    10. '
' → logprob: -17.500017166137695

Token 293: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022964440286159515
    2. ']+' → logprob: -6.377296447753906
    3. ',' → logprob: -7.502296447753906
    4. ' ]' → logprob: -10.252296447753906
    5. ')' → logprob: -12.127296447753906
    6. ' ,' → logprob: -15.002296447753906
    7. '>' → logprob: -15.252296447753906
    8. '```' → logprob: -15.627296447753906
    9. ' (' → logprob: -15.877296447753906
    10. '+' → logprob: -15.877296447753906

Token 294: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3873313069343567
    2. ' +' → logprob: -1.137331247329712
    3. '+[' → logprob: -7.887331485748291
    4. '+(' → logprob: -10.262331008911133
    5. ']' → logprob: -11.137331008911133
    6. ']+' → logprob: -11.262331008911133
    7. '[' → logprob: -12.137331008911133
    8. ',' → logprob: -12.262331008911133
    9. ')' → logprob: -13.387331008911133
    10. ' +(' → logprob: -13.387331008911133

Token 295: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.596781946020201e-05
    2. ' [' → logprob: -10.000045776367188
    3. '([' → logprob: -15.500045776367188
    4. '1' → logprob: -15.500045776367188
    5. '[N' → logprob: -19.375045776367188
    6. '   ' → logprob: -20.000045776367188
    7. ' ' → logprob: -20.125045776367188
    8. '(' → logprob: -20.375045776367188
    9. '{' → logprob: -21.500045776367188
    10. '```' → logprob: -21.625045776367188

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -18.75000762939453
    4. '(' → logprob: -19.12500762939453
    5. ']' → logprob: -19.62500762939453
    6. '  ' → logprob: -20.00000762939453
    7. '```' → logprob: -20.00000762939453
    8. '１' → logprob: -20.50000762939453
    9. '
' → logprob: -20.62500762939453
    10. '۱' → logprob: -20.93750762939453

Token 297: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04082914814352989
    2. 'for' → logprob: -3.5408291816711426
    3. ']' → logprob: -4.540829181671143
    4. ']*' → logprob: -8.165828704833984
    5. ' ]' → logprob: -10.165828704833984
    6. '	for' → logprob: -11.415828704833984
    7. ' ' → logprob: -11.915828704833984
    8. ')' → logprob: -12.040828704833984
    9. ']*(' → logprob: -12.165828704833984
    10. '```' → logprob: -14.915828704833984

Token 298: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21201267838478088
    2. 'for' → logprob: -2.212012767791748
    3. '*' → logprob: -2.837012767791748
    4. ' *' → logprob: -3.837012767791748
    5. '*(' → logprob: -6.837012767791748
    6. ' ' → logprob: -8.71201229095459
    7. ')' → logprob: -9.71201229095459
    8. '*N' → logprob: -10.71201229095459
    9. '```' → logprob: -10.83701229095459
    10. ']' → logprob: -11.46201229095459

Token 299: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0011920140823349357
    2. ' N' → logprob: -6.751192092895508
    3. '(N' → logprob: -10.751192092895508
    4. ' (' → logprob: -15.001192092895508
    5. ' ' → logprob: -17.001192092895508
    6. '	N' → logprob: -17.376192092895508
    7. '(' → logprob: -17.626192092895508
    8. '(
' → logprob: -19.626192092895508
    9. 'Ｎ' → logprob: -20.126192092895508
    10. '   ' → logprob: -20.626192092895508

Token 300: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 301: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6747425198554993
    2. '
' → logprob: -1.7997424602508545
    3. 'def' → logprob: -2.1747424602508545
    4. 'parent' → logprob: -2.9247424602508545
    5. 'stack' → logprob: -3.1747424602508545
    6. 'visited' → logprob: -3.4247424602508545
    7. 'depth' → logprob: -3.4247424602508545
    8. '#' → logprob: -4.424742698669434
    9. '\n' → logprob: -5.049742698669434
    10. 'children' → logprob: -5.299742698669434

Token 302: ' Cré' (ID: 109203)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16956128180027008
    2. 'stack' → logprob: -2.5445613861083984
    3. 'graph' → logprob: -3.6695613861083984
    4. 'adj' → logprob: -3.9195613861083984
    5. 'def' → logprob: -5.169561386108398
    6. 'edges' → logprob: -5.169561386108398
    7. 'from' → logprob: -5.169561386108398
    8. 'import' → logprob: -5.419561386108398
    9. 'sys' → logprob: -5.544561386108398
    10. 'children' → logprob: -5.669561386108398

Token 303: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.6220924258232117
    2. '#' → logprob: -0.9970924258232117
    3. 'd' → logprob: -3.1220924854278564
    4. 'ursion' → logprob: -4.747092247009277
    5. 'tion' → logprob: -4.997092247009277
    6. 'up' → logprob: -5.497092247009277
    7. 'def' → logprob: -5.622092247009277
    8. 'ption' → logprob: -5.622092247009277
    9. 'l' → logprob: -5.747092247009277
    10. 'rs' → logprob: -5.997092247009277

Token 304: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5248861312866211
    2. 'd' → logprob: -1.024886131286621
    3. '#' → logprob: -4.774886131286621
    4. ' of' → logprob: -4.774886131286621
    5. '[' → logprob: -4.899886131286621
    6. ' des' → logprob: -5.274886131286621
    7. ' de' → logprob: -5.399886131286621
    8. 'parent' → logprob: -5.399886131286621
    9. 'of' → logprob: -5.524886131286621
    10. 'des' → logprob: -6.524886131286621

Token 305: ''un' (ID: 9788)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.1480991840362549
    2. ' la' → logprob: -1.5230991840362549
    3. '[' → logprob: -2.523099184036255
    4. 'une' → logprob: -2.773099184036255
    5. ' parent' → logprob: -2.898099184036255
    6. ' d' → logprob: -3.023099184036255
    7. '[]' → logprob: -3.273099184036255
    8. 'parent' → logprob: -3.648099184036255
    9. 'a' → logprob: -4.273098945617676
    10. '#' → logprob: -4.273098945617676

Token 306: ' diction' (ID: 155259)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6052364706993103
    2. 'stack' → logprob: -0.9802364706993103
    3. 'adj' → logprob: -3.230236530303955
    4. 'children' → logprob: -4.730236530303955
    5. 'visited' → logprob: -4.855236530303955
    6. '#' → logprob: -5.480236530303955
    7. 'tree' → logprob: -5.605236530303955
    8. 'for' → logprob: -5.605236530303955
    9. 'sys' → logprob: -5.855236530303955
    10. 'queue' → logprob: -6.105236530303955

Token 307: 'naire' (ID: 30464)
  Prédit: 'naire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'naire' → logprob: -0.019188711419701576
    2. 'aire' → logprob: -4.01918888092041
    3. 'ary' → logprob: -6.89418888092041
    4. '#' → logprob: -11.76918888092041
    5. 'n' → logprob: -12.51918888092041
    6. 'a' → logprob: -12.89418888092041
    7. 'na' → logprob: -13.39418888092041
    8. '{' → logprob: -13.39418888092041
    9. '```' → logprob: -13.39418888092041
    10. 'naires' → logprob: -13.51918888092041

Token 308: ' pour' (ID: 1930)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.226294994354248
    2. 'children' → logprob: -1.351294994354248
    3. 'edges' → logprob: -1.976294994354248
    4. 'tree' → logprob: -2.351294994354248
    5. 'adj' → logprob: -2.601294994354248
    6. 'memo' → logprob: -3.351294994354248
    7. 'child' → logprob: -4.101294994354248
    8. 'dp' → logprob: -4.351294994354248
    9. 'sub' → logprob: -4.976294994354248
    10. 'edge' → logprob: -5.101294994354248

Token 309: ' assoc' (ID: 107464)
  Prédit: ' stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stock' → logprob: -1.1600035429000854
    2. 'memo' → logprob: -1.2850035429000854
    3. 'stock' → logprob: -1.5350035429000854
    4. ' mém' → logprob: -3.035003662109375
    5. ' les' → logprob: -3.910003662109375
    6. 'les' → logprob: -4.035003662109375
    7. ' memo' → logprob: -4.160003662109375
    8. 'memor' → logprob: -4.785003662109375
    9. 'adj' → logprob: -4.910003662109375
    10. 'children' → logprob: -5.035003662109375

Token 310: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.0021161199547350407
    2. 'er' → logprob: -6.3771162033081055
    3. 'i' → logprob: -8.877116203308105
    4. 'ié' → logprob: -9.752116203308105
    5. '#' → logprob: -10.002116203308105
    6. 'éer' → logprob: -10.252116203308105
    7. '{' → logprob: -10.502116203308105
    8. 'ierter' → logprob: -11.127116203308105
    9. 'uer' → logprob: -11.502116203308105
    10. '{}' → logprob: -11.627116203308105

Token 311: ' à' (ID: 1221)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.3461735248565674
    2. 'D' → logprob: -1.8461735248565674
    3. 'children' → logprob: -2.0961735248565674
    4. 'adj' → logprob: -2.5961735248565674
    5. '{}' → logprob: -2.7211735248565674
    6. 'parents' → logprob: -2.8461735248565674
    7. 'edges' → logprob: -3.4711735248565674
    8. 'labels' → logprob: -3.5961735248565674
    9. '{' → logprob: -3.9711735248565674
    10. 'child' → logprob: -4.221173286437988

Token 312: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.12968973815441132
    2. 'each' → logprob: -3.1296896934509277
    3. 'ch' → logprob: -3.3796896934509277
    4. 'cha' → logprob: -4.379689693450928
    5. ' each' → logprob: -5.004689693450928
    6. ' chacun' → logprob: -5.629689693450928
    7. 'un' → logprob: -5.879689693450928
    8. 's' → logprob: -6.379689693450928
    9. ' un' → logprob: -6.629689693450928
    10. 'Chaque' → logprob: -6.754689693450928

Token 313: ' valeur' (ID: 41664)
  Prédit: ' sommet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.5664724707603455
    2. 'val' → logprob: -1.4414725303649902
    3. 's' → logprob: -3.0664725303649902
    4. 'som' → logprob: -3.1914725303649902
    5. 'd' → logprob: -3.6914725303649902
    6. ' valeur' → logprob: -4.44147253036499
    7. 'node' → logprob: -4.69147253036499
    8. 'niveau' → logprob: -4.94147253036499
    9. 'élé' → logprob: -5.06647253036499
    10. ' poids' → logprob: -5.19147253036499

Token 314: ' d' (ID: 272)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.9187909960746765
    2. 'de' → logprob: -2.4187910556793213
    3. ' des' → logprob: -2.4187910556793213
    4. ' de' → logprob: -3.0437910556793213
    5. 'value' → logprob: -3.0437910556793213
    6. ' les' → logprob: -3.2937910556793213
    7. ' val' → logprob: -3.2937910556793213
    8. 'des' → logprob: -3.7937910556793213
    9. 'd' → logprob: -3.9187910556793213
    10. ',' → logprob: -3.9187910556793213

Token 315: ' (' (ID: 350)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4805428385734558
    2. 'D' → logprob: -1.3555428981781006
    3. 'élé' → logprob: -3.2305428981781006
    4. 'i' → logprob: -4.3555426597595215
    5. 'a' → logprob: -4.6055426597595215
    6. 'une' → logprob: -4.8555426597595215
    7. ''entrée' → logprob: -4.8555426597595215
    8. 'éc' → logprob: -5.3555426597595215
    9. ' sommet' → logprob: -5.4805426597595215
    10. 'un' → logprob: -5.4805426597595215

Token 316: 'stock' (ID: 21982)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0861748456954956
    2. ')' → logprob: -3.086174964904785
    3. 'd' → logprob: -3.586174964904785
    4. ' D' → logprob: -5.836174964904785
    5. 'val' → logprob: -5.961174964904785
    6. ' )' → logprob: -6.586174964904785
    7. 'value' → logprob: -7.461174964904785
    8. 's' → logprob: -8.586174964904785
    9. 'a' → logprob: -8.836174964904785
    10. ' d' → logprob: -8.961174964904785

Token 317: 'ée' (ID: 2894)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4900857210159302
    2. 'e' → logprob: -1.7400857210159302
    3. '={}' → logprob: -3.1150856018066406
    4. '=None' → logprob: -3.6150856018066406
    5. '=d' → logprob: -3.8650856018066406
    6. ')' → logprob: -3.8650856018066406
    7. '={' → logprob: -4.615085601806641
    8. '={'' → logprob: -4.615085601806641
    9. '=D' → logprob: -4.740085601806641
    10. 'é' → logprob: -4.865085601806641

Token 318: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.22762566804885864
    2. ' dans' → logprob: -2.727625608444214
    3. 'D' → logprob: -2.977625608444214
    4. 'in' → logprob: -3.227625608444214
    5. ')' → logprob: -3.852625608444214
    6. 'en' → logprob: -4.852625846862793
    7. '=' → logprob: -4.852625846862793
    8. 'd' → logprob: -5.352625846862793
    9. ' in' → logprob: -6.102625846862793
    10. ' D' → logprob: -7.602625846862793

Token 319: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00343863433226943
    2. ' D' → logprob: -5.878438472747803
    3. ')' → logprob: -8.128438949584961
    4. 'd' → logprob: -8.503438949584961
    5. 'enumer' → logprob: -9.878438949584961
    6. '
' → logprob: -10.878438949584961
    7. 'range' → logprob: -11.003438949584961
    8. '#' → logprob: -11.128438949584961
    9. ' ' → logprob: -12.503438949584961
    10. 'value' → logprob: -12.753438949584961

Token 320: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0021221882198005915
    2. 'D' → logprob: -7.377122402191162
    3. 'val' → logprob: -7.877122402191162
    4. '[i' → logprob: -8.002121925354004
    5. 'd' → logprob: -8.502121925354004
    6. '),' → logprob: -9.252121925354004
    7. ')
' → logprob: -9.252121925354004
    8. ' )' → logprob: -9.752121925354004
    9. '[' → logprob: -10.002121925354004
    10. '[val' → logprob: -10.252121925354004

Token 321: ' l' (ID: 305)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3512401580810547
    2. 'val' → logprob: -1.7262401580810547
    3. 'les' → logprob: -2.4762401580810547
    4. ' des' → logprob: -2.8512401580810547
    5. 'une' → logprob: -2.8512401580810547
    6. 'des' → logprob: -2.9762401580810547
    7. ' la' → logprob: -3.1012401580810547
    8. 'd' → logprob: -3.3512401580810547
    9. ' les' → logprob: -3.4762401580810547
    10. 'parents' → logprob: -3.6012401580810547

Token 322: ''ind' (ID: 82245)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.0099109411239624
    2. 'es' → logprob: -1.2599109411239624
    3. 'a' → logprob: -1.8849109411239624
    4. ''ensemble' → logprob: -2.509911060333252
    5. '[]' → logprob: -3.259911060333252
    6. ''une' → logprob: -3.259911060333252
    7. ''' → logprob: -3.884911060333252
    8. ''un' → logprob: -4.759911060333252
    9. ''à' → logprob: -5.884911060333252
    10. 'une' → logprob: -6.384911060333252

Token 323: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.21346208453178406
    2. 'ice' → logprob: -1.7134621143341064
    3. 'ices' → logprob: -4.463461875915527
    4. 'ic' → logprob: -8.713461875915527
    5. 'ce' → logprob: -8.838461875915527
    6. 'e' → logprob: -10.713461875915527
    7. '{' → logprob: -11.088461875915527
    8. 'ece' → logprob: -11.338461875915527
    9. 'ces' → logprob: -11.713461875915527
    10. 'exe' → logprob: -11.838461875915527

Token 324: ' i' (ID: 575)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3290332555770874
    2. 'value' → logprob: -1.4540332555770874
    3. '{' → logprob: -2.204033374786377
    4. ' =' → logprob: -2.579033374786377
    5. ' d' → logprob: -3.329033374786377
    6. 'val' → logprob: -3.329033374786377
    7. '_value' → logprob: -3.329033374786377
    8. 'dict' → logprob: -3.454033374786377
    9. 'indices' → logprob: -3.829033374786377
    10. 'positions' → logprob: -3.829033374786377

Token 325: ' correspondant' (ID: 146058)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.8361619710922241
    2. 'd' → logprob: -1.5861619710922241
    3. 'val' → logprob: -1.7111619710922241
    4. 'indices' → logprob: -2.5861620903015137
    5. ' =' → logprob: -3.7111620903015137
    6. 'dict' → logprob: -3.8361620903015137
    7. 'positions' → logprob: -4.711162090301514
    8. 'par' → logprob: -5.461162090301514
    9. ' d' → logprob: -5.461162090301514
    10. 'values' → logprob: -5.461162090301514

Token 326: '.
' (ID: 558)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.38399559259414673
    2. 'd' → logprob: -1.758995532989502
    3. 'val' → logprob: -2.883995532989502
    4. 'indices' → logprob: -3.883995532989502
    5. 'dict' → logprob: -4.008995532989502
    6. ' value' → logprob: -4.508995532989502
    7. 'mapping' → logprob: -4.633995532989502
    8. ' d' → logprob: -5.008995532989502
    9. 'index' → logprob: -5.383995532989502
    10. 'values' → logprob: -5.633995532989502

Token 327: '#' (ID: 2)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.3511422574520111
    2. 'd' → logprob: -2.101142168045044
    3. 'val' → logprob: -2.226142168045044
    4. 'pos' → logprob: -3.476142168045044
    5. 'index' → logprob: -4.226142406463623
    6. 'D' → logprob: -5.226142406463623
    7. 'dict' → logprob: -6.101142406463623
    8. 'positions' → logprob: -6.226142406463623
    9. 'values' → logprob: -6.226142406463623
    10. 'indices' → logprob: -6.226142406463623

Token 328: ' Ut' (ID: 21952)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.19770382344722748
    2. 'val' → logprob: -2.1977038383483887
    3. 'd' → logprob: -3.4477038383483887
    4. 'pos' → logprob: -3.8227038383483887
    5. 'index' → logprob: -5.197703838348389
    6. 'from' → logprob: -6.697703838348389
    7. 'D' → logprob: -6.947703838348389
    8. 'dict' → logprob: -6.947703838348389
    9. 'indices' → logprob: -7.197703838348389
    10. 'position' → logprob: -7.322703838348389

Token 329: 'ile' (ID: 554)
  Prédit: 'il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'il' → logprob: -0.5312816500663757
    2. 'lis' → logprob: -1.4062817096710205
    3. 'ilis' → logprob: -2.1562817096710205
    4. 'til' → logprob: -3.9062817096710205
    5. 'ilise' → logprob: -4.031281471252441
    6. 'l' → logprob: -5.656281471252441
    7. '```' → logprob: -6.406281471252441
    8. '=' → logprob: -6.531281471252441
    9. 'iliz' → logprob: -7.406281471252441
    10. 'tile' → logprob: -7.656281471252441

Token 330: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39550524950027466
    2. 'pour' → logprob: -2.14550518989563
    3. 'for' → logprob: -2.39550518989563
    4. ' pour' → logprob: -3.39550518989563
    5. ' =' → logprob: -3.39550518989563
    6. 'd' → logprob: -3.77050518989563
    7. ' for' → logprob: -5.145505428314209
    8. ':' → logprob: -5.270505428314209
    9. '_d' → logprob: -6.145505428314209
    10. 'val' → logprob: -6.520505428314209

Token 331: ' retrouver' (ID: 53435)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7742952704429626
    2. 'd' → logprob: -1.7742953300476074
    3. 'tr' → logprob: -2.2742953300476074
    4. 'retr' → logprob: -3.0242953300476074
    5. ' retrouver' → logprob: -3.2742953300476074
    6. 'chercher' → logprob: -3.6492953300476074
    7. ' d' → logprob: -4.149295330047607
    8. 'r' → logprob: -4.149295330047607
    9. 'value' → logprob: -4.274295330047607
    10. 'i' → logprob: -4.649295330047607

Token 332: ' l' (ID: 305)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -1.0947610139846802
    2. 'd' → logprob: -1.7197610139846802
    3. ' la' → logprob: -1.9697610139846802
    4. ' les' → logprob: -2.3447608947753906
    5. 'la' → logprob: -2.7197608947753906
    6. 'l' → logprob: -2.8447608947753906
    7. ' d' → logprob: -3.4697608947753906
    8. 'le' → logprob: -3.9697608947753906
    9. ')' → logprob: -3.9697608947753906
    10. 'i' → logprob: -4.219760894775391

Token 333: ''ind' (ID: 82245)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.30343037843704224
    2. 'es' → logprob: -1.6784303188323975
    3. ' e' → logprob: -3.5534303188323975
    4. 's' → logprob: -4.303430557250977
    5. 'a' → logprob: -4.928430557250977
    6. ' i' → logprob: -5.053430557250977
    7. 'i' → logprob: -5.803430557250977
    8. ' index' → logprob: -5.928430557250977
    9. ' des' → logprob: -6.303430557250977
    10. ' indices' → logprob: -6.428430557250977

Token 334: 'ice' (ID: 603)
  Prédit: 'ices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ices' → logprob: -0.6208076477050781
    2. 'ex' → logprob: -1.1208076477050781
    3. 'ice' → logprob: -1.9958076477050781
    4. 'e' → logprob: -8.870807647705078
    5. 'i' → logprob: -9.120807647705078
    6. 'ic' → logprob: -9.370807647705078
    7. 'exe' → logprob: -9.745807647705078
    8. 'é' → logprob: -9.870807647705078
    9. 'ces' → logprob: -11.495807647705078
    10. 'ent' → logprob: -11.495807647705078

Token 335: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8883949518203735
    2. ' des' → logprob: -1.3883949518203735
    3. 'de' → logprob: -2.513394832611084
    4. 's' → logprob: -2.763394832611084
    5. ' d' → logprob: -3.013394832611084
    6. 'des' → logprob: -3.263394832611084
    7. 'd' → logprob: -3.263394832611084
    8. ' correspondant' → logprob: -4.138394832611084
    9. ' associé' → logprob: -4.888394832611084
    10. '_des' → logprob: -5.388394832611084

Token 336: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.31180429458618164
    2. 'es' → logprob: -1.6868042945861816
    3. ''une' → logprob: -2.9368042945861816
    4. ''un' → logprob: -4.561804294586182
    5. 'u' → logprob: -5.436804294586182
    6. 'une' → logprob: -5.811804294586182
    7. 's' → logprob: -6.061804294586182
    8. 'a' → logprob: -6.686804294586182
    9. ')' → logprob: -6.936804294586182
    10. 'i' → logprob: -6.936804294586182

Token 337: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.17091667652130127
    2. 'som' → logprob: -1.9209166765213013
    3. 'élé' → logprob: -5.295916557312012
    4. 'd' → logprob: -6.295916557312012
    5. 'val' → logprob: -6.920916557312012
    6. 's' → logprob: -6.920916557312012
    7. '```' → logprob: -8.170916557312012
    8. ' som' → logprob: -8.420916557312012
    9. 'certain' → logprob: -8.670916557312012
    10. ' somm' → logprob: -8.920916557312012

Token 338: ' à' (ID: 1221)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.0130852460861206
    2. 'val' → logprob: -1.3880852460861206
    3. 'd' → logprob: -1.5130852460861206
    4. 'indices' → logprob: -3.38808536529541
    5. 'pos' → logprob: -3.51308536529541
    6. 'index' → logprob: -3.88808536529541
    7. ' value' → logprob: -4.51308536529541
    8. ' d' → logprob: -4.51308536529541
    9. 'dict' → logprob: -4.76308536529541
    10. 'positions' → logprob: -4.88808536529541

Token 339: ' partir' (ID: 12100)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.1160300970077515
    2. 'une' → logprob: -1.2410300970077515
    3. 'un' → logprob: -2.491030216217041
    4. 'O' → logprob: -2.741030216217041
    5. 'pe' → logprob: -2.866030216217041
    6. 'fonction' → logprob: -3.241030216217041
    7. 'val' → logprob: -3.366030216217041
    8. 'l' → logprob: -4.116030216217041
    9. 'D' → logprob: -4.241030216217041
    10. 'd' → logprob: -4.491030216217041

Token 340: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1316923201084137
    2. ' d' → logprob: -2.381692409515381
    3. 'de' → logprob: -3.881692409515381
    4. 'd' → logprob: -5.006692409515381
    5. '#' → logprob: -6.256692409515381
    6. ' des' → logprob: -6.756692409515381
    7. ')' → logprob: -7.881692409515381
    8. ' #' → logprob: -10.256691932678223
    9. '   ' → logprob: -10.631691932678223
    10. ' ' → logprob: -10.631691932678223

Token 341: ' sa' (ID: 880)
  Prédit: ' sa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sa' → logprob: -0.9034632444381714
    2. 'sa' → logprob: -1.4034632444381714
    3. 'une' → logprob: -1.5284632444381714
    4. ' une' → logprob: -2.778463363647461
    5. 'la' → logprob: -3.528463363647461
    6. 'd' → logprob: -4.153463363647461
    7. 'val' → logprob: -4.278463363647461
    8. ' la' → logprob: -5.778463363647461
    9. 's' → logprob: -6.028463363647461
    10. 'a' → logprob: -6.778463363647461

Token 342: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0009076489950530231
    2. ' valeur' → logprob: -7.2509074211120605
    3. 'd' → logprob: -9.250907897949219
    4. 'value' → logprob: -10.375907897949219
    5. 'clé' → logprob: -10.875907897949219
    6. 'vale' → logprob: -11.375907897949219
    7. 'distance' → logprob: -11.625907897949219
    8. ' val' → logprob: -11.750907897949219
    9. 'va' → logprob: -13.125907897949219
    10. 'label' → logprob: -13.125907897949219

Token 343: ' D' (ID: 415)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.3616257309913635
    2. 'val' → logprob: -2.4866256713867188
    3. 'index' → logprob: -2.6116256713867188
    4. 'pos' → logprob: -3.1116256713867188
    5. 'd' → logprob: -3.6116256713867188
    6. ' value' → logprob: -3.6116256713867188
    7. 'indices' → logprob: -4.361625671386719
    8. 'idx' → logprob: -5.361625671386719
    9. 'position' → logprob: -5.361625671386719
    10. 'positions' → logprob: -5.986625671386719

Token 344: '[i' (ID: 1768)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.4972502887248993
    2. 'val' → logprob: -2.2472503185272217
    3. 'index' → logprob: -2.3722503185272217
    4. 'd' → logprob: -2.7472503185272217
    5. 'indices' → logprob: -3.2472503185272217
    6. 'pos' → logprob: -3.7472503185272217
    7. 'dict' → logprob: -4.747250080108643
    8. 'idx' → logprob: -4.747250080108643
    9. ' value' → logprob: -5.122250080108643
    10. ' =' → logprob: -5.122250080108643

Token 345: '].
' (ID: 49887)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.024928374215960503
    2. ']' → logprob: -4.149928569793701
    3. ')' → logprob: -5.649928569793701
    4. '])
' → logprob: -6.274928569793701
    5. ' ])' → logprob: -7.024928569793701
    6. 'd' → logprob: -7.399928569793701
    7. ')])' → logprob: -8.024928092956543
    8. '].' → logprob: -8.649928092956543
    9. '])]' → logprob: -8.649928092956543
    10. ')]' → logprob: -8.774928092956543

Token 346: 'd' (ID: 67)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.46169766783714294
    2. 'pos' → logprob: -1.5866976976394653
    3. 'val' → logprob: -2.586697578430176
    4. 'index' → logprob: -2.836697578430176
    5. 'd' → logprob: -4.586697578430176
    6. 'position' → logprob: -4.836697578430176
    7. 'positions' → logprob: -5.711697578430176
    8. 'D' → logprob: -6.336697578430176
    9. 'indices' → logprob: -6.336697578430176
    10. 'dict' → logprob: -6.711697578430176

Token 347: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.7478209733963013
    2. '_value' → logprob: -1.7478209733963013
    3. '_val' → logprob: -1.7478209733963013
    4. 'ict' → logprob: -2.4978208541870117
    5. '_indices' → logprob: -3.2478208541870117
    6. '_values' → logprob: -4.372820854187012
    7. '_index' → logprob: -4.372820854187012
    8. '_map' → logprob: -4.872820854187012
    9. '_dict' → logprob: -5.247820854187012
    10. '_pos' → logprob: -5.247820854187012

Token 348: '_i' (ID: 10853)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.12401780486106873
    2. '_index' → logprob: -2.7490177154541016
    3. 'i' → logprob: -3.2490177154541016
    4. '_i' → logprob: -4.749017715454102
    5. 'idx' → logprob: -6.499017715454102
    6. '_idx' → logprob: -6.499017715454102
    7. 'indices' → logprob: -7.749017715454102
    8. 'indice' → logprob: -7.749017715454102
    9. 'node' → logprob: -7.874017715454102
    10. 'ind' → logprob: -8.624017715454102

Token 349: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326825022697449
    2. '=' → logprob: -0.7576825022697449
    3. '={}' → logprob: -9.507682800292969
    4. ' ={' → logprob: -13.132682800292969
    5. '={' → logprob: -13.257682800292969
    6. ' ' → logprob: -13.507682800292969
    7. '{' → logprob: -13.757682800292969
    8. '{}' → logprob: -14.257682800292969
    9. 's' → logprob: -14.632682800292969
    10. '＝' → logprob: -15.007682800292969

Token 350: ' {' (ID: 354)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.0006772888009436429
    2. ' {}' → logprob: -8.000677108764648
    3. 'dict' → logprob: -8.000677108764648
    4. ' dict' → logprob: -12.000677108764648
    5. '{' → logprob: -14.875677108764648
    6. '{})' → logprob: -18.25067710876465
    7. '{}

' → logprob: -18.50067710876465
    8. '={}' → logprob: -18.50067710876465
    9. '{},' → logprob: -18.75067710876465
    10. '{}_' → logprob: -19.25067710876465

Token 351: 'd' (ID: 67)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.10704131424427032
    2. 'd' → logprob: -2.857041358947754
    3. 'v' → logprob: -3.482041358947754
    4. 'val' → logprob: -4.982041358947754
    5. ' D' → logprob: -5.232041358947754
    6. 'value' → logprob: -7.232041358947754
    7. ' d' → logprob: -9.107041358947754
    8. ' val' → logprob: -9.232041358947754
    9. ' v' → logprob: -9.357041358947754
    10. 'k' → logprob: -10.607041358947754

Token 352: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010802087374031544
    2. ':d' → logprob: -4.885802268981934
    3. ':i' → logprob: -6.510802268981934
    4. ' :' → logprob: -6.510802268981934
    5. ':D' → logprob: -8.760802268981934
    6. ':k' → logprob: -10.635802268981934
    7. 'd' → logprob: -11.510802268981934
    8. ':v' → logprob: -12.260802268981934
    9. 'for' → logprob: -12.885802268981934
    10. ':value' → logprob: -12.885802268981934

Token 353: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014181956648826599
    2. ' i' → logprob: -4.264182090759277
    3. 'None' → logprob: -12.139182090759277
    4. '	i' → logprob: -12.514182090759277
    5. ' ' → logprob: -12.639182090759277
    6. '}' → logprob: -13.889182090759277
    7. '   ' → logprob: -13.889182090759277
    8. '(i' → logprob: -14.389182090759277
    9. 'idx' → logprob: -14.514182090759277
    10. '  ' → logprob: -14.514182090759277

Token 354: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1799914836883545
    2. 'for' → logprob: -1.8049914836883545
    3. ':' → logprob: -8.679991722106934
    4. 'd' → logprob: -10.679991722106934
    5. ' ' → logprob: -11.054991722106934
    6. ' in' → logprob: -11.304991722106934
    7. '}' → logprob: -11.804991722106934
    8. ' d' → logprob: -12.054991722106934
    9. ':d' → logprob: -12.679991722106934
    10. ',' → logprob: -12.929991722106934

Token 355: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0381750650703907
    2. ' i' → logprob: -3.288175106048584
    3. 'd' → logprob: -9.288174629211426
    4. ' d' → logprob: -11.538174629211426
    5. '	i' → logprob: -11.788174629211426
    6. ',' → logprob: -11.913174629211426
    7. ' ' → logprob: -12.038174629211426
    8. ',i' → logprob: -12.975674629211426
    9. '  ' → logprob: -13.163174629211426
    10. '
' → logprob: -13.538174629211426

Token 356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008853639476001263
    2. ',d' → logprob: -6.258853435516357
    3. ',i' → logprob: -6.508853435516357
    4. 'i' → logprob: -6.508853435516357
    5. 'd' → logprob: -6.758853435516357
    6. ' in' → logprob: -6.883853435516357
    7. 'in' → logprob: -7.008853435516357
    8. ' ,' → logprob: -7.383853435516357
    9. ' i' → logprob: -8.758853912353516
    10. 'enumer' → logprob: -11.008853912353516

Token 357: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20142921805381775
    2. ' d' → logprob: -1.7014292478561401
    3. ' in' → logprob: -11.82642936706543
    4. '_d' → logprob: -13.32642936706543
    5. '<|end|>' → logprob: -13.32642936706543
    6. 'i' → logprob: -13.57642936706543
    7. '	d' → logprob: -13.82642936706543
    8. 'in' → logprob: -13.95142936706543
    9. ')d' → logprob: -14.32642936706543
    10. 'D' → logprob: -15.51392936706543

Token 358: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020547492429614067
    2. 'in' → logprob: -3.895547389984131
    3. 'enumer' → logprob: -13.395547866821289
    4. ' ' → logprob: -13.895547866821289
    5. 'd' → logprob: -13.895547866821289
    6. ')' → logprob: -14.145547866821289
    7. '<|end|>' → logprob: -14.645547866821289
    8. 'import' → logprob: -15.520547866821289
    9. ',' → logprob: -15.895547866821289
    10. '
' → logprob: -16.02054786682129

Token 359: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.251930296421051
    2. 'enumer' → logprob: -1.5019302368164062
    3. 'en' → logprob: -14.751930236816406
    4. '```' → logprob: -15.501930236816406
    5. '(en' → logprob: -15.751930236816406
    6. 'enum' → logprob: -16.126930236816406
    7. ' in' → logprob: -16.251930236816406
    8. '
' → logprob: -16.251930236816406
    9. ' en' → logprob: -17.001930236816406
    10. 'in' → logprob: -17.626930236816406

Token 360: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -0.22804370522499084
    2. 'D' → logprob: -1.6030436754226685
    3. ' D' → logprob: -5.978043556213379
    4. ' (' → logprob: -9.728043556213379
    5. '(' → logprob: -10.728043556213379
    6. '	D' → logprob: -12.603043556213379
    7. '[D' → logprob: -13.228043556213379
    8. ' ' → logprob: -13.478043556213379
    9. ',D' → logprob: -13.728043556213379
    10. '(d' → logprob: -13.728043556213379

Token 361: ')}

' (ID: 184554)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10619427263736725
    2. ' if' → logprob: -2.356194257736206
    3. 'if' → logprob: -5.231194496154785
    4. ' )' → logprob: -8.356194496154785
    5. '0' → logprob: -8.981194496154785
    6. ')}' → logprob: -9.106194496154785
    7. ' ' → logprob: -9.606194496154785
    8. '[' → logprob: -10.356194496154785
    9. '1' → logprob: -10.606194496154785
    10. '   ' → logprob: -11.606194496154785

Token 362: '#' (ID: 2)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25488221645355225
    2. '}' → logprob: -1.7548822164535522
    3. ' ' → logprob: -3.754882335662842
    4. '[' → logprob: -4.504882335662842
    5. ',' → logprob: -5.254882335662842
    6. 'if' → logprob: -5.504882335662842
    7. '<|end|>' → logprob: -6.629882335662842
    8. '_' → logprob: -6.754882335662842
    9. ' i' → logprob: -7.004882335662842
    10. ' }' → logprob: -7.129882335662842

Token 363: ' Cré' (ID: 109203)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6476398706436157
    2. '<|end|>' → logprob: -1.5226398706436157
    3. '}' → logprob: -2.897639751434326
    4. ')' → logprob: -3.397639751434326
    5. '<|end|>' → logprob: -3.522639751434326
    6. '#' → logprob: -3.522639751434326
    7. '.' → logprob: -4.147639751434326
    8. '[' → logprob: -4.897639751434326
    9. ' 
' → logprob: -4.897639751434326
    10. '
' → logprob: -5.022639751434326

Token 364: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.02927803248167038
    2. 'ate' → logprob: -4.529277801513672
    3. '#' → logprob: -5.154277801513672
    4. 'at' → logprob: -5.154277801513672
    5. 'd' → logprob: -5.904277801513672
    6. 'f' → logprob: -7.029277801513672
    7. 'er' → logprob: -7.029277801513672
    8. 'te' → logprob: -7.904277801513672
    9. '```' → logprob: -8.029277801513672
    10. 'ated' → logprob: -8.154277801513672

Token 365: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.30029046535491943
    2. '[' → logprob: -2.800290584564209
    3. 'd' → logprob: -2.800290584564209
    4. ' ' → logprob: -2.800290584564209
    5. '_' → logprob: -3.550290584564209
    6. ' of' → logprob: -4.050290584564209
    7. 's' → logprob: -4.675290584564209
    8. '(' → logprob: -5.300290584564209
    9. ' des' → logprob: -5.800290584564209
    10. ' de' → logprob: -6.050290584564209

Token 366: ''une' (ID: 13337)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5280377864837646
    2. '(' → logprob: -2.0280377864837646
    3. 'une' → logprob: -2.4030377864837646
    4. ' d' → logprob: -2.7780377864837646
    5. '[]' → logprob: -2.9030377864837646
    6. 'd' → logprob: -2.9030377864837646
    7. ' la' → logprob: -3.0280377864837646
    8. 'parent' → logprob: -3.1530377864837646
    9. '_' → logprob: -3.2780377864837646
    10. 'un' → logprob: -3.5280377864837646

Token 367: ' liste' (ID: 31719)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.1386760473251343
    2. 'default' → logprob: -1.2636760473251343
    3. 'stack' → logprob: -1.6386760473251343
    4. 'graph' → logprob: -2.263676166534424
    5. 'deque' → logprob: -3.888676166534424
    6. 'queue' → logprob: -4.263676166534424
    7. 'range' → logprob: -4.638676166534424
    8. 'for' → logprob: -5.013676166534424
    9. 'dict' → logprob: -5.513676166534424
    10. 'tree' → logprob: -5.638676166534424

Token 368: ' D' (ID: 415)
  Prédit: 'children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'children' → logprob: -0.9312045574188232
    2. 'adj' → logprob: -1.4312045574188232
    3. 'graph' → logprob: -1.9312045574188232
    4. 'visited' → logprob: -2.3062045574188232
    5. 'edges' → logprob: -3.5562045574188232
    6. 'neighbors' → logprob: -4.431204795837402
    7. 'G' → logprob: -4.556204795837402
    8. 'child' → logprob: -4.931204795837402
    9. 'used' → logprob: -5.306204795837402
    10. ' graph' → logprob: -5.306204795837402

Token 369: '_desc' (ID: 26683)
  Prédit: '_sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sorted' → logprob: -0.8481215834617615
    2. '2' → logprob: -2.7231216430664062
    3. '_values' → logprob: -2.7231216430664062
    4. ' =' → logprob: -2.7231216430664062
    5. '_depth' → logprob: -3.4731216430664062
    6. '_children' → logprob: -3.8481216430664062
    7. '_indices' → logprob: -3.8481216430664062
    8. '[' → logprob: -4.098121643066406
    9. 'sorted' → logprob: -4.098121643066406
    10. '_' → logprob: -4.098121643066406

Token 370: ' :
' (ID: 10039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08762791007757187
    2. '=' → logprob: -2.58762788772583
    3. 'ending' → logprob: -5.08762788772583
    4. '_sorted' → logprob: -7.33762788772583
    5. 'endant' → logprob: -7.71262788772583
    6. '=[' → logprob: -7.83762788772583
    7. '=[]' → logprob: -8.587628364562988
    8. '_' → logprob: -8.837628364562988
    9. ']' → logprob: -8.962628364562988
    10. 'end' → logprob: -9.212628364562988

Token 371: '#' (ID: 2)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.24860139191150665
    2. '=' → logprob: -2.6236014366149902
    3. ' sorted' → logprob: -2.8736014366149902
    4. 'D' → logprob: -3.2486014366149902
    5. '[' → logprob: -3.3736014366149902
    6. ' =' → logprob: -4.37360143661499
    7. ' [' → logprob: -6.62360143661499
    8. ' D' → logprob: -6.74860143661499
    9. '(sorted' → logprob: -7.24860143661499
    10. 'd' → logprob: -7.37360143661499

Token 372: ' On' (ID: 2160)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.1931847780942917
    2. 'sorted' → logprob: -1.818184733390808
    3. '[' → logprob: -4.943184852600098
    4. '[D' → logprob: -5.568184852600098
    5. ' sorted' → logprob: -7.068184852600098
    6. '#' → logprob: -7.193184852600098
    7. ' D' → logprob: -7.693184852600098
    8. 'd' → logprob: -9.068184852600098
    9. '[i' → logprob: -9.818184852600098
    10. ' [' → logprob: -10.568184852600098

Token 373: ' trie' (ID: 139428)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12695226073265076
    2. 'D' → logprob: -2.5019521713256836
    3. ' =' → logprob: -3.6269521713256836
    4. '=D' → logprob: -5.501952171325684
    5. 'desc' → logprob: -6.251952171325684
    6. 'd' → logprob: -6.501952171325684
    7. '=[]' → logprob: -7.501952171325684
    8. '#' → logprob: -7.501952171325684
    9. 's' → logprob: -7.751952171325684
    10. 'veux' → logprob: -8.001952171325684

Token 374: ' les' (ID: 1341)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5509219765663147
    2. 'D' → logprob: -1.30092191696167
    3. ' =' → logprob: -1.92592191696167
    4. '=D' → logprob: -5.80092191696167
    5. 'sorted' → logprob: -7.55092191696167
    6. '=[' → logprob: -7.80092191696167
    7. 'd' → logprob: -8.175922393798828
    8. ' D' → logprob: -8.300922393798828
    9. '[' → logprob: -8.425922393798828
    10. '_D' → logprob: -9.050922393798828

Token 375: ' valeurs' (ID: 73668)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.013256344944238663
    2. 'd' → logprob: -5.138256549835205
    3. '[D' → logprob: -5.388256549835205
    4. '[d' → logprob: -6.513256549835205
    5. 'sorted' → logprob: -7.388256549835205
    6. '[i' → logprob: -7.763256549835205
    7. '[' → logprob: -9.638256072998047
    8. ' D' → logprob: -9.888256072998047
    9. '[(' → logprob: -11.013256072998047
    10. '(sorted' → logprob: -11.388256072998047

Token 376: ' D' (ID: 415)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2031095027923584
    2. ' =' → logprob: -1.9531095027923584
    3. 'D' → logprob: -3.4531095027923584
    4. '=D' → logprob: -4.7031097412109375
    5. '=[' → logprob: -8.203109741210938
    6. 'sorted' → logprob: -8.328109741210938
    7. 'd' → logprob: -8.828109741210938
    8. '(D' → logprob: -9.203109741210938
    9. '_D' → logprob: -9.578109741210938
    10. ' ' → logprob: -9.953109741210938

Token 377: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01021320465952158
    2. '=' → logprob: -4.760213375091553
    3. ' =' → logprob: -6.635213375091553
    4. 'D' → logprob: -9.010212898254395
    5. '=D' → logprob: -10.260212898254395
    6. '=[' → logprob: -10.510212898254395
    7. '[D' → logprob: -10.885212898254395
    8. '[:]' → logprob: -10.885212898254395
    9. 'd' → logprob: -11.510212898254395
    10. 'desc' → logprob: -11.635212898254395

Token 378: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002453662164043635
    2. '[' → logprob: -8.625245094299316
    3. '
' → logprob: -10.125245094299316
    4. 'i' → logprob: -11.500245094299316
    5. '[i' → logprob: -12.000245094299316
    6. ' ' → logprob: -12.250245094299316
    7. ']' → logprob: -13.125245094299316
    8. '

' → logprob: -14.250245094299316
    9. '```' → logprob: -15.000245094299316
    10. 'd' → logprob: -15.000245094299316

Token 379: ':]' (ID: 67377)
  Prédit: ':]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.6887404918670654
    2. '1' → logprob: -0.9387404918670654
    3. ':],' → logprob: -2.5637404918670654
    4. '[' → logprob: -4.1887407302856445
    5. ':' → logprob: -5.3137407302856445
    6. ']' → logprob: -5.6887407302856445
    7. ':].' → logprob: -5.8137407302856445
    8. '],' → logprob: -6.5637407302856445
    9. '+' → logprob: -7.0637407302856445
    10. ':,' → logprob: -8.563740730285645

Token 380: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1723354607820511
    2. 'desc' → logprob: -3.172335386276245
    3. '=' → logprob: -3.422335386276245
    4. 'sorted' → logprob: -3.672335386276245
    5. ')' → logprob: -3.922335386276245
    6. ']' → logprob: -4.422335624694824
    7. '[::-' → logprob: -5.297335624694824
    8. ' =' → logprob: -5.547335624694824
    9. 'descending' → logprob: -5.547335624694824
    10. ' ,' → logprob: -5.797335624694824

Token 381: 'c' (ID: 66)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.09662516415119171
    2. ',' → logprob: -3.4716250896453857
    3. 'descending' → logprob: -3.8466250896453857
    4. 'sorted' → logprob: -4.096625328063965
    5. 'D' → logprob: -4.221625328063965
    6. 'd' → logprob: -6.096625328063965
    7. ')' → logprob: -6.596625328063965
    8. '],' → logprob: -6.721625328063965
    9. '),' → logprob: -6.846625328063965
    10. 'desc' → logprob: -7.596625328063965

Token 382: 'elles' (ID: 8500)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5455006957054138
    2. 'sorted' → logprob: -1.7955007553100586
    3. 'es' → logprob: -2.6705007553100586
    4. ']' → logprob: -3.0455007553100586
    5. '=D' → logprob: -3.6705007553100586
    6. ')' → logprob: -4.420500755310059
    7. '[' → logprob: -4.670500755310059
    8. 'e' → logprob: -4.670500755310059
    9. 'esc' → logprob: -4.795500755310059
    10. '#' → logprob: -4.795500755310059

Token 383: ' associ' (ID: 5516)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.4954341650009155
    2. '=' → logprob: -1.8704341650009155
    3. '])' → logprob: -1.8704341650009155
    4. 'import' → logprob: -2.495434284210205
    5. 'sorted' → logprob: -2.495434284210205
    6. ')' → logprob: -2.620434284210205
    7. 'de' → logprob: -3.245434284210205
    8. ']' → logprob: -3.495434284210205
    9. '[' → logprob: -3.745434284210205
    10. '_sorted' → logprob: -4.370434284210205

Token 384: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.004230239428579807
    2. 'es' → logprob: -5.62923002243042
    3. 'és' → logprob: -8.754230499267578
    4. 'é' → logprob: -8.754230499267578
    5. 'à' → logprob: -8.879230499267578
    6. 'ée' → logprob: -10.254230499267578
    7. '#' → logprob: -10.254230499267578
    8. 'e' → logprob: -10.254230499267578
    9. '```' → logprob: -10.879230499267578
    10. ' à' → logprob: -11.379230499267578

Token 385: ' aux' (ID: 5850)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.7975535988807678
    2. 'aux' → logprob: -1.047553539276123
    3. ' aux' → logprob: -2.672553539276123
    4. ']' → logprob: -2.922553539276123
    5. ' à' → logprob: -3.422553539276123
    6. 'au' → logprob: -4.422553539276123
    7. ',' → logprob: -4.672553539276123
    8. ')' → logprob: -5.047553539276123
    9. '=' → logprob: -5.547553539276123
    10. '],' → logprob: -6.047553539276123

Token 386: ' somm' (ID: 44830)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.7446820735931396
    2. 'range' → logprob: -2.1196820735931396
    3. '1' → logprob: -2.2446820735931396
    4. 'i' → logprob: -2.3696820735931396
    5. 'som' → logprob: -2.6196820735931396
    6. 's' → logprob: -3.2446820735931396
    7. 'd' → logprob: -3.4946820735931396
    8. ' somm' → logprob: -4.369682312011719
    9. 'indices' → logprob: -4.869682312011719
    10. ' D' → logprob: -4.869682312011719

Token 387: 'ets' (ID: 1719)
  Prédit: 'ents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ents' → logprob: -1.0739600658416748
    2. 'es' → logprob: -1.4489600658416748
    3. 'e' → logprob: -2.073960065841675
    4. 'ets' → logprob: -2.198960065841675
    5. 'indices' → logprob: -3.323960065841675
    6. 'ots' → logprob: -3.698960065841675
    7. 'vertices' → logprob: -3.948960065841675
    8. 'ètres' → logprob: -4.198960304260254
    9. 'pts' → logprob: -4.573960304260254
    10. 'ômes' → logprob: -4.698960304260254

Token 388: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5075847506523132
    2. '])' → logprob: -1.132584810256958
    3. ',' → logprob: -3.257584810256958
    4. '),' → logprob: -3.632584810256958
    5. '],' → logprob: -5.382584571838379
    6. ' )' → logprob: -6.757584571838379
    7. 'à' → logprob: -6.882584571838379
    8. '[' → logprob: -7.257584571838379
    9. 'd' → logprob: -7.507584571838379
    10. 'de' → logprob: -7.507584571838379

Token 389: ' car' (ID: 1669)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.029851730912923813
    2. ' reverse' → logprob: -3.5298516750335693
    3. ')' → logprob: -9.779851913452148
    4. 'descending' → logprob: -10.529851913452148
    5. '(reverse' → logprob: -12.029851913452148
    6. 're' → logprob: -13.154851913452148
    7. '.reverse' → logprob: -13.154851913452148
    8. 'de' → logprob: -13.654851913452148
    9. 'inverse' → logprob: -13.904851913452148
    10. 'dec' → logprob: -14.029851913452148

Token 390: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.5040077567100525
    2. 'i' → logprob: -2.0040078163146973
    3. 'on' → logprob: -2.5040078163146973
    4. 'None' → logprob: -3.1290078163146973
    5. 'len' → logprob: -3.8790078163146973
    6. 'les' → logprob: -3.8790078163146973
    7. 'd' → logprob: -4.254007816314697
    8. ' on' → logprob: -4.504007816314697
    9. ' D' → logprob: -4.504007816314697
    10. '0' → logprob: -4.754007816314697

Token 391: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0020722290500998497
    2. '_desc' → logprob: -7.877072334289551
    3. '][' → logprob: -8.00207233428955
    4. ')[' → logprob: -8.12707233428955
    5. ']' → logprob: -8.25207233428955
    6. '
' → logprob: -8.75207233428955
    7. ')' → logprob: -9.25207233428955
    8. '_des' → logprob: -9.37707233428955
    9. '_' → logprob: -9.87707233428955
    10. '```' → logprob: -10.00207233428955

Token 392: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.2855416066013277e-05
    2. 'None' → logprob: -11.625032424926758
    3. 'i' → logprob: -11.750032424926758
    4. '
' → logprob: -12.000032424926758
    5. '0' → logprob: -12.500032424926758
    6. ' ' → logprob: -12.750032424926758
    7. ':' → logprob: -14.437532424926758
    8. '

' → logprob: -14.812532424926758
    9. ']' → logprob: -15.187532424926758
    10. '>' → logprob: -15.437532424926758

Token 393: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027788260951638222
    2. '])' → logprob: -4.652788162231445
    3. ':]' → logprob: -4.902788162231445
    4. '][' → logprob: -5.027788162231445
    5. '[' → logprob: -6.027788162231445
    6. 'is' → logprob: -7.652788162231445
    7. '])[' → logprob: -8.152788162231445
    8. ':' → logprob: -8.777788162231445
    9. ']==' → logprob: -9.277788162231445
    10. '=' → logprob: -9.402788162231445

Token 394: ' est' (ID: 893)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7585132122039795
    2. ' est' → logprob: -1.1335132122039795
    3. 'is' → logprob: -2.5085132122039795
    4. 'est' → logprob: -3.3835132122039795
    5. ' is' → logprob: -3.6335132122039795
    6. '])' → logprob: -4.133513450622559
    7. '[' → logprob: -4.258513450622559
    8. '=' → logprob: -4.383513450622559
    9. 'skip' → logprob: -5.633513450622559
    10. ' étant' → logprob: -5.758513450622559

Token 395: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -5.848420551046729e-05
    2. ' None' → logprob: -9.7500581741333
    3. '=None' → logprob: -16.125059127807617
    4. '_None' → logprob: -16.750059127807617
    5. '(None' → logprob: -17.250059127807617
    6. 'none' → logprob: -18.500059127807617
    7. '_none' → logprob: -19.125059127807617
    8. ',None' → logprob: -19.750059127807617
    9. '
' → logprob: -20.500059127807617
    10. '```' → logprob: -20.500059127807617

Token 396: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018060851842164993
    2. '])' → logprob: -4.643060684204102
    3. ',' → logprob: -5.768060684204102
    4. '),' → logprob: -6.018060684204102
    5. ')
' → logprob: -6.268060684204102
    6. ' )' → logprob: -7.768060684204102
    7. ')]' → logprob: -8.768060684204102
    8. ']' → logprob: -10.268060684204102
    9. ')[' → logprob: -10.393060684204102
    10. ').' → logprob: -10.393060684204102

Token 397: ' dans' (ID: 2671)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4634101688861847
    2. ' =' → logprob: -1.2134101390838623
    3. ']' → logprob: -3.0884101390838623
    4. 'desc' → logprob: -4.588410377502441
    5. 'sorted' → logprob: -4.588410377502441
    6. '_desc' → logprob: -6.088410377502441
    7. '_sorted' → logprob: -6.213410377502441
    8. ']=' → logprob: -6.713410377502441
    9. ')' → logprob: -7.463410377502441
    10. ',' → logprob: -8.338410377502441

Token 398: ' l' (ID: 305)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.06083304062485695
    2. 'descending' → logprob: -3.060832977294922
    3. 'sorted' → logprob: -4.560832977294922
    4. 'de' → logprob: -7.310832977294922
    5. 'desc' → logprob: -7.810832977294922
    6. ' reverse' → logprob: -7.935832977294922
    7. '#' → logprob: -8.810832977294922
    8. ' descending' → logprob: -10.185832977294922
    9. 'd' → logprob: -10.310832977294922
    10. 're' → logprob: -11.060832977294922

Token 399: ''ordre' (ID: 124753)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.9328123331069946
    2. 'sorted' → logprob: -1.4328123331069946
    3. 'éc' → logprob: -1.8078123331069946
    4. 'ec' → logprob: -2.682812213897705
    5. 'descending' → logprob: -3.057812213897705
    6. 'reverse' → logprob: -3.432812213897705
    7. 'esc' → logprob: -3.807812213897705
    8. 's' → logprob: -4.432812213897705
    9. ')' → logprob: -5.182812213897705
    10. '[::-' → logprob: -6.182812213897705

Token 400: ' décro' (ID: 176854)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15716007351875305
    2. 'desc' → logprob: -2.6571600437164307
    3. 'descending' → logprob: -2.6571600437164307
    4. 'de' → logprob: -6.03216028213501
    5. '_desc' → logprob: -6.90716028213501
    6. ' =' → logprob: -7.15716028213501
    7. 'reverse' → logprob: -8.407159805297852
    8. 'sorted' → logprob: -8.532159805297852
    9. ' descending' → logprob: -9.157159805297852
    10. 'des' → logprob: -9.532159805297852

Token 401: 'issant' (ID: 31359)
  Prédit: 'ro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ro' → logprob: -0.27780118584632874
    2. 'rent' → logprob: -2.652801275253296
    3. 'd' → logprob: -2.902801275253296
    4. 'r' → logprob: -3.277801275253296
    5. 'desc' → logprob: -3.527801275253296
    6. 'dent' → logprob: -3.902801275253296
    7. 'sent' → logprob: -4.527801036834717
    8. 'sort' → logprob: -5.152801036834717
    9. 'rend' → logprob: -5.777801036834717
    10. 'endant' → logprob: -6.277801036834717

Token 402: '.
' (ID: 558)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.1422001123428345
    2. ' =' → logprob: -1.1422001123428345
    3. '=' → logprob: -1.5172001123428345
    4. ']' → logprob: -2.392199993133545
    5. 'sorted' → logprob: -3.392199993133545
    6. '(D' → logprob: -5.517199993133545
    7. '(sorted' → logprob: -5.892199993133545
    8. '=D' → logprob: -6.017199993133545
    9. ']
' → logprob: -6.142199993133545
    10. ',' → logprob: -6.517199993133545

Token 403: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.014481975696980953
    2. ' =' → logprob: -4.764482021331787
    3. '=' → logprob: -5.389482021331787
    4. ']' → logprob: -7.639482021331787
    5. 'sorted' → logprob: -8.014481544494629
    6. 'd' → logprob: -8.264481544494629
    7. ' D' → logprob: -10.389481544494629
    8. ']
' → logprob: -10.389481544494629
    9. ',' → logprob: -10.639481544494629
    10. '(sorted' → logprob: -10.764481544494629

Token 404: '_desc' (ID: 26683)
  Prédit: '_desc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_desc' → logprob: -0.0020479592494666576
    2. '_sorted' → logprob: -6.752048015594482
    3. '_' → logprob: -7.752048015594482
    4. '_des' → logprob: -7.877048015594482
    5. '_d' → logprob: -10.252047538757324
    6. '_DESC' → logprob: -11.377047538757324
    7. '_dec' → logprob: -12.627047538757324
    8. ' =' → logprob: -13.002047538757324
    9. '_descr' → logprob: -13.252047538757324
    10. '_val' → logprob: -13.377047538757324

Token 405: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326398253440857
    2. ' =' → logprob: -1.313264012336731
    3. '=D' → logprob: -14.813263893127441
    4. '=[' → logprob: -15.188263893127441
    5. 'sorted' → logprob: -15.313263893127441
    6. ' ' → logprob: -15.688263893127441
    7. ' =[' → logprob: -15.688263893127441
    8. '＝' → logprob: -15.688263893127441
    9. ')' → logprob: -15.813263893127441
    10. ',' → logprob: -15.938263893127441

Token 406: ' sorted' (ID: 20099)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -3.547789674485102e-05
    2. ' sorted' → logprob: -10.250035285949707
    3. '(sorted' → logprob: -16.875036239624023
    4. '.sorted' → logprob: -19.500036239624023
    5. '   ' → logprob: -20.500036239624023
    6. '[' → logprob: -21.250036239624023
    7. 'sort' → logprob: -21.375036239624023
    8. 'list' → logprob: -21.625036239624023
    9. 's' → logprob: -21.875036239624023
    10. 'Sorted' → logprob: -22.125036239624023

Token 407: '(D' (ID: 9908)
  Prédit: '(D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(D' → logprob: -3.070975071750581e-05
    2. '(' → logprob: -10.500030517578125
    3. '([' → logprob: -13.375030517578125
    4. 'D' → logprob: -14.250030517578125
    5. '(
' → logprob: -14.250030517578125
    6. '((' → logprob: -15.250030517578125
    7. '(d' → logprob: -17.125030517578125
    8. '[D' → logprob: -17.375030517578125
    9. ' (' → logprob: -18.125030517578125
    10. '(

' → logprob: -20.500030517578125

Token 408: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. ' [' → logprob: -15.250000953674316
    3. ')[' → logprob: -15.625000953674316
    4. '1' → logprob: -15.625000953674316
    5. ',' → logprob: -16.375
    6. '```' → logprob: -17.0
    7. '
' → logprob: -17.125
    8. ')' → logprob: -17.625
    9. '[
' → logprob: -17.875
    10. ' ' → logprob: -19.625

Token 409: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.935296834039036e-06
    2. '
' → logprob: -13.62500286102295
    3. ' ' → logprob: -13.62500286102295
    4. '[' → logprob: -15.00000286102295
    5. 'from' → logprob: -16.750003814697266
    6. '```' → logprob: -16.875003814697266
    7. '(' → logprob: -18.375003814697266
    8. '

' → logprob: -18.500003814697266
    9. ']' → logprob: -18.625003814697266
    10. ')' → logprob: -18.750003814697266

Token 410: ':],' (ID: 117284)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.35437580943107605
    2. ',' → logprob: -1.2293758392333984
    3. ':],' → logprob: -5.229375839233398
    4. '),' → logprob: -7.979375839233398
    5. ']' → logprob: -9.604375839233398
    6. ' ,' → logprob: -10.229375839233398
    7. '},' → logprob: -10.604375839233398
    8. ' ],' → logprob: -10.604375839233398
    9. ':' → logprob: -11.729375839233398
    10. '>,' → logprob: -11.854375839233398

Token 411: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.0019286326132714748
    2. ' reverse' → logprob: -6.251928806304932
    3. '(reverse' → logprob: -18.876928329467773
    4. 'Reverse' → logprob: -20.876928329467773
    5. '.reverse' → logprob: -20.876928329467773
    6. '_reverse' → logprob: -22.001928329467773
    7. 'rev' → logprob: -22.876928329467773
    8. ' ' → logprob: -23.626928329467773
    9. '   ' → logprob: -24.501928329467773
    10. 'r' → logprob: -25.626928329467773

Token 412: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.005949064157903194
    2. '=' → logprob: -5.130949020385742
    3. 'True' → logprob: -11.380949020385742
    4. ')' → logprob: -12.255949020385742
    5. '(True' → logprob: -13.380949020385742
    6. ')=' → logprob: -14.130949020385742
    7. '=
' → logprob: -14.130949020385742
    8. ' =' → logprob: -14.380949020385742
    9. ' True' → logprob: -15.755949020385742
    10. '-' → logprob: -16.255949020385742

Token 413: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.250000953674316
    3. ')
' → logprob: -15.500000953674316
    4. '))' → logprob: -17.25
    5. ')#' → logprob: -17.25
    6. ')

' → logprob: -17.875
    7. '),' → logprob: -18.875
    8. ')`' → logprob: -19.5
    9. ']' → logprob: -19.625
    10. ')]' → logprob: -19.75

Token 414: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0033759113866835833
    2. '#' → logprob: -6.753376007080078
    3. ' for' → logprob: -6.753376007080078
    4. 'i' → logprob: -7.878376007080078
    5. ')' → logprob: -8.378376007080078
    6. '<|end|>' → logprob: -9.253376007080078
    7. '
' → logprob: -9.503376007080078
    8. 'current' → logprob: -9.753376007080078
    9. 'parent' → logprob: -9.878376007080078
    10. 'd' → logprob: -10.503376007080078

Token 415: ' Cré' (ID: 109203)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011040179524570704
    2. '#' → logprob: -7.62610387802124
    3. 'stack' → logprob: -7.75110387802124
    4. 'last' → logprob: -9.251104354858398
    5. 'current' → logprob: -10.626104354858398
    6. 'i' → logprob: -11.001104354858398
    7. 'prev' → logprob: -11.251104354858398
    8. 'from' → logprob: -11.626104354858398
    9. 'previous' → logprob: -12.376104354858398
    10. ' for' → logprob: -12.501104354858398

Token 416: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.00010521204239921644
    2. '#' → logprob: -9.875104904174805
    3. 'at' → logprob: -11.250104904174805
    4. 'tion' → logprob: -11.625104904174805
    5. 'd' → logprob: -12.125104904174805
    6. 'paration' → logprob: -12.125104904174805
    7. 'ption' → logprob: -12.375104904174805
    8. '```' → logprob: -12.625104904174805
    9. 'ate' → logprob: -13.000104904174805
    10. 'lation' → logprob: -13.250104904174805

Token 417: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1390095055103302
    2. ' d' → logprob: -2.139009475708008
    3. '#' → logprob: -5.264009475708008
    4. 'de' → logprob: -6.014009475708008
    5. 'des' → logprob: -6.889009475708008
    6. ' de' → logprob: -7.139009475708008
    7. ' of' → logprob: -7.764009475708008
    8. 'of' → logprob: -7.764009475708008
    9. 's' → logprob: -7.889009475708008
    10. '(' → logprob: -8.014009475708008

Token 418: ''une' (ID: 13337)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.7687931656837463
    2. ''une' → logprob: -1.3937931060791016
    3. 'd' → logprob: -1.7687931060791016
    4. 'a' → logprob: -2.7687931060791016
    5. ' d' → logprob: -3.5187931060791016
    6. '#' → logprob: -5.018793106079102
    7. ''un' → logprob: -5.518793106079102
    8. 'un' → logprob: -5.643793106079102
    9. ' une' → logprob: -6.268793106079102
    10. 'e' → logprob: -6.768793106079102

Token 419: ' liste' (ID: 31719)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.02209850400686264
    2. 'visited' → logprob: -4.522098541259766
    3. 'deque' → logprob: -6.022098541259766
    4. 'queue' → logprob: -6.272098541259766
    5. 'graph' → logprob: -6.272098541259766
    6. 'for' → logprob: -6.647098541259766
    7. '#' → logprob: -7.022098541259766
    8. 'list' → logprob: -7.397098541259766
    9. 'set' → logprob: -7.897098541259766
    10. 'from' → logprob: -8.397098541259766

Token 420: ' D' (ID: 415)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.8569334745407104
    2. 'children' → logprob: -1.6069334745407104
    3. 'stack' → logprob: -3.10693359375
    4. 'path' → logprob: -3.10693359375
    5. 'parent' → logprob: -3.10693359375
    6. 'order' → logprob: -3.35693359375
    7. 'child' → logprob: -4.10693359375
    8. 'queue' → logprob: -4.10693359375
    9. 'adj' → logprob: -4.10693359375
    10. 'next' → logprob: -4.60693359375

Token 421: '_sub' (ID: 11572)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11280270665884018
    2. '_sorted' → logprob: -3.237802743911743
    3. '_next' → logprob: -4.612802505493164
    4. '_index' → logprob: -4.612802505493164
    5. '_pos' → logprob: -4.862802505493164
    6. '_indices' → logprob: -5.362802505493164
    7. '_min' → logprob: -5.612802505493164
    8. '_idx' → logprob: -5.612802505493164
    9. 'asc' → logprob: -5.862802505493164
    10. '_in' → logprob: -6.112802505493164

Token 422: 'tree' (ID: 19816)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39662492275238037
    2. '=' → logprob: -1.5216249227523804
    3. 'tree' → logprob: -2.39662504196167
    4. 'size' → logprob: -4.39662504196167
    5. '=[' → logprob: -5.64662504196167
    6. '_size' → logprob: -7.02162504196167
    7. '=[]' → logprob: -7.52162504196167
    8. 's' → logprob: -8.896624565124512
    9. 'sizes' → logprob: -9.521624565124512
    10. '[' → logprob: -9.646624565124512

Token 423: ' :
' (ID: 10039)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47689080238342285
    2. '=' → logprob: -0.9768908023834229
    3. 'size' → logprob: -6.726890563964844
    4. '=[' → logprob: -7.101890563964844
    5. '=[]' → logprob: -7.851890563964844
    6. '_size' → logprob: -8.226890563964844
    7. '[' → logprob: -9.976890563964844
    8. ']' → logprob: -11.476890563964844
    9. '_sizes' → logprob: -11.476890563964844
    10. '=[]
' → logprob: -11.601890563964844

Token 424: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02089441567659378
    2. 'D' → logprob: -4.020894527435303
    3. '[D' → logprob: -6.770894527435303
    4. ' [' → logprob: -7.020894527435303
    5. '[N' → logprob: -8.645894050598145
    6. '[size' → logprob: -8.770894050598145
    7. '#' → logprob: -9.520894050598145
    8. '[sub' → logprob: -9.645894050598145
    9. ' =' → logprob: -9.770894050598145
    10. ' D' → logprob: -9.770894050598145

Token 425: ' D' (ID: 415)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1687249094247818
    2. 'D' → logprob: -1.9187248945236206
    3. '[D' → logprob: -5.04372501373291
    4. '#' → logprob: -6.79372501373291
    5. ' [' → logprob: -7.79372501373291
    6. ' D' → logprob: -8.79372501373291
    7. '[N' → logprob: -8.79372501373291
    8. '[[' → logprob: -10.54372501373291
    9. '[n' → logprob: -10.91872501373291
    10. '[size' → logprob: -10.91872501373291

Token 426: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.0026185857132077217
    2. '_' → logprob: -6.627618789672852
    3. ' =' → logprob: -6.752618789672852
    4. '=' → logprob: -9.752618789672852
    5. 'sub' → logprob: -10.252618789672852
    6. '=_' → logprob: -11.627618789672852
    7. '=[]' → logprob: -12.127618789672852
    8. '_s' → logprob: -12.627618789672852
    9. '_=' → logprob: -12.627618789672852
    10. '=sub' → logprob: -13.127618789672852

Token 427: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.00025954778539016843
    2. ' =' → logprob: -8.875259399414062
    3. '_tree' → logprob: -10.125259399414062
    4. '=' → logprob: -10.375259399414062
    5. '[' → logprob: -11.375259399414062
    6. '_sub' → logprob: -11.375259399414062
    7. 'size' → logprob: -11.625259399414062
    8. '=[' → logprob: -12.375259399414062
    9. 'sub' → logprob: -12.750259399414062
    10. 'trees' → logprob: -13.125259399414062

Token 428: '[i' (ID: 1768)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062024373561143875
    2. ' =' → logprob: -2.8120243549346924
    3. '=[' → logprob: -9.937024116516113
    4. '[' → logprob: -12.437024116516113
    5. '=[]' → logprob: -13.187024116516113
    6. '=D' → logprob: -14.437024116516113
    7. ' =[' → logprob: -14.562024116516113
    8. ']' → logprob: -14.562024116516113
    9. '＝' → logprob: -15.562024116516113
    10. '```' → logprob: -16.18702507019043

Token 429: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6414622068405151
    2. ' =' → logprob: -0.8914622068405151
    3. ']' → logprob: -2.7664623260498047
    4. ']=' → logprob: -7.766462326049805
    5. '=[' → logprob: -10.516462326049805
    6. ')' → logprob: -10.641462326049805
    7. '[' → logprob: -11.016462326049805
    8. 'size' → logprob: -11.516462326049805
    9. '#' → logprob: -12.641462326049805
    10. ' =[' → logprob: -12.641462326049805

Token 430: ' serv' (ID: 2096)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12695908546447754
    2. ' =' → logprob: -2.1269590854644775
    3. '=[' → logprob: -10.501958847045898
    4. ' =[' → logprob: -13.751958847045898
    5. ']' → logprob: -14.626958847045898
    6. '=[]' → logprob: -14.751958847045898
    7. '=
' → logprob: -14.751958847045898
    8. '[' → logprob: -15.251958847045898
    9. '=D' → logprob: -16.1269588470459
    10. '＝' → logprob: -16.2519588470459

Token 431: 'ira' (ID: 2633)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015957294031977654
    2. 'ent' → logprob: -5.390957355499268
    3. '=[' → logprob: -5.515957355499268
    4. '=' → logprob: -6.640957355499268
    5. '=None' → logprob: -6.765957355499268
    6. '[D' → logprob: -7.015957355499268
    7. '[i' → logprob: -7.515957355499268
    8. 's' → logprob: -7.640957355499268
    9. 'ices' → logprob: -7.765957355499268
    10. 'es' → logprob: -7.890957355499268

Token 432: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.995678722858429
    2. ' =' → logprob: -0.995678722858429
    3. '[' → logprob: -2.495678663253784
    4. '=None' → logprob: -2.620678663253784
    5. '=[' → logprob: -2.870678663253784
    6. 'à' → logprob: -3.370678663253784
    7. ' à' → logprob: -4.745678901672363
    8. '=[]' → logprob: -5.995678901672363
    9. '<|end|>' → logprob: -6.995678901672363
    10. ' [' → logprob: -7.120678901672363

Token 433: ' accum' (ID: 23148)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03942190855741501
    2. '0' → logprob: -3.539421796798706
    3. 'None' → logprob: -5.039422035217285
    4. ' [' → logprob: -6.539422035217285
    5. '1' → logprob: -7.664422035217285
    6. '[]' → logprob: -8.289422035217285
    7. '[N' → logprob: -8.539422035217285
    8. '[int' → logprob: -9.039422035217285
    9. '[max' → logprob: -9.164422035217285
    10. '[size' → logprob: -9.414422035217285

Token 434: 'uler' (ID: 11802)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.30397650599479675
    2. 'uler' → logprob: -1.6789765357971191
    3. 'érer' → logprob: -2.678976535797119
    4. 'erer' → logprob: -5.428976535797119
    5. '[' → logprob: -6.178976535797119
    6. 'é' → logprob: -8.803976058959961
    7. 'e' → logprob: -9.053976058959961
    8. 'uer' → logprob: -10.178976058959961
    9. 'ér' → logprob: -10.553976058959961
    10. 'rer' → logprob: -10.553976058959961

Token 435: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.356926292181015
    2. '0' → logprob: -1.2319263219833374
    3. ' [' → logprob: -5.356926441192627
    4. 'None' → logprob: -5.981926441192627
    5. ' ' → logprob: -7.481926441192627
    6. '[N' → logprob: -9.106925964355469
    7. '1' → logprob: -9.481925964355469
    8. ' None' → logprob: -9.981925964355469
    9. '[i' → logprob: -10.231925964355469
    10. 'D' → logprob: -10.356925964355469

Token 436: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7907556295394897
    2. 'val' → logprob: -1.0407556295394897
    3. '0' → logprob: -2.6657557487487793
    4. 'tail' → logprob: -2.9157557487487793
    5. 'max' → logprob: -3.0407557487487793
    6. 'D' → logprob: -5.165755748748779
    7. '[' → logprob: -5.665755748748779
    8. 'sum' → logprob: -5.915755748748779
    9. 'value' → logprob: -6.290755748748779
    10. 'plus' → logprob: -6.415755748748779

Token 437: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6436541676521301
    2. '[' → logprob: -1.0186541080474854
    3. '=' → logprob: -3.1436541080474854
    4. ' =' → logprob: -3.5186541080474854
    5. ' de' → logprob: -4.1436543464660645
    6. 'des' → logprob: -4.3936543464660645
    7. ' [' → logprob: -5.6436543464660645
    8. '[i' → logprob: -6.7686543464660645
    9. '[]' → logprob: -6.8936543464660645
    10. 's' → logprob: -6.8936543464660645

Token 438: ' tailles' (ID: 169460)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.11800625175237656
    2. ' D' → logprob: -3.4930062294006348
    3. '0' → logprob: -3.6180062294006348
    4. 'd' → logprob: -4.118006229400635
    5. 'val' → logprob: -4.368006229400635
    6. '[' → logprob: -4.868006229400635
    7. 'sub' → logprob: -5.993006229400635
    8. 'None' → logprob: -6.118006229400635
    9. '[size' → logprob: -6.618006229400635
    10. 'values' → logprob: -6.743006229400635

Token 439: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8362542390823364
    2. '[' → logprob: -0.9612542390823364
    3. ' =' → logprob: -2.461254119873047
    4. 'des' → logprob: -3.586254119873047
    5. '=' → logprob: -4.336254119873047
    6. ' de' → logprob: -4.461254119873047
    7. ' ' → logprob: -4.461254119873047
    8. '_des' → logprob: -4.586254119873047
    9. ' [' → logprob: -5.211254119873047
    10. '_' → logprob: -5.336254119873047

Token 440: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.020638354122638702
    2. 'sub' → logprob: -4.770638465881348
    3. '[]' → logprob: -5.020638465881348
    4. 'en' → logprob: -6.395638465881348
    5. '[' → logprob: -6.770638465881348
    6. 'ss' → logprob: -6.770638465881348
    7. ' sous' → logprob: -8.020638465881348
    8. ' enfants' → logprob: -8.895638465881348
    9. '[i' → logprob: -9.395638465881348
    10. 'f' → logprob: -9.395638465881348

Token 441: '-ar' (ID: 31325)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9721701145172119
    2. '[' → logprob: -1.347170114517212
    3. '-ar' → logprob: -1.847170114517212
    4. '[i' → logprob: -2.847170114517212
    5. ' arbres' → logprob: -3.097170114517212
    6. '_ar' → logprob: -3.722170114517212
    7. '_' → logprob: -3.847170114517212
    8. '-' → logprob: -4.472169876098633
    9. '[-' → logprob: -4.847169876098633
    10. 'tree' → logprob: -4.847169876098633

Token 442: 'bres' (ID: 88684)
  Prédit: 'bres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bres' → logprob: -0.0070674666203558445
    2. 'bre' → logprob: -5.007067680358887
    3. 'b' → logprob: -8.132067680358887
    4. '#' → logprob: -12.007067680358887
    5. '```' → logprob: -12.007067680358887
    6. '"' → logprob: -12.382067680358887
    7. '' → logprob: -12.382067680358887
    8. 'bes' → logprob: -12.882067680358887
    9. 'r' → logprob: -13.007067680358887
    10. 'br' → logprob: -13.007067680358887

Token 443: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5321465134620667
    2. '[' → logprob: -1.9071464538574219
    3. ' pour' → logprob: -2.782146453857422
    4. '[i' → logprob: -2.907146453857422
    5. 'des' → logprob: -3.907146453857422
    6. ' ' → logprob: -3.907146453857422
    7. ' [' → logprob: -3.907146453857422
    8. 'pour' → logprob: -4.157146453857422
    9. ' correspond' → logprob: -4.657146453857422
    10. ' correspondant' → logprob: -5.032146453857422

Token 444: ' enfants' (ID: 24681)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7096439599990845
    2. 'en' → logprob: -1.4596439599990845
    3. 'desc' → logprob: -2.459643840789795
    4. 's' → logprob: -2.709643840789795
    5. 'i' → logprob: -3.459643840789795
    6. ' enfants' → logprob: -3.709643840789795
    7. 'vo' → logprob: -4.459643840789795
    8. ' descendants' → logprob: -4.584643840789795
    9. 'children' → logprob: -4.959643840789795
    10. '```' → logprob: -4.959643840789795

Token 445: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2250712513923645
    2. '[' → logprob: -2.8500711917877197
    3. ']' → logprob: -2.8500711917877197
    4. '=' → logprob: -3.1000711917877197
    5. '[i' → logprob: -4.725071430206299
    6. ' de' → logprob: -4.850071430206299
    7. 'de' → logprob: -5.725071430206299
    8. '[]' → logprob: -6.100071430206299
    9. ' ' → logprob: -6.225071430206299
    10. ')' → logprob: -6.225071430206299

Token 446: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.14528311789035797
    2. 'i' → logprob: -2.0202832221984863
    3. 's' → logprob: -6.645283222198486
    4. ' sommet' → logprob: -7.020283222198486
    5. 'no' → logprob: -8.645282745361328
    6. '```' → logprob: -9.270282745361328
    7. ' i' → logprob: -10.020282745361328
    8. '
' → logprob: -10.770282745361328
    9. 'n' → logprob: -10.895282745361328
    10. '#' → logprob: -11.145282745361328

Token 447: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3672795295715332
    2. ' i' → logprob: -1.2422795295715332
    3. '[i' → logprob: -3.992279529571533
    4. '[' → logprob: -9.867279052734375
    5. ' de' → logprob: -10.492279052734375
    6. ']' → logprob: -10.617279052734375
    7. ' ' → logprob: -10.867279052734375
    8. 'de' → logprob: -11.242279052734375
    9. '
' → logprob: -11.492279052734375
    10. 's' → logprob: -11.742279052734375

Token 448: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014195355586707592
    2. '=' → logprob: -4.264195442199707
    3. '=[' → logprob: -11.389195442199707
    4. ',' → logprob: -12.014195442199707
    5. ']' → logprob: -12.139195442199707
    6. ' =[' → logprob: -13.014195442199707
    7. ' ' → logprob: -13.264195442199707
    8. '[' → logprob: -13.264195442199707
    9. 's' → logprob: -14.264195442199707
    10. ')' → logprob: -14.389195442199707

Token 449: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.42285090684890747
    2. 'D' → logprob: -1.7978508472442627
    3. ' =' → logprob: -1.9228508472442627
    4. '=' → logprob: -4.172851085662842
    5. ' [' → logprob: -4.922851085662842
    6. '=[' → logprob: -4.922851085662842
    7. '[size' → logprob: -7.297851085662842
    8. 'size' → logprob: -7.547851085662842
    9. '#' → logprob: -7.797851085662842
    10. ' D' → logprob: -8.047850608825684

Token 450: ' On' (ID: 2160)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0738859698176384
    2. '[' → logprob: -2.698885917663574
    3. ' D' → logprob: -6.073885917663574
    4. ' [' → logprob: -7.073885917663574
    5. '#' → logprob: -7.698885917663574
    6. 'None' → logprob: -8.073885917663574
    7. '[D' → logprob: -11.198885917663574
    8. ' None' → logprob: -12.073885917663574
    9. '
' → logprob: -12.823885917663574
    10. '0' → logprob: -13.698885917663574

Token 451: ' l' (ID: 305)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05833178758621216
    2. ' =' → logprob: -3.0583317279815674
    3. '[' → logprob: -4.6833319664001465
    4. ']' → logprob: -8.683331489562988
    5. '=[' → logprob: -8.933331489562988
    6. 'None' → logprob: -9.933331489562988
    7. '=None' → logprob: -10.183331489562988
    8. ' [' → logprob: -10.433331489562988
    9. ']=' → logprob: -11.558331489562988
    10. '_=' → logprob: -12.433331489562988

Token 452: ''' (ID: 6)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003633521846495569
    2. '=[' → logprob: -8.50036334991455
    3. ' =' → logprob: -9.00036334991455
    4. '=[]' → logprob: -11.00036334991455
    5. '[' → logprob: -11.37536334991455
    6. 's' → logprob: -13.25036334991455
    7. '=None' → logprob: -13.50036334991455
    8. '=
' → logprob: -14.00036334991455
    9. ']' → logprob: -14.25036334991455
    10. '=

' → logprob: -14.37536334991455

Token 453: 'initial' (ID: 17493)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5685747861862183
    2. '[' → logprob: -1.1935747861862183
    3. '=[' → logprob: -2.443574905395508
    4. ' =' → logprob: -3.193574905395508
    5. '=[]' → logprob: -7.193574905395508
    6. ' [' → logprob: -7.693574905395508
    7. ']' → logprob: -7.818574905395508
    8. '.append' → logprob: -8.818574905395508
    9. '=[]
' → logprob: -8.943574905395508
    10. '[]' → logprob: -9.068574905395508

Token 454: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.06415120512247086
    2. 'ize' → logprob: -2.8141512870788574
    3. 'is' → logprob: -7.314151287078857
    4. 'iser' → logprob: -7.564151287078857
    5. 'isez' → logprob: -7.689151287078857
    6. '#' → logprob: -8.9391508102417
    7. 'isé' → logprob: -9.1891508102417
    8. 'ialize' → logprob: -9.5641508102417
    9. '=' → logprob: -10.3141508102417
    10. '[' → logprob: -10.3141508102417

Token 455: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3894796073436737
    2. ' =' → logprob: -1.139479637145996
    3. '=[' → logprob: -6.139479637145996
    4. '[' → logprob: -7.764479637145996
    5. ' =[' → logprob: -11.514479637145996
    6. ',' → logprob: -12.639479637145996
    7. ')' → logprob: -13.014479637145996
    8. '=[]' → logprob: -13.264479637145996
    9. ' avec' → logprob: -13.639479637145996
    10. ' ' → logprob: -13.889479637145996

Token 456: ' zéro' (ID: 182040)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016766376211307943
    2. ' [' → logprob: -8.750167846679688
    3. '[N' → logprob: -12.000167846679688
    4. '0' → logprob: -12.750167846679688
    5. 'None' → logprob: -16.625167846679688
    6. '[n' → logprob: -17.500167846679688
    7. ' ' → logprob: -17.500167846679688
    8. '([' → logprob: -18.875167846679688
    9. '(None' → logprob: -18.875167846679688
    10. '```' → logprob: -18.875167846679688

Token 457: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12826783955097198
    2. '=' → logprob: -2.128267765045166
    3. ']' → logprob: -6.878267765045166
    4. ')' → logprob: -8.878268241882324
    5. '[' → logprob: -9.753268241882324
    6. '=[' → logprob: -9.753268241882324
    7. ' ' → logprob: -11.253268241882324
    8. ',' → logprob: -11.753268241882324
    9. 's' → logprob: -12.003268241882324
    10. ' =[' → logprob: -12.503268241882324

Token 458: ' tous' (ID: 10688)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.015689730644226
    2. '[N' → logprob: -1.390689730644226
    3. 'i' → logprob: -1.890689730644226
    4. '[' → logprob: -1.890689730644226
    5. '0' → logprob: -2.7656898498535156
    6. '[i' → logprob: -5.015689849853516
    7. ' i' → logprob: -5.140689849853516
    8. 'None' → logprob: -5.640689849853516
    9. ' N' → logprob: -5.765689849853516
    10. '(N' → logprob: -5.765689849853516

Token 459: ' les' (ID: 1341)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.299961119890213
    2. '(N' → logprob: -1.9249610900878906
    3. ' i' → logprob: -2.7999610900878906
    4. '(' → logprob: -4.049961090087891
    5. '(i' → logprob: -4.549961090087891
    6. 'i' → logprob: -4.549961090087891
    7. ' ' → logprob: -5.674961090087891
    8. 'N' → logprob: -5.924961090087891
    9. ',' → logprob: -6.674961090087891
    10. ' le' → logprob: -6.799961090087891

Token 460: ' somm' (ID: 44830)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.1073879674077034
    2. 'i' → logprob: -2.3573880195617676
    3. '(N' → logprob: -5.607388019561768
    4. '_' → logprob: -6.482388019561768
    5. ' N' → logprob: -6.857388019561768
    6. ' i' → logprob: -7.732388019561768
    7. 'range' → logprob: -8.85738754272461
    8. '(i' → logprob: -9.48238754272461
    9. '0' → logprob: -9.73238754272461
    10. ' (' → logprob: -10.10738754272461

Token 461: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -1.0681105852127075
    2. 'ats' → logprob: -1.5681105852127075
    3. 'ents' → logprob: -2.318110466003418
    4. 'als' → logprob: -2.818110466003418
    5. 'N' → logprob: -3.443110466003418
    6. '(N' → logprob: -3.443110466003418
    7. '[' → logprob: -3.818110466003418
    8. '[N' → logprob: -3.943110466003418
    9. 'i' → logprob: -4.068110466003418
    10. 'oints' → logprob: -4.193110466003418

Token 462: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1129637211561203
    2. '=' → logprob: -2.2379636764526367
    3. ']' → logprob: -9.737963676452637
    4. '=[' → logprob: -10.362963676452637
    5. '[' → logprob: -10.612963676452637
    6. ')' → logprob: -11.987963676452637
    7. '0' → logprob: -12.112963676452637
    8. 'D' → logprob: -12.737963676452637
    9. ' ' → logprob: -13.112963676452637
    10. '+' → logprob: -13.112963676452637

Token 463: 'positions' (ID: 32297)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33617547154426575
    2. 'N' → logprob: -2.2111754417419434
    3. ' N' → logprob: -3.3361754417419434
    4. 'i' → logprob: -3.4611754417419434
    5. 'None' → logprob: -3.4611754417419434
    6. '[' → logprob: -3.8361754417419434
    7. ' i' → logprob: -4.086175441741943
    8. ' ' → logprob: -4.211175441741943
    9. ' [' → logprob: -5.211175441741943
    10. ')' → logprob: -5.211175441741943

Token 464: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2315569967031479
    2. ' =' → logprob: -2.6065568923950195
    3. '[' → logprob: -3.1065568923950195
    4. '(N' → logprob: -3.7315568923950195
    5. 'N' → logprob: -3.9815568923950195
    6. '[N' → logprob: -4.8565568923950195
    7. '=[' → logprob: -4.9815568923950195
    8. '0' → logprob: -5.2315568923950195
    9. '1' → logprob: -5.4815568923950195
    10. ' (' → logprob: -5.6065568923950195

Token 465: '0' (ID: 15)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11051803827285767
    2. 'N' → logprob: -3.110517978668213
    3. ' =' → logprob: -3.735517978668213
    4. '(N' → logprob: -4.485517978668213
    5. '[' → logprob: -5.235517978668213
    6. '=N' → logprob: -5.860517978668213
    7. '1' → logprob: -5.985517978668213
    8. 'i' → logprob: -6.110517978668213
    9. '0' → logprob: -6.110517978668213
    10. '=[' → logprob: -6.110517978668213

Token 466: ' à' (ID: 1221)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15564775466918945
    2. '+' → logprob: -2.1556477546691895
    3. ' +' → logprob: -4.2806477546691895
    4. ')' → logprob: -4.7806477546691895
    5. '])' → logprob: -6.2806477546691895
    6. ']+' → logprob: -6.4056477546691895
    7. ' ]' → logprob: -6.5306477546691895
    8. ')]' → logprob: -7.9056477546691895
    9. ' )' → logprob: -8.780647277832031
    10. ',' → logprob: -8.905647277832031

Token 467: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0004306692280806601
    2. ' N' → logprob: -7.750430583953857
    3. '(N' → logprob: -19.625431060791016
    4. '```' → logprob: -20.500431060791016
    5. ' ' → logprob: -20.625431060791016
    6. ' (' → logprob: -20.875431060791016
    7. ')' → logprob: -21.000431060791016
    8. ',' → logprob: -21.000431060791016
    9. '
' → logprob: -21.375431060791016
    10. '	N' → logprob: -21.500431060791016

Token 468: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8886628150939941
    2. '+' → logprob: -0.8886628150939941
    3. ']' → logprob: -2.138662815093994
    4. '])' → logprob: -3.138662815093994
    5. ' )' → logprob: -5.138662815093994
    6. ' +' → logprob: -5.763662815093994
    7. ')]' → logprob: -6.013662815093994
    8. ' ]' → logprob: -6.263662815093994
    9. ' ])' → logprob: -7.013662815093994
    10. ')])' → logprob: -7.513662815093994

Token 469: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.002929441863670945
    2. '[' → logprob: -6.002929210662842
    3. ' D' → logprob: -8.0029296875
    4. ' =' → logprob: -9.6279296875
    5. ' [' → logprob: -10.2529296875
    6. '=' → logprob: -11.7529296875
    7. '[D' → logprob: -12.7529296875
    8. '```' → logprob: -12.7529296875
    9. '=[' → logprob: -13.5029296875
    10. '0' → logprob: -13.7529296875

Token 470: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.00029625516617670655
    2. '_' → logprob: -8.500296592712402
    3. '_s' → logprob: -9.625296592712402
    4. '__' → logprob: -12.000296592712402
    5. '_size' → logprob: -12.500296592712402
    6. '_desc' → logprob: -12.625296592712402
    7. '_des' → logprob: -13.375296592712402
    8. ' _' → logprob: -13.375296592712402
    9. '_d' → logprob: -13.500296592712402
    10. '_Sub' → logprob: -13.750296592712402

Token 471: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -1.5094070477061905e-05
    2. '_tree' → logprob: -11.125015258789062
    3. 'tre' → logprob: -15.875015258789062
    4. '_sub' → logprob: -16.875015258789062
    5. 'trees' → logprob: -17.125015258789062
    6. 'ree' → logprob: -18.125015258789062
    7. 'sub' → logprob: -18.250015258789062
    8. 'size' → logprob: -18.375015258789062
    9. 't' → logprob: -18.500015258789062
    10. 'TREE' → logprob: -18.625015258789062

Token 472: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693430483341217
    2. '=' → logprob: -2.126934289932251
    3. '=[' → logprob: -13.126934051513672
    4. ' =[' → logprob: -13.126934051513672
    5. '[' → logprob: -13.501934051513672
    6. ' ' → logprob: -15.001934051513672
    7. ')' → logprob: -16.001934051513672
    8. ']' → logprob: -16.001934051513672
    9. '＝' → logprob: -16.626934051513672
    10. '=[]' → logprob: -17.126934051513672

Token 473: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0011703446507453918
    2. ' [' → logprob: -6.7511701583862305
    3. '[N' → logprob: -16.626171112060547
    4. '0' → logprob: -18.751171112060547
    5. '[n' → logprob: -20.626171112060547
    6. '=[' → logprob: -20.876171112060547
    7. ' ' → logprob: -20.876171112060547
    8. '([' → logprob: -21.251171112060547
    9. '   ' → logprob: -22.126171112060547
    10. '[len' → logprob: -22.376171112060547

Token 474: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. 'None' → logprob: -18.375003814697266
    4. '۰' → logprob: -18.750003814697266
    5. '00' → logprob: -19.250003814697266
    6. '   ' → logprob: -20.437503814697266
    7. '０' → logprob: -20.437503814697266
    8. '000' → logprob: -20.500003814697266
    9. '  ' → logprob: -21.000003814697266
    10. ')' → logprob: -21.250003814697266

Token 475: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00037025497294962406
    2. ']*(' → logprob: -8.125370025634766
    3. ' ]' → logprob: -10.375370025634766
    4. ']*' → logprob: -10.500370025634766
    5. ']+' → logprob: -11.250370025634766
    6. ' for' → logprob: -14.250370025634766
    7. '*' → logprob: -14.500370025634766
    8. ')' → logprob: -14.750370025634766
    9. 'for' → logprob: -15.500370025634766
    10. '}' → logprob: -15.875370025634766

Token 476: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.26865920424461365
    2. ' +' → logprob: -1.518659234046936
    3. '*' → logprob: -4.5186591148376465
    4. ' *' → logprob: -5.2686591148376465
    5. '*(' → logprob: -8.518659591674805
    6. ']' → logprob: -8.893659591674805
    7. '[' → logprob: -9.768659591674805
    8. '+[' → logprob: -10.018659591674805
    9. ')' → logprob: -10.143659591674805
    10. ' [' → logprob: -11.518659591674805

Token 477: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0008340472122654319
    2. ' (' → logprob: -7.125833988189697
    3. '(' → logprob: -10.750834465026855
    4. '(len' → logprob: -12.375834465026855
    5. '((' → logprob: -13.000834465026855
    6. '(n' → logprob: -14.000834465026855
    7. 'N' → logprob: -14.500834465026855
    8. '(
' → logprob: -16.00083351135254
    9. '0' → logprob: -16.37583351135254
    10. '
' → logprob: -17.12583351135254

Token 478: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.11354033648967743
    2. '(N' → logprob: -2.2385404109954834
    3. ' (' → logprob: -7.738540172576904
    4. ' N' → logprob: -8.238540649414062
    5. '(' → logprob: -11.113540649414062
    6. '   ' → logprob: -14.863540649414062
    7. 'len' → logprob: -15.113540649414062
    8. '((' → logprob: -15.113540649414062
    9. ' ' → logprob: -15.238540649414062
    10. ')' → logprob: -15.238540649414062

Token 479: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0067182136699557304
    2. ' +' → logprob: -5.006718158721924
    3. '+
' → logprob: -12.881718635559082
    4. ' +
' → logprob: -16.256717681884766
    5. ')' → logprob: -16.631717681884766
    6. '+)' → logprob: -16.631717681884766
    7. '+

' → logprob: -17.881717681884766
    8. '＋' → logprob: -18.256717681884766
    9. '
' → logprob: -18.381717681884766
    10. '1' → logprob: -19.756717681884766

Token 480: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '(N' → logprob: -17.125001907348633
    4. '
' → logprob: -17.625001907348633
    5. '(' → logprob: -17.750001907348633
    6. 'N' → logprob: -18.250001907348633
    7. '   ' → logprob: -19.125001907348633
    8. ')' → logprob: -19.250001907348633
    9. '```' → logprob: -19.625001907348633
    10. '+' → logprob: -19.750001907348633

Token 481: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '
' → logprob: -20.125
    4. '+' → logprob: -20.375
    5. '```' → logprob: -21.125
    6. ')' → logprob: -21.25
    7. '2' → logprob: -21.375
    8. '   ' → logprob: -21.5
    9. '۱' → logprob: -22.25
    10. '１' → logprob: -22.25

Token 482: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.375000953674316
    3. ' )' → logprob: -15.375000953674316
    4. ')#' → logprob: -16.500001907348633
    5. ']' → logprob: -17.625001907348633
    6. ')

' → logprob: -17.750001907348633
    7. ')`' → logprob: -19.125001907348633
    8. '<|end|>' → logprob: -19.250001907348633
    9. '#' → logprob: -19.375001907348633
    10. '),' → logprob: -19.625001907348633

Token 483: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0006942047039046884
    2. '#' → logprob: -8.000694274902344
    3. ' for' → logprob: -9.125694274902344
    4. 'f' → logprob: -9.625694274902344
    5. 'd' → logprob: -9.875694274902344
    6. '
' → logprob: -11.000694274902344
    7. ')' → logprob: -11.000694274902344
    8. 'import' → logprob: -11.375694274902344
    9. 'n' → logprob: -11.500694274902344
    10. 'edges' → logprob: -11.625694274902344

Token 484: ' Initial' (ID: 9209)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001295222609769553
    2. '#' → logprob: -9.625129699707031
    3. ' for' → logprob: -10.375129699707031
    4. ')' → logprob: -11.500129699707031
    5. 'i' → logprob: -12.000129699707031
    6. 'from' → logprob: -13.250129699707031
    7. 'd' → logprob: -13.500129699707031
    8. 'f' → logprob: -13.500129699707031
    9. 'import' → logprob: -13.625129699707031
    10. 'Q' → logprob: -13.750129699707031

Token 485: 'isation' (ID: 6993)
  Prédit: 'isation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isation' → logprob: -0.07909302413463593
    2. 'ization' → logprob: -2.5790929794311523
    3. '#' → logprob: -8.829092979431152
    4. 'ize' → logprob: -11.079092979431152
    5. 'ation' → logprob: -11.954092979431152
    6. '```' → logprob: -12.454092979431152
    7. 'is' → logprob: -12.704092979431152
    8. 'i' → logprob: -12.704092979431152
    9. 'e' → logprob: -12.829092979431152
    10. '_' → logprob: -13.079092979431152

Token 486: ' d' (ID: 272)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759109258651733
    2. 'i' → logprob: -2.200911045074463
    3. 'max' → logprob: -2.575911045074463
    4. 'current' → logprob: -2.950911045074463
    5. 'stack' → logprob: -3.075911045074463
    6. 'cur' → logprob: -3.575911045074463
    7. 'answer' → logprob: -3.825911045074463
    8. '#' → logprob: -4.200911045074463
    9. 'visited' → logprob: -4.325911045074463
    10. ' for' → logprob: -4.450911045074463

Token 487: ''une' (ID: 13337)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.777330756187439
    2. 'i' → logprob: -1.902330756187439
    3. 'a' → logprob: -2.2773308753967285
    4. 'range' → logprob: -2.9023308753967285
    5. ''une' → logprob: -3.6523308753967285
    6. 'e' → logprob: -3.6523308753967285
    7. ''un' → logprob: -3.9023308753967285
    8. '_range' → logprob: -4.1523308753967285
    9. 'un' → logprob: -4.4023308753967285
    10. '_answer' → logprob: -4.5273308753967285

Token 488: ' liste' (ID: 31719)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.3255298137664795
    2. 'for' → logprob: -1.3255298137664795
    3. 'result' → logprob: -5.950530052185059
    4. '#' → logprob: -6.075530052185059
    5. 'visited' → logprob: -6.450530052185059
    6. 'range' → logprob: -6.450530052185059
    7. 'answer' → logprob: -6.950530052185059
    8. 'queue' → logprob: -6.950530052185059
    9. 'pile' → logprob: -7.825530052185059
    10. 'flag' → logprob: -8.075530052185059

Token 489: ' qui' (ID: 2780)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.24171020090579987
    2. 'stack' → logprob: -1.8667101860046387
    3. 'queue' → logprob: -4.366710186004639
    4. 'used' → logprob: -4.491710186004639
    5. 'processed' → logprob: -5.116710186004639
    6. 'children' → logprob: -5.366710186004639
    7. 'answer' → logprob: -5.491710186004639
    8. 'path' → logprob: -5.991710186004639
    9. 'flag' → logprob: -6.491710186004639
    10. 'leaf' → logprob: -6.741710186004639

Token 490: ' stock' (ID: 6546)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.31955695152282715
    2. 'visited' → logprob: -1.4445569515228271
    3. 'cont' → logprob: -4.944557189941406
    4. 'will' → logprob: -5.194557189941406
    5. 'vis' → logprob: -5.444557189941406
    6. 'stock' → logprob: -5.819557189941406
    7. 'to' → logprob: -6.319557189941406
    8. 'store' → logprob: -6.694557189941406
    9. 'serv' → logprob: -6.819557189941406
    10. 'flag' → logprob: -6.944557189941406

Token 491: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8959881663322449
    2. 'visited' → logprob: -1.2709882259368896
    3. 'parent' → logprob: -3.2709882259368896
    4. '=' → logprob: -3.5209882259368896
    5. ' =' → logprob: -3.6459882259368896
    6. 'a' → logprob: -3.6459882259368896
    7. '=[]' → logprob: -3.7709882259368896
    8. '#' → logprob: -3.7709882259368896
    9. '_parent' → logprob: -4.0209879875183105
    10. 'des' → logprob: -4.1459879875183105

Token 492: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.48657578229904175
    2. 'le' → logprob: -1.9865758419036865
    3. 'result' → logprob: -2.8615758419036865
    4. 'l' → logprob: -2.9865758419036865
    5. 'answers' → logprob: -3.2365758419036865
    6. 'la' → logprob: -3.4865758419036865
    7. 'results' → logprob: -3.8615758419036865
    8. 'res' → logprob: -3.9865758419036865
    9. '#' → logprob: -5.236575603485107
    10. 'ans' → logprob: -5.486575603485107

Token 493: ' ar' (ID: 646)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.3066452741622925
    2. 'res' → logprob: -1.6816452741622925
    3. 'results' → logprob: -2.056645393371582
    4. 'answers' → logprob: -2.056645393371582
    5. 'edges' → logprob: -2.681645393371582
    6. 'parents' → logprob: -2.681645393371582
    7. 'output' → logprob: -3.681645393371582
    8. 'rés' → logprob: -3.681645393371582
    9. 'outputs' → logprob: -4.181645393371582
    10. 'queries' → logprob: -4.556645393371582

Token 494: 'êtes' (ID: 23720)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6486627459526062
    2. 'gs' → logprob: -1.148662805557251
    3. 'g' → logprob: -2.773662805557251
    4. 'bres' → logprob: -3.398662805557251
    5. 'cs' → logprob: -3.648662805557251
    6. 'êtes' → logprob: -4.648662567138672
    7. 'e' → logprob: -4.898662567138672
    8. 'rets' → logprob: -5.523662567138672
    9. 'gv' → logprob: -5.648662567138672
    10. 'rch' → logprob: -6.148662567138672

Token 495: ' du' (ID: 1462)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.00046987622044980526
    2. 'E' → logprob: -8.125470161437988
    3. 'edge' → logprob: -9.625470161437988
    4. 'ar' → logprob: -10.750470161437988
    5. ' edges' → logprob: -10.750470161437988
    6. '[]' → logprob: -10.875470161437988
    7. '=' → logprob: -11.500470161437988
    8. '(edges' → logprob: -12.000470161437988
    9. '_edges' → logprob: -12.125470161437988
    10. '=[]' → logprob: -12.125470161437988

Token 496: ' résultat' (ID: 62556)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.9973945021629333
    2. 'gr' → logprob: -1.1223945617675781
    3. 'graph' → logprob: -1.3723945617675781
    4. '```' → logprob: -3.747394561767578
    5. ' grap' → logprob: -3.997394561767578
    6. 'tree' → logprob: -5.497394561767578
    7. ' arbre' → logprob: -6.247394561767578
    8. 'arb' → logprob: -6.372394561767578
    9. '#' → logprob: -6.997394561767578
    10. 's' → logprob: -7.997394561767578

Token 497: ' sous' (ID: 14487)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0677531361579895
    2. 'result' → logprob: -2.8177530765533447
    3. 'res' → logprob: -6.067753314971924
    4. 'answer' → logprob: -6.317753314971924
    5. 'ans' → logprob: -6.817753314971924
    6. 'E' → logprob: -8.442752838134766
    7. ' edges' → logprob: -9.067752838134766
    8. 'edge' → logprob: -9.317752838134766
    9. 'answers' → logprob: -9.817752838134766
    10. 'results' → logprob: -10.692752838134766

Token 498: ' forme' (ID: 27450)
  Prédit: 'forme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forme' → logprob: -0.07673251628875732
    2. 'form' → logprob: -2.951732635498047
    3. 'formes' → logprob: -4.201732635498047
    4. ' forme' → logprob: -5.451732635498047
    5. '#' → logprob: -6.951732635498047
    6. 'forma' → logprob: -7.576732635498047
    7. '-form' → logprob: -7.951732635498047
    8. 'format' → logprob: -8.326732635498047
    9. 'la' → logprob: -9.826732635498047
    10. 'f' → logprob: -10.076732635498047

Token 499: ' de' (ID: 334)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.016737157478928566
    2. 'de' → logprob: -4.39173698425293
    3. 'd' → logprob: -6.39173698425293
    4. 'des' → logprob: -7.39173698425293
    5. '=[]' → logprob: -8.14173698425293
    6. '[' → logprob: -8.26673698425293
    7. 'of' → logprob: -8.26673698425293
    8. '#' → logprob: -8.51673698425293
    9. ' d' → logprob: -8.76673698425293
    10. ' de' → logprob: -8.89173698425293

Token 500: ' chaînes' (ID: 179904)
  Prédit: 'tu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tu' → logprob: -0.11704328656196594
    2. ' tuples' → logprob: -2.9920432567596436
    3. 'tuple' → logprob: -3.3670432567596436
    4. 'pairs' → logprob: -3.9920432567596436
    5. 'list' → logprob: -6.367043495178223
    6. 'liste' → logprob: -6.617043495178223
    7. 'parent' → logprob: -6.867043495178223
    8. 'p' → logprob: -6.867043495178223
    9. 'trip' → logprob: -7.492043495178223
    10. 't' → logprob: -7.867043495178223

Token 501: ' '' (ID: 461)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5515782237052917
    2. 'edges' → logprob: -0.9265782237052917
    3. 'res' → logprob: -4.051578044891357
    4. 'answer' → logprob: -5.426578044891357
    5. 'ans' → logprob: -6.426578044891357
    6. 'ar' → logprob: -6.676578044891357
    7. '[]' → logprob: -6.676578044891357
    8. 'edge' → logprob: -7.551578044891357
    9. 'answers' → logprob: -8.676578521728516
    10. 'arest' → logprob: -8.676578521728516

Token 502: 'i' (ID: 72)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.09612815082073212
    2. 'str' → logprob: -3.221128225326538
    3. '""' → logprob: -3.721128225326538
    4. 'f' → logprob: -4.221127986907959
    5. '"' → logprob: -5.221127986907959
    6. 'strings' → logprob: -6.846127986907959
    7. '[str' → logprob: -7.346127986907959
    8. 'edges' → logprob: -7.346127986907959
    9. '[]
' → logprob: -7.346127986907959
    10. ''' → logprob: -7.471127986907959

Token 503: ' p' (ID: 275)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.1342730075120926
    2. ' i' → logprob: -2.759273052215576
    3. '1' → logprob: -4.634273052215576
    4. ' -' → logprob: -4.759273052215576
    5. '-' → logprob: -4.884273052215576
    6. ' "' → logprob: -5.009273052215576
    7. ' u' → logprob: -5.509273052215576
    8. '"' → logprob: -5.634273052215576
    9. ' f' → logprob: -5.759273052215576
    10. ' ' → logprob: -5.759273052215576

Token 504: ''
' (ID: 2207)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.12369140237569809
    2. ' '' → logprob: -2.6236913204193115
    3. ''' → logprob: -3.9986913204193115
    4. ' i' → logprob: -4.623691558837891
    5. ' ar' → logprob: -5.123691558837891
    6. 'a' → logprob: -6.248691558837891
    7. 'i' → logprob: -6.248691558837891
    8. ' "' → logprob: -6.873691558837891
    9. ' =' → logprob: -7.748691558837891
    10. '"' → logprob: -7.873691558837891

Token 505: 'edges' (ID: 39127)
  Prédit: 'edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.04350344091653824
    2. 'result' → logprob: -3.293503522872925
    3. 'res' → logprob: -5.918503284454346
    4. 'ans' → logprob: -6.293503284454346
    5. 'answer' → logprob: -7.543503284454346
    6. 'answers' → logprob: -8.793503761291504
    7. 'edge' → logprob: -9.793503761291504
    8. 'E' → logprob: -9.918503761291504
    9. 'results' → logprob: -10.668503761291504
    10. ' edges' → logprob: -11.043503761291504

Token 506: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31438931822776794
    2. '=' → logprob: -1.3143893480300903
    3. '=[]' → logprob: -6.814389228820801
    4. '[]' → logprob: -11.1893892288208
    5. '.append' → logprob: -12.4393892288208
    6. '=[]
' → logprob: -12.8143892288208
    7. '_' → logprob: -13.4393892288208
    8. ']' → logprob: -13.8143892288208
    9. 's' → logprob: -13.9393892288208
    10. ',' → logprob: -13.9393892288208

Token 507: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -3.531315314830863e-06
    2. ' []' → logprob: -13.500003814697266
    3. '[]
' → logprob: -14.125003814697266
    4. '[]}' → logprob: -14.125003814697266
    5. '[' → logprob: -15.375003814697266
    6. '[]

' → logprob: -15.875003814697266
    7. '[]"' → logprob: -16.375003814697266
    8. '[]>' → logprob: -17.375003814697266
    9. '[],' → logprob: -17.375003814697266
    10. '["' → logprob: -17.875003814697266

Token 508: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00022594700567424297
    2. ' for' → logprob: -8.500226020812988
    3. '
' → logprob: -11.375226020812988
    4. 'f' → logprob: -13.250226020812988
    5. 'i' → logprob: -13.250226020812988
    6. ')' → logprob: -13.375226020812988
    7. '<|end|>' → logprob: -13.750226020812988
    8. 'd' → logprob: -13.875226020812988
    9. '\n' → logprob: -13.875226020812988
    10. '#' → logprob: -14.500226020812988

Token 509: ' On' (ID: 2160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.5776860184123507e-06
    2. '#' → logprob: -14.25000286102295
    3. ' for' → logprob: -14.50000286102295
    4. 'previous' → logprob: -15.00000286102295
    5. 'prev' → logprob: -15.50000286102295
    6. 'from' → logprob: -15.75000286102295
    7. 'fo' → logprob: -15.87500286102295
    8. 'f' → logprob: -16.125001907348633
    9. 'current' → logprob: -16.500001907348633
    10. '```' → logprob: -16.625001907348633

Token 510: ' suppose' (ID: 35968)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011802274966612458
    2. ' for' → logprob: -6.751180171966553
    3. '
' → logprob: -12.751180648803711
    4. 'range' → logprob: -13.376180648803711
    5. 'f' → logprob: -13.876180648803711
    6. '#' → logprob: -13.876180648803711
    7. 'import' → logprob: -14.501180648803711
    8. '=' → logprob: -14.626180648803711
    9. 'or' → logprob: -14.751180648803711
    10. '_' → logprob: -14.751180648803711

Token 511: ' a' (ID: 261)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2084970623254776
    2. '_' → logprob: -2.8334970474243164
    3. 'range' → logprob: -3.3334970474243164
    4. 'que' → logprob: -4.083497047424316
    5. ' que' → logprob: -4.083497047424316
    6. ' for' → logprob: -4.333497047424316
    7. 'i' → logprob: -4.333497047424316
    8. ' i' → logprob: -5.083497047424316
    9. 'that' → logprob: -5.458497047424316
    10. ' ' → logprob: -5.958497047424316

Token 512: ' priori' (ID: 125681)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.8276892900466919
    2. '=' → logprob: -2.2026891708374023
    3. 's' → logprob: -2.4526891708374023
    4. 'for' → logprob: -2.5776891708374023
    5. 'b' → logprob: -2.7026891708374023
    6. 'i' → logprob: -2.9526891708374023
    7. 'u' → logprob: -3.7026891708374023
    8. ' =' → logprob: -3.7026891708374023
    9. 'l' → logprob: -3.7026891708374023
    10. 't' → logprob: -4.077689170837402

Token 513: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.16089358925819397
    2. 'que' → logprob: -3.160893678665161
    3. '=' → logprob: -4.035893440246582
    4. 'that' → logprob: -4.285893440246582
    5. 's' → logprob: -4.535893440246582
    6. ' that' → logprob: -4.785893440246582
    7. '#' → logprob: -5.160893440246582
    8. 'u' → logprob: -5.410893440246582
    9. ' =' → logprob: -5.660893440246582
    10. 'b' → logprob: -5.785893440246582

Token 514: ' la' (ID: 557)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.17621161043643951
    2. 'N' → logprob: -2.3012115955352783
    3. '1' → logprob: -3.8012115955352783
    4. 'parent' → logprob: -3.9262115955352783
    5. 'True' → logprob: -5.551211833953857
    6. 'len' → logprob: -5.801211833953857
    7. 'max' → logprob: -5.801211833953857
    8. 'None' → logprob: -5.801211833953857
    9. 'd' → logprob: -6.551211833953857
    10. ' D' → logprob: -6.801211833953857

Token 515: ' construction' (ID: 9770)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.9825140237808228
    2. 'parent' → logprob: -1.4825140237808228
    3. 'root' → logprob: -1.7325140237808228
    4. 'N' → logprob: -2.482513904571533
    5. 'max' → logprob: -3.482513904571533
    6. 'for' → logprob: -4.107513904571533
    7. ' D' → logprob: -4.607513904571533
    8. '#' → logprob: -4.607513904571533
    9. 'val' → logprob: -4.607513904571533
    10. '1' → logprob: -4.732513904571533

Token 516: ' va' (ID: 3423)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1881496012210846
    2. ' d' → logprob: -2.6881496906280518
    3. 'de' → logprob: -2.8131496906280518
    4. 'du' → logprob: -3.9381496906280518
    5. 'des' → logprob: -5.188149452209473
    6. '#' → logprob: -5.313149452209473
    7. ' du' → logprob: -5.563149452209473
    8. ' de' → logprob: -5.563149452209473
    9. 'est' → logprob: -6.063149452209473
    10. 'continue' → logprob: -7.188149452209473

Token 517: ' réussir' (ID: 125900)
  Prédit: ' se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' se' → logprob: -1.015440821647644
    2. 'contin' → logprob: -1.765440821647644
    3. 'se' → logprob: -1.890440821647644
    4. ' continuer' → logprob: -2.8904409408569336
    5. 'prendre' → logprob: -3.0154409408569336
    6. 'ré' → logprob: -3.1404409408569336
    7. 'b' → logprob: -3.3904409408569336
    8. 'être' → logprob: -3.8904409408569336
    9. ' pouvoir' → logprob: -4.515440940856934
    10. ' réussir' → logprob: -4.765440940856934

Token 518: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35382941365242004
    2. '
' → logprob: -1.3538293838500977
    3. ' for' → logprob: -3.4788293838500977
    4. '#' → logprob: -5.978829383850098
    5. 'i' → logprob: -6.353829383850098
    6. ')' → logprob: -7.228829383850098
    7. '<|end|>' → logprob: -7.353829383850098
    8. '\n' → logprob: -7.603829383850098
    9. ' 
' → logprob: -7.728829383850098
    10. ':' → logprob: -8.103829383850098

Token 519: ' donc' (ID: 14206)
  Prédit: 'success'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'success' → logprob: -0.4350281357765198
    2. 'possible' → logprob: -1.435028076171875
    3. 'ok' → logprob: -2.935028076171875
    4. 'valid' → logprob: -3.060028076171875
    5. 'result' → logprob: -6.185028076171875
    6. 'res' → logprob: -6.310028076171875
    7. ' success' → logprob: -6.435028076171875
    8. 'found' → logprob: -6.685028076171875
    9. 'ans' → logprob: -6.810028076171875
    10. 'answer' → logprob: -7.060028076171875

Token 520: ' bl' (ID: 1162)
  Prédit: 'possible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'possible' → logprob: -0.4477695822715759
    2. 'success' → logprob: -1.4477696418762207
    3. 'ok' → logprob: -2.8227696418762207
    4. 'valid' → logprob: -3.1977696418762207
    5. 'res' → logprob: -5.197769641876221
    6. 'result' → logprob: -5.447769641876221
    7. 'ans' → logprob: -5.572769641876221
    8. 'answer' → logprob: -6.072769641876221
    9. 'is' → logprob: -6.197769641876221
    10. 'successful' → logprob: -6.572769641876221

Token 521: ' =' (ID: 314)
  Prédit: 'ack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ack' → logprob: -1.3831121921539307
    2. 'ock' → logprob: -1.3831121921539307
    3. 'ocked' → logprob: -1.3831121921539307
    4. 'ocks' → logprob: -2.5081121921539307
    5. 'ocking' → logprob: -3.7581121921539307
    6. 'oc' → logprob: -3.8831121921539307
    7. 'oom' → logprob: -4.383111953735352
    8. 'og' → logprob: -4.508111953735352
    9. 'e' → logprob: -5.133111953735352
    10. 'uild' → logprob: -5.133111953735352

Token 522: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.011287963949143887
    2. 'False' → logprob: -4.636288166046143
    3. ' True' → logprob: -6.511288166046143
    4. '1' → logprob: -10.511287689208984
    5. ' False' → logprob: -11.636287689208984
    6. '0' → logprob: -12.386287689208984
    7. '=True' → logprob: -13.636287689208984
    8. '[' → logprob: -14.136287689208984
    9. '(True' → logprob: -14.261287689208984
    10. 'l' → logprob: -15.386287689208984

Token 523: '
' (ID: 198)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.06393349170684814
    2. '
' → logprob: -3.0639333724975586
    3. ' =' → logprob: -4.313933372497559
    4. '=' → logprob: -7.188933372497559
    5. ' bl' → logprob: -7.313933372497559
    6. '=True' → logprob: -9.313933372497559
    7. ' 
' → logprob: -9.438933372497559
    8. 'b' → logprob: -9.813933372497559
    9. 'True' → logprob: -9.938933372497559
    10. '

' → logprob: -10.188933372497559

Token 524: 'bl' (ID: 1751)
  Prédit: 'bl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.00039063513395376503
    2. '
' → logprob: -8.125391006469727
    3. 'True' → logprob: -10.000391006469727
    4. ' bl' → logprob: -10.375391006469727
    5. ' True' → logprob: -11.750391006469727
    6. 'b' → logprob: -11.875391006469727
    7. ' 
' → logprob: -13.500391006469727
    8. '```' → logprob: -14.625391006469727
    9. '
' → logprob: -15.000391006469727
    10. '

' → logprob: -15.000391006469727

Token 525: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25217607617378235
    2. '=' → logprob: -1.50217604637146
    3. '_' → logprob: -8.502176284790039
    4. ' ' → logprob: -10.377176284790039
    5. ',' → logprob: -12.502176284790039
    6. 'l' → logprob: -13.002176284790039
    7. ' ' → logprob: -13.377176284790039
    8. 'e' → logprob: -13.877176284790039
    9. 's' → logprob: -14.127176284790039
    10. ' _' → logprob: -14.252176284790039

Token 526: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.029750484973192215
    2. ' True' → logprob: -3.5297505855560303
    3. '(True' → logprob: -18.52975082397461
    4. '=True' → logprob: -19.15475082397461
    5. 'Tr' → logprob: -22.77975082397461
    6. 'true' → logprob: -22.90475082397461
    7. 'False' → logprob: -23.02975082397461
    8. '1' → logprob: -24.02975082397461
    9. '.True' → logprob: -24.77975082397461
    10. ' Tru' → logprob: -24.77975082397461

Token 527: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0382077656686306
    2. '
' → logprob: -3.413207769393921
    3. ' for' → logprob: -5.538207530975342
    4. '<|end|>' → logprob: -8.6632080078125
    5. '\n' → logprob: -8.7882080078125
    6. ')' → logprob: -9.2882080078125
    7. '#' → logprob: -10.1632080078125
    8. 'i' → logprob: -10.1632080078125
    9. ' 
' → logprob: -10.5382080078125
    10. '' → logprob: -11.0382080078125

Token 528: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010374527191743255
    2. '
' → logprob: -7.25103759765625
    3. ' for' → logprob: -8.25103759765625
    4. '#' → logprob: -10.00103759765625
    5. '\n' → logprob: -11.87603759765625
    6. 'i' → logprob: -12.12603759765625
    7. '' → logprob: -13.50103759765625
    8. ' 
' → logprob: -13.75103759765625
    9. '

' → logprob: -13.87603759765625
    10. '
' → logprob: -14.25103759765625

Token 529: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.494741632603109e-05
    2. '#' → logprob: -10.12508487701416
    3. 'stack' → logprob: -10.50008487701416
    4. 'from' → logprob: -12.25008487701416
    5. 'current' → logprob: -12.87508487701416
    6. 'last' → logprob: -13.00008487701416
    7. 'prev' → logprob: -13.37508487701416
    8. 'previous' → logprob: -13.75008487701416
    9. 'fo' → logprob: -14.25008487701416
    10. ' for' → logprob: -14.50008487701416

Token 530: 'ours' (ID: 2327)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.0846758484840393
    2. 'ours' → logprob: -3.3346757888793945
    3. 'ourt' → logprob: -3.9596757888793945
    4. 'or' → logprob: -4.3346757888793945
    5. 'ur' → logprob: -5.0846757888793945
    6. '#' → logprob: -5.7096757888793945
    7. 'for' → logprob: -6.3346757888793945
    8. 'er' → logprob: -7.0846757888793945
    9. 'e' → logprob: -8.084675788879395
    10. 'u' → logprob: -8.459675788879395

Token 531: ' des' (ID: 731)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18166640400886536
    2. ' for' → logprob: -1.806666374206543
    3. ' of' → logprob: -7.806666374206543
    4. ' de' → logprob: -8.181666374206543
    5. ' des' → logprob: -8.306666374206543
    6. ')' → logprob: -8.556666374206543
    7. 'of' → logprob: -9.306666374206543
    8. '(' → logprob: -9.431666374206543
    9. 'de' → logprob: -9.556666374206543
    10. ' pour' → logprob: -9.681666374206543

Token 532: ' valeurs' (ID: 73668)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -5.860340752406046e-05
    2. 'range' → logprob: -9.7500581741333
    3. ' D' → logprob: -16.000059127807617
    4. 'd' → logprob: -16.125059127807617
    5. ' range' → logprob: -16.875059127807617
    6. '[D' → logprob: -18.500059127807617
    7. 'i' → logprob: -18.625059127807617
    8. 'enumer' → logprob: -18.875059127807617
    9. 're' → logprob: -19.750059127807617
    10. 'ranges' → logprob: -20.375059127807617

Token 533: ' de' (ID: 334)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.0006035566329956
    2. 'for' → logprob: -1.3756035566329956
    3. ' in' → logprob: -1.8756035566329956
    4. 'D' → logprob: -2.750603675842285
    5. '_' → logprob: -2.750603675842285
    6. 'de' → logprob: -3.875603675842285
    7. ' for' → logprob: -3.875603675842285
    8. 'dans' → logprob: -4.625603675842285
    9. ',' → logprob: -4.750603675842285
    10. ' =' → logprob: -5.375603675842285

Token 534: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -4.320199877838604e-07
    2. ' D' → logprob: -14.875
    3. '#' → logprob: -17.875
    4. '_D' → logprob: -20.0
    5. 'range' → logprob: -20.25
    6. '	D' → logprob: -20.25
    7. 'sorted' → logprob: -20.375
    8. '[D' → logprob: -20.75
    9. 'l' → logprob: -20.875
    10. '```' → logprob: -20.875

Token 535: ' dans' (ID: 2671)
  Prédit: '_desc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_desc' → logprob: -0.822243332862854
    2. ':' → logprob: -1.322243332862854
    3. 'for' → logprob: -1.447243332862854
    4. '_' → logprob: -4.1972432136535645
    5. ' for' → logprob: -4.5722432136535645
    6. 'desc' → logprob: -5.0722432136535645
    7. '[' → logprob: -5.1972432136535645
    8. ':
' → logprob: -5.5722432136535645
    9. ')' → logprob: -5.5722432136535645
    10. ' :' → logprob: -6.0722432136535645

Token 536: ' l' (ID: 305)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: 0.0
    2. ' D' → logprob: -17.375
    3. 're' → logprob: -19.125
    4. 'for' → logprob: -20.75
    5. 'range' → logprob: -21.125
    6. 'reverse' → logprob: -21.875
    7. '
' → logprob: -22.125
    8. 'ordre' → logprob: -22.25
    9. 'd' → logprob: -22.375
    10. '```' → logprob: -22.75

Token 537: ''ordre' (ID: 124753)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -6.098748053773306e-05
    2. 'ordre' → logprob: -10.37506103515625
    3. ''ordre' → logprob: -10.75006103515625
    4. 'order' → logprob: -12.87506103515625
    5. 'range' → logprob: -13.37506103515625
    6. 'for' → logprob: -13.75006103515625
    7. '=D' → logprob: -14.25006103515625
    8. '_D' → logprob: -14.25006103515625
    9. '’ordre' → logprob: -15.12506103515625
    10. 'sorted' → logprob: -15.25006103515625

Token 538: ' décro' (ID: 176854)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.6248403191566467
    2. '_desc' → logprob: -1.374840259552002
    3. 'in' → logprob: -2.874840259552002
    4. '_' → logprob: -2.999840259552002
    5. ':' → logprob: -3.499840259552002
    6. 'for' → logprob: -3.874840259552002
    7. '_d' → logprob: -4.624840259552002
    8. '_D' → logprob: -4.999840259552002
    9. ' in' → logprob: -5.374840259552002
    10. 'desc' → logprob: -5.374840259552002

Token 539: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.2363048642873764
    2. 'asant' → logprob: -2.236304759979248
    3. 'isant' → logprob: -3.861304759979248
    4. 's' → logprob: -3.986304759979248
    5. 'sent' → logprob: -4.736304759979248
    6. 'desc' → logprob: -4.736304759979248
    7. 'nd' → logprob: -4.861304759979248
    8. 'is' → logprob: -4.986304759979248
    9. 'sc' → logprob: -4.986304759979248
    10. 'nant' → logprob: -5.111304759979248

Token 540: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31516599655151367
    2. ':
' → logprob: -1.5651659965515137
    3. 'for' → logprob: -2.8151659965515137
    4. ' for' → logprob: -6.815165996551514
    5. '
' → logprob: -9.065166473388672
    6. ' :
' → logprob: -9.815166473388672
    7. ',' → logprob: -10.065166473388672
    8. ',
' → logprob: -11.190166473388672
    9. ' :' → logprob: -11.190166473388672
    10. '[' → logprob: -11.440166473388672

Token 541: ' sauf' (ID: 87919)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023551523685455322
    2. ' for' → logprob: -3.7735514640808105
    3. ':' → logprob: -8.773551940917969
    4. 'except' → logprob: -9.273551940917969
    5. '
' → logprob: -11.273551940917969
    6. ' except' → logprob: -11.773551940917969
    7. ',' → logprob: -12.148551940917969
    8. 'range' → logprob: -12.398551940917969
    9. 'pour' → logprob: -12.523551940917969
    10. '#' → logprob: -12.648551940917969

Token 542: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.6879124045372009
    2. 'le' → logprob: -1.5629124641418457
    3. ' le' → logprob: -2.5629124641418457
    4. 'la' → logprob: -2.6879124641418457
    5. 'D' → logprob: -3.1879124641418457
    6. '[' → logprob: -3.3129124641418457
    7. ' D' → logprob: -3.9379124641418457
    8. 'for' → logprob: -4.437912464141846
    9. 'len' → logprob: -5.312912464141846
    10. 'l' → logprob: -5.437912464141846

Token 543: ' dernière' (ID: 39497)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.1638406366109848
    2. ' dernière' → logprob: -2.6638405323028564
    3. ' dernier' → logprob: -2.9138405323028564
    4. 'prem' → logprob: -4.5388407707214355
    5. 'der' → logprob: -4.9138407707214355
    6. ' derni' → logprob: -5.9138407707214355
    7. 'last' → logprob: -5.9138407707214355
    8. ' last' → logprob: -6.6638407707214355
    9. 's' → logprob: -6.6638407707214355
    10. ' premier' → logprob: -8.413840293884277

Token 544: ' valeur' (ID: 41664)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06927026808261871
    2. '[:-' → logprob: -2.819270372390747
    3. '[' → logprob: -5.319270133972168
    4. ' :' → logprob: -6.944270133972168
    5. ',' → logprob: -7.819270133972168
    6. '[:' → logprob: -8.069270133972168
    7. 'for' → logprob: -8.069270133972168
    8. ':
' → logprob: -9.819270133972168
    9. '1' → logprob: -10.069270133972168
    10. ')' → logprob: -10.069270133972168

Token 545: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5461412668228149
    2. '[:-' → logprob: -0.9211412668228149
    3. ':' → logprob: -4.296141147613525
    4. '[' → logprob: -5.546141147613525
    5. ' for' → logprob: -5.546141147613525
    6. ':
' → logprob: -7.171141147613525
    7. '[:' → logprob: -8.296141624450684
    8. '
' → logprob: -9.046141624450684
    9. ',' → logprob: -9.546141624450684
    10. 'D' → logprob: -10.546141624450684

Token 546: 'le' (ID: 282)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6462121605873108
    2. '):' → logprob: -1.646212100982666
    3. '[:-' → logprob: -1.896212100982666
    4. '):
' → logprob: -2.521212100982666
    5. ')' → logprob: -3.896212100982666
    6. '):-' → logprob: -4.771212100982666
    7. '
' → logprob: -5.021212100982666
    8. 'len' → logprob: -5.146212100982666
    9. ':' → logprob: -5.521212100982666
    10. ' for' → logprob: -6.396212100982666

Token 547: ' "' (ID: 392)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.17377395927906036
    2. ':' → logprob: -2.923774003982544
    3. '[-' → logprob: -3.298774003982544
    4. 'len' → logprob: -3.673774003982544
    5. ' -' → logprob: -4.923773765563965
    6. ':-' → logprob: -5.048773765563965
    7. ')' → logprob: -5.423773765563965
    8. 'last' → logprob: -6.048773765563965
    9. '])' → logprob: -6.173773765563965
    10. 'dern' → logprob: -6.298773765563965

Token 548: 'root' (ID: 5488)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.209172010421753
    2. 'N' → logprob: -1.334172010421753
    3. '[-' → logprob: -2.084172010421753
    4. '")' → logprob: -2.334172010421753
    5. '"' → logprob: -3.209172010421753
    6. 'n' → logprob: -3.709172010421753
    7. 'len' → logprob: -3.709172010421753
    8. 'D' → logprob: -3.709172010421753
    9. ')' → logprob: -4.584172248840332
    10. ']' → logprob: -4.709172248840332

Token 549: '")
' (ID: 1896)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5075695514678955
    2. '")' → logprob: -1.8825695514678955
    3. '"):' → logprob: -2.7575695514678955
    4. '):' → logprob: -2.8825695514678955
    5. ')")' → logprob: -3.5075695514678955
    6. '"' → logprob: -3.8825695514678955
    7. ']' → logprob: -3.8825695514678955
    8. 'e' → logprob: -4.507569313049316
    9. ')"' → logprob: -5.132569313049316
    10. '"):
' → logprob: -5.382569313049316

Token 550: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015054593095555902
    2. ' for' → logprob: -7.126505374908447
    3. '[:-' → logprob: -7.376505374908447
    4. 'range' → logprob: -10.251505851745605
    5. ':' → logprob: -10.751505851745605
    6. '
' → logprob: -12.376505851745605
    7. ':
' → logprob: -12.501505851745605
    8. ')' → logprob: -12.626505851745605
    9. '[' → logprob: -13.126505851745605
    10. '(range' → logprob: -14.126505851745605

Token 551: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06389715522527695
    2. ' d' → logprob: -3.438897132873535
    3. 'i' → logprob: -3.688897132873535
    4. ' i' → logprob: -6.313897132873535
    5. 'val' → logprob: -7.063897132873535
    6. 'x' → logprob: -7.438897132873535
    7. 'v' → logprob: -7.688897132873535
    8. 'value' → logprob: -7.938897132873535
    9. ' val' → logprob: -8.563897132873535
    10. 'k' → logprob: -9.188897132873535

Token 552: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1429501473903656
    2. ' in' → logprob: -2.0179500579833984
    3. '_in' → logprob: -8.767950057983398
    4. ',' → logprob: -9.892950057983398
    5. ',in' → logprob: -11.267950057983398
    6. 'd' → logprob: -11.517950057983398
    7. ' ' → logprob: -11.767950057983398
    8. '_' → logprob: -12.017950057983398
    9. 'i' → logprob: -12.142950057983398
    10. '_idx' → logprob: -12.392950057983398

Token 553: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -4.842555426876061e-06
    2. ' D' → logprob: -12.250004768371582
    3. '	D' → logprob: -19.5000057220459
    4. '   ' → logprob: -21.2500057220459
    5. '[D' → logprob: -22.0000057220459
    6. '[:-' → logprob: -22.1250057220459
    7. '_D' → logprob: -22.1250057220459
    8. '<D' → logprob: -22.2500057220459
    9. ' ' → logprob: -22.6250057220459
    10. '  ' → logprob: -22.8750057220459

Token 554: '_desc' (ID: 26683)
  Prédit: '_desc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_desc' → logprob: -5.5577775128767826e-06
    2. '_des' → logprob: -12.375005722045898
    3. '_' → logprob: -14.750005722045898
    4. '[:-' → logprob: -15.250005722045898
    5. '_dec' → logprob: -15.500005722045898
    6. 'desc' → logprob: -15.750005722045898
    7. '_DESC' → logprob: -15.875005722045898
    8. '_d' → logprob: -16.8750057220459
    9. '[' → logprob: -17.1250057220459
    10. '_descr' → logprob: -17.6250057220459

Token 555: '[:-' (ID: 63556)
  Prédit: '[:-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:-' → logprob: -0.0032039734069257975
    2. ':' → logprob: -6.003203868865967
    3. '[' → logprob: -7.253203868865967
    4. '[:' → logprob: -10.878204345703125
    5. ':
' → logprob: -14.003204345703125
    6. ':-' → logprob: -15.503204345703125
    7. '   ' → logprob: -16.378204345703125
    8. 'except' → logprob: -16.503204345703125
    9. ' :' → logprob: -16.628204345703125
    10. '[::-' → logprob: -17.503204345703125

Token 556: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.125
    3. ' ' → logprob: -16.5
    4. '```' → logprob: -17.5
    5. ']' → logprob: -18.875
    6. '１' → logprob: -19.375
    7. '   ' → logprob: -19.75
    8. '
' → logprob: -19.875
    9. '#' → logprob: -20.25
    10. ')' → logprob: -20.6875

Token 557: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0010642479173839092
    2. ']' → logprob: -7.001064300537109
    3. ']:
' → logprob: -9.50106430053711
    4. ':' → logprob: -10.25106430053711
    5. '):' → logprob: -10.25106430053711
    6. ' ]' → logprob: -13.00106430053711
    7. ']:
' → logprob: -13.00106430053711
    8. ',' → logprob: -14.12606430053711
    9. ':]' → logprob: -14.37606430053711
    10. '}:' → logprob: -14.50106430053711

Token 558: '   ' (ID: 271)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.27664750814437866
    2. 'i' → logprob: -1.5266475677490234
    3. '   ' → logprob: -4.776647567749023
    4. ',' → logprob: -5.526647567749023
    5. ' p' → logprob: -5.901647567749023
    6. ',i' → logprob: -6.151647567749023
    7. '
' → logprob: -6.651647567749023
    8. ' parent' → logprob: -6.776647567749023
    9. 'p' → logprob: -7.026647567749023
    10. '_i' → logprob: -7.401647567749023

Token 559: ' #' (ID: 1069)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.017930420115590096
    2. ' i' → logprob: -4.267930507659912
    3. 'p' → logprob: -6.267930507659912
    4. '   ' → logprob: -7.142930507659912
    5. 'u' → logprob: -8.017930030822754
    6. 'c' → logprob: -8.767930030822754
    7. 'v' → logprob: -9.267930030822754
    8. 'child' → logprob: -9.267930030822754
    9. ' p' → logprob: -9.392930030822754
    10. 'x' → logprob: -9.517930030822754

Token 560: ' Recherche' (ID: 114815)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.011580592952668667
    2. 'u' → logprob: -5.636580467224121
    3. 'child' → logprob: -6.011580467224121
    4. 'current' → logprob: -6.386580467224121
    5. 'cur' → logprob: -6.511580467224121
    6. 'v' → logprob: -7.261580467224121
    7. '#' → logprob: -7.511580467224121
    8. 'curr' → logprob: -7.761580467224121
    9. 'x' → logprob: -8.511580467224121
    10. 'idx' → logprob: -8.636580467224121

Token 561: ' de' (ID: 334)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05494660884141922
    2. '   ' → logprob: -3.0549466609954834
    3. ' i' → logprob: -5.304946422576904
    4. 'p' → logprob: -7.054946422576904
    5. ' de' → logprob: -8.929946899414062
    6. 'parent' → logprob: -9.429946899414062
    7. 'de' → logprob: -9.679946899414062
    8. ' of' → logprob: -10.054946899414062
    9. '    
' → logprob: -10.679946899414062
    10. 'l' → logprob: -10.804946899414062

Token 562: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.015172814950346947
    2. 'l' → logprob: -4.265172958374023
    3. 'u' → logprob: -7.640172958374023
    4. 'le' → logprob: -7.890172958374023
    5. ' i' → logprob: -9.890172958374023
    6. 'la' → logprob: -10.765172958374023
    7. 'current' → logprob: -10.890172958374023
    8. 'child' → logprob: -11.390172958374023
    9. 'v' → logprob: -12.015172958374023
    10. 'idx' → logprob: -12.015172958374023

Token 563: ''ind' (ID: 82245)
  Prédit: 'indice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'indice' → logprob: -0.38489818572998047
    2. 'i' → logprob: -1.6348981857299805
    3. 'index' → logprob: -2.1348981857299805
    4. 'parent' → logprob: -6.7598981857299805
    5. 'current' → logprob: -6.8848981857299805
    6. 'ind' → logprob: -6.8848981857299805
    7. 'val' → logprob: -7.3848981857299805
    8. 'som' → logprob: -7.8848981857299805
    9. 'idx' → logprob: -7.8848981857299805
    10. 's' → logprob: -8.13489818572998

Token 564: 'ice' (ID: 603)
  Prédit: 'ice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ice' → logprob: -0.6193723678588867
    2. 'ex' → logprob: -0.8693723678588867
    3. 'i' → logprob: -3.2443723678588867
    4. 'e' → logprob: -7.244372367858887
    5. 'dex' → logprob: -7.494372367858887
    6. 'ices' → logprob: -7.869372367858887
    7. 'd' → logprob: -8.369372367858887
    8. 'x' → logprob: -8.494372367858887
    9. 'ce' → logprob: -8.744372367858887
    10. '#' → logprob: -8.869372367858887

Token 565: ' i' (ID: 575)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4951001703739166
    2. '=' → logprob: -0.9951001405715942
    3. 'i' → logprob: -5.495100021362305
    4. 'd' → logprob: -5.620100021362305
    5. '_' → logprob: -5.870100021362305
    6. '_parent' → logprob: -6.245100021362305
    7. ' i' → logprob: -6.745100021362305
    8. ' d' → logprob: -6.995100021362305
    9. 'parent' → logprob: -7.120100021362305
    10. ']' → logprob: -7.245100021362305

Token 566: ' correspondant' (ID: 146058)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07898849248886108
    2. '=' → logprob: -2.578988552093506
    3. ']' → logprob: -9.703988075256348
    4. ',' → logprob: -11.828988075256348
    5. '[' → logprob: -11.953988075256348
    6. '=i' → logprob: -11.953988075256348
    7. ')' → logprob: -12.578988075256348
    8. 'd' → logprob: -12.828988075256348
    9. '   ' → logprob: -13.203988075256348
    10. ']=' → logprob: -13.703988075256348

Token 567: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07914622128009796
    2. '=' → logprob: -2.579146146774292
    3. 'd' → logprob: -10.079146385192871
    4. '   ' → logprob: -10.204146385192871
    5. '[' → logprob: -10.329146385192871
    6. ' ' → logprob: -10.454146385192871
    7. ']' → logprob: -10.454146385192871
    8. '=d' → logprob: -10.454146385192871
    9. ',' → logprob: -11.204146385192871
    10. ')' → logprob: -11.204146385192871

Token 568: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0011732018319889903
    2. ' d' → logprob: -6.75117301940918
    3. ' ' → logprob: -14.37617301940918
    4. '_d' → logprob: -14.87617301940918
    5. '
' → logprob: -15.12617301940918
    6. '	d' → logprob: -15.25117301940918
    7. 'a' → logprob: -15.43867301940918
    8. 'l' → logprob: -16.06367301940918
    9. 'D' → logprob: -16.18867301940918
    10. 't' → logprob: -16.68867301940918

Token 569: ' valeur' (ID: 41664)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -2.3438327843905427e-05
    2. ' d' → logprob: -10.87502384185791
    3. 'token' → logprob: -13.00002384185791
    4. 'val' → logprob: -13.75002384185791
    5. 'value' → logprob: -14.50002384185791
    6. '```' → logprob: -16.125022888183594
    7. '
' → logprob: -16.375022888183594
    8. 'next' → logprob: -17.125022888183594
    9. '_d' → logprob: -17.500022888183594
    10. ' ' → logprob: -17.875022888183594

Token 570: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13339990377426147
    2. '=' → logprob: -2.6333999633789062
    3. 'd' → logprob: -3.0083999633789062
    4. '=d' → logprob: -5.758399963378906
    5. ' d' → logprob: -7.883399963378906
    6. '_d' → logprob: -9.258399963378906
    7. '[d' → logprob: -11.133399963378906
    8. 'i' → logprob: -12.008399963378906
    9. '[' → logprob: -12.133399963378906
    10. '   ' → logprob: -12.383399963378906

Token 571: ' dans' (ID: 2671)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.075453020632267
    2. '=' → logprob: -2.825453042984009
    3. ']' → logprob: -4.95045280456543
    4. '   ' → logprob: -5.70045280456543
    5. '[' → logprob: -6.70045280456543
    6. '=d' → logprob: -7.70045280456543
    7. 'd' → logprob: -8.20045280456543
    8. ')' → logprob: -8.57545280456543
    9. '[i' → logprob: -8.57545280456543
    10. '=i' → logprob: -9.07545280456543

Token 572: ' le' (ID: 505)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0006215345347300172
    2. ' d' → logprob: -8.000621795654297
    3. 'D' → logprob: -8.250621795654297
    4. '
' → logprob: -10.875621795654297
    5. 'l' → logprob: -13.625621795654297
    6. '
' → logprob: -13.875621795654297
    7. '#' → logprob: -14.625621795654297
    8. '`' → logprob: -14.688121795654297
    9. 'the' → logprob: -15.063121795654297
    10. '_d' → logprob: -15.125621795654297

Token 573: ' diction' (ID: 155259)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.012582525610923767
    2. 'D' → logprob: -4.387582302093506
    3. ' d' → logprob: -11.262582778930664
    4. 'dict' → logprob: -11.387582778930664
    5. 'graph' → logprob: -11.887582778930664
    6. '_d' → logprob: -11.887582778930664
    7. 'tree' → logprob: -12.012582778930664
    8. '```' → logprob: -12.012582778930664
    9. 'dictionary' → logprob: -12.012582778930664
    10. 'code' → logprob: -12.387582778930664

Token 574: 'naire' (ID: 30464)
  Prédit: 'ary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ary' → logprob: -1.1752095222473145
    2. 'aire' → logprob: -1.1752095222473145
    3. 'naire' → logprob: -1.5502095222473145
    4. 'd' → logprob: -2.8002095222473145
    5. '{' → logprob: -3.1752095222473145
    6. 'a' → logprob: -4.0502095222473145
    7. 'ar' → logprob: -4.1752095222473145
    8. ' d' → logprob: -4.5502095222473145
    9. '_' → logprob: -5.3002095222473145
    10. 't' → logprob: -5.5502095222473145

Token 575: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3270898163318634
    2. '=' → logprob: -1.452089786529541
    3. '[' → logprob: -4.077089786529541
    4. 'd' → logprob: -4.202089786529541
    5. '[d' → logprob: -5.452089786529541
    6. ']' → logprob: -5.952089786529541
    7. '=d' → logprob: -6.702089786529541
    8. ' ' → logprob: -6.827089786529541
    9. ' d' → logprob: -7.202089786529541
    10. '[i' → logprob: -7.452089786529541

Token 576: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0890226736664772
    2. '=' → logprob: -2.714022636413574
    3. ' i' → logprob: -5.589022636413574
    4. '[i' → logprob: -5.714022636413574
    5. '[' → logprob: -6.214022636413574
    6. '   ' → logprob: -6.464022636413574
    7. 'i' → logprob: -6.464022636413574
    8. 'd' → logprob: -6.589022636413574
    9. ' d' → logprob: -6.714022636413574
    10. '=d' → logprob: -6.839022636413574

Token 577: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.0007461408386006951
    2. ' i' → logprob: -7.250746250152588
    3. 'd' → logprob: -10.37574577331543
    4. 'parent' → logprob: -12.75074577331543
    5. '   ' → logprob: -13.62574577331543
    6. '```' → logprob: -15.75074577331543
    7. '`' → logprob: -15.87574577331543
    8. ' parent' → logprob: -16.00074577331543
    9. ' d' → logprob: -16.12574577331543
    10. 'a' → logprob: -16.62574577331543

Token 578: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868732452392578
    2. '=' → logprob: -1.1368732452392578
    3. '=i' → logprob: -13.761873245239258
    4. '=d' → logprob: -14.636873245239258
    5. ',' → logprob: -14.886873245239258
    6. '＝' → logprob: -16.386873245239258
    7. '   ' → logprob: -16.511873245239258
    8. ' ' → logprob: -16.886873245239258
    9. ']' → logprob: -17.886873245239258
    10. '=index' → logprob: -17.886873245239258

Token 579: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0005530327325686812
    2. ' d' → logprob: -7.500553131103516
    3. ' ' → logprob: -18.313053131103516
    4. '
' → logprob: -18.375553131103516
    5. '   ' → logprob: -18.938053131103516
    6. '```' → logprob: -19.188053131103516
    7. '`' → logprob: -19.250553131103516
    8. '	d' → logprob: -19.438053131103516
    9. '#' → logprob: -19.625553131103516
    10. '  ' → logprob: -19.625553131103516

Token 580: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.016333937644958496
    2. '+' → logprob: -4.391334056854248
    3. 'd' → logprob: -6.516334056854248
    4. ' +' → logprob: -6.891334056854248
    5. 'to' → logprob: -7.266334056854248
    6. ']' → logprob: -9.14133358001709
    7. '_d' → logprob: -9.39133358001709
    8. 't' → logprob: -9.89133358001709
    9. '
' → logprob: -10.39133358001709
    10. 'To' → logprob: -10.39133358001709

Token 581: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.19566230475902557
    2. 'i' → logprob: -2.195662260055542
    3. 'd' → logprob: -3.070662260055542
    4. '[d' → logprob: -4.195662498474121
    5. '[' → logprob: -6.320662498474121
    6. '_d' → logprob: -6.445662498474121
    7. '[i' → logprob: -7.070662498474121
    8. ' d' → logprob: -8.945662498474121
    9. '_[' → logprob: -9.070662498474121
    10. '```' → logprob: -9.695662498474121

Token 582: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -0.000824156915768981
    2. '[' → logprob: -7.125823974609375
    3. 'd' → logprob: -11.500823974609375
    4. ' [' → logprob: -12.625823974609375
    5. '(d' → logprob: -13.125823974609375
    6. '[
' → logprob: -13.625823974609375
    7. '[D' → logprob: -14.000823974609375
    8. '\[' → logprob: -14.875823974609375
    9. '[c' → logprob: -15.125823974609375
    10. '[i' → logprob: -15.125823974609375

Token 583: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013344690203666687
    2. ')' → logprob: -4.888344764709473
    3. ']
' → logprob: -5.263344764709473
    4. ']
' → logprob: -9.138344764709473
    5. ' ]' → logprob: -9.138344764709473
    6. ')]' → logprob: -9.263344764709473
    7. '+' → logprob: -9.638344764709473
    8. ')
' → logprob: -9.763344764709473
    9. '   ' → logprob: -10.013344764709473
    10. ']

' → logprob: -10.638344764709473

Token 584: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.019901812076568604
    2. 'parent' → logprob: -4.519901752471924
    3. '   ' → logprob: -6.019901752471924
    4. ' p' → logprob: -6.269901752471924
    5. 'j' → logprob: -6.644901752471924
    6. 'i' → logprob: -7.644901752471924
    7. '#' → logprob: -7.894901752471924
    8. 'for' → logprob: -8.019902229309082
    9. '```' → logprob: -8.269902229309082
    10. 'pi' → logprob: -8.519902229309082

Token 585: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2495531141757965
    2. 'parent' → logprob: -2.7495532035827637
    3. 'j' → logprob: -2.8745532035827637
    4. 'pi' → logprob: -3.4995532035827637
    5. 'idx' → logprob: -3.8745532035827637
    6. 'i' → logprob: -3.9995532035827637
    7. 'pos' → logprob: -4.499553203582764
    8. 'root' → logprob: -4.624553203582764
    9. 'index' → logprob: -6.249553203582764
    10. '#' (adapté à ' #') → logprob: -6.249553203582764

Token 586: ' Calcul' (ID: 57243)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.1495165079832077
    2. 'parent' → logprob: -2.6495165824890137
    3. 'j' → logprob: -4.149516582489014
    4. 'pi' → logprob: -4.524516582489014
    5. 'idx' → logprob: -4.524516582489014
    6. 'if' → logprob: -4.899516582489014
    7. '#' → logprob: -5.024516582489014
    8. 'root' → logprob: -5.149516582489014
    9. 'pos' → logprob: -5.899516582489014
    10. 'candidate' → logprob: -6.899516582489014

Token 587: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6761037111282349
    2. '   ' → logprob: -1.8011037111282349
    3. 'j' → logprob: -2.1761035919189453
    4. 'p' → logprob: -2.4261035919189453
    5. 'parent' → logprob: -3.1761035919189453
    6. ' =' → logprob: -3.3011035919189453
    7. ' p' → logprob: -4.801103591918945
    8. 'for' → logprob: -4.926103591918945
    9. 'i' → logprob: -5.176103591918945
    10. ' j' → logprob: -5.551103591918945

Token 588: ' la' (ID: 557)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.0280972719192505
    2. 'i' → logprob: -1.2780972719192505
    3. 'D' → logprob: -1.7780972719192505
    4. 'p' → logprob: -2.778097152709961
    5. 'size' → logprob: -3.028097152709961
    6. 'd' → logprob: -4.153097152709961
    7. 'j' → logprob: -4.653097152709961
    8. 'max' → logprob: -4.653097152709961
    9. 'pos' → logprob: -5.028097152709961
    10. 'child' → logprob: -5.278097152709961

Token 589: ' valeur' (ID: 41664)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.4591137170791626
    2. 'p' → logprob: -1.4591137170791626
    3. 'pos' → logprob: -3.209113597869873
    4. 'j' → logprob: -3.459113597869873
    5. 'candidate' → logprob: -3.959113597869873
    6. 'possible' → logprob: -4.584113597869873
    7. 'max' → logprob: -5.584113597869873
    8. 'size' → logprob: -5.584113597869873
    9. 'target' → logprob: -5.834113597869873
    10. '#' → logprob: -6.084113597869873

Token 590: ' attend' (ID: 13384)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.463566392660141
    2. 'parent' → logprob: -1.5885664224624634
    3. 'j' → logprob: -3.088566303253174
    4. 'possible' → logprob: -3.713566303253174
    5. 'max' → logprob: -4.213566303253174
    6. 'target' → logprob: -4.338566303253174
    7. 'sub' → logprob: -4.963566303253174
    8. ' p' → logprob: -4.963566303253174
    9. '=' → logprob: -5.088566303253174
    10. 'v' → logprob: -5.213566303253174

Token 591: 'ue' (ID: 466)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4271046817302704
    2. ' =' → logprob: -1.8021047115325928
    3. '=' → logprob: -2.0521047115325928
    4. 'parent' → logprob: -4.052104473114014
    5. '_parent' → logprob: -4.427104473114014
    6. ' du' → logprob: -5.177104473114014
    7. '   ' → logprob: -6.052104473114014
    8. ' parent' → logprob: -6.052104473114014
    9. 's' → logprob: -6.427104473114014
    10. 'u' → logprob: -6.552104473114014

Token 592: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.545723557472229
    2. '=' → logprob: -0.920723557472229
    3. 'parent' → logprob: -4.4207234382629395
    4. 'p' → logprob: -5.5457234382629395
    5. ' p' → logprob: -6.4207234382629395
    6. '=p' → logprob: -6.7957234382629395
    7. ' parent' → logprob: -7.1707234382629395
    8. '_parent' → logprob: -7.7957234382629395
    9. '   ' → logprob: -8.295723915100098
    10. '
' → logprob: -8.295723915100098

Token 593: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0021446701139211655
    2. 'p' → logprob: -6.502144813537598
    3. 'i' → logprob: -8.502144813537598
    4. 'D' → logprob: -8.502144813537598
    5. 'd' → logprob: -10.127144813537598
    6. 'size' → logprob: -10.502144813537598
    7. 'j' → logprob: -10.752144813537598
    8. '   ' → logprob: -10.877144813537598
    9. 'sub' → logprob: -11.377144813537598
    10. 'par' → logprob: -11.502144813537598

Token 594: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.046613093465566635
    2. ' =' → logprob: -3.2966129779815674
    3. 'parent' → logprob: -5.4216132164001465
    4. 'p' → logprob: -6.2966132164001465
    5. '   ' → logprob: -7.1716132164001465
    6. 'd' → logprob: -8.421612739562988
    7. 'expected' → logprob: -8.671612739562988
    8. 'val' → logprob: -8.671612739562988
    9. ',' → logprob: -9.296612739562988
    10. 'i' → logprob: -9.546612739562988

Token 595: ' ce' (ID: 2357)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.7531501650810242
    2. 'i' → logprob: -0.7531501650810242
    3. 'd' → logprob: -3.003150224685669
    4. ' i' → logprob: -6.00314998626709
    5. ' D' → logprob: -6.12814998626709
    6. 'parent' → logprob: -6.37814998626709
    7. 'l' → logprob: -6.62814998626709
    8. 'size' → logprob: -8.75314998626709
    9. '=D' → logprob: -9.12814998626709
    10. ' d' → logprob: -9.25314998626709

Token 596: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.153478741645813
    2. 'som' → logprob: -2.4034786224365234
    3. 's' → logprob: -3.7784786224365234
    4. ' sommet' → logprob: -4.403478622436523
    5. 'd' → logprob: -4.528478622436523
    6. 'D' → logprob: -6.278478622436523
    7. 'parent' → logprob: -6.528478622436523
    8. 'node' → logprob: -7.028478622436523
    9. '#' → logprob: -8.153478622436523
    10. 'n' → logprob: -8.528478622436523

Token 597: ' i' (ID: 575)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030529282987117767
    2. 'p' → logprob: -4.155529499053955
    3. ' =' → logprob: -5.280529499053955
    4. 'parent' → logprob: -5.280529499053955
    5. 'expected' → logprob: -6.030529499053955
    6. '=p' → logprob: -7.905529499053955
    7. '=
' → logprob: -8.155529022216797
    8. '   ' → logprob: -8.155529022216797
    9. 'target' → logprob: -8.780529022216797
    10. 'val' → logprob: -9.030529022216797

Token 598: '
' (ID: 198)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02661864459514618
    2. ' =' → logprob: -3.651618719100952
    3. '=
' → logprob: -9.526618957519531
    4. 'p' → logprob: -9.651618957519531
    5. 'parent' → logprob: -9.651618957519531
    6. 'd' → logprob: -11.151618957519531
    7. ',' → logprob: -11.276618957519531
    8. '=p' → logprob: -11.276618957519531
    9. '_parent' → logprob: -11.651618957519531
    10. '
' → logprob: -11.651618957519531

Token 599: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2692134380340576
    2. 'parent' → logprob: -2.0192134380340576
    3. 'expected' → logprob: -2.8942134380340576
    4. '=' → logprob: -3.7692134380340576
    5. '   ' → logprob: -4.144213676452637
    6. ' =' → logprob: -6.144213676452637
    7. 'v' → logprob: -6.269213676452637
    8. 'val' → logprob: -7.144213676452637
    9. ' p' → logprob: -7.144213676452637
    10. 'target' → logprob: -7.519213676452637

Token 600: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2000342607498169
    2. 'parent' → logprob: -1.825034260749817
    3. 'expected' → logprob: -4.075034141540527
    4. 'pi' → logprob: -7.075034141540527
    5. 'par' → logprob: -7.700034141540527
    6. 'v' → logprob: -8.075034141540527
    7. 'P' → logprob: -8.450034141540527
    8. 'val' → logprob: -8.700034141540527
    9. 'target' → logprob: -8.950034141540527
    10. 'D' → logprob: -9.325034141540527

Token 601: ' d' (ID: 272)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6620464324951172
    2. 'parent' → logprob: -0.9120464324951172
    3. 'expected' → logprob: -2.537046432495117
    4. 'par' → logprob: -7.162046432495117
    5. 'val' → logprob: -7.787046432495117
    6. 'target' → logprob: -7.912046432495117
    7. 'pi' → logprob: -8.037046432495117
    8. 'v' → logprob: -8.412046432495117
    9. 'D' → logprob: -8.537046432495117
    10. 'P' → logprob: -8.537046432495117

Token 602: ' est' (ID: 893)
  Prédit: '_parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.06689219921827316
    2. '_' → logprob: -3.941892147064209
    3. '_expected' → logprob: -4.191892147064209
    4. '_val' → logprob: -4.441892147064209
    5. 'parent' → logprob: -5.566892147064209
    6. '_p' → logprob: -5.691892147064209
    7. '_par' → logprob: -6.316892147064209
    8. '_i' → logprob: -6.441892147064209
    9. '_value' → logprob: -7.191892147064209
    10. ' =' → logprob: -7.191892147064209

Token 603: ' la' (ID: 557)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.2665124535560608
    2. 'd' → logprob: -2.266512393951416
    3. ' D' → logprob: -2.266512393951416
    4. ' d' → logprob: -3.891512393951416
    5. '2' → logprob: -6.391512393951416
    6. 'i' → logprob: -6.891512393951416
    7. ' ' → logprob: -7.891512393951416
    8. ' i' → logprob: -7.891512393951416
    9. 'max' → logprob: -8.016512870788574
    10. 'int' → logprob: -8.391512870788574

Token 604: ' valeur' (ID: 41664)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.03410181403160095
    2. 'd' → logprob: -3.534101724624634
    3. 'max' → logprob: -6.409101963043213
    4. 'parent' → logprob: -7.034101963043213
    5. 'size' → logprob: -7.159101963043213
    6. 'i' → logprob: -7.784101963043213
    7. 'sum' → logprob: -8.784101486206055
    8. ' D' → logprob: -9.034101486206055
    9. 'maximum' → logprob: -10.534101486206055
    10. 'value' → logprob: -10.534101486206055

Token 605: ' D' (ID: 415)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8776612877845764
    2. ' +' → logprob: -1.5026612281799316
    3. '-' → logprob: -1.7526612281799316
    4. ' -' → logprob: -2.1276612281799316
    5. '*' → logprob: -4.127661228179932
    6. '//' → logprob: -4.252661228179932
    7. 'd' → logprob: -4.377661228179932
    8. ' *' → logprob: -4.752661228179932
    9. ' //' → logprob: -5.377661228179932
    10. 'D' → logprob: -5.627661228179932

Token 606: '[i' (ID: 1768)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7553974986076355
    2. ' +' → logprob: -1.5053975582122803
    3. '-' → logprob: -1.6303975582122803
    4. ' -' → logprob: -2.3803975582122803
    5. '//' → logprob: -5.005397319793701
    6. 'd' → logprob: -6.005397319793701
    7. '*' → logprob: -6.130397319793701
    8. '_parent' → logprob: -6.380397319793701
    9. 'parent' → logprob: -6.505397319793701
    10. ' //' → logprob: -7.005397319793701

Token 607: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07167673856019974
    2. ']+' → logprob: -3.321676731109619
    3. '-' → logprob: -3.946676731109619
    4. '+' → logprob: -5.446676731109619
    5. ' -' → logprob: -5.821676731109619
    6. ')' → logprob: -6.071676731109619
    7. '//' → logprob: -6.821676731109619
    8. ' +' → logprob: -7.196676731109619
    9. ']-' → logprob: -7.571676731109619
    10. ' ]' → logprob: -7.821676731109619

Token 608: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4842205047607422
    2. 'parent' → logprob: -1.1092205047607422
    3. 'expected' → logprob: -3.109220504760742
    4. '   ' → logprob: -5.984220504760742
    5. 'val' → logprob: -6.859220504760742
    6. ' p' → logprob: -7.359220504760742
    7. 'target' → logprob: -7.484220504760742
    8. 'd' → logprob: -7.484220504760742
    9. 'pi' → logprob: -7.609220504760742
    10. 'v' → logprob: -7.859220504760742

Token 609: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.17765267193317413
    2. 'parent' → logprob: -1.9276527166366577
    3. 'expected' → logprob: -4.177652835845947
    4. 'par' → logprob: -7.677652835845947
    5. 'pi' → logprob: -7.802652835845947
    6. 'P' → logprob: -9.177652359008789
    7. 'target' → logprob: -9.427652359008789
    8. 'v' → logprob: -9.677652359008789
    9. 'candidate' → logprob: -9.677652359008789
    10. 'pd' → logprob: -9.927652359008789

Token 610: ' On' (ID: 2160)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4273413121700287
    2. 'parent' → logprob: -1.177341341972351
    3. 'expected' → logprob: -3.4273412227630615
    4. 'par' → logprob: -6.302341461181641
    5. 'val' → logprob: -6.552341461181641
    6. 'v' → logprob: -7.552341461181641
    7. 'target' → logprob: -7.552341461181641
    8. 'pi' → logprob: -8.17734146118164
    9. 'candidate' → logprob: -8.17734146118164
    10. 'd' → logprob: -8.42734146118164

Token 611: ' enl' (ID: 116494)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.664206624031067
    2. '_parent' → logprob: -2.1642065048217773
    3. 'parent' → logprob: -2.2892065048217773
    4. ' =' → logprob: -2.6642065048217773
    5. '_val' → logprob: -2.6642065048217773
    6. 'p' → logprob: -2.7892065048217773
    7. '=' → logprob: -2.9142065048217773
    8. 'val' → logprob: -3.0392065048217773
    9. 'i' → logprob: -3.2892065048217773
    10. '#' → logprob: -3.4142065048217773

Token 612: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.007760654203593731
    2. 'eve' → logprob: -5.257760524749756
    3. 'e' → logprob: -6.007760524749756
    4. 'ev' → logprob: -10.632761001586914
    5. 'èves' → logprob: -11.632761001586914
    6. 't' → logprob: -12.132761001586914
    7. 'ove' → logprob: -12.507761001586914
    8. 'è' → logprob: -12.757761001586914
    9. 'ote' → logprob: -13.132761001586914
    10. '```' → logprob: -13.257761001586914

Token 613: ' N' (ID: 478)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.2879233956336975
    2. ' D' → logprob: -1.7879233360290527
    3. '1' → logprob: -3.4129233360290527
    4. 'size' → logprob: -3.6629233360290527
    5. 'd' → logprob: -4.537923336029053
    6. ' size' → logprob: -4.787923336029053
    7. ' d' → logprob: -5.662923336029053
    8. ' ' → logprob: -7.037923336029053
    9. '   ' → logprob: -9.037923812866211
    10. ' (' → logprob: -9.162923812866211

Token 614: ' (' (ID: 350)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3825494050979614
    2. ' -' → logprob: -1.3825494050979614
    3. '+' → logprob: -3.382549285888672
    4. ' +' → logprob: -4.632549285888672
    5. '[i' → logprob: -5.257549285888672
    6. '1' → logprob: -5.632549285888672
    7. ' ' → logprob: -6.007549285888672
    8. '   ' → logprob: -6.007549285888672
    9. 'd' → logprob: -6.132549285888672
    10. ')' → logprob: -6.882549285888672

Token 615: 'nombre' (ID: 28576)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7171524167060852
    2. 'd' → logprob: -1.7171523571014404
    3. 'N' → logprob: -1.9671523571014404
    4. ')' → logprob: -3.0921523571014404
    5. 'D' → logprob: -3.3421523571014404
    6. ' d' → logprob: -3.5921523571014404
    7. 'size' → logprob: -3.7171523571014404
    8. ' ' → logprob: -4.0921525955200195
    9. ' N' → logprob: -4.2171525955200195
    10. ' )' → logprob: -4.9671525955200195

Token 616: ' total' (ID: 3609)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8432274460792542
    2. ' -' → logprob: -0.9682274460792542
    3. ')' → logprob: -2.8432273864746094
    4. ' de' → logprob: -2.9682273864746094
    5. '=' → logprob: -3.7182273864746094
    6. ' d' → logprob: -4.218227386474609
    7. ' des' → logprob: -4.468227386474609
    8. 'de' → logprob: -5.468227386474609
    9. '   ' → logprob: -5.718227386474609
    10. ' )' → logprob: -5.843227386474609

Token 617: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32493725419044495
    2. '-' → logprob: -1.6999372243881226
    3. ' -' → logprob: -3.074937343597412
    4. ' de' → logprob: -4.699937343597412
    5. ' )' → logprob: -4.949937343597412
    6. '=' → logprob: -5.074937343597412
    7. ' d' → logprob: -5.199937343597412
    8. 'd' → logprob: -5.199937343597412
    9. 'de' → logprob: -5.574937343597412
    10. ' des' → logprob: -6.199937343597412

Token 618: ' somm' (ID: 44830)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6561304330825806
    2. 'N' → logprob: -1.5311304330825806
    3. 'som' → logprob: -2.406130313873291
    4. ' somm' → logprob: -2.656130313873291
    5. 'D' → logprob: -3.281130313873291
    6. ')' → logprob: -4.031130313873291
    7. 'nodes' → logprob: -4.406130313873291
    8. 'summ' → logprob: -4.656130313873291
    9. 'vertices' → logprob: -4.781130313873291
    10. 'i' → logprob: -5.656130313873291

Token 619: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.20545825362205505
    2. 'es' → logprob: -2.705458164215088
    3. 'ètres' → logprob: -3.580458164215088
    4. 'ents' → logprob: -3.830458164215088
    5. ')' → logprob: -3.955458164215088
    6. 'ats' → logprob: -4.330458164215088
    7. 'et' → logprob: -4.830458164215088
    8. 'a' → logprob: -5.580458164215088
    9. 'e' → logprob: -5.580458164215088
    10. 'ots' → logprob: -5.705458164215088

Token 620: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4457109868526459
    2. '-' → logprob: -1.8207110166549683
    3. ' -' → logprob: -1.8207110166549683
    4. ' )' → logprob: -3.6957108974456787
    5. '+' → logprob: -5.195711135864258
    6. ' +' → logprob: -5.945711135864258
    7. ',' → logprob: -7.570711135864258
    8. '-)' → logprob: -7.945711135864258
    9. '   ' → logprob: -8.320711135864258
    10. '),' → logprob: -8.570711135864258

Token 621: '   ' (ID: 271)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.26699742674827576
    2. '-' → logprob: -1.5169974565505981
    3. 'd' → logprob: -5.391997337341309
    4. ' d' → logprob: -6.141997337341309
    5. '+' → logprob: -6.266997337341309
    6. ' +' → logprob: -6.766997337341309
    7. '   ' → logprob: -7.016997337341309
    8. ')' → logprob: -7.516997337341309
    9. ',' → logprob: -7.766997337341309
    10. '
' → logprob: -7.891997337341309

Token 622: ' #' (ID: 1069)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.7994182705879211
    2. 'p' → logprob: -1.6744182109832764
    3. 'expected' → logprob: -2.0494182109832764
    4. ' p' → logprob: -2.6744182109832764
    5. ' parent' → logprob: -2.7994182109832764
    6. ' expected' → logprob: -3.6744182109832764
    7. 'val' → logprob: -3.7994182109832764
    8. 'd' → logprob: -3.9244182109832764
    9. 'N' → logprob: -5.2994184494018555
    10. ' d' → logprob: -5.2994184494018555

Token 623: ' puis' (ID: 18766)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.5420017242431641
    2. 'p' → logprob: -1.792001724243164
    3. 'expected' → logprob: -2.417001724243164
    4. ' parent' → logprob: -2.542001724243164
    5. ' p' → logprob: -3.167001724243164
    6. ' expected' → logprob: -3.917001724243164
    7. 'val' → logprob: -4.792001724243164
    8. 'P' → logprob: -6.417001724243164
    9. 'd' → logprob: -6.417001724243164
    10. ' val' → logprob: -6.667001724243164

Token 624: ' on' (ID: 402)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7341367602348328
    2. 'D' → logprob: -1.7341368198394775
    3. 'd' → logprob: -2.1091368198394775
    4. '(' → logprob: -2.4841368198394775
    5. 'N' → logprob: -3.1091368198394775
    6. '(N' → logprob: -3.4841368198394775
    7. ' D' → logprob: -4.484136581420898
    8. ' (' → logprob: -4.609136581420898
    9. 'size' → logprob: -4.859136581420898
    10. ' d' → logprob: -5.359136581420898

Token 625: ' ajoute' (ID: 91611)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.3930901288986206
    2. ' subtract' → logprob: -1.8930901288986206
    3. '-' → logprob: -2.14309024810791
    4. 'subtract' → logprob: -2.26809024810791
    5. ' d' → logprob: -2.39309024810791
    6. 'sub' → logprob: -2.89309024810791
    7. ' sub' → logprob: -3.26809024810791
    8. ' D' → logprob: -3.39309024810791
    9. ' -' → logprob: -3.76809024810791
    10. ' find' → logprob: -4.01809024810791

Token 626: ' deux' (ID: 10301)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.10182199627161026
    2. 'size' → logprob: -2.8518218994140625
    3. ' D' → logprob: -3.6018218994140625
    4. ' size' → logprob: -4.9768218994140625
    5. 'N' → logprob: -6.3518218994140625
    6. '1' → logprob: -6.7268218994140625
    7. '   ' → logprob: -7.4768218994140625
    8. '(D' → logprob: -8.476821899414062
    9. '(size' → logprob: -8.601821899414062
    10. '(' → logprob: -8.726821899414062

Token 627: ' fois' (ID: 14697)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.24168960750102997
    2. ' *' → logprob: -2.616689682006836
    3. ' ' → logprob: -2.866689682006836
    4. '<|end|>' → logprob: -3.366689682006836
    5. '+' → logprob: -3.866689682006836
    6. ' -' → logprob: -4.366689682006836
    7. ')' → logprob: -5.491689682006836
    8. '  ' → logprob: -5.991689682006836
    9. '*' → logprob: -5.991689682006836
    10. '<|end|>' → logprob: -6.241689682006836

Token 628: ' la' (ID: 557)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.18776987493038177
    2. 'size' → logprob: -2.187769889831543
    3. ' D' → logprob: -4.187769889831543
    4. ' size' → logprob: -4.437769889831543
    5. 'N' → logprob: -4.562769889831543
    6. '(size' → logprob: -4.562769889831543
    7. '(N' → logprob: -5.312769889831543
    8. ' (' → logprob: -6.312769889831543
    9. '(D' → logprob: -6.312769889831543
    10. 'd' → logprob: -6.937769889831543

Token 629: ' taille' (ID: 41644)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0024139422457665205
    2. 'size' → logprob: -6.502413749694824
    3. ' D' → logprob: -7.627413749694824
    4. 'N' → logprob: -9.127413749694824
    5. '(D' → logprob: -9.377413749694824
    6. ' size' → logprob: -10.002413749694824
    7. '(size' → logprob: -10.252413749694824
    8. 'd' → logprob: -10.377413749694824
    9. ' (' → logprob: -10.877413749694824
    10. '(' → logprob: -11.127413749694824

Token 630: ' du' (ID: 1462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5134410858154297
    2. '[size' → logprob: -1.0134410858154297
    3. '[' → logprob: -3.8884410858154297
    4. 'size' → logprob: -4.76344108581543
    5. '[D' → logprob: -6.38844108581543
    6. 'D' → logprob: -6.76344108581543
    7. '[parent' → logprob: -6.88844108581543
    8. '(size' → logprob: -7.01344108581543
    9. '*' → logprob: -7.38844108581543
    10. '_sub' → logprob: -7.88844108581543

Token 631: ' sous' (ID: 14487)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.29250600934028625
    2. 'sub' → logprob: -1.7925059795379639
    3. 's' → logprob: -3.417505979537964
    4. 'i' → logprob: -3.542505979537964
    5. 'size' → logprob: -4.667506217956543
    6. ' D' → logprob: -5.042506217956543
    7. 'd' → logprob: -5.917506217956543
    8. ' i' → logprob: -7.167506217956543
    9. '_sub' → logprob: -7.167506217956543
    10. '[i' → logprob: -7.417506217956543

Token 632: '-ar' (ID: 31325)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.7452594041824341
    2. '_ar' → logprob: -1.745259404182434
    3. '_sub' → logprob: -1.745259404182434
    4. 's' → logprob: -2.8702592849731445
    5. 'tree' → logprob: -3.3702592849731445
    6. '[i' → logprob: -3.6202592849731445
    7. 'D' → logprob: -4.1202592849731445
    8. 'sub' → logprob: -4.2452592849731445
    9. '[D' → logprob: -4.7452592849731445
    10. '_s' → logprob: -5.1202592849731445

Token 633: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.004411009605973959
    2. 'bres' → logprob: -5.629411220550537
    3. 'b' → logprob: -7.504411220550537
    4. '#' → logprob: -10.004410743713379
    5. '[' → logprob: -10.254410743713379
    6. 'be' → logprob: -10.504410743713379
    7. 'br' → logprob: -10.629410743713379
    8. 'ber' → logprob: -10.879410743713379
    9. 'bred' → logprob: -11.504410743713379
    10. '```' → logprob: -11.879410743713379

Token 634: ' courant' (ID: 74694)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3150874674320221
    2. '[' → logprob: -2.6900875568389893
    3. '[parent' → logprob: -2.9400875568389893
    4. 'D' → logprob: -3.0650875568389893
    5. 'size' → logprob: -3.1900875568389893
    6. '   ' → logprob: -4.56508731842041
    7. 'sub' → logprob: -4.56508731842041
    8. '[size' → logprob: -4.81508731842041
    9. 'parent' → logprob: -5.31508731842041
    10. 's' → logprob: -5.69008731842041

Token 635: '
' (ID: 198)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.27791422605514526
    2. '-' → logprob: -2.40291428565979
    3. '   ' → logprob: -3.15291428565979
    4. ' *' → logprob: -3.40291428565979
    5. ' +' → logprob: -3.40291428565979
    6. '+' → logprob: -4.402914047241211
    7. '*' → logprob: -5.402914047241211
    8. ' ' → logprob: -5.902914047241211
    9. 'd' → logprob: -6.027914047241211
    10. '
' → logprob: -6.027914047241211

Token 636: '   ' (ID: 271)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.879516065120697
    2. ' -' → logprob: -1.5045161247253418
    3. '-' → logprob: -2.504516124725342
    4. ' parent' → logprob: -2.754516124725342
    5. '[parent' → logprob: -3.004516124725342
    6. 'd' → logprob: -4.004516124725342
    7. '+' → logprob: -4.129516124725342
    8. ' =' → logprob: -4.129516124725342
    9. '-parent' → logprob: -4.379516124725342
    10. ' +' → logprob: -4.754516124725342

Token 637: ' #' (ID: 1069)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.42497938871383667
    2. ' parent' → logprob: -1.7999794483184814
    3. 'p' → logprob: -2.1749794483184814
    4. ' p' → logprob: -3.2999794483184814
    5. 'expected' → logprob: -4.299979209899902
    6. ' expected' → logprob: -5.174979209899902
    7. 'd' → logprob: -5.799979209899902
    8. '   ' → logprob: -6.299979209899902
    9. 'N' → logprob: -6.924979209899902
    10. ' d' → logprob: -7.049979209899902

Token 638: ' Ce' (ID: 14228)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5841909646987915
    2. 'parent' → logprob: -1.2091909646987915
    3. 'expected' → logprob: -2.334190845489502
    4. ' p' → logprob: -3.709190845489502
    5. ' parent' → logprob: -4.834190845489502
    6. ' expected' → logprob: -5.334190845489502
    7. 'val' → logprob: -5.584190845489502
    8. 'v' → logprob: -7.459190845489502
    9. 'par' → logprob: -7.459190845489502
    10. '   ' → logprob: -7.584190845489502

Token 639: ' calcul' (ID: 7559)
  Prédit: '_parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.7210943102836609
    2. 'parent' → logprob: -1.4710943698883057
    3. ' parent' → logprob: -1.4710943698883057
    4. '=' → logprob: -4.471094131469727
    5. ' =' → logprob: -4.596094131469727
    6. '_' → logprob: -4.596094131469727
    7. 'n' → logprob: -5.596094131469727
    8. ' #' → logprob: -5.721094131469727
    9. '+' → logprob: -6.221094131469727
    10. ')' → logprob: -6.471094131469727

Token 640: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.333458662033081
    2. 'parent' → logprob: -1.333458662033081
    3. '=' → logprob: -1.583458662033081
    4. '_parent' → logprob: -1.583458662033081
    5. ' parent' → logprob: -3.333458662033081
    6. ' +=' → logprob: -5.33345890045166
    7. '_' → logprob: -6.08345890045166
    8. 'd' → logprob: -6.20845890045166
    9. '+=' → logprob: -6.20845890045166
    10. '   ' → logprob: -6.45845890045166

Token 641: ' spécifique' (ID: 113170)
  Prédit: ' D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' D' → logprob: -1.1003360748291016
    2. ' d' → logprob: -1.3503360748291016
    3. 'D' → logprob: -1.7253360748291016
    4. 'd' → logprob: -1.9753360748291016
    5. ' N' → logprob: -3.2253360748291016
    6. 'N' → logprob: -4.350336074829102
    7. '2' → logprob: -4.475336074829102
    8. ' ' → logprob: -4.725336074829102
    9. ' (' → logprob: -4.975336074829102
    10. '   ' → logprob: -5.350336074829102

Token 642: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5416463613510132
    2. '+' → logprob: -2.2916464805603027
    3. '=' → logprob: -2.2916464805603027
    4. ' à' → logprob: -2.5416464805603027
    5. ' =' → logprob: -2.6666464805603027
    6. ' to' → logprob: -2.6666464805603027
    7. '<|end|>' → logprob: -2.9166464805603027
    8. ')' → logprob: -3.0416464805603027
    9. ' d' → logprob: -3.2916464805603027
    10. 'd' → logprob: -3.2916464805603027

Token 643: ' l' (ID: 305)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.1597654819488525
    2. 'D' → logprob: -1.4097654819488525
    3. ' D' → logprob: -2.1597654819488525
    4. ' la' → logprob: -2.5347654819488525
    5. ' d' → logprob: -2.6597654819488525
    6. 'l' → logprob: -2.7847654819488525
    7. 'la' → logprob: -3.0347654819488525
    8. 'le' → logprob: -4.159765243530273
    9. 'parent' → logprob: -4.534765243530273
    10. ' l' → logprob: -4.534765243530273

Token 644: ''' (ID: 6)
  Prédit: ' problème'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.476275235414505
    2. 'pro' → logprob: -1.4762752056121826
    3. 'proble' → logprob: -3.2262752056121826
    4. ' probl' → logprob: -3.6012752056121826
    5. 'problem' → logprob: -3.7262752056121826
    6. ' code' → logprob: -4.726275444030762
    7. ' problem' → logprob: -4.851275444030762
    8. 'code' → logprob: -4.976275444030762
    9. ' probleme' → logprob: -4.976275444030762
    10. 'a' → logprob: -5.476275444030762

Token 645: 'alg' (ID: 15258)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.3469882309436798
    2. 'code' → logprob: -2.0969882011413574
    3. 'proble' → logprob: -2.8469882011413574
    4. 'problem' → logprob: -3.3469882011413574
    5. ' problème' → logprob: -3.8469882011413574
    6. 'alg' → logprob: -4.596988201141357
    7. 'd' → logprob: -4.971988201141357
    8. '```' → logprob: -5.221988201141357
    9. 'log' → logprob: -5.471988201141357
    10. 'pb' → logprob: -5.721988201141357

Token 646: 'orith' (ID: 9996)
  Prédit: 'orithm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orithm' → logprob: -0.7561555504798889
    2. 'orith' → logprob: -0.8811555504798889
    3. '#' → logprob: -2.506155490875244
    4. 'e' → logprob: -4.881155490875244
    5. 'd' → logprob: -5.131155490875244
    6. 'orit' → logprob: -5.756155490875244
    7. 'D' → logprob: -6.506155490875244
    8. 'ort' → logprob: -6.506155490875244
    9. 'orie' → logprob: -6.631155490875244
    10. 'o' → logprob: -6.631155490875244

Token 647: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.023245129734277725
    2. 'm' → logprob: -3.898245096206665
    3. 'mes' → logprob: -7.148245334625244
    4. 'e' → logprob: -7.648245334625244
    5. 'ie' → logprob: -7.773245334625244
    6. 'mie' → logprob: -7.898245334625244
    7. '```' → logprob: -8.773244857788086
    8. '#' → logprob: -8.898244857788086
    9. 'ème' → logprob: -10.210744857788086
    10. 'mé' → logprob: -10.398244857788086

Token 648: ' ici' (ID: 27994)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.30597153306007385
    2. ' =' → logprob: -3.055971622467041
    3. ' parent' → logprob: -3.055971622467041
    4. ' p' → logprob: -3.805971622467041
    5. 'p' → logprob: -3.930971622467041
    6. '+' → logprob: -3.930971622467041
    7. '_parent' → logprob: -4.055971622467041
    8. '   ' → logprob: -4.055971622467041
    9. '-' → logprob: -4.305971622467041
    10. '=' → logprob: -4.555971622467041

Token 649: ' (' (ID: 350)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.17097033560276031
    2. 'parent' → logprob: -2.0459704399108887
    3. ' p' → logprob: -4.795970439910889
    4. 'expected' → logprob: -4.795970439910889
    5. '   ' → logprob: -5.795970439910889
    6. ' parent' → logprob: -6.420970439910889
    7. 'd' → logprob: -6.670970439910889
    8. 'np' → logprob: -7.295970439910889
    9. 'N' → logprob: -7.920970439910889
    10. ' expected' → logprob: -8.17096996307373

Token 650: 'ex' (ID: 490)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9807930588722229
    2. ' d' → logprob: -1.6057929992675781
    3. 'd' → logprob: -2.355792999267578
    4. ' )' → logprob: -2.355792999267578
    5. '2' → logprob: -2.855792999267578
    6. ' N' → logprob: -3.230792999267578
    7. 'N' → logprob: -3.980792999267578
    8. '
' → logprob: -4.355792999267578
    9. ' ' → logprob: -4.480792999267578
    10. ' i' → logprob: -4.605792999267578

Token 651: ' :' (ID: 712)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -1.377766728401184
    2. ' -' → logprob: -1.502766728401184
    3. '=' → logprob: -1.627766728401184
    4. ')' → logprob: -2.3777666091918945
    5. ' =' → logprob: -3.0027666091918945
    6. '+' → logprob: -3.1277666091918945
    7. 'd' → logprob: -3.3777666091918945
    8. '[' → logprob: -3.6277666091918945
    9. ' d' → logprob: -4.5027666091918945
    10. '[i' → logprob: -4.5027666091918945

Token 652: ' reconstruction' (ID: 68152)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.29661503434181213
    2. 'd' → logprob: -1.9216150045394897
    3. 'D' → logprob: -2.5466151237487793
    4. 'N' → logprob: -4.671615123748779
    5. '(' → logprob: -5.171615123748779
    6. ' D' → logprob: -5.671615123748779
    7. ' d' → logprob: -5.671615123748779
    8. ' ' → logprob: -5.796615123748779
    9. 'parent' → logprob: -5.921615123748779
    10. 'i' → logprob: -7.171615123748779

Token 653: ' d' (ID: 272)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2545139789581299
    2. ' de' → logprob: -2.75451397895813
    3. 'de' → logprob: -2.87951397895813
    4. ' du' → logprob: -3.62951397895813
    5. ' )' → logprob: -3.62951397895813
    6. 'du' → logprob: -4.504513740539551
    7. 'd' → logprob: -4.879513740539551
    8. ' d' → logprob: -5.004513740539551
    9. ')
' → logprob: -5.254513740539551
    10. '   ' → logprob: -5.504513740539551

Token 654: ''un' (ID: 9788)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.372771978378296
    2. 'l' → logprob: -1.872771978378296
    3. ''un' → logprob: -1.997771978378296
    4. ')' → logprob: -2.122771978378296
    5. 'le' → logprob: -2.997771978378296
    6. 'parent' → logprob: -3.372771978378296
    7. '')' → logprob: -3.497771978378296
    8. 'un' → logprob: -3.622771978378296
    9. 'D' → logprob: -3.622771978378296
    10. 'la' → logprob: -3.622771978378296

Token 655: ' arbre' (ID: 164180)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.21682073175907135
    2. ' arbre' → logprob: -2.34182071685791
    3. 'tree' → logprob: -2.46682071685791
    4. ' tree' → logprob: -5.59182071685791
    5. 'parent' → logprob: -5.96682071685791
    6. 'arb' → logprob: -6.21682071685791
    7. 'graph' → logprob: -6.46682071685791
    8. '```' → logprob: -6.96682071685791
    9. 'gr' → logprob: -7.46682071685791
    10. ')' → logprob: -7.46682071685791

Token 656: ' depuis' (ID: 16277)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20400328934192657
    2. ' -' → logprob: -2.57900333404541
    3. '-' → logprob: -3.45400333404541
    4. '   ' → logprob: -3.70400333404541
    5. ' )' → logprob: -3.82900333404541
    6. '[i' → logprob: -4.95400333404541
    7. ')
' → logprob: -5.45400333404541
    8. '+' → logprob: -5.95400333404541
    9. ' +' → logprob: -6.07900333404541
    10. '#' → logprob: -6.20400333404541

Token 657: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -1.093998908996582
    2. 'D' → logprob: -1.343998908996582
    3. 'l' → logprob: -1.968998908996582
    4. 'd' → logprob: -2.593998908996582
    5. ' la' → logprob: -2.718998908996582
    6. ' D' → logprob: -3.593998908996582
    7. ')' → logprob: -3.593998908996582
    8. 'les' → logprob: -3.843998908996582
    9. 'le' → logprob: -4.718998908996582
    10. ' l' → logprob: -5.093998908996582

Token 658: ' taille' (ID: 41644)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0586156845092773
    2. 'val' → logprob: -1.6836156845092773
    3. 'd' → logprob: -2.0586156845092773
    4. 'D' → logprob: -2.6836156845092773
    5. 'parent' → logprob: -3.3086156845092773
    6. 'tail' → logprob: -3.3086156845092773
    7. '#' → logprob: -3.4336156845092773
    8. 'sub' → logprob: -3.6836156845092773
    9. 'distance' → logprob: -3.6836156845092773
    10. ')' → logprob: -4.058615684509277

Token 659: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1080065965652466
    2. '*' → logprob: -1.7330065965652466
    3. ' *' → logprob: -1.9830065965652466
    4. 'de' → logprob: -2.483006477355957
    5. 's' → logprob: -2.733006477355957
    6. ' )' → logprob: -3.483006477355957
    7. 'sub' → logprob: -3.608006477355957
    8. 'des' → logprob: -3.608006477355957
    9. '   ' → logprob: -3.858006477355957
    10. 'du' → logprob: -4.358006477355957

Token 660: ' sous' (ID: 14487)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09563847631216049
    2. 'l' → logprob: -2.8456385135650635
    3. 'son' → logprob: -4.220638275146484
    4. 'la' → logprob: -5.970638275146484
    5. ')' → logprob: -6.345638275146484
    6. 'sub' → logprob: -6.345638275146484
    7. 'ses' → logprob: -6.345638275146484
    8. ' ' → logprob: -6.720638275146484
    9. 'i' → logprob: -6.720638275146484
    10. 'd' → logprob: -7.095638275146484

Token 661: '-ar' (ID: 31325)
  Prédit: 'arb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arb' → logprob: -0.3171597421169281
    2. 'ar' → logprob: -1.6921597719192505
    3. '-ar' → logprob: -2.567159652709961
    4. 'l' → logprob: -5.942159652709961
    5. ' arbres' → logprob: -6.317159652709961
    6. ' arbre' → logprob: -6.817159652709961
    7. '-' → logprob: -6.942159652709961
    8. '_ar' → logprob: -6.942159652709961
    9. '-l' → logprob: -7.192159652709961
    10. '```' → logprob: -7.942159652709961

Token 662: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.7102707624435425
    2. 'bres' → logprob: -0.7102707624435425
    3. 'b' → logprob: -5.960270881652832
    4. 'é' → logprob: -6.335270881652832
    5. '#' → logprob: -6.460270881652832
    6. 'e' → logprob: -6.460270881652832
    7. 'ê' → logprob: -6.585270881652832
    8. 'êtes' → logprob: -7.085270881652832
    9. 'être' → logprob: -7.460270881652832
    10. 'êtres' → logprob: -7.585270881652832

Token 663: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19224557280540466
    2. '[i' → logprob: -3.4422454833984375
    3. ' )' → logprob: -3.5672454833984375
    4. ']' → logprob: -4.0672454833984375
    5. '+' → logprob: -4.4422454833984375
    6. ' *' → logprob: -4.6922454833984375
    7. ' +' → logprob: -4.8172454833984375
    8. '])' → logprob: -4.8172454833984375
    9. ' -' → logprob: -5.0672454833984375
    10. ')
' → logprob: -5.0672454833984375

Token 664: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.23245905339717865
    2. 'parent' → logprob: -1.8574590682983398
    3. '   ' → logprob: -3.73245906829834
    4. ' p' → logprob: -4.35745906829834
    5. 'expected' → logprob: -4.73245906829834
    6. ' parent' → logprob: -5.60745906829834
    7. ' expected' → logprob: -7.60745906829834
    8. 'd' → logprob: -8.48245906829834
    9. 'np' → logprob: -9.10745906829834
    10. 'P' → logprob: -9.54495906829834

Token 665: ' d' (ID: 272)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16538327932357788
    2. 'expected' → logprob: -2.5403833389282227
    3. 'parent' → logprob: -2.6653833389282227
    4. 'par' → logprob: -7.415383338928223
    5. 'P' → logprob: -7.915383338928223
    6. 'target' → logprob: -7.915383338928223
    7. 'val' → logprob: -8.165383338928223
    8. 'expect' → logprob: -8.165383338928223
    9. ' p' → logprob: -8.415383338928223
    10. '   ' → logprob: -8.665383338928223

Token 666: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.1786026805639267
    2. '_' → logprob: -3.303602695465088
    3. ' -' → logprob: -3.428602695465088
    4. '+' → logprob: -3.553602695465088
    5. ' +' → logprob: -4.053602695465088
    6. '-' → logprob: -4.053602695465088
    7. 'parent' → logprob: -4.678602695465088
    8. ' =' → logprob: -4.678602695465088
    9. '_expected' → logprob: -5.928602695465088
    10. '=' → logprob: -6.053602695465088

Token 667: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5235634446144104
    2. '=' → logprob: -0.8985634446144104
    3. '_parent' → logprob: -8.523563385009766
    4. '_' → logprob: -8.898563385009766
    5. '-' → logprob: -11.148563385009766
    6. '_=' → logprob: -11.148563385009766
    7. '=i' → logprob: -11.648563385009766
    8. ' -' → logprob: -11.648563385009766
    9. ' ' → logprob: -11.898563385009766
    10. '=d' → logprob: -12.273563385009766

Token 668: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.038509368896484375
    2. ' d' → logprob: -3.4135093688964844
    3. 'N' → logprob: -5.788509368896484
    4. '2' → logprob: -7.038509368896484
    5. ' N' → logprob: -8.413509368896484
    6. ' ' → logprob: -8.538509368896484
    7. 'D' → logprob: -8.788509368896484
    8. '(d' → logprob: -9.413509368896484
    9. ' (' → logprob: -10.038509368896484
    10. '   ' → logprob: -10.038509368896484

Token 669: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.9588903784751892
    2. ' +' → logprob: -1.208890438079834
    3. '+' → logprob: -1.458890438079834
    4. '-' → logprob: -2.458890438079834
    5. ' ' → logprob: -10.208889961242676
    6. '+i' → logprob: -10.208889961242676
    7. '
' → logprob: -10.958889961242676
    8. '   ' → logprob: -12.083889961242676
    9. '  ' → logprob: -12.333889961242676
    10. '-N' → logprob: -12.333889961242676

Token 670: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5692691802978516
    2. 'size' → logprob: -0.9442691802978516
    3. '2' → logprob: -3.4442691802978516
    4. '(size' → logprob: -4.944269180297852
    5. '(N' → logprob: -6.069269180297852
    6. '(' → logprob: -6.319269180297852
    7. ' size' → logprob: -7.319269180297852
    8. ' N' → logprob: -7.694269180297852
    9. ' (' → logprob: -8.319269180297852
    10. '1' → logprob: -8.569269180297852

Token 671: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.8035988807678223
    2. ' -' → logprob: -1.6785988807678223
    3. '+' → logprob: -1.9285988807678223
    4. '<|end|>' → logprob: -2.4285988807678223
    5. '   ' → logprob: -2.8035988807678223
    6. '-' → logprob: -4.053598880767822
    7. '<|end|>' → logprob: -4.428598880767822
    8. ' ' → logprob: -4.678598880767822
    9. '
' → logprob: -4.803598880767822
    10. '  ' → logprob: -5.553598880767822

Token 672: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004038033541291952
    2. ' ' → logprob: -5.629037857055664
    3. 'D' → logprob: -7.879037857055664
    4. ' D' → logprob: -10.004037857055664
    5. 'size' → logprob: -12.004037857055664
    6. '(' → logprob: -12.129037857055664
    7. ' (' → logprob: -14.379037857055664
    8. '   ' → logprob: -14.754037857055664
    9. 'd' → logprob: -15.129037857055664
    10. '  ' → logprob: -15.254037857055664

Token 673: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0022118736524134874
    2. ' ' → logprob: -6.252212047576904
    3. 'D' → logprob: -8.877211570739746
    4. 'size' → logprob: -9.252211570739746
    5. '(' → logprob: -10.877211570739746
    6. 'd' → logprob: -11.252211570739746
    7. ' D' → logprob: -12.002211570739746
    8. '   ' → logprob: -12.752211570739746
    9. ' (' → logprob: -13.939711570739746
    10. '  ' → logprob: -14.064711570739746

Token 674: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.01706874370574951
    2. ' *' → logprob: -4.142068862915039
    3. 'D' → logprob: -7.017068862915039
    4. 'size' → logprob: -9.142068862915039
    5. ' D' → logprob: -10.642068862915039
    6. ' size' → logprob: -12.767068862915039
    7. ' ' → logprob: -14.142068862915039
    8. ' ' → logprob: -14.267068862915039
    9. '*(' → logprob: -14.517068862915039
    10. '
' → logprob: -14.642068862915039

Token 675: ' size' (ID: 2349)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.001801438513211906
    2. 'size' → logprob: -6.751801490783691
    3. ' D' → logprob: -7.376801490783691
    4. ' size' → logprob: -12.376801490783691
    5. ' ' → logprob: -14.876801490783691
    6. '	D' → logprob: -14.876801490783691
    7. 'd' → logprob: -15.876801490783691
    8. '   ' → logprob: -16.376800537109375
    9. '  ' → logprob: -17.001800537109375
    10. 'S' → logprob: -17.126800537109375

Token 676: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005481490516103804
    2. '[' → logprob: -7.750548362731934
    3. ' [' → logprob: -9.875548362731934
    4. 'i' → logprob: -10.000548362731934
    5. ' i' → logprob: -11.875548362731934
    6. '_sub' → logprob: -12.000548362731934
    7. '[
' → logprob: -12.875548362731934
    8. '[sub' → logprob: -14.000548362731934
    9. '_i' → logprob: -14.250548362731934
    10. '```' → logprob: -14.750548362731934

Token 677: ']
' (ID: 1592)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.13168250024318695
    2. ']' → logprob: -2.1316823959350586
    3. '[' → logprob: -5.881682395935059
    4. ')' → logprob: -6.506682395935059
    5. '<|end|>' → logprob: -9.256682395935059
    6. 'i' → logprob: -9.631682395935059
    7. '[
' → logprob: -9.631682395935059
    8. '])' → logprob: -9.881682395935059
    9. '(i' → logprob: -10.756682395935059
    10. '   ' → logprob: -11.006682395935059

Token 678: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03997299447655678
    2. ' if' → logprob: -4.16497278213501
    3. 'if' → logprob: -4.78997278213501
    4. ' p' → logprob: -4.78997278213501
    5. 'p' → logprob: -5.41497278213501
    6. '<|end|>' → logprob: -6.53997278213501
    7. '    
' → logprob: -7.66497278213501
    8. 'parent' → logprob: -8.664973258972168
    9. ' parent' → logprob: -9.289973258972168
    10. '  ' → logprob: -9.789973258972168

Token 679: ' #' (ID: 1069)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.48675814270973206
    2. 'if' → logprob: -1.4867581129074097
    3. ' p' → logprob: -2.611758232116699
    4. ' if' → logprob: -2.736758232116699
    5. 'parent' → logprob: -4.111758232116699
    6. '   ' → logprob: -6.111758232116699
    7. ' parent' → logprob: -6.486758232116699
    8. '    
' → logprob: -7.861758232116699
    9. '[parent' → logprob: -9.1117582321167
    10. ')' → logprob: -9.7367582321167

Token 680: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0651417225599289
    2. 'p' → logprob: -2.8151416778564453
    3. '#' → logprob: -5.940141677856445
    4. 'parent' → logprob: -7.690141677856445
    5. 'j' → logprob: -10.815141677856445
    6. ' if' → logprob: -10.940141677856445
    7. '    
' → logprob: -11.565141677856445
    8. '   ' → logprob: -11.940141677856445
    9. 'try' → logprob: -12.190141677856445
    10. '```' → logprob: -12.815141677856445

Token 681: 'ification' (ID: 3166)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7409211993217468
    2. 'ification' → logprob: -0.8659211993217468
    3. 'ifier' → logprob: -2.3659212589263916
    4. ' if' → logprob: -5.4909210205078125
    5. 'ifie' → logprob: -6.8659210205078125
    6. '#' → logprob: -6.9909210205078125
    7. 'ifiez' → logprob: -6.9909210205078125
    8. '   ' → logprob: -7.6159210205078125
    9. '```' → logprob: -8.115921020507812
    10. 'ify' → logprob: -8.740921020507812

Token 682: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03856649249792099
    2. 'if' → logprob: -3.4135665893554688
    3. '   ' → logprob: -5.538566589355469
    4. ' i' → logprob: -7.663566589355469
    5. '<|end|>' → logprob: -8.163566589355469
    6. ' d' → logprob: -10.288566589355469
    7. '	if' → logprob: -10.538566589355469
    8. ' ' → logprob: -10.788566589355469
    9. ' of' → logprob: -11.038566589355469
    10. ')' → logprob: -11.163566589355469

Token 683: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0003005464968737215
    2. ' d' → logprob: -8.125300407409668
    3. '	d' → logprob: -13.625300407409668
    4. 'D' → logprob: -14.250300407409668
    5. 'not' → logprob: -14.500300407409668
    6. ' ' → logprob: -14.750300407409668
    7. '   ' → logprob: -14.750300407409668
    8. '(d' → logprob: -15.562800407409668
    9. 'parent' → logprob: -15.562800407409668
    10. 'i' → logprob: -16.312801361083984

Token 684: ' valeur' (ID: 41664)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0010274506639689207
    2. ' d' → logprob: -7.001027584075928
    3. 'if' → logprob: -9.12602710723877
    4. ' if' → logprob: -12.50102710723877
    5. 'parent' → logprob: -12.87602710723877
    6. '	d' → logprob: -15.62602710723877
    7. '#' → logprob: -16.126028060913086
    8. '   ' → logprob: -16.251028060913086
    9. '_parent' → logprob: -16.251028060913086
    10. ' parent' → logprob: -16.626028060913086

Token 685: ' du' (ID: 1462)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2858753502368927
    2. 'd' → logprob: -1.4108753204345703
    3. '_' → logprob: -6.28587532043457
    4. '_d' → logprob: -7.28587532043457
    5. ' de' → logprob: -7.41087532043457
    6. 'if' → logprob: -8.16087532043457
    7. 'de' → logprob: -8.53587532043457
    8. '_parent' → logprob: -8.53587532043457
    9. ' ' → logprob: -8.91087532043457
    10. ' if' → logprob: -9.28587532043457

Token 686: ' parent' (ID: 5980)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.010202585719525814
    2. 'parent' → logprob: -4.885202407836914
    3. ' d' → logprob: -6.260202407836914
    4. 'if' → logprob: -7.510202407836914
    5. ' parent' → logprob: -9.635202407836914
    6. ' if' → logprob: -10.135202407836914
    7. 'p' → logprob: -11.760202407836914
    8. 'i' → logprob: -12.510202407836914
    9. '#' → logprob: -12.635202407836914
    10. '_parent' → logprob: -13.135202407836914

Token 687: ' existe' (ID: 19498)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6501351594924927
    2. 'in' → logprob: -1.9001351594924927
    3. '_parent' → logprob: -2.150135040283203
    4. ' in' → logprob: -2.275135040283203
    5. ' if' → logprob: -3.025135040283203
    6. 'parent' → logprob: -3.775135040283203
    7. ' =' → logprob: -5.150135040283203
    8. '_' → logprob: -5.275135040283203
    9. ' d' → logprob: -5.400135040283203
    10. '=' → logprob: -5.400135040283203

Token 688: ' bien' (ID: 5340)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04459622502326965
    2. ' if' → logprob: -3.5445961952209473
    3. 'in' → logprob: -4.669596195220947
    4. ' not' → logprob: -6.044596195220947
    5. 'if' → logprob: -6.544596195220947
    6. ' en' → logprob: -7.794596195220947
    7. '   ' → logprob: -7.919596195220947
    8. ' dans' → logprob: -8.669596672058105
    9. ' ' → logprob: -9.044596672058105
    10. ',' → logprob: -9.669596672058105

Token 689: ' dans' (ID: 2671)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.09410268813371658
    2. 'if' → logprob: -2.594102621078491
    3. ' in' → logprob: -4.96910285949707
    4. '   ' → logprob: -5.21910285949707
    5. ')' → logprob: -7.21910285949707
    6. '<|end|>' → logprob: -7.46910285949707
    7. 'in' → logprob: -7.59410285949707
    8. ' not' → logprob: -8.71910285949707
    9. ',' → logprob: -8.84410285949707
    10. '    
' → logprob: -9.34410285949707

Token 690: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0009145628428086638
    2. ' d' → logprob: -7.000914573669434
    3. 'D' → logprob: -13.000914573669434
    4. ' ' → logprob: -14.875914573669434
    5. '	d' → logprob: -15.750914573669434
    6. '
' → logprob: -16.500913619995117
    7. '   ' → logprob: -17.250913619995117
    8. '  ' → logprob: -17.500913619995117
    9. '```' → logprob: -18.000913619995117
    10. '
' → logprob: -18.438413619995117

Token 691: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -6.253713218029588e-05
    2. '_parent' → logprob: -10.250062942504883
    3. '_' → logprob: -11.250062942504883
    4. 'to' → logprob: -11.875062942504883
    5. '_d' → logprob: -13.250062942504883
    6. '_sub' → logprob: -13.375062942504883
    7. 'd' → logprob: -14.000062942504883
    8. '```' → logprob: -14.250062942504883
    9. '_t' → logprob: -15.125062942504883
    10. 'parent' → logprob: -15.125062942504883

Token 692: '_i' (ID: 10853)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.08450090885162354
    2. '_parent' → logprob: -2.834500789642334
    3. '_' → logprob: -3.834500789642334
    4. '_d' → logprob: -8.084501266479492
    5. '_i' → logprob: -8.959501266479492
    6. ':' → logprob: -9.709501266479492
    7. 'parent' → logprob: -9.959501266479492
    8. '```' → logprob: -10.584501266479492
    9. 'd' → logprob: -11.209501266479492
    10. '_p' → logprob: -11.334501266479492

Token 693: ' (' (ID: 350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7813785672187805
    2. 'if' → logprob: -1.1563785076141357
    3. '   ' → logprob: -1.7813785076141357
    4. ' in' → logprob: -3.9063785076141357
    5. '<|end|>' → logprob: -4.656378746032715
    6. ')' → logprob: -5.031378746032715
    7. '.' → logprob: -5.156378746032715
    8. 'in' → logprob: -5.531378746032715
    9. '[' → logprob: -6.156378746032715
    10. ' ' → logprob: -6.156378746032715

Token 694: 'sin' (ID: 23516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9497371315956116
    2. 'if' → logprob: -1.0747370719909668
    3. ' if' → logprob: -2.074737071990967
    4. ' and' → logprob: -2.449737071990967
    5. ' d' → logprob: -3.699737071990967
    6. 'd' → logprob: -4.699737071990967
    7. 'and' → logprob: -4.949737071990967
    8. ' not' → logprob: -5.199737071990967
    9. '):' → logprob: -5.574737071990967
    10. '   ' → logprob: -5.699737071990967

Token 695: 'on' (ID: 263)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3262918293476105
    2. 'e' → logprob: -2.076291799545288
    3. 'ot' → logprob: -3.701291799545288
    4. ')' → logprob: -3.826291799545288
    5. ' not' → logprob: -3.826291799545288
    6. 'd' → logprob: -4.076292037963867
    7. ' keys' → logprob: -4.826292037963867
    8. 't' → logprob: -5.201292037963867
    9. '_keys' → logprob: -5.201292037963867
    10. 'if' → logprob: -5.201292037963867

Token 696: ' impossible' (ID: 19786)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.9417573809623718
    2. 'continue' → logprob: -1.0667574405670166
    3. '   ' → logprob: -2.1917574405670166
    4. '#' → logprob: -3.5667574405670166
    5. '    ' → logprob: -3.9417574405670166
    6. ')' → logprob: -4.1917572021484375
    7. ':' → logprob: -4.3167572021484375
    8. ' True' → logprob: -4.5667572021484375
    9. ' d' → logprob: -5.0667572021484375
    10. ' bl' → logprob: -5.1917572021484375

Token 697: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6691257953643799
    2. '):' → logprob: -0.7941257953643799
    3. ')' → logprob: -4.419125556945801
    4. '   ' → logprob: -4.544125556945801
    5. '):
' → logprob: -4.669125556945801
    6. ':
' → logprob: -5.794125556945801
    7. '.' → logprob: -8.1691255569458
    8. ',' → logprob: -9.6691255569458
    9. ' ' → logprob: -10.1691255569458
    10. '#' → logprob: -10.2941255569458

Token 698: ' construire' (ID: 92473)
  Prédit: ' continuer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continuer' → logprob: -0.8503398299217224
    2. 'contin' → logprob: -1.2253398895263672
    3. 'parent' → logprob: -2.100339889526367
    4. '[parent' → logprob: -3.225339889526367
    5. 'continue' → logprob: -3.350339889526367
    6. ' poursuivre' → logprob: -3.725339889526367
    7. ' trouver' → logprob: -4.225339889526367
    8. ' parent' → logprob: -5.225339889526367
    9. ')' → logprob: -5.350339889526367
    10. 'find' → logprob: -5.725339889526367

Token 699: ' l' (ID: 305)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6154364943504333
    2. '):
' → logprob: -0.9904364943504333
    3. ')' → logprob: -2.990436553955078
    4. ':' → logprob: -3.490436553955078
    5. '   ' → logprob: -6.115436553955078
    6. ':
' → logprob: -6.240436553955078
    7. 'd' → logprob: -6.240436553955078
    8. '):

' → logprob: -8.490436553955078
    9. ' d' → logprob: -8.615436553955078
    10. '):
' → logprob: -8.865436553955078

Token 700: ''ar' (ID: 54307)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22250783443450928
    2. 'parent' → logprob: -2.347507953643799
    3. ')
' → logprob: -2.847507953643799
    4. '):
' → logprob: -4.347507953643799
    5. ' parent' → logprob: -4.597507953643799
    6. 'ar' → logprob: -5.347507953643799
    7. '#' → logprob: -5.472507953643799
    8. '_parent' → logprob: -6.097507953643799
    9. '):' → logprob: -6.097507953643799
    10. ' )' → logprob: -6.972507953643799

Token 701: 'bre' (ID: 9945)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5159370303153992
    2. 'g' → logprob: -1.390937089920044
    3. 'bre' → logprob: -2.265937089920044
    4. 'es' → logprob: -3.890937089920044
    5. ')' → logprob: -5.015936851501465
    6. 'r' → logprob: -5.640936851501465
    7. 'bres' → logprob: -5.890936851501465
    8. 't' → logprob: -6.140936851501465
    9. 'ent' → logprob: -6.140936851501465
    10. 'ière' → logprob: -6.265936851501465

Token 702: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05860917270183563
    2. ' if' → logprob: -3.0586092472076416
    3. ')' → logprob: -5.4336090087890625
    4. ' and' → logprob: -6.4336090087890625
    5. 'if' → logprob: -6.4336090087890625
    6. ' or' → logprob: -6.9336090087890625
    7. '.' → logprob: -7.5586090087890625
    8. ':' → logprob: -7.8086090087890625
    9. ',' → logprob: -8.683609008789062
    10. 'and' → logprob: -9.558609008789062

Token 703: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08488941192626953
    2. ' if' → logprob: -2.8348894119262695
    3. 'if' → logprob: -3.8348894119262695
    4. '    
' → logprob: -7.5848894119262695
    5. ' not' → logprob: -8.83488941192627
    6. '\n' → logprob: -9.33488941192627
    7. 'not' → logprob: -9.58488941192627
    8. '	if' → logprob: -9.70988941192627
    9. ' 
' → logprob: -10.83488941192627
    10. '  
' → logprob: -11.20988941192627

Token 704: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.44113269448280334
    2. ' if' → logprob: -1.191132664680481
    3. '   ' → logprob: -2.9411327838897705
    4. '	if' → logprob: -11.816132545471191
    5. '    
' → logprob: -14.066132545471191
    6. ' ' → logprob: -15.191132545471191
    7. '```' → logprob: -15.191132545471191
    8. 'If' → logprob: -15.566132545471191
    9. ' 
' → logprob: -15.691132545471191
    10. '  ' → logprob: -15.691132545471191

Token 705: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20171494781970978
    2. ' d' → logprob: -1.7017149925231934
    3. 'not' → logprob: -8.326714515686035
    4. ' not' → logprob: -9.826714515686035
    5. '   ' → logprob: -12.701714515686035
    6. ' ' → logprob: -13.951714515686035
    7. '	d' → logprob: -14.201714515686035
    8. '(d' → logprob: -15.326714515686035
    9. 'bl' → logprob: -16.20171546936035
    10. '#' → logprob: -16.45171546936035

Token 706: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.0016898198518902063
    2. 'not' → logprob: -6.751689910888672
    3. 'parent' → logprob: -8.001689910888672
    4. ' not' → logprob: -9.251689910888672
    5. 'd' → logprob: -10.626689910888672
    6. '_d' → logprob: -11.126689910888672
    7. '_not' → logprob: -11.376689910888672
    8. '_' → logprob: -11.501689910888672
    9. 'Parent' → logprob: -12.501689910888672
    10. '_PARENT' → logprob: -12.751689910888672

Token 707: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.10046330094337463
    2. 'not' → logprob: -2.350463390350342
    3. ' in' → logprob: -8.725462913513184
    4. ')' → logprob: -10.225462913513184
    5. 'in' → logprob: -10.225462913513184
    6. ' no' → logprob: -11.975462913513184
    7. ']' → logprob: -12.475462913513184
    8. 'n' → logprob: -12.600462913513184
    9. '	not' → logprob: -13.100462913513184
    10. ' n' → logprob: -14.100462913513184

Token 708: ' in' (ID: 306)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5406994223594666
    2. ' in' → logprob: -1.4156994819641113
    3. 'd' → logprob: -1.7906994819641113
    4. 'in' → logprob: -4.915699481964111
    5. '_d' → logprob: -7.665699481964111
    6. ' not' → logprob: -9.915699005126953
    7. ' dans' → logprob: -10.040699005126953
    8. ')' → logprob: -10.290699005126953
    9. ')d' → logprob: -10.540699005126953
    10. '[d' → logprob: -11.165699005126953

Token 709: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.836499985889532e-05
    2. ' d' → logprob: -9.7500581741333
    3. '
' → logprob: -17.000059127807617
    4. '	d' → logprob: -17.250059127807617
    5. '```' → logprob: -18.125059127807617
    6. '
' → logprob: -19.875059127807617
    7. ' ' → logprob: -20.125059127807617
    8. '   ' → logprob: -20.375059127807617
    9. ')d' → logprob: -20.375059127807617
    10. 'д' → logprob: -20.875059127807617

Token 710: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -7.896309739408025e-07
    2. 'to' → logprob: -14.250000953674316
    3. 'o' → logprob: -16.0
    4. '\' → logprob: -17.75
    5. '```' → logprob: -18.125
    6. '_' → logprob: -18.5
    7. '_t' → logprob: -19.0
    8. 'To' → logprob: -19.5
    9. '_o' → logprob: -19.625
    10. '_TO' → logprob: -20.0

Token 711: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.7120533811976202e-05
    2. 'i' → logprob: -11.000017166137695
    3. '_' → logprob: -16.250017166137695
    4. '```' → logprob: -17.125017166137695
    5. '-i' → logprob: -17.375017166137695
    6. '_to' → logprob: -17.500017166137695
    7. '
' → logprob: -17.750017166137695
    8. '{i' → logprob: -18.000017166137695
    9. '\' → logprob: -18.500017166137695
    10. ',i' → logprob: -18.500017166137695

Token 712: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003335585934109986
    2. ':
' → logprob: -8.250333786010742
    3. ':return' → logprob: -10.500333786010742
    4. '   ' → logprob: -10.875333786010742
    5. ' :' → logprob: -11.750333786010742
    6. '):' → logprob: -12.000333786010742
    7. '       ' → logprob: -12.250333786010742
    8. '[' → logprob: -13.625333786010742
    9. ' and' → logprob: -13.875333786010742
    10. ')' → logprob: -14.000333786010742

Token 713: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06607146561145782
    2. '   ' → logprob: -3.5660715103149414
    3. 'bl' → logprob: -4.066071510314941
    4. '<|end|>' → logprob: -4.941071510314941
    5. ' bl' → logprob: -5.066071510314941
    6. ':' → logprob: -6.066071510314941
    7. '\t' → logprob: -7.816071510314941
    8. '	' → logprob: -8.191071510314941
    9. '```' → logprob: -8.316071510314941
    10. '    ' → logprob: -8.566071510314941

Token 714: ' #' (ID: 1069)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.016125280410051346
    2. '   ' → logprob: -4.516125202178955
    3. ' bl' → logprob: -6.016125202178955
    4. '       ' → logprob: -6.516125202178955
    5. '```' → logprob: -7.391125202178955
    6. '
' → logprob: -7.766125202178955
    7. '``' → logprob: -10.141125679016113
    8. '    
' → logprob: -10.766125679016113
    9. 'break' → logprob: -11.141125679016113
    10. '        
' → logprob: -11.766125679016113

Token 715: ' Si' (ID: 7832)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -6.704273118884885e-07
    2. '   ' → logprob: -14.875000953674316
    3. ' bl' → logprob: -15.500000953674316
    4. '```' → logprob: -18.25
    5. '       ' → logprob: -18.375
    6. '#' → logprob: -18.375
    7. '
' → logprob: -19.375
    8. 'break' → logprob: -19.75
    9. 'b' → logprob: -20.25
    10. '           ' → logprob: -20.375

Token 716: ' on' (ID: 402)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.05585700273513794
    2. ' bl' → logprob: -2.930856943130493
    3. '   ' → logprob: -7.555857181549072
    4. '       ' → logprob: -8.680856704711914
    5. '
' → logprob: -9.680856704711914
    6. '```' → logprob: -10.180856704711914
    7. '    ' → logprob: -10.680856704711914
    8. '#' → logprob: -10.805856704711914
    9. 'le' → logprob: -11.180856704711914
    10. 'b' → logprob: -11.305856704711914

Token 717: ' ne' (ID: 453)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.0418783538043499
    2. 'n' → logprob: -4.6668782234191895
    3. '=' → logprob: -4.9168782234191895
    4. '#' → logprob: -5.0418782234191895
    5. ' bl' → logprob: -5.0418782234191895
    6. '       ' → logprob: -6.4168782234191895
    7. ' n' → logprob: -6.4168782234191895
    8. ' =' → logprob: -6.5418782234191895
    9. ' ne' → logprob: -7.0418782234191895
    10. 'ne' → logprob: -7.5418782234191895

Token 718: ' trouve' (ID: 30913)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pe' → logprob: -1.035491943359375
    2. 'bl' → logprob: -1.035491943359375
    3. 'continue' → logprob: -2.035491943359375
    4. ' peux' → logprob: -2.785491943359375
    5. 'pas' → logprob: -3.285491943359375
    6. 'p' → logprob: -3.910491943359375
    7. 'break' → logprob: -4.535491943359375
    8. 'pu' → logprob: -5.660491943359375
    9. ' continue' → logprob: -5.660491943359375
    10. 'tr' → logprob: -6.410491943359375

Token 719: ' pas' (ID: 2173)
  Prédit: ' pas'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pas' → logprob: -0.15299446880817413
    2. 'pas' → logprob: -2.027994394302368
    3. 'd' → logprob: -5.902994632720947
    4. 'parent' → logprob: -6.527994632720947
    5. ' parent' → logprob: -6.527994632720947
    6. '       ' → logprob: -7.152994632720947
    7. '   ' → logprob: -7.277994632720947
    8. ':' → logprob: -7.402994632720947
    9. '_pas' → logprob: -7.777994632720947
    10. '           ' → logprob: -7.902994632720947

Token 720: ' un' (ID: 537)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.017521932721138
    2. ' bl' → logprob: -5.267521858215332
    3. '   ' → logprob: -5.517521858215332
    4. '       ' → logprob: -6.017521858215332
    5. ':' → logprob: -6.142521858215332
    6. '=' → logprob: -6.642521858215332
    7. 'le' → logprob: -7.017521858215332
    8. ' =' → logprob: -8.017521858215332
    9. 'l' → logprob: -9.267521858215332
    10. 'd' → logprob: -9.267521858215332

Token 721: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.3970832824707031
    2. '
' → logprob: -1.8970832824707031
    3. 'break' → logprob: -2.272083282470703
    4. 'e' → logprob: -2.397083282470703
    5. 'd' → logprob: -2.647083282470703
    6. 'print' → logprob: -3.022083282470703
    7. 'return' → logprob: -3.272083282470703
    8. ' break' → logprob: -3.647083282470703
    9. 'n' → logprob: -3.772083282470703
    10. '#' → logprob: -3.897083282470703

Token 722: ' valide' (ID: 137323)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5531922578811646
    2. ':
' → logprob: -1.6781922578811646
    3. '   ' → logprob: -2.428192138671875
    4. '       ' → logprob: -2.678192138671875
    5. '=' → logprob: -3.303192138671875
    6. ' =' → logprob: -4.553192138671875
    7. ',' → logprob: -4.928192138671875
    8. 'd' → logprob: -5.678192138671875
    9. 'parent' → logprob: -5.928192138671875
    10. '#' → logprob: -6.053192138671875

Token 723: ',' (ID: 11)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.728308379650116
    2. '   ' → logprob: -1.3533084392547607
    3. '       ' → logprob: -1.9783084392547607
    4. ':' → logprob: -2.4783084392547607
    5. ':
' → logprob: -3.4783084392547607
    6. ' bl' → logprob: -6.228308200836182
    7. '           ' → logprob: -6.353308200836182
    8. '=' → logprob: -7.728308200836182
    9. '```' → logprob: -7.853308200836182
    10. ' =' → logprob: -8.47830867767334

Token 724: ' on' (ID: 402)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.0003065030323341489
    2. '   ' → logprob: -8.125306129455566
    3. '       ' → logprob: -11.875306129455566
    4. ' bl' → logprob: -13.125306129455566
    5. '```' → logprob: -14.125306129455566
    6. '
' → logprob: -15.625306129455566
    7. '           ' → logprob: -16.000307083129883
    8. 'break' → logprob: -16.250307083129883
    9. '    
' → logprob: -16.625307083129883
    10. '  ' → logprob: -16.625307083129883

Token 725: ' arr' (ID: 1724)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.3965599834918976
    2. '=' → logprob: -1.1465599536895752
    3. '#' → logprob: -5.771560192108154
    4. '       ' → logprob: -6.146560192108154
    5. '   ' → logprob: -7.271560192108154
    6. ' =' → logprob: -7.396560192108154
    7. ':' → logprob: -8.021559715270996
    8. '{' → logprob: -8.271559715270996
    9. ' bl' → logprob: -8.271559715270996
    10. '{
' → logprob: -8.271559715270996

Token 726: 'ête' (ID: 16808)
  Prédit: 'êter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êter' → logprob: -0.0186238344758749
    2. 'êt' → logprob: -4.5186238288879395
    3. 'ête' → logprob: -5.0186238288879395
    4. 'ê' → logprob: -7.5186238288879395
    5. 'iver' → logprob: -8.518624305725098
    6. 'êts' → logprob: -9.018624305725098
    7. 'ive' → logprob: -11.393624305725098
    8. '#' → logprob: -11.518624305725098
    9. 'êtes' → logprob: -11.643624305725098
    10. 'eter' → logprob: -11.768624305725098

Token 727: ' tout' (ID: 5501)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.022489404305815697
    2. 'break' → logprob: -4.397489547729492
    3. '       ' → logprob: -5.147489547729492
    4. 'le' → logprob: -6.397489547729492
    5. '   ' → logprob: -6.647489547729492
    6. 'l' → logprob: -8.397489547729492
    7. '    
' → logprob: -8.522489547729492
    8. '    ' → logprob: -9.022489547729492
    9. '           ' → logprob: -9.147489547729492
    10. '=' → logprob: -9.272489547729492

Token 728: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41964083909988403
    2. 'bl' → logprob: -1.6696407794952393
    3. '           ' → logprob: -2.2946407794952393
    4. '
' → logprob: -3.1696407794952393
    5. '   ' → logprob: -4.919641017913818
    6. ',' → logprob: -7.294641017913818
    7. '=' → logprob: -7.544641017913818
    8. '        
' → logprob: -7.669641017913818
    9. 'break' → logprob: -7.919641017913818
    10. ':
' → logprob: -7.919641017913818

Token 729: ' on' (ID: 402)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.00020854694594163448
    2. '   ' → logprob: -9.500208854675293
    3. '       ' → logprob: -9.750208854675293
    4. '
' → logprob: -10.000208854675293
    5. ' bl' → logprob: -11.375208854675293
    6. 'break' → logprob: -12.625208854675293
    7. '```' → logprob: -12.625208854675293
    8. '           ' → logprob: -13.000208854675293
    9. '        
' → logprob: -13.125208854675293
    10. '{
' → logprob: -13.500208854675293

Token 730: ' marque' (ID: 38644)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.009580419398844242
    2. 'break' → logprob: -4.759580612182617
    3. '=' → logprob: -7.259580612182617
    4. '
' → logprob: -9.009580612182617
    5. '#' → logprob: -10.509580612182617
    6. ' bl' → logprob: -11.134580612182617
    7. 'exit' → logprob: -11.384580612182617
    8. '```' → logprob: -11.759580612182617
    9. 'continue' → logprob: -11.884580612182617
    10. ' =' → logprob: -11.884580612182617

Token 731: ' é' (ID: 1212)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.000271706550847739
    2. ' bl' → logprob: -8.250271797180176
    3. '
' → logprob: -12.750271797180176
    4. 'le' → logprob: -12.750271797180176
    5. 'False' → logprob: -12.750271797180176
    6. '=False' → logprob: -14.500271797180176
    7. 'l' → logprob: -14.875271797180176
    8. '```' → logprob: -15.375271797180176
    9. '(bl' → logprob: -15.875271797180176
    10. '=' → logprob: -15.875271797180176

Token 732: 'chec' (ID: 132338)
  Prédit: 'chec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chec' → logprob: -0.14543236792087555
    2. 'bl' → logprob: -2.020432472229004
    3. 'ch' → logprob: -6.145432472229004
    4. 'che' → logprob: -8.520432472229004
    5. 'False' → logprob: -9.020432472229004
    6. 'rror' → logprob: -9.270432472229004
    7. 'rr' → logprob: -10.645432472229004
    8. '=False' → logprob: -10.645432472229004
    9. '```' → logprob: -10.645432472229004
    10. '_bl' → logprob: -10.770432472229004

Token 733: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45883694291114807
    2. 'bl' → logprob: -1.8338369131088257
    3. '   ' → logprob: -2.2088370323181152
    4. ':' → logprob: -3.2088370323181152
    5. ':
' → logprob: -3.7088370323181152
    6. '=' → logprob: -4.208837032318115
    7. ' =' → logprob: -4.458837032318115
    8. '           ' → logprob: -5.583837032318115
    9. '```' → logprob: -7.333837032318115
    10. '
' → logprob: -7.583837032318115

Token 734: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08018704503774643
    2. ':
' → logprob: -3.2051870822906494
    3. 'bl' → logprob: -4.33018684387207
    4. '   ' → logprob: -4.33018684387207
    5. ':' → logprob: -5.20518684387207
    6. '           ' → logprob: -5.58018684387207
    7. '
' → logprob: -8.20518684387207
    8. ' bl' → logprob: -8.83018684387207
    9. '{
' → logprob: -9.58018684387207
    10. '```' → logprob: -9.95518684387207

Token 735: ' bl' (ID: 1162)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' (adapté à ' bl') → logprob: -2.570319702499546e-05
    2. ' bl' → logprob: -11.000025749206543
    3. '   ' → logprob: -11.875025749206543
    4. '
' → logprob: -14.000025749206543
    5. '```' → logprob: -14.000025749206543
    6. '       ' → logprob: -15.375025749206543
    7. 'break' → logprob: -16.875024795532227
    8. '``' → logprob: -16.875024795532227
    9. '    
' → logprob: -17.750024795532227
    10. 'b' → logprob: -17.750024795532227

Token 736: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018306681886315346
    2. ' =' → logprob: -4.018306732177734
    3. '=False' → logprob: -8.768306732177734
    4. '=True' → logprob: -13.768306732177734
    5. '=false' → logprob: -16.393306732177734
    6. '=
' → logprob: -17.518306732177734
    7. '＝' → logprob: -17.768306732177734
    8. '=

' → logprob: -19.643306732177734
    9. 'False' → logprob: -19.893306732177734
    10. '=None' → logprob: -20.018306732177734

Token 737: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0019286326132714748
    2. ' False' → logprob: -6.251928806304932
    3. '=False' → logprob: -18.626928329467773
    4. 'F' → logprob: -19.376928329467773
    5. '(False' → logprob: -19.501928329467773
    6. 'false' → logprob: -21.876928329467773
    7. '_false' → logprob: -22.001928329467773
    8. '.False' → logprob: -22.126928329467773
    9. '0' → logprob: -22.751928329467773
    10. 'Fa' → logprob: -23.001928329467773

Token 738: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010318557906430215
    2. '	' → logprob: -10.500102996826172
    3. '   ' → logprob: -10.750102996826172
    4. '           ' → logprob: -11.125102996826172
    5. ',' → logprob: -11.500102996826172
    6. '<|end|>' → logprob: -11.750102996826172
    7. '        
' → logprob: -12.000102996826172
    8. '      ' → logprob: -12.125102996826172
    9. '.' → logprob: -13.500102996826172
    10. '        ' → logprob: -13.500102996826172

Token 739: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00024524700711481273
    2. '   ' → logprob: -9.000245094299316
    3. '           ' → logprob: -10.250245094299316
    4. '	' → logprob: -10.375245094299316
    5. 'continue' → logprob: -10.750245094299316
    6. '      ' → logprob: -12.250245094299316
    7. ',' → logprob: -12.500245094299316
    8. '.' → logprob: -12.500245094299316
    9. '<|end|>' → logprob: -12.625245094299316
    10. '	continue' → logprob: -12.875245094299316

Token 740: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.6390885710716248
    2. '       ' → logprob: -0.7640885710716248
    3. '	break' → logprob: -5.6390886306762695
    4. ' break' → logprob: -6.1390886306762695
    5. '   ' → logprob: -8.51408863067627
    6. '
' → logprob: -8.51408863067627
    7. 'continue' → logprob: -9.13908863067627
    8. '	' → logprob: -9.26408863067627
    9. '```' → logprob: -10.13908863067627
    10. '           ' → logprob: -10.63908863067627

Token 741: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006608910858631134
    2. '    
' → logprob: -6.006608963012695
    3. '
' → logprob: -6.756608963012695
    4. '  
' → logprob: -7.381608963012695
    5. 'else' → logprob: -7.506608963012695
    6. '   
' → logprob: -7.506608963012695
    7. 'i' → logprob: -7.881608963012695
    8. '  ' → logprob: -8.381608963012695
    9. '       ' → logprob: -9.006608963012695
    10. 'parent' → logprob: -9.756608963012695

Token 742: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019397424533963203
    2. '
' → logprob: -4.519397258758545
    3. '    
' → logprob: -5.144397258758545
    4. '   
' → logprob: -7.769397258758545
    5. '  
' → logprob: -7.894397258758545
    6. 'parent' → logprob: -7.894397258758545
    7. 'p' → logprob: -8.269397735595703
    8. '  ' → logprob: -8.519397735595703
    9. 'i' → logprob: -8.644397735595703
    10. ' 
' → logprob: -8.769397735595703

Token 743: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3193114399909973
    2. 'p' → logprob: -1.6943113803863525
    3. 'parent' → logprob: -2.5693113803863525
    4. ' p' → logprob: -4.819311618804932
    5. ' parent' → logprob: -5.819311618804932
    6. '    
' → logprob: -6.819311618804932
    7. '	parent' → logprob: -8.569311141967773
    8. '
' → logprob: -8.944311141967773
    9. '#' (adapté à ' #') → logprob: -9.569311141967773
    10. '	p' → logprob: -9.569311141967773

Token 744: ' Trou' (ID: 58947)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.6363077163696289
    2. 'p' → logprob: -0.7613077163696289
    3. '#' → logprob: -5.761307716369629
    4. 'j' → logprob: -8.511307716369629
    5. 'pi' → logprob: -8.636307716369629
    6. '   ' → logprob: -9.761307716369629
    7. ' parent' → logprob: -10.761307716369629
    8. 'par' → logprob: -11.011307716369629
    9. 'pid' → logprob: -11.636307716369629
    10. '    
' → logprob: -11.761307716369629

Token 745: 've' (ID: 737)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parent' → logprob: -0.7220919132232666
    2. '   ' → logprob: -1.4720919132232666
    3. 'parent' → logprob: -1.9720919132232666
    4. 'ant' → logprob: -2.3470919132232666
    5. '_parent' → logprob: -3.9720919132232666
    6. 'er' → logprob: -4.3470916748046875
    7. 'nt' → logprob: -6.0970916748046875
    8. 'e' → logprob: -6.2220916748046875
    9. 'nant' → logprob: -6.3470916748046875
    10. ' ' → logprob: -6.3470916748046875

Token 746: ' l' (ID: 305)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.368942379951477
    2. 'parent' → logprob: -1.493942379951477
    3. '   ' → logprob: -1.618942379951477
    4. ' parent' → logprob: -1.868942379951477
    5. 'p' → logprob: -2.1189422607421875
    6. ' le' → logprob: -3.2439422607421875
    7. 'r' → logprob: -5.9939422607421875
    8. 'i' → logprob: -6.7439422607421875
    9. '_parent' → logprob: -6.7439422607421875
    10. ' ' → logprob: -7.4939422607421875

Token 747: ''ind' (ID: 82245)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4529268741607666
    2. 'parent' → logprob: -1.2029268741607666
    3. ' parent' → logprob: -3.2029268741607666
    4. ' p' → logprob: -4.5779266357421875
    5. 'i' → logprob: -4.8279266357421875
    6. '_parent' → logprob: -5.4529266357421875
    7. ' i' → logprob: -8.577926635742188
    8. '   ' → logprob: -9.327926635742188
    9. '#' → logprob: -9.452926635742188
    10. 'e' → logprob: -9.827926635742188

Token 748: 'ice' (ID: 603)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.015220592729747295
    2. 'ice' → logprob: -4.265220642089844
    3. 'parent' → logprob: -7.890220642089844
    4. 'i' → logprob: -8.265220642089844
    5. 'e' → logprob: -8.890220642089844
    6. 'ce' → logprob: -9.265220642089844
    7. 'dex' → logprob: -9.890220642089844
    8. 'ices' → logprob: -10.140220642089844
    9. '_parent' → logprob: -10.265220642089844
    10. 'x' → logprob: -10.890220642089844

Token 749: ' du' (ID: 1462)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.6533461213111877
    2. 'p' → logprob: -1.028346061706543
    3. ' =' → logprob: -3.403346061706543
    4. ' parent' → logprob: -3.653346061706543
    5. '_parent' → logprob: -3.778346061706543
    6. '[parent' → logprob: -4.153346061706543
    7. ' p' → logprob: -4.403346061706543
    8. '=' → logprob: -5.278346061706543
    9. '   ' → logprob: -6.028346061706543
    10. '<|end|>' → logprob: -6.778346061706543

Token 750: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.3361521065235138
    2. 'd' → logprob: -1.3361520767211914
    3. 'p' → logprob: -4.461152076721191
    4. ' parent' → logprob: -4.586152076721191
    5. ' d' → logprob: -7.961152076721191
    6. 'i' → logprob: -8.211152076721191
    7. '_parent' → logprob: -8.836152076721191
    8. ' p' → logprob: -10.586152076721191
    9. 'Parent' → logprob: -10.586152076721191
    10. '```' → logprob: -11.086152076721191

Token 751: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12139002233743668
    2. '=' → logprob: -2.3713901042938232
    3. 'p' → logprob: -4.746389865875244
    4. '_parent' → logprob: -4.871389865875244
    5. 'parent' → logprob: -5.996389865875244
    6. '_p' → logprob: -7.371389865875244
    7. '_' → logprob: -7.496389865875244
    8. '[parent' → logprob: -7.746389865875244
    9. '[' → logprob: -8.871390342712402
    10. ',' → logprob: -8.996390342712402

Token 752: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2256893664598465
    2. '=' → logprob: -1.60068941116333
    3. 'parent' → logprob: -9.475688934326172
    4. '[' → logprob: -9.975688934326172
    5. '_' → logprob: -10.350688934326172
    6. '[parent' → logprob: -10.600688934326172
    7. '_parent' → logprob: -10.725688934326172
    8. 'p' → logprob: -10.975688934326172
    9. ',' → logprob: -11.100688934326172
    10. ' ' → logprob: -11.350688934326172

Token 753: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.02176763489842415
    2. 'parent' → logprob: -4.021767616271973
    3. ' p' → logprob: -5.771767616271973
    4. ' parent' → logprob: -8.771767616271973
    5. 'pi' → logprob: -8.896767616271973
    6. 'j' → logprob: -9.896767616271973
    7. 'i' → logprob: -9.896767616271973
    8. ' =' → logprob: -10.396767616271973
    9. '=' → logprob: -10.646767616271973
    10. '   ' → logprob: -11.771767616271973

Token 754: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326377391815186
    2. '=' → logprob: -1.3132637739181519
    3. '=d' → logprob: -13.688263893127441
    4. '=p' → logprob: -14.688263893127441
    5. 'd' → logprob: -15.438263893127441
    6. ' ' → logprob: -16.188262939453125
    7. '[' → logprob: -16.438262939453125
    8. ']' → logprob: -17.188262939453125
    9. 'p' → logprob: -17.188262939453125
    10. ')' → logprob: -17.938262939453125

Token 755: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06196768581867218
    2. ' d' → logprob: -2.811967611312866
    3. '	d' → logprob: -19.061967849731445
    4. 'D' → logprob: -19.311967849731445
    5. '_d' → logprob: -20.686967849731445
    6. ')d' → logprob: -20.811967849731445
    7. '=d' → logprob: -21.561967849731445
    8. '>d' → logprob: -21.561967849731445
    9. '(d' → logprob: -21.686967849731445
    10. ' ' → logprob: -21.936967849731445

Token 756: '_to' (ID: 5089)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0386700630187988
    2. '_to' → logprob: -1.1636700630187988
    3. 'd' → logprob: -1.4136700630187988
    4. '_d' → logprob: -3.163670063018799
    5. '=' → logprob: -3.413670063018799
    6. '=d' → logprob: -4.288670063018799
    7. '[d' → logprob: -6.913670063018799
    8. ' d' → logprob: -8.91366958618164
    9. '	d' → logprob: -9.41366958618164
    10. '=_' → logprob: -9.91366958618164

Token 757: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.010023565031588078
    2. 'i' → logprob: -4.635023593902588
    3. 'd' → logprob: -8.26002311706543
    4. '_to' → logprob: -13.13502311706543
    5. 'I' → logprob: -13.26002311706543
    6. '{i' → logprob: -13.76002311706543
    7. 'p' → logprob: -14.38502311706543
    8. 's' → logprob: -14.38502311706543
    9. '{' → logprob: -14.88502311706543
    10. 'o' → logprob: -15.13502311706543

Token 758: '[d' (ID: 48377)
  Prédit: '[d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[d' → logprob: -1.1875571544806007e-05
    2. 'd' → logprob: -11.375011444091797
    3. '[' → logprob: -14.875011444091797
    4. '(d' → logprob: -17.625011444091797
    5. '[
' → logprob: -19.500011444091797
    6. ' [' → logprob: -19.625011444091797
    7. '=d' → logprob: -20.625011444091797
    8. '	d' → logprob: -20.750011444091797
    9. ' d' → logprob: -21.125011444091797
    10. '\[' → logprob: -21.375011444091797

Token 759: '_parent' (ID: 39570)
  Prédit: '_parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_parent' → logprob: -0.0009376663947477937
    2. 'parent' → logprob: -7.000937461853027
    3. '[parent' → logprob: -10.750937461853027
    4. 'Parent' → logprob: -13.250937461853027
    5. '_par' → logprob: -14.250937461853027
    6. '[' → logprob: -14.500937461853027
    7. '_PARENT' → logprob: -15.000937461853027
    8. ']' → logprob: -15.125937461853027
    9. ' parent' → logprob: -15.375937461853027
    10. '	parent' → logprob: -15.750937461853027

Token 760: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.1080467781284824e-05
    2. ']
' → logprob: -11.375041007995605
    3. '   ' → logprob: -11.500041007995605
    4. ' ]' → logprob: -11.875041007995605
    5. '<|end|>' → logprob: -12.250041007995605
    6. ')' → logprob: -12.750041007995605
    7. '}' → logprob: -13.125041007995605
    8. '[' → logprob: -14.250041007995605
    9. ']

' → logprob: -14.750041007995605
    10. '']' → logprob: -14.750041007995605

Token 761: '   ' (ID: 271)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.47778117656707764
    2. '   ' → logprob: -0.9777811765670776
    3. ' parent' → logprob: -6.227781295776367
    4. '	parent' → logprob: -7.102781295776367
    5. '```' → logprob: -8.102781295776367
    6. '#' → logprob: -8.727781295776367
    7. '[parent' → logprob: -8.727781295776367
    8. '.parent' → logprob: -9.852781295776367
    9. ',parent' → logprob: -10.102781295776367
    10. '
' → logprob: -10.352781295776367

Token 762: ' #' (ID: 1069)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.006930743344128132
    2. '   ' → logprob: -5.006930828094482
    3. ' parent' → logprob: -9.006930351257324
    4. '#' (adapté à ' #') → logprob: -10.631930351257324
    5. '```' → logprob: -10.756930351257324
    6. '	parent' → logprob: -11.006930351257324
    7. '.parent' → logprob: -11.756930351257324
    8. '[parent' → logprob: -12.006930351257324
    9. 'if' → logprob: -12.506930351257324
    10. 'parents' → logprob: -13.006930351257324

Token 763: ' On' (ID: 2160)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0015462874434888363
    2. 'if' → logprob: -6.626546382904053
    3. '#' → logprob: -8.501545906066895
    4. '   ' → logprob: -12.001545906066895
    5. ' parent' → logprob: -12.376545906066895
    6. 'parents' → logprob: -13.001545906066895
    7. 'edges' → logprob: -13.251545906066895
    8. 'size' → logprob: -13.876545906066895
    9. '```' → logprob: -15.251545906066895
    10. '	parent' → logprob: -15.501545906066895

Token 764: ' ajoute' (ID: 91611)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.004051802214235067
    2. ' parent' → logprob: -6.629051685333252
    3. '[parent' → logprob: -6.754051685333252
    4. 'if' → logprob: -7.004051685333252
    5. '#' → logprob: -7.879051685333252
    6. '   ' → logprob: -9.12905216217041
    7. 'parents' → logprob: -9.25405216217041
    8. 'edges' → logprob: -10.75405216217041
    9. '.parent' → logprob: -10.75405216217041
    10. ' if' → logprob: -12.25405216217041

Token 765: ' cette' (ID: 7696)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.7115331888198853
    2. '(i' → logprob: -1.9615331888198853
    3. ' f' → logprob: -2.4615330696105957
    4. 'parent' → logprob: -2.5865330696105957
    5. ' (' → logprob: -2.5865330696105957
    6. 'edges' → logprob: -3.2115330696105957
    7. '(f' → logprob: -3.7115330696105957
    8. '   ' → logprob: -3.8365330696105957
    9. '(p' → logprob: -4.711533069610596
    10. '(parent' → logprob: -4.836533069610596

Token 766: ' ar' (ID: 646)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.2239619493484497
    2. ' parent' → logprob: -3.22396183013916
    3. 'edge' → logprob: -3.34896183013916
    4. 'p' → logprob: -3.59896183013916
    5. 'ar' → logprob: -3.97396183013916
    6. '#' → logprob: -4.34896183013916
    7. ' p' → logprob: -4.72396183013916
    8. ' edge' → logprob: -5.22396183013916
    9. 'relation' → logprob: -5.22396183013916
    10. '   ' → logprob: -5.59896183013916

Token 767: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.3608004152774811
    2. 'r' → logprob: -1.3608003854751587
    3. 'g' → logprob: -3.9858005046844482
    4. 'e' → logprob: -4.235800266265869
    5. 't' → logprob: -5.610800266265869
    6. 'ène' → logprob: -6.485800266265869
    7. 'ète' → logprob: -6.735800266265869
    8. 'ê' → logprob: -7.235800266265869
    9. 'êt' → logprob: -7.360800266265869
    10. '```' → logprob: -7.860800266265869

Token 768: ' au' (ID: 2791)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.321468323469162
    2. '   ' → logprob: -2.0714683532714844
    3. ' edges' → logprob: -2.3214683532714844
    4. 'parent' → logprob: -3.5714683532714844
    5. '(edges' → logprob: -5.321468353271484
    6. '
' → logprob: -5.446468353271484
    7. ' parent' → logprob: -5.946468353271484
    8. ' to' → logprob: -6.196468353271484
    9. ''' → logprob: -6.821468353271484
    10. ' =' → logprob: -7.071468353271484

Token 769: ' résultat' (ID: 62556)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0005632805987261236
    2. ' edges' → logprob: -7.500563144683838
    3. 'parent' → logprob: -12.625563621520996
    4. 'edge' → logprob: -13.000563621520996
    5. '(edges' → logprob: -13.250563621520996
    6. '.edges' → logprob: -13.750563621520996
    7. 'ed' → logprob: -14.875563621520996
    8. '_edges' → logprob: -15.250563621520996
    9. '```' → logprob: -15.500563621520996
    10. '   ' → logprob: -15.500563621520996

Token 770: ' sous' (ID: 14487)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.021536540240049362
    2. ' edges' → logprob: -4.396536350250244
    3. '   ' → logprob: -4.771536350250244
    4. '
' → logprob: -8.396536827087402
    5. '(edges' → logprob: -9.021536827087402
    6. '```' → logprob: -9.396536827087402
    7. 'edge' → logprob: -10.771536827087402
    8. '.edges' → logprob: -10.771536827087402
    9. 'parent' → logprob: -11.271536827087402
    10. '`' → logprob: -12.146536827087402

Token 771: ' la' (ID: 557)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.07233408838510513
    2. 'f' → logprob: -3.197334051132202
    3. ' edges' → logprob: -3.822334051132202
    4. 'form' → logprob: -6.197334289550781
    5. '_edges' → logprob: -6.822334289550781
    6. ''' → logprob: -7.072334289550781
    7. 'forme' → logprob: -7.197334289550781
    8. '   ' → logprob: -7.572334289550781
    9. 'format' → logprob: -8.322334289550781
    10. ' f' → logprob: -8.322334289550781

Token 772: ' forme' (ID: 27450)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.4784887433052063
    2. 'forme' → logprob: -1.4784886837005615
    3. 'form' → logprob: -2.6034886837005615
    4. 'f' → logprob: -2.8534886837005615
    5. 'format' → logprob: -4.478488922119141
    6. 'formes' → logprob: -5.978488922119141
    7. 'liste' → logprob: -6.353488922119141
    8. 'forma' → logprob: -6.853488922119141
    9. '#' → logprob: -7.103488922119141
    10. ''' → logprob: -7.228488922119141

Token 773: ' '' (ID: 461)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.25197893381118774
    2. ' f' → logprob: -1.501978874206543
    3. ''f' → logprob: -10.376978874206543
    4. '(f' → logprob: -11.751978874206543
    5. ''' → logprob: -12.751978874206543
    6. '   ' → logprob: -13.001978874206543
    7. '	f' → logprob: -13.376978874206543
    8. '[f' → logprob: -13.626978874206543
    9. 'edges' → logprob: -13.751978874206543
    10. '"' → logprob: -14.376978874206543

Token 774: 'i' (ID: 72)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -6.360996485454962e-05
    2. ' f' → logprob: -9.7500638961792
    3. 'str' → logprob: -12.2500638961792
    4. '"{' → logprob: -16.000062942504883
    5. ''f' → logprob: -16.000062942504883
    6. '{}' → logprob: -16.500062942504883
    7. 'i' → logprob: -16.750062942504883
    8. '(f' → logprob: -16.750062942504883
    9. '{' → logprob: -16.875062942504883
    10. '{i' → logprob: -17.000062942504883

Token 775: ' p' (ID: 275)
  Prédit: ' f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.3247734010219574
    2. ' p' → logprob: -1.3247734308242798
    3. ' i' → logprob: -4.94977331161499
    4. ' ' → logprob: -6.07477331161499
    5. ' {' → logprob: -7.57477331161499
    6. ''' → logprob: -8.199773788452148
    7. ' +' → logprob: -8.199773788452148
    8. '"' → logprob: -8.324773788452148
    9. ',' → logprob: -8.449773788452148
    10. 'f' → logprob: -8.949773788452148

Token 776: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16366980969905853
    2. ''
' → logprob: -2.9136698246002197
    3. 'edges' → logprob: -3.4136698246002197
    4. ' +' → logprob: -3.7886698246002197
    5. ' edges' → logprob: -4.038669586181641
    6. '+' → logprob: -5.413669586181641
    7. '\n' → logprob: -5.663669586181641
    8. ')' → logprob: -5.913669586181641
    9. ' '' → logprob: -5.913669586181641
    10. '"' → logprob: -6.163669586181641

Token 777: '   ' (ID: 271)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.08372290432453156
    2. ' edges' → logprob: -2.5837228298187256
    3. '   ' → logprob: -5.583723068237305
    4. ''' → logprob: -7.333723068237305
    5. '
' → logprob: -9.333723068237305
    6. '"' → logprob: -9.833723068237305
    7. 'edge' → logprob: -9.958723068237305
    8. '```' → logprob: -10.083723068237305
    9. '(edges' → logprob: -10.208723068237305
    10. '`' → logprob: -10.333723068237305

Token 778: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' (adapté à ' edges') → logprob: -0.012570394203066826
    2. ' edges' → logprob: -4.387570381164551
    3. '   ' → logprob: -10.26257038116455
    4. 'edge' → logprob: -11.51257038116455
    5. '```' → logprob: -11.76257038116455
    6. '.edges' → logprob: -13.13757038116455
    7. '`' → logprob: -13.38757038116455
    8. '(edges' → logprob: -13.76257038116455
    9. '``' → logprob: -14.26257038116455
    10. '_edges' → logprob: -14.38757038116455

Token 779: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.165027217415627e-05
    2. '.' → logprob: -10.750021934509277
    3. '.app' → logprob: -16.50002098083496
    4. ' .' → logprob: -17.12502098083496
    5. 'append' → logprob: -18.62502098083496
    6. '.extend' → logprob: -18.87502098083496
    7. '.Append' → logprob: -19.87502098083496
    8. '.ap' → logprob: -20.87502098083496
    9. '.add' → logprob: -21.37502098083496
    10. ' +=' → logprob: -22.00002098083496

Token 780: '('{}' (ID: 179645)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -3.440506407059729e-05
    2. 'f' → logprob: -11.00003433227539
    3. '(' → logprob: -11.12503433227539
    4. '('' → logprob: -12.87503433227539
    5. '('{}' → logprob: -15.75003433227539
    6. ' f' → logprob: -16.75003433227539
    7. '("' → logprob: -17.62503433227539
    8. '(F' → logprob: -18.37503433227539
    9. '[f' → logprob: -18.62503433227539
    10. '(
' → logprob: -18.62503433227539

Token 781: ' {}'.' (ID: 62777)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04934653639793396
    2. ' {}' → logprob: -3.299346446990967
    3. '{}' → logprob: -5.299346446990967
    4. 'i' → logprob: -5.424346446990967
    5. ' {}'.' → logprob: -7.174346446990967
    6. '{i' → logprob: -7.299346446990967
    7. ' f' → logprob: -9.049346923828125
    8. ' p' → logprob: -9.299346923828125
    9. '(i' → logprob: -9.799346923828125
    10. ' {}\' → logprob: -10.174346923828125

Token 782: 'format' (ID: 4078)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004289830569177866
    2. '(i' → logprob: -6.129289627075195
    3. 'format' → logprob: -6.254289627075195
    4. '.format' → logprob: -8.879289627075195
    5. ' i' → logprob: -10.504289627075195
    6. ' (' → logprob: -12.504289627075195
    7. 'str' → logprob: -12.754289627075195
    8. '(format' → logprob: -13.504289627075195
    9. '{i' → logprob: -13.754289627075195
    10. ' ' → logprob: -14.254289627075195

Token 783: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31327277421951294
    2. '(i' → logprob: -1.3132727146148682
    3. ' i' → logprob: -11.438272476196289
    4. ')i' → logprob: -15.938272476196289
    5. ')' → logprob: -16.31327247619629
    6. ' (' → logprob: -17.06327247619629
    7. '(' → logprob: -17.31327247619629
    8. '   ' → logprob: -17.81327247619629
    9. '	i' → logprob: -17.81327247619629
    10. ',i' → logprob: -17.93827247619629

Token 784: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030432257801294327
    2. ',p' → logprob: -3.5304322242736816
    3. ' ,' → logprob: -7.405432224273682
    4. ' p' → logprob: -9.78043270111084
    5. 'p' → logprob: -11.03043270111084
    6. ',i' → logprob: -14.78043270111084
    7. ',
' → logprob: -15.15543270111084
    8. ',parent' → logprob: -16.655431747436523
    9. '(p' → logprob: -17.530431747436523
    10. '  ' → logprob: -17.905431747436523

Token 785: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00010902655776590109
    2. ' p' → logprob: -9.12510871887207
    3. '   ' → logprob: -20.87510871887207
    4. ' ' → logprob: -21.62510871887207
    5. '	p' → logprob: -21.75010871887207
    6. ')p' → logprob: -21.75010871887207
    7. '<p' → logprob: -22.00010871887207
    8. '```' → logprob: -22.50010871887207
    9. ''p' → logprob: -22.50010871887207
    10. '    ' → logprob: -22.62510871887207

Token 786: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007421217858791351
    2. '))
' → logprob: -5.257421016693115
    3. ')' → logprob: -6.132421016693115
    4. ''))' → logprob: -12.257421493530273
    5. ')
' → logprob: -12.507421493530273
    6. '))
' → logprob: -13.007421493530273
    7. '))

' → logprob: -13.757421493530273
    8. '   ' → logprob: -13.882421493530273
    9. '));' → logprob: -15.132421493530273
    10. ' ))' → logprob: -15.132421493530273

Token 787: '   ' (ID: 271)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.003309842897579074
    2. '   ' → logprob: -5.753309726715088
    3. 'size' → logprob: -9.628310203552246
    4. ' parent' → logprob: -10.503310203552246
    5. '```' → logprob: -10.753310203552246
    6. '	parent' → logprob: -12.503310203552246
    7. '#' → logprob: -12.878310203552246
    8. 'parents' → logprob: -12.878310203552246
    9. '    
' → logprob: -13.378310203552246
    10. 'D' → logprob: -13.753310203552246

Token 788: ' #' (ID: 1069)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0011977284448221326
    2. 'size' → logprob: -7.251197814941406
    3. '   ' → logprob: -7.751197814941406
    4. ' parent' → logprob: -10.626197814941406
    5. '#' (adapté à ' #') → logprob: -11.501197814941406
    6. 'if' → logprob: -12.251197814941406
    7. '```' → logprob: -12.876197814941406
    8. ')' → logprob: -12.876197814941406
    9. '    
' → logprob: -13.001197814941406
    10. 'parents' → logprob: -13.001197814941406

Token 789: ' On' (ID: 2160)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0011614117538556457
    2. 'size' → logprob: -7.251161575317383
    3. 'if' → logprob: -8.001161575317383
    4. '#' → logprob: -9.501161575317383
    5. '   ' → logprob: -10.376161575317383
    6. ' parent' → logprob: -12.376161575317383
    7. 'D' → logprob: -13.251161575317383
    8. '    
' → logprob: -13.876161575317383
    9. 'parents' → logprob: -14.126161575317383
    10. '```' → logprob: -14.626161575317383

Token 790: ' note' (ID: 7477)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.01879207231104374
    2. 'size' → logprob: -4.768792152404785
    3. '[parent' → logprob: -5.518792152404785
    4. '   ' → logprob: -6.018792152404785
    5. ' parent' → logprob: -6.018792152404785
    6. '.parent' → logprob: -8.143792152404785
    7. 'parents' → logprob: -8.393792152404785
    8. '#' → logprob: -8.643792152404785
    9. '[' → logprob: -9.143792152404785
    10. 'if' → logprob: -9.768792152404785

Token 791: ' que' (ID: 661)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.00045045334263704717
    2. '   ' → logprob: -8.000450134277344
    3. ' parent' → logprob: -9.375450134277344
    4. 'size' → logprob: -11.625450134277344
    5. '[parent' → logprob: -11.875450134277344
    6. 'p' → logprob: -12.000450134277344
    7. 'parents' → logprob: -13.125450134277344
    8. '
' → logprob: -13.375450134277344
    9. '	parent' → logprob: -13.375450134277344
    10. '(parent' → logprob: -14.875450134277344

Token 792: ' le' (ID: 505)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -5.300083648762666e-05
    2. '   ' → logprob: -10.625053405761719
    3. 'p' → logprob: -11.000053405761719
    4. 'size' → logprob: -11.875053405761719
    5. ' parent' → logprob: -12.375053405761719
    6. '
' → logprob: -15.875053405761719
    7. '	parent' → logprob: -15.875053405761719
    8. 'parents' → logprob: -16.12505340576172
    9. 'if' → logprob: -16.75005340576172
    10. '[parent' → logprob: -16.87505340576172

Token 793: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -2.057743949990254e-05
    2. ' parent' → logprob: -11.375020980834961
    3. 'p' → logprob: -11.750020980834961
    4. 'size' → logprob: -14.625020980834961
    5. '.parent' → logprob: -16.00002098083496
    6. '#' → logprob: -16.00002098083496
    7. '   ' → logprob: -16.00002098083496
    8. '	parent' → logprob: -16.37502098083496
    9. '[parent' → logprob: -16.87502098083496
    10. 'par' → logprob: -17.12502098083496

Token 794: ' du' (ID: 1462)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.6565738320350647
    2. 'p' → logprob: -1.53157377243042
    3. '[parent' → logprob: -2.15657377243042
    4. '[p' → logprob: -3.28157377243042
    5. '[i' → logprob: -3.53157377243042
    6. 's' → logprob: -4.15657377243042
    7. 'size' → logprob: -4.28157377243042
    8. ' =' → logprob: -4.53157377243042
    9. '=' → logprob: -4.53157377243042
    10. ']' → logprob: -4.90657377243042

Token 795: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.696889623621246e-06
    2. ' i' → logprob: -13.25000286102295
    3. 'p' → logprob: -14.00000286102295
    4. '[i' → logprob: -18.375001907348633
    5. '	i' → logprob: -19.375001907348633
    6. 'parent' → logprob: -19.625001907348633
    7. '[' → logprob: -21.875001907348633
    8. '```' → logprob: -22.250001907348633
    9. '
' → logprob: -22.375001907348633
    10. 'ip' → logprob: -22.500001907348633

Token 796: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00020544764993246645
    2. '[i' → logprob: -8.500205039978027
    3. ' i' → logprob: -13.625205039978027
    4. 'p' → logprob: -14.250205039978027
    5. '[' → logprob: -17.125205993652344
    6. '   ' → logprob: -18.375205993652344
    7. '	i' → logprob: -19.750205993652344
    8. '[parent' → logprob: -19.875205993652344
    9. '```' → logprob: -20.000205993652344
    10. '
' → logprob: -20.500205993652344

Token 797: ' est' (ID: 893)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.031639255583286285
    2. '=' → logprob: -4.406639099121094
    3. '[p' → logprob: -4.656639099121094
    4. '[parent' → logprob: -5.531639099121094
    5. ' =' → logprob: -6.156639099121094
    6. 'p' → logprob: -6.406639099121094
    7. 'parent' → logprob: -6.531639099121094
    8. 'i' → logprob: -9.281639099121094
    9. '[' → logprob: -9.781639099121094
    10. ' p' → logprob: -10.281639099121094

Token 798: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.306760805164231e-05
    2. ' p' → logprob: -11.25001335144043
    3. '   ' → logprob: -20.87501335144043
    4. '	p' → logprob: -21.62501335144043
    5. '
' → logprob: -21.75001335144043
    6. 'parent' → logprob: -22.50001335144043
    7. '<p' → logprob: -23.00001335144043
    8. 'i' → logprob: -23.25001335144043
    9. '```' → logprob: -23.87501335144043
    10. '[p' → logprob: -24.50001335144043

Token 799: '
' (ID: 198)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.04035833850502968
    2. '   ' → logprob: -3.290358304977417
    3. ' parent' → logprob: -6.415358543395996
    4. '[parent' → logprob: -7.915358543395996
    5. '
' → logprob: -8.665358543395996
    6. '.parent' → logprob: -9.790358543395996
    7. '	parent' → logprob: -10.165358543395996
    8. '```' → logprob: -10.790358543395996
    9. '_parent' → logprob: -12.165358543395996
    10. ',parent' → logprob: -12.165358543395996

Token 800: '   ' (ID: 271)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.024621115997433662
    2. '   ' → logprob: -4.02462100982666
    3. '	parent' → logprob: -5.39962100982666
    4. ' parent' → logprob: -6.39962100982666
    5. '```' → logprob: -9.39962100982666
    6. '[parent' → logprob: -9.52462100982666
    7. '.parent' → logprob: -10.02462100982666
    8. '
' → logprob: -10.77462100982666
    9. '(parent' → logprob: -11.52462100982666
    10. ',parent' → logprob: -11.77462100982666

Token 801: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -1.1517960956552997e-05
    2. ' parent' → logprob: -11.625011444091797
    3. '   ' → logprob: -13.000011444091797
    4. '	parent' → logprob: -15.625011444091797
    5. '```' → logprob: -17.125011444091797
    6. '
' → logprob: -17.125011444091797
    7. '.parent' → logprob: -17.250011444091797
    8. '[parent' → logprob: -18.625011444091797
    9. '    
' → logprob: -18.875011444091797
    10. 'parents' → logprob: -19.625011444091797

Token 802: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0802738870552275e-05
    2. '[' → logprob: -11.50001049041748
    3. ' [' → logprob: -15.25001049041748
    4. '```' → logprob: -15.37501049041748
    5. 'i' → logprob: -16.625011444091797
    6. '[I' → logprob: -17.375011444091797
    7. '\[' → logprob: -17.375011444091797
    8. '   ' → logprob: -17.500011444091797
    9. '=' → logprob: -18.625011444091797
    10. '
' → logprob: -18.875011444091797

Token 803: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3313818871974945
    2. '=' → logprob: -1.331381916999817
    3. ']=' → logprob: -4.081381797790527
    4. ' =' → logprob: -6.956381797790527
    5. ' ]' → logprob: -9.456381797790527
    6. ')' → logprob: -10.706381797790527
    7. '=p' → logprob: -11.956381797790527
    8. '[' → logprob: -12.456381797790527
    9. '=i' → logprob: -12.581381797790527
    10. ')=' → logprob: -12.831381797790527

Token 804: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001170460251159966
    2. ' =' → logprob: -6.751170635223389
    3. '＝' → logprob: -16.626171112060547
    4. '=

' → logprob: -16.626171112060547
    5. '=p' → logprob: -17.626171112060547
    6. '=i' → logprob: -17.876171112060547
    7. '=end' → logprob: -17.876171112060547
    8. '=
' → logprob: -18.001171112060547
    9. '=}' → logprob: -18.126171112060547
    10. ')' → logprob: -18.376171112060547

Token 805: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.029750484973192215
    2. ' p' → logprob: -3.5297505855560303
    3. ' ' → logprob: -19.52975082397461
    4. '	p' → logprob: -20.15475082397461
    5. '_p' → logprob: -20.90475082397461
    6. '(p' → logprob: -21.52975082397461
    7. ''p' → logprob: -21.52975082397461
    8. '<p' → logprob: -22.27975082397461
    9. '```' → logprob: -22.40475082397461
    10. '`' → logprob: -22.52975082397461

Token 806: '
' (ID: 198)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.257968932390213
    2. '   ' → logprob: -1.5079689025878906
    3. '	size' → logprob: -5.632968902587891
    4. ' size' → logprob: -6.882968902587891
    5. '```' → logprob: -7.882968902587891
    6. '    
' → logprob: -8.13296890258789
    7. 'D' → logprob: -8.50796890258789
    8. '  ' → logprob: -8.75796890258789
    9. '#' → logprob: -9.13296890258789
    10. '
' → logprob: -9.88296890258789

Token 807: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5424917340278625
    2. 'size' → logprob: -1.1674916744232178
    3. '```' → logprob: -2.6674916744232178
    4. 'D' → logprob: -3.4174916744232178
    5. '    
' → logprob: -6.542491912841797
    6. '``' → logprob: -6.792491912841797
    7. 'parent' → logprob: -7.292491912841797
    8. ' size' → logprob: -7.417491912841797
    9. '#' → logprob: -7.667491912841797
    10. '  ' → logprob: -8.917491912841797

Token 808: ' #' (ID: 1069)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.006853427272289991
    2. '   ' → logprob: -5.0068535804748535
    3. 'D' → logprob: -9.256853103637695
    4. ' size' → logprob: -11.006853103637695
    5. '#' (adapté à ' #') → logprob: -11.256853103637695
    6. '```' → logprob: -11.506853103637695
    7. '	size' → logprob: -13.631853103637695
    8. '  ' → logprob: -14.506853103637695
    9. '    
' → logprob: -14.756853103637695
    10. '       ' → logprob: -15.506853103637695

Token 809: ' On' (ID: 2160)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.20168249309062958
    2. 'D' → logprob: -1.701682448387146
    3. '#' → logprob: -8.451682090759277
    4. '   ' → logprob: -10.076682090759277
    5. ' size' → logprob: -11.951682090759277
    6. ' D' → logprob: -12.826682090759277
    7. 'd' → logprob: -14.326682090759277
    8. 'if' → logprob: -14.451682090759277
    9. '       ' → logprob: -14.701682090759277
    10. 'Size' → logprob: -14.826682090759277

Token 810: ' met' (ID: 1421)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.07313704490661621
    2. 'D' → logprob: -4.073137283325195
    3. '_size' → logprob: -4.323137283325195
    4. '[' → logprob: -4.698137283325195
    5. '   ' → logprob: -5.323137283325195
    6. '[size' → logprob: -5.573137283325195
    7. '+=' → logprob: -5.823137283325195
    8. ' size' → logprob: -5.823137283325195
    9. 'for' → logprob: -6.073137283325195
    10. '#' → logprob: -6.323137283325195

Token 811: ' à' (ID: 1221)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.2757016718387604
    2. 'à' → logprob: -1.525701642036438
    3. 'a' → logprob: -4.150701522827148
    4. 'aj' → logprob: -6.025701522827148
    5. ' à' → logprob: -6.150701522827148
    6. 'D' → logprob: -6.525701522827148
    7. 'À' → logprob: -7.400701522827148
    8. '#' → logprob: -8.150701522827148
    9. ''à' → logprob: -9.275701522827148
    10. '(size' → logprob: -9.400701522827148

Token 812: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0014054712373763323
    2. '```' → logprob: -7.251405239105225
    3. 'size' → logprob: -8.376405715942383
    4. 'jou' → logprob: -8.626405715942383
    5. 'jours' → logprob: -9.251405715942383
    6. 'day' → logprob: -9.751405715942383
    7. 'j' → logprob: -10.001405715942383
    8. ' jour' → logprob: -11.001405715942383
    9. ' ' → logprob: -11.376405715942383
    10. '
' → logprob: -11.376405715942383

Token 813: ' la' (ID: 557)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0041512916795909405
    2. ' size' → logprob: -5.754151344299316
    3. 'D' → logprob: -7.254151344299316
    4. '   ' → logprob: -8.879151344299316
    5. '[size' → logprob: -9.379151344299316
    6. '(size' → logprob: -10.879151344299316
    7. ' D' → logprob: -12.129151344299316
    8. '```' → logprob: -12.129151344299316
    9. '	size' → logprob: -13.379151344299316
    10. ' ' → logprob: -13.629151344299316

Token 814: ' taille' (ID: 41644)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.6327798962593079
    2. 'size' → logprob: -0.7577798962593079
    3. ' size' → logprob: -9.007780075073242
    4. ' D' → logprob: -10.632780075073242
    5. 'sub' → logprob: -11.632780075073242
    6. 'd' → logprob: -12.757780075073242
    7. '   ' → logprob: -13.007780075073242
    8. 'value' → logprob: -13.007780075073242
    9. '#' → logprob: -13.382780075073242
    10. '[size' → logprob: -13.382780075073242

Token 815: ' du' (ID: 1462)
  Prédit: '[parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[parent' → logprob: -0.44988226890563965
    2. '[p' → logprob: -1.0748822689056396
    3. '[' → logprob: -3.9498822689056396
    4. ' [' → logprob: -6.699882507324219
    5. 'parent' → logprob: -8.449882507324219
    6. '   ' → logprob: -9.824882507324219
    7. '[size' → logprob: -9.824882507324219
    8. '[i' → logprob: -9.824882507324219
    9. '```' → logprob: -10.449882507324219
    10. ' parent' → logprob: -11.449882507324219

Token 816: ' sous' (ID: 14487)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.02389390394091606
    2. 'p' → logprob: -3.8988938331604004
    3. 'sub' → logprob: -6.3988938331604
    4. ' parent' → logprob: -6.8988938331604
    5. '[parent' → logprob: -7.3988938331604
    6. ' p' → logprob: -10.148894309997559
    7. '(parent' → logprob: -12.148894309997559
    8. '	parent' → logprob: -12.148894309997559
    9. 'size' → logprob: -13.023894309997559
    10. '[p' → logprob: -13.148894309997559

Token 817: '-ar' (ID: 31325)
  Prédit: '_ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ar' → logprob: -0.7109188437461853
    2. '-ar' → logprob: -0.9609188437461853
    3. 'ar' → logprob: -2.21091890335083
    4. ' arbre' → logprob: -4.96091890335083
    5. 'tree' → logprob: -5.71091890335083
    6. '_tree' → logprob: -5.83591890335083
    7. '-tree' → logprob: -7.08591890335083
    8. 'Ar' → logprob: -7.08591890335083
    9. 'arb' → logprob: -7.58591890335083
    10. ''ar' → logprob: -7.71091890335083

Token 818: 'bre' (ID: 9945)
  Prédit: 'bre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bre' → logprob: -0.0004336493439041078
    2. 'b' → logprob: -9.375433921813965
    3. '_ar' → logprob: -9.500433921813965
    4. '#' → logprob: -9.625433921813965
    5. 'br' → logprob: -9.875433921813965
    6. '_' → logprob: -10.375433921813965
    7. '_b' → logprob: -10.625433921813965
    8. 'ar' → logprob: -11.375433921813965
    9. 'bres' → logprob: -11.625433921813965
    10. '+' → logprob: -11.875433921813965

Token 819: ' du' (ID: 1462)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.016225678846240044
    2. '[parent' → logprob: -4.141225814819336
    3. '[' → logprob: -9.141225814819336
    4. ' [' → logprob: -10.641225814819336
    5. 'parent' → logprob: -10.766225814819336
    6. ' p' → logprob: -11.141225814819336
    7. 'p' → logprob: -11.641225814819336
    8. '   ' → logprob: -12.266225814819336
    9. '[i' → logprob: -12.891225814819336
    10. '```' → logprob: -13.141225814819336

Token 820: ' parent' (ID: 5980)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.8193366486229934e-05
    2. ' p' → logprob: -11.500018119812012
    3. 'parent' → logprob: -11.750018119812012
    4. ' parent' → logprob: -16.500019073486328
    5. '[p' → logprob: -17.125019073486328
    6. '[parent' → logprob: -18.125019073486328
    7. '<p' → logprob: -18.250019073486328
    8. '```' → logprob: -18.750019073486328
    9. '
' → logprob: -18.875019073486328
    10. '	p' → logprob: -19.125019073486328

Token 821: ' p' (ID: 275)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0034130862914025784
    2. '[parent' → logprob: -5.753413200378418
    3. 'p' → logprob: -9.503413200378418
    4. '[' → logprob: -9.503413200378418
    5. '   ' → logprob: -10.503413200378418
    6. 'size' → logprob: -10.753413200378418
    7. 'parent' → logprob: -11.628413200378418
    8. ' [' → logprob: -11.753413200378418
    9. ']' → logprob: -12.503413200378418
    10. ' p' → logprob: -12.628413200378418

Token 822: ' en' (ID: 469)
  Prédit: '[size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[size' → logprob: -0.7383768558502197
    2. '+=' → logprob: -1.3633768558502197
    3. 'size' → logprob: -1.6133768558502197
    4. ' +=' → logprob: -3.1133768558502197
    5. '=size' → logprob: -4.863376617431641
    6. ' size' → logprob: -5.738376617431641
    7. '=' → logprob: -5.738376617431641
    8. '[' → logprob: -6.238376617431641
    9. ']+=' → logprob: -6.238376617431641
    10. '(size' → logprob: -6.613376617431641

Token 823: ' raj' (ID: 46358)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.01311340369284153
    2. ' size' → logprob: -4.888113498687744
    3. '+=' → logprob: -7.263113498687744
    4. 'augment' → logprob: -7.263113498687744
    5. 'aj' → logprob: -7.388113498687744
    6. '[size' → logprob: -7.513113498687744
    7. 'tail' → logprob: -7.513113498687744
    8. '+' → logprob: -7.638113498687744
    9. '=size' → logprob: -7.763113498687744
    10. 'adding' → logprob: -8.013113021850586

Token 824: 'out' (ID: 468)
  Prédit: 'out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -2.5776860184123507e-06
    2. 'outer' → logprob: -13.12500286102295
    3. 'OUT' → logprob: -15.50000286102295
    4. 'ust' → logprob: -16.500001907348633
    5. 'outez' → logprob: -16.750001907348633
    6. '   ' → logprob: -16.875001907348633
    7. 'oute' → logprob: -17.875001907348633
    8. 'ou' → logprob: -18.125001907348633
    9. '```' → logprob: -18.250001907348633
    10. 'o' → logprob: -18.875001907348633

Token 825: 'ant' (ID: 493)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.02646598406136036
    2. 'ant' → logprob: -3.651465892791748
    3. 'a' → logprob: -10.401466369628906
    4. 'outer' → logprob: -10.401466369628906
    5. '   ' → logprob: -10.901466369628906
    6. 'e' → logprob: -11.151466369628906
    7. 'o' → logprob: -11.401466369628906
    8. 'oute' → logprob: -11.901466369628906
    9. '```' → logprob: -12.026466369628906
    10. 'ust' → logprob: -12.026466369628906

Token 826: ' la' (ID: 557)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.004640999715775251
    2. ' size' → logprob: -5.379641056060791
    3. '(size' → logprob: -11.129640579223633
    4. '=size' → logprob: -13.254640579223633
    5. '   ' → logprob: -13.879640579223633
    6. '[size' → logprob: -14.004640579223633
    7. '	size' → logprob: -14.004640579223633
    8. ',size' → logprob: -14.879640579223633
    9. '```' → logprob: -15.004640579223633
    10. 'la' → logprob: -16.004640579223633

Token 827: ' taille' (ID: 41644)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.004636841826140881
    2. ' size' → logprob: -5.379636764526367
    3. '
' → logprob: -12.504636764526367
    4. '[size' → logprob: -12.754636764526367
    5. 'tail' → logprob: -13.004636764526367
    6. 'siz' → logprob: -13.629636764526367
    7. '```' → logprob: -13.629636764526367
    8. '   ' → logprob: -14.004636764526367
    9. '=size' → logprob: -14.254636764526367
    10. ' taille' → logprob: -14.254636764526367

Token 828: ' du' (ID: 1462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005964008742012084
    2. '[size' → logprob: -7.875596523284912
    3. '[' → logprob: -9.500596046447754
    4. 'size' → logprob: -9.875596046447754
    5. '[p' → logprob: -9.875596046447754
    6. ' [' → logprob: -11.625596046447754
    7. ' of' → logprob: -12.000596046447754
    8. '```' → logprob: -12.250596046447754
    9. '   ' → logprob: -12.375596046447754
    10. 'of' → logprob: -12.500596046447754

Token 829: ' sous' (ID: 14487)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00654662074521184
    2. ' i' → logprob: -5.881546497344971
    3. 's' → logprob: -6.256546497344971
    4. 'som' → logprob: -7.131546497344971
    5. '[i' → logprob: -7.131546497344971
    6. '```' → logprob: -9.381546974182129
    7. ' sommet' → logprob: -10.006546974182129
    8. 'sub' → logprob: -10.131546974182129
    9. 'sou' → logprob: -11.631546974182129
    10. '(i' → logprob: -12.381546974182129

Token 830: '-ar' (ID: 31325)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.14365553855895996
    2. '[p' → logprob: -2.89365553855896
    3. '_ar' → logprob: -3.01865553855896
    4. 'tree' → logprob: -4.268655776977539
    5. ' arbre' → logprob: -5.268655776977539
    6. '_tree' → logprob: -5.393655776977539
    7. 'ar' → logprob: -6.893655776977539
    8. '-ar' → logprob: -7.143655776977539
    9. 'p' → logprob: -7.518655776977539
    10. '```' → logprob: -7.643655776977539

Token 831: 'bre' (ID: 9945)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.9994679093360901
    2. 'bre' → logprob: -1.1244678497314453
    3. '_ar' → logprob: -1.8744678497314453
    4. 'arb' → logprob: -3.3744678497314453
    5. '_tree' → logprob: -3.4994678497314453
    6. 'tree' → logprob: -3.9994678497314453
    7. ' arbre' → logprob: -4.249467849731445
    8. 'tre' → logprob: -4.499467849731445
    9. '-tree' → logprob: -5.499467849731445
    10. '-ar' → logprob: -5.499467849731445

Token 832: ' i' (ID: 575)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004920298233628273
    2. 'i' → logprob: -7.750492095947266
    3. '[' → logprob: -10.250492095947266
    4. '[p' → logprob: -11.750492095947266
    5. ' i' → logprob: -12.250492095947266
    6. '[parent' → logprob: -12.250492095947266
    7. '```' → logprob: -12.500492095947266
    8. 'p' → logprob: -13.500492095947266
    9. '(i' → logprob: -14.000492095947266
    10. '[j' → logprob: -14.500492095947266

Token 833: '
' (ID: 198)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.5073281526565552
    2. '[size' → logprob: -1.3823281526565552
    3. '[p' → logprob: -3.2573280334472656
    4. ' size' → logprob: -3.3823280334472656
    5. ' +' → logprob: -3.8823280334472656
    6. '+' → logprob: -4.382328033447266
    7. '   ' → logprob: -4.507328033447266
    8. '
' → logprob: -5.007328033447266
    9. ' p' → logprob: -5.257328033447266
    10. '[parent' → logprob: -5.382328033447266

Token 834: '   ' (ID: 271)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.5506935119628906
    2. '[parent' → logprob: -1.8006935119628906
    3. '[size' → logprob: -2.1756935119628906
    4. ' p' → logprob: -2.9256935119628906
    5. 'size' → logprob: -3.4256935119628906
    6. '[' → logprob: -3.6756935119628906
    7. ' size' → logprob: -4.425693511962891
    8. '   ' → logprob: -4.550693511962891
    9. 'p' → logprob: -5.925693511962891
    10. 'parent' → logprob: -6.175693511962891

Token 835: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' (adapté à ' size') → logprob: -0.045263152569532394
    2. ' size' → logprob: -3.1702630519866943
    3. '[size' → logprob: -6.795263290405273
    4. '
' → logprob: -7.170263290405273
    5. '   ' → logprob: -8.545263290405273
    6. ' 
' → logprob: -9.920263290405273
    7. '=size' → logprob: -10.420263290405273
    8. '[' → logprob: -10.920263290405273
    9. '	size' → logprob: -11.295263290405273
    10. '    
' → logprob: -11.545263290405273

Token 836: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -3.7697225252486533e-06
    2. '[' → logprob: -12.750003814697266
    3. ' [' → logprob: -14.500003814697266
    4. 'p' → logprob: -15.125003814697266
    5. '[parent' → logprob: -17.625003814697266
    6. '```' → logprob: -18.500003814697266
    7. '   ' → logprob: -18.875003814697266
    8. '[i' → logprob: -19.125003814697266
    9. '	p' → logprob: -19.375003814697266
    10. ' p' → logprob: -19.500003814697266

Token 837: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.256527304649353
    2. ']+=' → logprob: -1.506527304649353
    3. '+=' → logprob: -6.381527423858643
    4. '[p' → logprob: -6.506527423858643
    5. ']+' → logprob: -6.756527423858643
    6. '[i' → logprob: -8.506526947021484
    7. '[' → logprob: -11.006526947021484
    8. ')' → logprob: -11.631526947021484
    9. ' +=' → logprob: -13.131526947021484
    10. ' ]' → logprob: -13.256526947021484

Token 838: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0004131536406930536
    2. ' +=' → logprob: -8.125412940979004
    3. ']+=' → logprob: -9.375412940979004
    4. '=' → logprob: -10.625412940979004
    5. '+' → logprob: -11.875412940979004
    6. '+=(' → logprob: -14.500412940979004
    7. '[' → logprob: -15.875412940979004
    8. '=size' → logprob: -16.25041389465332
    9. '+='' → logprob: -16.37541389465332
    10. '+="' → logprob: -16.75041389465332

Token 839: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.03804412856698036
    2. ' size' → logprob: -3.2880442142486572
    3. '1' → logprob: -13.788043975830078
    4. ' ' → logprob: -14.163043975830078
    5. '(size' → logprob: -14.913043975830078
    6. '	size' → logprob: -15.038043975830078
    7. '   ' → logprob: -16.038043975830078
    8. '=size' → logprob: -16.913043975830078
    9. '[size' → logprob: -17.038043975830078
    10. '  ' → logprob: -17.913043975830078

Token 840: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.796184723294573e-06
    2. '[' → logprob: -12.375005722045898
    3. '```' → logprob: -14.250005722045898
    4. 'i' → logprob: -15.125005722045898
    5. '[p' → logprob: -15.500005722045898
    6. ' [' → logprob: -15.750005722045898
    7. '[
' → logprob: -16.5000057220459
    8. '[I' → logprob: -18.2500057220459
    9. '[int' → logprob: -18.6250057220459
    10. 'p' → logprob: -18.6250057220459

Token 841: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 842: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5356703400611877
    2. 'D' → logprob: -0.9106703400611877
    3. '<|end|>' → logprob: -5.410670280456543
    4. ' D' → logprob: -6.160670280456543
    5. '  ' → logprob: -6.535670280456543
    6. '```' → logprob: -6.785670280456543
    7. '    
' → logprob: -7.535670280456543
    8. ' ' → logprob: -7.660670280456543
    9. ')' → logprob: -7.910670280456543
    10. '#' → logprob: -8.035670280456543

Token 843: ' #' (ID: 1069)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00547907967120409
    2. '   ' → logprob: -5.255478858947754
    3. ' D' → logprob: -9.505478858947754
    4. ')' → logprob: -9.505478858947754
    5. '```' → logprob: -10.880478858947754
    6. '	D' → logprob: -11.255478858947754
    7. '#' (adapté à ' #') → logprob: -11.630478858947754
    8. '    ' → logprob: -11.630478858947754
    9. '<|end|>' → logprob: -11.630478858947754
    10. '  ' → logprob: -11.755478858947754

Token 844: ' On' (ID: 2160)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.2352385965641588e-05
    2. '   ' → logprob: -11.625012397766113
    3. ' D' → logprob: -12.875012397766113
    4. '#' → logprob: -14.625012397766113
    5. 'd' → logprob: -15.375012397766113
    6. '  ' → logprob: -17.000011444091797
    7. ' ' → logprob: -17.000011444091797
    8. '	D' → logprob: -17.500011444091797
    9. '```' → logprob: -17.625011444091797
    10. 'if' → logprob: -18.375011444091797

Token 845: ' addition' (ID: 5856)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.5470539331436157
    2. 'D' → logprob: -1.2970539331436157
    3. 'sub' → logprob: -3.422053813934326
    4. '[' → logprob: -3.547053813934326
    5. 'd' → logprob: -4.047053813934326
    6. '+=' → logprob: -4.672053813934326
    7. '   ' → logprob: -4.922053813934326
    8. 'def' → logprob: -4.922053813934326
    9. '_d' → logprob: -5.547053813934326
    10. ']' → logprob: -5.547053813934326

Token 846: 'ne' (ID: 611)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.2493085265159607
    2. '(p' → logprob: -2.6243085861206055
    3. '   ' → logprob: -2.7493085861206055
    4. '_sub' → logprob: -3.2493085861206055
    5. '[' → logprob: -4.2493085861206055
    6. '[parent' → logprob: -5.3743085861206055
    7. '[sub' → logprob: -5.3743085861206055
    8. ' D' → logprob: -5.6243085861206055
    9. ' +=' → logprob: -5.8743085861206055
    10. '=' → logprob: -5.8743085861206055

Token 847: ' aussi' (ID: 9894)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.016969475895166397
    2. 'size' → logprob: -4.516969680786133
    3. ' D' → logprob: -5.391969680786133
    4. ' size' → logprob: -7.766969680786133
    5. '   ' → logprob: -8.016969680786133
    6. '(D' → logprob: -8.891969680786133
    7. '(size' → logprob: -9.391969680786133
    8. 'le' → logprob: -9.641969680786133
    9. 'la' → logprob: -9.891969680786133
    10. ' ' → logprob: -10.141969680786133

Token 848: ' à' (ID: 1221)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.7330288290977478
    2. 'size' → logprob: -0.7330288290977478
    3. ' size' → logprob: -3.8580288887023926
    4. ' D' → logprob: -4.608028888702393
    5. '   ' → logprob: -5.233028888702393
    6. '(size' → logprob: -6.858028888702393
    7. 'd' → logprob: -8.358028411865234
    8. '2' → logprob: -8.483028411865234
    9. '1' → logprob: -8.858028411865234
    10. 'le' → logprob: -9.233028411865234

Token 849: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00028815300902351737
    2. ' D' → logprob: -8.250288009643555
    3. '   ' → logprob: -10.875288009643555
    4. 'd' → logprob: -13.000288009643555
    5. '	D' → logprob: -13.000288009643555
    6. 'parent' → logprob: -13.875288009643555
    7. '```' → logprob: -14.125288009643555
    8. 'p' → logprob: -15.375288009643555
    9. 'size' → logprob: -15.500288009643555
    10. '       ' → logprob: -15.500288009643555

Token 850: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -2.339278580620885e-06
    2. 'sub' → logprob: -13.500001907348633
    3. '_subplot' → logprob: -15.500001907348633
    4. 'D' → logprob: -16.125001907348633
    5. '```' → logprob: -16.250001907348633
    6. '[sub' → logprob: -16.500001907348633
    7. '_Sub' → logprob: -16.875001907348633
    8. '_SUB' → logprob: -17.000001907348633
    9. 'Sub' → logprob: -17.250001907348633
    10. '_desc' → logprob: -17.375001907348633

Token 851: 'tree' (ID: 19816)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.00023202638840302825
    2. 'sub' → logprob: -8.375231742858887
    3. '_tree' → logprob: -14.750231742858887
    4. 'tree' → logprob: -14.750231742858887
    5. '[sub' → logprob: -15.375231742858887
    6. ' subtree' → logprob: -15.750231742858887
    7. '_parent' → logprob: -15.875231742858887
    8. '_subplot' → logprob: -16.625232696533203
    9. '_SUB' → logprob: -17.875232696533203
    10. '```' → logprob: -18.125232696533203

Token 852: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -3.5716304410016164e-05
    2. 'p' → logprob: -10.375035285949707
    3. '[' → logprob: -13.250035285949707
    4. ' [' → logprob: -13.500035285949707
    5. '```' → logprob: -15.000035285949707
    6. '[parent' → logprob: -15.250035285949707
    7. '   ' → logprob: -15.375035285949707
    8. '
' → logprob: -16.125036239624023
    9. ' p' → logprob: -16.500036239624023
    10. '<p' → logprob: -17.000036239624023

Token 853: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007814108394086361
    2. '[' → logprob: -5.257813930511475
    3. 'size' → logprob: -7.382813930511475
    4. '[size' → logprob: -7.507813930511475
    5. ']' → logprob: -7.632813930511475
    6. ']+=' → logprob: -9.007814407348633
    7. '[D' → logprob: -9.257814407348633
    8. ' +=' → logprob: -9.257814407348633
    9. ' i' → logprob: -9.382814407348633
    10. '][' → logprob: -9.507814407348633

Token 854: ' la' (ID: 557)
  Prédit: '[size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[size' → logprob: -0.20350728929042816
    2. '+=' → logprob: -2.4535071849823
    3. ' +=' → logprob: -3.3285071849823
    4. '[i' → logprob: -3.7035071849823
    5. 'size' → logprob: -3.9535071849823
    6. '[' → logprob: -4.328507423400879
    7. '   ' → logprob: -5.578507423400879
    8. '+' → logprob: -8.078507423400879
    9. '(size' → logprob: -8.203507423400879
    10. '=size' → logprob: -8.203507423400879

Token 855: ' somme' (ID: 64484)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0007261329446919262
    2. ' size' → logprob: -7.250726222991943
    3. 'tail' → logprob: -12.375725746154785
    4. '   ' → logprob: -12.750725746154785
    5. '[size' → logprob: -13.000725746154785
    6. 'D' → logprob: -13.500725746154785
    7. '(size' → logprob: -14.375725746154785
    8. 'siz' → logprob: -14.500725746154785
    9. ' ' → logprob: -14.625725746154785
    10. ' taille' → logprob: -14.875725746154785

Token 856: ' des' (ID: 731)
  Prédit: '[size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[size' → logprob: -0.04679306969046593
    2. '(size' → logprob: -3.171792984008789
    3. 'size' → logprob: -5.671792984008789
    4. '[' → logprob: -8.546792984008789
    5. 'of' → logprob: -9.921792984008789
    6. '   ' → logprob: -10.796792984008789
    7. '=size' → logprob: -11.046792984008789
    8. '[i' → logprob: -11.296792984008789
    9. ' size' → logprob: -11.421792984008789
    10. ' (' → logprob: -11.546792984008789

Token 857: ' tailles' (ID: 169460)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.38800162076950073
    2. 'D' → logprob: -1.1380016803741455
    3. 'sizes' → logprob: -7.263001441955566
    4. ' size' → logprob: -8.513001441955566
    5. ' D' → logprob: -8.638001441955566
    6. 'sub' → logprob: -11.513001441955566
    7. 's' → logprob: -11.888001441955566
    8. ' ' → logprob: -12.138001441955566
    9. '(size' → logprob: -12.388001441955566
    10. '```' → logprob: -12.763001441955566

Token 858: ' des' (ID: 731)
  Prédit: '[size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[size' → logprob: -0.011237268336117268
    2. '[i' → logprob: -4.511237144470215
    3. 'size' → logprob: -8.636237144470215
    4. '(size' → logprob: -12.511237144470215
    5. '[' → logprob: -12.636237144470215
    6. '[p' → logprob: -13.511237144470215
    7. '   ' → logprob: -13.636237144470215
    8. 'of' → logprob: -14.011237144470215
    9. ' [' → logprob: -14.886237144470215
    10. ' size' → logprob: -15.011237144470215

Token 859: ' sous' (ID: 14487)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.2142811268568039
    2. 's' → logprob: -1.8392810821533203
    3. 'sub' → logprob: -3.8392810821533203
    4. 'D' → logprob: -4.96428108215332
    5. 'children' → logprob: -6.33928108215332
    6. ' size' → logprob: -6.46428108215332
    7. '[size' → logprob: -7.08928108215332
    8. ' sous' → logprob: -8.71428108215332
    9. '[' → logprob: -8.96428108215332
    10. ' D' → logprob: -9.21428108215332

Token 860: '-ar' (ID: 31325)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.22595255076885223
    2. 'ar' → logprob: -2.850952625274658
    3. 'sub' → logprob: -2.975952625274658
    4. '[i' → logprob: -3.100952625274658
    5. '_ar' → logprob: -3.850952625274658
    6. 'tree' → logprob: -5.475952625274658
    7. 'arb' → logprob: -5.725952625274658
    8. 'D' → logprob: -5.850952625274658
    9. 's' → logprob: -6.225952625274658
    10. '[sub' → logprob: -6.225952625274658

Token 861: 'bres' (ID: 88684)
  Prédit: 'bres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bres' → logprob: -0.5919598340988159
    2. 'arb' → logprob: -0.9669598340988159
    3. 'bre' → logprob: -3.7169599533081055
    4. 'ar' → logprob: -4.4669599533081055
    5. 'b' → logprob: -4.5919599533081055
    6. 'êtres' → logprob: -4.9669599533081055
    7. ' arbres' → logprob: -6.2169599533081055
    8. 'êtes' → logprob: -6.5919599533081055
    9. 'br' → logprob: -6.8419599533081055
    10. 'bes' → logprob: -6.9669599533081055

Token 862: ' en' (ID: 469)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3138992488384247
    2. '[size' → logprob: -1.313899278640747
    3. 'size' → logprob: -7.438899040222168
    4. 'i' → logprob: -11.188899040222168
    5. '[sub' → logprob: -11.563899040222168
    6. '   ' → logprob: -11.813899040222168
    7. '[' → logprob: -11.938899040222168
    8. '[parent' → logprob: -13.063899040222168
    9. ' [' → logprob: -13.313899040222168
    10. 'of' → logprob: -13.438899040222168

Token 863: '-dessous' (ID: 76632)
  Prédit: 'fants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fants' → logprob: -0.17072343826293945
    2. 'i' → logprob: -2.7957234382629395
    3. 'en' → logprob: -3.1707234382629395
    4. 'children' → logprob: -4.2957234382629395
    5. 'fant' → logprob: -4.4207234382629395
    6. 'child' → logprob: -4.5457234382629395
    7. 'plus' → logprob: -5.2957234382629395
    8. 's' → logprob: -5.5457234382629395
    9. ' enfants' → logprob: -6.0457234382629395
    10. 'D' → logprob: -6.5457234382629395

Token 864: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03860388323664665
    2. '[size' → logprob: -3.4136037826538086
    3. 'size' → logprob: -5.413603782653809
    4. '[' → logprob: -8.163603782653809
    5. '   ' → logprob: -9.413603782653809
    6. 'of' → logprob: -10.038603782653809
    7. ' [' → logprob: -10.288603782653809
    8. 'i' → logprob: -11.163603782653809
    9. ' size' → logprob: -11.413603782653809
    10. ' of' → logprob: -12.663603782653809

Token 865: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00043913270928896964
    2. 'p' → logprob: -8.125438690185547
    3. ' i' → logprob: -9.000438690185547
    4. '   ' → logprob: -11.500438690185547
    5. '```' → logprob: -12.125438690185547
    6. '[i' → logprob: -13.750438690185547
    7. ' p' → logprob: -14.500438690185547
    8. '	i' → logprob: -14.625438690185547
    9. 'l' → logprob: -14.875438690185547
    10. '       ' → logprob: -15.250438690185547

Token 866: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1707546710968018
    2. '   ' → logprob: -1.2957546710968018
    3. '[size' → logprob: -1.4207546710968018
    4. ' +' → logprob: -2.1707546710968018
    5. '+' → logprob: -3.0457546710968018
    6. '[' → logprob: -5.170754432678223
    7. 'size' → logprob: -5.545754432678223
    8. ' +=' → logprob: -6.795754432678223
    9. '```' → logprob: -8.045754432678223
    10. '[parent' → logprob: -8.295754432678223

Token 867: ' plus' (ID: 2932)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.027501488104462624
    2. ' size' → logprob: -3.6525015830993652
    3. '   ' → logprob: -6.777501583099365
    4. '+' → logprob: -11.152501106262207
    5. 'D' → logprob: -11.402501106262207
    6. ' D' → logprob: -11.652501106262207
    7. '	size' → logprob: -12.027501106262207
    8. '[size' → logprob: -12.652501106262207
    9. ' +' → logprob: -12.777501106262207
    10. '    ' → logprob: -12.902501106262207

Token 868: ' la' (ID: 557)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.002038083504885435
    2. ' size' → logprob: -6.50203800201416
    3. '
' → logprob: -8.62703800201416
    4. '1' → logprob: -8.87703800201416
    5. '2' → logprob: -9.37703800201416
    6. '   ' → logprob: -9.75203800201416
    7. 'D' → logprob: -10.00203800201416
    8. '(size' → logprob: -12.12703800201416
    9. '```' → logprob: -12.37703800201416
    10. '[size' → logprob: -12.62703800201416

Token 869: ' taille' (ID: 41644)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.0016099588247016072
    2. ' size' → logprob: -7.251609802246094
    3. '1' → logprob: -7.751609802246094
    4. '
' → logprob: -7.876609802246094
    5. '```' → logprob: -10.251609802246094
    6. '0' → logprob: -11.251609802246094
    7. '2' → logprob: -11.376609802246094
    8. 'D' → logprob: -11.751609802246094
    9. '[size' → logprob: -12.001609802246094
    10. '   ' → logprob: -12.751609802246094

Token 870: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.836499985889532e-05
    2. '[' → logprob: -10.5000581741333
    3. '[size' → logprob: -11.1250581741333
    4. '```' → logprob: -12.1250581741333
    5. 'size' → logprob: -13.1250581741333
    6. ' [' → logprob: -13.3750581741333
    7. '   ' → logprob: -13.5000581741333
    8. 'of' → logprob: -13.6250581741333
    9. 'i' → logprob: -13.8750581741333
    10. '[p' → logprob: -14.1250581741333

Token 871: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09243838489055634
    2. 'size' → logprob: -2.4674384593963623
    3. ' i' → logprob: -6.967438220977783
    4. '[i' → logprob: -6.967438220977783
    5. '[size' → logprob: -7.342438220977783
    6. ' size' → logprob: -7.842438220977783
    7. 'D' → logprob: -7.842438220977783
    8. 'p' → logprob: -9.967438697814941
    9. 'sub' → logprob: -10.217438697814941
    10. '```' → logprob: -10.842438697814941

Token 872: ' lui' (ID: 10623)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10567861795425415
    2. '[size' → logprob: -2.8556785583496094
    3. '   ' → logprob: -3.4806785583496094
    4. 'size' → logprob: -4.980678558349609
    5. '[' → logprob: -5.855678558349609
    6. '+' → logprob: -7.480678558349609
    7. ' +' → logprob: -7.480678558349609
    8. '```' → logprob: -8.60567855834961
    9. ' size' → logprob: -9.10567855834961
    10. '[D' → logprob: -9.10567855834961

Token 873: '-même' (ID: 41085)
  Prédit: '-même'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-même' → logprob: -0.012997271493077278
    2. 'm' → logprob: -4.387997150421143
    3. '-m' → logprob: -8.0129976272583
    4. '-mêmes' → logprob: -9.7629976272583
    5. '-' → logprob: -9.8879976272583
    6. '```' → logprob: -10.8879976272583
    7. '   ' → logprob: -11.1379976272583
    8. 'self' → logprob: -13.2629976272583
    9. ' ' → logprob: -13.2629976272583
    10. 'mem' → logprob: -13.3879976272583

Token 874: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6904937624931335
    2. '   ' → logprob: -1.1904938220977783
    3. ' +' → logprob: -2.4404938220977783
    4. '[size' → logprob: -2.6904938220977783
    5. 'size' → logprob: -3.6904938220977783
    6. 'D' → logprob: -5.065493583679199
    7. '+
' → logprob: -6.440493583679199
    8. '[' → logprob: -6.565493583679199
    9. '[i' → logprob: -6.815493583679199
    10. '+D' → logprob: -6.940493583679199

Token 875: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39128851890563965
    2. 'D' → logprob: -1.2662885189056396
    3. ' +=' → logprob: -4.766288757324219
    4. 'size' → logprob: -4.766288757324219
    5. '+' → logprob: -4.891288757324219
    6. ' +' → logprob: -5.641288757324219
    7. '[size' → logprob: -5.766288757324219
    8. '[i' → logprob: -6.141288757324219
    9. '+=' → logprob: -6.641288757324219
    10. ' D' → logprob: -6.641288757324219

Token 876: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.35206127166748047
    2. 'size' → logprob: -1.2270612716674805
    3. ' size' → logprob: -6.6020612716674805
    4. '   ' → logprob: -6.8520612716674805
    5. ' D' → logprob: -7.4770612716674805
    6. '+' → logprob: -7.9770612716674805
    7. '+D' → logprob: -9.10206127166748
    8. '
' → logprob: -9.97706127166748
    9. '+=' → logprob: -9.97706127166748
    10. '[size' → logprob: -10.97706127166748

Token 877: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -5.319370302458992e-06
    2. 'sub' → logprob: -13.625005722045898
    3. '_SUB' → logprob: -13.625005722045898
    4. '_s' → logprob: -14.500005722045898
    5. '_Sub' → logprob: -14.500005722045898
    6. '_subplot' → logprob: -14.750005722045898
    7. '[sub' → logprob: -14.750005722045898
    8. '_' → logprob: -14.875005722045898
    9. 'Sub' → logprob: -15.250005722045898
    10. '```' → logprob: -16.5000057220459

Token 878: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.00010533124441280961
    2. '_sub' → logprob: -9.750104904174805
    3. '_tree' → logprob: -10.500104904174805
    4. 'sub' → logprob: -11.500104904174805
    5. 'ub' → logprob: -12.500104904174805
    6. 'ree' → logprob: -13.250104904174805
    7. 'tre' → logprob: -13.625104904174805
    8. ' subtree' → logprob: -13.875104904174805
    9. 'trees' → logprob: -14.750104904174805
    10. 'ubble' → logprob: -15.125104904174805

Token 879: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.8193366486229934e-05
    2. '[' → logprob: -11.500018119812012
    3. ' [' → logprob: -12.500018119812012
    4. '[i' → logprob: -12.875018119812012
    5. 'p' → logprob: -13.750018119812012
    6. '   ' → logprob: -15.750018119812012
    7. ' p' → logprob: -16.375019073486328
    8. '```' → logprob: -16.750019073486328
    9. '

' → logprob: -17.375019073486328
    10. '[parent' → logprob: -17.500019073486328

Token 880: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11551544815301895
    2. '[i' → logprob: -2.7405154705047607
    3. ']+=' → logprob: -3.6155154705047607
    4. '[p' → logprob: -4.490515232086182
    5. '[' → logprob: -5.365515232086182
    6. '+=' → logprob: -6.990515232086182
    7. ']+' → logprob: -7.865515232086182
    8. ')' → logprob: -9.61551570892334
    9. '=' → logprob: -9.74051570892334
    10. ']=' → logprob: -9.99051570892334

Token 881: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.007094815373420715
    2. ' +=' → logprob: -5.007094860076904
    3. '[' → logprob: -8.757094383239746
    4. '=' → logprob: -9.132094383239746
    5. ']+=' → logprob: -9.632094383239746
    6. '+' → logprob: -10.382094383239746
    7. '   ' → logprob: -11.507094383239746
    8. '[i' → logprob: -13.132094383239746
    9. '```' → logprob: -13.132094383239746
    10. '+=(' → logprob: -13.757094383239746

Token 882: ' D' (ID: 415)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.5303232073783875
    2. 'D' → logprob: -0.9053232073783875
    3. ' size' → logprob: -5.280323028564453
    4. ' D' → logprob: -6.530323028564453
    5. '(size' → logprob: -8.030323028564453
    6. '   ' → logprob: -8.530323028564453
    7. ' ' → logprob: -10.780323028564453
    8. '(D' → logprob: -10.905323028564453
    9. '	D' → logprob: -11.405323028564453
    10. '  ' → logprob: -11.780323028564453

Token 883: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.10444854199886322
    2. '[i' → logprob: -2.3544485569000244
    3. 'sub' → logprob: -5.604448318481445
    4. '[sub' → logprob: -8.479448318481445
    5. '[size' → logprob: -9.604448318481445
    6. '```' → logprob: -9.604448318481445
    7. '[_' → logprob: -9.854448318481445
    8. 'size' → logprob: -10.729448318481445
    9. '_[' → logprob: -10.729448318481445
    10. 'Sub' → logprob: -10.979448318481445

Token 884: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.00019567293929867446
    2. 'sub' → logprob: -9.125195503234863
    3. 'ub' → logprob: -9.750195503234863
    4. '_sub' → logprob: -10.750195503234863
    5. '_tree' → logprob: -12.625195503234863
    6. 'tre' → logprob: -13.375195503234863
    7. ' subtree' → logprob: -14.750195503234863
    8. 'ree' → logprob: -15.250195503234863
    9. 'tr' → logprob: -15.250195503234863
    10. 't' → logprob: -15.375195503234863

Token 885: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003799104888457805
    2. '[p' → logprob: -8.25037956237793
    3. '[' → logprob: -9.25037956237793
    4. ' [' → logprob: -11.37537956237793
    5. 'i' → logprob: -12.50037956237793
    6. '```' → logprob: -12.50037956237793
    7. '[I' → logprob: -13.75037956237793
    8. 'p' → logprob: -14.37537956237793
    9. '[
' → logprob: -15.25037956237793
    10. ' i' → logprob: -15.50037956237793

Token 886: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759707689285278
    2. '+' → logprob: -0.8259707689285278
    3. '+i' → logprob: -11.450970649719238
    4. '[i' → logprob: -11.575970649719238
    5. '[size' → logprob: -12.950970649719238
    6. ']+' → logprob: -13.450970649719238
    7. ')' → logprob: -13.575970649719238
    8. '[' → logprob: -14.075970649719238
    9. ')+' → logprob: -14.200970649719238
    10. ']' → logprob: -14.325970649719238

Token 887: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5241343975067139
    2. '+' → logprob: -0.8991343975067139
    3. '   ' → logprob: -7.274134635925293
    4. 'size' → logprob: -8.649134635925293
    5. '+
' → logprob: -9.899134635925293
    6. ' +
' → logprob: -10.524134635925293
    7. '[size' → logprob: -10.899134635925293
    8. '<|end|>' → logprob: -11.524134635925293
    9. '```' → logprob: -11.649134635925293
    10. '<size' → logprob: -12.274134635925293

Token 888: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -2.868328920158092e-05
    2. ' size' → logprob: -10.625028610229492
    3. '1' → logprob: -13.125028610229492
    4. '   ' → logprob: -13.125028610229492
    5. ' ' → logprob: -15.125028610229492
    6. '  ' → logprob: -17.000028610229492
    7. '	size' → logprob: -18.000028610229492
    8. '[size' → logprob: -18.875028610229492
    9. '(size' → logprob: -19.125028610229492
    10. '    ' → logprob: -20.125028610229492

Token 889: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.3458322731312364e-06
    2. ' [' → logprob: -12.500007629394531
    3. '[' → logprob: -13.125007629394531
    4. 'i' → logprob: -13.500007629394531
    5. '   ' → logprob: -16.62500762939453
    6. '```' → logprob: -16.87500762939453
    7. ' i' → logprob: -17.00000762939453
    8. '[I' → logprob: -17.25000762939453
    9. '(i' → logprob: -18.12500762939453
    10. ' ' → logprob: -18.62500762939453

Token 890: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027406275272369385
    2. '<|end|>' → logprob: -3.6524062156677246
    3. '   ' → logprob: -7.777406215667725
    4. '}' → logprob: -8.027406692504883
    5. ']' → logprob: -8.652406692504883
    6. '
' → logprob: -9.652406692504883
    7. '<|end|>' → logprob: -9.777406692504883
    8. ')
' → logprob: -11.027406692504883
    9. '```' → logprob: -11.152406692504883
    10. ' )' → logprob: -11.527406692504883

Token 891: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47670701146125793
    2. '<|end|>' → logprob: -1.4767069816589355
    3. '```' → logprob: -2.3517069816589355
    4. 'if' → logprob: -3.4767069816589355
    5. '\n' → logprob: -4.6017069816589355
    6. '#' → logprob: -5.1017069816589355
    7. ')' → logprob: -6.2267069816589355
    8. 'for' → logprob: -6.2267069816589355
    9. 'return' → logprob: -7.2267069816589355
    10. ' if' → logprob: -7.3517069816589355

Token 892: ' Le' (ID: 2018)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0019669353496283293
    2. '#' → logprob: -6.376966953277588
    3. 'for' → logprob: -8.75196647644043
    4. 'print' → logprob: -9.50196647644043
    5. 'root' → logprob: -10.62696647644043
    6. 'return' → logprob: -12.75196647644043
    7. ' if' → logprob: -13.00196647644043
    8. '```' → logprob: -13.87696647644043
    9. '#if' → logprob: -14.37696647644043
    10. '#print' → logprob: -15.37696647644043

Token 893: ' sommet' (ID: 130502)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0036695559974759817
    2. ' if' → logprob: -6.003669738769531
    3. '#' → logprob: -7.878669738769531
    4. '
' → logprob: -8.253669738769531
    5. '```' → logprob: -8.253669738769531
    6. 'print' → logprob: -9.253669738769531
    7. 'else' → logprob: -9.878669738769531
    8. 'return' → logprob: -10.378669738769531
    9. 'root' → logprob: -10.878669738769531
    10. '``' → logprob: -11.128669738769531

Token 894: ' rac' (ID: 12334)
  Prédit: 'rac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rac' → logprob: -0.8000577092170715
    2. 'root' → logprob: -1.0500576496124268
    3. ' rac' → logprob: -2.6750576496124268
    4. '#' → logprob: -3.0500576496124268
    5. 'r' → logprob: -3.9250576496124268
    6. 'de' → logprob: -4.050057888031006
    7. 'rest' → logprob: -4.425057888031006
    8. 'd' → logprob: -4.675057888031006
    9. ' de' → logprob: -4.925057888031006
    10. 'final' → logprob: -5.925057888031006

Token 895: 'ine' (ID: 514)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.6401760578155518
    2. 'ine' → logprob: -1.0151760578155518
    3. 'ce' → logprob: -3.1401760578155518
    4. 'he' → logprob: -3.5151760578155518
    5. 'ice' → logprob: -3.8901760578155518
    6. 'ime' → logprob: -4.765175819396973
    7. 'h' → logprob: -6.015175819396973
    8. '#' → logprob: -6.265175819396973
    9. 'es' → logprob: -6.890175819396973
    10. 'c' → logprob: -7.390175819396973

Token 896: ' doit' (ID: 21822)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3449058532714844
    2. ' =' → logprob: -1.4699058532714844
    3. 'root' → logprob: -3.0949058532714844
    4. '=root' → logprob: -4.469905853271484
    5. '_root' → logprob: -5.719905853271484
    6. '#' → logprob: -7.344905853271484
    7. 'r' → logprob: -7.594905853271484
    8. 'i' → logprob: -9.094905853271484
    9. '=i' → logprob: -9.094905853271484
    10. '=r' → logprob: -9.344905853271484

Token 897: ' être' (ID: 9104)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004301457200199366
    2. ' =' → logprob: -5.50430154800415
    3. 'd' → logprob: -9.879301071166992
    4. 'être' → logprob: -10.754301071166992
    5. '=root' → logprob: -11.004301071166992
    6. 'i' → logprob: -11.129301071166992
    7. 'idx' → logprob: -11.254301071166992
    8. '=None' → logprob: -11.379301071166992
    9. '=i' → logprob: -11.379301071166992
    10. 'index' → logprob: -11.504301071166992

Token 898: ' le' (ID: 505)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.5235296487808228
    2. 'd' → logprob: -0.8985296487808228
    3. 'None' → logprob: -9.398530006408691
    4. ' D' → logprob: -9.523530006408691
    5. 'i' → logprob: -9.648530006408691
    6. ' d' → logprob: -9.648530006408691
    7. 'N' → logprob: -10.523530006408691
    8. 'len' → logprob: -11.023530006408691
    9. 'parent' → logprob: -11.523530006408691
    10. ' ' → logprob: -12.023530006408691

Token 899: ' sommet' (ID: 130502)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5240883827209473
    2. 'D' → logprob: -0.8990883827209473
    3. ' D' → logprob: -7.649088382720947
    4. ' d' → logprob: -8.024087905883789
    5. 'N' → logprob: -9.899087905883789
    6. 'i' → logprob: -10.024087905883789
    7. 'len' → logprob: -10.649087905883789
    8. 'root' → logprob: -11.149087905883789
    9. 'parent' → logprob: -12.149087905883789
    10. 'None' → logprob: -12.399087905883789

Token 900: ' à' (ID: 1221)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.49238428473472595
    2. 'd' → logprob: -1.3673843145370483
    3. 'rest' → logprob: -3.242384195327759
    4. '=' → logprob: -3.992384195327759
    5. 'r' → logprob: -4.242384433746338
    6. 'D' → logprob: -4.367384433746338
    7. 'dont' → logprob: -4.492384433746338
    8. 'rac' → logprob: -4.617384433746338
    9. 'pour' → logprob: -4.992384433746338
    10. 'for' → logprob: -5.367384433746338

Token 901: ' la' (ID: 557)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4029235243797302
    2. 'D' → logprob: -1.527923583984375
    3. 'l' → logprob: -2.527923583984375
    4. 'index' → logprob: -3.777923583984375
    5. 'indice' → logprob: -5.027923583984375
    6. 'la' → logprob: -6.652923583984375
    7. 'val' → logprob: -6.902923583984375
    8. 'i' → logprob: -7.027923583984375
    9. 'ind' → logprob: -7.527923583984375
    10. ' d' → logprob: -7.902923583984375

Token 902: ' valeur' (ID: 41664)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.8219113349914551
    2. 'd' → logprob: -0.8219113349914551
    3. 'val' → logprob: -2.946911334991455
    4. 'fin' → logprob: -3.071911334991455
    5. 'index' → logprob: -4.696911334991455
    6. 'position' → logprob: -5.696911334991455
    7. 'indice' → logprob: -5.946911334991455
    8. 'rac' → logprob: -6.821911334991455
    9. '#' → logprob: -6.946911334991455
    10. 'fond' → logprob: -6.946911334991455

Token 903: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00579002033919096
    2. 'min' → logprob: -5.5057902336120605
    3. 'd' → logprob: -6.6307902336120605
    4. 'max' → logprob: -8.755789756774902
    5. 'minimum' → logprob: -9.255789756774902
    6. ' D' → logprob: -9.505789756774902
    7. 'minimal' → logprob: -10.630789756774902
    8. 'root' → logprob: -11.130789756774902
    9. 'lowest' → logprob: -12.255789756774902
    10. 'rest' → logprob: -12.380789756774902

Token 904: '_desc' (ID: 26683)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.19537828862667084
    2. '_root' → logprob: -2.945378303527832
    3. '[root' → logprob: -3.320378303527832
    4. '_desc' → logprob: -3.695378303527832
    5. 'D' → logprob: -4.320378303527832
    6. '[-' → logprob: -4.570378303527832
    7. '[D' → logprob: -4.570378303527832
    8. 'desc' → logprob: -4.820378303527832
    9. '=' → logprob: -4.945378303527832
    10. '=D' → logprob: -5.945378303527832

Token 905: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00028278882382437587
    2. '-' → logprob: -9.250283241271973
    3. '=' → logprob: -9.750283241271973
    4. ' =' → logprob: -10.375283241271973
    5. '[' → logprob: -10.500283241271973
    6. '```' → logprob: -10.625283241271973
    7. '=-' → logprob: -10.875283241271973
    8. '`' → logprob: -12.250283241271973
    9. '#' → logprob: -12.500283241271973
    10. '[
' → logprob: -13.000283241271973

Token 906: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.282920129597187e-05
    2. '-' → logprob: -11.500012397766113
    3. '#' → logprob: -14.375012397766113
    4. ' ' → logprob: -14.625012397766113
    5. ']' → logprob: -15.375012397766113
    6. '```' → logprob: -15.375012397766113
    7. '(-' → logprob: -15.937512397766113
    8. '0' → logprob: -15.937512397766113
    9. '...' → logprob: -16.25001335144043
    10. ' -' → logprob: -16.31251335144043

Token 907: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3158019185066223
    2. ']
' → logprob: -1.3158018589019775
    3. '#' → logprob: -7.315802097320557
    4. '],' → logprob: -7.440802097320557
    5. 'root' → logprob: -7.565802097320557
    6. ']
' → logprob: -7.940802097320557
    7. '].' → logprob: -9.315801620483398
    8. '']' → logprob: -9.940801620483398
    9. ']

' → logprob: -10.190801620483398
    10. 'd' → logprob: -10.190801620483398

Token 908: ' (' (ID: 350)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.07270538806915283
    2. 'r' → logprob: -2.6977052688598633
    3. 'i' → logprob: -5.947705268859863
    4. ' =' → logprob: -10.072705268859863
    5. '=' → logprob: -10.822705268859863
    6. ' root' → logprob: -10.947705268859863
    7. '```' → logprob: -10.947705268859863
    8. 'parent' → logprob: -11.072705268859863
    9. 'p' → logprob: -11.447705268859863
    10. '
' → logprob: -11.572705268859863

Token 909: 'plus' (ID: 11601)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.19317664206027985
    2. 'd' → logprob: -2.318176746368408
    3. 'i' → logprob: -3.318176746368408
    4. '#' → logprob: -4.693176746368408
    5. 'rac' → logprob: -5.193176746368408
    6. 'r' → logprob: -5.318176746368408
    7. ')' → logprob: -5.443176746368408
    8. 'le' → logprob: -5.818176746368408
    9. '],' → logprob: -5.943176746368408
    10. '),' → logprob: -6.318176746368408

Token 910: ' petite' (ID: 28119)
  Prédit: 'grand'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grand' → logprob: -0.24524366855621338
    2. 'haut' → logprob: -1.9952436685562134
    3. 'ha' → logprob: -4.120243549346924
    4. 'le' → logprob: -4.120243549346924
    5. 'é' → logprob: -4.370243549346924
    6. ' grand' → logprob: -5.120243549346924
    7. '=' → logprob: -5.370243549346924
    8. 'd' → logprob: -5.870243549346924
    9. '#' → logprob: -5.870243549346924
    10. 'la' → logprob: -5.995243549346924

Token 911: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.812423825263977
    2. ')' → logprob: -1.062423825263977
    3. ']' → logprob: -2.0624237060546875
    4. '])' → logprob: -2.6874237060546875
    5. 'value' → logprob: -5.8124237060546875
    6. 'd' → logprob: -6.1874237060546875
    7. ')]' → logprob: -6.1874237060546875
    8. ')
' → logprob: -6.3124237060546875
    9. ' valeur' → logprob: -7.1874237060546875
    10. ')])' → logprob: -7.1874237060546875

Token 912: ' restante' (ID: 130202)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.8578034043312073
    2. ')' → logprob: -0.9828034043312073
    3. 'd' → logprob: -2.8578033447265625
    4. ')
' → logprob: -2.9828033447265625
    5. ',' → logprob: -3.7328033447265625
    6. '#' → logprob: -3.7328033447265625
    7. ']' → logprob: -4.1078033447265625
    8. 'i' → logprob: -4.4828033447265625
    9. ').' → logprob: -5.7328033447265625
    10. ']
' → logprob: -5.9828033447265625

Token 913: ' après' (ID: 16460)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.7451776266098022
    2. ')' → logprob: -1.3701776266098022
    3. ')
' → logprob: -2.120177745819092
    4. ']' → logprob: -2.620177745819092
    5. ']
' → logprob: -3.495177745819092
    6. 'i' → logprob: -3.745177745819092
    7. 'd' → logprob: -4.370177745819092
    8. '#' → logprob: -5.245177745819092
    9. ',' → logprob: -6.120177745819092
    10. 'r' → logprob: -7.745177745819092

Token 914: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.3281852602958679
    2. 'tri' → logprob: -2.5781853199005127
    3. 'la' → logprob: -2.5781853199005127
    4. 'ex' → logprob: -2.8281853199005127
    5. 'l' → logprob: -4.453185081481934
    6. 'supp' → logprob: -4.703185081481934
    7. 'avoir' → logprob: -4.828185081481934
    8. 'pop' → logprob: -4.828185081481934
    9. '#' → logprob: -5.453185081481934
    10. 't' → logprob: -5.703185081481934

Token 915: ' boucle' (ID: 174211)
  Prédit: 'bou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bou' → logprob: -0.34842976927757263
    2. 'for' → logprob: -1.848429799079895
    3. 'tri' → logprob: -2.9734296798706055
    4. '#' → logprob: -3.4734296798706055
    5. 'par' → logprob: -4.0984296798706055
    6. 'construction' → logprob: -4.4734296798706055
    7. 'loop' → logprob: -5.0984296798706055
    8. 're' → logprob: -5.3484296798706055
    9. 'desc' → logprob: -5.5984296798706055
    10. ' boucle' → logprob: -5.5984296798706055

Token 916: ')
' (ID: 446)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.015862736850976944
    2. 'i' → logprob: -4.390862941741943
    3. 'r' → logprob: -6.015862941741943
    4. '#' → logprob: -8.015862464904785
    5. ' root' → logprob: -8.390862464904785
    6. 'd' → logprob: -9.390862464904785
    7. '```' → logprob: -9.515862464904785
    8. '
' → logprob: -10.015862464904785
    9. ' i' → logprob: -11.015862464904785
    10. ')' → logprob: -11.265862464904785

Token 917: 'root' (ID: 5488)
  Prédit: 'root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.021195808425545692
    2. 'r' → logprob: -3.896195888519287
    3. 'i' → logprob: -7.396195888519287
    4. ' root' → logprob: -10.896195411682129
    5. '```' → logprob: -11.646195411682129
    6. 'parent' → logprob: -12.271195411682129
    7. 'rac' → logprob: -12.771195411682129
    8. 'p' → logprob: -13.271195411682129
    9. '``' → logprob: -14.521195411682129
    10. '
' → logprob: -15.021195411682129

Token 918: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6329588294029236
    2. '=' → logprob: -0.7579588294029236
    3. '_' → logprob: -8.38295841217041
    4. '_idx' → logprob: -10.25795841217041
    5. '_index' → logprob: -10.25795841217041
    6. ',' → logprob: -10.38295841217041
    7. '_=' → logprob: -12.25795841217041
    8. ' =
' → logprob: -12.38295841217041
    9. ')' → logprob: -13.00795841217041
    10. ' ' → logprob: -13.25795841217041

Token 919: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.023246178403496742
    2. ' d' → logprob: -3.7732462882995605
    3. 'D' → logprob: -15.398245811462402
    4. '	d' → logprob: -15.648245811462402
    5. ' ' → logprob: -15.773245811462402
    6. '   ' → logprob: -16.02324676513672
    7. '```' → logprob: -17.27324676513672
    8. '_d' → logprob: -17.64824676513672
    9. '  ' → logprob: -17.64824676513672
    10. '[d' → logprob: -17.83574676513672

Token 920: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.060271263122558594
    2. '_sub' → logprob: -3.5602712631225586
    3. '_desc' → logprob: -4.685271263122559
    4. '_parent' → logprob: -4.810271263122559
    5. ' =' → logprob: -4.935271263122559
    6. '=' → logprob: -5.810271263122559
    7. 'To' → logprob: -7.185271263122559
    8. '_' → logprob: -7.310271263122559
    9. 'to' → logprob: -8.810271263122559
    10. '=_' → logprob: -8.935271263122559

Token 921: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.0006345203728415072
    2. 'i' → logprob: -7.375634670257568
    3. 'd' → logprob: -12.62563419342041
    4. 'I' → logprob: -13.50063419342041
    5. '_to' → logprob: -13.50063419342041
    6. 'to' → logprob: -14.87563419342041
    7. '_d' → logprob: -15.37563419342041
    8. '```' → logprob: -15.50063419342041
    9. 'D' → logprob: -15.87563419342041
    10. '_t' → logprob: -16.125635147094727

Token 922: '[D' (ID: 159299)
  Prédit: '[D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[D' → logprob: -0.00034416402922943234
    2. '(D' → logprob: -8.000344276428223
    3. '[' → logprob: -12.250344276428223
    4. 'D' → logprob: -12.875344276428223
    5. '[d' → logprob: -13.875344276428223
    6. '[(' → logprob: -15.625344276428223
    7. '([' → logprob: -16.000343322753906
    8. '```' → logprob: -17.000343322753906
    9. ' [' → logprob: -17.625343322753906
    10. '[
' → logprob: -17.750343322753906

Token 923: '_desc' (ID: 26683)
  Prédit: '_desc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_desc' → logprob: -2.6060808522743173e-05
    2. 'desc' → logprob: -10.625025749206543
    3. '_sub' → logprob: -14.250025749206543
    4. '_DESC' → logprob: -14.750025749206543
    5. '_' → logprob: -15.625025749206543
    6. '_des' → logprob: -15.875025749206543
    7. 'Desc' → logprob: -16.25002670288086
    8. '_decl' → logprob: -16.50002670288086
    9. '```' → logprob: -16.62502670288086
    10. '_dec' → logprob: -17.37502670288086

Token 924: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -9.65101717156358e-05
    2. '-' → logprob: -9.375096321105957
    3. '][-' → logprob: -11.875096321105957
    4. '[' → logprob: -13.125096321105957
    5. '[
' → logprob: -13.875096321105957
    6. ']' → logprob: -14.500096321105957
    7. '
' → logprob: -14.750096321105957
    8. '```' → logprob: -15.125096321105957
    9. '   ' → logprob: -16.375097274780273
    10. '[::-' → logprob: -16.875097274780273

Token 925: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.500001907348633
    3. '-' → logprob: -15.125001907348633
    4. '2' → logprob: -15.875001907348633
    5. '```' → logprob: -16.250001907348633
    6. ']' → logprob: -16.500001907348633
    7. '   ' → logprob: -16.562501907348633
    8. '
' → logprob: -16.562501907348633
    9. '])' → logprob: -17.687501907348633
    10. ' -' → logprob: -17.937501907348633

Token 926: ']]

' (ID: 84024)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005832957685925066
    2. ']
' → logprob: -7.625583171844482
    3. ')]' → logprob: -9.75058364868164
    4. ']]' → logprob: -11.12558364868164
    5. ']

' → logprob: -11.75058364868164
    6. ']
' → logprob: -11.87558364868164
    7. '']' → logprob: -13.00058364868164
    8. ' ]' → logprob: -13.75058364868164
    9. '()]' → logprob: -14.12558364868164
    10. '`]' → logprob: -14.25058364868164

Token 927: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16653113067150116
    2. 'if' → logprob: -1.9165310859680176
    3. '#' → logprob: -5.416531085968018
    4. 'parent' → logprob: -6.791531085968018
    5. 'for' → logprob: -7.416531085968018
    6. '#print' → logprob: -10.041531562805176
    7. '```' → logprob: -10.541531562805176
    8. 'assert' → logprob: -10.916531562805176
    9. 'return' → logprob: -11.166531562805176
    10. '<|end|>' → logprob: -11.541531562805176

Token 928: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05042845755815506
    2. 'print' → logprob: -3.0504283905029297
    3. '#' → logprob: -6.92542839050293
    4. 'parent' → logprob: -7.67542839050293
    5. 'for' → logprob: -7.92542839050293
    6. '```' → logprob: -11.05042839050293
    7. ' if' → logprob: -12.05042839050293
    8. '#print' → logprob: -12.55042839050293
    9. 'assert' → logprob: -13.05042839050293
    10. 'return' → logprob: -13.30042839050293

Token 929: ' vér' (ID: 42524)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01320153009146452
    2. '#' → logprob: -5.138201713562012
    3. 'print' → logprob: -5.263201713562012
    4. 'for' → logprob: -6.263201713562012
    5. 'parent' → logprob: -9.513201713562012
    6. ' if' → logprob: -9.763201713562012
    7. '#print' → logprob: -11.013201713562012
    8. '#if' → logprob: -11.888201713562012
    9. '```' → logprob: -13.763201713562012
    10. 'continue' → logprob: -14.013201713562012

Token 930: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.001221178681589663
    2. 'if' → logprob: -6.751221179962158
    3. 'ifi' → logprob: -10.876220703125
    4. 'ife' → logprob: -11.626220703125
    5. '#' → logprob: -11.876220703125
    6. '```' → logprob: -12.251220703125
    7. 'ifié' → logprob: -12.626220703125
    8. 'ifiez' → logprob: -12.751220703125
    9. 'i' → logprob: -13.751220703125
    10. 'ifier' → logprob: -14.126220703125

Token 931: ' une' (ID: 2463)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012801689095795155
    2. 'parent' → logprob: -4.512801647186279
    3. 'bl' → logprob: -7.262801647186279
    4. ' if' → logprob: -7.637801647186279
    5. '(parent' → logprob: -7.887801647186279
    6. '(bl' → logprob: -9.137802124023438
    7. ' parent' → logprob: -10.512802124023438
    8. 'for' → logprob: -10.887802124023438
    9. 'not' → logprob: -11.387802124023438
    10. 'len' → logprob: -11.887802124023438

Token 932: ' condition' (ID: 7060)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8674444556236267
    2. 'll' → logprob: -1.2424445152282715
    3. 'for' → logprob: -1.9924445152282715
    4. '#' → logprob: -3.2424445152282715
    5. '
' → logprob: -3.6174445152282715
    6. 'rray' → logprob: -4.4924445152282715
    7. '=' → logprob: -4.7424445152282715
    8. 'def' → logprob: -4.8674445152282715
    9. 'parent' → logprob: -4.8674445152282715
    10. 'f' → logprob: -4.9924445152282715

Token 933: ' supplémentaire' (ID: 111252)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04356690123677254
    2. 'for' → logprob: -3.418566942214966
    3. ' =' → logprob: -5.293566703796387
    4. ' if' → logprob: -6.043566703796387
    5. '=' → logprob: -6.168566703796387
    6. ' for' → logprob: -8.668566703796387
    7. ':' → logprob: -8.793566703796387
    8. '#' → logprob: -11.668566703796387
    9. 'not' → logprob: -11.918566703796387
    10. '
' → logprob: -12.043566703796387

Token 934: ' pour' (ID: 1930)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.017645858228206635
    2. ' if' → logprob: -4.392645835876465
    3. 'for' → logprob: -5.517645835876465
    4. ':' → logprob: -7.392645835876465
    5. ' =' → logprob: -8.767645835876465
    6. '
' → logprob: -9.017645835876465
    7. ' for' → logprob: -9.642645835876465
    8. '#' → logprob: -10.267645835876465
    9. '=' → logprob: -10.517645835876465
    10. 'assert' → logprob: -10.767645835876465

Token 935: ' val' (ID: 1459)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.009264754131436348
    2. 'all' → logprob: -5.384264945983887
    3. 'v' → logprob: -6.509264945983887
    4. 'parent' → logprob: -7.259264945983887
    5. 's' → logprob: -7.384264945983887
    6. ' i' → logprob: -8.134264945983887
    7. 'som' → logprob: -8.259264945983887
    8. 'node' → logprob: -8.634264945983887
    9. 'p' → logprob: -8.759264945983887
    10. 'u' → logprob: -8.884264945983887

Token 936: 'ider' (ID: 1970)
  Prédit: 'ider'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ider' → logprob: -0.6803313493728638
    2. 'if' → logprob: -1.0553313493728638
    3. 'ifier' → logprob: -2.805331230163574
    4. 'ide' → logprob: -3.430331230163574
    5. 'for' → logprob: -3.805331230163574
    6. 'id' → logprob: -4.930331230163574
    7. 'ify' → logprob: -5.055331230163574
    8. 'er' → logprob: -5.180331230163574
    9. 'i' → logprob: -5.305331230163574
    10. 'e' → logprob: -6.305331230163574

Token 937: ' que' (ID: 661)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17467479407787323
    2. 'if' → logprob: -1.9246747493743896
    3. 'all' → logprob: -4.424674987792969
    4. 'not' → logprob: -6.924674987792969
    5. ' for' → logprob: -7.424674987792969
    6. 'root' → logprob: -7.549674987792969
    7. 'i' → logprob: -9.799674987792969
    8. 'parent' → logprob: -9.924674987792969
    9. ' if' → logprob: -10.299674987792969
    10. 'len' → logprob: -10.674674987792969

Token 938: ' la' (ID: 557)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.07329701632261276
    2. 'all' → logprob: -2.8232970237731934
    3. 'not' → logprob: -5.573297023773193
    4. 'parent' → logprob: -5.698297023773193
    5. 'root' → logprob: -6.448297023773193
    6. 'D' → logprob: -7.073297023773193
    7. ' bl' → logprob: -7.073297023773193
    8. 'len' → logprob: -7.823297023773193
    9. ' all' → logprob: -8.823296546936035
    10. 'i' → logprob: -9.073296546936035

Token 939: ' reconstruction' (ID: 68152)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.3909275531768799
    2. 'D' → logprob: -1.7659275531768799
    3. 'parent' → logprob: -2.51592755317688
    4. 'all' → logprob: -3.51592755317688
    5. 'size' → logprob: -4.265927314758301
    6. 'root' → logprob: -4.390927314758301
    7. 'not' → logprob: -4.890927314758301
    8. 'len' → logprob: -5.015927314758301
    9. 'sum' → logprob: -7.265927314758301
    10. ' D' → logprob: -8.6409273147583

Token 940: ' est' (ID: 893)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09002456814050674
    2. 'for' → logprob: -2.590024471282959
    3. ' if' → logprob: -4.965024471282959
    4. ' for' → logprob: -6.340024471282959
    5. '=' → logprob: -7.215024471282959
    6. 'root' → logprob: -7.465024471282959
    7. '#' → logprob: -7.965024471282959
    8. ':' → logprob: -8.590024948120117
    9. '[root' → logprob: -9.590024948120117
    10. '==' → logprob: -9.715024948120117

Token 941: ' correcte' (ID: 173783)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -1.3783228397369385
    2. 'True' → logprob: -1.5033228397369385
    3. 'possible' → logprob: -1.6283228397369385
    4. 'correct' → logprob: -1.8783228397369385
    5. 'valid' → logprob: -2.0033228397369385
    6. ' True' → logprob: -4.128322601318359
    7. 'v' → logprob: -4.503322601318359
    8. 'val' → logprob: -4.753322601318359
    9. ' correcte' → logprob: -6.128322601318359
    10. '   ' → logprob: -6.628322601318359

Token 942: ' :
' (ID: 10039)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3868989646434784
    2. 'for' → logprob: -1.1368989944458008
    3. ' for' → logprob: -12.0118989944458
    4. '```' → logprob: -12.3868989944458
    5. 'i' → logprob: -12.5118989944458
    6. 'parent' → logprob: -12.6368989944458
    7. 'total' → logprob: -12.6368989944458
    8. ' if' → logprob: -13.1368989944458
    9. 'valid' → logprob: -13.5118989944458
    10. 'sum' → logprob: -13.6368989944458

Token 943: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06203524023294449
    2. 'for' → logprob: -2.812035322189331
    3. 'bl' → logprob: -9.81203556060791
    4. '```' → logprob: -11.56203556060791
    5. 'valid' → logprob: -13.43703556060791
    6. ' if' → logprob: -14.81203556060791
    7. ' for' → logprob: -14.93703556060791
    8. 'i' → logprob: -15.31203556060791
    9. 'total' → logprob: -15.43703556060791
    10. 'sum' → logprob: -15.56203556060791

Token 944: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16029977798461914
    2. 'if' → logprob: -1.9102997779846191
    3. 'bl' → logprob: -10.160299301147461
    4. 'all' → logprob: -10.535299301147461
    5. 'valid' → logprob: -12.035299301147461
    6. '```' → logprob: -13.160299301147461
    7. ' for' → logprob: -13.910299301147461
    8. 'assert' → logprob: -15.160299301147461
    9. '
' → logprob: -15.535299301147461
    10. 'total' → logprob: -15.660299301147461

Token 945: ' somme' (ID: 64484)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06336615234613419
    2. 'for' → logprob: -2.938366174697876
    3. 'bl' → logprob: -4.813365936279297
    4. '#' → logprob: -8.813365936279297
    5. 'valid' → logprob: -9.938365936279297
    6. 'total' → logprob: -10.438365936279297
    7. 'root' → logprob: -10.563365936279297
    8. 'all' → logprob: -10.688365936279297
    9. ' if' → logprob: -11.188365936279297
    10. 'sum' → logprob: -11.938365936279297

Token 946: ' des' (ID: 731)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -1.087328553199768
    2. ' =' → logprob: -1.837328553199768
    3. '_des' → logprob: -1.837328553199768
    4. '_sub' → logprob: -2.7123284339904785
    5. 'for' → logprob: -2.9623284339904785
    6. '=' → logprob: -2.9623284339904785
    7. 'D' → logprob: -3.2123284339904785
    8. 'sub' → logprob: -3.9623284339904785
    9. 'de' → logprob: -4.2123284339904785
    10. '_' → logprob: -4.3373284339904785

Token 947: ' sous' (ID: 14487)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.007195535581558943
    2. 'size' → logprob: -5.257195472717285
    3. 'sizes' → logprob: -7.382195472717285
    4. 'for' → logprob: -7.757195472717285
    5. 'sub' → logprob: -8.382195472717285
    6. ' D' → logprob: -8.757195472717285
    7. 'd' → logprob: -8.882195472717285
    8. 'edges' → logprob: -9.382195472717285
    9. 'children' → logprob: -10.132195472717285
    10. 'parent' → logprob: -10.132195472717285

Token 948: '-ar' (ID: 31325)
  Prédit: '_ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ar' → logprob: -0.4115113615989685
    2. '-ar' → logprob: -1.7865114212036133
    3. 'ar' → logprob: -3.0365114212036133
    4. 'tree' → logprob: -3.7865114212036133
    5. ' arbres' → logprob: -3.7865114212036133
    6. 'arb' → logprob: -4.036511421203613
    7. '_tree' → logprob: -4.286511421203613
    8. 'trees' → logprob: -4.911511421203613
    9. '_t' → logprob: -5.161511421203613
    10. '_' → logprob: -5.286511421203613

Token 949: 'bres' (ID: 88684)
  Prédit: 'bres'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bres' → logprob: -0.017844481393694878
    2. 'arb' → logprob: -4.7678446769714355
    3. 'bre' → logprob: -5.2678446769714355
    4. 'bo' → logprob: -6.3928446769714355
    5. 'b' → logprob: -7.6428446769714355
    6. '```' → logprob: -8.267844200134277
    7. 'ar' → logprob: -8.517844200134277
    8. 'bes' → logprob: -8.642844200134277
    9. 'r' → logprob: -8.767844200134277
    10. ' arbres' → logprob: -9.142844200134277

Token 950: ' de' (ID: 334)
  Prédit: '[root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[root' → logprob: -0.10237277299165726
    2. 'des' → logprob: -2.727372884750366
    3. 'for' → logprob: -4.352372646331787
    4. '#' → logprob: -5.477372646331787
    5. '[parent' → logprob: -5.602372646331787
    6. 'D' → logprob: -5.977372646331787
    7. 'sub' → logprob: -6.102372646331787
    8. 'de' → logprob: -6.602372646331787
    9. 'root' → logprob: -6.977372646331787
    10. ' des' → logprob: -6.977372646331787

Token 951: ' la' (ID: 557)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.017506467178463936
    2. 'size' → logprob: -5.1425065994262695
    3. 'les' → logprob: -5.1425065994262695
    4. 'children' → logprob: -6.3925065994262695
    5. 'root' → logprob: -6.7675065994262695
    6. 'la' → logprob: -7.7675065994262695
    7. ' D' → logprob: -8.01750659942627
    8. 'l' → logprob: -8.01750659942627
    9. 'all' → logprob: -8.14250659942627
    10. 'le' → logprob: -8.14250659942627

Token 952: ' rac' (ID: 12334)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.45386120676994324
    2. 'D' → logprob: -1.7038612365722656
    3. 'size' → logprob: -2.5788612365722656
    4. 'sub' → logprob: -2.9538612365722656
    5. 'tail' → logprob: -3.2038612365722656
    6. 's' → logprob: -4.828861236572266
    7. 'parent' → logprob: -6.078861236572266
    8. '[root' → logprob: -6.953861236572266
    9. 'for' → logprob: -7.203861236572266
    10. 'som' → logprob: -7.453861236572266

Token 953: 'ine' (ID: 514)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.28444230556488037
    2. 'é' → logprob: -2.65944242477417
    3. 'ar' → logprob: -3.03444242477417
    4. 'ée' → logprob: -3.53444242477417
    5. 'er' → logprob: -4.53444242477417
    6. 'ee' → logprob: -4.65944242477417
    7. 'être' → logprob: -4.78444242477417
    8. 'tree' → logprob: -4.90944242477417
    9. 'es' → logprob: -5.03444242477417
    10. 'ê' → logprob: -5.03444242477417

Token 954: ' doit' (ID: 21822)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10010086745023727
    2. '==' → logprob: -3.2251007556915283
    3. ' ==' → logprob: -3.6001007556915283
    4. '#' → logprob: -4.850100994110107
    5. 'D' → logprob: -5.100100994110107
    6. '+' → logprob: -5.225100994110107
    7. 'for' → logprob: -5.475100994110107
    8. 's' → logprob: -7.225100994110107
    9. 'assert' → logprob: -7.225100994110107
    10. 'should' → logprob: -7.475100994110107

Token 955: ' être' (ID: 9104)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7568361759185791
    2. 'être' → logprob: -1.381836175918579
    3. ' ==' → logprob: -1.631836175918579
    4. ' être' → logprob: -3.256836175918579
    5. '=' → logprob: -3.881836175918579
    6. '#' → logprob: -4.6318359375
    7. 'égal' → logprob: -5.7568359375
    8. 'exact' → logprob: -5.8818359375
    9. 'equal' → logprob: -6.3818359375
    10. ' égal' → logprob: -6.5068359375

Token 956: ' ég' (ID: 33150)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.2021453082561493
    2. 'N' → logprob: -1.8271453380584717
    3. '0' → logprob: -4.077145099639893
    4. 'size' → logprob: -5.702145099639893
    5. 'equal' → logprob: -7.702145099639893
    6. '=' → logprob: -8.20214557647705
    7. '==' → logprob: -8.32714557647705
    8. ' D' → logprob: -8.70214557647705
    9. 'root' → logprob: -8.95214557647705
    10. '   ' → logprob: -9.20214557647705

Token 957: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.004300745669752359
    2. 'al' → logprob: -5.754300594329834
    3. 'uale' → logprob: -7.254300594329834
    4. 'a' → logprob: -8.754301071166992
    5. 'aux' → logprob: -10.129301071166992
    6. 'nale' → logprob: -10.629301071166992
    7. 'aule' → logprob: -10.879301071166992
    8. '```' → logprob: -10.879301071166992
    9. 'ual' → logprob: -11.254301071166992
    10. '`' → logprob: -11.504301071166992

Token 958: ' à' (ID: 1221)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.46145233511924744
    2. 'D' → logprob: -1.5864523649215698
    3. 'à' → logprob: -2.8364522457122803
    4. 'N' → logprob: -2.9614522457122803
    5. ' à' → logprob: -3.4614522457122803
    6. ' size' → logprob: -4.836452484130859
    7. '   ' → logprob: -5.711452484130859
    8. '#' → logprob: -6.211452484130859
    9. '=size' → logprob: -6.586452484130859
    10. 'au' → logprob: -6.711452484130859

Token 959: ' la' (ID: 557)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5803422927856445
    2. 'D' → logprob: -0.8303422927856445
    3. '0' → logprob: -6.0803422927856445
    4. 'size' → logprob: -6.4553422927856445
    5. ' D' → logprob: -9.205342292785645
    6. '2' → logprob: -9.330342292785645
    7. ' N' → logprob: -9.455342292785645
    8. 'root' → logprob: -9.705342292785645
    9. 'd' → logprob: -9.955342292785645
    10. ' ' → logprob: -10.205342292785645

Token 960: ' valeur' (ID: 41664)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.021176310256123543
    2. 'D' → logprob: -4.146176338195801
    3. 'size' → logprob: -5.646176338195801
    4. '2' → logprob: -7.396176338195801
    5. '(N' → logprob: -7.896176338195801
    6. '0' → logprob: -8.1461763381958
    7. 'root' → logprob: -9.3961763381958
    8. 'sum' → logprob: -9.6461763381958
    9. 'd' → logprob: -10.5211763381958
    10. 'total' → logprob: -11.1461763381958

Token 961: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.01101021096110344
    2. 'd' → logprob: -5.38601016998291
    3. 'root' → logprob: -6.13601016998291
    4. '[D' → logprob: -6.26101016998291
    5. '[root' → logprob: -7.13601016998291
    6. 'if' → logprob: -7.88601016998291
    7. '=' → logprob: -8.51101016998291
    8. ' D' → logprob: -8.63601016998291
    9. '(D' → logprob: -8.76101016998291
    10. '#' → logprob: -9.38601016998291

Token 962: '[root' (ID: 185287)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00015705463010817766
    2. ' if' → logprob: -9.125157356262207
    3. 'for' → logprob: -11.125157356262207
    4. '```' → logprob: -11.250157356262207
    5. '   ' → logprob: -12.125157356262207
    6. '#' → logprob: -12.625157356262207
    7. '
' → logprob: -12.875157356262207
    8. '=' → logprob: -13.375157356262207
    9. 'root' → logprob: -13.625157356262207
    10. ' =' → logprob: -14.000157356262207

Token 963: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028157932683825493
    2. '[root' → logprob: -3.903157949447632
    3. '']' → logprob: -5.403157711029053
    4. ' ]' → logprob: -7.403157711029053
    5. '])' → logprob: -7.778157711029053
    6. ']
' → logprob: -8.153158187866211
    7. 'root' → logprob: -8.153158187866211
    8. '[' → logprob: -8.278158187866211
    9. ')' → logprob: -8.403158187866211
    10. '],' → logprob: -9.028158187866211

Token 964: ' attend' (ID: 13384)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.6286106983898208e-05
    2. ' if' → logprob: -11.125016212463379
    3. '```' → logprob: -14.625016212463379
    4. 'assert' → logprob: -14.750016212463379
    5. '
' → logprob: -15.750016212463379
    6. 'for' → logprob: -16.250017166137695
    7. '   ' → logprob: -16.500017166137695
    8. 'bl' → logprob: -16.875017166137695
    9. '=' → logprob: -17.000017166137695
    10. '#' → logprob: -17.500017166137695

Token 965: 'ue' (ID: 466)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.2698328197002411
    2. 'ue' → logprob: -2.1448328495025635
    3. 'ale' → logprob: -3.2698328495025635
    4. 'uer' → logprob: -3.3948328495025635
    5. 're' → logprob: -3.6448328495025635
    6. 'e' → logprob: -4.269832611083984
    7. 'D' → logprob: -5.769832611083984
    8. 'ure' → logprob: -6.394832611083984
    9. 'endre' → logprob: -7.894832611083984
    10. 'ente' → logprob: -8.019832611083984

Token 966: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -5.88418151892256e-05
    2. ' if' → logprob: -10.250059127807617
    3. '
' → logprob: -11.375059127807617
    4. 'bl' → logprob: -12.000059127807617
    5. '   ' → logprob: -13.500059127807617
    6. 'for' → logprob: -13.625059127807617
    7. '#' → logprob: -13.750059127807617
    8. 'assert' → logprob: -14.250059127807617
    9. '```' → logprob: -14.500059127807617
    10. ' =' → logprob: -15.000059127807617

Token 967: 'bl' (ID: 1751)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -8.65707261255011e-06
    2. 'bl' → logprob: -12.250008583068848
    3. '```' → logprob: -13.125008583068848
    4. ' if' → logprob: -13.250008583068848
    5. '``' → logprob: -19.375009536743164
    6. 'for' → logprob: -19.625009536743164
    7. '
' → logprob: -20.000009536743164
    8. '   ' → logprob: -20.000009536743164
    9. 'assert' → logprob: -20.875009536743164
    10. '#' → logprob: -21.000009536743164

Token 968: ' &=' (ID: 35621)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011167141608893871
    2. 'and' → logprob: -5.261167049407959
    3. ' and' → logprob: -5.636167049407959
    4. ' =' → logprob: -6.136167049407959
    5. '==' → logprob: -8.761167526245117
    6. ' &=' → logprob: -10.761167526245117
    7. 'if' → logprob: -13.011167526245117
    8. '&' → logprob: -13.136167526245117
    9. '=True' → logprob: -14.261167526245117
    10. ' ==' → logprob: -14.886167526245117

Token 969: ' (' (ID: 350)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.4428795576095581
    2. '(D' → logprob: -1.067879557609558
    3. ' D' → logprob: -4.442879676818848
    4. ' (' → logprob: -6.317879676818848
    5. '(' → logprob: -7.692879676818848
    6. '   ' → logprob: -11.192879676818848
    7. '(
' → logprob: -11.317879676818848
    8. ' ' → logprob: -11.817879676818848
    9. '	D' → logprob: -11.817879676818848
    10. '((' → logprob: -12.442879676818848

Token 970: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -9.019237768370658e-05
    2. ' D' → logprob: -9.375090599060059
    3. '   ' → logprob: -12.625090599060059
    4. '(D' → logprob: -14.000090599060059
    5. '	D' → logprob: -14.875090599060059
    6. 'd' → logprob: -15.250090599060059
    7. ' ' → logprob: -15.500090599060059
    8. '  ' → logprob: -16.250089645385742
    9. '       ' → logprob: -16.875089645385742
    10. ')' → logprob: -17.000089645385742

Token 971: '_sub' (ID: 11572)
  Prédit: '[root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -0.01584278792142868
    2. '_sub' → logprob: -4.265842914581299
    3. 'root' → logprob: -6.890842914581299
    4. 'sub' → logprob: -7.890842914581299
    5. '[sub' → logprob: -9.26584243774414
    6. '[' → logprob: -9.76584243774414
    7. '_root' → logprob: -10.26584243774414
    8. ' [' → logprob: -10.64084243774414
    9. '```' → logprob: -11.51584243774414
    10. '(root' → logprob: -11.51584243774414

Token 972: 'tree' (ID: 19816)
  Prédit: 'tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.049189940094947815
    2. '[root' → logprob: -3.049190044403076
    3. 'root' → logprob: -7.549190044403076
    4. '_tree' → logprob: -9.674189567565918
    5. 'tre' → logprob: -11.924189567565918
    6. '_root' → logprob: -13.049189567565918
    7. 't' → logprob: -13.674189567565918
    8. '(root' → logprob: -14.049189567565918
    9. '=root' → logprob: -14.924189567565918
    10. 'mtree' → logprob: -15.424189567565918

Token 973: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -1.3782830137643032e-05
    2. '[' → logprob: -12.00001335144043
    3. 'root' → logprob: -12.62501335144043
    4. ' [' → logprob: -13.75001335144043
    5. '(root' → logprob: -14.25001335144043
    6. '==' → logprob: -14.37501335144043
    7. ')[' → logprob: -14.87501335144043
    8. '][' → logprob: -15.00001335144043
    9. '=root' → logprob: -15.00001335144043
    10. '```' → logprob: -15.62501335144043

Token 974: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.840094804763794
    2. '==' → logprob: -1.215094804763794
    3. ']==' → logprob: -2.340094804763794
    4. ' ==' → logprob: -2.340094804763794
    5. '+' → logprob: -2.590094804763794
    6. ' +' → logprob: -6.090094566345215
    7. ']+' → logprob: -7.715094566345215
    8. '[' → logprob: -8.090094566345215
    9. '[root' → logprob: -8.090094566345215
    10. ' ]' → logprob: -8.465094566345215

Token 975: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.39286360144615173
    2. '==' → logprob: -1.1428636312484741
    3. '+' → logprob: -5.267863750457764
    4. ' +' → logprob: -8.017863273620605
    5. '=' → logprob: -8.642863273620605
    6. ')' → logprob: -8.767863273620605
    7. '==
' → logprob: -9.392863273620605
    8. '[' → logprob: -11.017863273620605
    9. ' =' → logprob: -11.517863273620605
    10. ' ' → logprob: -11.517863273620605

Token 976: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.014232022687792778
    2. ' D' → logprob: -4.764232158660889
    3. 'N' → logprob: -5.264232158660889
    4. 'd' → logprob: -8.63923168182373
    5. ' N' → logprob: -9.51423168182373
    6. ' ' → logprob: -10.13923168182373
    7. 'size' → logprob: -10.26423168182373
    8. '   ' → logprob: -10.63923168182373
    9. '(D' → logprob: -11.13923168182373
    10. '(N' → logprob: -11.13923168182373

Token 977: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -1.5690089639974758e-05
    2. 'root' → logprob: -11.125015258789062
    3. '[D' → logprob: -14.500015258789062
    4. '[' → logprob: -16.625015258789062
    5. '(root' → logprob: -16.750015258789062
    6. 'D' → logprob: -17.000015258789062
    7. '[parent' → logprob: -17.375015258789062
    8. ' root' → logprob: -17.375015258789062
    9. '=root' → logprob: -17.625015258789062
    10. 'd' → logprob: -17.750015258789062

Token 978: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42906391620635986
    2. '])' → logprob: -1.0540639162063599
    3. ' )' → logprob: -8.67906379699707
    4. ']' → logprob: -9.80406379699707
    5. ')
' → logprob: -10.42906379699707
    6. ')])' → logprob: -10.55406379699707
    7. ' ])' → logprob: -10.80406379699707
    8. '))' → logprob: -11.17906379699707
    9. ')]' → logprob: -11.92906379699707
    10. '])
' → logprob: -12.05406379699707

Token 979: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0038902189116925
    2. 'print' → logprob: -6.003890037536621
    3. '
' → logprob: -6.753890037536621
    4. '```' → logprob: -8.878890037536621
    5. ' if' → logprob: -9.628890037536621
    6. '<|end|>' → logprob: -11.253890037536621
    7. 'for' → logprob: -11.503890037536621
    8. '#' → logprob: -11.628890037536621
    9. 'return' → logprob: -12.253890037536621
    10. ' 
' → logprob: -14.003890037536621

Token 980: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0564331205387134e-05
    2. 'print' → logprob: -11.62501049041748
    3. '#' → logprob: -14.37501049041748
    4. 'for' → logprob: -14.50001049041748
    5. ' if' → logprob: -14.87501049041748
    6. '```' → logprob: -16.625011444091797
    7. 'import' → logprob: -17.000011444091797
    8. 'If' → logprob: -20.250011444091797
    9. 'from' → logprob: -21.375011444091797
    10. 'output' → logprob: -21.375011444091797

Token 981: ' tout' (ID: 5501)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.5777291059494019
    2. ' bl' → logprob: -1.2027291059494019
    3. ' not' → logprob: -2.2027292251586914
    4. 'not' → logprob: -3.5777292251586914
    5. '(bl' → logprob: -11.827729225158691
    6. '
' → logprob: -12.827729225158691
    7. ' ' → logprob: -13.827729225158691
    8. 'b' → logprob: -13.952729225158691
    9. ' ' → logprob: -14.327729225158691
    10. '_bl' → logprob: -15.327729225158691

Token 982: ' s' (ID: 265)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.4997194707393646
    2. ':' → logprob: -1.124719500541687
    3. 'not' → logprob: -3.4997193813323975
    4. ' not' → logprob: -3.7497193813323975
    5. ' bl' → logprob: -4.374719619750977
    6. 'if' → logprob: -7.124719619750977
    7. '==' → logprob: -7.999719619750977
    8. ':
' → logprob: -8.374719619750977
    9. '(bl' → logprob: -8.374719619750977
    10. '   ' → logprob: -8.499719619750977

Token 983: ''est' (ID: 6616)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1319482922554016
    2. ':
' → logprob: -3.381948232650757
    3. 'ur' → logprob: -3.631948232650757
    4. 'u' → logprob: -3.756948232650757
    5. 'bl' → logprob: -4.381948471069336
    6. 'uccess' → logprob: -5.006948471069336
    7. 'e' → logprob: -6.006948471069336
    8. '#' → logprob: -6.006948471069336
    9. 'uite' → logprob: -6.256948471069336
    10. ':#' → logprob: -6.631948471069336

Token 984: ' bien' (ID: 5340)
  Prédit: 'bien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bien' → logprob: -0.04391605779528618
    2. ' bien' → logprob: -3.2939159870147705
    3. 'bon' → logprob: -6.16891622543335
    4. 'pass' → logprob: -6.54391622543335
    5. ' True' → logprob: -7.04391622543335
    6. 'v' → logprob: -7.91891622543335
    7. 'correct' → logprob: -7.91891622543335
    8. 'True' → logprob: -8.043915748596191
    9. 'Bien' → logprob: -9.668915748596191
    10. 'valid' → logprob: -9.668915748596191

Token 985: ' passé' (ID: 40520)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.003617647336795926
    2. ' passé' → logprob: -6.253617763519287
    3. '_pass' → logprob: -6.753617763519287
    4. 'bien' → logprob: -9.003617286682129
    5. 'passed' → logprob: -9.253617286682129
    6. 'print' → logprob: -9.628617286682129
    7. 'passes' → logprob: -9.628617286682129
    8. ':' → logprob: -10.253617286682129
    9. ' pass' → logprob: -10.753617286682129
    10. ' ' → logprob: -11.003617286682129

Token 986: ',' (ID: 11)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49947285652160645
    2. ':' → logprob: -0.9994728565216064
    3. ':
' → logprob: -3.7494728565216064
    4. ' if' → logprob: -7.624472618103027
    5. ' and' → logprob: -7.749472618103027
    6. 'print' → logprob: -8.124472618103027
    7. 'and' → logprob: -8.124472618103027
    8. '#' → logprob: -11.499472618103027
    9. ',' → logprob: -11.749472618103027
    10. '   ' → logprob: -12.374472618103027

Token 987: ' on' (ID: 402)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010920838452875614
    2. ' if' → logprob: -5.260921001434326
    3. 'for' → logprob: -5.760921001434326
    4. 'print' → logprob: -6.010921001434326
    5. ' for' → logprob: -9.885920524597168
    6. ' print' → logprob: -11.010920524597168
    7. '   ' → logprob: -13.010920524597168
    8. '#' → logprob: -14.635920524597168
    9. 'import' → logprob: -14.635920524597168
    10. '```' → logprob: -16.635921478271484

Token 988: ' affiche' (ID: 127479)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014403834007680416
    2. ' if' → logprob: -4.264403820037842
    3. ':' → logprob: -8.389404296875
    4. 'print' → logprob: -12.139404296875
    5. '#' → logprob: -12.514404296875
    6. 'for' → logprob: -13.639404296875
    7. ':
' → logprob: -13.639404296875
    8. '```' → logprob: -14.514404296875
    9. 'import' → logprob: -15.264404296875
    10. ' print' → logprob: -15.264404296875

Token 989: ' chaque' (ID: 21194)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.37780481576919556
    2. '"' → logprob: -1.5028047561645508
    3. ''' → logprob: -3.002804756164551
    4. 'print' → logprob: -4.002804756164551
    5. '("' → logprob: -4.502804756164551
    6. '('' → logprob: -4.752804756164551
    7. 'bl' → logprob: -6.502804756164551
    8. '
' → logprob: -6.752804756164551
    9. '(bl' → logprob: -7.502804756164551
    10. 'len' → logprob: -8.00280475616455

Token 990: ' ar' (ID: 646)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.0011336666066199541
    2. 'print' → logprob: -7.751133441925049
    3. 'for' → logprob: -8.376133918762207
    4. 'line' → logprob: -8.751133918762207
    5. '
' → logprob: -9.251133918762207
    6. 'e' → logprob: -9.376133918762207
    7. '(edge' → logprob: -10.126133918762207
    8. ' edge' → logprob: -10.251133918762207
    9. '```' → logprob: -11.251133918762207
    10. 'edges' → logprob: -11.376133918762207

Token 991: 'ête' (ID: 16808)
  Prédit: 'ête'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.3356139063835144
    2. 'e' → logprob: -1.5856139659881592
    3. 't' → logprob: -2.960613965988159
    4. 'c' → logprob: -5.33561372756958
    5. 'g' → logprob: -5.58561372756958
    6. 'êt' → logprob: -5.71061372756958
    7. 'bre' → logprob: -5.96061372756958
    8. 'é' → logprob: -6.58561372756958
    9. 'r' → logprob: -6.58561372756958
    10. 'ète' → logprob: -6.71061372756958

Token 992: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3241254985332489
    2. 'if' → logprob: -1.3241255283355713
    3. '
' → logprob: -4.699125289916992
    4. ' for' → logprob: -6.824125289916992
    5. '   ' → logprob: -7.949125289916992
    6. ' if' → logprob: -9.199125289916992
    7. '```' → logprob: -9.699125289916992
    8. '\n' → logprob: -9.949125289916992
    9. 'else' → logprob: -10.324125289916992
    10. '    
' → logprob: -12.074125289916992

Token 993: ' chacune' (ID: 127465)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16072671115398407
    2. 'for' → logprob: -1.9107266664505005
    3. 'else' → logprob: -8.160726547241211
    4. '
' → logprob: -9.535726547241211
    5. ' if' → logprob: -9.535726547241211
    6. ' for' → logprob: -9.910726547241211
    7. '   ' → logprob: -10.910726547241211
    8. '```' → logprob: -13.660726547241211
    9. '#' → logprob: -13.785726547241211
    10. 'print' → logprob: -14.410726547241211

Token 994: ' sur' (ID: 1512)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5630425214767456
    2. 'print' → logprob: -1.4380425214767456
    3. 'en' → logprob: -2.438042640686035
    4. 'in' → logprob: -3.438042640686035
    5. ' en' → logprob: -4.188042640686035
    6. 'sur' → logprob: -4.188042640686035
    7. ' in' → logprob: -4.563042640686035
    8. 'dans' → logprob: -4.813042640686035
    9. 'if' → logprob: -5.313042640686035
    10. ' dans' → logprob: -5.438042640686035

Token 995: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -1.197327733039856
    2. '\n' → logprob: -1.322327733039856
    3. ''\' → logprob: -1.322327733039856
    4. 'print' → logprob: -2.8223276138305664
    5. 'la' → logprob: -3.9473276138305664
    6. 'l' → logprob: -4.072327613830566
    7. 'une' → logprob: -4.072327613830566
    8. ' la' → logprob: -4.072327613830566
    9. '"\' → logprob: -4.572327613830566
    10. ''une' → logprob: -4.947327613830566

Token 996: ' ligne' (ID: 19583)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1593227982521057
    2. 'print' → logprob: -2.534322738647461
    3. 'ligne' → logprob: -3.034322738647461
    4. 'nou' → logprob: -5.159322738647461
    5. 'new' → logprob: -5.409322738647461
    6. 'newline' → logprob: -5.534322738647461
    7. 'n' → logprob: -5.659322738647461
    8. 'line' → logprob: -7.784322738647461
    9. '"\' → logprob: -8.284322738647461
    10. '
' → logprob: -8.409322738647461

Token 997: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.5690089639974758e-05
    2. 'for' → logprob: -11.750015258789062
    3. '```' → logprob: -12.250015258789062
    4. ' if' → logprob: -13.375015258789062
    5. '
' → logprob: -13.625015258789062
    6. '``' → logprob: -15.750015258789062
    7. '\n' → logprob: -16.250015258789062
    8. '   ' → logprob: -19.000015258789062
    9. '`
' → logprob: -19.125015258789062
    10. 'print' → logprob: -19.500015258789062

Token 998: 'ordre' (ID: 59831)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0126524418592453
    2. 'for' → logprob: -4.512652397155762
    3. '   ' → logprob: -7.137652397155762
    4. 'else' → logprob: -7.387652397155762
    5. ' if' → logprob: -8.762652397155762
    6. ' for' → logprob: -10.887652397155762
    7. '
' → logprob: -11.762652397155762
    8. '```' → logprob: -12.262652397155762
    9. 'elif' → logprob: -13.637652397155762
    10. 'print' → logprob: -14.887652397155762

Token 999: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.389771431684494
    2. '=' → logprob: -1.7647714614868164
    3. ' =' → logprob: -3.2647714614868164
    4. 'in' → logprob: -3.3897714614868164
    5. ' for' → logprob: -3.8897714614868164
    6. ':' → logprob: -4.889771461486816
    7. ' in' → logprob: -5.264771461486816
    8. '   ' → logprob: -5.389771461486816
    9. 'def' → logprob: -5.389771461486816
    10. 'dans' → logprob: -5.514771461486816

Token 1000: ' la' (ID: 557)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.14281125366687775
    2. 'print' → logprob: -2.5178112983703613
    3. 'for' → logprob: -3.2678112983703613
    4. '(edges' → logprob: -5.642811298370361
    5. ' edges' → logprob: -5.767811298370361
    6. 'les' → logprob: -6.017811298370361
    7. 'la' → logprob: -6.392811298370361
    8. 'l' → logprob: -6.892811298370361
    9. 'appearance' → logprob: -7.392811298370361
    10. '```' → logprob: -7.767811298370361

Token 1001: ' construction' (ID: 9770)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.060808923095464706
    2. 'print' → logprob: -3.5608088970184326
    3. 'for' → logprob: -3.5608088970184326
    4. ' edges' → logprob: -6.935809135437012
    5. '#' → logprob: -7.935809135437012
    6. 'len' → logprob: -8.310809135437012
    7. 'range' → logprob: -8.560809135437012
    8. '(edges' → logprob: -8.560809135437012
    9. 'append' → logprob: -9.560809135437012
    10. ' for' → logprob: -9.935809135437012

Token 1002: ')
' (ID: 446)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03323458507657051
    2. ' for' → logprob: -4.283234596252441
    3. ':' → logprob: -4.408234596252441
    4. ')' → logprob: -6.158234596252441
    5. '   ' → logprob: -6.158234596252441
    6. ':
' → logprob: -6.533234596252441
    7. 'if' → logprob: -7.783234596252441
    8. '):' → logprob: -8.158234596252441
    9. ')
' → logprob: -8.908234596252441
    10. '):
' → logprob: -9.408234596252441

Token 1003: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.988221684878226e-06
    2. '```' → logprob: -12.000006675720215
    3. 'for' → logprob: -14.250006675720215
    4. ' if' → logprob: -16.25000762939453
    5. '``' → logprob: -16.50000762939453
    6. '
' → logprob: -19.00000762939453
    7. 'else' → logprob: -20.62500762939453
    8. 'If' → logprob: -20.62500762939453
    9. 'elif' → logprob: -20.62500762939453
    10. 'ifs' → logprob: -22.37500762939453

Token 1004: ' bl' (ID: 1162)
  Prédit: 'bl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bl' → logprob: -0.0619683600962162
    2. ' bl' → logprob: -2.8119683265686035
    3. '(bl' → logprob: -14.811968803405762
    4. ' ' → logprob: -15.686968803405762
    5. 'b' → logprob: -17.061967849731445
    6. 'not' → logprob: -17.686967849731445
    7. '   ' → logprob: -17.811967849731445
    8. 'Bl' → logprob: -17.811967849731445
    9. ' ' → logprob: -18.311967849731445
    10. ' not' → logprob: -18.561967849731445

Token 1005: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004078878089785576
    2. ':
' → logprob: -5.5040788650512695
    3. ' :' → logprob: -15.62907886505127
    4. ':
' → logprob: -16.004079818725586
    5. '   ' → logprob: -16.754079818725586
    6. ':#' → logprob: -17.629079818725586
    7. ':\' → logprob: -18.254079818725586
    8. ':

' → logprob: -18.629079818725586
    9. ':`' → logprob: -18.754079818725586
    10. '==' → logprob: -19.379079818725586

Token 1006: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5766452550888062
    2. 'for' → logprob: -0.8266452550888062
    3. ' for' → logprob: -7.326645374298096
    4. '	for' → logprob: -10.201644897460938
    5. '```' → logprob: -11.576644897460938
    6. 'print' → logprob: -14.201644897460938
    7. '       ' → logprob: -15.201644897460938
    8. '
' → logprob: -15.826644897460938
    9. '   ' → logprob: -16.576644897460938
    10. '\' → logprob: -16.826644897460938

Token 1007: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.8444881536415778e-05
    2. '   ' → logprob: -11.000028610229492
    3. ' for' → logprob: -11.750028610229492
    4. 'print' (adapté à ' print') → logprob: -12.500028610229492
    5. '```' → logprob: -15.750028610229492
    6. '	for' → logprob: -17.750028610229492
    7. '
' → logprob: -18.625028610229492
    8. '``' → logprob: -20.625028610229492
    9. 'import' → logprob: -20.875028610229492
    10. '\' → logprob: -22.375028610229492

Token 1008: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.022964978590607643
    2. '(*' → logprob: -4.272964954376221
    3. '("\' → logprob: -5.147964954376221
    4. '(len' → logprob: -6.022964954376221
    5. '()' → logprob: -8.272965431213379
    6. '(' → logprob: -8.397965431213379
    7. ''\' → logprob: -11.022965431213379
    8. 'len' → logprob: -11.522965431213379
    9. '(*(' → logprob: -11.647965431213379
    10. '('' → logprob: -12.647965431213379

Token 1009: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.2471589798224159e-05
    2. '\n' → logprob: -11.625012397766113
    3. '
' → logprob: -12.750012397766113
    4. ''\' → logprob: -15.250012397766113
    5. 'join' → logprob: -15.500012397766113
    6. ''.' → logprob: -16.37501335144043
    7. '"\' → logprob: -18.87501335144043
    8. ''n' → logprob: -19.12501335144043
    9. '
' → logprob: -19.37501335144043
    10. ' n' → logprob: -19.50001335144043

Token 1010: ''.' (ID: 6120)
  Prédit: ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''.' → logprob: -0.09171918779611588
    2. '.join' → logprob: -2.591719150543213
    3. 'join' → logprob: -4.841719150543213
    4. '.' → logprob: -5.591719150543213
    5. '".' → logprob: -7.591719150543213
    6. '''.' → logprob: -7.716719150543213
    7. ').' → logprob: -9.591719627380371
    8. 'print' → logprob: -9.716719627380371
    9. '`.' → logprob: -10.341719627380371
    10. '.j' → logprob: -12.966719627380371

Token 1011: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.080963092041202e-06
    2. 'print' → logprob: -12.625004768371582
    3. ''.' → logprob: -13.500004768371582
    4. ' join' → logprob: -15.750004768371582
    5. '.join' → logprob: -16.0000057220459
    6. 'jo' → logprob: -17.5000057220459
    7. '```' → logprob: -17.5000057220459
    8. ').' → logprob: -18.2500057220459
    9. 'j' → logprob: -18.2500057220459
    10. '''.' → logprob: -18.7500057220459

Token 1012: '(edges' (ID: 185298)
  Prédit: '(edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edges' → logprob: -0.011047935113310814
    2. 'edges' → logprob: -4.511047840118408
    3. ' edges' → logprob: -15.886048316955566
    4. '.edges' → logprob: -18.01104736328125
    5. '(edge' → logprob: -18.01104736328125
    6. 'Edges' → logprob: -18.51104736328125
    7. '_edges' → logprob: -18.76104736328125
    8. '(lines' → logprob: -19.63604736328125
    9. 'edge' → logprob: -21.51104736328125
    10. ')' → logprob: -21.51104736328125

Token 1013: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02346162684261799
    2. ')
' → logprob: -3.7734615802764893
    3. '))' → logprob: -8.52346134185791
    4. '))
' → logprob: -11.89846134185791
    5. ' )' → logprob: -12.39846134185791
    6. '())' → logprob: -12.77346134185791
    7. ')
' → logprob: -12.89846134185791
    8. '   ' → logprob: -14.77346134185791
    9. '())
' → logprob: -15.39846134185791
    10. ' )
' → logprob: -15.52346134185791

Token 1014: '#' (ID: 2)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.3856492842023727e-06
    2. ' else' → logprob: -13.625000953674316
    3. 'elif' → logprob: -15.750000953674316
    4. '```' → logprob: -18.750001907348633
    5. 'els' → logprob: -19.125001907348633
    6. 'el' → logprob: -19.500001907348633
    7. 'e' → logprob: -19.750001907348633
    8. '#else' → logprob: -19.750001907348633
    9. 'elses' → logprob: -20.000001907348633
    10. '#' → logprob: -20.375001907348633

Token 1015: ' Sinon' (ID: 154924)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.9361264946837764e-07
    2. ' else' → logprob: -16.75
    3. 'elif' → logprob: -18.75
    4. 'elser' → logprob: -19.875
    5. '#else' → logprob: -19.875
    6. '```' → logprob: -20.125
    7. '#' → logprob: -20.25
    8. 'els' → logprob: -20.625
    9. 'Else' → logprob: -20.875
    10. 'elses' → logprob: -21.125

Token 1016: ' il' (ID: 1793)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6931384801864624
    2. ':' → logprob: -0.8181384801864624
    3. ':
' → logprob: -2.943138599395752
    4. '   ' → logprob: -5.318138599395752
    5. 'print' → logprob: -7.193138599395752
    6. ' else' → logprob: -7.943138599395752
    7. ' :' → logprob: -11.068138122558594
    8. '```' → logprob: -11.943138122558594
    9. ' print' → logprob: -12.568138122558594
    10. ' :
' → logprob: -13.318138122558594

Token 1017: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.6116926670074463
    2. '   ' → logprob: -1.6116926670074463
    3. 'else' → logprob: -1.6116926670074463
    4. 'print' → logprob: -1.9866926670074463
    5. 'e' → logprob: -2.6116926670074463
    6. 'aise' → logprob: -2.7366926670074463
    7. '=' → logprob: -3.8616926670074463
    8. 'elif' → logprob: -4.361692428588867
    9. '```' → logprob: -4.486692428588867
    10. ' print' → logprob: -4.611692428588867

Token 1018: ''ex' (ID: 23472)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6456683874130249
    2. 'print' → logprob: -0.8956683874130249
    3. 'e' → logprob: -3.5206685066223145
    4. '   ' → logprob: -4.7706685066223145
    5. '```' → logprob: -5.0206685066223145
    6. 'elif' → logprob: -5.1456685066223145
    7. 'aise' → logprob: -5.7706685066223145
    8. '#' → logprob: -6.0206685066223145
    9. 'n' → logprob: -6.3956685066223145
    10. 'és' → logprob: -7.0206685066223145

Token 1019: 'ist' (ID: 421)
  Prédit: 'iste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.00015788905147928745
    2. 'ist' → logprob: -9.000158309936523
    3. 'ister' → logprob: -11.000158309936523
    4. 'ite' → logprob: -12.250158309936523
    5. 'prime' → logprob: -12.750158309936523
    6. '
' → logprob: -13.000158309936523
    7. '```' → logprob: -13.250158309936523
    8. 'ists' → logprob: -13.875158309936523
    9. '...' → logprob: -14.125158309936523
    10. 'p' → logprob: -14.375158309936523

Token 1020: 'ait' (ID: 1271)
  Prédit: 'ite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.023438451811671257
    2. 'te' → logprob: -4.398438453674316
    3. 'e' → logprob: -5.023438453674316
    4. 'iste' → logprob: -5.648438453674316
    5. 'ate' → logprob: -7.648438453674316
    6. 'a' → logprob: -9.648438453674316
    7. 'ote' → logprob: -10.148438453674316
    8. '```' → logprob: -10.398438453674316
    9. '
' → logprob: -10.648438453674316
    10. 'pas' → logprob: -11.148438453674316

Token 1021: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.22009655833244324
    2. ' pas' → logprob: -1.9700965881347656
    3. 'auc' → logprob: -3.8450965881347656
    4. ' aucune' → logprob: -3.9700965881347656
    5. ' aucun' → logprob: -4.720096588134766
    6. 'r' → logprob: -5.470096588134766
    7. '_pas' → logprob: -6.220096588134766
    8. ' rien' → logprob: -6.720096588134766
    9. '```' → logprob: -8.095096588134766
    10. 'print' → logprob: -8.220096588134766

Token 1022: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5196743607521057
    2. 'de' → logprob: -2.144674301147461
    3. 'd' → logprob: -2.394674301147461
    4. 'e' → logprob: -2.894674301147461
    5. '#' → logprob: -3.144674301147461
    6. '   ' → logprob: -3.894674301147461
    7. ' de' → logprob: -4.269674301147461
    8. 'n' → logprob: -4.269674301147461
    9. 'auc' → logprob: -5.019674301147461
    10. ' d' → logprob: -5.269674301147461

Token 1023: ' telle' (ID: 70904)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.05032077059149742
    2. ' arbre' → logprob: -4.175320625305176
    3. 'solution' → logprob: -4.300320625305176
    4. 'print' → logprob: -5.175320625305176
    5. '```' → logprob: -5.550320625305176
    6. 'possible' → logprob: -6.300320625305176
    7. 'tree' → logprob: -6.550320625305176
    8. 'arb' → logprob: -6.800320625305176
    9. '#' → logprob: -7.050320625305176
    10. '\n' → logprob: -7.300320625305176

Token 1024: ' construction' (ID: 9770)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.06778968125581741
    2. ' arbre' → logprob: -2.8177897930145264
    3. '
' → logprob: -6.817789554595947
    4. ''ar' → logprob: -7.192789554595947
    5. 'tree' → logprob: -7.567789554595947
    6. 'arb' → logprob: -7.567789554595947
    7. '#' → logprob: -7.692789554595947
    8. ' ' → logprob: -7.692789554595947
    9. ' solution' → logprob: -7.817789554595947
    10. 'print' → logprob: -8.067790031433105

Token 1025: ' possible' (ID: 4149)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.01145991776138544
    2. 'print' → logprob: -4.761459827423096
    3. ':' → logprob: -6.511459827423096
    4. ' else' → logprob: -6.886459827423096
    5. '   ' → logprob: -8.386460304260254
    6. '```' → logprob: -10.136460304260254
    7. '#' → logprob: -10.761460304260254
    8. ' print' → logprob: -11.136460304260254
    9. ':
' → logprob: -12.011460304260254
    10. '.' → logprob: -12.261460304260254

Token 1026: ',' (ID: 11)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -7.123899558791891e-05
    2. ' else' → logprob: -9.62507152557373
    3. '```' → logprob: -12.75007152557373
    4. 'print' → logprob: -14.00007152557373
    5. '
' → logprob: -14.62507152557373
    6. '#' → logprob: -14.75007152557373
    7. '#else' → logprob: -14.87507152557373
    8. 'elif' → logprob: -16.750070571899414
    9. '   ' → logprob: -16.875070571899414
    10. '_else' → logprob: -17.875070571899414

Token 1027: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.020859619602560997
    2. '   ' → logprob: -4.270859718322754
    3. ' print' → logprob: -5.020859718322754
    4. 'else' → logprob: -9.645859718322754
    5. '```' → logprob: -12.020859718322754
    6. '
' → logprob: -13.145859718322754
    7. '	print' → logprob: -14.020859718322754
    8. 'sys' → logprob: -14.145859718322754
    9. 'import' → logprob: -14.895859718322754
    10. ' else' → logprob: -16.145858764648438

Token 1028: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.024703118950128555
    2. ' print' → logprob: -3.774703025817871
    3. 'else' → logprob: -6.649703025817871
    4. ' else' → logprob: -9.524703025817871
    5. '   ' → logprob: -10.274703025817871
    6. ':' → logprob: -11.149703025817871
    7. 'raise' → logprob: -11.649703025817871
    8. '(print' → logprob: -12.524703025817871
    9. '```' → logprob: -12.524703025817871
    10. '#' → logprob: -12.774703025817871

Token 1029: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0005686411168426275
    2. '-im' → logprob: -7.625568866729736
    3. '"-' → logprob: -10.750568389892578
    4. '(-' → logprob: -11.125568389892578
    5. 'Impossible' → logprob: -12.000568389892578
    6. '("-' → logprob: -12.375568389892578
    7. ' -' → logprob: -12.500568389892578
    8. '   ' → logprob: -12.625568389892578
    9. 'im' → logprob: -12.625568389892578
    10. '-No' → logprob: -12.750568389892578

Token 1030: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. 'print' → logprob: -17.75
    3. ' ' → logprob: -18.125
    4. '```' → logprob: -20.25
    5. '"""' → logprob: -20.375
    6. '"' → logprob: -20.625
    7. '１' → logprob: -20.625
    8. '=' → logprob: -21.0
    9. '`' → logprob: -21.25
    10. ''''' → logprob: -21.5

Token 1031: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30271536111831665
    2. '\n' → logprob: -1.8027153015136719
    3. '<|end|>' → logprob: -2.427715301513672
    4. 'else' → logprob: -5.302715301513672
    5. '```' → logprob: -6.802715301513672
    6. '\' → logprob: -7.677715301513672
    7. '0' → logprob: -8.427715301513672
    8. '#' → logprob: -8.552715301513672
    9. ' ' → logprob: -8.552715301513672
    10. ' 
' → logprob: -8.802715301513672

Token 1032: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -3.011373155459296e-05
    2. '
' → logprob: -11.375030517578125
    3. ' else' → logprob: -11.375030517578125
    4. 'print' → logprob: -12.000030517578125
    5. '```' → logprob: -14.250030517578125
    6. '    
' → logprob: -16.250030517578125
    7. '0' → logprob: -16.875030517578125
    8. '#else' → logprob: -18.000030517578125
    9. ' 
' → logprob: -18.375030517578125
    10. ' ' → logprob: -18.500030517578125

Token 1033: ':
' (ID: 734)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4056475758552551
    2. '   ' → logprob: -1.5306475162506104
    3. ' print' → logprob: -2.1556475162506104
    4. ':
' → logprob: -7.2806477546691895
    5. '
' → logprob: -8.405647277832031
    6. ':' → logprob: -9.405647277832031
    7. '(print' → logprob: -9.405647277832031
    8. '.print' → logprob: -9.655647277832031
    9. '    ' → logprob: -10.280647277832031
    10. '	print' → logprob: -10.405647277832031

Token 1034: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.32523515378125e-05
    2. ' print' → logprob: -10.250062942504883
    3. '-' → logprob: -10.750062942504883
    4. '   ' → logprob: -12.500062942504883
    5. '```' → logprob: -13.125062942504883
    6. '-print' → logprob: -14.250062942504883
    7. '	print' → logprob: -17.125062942504883
    8. '``' → logprob: -19.000062942504883
    9. ' -' → logprob: -20.375062942504883
    10. '`' → logprob: -20.750062942504883

Token 1035: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -17.0
    3. '-print' → logprob: -21.125
    4. 'pr' → logprob: -23.625
    5. '```' → logprob: -23.875
    6. 'prin' → logprob: -24.375
    7. '	print' → logprob: -24.625
    8. '   ' → logprob: -25.75
    9. '-' → logprob: -26.25
    10. 'Print' → logprob: -26.75

Token 1036: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.004430001601576805
    2. '(' → logprob: -5.504429817199707
    3. '('' → logprob: -8.129429817199707
    4. '('-' → logprob: -10.254429817199707
    5. '-' → logprob: -11.379429817199707
    6. '("-' → logprob: -12.254429817199707
    7. '("' → logprob: -12.629429817199707
    8. '(
' → logprob: -13.754429817199707
    9. '()' → logprob: -14.629429817199707
    10. ' (-' → logprob: -14.879429817199707

Token 1037: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -20.0
    3. ' ' → logprob: -20.5
    4. '-' → logprob: -21.625
    5. '１' → logprob: -22.75
    6. '   ' → logprob: -22.875
    7. '
' → logprob: -23.0
    8. '`' → logprob: -23.875
    9. '``' → logprob: -24.0
    10. '}' → logprob: -24.0

Token 1038: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.463036435074173e-05
    2. '())' → logprob: -11.625024795532227
    3. ')
' → logprob: -11.875024795532227
    4. '))' → logprob: -12.750024795532227
    5. ' )' → logprob: -12.750024795532227
    6. '()' → logprob: -13.625024795532227
    7. '`)' → logprob: -14.500024795532227
    8. '')' → logprob: -15.125024795532227
    9. ')`' → logprob: -15.250024795532227
    10. '```' → logprob: -15.250024795532227


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1036
Tokens correctement prédits (1ère position, stricte): 229
Tokens correctement prédits (1ère position, avec adaptation): 239
Tokens correctement prédits (top 10): 563
Précision stricte (1ère position): 22.10%
Précision adaptée (1ère position): 23.07%
Précision (top 10): 54.34%
================================================================================
