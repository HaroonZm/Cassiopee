================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def transform_number(input_number):
    """
    Transforme un nombre représenté sous forme de chaîne.
    Pour chaque chiffre de l'entrée :
        - Si le chiffre est '1', il est remplacé par '9'.
        - Sinon, il est remplacé par '1'.

    Args:
        input_number (str): Le nombre à transformer, sous forme de chaîne de caractères.

    Returns:
        str: Le nombre transformé, sous forme de chaîne de caractères.
    """
    ans = []  # Liste pour stocker chaque chiffre transformé

    # Parcourt chaque caractère (chiffre) du nombre d'entrée
    for i in range(len(input_number)):
        if input_number[i] == "1":
            # Si le chiffre courant est '1', ajoute '9' à la liste
            ans.append('9')
        else:
            # Sinon, ajoute '1' à la liste
            ans.append('1')

    # Rejoint la liste des chiffres transformés en une chaîne et la retourne
    return ''.join(ans)

# Lecture de la chaîne d'entrée
N = input()

# Appel de la fonction de transformation et affichage du résultat
print(transform_number(N))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' transform' (ID: 7118)
  → Token d'amorce (pas de prédiction)

Token 2: '_number' (ID: 11733)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020974259823560715
    2. '_' → logprob: -3.8959741592407227
    3. '```' → logprob: -8.645974159240723
    4. '(_' → logprob: -9.270974159240723
    5. '(_:' → logprob: -10.395974159240723
    6. ' (' → logprob: -10.395974159240723
    7. ''' → logprob: -12.020974159240723
    8. '("("' → logprob: -12.145974159240723
    9. '():' → logprob: -12.395974159240723
    10. '(token' → logprob: -12.520974159240723

Token 4: '_number' (ID: 11733)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24926868081092834
    2. '):' → logprob: -1.624268651008606
    3. '_' → logprob: -4.249268531799316
    4. ')_' → logprob: -5.124268531799316
    5. 's' → logprob: -6.999268531799316
    6. '_)' → logprob: -7.499268531799316
    7. '```' → logprob: -7.749268531799316
    8. '_number' → logprob: -7.999268531799316
    9. '(' → logprob: -8.124268531799316
    10. '):
' → logprob: -8.624268531799316

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00936549250036478
    2. ')' → logprob: -5.259365558624268
    3. ':' → logprob: -5.509365558624268
    4. ',' → logprob: -10.13436508178711
    5. '):
' → logprob: -11.88436508178711
    6. '_' → logprob: -12.50936508178711
    7. '=' → logprob: -12.50936508178711
    8. '```' → logprob: -12.88436508178711
    9. '(' → logprob: -13.13436508178711
    10. '**' → logprob: -13.63436508178711

Token 6: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7276343107223511
    2. ':' → logprob: -0.8526343107223511
    3. '   ' → logprob: -3.3526344299316406
    4. '```' → logprob: -3.9776344299316406
    5. ''' → logprob: -4.102634429931641
    6. '(:' → logprob: -4.977634429931641
    7. '():' → logprob: -5.352634429931641
    8. '"' → logprob: -6.352634429931641
    9. '\' → logprob: -6.602634429931641
    10. '"""' → logprob: -6.977634429931641

Token 7: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3621000647544861
    2. '```' → logprob: -1.7371001243591309
    3. '       ' → logprob: -3.237100124359131
    4. '`' → logprob: -4.112100124359131
    5. '    ' → logprob: -4.237100124359131
    6. '\n' → logprob: -4.237100124359131
    7. ' ' → logprob: -4.237100124359131
    8. '\' → logprob: -5.112100124359131
    9. ''' → logprob: -5.237100124359131
    10. 'n' → logprob: -6.487100124359131

Token 8: '   ' (ID: 271)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.8393033146858215
    2. 'Convert' → logprob: -1.5893032550811768
    3. '"""' → logprob: -2.2143032550811768
    4. 'Transform' → logprob: -2.8393032550811768
    5. 'Transforms' → logprob: -2.8393032550811768
    6. '   ' → logprob: -3.4643032550811768
    7. 'Trans' → logprob: -3.5893032550811768
    8. 'Con' → logprob: -3.5893032550811768
    9. 'Returns' → logprob: -3.8393032550811768
    10. 'R' → logprob: -4.839303493499756

Token 9: ' Transform' (ID: 27287)
  Prédit: 'Transforms'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Transforms' → logprob: -1.3708996772766113
    2. 'T' → logprob: -1.4958996772766113
    3. 'Transform' (adapté à ' Transform') → logprob: -1.6208996772766113
    4. 'Convert' → logprob: -2.1208996772766113
    5. 'Con' → logprob: -2.2458996772766113
    6. 'Trans' → logprob: -2.8708996772766113
    7. '   ' → logprob: -3.8708996772766113
    8. 'Returns' → logprob: -4.870899677276611
    9. 'Return' → logprob: -5.745899677276611
    10. '"""' → logprob: -6.245899677276611

Token 10: 'e' (ID: 68)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10229206830263138
    2. ' ' → logprob: -4.102292060852051
    3. '   ' → logprob: -4.227292060852051
    4. ')' → logprob: -4.477292060852051
    5. ' input' → logprob: -4.602292060852051
    6. '(input' → logprob: -4.727292060852051
    7. 'input' → logprob: -4.852292060852051
    8. 's' → logprob: -4.977292060852051
    9. '_number' → logprob: -4.977292060852051
    10. '(' → logprob: -5.602292060852051

Token 11: ' un' (ID: 537)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.015359246172010899
    2. 's' → logprob: -4.890359401702881
    3. 'r' → logprob: -4.890359401702881
    4. '_' → logprob: -9.140358924865723
    5. ' d' → logprob: -9.765358924865723
    6. ' ' → logprob: -11.265358924865723
    7. '```' → logprob: -11.515358924865723
    8. '   ' → logprob: -12.265358924865723
    9. '_d' → logprob: -12.890358924865723
    10. '_r' → logprob: -13.140358924865723

Token 12: ' nombre' (ID: 9733)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8583769202232361
    2. ' ' → logprob: -0.9833769202232361
    3. ' nombre' → logprob: -1.8583769798278809
    4. ' e' → logprob: -4.483376979827881
    5. 'n' → logprob: -4.608376979827881
    6. ' n' → logprob: -5.358376979827881
    7. 's' → logprob: -5.483376979827881
    8. '_' → logprob: -6.358376979827881
    9. 'a' → logprob: -6.358376979827881
    10. ' numéro' → logprob: -6.358376979827881

Token 13: ' représent' (ID: 42664)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.09857962280511856
    2. '   ' → logprob: -3.0985796451568604
    3. ' ' → logprob: -3.9735796451568604
    4. '```' → logprob: -4.098579406738281
    5. ''' → logprob: -5.223579406738281
    6. 's' → logprob: -6.223579406738281
    7. ' ```' → logprob: -7.598579406738281
    8. '`' → logprob: -7.723579406738281
    9. '    ' → logprob: -7.973579406738281
    10. ' par' → logprob: -7.973579406738281

Token 14: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -8.613945101387799e-05
    2. 'e' → logprob: -10.250085830688477
    3. 'a' → logprob: -10.750085830688477
    4. 'ant' → logprob: -11.000085830688477
    5. 'ée' → logprob: -12.875085830688477
    6. '\u' → logprob: -13.250085830688477
    7. 'è' → logprob: -13.375085830688477
    8. '�' → logprob: -13.500085830688477
    9. 'á' → logprob: -13.750085830688477
    10. 'å' → logprob: -14.125085830688477

Token 15: ' sous' (ID: 14487)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.07009804248809814
    2. ' ' → logprob: -2.9450979232788086
    3. ' par' → logprob: -4.320097923278809
    4. 'en' → logprob: -7.320097923278809
    5. '  ' → logprob: -8.070097923278809
    6. 's' → logprob: -8.070097923278809
    7. ' sous' → logprob: -8.695097923278809
    8. ' comme' → logprob: -10.070097923278809
    9. ' as' → logprob: -10.070097923278809
    10. '   ' → logprob: -10.195097923278809

Token 16: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.31641706824302673
    2. 'forme' → logprob: -1.4414170980453491
    3. 'form' → logprob: -3.6914169788360596
    4. '   ' → logprob: -5.691417217254639
    5. ' form' → logprob: -5.941417217254639
    6. 'format' → logprob: -7.316417217254639
    7. 'chaine' → logprob: -7.441417217254639
    8. 'la' → logprob: -7.566417217254639
    9. 'une' → logprob: -7.691417217254639
    10. '```' → logprob: -8.19141674041748

Token 17: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.45079660415649414
    2. 'd' → logprob: -1.5757966041564941
    3. ' de' → logprob: -2.200796604156494
    4. 'de' → logprob: -3.200796604156494
    5. 's' → logprob: -5.575796604156494
    6. '   ' → logprob: -8.575796127319336
    7. 'e' → logprob: -8.825796127319336
    8. 'def' → logprob: -9.575796127319336
    9. ' ' → logprob: -9.700796127319336
    10. '```' → logprob: -9.700796127319336

Token 18: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.25742390751838684
    2. 'chaine' → logprob: -2.2574238777160645
    3. 'cha' → logprob: -3.3824238777160645
    4. 'string' → logprob: -3.6324238777160645
    5. ' string' → logprob: -4.0074238777160645
    6. 'str' → logprob: -4.3824238777160645
    7. ' chaine' → logprob: -4.3824238777160645
    8. 'texte' → logprob: -5.0074238777160645
    9. '   ' → logprob: -5.6324238777160645
    10. ' ' → logprob: -5.7574238777160645

Token 19: '.
' (ID: 558)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.15989583730697632
    2. ' de' → logprob: -2.784895896911621
    3. ''' → logprob: -3.284895896911621
    4. '"' → logprob: -4.659895896911621
    5. ' ' → logprob: -4.909895896911621
    6. '```' → logprob: -4.909895896911621
    7. ''en' → logprob: -5.409895896911621
    8. ' d' → logprob: -5.409895896911621
    9. '   ' → logprob: -5.534895896911621
    10. 's' → logprob: -6.284895896911621

Token 20: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4765227138996124
    2. ''' → logprob: -1.72652268409729
    3. '"' → logprob: -2.97652268409729
    4. '```' → logprob: -3.22652268409729
    5. '"""' → logprob: -3.60152268409729
    6. '\n' → logprob: -3.85152268409729
    7. '\' → logprob: -4.601522922515869
    8. '"""
' → logprob: -4.601522922515869
    9. '`' → logprob: -4.726522922515869
    10. ' en' → logprob: -4.851522922515869

Token 21: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1714843213558197
    2. '```' → logprob: -3.1714842319488525
    3. '"""' → logprob: -3.1714842319488525
    4. ''' → logprob: -4.171484470367432
    5. '\n' → logprob: -4.171484470367432
    6. '\' → logprob: -4.796484470367432
    7. '"""
' → logprob: -5.171484470367432
    8. '"' → logprob: -5.421484470367432
    9. '`' → logprob: -5.546484470367432
    10. ' ' → logprob: -5.546484470367432

Token 22: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3692251443862915
    2. 'r' → logprob: -1.4942251443862915
    3. '   ' → logprob: -2.244225025177002
    4. ' convertir' → logprob: -2.494225025177002
    5. ' chaque' → logprob: -2.744225025177002
    6. ' le' → logprob: -3.494225025177002
    7. ' retourner' → logprob: -3.619225025177002
    8. ' l' → logprob: -3.869225025177002
    9. ' rendre' → logprob: -4.244225025177002
    10. 'l' → logprob: -4.244225025177002

Token 23: ' chiffre' (ID: 107420)
  Prédit: ' caractère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.8228034377098083
    2. ' ' → logprob: -0.9478034377098083
    3. ' espace' → logprob: -2.822803497314453
    4. ' caract' → logprob: -3.572803497314453
    5. ' mot' → logprob: -3.572803497314453
    6. 'car' → logprob: -3.822803497314453
    7. 'mot' → logprob: -5.072803497314453
    8. '   ' → logprob: -5.197803497314453
    9. ' token' → logprob: -5.822803497314453
    10. '_' → logprob: -5.822803497314453

Token 24: ' de' (ID: 334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7005013227462769
    2. ' ,' → logprob: -0.7005013227462769
    3. ' de' → logprob: -5.700501441955566
    4. '   ' → logprob: -6.700501441955566
    5. ' du' → logprob: -7.575501441955566
    6. ' s' → logprob: -8.200501441955566
    7. 'de' → logprob: -8.325501441955566
    8. 's' → logprob: -8.325501441955566
    9. ' :' → logprob: -8.825501441955566
    10. ' ' → logprob: -8.950501441955566

Token 25: ' l' (ID: 305)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3299461603164673
    2. ' input' → logprob: -1.9549461603164673
    3. 'l' → logprob: -3.2049460411071777
    4. ' l' → logprob: -3.4549460411071777
    5. ' ' → logprob: -3.7049460411071777
    6. 'input' → logprob: -4.329946041107178
    7. 'la' → logprob: -4.579946041107178
    8. 's' → logprob: -5.079946041107178
    9. 'a' → logprob: -5.954946041107178
    10. 'chaine' → logprob: -5.954946041107178

Token 26: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19110070168972015
    2. 'e' → logprob: -2.191100597381592
    3. 'input' → logprob: -3.941100597381592
    4. ' input' → logprob: -4.191100597381592
    5. 'i' → logprob: -4.941100597381592
    6. ''' → logprob: -5.066100597381592
    7. 'u' → logprob: -5.441100597381592
    8. ' a' → logprob: -5.691100597381592
    9. ' ' → logprob: -6.441100597381592
    10. ''entrée' → logprob: -6.441100597381592

Token 27: ' :
' (ID: 10039)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25286242365837097
    2. ' ,' → logprob: -1.5028624534606934
    3. '   ' → logprob: -8.002861976623535
    4. ' ' → logprob: -8.627861976623535
    5. '_' → logprob: -9.502861976623535
    6. ' en' → logprob: -9.752861976623535
    7. ',
' → logprob: -10.127861976623535
    8. 's' → logprob: -10.627861976623535
    9. 'u' → logprob: -10.752861976623535
    10. 'e' → logprob: -10.877861976623535

Token 28: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.4505399465560913
    2. ' s' → logprob: -1.9505399465560913
    3. ' if' → logprob: -2.450540065765381
    4. '   ' → logprob: -3.825540065765381
    5. 's' → logprob: -4.075540065765381
    6. ' ' → logprob: -4.200540065765381
    7. ',' → logprob: -4.450540065765381
    8. '       ' → logprob: -4.450540065765381
    9. '     
' → logprob: -4.825540065765381
    10. ' on' → logprob: -5.075540065765381

Token 29: ' -' (ID: 533)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7910215258598328
    2. ' s' → logprob: -2.1660215854644775
    3. '   ' → logprob: -2.5410215854644775
    4. 's' → logprob: -2.5410215854644775
    5. '    ' → logprob: -2.5410215854644775
    6. ' multip' → logprob: -4.041021347045898
    7. 'd' → logprob: -4.166021347045898
    8. 'if' → logprob: -4.166021347045898
    9. 'si' → logprob: -4.291021347045898
    10. ' on' → logprob: -4.291021347045898

Token 30: ' Si' (ID: 7832)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.7412900924682617
    2. ' le' → logprob: -1.9912900924682617
    3. ' multiplier' → logprob: -2.4912900924682617
    4. 's' → logprob: -2.7412900924682617
    5. ' double' → logprob: -2.8662900924682617
    6. '   ' → logprob: -2.9912900924682617
    7. ' on' → logprob: -3.3662900924682617
    8. 'c' → logprob: -3.3662900924682617
    9. ' multip' → logprob: -3.4912900924682617
    10. ' multipl' → logprob: -3.7412900924682617

Token 31: ' le' (ID: 505)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.7817781567573547
    2. ' le' → logprob: -0.9067781567573547
    3. 'c' → logprob: -2.90677809715271
    4. 'le' → logprob: -3.15677809715271
    5. 'int' → logprob: -4.156778335571289
    6. ' ' → logprob: -4.656778335571289
    7. ' int' → logprob: -5.656778335571289
    8. ' celui' → logprob: -5.906778335571289
    9. 'digit' → logprob: -6.156778335571289
    10. ' la' → logprob: -6.906778335571289

Token 32: ' chiffre' (ID: 107420)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.04275308549404144
    2. ' chiffre' → logprob: -3.417752981185913
    3. 'c' → logprob: -6.417753219604492
    4. '```' → logprob: -6.667753219604492
    5. ' ' → logprob: -6.792753219604492
    6. 'car' → logprob: -6.792753219604492
    7. ' ch' → logprob: -7.042753219604492
    8. ' caractère' → logprob: -7.792753219604492
    9. ' code' → logprob: -8.230253219604492
    10. 'digit' → logprob: -8.417753219604492

Token 33: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.2997795045375824
    2. 's' → logprob: -1.5497795343399048
    3. ' ' → logprob: -3.9247794151306152
    4. 'est' → logprob: -4.424779415130615
    5. ' s' → logprob: -5.549779415130615
    6. ' is' → logprob: -6.299779415130615
    7. ''est' → logprob: -6.299779415130615
    8. '=' → logprob: -6.799779415130615
    9. ''' → logprob: -7.049779415130615
    10. 'e' → logprob: -7.299779415130615

Token 34: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.7579083442687988
    2. ' un' → logprob: -2.007908344268799
    3. ' ' → logprob: -2.132908344268799
    4. '0' → logprob: -2.382908344268799
    5. ' pair' → logprob: -2.382908344268799
    6. ' impair' → logprob: -2.507908344268799
    7. 'pair' → logprob: -2.632908344268799
    8. '1' → logprob: -2.757908344268799
    9. ''' → logprob: -3.007908344268799
    10. ' supérieur' → logprob: -3.632908344268799

Token 35: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.32018521428108215
    2. ''' → logprob: -1.9451851844787598
    3. '1' → logprob: -2.4451851844787598
    4. '9' → logprob: -4.44518518447876
    5. 'a' → logprob: -5.19518518447876
    6. '2' → logprob: -5.19518518447876
    7. '4' → logprob: -5.44518518447876
    8. '5' → logprob: -5.57018518447876
    9. '7' → logprob: -5.69518518447876
    10. '"' → logprob: -5.94518518447876

Token 36: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.36023423075675964
    2. ''' → logprob: -2.235234260559082
    3. '2' → logprob: -2.235234260559082
    4. ',' → logprob: -3.485234260559082
    5. ' ',' → logprob: -3.610234260559082
    6. '0' → logprob: -3.735234260559082
    7. ' '' → logprob: -6.110234260559082
    8. ','' → logprob: -6.985234260559082
    9. '1' → logprob: -7.235234260559082
    10. '3' → logprob: -7.485234260559082

Token 37: ' il' (ID: 1793)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.7502437829971313
    2. ' on' → logprob: -1.0002437829971313
    3. ' rem' → logprob: -3.625243663787842
    4. ' remplacer' → logprob: -4.000243663787842
    5. ' transforme' → logprob: -4.125243663787842
    6. '   ' → logprob: -4.125243663787842
    7. 'rem' → logprob: -4.625243663787842
    8. '    ' → logprob: -4.625243663787842
    9. 'le' → logprob: -5.000243663787842
    10. ' retourne' → logprob: -5.125243663787842

Token 38: ' est' (ID: 893)
  Prédit: ' devient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' devient' → logprob: -0.46408194303512573
    2. ' faut' → logprob: -2.4640820026397705
    3. ' transforme' → logprob: -2.4640820026397705
    4. 's' → logprob: -2.9640820026397705
    5. 'e' → logprob: -3.0890820026397705
    6. ' est' → logprob: -3.3390820026397705
    7. 'a' → logprob: -4.964081764221191
    8. ' '' → logprob: -5.214081764221191
    9. ' a' → logprob: -5.214081764221191
    10. 'est' → logprob: -5.464081764221191

Token 39: ' remplac' (ID: 140149)
  Prédit: ' remplac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remplac' → logprob: -0.019703708589076996
    2. ' transform' → logprob: -5.0197038650512695
    3. 'transform' → logprob: -5.0197038650512695
    4. ' doubl' → logprob: -7.1447038650512695
    5. ' supprim' → logprob: -7.1447038650512695
    6. ' ' → logprob: -7.3947038650512695
    7. 'rem' → logprob: -7.3947038650512695
    8. ' changé' → logprob: -7.5197038650512695
    9. 's' → logprob: -7.8947038650512695
    10. ' convert' → logprob: -8.01970386505127

Token 40: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -7.684157026233152e-05
    2. ''' → logprob: -10.250077247619629
    3. 'e' → logprob: -10.500077247619629
    4. ''é' → logprob: -12.375077247619629
    5. 'ê' → logprob: -13.375077247619629
    6. 'ée' → logprob: -13.375077247619629
    7. 'u' → logprob: -13.500077247619629
    8. ' par' → logprob: -13.625077247619629
    9. ''e' → logprob: -14.500077247619629
    10. 'á' → logprob: -14.750077247619629

Token 41: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.10246477276086807
    2. 'par' → logprob: -2.3524646759033203
    3. ' ' → logprob: -6.72746467590332
    4. '<|end|>' → logprob: -8.22746467590332
    5. ' by' → logprob: -8.35246467590332
    6. '_par' → logprob: -8.97746467590332
    7. ''' → logprob: -9.10246467590332
    8. '```' → logprob: -9.60246467590332
    9. '  ' → logprob: -9.72746467590332
    10. '`' → logprob: -10.60246467590332

Token 42: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.25342315435409546
    2. ' '' → logprob: -1.7534232139587402
    3. ' ' → logprob: -3.2534232139587402
    4. ''a' → logprob: -6.12842321395874
    5. '"' → logprob: -6.37842321395874
    6. ''un' → logprob: -6.75342321395874
    7. ' a' → logprob: -6.75342321395874
    8. 'a' → logprob: -7.00342321395874
    9. '`' → logprob: -7.25342321395874
    10. ''e' → logprob: -7.87842321395874

Token 43: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.8711010813713074
    2. '0' → logprob: -1.2461011409759521
    3. '2' → logprob: -1.8711011409759521
    4. '9' → logprob: -2.496101140975952
    5. 'a' → logprob: -4.746100902557373
    6. '4' → logprob: -4.996100902557373
    7. 'one' → logprob: -5.246100902557373
    8. '3' → logprob: -5.371100902557373
    9. ' ' → logprob: -5.621100902557373
    10. '1' → logprob: -5.621100902557373

Token 44: ''.
' (ID: 49980)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0002639582962729037
    2. ' '' → logprob: -8.750264167785645
    3. '"' → logprob: -10.125264167785645
    4. ''''' → logprob: -11.125264167785645
    5. ''.' → logprob: -12.000264167785645
    6. '.' → logprob: -12.125264167785645
    7. ''
' → logprob: -12.250264167785645
    8. '   ' → logprob: -12.500264167785645
    9. '"""' → logprob: -12.750264167785645
    10. '''' → logprob: -12.750264167785645

Token 45: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0046883453615009785
    2. '```' → logprob: -6.754688262939453
    3. ' ' → logprob: -6.879688262939453
    4. ''' → logprob: -7.629688262939453
    5. '\n' → logprob: -7.879688262939453
    6. '  ' → logprob: -8.504688262939453
    7. '"""' → logprob: -8.504688262939453
    8. '       ' → logprob: -8.504688262939453
    9. '    ' → logprob: -8.629688262939453
    10. ')' → logprob: -8.754688262939453

Token 46: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010606659576296806
    2. ' ' → logprob: -5.88560676574707
    3. '\n' → logprob: -6.38560676574707
    4. '```' → logprob: -6.51060676574707
    5. '
' → logprob: -6.76060676574707
    6. '       ' → logprob: -7.13560676574707
    7. ''' → logprob: -7.88560676574707
    8. 'elif' → logprob: -8.13560676574707
    9. '  ' → logprob: -8.51060676574707
    10. ' elif' → logprob: -8.76060676574707

Token 47: ' Sinon' (ID: 154924)
  Prédit: ' Si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Si' → logprob: -1.0456432104110718
    2. '   ' → logprob: -1.2956432104110718
    3. 'Si' → logprob: -1.9206432104110718
    4. ' Sinon' → logprob: -2.5456433296203613
    5. 'Sinon' → logprob: -3.4206433296203613
    6. ' ' → logprob: -3.6706433296203613
    7. ' sinon' → logprob: -3.7956433296203613
    8. ' elif' → logprob: -3.9206433296203613
    9. '    ' → logprob: -5.045643329620361
    10. 'Pour' → logprob: -5.170643329620361

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04497874900698662
    2. ' ,' → logprob: -3.5449788570404053
    3. '   ' → logprob: -4.419978618621826
    4. ' le' → logprob: -7.044978618621826
    5. ':' → logprob: -7.544978618621826
    6. '    ' → logprob: -8.169979095458984
    7. ' ' → logprob: -8.294979095458984
    8. '  ' → logprob: -8.544979095458984
    9. 's' → logprob: -8.544979095458984
    10. ' il' → logprob: -8.669979095458984

Token 49: ' il' (ID: 1793)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.4940697252750397
    2. '   ' → logprob: -2.494069814682007
    3. ' on' → logprob: -2.744069814682007
    4. ' ' → logprob: -3.244069814682007
    5. ' il' → logprob: -3.244069814682007
    6. ' ' → logprob: -3.369069814682007
    7. 'le' → logprob: -3.494069814682007
    8. '    ' → logprob: -3.869069814682007
    9. ' code' → logprob: -4.744069576263428
    10. '9' → logprob: -4.994069576263428

Token 50: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.12286773324012756
    2. 'est' → logprob: -2.6228678226470947
    3. 's' → logprob: -3.6228678226470947
    4. ' is' → logprob: -5.497867584228516
    5. ''est' → logprob: -5.997867584228516
    6. ' reste' → logprob: -5.997867584228516
    7. ' devient' → logprob: -6.747867584228516
    8. ' ' → logprob: -7.247867584228516
    9. '...' → logprob: -7.747867584228516
    10. '<|end|>' → logprob: -7.872867584228516

Token 51: ' remplac' (ID: 140149)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.5462031364440918
    2. ' remplac' → logprob: -1.0462031364440918
    3. ' multip' → logprob: -4.046203136444092
    4. 'multip' → logprob: -4.171203136444092
    5. 'transform' → logprob: -4.421203136444092
    6. ' rem' → logprob: -4.671203136444092
    7. 'con' → logprob: -5.921203136444092
    8. 'ré' → logprob: -6.546203136444092
    9. ' laissé' → logprob: -6.671203136444092
    10. '9' → logprob: -7.171203136444092

Token 52: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.00035143180866725743
    2. 'e' → logprob: -8.000351905822754
    3. 'a' → logprob: -11.750351905822754
    4. 'ent' → logprob: -12.500351905822754
    5. ''' → logprob: -14.125351905822754
    6. 'è' → logprob: -14.125351905822754
    7. 'ée' → logprob: -14.625351905822754
    8. 't' → logprob: -14.750351905822754
    9. '"' → logprob: -15.125351905822754
    10. ''é' → logprob: -15.500351905822754

Token 53: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.08917860686779022
    2. 'par' → logprob: -2.4641785621643066
    3. ' ' → logprob: -9.464179039001465
    4. '_par' → logprob: -9.464179039001465
    5. ' by' → logprob: -10.214179039001465
    6. '   ' → logprob: -11.964179039001465
    7. '	par' → logprob: -11.964179039001465
    8. ''' → logprob: -12.089179039001465
    9. 's' → logprob: -12.214179039001465
    10. ' ' → logprob: -12.339179039001465

Token 54: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5430594086647034
    2. ' '' → logprob: -0.9180594086647034
    3. 'str' → logprob: -4.918059349060059
    4. ''s' → logprob: -5.543059349060059
    5. ''l' → logprob: -6.293059349060059
    6. ''un' → logprob: -6.543059349060059
    7. 'le' → logprob: -6.918059349060059
    8. ' str' → logprob: -7.043059349060059
    9. ' le' → logprob: -7.168059349060059
    10. ' ' → logprob: -8.043059349060059

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9291964173316956
    2. ''' → logprob: -1.3041963577270508
    3. '0' → logprob: -1.4291963577270508
    4. '8' → logprob: -2.804196357727051
    5. 'str' → logprob: -4.054196357727051
    6. ' '' → logprob: -4.929196357727051
    7. '2' → logprob: -5.929196357727051
    8. ' ' → logprob: -6.554196357727051
    9. '"' → logprob: -7.304196357727051
    10. '*' → logprob: -7.554196357727051

Token 56: ''.

' (ID: 52121)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0019847829826176167
    2. '2' → logprob: -6.876984596252441
    3. '"' → logprob: -7.626984596252441
    4. '1' → logprob: -8.876984596252441
    5. '0' → logprob: -9.376984596252441
    6. '')' → logprob: -9.751984596252441
    7. ''.' → logprob: -9.876984596252441
    8. ''''' → logprob: -10.376984596252441
    9. ''"' → logprob: -10.876984596252441
    10. '\'' → logprob: -10.876984596252441

Token 57: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7324735522270203
    2. '"""
' → logprob: -1.232473611831665
    3. '   ' → logprob: -1.607473611831665
    4. '"' → logprob: -3.857473611831665
    5. '```' → logprob: -5.857473373413086
    6. ''''
' → logprob: -6.857473373413086
    7. ''' → logprob: -7.107473373413086
    8. '""' → logprob: -7.732473373413086
    9. ''''' → logprob: -7.857473373413086
    10. ' """
' → logprob: -8.982473373413086

Token 58: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16174493730068207
    2. '"""' → logprob: -1.9117449522018433
    3. '```' → logprob: -7.161745071411133
    4. '"""
' → logprob: -8.411745071411133
    5. '""' → logprob: -8.411745071411133
    6. '"' → logprob: -8.911745071411133
    7. ''''' → logprob: -9.661745071411133
    8. ' """' → logprob: -9.911745071411133
    9. ')' → logprob: -11.161745071411133
    10. ''' → logprob: -11.661745071411133

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02725941687822342
    2. ' :' → logprob: -4.277259349822998
    3. '):' → logprob: -5.027259349822998
    4. '   ' → logprob: -6.027259349822998
    5. 's' → logprob: -6.152259349822998
    6. ')' → logprob: -6.777259349822998
    7. ',' → logprob: -8.027259826660156
    8. '[' → logprob: -8.777259826660156
    9. ' ):' → logprob: -10.027259826660156
    10. '(' → logprob: -10.152259826660156

Token 60: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12876200675964355
    2. ' input' → logprob: -2.2537620067596436
    3. 'input' → logprob: -4.753762245178223
    4. ' )' → logprob: -6.003762245178223
    5. ')' → logprob: -6.253762245178223
    6. '    ' → logprob: -6.753762245178223
    7. 'n' → logprob: -7.378762245178223
    8. ' ' → logprob: -8.378762245178223
    9. '```' → logprob: -9.003762245178223
    10. '  ' → logprob: -9.128762245178223

Token 61: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.003667294979095459
    2. ' input' → logprob: -6.00366735458374
    3. '   ' → logprob: -6.75366735458374
    4. 'self' → logprob: -11.128666877746582
    5. '       ' → logprob: -12.628666877746582
    6. 'str' → logprob: -12.878666877746582
    7. '	input' → logprob: -14.128666877746582
    8. 'int' → logprob: -15.003666877746582
    9. 'number' → logprob: -15.003666877746582
    10. '```' → logprob: -15.003666877746582

Token 62: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -0.07261082530021667
    2. '_' → logprob: -2.697610855102539
    3. '_string' → logprob: -6.697610855102539
    4. '_name' → logprob: -8.322610855102539
    5. '_num' → logprob: -8.322610855102539
    6. '_numbers' → logprob: -8.322610855102539
    7. '_token' → logprob: -8.697610855102539
    8. '_n' → logprob: -8.822610855102539
    9. '_nombre' → logprob: -9.822610855102539
    10. '_code' → logprob: -10.197610855102539

Token 63: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3929222524166107
    2. ':' → logprob: -1.142922282218933
    3. ':str' → logprob: -5.517922401428223
    4. ' :' → logprob: -6.767922401428223
    5. '):
' → logprob: -7.892922401428223
    6. ')' → logprob: -8.017922401428223
    7. '   ' → logprob: -9.517922401428223
    8. ' ):' → logprob: -9.642922401428223
    9. '```' → logprob: -12.267922401428223
    10. '<|end|>' → logprob: -12.392922401428223

Token 64: 'str' (ID: 689)
  Prédit: 'str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0005985465249978006
    2. ' str' → logprob: -7.625598430633545
    3. 'int' → logprob: -9.375598907470703
    4. ')' → logprob: -12.125598907470703
    5. '```' → logprob: -12.125598907470703
    6. 'string' → logprob: -12.375598907470703
    7. '   ' → logprob: -12.375598907470703
    8. '[str' → logprob: -12.750598907470703
    9. ':str' → logprob: -14.500598907470703
    10. '	str' → logprob: -15.000598907470703

Token 65: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47429215908050537
    2. ')' → logprob: -0.9742921590805054
    3. '):
' → logprob: -9.474291801452637
    4. '   ' → logprob: -9.474291801452637
    5. '<|end|>' → logprob: -10.724291801452637
    6. '):

' → logprob: -11.849291801452637
    7. ' ):' → logprob: -11.974291801452637
    8. ' ' → logprob: -12.474291801452637
    9. ':' → logprob: -12.599291801452637
    10. '```' → logprob: -12.849291801452637

Token 66: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21341538429260254
    2. ')' → logprob: -2.5884153842926025
    3. '       ' → logprob: -3.0884153842926025
    4. '<|end|>' → logprob: -4.088415145874023
    5. ' )' → logprob: -4.338415145874023
    6. ' """' → logprob: -4.713415145874023
    7. '    ' → logprob: -4.838415145874023
    8. ' ")' → logprob: -5.588415145874023
    9. '"""' → logprob: -5.713415145874023
    10. ' "' → logprob: -6.088415145874023

Token 67: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.10677951574325562
    2. 'nombre' → logprob: -2.3567795753479004
    3. 'n' → logprob: -5.4817795753479
    4. ' numéro' → logprob: -7.1067795753479
    5. ' n' → logprob: -7.9817795753479
    6. '   ' → logprob: -8.231779098510742
    7. ' ' → logprob: -8.606779098510742
    8. ' nombres' → logprob: -8.731779098510742
    9. ' chiffre' → logprob: -8.856779098510742
    10. 'ch' → logprob: -9.981779098510742

Token 68: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8405218124389648
    2. ' )' → logprob: -0.8405218124389648
    3. ' ' → logprob: -2.590521812438965
    4. '   ' → logprob: -4.090521812438965
    5. ' à' → logprob: -4.090521812438965
    6. ' a' → logprob: -5.590521812438965
    7. '<|end|>' → logprob: -5.840521812438965
    8. ' d' → logprob: -6.090521812438965
    9. ' ")' → logprob: -6.215521812438965
    10. '  ' → logprob: -6.340521812438965

Token 69: ' transformer' (ID: 59595)
  Prédit: 'transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'transform' → logprob: -0.20333656668663025
    2. ' transformer' → logprob: -1.7033365964889526
    3. '   ' → logprob: -7.703336715698242
    4. 'trans' → logprob: -7.703336715698242
    5. ' transform' → logprob: -9.078336715698242
    6. ' traiter' → logprob: -9.203336715698242
    7. 'Transformer' → logprob: -9.203336715698242
    8. 't' → logprob: -9.203336715698242
    9. ' transforme' → logprob: -9.203336715698242
    10. ' ' → logprob: -9.828336715698242

Token 70: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7034938335418701
    2. '   ' → logprob: -0.8284938335418701
    3. '):' → logprob: -2.70349383354187
    4. '<|end|>' → logprob: -8.07849407196045
    5. '  ' → logprob: -8.32849407196045
    6. '):
' → logprob: -8.45349407196045
    7. '```' → logprob: -8.57849407196045
    8. '"""' → logprob: -9.32849407196045
    9. '<|end|>' → logprob: -9.57849407196045
    10. '`)' → logprob: -9.82849407196045

Token 71: ' sous' (ID: 14487)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3638911843299866
    2. '   ' → logprob: -1.7388911247253418
    3. ' str' → logprob: -2.613891124725342
    4. ' en' → logprob: -4.363891124725342
    5. '<|end|>' → logprob: -4.488891124725342
    6. ' )' → logprob: -4.738891124725342
    7. '```' → logprob: -4.738891124725342
    8. '"""' → logprob: -6.488891124725342
    9. ' token' → logprob: -6.488891124725342
    10. ' ' → logprob: -6.863891124725342

Token 72: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.08809573948383331
    2. 'forme' → logprob: -2.5880956649780273
    3. 'form' → logprob: -5.213095664978027
    4. 'str' → logprob: -6.713095664978027
    5. ' form' → logprob: -6.963095664978027
    6. '   ' → logprob: -7.088095664978027
    7. 'chaine' → logprob: -7.963095664978027
    8. 'forma' → logprob: -8.338095664978027
    9. ' ' → logprob: -9.963095664978027
    10. ' str' → logprob: -11.463095664978027

Token 73: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5944048166275024
    2. 'de' → logprob: -0.9694048166275024
    3. ' d' → logprob: -3.344404697418213
    4. 'd' → logprob: -3.469404697418213
    5. 'str' → logprob: -6.844404697418213
    6. ')' → logprob: -6.969404697418213
    7. '=str' → logprob: -9.094405174255371
    8. 's' → logprob: -10.094405174255371
    9. '[str' → logprob: -10.094405174255371
    10. '=' → logprob: -10.219405174255371

Token 74: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.709419846534729
    2. ' chaîne' → logprob: -0.959419846534729
    3. 'str' → logprob: -2.7094197273254395
    4. 'cha' → logprob: -2.9594197273254395
    5. 'string' → logprob: -5.4594197273254395
    6. ' chaine' → logprob: -6.4594197273254395
    7. ' string' → logprob: -8.584420204162598
    8. 'chain' → logprob: -8.584420204162598
    9. ' str' → logprob: -9.209420204162598
    10. 'texte' → logprob: -9.709420204162598

Token 75: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04011249169707298
    2. ')' → logprob: -3.6651124954223633
    3. '):' → logprob: -4.665112495422363
    4. '```' → logprob: -6.290112495422363
    5. '):
' → logprob: -7.290112495422363
    6. '")' → logprob: -7.915112495422363
    7. '"""' → logprob: -7.915112495422363
    8. '    
' → logprob: -8.415112495422363
    9. '  ' → logprob: -8.790112495422363
    10. '
' → logprob: -8.790112495422363

Token 76: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5411185622215271
    2. ' caractères' → logprob: -0.9161185622215271
    3. 'str' → logprob: -5.416118621826172
    4. 'texte' → logprob: -6.166118621826172
    5. 'chaine' → logprob: -6.166118621826172
    6. ' chiffres' → logprob: -6.416118621826172
    7. 'chars' → logprob: -6.541118621826172
    8. 'ch' → logprob: -6.791118621826172
    9. ' caractère' → logprob: -7.041118621826172
    10. ' caract' → logprob: -7.291118621826172

Token 77: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30786165595054626
    2. ')' → logprob: -1.6828616857528687
    3. '):' → logprob: -2.682861566543579
    4. '```' → logprob: -5.057861804962158
    5. '"""' → logprob: -6.682861804962158
    6. '):
' → logprob: -6.807861804962158
    7. '")' → logprob: -6.932861804962158
    8. '"):' → logprob: -8.807861328125
    9. '  ' → logprob: -8.932861328125
    10. '`)' → logprob: -9.182861328125

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30991819500923157
    2. '"""' → logprob: -1.4349181652069092
    3. '"""
' → logprob: -3.809918165206909
    4. ')' → logprob: -6.184918403625488
    5. 'Returns' → logprob: -6.184918403625488
    6. '```' → logprob: -7.059918403625488
    7. ' """' → logprob: -8.059918403625488
    8. '""' → logprob: -8.184918403625488
    9. ' """
' → logprob: -9.059918403625488
    10. ' Returns' → logprob: -9.309918403625488

Token 79: ' Returns' (ID: 9609)
  Prédit: 'Returns'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Returns' (adapté à ' Returns') → logprob: -0.00839400477707386
    2. '   ' → logprob: -5.133394241333008
    3. 'returns' → logprob: -7.008394241333008
    4. '"""
' → logprob: -7.133394241333008
    5. '"""' → logprob: -8.383394241333008
    6. ' Returns' → logprob: -8.508394241333008
    7. 'return' → logprob: -9.008394241333008
    8. 'Return' → logprob: -9.508394241333008
    9. 'Retour' → logprob: -9.508394241333008
    10. '```' → logprob: -10.133394241333008

Token 80: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9980533123016357
    2. '   ' → logprob: -1.2480533123016357
    3. '<|end|>' → logprob: -1.9980533123016357
    4. ' :' → logprob: -2.1230533123016357
    5. '```' → logprob: -3.1230533123016357
    6. '<|end|>' → logprob: -4.748053550720215
    7. '    ' → logprob: -4.873053550720215
    8. ' str' → logprob: -5.373053550720215
    9. '[str' → logprob: -5.748053550720215
    10. ')' → logprob: -5.873053550720215

Token 81: '       ' (ID: 309)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.02631469815969467
    2. 'str' → logprob: -4.526314735412598
    3. '   ' → logprob: -4.776314735412598
    4. '    ' → logprob: -5.526314735412598
    5. '       ' → logprob: -6.776314735412598
    6. ' ' → logprob: -7.651314735412598
    7. ' ' → logprob: -7.901314735412598
    8. ' "' → logprob: -8.901314735412598
    9. ' (' → logprob: -9.151314735412598
    10. '"' → logprob: -9.776314735412598

Token 82: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' (adapté à ' str') → logprob: -0.0072164880111813545
    2. ' str' → logprob: -5.007216453552246
    3. '   ' → logprob: -7.757216453552246
    4. '       ' → logprob: -9.632216453552246
    5. '```' → logprob: -13.382216453552246
    6. 'Str' → logprob: -13.632216453552246
    7. 'int' → logprob: -14.132216453552246
    8. '(str' → logprob: -14.382216453552246
    9. '        
' → logprob: -14.882216453552246
    10. '[str' → logprob: -14.882216453552246

Token 83: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036393918562680483
    2. ' :' → logprob: -6.628639221191406
    3. '```' → logprob: -6.878639221191406
    4. '   ' → logprob: -7.628639221191406
    5. '"""' → logprob: -8.503639221191406
    6. ':
' → logprob: -8.878639221191406
    7. ')' → logprob: -9.753639221191406
    8. '):' → logprob: -9.753639221191406
    9. '<|end|>' → logprob: -10.128639221191406
    10. '"""
' → logprob: -10.503639221191406

Token 84: ' Le' (ID: 2018)
  Prédit: ' La'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' La' → logprob: -0.21625816822052002
    2. 'La' → logprob: -2.0912580490112305
    3. ' Le' → logprob: -2.8412580490112305
    4. 'Le' → logprob: -4.7162580490112305
    5. '   ' → logprob: -6.3412580490112305
    6. ' la' → logprob: -7.3412580490112305
    7. ' Une' → logprob: -7.5912580490112305
    8. 'Une' → logprob: -8.21625804901123
    9. '"La' → logprob: -9.59125804901123
    10. ' le' → logprob: -10.34125804901123

Token 85: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.045422304421663284
    2. 'nombre' → logprob: -3.795422315597534
    3. ' ' → logprob: -5.045422077178955
    4. ' nouveau' → logprob: -5.045422077178955
    5. ' résultat' → logprob: -6.170422077178955
    6. '   ' → logprob: -6.295422077178955
    7. ' numéro' → logprob: -7.170422077178955
    8. '  ' → logprob: -7.545422077178955
    9. ' code' → logprob: -7.545422077178955
    10. 'n' → logprob: -7.670422077178955

Token 86: ' transform' (ID: 7118)
  Prédit: ' transform'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' transform' → logprob: -0.26528286933898926
    2. 'transform' → logprob: -1.5152828693389893
    3. ' transformed' → logprob: -5.76528263092041
    4. '   ' → logprob: -6.14028263092041
    5. 'trans' → logprob: -6.26528263092041
    6. ' transforme' → logprob: -6.26528263092041
    7. '_transform' → logprob: -6.76528263092041
    8. '_' → logprob: -7.76528263092041
    9. '	transform' → logprob: -7.89028263092041
    10. ' trans' → logprob: -7.89028263092041

Token 87: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -3.2617008400848135e-05
    2. 'e' → logprob: -10.750032424926758
    3. 'ée' → logprob: -11.625032424926758
    4. 'ed' → logprob: -13.500032424926758
    5. '�' → logprob: -15.250032424926758
    6. 'Ã' → logprob: -15.500032424926758
    7. '"' → logprob: -16.375032424926758
    8. '   ' → logprob: -16.750032424926758
    9. 'è' → logprob: -16.875032424926758
    10. 'É' → logprob: -17.125032424926758

Token 88: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1237044706940651
    2. '
' → logprob: -3.248704433441162
    3. '\n' → logprob: -3.498704433441162
    4. '"' → logprob: -4.248704433441162
    5. '"""' → logprob: -5.123704433441162
    6. '.' → logprob: -5.373704433441162
    7. '"""
' → logprob: -5.498704433441162
    8. '\' → logprob: -5.623704433441162
    9. '    
' → logprob: -5.748704433441162
    10. ')' → logprob: -5.873704433441162

Token 89: ' sous' (ID: 14487)
  Prédit: ' sous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sous' → logprob: -0.4152427017688751
    2. '   ' → logprob: -1.4152426719665527
    3. ' en' → logprob: -4.040242671966553
    4. ' où' → logprob: -4.540242671966553
    5. '```' → logprob: -4.665242671966553
    6. ' transform' → logprob: -5.040242671966553
    7. ' transformed' → logprob: -5.165242671966553
    8. ' form' → logprob: -5.290242671966553
    9. ' avec' → logprob: -5.540242671966553
    10. ' chaîne' → logprob: -5.790242671966553

Token 90: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.1812174767255783
    2. 'forme' → logprob: -1.9312174320220947
    3. ' form' → logprob: -4.556217670440674
    4. 'form' → logprob: -4.806217670440674
    5. '   ' → logprob: -6.931217670440674
    6. 'chaine' → logprob: -7.931217670440674
    7. ' sa' → logprob: -8.306217193603516
    8. ' la' → logprob: -9.681217193603516
    9. '-form' → logprob: -10.306217193603516
    10. '```' → logprob: -10.306217193603516

Token 91: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.028298504650592804
    2. 'de' → logprob: -3.6532986164093018
    3. ' d' → logprob: -6.403298377990723
    4. 'd' → logprob: -8.278298377990723
    5. '   ' → logprob: -9.528298377990723
    6. '_de' → logprob: -12.528298377990723
    7. ' ' → logprob: -13.028298377990723
    8. '  ' → logprob: -13.153298377990723
    9. 'def' → logprob: -13.153298377990723
    10. 'e' → logprob: -14.278298377990723

Token 92: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.0023164297454059124
    2. 'chaine' → logprob: -6.877316474914551
    3. 'cha' → logprob: -7.127316474914551
    4. ' chaine' → logprob: -7.752316474914551
    5. ' chaînes' → logprob: -11.00231647491455
    6. ' cha' → logprob: -11.12731647491455
    7. ' ' → logprob: -12.12731647491455
    8. ' ' → logprob: -12.62731647491455
    9. '-cha' → logprob: -13.12731647491455
    10. ' string' → logprob: -13.12731647491455

Token 93: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06190885603427887
    2. ' de' → logprob: -3.1869089603424072
    3. '.' → logprob: -4.936908721923828
    4. '_' → logprob: -6.061908721923828
    5. '"' → logprob: -6.311908721923828
    6. 'de' → logprob: -6.686908721923828
    7. '"""' → logprob: -6.811908721923828
    8. '```' → logprob: -6.811908721923828
    9. ':' → logprob: -7.436908721923828
    10. ')' → logprob: -7.561908721923828

Token 94: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.20162636041641235
    2. ' caractères' → logprob: -1.7016263008117676
    3. ' caractère' → logprob: -10.201626777648926
    4. ' car' → logprob: -10.201626777648926
    5. 'chaine' → logprob: -10.326626777648926
    6. 'cha' → logprob: -10.826626777648926
    7. 'str' → logprob: -10.951626777648926
    8. '   ' → logprob: -11.326626777648926
    9. ' caract' → logprob: -11.326626777648926
    10. ' ' → logprob: -11.326626777648926

Token 95: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7480500936508179
    2. '   ' → logprob: -0.9980500936508179
    3. ')' → logprob: -2.9980502128601074
    4. '\n' → logprob: -2.9980502128601074
    5. ':
' → logprob: -3.8730502128601074
    6. '):' → logprob: -4.623050212860107
    7. '"' → logprob: -4.873050212860107
    8. '"""' → logprob: -5.373050212860107
    9. '
' → logprob: -5.873050212860107
    10. '.' → logprob: -5.998050212860107

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15128380060195923
    2. '"""' → logprob: -2.0262837409973145
    3. '"' → logprob: -5.0262837409973145
    4. '"""
' → logprob: -6.5262837409973145
    5. '""' → logprob: -8.526284217834473
    6. ' """' → logprob: -9.151284217834473
    7. '```' → logprob: -9.526284217834473
    8. ')' → logprob: -9.651284217834473
    9. '    
' → logprob: -11.276284217834473
    10. '"\' → logprob: -11.401284217834473

Token 97: ' """
' (ID: 7037)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.16802045702934265
    2. '   ' → logprob: -2.043020486831665
    3. '"' → logprob: -4.168020248413086
    4. '"""
' (adapté à ' """
') → logprob: -5.168020248413086
    5. '""' → logprob: -6.168020248413086
    6. ' """' → logprob: -7.668020248413086
    7. ')' → logprob: -7.668020248413086
    8. '```' → logprob: -7.668020248413086
    9. ''''' → logprob: -9.543020248413086
    10. '
' → logprob: -9.543020248413086

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01448995340615511
    2. 'result' → logprob: -4.389490127563477
    3. ' result' → logprob: -6.514490127563477
    4. 'trans' → logprob: -8.389490127563477
    5. 'output' → logprob: -9.139490127563477
    6. ' transformed' → logprob: -9.264490127563477
    7. 'def' → logprob: -10.514490127563477
    8. ' output' → logprob: -11.139490127563477
    9. 'return' → logprob: -11.889490127563477
    10. '```' → logprob: -12.139490127563477

Token 99: ' ans' (ID: 3345)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.22621813416481018
    2. 'return' → logprob: -2.2262182235717773
    3. 'output' → logprob: -2.9762182235717773
    4. 'trans' → logprob: -3.3512182235717773
    5. ' result' → logprob: -5.601218223571777
    6. '   ' → logprob: -6.101218223571777
    7. ' return' → logprob: -6.601218223571777
    8. ' output' → logprob: -7.101218223571777
    9. ' transformed' → logprob: -7.976218223571777
    10. 'new' → logprob: -11.601218223571777

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47933897376060486
    2. '=' → logprob: -0.9793390035629272
    3. 'wer' → logprob: -5.979339122772217
    4. 'w' → logprob: -6.354339122772217
    5. '   ' → logprob: -7.604339122772217
    6. '       ' → logprob: -8.729338645935059
    7. '_' → logprob: -9.229338645935059
    8. '[]' → logprob: -9.979338645935059
    9. '[' → logprob: -10.479338645935059
    10. '=[]' → logprob: -10.729338645935059

Token 101: ' []' (ID: 6126)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.05861862003803253
    2. '''' → logprob: -2.9336185455322266
    3. ' ""' → logprob: -6.308618545532227
    4. '"' → logprob: -6.683618545532227
    5. '[]' → logprob: -7.808618545532227
    6. ' ''' → logprob: -8.433618545532227
    7. ' []' → logprob: -11.183618545532227
    8. ''' → logprob: -11.183618545532227
    9. '"""' → logprob: -13.183618545532227
    10. '''.' → logprob: -14.058618545532227

Token 102: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5260940790176392
    2. '   ' → logprob: -1.2760940790176392
    3. ' for' → logprob: -2.5260939598083496
    4. 'for' → logprob: -3.4010939598083496
    5. '    
' → logprob: -4.65109395980835
    6. ' 
' → logprob: -6.15109395980835
    7. '  
' → logprob: -6.52609395980835
    8. ' ' → logprob: -6.77609395980835
    9. '   
' → logprob: -7.40109395980835
    10. '\n' → logprob: -7.77609395980835

Token 103: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0417843796312809
    2. '
' → logprob: -3.7917842864990234
    3. ' for' → logprob: -4.166784286499023
    4. '   ' → logprob: -6.041784286499023
    5. ' 
' → logprob: -8.791784286499023
    6. '    
' → logprob: -9.291784286499023
    7. ' ' → logprob: -9.416784286499023
    8. '\n' → logprob: -9.791784286499023
    9. '  
' → logprob: -10.791784286499023
    10. 'f' → logprob: -10.916784286499023

Token 104: ' Liste' (ID: 61030)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6041603684425354
    2. ' for' → logprob: -1.4791603088378906
    3. '[]' → logprob: -2.2291603088378906
    4. '<|end|>' → logprob: -2.9791603088378906
    5. '[' → logprob: -3.9791603088378906
    6. ' []' → logprob: -4.354160308837891
    7. '<|end|>' → logprob: -4.354160308837891
    8. '#' → logprob: -5.104160308837891
    9. ' ' → logprob: -5.229160308837891
    10. ')' → logprob: -6.729160308837891

Token 105: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 106: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.019613467156887054
    2. 'stock' → logprob: -4.019613265991211
    3. 'collect' → logprob: -7.644613265991211
    4. ' collect' → logprob: -7.894613265991211
    5. 'r' → logprob: -8.894613265991211
    6. ' recue' → logprob: -9.144613265991211
    7. 'acc' → logprob: -9.269613265991211
    8. ' accueillir' → logprob: -9.519613265991211
    9. ' accum' → logprob: -9.769613265991211
    10. '_stock' → logprob: -10.894613265991211

Token 107: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.008779902011156082
    2. 'érer' → logprob: -5.133780002593994
    3. 'uer' → logprob: -6.258780002593994
    4. 'uler' → logprob: -8.383779525756836
    5. 'urer' → logprob: -8.633779525756836
    6. 'e' → logprob: -8.633779525756836
    7. 'erer' → logprob: -9.633779525756836
    8. 'ue' → logprob: -9.758779525756836
    9. '   ' → logprob: -9.758779525756836
    10. ' er' → logprob: -10.258779525756836

Token 108: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3346773684024811
    2. '<|end|>' → logprob: -1.8346773386001587
    3. ' les' → logprob: -2.5846774578094482
    4. ' le' → logprob: -4.084677219390869
    5. ' l' → logprob: -4.834677219390869
    6. ' la' → logprob: -5.334677219390869
    7. ' the' → logprob: -5.709677219390869
    8. '<|end|>' → logprob: -5.834677219390869
    9. '  ' → logprob: -6.084677219390869
    10. 's' → logprob: -6.334677219390869

Token 109: ' chiffre' (ID: 107420)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.2198629230260849
    2. ' caractère' → logprob: -2.219862937927246
    3. ' ' → logprob: -3.094862937927246
    4. ' caract' → logprob: -4.219862937927246
    5. ' car' → logprob: -5.344862937927246
    6. ' chiffre' → logprob: -5.719862937927246
    7. 'c' → logprob: -5.844862937927246
    8. ' nouveau' → logprob: -6.094862937927246
    9. 'char' → logprob: -6.469862937927246
    10. '   ' → logprob: -6.469862937927246

Token 110: ' transform' (ID: 7118)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20267683267593384
    2. ' for' → logprob: -2.202676773071289
    3. ' ' → logprob: -3.452676773071289
    4. 'for' → logprob: -4.077676773071289
    5. '    
' → logprob: -4.827676773071289
    6. '    ' → logprob: -5.702676773071289
    7. '  ' → logprob: -6.077676773071289
    8. '<|end|>' → logprob: -6.077676773071289
    9. ' 
' → logprob: -6.577676773071289
    10. '  
' → logprob: -6.702676773071289

Token 111: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0011855880729854107
    2. 'e' → logprob: -6.876185417175293
    3. '_' → logprob: -8.876185417175293
    4. 'ed' → logprob: -12.876185417175293
    5. 'ée' → logprob: -13.001185417175293
    6. 'a' → logprob: -13.501185417175293
    7. 'è' → logprob: -13.626185417175293
    8. 'és' → logprob: -14.001185417175293
    9. '�' → logprob: -14.001185417175293
    10. ' é' → logprob: -14.626185417175293

Token 112: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23676159977912903
    2. '   ' → logprob: -2.2367615699768066
    3. ' for' → logprob: -2.6117615699768066
    4. 'for' → logprob: -4.736761569976807
    5. ' 
' → logprob: -4.861761569976807
    6. '    
' → logprob: -5.111761569976807
    7. '  
' → logprob: -5.861761569976807
    8. '\n' → logprob: -6.736761569976807
    9. ' ' → logprob: -6.861761569976807
    10. '   
' → logprob: -7.361761569976807

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11037776619195938
    2. ' for' → logprob: -2.735377788543701
    3. 'for' → logprob: -3.235377788543701
    4. '    
' → logprob: -8.485377311706543
    5. '	for' → logprob: -9.985377311706543
    6. '    ' → logprob: -11.110377311706543
    7. '
' → logprob: -11.235377311706543
    8. '  ' → logprob: -12.485377311706543
    9. ' ' → logprob: -13.735377311706543
    10. '   
' → logprob: -13.985377311706543

Token 114: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005608965293504298
    2. ' for' → logprob: -7.500560760498047
    3. '   ' → logprob: -11.750560760498047
    4. ' ' → logprob: -18.250560760498047
    5. '	for' → logprob: -18.250560760498047
    6. '```' → logprob: -19.250560760498047
    7. '    
' → logprob: -19.875560760498047
    8. '
' → logprob: -20.625560760498047
    9. '  ' → logprob: -20.750560760498047
    10. 'pour' → logprob: -21.125560760498047

Token 115: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.026325615122914314
    2. ' for' → logprob: -3.6513257026672363
    3. '   ' → logprob: -10.651325225830078
    4. 'pour' → logprob: -14.151325225830078
    5. ' ' → logprob: -14.901325225830078
    6. ' pour' → logprob: -16.401325225830078
    7. 'For' → logprob: -16.526325225830078
    8. '	for' → logprob: -16.526325225830078
    9. 'def' → logprob: -16.901325225830078
    10. '```' → logprob: -17.151325225830078

Token 116: 'ourt' (ID: 38600)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.005970865488052368
    2. 'ours' → logprob: -5.2559709548950195
    3. 'or' → logprob: -8.38097095489502
    4. 'ourt' → logprob: -8.88097095489502
    5. 'ou' → logprob: -9.13097095489502
    6. 'orrer' → logprob: -9.75597095489502
    7. 'oure' → logprob: -10.00597095489502
    8. 'orer' → logprob: -10.63097095489502
    9. 'er' → logprob: -10.75597095489502
    10. 'ourse' → logprob: -11.00597095489502

Token 117: ' chaque' (ID: 21194)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1595573425292969
    2. ' le' → logprob: -1.6595573425292969
    3. ' input' → logprob: -1.6595573425292969
    4. ' for' → logprob: -2.034557342529297
    5. ' ' → logprob: -2.534557342529297
    6. ' la' → logprob: -3.409557342529297
    7. ' chaque' → logprob: -4.159557342529297
    8. 'r' → logprob: -4.784557342529297
    9. '  ' → logprob: -5.034557342529297
    10. 'er' → logprob: -5.534557342529297

Token 118: ' caractère' (ID: 80509)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.14646577835083
    2. ' c' → logprob: -1.89646577835083
    3. ' caract' → logprob: -1.89646577835083
    4. ' caractère' → logprob: -2.27146577835083
    5. 'char' → logprob: -2.39646577835083
    6. 'car' → logprob: -2.89646577835083
    7. 'ch' → logprob: -3.02146577835083
    8. ' char' → logprob: -3.64646577835083
    9. ' ' → logprob: -3.64646577835083
    10. ' chiffre' → logprob: -4.77146577835083

Token 119: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.759149968624115
    2. ' de' → logprob: -0.759149968624115
    3. ' in' → logprob: -4.50915002822876
    4. ' du' → logprob: -4.63415002822876
    5. ' for' → logprob: -4.88415002822876
    6. ' ' → logprob: -5.00915002822876
    7. 'de' → logprob: -5.25915002822876
    8. 's' → logprob: -5.38415002822876
    9. ' input' → logprob: -5.63415002822876
    10. ' i' → logprob: -5.88415002822876

Token 120: 'ch' (ID: 332)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3405599594116211
    2. 'ch' → logprob: -1.465559959411621
    3. 'digit' → logprob: -3.965559959411621
    4. 'char' → logprob: -4.465559959411621
    5. ' c' → logprob: -4.840559959411621
    6. 'input' → logprob: -5.090559959411621
    7. 'car' → logprob: -5.840559959411621
    8. ' input' → logprob: -6.215559959411621
    9. ' digit' → logprob: -6.340559959411621
    10. ' chiffre' → logprob: -6.715559959411621

Token 121: 'iff' (ID: 4443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9925424456596375
    2. '   ' → logprob: -1.2425425052642822
    3. 'ar' → logprob: -1.3675425052642822
    4. 'i' → logprob: -3.7425425052642822
    5. 'e' → logprob: -3.9925425052642822
    6. 'iff' → logprob: -4.367542266845703
    7. '```' → logprob: -4.867542266845703
    8. 'if' → logprob: -4.992542266845703
    9. 'r' → logprob: -5.742542266845703
    10. '  ' → logprob: -5.867542266845703

Token 122: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.004354286473244429
    2. 'fre' → logprob: -5.504354476928711
    3. 'er' → logprob: -8.754354476928711
    4. 'r' → logprob: -10.504354476928711
    5. 'e' → logprob: -10.629354476928711
    6. 'ere' → logprob: -11.004354476928711
    7. 'ère' → logprob: -11.754354476928711
    8. '   ' → logprob: -12.004354476928711
    9. '```' → logprob: -12.004354476928711
    10. 'ifre' → logprob: -12.504354476928711

Token 123: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7231588959693909
    2. ' in' → logprob: -0.9731588959693909
    3. ' de' → logprob: -2.598158836364746
    4. ' )' → logprob: -3.223158836364746
    5. '   ' → logprob: -4.723158836364746
    6. 'in' → logprob: -5.223158836364746
    7. 'de' → logprob: -5.973158836364746
    8. ' dans' → logprob: -6.223158836364746
    9. ' ' → logprob: -6.973158836364746
    10. ' du' → logprob: -7.098158836364746

Token 124: ' du' (ID: 1462)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.34019574522972107
    2. '   ' → logprob: -2.465195655822754
    3. ' in' → logprob: -2.715195655822754
    4. ' dans' → logprob: -3.215195655822754
    5. ' du' → logprob: -3.715195655822754
    6. 's' → logprob: -4.215195655822754
    7. ' ' → logprob: -4.465195655822754
    8. 'de' → logprob: -5.090195655822754
    9. 'u' → logprob: -5.340195655822754
    10. ' d' → logprob: -5.465195655822754

Token 125: ' nombre' (ID: 9733)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.02325444668531418
    2. 'input' → logprob: -3.77325439453125
    3. ' ' → logprob: -12.39825439453125
    4. '_input' → logprob: -13.89825439453125
    5. '=input' → logprob: -14.27325439453125
    6. '	input' → logprob: -14.39825439453125
    7. 's' → logprob: -14.52325439453125
    8. '(input' → logprob: -14.77325439453125
    9. ' ' → logprob: -15.27325439453125
    10. '   ' → logprob: -15.64825439453125

Token 126: ' d' (ID: 272)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.9061958193778992
    2. ' dans' → logprob: -1.781195878982544
    3. 's' → logprob: -1.906195878982544
    4. ' de' → logprob: -2.906195878982544
    5. ' in' → logprob: -3.406195878982544
    6. ' d' → logprob: -3.531195878982544
    7. ' for' → logprob: -3.656195878982544
    8. 'input' → logprob: -3.656195878982544
    9. '   ' → logprob: -3.656195878982544
    10. ',' → logprob: -4.406195640563965

Token 127: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.04667806252837181
    2. 'input' → logprob: -4.171678066253662
    3. ''' → logprob: -4.296678066253662
    4. 'e' → logprob: -4.921678066253662
    5. 'ans' → logprob: -5.421678066253662
    6. 'entrée' → logprob: -5.921678066253662
    7. ' input' → logprob: -6.796678066253662
    8. '_input' → logprob: -8.546677589416504
    9. '’entrée' → logprob: -8.796677589416504
    10. 'es' → logprob: -8.921677589416504

Token 128: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04867570847272873
    2. '    
' → logprob: -4.048675537109375
    3. ' for' → logprob: -4.548675537109375
    4. ':' → logprob: -5.298675537109375
    5. ',' → logprob: -5.423675537109375
    6. '
' → logprob: -5.798675537109375
    7. '<|end|>' → logprob: -6.173675537109375
    8. '  
' → logprob: -6.673675537109375
    9. ' 
' → logprob: -7.048675537109375
    10. 'for' → logprob: -7.048675537109375

Token 129: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004163876175880432
    2. ' for' → logprob: -5.62916374206543
    3. 'for' → logprob: -7.87916374206543
    4. '    
' → logprob: -9.25416374206543
    5. ',' → logprob: -9.87916374206543
    6. '    ' → logprob: -10.87916374206543
    7. '
' → logprob: -12.25416374206543
    8. '  ' → logprob: -12.75416374206543
    9. ':' → logprob: -13.25416374206543
    10. ' ' → logprob: -13.62916374206543

Token 130: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014541073702275753
    2. 'for' (adapté à ' for') → logprob: -4.264541149139404
    3. '   ' → logprob: -7.889541149139404
    4. '    
' → logprob: -14.139540672302246
    5. ' 
' → logprob: -14.264540672302246
    6. '	for' → logprob: -14.639540672302246
    7. ' ' → logprob: -15.139540672302246
    8. '    ' → logprob: -15.764540672302246
    9. ' ' → logprob: -16.139541625976562
    10. 'n' → logprob: -16.514541625976562

Token 131: ' i' (ID: 575)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.7535516619682312
    2. ' char' → logprob: -0.7535516619682312
    3. ' digit' → logprob: -3.003551721572876
    4. ' ch' → logprob: -5.503551483154297
    5. ' ' → logprob: -6.128551483154297
    6. 'char' → logprob: -6.878551483154297
    7. 'digit' → logprob: -7.253551483154297
    8. 'c' → logprob: -7.878551483154297
    9. ' chiffre' → logprob: -8.628551483154297
    10. ' i' → logprob: -9.378551483154297

Token 132: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20236042141914368
    2. 'n' → logprob: -1.8273603916168213
    3. 'in' → logprob: -4.2023606300354
    4. ' n' → logprob: -5.8273606300354
    5. ' ' → logprob: -5.9523606300354
    6. ',' → logprob: -6.5773606300354
    7. 's' → logprob: -8.577360153198242
    8. ' i' → logprob: -9.327360153198242
    9. ' ,' → logprob: -9.702360153198242
    10. '  ' → logprob: -10.327360153198242

Token 133: ' range' (ID: 3352)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.025763580575585365
    2. 'input' → logprob: -3.900763511657715
    3. ' range' → logprob: -5.525763511657715
    4. 'put' → logprob: -7.025763511657715
    5. ' ' → logprob: -8.775763511657715
    6. 'range' → logprob: -9.400763511657715
    7. 'n' → logprob: -9.900763511657715
    8. '(input' → logprob: -11.525763511657715
    9. 'p' → logprob: -11.900763511657715
    10. 'ut' → logprob: -12.275763511657715

Token 134: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0002142650482710451
    2. '(' → logprob: -8.500214576721191
    3. 'len' → logprob: -11.875214576721191
    4. ' len' → logprob: -12.750214576721191
    5. ' (' → logprob: -14.125214576721191
    6. '(
' → logprob: -16.125213623046875
    7. '(length' → logprob: -17.750213623046875
    8. ',len' → logprob: -17.750213623046875
    9. '	len' → logprob: -18.000213623046875
    10. '<len' → logprob: -18.250213623046875

Token 135: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0008933556382544339
    2. '(' → logprob: -7.125893592834473
    3. ' (' → logprob: -9.625893592834473
    4. 'input' → logprob: -11.375893592834473
    5. '(
' → logprob: -12.125893592834473
    6. ' input' → logprob: -12.625893592834473
    7. ')' → logprob: -14.250893592834473
    8. '=input' → logprob: -14.500893592834473
    9. ',input' → logprob: -14.500893592834473
    10. '(in' → logprob: -15.625893592834473

Token 136: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -5.200166469876422e-06
    2. '_' → logprob: -13.000004768371582
    3. '(input' → logprob: -14.125004768371582
    4. 'number' → logprob: -14.250004768371582
    5. '_input' → logprob: -14.625004768371582
    6. '_string' → logprob: -15.250004768371582
    7. '_numbers' → logprob: -15.625004768371582
    8. 'input' → logprob: -16.2500057220459
    9. ' _' → logprob: -16.2500057220459
    10. '   ' → logprob: -16.3750057220459

Token 137: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.1740812212228775
    2. '):' → logprob: -1.9240812063217163
    3. '))' → logprob: -4.674081325531006
    4. ' ):' → logprob: -5.799081325531006
    5. ')):
' → logprob: -7.674081325531006
    6. ')' → logprob: -8.049080848693848
    7. ' ))' → logprob: -8.174080848693848
    8. ' ' → logprob: -9.049080848693848
    9. ':' → logprob: -9.049080848693848
    10. '   ' → logprob: -10.174080848693848

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3379270136356354
    2. ' ' → logprob: -1.712926983833313
    3. '   ' → logprob: -3.2129271030426025
    4. '    ' → logprob: -3.7129271030426025
    5. ':' → logprob: -4.587926864624023
    6. ' 
' → logprob: -4.962926864624023
    7. ' if' → logprob: -5.337926864624023
    8. '<|end|>' → logprob: -5.462926864624023
    9. ')' → logprob: -5.712926864624023
    10. 'if' → logprob: -6.337926864624023

Token 139: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2701394259929657
    2. 'if' (adapté à ' if') → logprob: -1.520139455795288
    3. 'ch' → logprob: -5.145139217376709
    4. '   ' → logprob: -5.270139217376709
    5. '       ' → logprob: -6.145139217376709
    6. 'c' → logprob: -6.145139217376709
    7. ' c' → logprob: -6.895139217376709
    8. 'char' → logprob: -7.520139217376709
    9. 'digit' → logprob: -7.770139217376709
    10. ' char' → logprob: -8.270139694213867

Token 140: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.06995443999767303
    2. 'input' → logprob: -2.6949543952941895
    3. ' ' → logprob: -11.944954872131348
    4. '   ' → logprob: -12.694954872131348
    5. '(input' → logprob: -12.819954872131348
    6. '	input' → logprob: -13.069954872131348
    7. '[input' → logprob: -13.569954872131348
    8. '<input' → logprob: -14.819954872131348
    9. '=input' → logprob: -14.944954872131348
    10. '    ' → logprob: -15.194954872131348

Token 141: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -9.507972572464496e-05
    2. '_' → logprob: -9.62509536743164
    3. 'umber' → logprob: -11.12509536743164
    4. ' _' → logprob: -12.25009536743164
    5. 'number' → logprob: -12.87509536743164
    6. '_n' → logprob: -13.62509536743164
    7. '```' → logprob: -13.75009536743164
    8. '_string' → logprob: -14.12509536743164
    9. 'Number' → logprob: -14.50009536743164
    10. '[_' → logprob: -14.62509536743164

Token 142: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0022600446827709675
    2. '[' → logprob: -6.127260208129883
    3. '[input' → logprob: -10.127260208129883
    4. ' [' → logprob: -10.377260208129883
    5. '[I' → logprob: -13.127260208129883
    6. '[
' → logprob: -14.377260208129883
    7. '```' → logprob: -15.627260208129883
    8. '[_' → logprob: -15.752260208129883
    9. '   ' → logprob: -16.127260208129883
    10. '\[' → logprob: -16.127260208129883

Token 143: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10046792775392532
    2. ']' → logprob: -2.9754679203033447
    3. ' )' → logprob: -4.225468158721924
    4. '==' → logprob: -4.350468158721924
    5. ' ==' → logprob: -5.100468158721924
    6. ']==' → logprob: -5.225468158721924
    7. ')==' → logprob: -5.600468158721924
    8. ' ]' → logprob: -7.350468158721924
    9. '']' → logprob: -8.100467681884766
    10. '')' → logprob: -8.225467681884766

Token 144: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.314103901386261
    2. '==' → logprob: -1.3141038417816162
    3. '=' → logprob: -7.814104080200195
    4. '=='' → logprob: -8.689104080200195
    5. ' ' → logprob: -9.189104080200195
    6. ')' → logprob: -9.814104080200195
    7. ' =='' → logprob: -10.189104080200195
    8. ''' → logprob: -10.439104080200195
    9. ')==' → logprob: -11.814104080200195
    10. ']==' → logprob: -11.814104080200195

Token 145: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00044675805838778615
    2. ' '' → logprob: -7.875446796417236
    3. '"' → logprob: -9.625446319580078
    4. '1' → logprob: -14.750446319580078
    5. ' "' → logprob: -17.375446319580078
    6. ' ' → logprob: -17.750446319580078
    7. ''s' → logprob: -17.750446319580078
    8. ''un' → logprob: -17.750446319580078
    9. ''a' → logprob: -18.000446319580078
    10. ''user' → logprob: -18.125446319580078

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ''' → logprob: -11.62501049041748
    3. '"' → logprob: -13.62501049041748
    4. ' ' → logprob: -17.375009536743164
    5. ''"' → logprob: -19.000009536743164
    6. '```' → logprob: -19.000009536743164
    7. ''s' → logprob: -19.625009536743164
    8. '' → logprob: -19.875009536743164
    9. '"""' → logprob: -20.250009536743164
    10. '１' → logprob: -21.125009536743164

Token 147: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.045559562742710114
    2. '"' → logprob: -3.1705596446990967
    3. '":
' → logprob: -6.295559406280518
    4. '"):' → logprob: -7.920559406280518
    5. '):' → logprob: -8.545559883117676
    6. ':' → logprob: -10.045559883117676
    7. '"):
' → logprob: -10.670559883117676
    8. ' "' → logprob: -11.045559883117676
    9. ')' → logprob: -11.170559883117676
    10. '9' → logprob: -11.295559883117676

Token 148: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1071520671248436
    2. '9' → logprob: -3.232151985168457
    3. ' ans' → logprob: -3.857151985168457
    4. 'ans' → logprob: -4.107151985168457
    5. ':' → logprob: -4.482151985168457
    6. '"' → logprob: -5.357151985168457
    7. ')' → logprob: -6.357151985168457
    8. '       ' → logprob: -6.357151985168457
    9. '
' → logprob: -6.857151985168457
    10. '            
' → logprob: -7.357151985168457

Token 149: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.2115630954504013
    2. ' ans' → logprob: -1.7115631103515625
    3. '9' → logprob: -5.2115631103515625
    4. '           ' → logprob: -5.4615631103515625
    5. '
' → logprob: -9.086563110351562
    6. '	ans' → logprob: -9.086563110351562
    7. '       ' → logprob: -10.086563110351562
    8. 'answer' → logprob: -10.586563110351562
    9. '            
' → logprob: -10.711563110351562
    10. '(ans' → logprob: -10.961563110351562

Token 150: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.09264116734266281
    2. ' ans' → logprob: -2.4676411151885986
    3. '           ' → logprob: -5.717641353607178
    4. '   ' → logprob: -8.59264087677002
    5. '       ' → logprob: -9.09264087677002
    6. '	ans' → logprob: -9.71764087677002
    7. '
' → logprob: -11.84264087677002
    8. '9' → logprob: -12.09264087677002
    9. ' ' → logprob: -12.21764087677002
    10. '    ' → logprob: -12.46764087677002

Token 151: ' le' (ID: 505)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.22548578679561615
    2. 'ans' → logprob: -1.6004858016967773
    3. '	ans' → logprob: -10.350485801696777
    4. '           ' → logprob: -10.975485801696777
    5. '(ans' → logprob: -11.600485801696777
    6. '   ' → logprob: -11.975485801696777
    7. '9' → logprob: -13.100485801696777
    8. '_ans' → logprob: -13.475485801696777
    9. '    ' → logprob: -13.600485801696777
    10. '       ' → logprob: -14.100485801696777

Token 152: ' chiffre' (ID: 107420)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.055554844439029694
    2. ' ans' → logprob: -2.9305548667907715
    3. '1' → logprob: -8.180554389953613
    4. ' ' → logprob: -9.305554389953613
    5. '   ' → logprob: -9.555554389953613
    6. '	ans' → logprob: -9.805554389953613
    7. '9' → logprob: -9.930554389953613
    8. 'input' → logprob: -10.680554389953613
    9. '    ' → logprob: -10.930554389953613
    10. '(ans' → logprob: -11.180554389953613

Token 153: ' courant' (ID: 74694)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.19183868169784546
    2. '==' → logprob: -2.4418387413024902
    3. '<|end|>' → logprob: -3.4418387413024902
    4. ' ans' → logprob: -3.6918387413024902
    5. ' ' → logprob: -4.44183874130249
    6. 'ans' → logprob: -5.06683874130249
    7. '<|end|>' → logprob: -6.06683874130249
    8. ')' → logprob: -6.06683874130249
    9. '9' → logprob: -6.31683874130249
    10. '=' → logprob: -7.19183874130249

Token 154: ' est' (ID: 893)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.19289320707321167
    2. 'ans' → logprob: -1.9428932666778564
    3. ' ==' → logprob: -4.192893028259277
    4. '==' → logprob: -5.567893028259277
    5. ':' → logprob: -5.942893028259277
    6. '           ' → logprob: -6.192893028259277
    7. ' ' → logprob: -6.442893028259277
    8. '9' → logprob: -6.442893028259277
    9. '<|end|>' → logprob: -6.567893028259277
    10. ',' → logprob: -7.317893028259277

Token 155: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5361177325248718
    2. ''' → logprob: -0.9111177325248718
    3. ' '' → logprob: -4.9111175537109375
    4. ' "' → logprob: -5.2861175537109375
    5. '9' → logprob: -8.161117553710938
    6. '   ' → logprob: -9.036117553710938
    7. ' ' → logprob: -9.911117553710938
    8. '    ' → logprob: -11.661117553710938
    9. '       ' → logprob: -11.786117553710938
    10. '`' → logprob: -12.411117553710938

Token 156: '1' (ID: 16)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.31346839666366577
    2. '1' → logprob: -1.3134684562683105
    3. ''' → logprob: -9.063467979431152
    4. ' ' → logprob: -9.938467979431152
    5. '"' → logprob: -10.188467979431152
    6. '   ' → logprob: -13.563467979431152
    7. ''s' → logprob: -14.563467979431152
    8. '```' → logprob: -15.125967979431152
    9. '')' → logprob: -15.250967979431152
    10. '"""' → logprob: -15.375967979431152

Token 157: '',' (ID: 787)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8077630996704102
    2. '',' → logprob: -1.8077630996704102
    3. '"' → logprob: -2.43276309967041
    4. '':' → logprob: -3.05776309967041
    5. ':
' → logprob: -3.18276309967041
    6. '':
' → logprob: -3.18276309967041
    7. '           ' → logprob: -3.43276309967041
    8. ':' → logprob: -3.43276309967041
    9. '":' → logprob: -3.55776309967041
    10. ''' → logprob: -3.55776309967041

Token 158: ' ajoute' (ID: 91611)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.15687274932861328
    2. 'ans' → logprob: -2.4068727493286133
    3. '           ' → logprob: -2.9068727493286133
    4. '       ' → logprob: -8.781872749328613
    5. '	ans' → logprob: -8.781872749328613
    6. '            
' → logprob: -10.656872749328613
    7. '        ' → logprob: -11.031872749328613
    8. '               ' → logprob: -11.281872749328613
    9. '_ans' → logprob: -11.281872749328613
    10. '   ' → logprob: -11.531872749328613

Token 159: ' '' (ID: 461)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.18211619555950165
    2. ''' → logprob: -2.3071162700653076
    3. ' '' → logprob: -3.4321162700653076
    4. ' "' → logprob: -3.6821162700653076
    5. '   ' → logprob: -4.9321160316467285
    6. '           ' → logprob: -7.3071160316467285
    7. ''s' → logprob: -7.6821160316467285
    8. '9' → logprob: -8.307116508483887
    9. '       ' → logprob: -8.432116508483887
    10. 'ans' → logprob: -9.057116508483887

Token 160: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.87501335144043
    3. '"' → logprob: -12.62501335144043
    4. ''' → logprob: -12.75001335144043
    5. '   ' → logprob: -15.75001335144043
    6. '99' → logprob: -16.75001335144043
    7. '999' → logprob: -17.37501335144043
    8. '```' → logprob: -17.56251335144043
    9. '９' → logprob: -18.00001335144043
    10. '1' → logprob: -18.37501335144043

Token 161: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08247216045856476
    2. ''
' → logprob: -2.582472085952759
    3. '')' → logprob: -6.332472324371338
    4. '')
' → logprob: -6.832472324371338
    5. '"' → logprob: -7.957472324371338
    6. '9' → logprob: -8.33247184753418
    7. ''
' → logprob: -10.20747184753418
    8. '"
' → logprob: -10.33247184753418
    9. ''"
' → logprob: -10.83247184753418
    10. '1' → logprob: -11.95747184753418

Token 162: ' à' (ID: 1221)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01337714958935976
    2. ')' → logprob: -5.1383771896362305
    3. '       ' → logprob: -5.3883771896362305
    4. '               ' → logprob: -6.8883771896362305
    5. ' ans' → logprob: -7.1383771896362305
    6. 'ans' → logprob: -7.8883771896362305
    7. ',' → logprob: -9.13837718963623
    8. '   ' → logprob: -9.38837718963623
    9. ' à' → logprob: -9.51337718963623
    10. 'else' → logprob: -10.01337718963623

Token 163: ' la' (ID: 557)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.07901492714881897
    2. 'ans' → logprob: -2.579015016555786
    3. '	ans' → logprob: -9.204014778137207
    4. '(ans' → logprob: -11.204014778137207
    5. '9' → logprob: -12.329014778137207
    6. '_ans' → logprob: -12.704014778137207
    7. '   ' → logprob: -13.829014778137207
    8. ' ' → logprob: -14.704014778137207
    9. ' la' → logprob: -14.704014778137207
    10. 'l' → logprob: -15.079014778137207

Token 164: ' liste' (ID: 31719)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.00038813185528852046
    2. ' ans' → logprob: -7.875388145446777
    3. 'answer' → logprob: -12.250388145446777
    4. '	ans' → logprob: -13.250388145446777
    5. '   ' → logprob: -14.375388145446777
    6. '_ans' → logprob: -14.875388145446777
    7. '(ans' → logprob: -15.875388145446777
    8. 'list' → logprob: -16.25038719177246
    9. ' ' → logprob: -16.87538719177246
    10. 'append' → logprob: -17.00038719177246

Token 165: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014618830755352974
    2. '9' → logprob: -5.264618873596191
    3. '               ' → logprob: -5.264618873596191
    4. '
' → logprob: -7.014618873596191
    5. '       ' → logprob: -7.139618873596191
    6. '            
' → logprob: -7.514618873596191
    7. ' ans' → logprob: -7.639618873596191
    8. ')' → logprob: -7.764618873596191
    9. 'ans' → logprob: -7.889618873596191
    10. '          ' → logprob: -8.889618873596191

Token 166: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05049396678805351
    2. 'ans' → logprob: -3.4254939556121826
    3. ' ans' → logprob: -4.425494194030762
    4. '9' → logprob: -6.175494194030762
    5. '               ' → logprob: -6.175494194030762
    6. '
' → logprob: -7.925494194030762
    7. '(ans' → logprob: -9.800494194030762
    8. '            
' → logprob: -9.925494194030762
    9. '       ' → logprob: -9.925494194030762
    10. '          ' → logprob: -11.175494194030762

Token 167: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.56556236743927
    2. ' ans' → logprob: -1.19056236743927
    3. '           ' → logprob: -2.0655622482299805
    4. '9' → logprob: -7.8155622482299805
    5. '               ' → logprob: -8.06556224822998
    6. '	ans' → logprob: -9.31556224822998
    7. '            
' → logprob: -9.44056224822998
    8. '
' → logprob: -9.56556224822998
    9. '       ' → logprob: -10.06556224822998
    10. '(ans' → logprob: -10.44056224822998

Token 168: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001505578518845141
    2. '.' → logprob: -6.501505374908447
    3. 'append' → logprob: -12.751505851745605
    4. '.Append' → logprob: -15.751505851745605
    5. '.app' → logprob: -16.12650489807129
    6. ' append' → logprob: -17.00150489807129
    7. '.extend' → logprob: -17.50150489807129
    8. ' .' → logprob: -17.87650489807129
    9. '.add' → logprob: -18.00150489807129
    10. '.push' → logprob: -18.75150489807129

Token 169: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.38910147547721863
    2. '('' → logprob: -1.139101505279541
    3. '(' → logprob: -6.139101505279541
    4. '"' → logprob: -9.764101028442383
    5. ''' → logprob: -11.264101028442383
    6. '(
' → logprob: -15.139101028442383
    7. '()' → logprob: -16.014101028442383
    8. '("'' → logprob: -16.389101028442383
    9. ' ("' → logprob: -16.764101028442383
    10. '   ' → logprob: -16.889101028442383

Token 170: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '')' → logprob: -18.375
    4. '۹' → logprob: -18.5
    5. '९' → logprob: -18.75
    6. '```' → logprob: -19.0
    7. ')' → logprob: -19.125
    8. '   ' → logprob: -19.25
    9. ''' → logprob: -19.3125
    10. '９' → logprob: -19.5625

Token 171: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.2522561252117157
    2. '')
' → logprob: -1.502256155014038
    3. '       ' → logprob: -8.877256393432617
    4. ')' → logprob: -9.252256393432617
    5. ''' → logprob: -10.002256393432617
    6. '')
' → logprob: -10.752256393432617
    7. ')
' → logprob: -11.627256393432617
    8. '   ' → logprob: -12.377256393432617
    9. '")' → logprob: -13.127256393432617
    10. '           ' → logprob: -13.127256393432617

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002370329457335174
    2. 'else' → logprob: -8.875237464904785
    3. ' else' → logprob: -9.250237464904785
    4. '<|end|>' → logprob: -14.875237464904785
    5. '	else' → logprob: -15.750237464904785
    6. '      ' → logprob: -15.875237464904785
    7. '   ' → logprob: -16.37523651123047
    8. '```' → logprob: -16.50023651123047
    9. '	' → logprob: -16.62523651123047
    10. 'elif' → logprob: -16.62523651123047

Token 173: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17198984324932098
    2. 'else' (adapté à ' else') → logprob: -2.421989917755127
    3. ' else' → logprob: -2.671989917755127
    4. '   ' → logprob: -9.296989440917969
    5. '	else' → logprob: -10.421989440917969
    6. '      ' → logprob: -11.546989440917969
    7. '     ' → logprob: -12.296989440917969
    8. '    ' → logprob: -12.421989440917969
    9. 'elif' → logprob: -13.046989440917969
    10. '
' → logprob: -13.296989440917969

Token 174: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05995370075106621
    2. ':
' → logprob: -2.9349536895751953
    3. '           ' → logprob: -5.309953689575195
    4. '       ' → logprob: -9.309953689575195
    5. '   ' → logprob: -11.434953689575195
    6. ' :' → logprob: -12.184953689575195
    7. '        ' → logprob: -13.309953689575195
    8. '          ' → logprob: -13.434953689575195
    9. ':
' → logprob: -13.559953689575195
    10. ' :
' → logprob: -13.559953689575195

Token 175: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6590071320533752
    2. ' ans' → logprob: -0.7840071320533752
    3. 'ans' → logprob: -4.2840070724487305
    4. '       ' → logprob: -4.6590070724487305
    5. '        ' → logprob: -7.0340070724487305
    6. '	ans' → logprob: -7.4090070724487305
    7. ' ' → logprob: -8.28400707244873
    8. '   ' → logprob: -8.53400707244873
    9. '(ans' → logprob: -8.53400707244873
    10. ' ' → logprob: -9.03400707244873

Token 176: ' #' (ID: 1069)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.011082125827670097
    2. 'ans' → logprob: -4.511082172393799
    3. '           ' → logprob: -11.13608169555664
    4. '	ans' → logprob: -12.01108169555664
    5. '(ans' → logprob: -12.26108169555664
    6. ' ' → logprob: -12.88608169555664
    7. ' ' → logprob: -13.38608169555664
    8. '        ' → logprob: -13.76108169555664
    9. '_ans' → logprob: -13.76108169555664
    10. '            ' → logprob: -13.88608169555664

Token 177: ' Sinon' (ID: 154924)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.36007657647132874
    2. 'ans' → logprob: -1.3600765466690063
    3. '           ' → logprob: -3.110076665878296
    4. '       ' → logprob: -8.110076904296875
    5. '   ' → logprob: -8.485076904296875
    6. '	ans' → logprob: -9.110076904296875
    7. '        ' → logprob: -9.360076904296875
    8. ' ' → logprob: -9.360076904296875
    9. '          ' → logprob: -9.485076904296875
    10. '    ' → logprob: -9.860076904296875

Token 178: ',' (ID: 11)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.026671458035707474
    2. '           ' → logprob: -4.276671409606934
    3. 'ans' → logprob: -4.401671409606934
    4. ' ' → logprob: -10.151671409606934
    5. '	ans' → logprob: -10.151671409606934
    6. '(ans' → logprob: -10.276671409606934
    7. ' ' → logprob: -11.401671409606934
    8. '   ' → logprob: -11.401671409606934
    9. '            ' → logprob: -11.526671409606934
    10. '          ' → logprob: -12.276671409606934

Token 179: ' ajoute' (ID: 91611)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.0432196706533432
    2. 'ans' → logprob: -3.168219566345215
    3. '           ' → logprob: -8.918219566345215
    4. '	ans' → logprob: -10.043219566345215
    5. ' ' → logprob: -11.793219566345215
    6. '(ans' → logprob: -11.918219566345215
    7. ' ' → logprob: -12.043219566345215
    8. '        ' → logprob: -12.168219566345215
    9. '       ' → logprob: -12.418219566345215
    10. '_ans' → logprob: -12.793219566345215

Token 180: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06216810643672943
    2. ' '' → logprob: -2.8121681213378906
    3. '('' → logprob: -8.56216812133789
    4. ''s' → logprob: -13.18716812133789
    5. '           ' → logprob: -13.18716812133789
    6. '"' → logprob: -13.56216812133789
    7. ' ' → logprob: -13.81216812133789
    8. '(' → logprob: -14.56216812133789
    9. ' ' → logprob: -15.06216812133789
    10. '   ' → logprob: -15.18716812133789

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01606428250670433
    2. ''' → logprob: -4.141064167022705
    3. ' '' → logprob: -11.016064643859863
    4. ' ' → logprob: -11.516064643859863
    5. '"' → logprob: -13.891064643859863
    6. '   ' → logprob: -14.016064643859863
    7. '\'' → logprob: -14.891064643859863
    8. '')' → logprob: -15.016064643859863
    9. '''' → logprob: -15.016064643859863
    10. ''s' → logprob: -15.891064643859863

Token 182: ''' (ID: 6)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.003940075635910034
    2. '9' → logprob: -6.128940105438232
    3. ''' → logprob: -6.628940105438232
    4. '')
' → logprob: -7.753940105438232
    5. '1' → logprob: -14.253939628601074
    6. '")' → logprob: -14.628939628601074
    7. ' ')' → logprob: -14.628939628601074
    8. ')' → logprob: -15.003939628601074
    9. '0' → logprob: -15.128939628601074
    10. '7' → logprob: -15.503939628601074

Token 183: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14249756932258606
    2. '')' → logprob: -2.2674975395202637
    3. '           ' → logprob: -4.017497539520264
    4. '       ' → logprob: -5.267497539520264
    5. ''' → logprob: -7.017497539520264
    6. ' )' → logprob: -7.142497539520264
    7. 'ans' → logprob: -7.142497539520264
    8. '   ' → logprob: -7.267497539520264
    9. '(ans' → logprob: -7.392497539520264
    10. '<|end|>' → logprob: -7.642497539520264

Token 184: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6936658620834351
    2. ' ans' → logprob: -0.6936658620834351
    3. ''' → logprob: -8.818665504455566
    4. '(ans' → logprob: -8.818665504455566
    5. ' la' → logprob: -8.943665504455566
    6. '	ans' → logprob: -9.943665504455566
    7. 'la' → logprob: -11.068665504455566
    8. '1' → logprob: -11.818665504455566
    9. ' ' → logprob: -12.193665504455566
    10. 'l' → logprob: -12.443665504455566

Token 185: ' liste' (ID: 31719)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.003428531577810645
    2. ' ans' → logprob: -5.7534284591674805
    3. 'liste' → logprob: -8.37842845916748
    4. 'list' → logprob: -12.00342845916748
    5. ' liste' → logprob: -12.12842845916748
    6. '	ans' → logprob: -12.62842845916748
    7. '(ans' → logprob: -13.12842845916748
    8. '_ans' → logprob: -14.00342845916748
    9. 'lst' → logprob: -14.25342845916748
    10. ' ' → logprob: -15.12842845916748

Token 186: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1079171895980835
    2. ' ans' → logprob: -2.607917308807373
    3. 'ans' → logprob: -4.482917308807373
    4. '       ' → logprob: -4.982917308807373
    5. '(ans' → logprob: -4.982917308807373
    6. '1' → logprob: -6.857917308807373
    7. '   ' → logprob: -6.982917308807373
    8. '               ' → logprob: -8.482916831970215
    9. '          ' → logprob: -8.607916831970215
    10. ')' → logprob: -8.732916831970215

Token 187: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0365944541990757
    2. ' ans' → logprob: -4.036594390869141
    3. 'ans' → logprob: -4.161594390869141
    4. '       ' → logprob: -6.286594390869141
    5. '(ans' → logprob: -8.41159439086914
    6. '   ' → logprob: -8.66159439086914
    7. '	ans' → logprob: -9.28659439086914
    8. '          ' → logprob: -9.41159439086914
    9. '               ' → logprob: -10.28659439086914
    10. '9' → logprob: -10.28659439086914

Token 188: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.10043945908546448
    2. ' ans' → logprob: -2.3504395484924316
    3. '           ' → logprob: -9.100439071655273
    4. '1' → logprob: -9.475439071655273
    5. ''' → logprob: -10.850439071655273
    6. '   ' → logprob: -12.100439071655273
    7. '(ans' → logprob: -12.225439071655273
    8. '	ans' → logprob: -12.350439071655273
    9. '       ' → logprob: -12.475439071655273
    10. ' ' → logprob: -13.850439071655273

Token 189: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0005549400229938328
    2. '.' → logprob: -7.500555038452148
    3. ' .' → logprob: -13.375555038452148
    4. 'append' → logprob: -15.500555038452148
    5. '.app' → logprob: -16.62555503845215
    6. ').' → logprob: -16.75055503845215
    7. '.extend' → logprob: -17.25055503845215
    8. '           ' → logprob: -18.12555503845215
    9. '.Append' → logprob: -18.25055503845215
    10. '.add' → logprob: -19.00055503845215

Token 190: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -2.1888679839321412e-05
    2. '(' → logprob: -10.750021934509277
    3. ''' → logprob: -14.750021934509277
    4. '("' → logprob: -17.37502098083496
    5. '(
' → logprob: -17.87502098083496
    6. ' ('' → logprob: -19.87502098083496
    7. '(('' → logprob: -20.37502098083496
    8. '()' → logprob: -20.50002098083496
    9. ''s' → logprob: -20.62502098083496
    10. ' ' → logprob: -21.87502098083496

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ''' → logprob: -14.250000953674316
    3. '9' → logprob: -15.625000953674316
    4. ' ' → logprob: -17.125
    5. '')' → logprob: -18.375
    6. '   ' → logprob: -20.875
    7. '"' → logprob: -21.0
    8. ' '' → logprob: -22.125
    9. '' → logprob: -22.375
    10. ''s' → logprob: -22.5

Token 192: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029817258939146996
    2. '')' → logprob: -3.5298173427581787
    3. ')
' → logprob: -10.029817581176758
    4. '")' → logprob: -11.279817581176758
    5. ' )' → logprob: -12.404817581176758
    6. '')
' → logprob: -12.904817581176758
    7. '   ' → logprob: -13.404817581176758
    8. ')return' → logprob: -14.779817581176758
    9. '       ' → logprob: -15.029817581176758
    10. ''' → logprob: -15.279817581176758

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12397177517414093
    2. '
' → logprob: -2.748971700668335
    3. 'return' → logprob: -3.498971700668335
    4. ' return' → logprob: -3.873971700668335
    5. '    
' → logprob: -6.748971939086914
    6. '\n' → logprob: -8.748971939086914
    7. '  
' → logprob: -9.248971939086914
    8. ' ' → logprob: -9.998971939086914
    9. '	return' → logprob: -10.123971939086914
    10. ' 
' → logprob: -11.373971939086914

Token 194: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008434432558715343
    2. ' return' → logprob: -5.258434295654297
    3. '   ' → logprob: -5.758434295654297
    4. '
' → logprob: -11.008434295654297
    5. '    
' → logprob: -11.758434295654297
    6. ' ' → logprob: -12.383434295654297
    7. '	return' → logprob: -12.633434295654297
    8. 'eturn' → logprob: -13.133434295654297
    9. '```' → logprob: -13.758434295654297
    10. 'ret' → logprob: -14.133434295654297

Token 195: ' Re' (ID: 907)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.03819733113050461
    2. ' return' → logprob: -3.2881972789764404
    3. '   ' → logprob: -9.53819751739502
    4. 'ret' → logprob: -10.03819751739502
    5. 'Retour' → logprob: -11.16319751739502
    6. 'Return' → logprob: -11.91319751739502
    7. '#' → logprob: -12.41319751739502
    8. 're' → logprob: -12.53819751739502
    9. 'result' → logprob: -13.03819751739502
    10. ' Retour' → logprob: -13.66319751739502

Token 196: 'joint' (ID: 69164)
  Prédit: 'turn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'turn' → logprob: -0.0002112886286340654
    2. 'tour' → logprob: -9.000211715698242
    3. 't' → logprob: -10.125211715698242
    4. 'return' → logprob: -10.375211715698242
    5. 'eturn' → logprob: -12.125211715698242
    6. ' turn' → logprob: -13.000211715698242
    7. 'tr' → logprob: -13.125211715698242
    8. 'join' → logprob: -13.375211715698242
    9. 'turned' → logprob: -13.500211715698242
    10. 'tur' → logprob: -14.125211715698242

Token 197: ' la' (ID: 557)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5515363216400146
    2. '("")' → logprob: -1.3015363216400146
    3. '""' → logprob: -2.9265363216400146
    4. 'ans' → logprob: -3.3015363216400146
    5. '(' → logprob: -3.4265363216400146
    6. '''' → logprob: -4.676536560058594
    7. '(ans' → logprob: -5.301536560058594
    8. '('').' → logprob: -5.551536560058594
    9. '("' → logprob: -5.926536560058594
    10. '(""' → logprob: -6.051536560058594

Token 198: ' liste' (ID: 31719)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.31823861598968506
    2. '''.' → logprob: -1.318238615989685
    3. '''' → logprob: -5.943238735198975
    4. ''' → logprob: -6.818238735198975
    5. '""' → logprob: -7.443238735198975
    6. ' ''.' → logprob: -7.693238735198975
    7. ' "".' → logprob: -9.318238258361816
    8. 'ans' → logprob: -10.193238258361816
    9. '''
' → logprob: -10.193238258361816
    10. 'str' → logprob: -10.818238258361816

Token 199: ' des' (ID: 731)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5842266082763672
    2. ' return' → logprob: -1.7092266082763672
    3. '""' → logprob: -2.084226608276367
    4. '("")' → logprob: -3.459226608276367
    5. '   ' → logprob: -3.709226608276367
    6. '"' → logprob: -4.459226608276367
    7. '.join' → logprob: -4.584226608276367
    8. 'join' → logprob: -4.834226608276367
    9. '''' → logprob: -4.834226608276367
    10. ')' → logprob: -5.084226608276367

Token 200: ' chiffres' (ID: 105565)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.33530619740486145
    2. ' ans' → logprob: -1.335306167602539
    3. ' caractères' → logprob: -3.960306167602539
    4. 'car' → logprob: -7.085306167602539
    5. ' éléments' → logprob: -7.335306167602539
    6. 'ch' → logprob: -8.085306167602539
    7. ' chaînes' → logprob: -8.335306167602539
    8. 'chars' → logprob: -8.585306167602539
    9. ' chiffres' → logprob: -8.835306167602539
    10. 'élé' → logprob: -9.210306167602539

Token 201: ' transform' (ID: 7118)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6030662655830383
    2. ' ans' → logprob: -1.2280662059783936
    3. '''' → logprob: -3.1030662059783936
    4. ' return' → logprob: -3.3530662059783936
    5. 'return' → logprob: -3.6030662059783936
    6. 'join' → logprob: -4.728066444396973
    7. '   ' → logprob: -4.978066444396973
    8. '''.' → logprob: -4.978066444396973
    9. '""' → logprob: -5.103066444396973
    10. '"' → logprob: -5.353066444396973

Token 202: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.4805813729763031
    2. 'ée' → logprob: -0.9805814027786255
    3. 'é' → logprob: -5.230581283569336
    4. 'es' → logprob: -7.480581283569336
    5. 'ées' → logprob: -7.730581283569336
    6. 'e' → logprob: -9.605581283569336
    7. '   ' → logprob: -11.105581283569336
    8. '"' → logprob: -11.105581283569336
    9. 'ed' → logprob: -11.355581283569336
    10. ''' → logprob: -11.480581283569336

Token 203: ' en' (ID: 469)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.053856901824474335
    2. ' return' → logprob: -3.05385684967041
    3. '   ' → logprob: -5.30385684967041
    4. 'join' → logprob: -9.55385684967041
    5. ' ans' → logprob: -10.17885684967041
    6. 'ans' → logprob: -10.17885684967041
    7. '""' → logprob: -10.30385684967041
    8. '"' → logprob: -10.67885684967041
    9. 'result' → logprob: -11.92885684967041
    10. ')' → logprob: -11.92885684967041

Token 204: ' une' (ID: 2463)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.7655109763145447
    2. '''' → logprob: -1.0155110359191895
    3. '"' → logprob: -2.6405110359191895
    4. 'une' → logprob: -3.0155110359191895
    5. '""' → logprob: -3.3905110359191895
    6. 'chaine' → logprob: -5.1405110359191895
    7. ' une' → logprob: -5.2655110359191895
    8. ' ''.' → logprob: -5.5155110359191895
    9. ''' → logprob: -6.1405110359191895
    10. ''une' → logprob: -7.7655110359191895

Token 205: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.4912762939929962
    2. 'chaine' → logprob: -0.9912762641906738
    3. 'string' → logprob: -5.116276264190674
    4. ' chaine' → logprob: -5.116276264190674
    5. 'cha' → logprob: -6.241276264190674
    6. '''' → logprob: -7.241276264190674
    7. 'chain' → logprob: -7.241276264190674
    8. 'str' → logprob: -7.366276264190674
    9. '""' → logprob: -7.616276264190674
    10. '"' → logprob: -8.116276741027832

Token 206: ' et' (ID: 859)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.19323796033859253
    2. '   ' → logprob: -1.9432380199432373
    3. ' return' → logprob: -3.4432380199432373
    4. 'ans' → logprob: -8.568238258361816
    5. '"' → logprob: -9.318238258361816
    6. ' ans' → logprob: -10.068238258361816
    7. '""' → logprob: -10.443238258361816
    8. 'result' → logprob: -10.568238258361816
    9. '    
' → logprob: -11.068238258361816
    10. 'ret' → logprob: -11.193238258361816

Token 207: ' la' (ID: 557)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16033217310905457
    2. ' return' → logprob: -1.910332202911377
    3. '   ' → logprob: -9.285331726074219
    4. '_return' → logprob: -12.535331726074219
    5. ':return' → logprob: -12.660331726074219
    6. 'eturn' → logprob: -13.160331726074219
    7. '@return' → logprob: -13.660331726074219
    8. '	return' → logprob: -13.660331726074219
    9. ' retourne' → logprob: -13.910331726074219
    10. '```' → logprob: -14.035331726074219

Token 208: ' retourne' (ID: 178818)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.011082957498729229
    2. ' return' → logprob: -4.511083126068115
    3. 'ret' → logprob: -10.636082649230957
    4. ' retourne' → logprob: -11.511082649230957
    5. ' retour' → logprob: -14.761082649230957
    6. 'join' → logprob: -14.886082649230957
    7. 'eturn' → logprob: -16.511083602905273
    8. '_return' → logprob: -16.636083602905273
    9. 'r' → logprob: -16.761083602905273
    10. 'returned' → logprob: -17.386083602905273

Token 209: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1803453266620636
    2. '   ' → logprob: -1.9303452968597412
    3. ' return' → logprob: -3.930345296859741
    4. '
' → logprob: -8.43034553527832
    5. '	return' → logprob: -10.43034553527832
    6. '    
' → logprob: -10.80534553527832
    7. ' ' → logprob: -12.68034553527832
    8. '  
' → logprob: -13.30534553527832
    9. '{return' → logprob: -13.55534553527832
    10. '  ' → logprob: -13.55534553527832

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10559463500976562
    2. 'return' → logprob: -2.3555946350097656
    3. ' return' → logprob: -5.230594635009766
    4. '    
' → logprob: -11.105594635009766
    5. '	return' → logprob: -12.230594635009766
    6. '
' → logprob: -13.480594635009766
    7. '       ' → logprob: -14.855594635009766
    8. '    ' → logprob: -15.230594635009766
    9. 'ret' → logprob: -15.355594635009766
    10. '  ' → logprob: -15.730594635009766

Token 211: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003512168535962701
    2. ' return' → logprob: -5.753512382507324
    3. '   ' → logprob: -8.003512382507324
    4. '	return' → logprob: -16.503511428833008
    5. 'ret' → logprob: -17.753511428833008
    6. '```' → logprob: -18.003511428833008
    7. 'eturn' → logprob: -18.128511428833008
    8. '
' → logprob: -18.503511428833008
    9. '    
' → logprob: -18.503511428833008
    10. ' ' → logprob: -19.378511428833008

Token 212: ' ''.' (ID: 105941)
  Prédit: ' ''.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ''.' → logprob: -0.5498804450035095
    2. '"' → logprob: -1.0498805046081543
    3. ' "".' → logprob: -3.0498805046081543
    4. '''.' → logprob: -4.549880504608154
    5. ' '' → logprob: -4.924880504608154
    6. ''' → logprob: -5.174880504608154
    7. ' "' → logprob: -6.299880504608154
    8. ' ' → logprob: -9.049880027770996
    9. '''' → logprob: -9.049880027770996
    10. '""' → logprob: -10.424880027770996

Token 213: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.2664456789934775e-06
    2. 'jo' → logprob: -14.250000953674316
    3. 'j' → logprob: -15.250000953674316
    4. '''.' → logprob: -15.625000953674316
    5. ''.' → logprob: -16.500001907348633
    6. ' join' → logprob: -17.000001907348633
    7. '.join' → logprob: -17.875001907348633
    8. '```' → logprob: -18.000001907348633
    9. '.' → logprob: -19.875001907348633
    10. '(join' → logprob: -20.500001907348633

Token 214: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00020687808864749968
    2. '(' → logprob: -8.50020694732666
    3. 'ans' → logprob: -12.75020694732666
    4. '(
' → logprob: -16.000205993652344
    5. '(an' → logprob: -16.000205993652344
    6. '(answer' → logprob: -16.375205993652344
    7. '(arr' → logprob: -17.375205993652344
    8. ' (' → logprob: -17.375205993652344
    9. '('' → logprob: -17.625205993652344
    10. '(`' → logprob: -17.875205993652344

Token 215: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.75
    3. '()' → logprob: -16.75
    4. '())' → logprob: -17.0
    5. '[' → logprob: -17.5
    6. ']' → logprob: -17.5
    7. ')`' → logprob: -17.5
    8. ')
' → logprob: -17.625
    9. '')' → logprob: -18.125
    10. '(' → logprob: -18.5

Token 216: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: ' Lecture' (ID: 106534)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3161446750164032
    2. 't' → logprob: -2.1911447048187256
    3. ' ' → logprob: -2.6911447048187256
    4. 'd' → logprob: -3.6911447048187256
    5. '<|end|>' → logprob: -4.1911444664001465
    6. 'a' → logprob: -4.6911444664001465
    7. 'def' → logprob: -4.6911444664001465
    8. 'T' → logprob: -5.1911444664001465
    9. ')' → logprob: -5.3161444664001465
    10. '```' → logprob: -5.4411444664001465

Token 218: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03491154685616493
    2. 'input' → logprob: -4.034911632537842
    3. '(input' → logprob: -4.784911632537842
    4. '()' → logprob: -5.409911632537842
    5. '_' → logprob: -6.659911632537842
    6. '(
' → logprob: -7.034911632537842
    7. '#' → logprob: -7.909911632537842
    8. 's' → logprob: -8.534911155700684
    9. '_input' → logprob: -8.784911155700684
    10. ' (' → logprob: -8.784911155700684

Token 219: ' la' (ID: 557)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.38446474075317383
    2. ' l' → logprob: -1.7594647407531738
    3. 'input' → logprob: -2.259464740753174
    4. ' la' → logprob: -3.884464740753174
    5. 'l' → logprob: -4.134464740753174
    6. ' ' → logprob: -5.384464740753174
    7. '_' → logprob: -7.384464740753174
    8. 's' → logprob: -8.259464263916016
    9. 'la' → logprob: -8.759464263916016
    10. '_input' → logprob: -8.759464263916016

Token 220: ' chaîne' (ID: 89288)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06666984409093857
    2. 'n' → logprob: -3.1916699409484863
    3. ' input' → logprob: -4.566669940948486
    4. 's' → logprob: -5.691669940948486
    5. 'number' → logprob: -6.191669940948486
    6. 'nombre' → logprob: -6.316669940948486
    7. 'user' → logprob: -6.441669940948486
    8. '#' → logprob: -7.066669940948486
    9. 'num' → logprob: -7.441669940948486
    10. 'chaine' → logprob: -7.566669940948486

Token 221: ' d' (ID: 272)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.022670766338706017
    2. 'user' → logprob: -4.022670745849609
    3. '=input' → logprob: -6.397670745849609
    4. ' input' → logprob: -6.772670745849609
    5. 's' → logprob: -7.147670745849609
    6. 'd' → logprob: -8.39767074584961
    7. 'de' → logprob: -8.77267074584961
    8. '(input' → logprob: -9.02267074584961
    9. '_input' → logprob: -9.02267074584961
    10. 'number' → logprob: -9.64767074584961

Token 222: ''entrée' (ID: 115820)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.06526702642440796
    2. ''entrée' → logprob: -2.8152670860290527
    3. 'input' → logprob: -6.315267086029053
    4. 'entr' → logprob: -7.190267086029053
    5. 'car' → logprob: -7.940267086029053
    6. 'ent' → logprob: -8.940266609191895
    7. '#' → logprob: -9.315266609191895
    8. 'entrada' → logprob: -9.690266609191895
    9. 'Entr' → logprob: -11.315266609191895
    10. ' entrée' → logprob: -11.440266609191895

Token 223: '
' (ID: 198)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0036297659389674664
    2. 'user' → logprob: -5.628629684448242
    3. 'number' → logprob: -11.378629684448242
    4. ' input' → logprob: -11.628629684448242
    5. 's' → logprob: -13.003629684448242
    6. '
' → logprob: -13.503629684448242
    7. 'numero' → logprob: -14.003629684448242
    8. 'num' → logprob: -14.128629684448242
    9. 'n' → logprob: -14.253629684448242
    10. 'inp' → logprob: -14.628629684448242

Token 224: 'N' (ID: 45)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01845391094684601
    2. 'user' → logprob: -4.393454074859619
    3. ' input' → logprob: -5.143454074859619
    4. ' user' → logprob: -9.768453598022461
    5. 'number' → logprob: -10.893453598022461
    6. 's' → logprob: -12.018453598022461
    7. 'inp' → logprob: -13.518453598022461
    8. 'numero' → logprob: -13.643453598022461
    9. 'n' → logprob: -14.018453598022461
    10. 'num' → logprob: -14.518453598022461

Token 225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13042470812797546
    2. '=' → logprob: -2.255424737930298
    3. '_' → logprob: -4.880424499511719
    4. '=input' → logprob: -4.880424499511719
    5. 'umber' → logprob: -6.880424499511719
    6. 'um' → logprob: -7.505424499511719
    7. 'N' → logprob: -8.755424499511719
    8. '   ' → logprob: -9.130424499511719
    9. '_input' → logprob: -9.505424499511719
    10. 'u' → logprob: -9.505424499511719

Token 226: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011048054322600365
    2. ' input' → logprob: -4.511047840118408
    3. '=input' → logprob: -15.511048316955566
    4. '(input' → logprob: -16.38604736328125
    5. '<input' → logprob: -17.26104736328125
    6. '	input' → logprob: -17.38604736328125
    7. 'int' → logprob: -18.01104736328125
    8. ',input' → logprob: -19.01104736328125
    9. ' ' → logprob: -19.26104736328125
    10. '```' → logprob: -19.51104736328125

Token 227: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007327937055379152
    2. '(' → logprob: -7.375732898712158
    3. '("' → logprob: -10.375732421875
    4. '("")' → logprob: -10.375732421875
    5. '('' → logprob: -11.125732421875
    6. '("("' → logprob: -11.375732421875
    7. '().' → logprob: -11.625732421875
    8. '())' → logprob: -13.000732421875
    9. '()
' → logprob: -13.875732421875
    10. '()>' → logprob: -14.125732421875

Token 228: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05200795829296112
    2. 'result' → logprob: -3.0520079135894775
    3. 'trans' → logprob: -5.802008152008057
    4. 'output' → logprob: -8.302007675170898
    5. '#' → logprob: -9.177007675170898
    6. 'transform' → logprob: -11.177007675170898
    7. 'answer' → logprob: -11.927007675170898
    8. 'r' → logprob: -12.677007675170898
    9. '
' → logprob: -12.802007675170898
    10. 'T' → logprob: -12.927007675170898

Token 229: ' App' (ID: 2583)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09379872679710388
    2. 'result' → logprob: -2.4687986373901367
    3. 'trans' → logprob: -6.218798637390137
    4. 'output' → logprob: -6.343798637390137
    5. '#' → logprob: -6.968798637390137
    6. 'rés' → logprob: -10.218798637390137
    7. 'transform' → logprob: -10.593798637390137
    8. 'res' → logprob: -10.718798637390137
    9. 'R' → logprob: -10.968798637390137
    10. 'M' → logprob: -11.843798637390137

Token 230: 'el' (ID: 296)
  Prédit: 'el'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'el' → logprob: -0.29334887862205505
    2. 'eler' → logprob: -1.4183489084243774
    3. 'ly' → logprob: -5.168348789215088
    4. 'elle' → logprob: -6.043348789215088
    5. 'elé' → logprob: -6.293348789215088
    6. 'le' → logprob: -7.293348789215088
    7. 'eller' → logprob: -8.168349266052246
    8. 'ler' → logprob: -8.918349266052246
    9. 'ell' → logprob: -9.043349266052246
    10. 'ely' → logprob: -9.043349266052246

Token 231: ' de' (ID: 334)
  Prédit: '(transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(transform' → logprob: -0.4046034514904022
    2. '(' → logprob: -1.2796034812927246
    3. 'transform' → logprob: -3.0296034812927246
    4. '(
' → logprob: -5.279603481292725
    5. '_transform' → logprob: -7.279603481292725
    6. 'def' → logprob: -7.904603481292725
    7. ' transform' → logprob: -10.654603004455566
    8. '(

' → logprob: -10.904603004455566
    9. 'de' → logprob: -11.154603004455566
    10. '_' → logprob: -11.154603004455566

Token 232: ' la' (ID: 557)
  Prédit: 'transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'transform' → logprob: -0.038043901324272156
    2. 'print' → logprob: -3.288043975830078
    3. 'trans' → logprob: -13.413043975830078
    4. ' transform' → logprob: -14.038043975830078
    5. '(transform' → logprob: -15.663043975830078
    6. 'result' → logprob: -17.038043975830078
    7. ' print' → logprob: -18.788043975830078
    8. 'transpose' → logprob: -19.413043975830078
    9. 'prin' → logprob: -19.538043975830078
    10. 'the' → logprob: -20.038043975830078

Token 233: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.7530574849806726e-05
    2. 'result' → logprob: -10.000057220458984
    3. 'transform' → logprob: -11.500057220458984
    4. 'trans' → logprob: -13.250057220458984
    5. 'prin' → logprob: -16.000057220458984
    6. ' print' → logprob: -17.000057220458984
    7. 'pr' → logprob: -17.125057220458984
    8. 'output' → logprob: -17.250057220458984
    9. '```' → logprob: -18.875057220458984
    10. 'answer' → logprob: -19.000057220458984

Token 234: ' de' (ID: 334)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.31056758761405945
    2. 'print' → logprob: -1.6855676174163818
    3. 'trans' → logprob: -2.685567617416382
    4. 'transform' → logprob: -5.185567378997803
    5. 'output' → logprob: -5.810567378997803
    6. ' result' → logprob: -5.935567378997803
    7. ' transformed' → logprob: -6.685567378997803
    8. ' print' → logprob: -7.685567378997803
    9. 'res' → logprob: -8.185567855834961
    10. 'rans' → logprob: -9.935567855834961

Token 235: ' transformation' (ID: 26242)
  Prédit: 'transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'transform' → logprob: -0.002218891866505146
    2. 'trans' → logprob: -6.752218723297119
    3. 'print' → logprob: -6.877218723297119
    4. ' transform' → logprob: -11.127219200134277
    5. ' transformation' → logprob: -14.127219200134277
    6. 'result' → logprob: -14.627219200134277
    7. 'tran' → logprob: -14.752219200134277
    8. 'tras' → logprob: -15.502219200134277
    9. '(transform' → logprob: -15.502219200134277
    10. 'transpose' → logprob: -17.00221824645996

Token 236: ' et' (ID: 859)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.23897314071655273
    2. 'print' → logprob: -1.7389731407165527
    3. 'trans' → logprob: -3.3639731407165527
    4. 'output' → logprob: -6.363973140716553
    5. 'transform' → logprob: -7.738973140716553
    6. 'res' → logprob: -9.738973617553711
    7. ' transformed' → logprob: -10.988973617553711
    8. ' result' → logprob: -11.738973617553711
    9. 'answer' → logprob: -11.738973617553711
    10. 'resultado' → logprob: -12.738973617553711

Token 237: ' affich' (ID: 90179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006408308399841189
    2. '#' → logprob: -7.375640869140625
    3. ' print' → logprob: -11.625640869140625
    4. 'im' → logprob: -12.625640869140625
    5. '#print' → logprob: -13.875640869140625
    6. 'aff' → logprob: -14.375640869140625
    7. 'prin' → logprob: -14.750640869140625
    8. 'pr' → logprob: -17.000640869140625
    9. ' #' → logprob: -17.250640869140625
    10. '_print' → logprob: -18.000640869140625

Token 238: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.06279580295085907
    2. 'print' → logprob: -2.812795877456665
    3. 'e' → logprob: -7.187795639038086
    4. 'er' → logprob: -10.562795639038086
    5. '(print' → logprob: -11.062795639038086
    6. '   ' → logprob: -11.687795639038086
    7. 'ation' → logprob: -12.062795639038086
    8. 'ge' → logprob: -12.437795639038086
    9. ' print' → logprob: -12.437795639038086
    10. '#' → logprob: -13.437795639038086

Token 239: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0014364237431436777
    2. '(print' → logprob: -7.001436233520508
    3. '(transform' → logprob: -7.751436233520508
    4. 'transform' → logprob: -9.501436233520508
    5. '(' → logprob: -11.001436233520508
    6. ' print' → logprob: -12.876436233520508
    7. '(
' → logprob: -15.001436233520508
    8. '()
' → logprob: -15.501436233520508
    9. 'result' → logprob: -15.876436233520508
    10. '(trans' → logprob: -17.126436233520508

Token 240: ' résultat' (ID: 62556)
  Prédit: 'transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'transform' → logprob: -0.5777212977409363
    2. 'result' → logprob: -0.8277212977409363
    3. 'trans' → logprob: -6.827721118927002
    4. '(transform' → logprob: -8.07772159576416
    5. 'rés' → logprob: -8.82772159576416
    6. ' résultat' → logprob: -8.95272159576416
    7. ' transform' → logprob: -10.20272159576416
    8. ' result' → logprob: -10.45272159576416
    9. ' transformed' → logprob: -10.57772159576416
    10. 'resultado' → logprob: -11.82772159576416

Token 241: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.842555426876061e-06
    2. 'result' → logprob: -12.375004768371582
    3. ' print' → logprob: -15.250004768371582
    4. '
' → logprob: -15.375004768371582
    5. '```' → logprob: -17.3750057220459
    6. 'transform' → logprob: -18.1250057220459
    7. 'output' → logprob: -19.0000057220459
    8. '  
' → logprob: -19.7500057220459
    9. 'prin' → logprob: -20.0000057220459
    10. 'pr' → logprob: -20.0000057220459

Token 242: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. 'result' → logprob: -17.5
    3. ' print' → logprob: -19.0
    4. 'prin' → logprob: -20.75
    5. '```' → logprob: -21.0
    6. 'pr' → logprob: -22.125
    7. 'transform' → logprob: -22.125
    8. 'trans' → logprob: -24.125
    9. 'output' → logprob: -24.5
    10. '	print' → logprob: -24.5

Token 243: '(transform' (ID: 72192)
  Prédit: '(transform'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(transform' → logprob: -0.0019379158038645983
    2. '(' → logprob: -6.2519378662109375
    3. 'transform' → logprob: -11.751937866210938
    4. '(trans' → logprob: -14.001937866210938
    5. '('' → logprob: -15.376937866210938
    6. '()' → logprob: -16.376937866210938
    7. '(
' → logprob: -16.501937866210938
    8. ' (' → logprob: -16.751937866210938
    9. '("' → logprob: -17.251937866210938
    10. '("("' → logprob: -17.251937866210938

Token 244: '_number' (ID: 11733)
  Prédit: '_number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_number' → logprob: -4.246537173457909e-06
    2. '_' → logprob: -12.500003814697266
    3. '_n' → logprob: -15.625003814697266
    4. '_numbers' → logprob: -16.125003814697266
    5. '_Number' → logprob: -16.250003814697266
    6. '_NUMBER' → logprob: -16.750003814697266
    7. '_num' → logprob: -16.750003814697266
    8. '_N' → logprob: -17.625003814697266
    9. 'Number' → logprob: -18.750003814697266
    10. ' _' → logprob: -18.750003814697266

Token 245: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.043129581958055496
    2. '(' → logprob: -3.1681296825408936
    3. ')' → logprob: -9.918129920959473
    4. '(Number' → logprob: -9.918129920959473
    5. 'N' → logprob: -11.168129920959473
    6. '(
' → logprob: -11.418129920959473
    7. ')(' → logprob: -13.668129920959473
    8. ' (' → logprob: -13.668129920959473
    9. '(input' → logprob: -13.918129920959473
    10. 'Number' → logprob: -14.418129920959473

Token 246: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.014168326742947102
    2. ')' → logprob: -4.2641682624816895
    3. '()))' → logprob: -13.264168739318848
    4. '())' → logprob: -13.514168739318848
    5. '))
' → logprob: -14.014168739318848
    6. ')))' → logprob: -14.764168739318848
    7. '()' → logprob: -15.264168739318848
    8. ' ))' → logprob: -16.88916778564453
    9. ')
' → logprob: -17.01416778564453
    10. '(' → logprob: -17.13916778564453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 244
Tokens correctement prédits (1ère position, stricte): 81
Tokens correctement prédits (1ère position, avec adaptation): 87
Tokens correctement prédits (top 10): 165
Précision stricte (1ère position): 33.20%
Précision adaptée (1ère position): 35.66%
Précision (top 10): 67.62%
================================================================================
