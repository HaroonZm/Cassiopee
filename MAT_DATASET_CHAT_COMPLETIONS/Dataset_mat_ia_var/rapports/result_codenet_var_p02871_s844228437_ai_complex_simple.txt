================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:52
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import functools
import itertools
import collections
import operator
import sys

# Redéfinir raw_input pour Python 3 compatibilité
try:
    raw_input
except NameError:
    raw_input = lambda: sys.stdin.readline()

out = open('out.txt', 'a')

class graph:
    INF = float('inf')
    G = None
    Path = None
    E = None
    V = None

    def __init__(self):
        dataRaw = raw_input()
        raw = list(map(int, dataRaw.strip().split()))
        self.E, self.V = raw[0]+1, raw[1]
        # Génère une matrice carré via accumulate et map en imitant list comprehension
        def build_matrix(val):
            return list(map(lambda _: [val]*self.E, range(self.E)))
        self.G = list(map(list, build_matrix(self.INF)))
        self.Path = list(map(list, build_matrix(0)))

        # construction via un générateur + tuple unpacking et items
        for _ in map(lambda x: x, range(self.V)):
            dataRaw = raw_input()
            i, j, k = tuple(map(int, dataRaw.strip().split()))
            # Utilise l'opérateur setitem pour assigner 
            operator.setitem(self.G[i], j, k)
            operator.setitem(self.G[j], i, k)

        # Force diagonal à 0 en compressant i->[i,i]
        for i, v in enumerate(itertools.repeat(0, self.E), 1):
            operator.setitem(self.G[i], i, 0)

        # Floyd-Warshall non-idiot-proof via itertools.product et astuce lambda triplement imbriquée
        for i, j, k in itertools.product(range(self.E), repeat=3):
            self.G[i][j], _ = min(
                (self.G[i][j], 0),
                (self.G[i][k]+self.G[k][j], 1),
                key=lambda x: x[0]
            )
            if self.G[i][j] == self.G[i][k] + self.G[k][j]:
                self.Path[i][j] = k

    def shortPath(self, i, j):
        # Recursion par une fonction curryfiée et reduce
        path = []
        def core(a, b, p=path):
            if self.Path[a][b]==0:
                if not p or p[-1] != a:
                    p.append(a)
                p.append(b)
            else:
                core(a, self.Path[a][b])
                core(self.Path[a][b], b)
        core(i, j)
        path = list(itertools.islice(path, 1, None))
        return path

class driver:
    plan = None
    order = None
    location = None
    nextSegmentLeftTime = None
    target = None

    def __init__(self, g):
        self.plan = []
        self.order = set()
        self.location = 1
        self.nextSegmentLeftTime = 0
        self.target = 1
        self.map = g

    def route(self):
        # Utilise un double reduce pour transformer une série de detours
        if not self.order and not self.plan:
            self.order.add(1)
        last = functools.reduce(lambda x, y: y, self.plan, self.location) if self.plan else self.location
        if self.order:
            # Chainer tous les chemins à suivre via chain et update
            combined_path = []
            for i in self.order:
                combined_path.extend(self.map.shortPath(last, i))
                last = i
            self.plan.extend(combined_path)
            self.order.clear()
        if self.plan:
            self.target = self.plan[0]
            self.nextSegmentLeftTime = self.map.G[self.location][self.target]
            del self.plan[0]

    def move(self):
        if self.location == self.target:
            print(-1)
            return
        assert self.nextSegmentLeftTime > 0
        self.nextSegmentLeftTime -= 1
        print(self.target)
        if self.nextSegmentLeftTime == 0:
            self.location = self.target

    def onRoute(self):
        return bool(self.nextSegmentLeftTime)

class shop:
    def __init__(self):
        self.order = set()

class timer:
    orders = None
    times = None
    orderIndex = None
    currTime = None
    Tmax = None

    def __init__(self):
        self.orders = []
        self.times = []
        self.orderIndex = 0
        self.currTime = 0
        self.Tmax = int(raw_input())
        for i in range(self.Tmax):
            n = int(raw_input())
            if n == 0:
                continue
            else:
                data = list(map(int, raw_input().strip().split()))
                self.times.append(i+1)
                self.orders.append(data[1])

    def run(self, shop, driver):
        # Découpe le temps en itérateurs d'une manière cryptique
        while self.currTime < self.Tmax:
            self.currTime += 1
            if (self.orderIndex < len(self.times) and
                self.currTime == self.times[self.orderIndex] and
                driver.map.G[1][self.orders[self.orderIndex]] < float('inf')):
                shop.order.add(self.orders[self.orderIndex])
                self.orderIndex += 1
            if not driver.onRoute() and driver.location == 1:
                driver.order |= shop.order
                shop.order.clear()
            if not driver.onRoute():
                driver.route()
            driver.move()
            out.write("status after : ")
            out.write("shop status : " + str(shop.order))
            out.write("driver status : ")
            out.write("order : " + str(driver.order))
            out.write("| plan : " + str(driver.plan))
            out.write("| on route : " + str(driver.onRoute()))
            out.write("| location : " + str(driver.location))
            out.write("| target : " + str(driver.target))
            out.write("| left time : " + str(driver.nextSegmentLeftTime) + '\n')
            out.write("================================\n")

if __name__ == "__main__":
    s = shop()
    g = graph()
    d = driver(g)
    t = timer()
    t.run(s, d)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0001329791557509452
    2. '(' → logprob: -10.62513256072998
    3. 'def' → logprob: -10.62513256072998
    4. '\' → logprob: -11.12513256072998
    5. '```' → logprob: -11.62513256072998
    6. '\.' → logprob: -11.87513256072998
    7. '.def' → logprob: -12.00013256072998
    8. '.​' → logprob: -12.00013256072998
    9. '<|end|>' → logprob: -12.12513256072998
    10. 'import' → logprob: -12.12513256072998

Token 4: ' itertools' (ID: 103178)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.031583476811647415
    2. ' operator' → logprob: -4.156583309173584
    3. ' sys' → logprob: -4.406583309173584
    4. 'os' → logprob: -6.906583309173584
    5. ' math' → logprob: -7.031583309173584
    6. ' itertools' → logprob: -7.531583309173584
    7. 'operator' → logprob: -8.156583786010742
    8. ' collections' → logprob: -8.281583786010742
    9. ' json' → logprob: -8.656583786010742
    10. ' typing' → logprob: -10.531583786010742

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004221570678055286
    2. '\' → logprob: -6.129221439361572
    3. '\n' → logprob: -7.629221439361572
    4. 'import' → logprob: -7.754221439361572
    5. '```' → logprob: -8.25422191619873
    6. ',' → logprob: -8.50422191619873
    7. '.
' → logprob: -8.87922191619873
    8. '<|end|>' → logprob: -9.62922191619873
    9. 'def' → logprob: -9.87922191619873
    10. '\.' → logprob: -10.00422191619873

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0017023178515955806
    2. '```' → logprob: -8.001702308654785
    3. 'import' → logprob: -8.251702308654785
    4. ' as' → logprob: -8.251702308654785
    5. '.
' → logprob: -8.501702308654785
    6. ',' → logprob: -8.501702308654785
    7. '\' → logprob: -9.751702308654785
    8. 'def' → logprob: -9.876702308654785
    9. '.import' → logprob: -10.251702308654785
    10. '.as' → logprob: -10.376702308654785

Token 7: ' collections' (ID: 22690)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.486075758934021
    2. ' collections' → logprob: -1.986075758934021
    3. ' math' → logprob: -1.986075758934021
    4. ' os' → logprob: -2.4860758781433105
    5. 'operator' → logprob: -4.4860758781433105
    6. ' json' → logprob: -5.3610758781433105
    7. 'collections' → logprob: -5.6110758781433105
    8. 'os' → logprob: -5.9860758781433105
    9. 'math' → logprob: -6.3610758781433105
    10. ' sys' → logprob: -6.4860758781433105

Token 8: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010472067631781101
    2. 'import' → logprob: -5.635472297668457
    3. '\' → logprob: -6.510472297668457
    4. '```' → logprob: -6.760472297668457
    5. '\n' → logprob: -7.135472297668457
    6. ',' → logprob: -7.260472297668457
    7. '<|end|>' → logprob: -7.510472297668457
    8. '
' → logprob: -7.760472297668457
    9. '#' → logprob: -8.010472297668457
    10. '.
' → logprob: -8.010472297668457

Token 9: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03094490058720112
    2. 'import' → logprob: -4.65594482421875
    3. '```' → logprob: -4.90594482421875
    4. ',' → logprob: -5.65594482421875
    5. '\n' → logprob: -6.53094482421875
    6. '#' → logprob: -6.53094482421875
    7. '\' → logprob: -6.65594482421875
    8. 'from' → logprob: -6.65594482421875
    9. '.
' → logprob: -6.90594482421875
    10. 'def' → logprob: -6.90594482421875

Token 10: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.12399505823850632
    2. 'operator' → logprob: -2.873995065689087
    3. ' math' → logprob: -3.748995065689087
    4. ' os' → logprob: -4.248994827270508
    5. ' typing' → logprob: -4.623994827270508
    6. 'math' → logprob: -5.998994827270508
    7. 'os' → logprob: -5.998994827270508
    8. ' re' → logprob: -6.248994827270508
    9. ' threading' → logprob: -6.248994827270508
    10. ' heap' → logprob: -6.623994827270508

Token 11: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01668546535074711
    2. '\' → logprob: -4.891685485839844
    3. ',' → logprob: -6.266685485839844
    4. '\n' → logprob: -6.391685485839844
    5. '<|end|>' → logprob: -6.516685485839844
    6. '_' → logprob: -6.891685485839844
    7. '#' → logprob: -7.141685485839844
    8. 'import' → logprob: -7.641685485839844
    9. '```' → logprob: -8.141685485839844
    10. '
' → logprob: -8.266685485839844

Token 12: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.011751789599657059
    2. ',' → logprob: -6.136751651763916
    3. '_' → logprob: -6.386751651763916
    4. 'def' → logprob: -6.386751651763916
    5. '.
' → logprob: -6.511751651763916
    6. '#' → logprob: -7.011751651763916
    7. 'import' → logprob: -7.511751651763916
    8. '\n' → logprob: -7.511751651763916
    9. '\' → logprob: -7.636751651763916
    10. 'from' → logprob: -8.261752128601074

Token 13: ' sys' (ID: 12228)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.3258482813835144
    2. 'math' → logprob: -1.9508483409881592
    3. ' os' → logprob: -2.950848340988159
    4. ' functools' → logprob: -3.825848340988159
    5. 'os' → logprob: -4.07584810256958
    6. ' sys' → logprob: -4.20084810256958
    7. ' threading' → logprob: -4.82584810256958
    8. ' heap' → logprob: -4.82584810256958
    9. 'heap' → logprob: -5.82584810256958
    10. 're' → logprob: -6.45084810256958

Token 14: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.45030272006988525
    2. '
' → logprob: -2.4503026008605957
    3. '<|end|>' → logprob: -2.5753026008605957
    4. 'import' → logprob: -2.9503026008605957
    5. ',' → logprob: -3.0753026008605957
    6. '\n' → logprob: -3.3253026008605957
    7. '

' → logprob: -3.4503026008605957
    8. '#' → logprob: -5.325302600860596
    9. '```' → logprob: -5.325302600860596
    10. 'def' → logprob: -5.325302600860596

Token 15: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6158450841903687
    2. '.' → logprob: -1.9908450841903687
    3. '@' → logprob: -1.9908450841903687
    4. 'from' → logprob: -2.990845203399658
    5. '#' → logprob: -3.740845203399658
    6. ',' → logprob: -3.865845203399658
    7. '```' → logprob: -3.865845203399658
    8. '=' → logprob: -4.490845203399658
    9. '_' → logprob: -4.490845203399658
    10. 'import' → logprob: -4.740845203399658

Token 16: ' Red' (ID: 5952)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3144969046115875
    2. '@' → logprob: -1.6894968748092651
    3. '_' → logprob: -4.189496994018555
    4. 'from' → logprob: -4.314496994018555
    5. ' def' → logprob: -4.439496994018555
    6. 'class' → logprob: -4.564496994018555
    7. '#' → logprob: -4.689496994018555
    8. '.' → logprob: -4.814496994018555
    9. ' functools' → logprob: -5.939496994018555
    10. ' @' → logprob: -6.439496994018555

Token 17: 'é' (ID: 377)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.4110986590385437
    2. 'is' → logprob: -2.0360987186431885
    3. 'uction' → logprob: -2.7860987186431885
    4. 'def' → logprob: -3.1610987186431885
    5. 'uce' → logprob: -3.7860987186431885
    6. 'u' → logprob: -4.036098480224609
    7. 'uc' → logprob: -4.036098480224609
    8. 'ux' → logprob: -4.411098480224609
    9. 'irect' → logprob: -5.161098480224609
    10. '=' → logprob: -5.161098480224609

Token 18: 'fin' (ID: 6994)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1872420459985733
    2. 'fin' → logprob: -1.812242031097412
    3. 'fi' → logprob: -5.062242031097412
    4. ' finition' → logprob: -8.81224250793457
    5. 'éf' → logprob: -9.31224250793457
    6. 'm' → logprob: -9.31224250793457
    7. 'é' → logprob: -9.43724250793457
    8. 'fen' → logprob: -9.56224250793457
    9. '``' → logprob: -9.93724250793457
    10. 'fn' → logprob: -10.18724250793457

Token 19: 'ir' (ID: 380)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.092693567276001
    2. 'nir' → logprob: -1.217693567276001
    3. 'f' → logprob: -1.342693567276001
    4. 'fin' → logprob: -3.092693567276001
    5. 'inir' → logprob: -3.717693567276001
    6. 'inition' → logprob: -3.967693567276001
    7. 'ni' → logprob: -4.592693328857422
    8. 'r' → logprob: -6.467693328857422
    9. '```' → logprob: -6.467693328857422
    10. 'ning' → logprob: -7.092693328857422

Token 20: ' raw' (ID: 11428)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04916451871395111
    2. ' ' → logprob: -3.6741645336151123
    3. 'def' → logprob: -4.049164295196533
    4. '__' → logprob: -6.674164295196533
    5. ' ' → logprob: -7.049164295196533
    6. '#' → logprob: -7.299164295196533
    7. ' def' → logprob: -7.799164295196533
    8. ' la' → logprob: -8.049164772033691
    9. 's' → logprob: -8.299164772033691
    10. 'le' → logprob: -8.924164772033691

Token 21: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.049577418714761734
    2. '_input' → logprob: -3.049577474594116
    3. '_i' → logprob: -7.299577236175537
    4. '_in' → logprob: -8.799577713012695
    5. '_

' → logprob: -9.424577713012695
    6. ' _' → logprob: -10.299577713012695
    7. '_
' → logprob: -11.174577713012695
    8. '_\' → logprob: -11.549577713012695
    9. '_
' → logprob: -12.174577713012695
    10. '_raw' → logprob: -12.549577713012695

Token 22: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03879506513476372
    2. '=' → logprob: -3.288794994354248
    3. '(' → logprob: -8.288795471191406
    4. 's' → logprob: -8.663795471191406
    5. 'def' → logprob: -9.038795471191406
    6. ' ' → logprob: -9.163795471191406
    7. '=input' → logprob: -10.663795471191406
    8. '_' → logprob: -11.038795471191406
    9. '\' → logprob: -11.413795471191406
    10. ' (' → logprob: -11.538795471191406

Token 23: ' Python' (ID: 26534)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5952985286712646
    2. ' input' → logprob: -1.0952985286712646
    3. ' Python' → logprob: -3.0952985286712646
    4. 'python' → logprob: -3.4702985286712646
    5. 'compat' → logprob: -4.720298767089844
    6. 'Python' → logprob: -4.720298767089844
    7. ' python' → logprob: -4.970298767089844
    8. ' compat' → logprob: -5.595298767089844
    9. ' raw' → logprob: -5.845298767089844
    10. 'lambda' → logprob: -6.720298767089844

Token 24: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1597575545310974
    2. ' ' → logprob: -2.284757614135742
    3. '3' → logprob: -3.284757614135742
    4. ' =' → logprob: -5.409757614135742
    5. '(' → logprob: -6.034757614135742
    6. '=' → logprob: -7.659757614135742
    7. 'def' → logprob: -8.409757614135742
    8. '_' → logprob: -8.534757614135742
    9. '```' → logprob: -9.034757614135742
    10. ' (' → logprob: -9.534757614135742

Token 25: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03847219794988632
    2. '3' → logprob: -3.2884721755981445
    3. ' ' → logprob: -7.7884721755981445
    4. '```' → logprob: -12.163472175598145
    5. 'compat' → logprob: -13.288472175598145
    6. '`' → logprob: -13.413472175598145
    7. 'def' → logprob: -13.538472175598145
    8. '_' → logprob: -13.663472175598145
    9. 'input' → logprob: -13.913472175598145
    10. '1' → logprob: -14.663472175598145

Token 26: ' compat' (ID: 15407)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.217998743057251
    2. '_input' → logprob: -1.217998743057251
    3. 'input' → logprob: -1.967998743057251
    4. '_' → logprob: -2.592998743057251
    5. '=' → logprob: -2.842998743057251
    6. 'raw' → logprob: -2.967998743057251
    7. '_raw' → logprob: -3.092998743057251
    8. 'def' → logprob: -3.592998743057251
    9. '
' → logprob: -5.967998504638672
    10. 'try' → logprob: -6.592998504638672

Token 27: 'ibilité' (ID: 44186)
  Prédit: 'ibilité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibilité' → logprob: -0.643293559551239
    2. 'ibility' → logprob: -0.893293559551239
    3. 'ibil' → logprob: -3.643293619155884
    4. 'input' → logprob: -5.018293380737305
    5. 'ib' → logprob: -5.143293380737305
    6. '=' → logprob: -5.143293380737305
    7. 'def' → logprob: -5.268293380737305
    8. 'ible' → logprob: -5.393293380737305
    9. '```' → logprob: -5.768293380737305
    10. 'b' → logprob: -6.643293380737305

Token 28: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8966845273971558
    2. ' =' → logprob: -1.8966845273971558
    3. '=' → logprob: -2.1466846466064453
    4. '_raw' → logprob: -2.1466846466064453
    5. 'def' → logprob: -2.7716846466064453
    6. 'raw' → logprob: -2.7716846466064453
    7. '_input' → logprob: -3.0216846466064453
    8. 'input' → logprob: -4.146684646606445
    9. '(' → logprob: -5.521684646606445
    10. '#' → logprob: -5.771684646606445

Token 29: 'try' (ID: 1806)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8030543327331543
    2. 'raw' → logprob: -1.0530543327331543
    3. 'def' → logprob: -2.1780543327331543
    4. ' =' → logprob: -3.1780543327331543
    5. '=' → logprob: -3.9280543327331543
    6. '_input' → logprob: -4.303054332733154
    7. '_raw' → logprob: -4.928054332733154
    8. ' raw' → logprob: -6.178054332733154
    9. ' input' → logprob: -6.178054332733154
    10. '=input' → logprob: -6.678054332733154

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007983243092894554
    2. ' :' → logprob: -4.882983207702637
    3. ':
' → logprob: -8.007983207702637
    4. ' :
' → logprob: -10.757983207702637
    5. ' except' → logprob: -11.132983207702637
    6. 'except' → logprob: -12.257983207702637
    7. '：' → logprob: -14.632983207702637
    8. '_except' → logprob: -14.632983207702637
    9. '-ex' → logprob: -14.632983207702637
    10. ':def' → logprob: -14.882983207702637

Token 31: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02713679149746895
    2. ':
' → logprob: -3.90213680267334
    3. '   ' → logprob: -5.90213680267334
    4. ' :' → logprob: -7.02713680267334
    5. 'input' → logprob: -7.15213680267334
    6. 'except' → logprob: -7.27713680267334
    7. ' input' → logprob: -7.77713680267334
    8. 'raw' → logprob: -8.27713680267334
    9. '_input' → logprob: -8.27713680267334
    10. ' except' → logprob: -8.52713680267334

Token 32: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' (adapté à ' raw') → logprob: -0.35229483246803284
    2. ' raw' → logprob: -1.6022948026657104
    3. 'input' → logprob: -2.977294921875
    4. ' input' → logprob: -3.602294921875
    5. '
' → logprob: -4.727294921875
    6. '	raw' → logprob: -5.102294921875
    7. '_input' → logprob: -7.352294921875
    8. '_raw' → logprob: -7.352294921875
    9. ':' → logprob: -7.977294921875
    10. '   ' → logprob: -8.727294921875

Token 33: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.002483031013980508
    2. '_' → logprob: -6.002482891082764
    3. '_in' → logprob: -12.252483367919922
    4. '_inputs' → logprob: -14.252483367919922
    5. ' _' → logprob: -14.377483367919922
    6. '__' → logprob: -14.752483367919922
    7. '_raw' → logprob: -14.877483367919922
    8. 'input' → logprob: -15.877483367919922
    9. '_Input' → logprob: -16.002483367919922
    10. '_i' → logprob: -16.377483367919922

Token 34: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026404105126857758
    2. '=' → logprob: -3.6514041423797607
    3. ' =
' → logprob: -10.15140438079834
    4. '(' → logprob: -10.40140438079834
    5. '<|end|>' → logprob: -11.52640438079834
    6. ' ' → logprob: -12.77640438079834
    7. '<|end|>' → logprob: -12.77640438079834
    8. '=lambda' → logprob: -12.90140438079834
    9. '=input' → logprob: -13.27640438079834
    10. ' =)' → logprob: -13.65140438079834

Token 35: 'except' (ID: 25035)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9214135408401489
    2. 'except' → logprob: -0.9214135408401489
    3. '=' → logprob: -2.1714134216308594
    4. ' except' → logprob: -2.4214134216308594
    5. ' ' → logprob: -7.796413421630859
    6. '()' → logprob: -8.29641342163086
    7. '=
' → logprob: -9.54641342163086
    8. '
' → logprob: -9.79641342163086
    9. '_except' → logprob: -9.79641342163086
    10. ' =
' → logprob: -9.92141342163086

Token 36: ' Name' (ID: 7317)
  Prédit: ' Name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Name' → logprob: -0.05505684018135071
    2. 'Name' → logprob: -2.9300568103790283
    3. '(Name' → logprob: -8.93005657196045
    4. ' ' → logprob: -10.68005657196045
    5. '	Name' → logprob: -11.55505657196045
    6. '<Name' → logprob: -12.80505657196045
    7. '>Name' → logprob: -13.55505657196045
    8. ' ' → logprob: -13.68005657196045
    9. ':' → logprob: -13.80505657196045
    10. '   ' → logprob: -14.18005657196045

Token 37: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -3.128163257315464e-07
    2. 'Erro' → logprob: -16.5
    3. 'rror' → logprob: -16.625
    4. 'Er' → logprob: -17.875
    5. 'E' → logprob: -19.0
    6. 'Err' → logprob: -19.375
    7. ' Error' → logprob: -20.0
    8. 'Erreur' → logprob: -20.5
    9. '	Error' → logprob: -20.875
    10. 'error' → logprob: -21.0

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002277530962601304
    2. ' :' → logprob: -6.127277374267578
    3. ' =' → logprob: -9.752277374267578
    4. '=' → logprob: -11.377277374267578
    5. ':
' → logprob: -11.502277374267578
    6. '():' → logprob: -12.252277374267578
    7. '):' → logprob: -12.627277374267578
    8. ':def' → logprob: -13.002277374267578
    9. ' as' → logprob: -14.002277374267578
    10. ' ):' → logprob: -15.252277374267578

Token 39: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31062403321266174
    2. ':' → logprob: -1.4356240034103394
    3. '=' → logprob: -3.685624122619629
    4. ' :' → logprob: -5.560624122619629
    5. ' =
' → logprob: -9.560624122619629
    6. ':
' → logprob: -10.560624122619629
    7. ' :
' → logprob: -11.935624122619629
    8. '=
' → logprob: -13.185624122619629
    9. ':def' → logprob: -13.310624122619629
    10. ' :=' → logprob: -13.560624122619629

Token 40: ' raw' (ID: 11428)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2568809688091278
    2. ' raw' → logprob: -2.00688099861145
    3. ' input' → logprob: -3.13188099861145
    4. '=' → logprob: -3.13188099861145
    5. ' def' → logprob: -6.631880760192871
    6. '=input' → logprob: -6.631880760192871
    7. '_input' → logprob: -7.006880760192871
    8. 'raw' (adapté à ' raw') → logprob: -7.506880760192871
    9. 'input' → logprob: -8.256880760192871
    10. ' =
' → logprob: -9.256880760192871

Token 41: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.008049465715885162
    2. '_' → logprob: -4.883049488067627
    3. ' _' → logprob: -8.133049011230469
    4. '_in' → logprob: -9.258049011230469
    5. '_user' → logprob: -11.508049011230469
    6. '_raw' → logprob: -11.633049011230469
    7. '__' → logprob: -12.133049011230469
    8. '_put' → logprob: -12.508049011230469
    9. '_output' → logprob: -12.633049011230469
    10. '```' → logprob: -12.883049011230469

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994365900754929
    2. '=' → logprob: -2.69494366645813
    3. '=lambda' → logprob: -12.56994342803955
    4. ' ' → logprob: -13.56994342803955
    5. '=input' → logprob: -13.56994342803955
    6. '=sys' → logprob: -15.06994342803955
    7. '＝' → logprob: -15.44494342803955
    8. '=open' → logprob: -15.56994342803955
    9. '=None' → logprob: -16.444944381713867
    10. ' =
' → logprob: -16.694944381713867

Token 43: ' lambda' (ID: 27871)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -2.15310683415737e-05
    2. ' input' → logprob: -10.750021934509277
    3. 'lambda' → logprob: -17.87502098083496
    4. '_input' → logprob: -18.37502098083496
    5. '<input' → logprob: -18.75002098083496
    6. '=input' → logprob: -19.12502098083496
    7. '	input' → logprob: -19.25002098083496
    8. 'raw' → logprob: -19.25002098083496
    9. 'eval' → logprob: -19.87502098083496
    10. '(input' → logprob: -20.37502098083496

Token 44: ':' (ID: 25)
  Prédit: ' prompt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prompt' → logprob: -0.5022264719009399
    2. ':' → logprob: -1.12722647190094
    3. ' :' → logprob: -3.1272263526916504
    4. 'prompt' → logprob: -3.8772263526916504
    5. ' ' → logprob: -5.87722635269165
    6. ' x' → logprob: -6.00222635269165
    7. ' _:' → logprob: -8.002226829528809
    8. ' ' → logprob: -9.252226829528809
    9. '(prompt' → logprob: -9.252226829528809
    10. ' input' → logprob: -9.252226829528809

Token 45: ' sys' (ID: 12228)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20223617553710938
    2. ' input' → logprob: -1.7022361755371094
    3. 'sys' → logprob: -7.452236175537109
    4. ' sys' → logprob: -8.32723617553711
    5. 'raw' → logprob: -14.95223617553711
    6. '_input' → logprob: -16.20223617553711
    7. 'inp' → logprob: -17.20223617553711
    8. 'eval' → logprob: -17.32723617553711
    9. '(input' → logprob: -17.32723617553711
    10. '	input' → logprob: -17.57723617553711

Token 46: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0003606104583013803
    2. '.' → logprob: -8.375360488891602
    3. '.stdout' → logprob: -9.250360488891602
    4. '.version' → logprob: -11.000360488891602
    5. 'stdin' → logprob: -12.125360488891602
    6. '.std' → logprob: -12.250360488891602
    7. '.argv' → logprob: -13.125360488891602
    8. '.readline' → logprob: -13.500360488891602
    9. '.stderr' → logprob: -13.625360488891602
    10. '.st' → logprob: -14.125360488891602

Token 47: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00025919382460415363
    2. '.' → logprob: -8.625259399414062
    3. '.read' → logprob: -9.500259399414062
    4. 'read' → logprob: -12.875259399414062
    5. ' readline' → logprob: -13.375259399414062
    6. '.readlines' → logprob: -15.125259399414062
    7. '.buffer' → logprob: -15.375259399414062
    8. ' .' → logprob: -17.125259399414062
    9. 'buffer' → logprob: -18.375259399414062
    10. '.write' → logprob: -18.500259399414062

Token 48: '()

' (ID: 5874)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.38691240549087524
    2. '()' → logprob: -1.1369123458862305
    3. '(' → logprob: -11.38691234588623
    4. ' ()' → logprob: -11.88691234588623
    5. '()\' → logprob: -12.01191234588623
    6. '()
' → logprob: -12.13691234588623
    7. ' ().' → logprob: -12.51191234588623
    8. '())' → logprob: -12.88691234588623
    9. '()

' → logprob: -13.88691234588623
    10. '.rstrip' → logprob: -14.01191234588623

Token 49: 'out' (ID: 468)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.3885494470596313
    2. '
' → logprob: -1.6385494470596313
    3. '(' → logprob: -1.7635494470596313
    4. ')' → logprob: -2.138549327850342
    5. '#' → logprob: -2.638549327850342
    6. '(
' → logprob: -3.013549327850342
    7. '<|end|>' → logprob: -3.513549327850342
    8. '\n' → logprob: -4.388549327850342
    9. '

' → logprob: -4.388549327850342
    10. ' ' → logprob: -4.513549327850342

Token 50: ' =' (ID: 314)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.004601961001753807
    2. 'ut' → logprob: -5.754601955413818
    3. 'puts' → logprob: -7.754601955413818
    4. '_put' → logprob: -8.004602432250977
    5. '.put' → logprob: -8.754602432250977
    6. 'pt' → logprob: -9.004602432250977
    7. 'p' → logprob: -9.504602432250977
    8. '=' → logprob: -9.879602432250977
    9. '.' → logprob: -10.254602432250977
    10. '```' → logprob: -10.254602432250977

Token 51: ' open' (ID: 2494)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.1846550703048706
    2. ' []' → logprob: -2.80965518951416
    3. 'print' → logprob: -3.05965518951416
    4. ' lambda' → logprob: -4.05965518951416
    5. ' print' → logprob: -4.18465518951416
    6. ' sys' → logprob: -4.80965518951416
    7. '[]' → logprob: -4.93465518951416
    8. 'fun' → logprob: -4.93465518951416
    9. 'lambda' → logprob: -6.30965518951416
    10. ' ' → logprob: -6.55965518951416

Token 52: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16219568252563477
    2. '('' → logprob: -1.9121956825256348
    3. '("' → logprob: -6.537195682525635
    4. ' (' → logprob: -7.787195682525635
    5. ' ('' → logprob: -9.662195205688477
    6. '(
' → logprob: -11.412195205688477
    7. ' ("' → logprob: -11.787195205688477
    8. '("("' → logprob: -12.037195205688477
    9. '(None' → logprob: -13.037195205688477
    10. ''' → logprob: -13.162195205688477

Token 53: 'out' (ID: 468)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -0.009878505021333694
    2. 'out' → logprob: -5.634878635406494
    3. ' output' → logprob: -5.634878635406494
    4. '')' → logprob: -7.509878635406494
    5. 'result' → logprob: -7.634878635406494
    6. ''' → logprob: -7.884878635406494
    7. 'data' → logprob: -8.134878158569336
    8. 'outfile' → logprob: -8.634878158569336
    9. ' ')' → logprob: -8.884878158569336
    10. 'log' → logprob: -9.009878158569336

Token 54: '.txt' (ID: 7186)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.28761613368988037
    2. '.txt' → logprob: -1.4126161336898804
    3. '.' → logprob: -5.78761625289917
    4. 'puts' → logprob: -6.03761625289917
    5. 'Put' → logprob: -8.412615776062012
    6. '_put' → logprob: -8.537615776062012
    7. 'p' → logprob: -9.287615776062012
    8. 'ut' → logprob: -9.412615776062012
    9. '.put' → logprob: -9.662615776062012
    10. '.csv' → logprob: -9.912615776062012

Token 55: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.03952573239803314
    2. '','' → logprob: -3.2895257472991943
    3. ''' → logprob: -6.539525508880615
    4. '',"' → logprob: -10.914525985717773
    5. '",' → logprob: -11.789525985717773
    6. '')' → logprob: -11.914525985717773
    7. '",'' → logprob: -12.914525985717773
    8. '","' → logprob: -14.039525985717773
    9. '"',' → logprob: -15.289525985717773
    10. '"' → logprob: -15.414525985717773

Token 56: ' '' (ID: 461)
  Prédit: ''w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''w' → logprob: -0.007825699634850025
    2. ' '' → logprob: -5.00782585144043
    3. ''' → logprob: -6.88282585144043
    4. 'w' → logprob: -10.25782585144043
    5. ''a' → logprob: -10.63282585144043
    6. ' ' → logprob: -12.00782585144043
    7. ''t' → logprob: -12.00782585144043
    8. ' w' → logprob: -12.13282585144043
    9. ''r' → logprob: -13.00782585144043
    10. '"' → logprob: -13.25782585144043

Token 57: 'a' (ID: 64)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -4.906711546937004e-05
    2. 'wt' → logprob: -10.125048637390137
    3. 'r' → logprob: -12.250048637390137
    4. 'a' → logprob: -13.375048637390137
    5. ''w' → logprob: -13.750048637390137
    6. 'wb' → logprob: -14.125048637390137
    7. ' w' → logprob: -15.375048637390137
    8. '')' → logprob: -15.375048637390137
    9. ''' → logprob: -15.375048637390137
    10. 'write' → logprob: -16.500049591064453

Token 58: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.000609271228313446
    2. '',' → logprob: -8.250609397888184
    3. ''' → logprob: -8.375609397888184
    4. 'b' → logprob: -10.125609397888184
    5. ')' → logprob: -10.500609397888184
    6. '+')' → logprob: -11.375609397888184
    7. ' ')' → logprob: -11.875609397888184
    8. 'w' → logprob: -11.875609397888184
    9. '")' → logprob: -12.250609397888184
    10. '')
' → logprob: -12.625609397888184

Token 59: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.662247359752655
    2. '
' → logprob: -1.2872474193572998
    3. '#' → logprob: -2.4122474193573
    4. 'for' → logprob: -3.0372474193573
    5. '\' → logprob: -3.5372474193573
    6. '\n' → logprob: -4.037247180938721
    7. '=' → logprob: -6.162247180938721
    8. '

' → logprob: -6.287247180938721
    9. 'print' → logprob: -6.412247180938721
    10. ')' → logprob: -6.412247180938721

Token 60: ' graph' (ID: 7465)
  Prédit: ' My'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' My' → logprob: -0.3205502927303314
    2. ' Parser' → logprob: -2.4455502033233643
    3. ' ' → logprob: -2.6955502033233643
    4. ' Solution' → logprob: -3.0705502033233643
    5. ' Solver' → logprob: -3.4455502033233643
    6. ' Counter' → logprob: -4.945550441741943
    7. ' Processor' → logprob: -4.945550441741943
    8. ' Input' → logprob: -5.320550441741943
    9. ' Writer' → logprob: -5.695550441741943
    10. ' Data' → logprob: -5.945550441741943

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009334553964436054
    2. ' :' → logprob: -5.759334564208984
    3. '.Graph' → logprob: -5.884334564208984
    4. '.' → logprob: -6.759334564208984
    5. '(' → logprob: -7.384334564208984
    6. '(Graph' → logprob: -7.509334564208984
    7. '():' → logprob: -7.634334564208984
    8. ':
' → logprob: -9.009334564208984
    9. '.:' → logprob: -9.384334564208984
    10. '):' → logprob: -9.884334564208984

Token 62: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0343165397644043
    2. ' :' → logprob: -3.7843165397644043
    3. '(object' → logprob: -5.284316539764404
    4. '(' → logprob: -5.784316539764404
    5. ' (' → logprob: -7.034316539764404
    6. '   ' → logprob: -7.159316539764404
    7. '():' → logprob: -7.909316539764404
    8. ' ' → logprob: -8.409317016601562
    9. ':
' → logprob: -8.409317016601562
    10. ' ():' → logprob: -9.659317016601562

Token 63: ' INF' (ID: 69196)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.06539110094308853
    2. 'def' → logprob: -2.8153910636901855
    3. '   ' → logprob: -6.0653910636901855
    4. '    ' → logprob: -7.5653910636901855
    5. ' ' → logprob: -8.190391540527344
    6. '	def' → logprob: -8.940391540527344
    7. ' __' → logprob: -9.190391540527344
    8. ' de' → logprob: -11.565391540527344
    9. 'class' → logprob: -11.815391540527344
    10. '  ' → logprob: -11.940391540527344

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04860769584774971
    2. '=' → logprob: -3.048607587814331
    3. '  ' → logprob: -12.04860782623291
    4. '_' → logprob: -12.79860782623291
    5. '   ' → logprob: -12.79860782623291
    6. ' ' → logprob: -12.92360782623291
    7. ',' → logprob: -13.54860782623291
    8. '    ' → logprob: -14.04860782623291
    9. ' =)' → logprob: -14.04860782623291
    10. '.' → logprob: -14.42360782623291

Token 65: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.43773430585861206
    2. ' float' → logprob: -1.5627343654632568
    3. '10' → logprob: -2.312734365463257
    4. ' ' → logprob: -3.187734365463257
    5. '100' → logprob: -5.937734127044678
    6. 'int' → logprob: -7.187734127044678
    7. '999' → logprob: -7.562734127044678
    8. '1' → logprob: -7.687734127044678
    9. ' int' → logprob: -8.937734603881836
    10. '(float' → logprob: -10.687734603881836

Token 66: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -5.3596853831550106e-05
    2. '("' → logprob: -10.500053405761719
    3. '(' → logprob: -10.625053405761719
    4. '('+' → logprob: -14.375053405761719
    5. '('-' → logprob: -14.500053405761719
    6. ''' → logprob: -14.750053405761719
    7. '32' → logprob: -16.75005340576172
    8. ''in' → logprob: -16.75005340576172
    9. '(\'' → logprob: -17.37505340576172
    10. ' ('' → logprob: -17.87505340576172

Token 67: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0029125732835382223
    2. ''in' → logprob: -6.252912521362305
    3. 'in' → logprob: -7.252912521362305
    4. 'info' → logprob: -9.752912521362305
    5. '"' → logprob: -10.002912521362305
    6. ''' → logprob: -10.127912521362305
    7. '-inf' → logprob: -10.752912521362305
    8. '64' → logprob: -11.252912521362305
    9. '128' → logprob: -11.877912521362305
    10. '123' → logprob: -12.002912521362305

Token 68: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.023363111540675163
    2. ')' → logprob: -3.7733631134033203
    3. ' ')' → logprob: -9.64836311340332
    4. ''' → logprob: -11.64836311340332
    5. '')
' → logprob: -11.89836311340332
    6. ']' → logprob: -12.02336311340332
    7. '}')' → logprob: -12.02336311340332
    8. '")' → logprob: -12.39836311340332
    9. '()' → logprob: -12.52336311340332
    10. ' )' → logprob: -12.64836311340332

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3308444023132324
    2. '
' → logprob: -1.5808444023132324
    3. '    
' → logprob: -1.9558444023132324
    4. ':' → logprob: -2.2058444023132324
    5. 'def' → logprob: -2.2058444023132324
    6. ' def' → logprob: -2.9558444023132324
    7. ' ' → logprob: -3.4558444023132324
    8. '<|end|>' → logprob: -3.7058444023132324
    9. '    ' → logprob: -4.080844402313232
    10. '<|end|>' → logprob: -4.580844402313232

Token 70: ' G' (ID: 499)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2650206983089447
    2. ' def' → logprob: -1.515020728111267
    3. '   ' → logprob: -4.390020847320557
    4. ' ' → logprob: -8.515020370483398
    5. '	def' → logprob: -8.640020370483398
    6. '    ' → logprob: -9.140020370483398
    7. '  ' → logprob: -10.515020370483398
    8. '    
' → logprob: -10.515020370483398
    9. ':' → logprob: -10.890020370483398
    10. ')' → logprob: -11.640020370483398

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6556354761123657
    2. '=' → logprob: -0.7806354761123657
    3. 'raph' → logprob: -3.905635356903076
    4. '=[]' → logprob: -6.905635356903076
    5. ' ' → logprob: -7.530635356903076
    6. '   ' → logprob: -7.655635356903076
    7. '  ' → logprob: -8.780635833740234
    8. '[]' → logprob: -9.030635833740234
    9. '[' → logprob: -9.530635833740234
    10. '={}' → logprob: -9.905635833740234

Token 72: ' None' (ID: 4662)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.22515243291854858
    2. '[]' → logprob: -2.3501524925231934
    3. 'collections' → logprob: -2.3501524925231934
    4. 'default' → logprob: -5.475152492523193
    5. ' collections' → logprob: -6.100152492523193
    6. '{' → logprob: -6.600152492523193
    7. ' {}' → logprob: -6.725152492523193
    8. ' defaultdict' → logprob: -6.975152492523193
    9. ' []' → logprob: -7.850152492523193
    10. 'dict' → logprob: -8.100152015686035

Token 73: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1678215116262436
    2. 'def' → logprob: -2.6678214073181152
    3. '    
' → logprob: -2.7928214073181152
    4. '
' → logprob: -4.292821407318115
    5. ' def' → logprob: -5.167821407318115
    6. '    ' → logprob: -6.792821407318115
    7. ':' → logprob: -7.917821407318115
    8. '	def' → logprob: -7.917821407318115
    9. '<|end|>' → logprob: -8.042821884155273
    10. ' ' → logprob: -8.417821884155273

Token 75: ' Path' (ID: 14027)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4158324599266052
    2. ' def' → logprob: -1.54083251953125
    3. ' =' → logprob: -2.54083251953125
    4. '   ' → logprob: -4.16583251953125
    5. ' ' → logprob: -4.41583251953125
    6. '=' → logprob: -5.04083251953125
    7. ':' → logprob: -5.54083251953125
    8. '    ' → logprob: -5.66583251953125
    9. ' None' → logprob: -6.29083251953125
    10. '	def' → logprob: -6.41583251953125

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2629201114177704
    2. '=' → logprob: -2.0129201412200928
    3. 's' → logprob: -2.5129201412200928
    4. 'es' → logprob: -5.012919902801514
    5. '=[]' → logprob: -5.262919902801514
    6. '[]' → logprob: -7.137919902801514
    7. ' ' → logprob: -7.137919902801514
    8. '=None' → logprob: -7.137919902801514
    9. '   ' → logprob: -7.637919902801514
    10. '_' → logprob: -7.887919902801514

Token 77: ' None' (ID: 4662)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.040887512266635895
    2. '{}' → logprob: -4.165887355804443
    3. 'None' → logprob: -4.290887355804443
    4. ' []' → logprob: -4.790887355804443
    5. ' None' → logprob: -6.540887355804443
    6. ' {}' → logprob: -8.415887832641602
    7. '[]}' → logprob: -8.540887832641602
    8. '{' → logprob: -8.790887832641602
    9. '[' → logprob: -9.165887832641602
    10. '[][]' → logprob: -9.415887832641602

Token 78: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21634025871753693
    2. 'def' → logprob: -2.5913403034210205
    3. ' def' → logprob: -3.0913403034210205
    4. '
' → logprob: -3.3413403034210205
    5. '    
' → logprob: -3.7163403034210205
    6. '	def' → logprob: -5.341340065002441
    7. '    ' → logprob: -5.466340065002441
    8. '<|end|>' → logprob: -6.716340065002441
    9. ' ' → logprob: -6.966340065002441
    10. '<|end|>' → logprob: -7.466340065002441

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06728392094373703
    2. '
' → logprob: -3.692283868789673
    3. '    
' → logprob: -3.692283868789673
    4. 'def' → logprob: -4.442284107208252
    5. ' def' → logprob: -6.567284107208252
    6. '    ' → logprob: -6.942284107208252
    7. '	def' → logprob: -8.192283630371094
    8. '	
' → logprob: -8.317283630371094
    9. ' 
' → logprob: -8.942283630371094
    10. '        
' → logprob: -9.442283630371094

Token 80: ' E' (ID: 457)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16566191613674164
    2. '   ' → logprob: -2.5406618118286133
    3. ' def' → logprob: -2.6656618118286133
    4. '	def' → logprob: -6.165661811828613
    5. '    
' → logprob: -7.040661811828613
    6. ' ' → logprob: -7.915661811828613
    7. '
' → logprob: -8.165661811828613
    8. '    ' → logprob: -8.290661811828613
    9. ' =' → logprob: -8.790661811828613
    10. '  ' → logprob: -9.290661811828613

Token 81: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6803872585296631
    2. ' =' → logprob: -0.8053872585296631
    3. '=[]' → logprob: -3.930387258529663
    4. 'd' → logprob: -4.305387496948242
    5. '   ' → logprob: -5.930387496948242
    6. '=None' → logprob: -6.305387496948242
    7. '  ' → logprob: -6.680387496948242
    8. 'D' → logprob: -7.430387496948242
    9. '[]' → logprob: -7.555387496948242
    10. 'num' → logprob: -7.555387496948242

Token 82: ' None' (ID: 4662)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0241618100553751
    2. ' []' → logprob: -4.5241618156433105
    3. 'None' → logprob: -4.6491618156433105
    4. '0' → logprob: -7.0241618156433105
    5. ' None' → logprob: -7.2741618156433105
    6. '{}' → logprob: -7.2741618156433105
    7. 'collections' → logprob: -7.7741618156433105
    8. '[]}' → logprob: -8.274161338806152
    9. '[]
' → logprob: -9.024161338806152
    10. 'set' → logprob: -9.274161338806152

Token 83: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1425943225622177
    2. '
' → logprob: -2.517594337463379
    3. '    
' → logprob: -3.892594337463379
    4. 'def' → logprob: -4.142594337463379
    5. '<|end|>' → logprob: -5.017594337463379
    6. '<|end|>' → logprob: -5.767594337463379
    7. '    ' → logprob: -6.142594337463379
    8. '	
' → logprob: -6.267594337463379
    9. '	def' → logprob: -7.017594337463379
    10. ' def' → logprob: -7.517594337463379

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4112963676452637
    2. ' ' → logprob: -1.6612963676452637
    3. 'def' → logprob: -1.7862963676452637
    4. '	def' → logprob: -1.9112963676452637
    5. ' def' → logprob: -2.0362963676452637
    6. '    ' → logprob: -3.1612963676452637
    7. '
' → logprob: -3.5362963676452637
    8. '  ' → logprob: -4.036296367645264
    9. ':' → logprob: -4.536296367645264
    10. '    
' → logprob: -5.411296367645264

Token 85: ' V' (ID: 631)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30550771951675415
    2. ' def' → logprob: -1.9305076599121094
    3. 'def' → logprob: -2.4305076599121094
    4. ':' → logprob: -4.680507659912109
    5. '	def' → logprob: -4.680507659912109
    6. '   ' → logprob: -5.805507659912109
    7. ' =' → logprob: -6.180507659912109
    8. '    ' → logprob: -6.180507659912109
    9. ' :' → logprob: -6.680507659912109
    10. '  ' → logprob: -7.555507659912109

Token 86: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47414326667785645
    2. ' =' → logprob: -0.9741432666778564
    3. '=None' → logprob: -10.474143028259277
    4. ' ' → logprob: -10.849143028259277
    5. '  ' → logprob: -12.224143028259277
    6. ':' → logprob: -12.599143028259277
    7. ',' → logprob: -13.099143028259277
    8. '   ' → logprob: -13.099143028259277
    9. ' =
' → logprob: -13.349143028259277
    10. ' None' → logprob: -13.599143028259277

Token 87: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18666040897369385
    2. ' ' → logprob: -2.1866602897644043
    3. ' None' → logprob: -3.4366602897644043
    4. 'None' → logprob: -4.311660289764404
    5. '[]' → logprob: -5.311660289764404
    6. ' []' → logprob: -5.436660289764404
    7. 'int' → logprob: -6.186660289764404
    8. ' int' → logprob: -7.561660289764404
    9. 'set' → logprob: -8.686660766601562
    10. ' set' → logprob: -9.186660766601562

Token 88: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3270072042942047
    2. '
' → logprob: -2.202007293701172
    3. '<|end|>' → logprob: -2.327007293701172
    4. '<|end|>' → logprob: -3.577007293701172
    5. ':' → logprob: -4.202007293701172
    6. 'def' → logprob: -4.702007293701172
    7. '	def' → logprob: -5.327007293701172
    8. '    
' → logprob: -5.577007293701172
    9. '  ' → logprob: -5.827007293701172
    10. ' ' → logprob: -6.827007293701172

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5435922145843506
    2. 'def' → logprob: -1.9185922145843506
    3. ':' → logprob: -2.2935922145843506
    4. ' def' → logprob: -2.7935922145843506
    5. '    
' → logprob: -3.6685922145843506
    6. '	def' → logprob: -4.04359245300293
    7. '    ' → logprob: -4.16859245300293
    8. ' ' → logprob: -4.41859245300293
    9. ' 
' → logprob: -4.54359245300293
    10. '
' → logprob: -4.91859245300293

Token 90: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0740923210978508
    2. '   ' → logprob: -2.824092388153076
    3. ' def' → logprob: -4.574092388153076
    4. '	def' → logprob: -6.699092388153076
    5. '    ' → logprob: -8.824091911315918
    6. ' ' → logprob: -9.199091911315918
    7. '    
' → logprob: -9.199091911315918
    8. '
' → logprob: -10.449091911315918
    9. ':' → logprob: -10.824091911315918
    10. 'de' → logprob: -10.824091911315918

Token 91: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.058971550315618515
    2. ' def' → logprob: -3.183971643447876
    3. ' ' → logprob: -4.683971405029297
    4. ' init' → logprob: -5.808971405029297
    5. ' ' → logprob: -6.933971405029297
    6. ' _' → logprob: -7.058971405029297
    7. ' initialize' → logprob: -7.058971405029297
    8. '__' → logprob: -8.058971405029297
    9. 'def' → logprob: -9.183971405029297
    10. '_' → logprob: -9.433971405029297

Token 92: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.00019030878320336342
    2. 'i' → logprob: -8.750190734863281
    3. 'ini' → logprob: -11.000190734863281
    4. ' init' → logprob: -11.250190734863281
    5. 'in' → logprob: -13.375190734863281
    6. ' i' → logprob: -14.875190734863281
    7. 'inite' → logprob: -16.62519073486328
    8. 'int' → logprob: -17.50019073486328
    9. ' ' → logprob: -17.87519073486328
    10. '	init' → logprob: -18.37519073486328

Token 93: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5043416619300842
    2. '(self' → logprob: -1.3793416023254395
    3. '__(' → logprob: -2.0043416023254395
    4. ' (' → logprob: -4.7543416023254395
    5. '__(
' → logprob: -7.8793416023254395
    6. '_(' → logprob: -8.879342079162598
    7. ')(' → logprob: -9.004342079162598
    8. '(s' → logprob: -9.504342079162598
    9. '<>(' → logprob: -10.004342079162598
    10. '(
' → logprob: -10.754342079162598

Token 94: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008137972326949239
    2. ' self' → logprob: -7.125813961029053
    3. 's' → logprob: -11.875813484191895
    4. ')' → logprob: -14.000813484191895
    5. ' ' → logprob: -14.875813484191895
    6. '(self' → logprob: -15.125813484191895
    7. '
' → logprob: -15.375813484191895
    8. ',' → logprob: -15.500813484191895
    9. '	self' → logprob: -15.875813484191895
    10. ',self' → logprob: -16.37581443786621

Token 95: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10080134868621826
    2. ' ,' → logprob: -2.350801467895508
    3. ',self' → logprob: -7.600801467895508
    4. 'self' → logprob: -9.475801467895508
    5. ' self' → logprob: -12.100801467895508
    6. '(self' → logprob: -12.350801467895508
    7. ',s' → logprob: -12.350801467895508
    8. ' (' → logprob: -14.350801467895508
    9. ' ' → logprob: -14.600801467895508
    10. '   ' → logprob: -14.850801467895508

Token 96: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008655465207993984
    2. ' self' → logprob: -4.758655548095703
    3. '   ' → logprob: -10.508655548095703
    4. '       ' → logprob: -11.508655548095703
    5. '	self' → logprob: -13.258655548095703
    6. 's' → logprob: -13.883655548095703
    7. '(self' → logprob: -14.758655548095703
    8. '    ' → logprob: -16.133655548095703
    9. ',self' → logprob: -16.258655548095703
    10. ' ' → logprob: -16.383655548095703

Token 97: ' data' (ID: 1238)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.33634212613105774
    2. ' self' → logprob: -1.3363420963287354
    3. '       ' → logprob: -3.9613420963287354
    4. '   ' → logprob: -6.4613423347473145
    5. 'pass' → logprob: -6.8363423347473145
    6. ' pass' → logprob: -6.9613423347473145
    7. '	self' → logprob: -9.086341857910156
    8. 'None' → logprob: -10.336341857910156
    9. ' None' → logprob: -11.586341857910156
    10. '	pass' → logprob: -12.086341857910156

Token 98: 'Raw' (ID: 21586)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22554714977741241
    2. ' =' → logprob: -1.600547194480896
    3. '=input' → logprob: -10.475546836853027
    4. '=sys' → logprob: -10.850546836853027
    5. '=data' → logprob: -10.975546836853027
    6. '=[]' → logprob: -11.350546836853027
    7. ' ' → logprob: -11.600546836853027
    8. '	' → logprob: -11.975546836853027
    9. '=line' → logprob: -11.975546836853027
    10. '   ' → logprob: -12.225546836853027

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25207287073135376
    2. '=' → logprob: -1.502072811126709
    3. ' ' → logprob: -10.002073287963867
    4. '=[]' → logprob: -10.627073287963867
    5. '()' → logprob: -11.127073287963867
    6. '_' → logprob: -11.252073287963867
    7. '=input' → logprob: -11.877073287963867
    8. '   ' → logprob: -12.377073287963867
    9. ',' → logprob: -12.752073287963867
    10. ' ' → logprob: -12.752073287963867

Token 100: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.6406176686286926
    2. ' raw' → logprob: -0.7656176686286926
    3. 'list' → logprob: -6.515617847442627
    4. 'sys' → logprob: -6.515617847442627
    5. ' sys' → logprob: -6.640617847442627
    6. ' list' → logprob: -6.890617847442627
    7. '[' → logprob: -6.890617847442627
    8. '[]' → logprob: -7.265617847442627
    9. ' []' → logprob: -8.265617370605469
    10. ' [' → logprob: -8.390617370605469

Token 101: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0031913816928863525
    2. '_' → logprob: -6.0031914710998535
    3. ' _' → logprob: -7.5031914710998535
    4. '_raw' → logprob: -10.378190994262695
    5. '_inputs' → logprob: -11.253190994262695
    6. 'input' → logprob: -11.378190994262695
    7. '   ' → logprob: -11.503190994262695
    8. '()' → logprob: -11.503190994262695
    9. '```' → logprob: -11.628190994262695
    10. '(_' → logprob: -11.628190994262695

Token 102: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3137918710708618
    2. '()' → logprob: -1.3137918710708618
    3. '(' → logprob: -7.563791751861572
    4. ' ()' → logprob: -11.93879222869873
    5. '（）' → logprob: -13.81379222869873
    6. '())' → logprob: -13.93879222869873
    7. ' ().' → logprob: -14.06379222869873
    8. '()[' → logprob: -15.06379222869873
    9. '('' → logprob: -15.31379222869873
    10. '(),' → logprob: -15.43879222869873

Token 103: '       ' (ID: 309)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4074123799800873
    2. '()' → logprob: -1.4074124097824097
    3. '.split' → logprob: -3.28241229057312
    4. '.rstrip' → logprob: -3.78241229057312
    5. '.strip' → logprob: -3.90741229057312
    6. '.' → logprob: -6.157412528991699
    7. '()
' → logprob: -6.407412528991699
    8. '<|end|>' → logprob: -6.532412528991699
    9. ' ' → logprob: -7.157412528991699
    10. ')' → logprob: -7.407412528991699

Token 104: ' raw' (ID: 11428)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.42614245414733887
    2. ' self' → logprob: -1.8011424541473389
    3. '       ' → logprob: -2.676142454147339
    4. 'n' → logprob: -2.801142454147339
    5. ' if' → logprob: -4.176142692565918
    6. 'self' → logprob: -4.801142692565918
    7. ' parts' → logprob: -5.426142692565918
    8. '    ' → logprob: -5.676142692565918
    9. '        ' → logprob: -5.676142692565918
    10. ' ' → logprob: -6.051142692565918

Token 105: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8405591249465942
    2. '_data' → logprob: -0.9655591249465942
    3. '_input' → logprob: -1.7155591249465942
    4. 'data' → logprob: -5.590559005737305
    5. '_tokens' → logprob: -6.965559005737305
    6. '_token' → logprob: -7.215559005737305
    7. ' =' → logprob: -7.715559005737305
    8. '_
' → logprob: -7.965559005737305
    9. ' _' → logprob: -8.090559005737305
    10. 'Data' → logprob: -8.590559005737305

Token 106: ' list' (ID: 1562)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.33923786878585815
    2. ' list' → logprob: -1.589237928390503
    3. 'data' → logprob: -2.964237928390503
    4. ' [' → logprob: -4.089237689971924
    5. 'list' → logprob: -4.839237689971924
    6. ' map' → logprob: -6.089237689971924
    7. '[data' → logprob: -6.089237689971924
    8. '[' → logprob: -6.589237689971924
    9. ' ' → logprob: -7.214237689971924
    10. '[list' → logprob: -8.714238166809082

Token 107: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00870734453201294
    2. '(' → logprob: -4.758707523345947
    3. '(data' → logprob: -9.633707046508789
    4. '()' → logprob: -11.758707046508789
    5. 'map' → logprob: -12.133707046508789
    6. '(int' → logprob: -12.258707046508789
    7. '(
' → logprob: -12.508707046508789
    8. '(filter' → logprob: -12.508707046508789
    9. '(

' → logprob: -14.758707046508789
    10. '(eval' → logprob: -14.883707046508789

Token 108: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1649194061756134
    2. '(' → logprob: -1.914919376373291
    3. '(str' → logprob: -5.414919376373291
    4. '(lambda' → logprob: -8.66491985321045
    5. '(
' → logprob: -10.28991985321045
    6. '(float' → logprob: -11.78991985321045
    7. '(operator' → logprob: -12.16491985321045
    8. ' (' → logprob: -12.41491985321045
    9. '(eval' → logprob: -12.78991985321045
    10. ')' → logprob: -13.03991985321045

Token 109: ',' (ID: 11)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.32221901416778564
    2. ',' → logprob: -2.072218894958496
    3. ',data' → logprob: -2.572218894958496
    4. '(raw' → logprob: -3.072218894958496
    5. '(' → logprob: -3.822218894958496
    6. ' ,' → logprob: -5.947218894958496
    7. ' (' → logprob: -6.197218894958496
    8. ' raw' → logprob: -9.947218894958496
    9. ',(' → logprob: -10.072218894958496
    10. '(),' → logprob: -10.072218894958496

Token 110: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.06995532661676407
    2. 'data' → logprob: -2.694955348968506
    3. ' raw' → logprob: -11.319954872131348
    4. ' ' → logprob: -12.444954872131348
    5. '(data' → logprob: -14.069954872131348
    6. ' filter' → logprob: -14.694954872131348
    7. 'raw' → logprob: -14.819954872131348
    8. '	data' → logprob: -14.944954872131348
    9. 'filter' → logprob: -15.444954872131348
    10. ')data' → logprob: -15.694954872131348

Token 111: 'Raw' (ID: 21586)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5251297354698181
    2. 'Raw' → logprob: -1.525129795074463
    3. '()' → logprob: -2.025129795074463
    4. '())' → logprob: -3.275129795074463
    5. '_raw' → logprob: -5.025129795074463
    6. ')' → logprob: -5.400129795074463
    7. '(' → logprob: -5.775129795074463
    8. '   ' → logprob: -6.650129795074463
    9. '()[' → logprob: -6.900129795074463
    10. '.split' → logprob: -6.900129795074463

Token 112: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0023408043198287487
    2. '.strip' → logprob: -6.502340793609619
    3. '()' → logprob: -7.627340793609619
    4. ' .' → logprob: -9.502341270446777
    5. '.split' → logprob: -9.502341270446777
    6. '.' → logprob: -9.627341270446777
    7. ' ().' → logprob: -9.752341270446777
    8. 'strip' → logprob: -10.002341270446777
    9. '(strip' → logprob: -12.002341270446777
    10. 'split' → logprob: -12.002341270446777

Token 113: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.5332478142227046e-05
    2. '()' → logprob: -11.750015258789062
    3. ' ().' → logprob: -12.750015258789062
    4. '.split' → logprob: -13.125015258789062
    5. '   ' → logprob: -14.000015258789062
    6. '('' → logprob: -14.375015258789062
    7. '(' → logprob: -15.500015258789062
    8. 'split' → logprob: -15.500015258789062
    9. '()
' → logprob: -15.750015258789062
    10. '    ' → logprob: -16.250015258789062

Token 114: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1041145626222715e-05
    2. ' split' → logprob: -11.500011444091797
    3. 'strip' → logprob: -14.625011444091797
    4. '(split' → logprob: -15.750011444091797
    5. 'rstrip' → logprob: -16.625011444091797
    6. 'spl' → logprob: -16.750011444091797
    7. '.split' → logprob: -17.000011444091797
    8. 'replace' → logprob: -18.625011444091797
    9. ')' → logprob: -18.750011444091797
    10. 'sp' → logprob: -19.625011444091797

Token 115: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.10509875416755676
    2. '()' → logprob: -2.6050987243652344
    3. '('' → logprob: -3.7300987243652344
    4. '(' → logprob: -6.730098724365234
    5. '())' → logprob: -8.480098724365234
    6. '()))
' → logprob: -8.730098724365234
    7. '(','' → logprob: -8.730098724365234
    8. '()));' → logprob: -9.855098724365234
    9. '())))' → logprob: -10.105098724365234
    10. '))' → logprob: -10.605098724365234

Token 116: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35418960452079773
    2. '<|end|>' → logprob: -1.3541896343231201
    3. ' ' → logprob: -4.229189395904541
    4. '   ' → logprob: -5.479189395904541
    5. ')' → logprob: -5.479189395904541
    6. '[' → logprob: -5.979189395904541
    7. '        
' → logprob: -5.979189395904541
    8. ',' → logprob: -6.354189395904541
    9. '<|end|>' → logprob: -6.354189395904541
    10. '  ' → logprob: -6.479189395904541

Token 117: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7110260725021362
    2. 'self' (adapté à ' self') → logprob: -0.7110260725021362
    3. ' self' → logprob: -4.211026191711426
    4. 'if' → logprob: -6.211026191711426
    5. ' if' → logprob: -8.711026191711426
    6. '   ' → logprob: -8.711026191711426
    7. '	self' → logprob: -9.461026191711426
    8. 'n' → logprob: -9.711026191711426
    9. '        
' → logprob: -9.711026191711426
    10. ' ' → logprob: -9.836026191711426

Token 118: '.E' (ID: 9032)
  Prédit: '.V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.V' → logprob: -0.0025253647472709417
    2. '.G' → logprob: -6.627525329589844
    3. '.' → logprob: -6.877525329589844
    4. '.E' → logprob: -9.252525329589844
    5. ' .' → logprob: -10.377525329589844
    6. '.I' → logprob: -11.752525329589844
    7. '.B' → logprob: -11.877525329589844
    8. '.N' → logprob: -11.877525329589844
    9. '.v' → logprob: -12.627525329589844
    10. '.T' → logprob: -12.752525329589844

Token 119: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37520328164100647
    2. ',' → logprob: -1.375203251838684
    3. ' ,' → logprob: -2.8752033710479736
    4. '=' → logprob: -5.6252031326293945
    5. ' ' → logprob: -10.625203132629395
    6. ',self' → logprob: -11.750203132629395
    7. '<|end|>' → logprob: -11.750203132629395
    8. '=len' → logprob: -13.000203132629395
    9. '<|end|>' → logprob: -13.000203132629395
    10. '=int' → logprob: -13.750203132629395

Token 120: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.37361109256744385
    2. 'self' → logprob: -1.2486110925674438
    3. ' ' → logprob: -3.8736109733581543
    4. ' =' → logprob: -5.748610973358154
    5. '<|end|>' → logprob: -7.623610973358154
    6. '=self' → logprob: -8.873611450195312
    7. '=' → logprob: -9.123611450195312
    8. ' ' → logprob: -9.498611450195312
    9. ' 
' → logprob: -10.748611450195312
    10. '	self' → logprob: -11.248611450195312

Token 121: '.V' (ID: 5970)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -1.2233712673187256
    2. '.V' → logprob: -1.2233712673187256
    3. ' =' → logprob: -1.7233712673187256
    4. '.' → logprob: -1.7233712673187256
    5. '=' → logprob: -3.2233712673187256
    6. ' ' → logprob: -4.598371505737305
    7. ' V' → logprob: -5.848371505737305
    8. ',' → logprob: -7.348371505737305
    9. ' .' → logprob: -7.723371505737305
    10. '	V' → logprob: -8.598371505737305

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16028250753879547
    2. '=' → logprob: -1.9102824926376343
    3. ' ' → logprob: -10.160282135009766
    4. ',' → logprob: -11.535282135009766
    5. ' =
' → logprob: -12.285282135009766
    6. '<|end|>' → logprob: -13.910282135009766
    7. ')' → logprob: -14.285282135009766
    8. ' ,' → logprob: -14.535282135009766
    9. ' =)' → logprob: -14.660282135009766
    10. ' =[' → logprob: -14.910282135009766

Token 123: ' raw' (ID: 11428)
  Prédit: ' raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raw' → logprob: -0.014215687289834023
    2. 'raw' → logprob: -4.264215469360352
    3. ' ' → logprob: -10.889215469360352
    4. '	raw' → logprob: -11.264215469360352
    5. ' ' → logprob: -11.514215469360352
    6. '(raw' → logprob: -11.639215469360352
    7. '_raw' → logprob: -15.014215469360352
    8. ' tuple' → logprob: -15.139215469360352
    9. '
' → logprob: -15.639215469360352
    10. '  ' → logprob: -16.07671546936035

Token 124: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5459820032119751
    2. '<|end|>' → logprob: -1.920982003211975
    3. '[:]' → logprob: -2.0459818840026855
    4. '
' → logprob: -2.6709818840026855
    5. ',' → logprob: -3.9209818840026855
    6. '<|end|>' → logprob: -4.5459818840026855
    7. ' ' → logprob: -4.5459818840026855
    8. '[]' → logprob: -4.9209818840026855
    9. '#' → logprob: -5.2959818840026855
    10. '()' → logprob: -5.4209818840026855

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015840323641896248
    2. ' ' → logprob: -4.265840530395508
    3. ':' → logprob: -6.765840530395508
    4. ' :' → logprob: -7.640840530395508
    5. '[' → logprob: -11.265840530395508
    6. '  ' → logprob: -12.140840530395508
    7. ':]' → logprob: -12.140840530395508
    8. '1' → logprob: -12.890840530395508
    9. ' :]' → logprob: -13.015840530395508
    10. '00' → logprob: -13.015840530395508

Token 126: ']+' (ID: 15344)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1072688028216362
    2. ' ,' → logprob: -2.732268810272217
    3. '],' → logprob: -3.482268810272217
    4. ']' → logprob: -5.857268810272217
    5. ' ],' → logprob: -5.857268810272217
    6. ' ]' → logprob: -8.857268333435059
    7. ' ' → logprob: -10.732268333435059
    8. ' ,
' → logprob: -12.732268333435059
    9. '),' → logprob: -13.232268333435059
    10. ',
' → logprob: -13.232268333435059

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4627440571784973
    2. ' ' → logprob: -1.2127439975738525
    3. ' raw' → logprob: -3.3377439975738525
    4. '0' → logprob: -3.8377439975738525
    5. 'raw' → logprob: -4.837744235992432
    6. ',' → logprob: -5.087744235992432
    7. ' ,' → logprob: -6.587744235992432
    8. '2' → logprob: -8.337743759155273
    9. '	raw' → logprob: -9.837743759155273
    10. '(raw' → logprob: -9.962743759155273

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02939276024699211
    2. ' ,' → logprob: -3.654392719268799
    3. '<|end|>' → logprob: -6.154392719268799
    4. ',
' → logprob: -7.404392719268799
    5. '<|end|>' → logprob: -8.779393196105957
    6. ' ' → logprob: -9.029393196105957
    7. ' ,
' → logprob: -9.904393196105957
    8. '
' → logprob: -12.154393196105957
    9. ',input' → logprob: -12.904393196105957
    10. '0' → logprob: -13.029393196105957

Token 129: ' raw' (ID: 11428)
  Prédit: ' raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raw' → logprob: -0.0011792739387601614
    2. 'raw' → logprob: -6.751179218292236
    3. '	raw' → logprob: -12.126179695129395
    4. ' ' → logprob: -13.126179695129395
    5. ' ' → logprob: -13.751179695129395
    6. '(raw' → logprob: -14.626179695129395
    7. '_raw' → logprob: -17.376178741455078
    8. '/raw' → logprob: -17.501178741455078
    9. '
' → logprob: -17.626178741455078
    10. ' raws' → logprob: -17.876178741455078

Token 130: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.157039049663581e-05
    2. '1' → logprob: -10.250051498413086
    3. '[
' → logprob: -11.875051498413086
    4. ' [' → logprob: -12.000051498413086
    5. ' ' → logprob: -14.500051498413086
    6. '2' → logprob: -14.875051498413086
    7. '```' → logprob: -14.875051498413086
    8. '
' → logprob: -15.250051498413086
    9. ']' → logprob: -15.437551498413086
    10. '<|end|>' → logprob: -15.500051498413086

Token 131: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003517894074320793
    2. ' ' → logprob: -8.000351905822754
    3. '-' → logprob: -12.375351905822754
    4. '0' → logprob: -12.500351905822754
    5. '2' → logprob: -12.625351905822754
    6. ' -' → logprob: -13.437851905822754
    7. '[' → logprob: -13.750351905822754
    8. '   ' → logprob: -13.937851905822754
    9. '```' → logprob: -15.062851905822754
    10. '  ' → logprob: -15.500351905822754

Token 132: ']
' (ID: 1592)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 133: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 134: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02754184417426586
    2. '
' → logprob: -3.7775418758392334
    3. '<|end|>' → logprob: -6.152541637420654
    4. 'self' → logprob: -7.777541637420654
    5. ' self' → logprob: -7.902541637420654
    6. '	' → logprob: -7.902541637420654
    7. '   ' → logprob: -8.652542114257812
    8. 'n' → logprob: -9.152542114257812
    9. '<|end|>' → logprob: -9.527542114257812
    10. ' ' → logprob: -9.777542114257812

Token 135: ' Gén' (ID: 71828)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.08917521685361862
    2. 'self' → logprob: -2.589175224304199
    3. '       ' → logprob: -5.339175224304199
    4. '<|end|>' → logprob: -6.339175224304199
    5. '        ' → logprob: -6.714175224304199
    6. ' ' → logprob: -6.714175224304199
    7. '    ' → logprob: -8.3391752243042
    8. ' G' → logprob: -8.5891752243042
    9. '   ' → logprob: -9.0891752243042
    10. ' graph' → logprob: -9.3391752243042

Token 136: 'ère' (ID: 4346)
  Prédit: 'érer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.17766205966472626
    2. 'er' → logprob: -2.5526621341705322
    3. 'éral' → logprob: -3.0526621341705322
    4. 'ération' → logprob: -3.6776621341705322
    5. 'érateur' → logprob: -5.302661895751953
    6. 'eral' → logprob: -5.677661895751953
    7. 'ér' → logprob: -6.802661895751953
    8. 'r' → logprob: -6.802661895751953
    9. 'éralement' → logprob: -7.927661895751953
    10. 'érique' → logprob: -8.052661895751953

Token 137: ' une' (ID: 2463)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.35865455865859985
    2. 'self' → logprob: -1.858654499053955
    3. ' un' → logprob: -2.608654499053955
    4. ' une' → logprob: -3.608654499053955
    5. ' la' → logprob: -4.608654499053955
    6. '[]' → logprob: -4.858654499053955
    7. ' graph' → logprob: -5.483654499053955
    8. ' le' → logprob: -5.608654499053955
    9. ' les' → logprob: -5.733654499053955
    10. ' ' → logprob: -6.108654499053955

Token 138: ' matr' (ID: 25095)
  Prédit: ' matr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' matr' → logprob: -0.5958166122436523
    2. ' matrix' → logprob: -1.5958166122436523
    3. ' liste' → logprob: -2.8458166122436523
    4. 'matrix' → logprob: -2.9708166122436523
    5. 'mat' → logprob: -3.7208166122436523
    6. ' matriz' → logprob: -3.9708166122436523
    7. ' ' → logprob: -4.095816612243652
    8. ' G' → logprob: -4.470816612243652
    9. ' adjacency' → logprob: -4.720816612243652
    10. ' graph' → logprob: -4.845816612243652

Token 139: 'ice' (ID: 603)
  Prédit: 'rice'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rice' → logprob: -0.43283477425575256
    2. 'ice' → logprob: -1.1828347444534302
    3. 'atrice' → logprob: -3.3078348636627197
    4. '   ' → logprob: -6.682834625244141
    5. 'ix' → logprob: -6.807834625244141
    6. 'rix' → logprob: -7.182834625244141
    7. '```' → logprob: -7.182834625244141
    8. 'rices' → logprob: -7.557834625244141
    9. 'ices' → logprob: -7.807834625244141
    10. '[]' → logprob: -7.807834625244141

Token 140: ' carré' (ID: 191546)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4627392888069153
    2. ' d' → logprob: -1.8377392292022705
    3. '[' → logprob: -2.9627392292022705
    4. '[]' → logprob: -3.7127392292022705
    5. 'de' → logprob: -3.7127392292022705
    6. ' self' → logprob: -3.7127392292022705
    7. 'self' → logprob: -3.8377392292022705
    8. 'd' → logprob: -4.08773946762085
    9. ' of' → logprob: -4.33773946762085
    10. '<|end|>' → logprob: -5.08773946762085

Token 141: ' via' (ID: 4493)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7839293479919434
    2. ' [' → logprob: -1.6589293479919434
    3. ' de' → logprob: -1.9089293479919434
    4. ' for' → logprob: -3.1589293479919434
    5. ' d' → logprob: -3.6589293479919434
    6. ',' → logprob: -3.9089293479919434
    7. '   ' → logprob: -4.033929347991943
    8. ' self' → logprob: -4.158929347991943
    9. '[]' → logprob: -4.283929347991943
    10. ' ' → logprob: -4.408929347991943

Token 142: ' accumulate' (ID: 74226)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.566429853439331
    2. ' [[' → logprob: -1.066429853439331
    3. '[' → logprob: -3.066429853439331
    4. '[[' → logprob: -4.06643009185791
    5. ' self' → logprob: -4.69143009185791
    6. ' [
' → logprob: -4.94143009185791
    7. '[
' → logprob: -5.69143009185791
    8. 'self' → logprob: -6.69143009185791
    9. 'collections' → logprob: -7.31643009185791
    10. ' list' → logprob: -7.81643009185791

Token 143: ' et' (ID: 859)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5804339647293091
    2. 'd' → logprob: -1.330433964729309
    3. '(
' → logprob: -2.7054338455200195
    4. ',' → logprob: -4.3304338455200195
    5. '   ' → logprob: -4.5804338455200195
    6. 'def' → logprob: -4.8304338455200195
    7. '(lambda' → logprob: -5.0804338455200195
    8. ' operator' → logprob: -5.2054338455200195
    9. ' d' → logprob: -5.3304338455200195
    10. ' for' → logprob: -5.3304338455200195

Token 144: ' map' (ID: 4014)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.1761302649974823
    2. 'it' → logprob: -2.1761302947998047
    3. ' functools' → logprob: -4.176130294799805
    4. ' list' → logprob: -5.051130294799805
    5. 'list' → logprob: -5.301130294799805
    6. 'operator' → logprob: -5.426130294799805
    7. ' operator' → logprob: -5.551130294799805
    8. 'lambda' → logprob: -5.926130294799805
    9. '[' → logprob: -6.426130294799805
    10. 'fun' → logprob: -6.551130294799805

Token 145: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32952505350112915
    2. '(' → logprob: -2.2045249938964844
    3. '(
' → logprob: -2.7045249938964844
    4. '(self' → logprob: -3.2045249938964844
    5. '(lambda' → logprob: -3.8295249938964844
    6. '
' → logprob: -4.079524993896484
    7. ' (' → logprob: -4.829524993896484
    8. ',' → logprob: -5.329524993896484
    9. 'self' → logprob: -6.579524993896484
    10. '((' → logprob: -6.579524993896484

Token 146: ' im' (ID: 770)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -1.3983601331710815
    2. '[' → logprob: -1.6483601331710815
    3. '[[' → logprob: -1.8983601331710815
    4. 'com' → logprob: -3.148360252380371
    5. 'range' → logprob: -3.148360252380371
    6. ' itertools' → logprob: -3.273360252380371
    7. ' [[' → logprob: -3.523360252380371
    8. 'lambda' → logprob: -3.648360252380371
    9. ' utilisant' → logprob: -3.773360252380371
    10. 'self' → logprob: -4.148360252380371

Token 147: 'itant' (ID: 61641)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.05887613445520401
    2. 'ap' → logprob: -2.9338760375976562
    3. 'mutable' → logprob: -6.808876037597656
    4. 'age' → logprob: -7.433876037597656
    5. 'plement' → logprob: -7.683876037597656
    6. 'utable' → logprob: -8.058876037597656
    7. 'ported' → logprob: -8.058876037597656
    8. 'it' → logprob: -8.183876037597656
    9. 'b' → logprob: -8.683876037597656
    10. 'porte' → logprob: -9.183876037597656

Token 148: ' list' (ID: 1562)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.42812013626098633
    2. ' itertools' → logprob: -2.3031201362609863
    3. 'lambda' → logprob: -2.6781201362609863
    4. '(lambda' → logprob: -2.8031201362609863
    5. ' operator' → logprob: -2.9281201362609863
    6. ' functools' → logprob: -3.0531201362609863
    7. 'operator' → logprob: -5.178120136260986
    8. ' map' → logprob: -6.053120136260986
    9. ' list' → logprob: -6.178120136260986
    10. ' (' → logprob: -6.303120136260986

Token 149: ' comprehension' (ID: 91423)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.24357736110687256
    2. '(' → logprob: -1.9935773611068726
    3. '(lambda' → logprob: -3.493577480316162
    4. '(
' → logprob: -4.618577480316162
    5. '(f' → logprob: -4.743577480316162
    6. '(map' → logprob: -5.243577480316162
    7. '   ' → logprob: -5.868577480316162
    8. ',' → logprob: -6.118577480316162
    9. 's' → logprob: -6.243577480316162
    10. '(filter' → logprob: -6.368577480316162

Token 150: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22968749701976776
    2. '(' → logprob: -2.979687452316284
    3. '(
' → logprob: -2.979687452316284
    4. '
' → logprob: -3.104687452316284
    5. '(self' → logprob: -3.604687452316284
    6. 'self' → logprob: -4.854687690734863
    7. ':' → logprob: -5.479687690734863
    8. ',' → logprob: -5.729687690734863
    9. '        
' → logprob: -6.229687690734863
    10. ' (' → logprob: -6.354687690734863

Token 151: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05196134001016617
    2. '
' → logprob: -3.8019614219665527
    3. 'self' → logprob: -5.176961421966553
    4. '(' → logprob: -5.301961421966553
    5. '(self' → logprob: -6.051961421966553
    6. ',' → logprob: -6.176961421966553
    7. '(
' → logprob: -6.176961421966553
    8. '	' → logprob: -6.676961421966553
    9. '[' → logprob: -6.801961421966553
    10. '        
' → logprob: -6.926961421966553

Token 152: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7779839038848877
    2. ' self' → logprob: -1.1529839038848877
    3. 'self' → logprob: -1.5279839038848877
    4. '(self' → logprob: -6.902983665466309
    5. 'list' → logprob: -7.277983665466309
    6. '   ' → logprob: -7.402983665466309
    7. '
' → logprob: -7.527983665466309
    8. 'matrix' → logprob: -7.527983665466309
    9. ' list' → logprob: -8.027983665466309
    10. ' (' → logprob: -8.027983665466309

Token 153: ' build' (ID: 3024)
  Prédit: ' accumulate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' accumulate' → logprob: -1.001863718032837
    2. ' acc' → logprob: -1.876863718032837
    3. 'acc' → logprob: -1.876863718032837
    4. ' f' → logprob: -2.251863718032837
    5. ' accum' → logprob: -3.501863718032837
    6. ' matrix' → logprob: -3.751863718032837
    7. 'f' → logprob: -4.001863479614258
    8. ' func' → logprob: -4.251863479614258
    9. 'matrix' → logprob: -4.626863479614258
    10. ' create' → logprob: -4.626863479614258

Token 154: '_matrix' (ID: 23431)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.6912453174591064
    2. '_row' → logprob: -1.6912453174591064
    3. 'row' → logprob: -2.9412453174591064
    4. '_line' → logprob: -3.4412453174591064
    5. '(n' → logprob: -3.5662453174591064
    6. '(x' → logprob: -3.5662453174591064
    7. '(line' → logprob: -3.9412453174591064
    8. '(acc' → logprob: -3.9412453174591064
    9. '(' → logprob: -4.066245079040527
    10. '(i' → logprob: -4.191245079040527

Token 155: '(val' (ID: 17391)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2523394823074341
    2. '(row' → logprob: -2.1273393630981445
    3. '(size' → logprob: -3.3773393630981445
    4. '():' → logprob: -3.6273393630981445
    5. '(i' → logprob: -4.5023393630981445
    6. '(line' → logprob: -5.1273393630981445
    7. '(rows' → logprob: -5.1273393630981445
    8. '(s' → logprob: -5.7523393630981445
    9. '(r' → logprob: -5.8773393630981445
    10. '():
' → logprob: -6.2523393630981445

Token 156: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7469333410263062
    2. 'ue' → logprob: -1.2469333410263062
    3. '):' → logprob: -1.4969333410263062
    4. '=' → logprob: -5.121933460235596
    5. '=lambda' → logprob: -5.746933460235596
    6. ',' → logprob: -6.496933460235596
    7. 'ues' → logprob: -6.621933460235596
    8. '   ' → logprob: -6.746933460235596
    9. '):
' → logprob: -7.871933460235596
    10. ':' → logprob: -8.996932983398438

Token 157: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6166335344314575
    2. '           ' → logprob: -1.3666335344314575
    3. '       ' → logprob: -1.7416335344314575
    4. 'return' → logprob: -3.866633415222168
    5. '        ' → logprob: -5.616633415222168
    6. ' n' → logprob: -6.741633415222168
    7. ' (' → logprob: -6.991633415222168
    8. '	       ' → logprob: -7.116633415222168
    9. ' self' → logprob: -7.616633415222168
    10. '(' → logprob: -8.366633415222168

Token 158: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0914866253733635
    2. 'return' (adapté à ' return') → logprob: -2.591486692428589
    3. '           ' → logprob: -4.96648645401001
    4. '       ' → logprob: -5.71648645401001
    5. '   ' → logprob: -6.46648645401001
    6. ' n' → logprob: -8.841486930847168
    7. ' matrix' → logprob: -9.091486930847168
    8. ' def' → logprob: -9.716486930847168
    9. ' row' → logprob: -9.841486930847168
    10. ' ' → logprob: -9.966486930847168

Token 159: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6194628477096558
    2. ' list' → logprob: -1.9944628477096558
    3. '[' → logprob: -2.3694629669189453
    4. ' [' → logprob: -2.4944629669189453
    5. '[list' → logprob: -2.4944629669189453
    6. '[[' → logprob: -2.9944629669189453
    7. ' [[' → logprob: -4.744462966918945
    8. '   ' → logprob: -6.119462966918945
    9. '[
' → logprob: -6.369462966918945
    10. '[it' → logprob: -6.369462966918945

Token 160: '(map' (ID: 16946)
  Prédit: '(it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(it' → logprob: -0.23913618922233582
    2. '(map' → logprob: -1.7391362190246582
    3. '(f' → logprob: -3.364136219024658
    4. '(' → logprob: -6.114136219024658
    5. '(
' → logprob: -9.2391357421875
    6. '(iter' → logprob: -9.8641357421875
    7. '(fun' → logprob: -10.9891357421875
    8. '(range' → logprob: -11.8641357421875
    9. '(operator' → logprob: -11.8641357421875
    10. 'it' → logprob: -11.8641357421875

Token 161: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.1875193864107132
    2. '(f' → logprob: -2.3125193119049072
    3. '(' → logprob: -2.8125193119049072
    4. '(operator' → logprob: -4.812519550323486
    5. '(
' → logprob: -6.062519550323486
    6. '(it' → logprob: -7.312519550323486
    7. '(fun' → logprob: -8.937519073486328
    8. ')(' → logprob: -9.187519073486328
    9. '(int' → logprob: -9.312519073486328
    10. '   ' → logprob: -9.437519073486328

Token 162: ' _:' (ID: 133568)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.8799440264701843
    2. ':' → logprob: -1.879944086074829
    3. 'x' → logprob: -2.129944086074829
    4. ' x' → logprob: -2.254944086074829
    5. ' lambda' → logprob: -2.254944086074829
    6. '   ' → logprob: -3.629944086074829
    7. '_:' → logprob: -4.00494384765625
    8. ' :' → logprob: -4.75494384765625
    9. '(lambda' → logprob: -4.75494384765625
    10. ' f' → logprob: -5.25494384765625

Token 163: ' [' (ID: 723)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.05292048305273056
    2. '[' → logprob: -4.177920341491699
    3. '[val' → logprob: -4.177920341491699
    4. 'lambda' → logprob: -4.927920341491699
    5. 'fun' → logprob: -5.552920341491699
    6. ' val' → logprob: -5.677920341491699
    7. 'graph' → logprob: -6.052920341491699
    8. ' [' → logprob: -6.427920341491699
    9. 'operator' → logprob: -7.302920341491699
    10. '[int' → logprob: -8.6779203414917

Token 164: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0006124787032604218
    2. 'graph' → logprob: -7.875612258911133
    3. ' val' → logprob: -9.375612258911133
    4. 'self' → logprob: -10.250612258911133
    5. 'v' → logprob: -11.250612258911133
    6. '   ' → logprob: -11.250612258911133
    7. 'float' → logprob: -11.250612258911133
    8. 'Graph' → logprob: -11.438112258911133
    9. '	val' → logprob: -11.500612258911133
    10. 'inf' → logprob: -11.875612258911133

Token 165: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.3705439865589142
    2. ']' → logprob: -1.2455439567565918
    3. ' for' → logprob: -4.120543956756592
    4. ']*(' → logprob: -5.620543956756592
    5. 'for' → logprob: -6.370543956756592
    6. ' ]' → logprob: -9.12054443359375
    7. 'self' → logprob: -9.87054443359375
    8. 'val' → logprob: -10.62054443359375
    9. '           ' → logprob: -10.74554443359375
    10. ']+' → logprob: -11.24554443359375

Token 166: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011788075789809227
    2. '(self' → logprob: -4.6367878913879395
    3. ' self' → logprob: -6.2617878913879395
    4. ' (' → logprob: -9.386788368225098
    5. '(V' → logprob: -11.511788368225098
    6. 'V' → logprob: -11.761788368225098
    7. '(' → logprob: -11.761788368225098
    8. '   ' → logprob: -13.136788368225098
    9. '(E' → logprob: -13.136788368225098
    10. '
' → logprob: -13.636788368225098

Token 167: '.E' (ID: 9032)
  Prédit: 'V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.045743025839328766
    2. '.V' → logprob: -3.545742988586426
    3. 'E' → logprob: -4.295742988586426
    4. ' V' → logprob: -6.920742988586426
    5. '.E' → logprob: -7.420742988586426
    6. '(V' → logprob: -8.295742988586426
    7. '	V' → logprob: -8.670742988586426
    8. '_V' → logprob: -9.670742988586426
    9. '   ' → logprob: -10.170742988586426
    10. 'self' → logprob: -10.295742988586426

Token 168: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004332083277404308
    2. ' ,' → logprob: -5.629332065582275
    3. '   ' → logprob: -8.504332542419434
    4. '))' → logprob: -8.629332542419434
    5. ')))' → logprob: -9.379332542419434
    6. '       ' → logprob: -9.629332542419434
    7. ',self' → logprob: -10.004332542419434
    8. '           ' → logprob: -10.004332542419434
    9. '),' → logprob: -10.629332542419434
    10. ',E' → logprob: -11.754332542419434

Token 169: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011252242140471935
    2. ' range' → logprob: -4.761252403259277
    3. '[' → logprob: -6.511252403259277
    4. '   ' → logprob: -7.011252403259277
    5. 'it' → logprob: -9.261252403259277
    6. ' ' → logprob: -10.261252403259277
    7. ' [' → logprob: -10.386252403259277
    8. '    ' → logprob: -11.011252403259277
    9. '  ' → logprob: -11.261252403259277
    10. '	range' → logprob: -11.761252403259277

Token 170: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00018244501552544534
    2. '(' → logprob: -9.375182151794434
    3. 'self' → logprob: -9.875182151794434
    4. ' (' → logprob: -10.750182151794434
    5. '	self' → logprob: -12.000182151794434
    6. '   ' → logprob: -12.250182151794434
    7. ' self' → logprob: -12.375182151794434
    8. '(s' → logprob: -13.250182151794434
    9. ' ' → logprob: -13.750182151794434
    10. '           ' → logprob: -13.875182151794434

Token 171: '.E' (ID: 9032)
  Prédit: '.V'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.V' → logprob: -0.37165266275405884
    2. 'self' → logprob: -1.496652603149414
    3. '.E' → logprob: -3.496652603149414
    4. 'V' → logprob: -3.871652603149414
    5. '(self' → logprob: -3.871652603149414
    6. 'E' → logprob: -4.496652603149414
    7. '(V' → logprob: -7.371652603149414
    8. ' self' → logprob: -7.496652603149414
    9. '   ' → logprob: -7.621652603149414
    10. '	V' → logprob: -7.871652603149414

Token 172: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.002713095862418413
    2. '))' → logprob: -6.002713203430176
    3. ')' → logprob: -9.127713203430176
    4. '))))' → logprob: -10.002713203430176
    5. ')))
' → logprob: -10.377713203430176
    6. ' ' → logprob: -10.752713203430176
    7. ')))

' → logprob: -11.752713203430176
    8. ')));' → logprob: -11.752713203430176
    9. '   ' → logprob: -12.377713203430176
    10. '())))' → logprob: -13.002713203430176

Token 173: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 174: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022563889622688293
    2. '
' → logprob: -4.272563934326172
    3. '<|end|>' → logprob: -5.272563934326172
    4. ')' → logprob: -7.272563934326172
    5. '   ' → logprob: -8.022563934326172
    6. 'return' → logprob: -8.147563934326172
    7. '        
' → logprob: -8.147563934326172
    8. 'self' (adapté à ' self') → logprob: -8.397563934326172
    9. '  
' → logprob: -8.397563934326172
    10. '<|end|>' → logprob: -8.647563934326172

Token 175: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.004027226008474827
    2. '.' → logprob: -5.754027366638184
    3. ' .' → logprob: -7.379027366638184
    4. '.E' → logprob: -9.004027366638184
    5. 'G' → logprob: -10.629027366638184
    6. '.V' → logprob: -10.629027366638184
    7. '.Path' → logprob: -11.754027366638184
    8. '.F' → logprob: -12.129027366638184
    9. '.Graph' → logprob: -12.254027366638184
    10. '.g' → logprob: -12.379027366638184

Token 176: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759406089782715
    2. ' =' → logprob: -0.8259406089782715
    3. ',' → logprob: -14.70094108581543
    4. '=

' → logprob: -15.32594108581543
    5. '=create' → logprob: -15.70094108581543
    6. ' =
' → logprob: -15.70094108581543
    7. ' ' → logprob: -16.20094108581543
    8. '＝' → logprob: -16.70094108581543
    9. '=
' → logprob: -16.82594108581543
    10. '=}' → logprob: -18.45094108581543

Token 177: ' list' (ID: 1562)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.006728514563292265
    2. ' build' → logprob: -5.006728649139404
    3. '   ' → logprob: -11.756728172302246
    4. '	build' → logprob: -13.881728172302246
    5. '(build' → logprob: -14.006728172302246
    6. '[' → logprob: -14.131728172302246
    7. '  ' → logprob: -14.506728172302246
    8. ' ' → logprob: -14.506728172302246
    9. 'graph' → logprob: -14.631728172302246
    10. 'list' → logprob: -15.006728172302246

Token 178: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.013372682966291904
    2. '(f' → logprob: -5.263372898101807
    3. '(it' → logprob: -5.388372898101807
    4. '(' → logprob: -6.138372898101807
    5. '(build' → logprob: -6.638372898101807
    6. '(filter' → logprob: -11.013372421264648
    7. '(fun' → logprob: -11.013372421264648
    8. '(
' → logprob: -12.138372421264648
    9. '(range' → logprob: -12.263372421264648
    10. '(m' → logprob: -12.388372421264648

Token 179: '(list' (ID: 13116)
  Prédit: '(build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(build' → logprob: -0.414310485124588
    2. '(lambda' → logprob: -1.1643104553222656
    3. '(' → logprob: -3.6643104553222656
    4. ' (' → logprob: -7.164310455322266
    5. '(f' → logprob: -7.664310455322266
    6. '(
' → logprob: -9.039310455322266
    7. 'build' → logprob: -11.289310455322266
    8. '(fun' → logprob: -11.414310455322266
    9. '((' → logprob: -11.789310455322266
    10. '   ' → logprob: -11.914310455322266

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30728355050086975
    2. '(range' → logprob: -2.182283639907837
    3. '(map' → logprob: -2.682283639907837
    4. '(build' → logprob: -3.682283639907837
    5. '))' → logprob: -3.807283639907837
    6. ',map' → logprob: -4.057283401489258
    7. '(lambda' → logprob: -5.307283401489258
    8. '(' → logprob: -5.932283401489258
    9. '   ' → logprob: -6.682283401489258
    10. ')' → logprob: -6.807283401489258

Token 181: ' build' (ID: 3024)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.36438223719596863
    2. 'build' → logprob: -1.364382266998291
    3. 'map' → logprob: -3.739382266998291
    4. 'it' → logprob: -3.989382266998291
    5. ' zip' → logprob: -5.739382266998291
    6. ' build' → logprob: -6.364382266998291
    7. '   ' → logprob: -6.989382266998291
    8. ' map' → logprob: -7.989382266998291
    9. ' itertools' → logprob: -7.989382266998291
    10. 'fun' → logprob: -8.614381790161133

Token 182: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.014474334195256233
    2. '(lambda' → logprob: -4.389474391937256
    3. '(' → logprob: -7.139474391937256
    4. 'matrix' → logprob: -7.639474391937256
    5. '(_' → logprob: -8.764473915100098
    6. '_' → logprob: -8.764473915100098
    7. '_graph' → logprob: -9.389473915100098
    8. ' (' → logprob: -10.264473915100098
    9. '_lambda' → logprob: -10.264473915100098
    10. '(val' → logprob: -10.389473915100098

Token 183: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22221216559410095
    2. '(graph' → logprob: -1.9722121953964233
    3. '(self' → logprob: -2.847212076187134
    4. '(float' → logprob: -7.472212314605713
    5. '(operator' → logprob: -7.972212314605713
    6. ' (' → logprob: -8.097211837768555
    7. 'graph' → logprob: -8.097211837768555
    8. '((' → logprob: -8.597211837768555
    9. '(Graph' → logprob: -9.222211837768555
    10. ')(' → logprob: -9.597211837768555

Token 184: '.IN' (ID: 20931)
  Prédit: '.IN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.IN' → logprob: -0.008224471472203732
    2. 'INF' → logprob: -5.1332244873046875
    3. '(IN' → logprob: -7.6332244873046875
    4. '.' → logprob: -7.6332244873046875
    5. '.G' → logprob: -7.8832244873046875
    6. ' .' → logprob: -8.883224487304688
    7. '.E' → logprob: -9.258224487304688
    8. ')' → logprob: -9.508224487304688
    9. '_INF' → logprob: -9.508224487304688
    10. '(.' → logprob: -9.508224487304688

Token 185: 'F' (ID: 37)
  Prédit: 'F'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'F' → logprob: -2.1008713702030946e-06
    2. 'f' → logprob: -14.625001907348633
    3. '
' → logprob: -14.750001907348633
    4. ' F' → logprob: -15.000001907348633
    5. 'FF' → logprob: -15.250001907348633
    6. '   ' → logprob: -15.750001907348633
    7. 'FINITY' → logprob: -16.500001907348633
    8. '[' → logprob: -16.625001907348633
    9. 'Fin' → logprob: -17.125001907348633
    10. 'FINITE' → logprob: -17.312501907348633

Token 186: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.024860812351107597
    2. ')' → logprob: -4.024860858917236
    3. '())))' → logprob: -5.149860858917236
    4. ' ' → logprob: -7.774860858917236
    5. '()' → logprob: -8.649860382080078
    6. '))' → logprob: -9.149860382080078
    7. ')))
' → logprob: -10.024860382080078
    8. '))))' → logprob: -10.399860382080078
    9. '')))' → logprob: -10.649860382080078
    10. '()))' → logprob: -10.774860382080078

Token 187: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.46053028106689453
    2. '<|end|>' → logprob: -1.0855302810668945
    3. '       ' → logprob: -3.5855302810668945
    4. '<|end|>' → logprob: -6.3355302810668945
    5. '
' → logprob: -7.5855302810668945
    6. ',' → logprob: -7.7105302810668945
    7. '),' → logprob: -9.210530281066895
    8. '[' → logprob: -9.335530281066895
    9. ' )' → logprob: -9.335530281066895
    10. '()' → logprob: -9.460530281066895

Token 188: ' self' (ID: 1051)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15921686589717865
    2. '[' → logprob: -3.28421688079834
    3. '       ' → logprob: -3.40921688079834
    4. '   ' → logprob: -3.65921688079834
    5. '<|end|>' → logprob: -3.78421688079834
    6. '
' → logprob: -4.28421688079834
    7. ' ' → logprob: -5.15921688079834
    8. ' )' → logprob: -6.03421688079834
    9. '  ' → logprob: -7.03421688079834
    10. '    ' → logprob: -7.53421688079834

Token 189: '.Path' (ID: 31237)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0023778676986694
    2. '.G' → logprob: -1.0023778676986694
    3. '.Path' → logprob: -1.3773778676986694
    4. '.V' → logprob: -5.502377986907959
    5. '.E' → logprob: -6.002377986907959
    6. ' .' → logprob: -6.377377986907959
    7. 'Path' → logprob: -6.627377986907959
    8. '.
' → logprob: -7.002377986907959
    9. '.P' → logprob: -7.502377986907959
    10. '..' → logprob: -7.877377986907959

Token 190: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868999183177948
    2. '=' → logprob: -1.1368999481201172
    3. '=list' → logprob: -10.761899948120117
    4. ' ' → logprob: -12.511899948120117
    5. '=[]' → logprob: -13.136899948120117
    6. '=lambda' → logprob: -14.761899948120117
    7. '=
' → logprob: -15.386899948120117
    8. ' =
' → logprob: -15.386899948120117
    9. '[' → logprob: -15.511899948120117
    10. ',' → logprob: -15.886899948120117

Token 191: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.029932953417301178
    2. ' list' → logprob: -3.529932975769043
    3. '[[' → logprob: -9.154932975769043
    4. 'build' → logprob: -10.779932975769043
    5. '[]' → logprob: -11.154932975769043
    6. '[' → logprob: -11.279932975769043
    7. ' [[' → logprob: -11.529932975769043
    8. '[list' → logprob: -11.904932975769043
    9. ' ' → logprob: -12.404932975769043
    10. ' [' → logprob: -12.779932975769043

Token 192: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0001980570232262835
    2. '(' → logprob: -9.125198364257812
    3. '(build' → logprob: -9.500198364257812
    4. 'map' → logprob: -11.625198364257812
    5. '(list' → logprob: -12.750198364257812
    6. '(range' → logprob: -13.375198364257812
    7. '(
' → logprob: -15.625198364257812
    8. 'build' → logprob: -15.875198364257812
    9. ' (' → logprob: -15.875198364257812
    10. '	map' → logprob: -16.000198364257812

Token 193: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.011166313663125038
    2. 'list' → logprob: -5.261166095733643
    3. '(lambda' → logprob: -5.261166095733643
    4. '(' → logprob: -7.386166095733643
    5. ' list' → logprob: -10.3861665725708
    6. '(operator' → logprob: -10.5111665725708
    7. ' (' → logprob: -10.8861665725708
    8. '(
' → logprob: -11.5111665725708
    9. 'lambda' → logprob: -12.6361665725708
    10. '(int' → logprob: -13.0111665725708

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006456955336034298
    2. '(build' → logprob: -5.2564568519592285
    3. '(' → logprob: -7.0064568519592285
    4. '(lambda' → logprob: -9.006457328796387
    5. ' ,' → logprob: -9.131457328796387
    6. ' (' → logprob: -9.506457328796387
    7. '(list' → logprob: -12.881457328796387
    8. ',(' → logprob: -13.006457328796387
    9. '(operator' → logprob: -13.256457328796387
    10. '(Build' → logprob: -13.631457328796387

Token 195: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.07017528265714645
    2. ' build' → logprob: -2.6951751708984375
    3. '(build' → logprob: -9.445175170898438
    4. 'lambda' → logprob: -9.945175170898438
    5. '   ' → logprob: -10.445175170898438
    6. '  ' → logprob: -11.070175170898438
    7. ' ' → logprob: -11.195175170898438
    8. 'operator' → logprob: -11.320175170898438
    9. ' lambda' → logprob: -11.695175170898438
    10. 'fun' → logprob: -12.320175170898438

Token 196: '_matrix' (ID: 23431)
  Prédit: '_matrix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_matrix' → logprob: -0.03739804029464722
    2. '(lambda' → logprob: -3.537398099899292
    3. 'matrix' → logprob: -5.662397861480713
    4. '(build' → logprob: -6.412397861480713
    5. 'map' → logprob: -6.537397861480713
    6. '(map' → logprob: -7.662397861480713
    7. 'lambda' → logprob: -8.787398338317871
    8. '_map' → logprob: -9.287398338317871
    9. '_lambda' → logprob: -9.412398338317871
    10. '(' → logprob: -9.412398338317871

Token 197: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.293425589799881
    2. '(lambda' → logprob: -1.7934255599975586
    3. '(-' → logprob: -3.0434255599975586
    4. '(self' → logprob: -3.2934255599975586
    5. '(int' → logprob: -6.293425559997559
    6. '(operator' → logprob: -7.293425559997559
    7. '(float' → logprob: -8.043425559997559
    8. '((' → logprob: -9.668425559997559
    9. '0' → logprob: -9.793425559997559
    10. '(None' → logprob: -10.168425559997559

Token 198: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2559916377067566
    2. 'self' → logprob: -2.1309916973114014
    3. '-' → logprob: -2.3809916973114014
    4. '(' → logprob: -5.380991458892822
    5. 'None' → logprob: -5.880991458892822
    6. '(-' → logprob: -6.505991458892822
    7. '(self' → logprob: -6.630991458892822
    8. 'lambda' → logprob: -6.880991458892822
    9. 'float' → logprob: -7.005991458892822
    10. '1' → logprob: -7.255991458892822

Token 199: ')))

' (ID: 46526)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.00010103991371579468
    2. ')' → logprob: -10.000101089477539
    3. '))' → logprob: -10.125101089477539
    4. ')))
' → logprob: -12.000101089477539
    5. ')));' → logprob: -12.500101089477539
    6. '))))' → logprob: -13.125101089477539
    7. '')))' → logprob: -13.375101089477539
    8. '())))' → logprob: -13.875101089477539
    9. '   ' → logprob: -15.000101089477539
    10. ')))

' → logprob: -15.750101089477539

Token 200: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 201: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2497831583023071
    2. '<|end|>' → logprob: -1.2497831583023071
    3. ')' → logprob: -1.3747831583023071
    4. '       ' → logprob: -2.6247830390930176
    5. '   ' → logprob: -2.7497830390930176
    6. ',' → logprob: -4.374783039093018
    7. '  ' → logprob: -5.749783039093018
    8. ':' → logprob: -5.874783039093018
    9. '    ' → logprob: -5.999783039093018
    10. '#' (adapté à ' #') → logprob: -6.249783039093018

Token 202: ' construction' (ID: 9770)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1025078147649765
    2. 'for' → logprob: -2.3525078296661377
    3. '       ' → logprob: -6.102507591247559
    4. '   ' → logprob: -11.227507591247559
    5. '	for' → logprob: -12.477507591247559
    6. 'data' → logprob: -12.602507591247559
    7. ' data' → logprob: -12.602507591247559
    8. ' ' → logprob: -12.602507591247559
    9. '#' → logprob: -12.727507591247559
    10. '<|end|>' → logprob: -12.852507591247559

Token 203: ' via' (ID: 4493)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 204: ' un' (ID: 537)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.44011667370796204
    2. ' range' → logprob: -1.9401166439056396
    3. 'for' → logprob: -2.3151166439056396
    4. ' sys' → logprob: -2.9401166439056396
    5. 'range' → logprob: -3.4401166439056396
    6. ' itertools' → logprob: -4.690116882324219
    7. ' raw' → logprob: -5.190116882324219
    8. 'sys' → logprob: -5.315116882324219
    9. ' lambda' → logprob: -5.690116882324219
    10. ' self' → logprob: -6.940116882324219

Token 205: ' génér' (ID: 18939)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10293270647525787
    2. ' for' → logprob: -2.3529326915740967
    3. ' range' → logprob: -6.852932929992676
    4. 'range' → logprob: -6.977932929992676
    5. 'put' → logprob: -7.602932929992676
    6. 'f' → logprob: -9.977932929992676
    7. 't' → logprob: -10.227932929992676
    8. 'fo' → logprob: -11.102932929992676
    9. '       ' → logprob: -11.102932929992676
    10. 'try' → logprob: -11.227932929992676

Token 206: 'ateur' (ID: 12477)
  Prédit: 'ator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ator' → logprob: -0.8080705404281616
    2. 'er' → logprob: -0.9330705404281616
    3. 'ateur' → logprob: -2.308070659637451
    4. 'ate' → logprob: -3.058070659637451
    5. 'érateur' → logprob: -4.308070659637451
    6. 'e' → logprob: -8.558070182800293
    7. 'r' → logprob: -9.058070182800293
    8. 'al' → logprob: -9.183070182800293
    9. 'eur' → logprob: -9.308070182800293
    10. 'at' → logprob: -9.558070182800293

Token 207: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5370049476623535
    2. ' for' → logprob: -1.0370049476623535
    3. 'for' → logprob: -2.9120049476623535
    4. ',' → logprob: -6.2870049476623535
    5. '()' → logprob: -6.7870049476623535
    6. '(' → logprob: -7.0370049476623535
    7. '   ' → logprob: -7.6620049476623535
    8. '(
' → logprob: -7.9120049476623535
    9. '<|end|>' → logprob: -8.037004470825195
    10. ' (' → logprob: -8.537004470825195

Token 208: ' tuple' (ID: 31311)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2208607196807861
    2. ' itertools' → logprob: -1.7208607196807861
    3. ' for' → logprob: -2.345860719680786
    4. '(
' → logprob: -2.470860719680786
    5. 'for' → logprob: -2.595860719680786
    6. '(lambda' → logprob: -2.845860719680786
    7. '(' → logprob: -3.095860719680786
    8. 'range' → logprob: -4.095860481262207
    9. 'map' → logprob: -4.220860481262207
    10. 'lambda' → logprob: -4.345860481262207

Token 209: ' unpack' (ID: 61704)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -1.0462143421173096
    2. 'for' → logprob: -1.1712143421173096
    3. ' for' → logprob: -1.9212143421173096
    4. '(' → logprob: -2.6712143421173096
    5. 's' → logprob: -3.2962143421173096
    6. '       ' → logprob: -3.9212143421173096
    7. '(range' → logprob: -4.4212141036987305
    8. '()' → logprob: -4.5462141036987305
    9. 'data' → logprob: -5.5462141036987305
    10. ',' → logprob: -5.5462141036987305

Token 210: 'ing' (ID: 289)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.8404401540756226
    2. 'for' → logprob: -1.8404401540756226
    3. ' =' → logprob: -1.9654401540756226
    4. 'ing' → logprob: -1.9654401540756226
    5. '       ' → logprob: -2.090440273284912
    6. ' for' → logprob: -2.215440273284912
    7. '=' → logprob: -2.965440273284912
    8. '()' → logprob: -3.715440273284912
    9. '   ' → logprob: -3.965440273284912
    10. ',' → logprob: -3.965440273284912

Token 211: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10059341788291931
    2. ',' → logprob: -3.350593328475952
    3. ' for' → logprob: -3.850593328475952
    4. ':' → logprob: -4.600593566894531
    5. 'for' → logprob: -4.725593566894531
    6. '
' → logprob: -5.100593566894531
    7. '()' → logprob: -5.350593566894531
    8. '(' → logprob: -6.350593566894531
    9. ',
' → logprob: -6.600593566894531
    10. '<|end|>' → logprob: -6.600593566894531

Token 212: ' items' (ID: 4732)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.4744011163711548
    2. ' next' → logprob: -2.0994009971618652
    3. 'for' → logprob: -2.0994009971618652
    4. ' operator' → logprob: -2.4744009971618652
    5. ' map' → logprob: -2.5994009971618652
    6. 'map' → logprob: -2.7244009971618652
    7. 'enumer' → logprob: -2.9744009971618652
    8. 'next' → logprob: -3.0994009971618652
    9. 'zip' → logprob: -3.2244009971618652
    10. ' itertools' → logprob: -3.3494009971618652

Token 213: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10528825968503952
    2. ' for' → logprob: -3.10528826713562
    3. '()' → logprob: -3.48028826713562
    4. 'for' → logprob: -4.480288028717041
    5. ',' → logprob: -5.105288028717041
    6. '()
' → logprob: -5.855288028717041
    7. '
' → logprob: -6.980288028717041
    8. '   ' → logprob: -7.355288028717041
    9. ':' → logprob: -7.480288028717041
    10. '        
' → logprob: -7.980288028717041

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013884092681109905
    2. ' for' → logprob: -4.7638840675354
    3. 'for' → logprob: -6.3888840675354
    4. ',' → logprob: -6.6388840675354
    5. '<|end|>' → logprob: -7.3888840675354
    6. '   ' → logprob: -7.5138840675354
    7. ':' → logprob: -8.263884544372559
    8. '
' → logprob: -9.013884544372559
    9. '        
' → logprob: -9.263884544372559
    10. '()' → logprob: -9.263884544372559

Token 215: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6476409435272217
    2. '       ' → logprob: -1.3976409435272217
    3. ' for' → logprob: -1.5226409435272217
    4. '(i' → logprob: -6.397641181945801
    5. '   ' → logprob: -6.647641181945801
    6. ' (' → logprob: -6.897641181945801
    7. '(' → logprob: -7.147641181945801
    8. '
' → logprob: -7.272641181945801
    9. 'data' → logprob: -7.272641181945801
    10. '(range' → logprob: -7.397641181945801

Token 216: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.335403710603714
    2. ' _' → logprob: -1.3354036808013916
    3. ' i' → logprob: -4.210403919219971
    4. 'i' → logprob: -5.585403919219971
    5. '_i' → logprob: -6.210403919219971
    6. '_,' → logprob: -7.460403919219971
    7. '_edge' → logprob: -8.460403442382812
    8. ' ' → logprob: -9.210403442382812
    9. '   ' → logprob: -9.585403442382812
    10. ' edge' → logprob: -9.960403442382812

Token 217: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02494092844426632
    2. 'in' → logprob: -3.7749409675598145
    3. ',' → logprob: -7.1499409675598145
    4. ' ,' → logprob: -7.6499409675598145
    5. ' ' → logprob: -8.149940490722656
    6. 'range' → logprob: -10.149940490722656
    7. '_' → logprob: -10.274940490722656
    8. ' _' → logprob: -10.774940490722656
    9. 'import' → logprob: -11.274940490722656
    10. '  ' → logprob: -11.899940490722656

Token 218: ' map' (ID: 4014)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25199276208877563
    2. ' range' → logprob: -1.5019927024841309
    3. '(range' → logprob: -11.251993179321289
    4. 'rang' → logprob: -11.376993179321289
    5. ' ' → logprob: -11.751993179321289
    6. '	range' → logprob: -12.251993179321289
    7. ' xrange' → logprob: -12.876993179321289
    8. 'iter' → logprob: -13.001993179321289
    9. '  ' → logprob: -13.189493179321289
    10. 'it' → logprob: -13.251993179321289

Token 219: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.27259740233421326
    2. '(int' → logprob: -1.5225974321365356
    3. '(operator' → logprob: -4.272597312927246
    4. '(' → logprob: -5.397597312927246
    5. '(None' → logprob: -6.522597312927246
    6. '(tuple' → logprob: -8.147597312927246
    7. '(range' → logprob: -9.397597312927246
    8. '(eval' → logprob: -9.897597312927246
    9. '(
' → logprob: -10.647597312927246
    10. '(str' → logprob: -11.147597312927246

Token 220: ' x' (ID: 1215)
  Prédit: '_:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_:' → logprob: -0.338243693113327
    2. 'lambda' → logprob: -1.9632437229156494
    3. 'int' → logprob: -2.8382437229156494
    4. 'tuple' → logprob: -2.9632437229156494
    5. 'range' → logprob: -4.83824348449707
    6. '__:' → logprob: -5.08824348449707
    7. '   ' → logprob: -5.21324348449707
    8. ':' → logprob: -5.33824348449707
    9. ' _:' → logprob: -5.58824348449707
    10. '_' → logprob: -6.21324348449707

Token 221: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023853745311498642
    2. ' :' → logprob: -4.023853778839111
    3. 'lambda' → logprob: -6.398853778839111
    4. '   ' → logprob: -6.648853778839111
    5. ':int' → logprob: -6.648853778839111
    6. ',' → logprob: -7.898853778839111
    7. 'int' → logprob: -8.273853302001953
    8. ':
' → logprob: -8.648853302001953
    9. ' lambda' → logprob: -8.773853302001953
    10. '(lambda' → logprob: -9.398853302001953

Token 222: ' x' (ID: 1215)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.5017691254615784
    2. 'range' → logprob: -1.6267690658569336
    3. ' raw' → logprob: -2.7517690658569336
    4. '_' → logprob: -3.5017690658569336
    5. 'None' → logprob: -3.5017690658569336
    6. 'next' → logprob: -3.6267690658569336
    7. ' range' → logprob: -4.001769065856934
    8. ' next' → logprob: -5.251769065856934
    9. ' None' → logprob: -5.376769065856934
    10. 'x' → logprob: -5.626769065856934

Token 223: ',' (ID: 11)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3641488254070282
    2. ':' → logprob: -1.9891488552093506
    3. ' range' → logprob: -2.4891488552093506
    4. ':
' → logprob: -3.6141488552093506
    5. '(range' → logprob: -3.9891488552093506
    6. '   ' → logprob: -4.4891486167907715
    7. ' in' → logprob: -4.9891486167907715
    8. ',' → logprob: -5.3641486167907715
    9. 'int' → logprob: -6.1141486167907715
    10. '
' → logprob: -6.3641486167907715

Token 224: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02336648665368557
    2. ' range' → logprob: -3.7733664512634277
    3. '   ' → logprob: -9.773366928100586
    4. ' ' → logprob: -11.023366928100586
    5. '(range' → logprob: -11.398366928100586
    6. '	range' → logprob: -11.648366928100586
    7. '  ' → logprob: -11.898366928100586
    8. '    ' → logprob: -12.023366928100586
    9. 'lambda' → logprob: -12.648366928100586
    10. ' xrange' → logprob: -13.023366928100586

Token 225: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.006866686977446079
    2. '(' → logprob: -5.006866455078125
    3. ' (' → logprob: -9.756866455078125
    4. 'self' → logprob: -10.006866455078125
    5. '(s' → logprob: -10.881866455078125
    6. ' self' → logprob: -11.381866455078125
    7. '(
' → logprob: -12.756866455078125
    8. '((' → logprob: -12.881866455078125
    9. '(int' → logprob: -13.256866455078125
    10. '   ' → logprob: -13.256866455078125

Token 226: '.V' (ID: 5970)
  Prédit: '.V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.V' → logprob: -0.038672350347042084
    2. '.E' → logprob: -3.28867244720459
    3. 'self' → logprob: -8.28867244720459
    4. 'V' → logprob: -8.91367244720459
    5. '(V' → logprob: -9.53867244720459
    6. 'E' → logprob: -10.28867244720459
    7. '.' → logprob: -11.03867244720459
    8. ' .' → logprob: -11.16367244720459
    9. '   ' → logprob: -11.16367244720459
    10. '(' → logprob: -11.16367244720459

Token 227: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.23377926647663116
    2. ')):
' → logprob: -1.6087793111801147
    3. '):' → logprob: -5.233779430389404
    4. '))' → logprob: -6.358779430389404
    5. '):
' → logprob: -7.358779430389404
    6. ')):
' → logprob: -8.358778953552246
    7. '       ' → logprob: -8.733778953552246
    8. ')' → logprob: -9.483778953552246
    9. '   ' → logprob: -10.108778953552246
    10. ':' → logprob: -10.483778953552246

Token 228: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5804321765899658
    2. ',' → logprob: -2.080432176589966
    3. '           ' → logprob: -2.205432176589966
    4. '():' → logprob: -2.330432176589966
    5. ':' → logprob: -3.455432176589966
    6. '():
' → logprob: -4.205431938171387
    7. '   ' → logprob: -4.330431938171387
    8. '(' → logprob: -5.205431938171387
    9. ' ():' → logprob: -5.205431938171387
    10. '()' → logprob: -5.455431938171387

Token 229: ' data' (ID: 1238)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3993515074253082
    2. 'a' → logprob: -1.5243514776229858
    3. 'data' (adapté à ' data') → logprob: -2.8993515968322754
    4. ' u' → logprob: -4.149351596832275
    5. '   ' → logprob: -5.149351596832275
    6. 'x' → logprob: -5.524351596832275
    7. 's' → logprob: -5.649351596832275
    8. 'line' → logprob: -5.649351596832275
    9. 'l' → logprob: -5.774351596832275
    10. 'e' → logprob: -5.774351596832275

Token 230: 'Raw' (ID: 21586)
  Prédit: 'Raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Raw' → logprob: -0.06122118607163429
    2. '_raw' → logprob: -3.686221122741699
    3. ' =' → logprob: -4.061221122741699
    4. '=' → logprob: -4.311221122741699
    5. 'raw' → logprob: -6.561221122741699
    6. 'Edge' → logprob: -7.061221122741699
    7. 'line' → logprob: -8.1862211227417
    8. 'edge' → logprob: -8.5612211227417
    9. 'Edges' → logprob: -8.5612211227417
    10. '_edge' → logprob: -8.8112211227417

Token 231: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20150971412658691
    2. '=' → logprob: -1.701509714126587
    3. '           ' → logprob: -10.576509475708008
    4. '   ' → logprob: -10.826509475708008
    5. '       ' → logprob: -11.201509475708008
    6. '    ' → logprob: -11.326509475708008
    7. '        ' → logprob: -12.201509475708008
    8. '=line' → logprob: -12.201509475708008
    9. ',' → logprob: -12.451509475708008
    10. 'data' → logprob: -13.076509475708008

Token 232: ' raw' (ID: 11428)
  Prédit: ' raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' raw' → logprob: -0.42870569229125977
    2. 'raw' → logprob: -1.0537056922912598
    3. '	raw' → logprob: -13.053705215454102
    4. '           ' → logprob: -14.303705215454102
    5. '(raw' → logprob: -14.553705215454102
    6. ' ' → logprob: -14.678705215454102
    7. '   ' → logprob: -15.053705215454102
    8. ' ' → logprob: -15.428705215454102
    9. '    ' → logprob: -15.678705215454102
    10. '_raw' → logprob: -15.678705215454102

Token 233: '_input' (ID: 12507)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09909624606370926
    2. '().' → logprob: -3.4740962982177734
    3. '_input' → logprob: -3.4740962982177734
    4. '()
' → logprob: -3.5990962982177734
    5. '())' → logprob: -6.724096298217773
    6. ' =' → logprob: -6.974096298217773
    7. '           ' → logprob: -8.099096298217773
    8. '=' → logprob: -8.099096298217773
    9. '       ' → logprob: -8.224096298217773
    10. 'Input' → logprob: -8.599096298217773

Token 234: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.693600594997406
    2. '()
' → logprob: -0.693600594997406
    3. '().' → logprob: -7.943600654602051
    4. '()
' → logprob: -10.06860065460205
    5. '           ' → logprob: -10.81860065460205
    6. '()

' → logprob: -11.31860065460205
    7. '       ' → logprob: -11.56860065460205
    8. ' ()' → logprob: -12.69360065460205
    9. '();' → logprob: -12.94360065460205
    10. ' ()
' → logprob: -13.06860065460205

Token 235: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003946367651224136
    2. '       ' → logprob: -6.003946304321289
    3. '   ' → logprob: -8.378946304321289
    4. 'tokens' → logprob: -8.503946304321289
    5. '<|end|>' → logprob: -8.503946304321289
    6. ',' → logprob: -8.878946304321289
    7. '            
' → logprob: -9.253946304321289
    8. '	       ' → logprob: -9.503946304321289
    9. ' tokens' → logprob: -9.628946304321289
    10. '	   ' → logprob: -9.628946304321289

Token 236: ' i' (ID: 575)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.49748140573501587
    2. '           ' → logprob: -1.622481346130371
    3. ' u' → logprob: -2.622481346130371
    4. 'w' → logprob: -2.997481346130371
    5. 'a' → logprob: -3.747481346130371
    6. ' edges' → logprob: -4.247481346130371
    7. ' w' → logprob: -4.497481346130371
    8. 'edges' → logprob: -5.997481346130371
    9. 'raw' → logprob: -6.122481346130371
    10. 'e' → logprob: -6.247481346130371

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014170442707836628
    2. 'n' → logprob: -4.6391706466674805
    3. ' ,' → logprob: -5.8891706466674805
    4. ',j' → logprob: -7.2641706466674805
    5. 's' → logprob: -8.26417064666748
    6. 'nd' → logprob: -8.76417064666748
    7. 'nt' → logprob: -8.88917064666748
    8. ',n' → logprob: -9.01417064666748
    9. 'd' → logprob: -9.76417064666748
    10. ' ' → logprob: -10.63917064666748

Token 238: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2025136798620224
    2. ' j' → logprob: -1.7025136947631836
    3. 'w' → logprob: -7.702513694763184
    4. ' w' → logprob: -8.577513694763184
    5. 'v' → logprob: -9.702513694763184
    6. '   ' → logprob: -9.702513694763184
    7. ' ' → logprob: -9.827513694763184
    8. 's' → logprob: -10.327513694763184
    9. '    ' → logprob: -10.702513694763184
    10. ',' → logprob: -10.702513694763184

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08035987615585327
    2. '=' → logprob: -2.580359935760498
    3. ' =' → logprob: -6.580359935760498
    4. ' ,' → logprob: -9.58035945892334
    5. '<|end|>' → logprob: -12.95535945892334
    6. ',i' → logprob: -13.58035945892334
    7. ',j' → logprob: -13.83035945892334
    8. ',k' → logprob: -13.95535945892334
    9. ',...' → logprob: -14.20535945892334
    10. ' ' → logprob: -14.20535945892334

Token 240: ' k' (ID: 372)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.4539896249771118
    2. ' w' → logprob: -1.0789896249771118
    3. 'weight' → logprob: -4.703989505767822
    4. 'k' → logprob: -5.203989505767822
    5. ' k' → logprob: -5.328989505767822
    6. ' weight' → logprob: -5.578989505767822
    7. 'cost' → logprob: -7.953989505767822
    8. ' cost' → logprob: -8.07898998260498
    9. ',' → logprob: -8.32898998260498
    10. '   ' → logprob: -9.07898998260498

Token 241: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932079792022705
    2. ' =' → logprob: -0.6932079792022705
    3. ',' → logprob: -9.818207740783691
    4. '           ' → logprob: -13.568207740783691
    5. ' ' → logprob: -13.818207740783691
    6. '    ' → logprob: -14.193207740783691
    7. '=data' → logprob: -14.193207740783691
    8. '            ' → logprob: -14.693207740783691
    9. '   ' → logprob: -14.818207740783691
    10. '        ' → logprob: -15.318207740783691

Token 242: ' tuple' (ID: 31311)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4267602264881134
    2. 'map' → logprob: -1.176760196685791
    3. ' tuple' → logprob: -3.551760196685791
    4. ' list' → logprob: -5.676760196685791
    5. 'tuple' → logprob: -5.676760196685791
    6. 'list' → logprob: -5.676760196685791
    7. ' data' → logprob: -9.30176067352295
    8. 'data' → logprob: -10.17676067352295
    9. ' raw' → logprob: -11.42676067352295
    10. '(map' → logprob: -12.30176067352295

Token 243: '(map' (ID: 16946)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.002195218112319708
    2. '(map' → logprob: -6.752195358276367
    3. 'data' → logprob: -7.627195358276367
    4. 'raw' → logprob: -7.752195358276367
    5. ' map' → logprob: -10.002195358276367
    6. 'int' → logprob: -10.377195358276367
    7. 'list' → logprob: -10.627195358276367
    8. '(raw' → logprob: -12.252195358276367
    9. '(data' → logprob: -14.002195358276367
    10. '(' → logprob: -15.127195358276367

Token 244: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.002873346209526062
    2. '(' → logprob: -6.127873420715332
    3. 'int' → logprob: -7.377873420715332
    4. '(lambda' → logprob: -10.627873420715332
    5. '(
' → logprob: -11.002873420715332
    6. '(operator' → logprob: -11.127873420715332
    7. '<int' → logprob: -13.127873420715332
    8. 'operator' → logprob: -13.502873420715332
    9. '[int' → logprob: -13.752873420715332
    10. ' int' → logprob: -14.627873420715332

Token 245: ',' (ID: 11)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.006771141663193703
    2. 'data' → logprob: -5.756771087646484
    3. ',data' → logprob: -6.506771087646484
    4. ',' → logprob: -7.006771087646484
    5. '(' → logprob: -7.131771087646484
    6. '(raw' → logprob: -8.131771087646484
    7. ' data' → logprob: -9.881771087646484
    8. '(
' → logprob: -11.381771087646484
    9. 'raw' → logprob: -11.631771087646484
    10. ' (' → logprob: -11.631771087646484

Token 246: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.17975299060344696
    2. ' data' → logprob: -1.8047529458999634
    3. '(data' → logprob: -12.804753303527832
    4. ' ' → logprob: -13.304753303527832
    5. ' raw' → logprob: -13.929753303527832
    6. 'raw' → logprob: -13.929753303527832
    7. '           ' → logprob: -14.804753303527832
    8. '	data' → logprob: -14.929753303527832
    9. '   ' → logprob: -15.179753303527832
    10. ')data' → logprob: -15.554753303527832

Token 247: 'Raw' (ID: 21586)
  Prédit: 'Raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Raw' → logprob: -0.018782947212457657
    2. '_raw' → logprob: -4.268783092498779
    3. '().' → logprob: -6.143783092498779
    4. '   ' → logprob: -7.893783092498779
    5. '_.' → logprob: -8.143782615661621
    6. '_' → logprob: -8.518782615661621
    7. ')' → logprob: -8.643782615661621
    8. '()' → logprob: -8.893782615661621
    9. '(' → logprob: -9.268782615661621
    10. ' Raw' → logprob: -9.393782615661621

Token 248: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.03812112659215927
    2. '().' → logprob: -3.288121223449707
    3. '.' → logprob: -10.163121223449707
    4. '.split' → logprob: -10.788121223449707
    5. ' .' → logprob: -11.538121223449707
    6. 'strip' → logprob: -12.413121223449707
    7. '.trim' → logprob: -13.663121223449707
    8. '                       ' → logprob: -13.788121223449707
    9. '.rstrip' → logprob: -13.788121223449707
    10. '()' → logprob: -14.288121223449707

Token 249: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.9153885558771435e-06
    2. '()' → logprob: -12.125005722045898
    3. '.split' → logprob: -15.375005722045898
    4. ' ().' → logprob: -16.1250057220459
    5. ' .' → logprob: -18.1250057220459
    6. '(' → logprob: -18.2500057220459
    7. '()
' → logprob: -18.5000057220459
    8. '.' → logprob: -19.1250057220459
    9. '('').' → logprob: -19.3750057220459
    10. '().'' → logprob: -19.3750057220459

Token 250: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.248469718324486e-05
    2. ' split' → logprob: -10.750022888183594
    3. '.split' → logprob: -14.125022888183594
    4. '(split' → logprob: -16.000022888183594
    5. ')' → logprob: -16.875022888183594
    6. 'spl' → logprob: -17.625022888183594
    7. '```' → logprob: -18.875022888183594
    8. 'strip' → logprob: -19.125022888183594
    9. '   ' → logprob: -19.250022888183594
    10. ' ' → logprob: -19.250022888183594

Token 251: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.02989210933446884
    2. '))' → logprob: -4.0298919677734375
    3. '()' → logprob: -4.6548919677734375
    4. '()))
' → logprob: -7.0298919677734375
    5. '(' → logprob: -7.1548919677734375
    6. '())' → logprob: -7.7798919677734375
    7. '()));' → logprob: -10.029891967773438
    8. ')' → logprob: -12.154891967773438
    9. '()))

' → logprob: -12.279891967773438
    10. '()))
' → logprob: -12.654891967773438

Token 252: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014916124753654003
    2. '       ' → logprob: -4.764915943145752
    3. '            
' → logprob: -5.764915943145752
    4. '<|end|>' → logprob: -6.889915943145752
    5. '               ' → logprob: -7.514915943145752
    6. ')' → logprob: -8.26491641998291
    7. ',' → logprob: -8.38991641998291
    8. '   ' → logprob: -9.01491641998291
    9. '    
' → logprob: -9.01491641998291
    10. '        
' → logprob: -9.13991641998291

Token 253: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003128640353679657
    2. 'self' → logprob: -6.253128528594971
    3. ' self' → logprob: -6.878128528594971
    4. '       ' → logprob: -9.253129005432129
    5. '	       ' → logprob: -10.378129005432129
    6. '            
' → logprob: -11.753129005432129
    7. ' if' → logprob: -12.128129005432129
    8. '               ' → logprob: -12.128129005432129
    9. '		' → logprob: -12.628129005432129
    10. '   ' → logprob: -12.628129005432129

Token 254: ' Util' (ID: 13564)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.40229353308677673
    2. 'self' → logprob: -1.2772935628890991
    3. '           ' → logprob: -3.4022934436798096
    4. ' if' → logprob: -4.152293682098389
    5. 'if' → logprob: -5.777293682098389
    6. '   ' → logprob: -8.77729320526123
    7. ' ' → logprob: -10.52729320526123
    8. '               ' → logprob: -11.02729320526123
    9. '	self' → logprob: -11.08979320526123
    10. '            
' → logprob: -11.46479320526123

Token 255: 'ise' (ID: 1096)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.012297017499804497
    2. 'iser' → logprob: -5.2622971534729
    3. '   ' → logprob: -6.1372971534729
    4. 'ise' → logprob: -6.6372971534729
    5. '=' → logprob: -6.8872971534729
    6. 'e' → logprob: -7.3872971534729
    7. 'ize' → logprob: -7.7622971534729
    8. 'is' → logprob: -8.012296676635742
    9. 'ate' → logprob: -8.262296676635742
    10. '       ' → logprob: -8.387296676635742

Token 256: ' l' (ID: 305)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.05728284642100334
    2. 'self' → logprob: -2.9322829246520996
    3. '	self' → logprob: -8.182282447814941
    4. ' operator' → logprob: -8.307282447814941
    5. ' i' → logprob: -8.432282447814941
    6. '   ' → logprob: -8.557282447814941
    7. ' ' → logprob: -8.557282447814941
    8. ' ' → logprob: -8.557282447814941
    9. '           ' → logprob: -8.682282447814941
    10. '    ' → logprob: -9.307282447814941

Token 257: ''op' (ID: 70747)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7349990010261536
    2. 'G' → logprob: -1.6099989414215088
    3. 'if' → logprob: -2.234998941421509
    4. 'a' → logprob: -2.984998941421509
    5. '           ' → logprob: -3.109998941421509
    6. 'self' → logprob: -3.984998941421509
    7. 'E' → logprob: -4.859999179840088
    8. '               ' → logprob: -4.859999179840088
    9. ' self' → logprob: -4.984999179840088
    10. 'f' → logprob: -4.984999179840088

Token 258: 'érateur' (ID: 108528)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.41865769028663635
    2. 'G' → logprob: -1.668657660484314
    3. 'érateur' → logprob: -3.9186577796936035
    4. '   ' → logprob: -4.1686577796936035
    5. '=' → logprob: -4.4186577796936035
    6. '[G' → logprob: -4.5436577796936035
    7. 'ér' → logprob: -4.6686577796936035
    8. 'e' → logprob: -4.7936577796936035
    9. ' G' → logprob: -4.7936577796936035
    10. '       ' → logprob: -5.1686577796936035

Token 259: ' set' (ID: 920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.598736047744751
    2. '=' → logprob: -1.848736047744751
    3. '.' → logprob: -2.223736047744751
    4. '[]' → logprob: -3.473736047744751
    5. '[i' → logprob: -3.598736047744751
    6. '[
' → logprob: -3.848736047744751
    7. ' ' → logprob: -4.223735809326172
    8. '.operator' → logprob: -4.223735809326172
    9. ' .' → logprob: -4.348735809326172
    10. ' setattr' → logprob: -4.473735809326172

Token 260: 'item' (ID: 2057)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2257501631975174
    2. '           ' → logprob: -1.975750207901001
    3. '   ' → logprob: -4.600749969482422
    4. '_=' → logprob: -4.725749969482422
    5. 'attr' → logprob: -4.850749969482422
    6. '_
' → logprob: -5.225749969482422
    7. '            ' → logprob: -5.475749969482422
    8. '(self' → logprob: -5.600749969482422
    9. '               ' → logprob: -5.725749969482422
    10. '.setdefault' → logprob: -5.975749969482422

Token 261: ' pour' (ID: 1930)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.6443943381309509
    2. '           ' → logprob: -0.7693943381309509
    3. '(' → logprob: -5.019394397735596
    4. 'self' → logprob: -6.394394397735596
    5. '(
' → logprob: -7.144394397735596
    6. ' self' → logprob: -7.394394397735596
    7. '(operator' → logprob: -7.519394397735596
    8. ' (' → logprob: -8.019393920898438
    9. '               ' → logprob: -8.269393920898438
    10. 'operator' → logprob: -8.894393920898438

Token 262: ' assign' (ID: 14975)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.21547512710094452
    2. 'self' → logprob: -1.715475082397461
    3. 'set' → logprob: -5.090475082397461
    4. ' operator' → logprob: -5.340475082397461
    5. '           ' → logprob: -6.840475082397461
    6. ' self' → logprob: -7.090475082397461
    7. 'fun' → logprob: -7.590475082397461
    8. '               ' → logprob: -8.590475082397461
    9. '(operator' → logprob: -8.965475082397461
    10. '   ' → logprob: -9.215475082397461

Token 263: 'er' (ID: 259)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'item' → logprob: -1.0139979124069214
    2. ')' → logprob: -1.6389979124069214
    3. '(self' → logprob: -2.138998031616211
    4. '(' → logprob: -2.388998031616211
    5. 'ent' → logprob: -2.513998031616211
    6. '(
' → logprob: -2.638998031616211
    7. 'operator' → logprob: -3.388998031616211
    8. 'attr' → logprob: -4.138998031616211
    9. 'self' → logprob: -4.888998031616211
    10. '=' → logprob: -5.138998031616211

Token 264: ' 
' (ID: 793)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5057413578033447
    2. '(self' → logprob: -1.3807413578033447
    3. '           ' → logprob: -2.7557413578033447
    4. ' self' → logprob: -3.2557413578033447
    5. 'operator' → logprob: -3.5057413578033447
    6. ' operator' → logprob: -5.005741119384766
    7. '(operator' → logprob: -5.755741119384766
    8. '               ' → logprob: -6.130741119384766
    9. ' (' → logprob: -7.755741119384766
    10. '
' → logprob: -8.755741119384766

Token 265: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05124197155237198
    2. 'self' → logprob: -3.801241874694824
    3. 'operator' → logprob: -4.676241874694824
    4. '(self' → logprob: -5.051241874694824
    5. ' self' → logprob: -5.426241874694824
    6. ' operator' → logprob: -5.551241874694824
    7. '(operator' → logprob: -6.051241874694824
    8. '               ' → logprob: -8.051241874694824
    9. ')' → logprob: -8.801241874694824
    10. ' (' → logprob: -9.301241874694824

Token 266: ' operator' (ID: 11019)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6162057518959045
    2. 'operator' (adapté à ' operator') → logprob: -0.8662057518959045
    3. ' operator' → logprob: -4.11620569229126
    4. ' self' → logprob: -4.11620569229126
    5. '           ' → logprob: -5.99120569229126
    6. '(operator' → logprob: -6.49120569229126
    7. '(self' → logprob: -6.86620569229126
    8. '_operator' → logprob: -7.74120569229126
    9. 'set' → logprob: -7.86620569229126
    10. '   ' → logprob: -8.491206169128418

Token 267: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -1.1875571544806007e-05
    2. '.' → logprob: -11.875011444091797
    3. ' .' → logprob: -13.000011444091797
    4. '.__' → logprob: -14.500011444091797
    5. '=set' → logprob: -15.125011444091797
    6. '```' → logprob: -15.125011444091797
    7. '   ' → logprob: -15.625011444091797
    8. '.setdefault' → logprob: -15.750011444091797
    9. '.method' → logprob: -15.875011444091797
    10. 'set' → logprob: -16.000011444091797

Token 268: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.005238736979663372
    2. 'attr' → logprob: -5.2552385330200195
    3. ' item' → logprob: -13.25523853302002
    4. 'getitem' → logprob: -14.13023853302002
    5. '(item' → logprob: -14.38023853302002
    6. 'it' → logprob: -15.13023853302002
    7. 'at' → logprob: -15.50523853302002
    8. '=item' → logprob: -15.63023853302002
    9. '.item' → logprob: -16.005239486694336
    10. ')' → logprob: -16.005239486694336

Token 269: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010866894444916397
    2. ' (' → logprob: -9.87510871887207
    3. '(' → logprob: -10.00010871887207
    4. '           ' → logprob: -12.50010871887207
    5. 'self' → logprob: -12.87510871887207
    6. '(
' → logprob: -13.87510871887207
    7. ',self' → logprob: -13.87510871887207
    8. ' self' → logprob: -14.00010871887207
    9. '   ' → logprob: -14.00010871887207
    10. '       ' → logprob: -14.37510871887207

Token 270: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.009626941755414009
    2. '(self' → logprob: -5.134626865386963
    3. '.S' → logprob: -7.134626865386963
    4. ').' → logprob: -7.634626865386963
    5. 'self' → logprob: -7.634626865386963
    6. ' .' → logprob: -7.634626865386963
    7. ')' → logprob: -7.884626865386963
    8. '(G' → logprob: -8.009627342224121
    9. ' self' → logprob: -8.509627342224121
    10. '.self' → logprob: -8.509627342224121

Token 271: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009194238111376762
    2. ',' → logprob: -5.759194374084473
    3. ',i' → logprob: -5.884194374084473
    4. ',[' → logprob: -6.009194374084473
    5. '[j' → logprob: -8.259194374084473
    6. '[' → logprob: -8.884194374084473
    7. '(i' → logprob: -8.884194374084473
    8. '   ' → logprob: -9.509194374084473
    9. ')[' → logprob: -10.009194374084473
    10. ' ,' → logprob: -10.884194374084473

Token 272: '],' (ID: 2155)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4713207483291626
    2. ',' → logprob: -1.2213207483291626
    3. '[j' → logprob: -3.596320629119873
    4. '],' → logprob: -3.846320629119873
    5. ',j' → logprob: -4.221320629119873
    6. ']' → logprob: -4.971320629119873
    7. ',[' → logprob: -5.721320629119873
    8. '],[' → logprob: -6.096320629119873
    9. '[i' → logprob: -6.221320629119873
    10. '[' → logprob: -7.096320629119873

Token 273: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.73183855926618e-05
    2. ' j' → logprob: -9.500077247619629
    3. '   ' → logprob: -13.750077247619629
    4. '	j' → logprob: -14.250077247619629
    5. '                   ' → logprob: -15.125077247619629
    6. '           ' → logprob: -15.250077247619629
    7. '               ' → logprob: -16.875078201293945
    8. '[j' → logprob: -17.875078201293945
    9. '    ' → logprob: -17.875078201293945
    10. ')' → logprob: -18.375078201293945

Token 274: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03712034225463867
    2. ' ,' → logprob: -3.7871203422546387
    3. ',k' → logprob: -4.287120342254639
    4. 'k' → logprob: -10.787120819091797
    5. ' k' → logprob: -11.662120819091797
    6. ',
' → logprob: -13.287120819091797
    7. ' ,
' → logprob: -14.037120819091797
    8. ')' → logprob: -14.287120819091797
    9. ' ' → logprob: -14.287120819091797
    10. '),' → logprob: -16.037120819091797

Token 275: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.020542940124869347
    2. ' k' → logprob: -3.895542860031128
    3. '	k' → logprob: -14.770543098449707
    4. '            ' → logprob: -15.270543098449707
    5. ' ' → logprob: -16.39554214477539
    6. ' ' → logprob: -16.39554214477539
    7. '               ' → logprob: -16.52054214477539
    8. '           ' → logprob: -16.64554214477539
    9. '                ' → logprob: -17.52054214477539
    10. '    ' → logprob: -17.52054214477539

Token 276: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00025514091248624027
    2. ')
' → logprob: -8.375255584716797
    3. ' )' → logprob: -10.875255584716797
    4. '           ' → logprob: -12.500255584716797
    5. '       ' → logprob: -14.500255584716797
    6. '   ' → logprob: -15.125255584716797
    7. '))' → logprob: -15.125255584716797
    8. ')`' → logprob: -15.750255584716797
    9. ')
' → logprob: -16.250255584716797
    10. ')return' → logprob: -16.375255584716797

Token 277: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 278: ' operator' (ID: 11019)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11061911284923553
    2. 'operator' (adapté à ' operator') → logprob: -2.485619068145752
    3. ' operator' → logprob: -3.860619068145752
    4. '       ' → logprob: -9.61061954498291
    5. '   ' → logprob: -9.73561954498291
    6. '<|end|>' → logprob: -9.86061954498291
    7. '	operator' → logprob: -10.23561954498291
    8. '(operator' → logprob: -10.48561954498291
    9. '                   ' → logprob: -10.73561954498291
    10. '               ' → logprob: -10.98561954498291

Token 279: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.11419191211462021
    2. '.' → logprob: -2.239192008972168
    3. '.setdefault' → logprob: -6.739192008972168
    4. ' .' → logprob: -9.239192008972168
    5. '.s' → logprob: -9.989192008972168
    6. ' ' → logprob: -11.364192008972168
    7. ').' → logprob: -12.114192008972168
    8. '[' → logprob: -12.114192008972168
    9. '   ' → logprob: -12.739192008972168
    10. '.get' → logprob: -12.864192008972168

Token 280: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -2.9875325708417222e-05
    2. 'set' → logprob: -11.000029563903809
    3. 'getitem' → logprob: -11.375029563903809
    4. 'it' → logprob: -15.000029563903809
    5. '(item' → logprob: -15.125029563903809
    6. 'items' → logprob: -15.250029563903809
    7. 'tem' → logprob: -16.000030517578125
    8. '.item' → logprob: -16.625030517578125
    9. '=item' → logprob: -16.625030517578125
    10. 'et' → logprob: -17.125030517578125

Token 281: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007363698096014559
    2. '(' → logprob: -7.750736236572266
    3. 'self' → logprob: -8.250736236572266
    4. ' (' → logprob: -11.000736236572266
    5. ' ' → logprob: -12.125736236572266
    6. 's' → logprob: -12.125736236572266
    7. '  ' → logprob: -12.500736236572266
    8. ' self' → logprob: -12.625736236572266
    9. '           ' → logprob: -13.125736236572266
    10. '(s' → logprob: -13.250736236572266

Token 282: '.G' (ID: 3773)
  Prédit: '.Path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Path' → logprob: -0.4021366238594055
    2. '.G' → logprob: -1.2771365642547607
    3. 'G' → logprob: -3.2771365642547607
    4. 'Path' → logprob: -4.27713680267334
    5. '.P' → logprob: -8.65213680267334
    6. '.Graph' → logprob: -9.52713680267334
    7. 'path' → logprob: -9.65213680267334
    8. 'self' → logprob: -9.65213680267334
    9. ').' → logprob: -9.77713680267334
    10. '.' → logprob: -10.27713680267334

Token 283: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0013165470445528626
    2. '[i' → logprob: -7.001316547393799
    3. '[' → logprob: -8.37631607055664
    4. 'j' → logprob: -9.25131607055664
    5. '.j' → logprob: -10.75131607055664
    6. '.' → logprob: -11.25131607055664
    7. '   ' → logprob: -11.62631607055664
    8. '[self' → logprob: -12.25131607055664
    9. ' [' → logprob: -12.50131607055664
    10. '.[' → logprob: -12.62631607055664

Token 284: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0006870561628602445
    2. '][' → logprob: -7.625687122344971
    3. ',' → logprob: -9.000686645507812
    4. ']' → logprob: -10.250686645507812
    5. '[i' → logprob: -11.000686645507812
    6. ' ],' → logprob: -11.375686645507812
    7. '],[' → logprob: -12.000686645507812
    8. ',i' → logprob: -12.875686645507812
    9. '   ' → logprob: -14.500686645507812
    10. '],
' → logprob: -14.500686645507812

Token 285: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.4391956685576588e-05
    2. ' i' → logprob: -10.625024795532227
    3. '[i' → logprob: -17.625024795532227
    4. 'I' → logprob: -17.875024795532227
    5. ' ' → logprob: -18.125024795532227
    6. '	i' → logprob: -18.250024795532227
    7. 'self' → logprob: -19.125024795532227
    8. '[' → logprob: -19.375024795532227
    9. 'operator' → logprob: -19.500024795532227
    10. ',i' → logprob: -20.500024795532227

Token 286: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019825217314064503
    2. '],' → logprob: -7.126982688903809
    3. ' ,' → logprob: -7.126982688903809
    4. '[' → logprob: -8.751982688903809
    5. ',j' → logprob: -10.126982688903809
    6. ',k' → logprob: -10.126982688903809
    7. ']' → logprob: -10.251982688903809
    8. '           ' → logprob: -10.876982688903809
    9. '),' → logprob: -10.876982688903809
    10. '[j' → logprob: -11.376982688903809

Token 287: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0015024791937321424
    2. ' k' → logprob: -6.501502513885498
    3. 'operator' → logprob: -15.75150203704834
    4. ' ' → logprob: -16.876502990722656
    5. '	k' → logprob: -16.876502990722656
    6. ' operator' → logprob: -18.251502990722656
    7. '   ' → logprob: -18.501502990722656
    8. '           ' → logprob: -18.626502990722656
    9. ' ' → logprob: -19.126502990722656
    10. '{k' → logprob: -19.251502990722656

Token 288: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003044802288059145
    2. ')
' → logprob: -8.250304222106934
    3. ' )' → logprob: -10.125304222106934
    4. '           ' → logprob: -13.375304222106934
    5. '       ' → logprob: -14.250304222106934
    6. '   ' → logprob: -15.500304222106934
    7. ')

' → logprob: -15.625304222106934
    8. '))' → logprob: -15.875304222106934
    9. ')#' → logprob: -16.00030517578125
    10. ')`' → logprob: -16.25030517578125

Token 289: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 290: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 291: ' Force' (ID: 22357)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0012102338951081038
    2. ' for' → logprob: -7.6262102127075195
    3. '       ' → logprob: -7.8762102127075195
    4. 'operator' → logprob: -9.37621021270752
    5. 'def' → logprob: -9.75121021270752
    6. '   ' → logprob: -9.75121021270752
    7. '#' → logprob: -9.75121021270752
    8. 'from' → logprob: -10.37621021270752
    9. 'import' → logprob: -10.50121021270752
    10. 'self' → logprob: -11.50121021270752

Token 292: ' diagonal' (ID: 71638)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2424758672714233
    2. 'for' → logprob: -1.2424758672714233
    3. '       ' → logprob: -1.7424758672714233
    4. '   ' → logprob: -2.117475986480713
    5. 'def' → logprob: -3.367475986480713
    6. 'self' → logprob: -3.492475986480713
    7. 'd' → logprob: -3.867475986480713
    8. 's' → logprob: -5.117475986480713
    9. ' (' → logprob: -5.242475986480713
    10. ' self' → logprob: -5.867475986480713

Token 293: ' à' (ID: 1221)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6763414740562439
    2. 'for' → logprob: -0.8013414740562439
    3. '       ' → logprob: -3.1763415336608887
    4. '   ' → logprob: -7.926341533660889
    5. '.for' → logprob: -8.92634105682373
    6. ',' → logprob: -8.92634105682373
    7. ' =' → logprob: -9.05134105682373
    8. '[' → logprob: -9.30134105682373
    9. '           ' → logprob: -10.55134105682373
    10. ' ' → logprob: -10.67634105682373

Token 294: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018172068521380424
    2. 'operator' → logprob: -4.268172264099121
    3. ' ' → logprob: -6.018172264099121
    4. 'zero' → logprob: -7.143172264099121
    5. ' operator' → logprob: -7.393172264099121
    6. ' zero' → logprob: -9.268172264099121
    7. '   ' → logprob: -11.018172264099121
    8. '  ' → logprob: -11.643172264099121
    9. '    ' → logprob: -12.143172264099121
    10. '(operator' → logprob: -12.768172264099121

Token 295: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02128215879201889
    2. 'operator' → logprob: -3.896282196044922
    3. ' ' → logprob: -7.896282196044922
    4. ' operator' → logprob: -8.646282196044922
    5. 'zero' → logprob: -8.771282196044922
    6. 'lambda' → logprob: -11.396282196044922
    7. ' zero' → logprob: -12.146282196044922
    8. '   ' → logprob: -12.646282196044922
    9. '1' → logprob: -12.896282196044922
    10. 'fun' → logprob: -13.271282196044922

Token 296: ' en' (ID: 469)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15006740391254425
    2. 'for' → logprob: -2.4000673294067383
    3. ' for' → logprob: -3.0250673294067383
    4. '   ' → logprob: -10.150067329406738
    5. '[' → logprob: -11.025067329406738
    6. '<|end|>' → logprob: -12.150067329406738
    7. '	for' → logprob: -12.275067329406738
    8. '           ' → logprob: -12.650067329406738
    9. ',' → logprob: -12.775067329406738
    10. '	' → logprob: -13.025067329406738

Token 297: ' compress' (ID: 34112)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.36719009280204773
    2. 'for' → logprob: -2.36719012260437
    3. 'map' → logprob: -2.74219012260437
    4. ' operator' → logprob: -2.86719012260437
    5. 'lambda' → logprob: -3.36719012260437
    6. '(lambda' → logprob: -3.86719012260437
    7. '(operator' → logprob: -4.117189884185791
    8. ' for' → logprob: -5.367189884185791
    9. ' map' → logprob: -5.492189884185791
    10. '[' → logprob: -5.617189884185791

Token 298: 'ant' (ID: 493)
  Prédit: 'ion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ion' → logprob: -0.5862073302268982
    2. 'e' → logprob: -1.586207389831543
    3. 'ing' → logprob: -1.961207389831543
    4. 'er' → logprob: -3.336207389831543
    5. 'é' → logprob: -3.711207389831543
    6. 'operator' → logprob: -4.836207389831543
    7. 'ant' → logprob: -4.961207389831543
    8. 'ed' → logprob: -4.961207389831543
    9. 'ions' → logprob: -5.586207389831543
    10. 'for' → logprob: -5.961207389831543

Token 299: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9046630263328552
    2. 'for' → logprob: -0.9046630263328552
    3. ' for' → logprob: -2.6546630859375
    4. 'operator' → logprob: -3.0296630859375
    5. 'map' → logprob: -3.6546630859375
    6. ' operator' → logprob: -3.9046630859375
    7. 'range' → logprob: -4.1546630859375
    8. ' map' → logprob: -6.0296630859375
    9. ' range' → logprob: -6.7796630859375
    10. 'self' → logprob: -6.9046630859375

Token 300: '->[' (ID: 191691)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.105811357498169
    2. 'range' → logprob: -1.355811357498169
    3. ',' → logprob: -1.605811357498169
    4. ' in' → logprob: -2.855811357498169
    5. 'for' → logprob: -3.230811357498169
    6. ' for' → logprob: -3.355811357498169
    7. ' range' → logprob: -3.980811357498169
    8. '   ' → logprob: -4.60581111907959
    9. '           ' → logprob: -5.10581111907959
    10. ' and' → logprob: -5.10581111907959

Token 301: 'i' (ID: 72)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6843331456184387
    2. 'i' → logprob: -1.184333086013794
    3. 'operator' → logprob: -2.684333086013794
    4. '(i' → logprob: -2.934333086013794
    5. ' i' → logprob: -4.684333324432373
    6. '(' → logprob: -4.809333324432373
    7. '(operator' → logprob: -4.809333324432373
    8. '0' → logprob: -5.059333324432373
    9. ' range' → logprob: -5.309333324432373
    10. 'self' → logprob: -5.309333324432373

Token 302: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15519577264785767
    2. ',i' → logprob: -2.405195713043213
    3. ']' → logprob: -4.280195713043213
    4. ' ,' → logprob: -4.655195713043213
    5. 'range' → logprob: -5.030195713043213
    6. 'for' → logprob: -5.530195713043213
    7. '][' → logprob: -5.780195713043213
    8. ',self' → logprob: -5.905195713043213
    9. ',index' → logprob: -6.155195713043213
    10. ' for' → logprob: -6.655195713043213

Token 303: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13707537949085236
    2. ',n' → logprob: -3.637075424194336
    3. ',i' → logprob: -3.887075424194336
    4. 'n' → logprob: -4.012075424194336
    5. ']' → logprob: -4.137075424194336
    6. 'nd' → logprob: -4.262075424194336
    7. 'm' → logprob: -5.512075424194336
    8. '],' → logprob: -5.512075424194336
    9. ',j' → logprob: -6.012075424194336
    10. 'x' → logprob: -6.012075424194336

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1756354421377182
    2. ' for' → logprob: -2.17563533782959
    3. 'for' → logprob: -3.05063533782959
    4. '   ' → logprob: -9.42563533782959
    5. '	for' → logprob: -9.67563533782959
    6. '	' → logprob: -10.80063533782959
    7. ' in' → logprob: -11.67563533782959
    8. 'range' → logprob: -11.92563533782959
    9. ')' → logprob: -12.05063533782959
    10. '           ' → logprob: -12.92563533782959

Token 305: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.010314454324543476
    2. ' for' → logprob: -5.010314464569092
    3. '       ' → logprob: -5.635314464569092
    4. '   ' → logprob: -11.760313987731934
    5. 'list' → logprob: -12.510313987731934
    6. '
' → logprob: -12.760313987731934
    7. 'self' → logprob: -13.760313987731934
    8. 'map' → logprob: -13.885313987731934
    9. '	for' → logprob: -14.135313987731934
    10. '           ' → logprob: -14.260313987731934

Token 306: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2814335227012634
    2. 'i' → logprob: -1.4064335823059082
    3. '	i' → logprob: -9.40643310546875
    4. ' ' → logprob: -10.03143310546875
    5. ' idx' → logprob: -10.15643310546875
    6. '_i' → logprob: -10.40643310546875
    7. '_' → logprob: -10.90643310546875
    8. 'idx' → logprob: -11.03143310546875
    9. '(i' → logprob: -12.03143310546875
    10. ' _' → logprob: -12.15643310546875

Token 307: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00485646165907383
    2. 'in' → logprob: -5.379856586456299
    3. ',' → logprob: -8.87985610961914
    4. ' ' → logprob: -9.62985610961914
    5. ' ,' → logprob: -11.50485610961914
    6. '	in' → logprob: -11.75485610961914
    7. 'range' → logprob: -13.12985610961914
    8. '   ' → logprob: -13.25485610961914
    9. '  ' → logprob: -13.50485610961914
    10. '0' → logprob: -13.50485610961914

Token 308: ' v' (ID: 323)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.30151641368865967
    2. 'j' → logprob: -2.551516532897949
    3. '_' → logprob: -2.676516532897949
    4. 'val' → logprob: -3.051516532897949
    5. 'v' → logprob: -3.926516532897949
    6. 'row' → logprob: -4.301516532897949
    7. '_i' → logprob: -5.426516532897949
    8. 'ii' → logprob: -5.551516532897949
    9. ' i' → logprob: -5.926516532897949
    10. 'diag' → logprob: -6.051516532897949

Token 309: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07009638100862503
    2. 'in' → logprob: -2.695096492767334
    3. ',' → logprob: -9.070096015930176
    4. '	in' → logprob: -11.195096015930176
    5. ' ' → logprob: -12.070096015930176
    6. 'v' → logprob: -12.695096015930176
    7. 'n' → logprob: -12.695096015930176
    8. 's' → logprob: -13.445096015930176
    9. '_in' → logprob: -13.570096015930176
    10. ' ,' → logprob: -14.007596015930176

Token 310: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0498875267803669
    2. ' enumerate' → logprob: -3.1748874187469482
    3. 'zip' → logprob: -5.299887657165527
    4. 'map' → logprob: -6.424887657165527
    5. ' zip' → logprob: -8.799887657165527
    6. 'range' → logprob: -10.174887657165527
    7. ' map' → logprob: -11.174887657165527
    8. 'enum' → logprob: -11.299887657165527
    9. 'list' → logprob: -12.549887657165527
    10. 'it' → logprob: -12.549887657165527

Token 311: '(it' (ID: 29445)
  Prédit: '(range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.01465008407831192
    2. 'range' → logprob: -4.389649868011475
    3. '(self' → logprob: -6.764649868011475
    4. '(zip' → logprob: -7.139649868011475
    5. '(' → logprob: -9.014650344848633
    6. '([' → logprob: -11.014650344848633
    7. '((' → logprob: -11.764650344848633
    8. 'self' → logprob: -12.014650344848633
    9. '(list' → logprob: -12.139650344848633
    10. '(operator' → logprob: -12.139650344848633

Token 312: 'ertools' (ID: 88385)
  Prédit: 'ertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ertools' → logprob: -0.47429364919662476
    2. 'er' → logprob: -0.9742936491966248
    3. 'erp' → logprob: -9.84929370880127
    4. 'ermap' → logprob: -10.09929370880127
    5. 'erm' → logprob: -10.72429370880127
    6. 'erval' → logprob: -10.84929370880127
    7. '(range' → logprob: -10.97429370880127
    8. 'range' → logprob: -11.22429370880127
    9. 'zip' → logprob: -11.59929370880127
    10. '(self' → logprob: -12.09929370880127

Token 313: '.repeat' (ID: 109361)
  Prédit: '.repeat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.repeat' → logprob: -0.7178477048873901
    2. '.count' → logprob: -1.8428477048873901
    3. '.chain' → logprob: -2.0928478240966797
    4. '.zip' → logprob: -2.2178478240966797
    5. '.range' → logprob: -2.5928478240966797
    6. '(range' → logprob: -3.9678478240966797
    7. '.' → logprob: -4.09284782409668
    8. '.is' → logprob: -5.59284782409668
    9. '.c' → logprob: -5.96784782409668
    10. 'range' → logprob: -6.96784782409668

Token 314: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32080817222595215
    2. '(i' → logprob: -1.3208081722259521
    3. '(None' → logprob: -5.820808410644531
    4. '(range' → logprob: -5.945808410644531
    5. '(self' → logprob: -6.820808410644531
    6. '0' → logprob: -8.070808410644531
    7. ',' → logprob: -8.945808410644531
    8. '(lambda' → logprob: -8.945808410644531
    9. 'range' → logprob: -9.445808410644531
    10. '(True' → logprob: -10.195808410644531

Token 315: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005388972815126181
    2. '(' → logprob: -5.6303887367248535
    3. 'self' → logprob: -7.5053887367248535
    4. ' ' → logprob: -7.6303887367248535
    5. 'range' → logprob: -7.7553887367248535
    6. 'None' → logprob: -9.380389213562012
    7. '(self' → logprob: -9.880389213562012
    8. '1' → logprob: -9.880389213562012
    9. '   ' → logprob: -10.630389213562012
    10. '    ' → logprob: -11.005389213562012

Token 316: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005601072683930397
    2. ',self' → logprob: -5.755600929260254
    3. ')):' → logprob: -7.005600929260254
    4. ')):
' → logprob: -7.505600929260254
    5. ' ,' → logprob: -7.880600929260254
    6. '),' → logprob: -8.380600929260254
    7. 'self' → logprob: -9.130600929260254
    8. '))' → logprob: -9.255600929260254
    9. ',len' → logprob: -10.380600929260254
    10. ')):
' → logprob: -10.630600929260254

Token 317: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.02068786881864071
    2. ' self' → logprob: -3.8956878185272217
    3. '   ' → logprob: -9.2706880569458
    4. '       ' → logprob: -11.1456880569458
    5. 'len' → logprob: -11.3956880569458
    6. '  ' → logprob: -11.7706880569458
    7. ' ' → logprob: -12.0206880569458
    8. '	self' → logprob: -12.7706880569458
    9. '(self' → logprob: -13.2706880569458
    10. '    ' → logprob: -13.2706880569458

Token 318: '.E' (ID: 9032)
  Prédit: '.E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.E' → logprob: -0.0013071446446701884
    2. 'E' → logprob: -6.751307010650635
    3. '.V' → logprob: -9.126307487487793
    4. '.' → logprob: -11.626307487487793
    5. ',E' → logprob: -11.876307487487793
    6. ' .' → logprob: -12.751307487487793
    7. '	E' → logprob: -12.751307487487793
    8. '   ' → logprob: -13.376307487487793
    9. ' E' → logprob: -13.376307487487793
    10. 'V' → logprob: -13.626307487487793

Token 319: '),' (ID: 936)
  Prédit: ')):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.18847526609897614
    2. ')):' → logprob: -1.813475251197815
    3. '))' → logprob: -5.063475131988525
    4. ')):
' → logprob: -6.938475131988525
    5. '):
' → logprob: -7.563475131988525
    6. ' ' → logprob: -8.188475608825684
    7. '):' → logprob: -8.688475608825684
    8. ')' → logprob: -9.313475608825684
    9. '   ' → logprob: -9.563475608825684
    10. ' ))' → logprob: -9.563475608825684

Token 320: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9793802499771118
    2. '):
' → logprob: -1.4793802499771118
    3. 'range' → logprob: -2.1043801307678223
    4. 'i' → logprob: -2.2293801307678223
    5. '):' → logprob: -3.3543801307678223
    6. 'lambda' → logprob: -3.6043801307678223
    7. '   ' → logprob: -3.9793801307678223
    8. '0' → logprob: -4.104380130767822
    9. 'start' → logprob: -4.229380130767822
    10. ' self' → logprob: -4.354380130767822

Token 321: '1' (ID: 16)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.013870105147361755
    2. 'i' → logprob: -4.7638702392578125
    3. 'start' → logprob: -6.1388702392578125
    4. 'range' → logprob: -6.7638702392578125
    5. ' self' → logprob: -7.6388702392578125
    6. ')' → logprob: -7.7638702392578125
    7. '):
' → logprob: -8.388870239257812
    8. 'operator' → logprob: -8.888870239257812
    9. 'len' → logprob: -8.888870239257812
    10. '0' → logprob: -9.388870239257812

Token 322: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07942483574151993
    2. '):' → logprob: -2.5794248580932617
    3. ':' → logprob: -8.454424858093262
    4. '):
' → logprob: -8.829424858093262
    5. '   ' → logprob: -9.329424858093262
    6. ')' → logprob: -10.454424858093262
    7. ':
' → logprob: -10.704424858093262
    8. '       ' → logprob: -11.204424858093262
    9. ' ):
' → logprob: -11.454424858093262
    10. ',' → logprob: -11.829424858093262

Token 323: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3874041438102722
    2. '       ' → logprob: -1.137404203414917
    3. ' operator' → logprob: -8.512404441833496
    4. '   ' → logprob: -9.637404441833496
    5. 'operator' → logprob: -9.637404441833496
    6. '<|end|>' → logprob: -9.887404441833496
    7. '        ' → logprob: -10.262404441833496
    8. '        
' → logprob: -11.262404441833496
    9. ':' → logprob: -11.387404441833496
    10. '            
' → logprob: -11.512404441833496

Token 324: ' operator' (ID: 11019)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' (adapté à ' operator') → logprob: -0.3805369436740875
    2. 'self' → logprob: -1.6305369138717651
    3. '           ' → logprob: -2.7555370330810547
    4. ' operator' → logprob: -3.3805370330810547
    5. ' self' → logprob: -4.005537033081055
    6. '               ' → logprob: -5.380537033081055
    7. '   ' → logprob: -9.755537033081055
    8. ' ' → logprob: -10.255537033081055
    9. 'set' → logprob: -10.380537033081055
    10. '            ' → logprob: -10.380537033081055

Token 325: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -4.370294846012257e-05
    2. '.' → logprob: -10.125043869018555
    3. ' .' → logprob: -13.375043869018555
    4. '.del' → logprob: -13.875043869018555
    5. '   ' → logprob: -15.125043869018555
    6. '```' → logprob: -15.500043869018555
    7. '.method' → logprob: -15.750043869018555
    8. '	set' → logprob: -16.125043869018555
    9. 'set' → logprob: -16.625043869018555
    10. ' set' → logprob: -17.375043869018555

Token 326: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: 0.0
    2. 'getitem' → logprob: -17.625
    3. '(item' → logprob: -18.5
    4. 'items' → logprob: -18.75
    5. ' item' → logprob: -19.125
    6. 'Item' → logprob: -20.0
    7. 'attr' → logprob: -20.0
    8. 'self' → logprob: -20.125
    9. 'value' → logprob: -20.625
    10. '[item' → logprob: -21.0

Token 327: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.630610641877865e-06
    2. 'self' → logprob: -12.750006675720215
    3. '(' → logprob: -12.875006675720215
    4. ' (' → logprob: -14.000006675720215
    5. '   ' → logprob: -16.6250057220459
    6. ' self' → logprob: -16.6250057220459
    7. '(this' → logprob: -17.7500057220459
    8. '(
' → logprob: -17.7500057220459
    9. ' ' → logprob: -18.2500057220459
    10. '  ' → logprob: -18.3750057220459

Token 328: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.0013722646981477737
    2. '.Graph' → logprob: -7.001372337341309
    3. '.S' → logprob: -9.126372337341309
    4. '(G' → logprob: -9.126372337341309
    5. '(self' → logprob: -9.126372337341309
    6. 'self' → logprob: -9.626372337341309
    7. '.Path' → logprob: -11.001372337341309
    8. ' .' → logprob: -11.126372337341309
    9. '.self' → logprob: -11.501372337341309
    10. '.P' → logprob: -12.126372337341309

Token 329: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0042968266643583775
    2. ',' → logprob: -5.754296779632568
    3. ',i' → logprob: -7.254296779632568
    4. '[' → logprob: -8.754297256469727
    5. ' ,' → logprob: -8.754297256469727
    6. '(i' → logprob: -10.504297256469727
    7. '   ' → logprob: -10.754297256469727
    8. ' [' → logprob: -11.004297256469727
    9. ',[' → logprob: -11.629297256469727
    10. ' i' → logprob: -11.754297256469727

Token 330: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00766967935487628
    2. '],' → logprob: -5.757669448852539
    3. ',i' → logprob: -6.382669448852539
    4. '[i' → logprob: -6.507669448852539
    5. ' ,' → logprob: -7.507669448852539
    6. '][' → logprob: -7.632669448852539
    7. 'i' → logprob: -8.382669448852539
    8. ']' → logprob: -11.257669448852539
    9. ' i' → logprob: -11.757669448852539
    10. ' ' → logprob: -12.257669448852539

Token 331: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033558503491804004
    2. ' i' → logprob: -8.000335693359375
    3. '	i' → logprob: -15.875335693359375
    4. ' ' → logprob: -16.875335693359375
    5. ')' → logprob: -17.875335693359375
    6. '   ' → logprob: -17.875335693359375
    7. ' ' → logprob: -18.750335693359375
    8. '  ' → logprob: -18.875335693359375
    9. ',i' → logprob: -19.125335693359375
    10. ',' → logprob: -19.250335693359375

Token 332: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009834124706685543
    2. ' ,' → logprob: -4.634834289550781
    3. '0' → logprob: -9.634834289550781
    4. ',v' → logprob: -11.634834289550781
    5. ' ' → logprob: -13.009834289550781
    6. ',
' → logprob: -14.634834289550781
    7. ')' → logprob: -14.634834289550781
    8. 'v' → logprob: -15.384834289550781
    9. ' ,
' → logprob: -16.00983428955078
    10. '1' → logprob: -16.13483428955078

Token 333: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.032669853419065475
    2. ' ' → logprob: -4.032670021057129
    3. 'v' → logprob: -4.282670021057129
    4. ' v' → logprob: -7.407670021057129
    5. '   ' → logprob: -14.532670021057129
    6. ')' → logprob: -14.657670021057129
    7. '    ' → logprob: -14.657670021057129
    8. ' ' → logprob: -14.782670021057129
    9. '	v' → logprob: -15.532670021057129
    10. '  ' → logprob: -15.782670021057129

Token 334: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01838497444987297
    2. 'v' → logprob: -4.01838493347168
    3. ' ' → logprob: -8.39338493347168
    4. ' v' → logprob: -11.76838493347168
    5. '   ' → logprob: -15.01838493347168
    6. '    ' → logprob: -16.26838493347168
    7. '	v' → logprob: -16.39338493347168
    8. 'self' → logprob: -16.39338493347168
    9. '  ' → logprob: -16.70588493347168
    10. ')' → logprob: -16.89338493347168

Token 335: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.084206375409849e-05
    2. ')
' → logprob: -10.125041007995605
    3. ' )' → logprob: -14.375041007995605
    4. '   ' → logprob: -16.87504005432129
    5. '       ' → logprob: -17.50004005432129
    6. ')`' → logprob: -17.75004005432129
    7. ')

' → logprob: -17.87504005432129
    8. '           ' → logprob: -17.87504005432129
    9. ')
' → logprob: -18.37504005432129
    10. '))' → logprob: -18.37504005432129

Token 336: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 337: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 338: ' Floyd' (ID: 76639)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01753106899559498
    2. ' def' → logprob: -4.517530918121338
    3. '   ' → logprob: -5.892530918121338
    4. 'for' → logprob: -6.017530918121338
    5. ' for' → logprob: -7.017530918121338
    6. '<|end|>' → logprob: -8.767531394958496
    7. ' ' → logprob: -10.017531394958496
    8. '#' → logprob: -10.517531394958496
    9. '       ' → logprob: -10.767531394958496
    10. '	def' → logprob: -11.142531394958496

Token 339: '-W' (ID: 14439)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6953856945037842
    2. 'def' → logprob: -1.4453856945037842
    3. '       ' → logprob: -1.5703856945037842
    4. ' for' → logprob: -3.820385694503784
    5. 'for' → logprob: -4.320385932922363
    6. 'War' → logprob: -4.695385932922363
    7. ' def' → logprob: -5.195385932922363
    8. ''s' → logprob: -6.445385932922363
    9. ' self' → logprob: -7.195385932922363
    10. '           ' → logprob: -7.570385932922363

Token 340: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.6425874829292297
    2. 'War' → logprob: -0.7675874829292297
    3. 'arshal' → logprob: -4.767587661743164
    4. 'Marshall' → logprob: -7.267587661743164
    5. ' War' → logprob: -9.017587661743164
    6. 'war' → logprob: -9.142587661743164
    7. '
' → logprob: -10.267587661743164
    8. 'Marshal' → logprob: -10.517587661743164
    9. '--' → logprob: -10.642587661743164
    10. 'arl' → logprob: -10.642587661743164

Token 341: 'shall' (ID: 30275)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.006451508495956659
    2. 'all' → logprob: -5.256451606750488
    3. 'arshal' → logprob: -8.006451606750488
    4. '           ' → logprob: -8.881451606750488
    5. 'al' → logprob: -9.006451606750488
    6. '   ' → logprob: -9.256451606750488
    7. '```' → logprob: -9.881451606750488
    8. '       ' → logprob: -10.006451606750488
    9. 'Marshall' → logprob: -10.006451606750488
    10. '
' → logprob: -10.131451606750488

Token 342: ' non' (ID: 2893)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5535803437232971
    2. '   ' → logprob: -1.0535802841186523
    3. ' for' → logprob: -3.3035802841186523
    4. '
' → logprob: -4.053580284118652
    5. 'for' → logprob: -4.553580284118652
    6. 'def' → logprob: -4.678580284118652
    7. ' def' → logprob: -6.678580284118652
    8. '<|end|>' → logprob: -7.553580284118652
    9. '	def' → logprob: -9.178580284118652
    10. '        
' → logprob: -9.178580284118652

Token 343: '-' (ID: 12)
  Prédit: 'termin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'termin' → logprob: -1.456132173538208
    2. 'completed' → logprob: -1.831132173538208
    3. 'terminated' → logprob: -1.831132173538208
    4. 'implemented' → logprob: -2.456132173538208
    5. ' terminé' → logprob: -2.456132173538208
    6. 'com' → logprob: -2.831132173538208
    7. '   ' → logprob: -3.456132173538208
    8. ' termin' → logprob: -3.956132173538208
    9. 'compl' → logprob: -4.081131935119629
    10. 'complete' → logprob: -4.206131935119629

Token 344: 'idi' (ID: 9175)
  Prédit: 'recursive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'recursive' → logprob: -1.0426744222640991
    2. 'rec' → logprob: -1.6676744222640991
    3. 'com' → logprob: -2.5426745414733887
    4. 'completed' → logprob: -3.0426745414733887
    5. 'implemented' → logprob: -3.0426745414733887
    6. 'optim' → logprob: -3.1676745414733887
    7. 'optimized' → logprob: -3.4176745414733887
    8. 're' → logprob: -3.5426745414733887
    9. 'tr' → logprob: -4.042674541473389
    10. 'complete' → logprob: -4.292674541473389

Token 345: 'ot' (ID: 346)
  Prédit: 'omatic'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'omatic' → logprob: -0.22746719419956207
    2. 'om' → logprob: -1.6024671792984009
    3. 'mat' → logprob: -6.852467060089111
    4. 'omat' → logprob: -7.227467060089111
    5. 'o' → logprob: -9.10246753692627
    6. 'omal' → logprob: -9.72746753692627
    7. 'omt' → logprob: -10.85246753692627
    8. 'm' → logprob: -11.72746753692627
    9. 'omac' → logprob: -11.97746753692627
    10. 'mal' → logprob: -11.97746753692627

Token 346: '-proof' (ID: 87497)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.361124038696289
    2. '       ' → logprob: -1.361124038696289
    3. '<|end|>' → logprob: -1.611124038696289
    4. '   ' → logprob: -2.111124038696289
    5. ' for' → logprob: -2.736124038696289
    6. 'def' → logprob: -2.986124038696289
    7. 'for' → logprob: -3.861124038696289
    8. '<|end|>' → logprob: -4.861124038696289
    9. '()' → logprob: -4.986124038696289
    10. '()
' → logprob: -5.736124038696289

Token 347: ' via' (ID: 4493)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 348: ' itertools' (ID: 103178)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6891942620277405
    2. 'for' → logprob: -0.9391942620277405
    3. ' itertools' → logprob: -4.064194202423096
    4. ' def' → logprob: -4.189194202423096
    5. 'range' → logprob: -4.314194202423096
    6. ' range' → logprob: -4.439194202423096
    7. ' nested' → logprob: -4.814194202423096
    8. 'def' → logprob: -4.814194202423096
    9. ' functools' → logprob: -5.189194202423096
    10. ' operator' → logprob: -5.439194202423096

Token 349: '.product' (ID: 21166)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35902565717697144
    2. ' for' → logprob: -1.3590257167816162
    3. '       ' → logprob: -3.234025716781616
    4. '   ' → logprob: -5.609025478363037
    5. 'def' → logprob: -7.484025478363037
    6. 'com' → logprob: -7.984025478363037
    7. '	for' → logprob: -9.484025955200195
    8. 'import' → logprob: -9.484025955200195
    9. '.for' → logprob: -9.609025955200195
    10. ',' → logprob: -9.859025955200195

Token 350: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19363947212696075
    2. 'for' → logprob: -2.3186395168304443
    3. ' for' → logprob: -2.5686395168304443
    4. '()' → logprob: -8.193639755249023
    5. ',' → logprob: -8.318639755249023
    6. ':' → logprob: -8.818639755249023
    7. '<|end|>' → logprob: -9.943639755249023
    8. ' itertools' → logprob: -10.193639755249023
    9. '   ' → logprob: -10.318639755249023
    10. '
' → logprob: -10.443639755249023

Token 351: ' ast' (ID: 12004)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -1.1637605428695679
    2. 'map' → logprob: -1.2887605428695679
    3. ' itertools' → logprob: -1.5387605428695679
    4. 'for' → logprob: -2.5387606620788574
    5. ' map' → logprob: -3.4137606620788574
    6. ' for' → logprob: -3.9137606620788574
    7. 'operator' → logprob: -4.288760662078857
    8. ' operator' → logprob: -4.538760662078857
    9. ' functools' → logprob: -4.788760662078857
    10. 'range' → logprob: -5.038760662078857

Token 352: 'uce' (ID: 20747)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.025533176958560944
    2. ' import' → logprob: -4.275533199310303
    3. 'ertools' → logprob: -4.650533199310303
    4. 'operator' → logprob: -7.400533199310303
    5. ' operator' → logprob: -8.150532722473145
    6. ' itertools' → logprob: -8.400532722473145
    7. '   ' → logprob: -8.775532722473145
    8. 'imat' → logprob: -9.150532722473145
    9. 'imator' → logprob: -9.775532722473145
    10. 'imports' → logprob: -10.025532722473145

Token 353: ' lambda' (ID: 27871)
  Prédit: '(it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(it' → logprob: -1.2549031972885132
    2. ' for' → logprob: -1.3799031972885132
    3. '       ' → logprob: -1.5049031972885132
    4. 'for' → logprob: -1.7549031972885132
    5. 'import' → logprob: -3.5049033164978027
    6. '   ' → logprob: -4.504903316497803
    7. ' (' → logprob: -4.629903316497803
    8. '(import' → logprob: -5.504903316497803
    9. '(self' → logprob: -5.629903316497803
    10. '(range' → logprob: -5.879903316497803

Token 354: ' trip' (ID: 8831)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03212998807430267
    2. '
' → logprob: -3.657130002975464
    3. '   ' → logprob: -7.032129764556885
    4. '(' → logprob: -7.407129764556885
    5. ' for' → logprob: -7.532129764556885
    6. ':' → logprob: -7.657129764556885
    7. 'import' → logprob: -7.657129764556885
    8. ' (' → logprob: -8.032130241394043
    9. '        
' → logprob: -8.032130241394043
    10. '(self' → logprob: -8.157130241394043

Token 355: 'lement' (ID: 1254)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.22707675397396088
    2. 'let' → logprob: -1.977076768875122
    3. 'les' → logprob: -3.102076768875122
    4. 'lets' → logprob: -4.227076530456543
    5. 'lete' → logprob: -6.477076530456543
    6. 'lette' → logprob: -6.727076530456543
    7. 'l' → logprob: -7.602076530456543
    8. 'ple' → logprob: -7.727076530456543
    9. 'leton' → logprob: -7.727076530456543
    10. 'product' → logprob: -8.727076530456543

Token 356: ' imb' (ID: 63592)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8185891509056091
    2. 'product' → logprob: -2.068589210510254
    3. '(lambda' → logprob: -2.568589210510254
    4. 'map' → logprob: -3.068589210510254
    5. ' import' → logprob: -3.068589210510254
    6. ' product' → logprob: -3.318589210510254
    7. 'def' → logprob: -3.443589210510254
    8. '       ' → logprob: -3.818589210510254
    9. 'cart' → logprob: -3.943589210510254
    10. 'for' → logprob: -4.193589210510254

Token 357: 'ri' (ID: 872)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7023693919181824
    2. 'edded' → logprob: -1.3273694515228271
    3. 'ed' → logprob: -2.577369451522827
    4. 'def' → logprob: -2.702369451522827
    5. 'da' → logprob: -3.202369451522827
    6. 'edding' → logprob: -4.702369213104248
    7. 'éd' → logprob: -4.952369213104248
    8. 'é' → logprob: -5.077369213104248
    9. 'édé' → logprob: -5.202369213104248
    10. 'de' → logprob: -5.702369213104248

Token 358: 'quée' (ID: 63772)
  Prédit: 'quée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quée' → logprob: -1.2537120580673218
    2. 'ée' → logprob: -1.3787120580673218
    3. 'é' → logprob: -1.7537120580673218
    4. 'ed' → logprob: -2.1287121772766113
    5. 'iqué' → logprob: -2.5037121772766113
    6. 'qué' → logprob: -3.6287121772766113
    7. 'ic' → logprob: -4.003712177276611
    8. 'icated' → logprob: -5.003712177276611
    9. 'éd' → logprob: -5.628712177276611
    10. 'd' → logprob: -5.753712177276611

Token 359: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0046399300917983055
    2. '   ' → logprob: -6.879640102386475
    3. '
' → logprob: -7.004640102386475
    4. 'import' → logprob: -7.254640102386475
    5. ' for' → logprob: -7.629640102386475
    6. 'for' → logprob: -7.754640102386475
    7. '()' → logprob: -7.879640102386475
    8. '(' → logprob: -9.004639625549316
    9. ',' → logprob: -9.379639625549316
    10. ':' → logprob: -9.504639625549316

Token 360: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08224797993898392
    2. 'for' → logprob: -3.0822479724884033
    3. ' for' → logprob: -3.4572479724884033
    4. '   ' → logprob: -7.207248210906982
    5. '
' → logprob: -7.957248210906982
    6. '()' → logprob: -9.207247734069824
    7. '        
' → logprob: -9.582247734069824
    8. ')' → logprob: -9.707247734069824
    9. 'def' → logprob: -10.082247734069824
    10. '(
' → logprob: -10.457247734069824

Token 361: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01647101528942585
    2. '       ' → logprob: -4.391470909118652
    3. ' for' → logprob: -5.766470909118652
    4. 'def' → logprob: -8.266470909118652
    5. 'list' → logprob: -8.391470909118652
    6. 'self' → logprob: -9.016470909118652
    7. 'dist' → logprob: -9.516470909118652
    8. '   ' → logprob: -10.391470909118652
    9. 'i' → logprob: -10.766470909118652
    10. 'from' → logprob: -12.016470909118652

Token 362: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.36882221698760986
    2. 'k' → logprob: -1.3688222169876099
    3. ' i' → logprob: -3.8688220977783203
    4. '(i' → logprob: -4.49382209777832
    5. ' k' → logprob: -4.86882209777832
    6. '(k' → logprob: -5.24382209777832
    7. '_i' → logprob: -6.49382209777832
    8. '_,' → logprob: -6.86882209777832
    9. '_' → logprob: -6.99382209777832
    10. 'u' → logprob: -7.11882209777832

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4877118468284607
    2. ' in' → logprob: -1.1127119064331055
    3. 'in' → logprob: -2.9877119064331055
    4. ' ,' → logprob: -5.1127119064331055
    5. 'n' → logprob: -8.237711906433105
    6. ',j' → logprob: -8.612711906433105
    7. 's' → logprob: -8.987711906433105
    8. ',n' → logprob: -9.362711906433105
    9. ',in' → logprob: -9.612711906433105
    10. ' ' → logprob: -10.487711906433105

Token 364: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.23352181911468506
    2. 'k' → logprob: -1.608521819114685
    3. ' j' → logprob: -5.358521938323975
    4. '(k' → logprob: -6.733521938323975
    5. ' k' → logprob: -6.983521938323975
    6. '(j' → logprob: -7.608521938323975
    7. '(' → logprob: -9.108521461486816
    8. '_,' → logprob: -9.483521461486816
    9. ',' → logprob: -9.733521461486816
    10. 'for' → logprob: -9.858521461486816

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.028478223830461502
    2. ',k' → logprob: -4.153478145599365
    3. ' in' → logprob: -5.153478145599365
    4. 'in' → logprob: -5.278478145599365
    5. 'k' → logprob: -6.778478145599365
    6. ' ,' → logprob: -8.153478622436523
    7. ',_' → logprob: -11.028478622436523
    8. ',in' → logprob: -11.403478622436523
    9. ',n' → logprob: -11.778478622436523
    10. ',l' → logprob: -12.653478622436523

Token 366: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -9.014684110297821e-06
    2. ' k' → logprob: -11.750008583068848
    3. 'l' → logprob: -15.375008583068848
    4. 'm' → logprob: -16.125009536743164
    5. 'g' → logprob: -16.375009536743164
    6. '   ' → logprob: -16.625009536743164
    7. 'z' → logprob: -16.625009536743164
    8. 'p' → logprob: -16.750009536743164
    9. 't' → logprob: -17.000009536743164
    10. 'c' → logprob: -17.000009536743164

Token 367: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.033654917031526566
    2. 'in' → logprob: -3.4086549282073975
    3. ' ' → logprob: -12.408655166625977
    4. '   ' → logprob: -13.533655166625977
    5. '  ' → logprob: -14.158655166625977
    6. ',' → logprob: -14.533655166625977
    7. '	in' → logprob: -15.033655166625977
    8. '    ' → logprob: -15.158655166625977
    9. 'import' → logprob: -15.283655166625977
    10. 'In' → logprob: -15.408655166625977

Token 368: ' itertools' (ID: 103178)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.008633122779428959
    2. ' itertools' → logprob: -4.758633136749268
    3. '   ' → logprob: -11.88363265991211
    4. '  ' → logprob: -12.50863265991211
    5. 'iter' → logprob: -13.00863265991211
    6. ' ' → logprob: -13.50863265991211
    7. '(it' → logprob: -13.63363265991211
    8. ' it' → logprob: -14.00863265991211
    9. '    ' → logprob: -14.50863265991211
    10. '	it' → logprob: -14.88363265991211

Token 369: '.product' (ID: 21166)
  Prédit: '.product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.product' → logprob: -8.029847231227905e-05
    2. 'product' → logprob: -9.625080108642578
    3. '.' → logprob: -11.375080108642578
    4. ' product' → logprob: -13.750080108642578
    5. 'import' → logprob: -14.000080108642578
    6. ' .' → logprob: -14.625080108642578
    7. '	product' → logprob: -16.375080108642578
    8. '.com' → logprob: -16.625080108642578
    9. '(product' → logprob: -16.625080108642578
    10. '_product' → logprob: -17.000080108642578

Token 370: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -4.723352049040841e-06
    2. '(' → logprob: -12.500004768371582
    3. 'range' → logprob: -14.000004768371582
    4. '(
' → logprob: -17.500003814697266
    5. '((' → logprob: -18.875003814697266
    6. '(map' → logprob: -19.000003814697266
    7. ' range' → logprob: -19.375003814697266
    8. ' (' → logprob: -19.500003814697266
    9. '(self' → logprob: -20.375003814697266
    10. '	range' → logprob: -20.500003814697266

Token 371: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3136206865310669
    2. '(self' → logprob: -1.313620686531067
    3. '1' → logprob: -8.188620567321777
    4. 'self' → logprob: -9.688620567321777
    5. '(
' → logprob: -11.438620567321777
    6. '(len' → logprob: -12.938620567321777
    7. ' (' → logprob: -13.563620567321777
    8. '   ' → logprob: -13.813620567321777
    9. '
' → logprob: -14.688620567321777
    10. ' self' → logprob: -14.813620567321777

Token 372: '.E' (ID: 9032)
  Prédit: '.E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.E' → logprob: -6.659005157416686e-05
    2. '.V' → logprob: -10.500066757202148
    3. '(E' → logprob: -10.625066757202148
    4. '(' → logprob: -11.875066757202148
    5. 'E' → logprob: -12.250066757202148
    6. 'self' → logprob: -13.125066757202148
    7. ',E' → logprob: -14.875066757202148
    8. '1' → logprob: -15.875066757202148
    9. '   ' → logprob: -16.12506675720215
    10. '.' → logprob: -16.37506675720215

Token 373: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019294772297143936
    2. '(),' → logprob: -4.269294738769531
    3. '),' → logprob: -6.644294738769531
    4. ' ,' → logprob: -6.894294738769531
    5. ',self' → logprob: -6.894294738769531
    6. '   ' → logprob: -8.019294738769531
    7. 'self' → logprob: -8.019294738769531
    8. '       ' → logprob: -8.144294738769531
    9. '           ' → logprob: -8.394294738769531
    10. '):
' → logprob: -8.894294738769531

Token 374: ' repeat' (ID: 22962)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0005681642796844244
    2. ' range' → logprob: -7.750568389892578
    3. 'self' → logprob: -9.375568389892578
    4. '                   ' → logprob: -11.625568389892578
    5. '   ' → logprob: -11.750568389892578
    6. '                       ' → logprob: -12.000568389892578
    7. '                         ' → logprob: -12.750568389892578
    8. '                           ' → logprob: -12.750568389892578
    9. '               ' → logprob: -12.750568389892578
    10. '                     ' → logprob: -12.875568389892578

Token 375: '=' (ID: 28)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0008613191312178969
    2. '=' → logprob: -7.375861167907715
    3. '(' → logprob: -8.375861167907715
    4. ' ' → logprob: -13.375861167907715
    5. '           ' → logprob: -13.875861167907715
    6. '   ' → logprob: -14.375861167907715
    7. '                   ' → logprob: -15.250861167907715
    8. '  ' → logprob: -15.375861167907715
    9. '                       ' → logprob: -15.375861167907715
    10. '```' → logprob: -15.750861167907715

Token 376: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.37500286102295
    3. '   ' → logprob: -14.12500286102295
    4. '           ' → logprob: -16.250001907348633
    5. '  ' → logprob: -17.625001907348633
    6. '```' → logprob: -17.625001907348633
    7. '               ' → logprob: -17.750001907348633
    8. '                   ' → logprob: -17.875001907348633
    9. '       ' → logprob: -18.125001907348633
    10. '                       ' → logprob: -18.500001907348633

Token 377: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2071942239999771
    2. '):' → logprob: -1.832194209098816
    3. ':' → logprob: -3.8321943283081055
    4. ':
' → logprob: -5.8321943283081055
    5. '       ' → logprob: -6.8321943283081055
    6. '           ' → logprob: -7.3321943283081055
    7. '):
' → logprob: -8.082194328308105
    8. '   ' → logprob: -8.207194328308105
    9. '():
' → logprob: -9.582194328308105
    10. ' ):
' → logprob: -10.207194328308105

Token 378: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009642407298088074
    2. ' if' → logprob: -5.134642601013184
    3. '               ' → logprob: -6.384642601013184
    4. ':' → logprob: -7.134642601013184
    5. 'if' → logprob: -8.259642601013184
    6. '       ' → logprob: -8.259642601013184
    7. '            
' → logprob: -9.134642601013184
    8. ':
' → logprob: -9.634642601013184
    9. '	       ' → logprob: -9.634642601013184
    10. '   ' → logprob: -9.634642601013184

Token 379: ' self' (ID: 1051)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8605509996414185
    2. '           ' → logprob: -1.1105509996414185
    3. 'self' (adapté à ' self') → logprob: -2.110550880432129
    4. ' if' → logprob: -2.860550880432129
    5. 'operator' → logprob: -3.485550880432129
    6. '               ' → logprob: -4.110550880432129
    7. ' self' → logprob: -4.360550880432129
    8. ' operator' → logprob: -5.610550880432129
    9. 'new' → logprob: -6.735550880432129
    10. 'lambda' → logprob: -6.985550880432129

Token 380: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.0025473623536527157
    2. '.' → logprob: -7.252547264099121
    3. 'G' → logprob: -7.877547264099121
    4. 'operator' → logprob: -8.002547264099121
    5. '.operator' → logprob: -8.127547264099121
    6. '.set' → logprob: -8.252547264099121
    7. '=' → logprob: -8.377547264099121
    8. 'if' → logprob: -9.502547264099121
    9. '.g' → logprob: -10.002547264099121
    10. ':' → logprob: -11.002547264099121

Token 381: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0792456716299057
    2. '[j' → logprob: -2.5792455673217773
    3. '[k' → logprob: -7.954245567321777
    4. '[' → logprob: -12.454245567321777
    5. ' [' → logprob: -15.704245567321777
    6. '[
' → logprob: -15.829245567321777
    7. '[min' → logprob: -16.329246520996094
    8. '=' → logprob: -16.704246520996094
    9. '[self' → logprob: -16.954246520996094
    10. 'operator' → logprob: -17.579246520996094

Token 382: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003969878423959017
    2. '[j' → logprob: -5.628969669342041
    3. ']' → logprob: -8.6289701461792
    4. ' ][' → logprob: -9.6289701461792
    5. ',j' → logprob: -10.2539701461792
    6. ')[' → logprob: -11.0039701461792
    7. '],' → logprob: -11.2539701461792
    8. '[i' → logprob: -11.5039701461792
    9. '[k' → logprob: -11.5039701461792
    10. ',' → logprob: -11.7539701461792

Token 383: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0021876145619899035
    2. 'k' → logprob: -6.127187728881836
    3. ' j' → logprob: -13.002187728881836
    4. '	j' → logprob: -15.252187728881836
    5. '[j' → logprob: -17.002187728881836
    6. '
' → logprob: -17.252187728881836
    7. '
' → logprob: -17.752187728881836
    8. ']' → logprob: -17.877187728881836
    9. '   ' → logprob: -18.252187728881836
    10. ' ' → logprob: -18.377187728881836

Token 384: '],' (ID: 2155)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04805045202374458
    2. ' =' → logprob: -3.1730504035949707
    3. '>' → logprob: -5.423050403594971
    4. ')' → logprob: -7.923050403594971
    5. ']' → logprob: -9.548050880432129
    6. '=min' → logprob: -9.798050880432129
    7. ')=' → logprob: -10.423050880432129
    8. ']=' → logprob: -10.673050880432129
    9. ' >' → logprob: -10.923050880432129
    10. '>=' → logprob: -11.048050880432129

Token 385: ' _' (ID: 1175)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00015908108616713434
    2. ' min' → logprob: -8.75015926361084
    3. '	min' → logprob: -14.62515926361084
    4. '   ' → logprob: -17.125158309936523
    5. '(min' → logprob: -17.500158309936523
    6. '
' → logprob: -18.125158309936523
    7. '           ' → logprob: -18.625158309936523
    8. 'operator' → logprob: -18.875158309936523
    9. '  ' → logprob: -19.125158309936523
    10. ' ' → logprob: -19.625158309936523

Token 386: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005933297798037529
    2. ' =' → logprob: -5.1309332847595215
    3. 'operator' → logprob: -13.13093376159668
    4. ',' → logprob: -13.75593376159668
    5. '=min' → logprob: -14.25593376159668
    6. 'min' → logprob: -14.88093376159668
    7. '=
' → logprob: -15.25593376159668
    8. ' ' → logprob: -16.50593376159668
    9. 'new' → logprob: -16.63093376159668
    10. '.=' → logprob: -16.88093376159668

Token 387: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.034994207322597504
    2. '(min' → logprob: -3.409994125366211
    3. '(' → logprob: -7.784994125366211
    4. 'operator' → logprob: -8.159994125366211
    5. 'fun' → logprob: -8.534994125366211
    6. '(
' → logprob: -9.034994125366211
    7. '(lambda' → logprob: -9.534994125366211
    8. '(operator' → logprob: -9.534994125366211
    9. '(f' → logprob: -9.659994125366211
    10. ' min' → logprob: -9.784994125366211

Token 388: '(
' (ID: 1607)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.03487689420580864
    2. '(' → logprob: -3.909876823425293
    3. '(
' → logprob: -4.284876823425293
    4. '[(' → logprob: -8.284876823425293
    5. '([(' → logprob: -9.159876823425293
    6. '([' → logprob: -10.534876823425293
    7. '([
' → logprob: -11.159876823425293
    8. '(self' → logprob: -11.159876823425293
    9. '(lambda' → logprob: -11.284876823425293
    10. '(zip' → logprob: -11.659876823425293

Token 389: '               ' (ID: 506)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -1.2654173374176025
    2. '((' → logprob: -1.3904173374176025
    3. '(
' → logprob: -1.6404173374176025
    4. '(self' → logprob: -2.1404173374176025
    5. '(operator' → logprob: -2.6404173374176025
    6. '(' → logprob: -2.7654173374176025
    7. '[
' → logprob: -4.890417098999023
    8. '(lambda' → logprob: -5.140417098999023
    9. '(zip' → logprob: -5.890417098999023
    10. '(key' → logprob: -6.765417098999023

Token 390: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11283603310585022
    2. '[(' → logprob: -2.9878361225128174
    3. '((' → logprob: -4.237835884094238
    4. '(' (adapté à ' (') → logprob: -4.362835884094238
    5. '(
' → logprob: -4.487835884094238
    6. '(operator' → logprob: -4.487835884094238
    7. '(lambda' → logprob: -6.612835884094238
    8. '[
' → logprob: -6.737835884094238
    9. '[' → logprob: -7.487835884094238
    10. '(zip' → logprob: -7.487835884094238

Token 391: 'self' (ID: 1156)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.044058311730623245
    2. 'self' → logprob: -3.169058322906494
    3. ' (' → logprob: -7.669058322906494
    4. '(
' → logprob: -8.544057846069336
    5. '(' → logprob: -8.794057846069336
    6. '   ' → logprob: -9.294057846069336
    7. ' self' → logprob: -10.419057846069336
    8. '(lambda' → logprob: -10.419057846069336
    9. '((' → logprob: -10.794057846069336
    10. '(operator' → logprob: -11.044057846069336

Token 392: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.00024763107649050653
    2. 'self' → logprob: -8.750247955322266
    3. 'G' → logprob: -9.375247955322266
    4. '.g' → logprob: -13.500247955322266
    5. '[' → logprob: -14.875247955322266
    6. '	G' → logprob: -14.875247955322266
    7. ')' → logprob: -15.375247955322266
    8. '.' → logprob: -15.625247955322266
    9. '[self' → logprob: -15.625247955322266
    10. '[G' → logprob: -15.750247955322266

Token 393: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005041812546551228
    2. 'i' → logprob: -7.750504016876221
    3. '[j' → logprob: -10.375504493713379
    4. '[k' → logprob: -11.000504493713379
    5. '[' → logprob: -11.625504493713379
    6. '(i' → logprob: -12.875504493713379
    7. ' i' → logprob: -13.250504493713379
    8. ',i' → logprob: -13.375504493713379
    9. ')' → logprob: -13.750504493713379
    10. '[I' → logprob: -13.875504493713379

Token 394: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004477354697883129
    2. '[j' → logprob: -5.879477500915527
    3. '[k' → logprob: -6.629477500915527
    4. '[i' → logprob: -8.504477500915527
    5. ']' → logprob: -9.879477500915527
    6. ' ][' → logprob: -11.004477500915527
    7. '[' → logprob: -11.129477500915527
    8. 'k' → logprob: -11.379477500915527
    9. '[m' → logprob: -11.879477500915527
    10. '   ' → logprob: -11.879477500915527

Token 395: 'j' (ID: 73)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10085004568099976
    2. 'j' → logprob: -2.3508501052856445
    3. 'i' → logprob: -7.7258501052856445
    4. '[k' → logprob: -9.475850105285645
    5. '[j' → logprob: -9.475850105285645
    6. ' k' → logprob: -11.350850105285645
    7. '   ' → logprob: -11.600850105285645
    8. ' j' → logprob: -12.475850105285645
    9. ' ' → logprob: -12.600850105285645
    10. ']' → logprob: -12.725850105285645

Token 396: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018473666859790683
    2. ' ,' → logprob: -7.126847267150879
    3. 'self' → logprob: -7.876847267150879
    4. ',self' → logprob: -8.251847267150879
    5. ',
' → logprob: -8.376847267150879
    6. '               ' → logprob: -10.001847267150879
    7. '),' → logprob: -10.001847267150879
    8. '                   ' → logprob: -10.626847267150879
    9. '           ' → logprob: -10.876847267150879
    10. '   ' → logprob: -11.251847267150879

Token 397: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18604005873203278
    2. '(' → logprob: -2.811040163040161
    3. 'self' → logprob: -3.186040163040161
    4. 'None' → logprob: -3.436040163040161
    5. '1' → logprob: -4.186039924621582
    6. '(i' → logprob: -5.186039924621582
    7. 'lambda' → logprob: -5.811039924621582
    8. '(self' → logprob: -6.186039924621582
    9. 'False' → logprob: -6.311039924621582
    10. ' ' → logprob: -6.311039924621582

Token 398: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5938490033149719
    2. 'self' → logprob: -1.3438489437103271
    3. '0' → logprob: -2.218848943710327
    4. '(self' → logprob: -3.218848943710327
    5. '(i' → logprob: -4.468849182128906
    6. 'None' → logprob: -4.843849182128906
    7. '1' → logprob: -4.843849182128906
    8. 'lambda' → logprob: -6.218849182128906
    9. '(lambda' → logprob: -6.468849182128906
    10. 'operator' → logprob: -6.718849182128906

Token 399: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.29066041111946106
    2. ')' → logprob: -2.0406603813171387
    3. '),' → logprob: -2.1656603813171387
    4. '               ' → logprob: -5.790660381317139
    5. ')
' → logprob: -6.415660381317139
    6. '),(' → logprob: -6.790660381317139
    7. ' if' → logprob: -8.165660858154297
    8. 'if' → logprob: -8.165660858154297
    9. '),
' → logprob: -8.290660858154297
    10. '),

' → logprob: -8.290660858154297

Token 400: '               ' (ID: 506)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1660483032464981
    2. ' (' → logprob: -1.916048288345337
    3. '               ' → logprob: -5.166048526763916
    4. '              ' → logprob: -10.166048049926758
    5. '(' → logprob: -11.416048049926758
    6. '                   ' → logprob: -11.541048049926758
    7. '                ' → logprob: -11.791048049926758
    8. 'self' → logprob: -12.166048049926758
    9. '(key' → logprob: -12.541048049926758
    10. ' self' → logprob: -12.666048049926758

Token 401: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011178091168403625
    2. ' (' → logprob: -4.511178016662598
    3. '(operator' → logprob: -9.761178016662598
    4. '   ' → logprob: -11.261178016662598
    5. '(this' → logprob: -11.261178016662598
    6. '(' (adapté à ' (') → logprob: -11.261178016662598
    7. '((' → logprob: -11.761178016662598
    8. '               ' → logprob: -12.136178016662598
    9. ' ' → logprob: -12.261178016662598
    10. '(i' → logprob: -12.386178016662598

Token 402: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18738318979740143
    2. '(self' → logprob: -1.8123831748962402
    3. ' self' → logprob: -5.43738317489624
    4. ' (' → logprob: -5.81238317489624
    5. 'operator' → logprob: -9.562383651733398
    6. '   ' → logprob: -9.937383651733398
    7. '(' → logprob: -10.312383651733398
    8. '(operator' → logprob: -10.562383651733398
    9. '((' → logprob: -11.062383651733398
    10. '(
' → logprob: -11.312383651733398

Token 403: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.02784019522368908
    2. 'self' → logprob: -4.0278401374816895
    3. 'G' → logprob: -4.6528401374816895
    4. '[self' → logprob: -9.527840614318848
    5. '[i' → logprob: -11.527840614318848
    6. '[' → logprob: -11.777840614318848
    7. 'i' → logprob: -12.152840614318848
    8. ' self' → logprob: -12.902840614318848
    9. '
' → logprob: -13.152840614318848
    10. '_G' → logprob: -13.652840614318848

Token 404: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0014632153324782848
    2. 'i' → logprob: -6.626463413238525
    3. '[self' → logprob: -9.876462936401367
    4. 'G' → logprob: -10.876462936401367
    5. '[k' → logprob: -11.376462936401367
    6. '[G' → logprob: -11.501462936401367
    7. 'self' → logprob: -11.751462936401367
    8. 'I' → logprob: -12.251462936401367
    9. '][' → logprob: -12.376462936401367
    10. '   ' → logprob: -12.876462936401367

Token 405: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001445353147573769
    2. '[k' → logprob: -6.751445293426514
    3. ']' → logprob: -8.751445770263672
    4. 'k' → logprob: -10.251445770263672
    5. '[' → logprob: -11.126445770263672
    6. '[i' → logprob: -11.251445770263672
    7. ' ][' → logprob: -11.376445770263672
    8. '][_' → logprob: -11.751445770263672
    9. '}[' → logprob: -12.001445770263672
    10. ')[' → logprob: -12.251445770263672

Token 406: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.054500666621607e-06
    2. '[k' → logprob: -13.00000286102295
    3. ' k' → logprob: -15.25000286102295
    4. '   ' → logprob: -15.87500286102295
    5. 'i' → logprob: -15.87500286102295
    6. ' ' → logprob: -16.250003814697266
    7. '
' → logprob: -16.500003814697266
    8. 'j' → logprob: -17.000003814697266
    9. 'self' → logprob: -18.500003814697266
    10. '  ' → logprob: -18.500003814697266

Token 407: ']+' (ID: 15344)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030663272365927696
    2. ']+' → logprob: -3.530663251876831
    3. '],' → logprob: -7.03066349029541
    4. '[' → logprob: -12.15566349029541
    5. 'self' → logprob: -12.28066349029541
    6. ' ]' → logprob: -12.90566349029541
    7. 'k' → logprob: -12.90566349029541
    8. '+' → logprob: -13.03066349029541
    9. ']
' → logprob: -13.03066349029541
    10. '][' → logprob: -13.03066349029541

Token 408: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001936962129548192
    2. ' self' → logprob: -6.251936912536621
    3. '[self' → logprob: -13.126936912536621
    4. '(self' → logprob: -13.376936912536621
    5. '           ' → logprob: -13.501936912536621
    6. '               ' → logprob: -14.251936912536621
    7. '                   ' → logprob: -14.626936912536621
    8. '       ' → logprob: -15.126936912536621
    9. '   ' → logprob: -15.376936912536621
    10. '
' → logprob: -15.376936912536621

Token 409: '.G' (ID: 3773)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.44213810563087463
    2. 'k' → logprob: -1.3171380758285522
    3. 'G' → logprob: -2.442138195037842
    4. '.G' → logprob: -6.192138195037842
    5. '.k' → logprob: -8.567137718200684
    6. 'g' → logprob: -10.192137718200684
    7. '(k' → logprob: -10.692137718200684
    8. '{k' → logprob: -10.692137718200684
    9. '[G' → logprob: -10.942137718200684
    10. '[' → logprob: -10.942137718200684

Token 410: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0006278486107476056
    2. 'k' → logprob: -7.3756279945373535
    3. '][' → logprob: -14.875627517700195
    4. '[' → logprob: -14.875627517700195
    5. '[j' → logprob: -16.250627517700195
    6. '[
' → logprob: -16.375627517700195
    7. '   ' → logprob: -16.375627517700195
    8. '[i' → logprob: -16.625627517700195
    9. '```' → logprob: -16.625627517700195
    10. '{k' → logprob: -16.750627517700195

Token 411: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.003640107112005353
    2. '[j' → logprob: -5.628640174865723
    3. 'j' → logprob: -10.378640174865723
    4. '[k' → logprob: -12.128640174865723
    5. ' ][' → logprob: -13.753640174865723
    6. '[' → logprob: -14.003640174865723
    7. ']' → logprob: -14.253640174865723
    8. 'k' → logprob: -14.628640174865723
    9. '
' → logprob: -15.628640174865723
    10. '   ' → logprob: -16.628639221191406

Token 412: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -8.840432565193623e-05
    2. '[j' → logprob: -9.375088691711426
    3. ' j' → logprob: -12.625088691711426
    4. '
' → logprob: -16.37508773803711
    5. '	j' → logprob: -16.75008773803711
    6. '_j' → logprob: -17.87508773803711
    7. '   ' → logprob: -18.75008773803711
    8. '$j' → logprob: -19.37508773803711
    9. '
' → logprob: -19.50008773803711
    10. ' ' → logprob: -19.50008773803711

Token 413: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000250491953920573
    2. ' ,' → logprob: -8.500250816345215
    3. '),' → logprob: -10.125250816345215
    4. '],' → logprob: -12.625250816345215
    5. ')' → logprob: -13.875250816345215
    6. '1' → logprob: -14.625250816345215
    7. ',
' → logprob: -14.875250816345215
    8. '   ' → logprob: -15.125250816345215
    9. ',),' → logprob: -15.625250816345215
    10. '},' → logprob: -15.750250816345215

Token 414: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005512165371328592
    2. ' ' → logprob: -5.380512237548828
    3. '0' → logprob: -7.130512237548828
    4. '-' → logprob: -10.005512237548828
    5. '   ' → logprob: -10.880512237548828
    6. '  ' → logprob: -11.380512237548828
    7. '    ' → logprob: -13.005512237548828
    8. 'None' → logprob: -13.130512237548828
    9. 'lambda' → logprob: -13.505512237548828
    10. ' -' → logprob: -13.505512237548828

Token 415: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017669318476691842
    2. '0' → logprob: -6.501767158508301
    3. ' ' → logprob: -8.2517671585083
    4. '-' → logprob: -13.5017671585083
    5. '   ' → logprob: -14.3767671585083
    6. '  ' → logprob: -14.7517671585083
    7. 'self' → logprob: -15.5017671585083
    8. 'lambda' → logprob: -15.5017671585083
    9. 'None' → logprob: -16.001766204833984
    10. '(' → logprob: -16.126766204833984

Token 416: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009893421083688736
    2. ')
' → logprob: -7.0009894371032715
    3. '))' → logprob: -9.750988960266113
    4. '           ' → logprob: -11.750988960266113
    5. ' )' → logprob: -12.250988960266113
    6. '),' → logprob: -12.625988960266113
    7. '   ' → logprob: -14.000988960266113
    8. '               ' → logprob: -14.250988960266113
    9. '),
' → logprob: -14.750988960266113
    10. '       ' → logprob: -14.875988960266113

Token 417: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21201132237911224
    2. 'key' → logprob: -1.7120113372802734
    3. ' key' → logprob: -4.962011337280273
    4. ')
' → logprob: -6.712011337280273
    5. 'sep' → logprob: -6.837011337280273
    6. ')[' → logprob: -7.837011337280273
    7. '           ' → logprob: -8.712011337280273
    8. ' )' → logprob: -9.087011337280273
    9. '0' → logprob: -9.087011337280273
    10. '   ' → logprob: -9.462011337280273

Token 418: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' (adapté à ' key') → logprob: -0.0002141458389814943
    2. 'lambda' → logprob: -9.500214576721191
    3. ')' → logprob: -9.875214576721191
    4. ')
' → logprob: -10.000214576721191
    5. 'operator' → logprob: -11.250214576721191
    6. '[key' → logprob: -12.125214576721191
    7. 'reverse' → logprob: -12.250214576721191
    8. ' key' → logprob: -12.375214576721191
    9. '(key' → logprob: -12.500214576721191
    10. '   ' → logprob: -13.125214576721191

Token 419: '=lambda' (ID: 64865)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.062032997608184814
    2. '=lambda' → logprob: -2.81203293800354
    3. 'operator' → logprob: -9.812032699584961
    4. '=item' → logprob: -11.562032699584961
    5. 'lambda' → logprob: -14.812032699584961
    6. '(operator' → logprob: -15.312032699584961
    7. '	operator' → logprob: -15.437032699584961
    8. ' =' → logprob: -16.68703269958496
    9. ' operator' → logprob: -16.68703269958496
    10. '=_' → logprob: -16.68703269958496

Token 420: ' x' (ID: 1215)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.313621461391449
    2. 'operator' → logprob: -1.3136215209960938
    3. ' lambda' → logprob: -8.063621520996094
    4. ' operator' → logprob: -11.063621520996094
    5. '=lambda' → logprob: -11.438621520996094
    6. '(lambda' → logprob: -11.813621520996094
    7. 'item' → logprob: -11.938621520996094
    8. '(operator' → logprob: -13.313621520996094
    9. '_lambda' → logprob: -13.813621520996094
    10. '	operator' → logprob: -14.063621520996094

Token 421: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31342020630836487
    2. ':x' → logprob: -1.3134201765060425
    3. ' :' → logprob: -8.938420295715332
    4. 'x' → logprob: -11.313420295715332
    5. ':_' → logprob: -11.688420295715332
    6. ':
' → logprob: -12.688420295715332
    7. ':item' → logprob: -13.313420295715332
    8. 'operator' → logprob: -14.938420295715332
    9. ':int' → logprob: -15.188420295715332
    10. '   ' → logprob: -15.313420295715332

Token 422: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0016493528382852674
    2. 'operator' → logprob: -6.501649379730225
    3. ' x' → logprob: -8.876648902893066
    4. ' operator' → logprob: -12.126648902893066
    5. '_operator' → logprob: -14.501648902893066
    6. '_' → logprob: -14.626648902893066
    7. 'lambda' → logprob: -14.876648902893066
    8. '0' → logprob: -15.001648902893066
    9. '(operator' → logprob: -15.251648902893066
    10. '_x' → logprob: -16.501649856567383

Token 423: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05500629544258118
    2. 'x' → logprob: -2.930006265640259
    3. '0' → logprob: -9.68000602722168
    4. '[x' → logprob: -10.55500602722168
    5. ' x' → logprob: -10.93000602722168
    6. ':x' → logprob: -11.80500602722168
    7. '(x' → logprob: -12.80500602722168
    8. '	x' → logprob: -13.68000602722168
    9. ':' → logprob: -14.05500602722168
    10. '[
' → logprob: -14.05500602722168

Token 424: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.250000953674316
    3. 'x' → logprob: -14.750000953674316
    4. '1' → logprob: -16.250001907348633
    5. '[' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '
' → logprob: -18.625001907348633
    8. '۰' → logprob: -19.062501907348633
    9. ' x' → logprob: -19.750001907348633
    10. '<x' → logprob: -19.937501907348633

Token 425: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023643692838959396
    2. '           ' → logprob: -9.250236511230469
    3. ')
' → logprob: -10.375236511230469
    4. '               ' → logprob: -10.500236511230469
    5. '       ' → logprob: -11.125236511230469
    6. '[' → logprob: -11.125236511230469
    7. ' )' → logprob: -11.500236511230469
    8. ')[' → logprob: -11.500236511230469
    9. '
' → logprob: -11.625236511230469
    10. '   ' → logprob: -11.750236511230469

Token 426: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002991160727106035
    2. '           ' → logprob: -8.500299453735352
    3. ')
' → logprob: -9.750299453735352
    4. '       ' → logprob: -11.250299453735352
    5. '               ' → logprob: -11.500299453735352
    6. '   ' → logprob: -11.625299453735352
    7. ' )' → logprob: -12.625299453735352
    8. '))' → logprob: -14.750299453735352
    9. '),' → logprob: -14.875299453735352
    10. '                   ' → logprob: -15.125299453735352

Token 427: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0022969208657741547
    2. '       ' → logprob: -6.5022969245910645
    3. '           ' → logprob: -7.2522969245910645
    4. ')
' (adapté à ' )
') → logprob: -9.502296447753906
    5. '   ' → logprob: -11.877296447753906
    6. ' )' → logprob: -13.252296447753906
    7. '               ' → logprob: -13.752296447753906
    8. '))' → logprob: -15.252296447753906
    9. '          ' → logprob: -15.502296447753906
    10. '),' → logprob: -15.877296447753906

Token 428: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 429: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 430: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.42376473546028137
    2. ' self' → logprob: -1.923764705657959
    3. '_' → logprob: -2.548764705657959
    4. 'x' → logprob: -2.798764705657959
    5. ' x' → logprob: -4.173764705657959
    6. '(self' → logprob: -4.548764705657959
    7. ' (' → logprob: -4.548764705657959
    8. '(' → logprob: -5.048764705657959
    9. ' _' → logprob: -5.298764705657959
    10. '(x' → logprob: -5.798764705657959

Token 431: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -4.23917081207037e-05
    2. '[' → logprob: -11.875041961669922
    3. '.V' → logprob: -12.125041961669922
    4. ' .' → logprob: -12.250041961669922
    5. 'G' → logprob: -12.375041961669922
    6. 'self' → logprob: -12.625041961669922
    7. '_G' → logprob: -12.750041961669922
    8. '.g' → logprob: -12.750041961669922
    9. '.' → logprob: -13.500041961669922
    10. '.I' → logprob: -13.750041961669922

Token 432: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.935296834039036e-06
    2. 'i' → logprob: -13.50000286102295
    3. '[k' → logprob: -14.25000286102295
    4. '[' → logprob: -15.00000286102295
    5. '[j' → logprob: -15.37500286102295
    6. ' [' → logprob: -16.125003814697266
    7. ' i' → logprob: -17.125003814697266
    8. '[I' → logprob: -17.125003814697266
    9. '```' → logprob: -17.500003814697266
    10. ' ' → logprob: -17.625003814697266

Token 433: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.016728248447179794
    2. '[i' → logprob: -4.266728401184082
    3. '[j' → logprob: -6.141728401184082
    4. '[k' → logprob: -8.391728401184082
    5. '[' → logprob: -9.516728401184082
    6. ']' → logprob: -9.891728401184082
    7. ' ][' → logprob: -10.891728401184082
    8. '   ' → logprob: -11.516728401184082
    9. '}[' → logprob: -12.891728401184082
    10. ' [' → logprob: -12.891728401184082

Token 434: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02337743528187275
    2. 'k' → logprob: -3.7733774185180664
    3. 'i' → logprob: -10.023377418518066
    4. '[j' → logprob: -10.398377418518066
    5. '
' → logprob: -10.773377418518066
    6. ' j' → logprob: -10.898377418518066
    7. ']' → logprob: -12.273377418518066
    8. '[k' → logprob: -12.898377418518066
    9. '```' → logprob: -13.523377418518066
    10. '   ' → logprob: -13.523377418518066

Token 435: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.024510383605957
    2. ']' → logprob: -1.024510383605957
    3. '][' → logprob: -2.524510383605957
    4. ']==' → logprob: -2.524510383605957
    5. '==' → logprob: -3.149510383605957
    6. ',' → logprob: -4.024510383605957
    7. ']>' → logprob: -4.649510383605957
    8. ']!=' → logprob: -4.649510383605957
    9. '[k' → logprob: -4.899510383605957
    10. '[i' → logprob: -5.024510383605957

Token 436: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6487737894058228
    2. '<' → logprob: -1.6487737894058228
    3. ' ==' → logprob: -2.023773670196533
    4. '==' → logprob: -2.523773670196533
    5. ' >' → logprob: -3.523773670196533
    6. ' !=' → logprob: -4.273773670196533
    7. '>' → logprob: -4.773773670196533
    8. '!=' → logprob: -5.398773670196533
    9. ' <=' → logprob: -5.523773670196533
    10. '<=' → logprob: -6.023773670196533

Token 437: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00045843268162570894
    2. ' self' → logprob: -7.750458240509033
    3. '0' → logprob: -11.250458717346191
    4. '(self' → logprob: -11.750458717346191
    5. ' ' → logprob: -13.375458717346191
    6. '(' → logprob: -13.500458717346191
    7. '   ' → logprob: -13.875458717346191
    8. 'float' → logprob: -14.250458717346191
    9. '	self' → logprob: -14.500458717346191
    10. ' (' → logprob: -14.750458717346191

Token 438: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.0012323728296905756
    2. 'G' → logprob: -6.751232147216797
    3. 'self' → logprob: -9.876232147216797
    4. '.IN' → logprob: -12.251232147216797
    5. '[i' → logprob: -12.876232147216797
    6. '.E' → logprob: -13.876232147216797
    7. 'INF' → logprob: -15.001232147216797
    8. '[' → logprob: -15.126232147216797
    9. '	G' → logprob: -15.251232147216797
    10. '
' → logprob: -15.376232147216797

Token 439: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.981667537620524e-06
    2. 'i' → logprob: -13.250001907348633
    3. '[' → logprob: -16.875001907348633
    4. '[j' → logprob: -17.000001907348633
    5. '_i' → logprob: -17.375001907348633
    6. '[k' → logprob: -17.375001907348633
    7. '{i' → logprob: -17.375001907348633
    8. 'I' → logprob: -17.750001907348633
    9. '(i' → logprob: -18.375001907348633
    10. ' i' → logprob: -18.500001907348633

Token 440: '][' (ID: 2696)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.19252972304821014
    2. '[i' → logprob: -1.8175296783447266
    3. 'k' → logprob: -4.817529678344727
    4. '][' → logprob: -5.692529678344727
    5. 'i' → logprob: -7.067529678344727
    6. '[' → logprob: -8.067529678344727
    7. ' [' → logprob: -10.442529678344727
    8. '[j' → logprob: -10.692529678344727
    9. '   ' → logprob: -12.067529678344727
    10. ']' → logprob: -12.817529678344727

Token 441: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.6789137084269896e-05
    2. 'j' → logprob: -10.62503719329834
    3. 'i' → logprob: -11.75003719329834
    4. '[k' → logprob: -12.62503719329834
    5. ' k' → logprob: -14.12503719329834
    6. '[' → logprob: -16.500036239624023
    7. ']' → logprob: -16.500036239624023
    8. '	k' → logprob: -16.625036239624023
    9. '   ' → logprob: -16.750036239624023
    10. '```' → logprob: -17.500036239624023

Token 442: ']' (ID: 60)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.2521166205406189
    2. ']' → logprob: -1.5021166801452637
    3. '][' → logprob: -8.877116203308105
    4. ' ]' → logprob: -10.877116203308105
    5. '[k' → logprob: -11.002116203308105
    6. '   ' → logprob: -12.752116203308105
    7. '[' → logprob: -13.127116203308105
    8. ']+=' → logprob: -13.627116203308105
    9. '+k' → logprob: -13.627116203308105
    10. '+' → logprob: -13.877116203308105

Token 443: ' +' (ID: 659)
  Prédit: '+k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+k' → logprob: -0.3994280993938446
    2. '+' → logprob: -1.149428129196167
    3. ' +' → logprob: -4.399427890777588
    4. '+self' → logprob: -9.274428367614746
    5. '+x' → logprob: -9.774428367614746
    6. '+j' → logprob: -10.899428367614746
    7. ']+' → logprob: -12.524428367614746
    8. '           ' → logprob: -12.649428367614746
    9. '+c' → logprob: -13.024428367614746
    10. '[k' → logprob: -13.024428367614746

Token 444: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.004080897197127342
    2. ' self' → logprob: -5.504080772399902
    3. '           ' → logprob: -13.379080772399902
    4. '               ' → logprob: -15.379080772399902
    5. '(self' → logprob: -16.00408172607422
    6. '                   ' → logprob: -16.25408172607422
    7. '[self' → logprob: -16.50408172607422
    8. ' ' → logprob: -16.62908172607422
    9. '   ' → logprob: -16.62908172607422
    10. '       ' → logprob: -16.87908172607422

Token 445: '.G' (ID: 3773)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.03741435334086418
    2. '.G' → logprob: -3.662414312362671
    3. '[k' → logprob: -4.53741455078125
    4. '[G' → logprob: -8.28741455078125
    5. 'k' → logprob: -10.28741455078125
    6. '_G' → logprob: -10.91241455078125
    7. '[' → logprob: -11.66241455078125
    8. 'self' → logprob: -11.66241455078125
    9. ' G' → logprob: -11.91241455078125
    10. '
' → logprob: -12.16241455078125

Token 446: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -3.292907877039397e-06
    2. 'k' → logprob: -12.87500286102295
    3. '[' → logprob: -15.37500286102295
    4. '[j' → logprob: -16.250003814697266
    5. '(k' → logprob: -16.250003814697266
    6. '[i' → logprob: -17.500003814697266
    7. '   ' → logprob: -17.625003814697266
    8. '{k' → logprob: -17.750003814697266
    9. ' k' → logprob: -18.125003814697266
    10. '```' → logprob: -18.375003814697266

Token 447: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.47724831104278564
    2. '][' → logprob: -0.9772483110427856
    3. '[k' → logprob: -6.227248191833496
    4. ']' → logprob: -7.477248191833496
    5. '[' → logprob: -7.602248191833496
    6. 'j' → logprob: -9.227248191833496
    7. '[i' → logprob: -12.227248191833496
    8. ' ][' → logprob: -12.477248191833496
    9. ''s' → logprob: -12.852248191833496
    10. '   ' → logprob: -12.977248191833496

Token 448: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0013326213229447603
    2. '[j' → logprob: -6.626332759857178
    3. ' j' → logprob: -12.12633228302002
    4. 'k' → logprob: -15.12633228302002
    5. '   ' → logprob: -15.25133228302002
    6. 'self' → logprob: -15.25133228302002
    7. '_j' → logprob: -16.251333236694336
    8. '
' → logprob: -16.251333236694336
    9. '	j' → logprob: -16.751333236694336
    10. ' ' → logprob: -16.876333236694336

Token 449: ']:
' (ID: 22152)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05574099346995354
    2. ':' → logprob: -3.30574107170105
    3. 'and' → logprob: -4.555740833282471
    4. ':
' → logprob: -5.930740833282471
    5. '           ' → logprob: -6.055740833282471
    6. '               ' → logprob: -6.430740833282471
    7. '       ' → logprob: -9.180741310119629
    8. '              ' → logprob: -9.930741310119629
    9. ' :' → logprob: -10.055741310119629
    10. '          ' → logprob: -10.180741310119629

Token 450: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016401888569816947
    2. 'self' → logprob: -7.001640319824219
    3. 'operator' → logprob: -7.751640319824219
    4. ' operator' → logprob: -9.001640319824219
    5. '           ' → logprob: -9.626640319824219
    6. ' self' → logprob: -9.751640319824219
    7. '			' → logprob: -11.251640319824219
    8. '                   ' → logprob: -11.501640319824219
    9. '	           ' → logprob: -11.626640319824219
    10. '              ' → logprob: -11.876640319824219

Token 451: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3206058442592621
    2. '               ' → logprob: -1.9456058740615845
    3. 'operator' → logprob: -2.320605754852295
    4. ' self' → logprob: -4.070605754852295
    5. '                   ' → logprob: -4.445605754852295
    6. ' operator' → logprob: -5.695605754852295
    7. '           ' → logprob: -7.820605754852295
    8. 'pass' → logprob: -8.820606231689453
    9. 'print' → logprob: -9.195606231689453
    10. '   ' → logprob: -9.820606231689453

Token 452: '.Path' (ID: 31237)
  Prédit: '.Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Path' → logprob: -0.0037225265987217426
    2. 'Path' → logprob: -5.628722667694092
    3. '.' → logprob: -10.378722190856934
    4. '	Path' → logprob: -11.003722190856934
    5. '].' → logprob: -11.503722190856934
    6. ').' → logprob: -11.628722190856934
    7. '[' → logprob: -11.878722190856934
    8. '<Path' → logprob: -11.878722190856934
    9. '.G' → logprob: -12.253722190856934
    10. '.P' → logprob: -12.378722190856934

Token 453: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.259079363080673e-05
    2. '[j' → logprob: -11.375012397766113
    3. 'i' → logprob: -14.375012397766113
    4. '[k' → logprob: -16.00001335144043
    5. '[' → logprob: -16.37501335144043
    6. '][' → logprob: -17.37501335144043
    7. '   ' → logprob: -17.62501335144043
    8. ' [' → logprob: -17.62501335144043
    9. '```' → logprob: -17.62501335144043
    10. ')[' → logprob: -18.00001335144043

Token 454: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04454765468835831
    2. '[j' → logprob: -3.1695475578308105
    3. ']' → logprob: -7.2945475578308105
    4. '[i' → logprob: -7.5445475578308105
    5. '].' → logprob: -9.419548034667969
    6. ')[' → logprob: -9.544548034667969
    7. '[' → logprob: -10.044548034667969
    8. '[k' → logprob: -10.044548034667969
    9. ' ][' → logprob: -11.044548034667969
    10. 'j' → logprob: -11.169548034667969

Token 455: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0004954866599291563
    2. 'k' → logprob: -7.625495433807373
    3. ' j' → logprob: -12.000495910644531
    4. 'i' → logprob: -14.750495910644531
    5. '[j' → logprob: -14.875495910644531
    6. '   ' → logprob: -15.625495910644531
    7. '	j' → logprob: -16.25049591064453
    8. ' ' → logprob: -16.50049591064453
    9. 'jk' → logprob: -16.93799591064453
    10. '_j' → logprob: -17.37549591064453

Token 456: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11200442910194397
    2. ']=' → logprob: -2.362004518508911
    3. '=' → logprob: -4.737004280090332
    4. ' ]' → logprob: -6.487004280090332
    5. ' =' → logprob: -6.612004280090332
    6. '           ' → logprob: -10.362004280090332
    7. '],' → logprob: -10.987004280090332
    8. '               ' → logprob: -11.487004280090332
    9. ')' → logprob: -12.237004280090332
    10. ']==' → logprob: -12.237004280090332

Token 457: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012518366798758507
    2. ' =' → logprob: -4.387518405914307
    3. ']=' → logprob: -12.637517929077148
    4. ']' → logprob: -13.762517929077148
    5. '=k' → logprob: -13.887517929077148
    6. 'operator' → logprob: -14.262517929077148
    7. ',' → logprob: -14.262517929077148
    8. '+=' → logprob: -14.512517929077148
    9. '=i' → logprob: -14.512517929077148
    10. '           ' → logprob: -15.762517929077148

Token 458: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0011889220913872123
    2. 'i' → logprob: -6.7511887550354
    3. ' k' → logprob: -11.251189231872559
    4. 'self' → logprob: -12.251189231872559
    5. ' i' → logprob: -15.251189231872559
    6. '   ' → logprob: -15.751189231872559
    7. '	k' → logprob: -15.751189231872559
    8. ' ' → logprob: -16.126188278198242
    9. '1' → logprob: -16.251188278198242
    10. '  ' → logprob: -17.501188278198242

Token 459: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 460: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 461: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.9710835814476013
    2. '<|end|>' → logprob: -1.471083641052246
    3. ' def' → logprob: -1.971083641052246
    4. '   ' → logprob: -2.346083641052246
    5. ' ' → logprob: -2.596083641052246
    6. ')' → logprob: -2.971083641052246
    7. '
' → logprob: -4.471083641052246
    8. ' 
' → logprob: -5.846083641052246
    9. '    ' → logprob: -5.846083641052246
    10. '       ' → logprob: -6.596083641052246

Token 462: ' short' (ID: 4022)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -1.0817933082580566
    2. 're' → logprob: -1.3317933082580566
    3. ' reconstruct' → logprob: -1.9567933082580566
    4. 'get' → logprob: -2.4567933082580566
    5. ' path' → logprob: -3.0817933082580566
    6. 'find' → logprob: -3.7067933082580566
    7. 'print' → logprob: -4.081793308258057
    8. '_path' → logprob: -4.206793308258057
    9. 'def' → logprob: -4.456793308258057
    10. ' get' → logprob: -4.456793308258057

Token 463: 'Path' (ID: 2619)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.0009501680615358055
    2. '_path' → logprob: -7.375950336456299
    3. 'path' → logprob: -8.12594985961914
    4. 'cut' → logprob: -12.62594985961914
    5. 'en' → logprob: -13.00094985961914
    6. 'st' → logprob: -13.12594985961914
    7. '_est' → logprob: -13.12594985961914
    8. 'Path' → logprob: -13.25094985961914
    9. '__' → logprob: -13.37594985961914
    10. 'e' → logprob: -13.37594985961914

Token 464: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.127214714884758
    2. '(' → logprob: -2.1272146701812744
    3. '(
' → logprob: -9.002214431762695
    4. ' (' → logprob: -9.377214431762695
    5. '(s' → logprob: -10.127214431762695
    6. 'self' → logprob: -11.252214431762695
    7. '   ' → logprob: -11.377214431762695
    8. '(i' → logprob: -12.877214431762695
    9. 'def' → logprob: -13.252214431762695
    10. '       ' → logprob: -13.502214431762695

Token 465: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008828703314065933
    2. ' ,' → logprob: -5.758828639984131
    3. 'self' → logprob: -6.258828639984131
    4. ',self' → logprob: -6.258828639984131
    5. '(self' → logprob: -7.508828639984131
    6. ',i' → logprob: -8.133829116821289
    7. ',s' → logprob: -8.508829116821289
    8. '   ' → logprob: -8.883829116821289
    9. '):' → logprob: -9.133829116821289
    10. '_,' → logprob: -9.508829116821289

Token 466: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.22606360912322998
    2. 'start' → logprob: -2.4760637283325195
    3. 's' → logprob: -2.9760637283325195
    4. 'self' → logprob: -3.3510637283325195
    5. 'src' → logprob: -4.4760637283325195
    6. ' i' → logprob: -4.8510637283325195
    7. 'u' → logprob: -5.3510637283325195
    8. ' start' → logprob: -5.7260637283325195
    9. 'source' → logprob: -6.4760637283325195
    10. ' s' → logprob: -6.6010637283325195

Token 467: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020261851605027914
    2. ' ,' → logprob: -6.252026081085205
    3. ',j' → logprob: -9.877026557922363
    4. '):' → logprob: -10.252026557922363
    5. '):
' → logprob: -12.252026557922363
    6. '   ' → logprob: -12.752026557922363
    7. ',
' → logprob: -13.752026557922363
    8. ',int' → logprob: -14.752026557922363
    9. ',i' → logprob: -15.127026557922363
    10. '       ' → logprob: -15.627026557922363

Token 468: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011067510582506657
    2. ' j' → logprob: -4.5110673904418945
    3. '   ' → logprob: -11.511067390441895
    4. '	j' → logprob: -12.136067390441895
    5. ' ' → logprob: -13.761067390441895
    6. '    ' → logprob: -14.136067390441895
    7. '  ' → logprob: -14.511067390441895
    8. ' ' → logprob: -14.761067390441895
    9. ')' → logprob: -15.386067390441895
    10. '       ' → logprob: -15.386067390441895

Token 469: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014308766461908817
    2. '):
' → logprob: -4.264308929443359
    3. ')' → logprob: -9.13930892944336
    4. '):
' → logprob: -11.01430892944336
    5. '   ' → logprob: -11.13930892944336
    6. ' ):' → logprob: -12.76430892944336
    7. ':' → logprob: -13.13930892944336
    8. '       ' → logprob: -14.01430892944336
    9. ',' → logprob: -14.38930892944336
    10. '):

' → logprob: -15.26430892944336

Token 470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004654407035559416
    2. ' if' → logprob: -5.629654407501221
    3. 'if' → logprob: -7.004654407501221
    4. '   ' → logprob: -9.004653930664062
    5. '	' → logprob: -12.004653930664062
    6. '	   ' → logprob: -12.504653930664062
    7. '	if' → logprob: -12.754653930664062
    8. '    ' → logprob: -12.754653930664062
    9. 'path' → logprob: -13.004653930664062
    10. '      ' → logprob: -13.879653930664062

Token 471: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.20520302653312683
    2. '       ' → logprob: -1.7052030563354492
    3. ' if' → logprob: -6.080203056335449
    4. 'k' → logprob: -7.330203056335449
    5. 'path' → logprob: -7.830203056335449
    6. '   ' → logprob: -8.70520305633545
    7. 'def' → logprob: -9.20520305633545
    8. '	if' → logprob: -9.58020305633545
    9. 'p' → logprob: -9.70520305633545
    10. '	' → logprob: -11.70520305633545

Token 472: ' Rec' (ID: 14753)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005419211462140083
    2. ' if' → logprob: -5.8804192543029785
    3. 'path' → logprob: -7.1304192543029785
    4. 'def' → logprob: -7.2554192543029785
    5. '   ' → logprob: -7.8804192543029785
    6. '       ' → logprob: -8.38041877746582
    7. 'p' → logprob: -8.38041877746582
    8. 'k' → logprob: -8.75541877746582
    9. 'inter' → logprob: -10.63041877746582
    10. 'return' → logprob: -10.63041877746582

Token 473: 'ursion' (ID: 41658)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0174371004104614
    2. 'ursive' → logprob: -1.1424371004104614
    3. '   ' → logprob: -2.142436981201172
    4. 'urs' → logprob: -2.392436981201172
    5. '       ' → logprob: -3.392436981201172
    6. 'if' → logprob: -3.517436981201172
    7. 'ur' → logprob: -4.267436981201172
    8. 'urse' → logprob: -4.392436981201172
    9. 'ursively' → logprob: -5.392436981201172
    10. ' if' → logprob: -5.642436981201172

Token 474: ' par' (ID: 686)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1041053906083107
    2. ' if' → logprob: -2.3541054725646973
    3. '   ' → logprob: -6.479105472564697
    4. 'if' → logprob: -6.979105472564697
    5. '    ' → logprob: -7.479105472564697
    6. '        ' → logprob: -8.479104995727539
    7. ':' → logprob: -8.604104995727539
    8. ' ' → logprob: -9.479104995727539
    9. '           ' → logprob: -9.479104995727539
    10. '	if' → logprob: -9.979104995727539

Token 475: ' une' (ID: 2463)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.010011911392212
    2. 'if' → logprob: -1.760011911392212
    3. 'i' → logprob: -1.885011911392212
    4. 'self' → logprob: -2.510011911392212
    5. 'def' → logprob: -2.885011911392212
    6. 'l' → logprob: -3.885011911392212
    7. 'operator' → logprob: -4.260011672973633
    8. 'return' → logprob: -4.260011672973633
    9. '   ' → logprob: -4.385011672973633
    10. ' def' → logprob: -4.510011672973633

Token 476: ' fonction' (ID: 17610)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -1.0186560153961182
    2. 'def' → logprob: -1.5186560153961182
    3. 'if' → logprob: -1.7686560153961182
    4. 'liste' → logprob: -3.268656015396118
    5. ' if' → logprob: -3.393656015396118
    6. '   ' → logprob: -3.893656015396118
    7. '       ' → logprob: -4.018655776977539
    8. ' lambda' → logprob: -4.018655776977539
    9. 'fonction' → logprob: -4.518655776977539
    10. ' def' → logprob: -4.518655776977539

Token 477: ' curry' (ID: 81240)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5864385366439819
    2. '       ' → logprob: -1.461438536643982
    3. ' def' → logprob: -2.0864386558532715
    4. ' if' → logprob: -2.5864386558532715
    5. '   ' → logprob: -5.2114386558532715
    6. 'if' → logprob: -5.7114386558532715
    7. '           ' → logprob: -7.8364386558532715
    8. '	def' → logprob: -8.086438179016113
    9. '
' → logprob: -8.211438179016113
    10. ' =' → logprob: -8.336438179016113

Token 478: 'fi' (ID: 9608)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4520159959793091
    2. 'def' → logprob: -2.0770158767700195
    3. '       ' → logprob: -2.5770158767700195
    4. 'ed' → logprob: -3.3270158767700195
    5. ':' → logprob: -4.0770158767700195
    6. '(' → logprob: -4.4520158767700195
    7. '  ' → logprob: -4.7020158767700195
    8. ' def' → logprob: -4.8270158767700195
    9. 'ing' → logprob: -4.8270158767700195
    10. 'e' → logprob: -4.9520158767700195

Token 479: 'ée' (ID: 2894)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.07134879380464554
    2. 'ée' → logprob: -2.6963489055633545
    3. 'cation' → logprob: -7.071348667144775
    4. 'er' → logprob: -8.321349143981934
    5. 'e' → logprob: -9.446349143981934
    6. 'quée' → logprob: -9.821349143981934
    7. 'ing' → logprob: -10.196349143981934
    8. 'é' → logprob: -10.446349143981934
    9. 'ee' → logprob: -10.446349143981934
    10. 'née' → logprob: -10.821349143981934

Token 480: ' et' (ID: 859)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13832789659500122
    2. 'def' → logprob: -2.3883278369903564
    3. ' def' → logprob: -4.2633280754089355
    4. '
' → logprob: -4.6383280754089355
    5. ' if' → logprob: -5.1383280754089355
    6. 'if' → logprob: -5.7633280754089355
    7. '   ' → logprob: -6.1383280754089355
    8. 'return' → logprob: -7.3883280754089355
    9. '        
' → logprob: -8.138327598571777
    10. '(' → logprob: -8.388327598571777

Token 481: ' reduce' (ID: 10389)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.36778318881988525
    2. 'lambda' → logprob: -1.2427831888198853
    3. ' lambda' → logprob: -5.367783069610596
    4. 'operator' → logprob: -5.367783069610596
    5. ' functools' → logprob: -5.492783069610596
    6. 'l' → logprob: -6.742783069610596
    7. 'def' → logprob: -7.117783069610596
    8. '   ' → logprob: -7.242783069610596
    9. '       ' → logprob: -7.367783069610596
    10. 'out' → logprob: -7.742783069610596

Token 482: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13730132579803467
    2. 'return' → logprob: -2.887301445007324
    3. 'def' → logprob: -3.137301445007324
    4. '(
' → logprob: -4.637301445007324
    5. '(' → logprob: -5.137301445007324
    6. '(lambda' → logprob: -5.512301445007324
    7. ' return' → logprob: -6.512301445007324
    8. ' def' → logprob: -7.012301445007324
    9. ' functools' → logprob: -7.012301445007324
    10. '	' → logprob: -7.137301445007324

Token 483: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17091447114944458
    2. 'return' → logprob: -2.2959144115448
    3. ' return' → logprob: -3.2959144115448
    4. ' if' → logprob: -4.295914649963379
    5. 'def' → logprob: -6.045914649963379
    6. 'if' → logprob: -6.295914649963379
    7. ' def' → logprob: -7.670914649963379
    8. '           ' → logprob: -8.920914649963379
    9. '   ' → logprob: -8.920914649963379
    10. '(' → logprob: -9.045914649963379

Token 484: ' path' (ID: 3104)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.0376055240631104
    2. '       ' → logprob: -1.2876055240631104
    3. 'if' → logprob: -1.5376055240631104
    4. ' if' → logprob: -3.0376055240631104
    5. ' return' → logprob: -3.1626055240631104
    6. 'def' → logprob: -3.4126055240631104
    7. ' def' → logprob: -4.412605285644531
    8. ' functools' → logprob: -4.537605285644531
    9. 'fun' → logprob: -6.537605285644531
    10. '   ' → logprob: -6.662605285644531

Token 485: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6970759630203247
    2. ' =' → logprob: -0.6970759630203247
    3. '_' → logprob: -6.447075843811035
    4. 'def' → logprob: -7.447075843811035
    5. '=[]' → logprob: -7.572075843811035
    6. '   ' → logprob: -8.322075843811035
    7. ' ' → logprob: -8.822075843811035
    8. '_=' → logprob: -8.822075843811035
    9. '_parts' → logprob: -8.822075843811035
    10. 's' → logprob: -9.197075843811035

Token 486: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.5172749757766724
    2. '[' → logprob: -1.8922749757766724
    3. '[i' → logprob: -2.142274856567383
    4. '[]
' → logprob: -2.392274856567383
    5. 'lambda' → logprob: -4.142274856567383
    6. '[]

' → logprob: -4.767274856567383
    7. '[self' → logprob: -5.267274856567383
    8. '(lambda' → logprob: -5.392274856567383
    9. 'fun' → logprob: -5.517274856567383
    10. '[j' → logprob: -6.517274856567383

Token 487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006726264487951994
    2. ' if' → logprob: -5.506726264953613
    3. 'def' → logprob: -7.256726264953613
    4. '   ' → logprob: -7.631726264953613
    5. '        
' → logprob: -8.006726264953613
    6. '<|end|>' → logprob: -8.631726264953613
    7. '	' → logprob: -8.756726264953613
    8. ' def' → logprob: -9.006726264953613
    9. '        ' → logprob: -9.256726264953613
    10. '
' → logprob: -9.381726264953613

Token 488: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.2286325842142105
    2. '       ' → logprob: -2.103632688522339
    3. 'if' → logprob: -2.728632688522339
    4. ' def' → logprob: -4.47863245010376
    5. ' if' → logprob: -5.22863245010376
    6. '   ' → logprob: -8.478632926940918
    7. '	def' → logprob: -9.728632926940918
    8. '	' → logprob: -10.603632926940918
    9. '           ' → logprob: -11.978632926940918
    10. '	if' → logprob: -12.103632926940918

Token 489: ' core' (ID: 10089)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.6993843913078308
    2. '_re' → logprob: -1.9493844509124756
    3. 'go' → logprob: -2.3243844509124756
    4. 'rec' → logprob: -2.3243844509124756
    5. ' rec' → logprob: -3.8243844509124756
    6. 'f' → logprob: -3.9493844509124756
    7. 'build' → logprob: -3.9493844509124756
    8. 'inner' → logprob: -4.8243842124938965
    9. 'visit' → logprob: -4.9493842124938965
    10. 'helper' → logprob: -4.9493842124938965

Token 490: '(a' (ID: 6271)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.9747801423072815
    2. '(k' → logprob: -1.7247800827026367
    3. '(u' → logprob: -1.8497800827026367
    4. '(n' → logprob: -2.2247800827026367
    5. '(i' → logprob: -2.7247800827026367
    6. '_path' → logprob: -3.2247800827026367
    7. '(s' → logprob: -4.224780082702637
    8. '(cur' → logprob: -4.349780082702637
    9. '(path' → logprob: -4.724780082702637
    10. 'path' → logprob: -5.224780082702637

Token 491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018995376303792
    2. ',b' → logprob: -4.01899528503418
    3. ' ,' → logprob: -7.51899528503418
    4. ',k' → logprob: -9.26899528503418
    5. ',n' → logprob: -10.01899528503418
    6. 'b' → logprob: -10.26899528503418
    7. '):' → logprob: -10.64399528503418
    8. ',j' → logprob: -11.01899528503418
    9. ',a' → logprob: -11.26899528503418
    10. ',d' → logprob: -11.39399528503418

Token 492: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005034659989178181
    2. ' b' → logprob: -7.7505035400390625
    3. 'c' → logprob: -9.750503540039062
    4. 'k' → logprob: -12.750503540039062
    5. 'z' → logprob: -12.750503540039062
    6. '	b' → logprob: -13.250503540039062
    7. '   ' → logprob: -13.500503540039062
    8. 'm' → logprob: -13.750503540039062
    9. 'x' → logprob: -14.250503540039062
    10. ' ' → logprob: -14.750503540039062

Token 493: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.033819735050201416
    2. '):
' → logprob: -3.4088196754455566
    3. ',' → logprob: -9.533820152282715
    4. '=None' → logprob: -10.533820152282715
    5. '):
' → logprob: -10.533820152282715
    6. ' ):' → logprob: -11.408820152282715
    7. '):

' → logprob: -11.533820152282715
    8. '=' → logprob: -11.658820152282715
    9. '   ' → logprob: -11.783820152282715
    10. ')' → logprob: -12.533820152282715

Token 494: ' p' (ID: 275)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.026389241218566895
    2. 'k' → logprob: -3.9013891220092773
    3. ' c' → logprob: -5.901389122009277
    4. '):
' → logprob: -6.901389122009277
    5. 'p' → logprob: -7.151389122009277
    6. 'path' → logprob: -8.526389122009277
    7. '):' → logprob: -8.776389122009277
    8. 'mid' → logprob: -8.901389122009277
    9. ')' → logprob: -9.026389122009277
    10. 'inter' → logprob: -9.401389122009277

Token 495: '=' (ID: 28)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6712005138397217
    2. 'ath' → logprob: -1.2962005138397217
    3. '):' → logprob: -1.5462005138397217
    4. '=' → logprob: -7.421200752258301
    5. 'aram' → logprob: -7.546200752258301
    6. 'ar' → logprob: -7.921200752258301
    7. '=None' → logprob: -8.5462007522583
    8. '):
' → logprob: -9.0462007522583
    9. 'ather' → logprob: -9.1712007522583
    10. '):

' → logprob: -10.0462007522583

Token 496: 'path' (ID: 4189)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.21905755996704102
    2. 'None' → logprob: -2.344057559967041
    3. '-' → logprob: -3.719057559967041
    4. ')' → logprob: -4.344057559967041
    5. ' self' → logprob: -4.344057559967041
    6. '0' → logprob: -4.594057559967041
    7. 'j' → logprob: -4.594057559967041
    8. 'p' → logprob: -4.969057559967041
    9. '[]' → logprob: -4.969057559967041
    10. 'path' → logprob: -5.469057559967041

Token 497: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25239109992980957
    2. '):
' → logprob: -1.5023910999298096
    3. '):
' → logprob: -8.25239086151123
    4. ',' → logprob: -9.50239086151123
    5. '   ' → logprob: -10.62739086151123
    6. '):

' → logprob: -10.75239086151123
    7. '=None' → logprob: -11.12739086151123
    8. '[' → logprob: -11.25239086151123
    9. '       ' → logprob: -11.25239086151123
    10. '[]):' → logprob: -11.62739086151123

Token 498: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010626119561493397
    2. '       ' → logprob: -6.010626316070557
    3. ' if' → logprob: -6.260626316070557
    4. ':' → logprob: -6.510626316070557
    5. '   ' → logprob: -6.510626316070557
    6. '<|end|>' → logprob: -6.635626316070557
    7. ':
' → logprob: -7.885626316070557
    8. 'if' → logprob: -7.885626316070557
    9. '	       ' → logprob: -7.885626316070557
    10. '<|end|>' → logprob: -9.135625839233398

Token 499: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.005088237579911947
    2. ' if' → logprob: -5.8800883293151855
    3. '       ' → logprob: -6.5050883293151855
    4. '           ' → logprob: -7.5050883293151855
    5. '   ' → logprob: -8.880087852478027
    6. '	if' → logprob: -9.880087852478027
    7. '               ' → logprob: -10.880087852478027
    8. 'k' → logprob: -11.380087852478027
    9. 'p' → logprob: -11.755087852478027
    10. 'try' → logprob: -13.130087852478027

Token 500: ' self' (ID: 1051)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19584117829799652
    2. 'self' → logprob: -1.9458411931991577
    3. 'b' → logprob: -4.070841312408447
    4. ' self' → logprob: -4.820841312408447
    5. 'p' → logprob: -5.195841312408447
    6. ' a' → logprob: -5.570841312408447
    7. ' b' → logprob: -8.445840835571289
    8. ' p' → logprob: -9.195840835571289
    9. '   ' → logprob: -9.945840835571289
    10. 'not' → logprob: -9.945840835571289

Token 501: '.Path' (ID: 31237)
  Prédit: '.Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Path' → logprob: -1.4021237802808173e-05
    2. 'Path' → logprob: -11.625014305114746
    3. '.' → logprob: -13.125014305114746
    4. '.G' → logprob: -13.500014305114746
    5. ' .' → logprob: -14.625014305114746
    6. '<Path' → logprob: -14.750014305114746
    7. '.P' → logprob: -15.125014305114746
    8. '	Path' → logprob: -15.125014305114746
    9. ' Path' → logprob: -15.375014305114746
    10. 'G' → logprob: -17.25001335144043

Token 502: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0017030329909175634
    2. '[i' → logprob: -6.876703262329102
    3. 'a' → logprob: -7.376703262329102
    4. ' a' → logprob: -10.501703262329102
    5. '[' → logprob: -11.376703262329102
    6. '[p' → logprob: -14.126703262329102
    7. '[b' → logprob: -14.251703262329102
    8. ' [' → logprob: -14.626703262329102
    9. '	a' → logprob: -14.751703262329102
    10. '```' → logprob: -14.876703262329102

Token 503: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.026014849543571472
    2. '[b' → logprob: -4.151014804840088
    3. '[a' → logprob: -4.776014804840088
    4. '[j' → logprob: -7.651014804840088
    5. ']' → logprob: -8.026015281677246
    6. '[' → logprob: -8.276015281677246
    7. ' ][' → logprob: -8.901015281677246
    8. '[p' → logprob: -9.151015281677246
    9. '[i' → logprob: -9.901015281677246
    10. 'a' → logprob: -10.151015281677246

Token 504: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.2729995988775045e-06
    2. 'j' → logprob: -12.125006675720215
    3. ' b' → logprob: -14.250006675720215
    4. '<|end|>' → logprob: -17.5000057220459
    5. '   ' → logprob: -18.0000057220459
    6. ' ' → logprob: -18.1250057220459
    7. '[' → logprob: -18.2500057220459
    8. ')b' → logprob: -18.7500057220459
    9. '	b' → logprob: -19.3750057220459
    10. '  ' → logprob: -19.6250057220459

Token 505: ']==' (ID: 34128)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023442409932613373
    2. ']==' → logprob: -3.773442506790161
    3. ' ]' → logprob: -9.023442268371582
    4. ']!=' → logprob: -10.148442268371582
    5. '==' → logprob: -11.148442268371582
    6. ')' → logprob: -12.273442268371582
    7. '])' → logprob: -12.648442268371582
    8. ' ==' → logprob: -12.773442268371582
    9. ']:
' → logprob: -13.148442268371582
    10. '']' → logprob: -13.273442268371582

Token 506: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005532711511477828
    2. ' ' → logprob: -7.500553131103516
    3. 'b' → logprob: -15.250553131103516
    4. 'None' → logprob: -17.375553131103516
    5. 'a' → logprob: -18.125553131103516
    6. '  ' → logprob: -18.250553131103516
    7. '   ' → logprob: -18.625553131103516
    8. '۰' → logprob: -19.125553131103516
    9. '-' → logprob: -19.250553131103516
    10. ' b' → logprob: -19.375553131103516

Token 507: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.09162063896656036
    2. ':' → logprob: -2.591620683670044
    3. ':return' → logprob: -4.466620445251465
    4. ' or' → logprob: -7.341620445251465
    5. '               ' → logprob: -8.466620445251465
    6. '           ' → logprob: -8.716620445251465
    7. ' :
' → logprob: -10.091620445251465
    8. '       ' → logprob: -10.341620445251465
    9. '):
' → logprob: -10.841620445251465
    10. ':
' → logprob: -11.466620445251465

Token 508: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013391503132879734
    2. 'return' → logprob: -5.138391494750977
    3. ' return' → logprob: -5.263391494750977
    4. '           ' → logprob: -6.263391494750977
    5. ':return' → logprob: -9.013391494750977
    6. ':
' → logprob: -9.263391494750977
    7. '       ' → logprob: -9.888391494750977
    8. '   ' → logprob: -10.513391494750977
    9. '              ' → logprob: -10.888391494750977
    10. ',' → logprob: -11.763391494750977

Token 509: ' if' (ID: 538)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3452351689338684
    2. ' p' → logprob: -2.4702351093292236
    3. 'return' → logprob: -2.5952351093292236
    4. '               ' → logprob: -2.9702351093292236
    5. '           ' → logprob: -3.0952351093292236
    6. ' return' → logprob: -4.220235347747803
    7. 'path' → logprob: -4.595235347747803
    8. '       ' → logprob: -4.970235347747803
    9. '   ' → logprob: -6.220235347747803
    10. ' path' → logprob: -6.845235347747803

Token 510: ' not' (ID: 625)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01769375614821911
    2. 'p' → logprob: -4.267693519592285
    3. ' a' → logprob: -6.017693519592285
    4. 'not' → logprob: -7.642693519592285
    5. 'len' → logprob: -8.767693519592285
    6. ' p' → logprob: -8.767693519592285
    7. 'b' → logprob: -8.892693519592285
    8. ' not' → logprob: -9.642693519592285
    9. '	a' → logprob: -9.892693519592285
    10. '   ' → logprob: -11.392693519592285

Token 511: ' p' (ID: 275)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5980558395385742
    2. 'p' → logprob: -1.5980558395385742
    3. ' a' → logprob: -2.098055839538574
    4. ' p' → logprob: -2.473055839538574
    5. '(a' → logprob: -3.598055839538574
    6. ' (' → logprob: -4.973055839538574
    7. 'b' → logprob: -6.473055839538574
    8. '(p' → logprob: -6.473055839538574
    9. ' b' → logprob: -6.723055839538574
    10. 'path' → logprob: -7.223055839538574

Token 512: ' or' (ID: 503)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002266622323077172
    2. '.' → logprob: -8.875226974487305
    3. 'append' → logprob: -10.000226974487305
    4. '.__' → logprob: -11.000226974487305
    5. '.extend' → logprob: -11.500226974487305
    6. ' or' → logprob: -12.000226974487305
    7. ':' → logprob: -12.375226974487305
    8. ' .' → logprob: -13.500226974487305
    9. '.insert' → logprob: -14.000226974487305
    10. 'or' → logprob: -15.000226974487305

Token 513: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.011220062151551247
    2. ' p' → logprob: -4.5112199783325195
    3. 'a' → logprob: -9.51121997833252
    4. 'b' → logprob: -9.76121997833252
    5. '(p' → logprob: -11.63621997833252
    6. '           ' → logprob: -11.63621997833252
    7. '   ' → logprob: -12.01121997833252
    8. ' b' → logprob: -12.88621997833252
    9. ' a' → logprob: -13.01121997833252
    10. ' (' → logprob: -13.01121997833252

Token 514: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.5763582587242126
    2. '.append' → logprob: -0.8263582587242126
    3. 'append' → logprob: -8.7013578414917
    4. '.extend' → logprob: -9.7013578414917
    5. '!=' → logprob: -10.0763578414917
    6. '==' → logprob: -10.4513578414917
    7. '[a' → logprob: -10.8263578414917
    8. 'a' → logprob: -10.9513578414917
    9. 'and' → logprob: -10.9513578414917
    10. '.' → logprob: -11.3263578414917

Token 515: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02776089496910572
    2. 'a' → logprob: -3.7777609825134277
    3. '!=' → logprob: -6.652760982513428
    4. 'b' → logprob: -6.902760982513428
    5. ' !=' → logprob: -7.652760982513428
    6. 'i' → logprob: -7.652760982513428
    7. '(a' → logprob: -8.27776050567627
    8. '[' → logprob: -8.52776050567627
    9. 'p' → logprob: -9.40276050567627
    10. ' ' → logprob: -9.52776050567627

Token 516: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2288188487291336
    2. ' !=' → logprob: -1.6038188934326172
    3. ']!=' → logprob: -6.478818893432617
    4. ')!=' → logprob: -6.603818893432617
    5. ' is' → logprob: -8.478818893432617
    6. ')' → logprob: -9.228818893432617
    7. '()!=' → logprob: -9.353818893432617
    8. '!=(' → logprob: -10.228818893432617
    9. '[' → logprob: -10.728818893432617
    10. ']' → logprob: -11.353818893432617

Token 517: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.28127220273017883
    2. ' !=' → logprob: -1.4062721729278564
    3. ')!=' → logprob: -10.406271934509277
    4. '()!=' → logprob: -10.531271934509277
    5. '[' → logprob: -10.781271934509277
    6. ' is' → logprob: -11.031271934509277
    7. '!=(' → logprob: -11.531271934509277
    8. ']!=' → logprob: -11.906271934509277
    9. ')' → logprob: -13.156271934509277
    10. ' ' → logprob: -13.156271934509277

Token 518: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00019483851792756468
    2. ' a' → logprob: -8.625194549560547
    3. 'b' → logprob: -11.625194549560547
    4. 'i' → logprob: -12.375194549560547
    5. '	a' → logprob: -13.875194549560547
    6. 'j' → logprob: -14.625194549560547
    7. '   ' → logprob: -15.125194549560547
    8. ' ' → logprob: -15.625194549560547
    9. ''a' → logprob: -16.937694549560547
    10. ')a' → logprob: -17.375194549560547

Token 519: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1141420304775238
    2. ':' → logprob: -2.7391419410705566
    3. '                   ' → logprob: -3.3641419410705566
    4. '               ' → logprob: -4.989141941070557
    5. '           ' → logprob: -7.614141941070557
    6. '):
' → logprob: -7.739141941070557
    7. '                       ' → logprob: -8.364142417907715
    8. ':
' → logprob: -9.114142417907715
    9. ' :
' → logprob: -9.114142417907715
    10. ',' → logprob: -9.489142417907715

Token 520: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07917552441358566
    2. '               ' → logprob: -2.8291754722595215
    3. ' p' → logprob: -4.3291754722595215
    4. '           ' → logprob: -6.3291754722595215
    5. 'p' → logprob: -7.3291754722595215
    6. '                ' → logprob: -7.8291754722595215
    7. '                       ' → logprob: -8.07917594909668
    8. '   ' → logprob: -9.57917594909668
    9. ',' → logprob: -9.57917594909668
    10. '		           ' → logprob: -9.57917594909668

Token 521: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.21171262860298157
    2. '               ' → logprob: -1.8367125988006592
    3. 'p' (adapté à ' p') → logprob: -3.961712598800659
    4. '                   ' → logprob: -5.336712837219238
    5. '           ' → logprob: -5.961712837219238
    6. '                ' → logprob: -6.336712837219238
    7. '                       ' → logprob: -7.711712837219238
    8. ' ' → logprob: -7.711712837219238
    9. '       ' → logprob: -7.836712837219238
    10. ' 
' → logprob: -7.836712837219238

Token 522: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.73183855926618e-05
    2. '.' → logprob: -9.500077247619629
    3. '.app' → logprob: -13.750077247619629
    4. '.extend' → logprob: -14.375077247619629
    5. ' .' → logprob: -14.750077247619629
    6. 'append' → logprob: -15.250077247619629
    7. '.ap' → logprob: -16.125078201293945
    8. ' append' → logprob: -16.625078201293945
    9. '.Append' → logprob: -18.625078201293945
    10. '	append' → logprob: -19.250078201293945

Token 523: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00026646157493814826
    2. '(' → logprob: -8.875266075134277
    3. 'a' → logprob: -9.000266075134277
    4. ' a' → logprob: -13.250266075134277
    5. '(
' → logprob: -13.625266075134277
    6. '(i' → logprob: -15.500266075134277
    7. ' (' → logprob: -17.000267028808594
    8. '(b' → logprob: -18.000267028808594
    9. '	a' → logprob: -19.125267028808594
    10. '(

' → logprob: -19.250267028808594

Token 524: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07000623643398285
    2. ')
' → logprob: -2.6950061321258545
    3. '               ' → logprob: -10.945006370544434
    4. ' )' → logprob: -11.195006370544434
    5. ')
' → logprob: -11.695006370544434
    6. ')return' → logprob: -12.320006370544434
    7. '<|end|>' → logprob: -12.320006370544434
    8. ' )
' → logprob: -12.445006370544434
    9. '           ' → logprob: -12.695006370544434
    10. ')

' → logprob: -12.820006370544434

Token 525: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016163812251761556
    2. '           ' → logprob: -6.501616477966309
    3. ' else' → logprob: -10.001616477966309
    4. 'else' → logprob: -10.751616477966309
    5. '       ' → logprob: -11.126616477966309
    6. '                   ' → logprob: -11.501616477966309
    7. '			' → logprob: -11.626616477966309
    8. '                
' → logprob: -12.626616477966309
    9. '	           ' → logprob: -13.626616477966309
    10. '              ' → logprob: -13.626616477966309

Token 526: ' p' (ID: 275)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09728125482797623
    2. '               ' → logprob: -3.0972812175750732
    3. 'p' (adapté à ' p') → logprob: -3.8472812175750732
    4. 'if' → logprob: -3.9722812175750732
    5. '       ' → logprob: -5.722281455993652
    6. 'return' → logprob: -5.847281455993652
    7. 'else' → logprob: -6.847281455993652
    8. '   ' → logprob: -9.972281455993652
    9. '                   ' → logprob: -10.722281455993652
    10. 'b' → logprob: -10.722281455993652

Token 527: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001126026691053994
    2. 'append' → logprob: -10.375112533569336
    3. '.' → logprob: -10.500112533569336
    4. '           ' → logprob: -10.750112533569336
    5. '.extend' → logprob: -11.000112533569336
    6. '               ' → logprob: -12.125112533569336
    7. 'else' → logprob: -12.125112533569336
    8. ' .' → logprob: -13.375112533569336
    9. '          ' → logprob: -14.375112533569336
    10. 'elif' → logprob: -14.500112533569336

Token 528: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -3.190178904333152e-05
    2. 'b' → logprob: -10.500031471252441
    3. '(' → logprob: -13.000031471252441
    4. '(j' → logprob: -13.250031471252441
    5. '(
' → logprob: -15.250031471252441
    6. ' b' → logprob: -16.625032424926758
    7. '	b' → logprob: -17.625032424926758
    8. ' (' → logprob: -18.125032424926758
    9. 'j' → logprob: -19.250032424926758
    10. ')b' → logprob: -20.000032424926758

Token 529: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02066871151328087
    2. ')
' → logprob: -3.8956687450408936
    3. '           ' → logprob: -10.020668983459473
    4. '       ' → logprob: -10.395668983459473
    5. ')return' → logprob: -10.395668983459473
    6. '               ' → logprob: -11.895668983459473
    7. ' )' → logprob: -12.145668983459473
    8. ')
' → logprob: -12.895668983459473
    9. '   ' → logprob: -13.145668983459473
    10. ')

' → logprob: -13.770668983459473

Token 530: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016514752060174942
    2. '               ' → logprob: -4.141514778137207
    3. '       ' → logprob: -8.141514778137207
    4. 'else' → logprob: -9.141514778137207
    5. 'return' → logprob: -10.266514778137207
    6. ' else' → logprob: -11.016514778137207
    7. '   ' → logprob: -11.641514778137207
    8. 'elif' → logprob: -12.141514778137207
    9. '	       ' → logprob: -12.266514778137207
    10. '		' → logprob: -12.641514778137207

Token 531: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7271161079406738
    2. 'else' (adapté à ' else') → logprob: -0.7271161079406738
    3. ' else' → logprob: -3.727116107940674
    4. '           ' → logprob: -4.852116107940674
    5. 'elif' → logprob: -6.977116107940674
    6. '   ' → logprob: -7.727116107940674
    7. '	else' → logprob: -9.602115631103516
    8. ' elif' → logprob: -9.852115631103516
    9. '	elif' → logprob: -12.477115631103516
    10. '	' → logprob: -12.477115631103516

Token 532: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07697007805109024
    2. ':
' → logprob: -2.826970100402832
    3. ' core' → logprob: -4.826970100402832
    4. '           ' → logprob: -5.951970100402832
    5. 'core' → logprob: -6.576970100402832
    6. ':' → logprob: -6.701970100402832
    7. ',' → logprob: -7.701970100402832
    8. '       ' → logprob: -8.701970100402832
    9. ' :
' → logprob: -8.951970100402832
    10. '   ' → logprob: -9.201970100402832

Token 533: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.559602677822113
    2. '           ' → logprob: -1.4346027374267578
    3. 'core' → logprob: -2.059602737426758
    4. 'self' → logprob: -3.184602737426758
    5. ' core' → logprob: -4.059602737426758
    6. '       ' → logprob: -7.309602737426758
    7. ' self' → logprob: -7.309602737426758
    8. 'p' → logprob: -7.434602737426758
    9. '	core' → logprob: -7.559602737426758
    10. '   ' → logprob: -7.684602737426758

Token 534: ' core' (ID: 10089)
  Prédit: 'core'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'core' (adapté à ' core') → logprob: -0.04419016093015671
    2. ' core' → logprob: -3.2941901683807373
    3. 'self' → logprob: -5.294189929962158
    4. 'k' → logprob: -8.169190406799316
    5. '           ' → logprob: -8.544190406799316
    6. ' self' → logprob: -8.669190406799316
    7. 'mid' → logprob: -8.794190406799316
    8. '               ' → logprob: -9.794190406799316
    9. '	core' → logprob: -10.044190406799316
    10. '   ' → logprob: -10.294190406799316

Token 535: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00011737081513274461
    2. 'a' → logprob: -9.750117301940918
    3. '(' → logprob: -9.875117301940918
    4. '(core' → logprob: -12.625117301940918
    5. '(i' → logprob: -12.750117301940918
    6. '(self' → logprob: -14.375117301940918
    7. ' (' → logprob: -15.000117301940918
    8. '   ' → logprob: -16.375118255615234
    9. ' ' → logprob: -16.625118255615234
    10. '((' → logprob: -16.750118255615234

Token 536: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028559938073158264
    2. ',self' → logprob: -5.8778557777404785
    3. 'self' → logprob: -10.252856254577637
    4. ' ,' → logprob: -11.502856254577637
    5. ',
' → logprob: -12.627856254577637
    6. ' self' → logprob: -14.002856254577637
    7. ')' → logprob: -15.377856254577637
    8. '[self' → logprob: -15.502856254577637
    9. '<|end|>' → logprob: -15.502856254577637
    10. '(self' → logprob: -15.627856254577637

Token 537: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0017165892058983445
    2. ' self' → logprob: -6.376716613769531
    3. '       ' → logprob: -12.626716613769531
    4. '           ' → logprob: -12.626716613769531
    5. '(self' → logprob: -13.126716613769531
    6. '[self' → logprob: -13.376716613769531
    7. '   ' → logprob: -13.751716613769531
    8. ' ' → logprob: -14.126716613769531
    9. '               ' → logprob: -14.626716613769531
    10. '=self' → logprob: -14.876716613769531

Token 538: '.Path' (ID: 31237)
  Prédit: '.Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Path' → logprob: -0.0002991160727106035
    2. 'Path' → logprob: -8.125299453735352
    3. '	Path' → logprob: -13.500299453735352
    4. '<Path' → logprob: -13.750299453735352
    5. '@Path' → logprob: -15.625299453735352
    6. '(Path' → logprob: -15.750299453735352
    7. '.' → logprob: -16.12529945373535
    8. ' Path' → logprob: -16.25029945373535
    9. '_Path' → logprob: -17.62529945373535
    10. '.Point' → logprob: -17.87529945373535

Token 539: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.005979516077786684
    2. 'a' → logprob: -5.630979537963867
    3. '[b' → logprob: -6.130979537963867
    4. '[' → logprob: -9.755979537963867
    5. '[i' → logprob: -10.130979537963867
    6. '][' → logprob: -10.255979537963867
    7. 'b' → logprob: -10.505979537963867
    8. ')[' → logprob: -11.005979537963867
    9. '<|end|>' → logprob: -12.630979537963867
    10. '[j' → logprob: -12.755979537963867

Token 540: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0010760379955172539
    2. '[b' → logprob: -7.3760762214660645
    3. 'b' → logprob: -7.7510762214660645
    4. ']' → logprob: -12.376075744628906
    5. ',b' → logprob: -12.501075744628906
    6. ')[' → logprob: -12.626075744628906
    7. ' ][' → logprob: -13.251075744628906
    8. '[j' → logprob: -13.876075744628906
    9. '[' → logprob: -14.001075744628906
    10. '[i' → logprob: -14.376075744628906

Token 541: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.5776860184123507e-06
    2. ' b' → logprob: -13.62500286102295
    3. '[b' → logprob: -13.75000286102295
    4. 'j' → logprob: -15.50000286102295
    5. ')b' → logprob: -17.250001907348633
    6. ',b' → logprob: -17.500001907348633
    7. 'a' → logprob: -17.750001907348633
    8. '	b' → logprob: -18.000001907348633
    9. '
' → logprob: -18.375001907348633
    10. '[' → logprob: -18.375001907348633

Token 542: '])
' (ID: 5169)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34260398149490356
    2. ')' → logprob: -1.4676039218902588
    3. ')
' → logprob: -2.842603921890259
    4. ' ,' → logprob: -7.342604160308838
    5. ',b' → logprob: -8.09260368347168
    6. '),' → logprob: -8.34260368347168
    7. ' )
' → logprob: -10.21760368347168
    8. ' )' → logprob: -10.34260368347168
    9. ')b' → logprob: -10.59260368347168
    10. ']' → logprob: -11.96760368347168

Token 543: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.433829159708694e-05
    2. '           ' → logprob: -10.00007438659668
    3. '       ' → logprob: -10.87507438659668
    4. '			' → logprob: -12.75007438659668
    5. ',' → logprob: -13.00007438659668
    6. ' core' → logprob: -13.50007438659668
    7. '   ' → logprob: -13.62507438659668
    8. '
' → logprob: -15.12507438659668
    9. '	core' → logprob: -15.25007438659668
    10. '                   ' → logprob: -15.37507438659668

Token 544: ' core' (ID: 10089)
  Prédit: ' core'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' core' → logprob: -0.5761498212814331
    2. 'core' (adapté à ' core') → logprob: -0.8261498212814331
    3. '               ' → logprob: -8.576149940490723
    4. '           ' → logprob: -11.451149940490723
    5. '	core' → logprob: -11.826149940490723
    6. '(core' → logprob: -12.951149940490723
    7. '$core' → logprob: -14.326149940490723
    8. '       ' → logprob: -15.076149940490723
    9. '.core' → logprob: -15.701149940490723
    10. '_core' → logprob: -16.201148986816406

Token 545: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.27099974633893e-05
    2. '(' → logprob: -11.625012397766113
    3. 'self' → logprob: -13.250012397766113
    4. '(
' → logprob: -14.000012397766113
    5. ' (' → logprob: -14.250012397766113
    6. ' self' → logprob: -16.00001335144043
    7. '               ' → logprob: -16.50001335144043
    8. ' ' → logprob: -16.87501335144043
    9. '   ' → logprob: -17.37501335144043
    10. '           ' → logprob: -17.37501335144043

Token 546: '.Path' (ID: 31237)
  Prédit: '.Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Path' → logprob: -3.292907877039397e-06
    2. 'Path' → logprob: -13.25000286102295
    3. '(Path' → logprob: -15.37500286102295
    4. '[' → logprob: -15.37500286102295
    5. '<Path' → logprob: -15.37500286102295
    6. '.P' → logprob: -15.87500286102295
    7. '	Path' → logprob: -15.87500286102295
    8. '@Path' → logprob: -15.87500286102295
    9. '.' → logprob: -16.375003814697266
    10. '[self' → logprob: -16.625003814697266

Token 547: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0007457832107320428
    2. 'a' → logprob: -7.25074577331543
    3. '[b' → logprob: -10.50074577331543
    4. '[i' → logprob: -12.12574577331543
    5. ' a' → logprob: -13.62574577331543
    6. '#a' → logprob: -14.87574577331543
    7. '(a' → logprob: -15.12574577331543
    8. '[' → logprob: -15.37574577331543
    9. ')a' → logprob: -15.62574577331543
    10. ',a' → logprob: -15.75074577331543

Token 548: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.14044515788555145
    2. '[a' → logprob: -2.2654452323913574
    3. '[b' → logprob: -3.6404452323913574
    4. 'a' → logprob: -7.015445232391357
    5. '[i' → logprob: -10.0154447555542
    6. ']][' → logprob: -11.2654447555542
    7. '[j' → logprob: -11.5154447555542
    8. ']' → logprob: -11.5154447555542
    9. 'b' → logprob: -11.6404447555542
    10. '[' → logprob: -11.8904447555542

Token 549: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.416665640543215e-05
    2. 'j' → logprob: -10.75003433227539
    3. '[b' → logprob: -11.50003433227539
    4. ' b' → logprob: -14.50003433227539
    5. 'a' → logprob: -14.87503433227539
    6. '[' → logprob: -15.12503433227539
    7. '[j' → logprob: -15.25003433227539
    8. '][' → logprob: -15.75003433227539
    9. ' ' → logprob: -15.75003433227539
    10. 'k' → logprob: -15.87503433227539

Token 550: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10674844682216644
    2. ',b' → logprob: -3.106748342514038
    3. '][' → logprob: -3.231748342514038
    4. '],' → logprob: -4.731748580932617
    5. '[b' → logprob: -5.606748580932617
    6. ' ,' → logprob: -5.731748580932617
    7. ',j' → logprob: -7.106748580932617
    8. '[j' → logprob: -8.481748580932617
    9. 'b' → logprob: -8.481748580932617
    10. ']' → logprob: -11.231748580932617

Token 551: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00024370834580622613
    2. ' b' → logprob: -8.375244140625
    3. 'j' → logprob: -11.250244140625
    4. '   ' → logprob: -16.375244140625
    5. ')b' → logprob: -17.000244140625
    6. '	b' → logprob: -17.500244140625
    7. '           ' → logprob: -17.625244140625
    8. ')' → logprob: -17.750244140625
    9. '               ' → logprob: -18.000244140625
    10. ' ' → logprob: -18.375244140625

Token 552: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.372916686814278e-05
    2. ')
' → logprob: -10.0000638961792
    3. ',' → logprob: -11.7500638961792
    4. '           ' → logprob: -12.5000638961792
    5. '       ' → logprob: -12.7500638961792
    6. ' )' → logprob: -13.5000638961792
    7. '               ' → logprob: -13.7500638961792
    8. '   ' → logprob: -14.1250638961792
    9. ')#' → logprob: -15.6250638961792
    10. '),' → logprob: -16.250062942504883

Token 553: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005574395763687789
    2. 'return' → logprob: -7.8755574226379395
    3. '           ' → logprob: -9.000557899475098
    4. '   ' → logprob: -10.125557899475098
    5. '<|end|>' → logprob: -12.250557899475098
    6. '               ' → logprob: -12.875557899475098
    7. '      ' → logprob: -13.500557899475098
    8. '
' → logprob: -14.250557899475098
    9. '	' → logprob: -14.500557899475098
    10. '.' → logprob: -14.625557899475098

Token 554: ' core' (ID: 10089)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04111235588788986
    2. 'return' → logprob: -3.4161124229431152
    3. '	' → logprob: -5.916112422943115
    4. 'core' (adapté à ' core') → logprob: -6.416112422943115
    5. ' return' → logprob: -6.791112422943115
    6. '   ' → logprob: -7.416112422943115
    7. '	return' → logprob: -8.041111946105957
    8. '	core' → logprob: -8.166111946105957
    9. '<|end|>' → logprob: -8.291111946105957
    10. '           ' → logprob: -8.791111946105957

Token 555: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0033160268794745207
    2. '(' → logprob: -5.7533159255981445
    3. '(a' → logprob: -9.253315925598145
    4. '<|end|>' → logprob: -10.753315925598145
    5. '(
' → logprob: -11.378315925598145
    6. '(I' → logprob: -12.878315925598145
    7. '(in' → logprob: -13.378315925598145
    8. '(int' → logprob: -14.003315925598145
    9. '(user' → logprob: -14.128315925598145
    10. '(ii' → logprob: -14.378315925598145

Token 556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005421888781711459
    2. ' ,' → logprob: -7.875542163848877
    3. ',j' → logprob: -8.750542640686035
    4. ',
' → logprob: -13.125542640686035
    5. '<|end|>' → logprob: -14.625542640686035
    6. ')' → logprob: -15.250542640686035
    7. ',b' → logprob: -15.250542640686035
    8. '‌,' → logprob: -15.875542640686035
    9. ' ' → logprob: -15.875542640686035
    10. '   ' → logprob: -16.37554168701172

Token 557: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0024779161904007196
    2. ' j' → logprob: -6.002478122711182
    3. '   ' → logprob: -13.502477645874023
    4. '    ' → logprob: -15.377477645874023
    5. '	j' → logprob: -15.752477645874023
    6. ' ' → logprob: -15.752477645874023
    7. '       ' → logprob: -15.877477645874023
    8. ')' → logprob: -16.002477645874023
    9. '  ' → logprob: -17.127477645874023
    10. '           ' → logprob: -17.502477645874023

Token 558: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003629527287557721
    2. ')
' → logprob: -5.628629684448242
    3. ')return' → logprob: -11.128629684448242
    4. '       ' → logprob: -11.503629684448242
    5. ')
' → logprob: -12.628629684448242
    6. '<|end|>' → logprob: -14.503629684448242
    7. ' )' → logprob: -14.878629684448242
    8. ')#' → logprob: -16.003629684448242
    9. '),' → logprob: -16.378629684448242
    10. '   ' → logprob: -16.378629684448242

Token 559: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006566775846295059
    2. 'return' → logprob: -7.875656604766846
    3. '	' → logprob: -8.500657081604004
    4. '   ' → logprob: -10.625657081604004
    5. '	return' → logprob: -10.625657081604004
    6. ' return' → logprob: -11.250657081604004
    7. '<|end|>' → logprob: -11.875657081604004
    8. '	   ' → logprob: -13.125657081604004
    9. '           ' → logprob: -13.875657081604004
    10. '	       ' → logprob: -14.625657081604004

Token 560: ' path' (ID: 3104)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01851102150976658
    2. '       ' → logprob: -4.018510818481445
    3. ' return' → logprob: -8.018510818481445
    4. '	return' → logprob: -10.518510818481445
    5. '   ' → logprob: -12.518510818481445
    6. '	' → logprob: -14.518510818481445
    7. '	   ' → logprob: -15.143510818481445
    8. '{return' → logprob: -16.768510818481445
    9. '           ' → logprob: -17.018510818481445
    10. 'path' (adapté à ' path') → logprob: -17.268510818481445

Token 561: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 562: ' list' (ID: 1562)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.7218352556228638
    2. 'list' → logprob: -0.9718352556228638
    3. ' path' → logprob: -3.221835136413574
    4. '[' → logprob: -3.221835136413574
    5. ' list' → logprob: -3.596835136413574
    6. '[path' → logprob: -4.346835136413574
    7. ' [' → logprob: -5.346835136413574
    8. 'fun' → logprob: -5.471835136413574
    9. 'tuple' → logprob: -6.471835136413574
    10. 'sorted' → logprob: -6.471835136413574

Token 563: '(it' (ID: 29445)
  Prédit: '(dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dict' → logprob: -0.07073133438825607
    2. '(f' → logprob: -3.0707314014434814
    3. '(set' → logprob: -4.570731163024902
    4. '(' → logprob: -4.945731163024902
    5. '(collection' → logprob: -5.570731163024902
    6. '(path' → logprob: -8.320731163024902
    7. '(filter' → logprob: -8.820731163024902
    8. '(sorted' → logprob: -9.070731163024902
    9. '(map' → logprob: -10.070731163024902
    10. '(it' → logprob: -10.320731163024902

Token 564: 'ertools' (ID: 88385)
  Prédit: 'ertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ertools' → logprob: -0.02157643809914589
    2. 'er' → logprob: -3.896576404571533
    3. '(path' → logprob: -7.021576404571533
    4. 'ermap' → logprob: -10.396576881408691
    5. 'erp' → logprob: -10.521576881408691
    6. 'path' → logprob: -10.521576881408691
    7. 'erval' → logprob: -11.271576881408691
    8. '(filter' → logprob: -11.271576881408691
    9. 'ert' → logprob: -11.646576881408691
    10. 'ertu' → logprob: -12.271576881408691

Token 565: '.is' (ID: 3109)
  Prédit: '.chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.chain' → logprob: -0.6789383888244629
    2. '.groupby' → logprob: -1.053938388824463
    3. '.acc' → logprob: -2.678938388824463
    4. '.filter' → logprob: -2.678938388824463
    5. '.drop' → logprob: -5.178938388824463
    6. '.reduce' → logprob: -7.803938388824463
    7. '.d' → logprob: -8.678937911987305
    8. '.' → logprob: -9.303937911987305
    9. '.fold' → logprob: -9.303937911987305
    10. '.unique' → logprob: -9.303937911987305

Token 566: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -0.00014132341311778873
    2. 'slice' → logprob: -9.500141143798828
    3. 'chain' → logprob: -10.000141143798828
    4. 'cycle' → logprob: -12.250141143798828
    5. 'lices' → logprob: -13.125141143798828
    6. '   ' → logprob: -13.250141143798828
    7. 'plit' → logprob: -13.375141143798828
    8. 'liced' → logprob: -13.625141143798828
    9. 'lic' → logprob: -13.750141143798828
    10. 'ce' → logprob: -14.250141143798828

Token 567: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -6.384836888173595e-05
    2. '(iter' → logprob: -9.7500638961792
    3. ',path' → logprob: -13.3750638961792
    4. '(' → logprob: -13.5000638961792
    5. '(collection' → logprob: -13.8750638961792
    6. ' (' → logprob: -15.0000638961792
    7. '   ' → logprob: -15.3750638961792
    8. ')(' → logprob: -15.5000638961792
    9. '(it' → logprob: -15.6250638961792
    10. '(p' → logprob: -15.7500638961792

Token 568: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10867831856012344
    2. '(path' → logprob: -2.7336783409118652
    3. '(' → logprob: -3.9836783409118652
    4. ' ,' → logprob: -4.608678340911865
    5. ',path' → logprob: -4.733678340911865
    6. '(len' → logprob: -8.233677864074707
    7. ',len' → logprob: -9.358677864074707
    8. '(p' → logprob: -10.358677864074707
    9. ')' → logprob: -10.358677864074707
    10. ',p' → logprob: -10.483677864074707

Token 569: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.8379344344139099
    2. 'None' → logprob: -1.3379344940185547
    3. '0' → logprob: -1.5879344940185547
    4. '100' → logprob: -3.0879344940185547
    5. 'sys' → logprob: -3.7129344940185547
    6. '10' → logprob: -4.337934494018555
    7. '20' → logprob: -5.462934494018555
    8. '1' → logprob: -5.587934494018555
    9. ' None' → logprob: -6.587934494018555
    10. '50' → logprob: -6.712934494018555

Token 570: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.8360080122947693
    2. 'sys' → logprob: -1.586008071899414
    3. 'None' → logprob: -1.961008071899414
    4. '0' → logprob: -2.211008071899414
    5. '100' → logprob: -2.586008071899414
    6. '10' → logprob: -4.461008071899414
    7. '1' → logprob: -4.836008071899414
    8. '20' → logprob: -5.711008071899414
    9. '50' → logprob: -6.336008071899414
    10. '2' → logprob: -6.836008071899414

Token 571: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002304412191733718
    2. ',None' → logprob: -6.752304553985596
    3. ',len' → logprob: -7.627304553985596
    4. '))' → logprob: -8.127304077148438
    5. ' ,' → logprob: -8.252304077148438
    6. 'None' → logprob: -9.627304077148438
    7. ',
' → logprob: -12.002304077148438
    8. ' None' → logprob: -12.252304077148438
    9. 'len' → logprob: -12.627304077148438
    10. ',-' → logprob: -13.002304077148438

Token 572: ' None' (ID: 4662)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.19295914471149445
    2. 'len' → logprob: -2.4429590702056885
    3. 'None' → logprob: -2.4429590702056885
    4. ' -' → logprob: -6.817959308624268
    5. ' None' → logprob: -7.942959308624268
    6. '-l' → logprob: -8.69295883178711
    7. ' ' → logprob: -11.06795883178711
    8. ' len' → logprob: -11.19295883178711
    9. '-none' → logprob: -11.31795883178711
    10. '   ' → logprob: -11.69295883178711

Token 573: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10027147084474564
    2. '))' → logprob: -2.350271463394165
    3. ')
' → logprob: -10.100271224975586
    4. '))
' → logprob: -10.975271224975586
    5. ')))' → logprob: -12.975271224975586
    6. '       ' → logprob: -13.350271224975586
    7. ' )' → logprob: -13.850271224975586
    8. '   ' → logprob: -14.600271224975586
    9. ')}' → logprob: -14.600271224975586
    10. ' ))' → logprob: -15.475271224975586

Token 574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06272448599338531
    2. '	' → logprob: -3.3127245903015137
    3. 'return' → logprob: -3.8127245903015137
    4. '	return' → logprob: -7.187724590301514
    5. ' return' → logprob: -7.437724590301514
    6. '   ' → logprob: -7.687724590301514
    7. ')' → logprob: -8.562724113464355
    8. '<|end|>' → logprob: -9.187724113464355
    9. '[' → logprob: -10.562724113464355
    10. '.' → logprob: -10.687724113464355

Token 575: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07317560166120529
    2. 'return' (adapté à ' return') → logprob: -2.6981756687164307
    3. '	' → logprob: -6.198175430297852
    4. ' return' → logprob: -7.448175430297852
    5. '	return' → logprob: -8.073175430297852
    6. '   ' → logprob: -8.573175430297852
    7. '<|end|>' → logprob: -11.198175430297852
    8. '[]' → logprob: -11.448175430297852
    9. '           ' → logprob: -11.448175430297852
    10. '.' → logprob: -11.698175430297852

Token 576: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0005698331515304744
    2. ' path' → logprob: -7.500569820404053
    3. '[path' → logprob: -11.500570297241211
    4. '[' → logprob: -12.375570297241211
    5. '(path' → logprob: -13.625570297241211
    6. 'list' → logprob: -14.750570297241211
    7. 'tuple' → logprob: -15.125570297241211
    8. 'p' → logprob: -15.500570297241211
    9. ' [' → logprob: -15.750570297241211
    10. 'pat' → logprob: -16.75057029724121

Token 577: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 578: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 579: ' driver' (ID: 8931)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.572568953037262
    2. 'graph' → logprob: -2.072568893432617
    3. ' Main' → logprob: -2.572568893432617
    4. ' main' → logprob: -3.197568893432617
    5. ' Solution' → logprob: -3.572568893432617
    6. 'Main' → logprob: -4.072568893432617
    7. ' solution' → logprob: -4.197568893432617
    8. ' solver' → logprob: -4.322568893432617
    9. ' raw' → logprob: -4.322568893432617
    10. 'Solution' → logprob: -4.572568893432617

Token 580: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012841640273109078
    2. ':
' → logprob: -6.751284122467041
    3. ' :' → logprob: -9.5012845993042
    4. '():' → logprob: -11.1262845993042
    5. ':def' → logprob: -11.5012845993042
    6. ':

' → logprob: -12.3762845993042
    7. '(' → logprob: -12.5012845993042
    8. '(object' → logprob: -13.1262845993042
    9. ' :
' → logprob: -14.3762845993042
    10. ':void' → logprob: -14.5012845993042

Token 581: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3311716914176941
    2. ' def' → logprob: -2.081171751022339
    3. '	def' → logprob: -2.581171751022339
    4. 'def' → logprob: -2.831171751022339
    5. '    
' → logprob: -4.08117151260376
    6. '	
' → logprob: -5.58117151260376
    7. '
' → logprob: -6.83117151260376
    8. ':' → logprob: -8.956171989440918
    9. ':def' → logprob: -9.456171989440918
    10. 'class' → logprob: -9.706171989440918

Token 582: ' plan' (ID: 3496)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47454896569252014
    2. ' def' → logprob: -0.9745489358901978
    3. '   ' → logprob: -7.724548816680908
    4. '	def' → logprob: -11.099549293518066
    5. 'class' → logprob: -11.974549293518066
    6. '    ' → logprob: -12.599549293518066
    7. '
' → logprob: -13.724549293518066
    8. 'import' → logprob: -14.099549293518066
    9. 'graph' → logprob: -14.349549293518066
    10. ' ' → logprob: -14.474549293518066

Token 583: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.48039570450782776
    2. '=' → logprob: -0.9803956747055054
    3. '   ' → logprob: -6.105395793914795
    4. 's' → logprob: -7.105395793914795
    5. 'ner' → logprob: -7.480395793914795
    6. '       ' → logprob: -7.730395793914795
    7. '=[]' → logprob: -8.355395317077637
    8. '='' → logprob: -8.480395317077637
    9. 'ning' → logprob: -8.605395317077637
    10. 't' → logprob: -8.855395317077637

Token 584: ' None' (ID: 4662)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.10294335335493088
    2. '[]' → logprob: -3.2279434204101562
    3. 'None' → logprob: -3.8529434204101562
    4. '{' → logprob: -4.602943420410156
    5. '[' → logprob: -4.852943420410156
    6. '{}' → logprob: -5.227943420410156
    7. '[(' → logprob: -5.602943420410156
    8. 'lambda' → logprob: -5.727943420410156
    9. ' graph' → logprob: -7.227943420410156
    10. '[
' → logprob: -7.227943420410156

Token 585: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5153998136520386
    2. '
' → logprob: -1.1403998136520386
    3. 'def' → logprob: -2.765399932861328
    4. ' def' → logprob: -4.515399932861328
    5. '    
' → logprob: -5.765399932861328
    6. 'None' → logprob: -6.765399932861328
    7. ' =' → logprob: -7.140399932861328
    8. '<|end|>' → logprob: -7.265399932861328
    9. '[]' → logprob: -7.640399932861328
    10. '[]
' → logprob: -8.015399932861328

Token 586: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2524002492427826
    2. '
' → logprob: -1.752400279045105
    3. 'def' → logprob: -3.1274001598358154
    4. '    
' → logprob: -5.6274003982543945
    5. ' def' → logprob: -6.8774003982543945
    6. '	def' → logprob: -7.5024003982543945
    7. '	
' → logprob: -7.8774003982543945
    8. '<|end|>' → logprob: -9.752400398254395
    9. 'class' → logprob: -9.877400398254395
    10. '    ' → logprob: -10.377400398254395

Token 587: ' order' (ID: 2569)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02841588482260704
    2. ' def' → logprob: -3.9034159183502197
    3. '   ' → logprob: -6.153415679931641
    4. '@' → logprob: -6.528415679931641
    5. 'path' → logprob: -7.278415679931641
    6. 'out' → logprob: -8.02841567993164
    7. 'data' → logprob: -8.15341567993164
    8. 'paths' → logprob: -8.15341567993164
    9. 'dist' → logprob: -8.40341567993164
    10. 'graph' → logprob: -8.52841567993164

Token 588: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07925514876842499
    2. '=' → logprob: -2.5792551040649414
    3. 's' → logprob: -9.329255104064941
    4. '=[]' → logprob: -9.329255104064941
    5. ':' → logprob: -9.954255104064941
    6. '   ' → logprob: -10.204255104064941
    7. '=None' → logprob: -10.579255104064941
    8. ' ' → logprob: -10.704255104064941
    9. '[]' → logprob: -11.204255104064941
    10. '[' → logprob: -11.954255104064941

Token 589: ' None' (ID: 4662)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.044684458523988724
    2. 'None' → logprob: -3.169684410095215
    3. ' []' → logprob: -7.419684410095215
    4. '0' → logprob: -7.669684410095215
    5. '[]
' → logprob: -8.544684410095215
    6. '[' → logprob: -9.294684410095215
    7. ' None' → logprob: -9.294684410095215
    8. 'list' → logprob: -9.544684410095215
    9. '[]}' → logprob: -10.294684410095215
    10. '{}' → logprob: -10.544684410095215

Token 590: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2806348204612732
    2. 'def' → logprob: -1.905634880065918
    3. ' def' → logprob: -3.030634880065918
    4. '
' → logprob: -4.155634880065918
    5. '    
' → logprob: -4.155634880065918
    6. '	def' → logprob: -5.030634880065918
    7. '	
' → logprob: -5.405634880065918
    8. ':' → logprob: -6.780634880065918
    9. '<|end|>' → logprob: -7.030634880065918
    10. ' =' → logprob: -7.530634880065918

Token 591: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5587561130523682
    2. 'def' → logprob: -0.9337561130523682
    3. ' def' → logprob: -4.183755874633789
    4. '    
' → logprob: -4.308755874633789
    5. '
' → logprob: -5.933755874633789
    6. '	
' → logprob: -6.433755874633789
    7. '	def' → logprob: -6.808755874633789
    8. '    ' → logprob: -7.808755874633789
    9. '  ' → logprob: -9.683755874633789
    10. '  
' → logprob: -9.808755874633789

Token 592: ' location' (ID: 5100)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.015542721375823021
    2. 'path' → logprob: -5.765542507171631
    3. 'cost' → logprob: -6.765542507171631
    4. 'trip' → logprob: -7.390542507171631
    5. 'max' → logprob: -7.515542507171631
    6. 'route' → logprob: -7.515542507171631
    7. 'dist' → logprob: -7.640542507171631
    8. '   ' → logprob: -7.640542507171631
    9. 'car' → logprob: -7.890542507171631
    10. 'plan' → logprob: -7.890542507171631

Token 593: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5769706964492798
    2. '=' → logprob: -0.8269706964492798
    3. '=None' → logprob: -7.20197057723999
    4. ':' → logprob: -8.451971054077148
    5. '   ' → logprob: -10.576971054077148
    6. 'None' → logprob: -10.701971054077148
    7. 's' → logprob: -11.701971054077148
    8. ' ' → logprob: -12.076971054077148
    9. ',' → logprob: -12.951971054077148
    10. ' None' → logprob: -12.951971054077148

Token 594: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3208892047405243
    2. '0' → logprob: -2.0708892345428467
    3. ' None' → logprob: -2.0708892345428467
    4. '[]' → logprob: -4.695888996124268
    5. ' ' → logprob: -5.195888996124268
    6. '-' → logprob: -5.945888996124268
    7. '   ' → logprob: -6.070888996124268
    8. ' []' → logprob: -6.945888996124268
    9. ' -' → logprob: -7.820888996124268
    10. '1' → logprob: -7.820888996124268

Token 595: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7199419140815735
    2. 'def' → logprob: -1.0949418544769287
    3. '<|end|>' → logprob: -2.3449418544769287
    4. '
' → logprob: -3.3449418544769287
    5. ' def' → logprob: -3.7199418544769287
    6. '    
' → logprob: -4.719942092895508
    7. '<|end|>' → logprob: -4.719942092895508
    8. '	def' → logprob: -5.719942092895508
    9. ':' → logprob: -7.969942092895508
    10. '    ' → logprob: -8.344942092895508

Token 596: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6399486660957336
    2. '
' → logprob: -1.0149486064910889
    3. 'def' → logprob: -2.764948606491089
    4. '<|end|>' → logprob: -4.014948844909668
    5. '    
' → logprob: -4.139948844909668
    6. '	
' → logprob: -5.514948844909668
    7. ' def' → logprob: -5.514948844909668
    8. '	def' → logprob: -5.889948844909668
    9. '<|end|>' → logprob: -6.889948844909668
    10. '    ' → logprob: -8.014948844909668

Token 597: ' next' (ID: 2613)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0854189544916153
    2. 'path' → logprob: -4.335419178009033
    3. '   ' → logprob: -5.210419178009033
    4. 'cost' → logprob: -5.335419178009033
    5. 'capacity' → logprob: -5.460419178009033
    6. 'plan' → logprob: -5.710419178009033
    7. 'current' → logprob: -6.085419178009033
    8. 'dist' → logprob: -6.085419178009033
    9. 'route' → logprob: -6.335419178009033
    10. 'order' → logprob: -6.335419178009033

Token 598: 'Segment' (ID: 24880)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6924049854278564
    2. '_location' → logprob: -2.1924049854278564
    3. '_' → logprob: -2.3174049854278564
    4. '_step' → logprob: -3.0674049854278564
    5. '_token' → logprob: -3.8174049854278564
    6. '_stop' → logprob: -3.8174049854278564
    7. '_index' → logprob: -4.317404747009277
    8. 'Step' → logprob: -4.317404747009277
    9. '=' → logprob: -4.442404747009277
    10. '<|end|>' → logprob: -4.567404747009277

Token 599: 'Left' (ID: 7471)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14517123997211456
    2. '=' → logprob: -2.0201711654663086
    3. '_' → logprob: -7.145171165466309
    4. ' ' → logprob: -7.895171165466309
    5. ':' → logprob: -8.145171165466309
    6. '   ' → logprob: -8.145171165466309
    7. '  ' → logprob: -8.270171165466309
    8. ',' → logprob: -8.770171165466309
    9. '=None' → logprob: -9.270171165466309
    10. '    ' → logprob: -9.770171165466309

Token 600: 'Time' (ID: 1929)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5773589015007019
    2. '=' → logprob: -0.8273589015007019
    3. ':' → logprob: -6.952358722686768
    4. '   ' → logprob: -8.577359199523926
    5. ',' → logprob: -9.077359199523926
    6. '=None' → logprob: -9.827359199523926
    7. ' ' → logprob: -9.952359199523926
    8. ' :' → logprob: -10.952359199523926
    9. '    ' → logprob: -11.202359199523926
    10. '  ' → logprob: -11.452359199523926

Token 601: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07090780884027481
    2. '=' → logprob: -2.6959078311920166
    3. ' ' → logprob: -8.070907592773438
    4. ':' → logprob: -8.445907592773438
    5. '   ' → logprob: -8.570907592773438
    6. ',' → logprob: -9.070907592773438
    7. ' :' → logprob: -10.195907592773438
    8. '    ' → logprob: -10.195907592773438
    9. '  ' → logprob: -10.320907592773438
    10. '=None' → logprob: -11.195907592773438

Token 602: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005577129777520895
    2. 'None' → logprob: -5.880577087402344
    3. ' ' → logprob: -6.380577087402344
    4. '-' → logprob: -7.255577087402344
    5. ' None' → logprob: -8.505577087402344
    6. '1' → logprob: -9.130577087402344
    7. ' -' → logprob: -11.005577087402344
    8. '10' → logprob: -12.005577087402344
    9. '   ' → logprob: -12.255577087402344
    10. '2' → logprob: -12.943077087402344

Token 603: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1302759349346161
    2. '
' → logprob: -2.3802759647369385
    3. 'def' → logprob: -4.380275726318359
    4. '<|end|>' → logprob: -4.630275726318359
    5. '    
' → logprob: -5.880275726318359
    6. '	def' → logprob: -6.630275726318359
    7. ' def' → logprob: -6.755275726318359
    8. '<|end|>' → logprob: -7.630275726318359
    9. 'next' → logprob: -8.00527572631836
    10. '	
' → logprob: -8.38027572631836

Token 604: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012559685856103897
    2. 'def' → logprob: -4.88755989074707
    3. '    
' → logprob: -6.88755989074707
    4. 'next' → logprob: -7.38755989074707
    5. '
' → logprob: -7.63755989074707
    6. ' def' → logprob: -7.76255989074707
    7. ' ' → logprob: -8.01255989074707
    8. ',' → logprob: -8.13755989074707
    9. '	def' → logprob: -8.51255989074707
    10. '  ' → logprob: -8.63755989074707

Token 605: ' target' (ID: 3783)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.15763355791568756
    2. 'next' → logprob: -3.4076335430145264
    3. 'current' → logprob: -4.0326337814331055
    4. 'path' → logprob: -4.0326337814331055
    5. 'speed' → logprob: -4.9076337814331055
    6. 'segment' → logprob: -5.1576337814331055
    7. 'route' → logprob: -5.4076337814331055
    8. 'max' → logprob: -5.4076337814331055
    9. 'capacity' → logprob: -5.4076337814331055
    10. 'last' → logprob: -5.5326337814331055

Token 606: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42168521881103516
    2. '=' → logprob: -1.1716852188110352
    3. 'Time' → logprob: -4.296685218811035
    4. '_' → logprob: -4.671685218811035
    5. '=None' → logprob: -5.546685218811035
    6. '_time' → logprob: -6.171685218811035
    7. ':' → logprob: -6.796685218811035
    8. ',' → logprob: -7.546685218811035
    9. '<|end|>' → logprob: -7.546685218811035
    10. 'time' → logprob: -7.671685218811035

Token 607: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.40811553597450256
    2. ' None' → logprob: -1.1581155061721802
    3. '0' → logprob: -3.9081156253814697
    4. ' ' → logprob: -7.283115386962891
    5. ' -' → logprob: -9.40811538696289
    6. '-' → logprob: -9.53311538696289
    7. '   ' → logprob: -10.15811538696289
    8. '(None' → logprob: -11.03311538696289
    9. '1' → logprob: -11.28311538696289
    10. '=None' → logprob: -12.03311538696289

Token 608: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4522310495376587
    2. '
' → logprob: -2.202230930328369
    3. 'def' → logprob: -2.202230930328369
    4. '	def' → logprob: -2.702230930328369
    5. '<|end|>' → logprob: -3.077230930328369
    6. ' def' → logprob: -3.827230930328369
    7. '<|end|>' → logprob: -5.702230930328369
    8. '    
' → logprob: -6.577230930328369
    9. '	
' → logprob: -6.827230930328369
    10. ',' → logprob: -7.702230930328369

Token 609: '   ' (ID: 271)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.539987325668335
    2. '   ' → logprob: -1.414987325668335
    3. 'def' → logprob: -2.289987325668335
    4. '	def' → logprob: -3.039987325668335
    5. ' 
' → logprob: -5.289987564086914
    6. '    
' → logprob: -5.539987564086914
    7. '<|end|>' → logprob: -5.539987564086914
    8. ' ' → logprob: -5.664987564086914
    9. '    ' → logprob: -5.789987564086914
    10. '	
' → logprob: -6.539987564086914

Token 610: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04307477921247482
    2. ' def' → logprob: -3.1680748462677
    3. '   ' → logprob: -9.668074607849121
    4. '	def' → logprob: -12.043074607849121
    5. '    ' → logprob: -13.043074607849121
    6. 'class' → logprob: -13.543074607849121
    7. '@' → logprob: -14.168074607849121
    8. 'de' → logprob: -14.668074607849121
    9. '#' → logprob: -14.918074607849121
    10. 'pass' → logprob: -15.168074607849121

Token 611: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12695299088954926
    2. ' __' → logprob: -2.126952886581421
    3. 'def' → logprob: -11.251953125
    4. ' def' → logprob: -12.376953125
    5. 'init' → logprob: -12.376953125
    6. '_init' → logprob: -13.001953125
    7. ' init' → logprob: -15.251953125
    8. ' run' → logprob: -15.626953125
    9. '___' → logprob: -15.626953125
    10. 'start' → logprob: -16.126953125

Token 612: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9146995327901095e-05
    2. 'def' → logprob: -11.000019073486328
    3. ' init' → logprob: -13.375019073486328
    4. '(init' → logprob: -15.125019073486328
    5. '_init' → logprob: -15.750019073486328
    6. 'ini' → logprob: -15.750019073486328
    7. '__' → logprob: -17.125019073486328
    8. 'int' → logprob: -17.375019073486328
    9. 'class' → logprob: -17.500019073486328
    10. 'i' → logprob: -17.875019073486328

Token 613: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02709398791193962
    2. '__(' → logprob: -3.6520938873291016
    3. '(' → logprob: -7.277093887329102
    4. ' (' → logprob: -10.027093887329102
    5. '_(' → logprob: -11.152093887329102
    6. '(s' → logprob: -11.777093887329102
    7. '   ' → logprob: -11.902093887329102
    8. '(this' → logprob: -11.902093887329102
    9. '()' → logprob: -12.652093887329102
    10. '__(
' → logprob: -12.777093887329102

Token 614: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.117345684382599e-05
    2. ' self' → logprob: -11.250020980834961
    3. ')' → logprob: -12.625020980834961
    4. '
' → logprob: -12.750020980834961
    5. '):
' → logprob: -14.250020980834961
    6. '   ' → logprob: -14.750020980834961
    7. '       ' → logprob: -14.875020980834961
    8. ',' → logprob: -15.750020980834961
    9. '(self' → logprob: -16.25002098083496
    10. 's' → logprob: -17.25002098083496

Token 615: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.21800009906291962
    2. ',' → logprob: -1.968000054359436
    3. 'self' → logprob: -3.7180001735687256
    4. ')(' → logprob: -4.2179999351501465
    5. '__(' → logprob: -4.5929999351501465
    6. '(' → logprob: -5.5929999351501465
    7. ' (' → logprob: -6.2179999351501465
    8. ',self' → logprob: -7.9679999351501465
    9. '   ' → logprob: -8.343000411987305
    10. '):' → logprob: -8.843000411987305

Token 616: ' g' (ID: 329)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7609872817993164
    2. 'plan' → logprob: -0.8859872817993164
    3. ' plan' → logprob: -2.5109872817993164
    4. ' self' → logprob: -3.7609872817993164
    5. 'location' → logprob: -4.760987281799316
    6. 'order' → logprob: -5.260987281799316
    7. ' location' → logprob: -7.010987281799316
    8. ' order' → logprob: -8.010987281799316
    9. 'loc' → logprob: -9.385987281799316
    10. '   ' → logprob: -9.385987281799316

Token 617: '):
' (ID: 1883)
  Prédit: 'raph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raph' → logprob: -0.3143543004989624
    2. '):' → logprob: -1.3143543004989624
    3. '):
' → logprob: -7.439354419708252
    4. ',' → logprob: -8.564353942871094
    5. 'rap' → logprob: -9.314353942871094
    6. 'raphics' → logprob: -9.564353942871094
    7. ')' → logprob: -10.314353942871094
    8. '=None' → logprob: -10.564353942871094
    9. 'raf' → logprob: -11.064353942871094
    10. 'rah' → logprob: -11.189353942871094

Token 618: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013679367839358747
    2. 'self' → logprob: -9.500136375427246
    3. ' self' → logprob: -10.375136375427246
    4. '   ' → logprob: -11.625136375427246
    5. '	' → logprob: -11.750136375427246
    6. 'import' → logprob: -12.625136375427246
    7. '	self' → logprob: -12.625136375427246
    8. ',' → logprob: -13.000136375427246
    9. '	   ' → logprob: -13.250136375427246
    10. 'def' → logprob: -14.125136375427246

Token 619: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.43042975664138794
    2. '       ' → logprob: -1.3054296970367432
    3. ' self' → logprob: -2.555429697036743
    4. 'import' → logprob: -7.055429935455322
    5. 'data' → logprob: -9.930429458618164
    6. '   ' → logprob: -9.930429458618164
    7. 'def' → logprob: -10.430429458618164
    8. '	self' → logprob: -10.680429458618164
    9. ' import' → logprob: -10.930429458618164
    10. '	' → logprob: -12.055429458618164

Token 620: '.plan' (ID: 96013)
  Prédit: '.plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -0.06586378067731857
    2. '.' → logprob: -2.940863847732544
    3. '.g' → logprob: -5.065863609313965
    4. '.location' → logprob: -5.565863609313965
    5. '.graph' → logprob: -7.440863609313965
    6. ' .' → logprob: -9.815863609313965
    7. '.next' → logprob: -9.940863609313965
    8. '.pl' → logprob: -9.940863609313965
    9. '.target' → logprob: -10.940863609313965
    10. '.driver' → logprob: -12.565863609313965

Token 621: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38721582293510437
    2. ' =' → logprob: -1.1372158527374268
    3. ',' → logprob: -8.637215614318848
    4. '   ' → logprob: -9.762215614318848
    5. '=[]' → logprob: -10.137215614318848
    6. '       ' → logprob: -10.387215614318848
    7. '=None' → logprob: -11.012215614318848
    8. ' ' → logprob: -12.012215614318848
    9. '    ' → logprob: -12.512215614318848
    10. '	' → logprob: -12.887215614318848

Token 622: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0020390336867421865
    2. 'graph' → logprob: -7.252038955688477
    3. '[' → logprob: -8.002038955688477
    4. 'g' → logprob: -8.252038955688477
    5. '{}' → logprob: -8.252038955688477
    6. '[]
' → logprob: -8.752038955688477
    7. '[g' → logprob: -9.252038955688477
    8. 'list' → logprob: -9.377038955688477
    9. '[]}' → logprob: -10.252038955688477
    10. 'None' → logprob: -11.002038955688477

Token 623: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5486584305763245
    2. '<|end|>' → logprob: -0.9236584305763245
    3. 'self' → logprob: -3.9236583709716797
    4. ' self' → logprob: -6.79865837097168
    5. '	' → logprob: -6.92365837097168
    6. '	self' → logprob: -7.29865837097168
    7. '<|end|>' → logprob: -7.42365837097168
    8. '   ' → logprob: -7.54865837097168
    9. '
' → logprob: -7.67365837097168
    10. ' ' → logprob: -8.67365837097168

Token 624: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0019003171473741531
    2. '       ' → logprob: -7.2519001960754395
    3. 'for' → logprob: -7.7519001960754395
    4. 'def' → logprob: -8.001900672912598
    5. ' self' → logprob: -8.376900672912598
    6. 'data' → logprob: -10.376900672912598
    7. '...' → logprob: -10.376900672912598
    8. '#' → logprob: -10.626900672912598
    9. '   ' → logprob: -10.876900672912598
    10. 'pass' → logprob: -11.001900672912598

Token 625: '.order' (ID: 25549)
  Prédit: '.location'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.location' → logprob: -0.07587853074073792
    2. '.order' → logprob: -3.075878620147705
    3. 'location' → logprob: -4.450878620147705
    4. '.next' → logprob: -5.075878620147705
    5. '.plan' → logprob: -5.200878620147705
    6. '.target' → logprob: -5.950878620147705
    7. 'order' → logprob: -7.700878620147705
    8. '.path' → logprob: -9.200878143310547
    9. '.out' → logprob: -9.575878143310547
    10. 'next' → logprob: -9.950878143310547

Token 626: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18560072779655457
    2. '=' → logprob: -1.810600757598877
    3. '=[]' → logprob: -5.185600757598877
    4. '[]' → logprob: -9.435600280761719
    5. '<|end|>' → logprob: -9.560600280761719
    6. '[:]' → logprob: -10.185600280761719
    7. ',' → logprob: -11.560600280761719
    8. '.append' → logprob: -11.685600280761719
    9. '=[]
' → logprob: -11.810600280761719
    10. '[' → logprob: -12.060600280761719

Token 627: ' set' (ID: 920)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.000835716025903821
    2. 'list' → logprob: -8.375835418701172
    3. 'None' → logprob: -8.625835418701172
    4. '[' → logprob: -9.250835418701172
    5. '[]
' → logprob: -9.250835418701172
    6. 'g' → logprob: -9.250835418701172
    7. 'graph' → logprob: -10.250835418701172
    8. '[]}' → logprob: -10.625835418701172
    9. '{}' → logprob: -11.125835418701172
    10. '[g' → logprob: -11.500835418701172

Token 628: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00028052396373823285
    2. '()
' → logprob: -8.875280380249023
    3. '([]' → logprob: -9.000280380249023
    4. '(' → logprob: -11.875280380249023
    5. '()

' → logprob: -13.125280380249023
    6. '(),' → logprob: -13.250280380249023
    7. '([' → logprob: -13.500280380249023
    8. '()
' → logprob: -13.875280380249023
    9. '(range' → logprob: -14.125280380249023
    10. '()\' → logprob: -14.625280380249023

Token 629: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0375436507165432
    2. '<|end|>' → logprob: -3.537543535232544
    3. 'self' → logprob: -5.037543773651123
    4. '	' → logprob: -7.287543773651123
    5. '   ' → logprob: -8.787543296813965
    6. '	self' → logprob: -9.037543296813965
    7. ' self' → logprob: -9.787543296813965
    8. '        
' → logprob: -9.912543296813965
    9. ' ' → logprob: -10.162543296813965
    10. '<|end|>' → logprob: -10.162543296813965

Token 630: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0032412861473858356
    2. '       ' → logprob: -5.878241062164307
    3. ' self' → logprob: -8.003241539001465
    4. 'data' → logprob: -10.128241539001465
    5. 'for' → logprob: -10.503241539001465
    6. '	self' → logprob: -11.378241539001465
    7. 'raw' → logprob: -11.503241539001465
    8. '   ' → logprob: -12.253241539001465
    9. 'def' → logprob: -13.503241539001465
    10. '#' → logprob: -13.628241539001465

Token 631: '.location' (ID: 15725)
  Prédit: '.location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.location' → logprob: -0.028105538338422775
    2. '.' → logprob: -4.028105735778809
    3. '.next' → logprob: -5.403105735778809
    4. '.plan' → logprob: -6.028105735778809
    5. '.target' → logprob: -6.528105735778809
    6. ' .' → logprob: -7.278105735778809
    7. 'location' → logprob: -7.778105735778809
    8. '.order' → logprob: -9.028105735778809
    9. '.driver' → logprob: -9.903105735778809
    10. '.current' → logprob: -10.278105735778809

Token 632: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231537818908691
    2. '=' → logprob: -0.8981537818908691
    3. '=None' → logprob: -11.773153305053711
    4. ',' → logprob: -11.898153305053711
    5. '   ' → logprob: -12.273153305053711
    6. '<|end|>' → logprob: -13.148153305053711
    7. ' ' → logprob: -13.398153305053711
    8. '0' → logprob: -13.648153305053711
    9. '=g' → logprob: -13.648153305053711
    10. 'None' → logprob: -14.023153305053711

Token 633: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004027464427053928
    2. '1' → logprob: -6.254027366638184
    3. ' ' → logprob: -6.379027366638184
    4. 'g' → logprob: -8.379027366638184
    5. 'None' → logprob: -9.004027366638184
    6. '(' → logprob: -11.129027366638184
    7. '-' → logprob: -11.879027366638184
    8. ' None' → logprob: -12.004027366638184
    9. ' g' → logprob: -12.379027366638184
    10. '[' → logprob: -13.379027366638184

Token 634: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03819641098380089
    2. '1' → logprob: -3.288196325302124
    3. 'g' → logprob: -9.538196563720703
    4. 'None' → logprob: -9.788196563720703
    5. '-' → logprob: -11.538196563720703
    6. '(' → logprob: -11.538196563720703
    7. ' ' → logprob: -13.163196563720703
    8. '2' → logprob: -14.038196563720703
    9. '[' → logprob: -14.288196563720703
    10. 'graph' → logprob: -14.413196563720703

Token 635: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 636: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 637: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0012952389661222696
    2. '       ' → logprob: -6.75129508972168
    3. ' self' → logprob: -9.12629508972168
    4. '	self' → logprob: -11.37629508972168
    5. '   ' → logprob: -12.37629508972168
    6. '	' → logprob: -15.12629508972168
    7. '           ' → logprob: -16.50129508972168
    8. ' ' → logprob: -17.62629508972168
    9. '  ' → logprob: -17.87629508972168
    10. 'def' → logprob: -18.00129508972168

Token 638: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.0005296798190101981
    2. '.' → logprob: -7.875529766082764
    3. '.target' → logprob: -8.875529289245605
    4. 'next' → logprob: -12.500529289245605
    5. ' .' → logprob: -12.500529289245605
    6. '.plan' → logprob: -14.250529289245605
    7. '.time' → logprob: -14.375529289245605
    8. '.n' → logprob: -15.375529289245605
    9. 'Next' → logprob: -16.125530242919922
    10. '.Next' → logprob: -16.250530242919922

Token 639: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -6.20603168499656e-05
    2. '_segment' → logprob: -10.000061988830566
    3. 'Seg' → logprob: -12.000061988830566
    4. ' Segment' → logprob: -12.375061988830566
    5. ' =' → logprob: -13.125061988830566
    6. '=' → logprob: -14.375061988830566
    7. 'Step' → logprob: -14.375061988830566
    8. '_SEG' → logprob: -15.000061988830566
    9. 'Segments' → logprob: -15.000061988830566
    10. '	' → logprob: -15.125061988830566

Token 640: 'Left' (ID: 7471)
  Prédit: 'Left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -0.00016802136087790132
    2. 'Time' → logprob: -9.000167846679688
    3. 'left' → logprob: -10.875167846679688
    4. '_left' → logprob: -11.625167846679688
    5. ' =' → logprob: -12.625167846679688
    6. 'Le' → logprob: -12.625167846679688
    7. '=' → logprob: -12.875167846679688
    8. '_Left' → logprob: -13.000167846679688
    9. 'Length' → logprob: -13.250167846679688
    10. '[' → logprob: -14.125167846679688

Token 641: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -9.253090865968261e-06
    2. '=' → logprob: -12.000009536743164
    3. 'time' → logprob: -13.250009536743164
    4. '	Time' → logprob: -14.875009536743164
    5. ' Time' → logprob: -15.250009536743164
    6. '_time' → logprob: -15.250009536743164
    7. ' =' → logprob: -15.500009536743164
    8. '   ' → logprob: -16.375009536743164
    9. '_Time' → logprob: -16.500009536743164
    10. 'Ti' → logprob: -16.500009536743164

Token 642: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407805919647217
    2. ' =' → logprob: -0.9740780591964722
    3. '   ' → logprob: -14.974078178405762
    4. '=None' → logprob: -14.974078178405762
    5. ' ' → logprob: -15.349078178405762
    6. '0' → logprob: -16.099077224731445
    7. ',' → logprob: -16.224077224731445
    8. '	' → logprob: -17.224077224731445
    9. '[' → logprob: -17.974077224731445
    10. ':' → logprob: -18.224077224731445

Token 643: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00037681119283661246
    2. '-' → logprob: -8.25037670135498
    3. ' ' → logprob: -9.87537670135498
    4. '1' → logprob: -10.50037670135498
    5. 'float' → logprob: -11.25037670135498
    6. 'int' → logprob: -12.25037670135498
    7. 'sys' → logprob: -12.50037670135498
    8. 'None' → logprob: -12.50037670135498
    9. 'g' → logprob: -13.25037670135498
    10. '10' → logprob: -13.75037670135498

Token 644: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0027025199960917234
    2. '-' → logprob: -6.002702713012695
    3. 'float' → logprob: -9.377702713012695
    4. '1' → logprob: -10.127702713012695
    5. 'None' → logprob: -10.252702713012695
    6. 'sys' → logprob: -10.627702713012695
    7. 'int' → logprob: -11.002702713012695
    8. ' ' → logprob: -11.752702713012695
    9. 'g' → logprob: -12.377702713012695
    10. '10' → logprob: -13.127702713012695

Token 645: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 646: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2895725667476654
    2. '<|end|>' → logprob: -1.5395725965499878
    3. '	self' → logprob: -3.6645724773406982
    4. '	' → logprob: -5.414572715759277
    5. 'self' → logprob: -5.914572715759277
    6. '   ' → logprob: -6.039572715759277
    7. '
' → logprob: -7.539572715759277
    8. ' self' → logprob: -7.914572715759277
    9. '<|end|>' → logprob: -8.414572715759277
    10. '	def' → logprob: -9.164572715759277

Token 647: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0020208319183439016
    2. '       ' → logprob: -6.502020835876465
    3. 'def' → logprob: -8.377020835876465
    4. ' self' → logprob: -8.377020835876465
    5. '	self' → logprob: -11.377020835876465
    6. '   ' → logprob: -11.502020835876465
    7. '#' → logprob: -11.752020835876465
    8. 'while' → logprob: -12.127020835876465
    9. 'for' → logprob: -12.252020835876465
    10. 'g' → logprob: -12.377020835876465

Token 648: '.target' (ID: 11090)
  Prédit: '.target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.target' → logprob: -0.0003115095605608076
    2. '.' → logprob: -9.375311851501465
    3. '.g' → logprob: -9.375311851501465
    4. '.graph' → logprob: -9.500311851501465
    5. 'target' → logprob: -10.375311851501465
    6. '.plan' → logprob: -11.500311851501465
    7. '.next' → logprob: -11.750311851501465
    8. '.driver' → logprob: -12.125311851501465
    9. '.t' → logprob: -12.750311851501465
    10. ' .' → logprob: -13.375311851501465

Token 649: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.474422425031662
    2. '=' → logprob: -0.9744224548339844
    3. '=None' → logprob: -8.099422454833984
    4. 'None' → logprob: -10.474422454833984
    5. ' None' → logprob: -11.599422454833984
    6. '<|end|>' → logprob: -13.224422454833984
    7. ' ' → logprob: -13.724422454833984
    8. ',' → logprob: -14.974422454833984
    9. '   ' → logprob: -15.099422454833984
    10. '(None' → logprob: -15.349422454833984

Token 650: ' ' (ID: 220)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.13039647042751312
    2. '1' → logprob: -2.1303963661193848
    3. '-' → logprob: -6.505396366119385
    4. 'g' → logprob: -7.005396366119385
    5. '0' → logprob: -7.630396366119385
    6. ' None' → logprob: -8.005396842956543
    7. 'graph' → logprob: -9.630396842956543
    8. 'self' → logprob: -9.755396842956543
    9. ' ' → logprob: -10.380396842956543
    10. 'sys' → logprob: -10.755396842956543

Token 651: '1' (ID: 16)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.019344693049788475
    2. '1' → logprob: -4.269344806671143
    3. '-' → logprob: -5.519344806671143
    4. '0' → logprob: -6.894344806671143
    5. 'g' → logprob: -9.519344329833984
    6. ' None' → logprob: -10.519344329833984
    7. 'N' → logprob: -12.019344329833984
    8. '(None' → logprob: -12.144344329833984
    9. '2' → logprob: -12.394344329833984
    10. 'self' → logprob: -12.394344329833984

Token 652: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 653: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 654: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.057658422738313675
    2. '<|end|>' → logprob: -3.8076584339141846
    3. ' def' → logprob: -3.9326584339141846
    4. '   ' → logprob: -4.4326581954956055
    5. '       ' → logprob: -6.9326581954956055
    6. '	def' → logprob: -7.1826581954956055
    7. '<|end|>' → logprob: -9.182658195495605
    8. '
' → logprob: -9.307658195495605
    9. ' ' → logprob: -9.557658195495605
    10. 'pass' → logprob: -9.932658195495605

Token 655: '.map' (ID: 7975)
  Prédit: '.g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.0831490159034729
    2. '.graph' → logprob: -2.583148956298828
    3. '._' → logprob: -5.833148956298828
    4. 'graph' → logprob: -8.208148956298828
    5. '.plan' → logprob: -8.583148956298828
    6. 'g' → logprob: -9.083148956298828
    7. '.path' → logprob: -9.083148956298828
    8. '.G' → logprob: -9.083148956298828
    9. '.route' → logprob: -9.458148956298828
    10. '.target' → logprob: -10.583148956298828

Token 656: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07032863795757294
    2. '=' → logprob: -2.695328712463379
    3. '=g' → logprob: -7.945328712463379
    4. ' ' → logprob: -11.570328712463379
    5. '   ' → logprob: -11.695328712463379
    6. 'g' → logprob: -12.445328712463379
    7. '	' → logprob: -12.695328712463379
    8. '        ' → logprob: -12.820328712463379
    9. '    ' → logprob: -12.945328712463379
    10. '       ' → logprob: -13.195328712463379

Token 657: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.008623674511909485
    2. ' g' → logprob: -4.7586236000061035
    3. 'graph' → logprob: -11.633624076843262
    4. '	g' → logprob: -15.508624076843262
    5. ' graph' → logprob: -15.883624076843262
    6. '   ' → logprob: -20.133623123168945
    7. 'Graph' → logprob: -20.383623123168945
    8. ' ' → logprob: -20.383623123168945
    9. '(g' → logprob: -21.008623123168945
    10. ' ' → logprob: -21.508623123168945

Token 658: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 659: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5587347149848938
    2. 'def' → logprob: -1.683734655380249
    3. '<|end|>' → logprob: -1.683734655380249
    4. '	def' → logprob: -3.558734655380249
    5. ' def' → logprob: -3.683734655380249
    6. '<|end|>' → logprob: -6.058734893798828
    7. '
' → logprob: -7.558734893798828
    8. '       ' → logprob: -9.558734893798828
    9. '  ' → logprob: -10.183734893798828
    10. ' ' → logprob: -10.683734893798828

Token 660: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0011173540260642767
    2. ' def' → logprob: -7.12611722946167
    3. '   ' → logprob: -8.501117706298828
    4. '	def' → logprob: -9.126117706298828
    5. '    
' → logprob: -15.626117706298828
    6. '<|end|>' → logprob: -15.876117706298828
    7. '    ' → logprob: -16.501117706298828
    8. '	
' → logprob: -16.751117706298828
    9. '       ' → logprob: -16.876117706298828
    10. '<|end|>' → logprob: -17.126117706298828

Token 661: ' route' (ID: 9656)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.836007297039032
    2. ' move' → logprob: -1.5860073566436768
    3. 'update' → logprob: -2.2110073566436768
    4. 'step' → logprob: -2.9610073566436768
    5. ' update' → logprob: -3.3360073566436768
    6. 'start' → logprob: -3.5860073566436768
    7. ' step' → logprob: -3.7110073566436768
    8. 'wait' → logprob: -4.461007118225098
    9. 'tick' → logprob: -4.586007118225098
    10. 'next' → logprob: -4.836007118225098

Token 662: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0032410474959760904
    2. '(' → logprob: -5.753241062164307
    3. ' (' → logprob: -10.878240585327148
    4. 'self' → logprob: -11.003240585327148
    5. '_(' → logprob: -12.628240585327148
    6. '_next' → logprob: -12.628240585327148
    7. '_to' → logprob: -13.128240585327148
    8. 'def' → logprob: -13.503240585327148
    9. '(target' → logprob: -13.628240585327148
    10. '_target' → logprob: -13.753240585327148

Token 663: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001048646867275238
    2. '(' → logprob: -8.001049041748047
    3. 'self' → logprob: -8.376049041748047
    4. ',' → logprob: -8.376049041748047
    5. ')(' → logprob: -9.501049041748047
    6. ',self' → logprob: -10.126049041748047
    7. '(target' → logprob: -10.876049041748047
    8. '):' → logprob: -11.001049041748047
    9. '_start' → logprob: -11.376049041748047
    10. ')' → logprob: -11.501049041748047

Token 664: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05116766691207886
    2. ' if' → logprob: -3.3011677265167236
    3. 'if' → logprob: -4.4261674880981445
    4. ' while' → logprob: -8.301167488098145
    5. '	' → logprob: -8.676167488098145
    6. 'while' → logprob: -8.801167488098145
    7. ' for' → logprob: -8.926167488098145
    8. 'for' → logprob: -9.926167488098145
    9. '	if' → logprob: -10.176167488098145
    10. 'return' → logprob: -10.176167488098145

Token 665: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.015179036185145378
    2. '       ' → logprob: -4.64017915725708
    3. 'while' → logprob: -5.76517915725708
    4. ' if' → logprob: -6.26517915725708
    5. 'for' → logprob: -8.515178680419922
    6. 'pass' → logprob: -9.890178680419922
    7. '#' (adapté à ' #') → logprob: -10.765178680419922
    8. 'def' → logprob: -10.890178680419922
    9. 'self' → logprob: -11.015178680419922
    10. ' while' → logprob: -11.515178680419922

Token 666: ' Util' (ID: 13564)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003892946057021618
    2. 'while' → logprob: -6.12889289855957
    3. 'data' → logprob: -7.00389289855957
    4. '       ' → logprob: -8.25389289855957
    5. 'for' → logprob: -8.50389289855957
    6. 'def' → logprob: -9.50389289855957
    7. 'pass' → logprob: -9.62889289855957
    8. ' if' → logprob: -10.50389289855957
    9. 'i' → logprob: -10.62889289855957
    10. 'path' → logprob: -10.75389289855957

Token 667: 'ise' (ID: 1096)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.413824200630188
    2. 'isez' → logprob: -1.413824200630188
    3. 'def' → logprob: -1.913824200630188
    4. 'ize' → logprob: -2.0388240814208984
    5. 'iser' → logprob: -2.2888240814208984
    6. '   ' → logprob: -3.1638240814208984
    7. 'ise' → logprob: -3.4138240814208984
    8. 'ate' → logprob: -4.788824081420898
    9. '       ' → logprob: -4.788824081420898
    10. 't' → logprob: -4.913824081420898

Token 668: ' un' (ID: 537)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.019975779578089714
    2. 'len' → logprob: -4.269975662231445
    3. 'if' → logprob: -6.519975662231445
    4. 'range' → logprob: -7.269975662231445
    5. 'sys' → logprob: -7.519975662231445
    6. '       ' → logprob: -7.519975662231445
    7. '   ' → logprob: -7.644975662231445
    8. 'raw' → logprob: -7.894975662231445
    9. 'lambda' → logprob: -8.269975662231445
    10. 'not' → logprob: -8.269975662231445

Token 669: ' double' (ID: 3503)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5819781422615051
    2. 'while' → logprob: -1.7069780826568604
    3. 'for' → logprob: -1.8319780826568604
    4. 'def' → logprob: -4.0819783210754395
    5. 'min' → logprob: -4.4569783210754395
    6. 'it' → logprob: -4.4569783210754395
    7. 'heap' → logprob: -4.5819783210754395
    8. 'lambda' → logprob: -4.8319783210754395
    9. 'try' → logprob: -4.9569783210754395
    10. 'fun' → logprob: -5.0819783210754395

Token 670: ' reduce' (ID: 10389)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.037543535232543945
    2. 'while' → logprob: -3.662543535232544
    3. 'if' → logprob: -4.912543296813965
    4. 'underscore' → logprob: -6.912543296813965
    5. 'bou' → logprob: -7.037543296813965
    6. 'loop' → logprob: -7.287543296813965
    7. 'nested' → logprob: -7.912543296813965
    8. 't' → logprob: -8.912543296813965
    9. 'deque' → logprob: -8.912543296813965
    10. 'cycle' → logprob: -9.162543296813965

Token 671: ' pour' (ID: 1930)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5152855515480042
    2. '(
' → logprob: -1.5152854919433594
    3. '(' → logprob: -2.0152854919433594
    4. '       ' → logprob: -4.015285491943359
    5. '(f' → logprob: -4.640285491943359
    6. 'lambda' → logprob: -4.765285491943359
    7. ',' → logprob: -6.015285491943359
    8. 'self' → logprob: -6.265285491943359
    9. '(self' → logprob: -6.515285491943359
    10. '(operator' → logprob: -7.015285491943359

Token 672: ' transformer' (ID: 59595)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.25310325622558594
    2. '(lambda' → logprob: -2.503103256225586
    3. ' lambda' → logprob: -3.128103256225586
    4. 'self' → logprob: -3.378103256225586
    5. 'fun' → logprob: -3.628103256225586
    6. 'operator' → logprob: -4.378103256225586
    7. ' functools' → logprob: -4.503103256225586
    8. ' self' → logprob: -5.878103256225586
    9. 'reduce' → logprob: -6.003103256225586
    10. 'map' → logprob: -6.503103256225586

Token 673: ' une' (ID: 2463)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.028514491394162178
    2. 'lambda' → logprob: -4.028514385223389
    3. '       ' → logprob: -5.903514385223389
    4. 'it' → logprob: -6.153514385223389
    5. ' self' → logprob: -6.278514385223389
    6. '(lambda' → logprob: -6.778514385223389
    7. 'list' → logprob: -6.903514385223389
    8. 'range' → logprob: -8.278514862060547
    9. 'map' → logprob: -8.278514862060547
    10. 'operator' → logprob: -8.653514862060547

Token 674: ' série' (ID: 22079)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.36852285265922546
    2. 'lambda' → logprob: -2.493522882461548
    3. 'fun' → logprob: -2.618522882461548
    4. 'liste' → logprob: -2.993522882461548
    5. 'map' → logprob: -3.368522882461548
    6. 'it' → logprob: -4.493522644042969
    7. 'tuple' → logprob: -4.493522644042969
    8. 'reduce' → logprob: -5.118522644042969
    9. 'route' → logprob: -5.618522644042969
    10. 'sequence' → logprob: -5.618522644042969

Token 675: ' de' (ID: 334)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.7007054090499878
    2. '(' → logprob: -1.5757054090499878
    3. '       ' → logprob: -2.2007055282592773
    4. ' de' → logprob: -2.8257055282592773
    5. '(
' → logprob: -3.3257055282592773
    6. 'de' → logprob: -3.9507055282592773
    7. ' of' → logprob: -4.200705528259277
    8. 'd' → logprob: -5.075705528259277
    9. '   ' → logprob: -5.200705528259277
    10. '(self' → logprob: -5.325705528259277

Token 676: ' det' (ID: 1476)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.7237843871116638
    2. 'self' → logprob: -0.9737843871116638
    3. 'list' → logprob: -3.4737844467163086
    4. 'operator' → logprob: -3.5987844467163086
    5. 'it' → logprob: -3.8487844467163086
    6. 'range' → logprob: -3.8487844467163086
    7. 'map' → logprob: -3.9737844467163086
    8. '(lambda' → logprob: -4.973784446716309
    9. 'int' → logprob: -5.223784446716309
    10. 'fun' → logprob: -6.723784446716309

Token 677: 'ours' (ID: 2327)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.0202891826629639
    2. 'tes' → logprob: -1.6452891826629639
    3. 'ermin' → logprob: -2.270289182662964
    4. 'ails' → logprob: -2.645289182662964
    5. 'erm' → logprob: -3.270289182662964
    6. 'min' → logprob: -3.645289182662964
    7. 'ours' → logprob: -3.770289182662964
    8. 'ctions' → logprob: -4.020289421081543
    9. 't' → logprob: -4.020289421081543
    10. 's' → logprob: -4.145289421081543

Token 678: '
' (ID: 198)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5775120258331299
    2. '(' → logprob: -1.5775120258331299
    3. '(
' → logprob: -1.8275120258331299
    4. '(self' → logprob: -3.82751202583313
    5. '       ' → logprob: -4.202511787414551
    6. '(f' → logprob: -4.452511787414551
    7. ',' → logprob: -5.452511787414551
    8. 'lambda' → logprob: -5.577511787414551
    9. ' (' → logprob: -6.452511787414551
    10. '(operator' → logprob: -6.452511787414551

Token 679: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08355197310447693
    2. '(' → logprob: -3.5835518836975098
    3. '(self' → logprob: -4.70855188369751
    4. '(
' → logprob: -4.70855188369751
    5. '(lambda' → logprob: -4.83355188369751
    6. ' into' → logprob: -5.45855188369751
    7. ',' → logprob: -5.45855188369751
    8. ' (' → logprob: -5.70855188369751
    9. '   ' → logprob: -6.08355188369751
    10. '.' → logprob: -6.45855188369751

Token 680: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.1749968528747559
    2. ' functools' → logprob: -1.2999968528747559
    3. 'fun' → logprob: -1.4249968528747559
    4. 'lambda' → logprob: -3.174996852874756
    5. ' return' → logprob: -3.299996852874756
    6. '       ' → logprob: -3.299996852874756
    7. 'self' → logprob: -3.424996852874756
    8. 'out' → logprob: -5.049996852874756
    9. ' self' → logprob: -5.049996852874756
    10. 'list' → logprob: -5.799996852874756

Token 681: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.7447433471679688
    2. ' not' → logprob: -1.1197433471679688
    3. 'self' → logprob: -1.9947433471679688
    4. 'len' → logprob: -3.6197433471679688
    5. ' self' → logprob: -3.6197433471679688
    6. ' len' → logprob: -4.744743347167969
    7. '(not' → logprob: -8.619743347167969
    8. '   ' → logprob: -9.369743347167969
    9. '(len' → logprob: -10.119743347167969
    10. ' ' → logprob: -10.119743347167969

Token 682: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.054931484162807465
    2. ' self' → logprob: -2.929931402206421
    3. '(self' → logprob: -10.554931640625
    4. 'len' → logprob: -11.179931640625
    5. ' hasattr' → logprob: -12.554931640625
    6. '(' → logprob: -13.429931640625
    7. ' len' → logprob: -13.554931640625
    8. '	self' → logprob: -13.929931640625
    9. ' (' → logprob: -14.929931640625
    10. ' ' → logprob: -15.304931640625

Token 683: '.order' (ID: 25549)
  Prédit: '.plan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -0.28512465953826904
    2. '.order' → logprob: -1.410124659538269
    3. '.route' → logprob: -6.035124778747559
    4. '.target' → logprob: -6.910124778747559
    5. '.next' → logprob: -8.535124778747559
    6. '.' → logprob: -8.785124778747559
    7. '.path' → logprob: -9.535124778747559
    8. '.location' → logprob: -9.660124778747559
    9. '.pl' → logprob: -10.410124778747559
    10. 'order' → logprob: -10.910124778747559

Token 684: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016070736572146416
    2. ':
' → logprob: -4.26607084274292
    3. ':return' → logprob: -6.76607084274292
    4. '.' → logprob: -7.51607084274292
    5. ' or' → logprob: -9.141070365905762
    6. ' :' → logprob: -10.516070365905762
    7. '   ' → logprob: -10.641070365905762
    8. '       ' → logprob: -11.266070365905762
    9. ' and' → logprob: -11.516070365905762
    10. ':
' → logprob: -12.016070365905762

Token 685: ' not' (ID: 625)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06662623584270477
    2. ' self' → logprob: -2.8166263103485107
    3. 'False' → logprob: -6.816626071929932
    4. 'not' → logprob: -6.941626071929932
    5. ' not' → logprob: -7.316626071929932
    6. 'len' → logprob: -7.316626071929932
    7. 'True' → logprob: -7.441626071929932
    8. '   ' → logprob: -8.56662654876709
    9. '       ' → logprob: -8.94162654876709
    10. ' len' → logprob: -9.19162654876709

Token 686: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0006727590807713568
    2. ' self' → logprob: -7.500672817230225
    3. 'len' → logprob: -9.750672340393066
    4. '   ' → logprob: -11.000672340393066
    5. 'out' → logprob: -11.375672340393066
    6. 'not' → logprob: -11.875672340393066
    7. '       ' → logprob: -12.000672340393066
    8. '
' → logprob: -12.875672340393066
    9. '(self' → logprob: -13.000672340393066
    10. 'True' → logprob: -13.125672340393066

Token 687: '.plan' (ID: 96013)
  Prédit: '.plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -0.483067125082016
    2. 'plan' → logprob: -1.4830671548843384
    3. '.next' → logprob: -2.983067035675049
    4. '.location' → logprob: -3.233067035675049
    5. 'next' → logprob: -3.858067035675049
    6. 'location' → logprob: -3.858067035675049
    7. '.target' → logprob: -4.233067035675049
    8. 'target' → logprob: -4.983067035675049
    9. '.route' → logprob: -6.483067035675049
    10. 'route' → logprob: -7.858067035675049

Token 688: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20526088774204254
    2. ':
' → logprob: -1.7052608728408813
    3. ':return' → logprob: -5.580260753631592
    4. '():
' → logprob: -10.95526123046875
    5. '   ' → logprob: -11.08026123046875
    6. '():' → logprob: -11.95526123046875
    7. ':
' → logprob: -12.08026123046875
    8. '       ' → logprob: -12.08026123046875
    9. 'return' → logprob: -12.08026123046875
    10. ' and' → logprob: -12.58026123046875

Token 689: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2727147340774536
    2. ':
' → logprob: -2.022714614868164
    3. '           ' → logprob: -2.647714614868164
    4. ':' → logprob: -4.397714614868164
    5. ' return' → logprob: -4.522714614868164
    6. 'return' → logprob: -4.897714614868164
    7. ':return' → logprob: -6.147714614868164
    8. '
' → logprob: -6.897714614868164
    9. '   ' → logprob: -7.772714614868164
    10. '	' → logprob: -7.897714614868164

Token 690: ' self' (ID: 1051)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2422991544008255
    2. ' return' → logprob: -1.867299199104309
    3. '       ' → logprob: -3.4922990798950195
    4. '           ' → logprob: -3.9922990798950195
    5. 'self' (adapté à ' self') → logprob: -4.7422990798950195
    6. ' self' → logprob: -6.1172990798950195
    7. '   ' → logprob: -7.7422990798950195
    8. 'pass' → logprob: -8.61729907989502
    9. '	return' → logprob: -9.36729907989502
    10. ' pass' → logprob: -10.74229907989502

Token 691: '.order' (ID: 25549)
  Prédit: '.plan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.plan' → logprob: -0.4970890283584595
    2. '.' → logprob: -1.6220890283584595
    3. '.return' → logprob: -1.9970890283584595
    4. '.route' → logprob: -3.62208890914917
    5. '.location' → logprob: -4.49708890914917
    6. ' .' → logprob: -4.62208890914917
    7. '.target' → logprob: -5.24708890914917
    8. '.next' → logprob: -5.49708890914917
    9. 'return' → logprob: -7.37208890914917
    10. ' return' → logprob: -9.372089385986328

Token 692: '.add' (ID: 1950)
  Prédit: '.clear'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.clear' → logprob: -0.7386522889137268
    2. '.add' → logprob: -1.113652229309082
    3. '=' → logprob: -2.238652229309082
    4. '.' → logprob: -2.863652229309082
    5. 'return' → logprob: -4.363652229309082
    6. '.append' → logprob: -5.238652229309082
    7. ' =' → logprob: -5.488652229309082
    8. '.update' → logprob: -5.738652229309082
    9. '==' → logprob: -7.363652229309082
    10. '.pop' → logprob: -7.488652229309082

Token 693: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2550230920314789
    2. '(self' → logprob: -1.5050231218338013
    3. '((' → logprob: -6.380023002624512
    4. '(int' → logprob: -7.880023002624512
    5. '(*' → logprob: -7.880023002624512
    6. '(next' → logprob: -8.130023002624512
    7. '(tuple' → logprob: -9.880023002624512
    8. '(
' → logprob: -10.130023002624512
    9. '(*(' → logprob: -10.255023002624512
    10. '(random' → logprob: -10.630023002624512

Token 694: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5015504956245422
    2. 'self' → logprob: -1.0015504360198975
    3. '2' → logprob: -3.8765504360198975
    4. '(' → logprob: -6.501550674438477
    5. '0' → logprob: -6.501550674438477
    6. ' self' → logprob: -7.001550674438477
    7. 'int' → logprob: -7.001550674438477
    8. '(self' → logprob: -7.251550674438477
    9. ' ' → logprob: -8.126550674438477
    10. '3' → logprob: -9.001550674438477

Token 695: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015693799359723926
    2. ')
' → logprob: -6.7515692710876465
    3. ' )' → logprob: -7.8765692710876465
    4. '<|end|>' → logprob: -11.751569747924805
    5. ' )
' → logprob: -12.501569747924805
    6. '       ' → logprob: -13.251569747924805
    7. ')

' → logprob: -13.626569747924805
    8. ')return' → logprob: -13.876569747924805
    9. ')
' → logprob: -14.126569747924805
    10. '   ' → logprob: -14.501569747924805

Token 696: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7277434468269348
    2. ')' → logprob: -1.60274338722229
    3. '<|end|>' → logprob: -1.85274338722229
    4. '
' → logprob: -2.85274338722229
    5. ' ' → logprob: -3.22774338722229
    6. '	' → logprob: -4.727743625640869
    7. ':' → logprob: -4.977743625640869
    8. ' 
' → logprob: -5.102743625640869
    9. '\n' → logprob: -5.227743625640869
    10. '.' → logprob: -5.727743625640869

Token 697: ' last' (ID: 2174)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.646437406539917
    2. 'return' → logprob: -1.646437406539917
    3. 'for' → logprob: -2.521437406539917
    4. 'self' → logprob: -2.521437406539917
    5. 'if' → logprob: -2.771437406539917
    6. ')' → logprob: -4.521437644958496
    7. 'else' → logprob: -4.771437644958496
    8. ' for' → logprob: -5.271437644958496
    9. 'while' → logprob: -5.271437644958496
    10. 'elif' → logprob: -5.771437644958496

Token 698: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3493112325668335
    2. ' =' → logprob: -1.4743112325668335
    3. '_point' → logprob: -1.8493112325668335
    4. '_pos' → logprob: -2.349311351776123
    5. '=' → logprob: -2.599311351776123
    6. '_node' → logprob: -2.849311351776123
    7. '_location' → logprob: -2.974311351776123
    8. '_position' → logprob: -4.849311351776123
    9. '_loc' → logprob: -4.849311351776123
    10. '_target' → logprob: -4.974311351776123

Token 699: ' functools' (ID: 142636)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6317346692085266
    2. '1' → logprob: -1.1317346096038818
    3. ' self' → logprob: -2.381734609603882
    4. ' ' → logprob: -3.506734609603882
    5. '(' → logprob: -5.131734848022461
    6. '0' → logprob: -5.756734848022461
    7. 'next' → logprob: -6.006734848022461
    8. 'None' → logprob: -6.506734848022461
    9. 'list' → logprob: -6.506734848022461
    10. ' None' → logprob: -6.631734848022461

Token 700: '.reduce' (ID: 49441)
  Prédit: '.reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reduce' → logprob: -0.00019197762594558299
    2. '.' → logprob: -9.500191688537598
    3. ' .' → logprob: -9.625191688537598
    4. '.partial' → logprob: -10.500191688537598
    5. '_reduce' → logprob: -10.875191688537598
    6. 'reduce' → logprob: -12.875191688537598
    7. '.red' → logprob: -14.500191688537598
    8. '.reducer' → logprob: -14.875191688537598
    9. ' reduce' → logprob: -15.375191688537598
    10. '.s' → logprob: -15.375191688537598

Token 701: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.4004383385181427
    2. '(operator' → logprob: -1.1504383087158203
    3. '(' → logprob: -4.40043830871582
    4. '(
' → logprob: -7.15043830871582
    5. '(self' → logprob: -8.02543830871582
    6. '(op' → logprob: -10.77543830871582
    7. '   ' → logprob: -10.90043830871582
    8. '(list' → logprob: -11.02543830871582
    9. 'operator' → logprob: -11.65043830871582
    10. 'lambda' → logprob: -11.90043830871582

Token 702: ' x' (ID: 1215)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.5335034132003784
    2. 'lambda' → logprob: -1.0335034132003784
    3. '(lambda' → logprob: -4.158503532409668
    4. 'a' → logprob: -4.533503532409668
    5. ' a' → logprob: -4.533503532409668
    6. ' x' → logprob: -4.658503532409668
    7. 'x' → logprob: -5.408503532409668
    8. ' self' → logprob: -6.408503532409668
    9. '   ' → logprob: -6.908503532409668
    10. 'self' → logprob: -7.033503532409668

Token 703: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016121044754981995
    2. 'lambda' → logprob: -6.876612186431885
    3. ',x' → logprob: -8.376611709594727
    4. ',y' → logprob: -8.876611709594727
    5. ':' → logprob: -10.126611709594727
    6. ' ,' → logprob: -10.376611709594727
    7. 'y' → logprob: -11.001611709594727
    8. 'a' → logprob: -11.126611709594727
    9. '=lambda' → logprob: -11.126611709594727
    10. '   ' → logprob: -11.376611709594727

Token 704: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.14286531507968903
    2. ' y' → logprob: -2.0178654193878174
    3. '   ' → logprob: -9.892865180969238
    4. 'acc' → logprob: -10.017865180969238
    5. 'lambda' → logprob: -11.267865180969238
    6. ' ' → logprob: -11.517865180969238
    7. 'a' → logprob: -11.642865180969238
    8. '    ' → logprob: -11.892865180969238
    9. '  ' → logprob: -12.017865180969238
    10. '       ' → logprob: -12.142865180969238

Token 705: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005951552651822567
    2. ',' → logprob: -5.255951404571533
    3. ' :' → logprob: -7.380951404571533
    4. '=' → logprob: -11.130951881408691
    5. '[' → logprob: -11.130951881408691
    6. '   ' → logprob: -11.255951881408691
    7. ':[' → logprob: -12.130951881408691
    8. ':
' → logprob: -12.130951881408691
    9. '       ' → logprob: -12.255951881408691
    10. 'y' → logprob: -12.380951881408691

Token 706: ' y' (ID: 342)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.2897976636886597
    2. ' self' → logprob: -1.5397976636886597
    3. 'x' → logprob: -1.7897976636886597
    4. 'y' → logprob: -1.7897976636886597
    5. ' y' → logprob: -2.289797782897949
    6. ' x' → logprob: -3.414797782897949
    7. ' operator' → logprob: -5.164797782897949
    8. ' [' → logprob: -5.164797782897949
    9. 'list' → logprob: -5.164797782897949
    10. ' list' → logprob: -5.289797782897949

Token 707: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25218498706817627
    2. ',' → logprob: -1.7521849870681763
    3. ' ,' → logprob: -3.8771848678588867
    4. '[' → logprob: -4.127184867858887
    5. 'if' → logprob: -5.002184867858887
    6. ')' → logprob: -6.502184867858887
    7. ' or' → logprob: -6.877184867858887
    8. '),' → logprob: -7.502184867858887
    9. ' +' → logprob: -7.627184867858887
    10. '+' → logprob: -7.752184867858887

Token 708: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.15270347893238068
    2. ' self' → logprob: -2.7777035236358643
    3. 'it' → logprob: -3.9027035236358643
    4. '[self' → logprob: -3.9027035236358643
    5. ' itertools' → logprob: -4.402703285217285
    6. '[' → logprob: -5.152703285217285
    7. '(self' → logprob: -5.527703285217285
    8. ' [' → logprob: -5.902703285217285
    9. 'list' → logprob: -6.152703285217285
    10. '[it' → logprob: -6.277703285217285

Token 709: '.plan' (ID: 96013)
  Prédit: '.plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -0.18028448522090912
    2. '.order' → logprob: -1.8052845001220703
    3. '.route' → logprob: -7.93028450012207
    4. '.path' → logprob: -9.55528450012207
    5. '.location' → logprob: -10.30528450012207
    6. '.' → logprob: -10.93028450012207
    7. '.out' → logprob: -11.30528450012207
    8. ' .' → logprob: -11.80528450012207
    9. 'order' → logprob: -11.80528450012207
    10. 'plan' → logprob: -11.93028450012207

Token 710: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06999856978654861
    2. ' ,' → logprob: -3.1949985027313232
    3. ')' → logprob: -4.069998741149902
    4. ' +' → logprob: -5.319998741149902
    5. '       ' → logprob: -6.569998741149902
    6. '+' → logprob: -6.944998741149902
    7. '   ' → logprob: -7.319998741149902
    8. ' )' → logprob: -7.694998741149902
    9. '+[' → logprob: -7.944998741149902
    10. ' or' → logprob: -8.569998741149902

Token 711: ' self' (ID: 1051)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2653014361858368
    2. 'self' → logprob: -1.5153014659881592
    3. '0' → logprob: -5.01530122756958
    4. 'None' → logprob: -5.26530122756958
    5. '[' → logprob: -7.51530122756958
    6. ' ' → logprob: -7.51530122756958
    7. ' self' → logprob: -8.765301704406738
    8. '[self' → logprob: -9.390301704406738
    9. '   ' → logprob: -10.265301704406738
    10. '(' → logprob: -10.890301704406738

Token 712: '.location' (ID: 15725)
  Prédit: '.location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.location' → logprob: -0.001512004528194666
    2. '.target' → logprob: -6.876512050628662
    3. 'location' → logprob: -7.876512050628662
    4. '.order' → logprob: -10.126511573791504
    5. '.map' → logprob: -10.376511573791504
    6. '.route' → logprob: -11.501511573791504
    7. '.plan' → logprob: -12.376511573791504
    8. '.' → logprob: -12.751511573791504
    9. '.next' → logprob: -13.001511573791504
    10. '.loc' → logprob: -13.251511573791504

Token 713: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007711323909461498
    2. ' )' → logprob: -4.882711410522461
    3. ')
' → logprob: -9.382711410522461
    4. '   ' → logprob: -12.257711410522461
    5. ')+' → logprob: -12.632711410522461
    6. ' )
' → logprob: -12.632711410522461
    7. '       ' → logprob: -12.632711410522461
    8. ',' → logprob: -13.632711410522461
    9. '    ' → logprob: -13.882711410522461
    10. '+' → logprob: -14.382711410522461

Token 714: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 715: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.030713900923728943
    2. ' self' → logprob: -3.5307137966156006
    3. 'len' → logprob: -7.03071403503418
    4. ' len' → logprob: -9.78071403503418
    5. 'not' → logprob: -11.78071403503418
    6. '   ' → logprob: -12.28071403503418
    7. ' not' → logprob: -12.90571403503418
    8. ' ' → logprob: -13.40571403503418
    9. '	self' → logprob: -13.40571403503418
    10. 'False' → logprob: -13.78071403503418

Token 716: '.plan' (ID: 96013)
  Prédit: '.plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -1.3544423381972592e-05
    2. 'plan' → logprob: -12.00001335144043
    3. '.pl' → logprob: -13.00001335144043
    4. ' plan' → logprob: -13.25001335144043
    5. '.' → logprob: -13.37501335144043
    6. ' .' → logprob: -13.62501335144043
    7. '.location' → logprob: -16.37501335144043
    8. ' план' → logprob: -16.37501335144043
    9. '.out' → logprob: -16.87501335144043
    10. 'Plan' → logprob: -17.37501335144043

Token 717: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3879779577255249
    2. ' else' → logprob: -1.137977957725525
    3. '==' → logprob: -7.5129780769348145
    4. ':' → logprob: -8.137977600097656
    5. '!=' → logprob: -8.637977600097656
    6. 'not' → logprob: -10.637977600097656
    7. ' ' → logprob: -11.512977600097656
    8. ' not' → logprob: -11.637977600097656
    9. '   ' → logprob: -11.637977600097656
    10. ' ==' → logprob: -12.012977600097656

Token 718: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002681248588487506
    2. ' self' → logprob: -6.002681255340576
    3. '1' → logprob: -8.502680778503418
    4. '	self' → logprob: -13.627680778503418
    5. '       ' → logprob: -14.377680778503418
    6. '           ' → logprob: -15.252680778503418
    7. ' ' → logprob: -15.252680778503418
    8. '0' → logprob: -16.002681732177734
    9. '   ' → logprob: -16.127681732177734
    10. ' ' → logprob: -17.502681732177734

Token 719: '.location' (ID: 15725)
  Prédit: '.location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.location' → logprob: -0.00030697984038852155
    2. 'location' → logprob: -8.125307083129883
    3. '.' → logprob: -11.875307083129883
    4. '	location' → logprob: -13.125307083129883
    5. ' .' → logprob: -14.375307083129883
    6. '.target' → logprob: -14.500307083129883
    7. ' location' → logprob: -14.875307083129883
    8. '.user' → logprob: -16.000307083129883
    9. '.loc' → logprob: -16.250307083129883
    10. '_location' → logprob: -17.000307083129883

Token 720: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2374044954776764
    2. '<|end|>' → logprob: -1.612404465675354
    3. '
' → logprob: -4.9874043464660645
    4. '<|end|>' → logprob: -5.9874043464660645
    5. '.' → logprob: -7.4874043464660645
    6. ',' → logprob: -7.6124043464660645
    7. ')' → logprob: -7.7374043464660645
    8. '        
' → logprob: -8.237404823303223
    9. 'return' → logprob: -9.112404823303223
    10. '   ' → logprob: -9.112404823303223

Token 721: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022364558652043343
    2. '<|end|>' → logprob: -3.897364616394043
    3. '        
' → logprob: -7.772364616394043
    4. '
' → logprob: -7.772364616394043
    5. '<|end|>' → logprob: -7.897364616394043
    6. '.' → logprob: -8.772364616394043
    7. ',' → logprob: -9.647364616394043
    8. ')' → logprob: -9.772364616394043
    9. '   ' → logprob: -10.022364616394043
    10. ' ' → logprob: -10.272364616394043

Token 722: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03705141693353653
    2. ' if' → logprob: -4.162051200866699
    3. 'if' (adapté à ' if') → logprob: -4.912051200866699
    4. 'return' → logprob: -5.662051200866699
    5. 'next' → logprob: -5.787051200866699
    6. ' next' → logprob: -6.537051200866699
    7. ' for' → logprob: -7.287051200866699
    8. ' return' → logprob: -7.537051200866699
    9. 'self' → logprob: -7.662051200866699
    10. 'for' → logprob: -7.912051200866699

Token 723: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3717327415943146
    2. ' self' → logprob: -1.7467327117919922
    3. ' not' → logprob: -2.496732711791992
    4. 'not' → logprob: -2.996732711791992
    5. 'len' → logprob: -5.996732711791992
    6. ' len' → logprob: -7.246732711791992
    7. 'last' → logprob: -8.871732711791992
    8. '   ' → logprob: -8.996732711791992
    9. ' last' → logprob: -9.496732711791992
    10. ' ' → logprob: -9.996732711791992

Token 724: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.7124172449111938
    2. '.next' → logprob: -1.0874172449111938
    3. '.plan' → logprob: -1.8374172449111938
    4. 'next' → logprob: -5.212417125701904
    5. 'order' → logprob: -5.712417125701904
    6. 'plan' → logprob: -6.712417125701904
    7. '.target' → logprob: -7.212417125701904
    8. '.location' → logprob: -7.462417125701904
    9. 'not' → logprob: -7.587417125701904
    10. '.not' → logprob: -7.837417125701904

Token 725: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022535331547260284
    2. ':
' → logprob: -3.8975353240966797
    3. ' and' → logprob: -6.39753532409668
    4. 'and' → logprob: -9.02253532409668
    5. ' :' → logprob: -9.39753532409668
    6. '   ' → logprob: -10.39753532409668
    7. ':
' → logprob: -11.02253532409668
    8. '<|end|>' → logprob: -11.89753532409668
    9. ':not' → logprob: -11.89753532409668
    10. '.' → logprob: -12.02253532409668

Token 726: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.530319333076477
    2. '           ' → logprob: -1.155319333076477
    3. 'self' → logprob: -3.1553192138671875
    4. 'next' → logprob: -4.0303192138671875
    5. ' self' → logprob: -4.7803192138671875
    6. ' next' → logprob: -5.5303192138671875
    7. 'if' → logprob: -6.1553192138671875
    8. '        
' → logprob: -6.1553192138671875
    9. ' for' → logprob: -6.4053192138671875
    10. '   ' → logprob: -6.4053192138671875

Token 727: ' #' (ID: 1069)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6433844566345215
    2. '       ' → logprob: -1.8933844566345215
    3. 'self' → logprob: -2.0183844566345215
    4. 'dest' → logprob: -3.5183844566345215
    5. '           ' → logprob: -3.6433844566345215
    6. 'target' → logprob: -3.7683844566345215
    7. ' next' → logprob: -4.2683844566345215
    8. 'dist' → logprob: -4.3933844566345215
    9. 'u' → logprob: -4.6433844566345215
    10. 'n' → logprob: -4.6433844566345215

Token 728: ' Ch' (ID: 1036)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.27873957157135
    2. 'next' → logprob: -1.27873957157135
    3. 'dest' → logprob: -1.52873957157135
    4. ' next' → logprob: -2.4037394523620605
    5. '       ' → logprob: -3.9037394523620605
    6. 'first' → logprob: -4.5287394523620605
    7. 'targets' → logprob: -4.6537394523620605
    8. 'target' → logprob: -4.7787394523620605
    9. 'def' → logprob: -4.7787394523620605
    10. ' dest' → logprob: -4.9037394523620605

Token 729: 'ainer' (ID: 2573)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.06740138679742813
    2. 'osen' → logprob: -3.19240140914917
    3. 'e' → logprob: -5.06740140914917
    4. 'ose' → logprob: -5.31740140914917
    5. '   ' → logprob: -5.94240140914917
    6. ' o' → logprob: -6.31740140914917
    7. 'os' → logprob: -6.56740140914917
    8. '       ' → logprob: -6.56740140914917
    9. 'osed' → logprob: -7.31740140914917
    10. ' if' → logprob: -7.31740140914917

Token 730: ' tous' (ID: 10688)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3430342972278595
    2. '           ' → logprob: -2.718034267425537
    3. ' self' → logprob: -2.968034267425537
    4. 'path' → logprob: -3.093034267425537
    5. 'last' → logprob: -3.343034267425537
    6. '       ' → logprob: -4.093034267425537
    7. 'next' → logprob: -4.218034267425537
    8. ' last' → logprob: -4.593034267425537
    9. ' path' → logprob: -4.843034267425537
    10. 'sorted' → logprob: -5.343034267425537

Token 731: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.24862852692604065
    2. ' les' → logprob: -2.748628616333008
    3. 'self' → logprob: -3.373628616333008
    4. '(self' → logprob: -3.748628616333008
    5. '(
' → logprob: -4.748628616333008
    6. 'dest' → logprob: -4.998628616333008
    7. 'la' → logprob: -4.998628616333008
    8. 'list' → logprob: -5.123628616333008
    9. 'the' → logprob: -5.123628616333008
    10. '(lambda' → logprob: -5.373628616333008

Token 732: ' chemins' (ID: 192063)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.9769250154495239
    2. 'dest' → logprob: -1.226925015449524
    3. 'next' → logprob: -2.7269248962402344
    4. 'nodes' → logprob: -3.2269248962402344
    5. 'path' → logprob: -3.3519248962402344
    6. 'segments' → logprob: -3.3519248962402344
    7. 'targets' → logprob: -3.8519248962402344
    8. 'order' → logprob: -3.9769248962402344
    9. 'orders' → logprob: -4.226924896240234
    10. 'paths' → logprob: -4.726924896240234

Token 733: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41435137391090393
    2. '<|end|>' → logprob: -2.414351463317871
    3. '<|end|>' → logprob: -2.664351463317871
    4. '           ' → logprob: -2.664351463317871
    5. ',' → logprob: -3.164351463317871
    6. ' =' → logprob: -3.789351463317871
    7. '[' → logprob: -5.539351463317871
    8. ' for' → logprob: -5.664351463317871
    9. '=' → logprob: -5.664351463317871
    10. ')' → logprob: -5.664351463317871

Token 734: ' suivre' (ID: 54188)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4327980577945709
    2. 'fun' → logprob: -1.4327980279922485
    3. 'list' → logprob: -2.682798147201538
    4. ' self' → logprob: -4.682797908782959
    5. 'last' → logprob: -5.057797908782959
    6. 'lambda' → logprob: -5.307797908782959
    7. 'get' → logprob: -5.432797908782959
    8. 'out' → logprob: -5.557797908782959
    9. 'it' → logprob: -5.932797908782959
    10. 'reduce' → logprob: -6.182797908782959

Token 735: ' via' (ID: 4493)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07207345962524414
    2. '       ' → logprob: -3.072073459625244
    3. ',' → logprob: -4.197073459625244
    4. ' for' → logprob: -6.322073459625244
    5. '<|end|>' → logprob: -6.822073459625244
    6. 'self' → logprob: -7.072073459625244
    7. '<|end|>' → logprob: -7.072073459625244
    8. 'next' → logprob: -7.197073459625244
    9. 'for' → logprob: -7.572073459625244
    10. '
' → logprob: -7.697073459625244

Token 736: ' chain' (ID: 13464)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.0712905153632164
    2. 'it' → logprob: -3.1962904930114746
    3. 'lambda' → logprob: -4.696290493011475
    4. 'list' → logprob: -5.196290493011475
    5. 'operator' → logprob: -5.446290493011475
    6. 'self' → logprob: -5.571290493011475
    7. 'map' → logprob: -5.946290493011475
    8. ' functools' → logprob: -6.696290493011475
    9. 'sum' → logprob: -7.696290493011475
    10. '''.' → logprob: -8.446290969848633

Token 737: ' et' (ID: 859)
  Prédit: '.from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.017931008711457253
    2. 'from' → logprob: -4.26793098449707
    3. '(*' → logprob: -5.76793098449707
    4. '(it' → logprob: -8.14293098449707
    5. '(*(' → logprob: -8.64293098449707
    6. '(' → logprob: -9.64293098449707
    7. 'it' → logprob: -10.14293098449707
    8. '.' → logprob: -11.39293098449707
    9. '   ' → logprob: -11.89293098449707
    10. 'f' → logprob: -12.01793098449707

Token 738: ' update' (ID: 4027)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.15015850961208344
    2. 'self' → logprob: -2.775158405303955
    3. 'fun' → logprob: -3.400158405303955
    4. ' itertools' → logprob: -4.025158405303955
    5. 'map' → logprob: -4.525158405303955
    6. 'graph' → logprob: -4.775158405303955
    7. 'operator' → logprob: -5.775158405303955
    8. ' self' → logprob: -7.025158405303955
    9. ' functools' → logprob: -7.025158405303955
    10. '
' → logprob: -8.025158882141113

Token 739: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15051299333572388
    2. 'self' → logprob: -2.400512933731079
    3. '(self' → logprob: -4.275513172149658
    4. '       ' → logprob: -4.400513172149658
    5. 'it' → logprob: -5.525513172149658
    6. 'from' → logprob: -5.650513172149658
    7. ' self' → logprob: -6.025513172149658
    8. ',' → logprob: -6.150513172149658
    9. '(
' → logprob: -6.525513172149658
    10. ' =' → logprob: -6.525513172149658

Token 740: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020711649267468601
    2. '       ' → logprob: -9.87520694732666
    3. ',' → logprob: -10.12520694732666
    4. 'self' → logprob: -10.62520694732666
    5. '	       ' → logprob: -11.37520694732666
    6. '            
' → logprob: -11.50020694732666
    7. 'next' → logprob: -11.62520694732666
    8. '               ' → logprob: -11.62520694732666
    9. '
' → logprob: -11.62520694732666
    10. 'path' → logprob: -12.12520694732666

Token 741: ' combined' (ID: 15890)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7145393490791321
    2. '       ' → logprob: -1.7145392894744873
    3. 'path' → logprob: -1.9645392894744873
    4. '           ' → logprob: -2.4645392894744873
    5. 'next' → logprob: -3.8395392894744873
    6. 'paths' → logprob: -4.339539527893066
    7. ' self' → logprob: -4.464539527893066
    8. 'plan' → logprob: -4.589539527893066
    9. 'segments' → logprob: -4.839539527893066
    10. ' path' → logprob: -4.964539527893066

Token 742: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -0.8493490815162659
    2. ' =' → logprob: -1.099349021911621
    3. '=' → logprob: -1.599349021911621
    4. '_paths' → logprob: -3.974349021911621
    5. '_plan' → logprob: -5.099349021911621
    6. 's' → logprob: -5.224349021911621
    7. 'd' → logprob: -5.724349021911621
    8. 'ed' → logprob: -6.474349021911621
    9. '_routes' → logprob: -8.349349021911621
    10. '_' → logprob: -8.474349021911621

Token 743: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1128983348608017
    2. '=' → logprob: -2.237898349761963
    3. 's' → logprob: -9.737897872924805
    4. '=list' → logprob: -11.987897872924805
    5. '   ' → logprob: -12.487897872924805
    6. ' ' → logprob: -13.487897872924805
    7. '=self' → logprob: -13.487897872924805
    8. '       ' → logprob: -13.612897872924805
    9. ',' → logprob: -14.362897872924805
    10. 'd' → logprob: -15.362897872924805

Token 744: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.25494328141212463
    2. 'it' → logprob: -2.129943370819092
    3. ' list' → logprob: -3.379943370819092
    4. '[]' → logprob: -3.504943370819092
    5. 'fun' → logprob: -3.754943370819092
    6. '[]
' → logprob: -4.754943370819092
    7. ' itertools' → logprob: -5.754943370819092
    8. ' []' → logprob: -6.504943370819092
    9. 'tuple' → logprob: -6.754943370819092
    10. ' functools' → logprob: -7.129943370819092

Token 745: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01139615848660469
    2. 'for' → logprob: -4.6363959312438965
    3. ' for' → logprob: -6.5113959312438965
    4. '
' → logprob: -9.261396408081055
    5. 'from' → logprob: -11.886396408081055
    6. '<|end|>' → logprob: -11.886396408081055
    7. '       ' → logprob: -12.511396408081055
    8. 'import' → logprob: -12.511396408081055
    9. '<|end|>' → logprob: -12.511396408081055
    10. ',' → logprob: -12.636396408081055

Token 746: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0050429292023181915
    2. '           ' → logprob: -5.380043029785156
    3. ' for' → logprob: -7.880043029785156
    4. 'def' → logprob: -10.755043029785156
    5. 'from' → logprob: -11.880043029785156
    6. 'last' → logprob: -12.755043029785156
    7. 'while' → logprob: -12.755043029785156
    8. 'current' → logprob: -12.880043029785156
    9. 'prev' → logprob: -13.005043029785156
    10. 'self' → logprob: -13.005043029785156

Token 747: ' i' (ID: 575)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.9593762159347534
    2. 'o' → logprob: -1.4593762159347534
    3. 'node' → logprob: -1.5843762159347534
    4. 'target' → logprob: -2.709376335144043
    5. 'order' → logprob: -3.459376335144043
    6. 'next' → logprob: -3.709376335144043
    7. 'd' → logprob: -4.459376335144043
    8. 't' → logprob: -4.709376335144043
    9. 'point' → logprob: -4.709376335144043
    10. 'destination' → logprob: -5.459376335144043

Token 748: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10284527391195297
    2. 'in' → logprob: -2.3528451919555664
    3. 'n' → logprob: -6.602845191955566
    4. ',' → logprob: -6.852845191955566
    5. '   ' → logprob: -9.477845191955566
    6. '_in' → logprob: -10.477845191955566
    7. 'd' → logprob: -10.977845191955566
    8. ' ' → logprob: -11.352845191955566
    9. 't' → logprob: -11.727845191955566
    10. 's' → logprob: -11.727845191955566

Token 749: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13208816945552826
    2. 'sorted' → logprob: -2.2570881843566895
    3. 'list' → logprob: -4.6320881843566895
    4. 'it' → logprob: -5.8820881843566895
    5. 'map' → logprob: -6.1320881843566895
    6. 'range' → logprob: -6.2570881843566895
    7. ' self' → logprob: -7.1320881843566895
    8. 'fun' → logprob: -7.6320881843566895
    9. ' sorted' → logprob: -8.382087707519531
    10. 'operator' → logprob: -8.632087707519531

Token 750: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.19243481755256653
    2. 'order' → logprob: -1.8174347877502441
    3. '.plan' → logprob: -4.442434787750244
    4. 'plan' → logprob: -7.442434787750244
    5. '.chain' → logprob: -8.942435264587402
    6. 'chain' → logprob: -10.567435264587402
    7. '.sorted' → logprob: -10.692435264587402
    8. '.' → logprob: -11.067435264587402
    9. 'ordered' → logprob: -11.817435264587402
    10. '	order' → logprob: -12.192435264587402

Token 751: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34904745221138
    2. ':' → logprob: -1.2240474224090576
    3. '):
' → logprob: -8.724047660827637
    4. '               ' → logprob: -9.099047660827637
    5. ' :
' → logprob: -9.099047660827637
    6. ':
' → logprob: -9.099047660827637
    7. ' :' → logprob: -10.474047660827637
    8. ',' → logprob: -10.474047660827637
    9. '           ' → logprob: -11.099047660827637
    10. '   ' → logprob: -11.724047660827637

Token 752: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005032371263951063
    2. '           ' → logprob: -6.630032539367676
    3. '                
' → logprob: -6.630032539367676
    4. '
' → logprob: -7.130032539367676
    5. ',' → logprob: -7.255032539367676
    6. ':
' → logprob: -8.380032539367676
    7. ':' → logprob: -9.380032539367676
    8. '	           ' → logprob: -9.630032539367676
    9. '			' → logprob: -10.005032539367676
    10. '            
' → logprob: -10.255032539367676

Token 753: ' combined' (ID: 15890)
  Prédit: 'combined'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'combined' (adapté à ' combined') → logprob: -0.5675098299980164
    2. '               ' → logprob: -1.1925098896026611
    3. ' combined' → logprob: -2.067509889602661
    4. 'path' → logprob: -6.817509651184082
    5. '   ' → logprob: -7.567509651184082
    6. '           ' → logprob: -8.192509651184082
    7. '                   ' → logprob: -8.442509651184082
    8. ' path' → logprob: -8.567509651184082
    9. '	           ' → logprob: -8.567509651184082
    10. '
' → logprob: -8.817509651184082

Token 754: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -4.11996734328568e-05
    2. 'path' → logprob: -10.500041007995605
    3. '
' → logprob: -13.000041007995605
    4. 'Path' → logprob: -13.625041007995605
    5. '=' → logprob: -13.875041007995605
    6. ' =' → logprob: -14.000041007995605
    7. '   ' → logprob: -14.125041007995605
    8. '_' → logprob: -14.125041007995605
    9. ' +=' → logprob: -14.250041007995605
    10. '_paths' → logprob: -14.250041007995605

Token 755: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.18129822611808777
    2. ' +=' → logprob: -2.43129825592041
    3. '+=' → logprob: -2.55629825592041
    4. '=' → logprob: -8.68129825592041
    5. ' =' → logprob: -9.43129825592041
    6. '+' → logprob: -10.80629825592041
    7. '.append' → logprob: -11.05629825592041
    8. '.' → logprob: -12.43129825592041
    9. 'extend' → logprob: -12.68129825592041
    10. '   ' → logprob: -13.05629825592041

Token 756: '(self' (ID: 2402)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2603473961353302
    2. '(self' → logprob: -1.5103473663330078
    3. ' self' → logprob: -5.260347366333008
    4. '           ' → logprob: -6.260347366333008
    5. '               ' → logprob: -7.510347366333008
    6. '(' → logprob: -7.635347366333008
    7. '       ' → logprob: -8.885347366333008
    8. '   ' → logprob: -9.885347366333008
    9. '	self' → logprob: -10.885347366333008
    10. '                   ' → logprob: -11.385347366333008

Token 757: '.map' (ID: 7975)
  Prédit: '.map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.map' → logprob: -0.001998346531763673
    2. 'map' → logprob: -6.626998424530029
    3. '.short' → logprob: -7.751998424530029
    4. 'short' → logprob: -9.001997947692871
    5. '.plan' → logprob: -10.126997947692871
    6. '.route' → logprob: -10.251997947692871
    7. ' map' → logprob: -11.001997947692871
    8. '.' → logprob: -11.126997947692871
    9. ' .' → logprob: -13.001997947692871
    10. '.path' → logprob: -13.501997947692871

Token 758: '.short' (ID: 56360)
  Prédit: '.short'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.short' → logprob: -2.4391956685576588e-05
    2. 'short' → logprob: -11.000024795532227
    3. ' .' → logprob: -12.125024795532227
    4. '.' → logprob: -14.250024795532227
    5. '.shortcuts' → logprob: -14.500024795532227
    6. '	short' → logprob: -15.250024795532227
    7. '.long' → logprob: -15.625024795532227
    8. '.s' → logprob: -15.750024795532227
    9. ' short' → logprob: -15.750024795532227
    10. ').' → logprob: -16.125024795532227

Token 759: 'Path' (ID: 2619)
  Prédit: 'Path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Path' → logprob: -4.320199877838604e-07
    2. '_path' → logprob: -15.75
    3. '	Path' → logprob: -16.25
    4. ' Path' → logprob: -16.375
    5. '@Path' → logprob: -17.625
    6. 'path' → logprob: -18.125
    7. '<Path' → logprob: -18.5
    8. 'Pat' → logprob: -18.75
    9. 'P' → logprob: -19.125
    10. '_Path' → logprob: -19.25

Token 760: '(last' (ID: 39599)
  Prédit: '(last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(last' → logprob: -0.00014489953173324466
    2. '(' → logprob: -9.125144958496094
    3. 'last' → logprob: -11.375144958496094
    4. '(
' → logprob: -11.500144958496094
    5. '(i' → logprob: -11.625144958496094
    6. '(self' → logprob: -12.875144958496094
    7. '((' → logprob: -13.000144958496094
    8. '(next' → logprob: -15.500144958496094
    9. ' (' → logprob: -16.500144958496094
    10. ' last' → logprob: -16.750144958496094

Token 761: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008295171894133091
    2. '(i' → logprob: -5.008295059204102
    3. '(last' → logprob: -7.633295059204102
    4. '(' → logprob: -7.758295059204102
    5. ' ,' → logprob: -8.133295059204102
    6. ',i' → logprob: -8.383295059204102
    7. ',last' → logprob: -9.008295059204102
    8. ' (' → logprob: -11.508295059204102
    9. 'i' → logprob: -12.008295059204102
    10. ' i' → logprob: -14.008295059204102

Token 762: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004621661268174648
    2. ' i' → logprob: -5.379621505737305
    3. '   ' → logprob: -14.879621505737305
    4. '           ' → logprob: -15.129621505737305
    5. '               ' → logprob: -15.379621505737305
    6. ' ' → logprob: -15.629621505737305
    7. '                   ' → logprob: -16.129621505737305
    8. '  ' → logprob: -16.129621505737305
    9. ')' → logprob: -16.754621505737305
    10. '       ' → logprob: -16.754621505737305

Token 763: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0020180940628051758
    2. '))
' → logprob: -6.502017974853516
    3. ')' → logprob: -7.627017974853516
    4. ' ))' → logprob: -11.252017974853516
    5. ')+' → logprob: -12.002017974853516
    6. '))
' → logprob: -12.752017974853516
    7. '       ' → logprob: -13.127017974853516
    8. ')[' → logprob: -14.002017974853516
    9. '))

' → logprob: -14.252017974853516
    10. '));' → logprob: -14.377017974853516

Token 764: '               ' (ID: 506)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5400446057319641
    2. '           ' → logprob: -1.2900445461273193
    3. '<|end|>' → logprob: -2.0400445461273193
    4. '       ' → logprob: -4.790044784545898
    5. '<|end|>' → logprob: -5.915044784545898
    6. 'return' → logprob: -8.915044784545898
    7. ' return' → logprob: -8.915044784545898
    8. '
' → logprob: -9.290044784545898
    9. '            
' → logprob: -9.415044784545898
    10. '[' → logprob: -9.665044784545898

Token 765: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.006179528776556253
    2. ' last' → logprob: -5.381179332733154
    3. '               ' → logprob: -7.006179332733154
    4. '           ' → logprob: -7.381179332733154
    5. 'operator' → logprob: -11.006179809570312
    6. '	last' → logprob: -12.381179809570312
    7. '
' → logprob: -12.756179809570312
    8. '                   ' → logprob: -13.381179809570312
    9. '   ' → logprob: -13.756179809570312
    10. 'self' → logprob: -14.381179809570312

Token 766: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197451800107956
    2. ' =' → logprob: -2.81197452545166
    3. '=i' → logprob: -11.93697452545166
    4. ' ' → logprob: -15.93697452545166
    5. '=
' → logprob: -16.061973571777344
    6. '＝' → logprob: -16.811973571777344
    7. '.=' → logprob: -17.936973571777344
    8. '=

' → logprob: -17.936973571777344
    9. '+=' → logprob: -18.061973571777344
    10. '=end' → logprob: -18.186973571777344

Token 767: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.627176768844947e-05
    2. ' i' → logprob: -9.250096321105957
    3. '   ' → logprob: -17.25009536743164
    4. '  ' → logprob: -17.87509536743164
    5. ' ' → logprob: -17.87509536743164
    6. '           ' → logprob: -18.37509536743164
    7. '                   ' → logprob: -18.75009536743164
    8. '               ' → logprob: -19.25009536743164
    9. '    ' → logprob: -19.25009536743164
    10. '       ' → logprob: -19.62509536743164

Token 768: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5701175332069397
    2. '<|end|>' → logprob: -1.070117473602295
    3. '       ' → logprob: -3.070117473602295
    4. '           ' → logprob: -3.445117473602295
    5. '<|end|>' → logprob: -4.820117473602295
    6. '
' → logprob: -7.570117473602295
    7. ' 
' → logprob: -7.695117473602295
    8. '\n' → logprob: -7.695117473602295
    9. ' ' → logprob: -7.820117473602295
    10. '[' → logprob: -7.820117473602295

Token 769: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13364596664905548
    2. '<|end|>' → logprob: -2.133646011352539
    3. '
' → logprob: -6.008646011352539
    4. '<|end|>' → logprob: -6.508646011352539
    5. '	' → logprob: -7.008646011352539
    6. 'return' → logprob: -7.758646011352539
    7. '           ' → logprob: -7.758646011352539
    8. ' return' → logprob: -8.508646011352539
    9. '   ' → logprob: -8.883646011352539
    10. '               ' → logprob: -9.133646011352539

Token 770: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23211224377155304
    2. '           ' → logprob: -2.607112169265747
    3. 'self' (adapté à ' self') → logprob: -2.607112169265747
    4. ' self' → logprob: -2.857112169265747
    5. 'return' → logprob: -6.982112407684326
    6. '+' → logprob: -8.357111930847168
    7. '   ' → logprob: -8.607111930847168
    8. '
' → logprob: -8.982111930847168
    9. ' return' → logprob: -8.982111930847168
    10. '<|end|>' → logprob: -8.982111930847168

Token 771: '.plan' (ID: 96013)
  Prédit: '.plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -0.00030078491545282304
    2. 'plan' → logprob: -8.125300407409668
    3. ' plan' → logprob: -12.500300407409668
    4. '.pl' → logprob: -15.125300407409668
    5. '_plan' → logprob: -15.375300407409668
    6. 'Plan' → logprob: -15.625300407409668
    7. ' план' → logprob: -16.000301361083984
    8. '.order' → logprob: -16.250301361083984
    9. '.target' → logprob: -16.625301361083984
    10. '.' → logprob: -17.125301361083984

Token 772: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.058959972113370895
    2. '=' → logprob: -3.4339599609375
    3. '.' → logprob: -4.4339599609375
    4. ' =' → logprob: -4.5589599609375
    5. '+=' → logprob: -6.6839599609375
    6. '[:]' → logprob: -7.5589599609375
    7. ' +=' → logprob: -7.6839599609375
    8. '.=' → logprob: -8.3089599609375
    9. '.clear' → logprob: -9.6839599609375
    10. '.append' → logprob: -9.6839599609375

Token 773: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -7.302704761968926e-05
    2. '(' → logprob: -10.250073432922363
    3. 'combined' → logprob: -10.250073432922363
    4. '(list' → logprob: -13.625073432922363
    5. '(
' → logprob: -14.625073432922363
    6. ' combined' → logprob: -15.250073432922363
    7. '([' → logprob: -16.000072479248047
    8. '(it' → logprob: -16.500072479248047
    9. '((' → logprob: -17.375072479248047
    10. '(combo' → logprob: -17.500072479248047

Token 774: 'bined' (ID: 172357)
  Prédit: 'bined'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bined' → logprob: -0.03040173277258873
    2. 'ined' → logprob: -3.6554017066955566
    3. 'b' → logprob: -5.780401706695557
    4. '(b' → logprob: -7.780401706695557
    5. '(' → logprob: -7.905401706695557
    6. '(com' → logprob: -10.280402183532715
    7. '[' → logprob: -10.655402183532715
    8. '(list' → logprob: -10.780402183532715
    9. 'bine' → logprob: -11.155402183532715
    10. '(it' → logprob: -11.280402183532715

Token 775: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -5.438573680294212e-06
    2. 'path' → logprob: -12.250005722045898
    3. '_pat' → logprob: -15.500005722045898
    4. '_' → logprob: -16.5000057220459
    5. ')' → logprob: -16.8750057220459
    6. 'Path' → logprob: -17.3750057220459
    7. 'ed' → logprob: -17.6250057220459
    8. 'pat' → logprob: -17.7500057220459
    9. '(path' → logprob: -17.7500057220459
    10. '._' → logprob: -18.0000057220459

Token 776: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011526016751304269
    2. '<|end|>' → logprob: -7.751152515411377
    3. '[' → logprob: -8.001152992248535
    4. '       ' → logprob: -8.876152992248535
    5. '[:-' → logprob: -9.626152992248535
    6. ')
' → logprob: -9.751152992248535
    7. '[::-' → logprob: -10.501152992248535
    8. ' )' → logprob: -10.501152992248535
    9. ']' → logprob: -11.126152992248535
    10. '<|end|>' → logprob: -11.626152992248535

Token 777: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 778: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1680058389902115
    2. ' self' → logprob: -2.66800594329834
    3. '       ' → logprob: -3.04300594329834
    4. 'self' (adapté à ' self') → logprob: -3.29300594329834
    5. '   ' → logprob: -9.29300594329834
    6. '               ' → logprob: -9.41800594329834
    7. '	self' → logprob: -9.79300594329834
    8. 'return' → logprob: -10.29300594329834
    9. '	       ' → logprob: -10.41800594329834
    10. '
' → logprob: -10.79300594329834

Token 779: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.0003478593716863543
    2. '.' → logprob: -8.250348091125488
    3. 'order' → logprob: -9.625348091125488
    4. '.plan' → logprob: -11.000348091125488
    5. '.target' → logprob: -13.500348091125488
    6. '	order' → logprob: -13.875348091125488
    7. '.clear' → logprob: -14.875348091125488
    8. ' .' → logprob: -15.250348091125488
    9. ' order' → logprob: -15.625348091125488
    10. '$order' → logprob: -16.125347137451172

Token 780: '.clear' (ID: 13562)
  Prédit: '.clear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.clear' → logprob: -0.00028743778239004314
    2. '.' → logprob: -8.250287055969238
    3. '=' → logprob: -11.000287055969238
    4. ' .' → logprob: -11.875287055969238
    5. 'clear' → logprob: -13.250287055969238
    6. '.=' → logprob: -15.875287055969238
    7. ' =' → logprob: -16.000288009643555
    8. '.Clear' → logprob: -16.250288009643555
    9. '   ' → logprob: -16.375288009643555
    10. '=.' → logprob: -16.375288009643555

Token 781: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 782: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 783: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 784: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.035594090819358826
    2. 'self' → logprob: -3.4105939865112305
    3. ' not' → logprob: -6.2855939865112305
    4. ' len' → logprob: -10.16059398651123
    5. '	self' → logprob: -11.03559398651123
    6. 'not' → logprob: -11.16059398651123
    7. '(self' → logprob: -12.16059398651123
    8. ' ' → logprob: -13.03559398651123
    9. 'len' → logprob: -13.16059398651123
    10. ' hasattr' → logprob: -13.53559398651123

Token 785: '.plan' (ID: 96013)
  Prédit: '.plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -0.004349298309534788
    2. 'plan' → logprob: -6.254349231719971
    3. '.next' → logprob: -6.629349231719971
    4. '.location' → logprob: -7.379349231719971
    5. ' plan' → logprob: -8.004349708557129
    6. 'next' → logprob: -9.504349708557129
    7. '.' → logprob: -10.129349708557129
    8. 'location' → logprob: -12.004349708557129
    9. '.target' → logprob: -12.254349708557129
    10. ' next' → logprob: -12.754349708557129

Token 786: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011187844211235642
    2. ' and' → logprob: -7.6261186599731445
    3. ':
' → logprob: -8.001118659973145
    4. '[' → logprob: -8.501118659973145
    5. 'and' → logprob: -9.751118659973145
    6. '):' → logprob: -11.626118659973145
    7. '>:' → logprob: -12.001118659973145
    8. ' :' → logprob: -12.126118659973145
    9. ':return' → logprob: -12.626118659973145
    10. '==' → logprob: -13.126118659973145

Token 787: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001645430107600987
    2. '   ' → logprob: -7.751645565032959
    3. '           ' → logprob: -8.1266450881958
    4. 'self' → logprob: -8.2516450881958
    5. ' self' → logprob: -8.3766450881958
    6. '	   ' → logprob: -8.8766450881958
    7. '	       ' → logprob: -9.6266450881958
    8. '    ' → logprob: -9.7516450881958
    9. '	self' → logprob: -9.7516450881958
    10. ' return' → logprob: -11.2516450881958

Token 788: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7398668527603149
    2. 'self' (adapté à ' self') → logprob: -0.9898668527603149
    3. '           ' → logprob: -1.989866852760315
    4. ' next' → logprob: -5.364866733551025
    5. 'next' → logprob: -5.739866733551025
    6. ' if' → logprob: -6.614866733551025
    7. '   ' → logprob: -6.739866733551025
    8. 'token' → logprob: -6.864866733551025
    9. ' token' → logprob: -7.364866733551025
    10. 'if' → logprob: -7.364866733551025

Token 789: '.target' (ID: 11090)
  Prédit: '.next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.7191188335418701
    2. '.plan' → logprob: -0.7191188335418701
    3. '.target' → logprob: -3.84411883354187
    4. '.location' → logprob: -5.594119071960449
    5. 'next' → logprob: -8.46911907196045
    6. '.' → logprob: -9.09411907196045
    7. 'plan' → logprob: -9.34411907196045
    8. ' .' → logprob: -10.71911907196045
    9. 'target' → logprob: -10.84411907196045
    10. 'Next' → logprob: -11.21911907196045

Token 790: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014152854681015
    2. ' =' → logprob: -1.7014153003692627
    3. ',' → logprob: -14.576415061950684
    4. '.=' → logprob: -14.576415061950684
    5. '_=' → logprob: -15.201415061950684
    6. ' ' → logprob: -15.701415061950684
    7. '	' → logprob: -15.951415061950684
    8. '.' → logprob: -16.701416015625
    9. '_' → logprob: -16.701416015625
    10. '   ' → logprob: -16.951416015625

Token 791: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001170460251159966
    2. ' self' → logprob: -6.751170635223389
    3. '   ' → logprob: -16.001171112060547
    4. '	self' → logprob: -16.376171112060547
    5. '  ' → logprob: -18.501171112060547
    6. ' ' → logprob: -19.126171112060547
    7. ' ' → logprob: -19.376171112060547
    8. '    ' → logprob: -19.626171112060547
    9. '       ' → logprob: -21.251171112060547
    10. '(self' → logprob: -21.251171112060547

Token 792: '.plan' (ID: 96013)
  Prédit: '.plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -1.0280383548888494e-06
    2. 'plan' → logprob: -14.625000953674316
    3. ' .' → logprob: -15.125000953674316
    4. '.' → logprob: -15.125000953674316
    5. ' plan' → logprob: -18.625001907348633
    6. 'Plan' → logprob: -18.750001907348633
    7. '.pl' → logprob: -18.750001907348633
    8. '\.' → logprob: -19.750001907348633
    9. ' план' → logprob: -19.875001907348633
    10. '(plan' → logprob: -20.000001907348633

Token 793: '[' (ID: 58)
  Prédit: '.pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.0032435471657663584
    2. '[' → logprob: -5.753243446350098
    3. '.' → logprob: -9.753243446350098
    4. 'pop' → logprob: -11.878243446350098
    5. '0' → logprob: -15.378243446350098
    6. '().' → logprob: -15.753243446350098
    7. ' .' → logprob: -15.753243446350098
    8. '   ' → logprob: -16.253244400024414
    9. 'Pop' → logprob: -16.378244400024414
    10. '```' → logprob: -16.628244400024414

Token 794: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -15.250001907348633
    4. '(' → logprob: -16.875001907348633
    5. '۰' → logprob: -17.125001907348633
    6. '-' → logprob: -17.750001907348633
    7. ':' → logprob: -17.750001907348633
    8. '00' → logprob: -17.750001907348633
    9. '﻿' → logprob: -18.000001907348633
    10. '
' → logprob: -18.062501907348633

Token 795: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6840680241584778
    2. '<|end|>' → logprob: -0.8090680241584778
    3. '
' → logprob: -3.309067964553833
    4. ']
' → logprob: -4.434068202972412
    5. '<|end|>' → logprob: -6.684068202972412
    6. ')' → logprob: -9.059067726135254
    7. ' ]' → logprob: -9.184067726135254
    8. ']>
' → logprob: -10.309067726135254
    9. ']==' → logprob: -10.559067726135254
    10. ']>' → logprob: -10.684067726135254

Token 796: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21164076030254364
    2. '<|end|>' → logprob: -1.71164071559906
    3. ' 
' → logprob: -6.08664083480835
    4. '\n' → logprob: -6.21164083480835
    5. '   ' → logprob: -6.83664083480835
    6. '<|end|>' → logprob: -6.96164083480835
    7. ' ' → logprob: -7.08664083480835
    8. '[' → logprob: -7.96164083480835
    9. ' ' → logprob: -7.96164083480835
    10. '	return' → logprob: -8.336640357971191

Token 797: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.8870192170143127
    2. ' self' → logprob: -1.012019157409668
    3. '           ' → logprob: -1.512019157409668
    4. 'del' → logprob: -6.387019157409668
    5. '	self' → logprob: -6.887019157409668
    6. '       ' → logprob: -8.137019157409668
    7. ' del' → logprob: -8.262019157409668
    8. 'if' → logprob: -8.387019157409668
    9. ' if' → logprob: -8.637019157409668
    10. '		' → logprob: -8.762019157409668

Token 798: '.next' (ID: 6689)
  Prédit: 'plan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plan' → logprob: -0.5530757308006287
    2. '.plan' → logprob: -1.0530757904052734
    3. 'next' → logprob: -3.0530757904052734
    4. '.next' → logprob: -3.5530757904052734
    5. '.target' → logprob: -10.053075790405273
    6. 'target' → logprob: -10.053075790405273
    7. ' plan' → logprob: -10.928075790405273
    8. '.' → logprob: -13.053075790405273
    9. ' next' → logprob: -13.678075790405273
    10. 'Plan' → logprob: -14.428075790405273

Token 799: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -1.9361264946837764e-07
    2. '_segment' → logprob: -16.125
    3. 'Seg' → logprob: -17.875
    4. 'Segments' → logprob: -18.375
    5. ' Segment' → logprob: -18.625
    6. 'segment' → logprob: -19.25
    7. '_SEG' → logprob: -19.375
    8. '-' → logprob: -20.0
    9. 'Step' → logprob: -21.5
    10. '=' → logprob: -21.625

Token 800: 'Left' (ID: 7471)
  Prédit: 'Left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -6.704273118884885e-07
    2. 'left' → logprob: -15.125000953674316
    3. 'Time' → logprob: -16.125
    4. '_left' → logprob: -16.75
    5. '=' → logprob: -17.0
    6. '_Left' → logprob: -17.625
    7. 'Le' → logprob: -17.875
    8. 'Right' → logprob: -18.375
    9. '-=' → logprob: -18.375
    10. ' Left' → logprob: -18.5

Token 801: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -4.320199877838604e-07
    2. '=' → logprob: -15.625
    3. ' Time' → logprob: -16.0
    4. '	Time' → logprob: -16.0
    5. 'time' → logprob: -17.375
    6. '-=' → logprob: -17.875
    7. ' -=' → logprob: -18.625
    8. '_time' → logprob: -18.625
    9. ' =' → logprob: -19.5
    10. 'Tim' → logprob: -20.375

Token 802: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36476853489875793
    2. ' =' → logprob: -1.7397685050964355
    3. ' -=' → logprob: -2.3647685050964355
    4. '-=' → logprob: -3.3647685050964355
    5. '+=' → logprob: -7.1147685050964355
    6. ' +=' → logprob: -7.6147685050964355
    7. '-' → logprob: -8.614768981933594
    8. ' -' → logprob: -10.489768981933594
    9. ' ' → logprob: -11.239768981933594
    10. '.=' → logprob: -13.114768981933594

Token 803: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0746774896979332
    2. '1' → logprob: -2.6996774673461914
    3. '0' → logprob: -5.824677467346191
    4. ' self' → logprob: -7.074677467346191
    5. '10' → logprob: -8.199677467346191
    6. '5' → logprob: -8.574677467346191
    7. 'abs' → logprob: -8.949677467346191
    8. ' ' → logprob: -9.699677467346191
    9. '	self' → logprob: -9.949677467346191
    10. '3' → logprob: -10.324677467346191

Token 804: '.map' (ID: 7975)
  Prédit: '.map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.map' → logprob: -0.09467684477567673
    2. '.target' → logprob: -2.5946767330169678
    3. '.plan' → logprob: -5.094676971435547
    4. '.G' → logprob: -5.219676971435547
    5. '.next' → logprob: -5.594676971435547
    6. 'map' → logprob: -9.219676971435547
    7. 'target' → logprob: -9.344676971435547
    8. '.' → logprob: -9.844676971435547
    9. '.location' → logprob: -9.969676971435547
    10. '.g' → logprob: -10.344676971435547

Token 805: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -7.874882430769503e-05
    2. 'G' → logprob: -10.125079154968262
    3. ' .' → logprob: -10.375079154968262
    4. '   ' → logprob: -13.375079154968262
    5. '[G' → logprob: -13.625079154968262
    6. '.' → logprob: -14.125079154968262
    7. '[' → logprob: -14.500079154968262
    8. '	G' → logprob: -14.625079154968262
    9. '.S' → logprob: -15.000079154968262
    10. '  ' → logprob: -15.125079154968262

Token 806: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0005543439765460789
    2. 'self' → logprob: -7.50055456161499
    3. '[' → logprob: -14.000554084777832
    4. ' self' → logprob: -15.000554084777832
    5. '	self' → logprob: -16.37555503845215
    6. '(self' → logprob: -17.00055503845215
    7. '=self' → logprob: -17.75055503845215
    8. '```' → logprob: -18.25055503845215
    9. '$self' → logprob: -18.37555503845215
    10. '[last' → logprob: -19.00055503845215

Token 807: '.location' (ID: 15725)
  Prédit: 'location'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'location' → logprob: -0.0019294669618830085
    2. 'target' → logprob: -7.00192928314209
    3. 'self' → logprob: -7.25192928314209
    4. '.location' → logprob: -8.12692928314209
    5. ' location' → logprob: -11.87692928314209
    6. '.target' → logprob: -13.62692928314209
    7. '	location' → logprob: -13.75192928314209
    8. 'ocation' → logprob: -13.87692928314209
    9. '_location' → logprob: -14.25192928314209
    10. '[self' → logprob: -14.37692928314209

Token 808: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.014278804883360863
    2. '[self' → logprob: -4.264278888702393
    3. ' ][' → logprob: -10.264278411865234
    4. '[' → logprob: -10.389278411865234
    5. 'self' → logprob: -10.639278411865234
    6. ']' → logprob: -10.764278411865234
    7. '][_' → logprob: -14.014278411865234
    8. '```' → logprob: -14.139278411865234
    9. ''][' → logprob: -14.639278411865234
    10. '   ' → logprob: -14.764278411865234

Token 809: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.47495681833243e-05
    2. ' self' → logprob: -10.625024795532227
    3. '   ' → logprob: -16.125024795532227
    4. '	self' → logprob: -16.250024795532227
    5. '[self' → logprob: -16.250024795532227
    6. '           ' → logprob: -16.750024795532227
    7. '(self' → logprob: -16.875024795532227
    8. '       ' → logprob: -18.875024795532227
    9. ' ' → logprob: -19.250024795532227
    10. '    ' → logprob: -19.500024795532227

Token 810: '.target' (ID: 11090)
  Prédit: '.target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.target' → logprob: -0.25211068987846375
    2. 'target' → logprob: -1.5021107196807861
    3. 'self' → logprob: -8.627110481262207
    4. ' target' → logprob: -13.627110481262207
    5. '_target' → logprob: -14.502110481262207
    6. '.' → logprob: -15.752110481262207
    7. '	target' → logprob: -15.877110481262207
    8. '[target' → logprob: -15.877110481262207
    9. 'Target' → logprob: -16.752111434936523
    10. '.t' → logprob: -16.752111434936523

Token 811: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.033367764204740524
    2. '][' → logprob: -4.03336763381958
    3. '[' → logprob: -4.28336763381958
    4. ']-' → logprob: -7.40836763381958
    5. ']
' → logprob: -7.90836763381958
    6. '-' → logprob: -9.158368110656738
    7. '[self' → logprob: -9.783368110656738
    8. ' ]' → logprob: -10.033368110656738
    9. ' -' → logprob: -10.533368110656738
    10. ']>' → logprob: -10.658368110656738

Token 812: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 813: ' del' (ID: 1083)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.205108642578125
    2. '           ' → logprob: -2.330108642578125
    3. ' self' → logprob: -3.205108642578125
    4. '	self' → logprob: -4.080108642578125
    5. '		' → logprob: -5.080108642578125
    6. '       ' → logprob: -5.205108642578125
    7. 'del' (adapté à ' del') → logprob: -5.330108642578125
    8. 'return' → logprob: -5.330108642578125
    9. '   ' → logprob: -6.080108642578125
    10. 'if' → logprob: -6.455108642578125

Token 814: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16022726893424988
    2. ' self' → logprob: -1.9102272987365723
    3. '(self' → logprob: -13.160226821899414
    4. '	self' → logprob: -13.785226821899414
    5. ' ' → logprob: -16.910226821899414
    6. '[self' → logprob: -16.910226821899414
    7. 'attr' → logprob: -18.660226821899414
    8. ' ' → logprob: -19.160226821899414
    9. '=self' → logprob: -19.160226821899414
    10. '  ' → logprob: -19.160226821899414

Token 815: '.plan' (ID: 96013)
  Prédit: '.plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -0.0011533168144524097
    2. 'self' → logprob: -7.376153469085693
    3. ' .' → logprob: -8.751152992248535
    4. '.self' → logprob: -9.001152992248535
    5. '.' → logprob: -9.251152992248535
    6. ' self' → logprob: -10.001152992248535
    7. 'plan' → logprob: -10.126152992248535
    8. ' plan' → logprob: -10.501152992248535
    9. '.user' → logprob: -11.126152992248535
    10. '.target' → logprob: -11.501152992248535

Token 816: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '0' → logprob: -15.75
    3. '[:' → logprob: -15.75
    4. ' [' → logprob: -17.0
    5. '[
' → logprob: -17.875
    6. '\[' → logprob: -19.25
    7. 's' → logprob: -20.375
    8. '[-' → logprob: -20.375
    9. '[:]' → logprob: -20.375
    10. '```' → logprob: -20.625

Token 817: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002319071936653927
    2. '[' → logprob: -8.375231742858887
    3. ' ' → logprob: -13.875231742858887
    4. ':' → logprob: -15.750231742858887
    5. '   ' → logprob: -16.125232696533203
    6. '(' → logprob: -16.750232696533203
    7. '][' → logprob: -17.500232696533203
    8. '```' → logprob: -17.750232696533203
    9. 'self' → logprob: -18.375232696533203
    10. '1' → logprob: -18.500232696533203

Token 818: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.035936519503593445
    2. '<|end|>' → logprob: -3.6609365940093994
    3. ')' → logprob: -4.66093635559082
    4. ']
' → logprob: -10.91093635559082
    5. '<|end|>' → logprob: -11.03593635559082
    6. ' ]' → logprob: -11.16093635559082
    7. '```' → logprob: -11.28593635559082
    8. '       ' → logprob: -11.53593635559082
    9. '])' → logprob: -11.53593635559082
    10. '}' → logprob: -11.78593635559082

Token 819: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 820: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 821: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.5869454741477966
    2. 'update' → logprob: -1.4619455337524414
    3. 'wait' → logprob: -2.2119455337524414
    4. 'step' → logprob: -3.4619455337524414
    5. ' move' → logprob: -4.211945533752441
    6. 'go' → logprob: -4.336945533752441
    7. 'tick' → logprob: -4.336945533752441
    8. 'advance' → logprob: -5.336945533752441
    9. ' update' → logprob: -5.586945533752441
    10. 'run' → logprob: -5.836945533752441

Token 822: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.3458322731312364e-06
    2. '(' → logprob: -12.375007629394531
    3. ' (' → logprob: -13.625007629394531
    4. '   ' → logprob: -13.750007629394531
    5. '       ' → logprob: -15.125007629394531
    6. '(s' → logprob: -15.500007629394531
    7. 'self' → logprob: -16.12500762939453
    8. '():' → logprob: -16.50000762939453
    9. '():
' → logprob: -17.25000762939453
    10. '(sel' → logprob: -17.87500762939453

Token 823: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.001587939215824008
    2. '   ' → logprob: -7.251587867736816
    3. '):
' → logprob: -8.001587867736816
    4. '       ' → logprob: -8.126587867736816
    5. 'self' → logprob: -8.501587867736816
    6. '):' → logprob: -11.001587867736816
    7. '(' → logprob: -12.126587867736816
    8. ')' → logprob: -12.376587867736816
    9. ' (' → logprob: -12.376587867736816
    10. ' ' → logprob: -12.626587867736816

Token 824: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.498521625995636
    2. '       ' → logprob: -0.998521625995636
    3. ' if' → logprob: -3.748521566390991
    4. '   ' → logprob: -7.74852180480957
    5. '	if' → logprob: -9.12352180480957
    6. '	' → logprob: -10.37352180480957
    7. 'self' → logprob: -11.12352180480957
    8. '	   ' → logprob: -12.62352180480957
    9. '    ' → logprob: -13.49852180480957
    10. 'while' → logprob: -13.49852180480957

Token 825: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003384341485798359
    2. '       ' → logprob: -5.753384113311768
    3. 'def' → logprob: -8.753384590148926
    4. ' if' → logprob: -10.253384590148926
    5. 'self' → logprob: -12.003384590148926
    6. '   ' → logprob: -12.003384590148926
    7. 'while' → logprob: -13.753384590148926
    8. '	if' → logprob: -16.37838363647461
    9. '           ' → logprob: -18.12838363647461
    10. '#' → logprob: -19.00338363647461

Token 826: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.28119957447052
    2. ' self' → logprob: -1.40619957447052
    3. '	self' → logprob: -10.65619945526123
    4. ' not' → logprob: -11.28119945526123
    5. 'not' → logprob: -12.28119945526123
    6. '   ' → logprob: -12.65619945526123
    7. ' ' → logprob: -13.40619945526123
    8. '(self' → logprob: -13.90619945526123
    9. ' ' → logprob: -14.03119945526123
    10. '  ' → logprob: -14.15619945526123

Token 827: '.location' (ID: 15725)
  Prédit: '.next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.001185703556984663
    2. 'next' → logprob: -6.751185894012451
    3. ' next' → logprob: -11.251185417175293
    4. '.' → logprob: -13.501185417175293
    5. '	next' → logprob: -14.751185417175293
    6. 'Next' → logprob: -15.501185417175293
    7. '.target' → logprob: -15.501185417175293
    8. ' .' → logprob: -15.751185417175293
    9. '_next' → logprob: -16.25118637084961
    10. '[next' → logprob: -17.00118637084961

Token 828: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4000650942325592
    2. ' !=' → logprob: -1.1500650644302368
    3. '==' → logprob: -4.650064945220947
    4. ' ==' → logprob: -5.650064945220947
    5. '=' → logprob: -11.275065422058105
    6. ')!=' → logprob: -12.400065422058105
    7. '()!=' → logprob: -12.650065422058105
    8. '	' → logprob: -13.525065422058105
    9. ']!=' → logprob: -13.775065422058105
    10. ')' → logprob: -13.775065422058105

Token 829: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015066476771607995
    2. ' self' → logprob: -6.501506805419922
    3. '   ' → logprob: -13.001506805419922
    4. '  ' → logprob: -14.126506805419922
    5. '	self' → logprob: -14.751506805419922
    6. '1' → logprob: -15.251506805419922
    7. '    ' → logprob: -15.251506805419922
    8. '       ' → logprob: -15.751506805419922
    9. ' ' → logprob: -15.876506805419922
    10. '=self' → logprob: -16.751506805419922

Token 830: '.target' (ID: 11090)
  Prédit: '.target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.target' → logprob: -0.2528804540634155
    2. 'target' → logprob: -1.5028804540634155
    3. ' target' → logprob: -7.752880573272705
    4. 'self' → logprob: -8.127880096435547
    5. '_target' → logprob: -9.002880096435547
    6. '.' → logprob: -9.502880096435547
    7. '.next' → logprob: -11.252880096435547
    8. ' .' → logprob: -12.377880096435547
    9. ' self' → logprob: -12.627880096435547
    10. '.user' → logprob: -13.627880096435547

Token 831: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28367823362350464
    2. 'and' → logprob: -2.0336782932281494
    3. ' and' → logprob: -2.1586782932281494
    4. ':
' → logprob: -7.65867805480957
    5. ' :' → logprob: -9.15867805480957
    6. '==' → logprob: -10.65867805480957
    7. ':return' → logprob: -11.03367805480957
    8. '=' → logprob: -11.15867805480957
    9. ' or' → logprob: -11.78367805480957
    10. '   ' → logprob: -12.53367805480957

Token 832: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3585340082645416
    2. '       ' → logprob: -1.3585339784622192
    3. 'return' → logprob: -3.483534097671509
    4. 'self' → logprob: -4.60853385925293
    5. 'if' → logprob: -6.23353385925293
    6. ' and' → logprob: -7.48353385925293
    7. ' return' → logprob: -7.98353385925293
    8. ' if' → logprob: -8.73353385925293
    9. ' self' → logprob: -8.85853385925293
    10. '   ' → logprob: -9.35853385925293

Token 833: ' print' (ID: 2123)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16713346540927887
    2. 'if' → logprob: -2.0421335697174072
    3. '       ' → logprob: -3.9171335697174072
    4. ' self' → logprob: -6.417133331298828
    5. ' if' → logprob: -6.417133331298828
    6. 'return' → logprob: -7.292133331298828
    7. '           ' → logprob: -8.667133331298828
    8. '	self' → logprob: -9.917133331298828
    9. '   ' → logprob: -10.167133331298828
    10. 'pass' → logprob: -11.167133331298828

Token 834: '(-' (ID: 8087)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.2639247477054596
    2. '('' → logprob: -1.5139247179031372
    3. '(' → logprob: -5.263924598693848
    4. '()' → logprob: -5.388924598693848
    5. '(f' → logprob: -6.388924598693848
    6. '(self' → logprob: -9.138924598693848
    7. '("")' → logprob: -9.138924598693848
    8. '(True' → logprob: -10.263924598693848
    9. '("'' → logprob: -10.263924598693848
    10. '('"' → logprob: -10.388924598693848

Token 835: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00037144700763747096
    2. 'self' → logprob: -8.000370979309082
    3. '2' → logprob: -11.125370979309082
    4. '0' → logprob: -12.000370979309082
    5. 'sys' → logprob: -12.125370979309082
    6. ' ' → logprob: -12.875370979309082
    7. '(' → logprob: -13.625370979309082
    8. 'len' → logprob: -13.750370979309082
    9. '3' → logprob: -14.250370979309082
    10. ' self' → logprob: -14.875370979309082

Token 836: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31333237886428833
    2. ')
' → logprob: -1.3133323192596436
    3. '           ' → logprob: -10.438332557678223
    4. '       ' → logprob: -10.563332557678223
    5. ')
' → logprob: -11.688332557678223
    6. ')return' → logprob: -12.563332557678223
    7. ',' → logprob: -13.813332557678223
    8. ' )' → logprob: -14.313332557678223
    9. ')

' → logprob: -14.438332557678223
    10. '   ' → logprob: -14.813332557678223

Token 837: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03587302938103676
    2. '       ' → logprob: -3.4108729362487793
    3. 'return' → logprob: -6.410872936248779
    4. '
' → logprob: -7.910872936248779
    5. ' return' → logprob: -9.785873413085938
    6. '	       ' → logprob: -9.910873413085938
    7. '		' → logprob: -10.785873413085938
    8. '               ' → logprob: -10.910873413085938
    9. 'else' → logprob: -11.160873413085938
    10. '	return' → logprob: -11.410873413085938

Token 838: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03201131150126457
    2. '           ' → logprob: -3.6570112705230713
    3. 'self' → logprob: -6.03201150894165
    4. '       ' → logprob: -6.15701150894165
    5. ' return' → logprob: -7.28201150894165
    6. 'else' → logprob: -8.157011032104492
    7. 'sys' → logprob: -8.907011032104492
    8. 'elif' → logprob: -10.532011032104492
    9. '
' → logprob: -11.532011032104492
    10. '   ' → logprob: -11.657011032104492

Token 839: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03461345657706261
    2. 'if' → logprob: -3.7846133708953857
    3. 'self' → logprob: -4.659613609313965
    4. '
' → logprob: -7.284613609313965
    5. 'else' → logprob: -7.409613609313965
    6. 'return' → logprob: -9.159613609313965
    7. '	' → logprob: -9.284613609313965
    8. '   ' → logprob: -9.409613609313965
    9. ' if' → logprob: -9.409613609313965
    10. '        
' → logprob: -9.784613609313965

Token 840: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5285099148750305
    2. '       ' → logprob: -1.1535098552703857
    3. 'else' → logprob: -3.0285098552703857
    4. 'if' → logprob: -3.1535098552703857
    5. '
' → logprob: -7.028510093688965
    6. '	' → logprob: -7.278510093688965
    7. ' self' → logprob: -7.403510093688965
    8. '        
' → logprob: -7.528510093688965
    9. 'elif' → logprob: -8.153510093688965
    10. '   ' → logprob: -8.403510093688965

Token 841: ' assert' (ID: 3696)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01805569790303707
    2. '       ' → logprob: -4.7680559158325195
    3. 'if' → logprob: -5.0180559158325195
    4. 'else' → logprob: -6.6430559158325195
    5. 'time' → logprob: -6.8930559158325195
    6. 'distance' → logprob: -8.76805591583252
    7. 'dist' → logprob: -9.01805591583252
    8. 'steps' → logprob: -9.51805591583252
    9. 't' → logprob: -10.51805591583252
    10. 'travel' → logprob: -10.89305591583252

Token 842: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0008304747752845287
    2. ' self' → logprob: -7.12583065032959
    3. '0' → logprob: -11.12583065032959
    4. '(self' → logprob: -12.00083065032959
    5. 'not' → logprob: -13.62583065032959
    6. '   ' → logprob: -13.75083065032959
    7. ' ' → logprob: -14.12583065032959
    8. '	self' → logprob: -14.37583065032959
    9. ' isinstance' → logprob: -14.87583065032959
    10. 'is' → logprob: -14.87583065032959

Token 843: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.0061682746745646
    2. '.location' → logprob: -5.131168365478516
    3. '.target' → logprob: -8.631168365478516
    4. 'next' → logprob: -10.131168365478516
    5. '.map' → logprob: -12.006168365478516
    6. '.' → logprob: -12.131168365478516
    7. 'location' → logprob: -12.256168365478516
    8. '.plan' → logprob: -13.006168365478516
    9. '.position' → logprob: -14.256168365478516
    10. '.move' → logprob: -15.131168365478516

Token 844: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: 0.0
    2. '_segment' → logprob: -17.75
    3. ' Segment' → logprob: -18.5
    4. 'Seg' → logprob: -19.5
    5. '>' → logprob: -19.75
    6. '_SEG' → logprob: -19.75
    7. 'Segments' → logprob: -20.25
    8. '-' → logprob: -20.75
    9. '```' → logprob: -21.125
    10. 'segment' → logprob: -21.25

Token 845: 'Left' (ID: 7471)
  Prédit: 'Left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -6.704273118884885e-07
    2. '>' → logprob: -15.625000953674316
    3. 'left' → logprob: -16.125
    4. '_left' → logprob: -16.25
    5. '_Left' → logprob: -16.5
    6. 'Le' → logprob: -16.75
    7. ' Left' → logprob: -17.25
    8. '```' → logprob: -18.25
    9. '.Left' → logprob: -19.375
    10. '[' → logprob: -19.375

Token 846: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -1.1472419600977446e-06
    2. '>' → logprob: -14.250000953674316
    3. 'time' → logprob: -15.125000953674316
    4. '_time' → logprob: -16.750001907348633
    5. '	Time' → logprob: -16.750001907348633
    6. ' Time' → logprob: -17.375001907348633
    7. '_Time' → logprob: -18.625001907348633
    8. 'Times' → logprob: -18.750001907348633
    9. 'Tiempo' → logprob: -18.750001907348633
    10. 'Tim' → logprob: -19.000001907348633

Token 847: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5759630799293518
    2. ' >' → logprob: -0.8259630799293518
    3. '>=' → logprob: -11.575963020324707
    4. ' ' → logprob: -11.825963020324707
    5. ' >=' → logprob: -13.200963020324707
    6. '<|end|>' → logprob: -13.700963020324707
    7. '()>' → logprob: -13.700963020324707
    8. ' ' → logprob: -14.325963020324707
    9. '!=' → logprob: -14.450963020324707
    10. '-' → logprob: -14.950963020324707

Token 848: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '1' → logprob: -19.250011444091797
    4. '   ' → logprob: -19.625011444091797
    5. '  ' → logprob: -21.000011444091797
    6. ' ' → logprob: -21.125011444091797
    7. '۰' → logprob: -21.250011444091797
    8. '=' → logprob: -22.625011444091797
    9. '  ' → logprob: -22.750011444091797
    10. ' ' → logprob: -22.750011444091797

Token 849: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.125019073486328
    4. '1' → logprob: -18.000019073486328
    5. '۰' → logprob: -18.500019073486328
    6. '  ' → logprob: -19.000019073486328
    7. '=' → logprob: -19.375019073486328
    8. '00' → logprob: -19.875019073486328
    9. ' ' → logprob: -20.062519073486328
    10. '	' → logprob: -20.500019073486328

Token 850: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017404206097126007
    2. 'self' → logprob: -4.142404079437256
    3. ' self' → logprob: -7.142404079437256
    4. '	' → logprob: -8.142404556274414
    5. '   ' → logprob: -9.267404556274414
    6. '	self' → logprob: -9.517404556274414
    7. '
' → logprob: -10.392404556274414
    8. ',' → logprob: -10.892404556274414
    9. '<|end|>' → logprob: -11.017404556274414
    10. '	   ' → logprob: -11.392404556274414

Token 851: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06751581281423569
    2. '       ' → logprob: -2.8175158500671387
    3. ' self' → logprob: -5.442515850067139
    4. '	self' → logprob: -7.067515850067139
    5. '	' → logprob: -8.31751537322998
    6. '   ' → logprob: -9.44251537322998
    7. 'if' → logprob: -10.94251537322998
    8. '	   ' → logprob: -13.19251537322998
    9. '(self' → logprob: -14.06751537322998
    10. ' ' → logprob: -14.19251537322998

Token 852: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01106173824518919
    2. '       ' → logprob: -4.511061668395996
    3. ' self' → logprob: -11.636061668395996
    4. '	self' → logprob: -12.511061668395996
    5. 'if' → logprob: -13.886061668395996
    6. '	' → logprob: -14.886061668395996
    7. '   ' → logprob: -17.011062622070312
    8. '	   ' → logprob: -17.761062622070312
    9. 'print' → logprob: -18.011062622070312
    10. '           ' → logprob: -18.511062622070312

Token 853: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -0.0004317420825827867
    2. 'next' → logprob: -7.750431537628174
    3. '.location' → logprob: -14.875432014465332
    4. '.' → logprob: -15.000432014465332
    5. 'Next' → logprob: -15.625432014465332
    6. '_next' → logprob: -16.625431060791016
    7. '	next' → logprob: -16.875431060791016
    8. 'Location' → logprob: -17.125431060791016
    9. 'location' → logprob: -17.125431060791016
    10. ' next' → logprob: -17.250431060791016

Token 854: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: 0.0
    2. '_segment' → logprob: -17.0
    3. 'Seg' → logprob: -17.5
    4. ' Segment' → logprob: -18.0
    5. 'segment' → logprob: -19.0
    6. '_SEG' → logprob: -19.0
    7. 'egment' → logprob: -19.25
    8. 'Segments' → logprob: -20.875
    9. 'Segue' → logprob: -21.375
    10. 'S' → logprob: -21.5

Token 855: 'Left' (ID: 7471)
  Prédit: 'Left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -1.1279553291387856e-05
    2. 'Le' → logprob: -11.750011444091797
    3. 'Time' → logprob: -13.625011444091797
    4. 'L' → logprob: -14.000011444091797
    5. 'Right' → logprob: -14.500011444091797
    6. 'left' → logprob: -14.875011444091797
    7. ' -=' → logprob: -16.375011444091797
    8. ' Left' → logprob: -16.375011444091797
    9. '-=' → logprob: -16.625011444091797
    10. '-' → logprob: -17.000011444091797

Token 856: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -3.128163257315464e-07
    2. '	Time' → logprob: -16.0
    3. ' Time' → logprob: -17.125
    4. 'Times' → logprob: -17.5
    5. 'time' → logprob: -18.0
    6. '_time' → logprob: -18.375
    7. 'Tiempo' → logprob: -18.625
    8. 'Left' → logprob: -20.5
    9. '=' → logprob: -20.625
    10. '_TIME' → logprob: -20.625

Token 857: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.10033293813467026
    2. ' -=' → logprob: -2.3503329753875732
    3. '-' → logprob: -9.475333213806152
    4. '=' → logprob: -9.975333213806152
    5. '+=' → logprob: -12.975333213806152
    6. '   ' → logprob: -15.100333213806152
    7. ' =' → logprob: -15.350333213806152
    8. ' +=' → logprob: -16.350332260131836
    9. '	' → logprob: -16.350332260131836
    10. ' -' → logprob: -17.225332260131836

Token 858: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -16.750019073486328
    4. ' ' → logprob: -19.875019073486328
    5. '```' → logprob: -20.125019073486328
    6. '  ' → logprob: -20.500019073486328
    7. '	' → logprob: -20.625019073486328
    8. '       ' → logprob: -20.812519073486328
    9. '0' → logprob: -21.000019073486328
    10. '
' → logprob: -21.062519073486328

Token 859: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -19.0
    4. '```' → logprob: -21.125
    5. '
' → logprob: -22.3125
    6. '0' → logprob: -22.375
    7. '	' → logprob: -22.625
    8. ' ' → logprob: -22.75
    9. '１' → logprob: -22.75
    10. '  ' → logprob: -22.875

Token 860: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00645056227222085
    2. 'if' → logprob: -5.381450653076172
    3. ' if' → logprob: -7.256450653076172
    4. '	' → logprob: -7.881450653076172
    5. '   ' → logprob: -8.006450653076172
    6. '
' → logprob: -8.506450653076172
    7. '	if' → logprob: -9.631450653076172
    8. '<|end|>' → logprob: -9.631450653076172
    9. '\' → logprob: -10.756450653076172
    10. ' ' → logprob: -11.256450653076172

Token 861: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25464528799057007
    2. '       ' → logprob: -1.5046453475952148
    3. ' if' → logprob: -6.004645347595215
    4. '   ' → logprob: -9.129645347595215
    5. '	if' → logprob: -9.254645347595215
    6. '	' → logprob: -10.879645347595215
    7. 'return' → logprob: -11.754645347595215
    8. ' ' → logprob: -12.879645347595215
    9. 'If' → logprob: -13.379645347595215
    10. '           ' → logprob: -13.504645347595215

Token 862: ' print' (ID: 2123)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -4.656383680412546e-05
    2. 'print' (adapté à ' print') → logprob: -10.250046730041504
    3. '       ' → logprob: -11.625046730041504
    4. ' if' → logprob: -13.250046730041504
    5. '   ' → logprob: -15.375046730041504
    6. '	if' → logprob: -15.875046730041504
    7. 'return' → logprob: -17.875045776367188
    8. '           ' → logprob: -18.375045776367188
    9. '```' → logprob: -18.625045776367188
    10. 'while' → logprob: -18.875045776367188

Token 863: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.030755294486880302
    2. '(' → logprob: -3.9057552814483643
    3. '()' → logprob: -4.655755519866943
    4. '(-' → logprob: -7.655755519866943
    5. 'self' → logprob: -8.905755043029785
    6. '('' → logprob: -11.405755043029785
    7. '(f' → logprob: -11.530755043029785
    8. '()
' → logprob: -11.655755043029785
    9. '((' → logprob: -11.905755043029785
    10. '0' → logprob: -12.655755043029785

Token 864: '.target' (ID: 11090)
  Prédit: '.location'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.location' → logprob: -0.0008011689060367644
    2. 'location' → logprob: -7.875801086425781
    3. '.target' → logprob: -8.000801086425781
    4. '.next' → logprob: -9.750801086425781
    5. '.' → logprob: -11.375801086425781
    6. ')' → logprob: -11.500801086425781
    7. '	location' → logprob: -13.250801086425781
    8. '.status' → logprob: -13.875801086425781
    9. '.locations' → logprob: -14.750801086425781
    10. 'next' → logprob: -14.750801086425781

Token 865: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4259644558478612e-05
    2. ' if' → logprob: -11.500014305114746
    3. ')
' → logprob: -13.125014305114746
    4. ' )' → logprob: -13.500014305114746
    5. '))' → logprob: -16.37501335144043
    6. 'if' → logprob: -16.50001335144043
    7. '())' → logprob: -16.62501335144043
    8. ',' → logprob: -16.75001335144043
    9. '<|end|>' → logprob: -16.75001335144043
    10. '+' → logprob: -17.00001335144043

Token 866: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 867: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 868: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024775585625320673
    2. ' self' → logprob: -6.002477645874023
    3. '   ' → logprob: -13.752477645874023
    4. 'not' → logprob: -14.252477645874023
    5. '(self' → logprob: -16.502477645874023
    6. '	self' → logprob: -17.002477645874023
    7. '       ' → logprob: -17.377477645874023
    8. ' not' → logprob: -17.627477645874023
    9. '    ' → logprob: -17.627477645874023
    10. '  ' → logprob: -18.002477645874023

Token 869: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -1.5048530030981055e-06
    2. 'next' → logprob: -13.500001907348633
    3. '.target' → logprob: -17.375001907348633
    4. '.location' → logprob: -18.000001907348633
    5. '.' → logprob: -18.750001907348633
    6. '	next' → logprob: -20.625001907348633
    7. '[next' → logprob: -21.125001907348633
    8. ' next' → logprob: -21.750001907348633
    9. 'Next' → logprob: -21.875001907348633
    10. ' .' → logprob: -22.125001907348633

Token 870: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: 0.0
    2. '_segment' → logprob: -17.5
    3. 'Seg' → logprob: -18.375
    4. ' Segment' → logprob: -18.5
    5. 'segment' → logprob: -18.625
    6. 'Segments' → logprob: -20.375
    7. '_SEG' → logprob: -20.375
    8. 'egment' → logprob: -22.375
    9. '[' → logprob: -22.75
    10. 'Sector' → logprob: -23.125

Token 871: 'Left' (ID: 7471)
  Prédit: 'Left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -1.1041145626222715e-05
    2. 'Le' → logprob: -11.625011444091797
    3. '_Left' → logprob: -14.375011444091797
    4. 'left' → logprob: -14.500011444091797
    5. 'L' → logprob: -15.000011444091797
    6. '_left' → logprob: -15.250011444091797
    7. ' Left' → logprob: -16.375011444091797
    8. 'Time' → logprob: -16.375011444091797
    9. '==' → logprob: -17.125011444091797
    10. 'Let' → logprob: -17.250011444091797

Token 872: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -5.676981345459353e-06
    2. 'Left' → logprob: -12.500005722045898
    3. 'Ti' → logprob: -15.000005722045898
    4. 'T' → logprob: -15.000005722045898
    5. 'Tiempo' → logprob: -15.000005722045898
    6. 'Tim' → logprob: -15.250005722045898
    7. 'Times' → logprob: -15.500005722045898
    8. '_time' → logprob: -15.625005722045898
    9. 'time' → logprob: -15.750005722045898
    10. '	Time' → logprob: -17.1250057220459

Token 873: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06344380229711533
    2. ' ==' → logprob: -2.813443899154663
    3. '<=' → logprob: -6.563443660736084
    4. ' <=' → logprob: -9.688444137573242
    5. '==
' → logprob: -13.438444137573242
    6. '===' → logprob: -15.188444137573242
    7. '()==' → logprob: -15.938444137573242
    8. ')==' → logprob: -16.438444137573242
    9. '=' → logprob: -17.188444137573242
    10. ']==' → logprob: -17.438444137573242

Token 874: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004307884373702109
    2. ' ' → logprob: -7.750430583953857
    3. '   ' → logprob: -16.500431060791016
    4. '  ' → logprob: -17.875431060791016
    5. '00' → logprob: -18.875431060791016
    6. '=' → logprob: -18.875431060791016
    7. '۰' → logprob: -19.000431060791016
    8. ' ' → logprob: -19.250431060791016
    9. '```' → logprob: -19.437931060791016
    10. '	' → logprob: -19.750431060791016

Token 875: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.375139236450195
    4. '  ' → logprob: -18.625139236450195
    5. '```' → logprob: -19.000139236450195
    6. '۰' → logprob: -19.562639236450195
    7. '=' → logprob: -19.625139236450195
    8. '1' → logprob: -19.687639236450195
    9. '00' → logprob: -19.750139236450195
    10. '    ' → logprob: -19.812639236450195

Token 876: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0010779452277347445
    2. ':' → logprob: -7.876078128814697
    3. ' and' → logprob: -8.001077651977539
    4. '           ' → logprob: -8.001077651977539
    5. '       ' → logprob: -11.751077651977539
    6. '():
' → logprob: -12.001077651977539
    7. 'and' → logprob: -12.501077651977539
    8. ' :
' → logprob: -13.001077651977539
    9. '   ' → logprob: -13.126077651977539
    10. '):
' → logprob: -13.126077651977539

Token 877: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.019986066967248917
    2. '       ' → logprob: -4.269986152648926
    3. '   ' → logprob: -5.269986152648926
    4. ' and' → logprob: -8.769986152648926
    5. 'self' → logprob: -8.769986152648926
    6. ':
' → logprob: -9.269986152648926
    7. '	       ' → logprob: -10.144986152648926
    8. ',' → logprob: -10.644986152648926
    9. '#' → logprob: -10.644986152648926
    10. '            
' → logprob: -10.894986152648926

Token 878: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001285948441363871
    2. ' self' → logprob: -7.001286029815674
    3. '           ' → logprob: -8.126285552978516
    4. '               ' → logprob: -10.376285552978516
    5. '   ' → logprob: -11.001285552978516
    6. '       ' → logprob: -11.126285552978516
    7. '	self' → logprob: -11.251285552978516
    8. '	       ' → logprob: -13.501285552978516
    9. '(self' → logprob: -14.501285552978516
    10. '```' → logprob: -15.126285552978516

Token 879: '.location' (ID: 15725)
  Prédit: '.location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.location' → logprob: -0.000633566698525101
    2. 'location' → logprob: -7.625633716583252
    3. '.' → logprob: -8.875633239746094
    4. '	location' → logprob: -13.375633239746094
    5. '           ' → logprob: -13.750633239746094
    6. '.target' → logprob: -13.875633239746094
    7. ' location' → logprob: -13.875633239746094
    8. ' .' → logprob: -14.625633239746094
    9. '       ' → logprob: -15.875633239746094
    10. '=' → logprob: -16.000633239746094

Token 880: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740773141384125
    2. '=' → logprob: -0.9740773439407349
    3. '	' → logprob: -16.724077224731445
    4. '.=' → logprob: -16.724077224731445
    5. '＝' → logprob: -17.099077224731445
    6. '+=' → logprob: -17.599077224731445
    7. ' ' → logprob: -17.849077224731445
    8. ',' → logprob: -17.974077224731445
    9. ' ==' → logprob: -18.349077224731445
    10. ' +=' → logprob: -18.349077224731445

Token 881: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011047935113310814
    2. ' self' → logprob: -4.511047840118408
    3. '	self' → logprob: -16.26104736328125
    4. '(self' → logprob: -17.63604736328125
    5. '   ' → logprob: -18.76104736328125
    6. '[self' → logprob: -18.76104736328125
    7. '=self' → logprob: -19.76104736328125
    8. '$self' → logprob: -20.76104736328125
    9. '```' → logprob: -20.88604736328125
    10. '    ' → logprob: -21.26104736328125

Token 882: '.target' (ID: 11090)
  Prédit: '.target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.target' → logprob: -0.006715728435665369
    2. 'target' → logprob: -5.006715774536133
    3. ' target' → logprob: -14.881715774536133
    4. '	target' → logprob: -17.381715774536133
    5. '_target' → logprob: -17.881715774536133
    6. '[target' → logprob: -18.006715774536133
    7. 'Target' → logprob: -18.381715774536133
    8. '.' → logprob: -19.131715774536133
    9. '.Target' → logprob: -19.506715774536133
    10. '.next' → logprob: -19.631715774536133

Token 883: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 884: '   ' (ID: 271)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2727455198764801
    2. 'def' → logprob: -2.1477456092834473
    3. 'if' → logprob: -2.6477456092834473
    4. 'g' → logprob: -3.5227456092834473
    5. 'driver' → logprob: -5.272745609283447
    6. '<|end|>' → logprob: -5.397745609283447
    7. '```' → logprob: -5.647745609283447
    8. '#g' → logprob: -5.647745609283447
    9. 'graph' → logprob: -6.647745609283447
    10. 'pass' → logprob: -6.772745609283447

Token 885: ' def' (ID: 1056)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.14659267663955688
    2. '<|end|>' → logprob: -2.646592617034912
    3. 'def' (adapté à ' def') → logprob: -3.396592617034912
    4. 'while' → logprob: -3.771592617034912
    5. 'pass' → logprob: -5.646592617034912
    6. '```' → logprob: -6.521592617034912
    7. '<|end|>' → logprob: -7.146592617034912
    8. 'try' → logprob: -7.396592617034912
    9. 'if' → logprob: -7.521592617034912
    10. '...' → logprob: -8.02159309387207

Token 886: ' on' (ID: 402)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.3518412709236145
    2. 'update' → logprob: -1.7268412113189697
    3. 'order' → logprob: -3.4768412113189697
    4. 'receive' → logprob: -3.9768412113189697
    5. 'pickup' → logprob: -4.476841449737549
    6. 'ask' → logprob: -5.226841449737549
    7. 'run' → logprob: -5.476841449737549
    8. 'main' → logprob: -5.601841449737549
    9. 'new' → logprob: -5.726841449737549
    10. 'deliver' → logprob: -5.726841449737549

Token 887: 'Route' (ID: 7656)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.9198302626609802
    2. '_new' → logprob: -2.419830322265625
    3. 'New' → logprob: -2.794830322265625
    4. 'order' → logprob: -2.919830322265625
    5. '_input' → logprob: -3.044830322265625
    6. 'Order' → logprob: -3.044830322265625
    7. '_command' → logprob: -3.419830322265625
    8. '_event' → logprob: -3.794830322265625
    9. 'new' → logprob: -3.919830322265625
    10. '_update' → logprob: -3.919830322265625

Token 888: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002844576956704259
    2. '(' → logprob: -9.125284194946289
    3. 'def' → logprob: -9.500284194946289
    4. '   ' → logprob: -9.625284194946289
    5. 'self' → logprob: -11.000284194946289
    6. '       ' → logprob: -11.875284194946289
    7. ' (' → logprob: -12.875284194946289
    8. '=self' → logprob: -13.500284194946289
    9. '_(' → logprob: -14.125284194946289
    10. '_update' → logprob: -14.250284194946289

Token 889: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19184595346450806
    2. '(self' → logprob: -1.9418458938598633
    3. 'self' → logprob: -3.5668458938598633
    4. ',self' → logprob: -6.941845893859863
    5. 'def' → logprob: -7.941845893859863
    6. '):' → logprob: -8.191845893859863
    7. '(' → logprob: -8.316845893859863
    8. '_,' → logprob: -8.566845893859863
    9. ' ,' → logprob: -8.941845893859863
    10. '   ' → logprob: -9.316845893859863

Token 890: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6972748041152954
    2. 'return' → logprob: -0.6972748041152954
    3. ' return' → logprob: -6.322274684906006
    4. '   ' → logprob: -6.947274684906006
    5. 'def' → logprob: -7.322274684906006
    6. 'if' → logprob: -7.947274684906006
    7. '	return' → logprob: -8.322275161743164
    8. '
' → logprob: -10.572275161743164
    9. '```' → logprob: -10.697275161743164
    10. 'self' → logprob: -11.072275161743164

Token 891: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0050373561680316925
    2. '       ' → logprob: -5.505037307739258
    3. 'print' → logprob: -7.505037307739258
    4. 'def' → logprob: -8.255037307739258
    5. '   ' → logprob: -9.505037307739258
    6. ' return' → logprob: -9.755037307739258
    7. 'if' → logprob: -11.130037307739258
    8. 'self' → logprob: -14.755037307739258
    9. '	return' → logprob: -14.880037307739258
    10. 'while' → logprob: -16.005037307739258

Token 892: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.661313533782959
    2. 'len' → logprob: -1.161313533782959
    3. 'self' → logprob: -1.786313533782959
    4. ' bool' → logprob: -6.161313533782959
    5. ' len' → logprob: -7.411313533782959
    6. 'True' → logprob: -8.411314010620117
    7. ' self' → logprob: -8.536314010620117
    8. '(len' → logprob: -11.161314010620117
    9. '(bool' → logprob: -11.661314010620117
    10. 'False' → logprob: -11.911314010620117

Token 893: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.8889261304575484e-06
    2. '(' → logprob: -12.750003814697266
    3. 'self' → logprob: -13.875003814697266
    4. '(this' → logprob: -18.125003814697266
    5. '(len' → logprob: -18.250003814697266
    6. '	self' → logprob: -19.750003814697266
    7. '   ' → logprob: -19.875003814697266
    8. '(
' → logprob: -20.000003814697266
    9. '[self' → logprob: -20.375003814697266
    10. ' (' → logprob: -20.625003814697266

Token 894: '.next' (ID: 6689)
  Prédit: '.plan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.plan' → logprob: -3.4121114822482923e-06
    2. 'plan' → logprob: -13.375003814697266
    3. ' .' → logprob: -13.875003814697266
    4. ').' → logprob: -15.250003814697266
    5. '.target' → logprob: -15.375003814697266
    6. '.' → logprob: -16.125003814697266
    7. '.order' → logprob: -16.375003814697266
    8. ' plan' → logprob: -16.875003814697266
    9. '.pl' → logprob: -17.125003814697266
    10. '.route' → logprob: -17.250003814697266

Token 895: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -1.9361264946837764e-07
    2. 'Seg' → logprob: -16.25
    3. 'S' → logprob: -18.125
    4. ' Segment' → logprob: -19.125
    5. 'Segments' → logprob: -19.625
    6. '_segment' → logprob: -19.625
    7. 'Target' → logprob: -21.0
    8. 'Plan' → logprob: -21.125
    9. 'segment' → logprob: -21.375
    10. '_S' → logprob: -21.5

Token 896: 'Left' (ID: 7471)
  Prédit: 'Left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Left' → logprob: -2.339278580620885e-06
    2. 'left' → logprob: -13.875001907348633
    3. ' Left' → logprob: -14.875001907348633
    4. '_left' → logprob: -15.125001907348633
    5. 'Time' → logprob: -15.375001907348633
    6. '_Left' → logprob: -15.625001907348633
    7. '   ' → logprob: -16.500001907348633
    8. '[' → logprob: -17.000001907348633
    9. '
' → logprob: -17.000001907348633
    10. ')' → logprob: -17.500001907348633

Token 897: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -2.696889623621246e-06
    2. 'Ti' → logprob: -13.25000286102295
    3. 'Times' → logprob: -14.75000286102295
    4. 'time' → logprob: -16.125001907348633
    5. '_time' → logprob: -16.750001907348633
    6. 'TI' → logprob: -17.125001907348633
    7. 'T' → logprob: -17.125001907348633
    8. ' Time' → logprob: -17.375001907348633
    9. '_Time' → logprob: -17.375001907348633
    10. 'Tim' → logprob: -17.500001907348633

Token 898: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011387886479496956
    2. '>' → logprob: -7.376138687133789
    3. ' and' → logprob: -8.626138687133789
    4. ')>' → logprob: -9.376138687133789
    5. ' )' → logprob: -9.501138687133789
    6. ' or' → logprob: -9.751138687133789
    7. 'and' → logprob: -10.001138687133789
    8. ' >' → logprob: -10.501138687133789
    9. '<|end|>' → logprob: -10.501138687133789
    10. ')return' → logprob: -12.376138687133789

Token 899: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1709950566291809
    2. '<|end|>' → logprob: -2.545994997024536
    3. '#' → logprob: -2.670994997024536
    4. 'if' → logprob: -5.670995235443115
    5. 'pass' → logprob: -6.170995235443115
    6. '<|end|>' → logprob: -7.420995235443115
    7. 'for' → logprob: -7.420995235443115
    8. '.' → logprob: -7.670995235443115
    9. '```' → logprob: -7.795995235443115
    10. 'while' → logprob: -7.920995235443115

Token 900: ' shop' (ID: 9100)
  Prédit: ' driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' driver' → logprob: -0.6938032507896423
    2. 'driver' → logprob: -0.9438032507896423
    3. 'graph' → logprob: -2.818803310394287
    4. ' graph' → logprob: -3.443803310394287
    5. 'str' → logprob: -6.068803310394287
    6. 'int' → logprob: -6.193803310394287
    7. 'list' → logprob: -6.443803310394287
    8. 'main' → logprob: -6.818803310394287
    9. 'controller' → logprob: -7.193803310394287
    10. '_driver' → logprob: -7.193803310394287

Token 901: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001870902779046446
    2. ':
' → logprob: -9.000186920166016
    3. '(object' → logprob: -10.000186920166016
    4. ':def' → logprob: -11.625186920166016
    5. '():' → logprob: -13.125186920166016
    6. '(' → logprob: -13.500186920166016
    7. '):' → logprob: -13.750186920166016
    8. ' :' → logprob: -13.875186920166016
    9. '<|end|>' → logprob: -14.000186920166016
    10. ':

' → logprob: -14.750186920166016

Token 902: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0024277404882013798
    2. 'def' → logprob: -6.377427577972412
    3. ':' → logprob: -7.877427577972412
    4. ' def' → logprob: -8.37742805480957
    5. 'class' → logprob: -10.37742805480957
    6. ':
' → logprob: -11.00242805480957
    7. '<|end|>' → logprob: -11.50242805480957
    8. '    
' → logprob: -11.62742805480957
    9. 'None' → logprob: -11.75242805480957
    10. ':def' → logprob: -12.00242805480957

Token 903: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.48519599437713623
    2. 'def' (adapté à ' def') → logprob: -1.1101959943771362
    3. '   ' → logprob: -3.610196113586426
    4. 'plan' → logprob: -4.235196113586426
    5. ' plan' → logprob: -5.610196113586426
    6. 'location' → logprob: -6.610196113586426
    7. 'items' → logprob: -6.735196113586426
    8. 'order' → logprob: -7.110196113586426
    9. 'shop' → logprob: -7.110196113586426
    10. 'store' → logprob: -7.235196113586426

Token 904: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.25556665658950806
    2. 'init' → logprob: -1.5055665969848633
    3. ' __' → logprob: -5.755566596984863
    4. 'staticmethod' → logprob: -8.255566596984863
    5. 'classmethod' → logprob: -8.880566596984863
    6. '_init' → logprob: -11.255566596984863
    7. 'def' → logprob: -11.380566596984863
    8. '
' → logprob: -11.755566596984863
    9. '```' → logprob: -11.880566596984863
    10. 'property' → logprob: -12.255566596984863

Token 905: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.375
    3. 'def' → logprob: -19.375
    4. '(init' → logprob: -20.5
    5. '_init' → logprob: -20.875
    6. '	init' → logprob: -21.125
    7. 'inite' → logprob: -21.5
    8. 'ini' → logprob: -21.625
    9. 'class' → logprob: -22.375
    10. ':init' → logprob: -22.5

Token 906: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03392437472939491
    2. '(self' → logprob: -3.4089243412017822
    3. '(' → logprob: -8.783924102783203
    4. '__' → logprob: -9.158924102783203
    5. '__(
' → logprob: -11.408924102783203
    6. '_(' → logprob: -12.658924102783203
    7. ' (' → logprob: -13.158924102783203
    8. 'self' → logprob: -13.783924102783203
    9. '   ' → logprob: -13.908924102783203
    10. '__((' → logprob: -14.783924102783203

Token 907: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.9862216504407115e-05
    2. ' self' → logprob: -11.000020027160645
    3. '(self' → logprob: -13.000020027160645
    4. ',' → logprob: -15.750020027160645
    5. '
' → logprob: -15.750020027160645
    6. '   ' → logprob: -15.875020027160645
    7. 's' → logprob: -16.000019073486328
    8. '	self' → logprob: -16.500019073486328
    9. '0' → logprob: -16.750019073486328
    10. ')' → logprob: -17.000019073486328

Token 908: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004811730235815048
    2. 'self' → logprob: -5.379811763763428
    3. ',self' → logprob: -9.50481128692627
    4. '):
' → logprob: -9.62981128692627
    5. '(self' → logprob: -11.00481128692627
    6. '   ' → logprob: -11.37981128692627
    7. '):' → logprob: -11.50481128692627
    8. '       ' → logprob: -11.75481128692627
    9. ' ,' → logprob: -13.25481128692627
    10. ',
' → logprob: -13.25481128692627

Token 909: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3645528256893158
    2. '       ' → logprob: -1.2395528554916382
    3. 'def' → logprob: -4.864552974700928
    4. ' self' → logprob: -5.364552974700928
    5. '(self' → logprob: -5.864552974700928
    6. '   ' → logprob: -8.23955249786377
    7. '	self' → logprob: -8.23955249786377
    8. ' def' → logprob: -9.11455249786377
    9. '(' → logprob: -10.23955249786377
    10. '	' → logprob: -10.61455249786377

Token 910: ' self' (ID: 1051)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.25051137804985046
    2. 'self' (adapté à ' self') → logprob: -1.6255114078521729
    3. 'raw' → logprob: -4.125511169433594
    4. '       ' → logprob: -5.125511169433594
    5. 'pass' → logprob: -6.250511169433594
    6. '   ' → logprob: -7.875511169433594
    7. 'd' → logprob: -9.250511169433594
    8. 'n' → logprob: -10.000511169433594
    9. 'shop' → logprob: -10.125511169433594
    10. ' data' → logprob: -10.375511169433594

Token 911: '.order' (ID: 25549)
  Prédit: '.location'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.location' → logprob: -0.4626103639602661
    2. '.items' → logprob: -1.8376103639602661
    3. '.name' → logprob: -2.7126102447509766
    4. '.products' → logprob: -3.5876102447509766
    5. '.position' → logprob: -3.7126102447509766
    6. '.id' → logprob: -3.9626102447509766
    7. '.stock' → logprob: -4.087610244750977
    8. '.orders' → logprob: -4.337610244750977
    9. '.capacity' → logprob: -4.962610244750977
    10. '.' → logprob: -5.087610244750977

Token 912: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12342853844165802
    2. 's' → logprob: -2.8734285831451416
    3. ' =' → logprob: -2.8734285831451416
    4. '=set' → logprob: -6.2484283447265625
    5. 'd' → logprob: -7.3734283447265625
    6. '=[]' → logprob: -7.9984283447265625
    7. 'ed' → logprob: -9.123428344726562
    8. '<|end|>' → logprob: -11.248428344726562
    9. '   ' → logprob: -11.373428344726562
    10. ' ' → logprob: -11.623428344726562

Token 913: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.05009833723306656
    2. '[]' → logprob: -3.050098419189453
    3. '{}' → logprob: -7.050098419189453
    4. '{' → logprob: -8.425098419189453
    5. 'collections' → logprob: -9.550098419189453
    6. ' set' → logprob: -9.675098419189453
    7. '1' → logprob: -9.675098419189453
    8. '0' → logprob: -9.925098419189453
    9. ' []' → logprob: -10.175098419189453
    10. 'int' → logprob: -10.425098419189453

Token 914: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 915: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 916: ' timer' (ID: 16905)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'driver' → logprob: -0.32383736968040466
    2. 'main' → logprob: -2.3238372802734375
    3. 'customer' → logprob: -2.4488372802734375
    4. 'graph' → logprob: -4.3238372802734375
    5. 'client' → logprob: -4.5738372802734375
    6. 'shop' → logprob: -4.6988372802734375
    7. 'delivery' → logprob: -4.9488372802734375
    8. 'manager' → logprob: -5.3238372802734375
    9. 'store' → logprob: -5.5738372802734375
    10. 'product' → logprob: -5.5738372802734375

Token 917: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006177236791700125
    2. ':
' → logprob: -7.625617504119873
    3. '(' → logprob: -9.625617980957031
    4. '(object' → logprob: -10.750617980957031
    5. '():' → logprob: -10.750617980957031
    6. ':def' → logprob: -12.000617980957031
    7. ' :' → logprob: -12.250617980957031
    8. '<|end|>' → logprob: -13.125617980957031
    9. 'def' → logprob: -13.250617980957031
    10. '   ' → logprob: -13.750617980957031

Token 918: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006132722366601229
    2. ' def' → logprob: -5.50613260269165
    3. 'import' → logprob: -6.50613260269165
    4. 'def' → logprob: -7.88113260269165
    5. '	def' → logprob: -9.506133079528809
    6. '<|end|>' → logprob: -9.881133079528809
    7. ' ' → logprob: -11.006133079528809
    8. ' import' → logprob: -11.506133079528809
    9. ' pass' → logprob: -11.756133079528809
    10. 'from' → logprob: -12.006133079528809

Token 919: ' orders' (ID: 12528)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3541009724140167
    2. ' def' → logprob: -1.3541009426116943
    3. 'import' → logprob: -3.7291009426116943
    4. '   ' → logprob: -4.479101181030273
    5. '__' → logprob: -5.479101181030273
    6. '	def' → logprob: -9.104101181030273
    7. 'pass' → logprob: -9.104101181030273
    8. ' __' → logprob: -9.229101181030273
    9. 'from' → logprob: -9.979101181030273
    10. ' pass' → logprob: -10.229101181030273

Token 920: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.700640857219696
    2. ' =' → logprob: -0.700640857219696
    3. 'import' → logprob: -6.325640678405762
    4. '=[]' → logprob: -6.325640678405762
    5. '   ' → logprob: -7.200640678405762
    6. 'def' → logprob: -8.075640678405762
    7. '_time' → logprob: -8.075640678405762
    8. '  ' → logprob: -8.575640678405762
    9. ' ' → logprob: -8.825640678405762
    10. ',' → logprob: -8.825640678405762

Token 921: ' None' (ID: 4662)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.922906756401062
    2. '[]' → logprob: -1.172906756401062
    3. '{}' → logprob: -1.797906756401062
    4. '0' → logprob: -2.4229068756103516
    5. 'collections' → logprob: -3.2979068756103516
    6. 'dict' → logprob: -7.297906875610352
    7. '[]
' → logprob: -7.547906875610352
    8. '{' → logprob: -9.047906875610352
    9. '   ' → logprob: -9.547906875610352
    10. '[]}' → logprob: -9.672906875610352

Token 922: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4918287992477417
    2. ' =' → logprob: -1.4918287992477417
    3. '<|end|>' → logprob: -2.1168289184570312
    4. '[]' → logprob: -4.116828918457031
    5. '=' → logprob: -4.366828918457031
    6. 'def' → logprob: -5.491828918457031
    7. 'None' → logprob: -5.491828918457031
    8. '{}' → logprob: -6.366828918457031
    9. '[]
' → logprob: -6.991828918457031
    10. '()' → logprob: -7.991828918457031

Token 923: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3856995105743408
    2. ' =' → logprob: -1.3856995105743408
    3. '=' → logprob: -3.135699510574341
    4. '<|end|>' → logprob: -4.135699272155762
    5. 'def' → logprob: -5.010699272155762
    6. ' def' → logprob: -7.260699272155762
    7. '
' → logprob: -7.260699272155762
    8. '[]' → logprob: -7.760699272155762
    9. ' ' → logprob: -8.135699272155762
    10. '=
' → logprob: -8.385699272155762

Token 924: ' times' (ID: 4238)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27361664175987244
    2. ' def' → logprob: -2.3986165523529053
    3. 'time' → logprob: -2.6486165523529053
    4. 'current' → logprob: -3.3986165523529053
    5. '   ' → logprob: -4.648616790771484
    6. 'times' (adapté à ' times') → logprob: -5.273616790771484
    7. ' current' → logprob: -6.023616790771484
    8. ' time' → logprob: -6.273616790771484
    9. 'segments' → logprob: -6.398616790771484
    10. 'next' → logprob: -6.523616790771484

Token 925: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22552642226219177
    2. ' =' → logprob: -1.6005264520645142
    3. '   ' → logprob: -10.225526809692383
    4. '=None' → logprob: -10.350526809692383
    5. ':' → logprob: -10.475526809692383
    6. ' ' → logprob: -12.225526809692383
    7. '<|end|>' → logprob: -12.350526809692383
    8. '=[]' → logprob: -12.600526809692383
    9. '  ' → logprob: -12.975526809692383
    10. ',' → logprob: -14.975526809692383

Token 926: ' None' (ID: 4662)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.27963030338287354
    2. '{}' → logprob: -1.6546303033828735
    3. 'None' → logprob: -3.154630184173584
    4. 'collections' → logprob: -4.904630184173584
    5. 'dict' → logprob: -6.904630184173584
    6. 'set' → logprob: -7.529630184173584
    7. '0' → logprob: -8.154630661010742
    8. 'list' → logprob: -8.279630661010742
    9. '[]
' → logprob: -8.404630661010742
    10. ' []' → logprob: -9.279630661010742

Token 927: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1572025567293167
    2. ' =' → logprob: -2.7822024822235107
    3. '=' → logprob: -3.1572024822235107
    4. 'def' → logprob: -4.03220272064209
    5. '<|end|>' → logprob: -5.03220272064209
    6. '
' → logprob: -5.28220272064209
    7. ' def' → logprob: -5.53220272064209
    8. '[]' → logprob: -6.40720272064209
    9. '	def' → logprob: -6.53220272064209
    10. '    
' → logprob: -6.78220272064209

Token 928: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06170053407549858
    2. 'def' → logprob: -3.1867005825042725
    3. ' def' → logprob: -4.061700344085693
    4. '
' → logprob: -7.311700344085693
    5. '    
' → logprob: -8.561700820922852
    6. '	def' → logprob: -8.561700820922852
    7. '<|end|>' → logprob: -9.311700820922852
    8. ' =' → logprob: -9.811700820922852
    9. '=' → logprob: -10.186700820922852
    10. '  ' → logprob: -11.061700820922852

Token 929: ' order' (ID: 2569)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019252682104706764
    2. '   ' → logprob: -4.144252777099609
    3. ' def' → logprob: -6.769252777099609
    4. 'current' → logprob: -6.769252777099609
    5. 'next' → logprob: -8.76925277709961
    6. 'time' → logprob: -8.76925277709961
    7. 'order' (adapté à ' order') → logprob: -9.64425277709961
    8. 'events' → logprob: -10.14425277709961
    9. '	def' → logprob: -10.26925277709961
    10. 'count' → logprob: -10.26925277709961

Token 930: 'Index' (ID: 2368)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25296109914779663
    2. '=' → logprob: -2.8779611587524414
    3. ' =' → logprob: -3.0029611587524414
    4. 'Times' → logprob: -4.127961158752441
    5. '_times' → logprob: -4.127961158752441
    6. 'ed' → logprob: -4.252961158752441
    7. 'Count' → logprob: -4.502961158752441
    8. 'Time' → logprob: -4.877961158752441
    9. '_count' → logprob: -4.877961158752441
    10. '_time' → logprob: -5.127961158752441

Token 931: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2259521633386612
    2. ' =' → logprob: -1.6009521484375
    3. '   ' → logprob: -8.4759521484375
    4. ':' → logprob: -8.4759521484375
    5. ' ' → logprob: -10.3509521484375
    6. ',' → logprob: -10.4759521484375
    7. '=None' → logprob: -10.4759521484375
    8. 's' → logprob: -10.8509521484375
    9. '  ' → logprob: -12.1009521484375
    10. ' :' → logprob: -13.1009521484375

Token 932: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0027814581990242004
    2. ' ' → logprob: -6.252781391143799
    3. '-' → logprob: -7.127781391143799
    4. 'None' → logprob: -10.877781867980957
    5. ' -' → logprob: -11.252781867980957
    6. '   ' → logprob: -11.752781867980957
    7. '{}' → logprob: -12.502781867980957
    8. '1' → logprob: -13.127781867980957
    9. '  ' → logprob: -13.377781867980957
    10. '{' → logprob: -14.127781867980957

Token 933: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7966021299362183
    2. '=' → logprob: -0.9216021299362183
    3. 'def' → logprob: -2.671602249145508
    4. '
' → logprob: -3.296602249145508
    5. '   ' → logprob: -3.546602249145508
    6. ' def' → logprob: -4.296602249145508
    7. '	def' → logprob: -7.546602249145508
    8. ' ' → logprob: -7.671602249145508
    9. '<|end|>' → logprob: -7.796602249145508
    10. ':' → logprob: -8.296602249145508

Token 934: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03500272333621979
    2. 'def' → logprob: -4.035002708435059
    3. ' def' → logprob: -4.785002708435059
    4. '<|end|>' → logprob: -5.285002708435059
    5. '
' → logprob: -6.035002708435059
    6. '	def' → logprob: -8.035002708435059
    7. '    
' → logprob: -8.410002708435059
    8. '<|end|>' → logprob: -9.160002708435059
    9. ' ' → logprob: -10.160002708435059
    10. '  ' → logprob: -10.285002708435059

Token 935: ' curr' (ID: 10495)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05309334397315979
    2. 'current' → logprob: -3.553093433380127
    3. '   ' → logprob: -4.553093433380127
    4. 'time' → logprob: -5.178093433380127
    5. 'order' → logprob: -6.678093433380127
    6. 'next' → logprob: -7.053093433380127
    7. 'count' → logprob: -7.928093433380127
    8. 'times' → logprob: -8.053092956542969
    9. 'timer' → logprob: -8.303092956542969
    10. 'orders' → logprob: -8.303092956542969

Token 936: 'Time' (ID: 1929)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.9901395440101624
    2. 'Time' → logprob: -1.4901394844055176
    3. 'Index' → logprob: -2.4901394844055176
    4. '=' → logprob: -2.6151394844055176
    5. 'time' → logprob: -2.6151394844055176
    6. ' =' → logprob: -3.1151394844055176
    7. '_time' → logprob: -3.4901394844055176
    8. 'Order' → logprob: -3.6151394844055176
    9. 'Timer' → logprob: -4.240139484405518
    10. 'Idx' → logprob: -4.240139484405518

Token 937: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4744182825088501
    2. ' =' → logprob: -0.9744182825088501
    3. '   ' → logprob: -8.349418640136719
    4. ':' → logprob: -9.474418640136719
    5. '=None' → logprob: -10.724418640136719
    6. ' ' → logprob: -12.599418640136719
    7. '  ' → logprob: -13.599418640136719
    8. ',' → logprob: -14.349418640136719
    9. 'None' → logprob: -14.974418640136719
    10. ' :' → logprob: -15.974418640136719

Token 938: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010532920714467764
    2. ' ' → logprob: -6.876053333282471
    3. '-' → logprob: -11.001052856445312
    4. 'None' → logprob: -13.501052856445312
    5. '1' → logprob: -14.001052856445312
    6. '   ' → logprob: -14.251052856445312
    7. ' -' → logprob: -14.501052856445312
    8. ' None' → logprob: -15.751052856445312
    9. '  ' → logprob: -16.251052856445312
    10. '=' → logprob: -17.126052856445312

Token 939: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07705185562372208
    2. 'def' → logprob: -2.827051877975464
    3. ' def' → logprob: -5.077051639556885
    4. '=' → logprob: -5.452051639556885
    5. '
' → logprob: -6.702051639556885
    6. '<|end|>' → logprob: -6.827051639556885
    7. ' =' → logprob: -7.577051639556885
    8. '	def' → logprob: -7.577051639556885
    9. '    
' → logprob: -7.702051639556885
    10. ':' → logprob: -8.577052116394043

Token 940: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01134512946009636
    2. 'def' → logprob: -5.261344909667969
    3. ' def' → logprob: -6.011344909667969
    4. '	def' → logprob: -6.136344909667969
    5. '=' → logprob: -7.636344909667969
    6. '<|end|>' → logprob: -8.011344909667969
    7. ' =' → logprob: -8.136344909667969
    8. '    
' → logprob: -9.261344909667969
    9. '
' → logprob: -9.386344909667969
    10. '[' → logprob: -10.511344909667969

Token 941: ' Tmax' (ID: 157185)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05152381584048271
    2. ' def' → logprob: -3.0515239238739014
    3. '   ' → logprob: -5.926523685455322
    4. '=' → logprob: -9.80152416229248
    5. 'None' → logprob: -9.80152416229248
    6. '	def' → logprob: -10.17652416229248
    7. '__' → logprob: -10.30152416229248
    8. 'curr' → logprob: -10.67652416229248
    9. ' =' → logprob: -11.30152416229248
    10. '
' → logprob: -11.80152416229248

Token 942: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742906391620636
    2. ' =' → logprob: -0.9742906093597412
    3. '   ' → logprob: -8.84929084777832
    4. ':' → logprob: -10.22429084777832
    5. '=None' → logprob: -10.97429084777832
    6. ' ' → logprob: -11.59929084777832
    7. ',' → logprob: -12.22429084777832
    8. '  ' → logprob: -13.59929084777832
    9. ' :' → logprob: -14.84929084777832
    10. '    ' → logprob: -15.34929084777832

Token 943: ' None' (ID: 4662)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.6991929411888123
    2. 'int' → logprob: -1.949193000793457
    3. '10' → logprob: -1.949193000793457
    4. '0' → logprob: -2.074193000793457
    5. ' ' → logprob: -3.574193000793457
    6. 'None' → logprob: -4.824193000793457
    7. 'float' → logprob: -4.824193000793457
    8. '60' → logprob: -5.199193000793457
    9. '24' → logprob: -5.324193000793457
    10. ' int' → logprob: -5.449193000793457

Token 944: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3580614924430847
    2. '=' → logprob: -1.8580615520477295
    3. 'def' → logprob: -2.6080615520477295
    4. ' def' → logprob: -3.1080615520477295
    5. ' =' → logprob: -4.23306131362915
    6. ':' → logprob: -4.98306131362915
    7. '	def' → logprob: -6.48306131362915
    8. '
' → logprob: -6.73306131362915
    9. '<|end|>' → logprob: -7.48306131362915
    10. '=
' → logprob: -7.60806131362915

Token 945: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003572388319298625
    2. 'def' → logprob: -6.378572463989258
    3. ' def' → logprob: -6.378572463989258
    4. '<|end|>' → logprob: -10.003572463989258
    5. '	def' → logprob: -10.003572463989258
    6. 'class' → logprob: -10.378572463989258
    7. '
' → logprob: -11.003572463989258
    8. '=' → logprob: -11.878572463989258
    9. ' =' → logprob: -12.253572463989258
    10. '    
' → logprob: -12.503572463989258

Token 946: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0018269078573212028
    2. ' def' → logprob: -7.001826763153076
    3. '   ' → logprob: -7.001826763153076
    4. '	def' → logprob: -12.751827239990234
    5. 'class' → logprob: -13.876827239990234
    6. '
' → logprob: -14.876827239990234
    7. 'None' → logprob: -15.251827239990234
    8. '=' → logprob: -15.876827239990234
    9. '#' → logprob: -16.751827239990234
    10. 'import' → logprob: -17.376827239990234

Token 947: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0019335162360221148
    2. ' __' → logprob: -6.251933574676514
    3. 'def' → logprob: -12.876933097839355
    4. '___' → logprob: -13.626933097839355
    5. '_init' → logprob: -14.501933097839355
    6. 'init' → logprob: -15.376933097839355
    7. '.__' → logprob: -15.626933097839355
    8. '__(' → logprob: -16.126934051513672
    9. '____' → logprob: -17.126934051513672
    10. ' def' → logprob: -17.751934051513672

Token 948: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. ' init' → logprob: -18.25
    3. 'int' → logprob: -18.625
    4. '_init' → logprob: -20.5
    5. '__' → logprob: -20.875
    6. '(init' → logprob: -21.375
    7. 'ini' → logprob: -22.25
    8. '	init' → logprob: -22.75
    9. '```' → logprob: -23.0
    10. 'def' → logprob: -23.375

Token 949: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02765607461333275
    2. '(' → logprob: -4.027656078338623
    3. '__(' → logprob: -4.777656078338623
    4. '   ' → logprob: -8.152655601501465
    5. ' (' → logprob: -8.402655601501465
    6. 'self' → logprob: -8.527655601501465
    7. '()' → logprob: -9.777655601501465
    8. '       ' → logprob: -10.027655601501465
    9. '_(' → logprob: -10.027655601501465
    10. 'def' → logprob: -10.152655601501465

Token 950: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.2994620242971e-06
    2. ' self' → logprob: -11.875008583068848
    3. '   ' → logprob: -14.375008583068848
    4. '(self' → logprob: -15.250008583068848
    5. '       ' → logprob: -15.500008583068848
    6. '  ' → logprob: -15.875008583068848
    7. 's' → logprob: -17.00000762939453
    8. '0' → logprob: -17.12500762939453
    9. '
' → logprob: -17.25000762939453
    10. ')' → logprob: -18.25000762939453

Token 951: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00045033416245132685
    2. '       ' → logprob: -8.500450134277344
    3. '(' → logprob: -9.375450134277344
    4. '   ' → logprob: -9.750450134277344
    5. ' (' → logprob: -9.875450134277344
    6. 'self' → logprob: -10.750450134277344
    7. '__(' → logprob: -11.375450134277344
    8. ')(' → logprob: -11.625450134277344
    9. ',' → logprob: -12.250450134277344
    10. '(
' → logprob: -13.000450134277344

Token 952: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024118421599268913
    2. 'self' → logprob: -3.774118423461914
    3. 'def' → logprob: -7.399118423461914
    4. '   ' → logprob: -8.899118423461914
    5. '(self' → logprob: -10.024118423461914
    6. ' self' → logprob: -10.649118423461914
    7. 'import' → logprob: -10.649118423461914
    8. 's' → logprob: -12.024118423461914
    9. '        
' → logprob: -12.024118423461914
    10. '
' → logprob: -12.399118423461914

Token 953: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07902495563030243
    2. '       ' → logprob: -2.5790250301361084
    3. ' self' → logprob: -9.829025268554688
    4. 'import' → logprob: -10.079025268554688
    5. 'def' → logprob: -10.954025268554688
    6. '   ' → logprob: -11.704025268554688
    7. '	self' → logprob: -12.204025268554688
    8. 'data' → logprob: -12.454025268554688
    9. 'from' → logprob: -13.329025268554688
    10. 'pass' → logprob: -13.329025268554688

Token 954: '.orders' (ID: 129984)
  Prédit: '.orders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.orders' → logprob: -0.016031552106142044
    2. '.curr' → logprob: -4.516031742095947
    3. '.order' → logprob: -6.016031742095947
    4. '.times' → logprob: -6.141031742095947
    5. '.' → logprob: -8.266031265258789
    6. 'orders' → logprob: -10.516031265258789
    7. '=' → logprob: -10.641031265258789
    8. ' =' → logprob: -11.266031265258789
    9. '.time' → logprob: -11.391031265258789
    10. '.t' → logprob: -11.516031265258789

Token 955: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.054949767887592316
    2. ' =' → logprob: -2.9299497604370117
    3. '=[]' → logprob: -10.054949760437012
    4. ',' → logprob: -10.929949760437012
    5. '   ' → logprob: -12.554949760437012
    6. '=None' → logprob: -13.804949760437012
    7. '=[]
' → logprob: -14.554949760437012
    8. ' ' → logprob: -14.804949760437012
    9. '={}' → logprob: -14.929949760437012
    10. '<|end|>' → logprob: -15.554949760437012

Token 956: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1039026752114296
    2. '{}' → logprob: -2.853902578353882
    3. 'collections' → logprob: -3.228902578353882
    4. 'set' → logprob: -7.103902816772461
    5. 'dict' → logprob: -7.478902816772461
    6. '[]
' → logprob: -10.478902816772461
    7. 'list' → logprob: -10.603902816772461
    8. '[]}' → logprob: -11.853902816772461
    9. 'deque' → logprob: -12.228902816772461
    10. '[' → logprob: -12.353902816772461

Token 957: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010108959395438433
    2. 'self' → logprob: -7.501010894775391
    3. '<|end|>' → logprob: -7.751010894775391
    4. ' self' → logprob: -11.12601089477539
    5. '   ' → logprob: -12.12601089477539
    6. '<|end|>' → logprob: -13.25101089477539
    7. '...' → logprob: -13.37601089477539
    8. '	self' → logprob: -14.00101089477539
    9. '      ' → logprob: -14.62601089477539
    10. '```' → logprob: -15.00101089477539

Token 958: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -4.453737710718997e-05
    2. '       ' → logprob: -10.750044822692871
    3. ' self' → logprob: -10.875044822692871
    4. '	self' → logprob: -14.250044822692871
    5. '...' → logprob: -14.250044822692871
    6. 'def' → logprob: -14.875044822692871
    7. '<|end|>' → logprob: -14.875044822692871
    8. '   ' → logprob: -15.000044822692871
    9. 'import' → logprob: -15.375044822692871
    10. '#' → logprob: -15.750044822692871

Token 959: '.times' (ID: 78835)
  Prédit: '.times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.times' → logprob: -0.6343119144439697
    2. 'times' → logprob: -0.7593119144439697
    3. '.curr' → logprob: -7.634311676025391
    4. 'curr' → logprob: -7.884311676025391
    5. ' times' → logprob: -8.50931167602539
    6. '_times' → logprob: -8.75931167602539
    7. '.t' → logprob: -9.13431167602539
    8. '.order' → logprob: -9.13431167602539
    9. 'order' → logprob: -9.63431167602539
    10. '.orders' → logprob: -9.63431167602539

Token 960: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31373879313468933
    2. ' =' → logprob: -1.3137388229370117
    3. '=[]' → logprob: -7.688738822937012
    4. '=[]
' → logprob: -11.813738822937012
    5. '   ' → logprob: -12.938738822937012
    6. '<|end|>' → logprob: -12.938738822937012
    7. '[]' → logprob: -13.063738822937012
    8. ' ' → logprob: -14.313738822937012
    9. ',' → logprob: -14.688738822937012
    10. '[' → logprob: -14.938738822937012

Token 961: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.016942882910370827
    2. '{}' → logprob: -4.141942977905273
    3. '0' → logprob: -7.516942977905273
    4. '[]
' → logprob: -8.516942977905273
    5. ' []' → logprob: -10.141942977905273
    6. '[' → logprob: -10.266942977905273
    7. 'list' → logprob: -10.516942977905273
    8. 'dict' → logprob: -10.641942977905273
    9. 'collections' → logprob: -11.266942977905273
    10. '{' → logprob: -12.141942977905273

Token 962: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012742599472403526
    2. '<|end|>' → logprob: -5.012742519378662
    3. 'self' → logprob: -5.512742519378662
    4. '   ' → logprob: -7.012742519378662
    5. 'def' → logprob: -7.137742519378662
    6. ' self' → logprob: -9.26274299621582
    7. '<|end|>' → logprob: -9.88774299621582
    8. '	self' → logprob: -10.38774299621582
    9. '
' → logprob: -10.76274299621582
    10. '           ' → logprob: -11.38774299621582

Token 963: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0011339050251990557
    2. '       ' → logprob: -7.001133918762207
    3. ' self' → logprob: -8.501133918762207
    4. 'def' → logprob: -11.751133918762207
    5. '	self' → logprob: -12.126133918762207
    6. '   ' → logprob: -12.751133918762207
    7. '<|end|>' → logprob: -13.751133918762207
    8. '#' → logprob: -14.251133918762207
    9. 'import' → logprob: -15.501133918762207
    10. 'raw' → logprob: -15.626133918762207

Token 964: '.order' (ID: 25549)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.4759312868118286
    2. '.order' → logprob: -1.1009312868118286
    3. 'curr' → logprob: -3.475931167602539
    4. '.curr' → logprob: -4.225931167602539
    5. ' order' → logprob: -8.225931167602539
    6. '=' → logprob: -10.100931167602539
    7. '.T' → logprob: -10.225931167602539
    8. '   ' → logprob: -10.475931167602539
    9. ' curr' → logprob: -10.725931167602539
    10. '	order' → logprob: -10.850931167602539

Token 965: 'Index' (ID: 2368)
  Prédit: 'Index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -0.0012268967693671584
    2. 'Idx' → logprob: -8.251226425170898
    3. ' =' → logprob: -8.501226425170898
    4. '=' → logprob: -8.751226425170898
    5. 'Indices' → logprob: -9.251226425170898
    6. '_index' → logprob: -9.251226425170898
    7. 'I' → logprob: -9.376226425170898
    8. 'Indexes' → logprob: -9.626226425170898
    9. 'Count' → logprob: -9.751226425170898
    10. 'Counter' → logprob: -9.751226425170898

Token 966: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967797577381134
    2. ' =' → logprob: -2.8119678497314453
    3. ' ' → logprob: -15.811967849731445
    4. '   ' → logprob: -17.811967849731445
    5. ',' → logprob: -17.936967849731445
    6. '0' → logprob: -18.061967849731445
    7. '<|end|>' → logprob: -18.061967849731445
    8. '	' → logprob: -18.561967849731445
    9. '=None' → logprob: -19.061967849731445
    10. '=
' → logprob: -19.061967849731445

Token 967: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.448370838072151e-05
    2. '-' → logprob: -9.750094413757324
    3. ' ' → logprob: -10.250094413757324
    4. '{}' → logprob: -14.750094413757324
    5. ' -' → logprob: -15.250094413757324
    6. '1' → logprob: -17.87509536743164
    7. '   ' → logprob: -18.62509536743164
    8. '{' → logprob: -18.87509536743164
    9. '[' → logprob: -19.12509536743164
    10. '[]' → logprob: -19.25009536743164

Token 968: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016337241686414927
    2. '-' → logprob: -8.750163078308105
    3. ' ' → logprob: -12.875163078308105
    4. '{}' → logprob: -13.250163078308105
    5. '{' → logprob: -16.125164031982422
    6. ' -' → logprob: -16.375164031982422
    7. '[]' → logprob: -16.500164031982422
    8. '=' → logprob: -16.625164031982422
    9. '[' → logprob: -16.625164031982422
    10. 'None' → logprob: -17.375164031982422

Token 969: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 970: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10200513899326324
    2. '   ' → logprob: -2.8520052433013916
    3. 'def' → logprob: -3.6020052433013916
    4. '<|end|>' → logprob: -4.6020050048828125
    5. '	def' → logprob: -7.4770050048828125
    6. 'self' → logprob: -7.7270050048828125
    7. ' def' → logprob: -7.8520050048828125
    8. '	self' → logprob: -8.352005004882812
    9. '
' → logprob: -9.727005004882812
    10. '<|end|>' → logprob: -10.102005004882812

Token 971: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.22765852510929108
    2. '       ' → logprob: -1.6026585102081299
    3. ' self' → logprob: -6.727658748626709
    4. 'def' → logprob: -7.727658748626709
    5. '<|end|>' → logprob: -8.10265827178955
    6. '   ' → logprob: -8.85265827178955
    7. '	self' → logprob: -9.60265827178955
    8. 'import' → logprob: -9.97765827178955
    9. '#' → logprob: -11.10265827178955
    10. 'from' → logprob: -11.60265827178955

Token 972: '.curr' (ID: 91383)
  Prédit: '.curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.curr' → logprob: -0.003718011314049363
    2. '.' → logprob: -5.62871789932251
    3. 'curr' → logprob: -9.378718376159668
    4. '.T' → logprob: -11.003718376159668
    5. ' .' → logprob: -11.753718376159668
    6. '.current' → logprob: -13.003718376159668
    7. '.cur' → logprob: -13.378718376159668
    8. ' =' → logprob: -14.378718376159668
    9. '	curr' → logprob: -14.378718376159668
    10. '._' → logprob: -14.503718376159668

Token 973: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -3.173704271830502e-06
    2. '_time' → logprob: -13.00000286102295
    3. '	Time' → logprob: -15.00000286102295
    4. '_Time' → logprob: -15.12500286102295
    5. 'T' → logprob: -16.375003814697266
    6. 'Tiempo' → logprob: -17.125003814697266
    7. ' Time' → logprob: -17.250003814697266
    8. 'Tim' → logprob: -17.250003814697266
    9. 'Times' → logprob: -17.750003814697266
    10. 'Ti' → logprob: -17.750003814697266

Token 974: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132617771625519
    2. ' =' → logprob: -1.3132617473602295
    3. ' ' → logprob: -17.438261032104492
    4. ',' → logprob: -17.688261032104492
    5. '0' → logprob: -17.813261032104492
    6. '=
' → logprob: -18.313261032104492
    7. ' =
' → logprob: -18.688261032104492
    8. '<|end|>' → logprob: -18.688261032104492
    9. '   ' → logprob: -19.188261032104492
    10. '＝' → logprob: -19.313261032104492

Token 975: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.56364209135063e-05
    2. ' ' → logprob: -9.750065803527832
    3. '-' → logprob: -12.000065803527832
    4. '1' → logprob: -14.625065803527832
    5. 'int' → logprob: -15.250065803527832
    6. ' -' → logprob: -15.250065803527832
    7. 'raw' → logprob: -16.000064849853516
    8. '   ' → logprob: -16.625064849853516
    9. '00' → logprob: -18.000064849853516
    10. '000' → logprob: -18.062564849853516

Token 976: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002740906202234328
    2. '-' → logprob: -8.250273704528809
    3. 'int' → logprob: -11.875273704528809
    4. '1' → logprob: -12.500273704528809
    5. ' ' → logprob: -13.625273704528809
    6. 'raw' → logprob: -14.875273704528809
    7. 'float' → logprob: -15.375273704528809
    8. 'None' → logprob: -16.250274658203125
    9. '```' → logprob: -17.000274658203125
    10. ' -' → logprob: -17.437774658203125

Token 977: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17500299215316772
    2. '<|end|>' → logprob: -2.0500030517578125
    3. '
' → logprob: -4.1750030517578125
    4. 'def' → logprob: -4.4250030517578125
    5. '       ' → logprob: -6.0500030517578125
    6. '<|end|>' → logprob: -6.8000030517578125
    7. ' def' → logprob: -7.5500030517578125
    8. '    
' → logprob: -8.425003051757812
    9. '	def' → logprob: -8.800003051757812
    10. '        
' → logprob: -10.925003051757812

Token 978: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16529415547847748
    2. 'def' → logprob: -2.4152941703796387
    3. '<|end|>' → logprob: -2.9152941703796387
    4. ' def' → logprob: -4.915294170379639
    5. '	def' → logprob: -7.415294170379639
    6. '
' → logprob: -7.790294170379639
    7. '<|end|>' → logprob: -8.41529369354248
    8. '       ' → logprob: -9.54029369354248
    9. '    
' → logprob: -9.79029369354248
    10. '```' → logprob: -9.91529369354248

Token 979: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14691980183124542
    2. 'self' (adapté à ' self') → logprob: -2.2719197273254395
    3. 'def' → logprob: -3.6469197273254395
    4. '   ' → logprob: -5.0219197273254395
    5. '<|end|>' → logprob: -7.8969197273254395
    6. ' self' → logprob: -8.271920204162598
    7. 'import' → logprob: -9.771920204162598
    8. '	self' → logprob: -9.896920204162598
    9. ' def' → logprob: -10.521920204162598
    10. '#' → logprob: -10.771920204162598

Token 980: '.T' (ID: 2600)
  Prédit: '.T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.T' → logprob: -0.00987673457711935
    2. 'T' → logprob: -4.759876728057861
    3. '.' → logprob: -7.134876728057861
    4. ' Tmax' → logprob: -8.13487720489502
    5. ' =' → logprob: -9.75987720489502
    6. '=' → logprob: -10.00987720489502
    7. '.MAX' → logprob: -10.25987720489502
    8. ' .' → logprob: -11.88487720489502
    9. '=T' → logprob: -11.88487720489502
    10. 'max' → logprob: -12.50987720489502

Token 981: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1398757123970427e-05
    2. '_max' → logprob: -11.750011444091797
    3. 'Max' → logprob: -13.000011444091797
    4. '=' → logprob: -14.375011444091797
    5. 'MAX' → logprob: -14.875011444091797
    6. ' =' → logprob: -16.125011444091797
    7. ' max' → logprob: -16.750011444091797
    8. 'ax' → logprob: -17.750011444091797
    9. '_MAX' → logprob: -17.750011444091797
    10. '	max' → logprob: -18.000011444091797

Token 982: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132636249065399
    2. ' =' → logprob: -1.3132636547088623
    3. '=None' → logprob: -13.688263893127441
    4. ' ' → logprob: -15.063263893127441
    5. ',' → logprob: -15.688263893127441
    6. '=int' → logprob: -16.313262939453125
    7. '   ' → logprob: -16.813262939453125
    8. '=
' → logprob: -16.938262939453125
    9. ' =
' → logprob: -17.188262939453125
    10. '	' → logprob: -17.438262939453125

Token 983: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.18267206847667694
    2. ' int' → logprob: -2.4326720237731934
    3. '100' → logprob: -3.6826720237731934
    4. '0' → logprob: -4.182672023773193
    5. 'float' → logprob: -4.182672023773193
    6. '10' → logprob: -4.307672023773193
    7. ' ' → logprob: -5.682672023773193
    8. 'raw' → logprob: -6.057672023773193
    9. ' float' → logprob: -6.557672023773193
    10. ' raw' → logprob: -7.182672023773193

Token 984: '(raw' (ID: 46707)
  Prédit: '(raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -0.0003256911295466125
    2. '(' → logprob: -8.375326156616211
    3. '(input' → logprob: -9.750326156616211
    4. 'raw' → logprob: -10.625326156616211
    5. '()' → logprob: -11.875326156616211
    6. '(sys' → logprob: -12.375326156616211
    7. '(
' → logprob: -14.625326156616211
    8. '	raw' → logprob: -15.500326156616211
    9. ' raw' → logprob: -16.25032615661621
    10. '('' → logprob: -16.25032615661621

Token 985: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0007702016155235469
    2. '_' → logprob: -7.250770092010498
    3. 'input' → logprob: -10.750770568847656
    4. ' _' → logprob: -11.000770568847656
    5. ')' → logprob: -12.375770568847656
    6. 'Input' → logprob: -12.500770568847656
    7. '_
' → logprob: -12.500770568847656
    8. '_inputs' → logprob: -13.125770568847656
    9. '_INPUT' → logprob: -13.875770568847656
    10. '(' → logprob: -13.875770568847656

Token 986: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004907227586954832
    2. '()' → logprob: -5.754907131195068
    3. '().' → logprob: -6.379907131195068
    4. '())
' → logprob: -11.129907608032227
    5. ' ())' → logprob: -11.629907608032227
    6. '();)' → logprob: -12.629907608032227
    7. ')' → logprob: -13.504907608032227
    8. '(' → logprob: -13.504907608032227
    9. '()
' → logprob: -13.754907608032227
    10. '()))' → logprob: -14.254907608032227

Token 987: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 988: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 989: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0026060950476676226
    2. '_i' → logprob: -6.12760591506958
    3. '_t' → logprob: -7.87760591506958
    4. '_T' → logprob: -11.627606391906738
    5. '_x' → logprob: -12.252606391906738
    6. '_line' → logprob: -12.252606391906738
    7. '_time' → logprob: -12.377606391906738
    8. 'i' → logprob: -12.502606391906738
    9. '_ts' → logprob: -12.752606391906738
    10. '_=' → logprob: -13.127606391906738

Token 990: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10041552782058716
    2. 'in' → logprob: -2.3504154682159424
    3. '_' → logprob: -8.600415229797363
    4. '   ' → logprob: -11.600415229797363
    5. '
' → logprob: -12.850415229797363
    6. ' ' → logprob: -12.975415229797363
    7. ',' → logprob: -12.975415229797363
    8. 'range' → logprob: -13.100415229797363
    9. '```' → logprob: -13.850415229797363
    10. 'n' → logprob: -14.100415229797363

Token 991: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0683535037969705e-05
    2. ' range' → logprob: -11.50001049041748
    3. 'map' → logprob: -14.50001049041748
    4. '(range' → logprob: -17.500011444091797
    5. '	range' → logprob: -19.250011444091797
    6. 'lambda' → logprob: -19.500011444091797
    7. 'rang' → logprob: -19.875011444091797
    8. 'in' → logprob: -21.250011444091797
    9. 'count' → logprob: -21.500011444091797
    10. '_' → logprob: -21.750011444091797

Token 992: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.41866585687967e-06
    2. '(' → logprob: -12.125008583068848
    3. '(int' → logprob: -12.875008583068848
    4. 'self' → logprob: -15.125008583068848
    5. '((' → logprob: -17.37500762939453
    6. ' (' → logprob: -17.75000762939453
    7. '(t' → logprob: -19.25000762939453
    8. '(
' → logprob: -20.12500762939453
    9. ' self' → logprob: -20.25000762939453
    10. 'int' → logprob: -20.37500762939453

Token 993: '.T' (ID: 2600)
  Prédit: '.T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.T' → logprob: -5.200166469876422e-06
    2. '.orders' → logprob: -12.875004768371582
    3. 'T' → logprob: -14.000004768371582
    4. '.order' → logprob: -14.375004768371582
    5. '.V' → logprob: -15.000004768371582
    6. '.' → logprob: -15.125004768371582
    7. '.times' → logprob: -16.1250057220459
    8. '.max' → logprob: -16.3750057220459
    9. '.t' → logprob: -16.5000057220459
    10. '	T' → logprob: -16.6250057220459

Token 994: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -3.128163257315464e-07
    2. '_max' → logprob: -15.5
    3. 'Max' → logprob: -19.625
    4. 'm' → logprob: -20.875
    5. 'amax' → logprob: -20.875
    6. 'MAX' → logprob: -21.0
    7. 'mp' → logprob: -21.5
    8. 'mx' → logprob: -21.75
    9. '.max' → logprob: -21.75
    10. '(max' → logprob: -21.75

Token 995: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.282406747341156
    2. '):
' → logprob: -1.4074068069458008
    3. '()):
' → logprob: -7.532406806945801
    4. '):
' → logprob: -8.0324068069458
    5. '():' → logprob: -9.0324068069458
    6. '():
' → logprob: -9.0324068069458
    7. '+' → logprob: -9.9074068069458
    8. ' ):' → logprob: -10.1574068069458
    9. '()' → logprob: -10.2824068069458
    10. ' ):
' → logprob: -11.9074068069458

Token 996: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.636695146560669
    2. '       ' → logprob: -0.761695146560669
    3. 'data' → logprob: -5.76169490814209
    4. '   ' → logprob: -8.13669490814209
    5. ' data' → logprob: -8.13669490814209
    6. '	       ' → logprob: -8.38669490814209
    7. '	   ' → logprob: -9.51169490814209
    8. '	data' → logprob: -11.01169490814209
    9. '_data' → logprob: -12.26169490814209
    10. '    	   ' → logprob: -12.51169490814209

Token 997: ' n' (ID: 297)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.1756238341331482
    2. '   ' → logprob: -2.800623893737793
    3. '           ' → logprob: -2.800623893737793
    4. 'line' → logprob: -3.550623893737793
    5. 't' → logprob: -5.925623893737793
    6. 'time' → logprob: -5.925623893737793
    7. ' data' → logprob: -6.425623893737793
    8. 'arr' → logprob: -7.175623893737793
    9. 'raw' → logprob: -7.300623893737793
    10. 'd' → logprob: -7.675623893737793

Token 998: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2054571956396103
    2. ' =' → logprob: -1.9554572105407715
    3. '=' → logprob: -4.0804572105407715
    4. ' ,' → logprob: -4.8304572105407715
    5. 'data' → logprob: -4.8304572105407715
    6. '   ' → logprob: -5.3304572105407715
    7. '_data' → logprob: -6.3304572105407715
    8. '       ' → logprob: -6.7054572105407715
    9. 'um' → logprob: -7.8304572105407715
    10. 's' → logprob: -7.8304572105407715

Token 999: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.159660890465602e-05
    2. ' int' → logprob: -9.62507152557373
    3. 'raw' → logprob: -13.25007152557373
    4. '
' → logprob: -13.37507152557373
    5. '0' → logprob: -14.25007152557373
    6. '   ' → logprob: -15.00007152557373
    7. 'len' → logprob: -15.37507152557373
    8. 'list' → logprob: -15.50007152557373
    9. '[int' → logprob: -15.50007152557373
    10. '	int' → logprob: -15.87507152557373

Token 1000: '(raw' (ID: 46707)
  Prédit: '(raw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -2.1888679839321412e-05
    2. 'raw' → logprob: -10.750021934509277
    3. '(' → logprob: -15.500021934509277
    4. '	raw' → logprob: -16.62502098083496
    5. '(
' → logprob: -18.50002098083496
    6. ' raw' → logprob: -18.87502098083496
    7. '(sys' → logprob: -19.00002098083496
    8. '((' → logprob: -19.25002098083496
    9. '()' → logprob: -19.37502098083496
    10. '.raw' → logprob: -20.62502098083496

Token 1001: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0001721934968372807
    2. '()' → logprob: -9.62517261505127
    3. '_' → logprob: -9.87517261505127
    4. 'input' → logprob: -10.12517261505127
    5. '_raw' → logprob: -12.37517261505127
    6. 'Input' → logprob: -12.87517261505127
    7. '())' → logprob: -13.25017261505127
    8. '()\' → logprob: -14.37517261505127
    9. '_
' → logprob: -14.50017261505127
    10. '_token' → logprob: -14.50017261505127

Token 1002: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.012383907102048397
    2. '()' → logprob: -4.512383937835693
    3. '())
' → logprob: -6.637383937835693
    4. '().' → logprob: -11.512383460998535
    5. ')' → logprob: -12.387383460998535
    6. '()
' → logprob: -12.512383460998535
    7. '(' → logprob: -12.887383460998535
    8. ' ())' → logprob: -13.262383460998535
    9. '())

' → logprob: -13.887383460998535
    10. '())
' → logprob: -14.137383460998535

Token 1003: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010092307347804308
    2. '<|end|>' → logprob: -7.001009464263916
    3. '<|end|>' → logprob: -10.501008987426758
    4. '       ' → logprob: -10.876008987426758
    5. '	       ' → logprob: -11.126008987426758
    6. '		' → logprob: -11.501008987426758
    7. '   ' → logprob: -12.126008987426758
    8. ',' → logprob: -13.001008987426758
    9. '               ' → logprob: -13.001008987426758
    10. '...' → logprob: -13.126008987426758

Token 1004: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3656538426876068
    2. 'self' → logprob: -1.4906538724899292
    3. 't' → logprob: -3.4906537532806396
    4. 'data' → logprob: -3.8656537532806396
    5. 's' → logprob: -4.240653991699219
    6. 'd' → logprob: -5.740653991699219
    7. 'time' → logprob: -6.490653991699219
    8. 'q' → logprob: -6.740653991699219
    9. 'times' → logprob: -6.865653991699219
    10. 'lst' → logprob: -6.990653991699219

Token 1005: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.062172818928956985
    2. ' n' → logprob: -2.8121728897094727
    3. ' not' → logprob: -9.437172889709473
    4. 'not' → logprob: -9.937172889709473
    5. 'i' → logprob: -10.187172889709473
    6. '	n' → logprob: -11.312172889709473
    7. ' i' → logprob: -12.062172889709473
    8. 'len' → logprob: -12.437172889709473
    9. ' ' → logprob: -12.437172889709473
    10. '(n' → logprob: -13.187172889709473

Token 1006: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.1002049446105957
    2. ' >' → logprob: -2.6002049446105957
    3. ':' → logprob: -4.350204944610596
    4. '==' → logprob: -5.225204944610596
    5. ' ==' → logprob: -5.975204944610596
    6. '!=' → logprob: -10.100204467773438
    7. '<|end|>' → logprob: -10.100204467773438
    8. '>:' → logprob: -10.350204467773438
    9. ' !=' → logprob: -10.475204467773438
    10. '()>' → logprob: -10.975204467773438

Token 1007: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006037696730345488
    2. '-' → logprob: -5.506037712097168
    3. ' ' → logprob: -6.381037712097168
    4. '1' → logprob: -8.631037712097168
    5. ' -' → logprob: -10.006037712097168
    6. '   ' → logprob: -10.631037712097168
    7. '100' → logprob: -12.631037712097168
    8. '  ' → logprob: -12.881037712097168
    9. '       ' → logprob: -13.631037712097168
    10. '    ' → logprob: -14.131037712097168

Token 1008: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03513508662581444
    2. '-' → logprob: -3.41013503074646
    3. ' ' → logprob: -7.035135269165039
    4. '1' → logprob: -7.785135269165039
    5. ' -' → logprob: -9.285135269165039
    6. '100' → logprob: -10.660135269165039
    7. '999' → logprob: -11.597635269165039
    8. '   ' → logprob: -11.722635269165039
    9. '2' → logprob: -11.847635269165039
    10. '99' → logprob: -12.035135269165039

Token 1009: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7113702297210693
    2. '               ' → logprob: -1.0863702297210693
    3. ':
' → logprob: -2.0863702297210693
    4. '           ' → logprob: -3.0863702297210693
    5. '       ' → logprob: -7.086370468139648
    6. '	       ' → logprob: -8.336370468139648
    7. '	           ' → logprob: -8.711370468139648
    8. '   ' → logprob: -9.211370468139648
    9. ':return' → logprob: -9.836370468139648
    10. '		       ' → logprob: -10.336370468139648

Token 1010: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003272541332989931
    2. 'continue' → logprob: -6.128272533416748
    3. '	           ' → logprob: -7.878272533416748
    4. 'break' → logprob: -8.003273010253906
    5. 'self' → logprob: -8.628273010253906
    6. '   ' → logprob: -9.503273010253906
    7. ' continue' → logprob: -10.628273010253906
    8. '		       ' → logprob: -10.878273010253906
    9. '           ' → logprob: -11.003273010253906
    10. '	       ' → logprob: -11.503273010253906

Token 1011: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9259238243103027
    2. 'break' → logprob: -1.5509238243103027
    3. ' break' → logprob: -1.8009238243103027
    4. 'self' → logprob: -2.3009238243103027
    5. 'continue' (adapté à ' continue') → logprob: -2.5509238243103027
    6. ' continue' → logprob: -3.8009238243103027
    7. ' self' → logprob: -4.425923824310303
    8. '                   ' → logprob: -4.925923824310303
    9. '   ' → logprob: -5.175923824310303
    10. '	break' → logprob: -7.925923824310303

Token 1012: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.1093578804284334e-05
    2. '<|end|>' → logprob: -10.750051498413086
    3. 'self' → logprob: -12.000051498413086
    4. '		' → logprob: -12.375051498413086
    5. 'n' → logprob: -12.500051498413086
    6. '	       ' → logprob: -13.000051498413086
    7. '               ' → logprob: -13.125051498413086
    8. '       ' → logprob: -13.250051498413086
    9. 'else' → logprob: -13.375051498413086
    10. '   ' → logprob: -13.875051498413086

Token 1013: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.392202976712724e-06
    2. '       ' → logprob: -13.250006675720215
    3. 'self' → logprob: -13.750006675720215
    4. '<|end|>' → logprob: -14.375006675720215
    5. '	       ' → logprob: -14.500006675720215
    6. 'else' → logprob: -14.625006675720215
    7. '   ' → logprob: -15.000006675720215
    8. '               ' → logprob: -15.000006675720215
    9. '	   ' → logprob: -15.250006675720215
    10. '		' → logprob: -15.750006675720215

Token 1014: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40711745619773865
    2. 'self' → logprob: -2.0321173667907715
    3. 'data' → logprob: -2.1571173667907715
    4. 'order' → logprob: -3.6571173667907715
    5. 'items' → logprob: -4.2821173667907715
    6. 'orders' → logprob: -4.9071173667907715
    7. 'for' → logprob: -5.2821173667907715
    8. 'tokens' → logprob: -5.4071173667907715
    9. 'arr' → logprob: -5.5321173667907715
    10. 'times' → logprob: -5.6571173667907715

Token 1015: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.029090475291013718
    2. ':
' → logprob: -4.279090404510498
    3. ':' → logprob: -4.404090404510498
    4. '	           ' → logprob: -6.529090404510498
    5. '           ' → logprob: -7.404090404510498
    6. '	       ' → logprob: -8.529090881347656
    7. ' for' → logprob: -9.029090881347656
    8. '   ' → logprob: -10.279090881347656
    9. '		       ' → logprob: -10.404090881347656
    10. ',' → logprob: -10.404090881347656

Token 1016: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5503934025764465
    2. 'data' → logprob: -0.9253934025764465
    3. 'self' → logprob: -4.800393581390381
    4. 'for' → logprob: -5.175393581390381
    5. '   ' → logprob: -5.925393581390381
    6. '	           ' → logprob: -6.175393581390381
    7. '           ' → logprob: -6.425393581390381
    8. ' data' → logprob: -6.550393581390381
    9. 'line' → logprob: -6.550393581390381
    10. 'tokens' → logprob: -7.050393581390381

Token 1017: ' data' (ID: 1238)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' (adapté à ' data') → logprob: -0.14020656049251556
    2. '               ' → logprob: -3.7652065753936768
    3. 'self' → logprob: -3.7652065753936768
    4. ' data' → logprob: -3.7652065753936768
    5. 'line' → logprob: -4.140206336975098
    6. 'for' → logprob: -4.640206336975098
    7. '   ' → logprob: -4.890206336975098
    8. 'orders' → logprob: -5.265206336975098
    9. ' self' → logprob: -5.765206336975098
    10. '           ' → logprob: -6.015206336975098

Token 1018: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21508634090423584
    2. 'Raw' → logprob: -1.8400863409042358
    3. ' =' → logprob: -3.8400864601135254
    4. '_raw' → logprob: -4.340086460113525
    5. '=line' → logprob: -9.465085983276367
    6. 'raw' → logprob: -9.840085983276367
    7. '=[]' → logprob: -11.215085983276367
    8. ' Raw' → logprob: -11.840085983276367
    9. '=[]
' → logprob: -11.965085983276367
    10. 'line' → logprob: -12.340085983276367

Token 1019: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.13840100169181824
    2. ' list' → logprob: -2.3884010314941406
    3. 'raw' → logprob: -3.5134010314941406
    4. ' raw' → logprob: -5.513401031494141
    5. 'tuple' → logprob: -6.013401031494141
    6. ' tuple' → logprob: -6.888401031494141
    7. 'set' → logprob: -9.88840103149414
    8. '[' → logprob: -9.88840103149414
    9. '[list' → logprob: -11.13840103149414
    10. ' [' → logprob: -11.26340103149414

Token 1020: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -5.466968650580384e-05
    2. '(' → logprob: -10.375054359436035
    3. 'map' → logprob: -10.750054359436035
    4. '(
' → logprob: -13.625054359436035
    5. '	map' → logprob: -15.750054359436035
    6. '(int' → logprob: -15.750054359436035
    7. '(it' → logprob: -16.12505531311035
    8. '
' → logprob: -16.50005531311035
    9. '   ' → logprob: -16.75005531311035
    10. '(range' → logprob: -17.00005531311035

Token 1021: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.4034345187828876e-05
    2. 'int' → logprob: -10.75002384185791
    3. '(lambda' → logprob: -13.50002384185791
    4. '(' → logprob: -14.12502384185791
    5. '(str' → logprob: -15.37502384185791
    6. '[int' → logprob: -17.125024795532227
    7. ' int' → logprob: -17.250024795532227
    8. '=int' → logprob: -17.375024795532227
    9. ',int' → logprob: -17.375024795532227
    10. '<int' → logprob: -18.125024795532227

Token 1022: ',' (ID: 11)
  Prédit: '(raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(raw' → logprob: -0.0012073767138645053
    2. '(lambda' → logprob: -6.87620735168457
    3. '(' → logprob: -9.25120735168457
    4. ',' → logprob: -9.62620735168457
    5. 'raw' → logprob: -11.87620735168457
    6. '(
' → logprob: -13.25120735168457
    7. 'lambda' → logprob: -14.37620735168457
    8. '   ' → logprob: -14.50120735168457
    9. '(sys' → logprob: -14.75120735168457
    10. ' (' → logprob: -14.87620735168457

Token 1023: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.004080658778548241
    2. ' raw' → logprob: -5.504080772399902
    3. 'sys' → logprob: -13.754080772399902
    4. '(raw' → logprob: -14.629080772399902
    5. '	raw' → logprob: -14.754080772399902
    6. '           ' → logprob: -15.504080772399902
    7. '               ' → logprob: -16.254079818725586
    8. '   ' → logprob: -16.879079818725586
    9. '                   ' → logprob: -17.379079818725586
    10. '       ' → logprob: -18.004079818725586

Token 1024: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00010235115041723475
    2. 'Input' → logprob: -10.250102043151855
    3. '().' → logprob: -10.500102043151855
    4. '.readline' → logprob: -11.000102043151855
    5. 'input' → logprob: -11.375102043151855
    6. '_raw' → logprob: -13.125102043151855
    7. '.stdin' → logprob: -13.750102043151855
    8. '()' → logprob: -13.875102043151855
    9. '()
' → logprob: -14.375102043151855
    10. '_output' → logprob: -14.500102043151855

Token 1025: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.8908587662735954e-05
    2. '()' → logprob: -11.250019073486328
    3. '.strip' → logprob: -12.375019073486328
    4. ' ().' → logprob: -14.250019073486328
    5. '()[' → logprob: -14.625019073486328
    6. '()))' → logprob: -15.250019073486328
    7. '(strip' → logprob: -15.750019073486328
    8. '(' → logprob: -16.500019073486328
    9. '   ' → logprob: -17.250019073486328
    10. '()
' → logprob: -17.750019073486328

Token 1026: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -3.9054008084349334e-05
    2. 'split' → logprob: -10.250039100646973
    3. ' strip' → logprob: -12.625039100646973
    4. '.strip' → logprob: -16.000038146972656
    5. '(strip' → logprob: -16.250038146972656
    6. 'rstrip' → logprob: -17.875038146972656
    7. 'str' → logprob: -19.500038146972656
    8. '   ' → logprob: -20.375038146972656
    9. '_strip' → logprob: -20.750038146972656
    10. 'stripe' → logprob: -21.000038146972656

Token 1027: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.584239938296378e-06
    2. '()' → logprob: -12.125007629394531
    3. '.split' → logprob: -13.250007629394531
    4. ' ().' → logprob: -15.500007629394531
    5. '()).' → logprob: -17.12500762939453
    6. '.' → logprob: -17.37500762939453
    7. '           ' → logprob: -17.62500762939453
    8. '())' → logprob: -17.62500762939453
    9. 'split' → logprob: -17.75000762939453
    10. ' .' → logprob: -17.75000762939453

Token 1028: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.0206720617134124e-05
    2. ' split' → logprob: -11.50001049041748
    3. '.split' → logprob: -18.000009536743164
    4. 'strip' → logprob: -18.750009536743164
    5. '(split' → logprob: -18.875009536743164
    6. 'spl' → logprob: -19.375009536743164
    7. 'replace' → logprob: -22.000009536743164
    8. ' ' → logprob: -22.375009536743164
    9. ')' → logprob: -22.750009536743164
    10. 'rstrip' → logprob: -23.125009536743164

Token 1029: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.012634200043976307
    2. '()))
' → logprob: -4.63763427734375
    3. '()' → logprob: -6.26263427734375
    4. '))' → logprob: -7.01263427734375
    5. '(' → logprob: -10.51263427734375
    6. '()));' → logprob: -10.63763427734375
    7. '()
' → logprob: -12.76263427734375
    8. '()))

' → logprob: -12.88763427734375
    9. '(),' → logprob: -13.01263427734375
    10. '))
' → logprob: -13.13763427734375

Token 1030: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0019803799223154783
    2. '           ' → logprob: -6.251980304718018
    3. '                   ' → logprob: -10.626980781555176
    4. '<|end|>' → logprob: -11.501980781555176
    5. '...' → logprob: -12.376980781555176
    6. 'self' → logprob: -12.751980781555176
    7. '	           ' → logprob: -13.001980781555176
    8. '       ' → logprob: -13.626980781555176
    9. '```' → logprob: -13.751980781555176
    10. '              ' → logprob: -13.876980781555176

Token 1031: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.02143537998199463
    2. '               ' → logprob: -4.396435260772705
    3. 'for' → logprob: -4.771435260772705
    4. ' self' → logprob: -7.896435260772705
    5. 'if' → logprob: -11.146435737609863
    6. ' for' → logprob: -11.396435737609863
    7. '           ' → logprob: -11.771435737609863
    8. '                   ' → logprob: -12.271435737609863
    9. '   ' → logprob: -13.021435737609863
    10. '[self' → logprob: -13.271435737609863

Token 1032: '.times' (ID: 78835)
  Prédit: '.orders'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.orders' → logprob: -0.0016381697496399283
    2. '.times' → logprob: -6.501637935638428
    3. 'orders' → logprob: -9.501638412475586
    4. '.order' → logprob: -9.751638412475586
    5. 'times' → logprob: -13.251638412475586
    6. '.' → logprob: -14.751638412475586
    7. ' orders' → logprob: -16.001638412475586
    8. '/orders' → logprob: -16.251638412475586
    9. '.t' → logprob: -16.376638412475586
    10. '.time' → logprob: -16.376638412475586

Token 1033: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004284130409359932
    2. '.extend' → logprob: -5.504283905029297
    3. '.' → logprob: -8.504283905029297
    4. '.app' → logprob: -13.129283905029297
    5. '.ap' → logprob: -14.629283905029297
    6. 'append' → logprob: -15.379283905029297
    7. '+=' → logprob: -16.129283905029297
    8. '   ' → logprob: -16.504283905029297
    9. '.setdefault' → logprob: -16.754283905029297
    10. '=' → logprob: -16.754283905029297

Token 1034: '(i' (ID: 3649)
  Prédit: '(data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.1619296818971634
    2. '((' → logprob: -2.2869296073913574
    3. '(n' → logprob: -3.4119296073913574
    4. 'data' → logprob: -4.411929607391357
    5. '(tuple' → logprob: -6.411929607391357
    6. '(' → logprob: -7.161929607391357
    7. '(i' → logprob: -9.286930084228516
    8. '(list' → logprob: -9.286930084228516
    9. 'tuple' → logprob: -9.661930084228516
    10. '([' → logprob: -10.036930084228516

Token 1035: '+' (ID: 10)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.281525194644928
    2. ')' → logprob: -1.4065251350402832
    3. ' )
' → logprob: -9.281525611877441
    4. ')
' → logprob: -9.781525611877441
    5. 'data' → logprob: -10.031525611877441
    6. ');' → logprob: -10.031525611877441
    7. ')data' → logprob: -10.406525611877441
    8. '),' → logprob: -10.531525611877441
    9. ' )' → logprob: -11.031525611877441
    10. ');
' → logprob: -11.781525611877441

Token 1036: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.113290095934644e-05
    2. ' ' → logprob: -10.000081062316895
    3. 'n' → logprob: -10.500081062316895
    4. '
' → logprob: -13.000081062316895
    5. 'data' → logprob: -13.375081062316895
    6. 'len' → logprob: -13.375081062316895
    7. ' n' → logprob: -13.625081062316895
    8. '100' → logprob: -15.500081062316895
    9. '2' → logprob: -15.625081062316895
    10. '0' → logprob: -15.875081062316895

Token 1037: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6936965584754944
    2. ')
' → logprob: -0.6936965584754944
    3. '               ' → logprob: -7.69369649887085
    4. ')
' → logprob: -9.818696975708008
    5. '           ' → logprob: -11.818696975708008
    6. ' )
' → logprob: -12.318696975708008
    7. '),' → logprob: -12.318696975708008
    8. ')#' → logprob: -12.693696975708008
    9. ' )' → logprob: -12.818696975708008
    10. '                   ' → logprob: -12.818696975708008

Token 1038: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.3226136767771095e-05
    2. '           ' → logprob: -10.625042915344238
    3. '<|end|>' → logprob: -11.500042915344238
    4. '       ' → logprob: -12.625042915344238
    5. ' and' → logprob: -13.000042915344238
    6. ',' → logprob: -13.625042915344238
    7. 'self' → logprob: -14.750042915344238
    8. '   ' → logprob: -15.500042915344238
    9. '		       ' → logprob: -15.750042915344238
    10. '                   ' → logprob: -15.750042915344238

Token 1039: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0001895935565698892
    2. '               ' → logprob: -8.875189781188965
    3. 'for' → logprob: -10.500189781188965
    4. ' self' → logprob: -10.750189781188965
    5. '           ' → logprob: -15.000189781188965
    6. '	self' → logprob: -16.00018882751465
    7. '   ' → logprob: -16.37518882751465
    8. '                   ' → logprob: -16.50018882751465
    9. '       ' → logprob: -17.00018882751465
    10. 'if' → logprob: -17.75018882751465

Token 1040: '.orders' (ID: 129984)
  Prédit: '.orders'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.orders' → logprob: -0.008693515323102474
    2. 'orders' → logprob: -4.758693695068359
    3. '.times' → logprob: -10.25869369506836
    4. '.order' → logprob: -10.50869369506836
    5. 'times' → logprob: -11.38369369506836
    6. 'order' → logprob: -12.75869369506836
    7. ' orders' → logprob: -13.88369369506836
    8. '.' → logprob: -14.63369369506836
    9. '       ' → logprob: -16.00869369506836
    10. '   ' → logprob: -16.13369369506836

Token 1041: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0019042472122237086
    2. '.extend' → logprob: -6.626904010772705
    3. '.' → logprob: -7.501904010772705
    4. '.add' → logprob: -11.251904487609863
    5. '.app' → logprob: -12.251904487609863
    6. '.setdefault' → logprob: -12.501904487609863
    7. '.ap' → logprob: -12.876904487609863
    8. '.update' → logprob: -14.501904487609863
    9. '
' → logprob: -15.001904487609863
    10. ' .' → logprob: -15.126904487609863

Token 1042: '(data' (ID: 4819)
  Prédit: '(data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(data' → logprob: -0.057349372655153275
    2. '(set' → logprob: -2.932349443435669
    3. 'data' → logprob: -6.68234920501709
    4. '(tuple' → logprob: -6.93234920501709
    5. '((' → logprob: -9.18234920501709
    6. 'set' → logprob: -9.18234920501709
    7. '(' → logprob: -11.43234920501709
    8. '(list' → logprob: -11.55734920501709
    9. 'tuple' → logprob: -12.68234920501709
    10. '(sorted' → logprob: -13.55734920501709

Token 1043: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00024739265791140497
    2. ')
' → logprob: -9.25024700164795
    3. '())' → logprob: -9.37524700164795
    4. '<|end|>' → logprob: -11.00024700164795
    5. '               ' → logprob: -11.37524700164795
    6. '       ' → logprob: -11.37524700164795
    7. '           ' → logprob: -11.50024700164795
    8. ' )' → logprob: -11.62524700164795
    9. '[' → logprob: -13.37524700164795
    10. '()' → logprob: -14.00024700164795

Token 1044: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2189958691596985
    2. ':' → logprob: -2.0939958095550537
    3. '1' → logprob: -2.9689958095550537
    4. '-' → logprob: -4.593996047973633
    5. ':]' → logprob: -5.343996047973633
    6. ':-' → logprob: -5.843996047973633
    7. '])' → logprob: -6.093996047973633
    8. ':])
' → logprob: -6.968996047973633
    9. '::-' → logprob: -8.093996047973633
    10. '::' → logprob: -8.593996047973633

Token 1045: '])

' (ID: 21045)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006540339440107346
    2. '])' → logprob: -5.131540298461914
    3. ':])
' → logprob: -8.131540298461914
    4. '-' → logprob: -8.381540298461914
    5. ':]' → logprob: -10.631540298461914
    6. ' :' → logprob: -10.881540298461914
    7. '::' → logprob: -11.756540298461914
    8. ')' → logprob: -12.006540298461914
    9. ':],' → logprob: -12.131540298461914
    10. ':)' → logprob: -12.381540298461914

Token 1046: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1047: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.040139518678188324
    2. '<|end|>' → logprob: -3.4151394367218018
    3. '   ' → logprob: -5.915139675140381
    4. '#' → logprob: -6.915139675140381
    5. '<|end|>' → logprob: -6.915139675140381
    6. ' def' → logprob: -7.165139675140381
    7. ')' → logprob: -7.915139675140381
    8. '       ' → logprob: -9.165139198303223
    9. '	def' → logprob: -9.415139198303223
    10. '
' → logprob: -9.540139198303223

Token 1048: ' run' (ID: 2461)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.27702125906944275
    2. 'next' → logprob: -1.7770212888717651
    3. 'get' → logprob: -4.027021408081055
    4. 'advance' → logprob: -4.277021408081055
    5. 'increment' → logprob: -4.902021408081055
    6. 'run' → logprob: -5.402021408081055
    7. 'update' → logprob: -5.652021408081055
    8. 'tick' → logprob: -5.902021408081055
    9. 'inc' → logprob: -6.027021408081055
    10. 'process' → logprob: -6.027021408081055

Token 1049: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.030147653073072433
    2. '(' → logprob: -3.5301475524902344
    3. '(
' → logprob: -8.155147552490234
    4. '   ' → logprob: -9.780147552490234
    5. ' (' → logprob: -10.530147552490234
    6. '       ' → logprob: -10.780147552490234
    7. 'self' → logprob: -13.030147552490234
    8. 'def' → logprob: -13.405147552490234
    9. '(s' → logprob: -14.155147552490234
    10. '(this' → logprob: -14.905147552490234

Token 1050: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002736878115683794
    2. '(' → logprob: -6.002737045288086
    3. '(
' → logprob: -9.377737045288086
    4. ' (' → logprob: -10.002737045288086
    5. ')(' → logprob: -10.127737045288086
    6. ')' → logprob: -10.377737045288086
    7. '       ' → logprob: -10.627737045288086
    8. '   ' → logprob: -11.127737045288086
    9. '(s' → logprob: -11.752737045288086
    10. '()' → logprob: -12.377737045288086

Token 1051: ' shop' (ID: 9100)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3405388295650482
    2. 'shop' → logprob: -1.4655388593673706
    3. 'driver' → logprob: -3.340538740158081
    4. 'drivers' → logprob: -4.96553897857666
    5. 'g' → logprob: -5.46553897857666
    6. ')' → logprob: -5.59053897857666
    7. ' self' → logprob: -6.59053897857666
    8. 'shops' → logprob: -6.71553897857666
    9. ' shop' → logprob: -6.84053897857666
    10. '):
' → logprob: -7.59053897857666

Token 1052: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.231159046292305
    2. '):' → logprob: -1.6061590909957886
    3. '):
' → logprob: -5.231159210205078
    4. '   ' → logprob: -8.981159210205078
    5. ' ):' → logprob: -9.356159210205078
    6. ' ,' → logprob: -9.731159210205078
    7. '       ' → logprob: -10.606159210205078
    8. ',s' → logprob: -10.981159210205078
    9. ')' → logprob: -11.231159210205078
    10. '=' → logprob: -11.856159210205078

Token 1053: ' driver' (ID: 8931)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'driver' → logprob: -0.09510888904333115
    2. 'graph' → logprob: -3.345108985900879
    3. ' driver' → logprob: -3.345108985900879
    4. 'drivers' → logprob: -4.595108985900879
    5. 'g' → logprob: -5.095108985900879
    6. ' graph' → logprob: -6.845108985900879
    7. ' drivers' → logprob: -7.470108985900879
    8. ' g' → logprob: -7.470108985900879
    9. 'drv' → logprob: -8.220108985900879
    10. 'shop' → logprob: -8.345108985900879

Token 1054: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5879141092300415
    2. '):' → logprob: -0.8379141092300415
    3. ',' → logprob: -4.462913990020752
    4. '       ' → logprob: -8.33791446685791
    5. '   ' → logprob: -9.33791446685791
    6. '):
' → logprob: -10.83791446685791
    7. '):

' → logprob: -11.08791446685791
    8. ' ):' → logprob: -12.58791446685791
    9. '(self' → logprob: -13.46291446685791
    10. ' ):
' → logprob: -13.71291446685791

Token 1055: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.126521035796031e-05
    2. '   ' → logprob: -10.875091552734375
    3. ' for' → logprob: -11.250091552734375
    4. 'while' → logprob: -11.250091552734375
    5. 'for' → logprob: -11.375091552734375
    6. '```' → logprob: -11.500091552734375
    7. ' while' → logprob: -12.000091552734375
    8. '        
' → logprob: -12.250091552734375
    9. 'def' → logprob: -12.500091552734375
    10. ',' → logprob: -12.500091552734375

Token 1056: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5901711583137512
    2. '       ' → logprob: -0.8401711583137512
    3. 'for' → logprob: -4.3401713371276855
    4. ' while' → logprob: -6.9651713371276855
    5. 'if' → logprob: -9.965170860290527
    6. ' for' → logprob: -10.090170860290527
    7. '   ' → logprob: -10.215170860290527
    8. '	while' → logprob: -11.215170860290527
    9. 'def' → logprob: -11.965170860290527
    10. '```' → logprob: -12.715170860290527

Token 1057: ' Déc' (ID: 56995)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.003326953388750553
    2. 'for' → logprob: -5.753326892852783
    3. 'if' → logprob: -9.003327369689941
    4. '       ' → logprob: -11.503327369689941
    5. ' while' → logprob: -11.753327369689941
    6. '   ' → logprob: -12.128327369689941
    7. 'self' → logprob: -13.378327369689941
    8. 'wh' → logprob: -15.128327369689941
    9. 'def' → logprob: -16.003326416015625
    10. 'output' → logprob: -16.003326416015625

Token 1058: 'oupe' (ID: 139976)
  Prédit: 'omp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'omp' → logprob: -0.7641330361366272
    2. 'om' → logprob: -1.5141329765319824
    3. 'r' → logprob: -2.3891329765319824
    4. 'lar' → logprob: -3.2641329765319824
    5. 'l' → logprob: -3.3891329765319824
    6. 'oup' → logprob: -3.8891329765319824
    7. 'ou' → logprob: -4.264132976531982
    8. '#' → logprob: -4.389132976531982
    9. 'ouple' → logprob: -4.514132976531982
    10. 'oupe' → logprob: -4.639132976531982

Token 1059: ' le' (ID: 505)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5325963497161865
    2. 'for' → logprob: -1.2825963497161865
    3. '       ' → logprob: -3.1575963497161865
    4. 'self' → logprob: -3.6575963497161865
    5. ' for' → logprob: -3.9075963497161865
    6. 'if' → logprob: -4.407596588134766
    7. ' while' → logprob: -4.532596588134766
    8. 'range' → logprob: -5.282596588134766
    9. 'def' → logprob: -5.282596588134766
    10. '#' → logprob: -5.657596588134766

Token 1060: ' temps' (ID: 11160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6486258506774902
    2. 'while' → logprob: -1.0236258506774902
    3. 'range' → logprob: -2.5236258506774902
    4. 'lambda' → logprob: -4.39862585067749
    5. 'self' → logprob: -4.89862585067749
    6. 'def' → logprob: -5.39862585067749
    7. 'shop' → logprob: -5.77362585067749
    8. 'if' → logprob: -6.27362585067749
    9. '```' → logprob: -6.77362585067749
    10. 'time' → logprob: -7.02362585067749

Token 1061: ' en' (ID: 469)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.12487693130970001
    2. 'for' → logprob: -2.9998769760131836
    3. '       ' → logprob: -3.3748769760131836
    4. ' while' → logprob: -3.6248769760131836
    5. ' for' → logprob: -5.374876976013184
    6. '   ' → logprob: -6.749876976013184
    7. '	while' → logprob: -8.124876976013184
    8. '<|end|>' → logprob: -8.624876976013184
    9. 'range' → logprob: -9.124876976013184
    10. 'if' → logprob: -9.249876976013184

Token 1062: ' it' (ID: 480)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2897237241268158
    2. 'while' → logprob: -1.6647237539291382
    3. 'for' → logprob: -3.0397236347198486
    4. 'interval' → logprob: -4.914723873138428
    5. 'segments' → logprob: -6.164723873138428
    6. 'chunks' → logprob: -6.539723873138428
    7. 'self' → logprob: -7.039723873138428
    8. 'steps' → logprob: -7.789723873138428
    9. 'def' → logprob: -7.914723873138428
    10. 'time' → logprob: -8.16472339630127

Token 1063: 'ér' (ID: 2156)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.008355705998837948
    2. 'ér' → logprob: -5.383355617523193
    3. 'ertools' → logprob: -6.508355617523193
    4. 'err' → logprob: -6.758355617523193
    5. 'érations' → logprob: -7.133355617523193
    6. 'erval' → logprob: -9.758356094360352
    7. 'ranges' → logprob: -10.258356094360352
    8. 'érer' → logprob: -10.508356094360352
    9. '(self' → logprob: -11.008356094360352
    10. 'r' → logprob: -11.133356094360352

Token 1064: 'ateurs' (ID: 19727)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8282896876335144
    2. 'range' → logprob: -1.0782897472381592
    3. 'tools' → logprob: -1.7032897472381592
    4. 'ranges' → logprob: -4.20328950881958
    5. 'ations' → logprob: -4.45328950881958
    6. 'rat' → logprob: -5.95328950881958
    7. 'ertools' → logprob: -5.95328950881958
    8. 'er' → logprob: -6.32828950881958
    9. '   ' → logprob: -6.82828950881958
    10. 'ration' → logprob: -6.95328950881958

Token 1065: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05201554298400879
    2. ' for' → logprob: -3.677015542984009
    3. 'for' → logprob: -4.17701530456543
    4. ',' → logprob: -5.05201530456543
    5. '<|end|>' → logprob: -6.42701530456543
    6. ' and' → logprob: -7.67701530456543
    7. 'while' → logprob: -7.80201530456543
    8. '        
' → logprob: -8.67701530456543
    9. 'def' → logprob: -8.67701530456543
    10. ' while' → logprob: -8.80201530456543

Token 1066: ''une' (ID: 13337)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.05689654126763344
    2. 'ranges' → logprob: -4.681896686553955
    3. 'e' → logprob: -4.806896686553955
    4. 'er' → logprob: -5.056896686553955
    5. ' range' → logprob: -6.056896686553955
    6. 'é' → logprob: -6.306896686553955
    7. 'it' → logprob: -6.306896686553955
    8. 'ter' → logprob: -6.431896686553955
    9. 'éré' → logprob: -6.431896686553955
    10. 'lambda' → logprob: -6.556896686553955

Token 1067: ' manière' (ID: 35013)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.0978529304265976
    2. 'unit' → logprob: -4.22285270690918
    3. 'minute' → logprob: -4.59785270690918
    4. 'second' → logprob: -4.72285270690918
    5. 'pas' → logprob: -4.97285270690918
    6. 'case' → logprob: -5.09785270690918
    7. 'un' → logprob: -5.09785270690918
    8. 'step' → logprob: -5.09785270690918
    9. 'single' → logprob: -5.72285270690918
    10. 'time' → logprob: -6.22285270690918

Token 1068: ' crypt' (ID: 14204)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.060071587562561
    2. 'it' → logprob: -2.3100714683532715
    3. 'range' → logprob: -2.3100714683532715
    4. 'while' → logprob: -2.4350714683532715
    5. '   ' → logprob: -2.5600714683532715
    6. 'lambda' → logprob: -2.5600714683532715
    7. 'import' → logprob: -3.0600714683532715
    8. 'compatible' → logprob: -3.9350714683532715
    9. '       ' → logprob: -4.0600714683532715
    10. 'com' → logprob: -4.0600714683532715

Token 1069: 'ique' (ID: 2222)
  Prédit: 'ique'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ique' → logprob: -0.0009261108934879303
    2. 'ée' → logprob: -7.2509260177612305
    3. 'iques' → logprob: -9.87592601776123
    4. 'ic' → logprob: -10.00092601776123
    5. 'iquement' → logprob: -10.37592601776123
    6. 'ed' → logprob: -10.37592601776123
    7. 'e' → logprob: -10.75092601776123
    8. '
' → logprob: -11.87592601776123
    9. 'é' → logprob: -12.50092601776123
    10. 'i' → logprob: -12.75092601776123

Token 1070: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28732362389564514
    2. 'for' → logprob: -2.1623237133026123
    3. ' for' → logprob: -2.2873237133026123
    4. 'while' → logprob: -4.287323474884033
    5. ' while' → logprob: -5.162323474884033
    6. 'time' → logprob: -5.162323474884033
    7. 't' → logprob: -6.037323474884033
    8. ' time' → logprob: -6.662323474884033
    9. '        
' → logprob: -7.412323474884033
    10. ',' → logprob: -7.537323474884033

Token 1071: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0760081335902214
    2. ' for' → logprob: -3.0760080814361572
    3. 'for' → logprob: -3.9510080814361572
    4. 'time' → logprob: -6.326008319854736
    5. ' time' → logprob: -6.576008319854736
    6. 't' → logprob: -6.951008319854736
    7. 'while' → logprob: -7.201008319854736
    8. ' while' → logprob: -7.451008319854736
    9. ' current' → logprob: -7.701008319854736
    10. ' t' → logprob: -7.701008319854736

Token 1072: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6949779391288757
    2. 'while' (adapté à ' while') → logprob: -0.9449779391288757
    3. '       ' → logprob: -2.5699779987335205
    4. 'time' → logprob: -3.6949779987335205
    5. 't' → logprob: -5.319977760314941
    6. 'it' → logprob: -6.319977760314941
    7. 'from' → logprob: -7.319977760314941
    8. 'curr' → logprob: -7.319977760314941
    9. 'iterator' → logprob: -7.819977760314941
    10. 'i' → logprob: -8.444977760314941

Token 1073: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.35650330781936646
    2. ' self' → logprob: -1.2315032482147217
    3. ' True' → logprob: -5.481503486633301
    4. 'True' → logprob: -5.731503486633301
    5. ' not' → logprob: -7.856503486633301
    6. 'not' → logprob: -9.3565034866333
    7. '(self' → logprob: -9.8565034866333
    8. '(True' → logprob: -10.3565034866333
    9. '	self' → logprob: -10.7315034866333
    10. ' shop' → logprob: -11.3565034866333

Token 1074: '.curr' (ID: 91383)
  Prédit: '.curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.curr' → logprob: -0.005056094843894243
    2. '.order' → logprob: -5.505055904388428
    3. '.T' → logprob: -7.755055904388428
    4. 'curr' → logprob: -7.880055904388428
    5. '.times' → logprob: -9.755056381225586
    6. '.next' → logprob: -10.130056381225586
    7. '.orders' → logprob: -10.130056381225586
    8. 'order' → logprob: -11.130056381225586
    9. '.' → logprob: -12.005056381225586
    10. '.t' → logprob: -13.380056381225586

Token 1075: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -7.481510692741722e-05
    2. '<' → logprob: -9.62507438659668
    3. ' <' → logprob: -12.50007438659668
    4. '<T' → logprob: -13.12507438659668
    5. '_time' → logprob: -13.25007438659668
    6. '_Time' → logprob: -14.75007438659668
    7. '_TIME' → logprob: -16.12507438659668
    8. '	Time' → logprob: -16.37507438659668
    9. ' Time' → logprob: -16.50007438659668
    10. 'time' → logprob: -16.62507438659668

Token 1076: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.8280298709869385
    2. ' <' → logprob: -0.8280298709869385
    3. ' <=' → logprob: -2.7030298709869385
    4. '<=' → logprob: -2.8280298709869385
    5. '<len' → logprob: -11.07802963256836
    6. '<T' → logprob: -12.20302963256836
    7. ' ' → logprob: -12.20302963256836
    8. '   ' → logprob: -12.45302963256836
    9. ' in' → logprob: -12.45302963256836
    10. ' !=' → logprob: -12.57802963256836

Token 1077: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001515696058049798
    2. ' self' → logprob: -6.501515865325928
    3. 'len' → logprob: -11.25151538848877
    4. '
' → logprob: -16.126516342163086
    5. ' len' → logprob: -16.126516342163086
    6. '   ' → logprob: -16.751516342163086
    7. '	self' → logprob: -16.876516342163086
    8. '       ' → logprob: -17.626516342163086
    9. ' ' → logprob: -17.751516342163086
    10. '(self' → logprob: -18.126516342163086

Token 1078: '.T' (ID: 2600)
  Prédit: '.T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.T' → logprob: -0.00020509003661572933
    2. 'T' → logprob: -8.500205039978027
    3. ' Tmax' → logprob: -14.125205039978027
    4. '.' → logprob: -15.125205039978027
    5. 'max' → logprob: -15.250205039978027
    6. '.MAX' → logprob: -16.750205993652344
    7. '.TIM' → logprob: -17.000205993652344
    8. '.t' → logprob: -17.250205993652344
    9. '   ' → logprob: -17.500205993652344
    10. ' .' → logprob: -17.500205993652344

Token 1079: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -7.553032628493384e-05
    2. 'ax' → logprob: -9.500075340270996
    3. '_max' → logprob: -15.875075340270996
    4. 'mx' → logprob: -16.250076293945312
    5. ' max' → logprob: -16.375076293945312
    6. '   ' → logprob: -16.375076293945312
    7. 'ma' → logprob: -16.750076293945312
    8. '	max' → logprob: -17.125076293945312
    9. 'm' → logprob: -17.250076293945312
    10. '.max' → logprob: -17.625076293945312

Token 1080: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.47642460465431213
    2. ':' → logprob: -0.9764245748519897
    3. '       ' → logprob: -6.851424694061279
    4. ' and' → logprob: -6.851424694061279
    5. ' or' → logprob: -10.226424217224121
    6. '):
' → logprob: -10.351424217224121
    7. '   ' → logprob: -10.351424217224121
    8. ' :
' → logprob: -10.601424217224121
    9. ' :' → logprob: -11.101424217224121
    10. 'and' → logprob: -11.101424217224121

Token 1081: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35708197951316833
    2. '           ' → logprob: -1.2320820093154907
    3. '   ' → logprob: -6.107081890106201
    4. '	       ' → logprob: -6.232081890106201
    5. '<|end|>' → logprob: -6.232081890106201
    6. '	   ' → logprob: -7.232081890106201
    7. '        
' → logprob: -7.982081890106201
    8. '<|end|>' → logprob: -8.23208236694336
    9. ' if' → logprob: -8.60708236694336
    10. '	' → logprob: -8.60708236694336

Token 1082: ' self' (ID: 1051)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2545279264450073
    2. '           ' → logprob: -1.5045279264450073
    3. 'self' (adapté à ' self') → logprob: -6.504528045654297
    4. '   ' → logprob: -8.004528045654297
    5. ' if' → logprob: -8.254528045654297
    6. 'while' → logprob: -8.379528045654297
    7. '#' → logprob: -9.629528045654297
    8. 't' → logprob: -10.379528045654297
    9. 'shop' → logprob: -10.379528045654297
    10. 'import' → logprob: -10.879528045654297

Token 1083: '.curr' (ID: 91383)
  Prédit: '.curr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.curr' → logprob: -0.0023515033535659313
    2. 'curr' → logprob: -6.1273512840271
    3. ' .' → logprob: -9.377351760864258
    4. '+=' → logprob: -10.752351760864258
    5. ' +=' → logprob: -10.752351760864258
    6. '	curr' → logprob: -11.502351760864258
    7. 'Curr' → logprob: -12.127351760864258
    8. '[curr' → logprob: -12.252351760864258
    9. '.' → logprob: -12.627351760864258
    10. '
' → logprob: -12.752351760864258

Token 1084: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: 0.0
    2. '_time' → logprob: -20.75
    3. '	Time' → logprob: -20.75
    4. 'ime' → logprob: -21.125
    5. 'Type' → logprob: -21.5
    6. 'time' → logprob: -22.625
    7. 'Timer' → logprob: -23.375
    8. '_TIME' → logprob: -24.125
    9. 'Line' → logprob: -24.125
    10. 'Times' → logprob: -24.25

Token 1085: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10021379590034485
    2. ' +=' → logprob: -2.3502137660980225
    3. '=' → logprob: -12.100214004516602
    4. '   ' → logprob: -14.600214004516602
    5. ']+=' → logprob: -14.725214004516602
    6. '+' → logprob: -15.350214004516602
    7. ' ' → logprob: -15.850214004516602
    8. ' =' → logprob: -15.975214004516602
    9. '	' → logprob: -16.4752140045166
    10. ',' → logprob: -16.4752140045166

Token 1086: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.875030517578125
    4. '
' → logprob: -19.750030517578125
    5. '  ' → logprob: -20.125030517578125
    6. ' ' → logprob: -20.375030517578125
    7. '```' → logprob: -20.750030517578125
    8. '	' → logprob: -21.000030517578125
    9. '۱' → logprob: -21.250030517578125
    10. '    ' → logprob: -21.375030517578125

Token 1087: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -19.75
    4. '```' → logprob: -20.0
    5. '۱' → logprob: -21.125
    6. '
' → logprob: -21.9375
    7. '１' → logprob: -21.9375
    8. '  ' → logprob: -22.0625
    9. 'int' → logprob: -22.1875
    10. '' → logprob: -22.25

Token 1088: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031745026353746653
    2. '<|end|>' → logprob: -5.878174304962158
    3. '<|end|>' → logprob: -9.128174781799316
    4. '
' → logprob: -9.628174781799316
    5. '            
' → logprob: -9.753174781799316
    6. '```' → logprob: -10.128174781799316
    7. ',' → logprob: -11.003174781799316
    8. 'if' → logprob: -11.253174781799316
    9. '       ' → logprob: -11.378174781799316
    10. '		' → logprob: -11.378174781799316

Token 1089: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01779201254248619
    2. 'if' → logprob: -4.142792224884033
    3. ' if' → logprob: -7.142792224884033
    4. '       ' → logprob: -8.267791748046875
    5. '<|end|>' → logprob: -8.267791748046875
    6. '   ' → logprob: -9.142791748046875
    7. 'while' → logprob: -9.267791748046875
    8. '
' → logprob: -9.517791748046875
    9. '            
' → logprob: -9.892791748046875
    10. '```' → logprob: -10.267791748046875

Token 1090: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.018322253599762917
    2. '           ' → logprob: -4.768322467803955
    3. 'while' → logprob: -4.893322467803955
    4. 'for' → logprob: -6.518322467803955
    5. 'shop' → logprob: -8.518321990966797
    6. '       ' → logprob: -8.768321990966797
    7. 'driver' → logprob: -8.893321990966797
    8. '#' → logprob: -9.143321990966797
    9. '   ' → logprob: -10.393321990966797
    10. ' if' → logprob: -10.893321990966797

Token 1091: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03466009721159935
    2. ' self' → logprob: -3.4096601009368896
    3. 'shop' → logprob: -7.6596598625183105
    4. '(self' → logprob: -8.784660339355469
    5. 'len' → logprob: -8.784660339355469
    6. ' shop' → logprob: -9.659660339355469
    7. '	self' → logprob: -10.159660339355469
    8. 'not' → logprob: -10.534660339355469
    9. '   ' → logprob: -10.659660339355469
    10. ' len' → logprob: -10.784660339355469

Token 1092: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.000978743890300393
    2. ' self' → logprob: -7.125978946685791
    3. '           ' → logprob: -9.750978469848633
    4. '(self' → logprob: -9.875978469848633
    5. 'len' → logprob: -10.000978469848633
    6. '   ' → logprob: -11.750978469848633
    7. 'not' → logprob: -12.625978469848633
    8. '       ' → logprob: -13.000978469848633
    9. 'shop' → logprob: -13.250978469848633
    10. '(
' → logprob: -14.750978469848633

Token 1093: '.order' (ID: 25549)
  Prédit: '.curr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.curr' → logprob: -0.0931127667427063
    2. '.order' → logprob: -2.4681127071380615
    3. '.orders' → logprob: -6.093112945556641
    4. '.times' → logprob: -6.343112945556641
    5. 'curr' → logprob: -9.71811294555664
    6. '.' → logprob: -10.34311294555664
    7. '.next' → logprob: -11.59311294555664
    8. '.time' → logprob: -11.71811294555664
    9. 'order' → logprob: -11.96811294555664
    10. ' curr' → logprob: -12.21811294555664

Token 1094: 'Index' (ID: 2368)
  Prédit: 'Index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -1.8312570318812504e-05
    2. 's' → logprob: -12.375018119812012
    3. ' in' → logprob: -12.875018119812012
    4. ')' → logprob: -12.875018119812012
    5. '
' → logprob: -13.000018119812012
    6. '   ' → logprob: -13.375018119812012
    7. 'in' → logprob: -14.250018119812012
    8. ' and' → logprob: -14.500018119812012
    9. 'index' → logprob: -14.750018119812012
    10. 'In' → logprob: -14.750018119812012

Token 1095: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5653336048126221
    2. '<' → logprob: -0.9403336048126221
    3. '<len' → logprob: -3.190333604812622
    4. '<size' → logprob: -10.065333366394043
    5. '>=' → logprob: -10.440333366394043
    6. ' >=' → logprob: -10.690333366394043
    7. '<num' → logprob: -11.315333366394043
    8. ')' → logprob: -11.315333366394043
    9. '<n' → logprob: -11.440333366394043
    10. ' ' → logprob: -11.690333366394043

Token 1096: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0005164555623196065
    2. ' len' → logprob: -8.000516891479492
    3. 'self' → logprob: -8.625516891479492
    4. '           ' → logprob: -14.000516891479492
    5. '(len' → logprob: -14.875516891479492
    6. '   ' → logprob: -16.125516891479492
    7. ' self' → logprob: -16.250516891479492
    8. '               ' → logprob: -16.625516891479492
    9. '	len' → logprob: -17.500516891479492
    10. '=len' → logprob: -17.625516891479492

Token 1097: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003672282909974456
    2. 'self' → logprob: -5.628672122955322
    3. ' self' → logprob: -9.75367259979248
    4. '(' → logprob: -11.75367259979248
    5. ')' → logprob: -13.00367259979248
    6. '[self' → logprob: -13.37867259979248
    7. '=self' → logprob: -13.75367259979248
    8. 's' → logprob: -14.87867259979248
    9. ' (' → logprob: -15.25367259979248
    10. '(s' → logprob: -15.75367259979248

Token 1098: '.times' (ID: 78835)
  Prédit: '.times'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.times' → logprob: -0.6139438152313232
    2. '.orders' → logprob: -1.1139438152313232
    3. 'times' → logprob: -2.6139438152313232
    4. 'orders' → logprob: -2.8639438152313232
    5. ' times' → logprob: -8.738944053649902
    6. ' orders' → logprob: -9.863944053649902
    7. '(times' → logprob: -11.988944053649902
    8. '   ' → logprob: -12.113944053649902
    9. '.' → logprob: -12.613944053649902
    10. '.order' → logprob: -13.113944053649902

Token 1099: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1064489409327507
    2. 'and' → logprob: -2.7314488887786865
    3. ')' → logprob: -3.3564488887786865
    4. '           ' → logprob: -7.481449127197266
    5. '               ' → logprob: -8.481449127197266
    6. ' )' → logprob: -9.231449127197266
    7. '            ' → logprob: -10.481449127197266
    8. '                   ' → logprob: -10.481449127197266
    9. '          ' → logprob: -11.356449127197266
    10. '       ' → logprob: -11.606449127197266

Token 1100: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.35145238041877747
    2. 'and' → logprob: -1.226452350616455
    3. ')' → logprob: -5.851452350616455
    4. '           ' → logprob: -9.601452827453613
    5. '	and' → logprob: -10.601452827453613
    6. '               ' → logprob: -11.601452827453613
    7. '                   ' → logprob: -12.351452827453613
    8. ' )' → logprob: -12.476452827453613
    9. '            ' → logprob: -12.976452827453613
    10. '==' → logprob: -13.101452827453613

Token 1101: '
' (ID: 198)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.43353793025016785
    2. 'self' → logprob: -1.0585379600524902
    3. '           ' → logprob: -6.05853796005249
    4. '               ' → logprob: -6.30853796005249
    5. '            ' → logprob: -7.80853796005249
    6. ' ' → logprob: -8.808537483215332
    7. '                ' → logprob: -10.808537483215332
    8. '                   ' → logprob: -10.808537483215332
    9. '	self' → logprob: -11.183537483215332
    10. '              ' → logprob: -11.183537483215332

Token 1102: '               ' (ID: 506)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.636246919631958
    2. 'self' → logprob: -0.886246919631958
    3. '               ' → logprob: -3.011246919631958
    4. '            ' → logprob: -5.761246681213379
    5. '                ' → logprob: -5.886246681213379
    6. '           ' → logprob: -6.136246681213379
    7. '                   ' → logprob: -7.511246681213379
    8. ' ' → logprob: -8.511246681213379
    9. '              ' → logprob: -9.011246681213379
    10. '(self' → logprob: -9.386246681213379

Token 1103: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007988566532731056
    2. ' self' → logprob: -5.507988452911377
    3. '               ' → logprob: -5.632988452911377
    4. '           ' → logprob: -8.257988929748535
    5. '            ' → logprob: -10.882988929748535
    6. '   ' → logprob: -11.507988929748535
    7. '              ' → logprob: -11.632988929748535
    8. '                   ' → logprob: -11.882988929748535
    9. '	self' → logprob: -12.132988929748535
    10. ' ' → logprob: -12.507988929748535

Token 1104: '.curr' (ID: 91383)
  Prédit: '.times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.times' → logprob: -0.007805118802934885
    2. '.curr' → logprob: -5.257805347442627
    3. 'times' → logprob: -6.007805347442627
    4. 'curr' → logprob: -9.507804870605469
    5. '.t' → logprob: -11.132804870605469
    6. '               ' → logprob: -12.007804870605469
    7. ' times' → logprob: -12.757804870605469
    8. '           ' → logprob: -13.132804870605469
    9. '.' → logprob: -13.132804870605469
    10. '.time' → logprob: -13.757804870605469

Token 1105: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -1.5048530030981055e-06
    2. '==' → logprob: -14.500001907348633
    3. '	Time' → logprob: -15.000001907348633
    4. '   ' → logprob: -15.250001907348633
    5. ' ==' → logprob: -16.500001907348633
    6. '           ' → logprob: -16.625001907348633
    7. '_Time' → logprob: -16.750001907348633
    8. ' Time' → logprob: -17.500001907348633
    9. 'ime' → logprob: -17.500001907348633
    10. '_time' → logprob: -17.625001907348633

Token 1106: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4746420383453369
    2. ' ==' → logprob: -0.9746420383453369
    3. '>=' → logprob: -7.599641799926758
    4. ' >=' → logprob: -9.849641799926758
    5. '           ' → logprob: -12.974641799926758
    6. '==
' → logprob: -13.099641799926758
    7. '=' → logprob: -13.474641799926758
    8. ')==' → logprob: -13.724641799926758
    9. '()==' → logprob: -13.724641799926758
    10. '===' → logprob: -13.974641799926758

Token 1107: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10021119564771652
    2. ' self' → logprob: -2.3502111434936523
    3. '               ' → logprob: -13.225211143493652
    4. '           ' → logprob: -13.225211143493652
    5. '                   ' → logprob: -15.350211143493652
    6. '	self' → logprob: -15.475211143493652
    7. '(self' → logprob: -15.850211143493652
    8. '=self' → logprob: -15.850211143493652
    9. '[self' → logprob: -16.10021209716797
    10. '            ' → logprob: -16.10021209716797

Token 1108: '.times' (ID: 78835)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.47615474462509155
    2. '.times' → logprob: -0.9761547446250916
    3. ' times' → logprob: -6.226154804229736
    4. '[t' → logprob: -10.726154327392578
    5. '(times' → logprob: -10.726154327392578
    6. ' .' → logprob: -11.101154327392578
    7. '               ' → logprob: -11.726154327392578
    8. '           ' → logprob: -12.101154327392578
    9. 'self' → logprob: -12.351154327392578
    10. '.' → logprob: -12.601154327392578

Token 1109: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -7.3458322731312364e-06
    2. 'self' → logprob: -12.125007629394531
    3. '           ' → logprob: -14.625007629394531
    4. '[' → logprob: -14.625007629394531
    5. '   ' → logprob: -15.125007629394531
    6. '               ' → logprob: -15.250007629394531
    7. ' self' → logprob: -16.00000762939453
    8. '[
' → logprob: -16.12500762939453
    9. ' [' → logprob: -17.00000762939453
    10. ')[' → logprob: -17.12500762939453

Token 1110: '.order' (ID: 25549)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.004709938075393438
    2. '.order' → logprob: -5.754709720611572
    3. 'Index' → logprob: -6.879709720611572
    4. '           ' → logprob: -9.00471019744873
    5. ' order' → logprob: -9.37971019744873
    6. '       ' → logprob: -10.00471019744873
    7. '   ' → logprob: -10.25471019744873
    8. '               ' → logprob: -10.50471019744873
    9. 'user' → logprob: -10.62971019744873
    10. 'nd' → logprob: -10.62971019744873

Token 1111: 'Index' (ID: 2368)
  Prédit: 'Index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -0.0011156888213008642
    2. 'nd' → logprob: -7.001115798950195
    3. '])' → logprob: -9.626115798950195
    4. 'x' → logprob: -9.626115798950195
    5. ']' → logprob: -10.626115798950195
    6. 'index' → logprob: -11.876115798950195
    7. 'X' → logprob: -12.001115798950195
    8. ']))' → logprob: -12.376115798950195
    9. '[' → logprob: -12.626115798950195
    10. 'Ind' → logprob: -12.626115798950195

Token 1112: ']' (ID: 60)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14441914856433868
    2. '):' → logprob: -2.0194191932678223
    3. ')' → logprob: -6.769419193267822
    4. ' and' → logprob: -8.394418716430664
    5. '           ' → logprob: -9.769418716430664
    6. '               ' → logprob: -10.144418716430664
    7. '):

' → logprob: -10.144418716430664
    8. '):
' → logprob: -10.269418716430664
    9. ' ):
' → logprob: -10.394418716430664
    10. '       ' → logprob: -10.644418716430664

Token 1113: ' and' (ID: 326)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0030210837721824646
    2. '):' → logprob: -6.128021240234375
    3. ' and' → logprob: -7.753021240234375
    4. '               ' → logprob: -8.628021240234375
    5. '           ' → logprob: -9.128021240234375
    6. '                   ' → logprob: -10.128021240234375
    7. 'and' → logprob: -10.503021240234375
    8. '):

' → logprob: -11.003021240234375
    9. ' ):
' → logprob: -11.378021240234375
    10. ')' → logprob: -11.628021240234375

Token 1114: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7223911285400391
    2. 'self' → logprob: -1.097391128540039
    3. ' self' → logprob: -1.847391128540039
    4. '):
' → logprob: -4.472391128540039
    5. 'not' → logprob: -6.097391128540039
    6. ' not' → logprob: -6.222391128540039
    7. 'shop' → logprob: -6.597391128540039
    8. '           ' → logprob: -6.722391128540039
    9. '                   ' → logprob: -6.972391128540039
    10. ' shop' → logprob: -6.972391128540039

Token 1115: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0049039083532989025
    2. 'self' → logprob: -5.754903793334961
    3. '                   ' → logprob: -6.629903793334961
    4. ' self' → logprob: -8.379903793334961
    5. '                ' → logprob: -9.379903793334961
    6. '           ' → logprob: -10.504903793334961
    7. '              ' → logprob: -10.754903793334961
    8. '                  ' → logprob: -11.879903793334961
    9. '                 ' → logprob: -12.254903793334961
    10. '                       ' → logprob: -12.379903793334961

Token 1116: ' driver' (ID: 8931)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10999669879674911
    2. ' self' → logprob: -2.984996795654297
    3. '               ' → logprob: -3.734996795654297
    4. '                   ' → logprob: -4.609996795654297
    5. 'not' → logprob: -4.734996795654297
    6. ' not' → logprob: -5.109996795654297
    7. 'len' → logprob: -5.859996795654297
    8. ' len' → logprob: -7.484996795654297
    9. 'True' → logprob: -8.234996795654297
    10. 'shop' → logprob: -8.609996795654297

Token 1117: '.map' (ID: 7975)
  Prédit: '.order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.order' → logprob: -1.1946085691452026
    2. '.location' → logprob: -1.3196085691452026
    3. '.on' → logprob: -1.9446085691452026
    4. '.route' → logprob: -2.444608688354492
    5. '.next' → logprob: -3.194608688354492
    6. ' not' → logprob: -3.444608688354492
    7. '.move' → logprob: -3.819608688354492
    8. ' is' → logprob: -3.944608688354492
    9. '.plan' → logprob: -3.944608688354492
    10. '.not' → logprob: -4.444608688354492

Token 1118: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.31192296743392944
    2. ' is' → logprob: -2.061923027038574
    3. 'G' → logprob: -2.436923027038574
    4. ' and' → logprob: -4.936923027038574
    5. '):
' → logprob: -4.936923027038574
    6. ' not' → logprob: -5.561923027038574
    7. '!=' → logprob: -5.811923027038574
    8. ' in' → logprob: -5.936923027038574
    9. ' !=' → logprob: -5.936923027038574
    10. 'in' → logprob: -6.186923027038574

Token 1119: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01916847750544548
    2. '[self' → logprob: -4.144168376922607
    3. 'driver' → logprob: -6.394168376922607
    4. '[data' → logprob: -8.269168853759766
    5. 'self' → logprob: -8.394168853759766
    6. '           ' → logprob: -8.644168853759766
    7. '               ' → logprob: -8.769168853759766
    8. '[int' → logprob: -9.144168853759766
    9. ')' → logprob: -9.269168853759766
    10. '                   ' → logprob: -9.394168853759766

Token 1120: '1' (ID: 16)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'driver' → logprob: -0.6207683682441711
    2. 'shop' → logprob: -1.2457683086395264
    3. '1' → logprob: -2.1207683086395264
    4. '0' → logprob: -3.1207683086395264
    5. 'data' → logprob: -5.3707685470581055
    6. '
' → logprob: -5.9957685470581055
    7. 'self' → logprob: -6.3707685470581055
    8. ']' → logprob: -7.7457685470581055
    9. ' driver' → logprob: -8.370768547058105
    10. ' shop' → logprob: -8.495768547058105

Token 1121: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.19452878832817078
    2. '[' → logprob: -1.9445288181304932
    3. '[self' → logprob: -3.819528818130493
    4. ']' → logprob: -4.819528579711914
    5. '[data' → logprob: -6.569528579711914
    6. ')' → logprob: -8.069528579711914
    7. ')[' → logprob: -8.319528579711914
    8. '].' → logprob: -8.319528579711914
    9. 'driver' → logprob: -8.444528579711914
    10. '           ' → logprob: -8.944528579711914

Token 1122: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.020323237404227257
    2. 'driver' → logprob: -4.895323276519775
    3. 'shop' → logprob: -5.145323276519775
    4. '
' → logprob: -5.395323276519775
    5. 'data' → logprob: -6.645323276519775
    6. '1' → logprob: -8.020322799682617
    7. '0' → logprob: -8.270322799682617
    8. ' self' → logprob: -8.270322799682617
    9. ']' → logprob: -10.770322799682617
    10. '   ' → logprob: -11.520322799682617

Token 1123: '.orders' (ID: 129984)
  Prédit: 'orders'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orders' → logprob: -0.276991605758667
    2. '.orders' → logprob: -1.651991605758667
    3. 'order' → logprob: -3.151991605758667
    4. '.order' → logprob: -4.901991844177246
    5. ' orders' → logprob: -10.776991844177246
    6. ' order' → logprob: -12.151991844177246
    7. 'shop' → logprob: -12.151991844177246
    8. 'self' → logprob: -12.276991844177246
    9. 'times' → logprob: -12.401991844177246
    10. 'ord' → logprob: -12.776991844177246

Token 1124: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.0009951756801456213
    2. '[' → logprob: -7.12599515914917
    3. 'self' → logprob: -8.750995635986328
    4. '][' → logprob: -10.750995635986328
    5. '[
' → logprob: -12.250995635986328
    6. ']' → logprob: -13.375995635986328
    7. '   ' → logprob: -13.500995635986328
    8. '
' → logprob: -14.250995635986328
    9. ' [' → logprob: -14.625995635986328
    10. ' self' → logprob: -14.625995635986328

Token 1125: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.04859395697712898
    2. 'order' → logprob: -3.0485939979553223
    3. ' order' → logprob: -13.048593521118164
    4. 'Order' → logprob: -13.673593521118164
    5. '$order' → logprob: -13.673593521118164
    6. '.' → logprob: -14.048593521118164
    7. '	order' → logprob: -14.048593521118164
    8. '
' → logprob: -15.423593521118164
    9. ' .' → logprob: -16.923593521118164
    10. '_order' → logprob: -17.173593521118164

Token 1126: 'Index' (ID: 2368)
  Prédit: 'Index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -0.16341988742351532
    2. 'nd' → logprob: -1.9134198427200317
    3. 'index' → logprob: -5.913419723510742
    4. 'ex' → logprob: -8.538419723510742
    5. '_index' → logprob: -9.788419723510742
    6. 'n' → logprob: -10.163419723510742
    7. 'I' → logprob: -10.413419723510742
    8. '   ' → logprob: -10.413419723510742
    9. 'x' → logprob: -10.538419723510742
    10. ']' → logprob: -10.913419723510742

Token 1127: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013227402232587337
    2. ' ]' → logprob: -5.013227462768555
    3. ']]' → logprob: -5.638227462768555
    4. ']==' → logprob: -6.138227462768555
    5. ']>' → logprob: -8.013227462768555
    6. ']!=' → logprob: -8.263227462768555
    7. ' ]]' → logprob: -10.013227462768555
    8. '   ' → logprob: -11.138227462768555
    9. '()]' → logprob: -11.138227462768555
    10. ')]' → logprob: -11.263227462768555

Token 1128: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7881775498390198
    2. '==' → logprob: -1.663177490234375
    3. ' !=' → logprob: -2.163177490234375
    4. ' <' → logprob: -2.413177490234375
    5. '<' → logprob: -2.663177490234375
    6. '!=' → logprob: -3.663177490234375
    7. ']' → logprob: -3.913177490234375
    8. '>' → logprob: -4.288177490234375
    9. ' >' → logprob: -4.788177490234375
    10. ']==' → logprob: -5.163177490234375

Token 1129: ' float' (ID: 4428)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.12488914281129837
    2. 'float' → logprob: -2.8748891353607178
    3. 'driver' → logprob: -2.9998891353607178
    4. 'self' → logprob: -4.874889373779297
    5. 'timer' → logprob: -6.249889373779297
    6. '100' → logprob: -7.624889373779297
    7. '300' → logprob: -8.874889373779297
    8. 'shop' → logprob: -8.999889373779297
    9. '999' → logprob: -9.499889373779297
    10. 'sys' → logprob: -9.624889373779297

Token 1130: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0012240358628332615
    2. ''' → logprob: -7.126224040985107
    3. ''in' → logprob: -8.00122356414795
    4. '(' → logprob: -10.12622356414795
    5. ''s' → logprob: -10.87622356414795
    6. '("' → logprob: -11.25122356414795
    7. '(in' → logprob: -12.75122356414795
    8. ' ('' → logprob: -13.12622356414795
    9. ''t' → logprob: -14.00122356414795
    10. '>('' → logprob: -14.50122356414795

Token 1131: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.0020577155519276857
    2. ''' → logprob: -6.3770575523376465
    3. 'inf' → logprob: -10.252058029174805
    4. ''ad' → logprob: -10.252058029174805
    5. ''u' → logprob: -10.502058029174805
    6. ''import' → logprob: -10.627058029174805
    7. '('' → logprob: -10.877058029174805
    8. ''un' → logprob: -11.127058029174805
    9. ''inc' → logprob: -11.252058029174805
    10. ''app' → logprob: -11.377058029174805

Token 1132: '')):
' (ID: 199796)
  Prédit: ''):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''):
' → logprob: -0.6058839559555054
    2. '')):
' → logprob: -1.7308839559555054
    3. ''):' → logprob: -1.8558839559555054
    4. ')' → logprob: -3.480884075164795
    5. '):
' → logprob: -3.855884075164795
    6. '):' → logprob: -4.105884075164795
    7. '')' → logprob: -4.355884075164795
    8. ''))' → logprob: -4.355884075164795
    9. ')):
' → logprob: -4.480884075164795
    10. ')):' → logprob: -4.605884075164795

Token 1133: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010306637705070898
    2. '                
' → logprob: -10.375102996826172
    3. '                   ' → logprob: -10.375102996826172
    4. '
' → logprob: -11.625102996826172
    5. '           ' → logprob: -11.625102996826172
    6. ':
' → logprob: -12.000102996826172
    7. '              ' → logprob: -12.875102996826172
    8. ':' → logprob: -13.125102996826172
    9. '<|end|>' → logprob: -13.500102996826172
    10. '#' → logprob: -13.625102996826172

Token 1134: ' shop' (ID: 9100)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0033902833238244057
    2. '                   ' → logprob: -6.378390312194824
    3. 'driver' → logprob: -6.503390312194824
    4. 'shop' (adapté à ' shop') → logprob: -9.003390312194824
    5. 'self' → logprob: -10.503390312194824
    6. '           ' → logprob: -10.878390312194824
    7. ' driver' → logprob: -11.378390312194824
    8. ' shop' → logprob: -12.878390312194824
    9. '   ' → logprob: -13.378390312194824
    10. '#' → logprob: -14.003390312194824

Token 1135: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.0013276183744892478
    2. '.' → logprob: -6.7513275146484375
    3. '               ' → logprob: -9.876327514648438
    4. '.add' → logprob: -10.376327514648438
    5. '.user' → logprob: -11.501327514648438
    6. '.request' → logprob: -11.876327514648438
    7. '.Order' → logprob: -11.876327514648438
    8. '                   ' → logprob: -12.126327514648438
    9. '().' → logprob: -12.126327514648438
    10. 'order' → logprob: -12.251327514648438

Token 1136: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.002493729814887047
    2. '.' → logprob: -6.002493858337402
    3. ' .' → logprob: -11.627493858337402
    4. '.update' → logprob: -12.002493858337402
    5. '().' → logprob: -13.752493858337402
    6. '           ' → logprob: -14.627493858337402
    7. '.append' → logprob: -15.002493858337402
    8. '   ' → logprob: -15.377493858337402
    9. '                   ' → logprob: -15.627493858337402
    10. 'add' → logprob: -15.752493858337402

Token 1137: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.048870645463466644
    2. 'self' → logprob: -3.04887056350708
    3. '(' → logprob: -8.548871040344238
    4. ' self' → logprob: -9.673871040344238
    5. '(
' → logprob: -10.673871040344238
    6. '	self' → logprob: -13.673871040344238
    7. '   ' → logprob: -14.048871040344238
    8. ' (' → logprob: -14.423871040344238
    9. '       ' → logprob: -15.173871040344238
    10. '((' → logprob: -15.298871040344238

Token 1138: '.orders' (ID: 129984)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.1375744789838791
    2. 'self' → logprob: -2.1375744342803955
    3. 'orders' → logprob: -5.387574672698975
    4. ' self' → logprob: -5.762574672698975
    5. '[self' → logprob: -6.387574672698975
    6. '(' → logprob: -7.887574672698975
    7. ')' → logprob: -8.137574195861816
    8. '_orders' → logprob: -9.012574195861816
    9. '.orders' → logprob: -9.137574195861816
    10. ' (' → logprob: -9.262574195861816

Token 1139: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -5.200166469876422e-06
    2. '[' → logprob: -13.000004768371582
    3. 'self' → logprob: -13.125004768371582
    4. '[
' → logprob: -14.750004768371582
    5. '   ' → logprob: -15.500004768371582
    6. ')[' → logprob: -16.2500057220459
    7. ' [' → logprob: -16.3750057220459
    8. '
' → logprob: -17.0000057220459
    9. '(self' → logprob: -17.1250057220459
    10. ' ' → logprob: -18.3750057220459

Token 1140: '.order' (ID: 25549)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.32509559392929077
    2. '[self' → logprob: -1.3250956535339355
    3. 'order' → logprob: -5.4500956535339355
    4. '[' → logprob: -6.0750956535339355
    5. 'Index' → logprob: -6.4500956535339355
    6. 'user' → logprob: -6.8250956535339355
    7. '.order' → logprob: -7.3250956535339355
    8. ' self' → logprob: -7.8250956535339355
    9. '   ' → logprob: -7.8250956535339355
    10. '.user' → logprob: -8.575095176696777

Token 1141: 'Index' (ID: 2368)
  Prédit: 'Index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -0.0005307526444084942
    2. 'index' → logprob: -8.000531196594238
    3. '[self' → logprob: -8.875531196594238
    4. 'self' → logprob: -10.500531196594238
    5. '[' → logprob: -11.750531196594238
    6. '_index' → logprob: -11.750531196594238
    7. '.Index' → logprob: -12.500531196594238
    8. '   ' → logprob: -13.875531196594238
    9. ']' → logprob: -14.125531196594238
    10. '.index' → logprob: -14.125531196594238

Token 1142: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13231179118156433
    2. ')
' → logprob: -2.1323118209838867
    3. '               ' → logprob: -5.882311820983887
    4. '           ' → logprob: -7.007311820983887
    5. ' )' → logprob: -7.632311820983887
    6. ' )
' → logprob: -8.257311820983887
    7. '       ' → logprob: -8.382311820983887
    8. '())' → logprob: -8.382311820983887
    9. '])' → logprob: -8.632311820983887
    10. '())
' → logprob: -9.257311820983887

Token 1143: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.514650183613412e-05
    2. 'self' → logprob: -11.125055313110352
    3. '           ' → logprob: -11.375055313110352
    4. '<|end|>' → logprob: -11.750055313110352
    5. '                   ' → logprob: -12.500055313110352
    6. '		       ' → logprob: -12.750055313110352
    7. '<|end|>' → logprob: -13.000055313110352
    8. '	           ' → logprob: -13.000055313110352
    9. '```' → logprob: -13.250055313110352
    10. '                
' → logprob: -14.000055313110352

Token 1144: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.31360650062561035
    2. 'self' (adapté à ' self') → logprob: -1.3136065006256104
    3. '           ' → logprob: -8.188606262207031
    4. ' self' → logprob: -9.938606262207031
    5. '   ' → logprob: -11.063606262207031
    6. '	self' → logprob: -14.313606262207031
    7. '                   ' → logprob: -14.688606262207031
    8. ' ' → logprob: -14.938606262207031
    9. '	           ' → logprob: -14.938606262207031
    10. '              ' → logprob: -15.313606262207031

Token 1145: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.4745555818080902
    2. 'order' → logprob: -0.9745556116104126
    3. '               ' → logprob: -8.099555969238281
    4. ' order' → logprob: -9.724555969238281
    5. '           ' → logprob: -9.974555969238281
    6. '	order' → logprob: -10.599555969238281
    7. '.' → logprob: -10.724555969238281
    8. '   ' → logprob: -12.474555969238281
    9. '$order' → logprob: -12.599555969238281
    10. '_order' → logprob: -12.724555969238281

Token 1146: 'Index' (ID: 2368)
  Prédit: 'Index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Index' → logprob: -2.339278580620885e-06
    2. 'nd' → logprob: -13.750001907348633
    3. 'index' → logprob: -14.000001907348633
    4. '.add' → logprob: -14.875001907348633
    5. '       ' → logprob: -17.750001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '_index' → logprob: -17.875001907348633
    8. 'd' → logprob: -18.000001907348633
    9. 'Ind' → logprob: -18.250001907348633
    10. 'add' → logprob: -18.500001907348633

Token 1147: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0234258770942688
    2. ' +=' → logprob: -3.773425817489624
    3. '=' → logprob: -9.148426055908203
    4. '+' → logprob: -9.648426055908203
    5. ']+=' → logprob: -12.023426055908203
    6. '+='' → logprob: -14.148426055908203
    7. '(' → logprob: -14.398426055908203
    8. '+="' → logprob: -14.648426055908203
    9. '   ' → logprob: -14.773426055908203
    10. ')' → logprob: -14.898426055908203

Token 1148: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -19.250017166137695
    4. '   ' → logprob: -19.500017166137695
    5. '۱' → logprob: -20.125017166137695
    6. '１' → logprob: -20.250017166137695
    7. ' ' → logprob: -21.062517166137695
    8. '  ' → logprob: -21.125017166137695
    9. '
' → logprob: -21.312517166137695
    10. '+' → logprob: -21.562517166137695

Token 1149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '```' → logprob: -21.0
    4. '۱' → logprob: -22.125
    5. '' → logprob: -22.25
    6. '   ' → logprob: -23.0
    7. '‌' → logprob: -23.125
    8. '１' → logprob: -23.25
    9. '
' → logprob: -23.375
    10. '१' → logprob: -23.5

Token 1150: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5909314751625061
    2. '<|end|>' → logprob: -0.8409314751625061
    3. '               ' → logprob: -4.840931415557861
    4. '<|end|>' → logprob: -5.340931415557861
    5. '
' → logprob: -6.340931415557861
    6. '            
' → logprob: -9.71593189239502
    7. '		' → logprob: -9.84093189239502
    8. '       ' → logprob: -9.84093189239502
    9. '   ' → logprob: -10.21593189239502
    10. '```' → logprob: -10.21593189239502

Token 1151: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14974263310432434
    2. '<|end|>' → logprob: -2.024742603302002
    3. '<|end|>' → logprob: -6.024742603302002
    4. '
' → logprob: -6.399742603302002
    5. '		' → logprob: -7.024742603302002
    6. '            
' → logprob: -7.649742603302002
    7. '   ' → logprob: -7.899742603302002
    8. '       ' → logprob: -8.39974308013916
    9. '	       ' → logprob: -8.39974308013916
    10. '```' → logprob: -9.02474308013916

Token 1152: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008940708357840776
    2. '<|end|>' → logprob: -8.375894546508789
    3. 'if' (adapté à ' if') → logprob: -8.500894546508789
    4. ' if' → logprob: -8.625894546508789
    5. 'driver' → logprob: -9.250894546508789
    6. '   ' → logprob: -9.750894546508789
    7. '       ' → logprob: -10.000894546508789
    8. ' ' → logprob: -10.625894546508789
    9. '```' → logprob: -11.250894546508789
    10. ' driver' → logprob: -11.500894546508789

Token 1153: ' not' (ID: 625)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'driver' → logprob: -0.6409004330635071
    2. ' driver' → logprob: -1.3909003734588623
    3. ' not' → logprob: -2.1409003734588623
    4. 'not' → logprob: -2.3909003734588623
    5. 'shop' → logprob: -4.515900611877441
    6. ' shop' → logprob: -5.765900611877441
    7. '   ' → logprob: -8.015900611877441
    8. '           ' → logprob: -8.140900611877441
    9. '       ' → logprob: -8.390900611877441
    10. '	driver' → logprob: -9.640900611877441

Token 1154: ' driver' (ID: 8931)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'driver' → logprob: -0.08315428346395493
    2. ' driver' → logprob: -3.0831542015075684
    3. 'shop' → logprob: -3.4581542015075684
    4. ' shop' → logprob: -6.208154201507568
    5. '           ' → logprob: -8.458154678344727
    6. '       ' → logprob: -9.083154678344727
    7. '(driver' → logprob: -10.333154678344727
    8. '   ' → logprob: -10.458154678344727
    9. '	driver' → logprob: -11.333154678344727
    10. '               ' → logprob: -11.583154678344727

Token 1155: '.on' (ID: 5158)
  Prédit: '.on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.on' → logprob: -0.0001940040965564549
    2. '.out' → logprob: -9.62519359588623
    3. '.next' → logprob: -10.00019359588623
    4. '.' → logprob: -10.50019359588623
    5. ' .' → logprob: -10.50019359588623
    6. '.in' → logprob: -11.62519359588623
    7. 'on' → logprob: -12.37519359588623
    8. '.location' → logprob: -12.75019359588623
    9. '._' → logprob: -12.87519359588623
    10. '().' → logprob: -13.12519359588623

Token 1156: 'Route' (ID: 7656)
  Prédit: 'Route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Route' → logprob: -0.0036595722194761038
    2. '_route' → logprob: -5.628659725189209
    3. 'route' → logprob: -9.87865924835205
    4. '	Route' → logprob: -13.25365924835205
    5. '_' → logprob: -13.75365924835205
    6. 'Road' → logprob: -13.87865924835205
    7. '.Route' → logprob: -14.25365924835205
    8. '(Route' → logprob: -14.25365924835205
    9. '_ROUTE' → logprob: -14.37865924835205
    10. '<Route' → logprob: -14.75365924835205

Token 1157: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.20411138236522675
    2. '():
' → logprob: -1.7041113376617432
    3. '()' → logprob: -6.329111576080322
    4. ':' → logprob: -7.079111576080322
    5. ':
' → logprob: -10.579111099243164
    6. ' or' → logprob: -11.079111099243164
    7. '():
' → logprob: -11.704111099243164
    8. ' and' → logprob: -11.954111099243164
    9. 'and' → logprob: -12.329111099243164
    10. '       ' → logprob: -13.454111099243164

Token 1158: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7853317856788635
    2. ':
' → logprob: -0.9103317856788635
    3. ' and' → logprob: -2.4103317260742188
    4. ' or' → logprob: -3.2853317260742188
    5. '           ' → logprob: -4.785331726074219
    6. 'and' → logprob: -6.160331726074219
    7. '               ' → logprob: -6.410331726074219
    8. '       ' → logprob: -6.410331726074219
    9. '():
' → logprob: -9.035331726074219
    10. '):
' → logprob: -9.160331726074219

Token 1159: ' driver' (ID: 8931)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.27816030383110046
    2. ' shop' → logprob: -1.5281603336334229
    3. 'self' → logprob: -4.903160095214844
    4. '(shop' → logprob: -5.153160095214844
    5. 'driver' → logprob: -5.278160095214844
    6. ' driver' → logprob: -5.778160095214844
    7. ' self' → logprob: -6.278160095214844
    8. ' (' → logprob: -7.028160095214844
    9. '           ' → logprob: -7.153160095214844
    10. '   ' → logprob: -8.528160095214844

Token 1160: '.location' (ID: 15725)
  Prédit: '.plan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -0.5947801470756531
    2. '.order' → logprob: -0.8447801470756531
    3. '.location' → logprob: -4.094779968261719
    4. '.route' → logprob: -6.844779968261719
    5. '.target' → logprob: -7.719779968261719
    6. '.' → logprob: -8.344779968261719
    7. '.next' → logprob: -9.219779968261719
    8. ' .' → logprob: -10.094779968261719
    9. '.shop' → logprob: -10.469779968261719
    10. '.orders' → logprob: -11.344779968261719

Token 1161: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.681419312953949
    2. ' in' → logprob: -0.931419312953949
    3. ' ==' → logprob: -3.3064193725585938
    4. '!=' → logprob: -3.5564193725585938
    5. ' not' → logprob: -3.6814193725585938
    6. 'in' → logprob: -5.181419372558594
    7. '==' → logprob: -5.556419372558594
    8. 'not' → logprob: -8.931419372558594
    9. '<|end|>' → logprob: -10.181419372558594
    10. ' ' → logprob: -10.431419372558594

Token 1162: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.375017166137695
    3. 'shop' → logprob: -12.375017166137695
    4. 'driver' → logprob: -13.875017166137695
    5. 'self' → logprob: -16.250017166137695
    6. '   ' → logprob: -16.750017166137695
    7. 'target' → logprob: -16.875017166137695
    8. ' ' → logprob: -17.250017166137695
    9. ' shop' → logprob: -18.125017166137695
    10. '0' → logprob: -18.125017166137695

Token 1163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022518415935337543
    2. 'shop' → logprob: -6.502251625061035
    3. 'driver' → logprob: -7.252251625061035
    4. ' ' → logprob: -11.002251625061035
    5. 'target' → logprob: -11.127251625061035
    6. 'self' → logprob: -12.502251625061035
    7. ' shop' → logprob: -14.127251625061035
    8. '   ' → logprob: -14.627251625061035
    9. 'sh' → logprob: -14.752251625061035
    10. '
' → logprob: -14.939751625061035

Token 1164: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.17671094834804535
    2. ' and' → logprob: -2.176710844039917
    3. ':' → logprob: -3.176710844039917
    4. '           ' → logprob: -5.426711082458496
    5. '               ' → logprob: -6.426711082458496
    6. 'and' → logprob: -7.926711082458496
    7. ' or' → logprob: -8.551711082458496
    8. '       ' → logprob: -9.301711082458496
    9. '):
' → logprob: -9.551711082458496
    10. ' :
' → logprob: -9.926711082458496

Token 1165: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023470476269721985
    2. '           ' → logprob: -3.773470401763916
    3. '       ' → logprob: -9.023470878601074
    4. '	       ' → logprob: -9.773470878601074
    5. '<|end|>' → logprob: -11.148470878601074
    6. '		       ' → logprob: -11.773470878601074
    7. '	           ' → logprob: -12.273470878601074
    8. '```' → logprob: -12.773470878601074
    9. '   ' → logprob: -12.898470878601074
    10. '                   ' → logprob: -13.023470878601074

Token 1166: ' driver' (ID: 8931)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'driver' (adapté à ' driver') → logprob: -0.13253994286060333
    2. '               ' → logprob: -2.382539987564087
    3. 'if' → logprob: -3.507539987564087
    4. '           ' → logprob: -7.132539749145508
    5. ' driver' → logprob: -7.507539749145508
    6. ' if' → logprob: -8.632539749145508
    7. '	driver' → logprob: -9.132539749145508
    8. 'for' → logprob: -9.507539749145508
    9. '                   ' → logprob: -10.382539749145508
    10. 'shop' → logprob: -10.882539749145508

Token 1167: '.order' (ID: 25549)
  Prédit: '.route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.route' → logprob: -9.491498531133402e-06
    2. '.' → logprob: -12.000009536743164
    3. '().' → logprob: -13.750009536743164
    4. '       ' → logprob: -13.750009536743164
    5. 'route' → logprob: -14.375009536743164
    6. ' .' → logprob: -15.875009536743164
    7. '           ' → logprob: -16.750009536743164
    8. '$route' → logprob: -17.000009536743164
    9. '.queue' → logprob: -17.250009536743164
    10. '(route' → logprob: -17.250009536743164

Token 1168: ' |=' (ID: 19917)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.023697754368185997
    2. '.' → logprob: -4.023697853088379
    3. '.update' → logprob: -5.773697853088379
    4. '.clear' → logprob: -6.148697853088379
    5. '.setdefault' → logprob: -9.023697853088379
    6. ' .' → logprob: -9.523697853088379
    7. '.union' → logprob: -9.898697853088379
    8. '().' → logprob: -11.898697853088379
    9. '           ' → logprob: -12.273697853088379
    10. '.append' → logprob: -12.273697853088379

Token 1169: ' shop' (ID: 9100)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' → logprob: -0.001035191467963159
    2. ' shop' → logprob: -6.876035213470459
    3. '(shop' → logprob: -13.3760347366333
    4. '   ' → logprob: -14.8760347366333
    5. 'shopping' → logprob: -16.501035690307617
    6. '       ' → logprob: -16.876035690307617
    7. '
' → logprob: -17.251035690307617
    8. 'shops' → logprob: -17.376035690307617
    9. 'sh' → logprob: -17.376035690307617
    10. ' ' → logprob: -17.751035690307617

Token 1170: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.0006050990778021514
    2. '.' → logprob: -7.50060510635376
    3. 'order' → logprob: -10.875604629516602
    4. ' .' → logprob: -11.000604629516602
    5. '.orders' → logprob: -11.875604629516602
    6. '_order' → logprob: -12.750604629516602
    7. '	order' → logprob: -13.500604629516602
    8. '.Order' → logprob: -14.125604629516602
    9. '(order' → logprob: -14.125604629516602
    10. '$order' → logprob: -14.250604629516602

Token 1171: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0070616696029901505
    2. '<|end|>' → logprob: -5.00706148147583
    3. '<|end|>' → logprob: -9.132061958312988
    4. '           ' → logprob: -9.257061958312988
    5. '		       ' → logprob: -10.132061958312988
    6. '			' → logprob: -11.007061958312988
    7. '       ' → logprob: -11.132061958312988
    8. '
' → logprob: -11.132061958312988
    9. '	           ' → logprob: -11.382061958312988
    10. '	       ' → logprob: -11.882061958312988

Token 1172: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006942047039046884
    2. '<|end|>' → logprob: -7.750694274902344
    3. '       ' → logprob: -9.750694274902344
    4. '```' → logprob: -10.125694274902344
    5. '                
' → logprob: -10.500694274902344
    6. '		       ' → logprob: -10.750694274902344
    7. '           ' → logprob: -10.750694274902344
    8. ' ' → logprob: -11.000694274902344
    9. '
' → logprob: -11.000694274902344
    10. '<|end|>' → logprob: -11.625694274902344

Token 1173: ' shop' (ID: 9100)
  Prédit: 'shop'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shop' (adapté à ' shop') → logprob: -0.10263293236494064
    2. '               ' → logprob: -2.352632999420166
    3. ' shop' → logprob: -6.102632999420166
    4. '
' → logprob: -9.352632522583008
    5. '                   ' → logprob: -10.102632522583008
    6. '           ' → logprob: -10.477632522583008
    7. '(shop' → logprob: -11.602632522583008
    8. '```' → logprob: -12.352632522583008
    9. '   ' → logprob: -12.602632522583008
    10. '       ' → logprob: -12.727632522583008

Token 1174: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.00010247035970678553
    2. '.' → logprob: -9.500102043151855
    3. 'order' → logprob: -10.625102043151855
    4. ' .' → logprob: -13.750102043151855
    5. '	order' → logprob: -14.000102043151855
    6. '.orders' → logprob: -14.750102043151855
    7. '.Order' → logprob: -15.625102043151855
    8. ' order' → logprob: -15.625102043151855
    9. '$order' → logprob: -15.750102043151855
    10. '.clear' → logprob: -16.250102996826172

Token 1175: '.clear' (ID: 13562)
  Prédit: '.clear'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.clear' → logprob: -0.00035810720873996615
    2. '=' → logprob: -8.000358581542969
    3. 'clear' → logprob: -11.250358581542969
    4. ' =' → logprob: -11.875358581542969
    5. '.' → logprob: -13.875358581542969
    6. '	clear' → logprob: -14.625358581542969
    7. '=set' → logprob: -15.000358581542969
    8. '.=' → logprob: -15.250358581542969
    9. '.Clear' → logprob: -15.375358581542969
    10. ' .' → logprob: -15.625358581542969

Token 1176: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2961671054363251
    2. '               ' → logprob: -1.4211671352386475
    3. '       ' → logprob: -5.046166896820068
    4. '<|end|>' → logprob: -5.921166896820068
    5. '
' → logprob: -6.046166896820068
    6. '	       ' → logprob: -6.546166896820068
    7. '<|end|>' → logprob: -7.296166896820068
    8. '            
' → logprob: -8.171167373657227
    9. '		' → logprob: -9.046167373657227
    10. '	' → logprob: -9.171167373657227

Token 1177: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49544408917427063
    2. '               ' → logprob: -0.9954440593719482
    3. '       ' → logprob: -3.8704440593719482
    4. '	       ' → logprob: -8.870444297790527
    5. '<|end|>' → logprob: -9.620444297790527
    6. '   ' → logprob: -10.745444297790527
    7. '```' → logprob: -11.495444297790527
    8. '                   ' → logprob: -11.495444297790527
    9. '	' → logprob: -11.870444297790527
    10. '		       ' → logprob: -11.995444297790527

Token 1178: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5486414432525635
    2. '           ' → logprob: -0.9236414432525635
    3. 'driver' → logprob: -4.048641204833984
    4. '   ' → logprob: -5.298641204833984
    5. ' driver' → logprob: -6.923641204833984
    6. '	driver' → logprob: -7.173641204833984
    7. '	       ' → logprob: -7.923641204833984
    8. '	' → logprob: -8.548641204833984
    9. '	   ' → logprob: -8.673641204833984
    10. '               ' → logprob: -9.423641204833984

Token 1179: ' not' (ID: 625)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'driver' → logprob: -0.08167204260826111
    2. ' driver' → logprob: -3.081671953201294
    3. 'not' → logprob: -3.706671953201294
    4. ' not' → logprob: -4.956672191619873
    5. 'self' → logprob: -7.081672191619873
    6. '(driver' → logprob: -10.081671714782715
    7. ' self' → logprob: -10.331671714782715
    8. '	driver' → logprob: -11.706671714782715
    9. 'shop' → logprob: -12.081671714782715
    10. '(not' → logprob: -12.456671714782715

Token 1180: ' driver' (ID: 8931)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'driver' → logprob: -0.10466951876878738
    2. ' driver' → logprob: -2.3546695709228516
    3. 'shop' → logprob: -5.604669570922852
    4. ' shop' → logprob: -7.604669570922852
    5. '(driver' → logprob: -9.354669570922852
    6. 'self' → logprob: -10.229669570922852
    7. ' (' → logprob: -10.479669570922852
    8. ' not' → logprob: -10.479669570922852
    9. 'not' → logprob: -10.604669570922852
    10. '(' → logprob: -10.729669570922852

Token 1181: '.on' (ID: 5158)
  Prédit: '.on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.on' → logprob: -0.015060209669172764
    2. '.order' → logprob: -4.8900604248046875
    3. '.plan' → logprob: -5.0150604248046875
    4. 'on' → logprob: -7.7650604248046875
    5. '.next' → logprob: -8.640060424804688
    6. '.' → logprob: -9.765060424804688
    7. 'order' → logprob: -10.265060424804688
    8. '.route' → logprob: -10.265060424804688
    9. 'plan' → logprob: -10.765060424804688
    10. '   ' → logprob: -11.890060424804688

Token 1182: 'Route' (ID: 7656)
  Prédit: 'Route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Route' → logprob: -1.0280383548888494e-06
    2. '_route' → logprob: -14.375000953674316
    3. '	Route' → logprob: -15.250000953674316
    4. '<Route' → logprob: -17.000001907348633
    5. 'route' → logprob: -17.125001907348633
    6. '.Route' → logprob: -18.000001907348633
    7. '_ROUTE' → logprob: -18.500001907348633
    8. '\Route' → logprob: -18.750001907348633
    9. ' Route' → logprob: -18.875001907348633
    10. '(Route' → logprob: -19.000001907348633

Token 1183: '():
' (ID: 8595)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0042848424054682255
    2. '():
' → logprob: -5.879284858703613
    3. ' and' → logprob: -7.379284858703613
    4. 'and' → logprob: -7.504284858703613
    5. '():' → logprob: -8.129284858703613
    6. ' ()' → logprob: -12.379284858703613
    7. '()
' → logprob: -14.004284858703613
    8. '       ' → logprob: -14.004284858703613
    9. '   ' → logprob: -14.379284858703613
    10. ':' → logprob: -14.504284858703613

Token 1184: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.747814349073451e-05
    2. '           ' → logprob: -11.500017166137695
    3. '   ' → logprob: -12.875017166137695
    4. '	       ' → logprob: -13.750017166137695
    5. '        
' → logprob: -13.875017166137695
    6. ' ' → logprob: -15.000017166137695
    7. 'self' → logprob: -15.125017166137695
    8. ':
' → logprob: -15.250017166137695
    9. '	' → logprob: -15.250017166137695
    10. ',' → logprob: -15.500017166137695

Token 1185: ' driver' (ID: 8931)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20247386395931244
    2. 'driver' (adapté à ' driver') → logprob: -2.0774738788604736
    3. '               ' → logprob: -2.9524738788604736
    4. '       ' → logprob: -5.8274736404418945
    5. ' driver' → logprob: -5.9524736404418945
    6. '   ' → logprob: -8.452473640441895
    7. '	driver' → logprob: -10.577473640441895
    8. 'dr' → logprob: -10.827473640441895
    9. 'self' → logprob: -11.577473640441895
    10. '(driver' → logprob: -12.327473640441895

Token 1186: '.route' (ID: 24746)
  Prédit: '.route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.route' → logprob: -1.8908587662735954e-05
    2. '.' → logprob: -11.000019073486328
    3. ' .' → logprob: -14.250019073486328
    4. '       ' → logprob: -14.750019073486328
    5. 'route' → logprob: -14.875019073486328
    6. '().' → logprob: -15.500019073486328
    7. '.plan' → logprob: -16.000019073486328
    8. '.router' → logprob: -16.000019073486328
    9. '.Route' → logprob: -16.625019073486328
    10. '$route' → logprob: -16.875019073486328

Token 1187: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1188: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44111981987953186
    2. '           ' → logprob: -1.0661197900772095
    3. '   ' → logprob: -5.56611967086792
    4. '	' → logprob: -6.19111967086792
    5. '<|end|>' → logprob: -6.19111967086792
    6. '	       ' → logprob: -6.56611967086792
    7. '
' → logprob: -6.94111967086792
    8. '		' → logprob: -7.19111967086792
    9. '               ' → logprob: -7.44111967086792
    10. '<|end|>' → logprob: -8.691120147705078

Token 1189: ' driver' (ID: 8931)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1292588710784912
    2. '       ' → logprob: -2.129258871078491
    3. '               ' → logprob: -6.50425910949707
    4. '   ' → logprob: -7.75425910949707
    5. '	       ' → logprob: -9.00425910949707
    6. '		' → logprob: -9.25425910949707
    7. 'driver' (adapté à ' driver') → logprob: -9.37925910949707
    8. '	' → logprob: -9.75425910949707
    9. '	   ' → logprob: -11.25425910949707
    10. '                   ' → logprob: -12.37925910949707

Token 1190: '.move' (ID: 24425)
  Prédit: '.move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.move' → logprob: -0.0015046248445287347
    2. '.' → logprob: -6.501504421234131
    3. '.
' → logprob: -14.001504898071289
    4. ' .' → logprob: -14.126504898071289
    5. '().' → logprob: -15.751504898071289
    6. '.Move' → logprob: -16.25150489807129
    7. '.m' → logprob: -16.75150489807129
    8. 'move' → logprob: -16.87650489807129
    9. ').' → logprob: -17.00150489807129
    10. '​.' → logprob: -17.00150489807129

Token 1191: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1192: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8961964249610901
    2. '<|end|>' → logprob: -1.3961963653564453
    3. 'for' → logprob: -1.7711963653564453
    4. 'while' → logprob: -2.3961963653564453
    5. '#' → logprob: -2.8961963653564453
    6. 'out' → logprob: -4.771196365356445
    7. '<|end|>' → logprob: -5.271196365356445
    8. 'def' → logprob: -5.521196365356445
    9. '```' → logprob: -5.646196365356445
    10. '
' → logprob: -7.021196365356445

Token 1193: ' out' (ID: 842)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1194: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.09569709002971649
    2. '.flush' → logprob: -2.5956971645355225
    3. '.' → logprob: -4.095696926116943
    4. '.close' → logprob: -10.970697402954102
    5. ' .' → logprob: -13.220697402954102
    6. '.writerow' → logprob: -13.970697402954102
    7. '.w' → logprob: -14.220697402954102
    8. 'write' → logprob: -14.345697402954102
    9. '.Write' → logprob: -14.345697402954102
    10. '.readline' → logprob: -14.720697402954102

Token 1195: '("' (ID: 568)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.31528377532958984
    2. '(f' → logprob: -1.3152837753295898
    3. '('' → logprob: -6.94028377532959
    4. '('{}' → logprob: -7.69028377532959
    5. '("{}' → logprob: -8.19028377532959
    6. '(' → logprob: -8.81528377532959
    7. '("' → logprob: -9.56528377532959
    8. 'f' → logprob: -10.06528377532959
    9. 'str' → logprob: -10.19028377532959
    10. '(self' → logprob: -12.19028377532959

Token 1196: 'status' (ID: 6063)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.11926241964101791
    2. 'f' → logprob: -2.244262456893921
    3. '"' → logprob: -5.994262218475342
    4. '(str' → logprob: -5.994262218475342
    5. '"{' → logprob: -7.619262218475342
    6. '(f' → logprob: -8.1192626953125
    7. ' str' → logprob: -8.7442626953125
    8. ''' → logprob: -8.8692626953125
    9. ' f' → logprob: -8.8692626953125
    10. '("{}' → logprob: -9.6192626953125

Token 1197: ' after' (ID: 1934)
  Prédit: ' {}\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}\' → logprob: -0.2867109477519989
    2. ' {}' → logprob: -2.1617109775543213
    3. '\n' → logprob: -2.7867109775543213
    4. ':' → logprob: -3.9117109775543213
    5. ' =' → logprob: -4.786710739135742
    6. '=' → logprob: -5.286710739135742
    7. '{}' → logprob: -5.411710739135742
    8. ' %' → logprob: -5.411710739135742
    9. '{}\' → logprob: -5.411710739135742
    10. ' {' → logprob: -5.536710739135742

Token 1198: ' :' (ID: 712)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6312661170959473
    2. ' driver' → logprob: -1.3812661170959473
    3. 'self' → logprob: -2.3812661170959473
    4. ' move' → logprob: -2.6312661170959473
    5. 'driver' → logprob: -4.006266117095947
    6. ' '' → logprob: -5.381266117095947
    7. ' curr' → logprob: -5.506266117095947
    8. ' step' → logprob: -5.631266117095947
    9. 'curr' → logprob: -6.006266117095947
    10. ''' → logprob: -6.256266117095947

Token 1199: ' ")
' (ID: 31232)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3641808331012726
    2. ' f' → logprob: -1.8641808032989502
    3. ' str' → logprob: -3.73918080329895
    4. 'str' → logprob: -4.239181041717529
    5. 'f' → logprob: -4.239181041717529
    6. '{}\' → logprob: -4.239181041717529
    7. ' {}\' → logprob: -4.364181041717529
    8. '"' → logprob: -4.739181041717529
    9. 'self' → logprob: -4.739181041717529
    10. ''\' → logprob: -4.989181041717529

Token 1200: '           ' (ID: 352)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.002373035065829754
    2. 'for' → logprob: -6.377373218536377
    3. 'str' → logprob: -8.377372741699219
    4. ' out' → logprob: -8.752372741699219
    5. 'print' → logprob: -9.252372741699219
    6. 'repr' → logprob: -9.877372741699219
    7. '('' → logprob: -10.002372741699219
    8. '''.' → logprob: -10.377372741699219
    9. '"' → logprob: -11.377372741699219
    10. 'f' → logprob: -11.502372741699219

Token 1201: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' (adapté à ' out') → logprob: -0.0041299303993582726
    2. 'for' → logprob: -5.504129886627197
    3. ' out' → logprob: -10.129130363464355
    4. 'str' → logprob: -12.504130363464355
    5. 'repr' → logprob: -12.879130363464355
    6. ' for' → logprob: -13.754130363464355
    7. '       ' → logprob: -14.504130363464355
    8. 'outfile' → logprob: -14.504130363464355
    9. 'print' → logprob: -14.629130363464355
    10. '   ' → logprob: -14.629130363464355

Token 1202: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.0012708279537037015
    2. '.' → logprob: -7.126270771026611
    3. '.w' → logprob: -8.12627124786377
    4. 'write' → logprob: -9.00127124786377
    5. '.flush' → logprob: -10.00127124786377
    6. 'out' → logprob: -14.00127124786377
    7. '.seek' → logprob: -14.75127124786377
    8. ' .' → logprob: -15.75127124786377
    9. 'w' → logprob: -16.001270294189453
    10. '   ' → logprob: -16.251270294189453

Token 1203: '("' (ID: 568)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.058224838227033615
    2. '(f' → logprob: -3.30822491645813
    3. 'str' → logprob: -4.058224678039551
    4. '("{}' → logprob: -6.558224678039551
    5. '("' → logprob: -7.808224678039551
    6. 'repr' → logprob: -8.18322467803955
    7. '('' → logprob: -8.30822467803955
    8. 'f' → logprob: -8.30822467803955
    9. '(re' → logprob: -9.93322467803955
    10. '('{}' → logprob: -10.68322467803955

Token 1204: 'shop' (ID: 10595)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0025005098432302475
    2. 'f' → logprob: -6.252500534057617
    3. 'repr' → logprob: -8.377500534057617
    4. '"' → logprob: -8.502500534057617
    5. ''' → logprob: -9.127500534057617
    6. ' str' → logprob: -11.002500534057617
    7. '(str' → logprob: -12.127500534057617
    8. '"\' → logprob: -12.877500534057617
    9. '"{' → logprob: -13.502500534057617
    10. ''\' → logprob: -14.377500534057617

Token 1205: ' status' (ID: 4495)
  Prédit: '.order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.0785345509648323
    2. '".' → logprob: -2.9535346031188965
    3. ''.' → logprob: -4.0785346031188965
    4. '.' → logprob: -5.8285346031188965
    5. 'order' → logprob: -6.9535346031188965
    6. '"' → logprob: -6.9535346031188965
    7. '"."' → logprob: -7.9535346031188965
    8. '.status' → logprob: -8.078534126281738
    9. ''' → logprob: -8.453534126281738
    10. '.orders' → logprob: -9.078534126281738

Token 1206: ' :' (ID: 712)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.0522656440734863
    2. '=' → logprob: -1.8022656440734863
    3. ' str' → logprob: -1.9272656440734863
    4. ' +' → logprob: -2.3022656440734863
    5. ' =' → logprob: -3.0522656440734863
    6. ''' → logprob: -3.1772656440734863
    7. '=str' → logprob: -3.1772656440734863
    8. '"' → logprob: -3.4272656440734863
    9. '(str' → logprob: -3.5522656440734863
    10. ':' → logprob: -3.8022656440734863

Token 1207: ' "' (ID: 392)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0449044443666935
    2. ' str' → logprob: -3.6699044704437256
    3. 'repr' → logprob: -4.6699042320251465
    4. '"' → logprob: -5.5449042320251465
    5. 'f' → logprob: -6.2949042320251465
    6. ''' → logprob: -6.5449042320251465
    7. ' f' → logprob: -6.6699042320251465
    8. ' repr' → logprob: -7.6699042320251465
    9. '(str' → logprob: -9.294904708862305
    10. '"{' → logprob: -11.544904708862305

Token 1208: ' +' (ID: 659)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.03308489918708801
    2. '+' → logprob: -3.5330848693847656
    3. 'f' → logprob: -6.533084869384766
    4. ' +' → logprob: -7.283084869384766
    5. '"' → logprob: -8.033084869384766
    6. '(str' → logprob: -8.033084869384766
    7. '"{' → logprob: -8.533084869384766
    8. '{}' → logprob: -9.033084869384766
    9. 'repr' → logprob: -9.533084869384766
    10. '{' → logprob: -10.033084869384766

Token 1209: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0005687602679245174
    2. 'repr' → logprob: -7.500568866729736
    3. ' str' → logprob: -11.750568389892578
    4. '"' → logprob: -12.375568389892578
    5. '(str' → logprob: -13.625568389892578
    6. ''' → logprob: -13.875568389892578
    7. '','.' → logprob: -15.000568389892578
    8. ' repr' → logprob: -15.125568389892578
    9. '",".' → logprob: -15.125568389892578
    10. 'f' → logprob: -15.250568389892578

Token 1210: '(shop' (ID: 170425)
  Prédit: '(shop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(shop' → logprob: -0.0015135504072532058
    2. '(driver' → logprob: -6.501513481140137
    3. 'shop' → logprob: -11.751513481140137
    4. '(' → logprob: -13.376513481140137
    5. '(dr' → logprob: -14.251513481140137
    6. '(ship' → logprob: -14.751513481140137
    7. '(len' → logprob: -15.376513481140137
    8. '(sh' → logprob: -15.376513481140137
    9. '((' → logprob: -15.751513481140137
    10. '(s' → logprob: -17.001514434814453

Token 1211: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.0002918446552939713
    2. '.' → logprob: -8.25029182434082
    3. '().' → logprob: -11.12529182434082
    4. ' .' → logprob: -11.87529182434082
    5. '.orders' → logprob: -13.25029182434082
    6. '.status' → logprob: -13.75029182434082
    7. '(order' → logprob: -13.75029182434082
    8. '.location' → logprob: -14.37529182434082
    9. '.state' → logprob: -14.50029182434082
    10. '.output' → logprob: -14.75029182434082

Token 1212: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003164414083585143
    2. '))
' → logprob: -6.253164291381836
    3. ')+' → logprob: -7.378164291381836
    4. '))' → logprob: -7.753164291381836
    5. ')+"' → logprob: -9.378164291381836
    6. ')+'' → logprob: -9.878164291381836
    7. ' )' → logprob: -10.878164291381836
    8. ')
' → logprob: -11.128164291381836
    9. ' ))
' → logprob: -12.378164291381836
    10. '   ' → logprob: -12.378164291381836

Token 1213: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00781659409403801
    2. 'out' → logprob: -4.882816791534424
    3. ' out' → logprob: -9.382816314697266
    4. '```' → logprob: -10.257816314697266
    5. '       ' → logprob: -10.382816314697266
    6. '
' → logprob: -11.507816314697266
    7. '\n' → logprob: -11.632816314697266
    8. '   ' → logprob: -12.007816314697266
    9. '<|end|>' → logprob: -12.382816314697266
    10. '``' → logprob: -12.382816314697266

Token 1214: ' out' (ID: 842)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024567043408751488
    2. 'out' (adapté à ' out') → logprob: -4.024567127227783
    3. '\n' → logprob: -5.274567127227783
    4. ' out' → logprob: -8.024566650390625
    5. '"\' → logprob: -8.399566650390625
    6. ''\' → logprob: -8.399566650390625
    7. '\' → logprob: -8.899566650390625
    8. '            
' → logprob: -9.274566650390625
    9. '       ' → logprob: -9.774566650390625
    10. '
' → logprob: -9.899566650390625

Token 1215: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -7.600714161526412e-05
    2. '.' → logprob: -9.500076293945312
    3. '.flush' → logprob: -14.500076293945312
    4. 'write' → logprob: -15.375076293945312
    5. '.Write' → logprob: -16.000076293945312
    6. ' .' → logprob: -16.000076293945312
    7. '.out' → logprob: -17.000076293945312
    8. 'out' → logprob: -17.125076293945312
    9. '.w' → logprob: -17.125076293945312
    10. '.writerow' → logprob: -18.875076293945312

Token 1216: '("' (ID: 568)
  Prédit: '("\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("\' → logprob: -0.020860085263848305
    2. '("' → logprob: -4.020860195159912
    3. '('\' → logprob: -6.020860195159912
    4. '(",' → logprob: -8.770859718322754
    5. '(' → logprob: -9.145859718322754
    6. '('' → logprob: -12.020859718322754
    7. '("("' → logprob: -12.395859718322754
    8. '(":' → logprob: -13.020859718322754
    9. '("")' → logprob: -14.020859718322754
    10. '(
' → logprob: -14.020859718322754

Token 1217: 'driver' (ID: 18821)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.0047926343977451324
    2. ''\' → logprob: -5.8797926902771
    3. '\n' → logprob: -6.3797926902771
    4. ' "\' → logprob: -9.129792213439941
    5. '"' → logprob: -9.379792213439941
    6. '"
' → logprob: -9.879792213439941
    7. '("\' → logprob: -10.629792213439941
    8. '",' → logprob: -11.254792213439941
    9. '\' → logprob: -12.504792213439941
    10. '('\' → logprob: -13.504792213439941

Token 1218: ' status' (ID: 4495)
  Prédit: ' status'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' status' → logprob: -0.010722829028964043
    2. '.status' → logprob: -5.260722637176514
    3. 'status' → logprob: -5.260722637176514
    4. ' location' → logprob: -8.885723114013672
    5. ''' → logprob: -10.510723114013672
    6. '"' → logprob: -10.760723114013672
    7. '_status' → logprob: -10.885723114013672
    8. '	status' → logprob: -11.260723114013672
    9. ' .' → logprob: -11.760723114013672
    10. ' order' → logprob: -12.010723114013672

Token 1219: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.05598946288228035
    2. ':' → logprob: -2.9309895038604736
    3. ' +' → logprob: -7.0559892654418945
    4. '"' → logprob: -9.305989265441895
    5. '+' → logprob: -9.805989265441895
    6. ' ' → logprob: -10.055989265441895
    7. '":' → logprob: -11.055989265441895
    8. ' =' → logprob: -12.430989265441895
    9. '          ' → logprob: -12.430989265441895
    10. '   ' → logprob: -12.680989265441895

Token 1220: ' ")
' (ID: 31232)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2868368327617645
    2. ' "' → logprob: -1.411836862564087
    3. ''' → logprob: -6.036836624145508
    4. ' '' → logprob: -6.411836624145508
    5. ' f' → logprob: -6.911836624145508
    6. ' str' → logprob: -8.161836624145508
    7. ' ' → logprob: -8.161836624145508
    8. 'str' → logprob: -10.661836624145508
    9. ' +' → logprob: -11.036836624145508
    10. ' repr' → logprob: -11.286836624145508

Token 1221: '           ' (ID: 352)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.00044616201194003224
    2. ' out' → logprob: -7.750446319580078
    3. '           ' → logprob: -11.250446319580078
    4. 'for' → logprob: -13.000446319580078
    5. '(out' → logprob: -16.250446319580078
    6. '```' → logprob: -17.875446319580078
    7. '	out' → logprob: -18.000446319580078
    8. '[out' → logprob: -18.125446319580078
    9. '       ' → logprob: -18.750446319580078
    10. '   ' → logprob: -19.000446319580078

Token 1222: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' (adapté à ' out') → logprob: -5.300083648762666e-05
    2. 'for' → logprob: -10.375053405761719
    3. ' out' → logprob: -10.750053405761719
    4. '           ' → logprob: -15.500053405761719
    5. '       ' → logprob: -17.37505340576172
    6. '
' → logprob: -17.50005340576172
    7. 'import' → logprob: -19.00005340576172
    8. '	out' → logprob: -19.00005340576172
    9. '```' → logprob: -19.25005340576172
    10. ' for' → logprob: -19.25005340576172

Token 1223: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.011165490373969078
    2. 'write' → logprob: -4.511165618896484
    3. 'out' → logprob: -9.136165618896484
    4. '.flush' → logprob: -12.011165618896484
    5. '.' → logprob: -14.011165618896484
    6. '.w' → logprob: -14.261165618896484
    7. 'flush' → logprob: -14.261165618896484
    8. '   ' → logprob: -14.386165618896484
    9. 'w' → logprob: -15.136165618896484
    10. '(write' → logprob: -15.511165618896484

Token 1224: '("' (ID: 568)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.0010050622513517737
    2. 'str' → logprob: -7.501005172729492
    3. '("("' → logprob: -8.251005172729492
    4. '(' → logprob: -8.751005172729492
    5. '("' → logprob: -10.626005172729492
    6. '("'"' → logprob: -12.751005172729492
    7. '(""' → logprob: -13.376005172729492
    8. '("(' → logprob: -13.876005172729492
    9. '(""+' → logprob: -14.126005172729492
    10. '('' → logprob: -14.501005172729492

Token 1225: 'order' (ID: 2143)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00011212585377506912
    2. ' str' → logprob: -10.125112533569336
    3. '"\' → logprob: -10.500112533569336
    4. '"' → logprob: -10.750112533569336
    5. '(str' → logprob: -12.000112533569336
    6. '+' → logprob: -12.625112533569336
    7. '\n' → logprob: -12.750112533569336
    8. 'repr' → logprob: -13.250112533569336
    9. '[str' → logprob: -13.375112533569336
    10. 'out' → logprob: -13.375112533569336

Token 1226: ' :' (ID: 712)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6028224229812622
    2. 's' → logprob: -0.8528224229812622
    3. '=' → logprob: -4.477822303771973
    4. ':' → logprob: -5.352822303771973
    5. ' set' → logprob: -5.977822303771973
    6. '.' → logprob: -6.477822303771973
    7. '=set' → logprob: -6.477822303771973
    8. '.set' → logprob: -6.852822303771973
    9. 'set' → logprob: -7.102822303771973
    10. '.add' → logprob: -7.727822303771973

Token 1227: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.036876797676086426
    2. 'str' → logprob: -3.411876678466797
    3. ' str' → logprob: -6.286876678466797
    4. ' "' → logprob: -7.036876678466797
    5. '{' → logprob: -8.661876678466797
    6. '"+' → logprob: -9.411876678466797
    7. ''' → logprob: -9.536876678466797
    8. 's' → logprob: -10.036876678466797
    9. '"s' → logprob: -10.536876678466797
    10. '{}' → logprob: -10.661876678466797

Token 1228: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07718341052532196
    2. ' +' → logprob: -3.077183485031128
    3. 'str' → logprob: -3.577183485031128
    4. '"' → logprob: -9.577183723449707
    5. ')' → logprob: -9.952183723449707
    6. ' str' → logprob: -10.202183723449707
    7. '(str' → logprob: -10.702183723449707
    8. '""' → logprob: -10.827183723449707
    9. '{' → logprob: -11.327183723449707
    10. '[str' → logprob: -11.827183723449707

Token 1229: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.000264315924141556
    2. ' str' → logprob: -8.250264167785645
    3. 'repr' → logprob: -12.875264167785645
    4. '"' → logprob: -15.500264167785645
    5. '	str' → logprob: -16.50026512145996
    6. '(str' → logprob: -16.87526512145996
    7. '   ' → logprob: -17.50026512145996
    8. ' ' → logprob: -17.75026512145996
    9. '  ' → logprob: -18.37526512145996
    10. '[str' → logprob: -18.75026512145996

Token 1230: '(driver' (ID: 40061)
  Prédit: '(driver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(driver' → logprob: -0.0007168424781411886
    2. 'driver' → logprob: -7.250716686248779
    3. '(' → logprob: -12.000717163085938
    4. '(dr' → logprob: -14.375717163085938
    5. ' driver' → logprob: -17.000717163085938
    6. '	driver' → logprob: -17.125717163085938
    7. '((' → logprob: -18.125717163085938
    8. '(get' → logprob: -18.375717163085938
    9. '(
' → logprob: -18.625717163085938
    10. '(list' → logprob: -18.875717163085938

Token 1231: '.order' (ID: 25549)
  Prédit: '.order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.order' → logprob: -0.0001801801408873871
    2. '.' → logprob: -9.3751802444458
    3. '.plan' → logprob: -9.5001802444458
    4. ' .' → logprob: -11.2501802444458
    5. 'order' → logprob: -13.0001802444458
    6. '.route' → logprob: -13.7501802444458
    7. '.orders' → logprob: -13.8751802444458
    8. ''.' → logprob: -14.6251802444458
    9. '`.' → logprob: -14.7501802444458
    10. '".' → logprob: -14.8751802444458

Token 1232: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1737401783466339
    2. ')' → logprob: -2.1737401485443115
    3. ' +' → logprob: -3.7987401485443115
    4. '+' → logprob: -4.423740386962891
    5. '           ' → logprob: -4.673740386962891
    6. '+"\' → logprob: -7.298740386962891
    7. ')+' → logprob: -7.548740386962891
    8. '+"' → logprob: -8.67374038696289
    9. ')+"' → logprob: -9.17374038696289
    10. ' )
' → logprob: -9.29874038696289

Token 1233: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5832788348197937
    2. 'out' → logprob: -0.8332788348197937
    3. ' out' → logprob: -5.833278656005859
    4. '       ' → logprob: -6.458278656005859
    5. '   ' → logprob: -7.333278656005859
    6. '\n' → logprob: -7.333278656005859
    7. '('\' → logprob: -8.08327865600586
    8. '```' → logprob: -8.45827865600586
    9. '          ' → logprob: -8.83327865600586
    10. '(out' → logprob: -9.08327865600586

Token 1234: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' (adapté à ' out') → logprob: -0.2848697006702423
    2. '"\' → logprob: -2.15986967086792
    3. '           ' → logprob: -2.40986967086792
    4. ' out' → logprob: -3.53486967086792
    5. '\n' → logprob: -5.15986967086792
    6. ''\' → logprob: -5.28486967086792
    7. '("\' → logprob: -7.53486967086792
    8. '"' → logprob: -8.034870147705078
    9. '``' → logprob: -8.159870147705078
    10. '"
' → logprob: -8.284870147705078

Token 1235: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.0002370329457335174
    2. 'rite' → logprob: -8.500237464904785
    3. 'write' → logprob: -11.000237464904785
    4. '.' → logprob: -11.125237464904785
    5. '().' → logprob: -14.500237464904785
    6. 'riter' → logprob: -14.625237464904785
    7. 'riting' → logprob: -15.500237464904785
    8. ' .' → logprob: -15.750237464904785
    9. 'rites' → logprob: -15.875237464904785
    10. '.
' → logprob: -16.00023651123047

Token 1236: '("|' (ID: 83692)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3610539436340332
    2. '("\' → logprob: -1.3610539436340332
    3. '("("' → logprob: -3.111053943634033
    4. '('\' → logprob: -6.986053943634033
    5. '(' → logprob: -7.236053943634033
    6. '('' → logprob: -8.611053466796875
    7. '(",' → logprob: -9.236053466796875
    8. '(":' → logprob: -9.611053466796875
    9. '("(' → logprob: -9.736053466796875
    10. '(("' → logprob: -10.736053466796875

Token 1237: ' plan' (ID: 3496)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3562438488006592
    2. '"\' → logprob: -1.4812438488006592
    3. ''\' → logprob: -2.731243848800659
    4. ' "\' → logprob: -6.481244087219238
    5. ' \' → logprob: -6.856244087219238
    6. ' '\' → logprob: -6.856244087219238
    7. '"' → logprob: -6.981244087219238
    8. ''' → logprob: -6.981244087219238
    9. '\' → logprob: -7.231244087219238
    10. 'n' → logprob: -8.106244087219238

Token 1238: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.40675264596939087
    2. ':' → logprob: -1.406752586364746
    3. ' =' → logprob: -2.531752586364746
    4. '")' → logprob: -5.531752586364746
    5. '\n' → logprob: -6.406752586364746
    6. '=' → logprob: -7.781752586364746
    7. ':\' → logprob: -7.781752586364746
    8. '.append' → logprob: -7.906752586364746
    9. '"' → logprob: -8.156752586364746
    10. '[:]' → logprob: -8.156752586364746

Token 1239: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7453892230987549
    2. ' "' → logprob: -1.4953892230987549
    3. ' str' → logprob: -1.4953892230987549
    4. 'str' → logprob: -2.620389223098755
    5. ''' → logprob: -6.120388984680176
    6. ' '' → logprob: -6.370388984680176
    7. ' repr' → logprob: -8.870388984680176
    8. ' ' → logprob: -9.245388984680176
    9. ' ' → logprob: -9.745388984680176
    10. '[str' → logprob: -9.995388984680176

Token 1240: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6682780981063843
    2. 'str' → logprob: -1.4182780981063843
    3. '+' → logprob: -1.7932780981063843
    4. 'out' → logprob: -3.793278217315674
    5. 'driver' → logprob: -4.168278217315674
    6. 'self' → logprob: -4.543278217315674
    7. 'len' → logprob: -4.793278217315674
    8. ')
' → logprob: -5.168278217315674
    9. '(driver' → logprob: -5.418278217315674
    10. ''' → logprob: -6.043278217315674

Token 1241: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.01129266619682312
    2. ' str' → logprob: -4.511292457580566
    3. '"' → logprob: -8.386292457580566
    4. ''' → logprob: -11.261292457580566
    5. 'repr' → logprob: -12.886292457580566
    6. '(str' → logprob: -14.886292457580566
    7. ' "' → logprob: -14.886292457580566
    8. '[str' → logprob: -15.511292457580566
    9. '	str' → logprob: -15.636292457580566
    10. ' repr' → logprob: -15.886292457580566

Token 1242: '(driver' (ID: 40061)
  Prédit: '(driver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(driver' → logprob: -2.45848218582978e-06
    2. '(dr' → logprob: -13.50000286102295
    3. '(' → logprob: -14.00000286102295
    4. 'driver' → logprob: -16.125001907348633
    5. '(handler' → logprob: -18.500001907348633
    6. '(sender' → logprob: -18.500001907348633
    7. '(str' → logprob: -18.625001907348633
    8. '(player' → logprob: -19.000001907348633
    9. '(self' → logprob: -19.500001907348633
    10. '(operator' → logprob: -19.625001907348633

Token 1243: '.plan' (ID: 96013)
  Prédit: '.plan'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.plan' → logprob: -0.003161676460877061
    2. '.route' → logprob: -5.878161907196045
    3. '.' → logprob: -8.503161430358887
    4. ' .' → logprob: -9.628161430358887
    5. '.order' → logprob: -10.128161430358887
    6. ').' → logprob: -10.503161430358887
    7. '.pl' → logprob: -12.503161430358887
    8. '   ' → logprob: -12.878161430358887
    9. '.target' → logprob: -13.128161430358887
    10. ''.' → logprob: -13.128161430358887

Token 1244: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02794070355594158
    2. ')+' → logprob: -4.02794075012207
    3. '+' → logprob: -5.02794075012207
    4. ')
' → logprob: -6.27794075012207
    5. '           ' → logprob: -7.65294075012207
    6. ')+"' → logprob: -8.40294075012207
    7. ' +' → logprob: -8.52794075012207
    8. ')+'' → logprob: -8.90294075012207
    9. '   ' → logprob: -9.90294075012207
    10. '[' → logprob: -10.02794075012207

Token 1245: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.33053719997406006
    2. 'out' → logprob: -1.33053719997406
    3. '"\' → logprob: -4.70553731918335
    4. '       ' → logprob: -6.58053731918335
    5. '\n' → logprob: -6.70553731918335
    6. '('\' → logprob: -6.83053731918335
    7. '   ' → logprob: -7.08053731918335
    8. '("\' → logprob: -7.08053731918335
    9. '          ' → logprob: -7.45553731918335
    10. ''\' → logprob: -7.83053731918335

Token 1246: ' out' (ID: 842)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38895732164382935
    2. 'out' (adapté à ' out') → logprob: -1.1389572620391846
    3. ' out' → logprob: -7.013957500457764
    4. '\n' → logprob: -7.888957500457764
    5. '```' → logprob: -8.513957023620605
    6. '       ' → logprob: -8.888957023620605
    7. '"\' → logprob: -9.138957023620605
    8. '   ' → logprob: -9.513957023620605
    9. '('\' → logprob: -9.513957023620605
    10. '``' → logprob: -10.138957023620605

Token 1247: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -2.868328920158092e-05
    2. 'write' → logprob: -10.625028610229492
    3. '.' → logprob: -12.875028610229492
    4. ' .' → logprob: -14.500028610229492
    5. '.w' → logprob: -14.875028610229492
    6. '.Write' → logprob: -15.375028610229492
    7. '_write' → logprob: -15.500028610229492
    8. '```' → logprob: -16.000028610229492
    9. '.flush' → logprob: -16.375028610229492
    10. '(write' → logprob: -16.625028610229492

Token 1248: '("|' (ID: 83692)
  Prédit: '("\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("\' → logprob: -0.04769862815737724
    2. '("' → logprob: -3.547698736190796
    3. '('\' → logprob: -4.047698497772217
    4. '('' → logprob: -8.672698974609375
    5. '(' → logprob: -9.047698974609375
    6. '("("' → logprob: -11.297698974609375
    7. '(",' → logprob: -12.172698974609375
    8. '(("' → logprob: -12.422698974609375
    9. '"\' → logprob: -12.672698974609375
    10. '(":' → logprob: -12.922698974609375

Token 1249: ' on' (ID: 402)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.17042450606822968
    2. '"' → logprob: -2.795424461364746
    3. ''\' → logprob: -3.295424461364746
    4. 'str' → logprob: -3.795424461364746
    5. ' str' → logprob: -4.295424461364746
    6. 'target' → logprob: -4.670424461364746
    7. '\n' → logprob: -6.045424461364746
    8. ''' → logprob: -6.170424461364746
    9. 'next' → logprob: -6.295424461364746
    10. ' "\' → logprob: -6.420424461364746

Token 1250: ' route' (ID: 9656)
  Prédit: 'Route'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Route' → logprob: -0.08071348071098328
    2. '_route' → logprob: -2.5807135105133057
    3. 'route' → logprob: -6.330713272094727
    4. '	Route' → logprob: -11.205713272094727
    5. 'Road' → logprob: -11.830713272094727
    6. ' route' → logprob: -12.455713272094727
    7. '_ROUTE' → logprob: -13.205713272094727
    8. '
' → logprob: -13.455713272094727
    9. 'Target' → logprob: -13.580713272094727
    10. '\Route' → logprob: -13.580713272094727

Token 1251: ' :' (ID: 712)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.3241581916809082
    2. '\n' → logprob: -1.3241581916809082
    3. ':' → logprob: -2.199158191680908
    4. ' =' → logprob: -2.324158191680908
    5. '=' → logprob: -2.324158191680908
    6. '=True' → logprob: -2.824158191680908
    7. '()\' → logprob: -3.449158191680908
    8. '")' → logprob: -3.574158191680908
    9. ' :' → logprob: -4.574158191680908
    10. '"' → logprob: -4.574158191680908

Token 1252: ' "' (ID: 392)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.6552072763442993
    2. ' "' → logprob: -1.2802072763442993
    3. '"' → logprob: -1.9052072763442993
    4. 'str' → logprob: -3.2802071571350098
    5. ' '' → logprob: -4.78020715713501
    6. ''' → logprob: -5.40520715713501
    7. ' ' → logprob: -6.65520715713501
    8. ' ' → logprob: -7.15520715713501
    9. ' True' → logprob: -8.405207633972168
    10. '(str' → logprob: -8.405207633972168

Token 1253: ' +' (ID: 659)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.009449345991015434
    2. ' str' → logprob: -5.634449481964111
    3. '"' → logprob: -6.134449481964111
    4. ')' → logprob: -6.634449481964111
    5. '")' → logprob: -7.384449481964111
    6. '+' → logprob: -8.009449005126953
    7. '   ' → logprob: -8.259449005126953
    8. 'driver' → logprob: -8.259449005126953
    9. ' +' → logprob: -8.509449005126953
    10. '(str' → logprob: -8.509449005126953

Token 1254: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.2755177915096283
    2. ' str' → logprob: -1.5255178213119507
    3. '"' → logprob: -3.900517702102661
    4. ' "' → logprob: -6.27551794052124
    5. ''' → logprob: -6.90051794052124
    6. '(str' → logprob: -9.400517463684082
    7. ' '' → logprob: -9.900517463684082
    8. '("' → logprob: -11.275517463684082
    9. ' f' → logprob: -11.400517463684082
    10. ' ("' → logprob: -11.650517463684082

Token 1255: '(driver' (ID: 40061)
  Prédit: '(driver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(driver' → logprob: -0.02391904592514038
    2. 'driver' → logprob: -3.773919105529785
    3. '(' → logprob: -7.523919105529785
    4. ' driver' → logprob: -9.398919105529785
    5. '(dr' → logprob: -10.648919105529785
    6. 'bool' → logprob: -11.898919105529785
    7. '(str' → logprob: -12.273919105529785
    8. '	driver' → logprob: -12.523919105529785
    9. '(bool' → logprob: -13.148919105529785
    10. 'str' → logprob: -13.398919105529785

Token 1256: '.on' (ID: 5158)
  Prédit: '.on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.on' → logprob: -0.4100683629512787
    2. '.next' → logprob: -1.410068392753601
    3. 'Left' → logprob: -2.7850682735443115
    4. '())' → logprob: -3.9100682735443115
    5. '()' → logprob: -5.785068511962891
    6. '().' → logprob: -6.410068511962891
    7. 'Next' → logprob: -6.535068511962891
    8. '.target' → logprob: -6.785068511962891
    9. 'on' → logprob: -7.035068511962891
    10. '())
' → logprob: -7.410068511962891

Token 1257: 'Route' (ID: 7656)
  Prédit: 'Route'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Route' → logprob: -2.5776860184123507e-06
    2. 'route' → logprob: -13.62500286102295
    3. '_route' → logprob: -14.25000286102295
    4. '	Route' → logprob: -15.25000286102295
    5. '.Route' → logprob: -16.500001907348633
    6. '<Route' → logprob: -16.500001907348633
    7. '
' → logprob: -16.625001907348633
    8. '_R' → logprob: -16.625001907348633
    9. '_ROUTE' → logprob: -17.750001907348633
    10. '\Route' → logprob: -17.875001907348633

Token 1258: '()))
' (ID: 24521)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.009567185305058956
    2. '())
' → logprob: -4.7595672607421875
    3. '()))
' → logprob: -7.5095672607421875
    4. '()' → logprob: -8.134567260742188
    5. ')' → logprob: -9.259567260742188
    6. '()))' → logprob: -11.884567260742188
    7. '())

' → logprob: -12.759567260742188
    8. '()
' → logprob: -13.259567260742188
    9. '   ' → logprob: -14.009567260742188
    10. '())
' → logprob: -14.634567260742188

Token 1259: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4610546827316284
    2. '('\' → logprob: -1.7110546827316284
    3. '("\' → logprob: -2.211054801940918
    4. 'out' → logprob: -2.836054801940918
    5. '"\' → logprob: -4.586054801940918
    6. '(out' → logprob: -6.336054801940918
    7. '\n' → logprob: -6.336054801940918
    8. '       ' → logprob: -6.461054801940918
    9. '   ' → logprob: -6.586054801940918
    10. ''\' → logprob: -6.836054801940918

Token 1260: ' out' (ID: 842)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21056705713272095
    2. 'out' (adapté à ' out') → logprob: -1.7105669975280762
    3. '\n' → logprob: -5.835566997528076
    4. '"\' → logprob: -6.335566997528076
    5. ' out' → logprob: -6.960566997528076
    6. '('\' → logprob: -7.085566997528076
    7. '```' → logprob: -7.210566997528076
    8. ''\' → logprob: -7.335566997528076
    9. '   ' → logprob: -8.210567474365234
    10. '       ' → logprob: -8.335567474365234

Token 1261: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.0006589424447156489
    2. '().' → logprob: -7.875658988952637
    3. '.' → logprob: -8.625658988952637
    4. 'write' → logprob: -9.375658988952637
    5. '.
' → logprob: -12.000658988952637
    6. 'rite' → logprob: -13.250658988952637
    7. ' .' → logprob: -13.625658988952637
    8. '.\' → logprob: -14.250658988952637
    9. '.flush' → logprob: -14.500658988952637
    10. '_.' → logprob: -14.500658988952637

Token 1262: '("|' (ID: 83692)
  Prédit: '("\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("\' → logprob: -0.07079032063484192
    2. '("' → logprob: -2.8207902908325195
    3. '('\' → logprob: -4.8207902908325195
    4. '('' → logprob: -8.07079029083252
    5. '(' → logprob: -8.57079029083252
    6. '("("' → logprob: -8.57079029083252
    7. '(",' → logprob: -11.44579029083252
    8. '(":' → logprob: -12.19579029083252
    9. '("(' → logprob: -12.32079029083252
    10. '("")' → logprob: -12.44579029083252

Token 1263: ' location' (ID: 5100)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.18704353272914886
    2. ' str' → logprob: -2.8120434284210205
    3. 'str' → logprob: -3.0620434284210205
    4. ''\' → logprob: -3.4370434284210205
    5. ' "\' → logprob: -4.8120436668396
    6. '"' → logprob: -4.9370436668396
    7. '\n' → logprob: -4.9370436668396
    8. 'self' → logprob: -6.3120436668396
    9. 'next' → logprob: -6.4370436668396
    10. 'driver' → logprob: -6.8120436668396

Token 1264: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.3659723699092865
    2. ' +' → logprob: -1.9909723997116089
    3. ' =' → logprob: -2.4909722805023193
    4. ':' → logprob: -2.7409722805023193
    5. '=' → logprob: -3.9909722805023193
    6. ' ==' → logprob: -7.240972518920898
    7. '+' → logprob: -7.490972518920898
    8. '"' → logprob: -7.615972518920898
    9. ')' → logprob: -7.865972518920898
    10. '==' → logprob: -7.990972518920898

Token 1265: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7698057889938354
    2. ' str' → logprob: -1.3948057889938354
    3. 'str' → logprob: -1.3948057889938354
    4. ' "' → logprob: -3.519805908203125
    5. ''' → logprob: -5.269805908203125
    6. ' f' → logprob: -5.394805908203125
    7. ' '' → logprob: -6.519805908203125
    8. 'repr' → logprob: -9.144805908203125
    9. 'f' → logprob: -9.269805908203125
    10. '(str' → logprob: -10.019805908203125

Token 1266: ' +' (ID: 659)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.023657822981476784
    2. ' str' → logprob: -3.77365779876709
    3. '"' → logprob: -8.52365779876709
    4. '(str' → logprob: -9.02365779876709
    5. '	str' → logprob: -9.52365779876709
    6. '               ' → logprob: -12.14865779876709
    7. '=str' → logprob: -12.52365779876709
    8. ' +' → logprob: -12.77365779876709
    9. '+' → logprob: -13.02365779876709
    10. '           ' → logprob: -13.02365779876709

Token 1267: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.6157962083816528
    2. ' str' → logprob: -1.3657962083816528
    3. '"' → logprob: -1.6157962083816528
    4. ' "' → logprob: -5.615796089172363
    5. ''' → logprob: -6.240796089172363
    6. ' '' → logprob: -8.740796089172363
    7. ' f' → logprob: -9.240796089172363
    8. 'repr' → logprob: -11.365796089172363
    9. 'f' → logprob: -11.740796089172363
    10. '(str' → logprob: -11.990796089172363

Token 1268: '(driver' (ID: 40061)
  Prédit: '(driver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(driver' → logprob: -0.0005703099304810166
    2. '(' → logprob: -7.750570297241211
    3. 'driver' → logprob: -10.000570297241211
    4. '(dr' → logprob: -10.125570297241211
    5. '(self' → logprob: -10.250570297241211
    6. '('' → logprob: -11.625570297241211
    7. '("' → logprob: -12.125570297241211
    8. '(
' → logprob: -13.625570297241211
    9. 'self' → logprob: -14.375570297241211
    10. '(f' → logprob: -14.375570297241211

Token 1269: '.location' (ID: 15725)
  Prédit: '.location'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.location' → logprob: -0.00023607931507285684
    2. '.' → logprob: -8.875236511230469
    3. ')' → logprob: -10.000236511230469
    4. 'location' → logprob: -10.500236511230469
    5. ' .' → logprob: -12.250236511230469
    6. '.driver' → logprob: -12.500236511230469
    7. '(location' → logprob: -12.750236511230469
    8. '	location' → logprob: -12.875236511230469
    9. ' location' → logprob: -13.500236511230469
    10. '   ' → logprob: -13.625236511230469

Token 1270: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3579244315624237
    2. ')' → logprob: -1.732924461364746
    3. '           ' → logprob: -2.232924461364746
    4. '+' → logprob: -4.607924461364746
    5. ')\' → logprob: -6.107924461364746
    6. ')+' → logprob: -6.607924461364746
    7. '+"\' → logprob: -6.857924461364746
    8. ' +' → logprob: -7.357924461364746
    9. '+'\' → logprob: -7.607924461364746
    10. '   ' → logprob: -8.232924461364746

Token 1271: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07654891163110733
    2. 'out' → logprob: -2.7015488147735596
    3. '       ' → logprob: -6.076549053192139
    4. '\n' → logprob: -6.951549053192139
    5. '```' → logprob: -7.201549053192139
    6. '('\' → logprob: -7.451549053192139
    7. '   ' → logprob: -7.576549053192139
    8. ''\' → logprob: -7.951549053192139
    9. ' out' → logprob: -8.20154857635498
    10. '          ' → logprob: -8.32654857635498

Token 1272: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' (adapté à ' out') → logprob: -0.2392791211605072
    2. '           ' → logprob: -1.7392791509628296
    3. '"\' → logprob: -3.73927903175354
    4. '\n' → logprob: -5.239279270172119
    5. ''\' → logprob: -5.364279270172119
    6. ' out' → logprob: -6.364279270172119
    7. '('\' → logprob: -7.364279270172119
    8. '("\' → logprob: -8.239278793334961
    9. '       ' → logprob: -8.739278793334961
    10. '```' → logprob: -8.864278793334961

Token 1273: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.0004971518646925688
    2. 'write' → logprob: -7.750497341156006
    3. 't' → logprob: -11.125496864318848
    4. '"\' → logprob: -12.000496864318848
    5. ''\' → logprob: -12.250496864318848
    6. 'd' → logprob: -12.375496864318848
    7. '   ' → logprob: -12.625496864318848
    8. '\n' → logprob: -12.625496864318848
    9. 'w' → logprob: -12.625496864318848
    10. '.readline' → logprob: -12.875496864318848

Token 1274: '("|' (ID: 83692)
  Prédit: '("\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("\' → logprob: -0.04585379362106323
    2. '("' → logprob: -3.545853853225708
    3. '('\' → logprob: -4.420853614807129
    4. '("")' → logprob: -6.170853614807129
    5. '(' → logprob: -7.045853614807129
    6. '('' → logprob: -7.795853614807129
    7. '("("' → logprob: -7.795853614807129
    8. '(""' → logprob: -9.795853614807129
    9. '(",' → logprob: -10.170853614807129
    10. '()' → logprob: -10.170853614807129

Token 1275: ' target' (ID: 3783)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.003091812133789
    2. ' str' → logprob: -1.253091812133789
    3. ' next' → logprob: -1.878091812133789
    4. 'str' → logprob: -2.128091812133789
    5. 'next' → logprob: -3.753091812133789
    6. ' target' → logprob: -3.878091812133789
    7. 'target' → logprob: -3.878091812133789
    8. ' "' → logprob: -5.253091812133789
    9. ' f' → logprob: -5.503091812133789
    10. ''' → logprob: -7.503091812133789

Token 1276: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.3278065621852875
    2. ':' → logprob: -1.3278065919876099
    3. ' =' → logprob: -4.82780647277832
    4. '=' → logprob: -5.82780647277832
    5. ' +' → logprob: -5.82780647277832
    6. ')' → logprob: -7.95280647277832
    7. '+' → logprob: -9.45280647277832
    8. '"' → logprob: -9.82780647277832
    9. '")' → logprob: -11.32780647277832
    10. ' ' → logprob: -11.45280647277832

Token 1277: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.24544942378997803
    2. ' str' → logprob: -2.3704495429992676
    3. ''' → logprob: -2.6204495429992676
    4. ' "' → logprob: -3.7454495429992676
    5. 'str' → logprob: -4.495449542999268
    6. ' '' → logprob: -4.745449542999268
    7. ' f' → logprob: -5.495449542999268
    8. ' ' → logprob: -6.245449542999268
    9. ' ' → logprob: -6.995449542999268
    10. ')' → logprob: -7.620449542999268

Token 1278: ' +' (ID: 659)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2990627884864807
    2. 'str' → logprob: -1.674062728881836
    3. ' str' → logprob: -3.049062728881836
    4. ' +' → logprob: -4.424062728881836
    5. ' "' → logprob: -5.299062728881836
    6. '+' → logprob: -5.549062728881836
    7. ')' → logprob: -6.924062728881836
    8. ''' → logprob: -7.049062728881836
    9. '=str' → logprob: -8.799062728881836
    10. '               ' → logprob: -9.049062728881836

Token 1279: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.8006635308265686
    2. ' str' → logprob: -0.8006635308265686
    3. '"' → logprob: -2.300663471221924
    4. ' "' → logprob: -6.675663471221924
    5. ''' → logprob: -7.675663471221924
    6. ' '' → logprob: -11.675663948059082
    7. '(str' → logprob: -13.050663948059082
    8. ' f' → logprob: -13.300663948059082
    9. 'repr' → logprob: -13.800663948059082
    10. ' ' → logprob: -13.925663948059082

Token 1280: '(driver' (ID: 40061)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.642024040222168
    2. 'driver' → logprob: -1.392024040222168
    3. '(driver' → logprob: -2.267024040222168
    4. '"' → logprob: -2.642024040222168
    5. 'self' → logprob: -3.392024040222168
    6. '(str' → logprob: -5.267024040222168
    7. ' str' → logprob: -5.392024040222168
    8. ' driver' → logprob: -6.392024040222168
    9. '               ' → logprob: -6.892024040222168
    10. ' "' → logprob: -7.392024040222168

Token 1281: '.target' (ID: 11090)
  Prédit: '.target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.target' → logprob: -9.968312951968983e-06
    2. 'target' → logprob: -11.750009536743164
    3. ')' → logprob: -14.125009536743164
    4. '[target' → logprob: -14.125009536743164
    5. '	target' → logprob: -15.625009536743164
    6. '.next' → logprob: -16.250009536743164
    7. '   ' → logprob: -16.500009536743164
    8. '[' → logprob: -16.500009536743164
    9. '_target' → logprob: -16.625009536743164
    10. ' .' → logprob: -17.000009536743164

Token 1282: '))
' (ID: 2210)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.716051459312439
    2. '           ' → logprob: -0.966051459312439
    3. ')' → logprob: -2.2160515785217285
    4. ')\' → logprob: -3.9660515785217285
    5. '   ' → logprob: -6.7160515785217285
    6. '+' → logprob: -7.8410515785217285
    7. ')+' → logprob: -7.9660515785217285
    8. ' +' → logprob: -8.84105110168457
    9. '")' → logprob: -8.84105110168457
    10. '       ' → logprob: -9.09105110168457

Token 1283: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9385676980018616
    2. 'out' → logprob: -1.3135676383972168
    3. '"\' → logprob: -1.9385676383972168
    4. '\n' → logprob: -2.563567638397217
    5. ''\' → logprob: -2.563567638397217
    6. '   ' → logprob: -4.563567638397217
    7. '('\' → logprob: -4.563567638397217
    8. '       ' → logprob: -5.063567638397217
    9. '
' → logprob: -5.813567638397217
    10. '("\' → logprob: -5.813567638397217

Token 1284: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' (adapté à ' out') → logprob: -0.03505934774875641
    2. '           ' → logprob: -3.6600594520568848
    3. '\n' → logprob: -5.410059452056885
    4. ' out' → logprob: -6.660059452056885
    5. ''\' → logprob: -6.910059452056885
    6. '```' → logprob: -7.410059452056885
    7. '"\' → logprob: -7.785059452056885
    8. '
' → logprob: -8.160058975219727
    9. '       ' → logprob: -9.035058975219727
    10. '            
' → logprob: -9.035058975219727

Token 1285: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -4.310693111619912e-05
    2. '.' → logprob: -10.125042915344238
    3. '.w' → logprob: -13.750042915344238
    4. 'write' → logprob: -14.125042915344238
    5. '.Write' → logprob: -14.875042915344238
    6. '.flush' → logprob: -15.125042915344238
    7. ' .' → logprob: -15.625042915344238
    8. '.writerow' → logprob: -15.875042915344238
    9. '.
' → logprob: -16.250043869018555
    10. '   ' → logprob: -17.000043869018555

Token 1286: '("|' (ID: 83692)
  Prédit: '("\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("\' → logprob: -0.09031518548727036
    2. '("' → logprob: -2.590315103530884
    3. '('\' → logprob: -4.965315341949463
    4. '("("' → logprob: -6.090315341949463
    5. '(' → logprob: -6.965315341949463
    6. '('' → logprob: -7.340315341949463
    7. '("")' → logprob: -7.840315341949463
    8. '(":' → logprob: -10.465314865112305
    9. '(""' → logprob: -10.590314865112305
    10. '(
' → logprob: -10.715314865112305

Token 1287: ' left' (ID: 3561)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.6087655425071716
    2. ' next' → logprob: -0.9837655425071716
    3. 'str' → logprob: -3.4837656021118164
    4. '"' → logprob: -3.4837656021118164
    5. 'next' → logprob: -3.9837656021118164
    6. '"\' → logprob: -7.108765602111816
    7. ' f' → logprob: -7.358765602111816
    8. ''' → logprob: -8.483765602111816
    9. ' "' → logprob: -8.608765602111816
    10. '\n' → logprob: -9.608765602111816

Token 1288: ' time' (ID: 1058)
  Prédit: 'time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'time' → logprob: -1.089043140411377
    2. 'Segment' → logprob: -1.214043140411377
    3. '_time' → logprob: -1.964043140411377
    4. 'Time' → logprob: -2.464043140411377
    5. ' time' → logprob: -2.839043140411377
    6. '_segment' → logprob: -3.589043140411377
    7. '_' → logprob: -3.714043140411377
    8. 'over' → logprob: -4.589043140411377
    9. 'times' → logprob: -5.214043140411377
    10. ':' → logprob: -5.214043140411377

Token 1289: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.12695467472076416
    2. ':' → logprob: -2.1269545555114746
    3. ' =' → logprob: -11.001955032348633
    4. '=' → logprob: -12.376955032348633
    5. '"' → logprob: -13.751955032348633
    6. ' ' → logprob: -14.001955032348633
    7. '   ' → logprob: -14.126955032348633
    8. '":' → logprob: -14.751955032348633
    9. ' to' → logprob: -14.876955032348633
    10. '：' → logprob: -15.251955032348633

Token 1290: ' "' (ID: 392)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.7390546798706055
    2. '"' → logprob: -0.8640546798706055
    3. ' f' → logprob: -3.2390546798706055
    4. ' "' → logprob: -3.3640546798706055
    5. 'str' → logprob: -3.7390546798706055
    6. ''' → logprob: -6.3640546798706055
    7. ' '' → logprob: -6.7390546798706055
    8. ' ' → logprob: -8.489054679870605
    9. ' ' → logprob: -8.989054679870605
    10. 'f' → logprob: -9.614054679870605

Token 1291: ' +' (ID: 659)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.08109652251005173
    2. ' str' → logprob: -2.5810964107513428
    3. '"' → logprob: -6.206096649169922
    4. '(str' → logprob: -9.456096649169922
    5. '	str' → logprob: -10.206096649169922
    6. '=str' → logprob: -10.206096649169922
    7. ' "' → logprob: -11.456096649169922
    8. ''' → logprob: -11.456096649169922
    9. ' f' → logprob: -13.331096649169922
    10. ' ' → logprob: -13.331096649169922

Token 1292: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.47417035698890686
    2. ' str' → logprob: -0.9741703271865845
    3. '"' → logprob: -9.349170684814453
    4. '           ' → logprob: -13.224170684814453
    5. '	str' → logprob: -13.474170684814453
    6. '(str' → logprob: -13.724170684814453
    7. ''' → logprob: -14.224170684814453
    8. '=str' → logprob: -14.724170684814453
    9. '               ' → logprob: -15.349170684814453
    10. ' f' → logprob: -15.599170684814453

Token 1293: '(driver' (ID: 40061)
  Prédit: '(driver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(driver' → logprob: -0.09410063177347183
    2. '(self' → logprob: -2.5941007137298584
    3. '(' → logprob: -4.344100475311279
    4. 'self' → logprob: -6.969100475311279
    5. '(dr' → logprob: -7.344100475311279
    6. '(str' → logprob: -8.219100952148438
    7. 'driver' → logprob: -8.719100952148438
    8. '(
' → logprob: -10.594100952148438
    9. 'str' → logprob: -10.719100952148438
    10. '('' → logprob: -11.094100952148438

Token 1294: '.next' (ID: 6689)
  Prédit: '.next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.next' → logprob: -1.3902033970225602e-05
    2. '.' → logprob: -11.375014305114746
    3. 'next' → logprob: -13.250014305114746
    4. ' .' → logprob: -14.500014305114746
    5. ' next' → logprob: -17.87501335144043
    6. '[next' → logprob: -17.87501335144043
    7. '   ' → logprob: -18.00001335144043
    8. '	next' → logprob: -18.25001335144043
    9. 'Next' → logprob: -18.75001335144043
    10. '
' → logprob: -19.00001335144043

Token 1295: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -9.088346359931165e-07
    2. '_segment' → logprob: -14.875000953674316
    3. ' Segment' → logprob: -15.250000953674316
    4. '_S' → logprob: -16.75
    5. 'Seg' → logprob: -18.125
    6. 'Segments' → logprob: -18.125
    7. '[' → logprob: -18.625
    8. '_SEG' → logprob: -18.75
    9. 'Target' → logprob: -18.875
    10. '(S' → logprob: -19.0

Token 1296: 'Left' (ID: 7471)
  Prédit: 'Time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -0.31327536702156067
    2. 'Left' → logprob: -1.3132753372192383
    3. 'Times' → logprob: -13.063275337219238
    4. 'Le' → logprob: -13.063275337219238
    5. '_time' → logprob: -13.063275337219238
    6. 'Ti' → logprob: -13.688275337219238
    7. ')' → logprob: -14.188275337219238
    8. 'left' → logprob: -14.313275337219238
    9. 'Tim' → logprob: -14.313275337219238
    10. 'Temps' → logprob: -14.313275337219238

Token 1297: 'Time' (ID: 1929)
  Prédit: 'Time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Time' → logprob: -1.7432603272027336e-06
    2. 'Ti' → logprob: -13.500001907348633
    3. '	Time' → logprob: -16.750001907348633
    4. 'time' → logprob: -17.000001907348633
    5. ' Time' → logprob: -17.125001907348633
    6. 'Times' → logprob: -17.375001907348633
    7. '_time' → logprob: -17.500001907348633
    8. '   ' → logprob: -17.500001907348633
    9. 'Tim' → logprob: -17.500001907348633
    10. ')' → logprob: -17.750001907348633

Token 1298: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4728837311267853
    2. '           ' → logprob: -1.722883701324463
    3. ' +' → logprob: -2.347883701324463
    4. ')' → logprob: -3.097883701324463
    5. '+' → logprob: -4.097883701324463
    6. '+"\' → logprob: -4.347883701324463
    7. '+'\' → logprob: -4.847883701324463
    8. ')\' → logprob: -4.847883701324463
    9. '()' → logprob: -5.222883701324463
    10. '\n' → logprob: -5.847883701324463

Token 1299: ' +' (ID: 659)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04169130697846413
    2. ')
' → logprob: -4.291691303253174
    3. ')' → logprob: -5.041691303253174
    4. '"\' → logprob: -5.541691303253174
    5. '\n' → logprob: -5.541691303253174
    6. '('\' → logprob: -5.791691303253174
    7. ''\' → logprob: -6.416691303253174
    8. '   ' → logprob: -6.416691303253174
    9. '("\' → logprob: -6.416691303253174
    10. ')\' → logprob: -6.541691303253174

Token 1300: ' '\' (ID: 10855)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.031707633286714554
    2. ''\' → logprob: -3.531707525253296
    3. '\n' → logprob: -6.281707763671875
    4. ' "\' → logprob: -10.531707763671875
    5. '"' → logprob: -10.906707763671875
    6. '           ' → logprob: -11.281707763671875
    7. ')
' → logprob: -11.781707763671875
    8. '   ' → logprob: -12.281707763671875
    9. '
' → logprob: -12.656707763671875
    10. '"
' → logprob: -12.781707763671875

Token 1301: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5760801434516907
    2. '\n' → logprob: -0.8260801434516907
    3. ''\' → logprob: -9.076080322265625
    4. '
' → logprob: -11.576080322265625
    5. '"\' → logprob: -11.951080322265625
    6. '\' → logprob: -12.701080322265625
    7. 'u' → logprob: -13.451080322265625
    8. '')' → logprob: -13.826080322265625
    9. '('\' → logprob: -13.951080322265625
    10. '\
' → logprob: -14.451080322265625

Token 1302: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5266587138175964
    2. ')' → logprob: -0.9016587138175964
    3. '       ' → logprob: -6.651658535003662
    4. '")' → logprob: -6.901658535003662
    5. '\n' → logprob: -7.651658535003662
    6. '           ' → logprob: -8.65165901184082
    7. '```' → logprob: -8.65165901184082
    8. '<|end|>' → logprob: -8.65165901184082
    9. '')
' → logprob: -9.52665901184082
    10. ')
' → logprob: -9.65165901184082

Token 1303: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5959729552268982
    2. 'for' → logprob: -0.9709729552268982
    3. 'def' → logprob: -3.345973014831543
    4. '#' → logprob: -4.220973014831543
    5. 'while' → logprob: -4.470973014831543
    6. '<|end|>' → logprob: -5.470973014831543
    7. 'data' → logprob: -6.470973014831543
    8. 'shop' → logprob: -7.345973014831543
    9. 'out' → logprob: -7.595973014831543
    10. 'import' → logprob: -7.720973014831543

Token 1304: ' out' (ID: 842)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1305: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -0.7154251337051392
    2. '.flush' → logprob: -0.7154251337051392
    3. '.' → logprob: -3.8404250144958496
    4. '.close' → logprob: -7.59042501449585
    5. '.readline' → logprob: -11.215425491333008
    6. '.seek' → logprob: -12.215425491333008
    7. ' .' → logprob: -12.215425491333008
    8. '.
' → logprob: -12.590425491333008
    9. 'write' → logprob: -12.840425491333008
    10. '.w' → logprob: -12.840425491333008

Token 1306: '("' (ID: 568)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.48588836193084717
    2. '("\' → logprob: -1.1108883619308472
    3. '("")' → logprob: -3.3608884811401367
    4. '('' → logprob: -4.860888481140137
    5. '("' → logprob: -4.985888481140137
    6. '(' → logprob: -6.110888481140137
    7. '(""' → logprob: -6.485888481140137
    8. '(f' → logprob: -7.610888481140137
    9. '((' → logprob: -7.860888481140137
    10. '("--------------------------------' → logprob: -7.985888481140137

Token 1307: '================================' (ID: 6288)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1308: '\' (ID: 59)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.0060219415463507175
    2. '===' → logprob: -6.006021976470947
    3. '========' → logprob: -7.131021976470947
    4. '====' → logprob: -7.131021976470947
    5. '=\' → logprob: -7.131021976470947
    6. '================================' → logprob: -7.756021976470947
    7. '=======' → logprob: -8.256021499633789
    8. '==' → logprob: -8.506021499633789
    9. '\' → logprob: -10.256021499633789
    10. '================' → logprob: -10.381021499633789

Token 1309: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.19578620791435242
    2. '===' → logprob: -1.9457862377166748
    3. '====' → logprob: -3.945786237716675
    4. '========' → logprob: -5.445785999298096
    5. '===
' → logprob: -5.695785999298096
    6. '================================' → logprob: -6.195785999298096
    7. '====
' → logprob: -6.445785999298096
    8. '==' → logprob: -6.945785999298096
    9. 'n' → logprob: -7.070785999298096
    10. '=======' → logprob: -7.195785999298096

Token 1310: '")

' (ID: 10822)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1311: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05324695631861687
    2. 'def' → logprob: -3.4282469749450684
    3. 'timer' → logprob: -4.553246974945068
    4. '#' → logprob: -4.928246974945068
    5. 'for' → logprob: -7.928246974945068
    6. 't' → logprob: -8.30324649810791
    7. '<|end|>' → logprob: -8.42824649810791
    8. '<|end|>' → logprob: -8.67824649810791
    9. 'shop' → logprob: -8.92824649810791
    10. '```' → logprob: -9.05324649810791

Token 1312: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.006716079078614712
    2. '__' → logprob: -5.006716251373291
    3. ' ' → logprob: -14.881715774536133
    4. ' ' → logprob: -16.256715774536133
    5. 'name' → logprob: -16.506715774536133
    6. ' "__' → logprob: -17.006715774536133
    7. ' '__' → logprob: -17.631715774536133
    8. '___' → logprob: -17.631715774536133
    9. 'not' → logprob: -17.756715774536133
    10. '  ' → logprob: -17.881715774536133

Token 1313: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004063678905367851
    2. ' __' → logprob: -5.879063606262207
    3. '_' → logprob: -6.754063606262207
    4. '__':
' → logprob: -11.004063606262207
    5. '__
' → logprob: -11.004063606262207
    6. '__":
' → logprob: -11.254063606262207
    7. '__[' → logprob: -12.254063606262207
    8. '__["' → logprob: -12.379063606262207
    9. '___' → logprob: -12.379063606262207
    10. '____' → logprob: -12.504063606262207

Token 1314: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.3856492842023727e-06
    2. '==' → logprob: -14.250000953674316
    3. 'name' → logprob: -14.625000953674316
    4. '__
' → logprob: -16.125001907348633
    5. '__.__' → logprob: -16.750001907348633
    6. '____' → logprob: -17.125001907348633
    7. ' ==' → logprob: -17.375001907348633
    8. '___' → logprob: -17.500001907348633
    9. '__.' → logprob: -17.750001907348633
    10. '__('' → logprob: -18.250001907348633

Token 1315: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0009697027853690088
    2. '==' → logprob: -7.000969886779785
    3. '_' → logprob: -10.875969886779785
    4. ' ==' → logprob: -11.000969886779785
    5. '=="' → logprob: -11.375969886779785
    6. '=' → logprob: -12.750969886779785
    7. '__
' → logprob: -13.000969886779785
    8. '=='' → logprob: -13.375969886779785
    9. '___' → logprob: -13.625969886779785
    10. '==
' → logprob: -13.625969886779785

Token 1316: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4743739068508148
    2. '"' → logprob: -0.9743739366531372
    3. ' "__' → logprob: -8.849373817443848
    4. ' '__' → logprob: -8.974373817443848
    5. '__' → logprob: -10.599373817443848
    6. '('__' → logprob: -14.974373817443848
    7. ''name' → logprob: -15.724373817443848
    8. ''"' → logprob: -15.724373817443848
    9. '"name' → logprob: -16.099374771118164
    10. '"user' → logprob: -16.224374771118164

Token 1317: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9623810658231378e-05
    2. 'name' → logprob: -10.875020027160645
    3. '__' → logprob: -14.625020027160645
    4. '_main' → logprob: -16.750019073486328
    5. ' main' → logprob: -17.625019073486328
    6. 'ma' → logprob: -17.750019073486328
    7. 'built' → logprob: -18.250019073486328
    8. 'm' → logprob: -19.000019073486328
    9. 'init' → logprob: -19.125019073486328
    10. '-main' → logprob: -19.375019073486328

Token 1318: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.3886202871799469
    2. '__' → logprob: -1.1386202573776245
    3. '__':
' → logprob: -6.513620376586914
    4. '__:' → logprob: -8.263620376586914
    5. '_' → logprob: -12.388620376586914
    6. '__["' → logprob: -13.888620376586914
    7. '__
' → logprob: -14.638620376586914
    8. '__.__' → logprob: -14.763620376586914
    9. '___' → logprob: -15.888620376586914
    10. '__",' → logprob: -16.013620376586914

Token 1319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00504862517118454
    2. 'g' → logprob: -5.380048751831055
    3. 'graph' → logprob: -8.255048751831055
    4. ' g' → logprob: -9.380048751831055
    5. '	g' → logprob: -10.255048751831055
    6. ' graph' → logprob: -10.380048751831055
    7. '	graph' → logprob: -11.255048751831055
    8. ',g' → logprob: -14.005048751831055
    9. '   ' → logprob: -14.255048751831055
    10. '
' → logprob: -14.380048751831055

Token 1320: ' s' (ID: 265)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0015941266901791096
    2. 'data' → logprob: -6.876594066619873
    3. 'graph' → logprob: -8.126594543457031
    4. '   ' → logprob: -8.626594543457031
    5. 'G' → logprob: -10.251594543457031
    6. 'raw' → logprob: -10.876594543457031
    7. 'gr' → logprob: -11.251594543457031
    8. 'n' → logprob: -11.376594543457031
    9. 'N' → logprob: -12.876594543457031
    10. '_g' → logprob: -13.751594543457031

Token 1321: ' =' (ID: 314)
  Prédit: 'hop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hop' → logprob: -0.11832232773303986
    2. 'h' → logprob: -2.7433223724365234
    3. ' =' → logprob: -3.3683223724365234
    4. '=' → logprob: -4.743322372436523
    5. 't' → logprob: -6.243322372436523
    6. '   ' → logprob: -7.368322372436523
    7. 'hp' → logprob: -7.493322372436523
    8. 'ho' → logprob: -7.868322372436523
    9. 'hopper' → logprob: -8.618322372436523
    10. 'e' → logprob: -10.118322372436523

Token 1322: ' shop' (ID: 9100)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.20273222029209137
    2. 'shop' → logprob: -1.7027322053909302
    3. ' graph' → logprob: -7.202732086181641
    4. 'timer' → logprob: -8.20273208618164
    5. 'raw' → logprob: -8.45273208618164
    6. ' shop' → logprob: -10.07773208618164
    7. 'sys' → logprob: -10.45273208618164
    8. 'shopping' → logprob: -12.45273208618164
    9. 'ship' → logprob: -12.95273208618164
    10. 'stock' → logprob: -13.45273208618164

Token 1323: '()
' (ID: 1234)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.08867507427930832
    2. 't' → logprob: -3.338675022125244
    3. '<|end|>' → logprob: -3.588675022125244
    4. '
' → logprob: -4.713675022125244
    5. ' =' → logprob: -5.088675022125244
    6. '   ' → logprob: -6.088675022125244
    7. ',g' → logprob: -7.088675022125244
    8. ',' → logprob: -7.338675022125244
    9. ' g' → logprob: -7.338675022125244
    10. '<|end|>' → logprob: -7.963675022125244

Token 1324: '   ' (ID: 271)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.2840944230556488
    2. '   ' → logprob: -1.4090944528579712
    3. 't' → logprob: -6.034094333648682
    4. ' g' → logprob: -7.659094333648682
    5. 'graph' → logprob: -10.65909481048584
    6. 'data' → logprob: -11.53409481048584
    7. ' t' → logprob: -11.90909481048584
    8. '```' → logprob: -11.90909481048584
    9. '	g' → logprob: -12.03409481048584
    10. 'd' → logprob: -12.90909481048584

Token 1325: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' (adapté à ' g') → logprob: -0.0013038069009780884
    2. 't' → logprob: -6.751303672790527
    3. 'graph' → logprob: -9.376303672790527
    4. 'G' → logprob: -11.001303672790527
    5. 'data' → logprob: -11.876303672790527
    6. 'tg' → logprob: -12.251303672790527
    7. 'map' → logprob: -12.751303672790527
    8. 'gr' → logprob: -12.876303672790527
    9. 'tm' → logprob: -13.001303672790527
    10. 'time' → logprob: -13.376303672790527

Token 1326: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20149217545986176
    2. ' =' → logprob: -1.701492190361023
    3. 'raph' → logprob: -9.576492309570312
    4. '=g' → logprob: -11.951492309570312
    5. '	' → logprob: -13.701492309570312
    6. ' ' → logprob: -14.451492309570312
    7. '=
' → logprob: -14.701492309570312
    8. 'g' → logprob: -15.076492309570312
    9. '   ' → logprob: -15.951492309570312
    10. ',' → logprob: -16.076492309570312

Token 1327: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.002476135268807411
    2. ' graph' → logprob: -6.002476215362549
    3. '	graph' → logprob: -14.50247573852539
    4. 'gr' → logprob: -18.00247573852539
    5. '(graph' → logprob: -18.50247573852539
    6. 'Graph' → logprob: -19.00247573852539
    7. 'grid' → logprob: -19.37747573852539
    8. 'graphql' → logprob: -19.50247573852539
    9. 'graphic' → logprob: -19.50247573852539
    10. 'graphs' → logprob: -19.62747573852539

Token 1328: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048748262226581573
    2. 't' → logprob: -3.048748254776001
    3. 'd' → logprob: -9.298748016357422
    4. '
' → logprob: -10.548748016357422
    5. ' t' → logprob: -10.673748016357422
    6. '	t' → logprob: -11.923748016357422
    7. '  ' → logprob: -12.048748016357422
    8. ' ' → logprob: -12.798748016357422
    9. '    
' → logprob: -13.173748016357422
    10. 'td' → logprob: -14.548748016357422

Token 1329: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.020615343004465103
    2. 'd' → logprob: -4.020615577697754
    3. '   ' → logprob: -6.145615577697754
    4. 'dr' → logprob: -8.270615577697754
    5. 'tm' → logprob: -10.520615577697754
    6. ' t' → logprob: -10.645615577697754
    7. 'tr' → logprob: -12.520615577697754
    8. 'tim' → logprob: -13.020615577697754
    9. ' d' → logprob: -13.520615577697754
    10. 'timer' → logprob: -13.645615577697754

Token 1330: ' d' (ID: 272)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0009408812038600445
    2. 'd' (adapté à ' d') → logprob: -7.000940799713135
    3. 'tm' → logprob: -10.750941276550293
    4. 'dr' → logprob: -12.875941276550293
    5. '   ' → logprob: -13.000941276550293
    6. ' t' → logprob: -13.625941276550293
    7. 'tim' → logprob: -14.375941276550293
    8. 'T' → logprob: -14.875941276550293
    9. 'timer' → logprob: -15.125941276550293
    10. 'r' → logprob: -15.250941276550293

Token 1331: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0670418068766594
    2. '=' → logprob: -2.8170418739318848
    3. 'river' → logprob: -5.817041873931885
    4. 'r' → logprob: -6.192041873931885
    5. 'rv' → logprob: -10.817041397094727
    6. 'riv' → logprob: -11.442041397094727
    7. 'rive' → logprob: -12.567041397094727
    8. ' ' → logprob: -12.942041397094727
    9. '   ' → logprob: -14.067041397094727
    10. '=r' → logprob: -14.317041397094727

Token 1332: ' driver' (ID: 8931)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'driver' → logprob: -0.002475777640938759
    2. ' driver' → logprob: -6.002475738525391
    3. '	driver' → logprob: -16.87747573852539
    4. 'dr' → logprob: -19.37747573852539
    5. '(driver' → logprob: -21.00247573852539
    6. '.driver' → logprob: -21.25247573852539
    7. 'drive' → logprob: -21.62747573852539
    8. 'drivers' → logprob: -21.62747573852539
    9. 'd' → logprob: -21.75247573852539
    10. 'Driver' → logprob: -23.00247573852539

Token 1333: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -7.703443770878948e-06
    2. '(d' → logprob: -12.000007629394531
    3. 'g' → logprob: -14.500007629394531
    4. '=g' → logprob: -15.125007629394531
    5. '(
' → logprob: -15.250007629394531
    6. '(' → logprob: -16.00000762939453
    7. '(s' → logprob: -16.37500762939453
    8. '[g' → logprob: -16.87500762939453
    9. ' (' → logprob: -17.37500762939453
    10. '=' → logprob: -17.50000762939453

Token 1334: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16168013215065002
    2. ')
' → logprob: -1.9116801023483276
    3. '   ' → logprob: -6.536680221557617
    4. ')
' → logprob: -12.786680221557617
    5. ' )
' → logprob: -14.286680221557617
    6. ' )' → logprob: -14.536680221557617
    7. '()' → logprob: -14.786680221557617
    8. ')d' → logprob: -14.911680221557617
    9. '())
' → logprob: -15.036680221557617
    10. ')

' → logprob: -16.161680221557617

Token 1335: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.001875086221843958
    2. '   ' → logprob: -6.376874923706055
    3. 'tm' → logprob: -8.876874923706055
    4. 'timer' → logprob: -11.126874923706055
    5. 'T' → logprob: -12.126874923706055
    6. 'tr' → logprob: -12.126874923706055
    7. ' t' → logprob: -12.876874923706055
    8. 'tim' → logprob: -13.376874923706055
    9. 'r' → logprob: -13.626874923706055
    10. '```' → logprob: -14.126874923706055

Token 1336: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.0006816957029514015
    2. 'tm' → logprob: -7.3756818771362305
    3. 'timer' → logprob: -10.50068187713623
    4. 'T' → logprob: -11.37568187713623
    5. 'tim' → logprob: -11.75068187713623
    6. 'tr' → logprob: -13.00068187713623
    7. 'r' → logprob: -13.25068187713623
    8. '   ' → logprob: -13.62568187713623
    9. ' t' → logprob: -14.25068187713623
    10. 'while' → logprob: -14.62568187713623

Token 1337: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13671474158763885
    2. '=' → logprob: -2.5117146968841553
    3. '.run' → logprob: -3.3867146968841553
    4. 'imer' → logprob: -5.011714935302734
    5. '.' → logprob: -5.136714935302734
    6. '.r' → logprob: -10.386714935302734
    7. 'run' → logprob: -10.511714935302734
    8. '   ' → logprob: -10.761714935302734
    9. '.timer' → logprob: -10.761714935302734
    10. '=r' → logprob: -10.761714935302734

Token 1338: ' timer' (ID: 16905)
  Prédit: 'timer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'timer' → logprob: -4.5491004129871726e-05
    2. ' timer' → logprob: -10.000045776367188
    3. '	timer' → logprob: -17.500045776367188
    4. 'time' → logprob: -20.000045776367188
    5. '(timer' → logprob: -20.000045776367188
    6. 'tim' → logprob: -20.125045776367188
    7. '.timer' → logprob: -21.875045776367188
    8. 'Timer' → logprob: -22.000045776367188
    9. 'timeout' → logprob: -22.000045776367188
    10. 't' → logprob: -22.750045776367188

Token 1339: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39862969517707825
    2. '()
' → logprob: -1.5236296653747559
    3. '().' → logprob: -2.273629665374756
    4. '.run' → logprob: -4.898629665374756
    5. '();' → logprob: -8.398630142211914
    6. 'run' → logprob: -9.773630142211914
    7. '(
' → logprob: -10.523630142211914
    8. '()

' → logprob: -10.523630142211914
    9. '()
' → logprob: -11.023630142211914
    10. '   ' → logprob: -11.273630142211914

Token 1340: '   ' (ID: 271)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.10021787881851196
    2. '   ' → logprob: -2.350217819213867
    3. '	t' → logprob: -11.975217819213867
    4. ' t' → logprob: -13.225217819213867
    5. '`t' → logprob: -13.475217819213867
    6. '
' → logprob: -14.350217819213867
    7. 'while' → logprob: -14.475217819213867
    8. '  ' → logprob: -15.350217819213867
    9. 'for' → logprob: -15.600217819213867
    10. '    
' → logprob: -15.725217819213867

Token 1341: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -2.3199920178740285e-05
    2. 'while' → logprob: -10.875022888183594
    3. ' t' → logprob: -12.750022888183594
    4. '   ' → logprob: -13.625022888183594
    5. 'for' → logprob: -16.625022888183594
    6. '
' → logprob: -16.750022888183594
    7. ' while' → logprob: -17.000022888183594
    8. '`t' → logprob: -17.125022888183594
    9. '	t' → logprob: -19.000022888183594
    10. '```' → logprob: -19.500022888183594

Token 1342: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -4.11996734328568e-05
    2. '.' → logprob: -10.125041007995605
    3. ' .' → logprob: -13.875041007995605
    4. '.
' → logprob: -16.250041961669922
    5. 'run' → logprob: -17.250041961669922
    6. '.Run' → logprob: -18.500041961669922
    7. '
' → logprob: -18.625041961669922
    8. '.mainloop' → logprob: -18.750041961669922
    9. '​.' → logprob: -19.125041961669922
    10. ' run' → logprob: -19.375041961669922

Token 1343: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.47454598546028137
    2. '(d' → logprob: -0.974545955657959
    3. '(' → logprob: -7.724545955657959
    4. '(
' → logprob: -11.599546432495117
    5. 's' → logprob: -12.474546432495117
    6. '(t' → logprob: -12.474546432495117
    7. 'd' → logprob: -12.474546432495117
    8. ' (' → logprob: -13.224546432495117
    9. '(sh' → logprob: -13.349546432495117
    10. '(shop' → logprob: -13.974546432495117

Token 1344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0381641685962677
    2. ',d' → logprob: -3.2881641387939453
    3. '(d' → logprob: -9.288164138793945
    4. ' ,' → logprob: -10.663164138793945
    5. 'd' → logprob: -12.163164138793945
    6. ')' → logprob: -13.913164138793945
    7. ' d' → logprob: -15.163164138793945
    8. '(' → logprob: -15.538164138793945
    9. ',
' → logprob: -16.038164138793945
    10. ')d' → logprob: -16.788164138793945

Token 1345: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0001584850688232109
    2. ' d' → logprob: -8.750158309936523
    3. ')d' → logprob: -19.250158309936523
    4. '
' → logprob: -20.250158309936523
    5. '	d' → logprob: -21.375158309936523
    6. ')' → logprob: -21.875158309936523
    7. '   ' → logprob: -24.125158309936523
    8. '(d' → logprob: -24.250158309936523
    9. ' 
' → logprob: -24.875158309936523
    10. '_d' → logprob: -24.875158309936523

Token 1346: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1160349458805285e-05
    2. ')
' → logprob: -11.500011444091797
    3. ' )' → logprob: -14.375011444091797
    4. '())' → logprob: -15.000011444091797
    5. '()' → logprob: -16.500011444091797
    6. ')#' → logprob: -17.625011444091797
    7. ')`' → logprob: -18.375011444091797
    8. '))' → logprob: -18.750011444091797
    9. ')

' → logprob: -18.750011444091797
    10. ')
' → logprob: -20.125011444091797


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1344
Tokens correctement prédits (1ère position, stricte): 496
Tokens correctement prédits (1ère position, avec adaptation): 545
Tokens correctement prédits (top 10): 1015
Précision stricte (1ère position): 36.90%
Précision adaptée (1ère position): 40.55%
Précision (top 10): 75.52%
================================================================================
