================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
gimme = lambda : [int(x) for x in input().split()]
N, M = gimme()
A = gimme()

TOTAL = sum(A)

decision = lambda sc: sc * 4 * M >= TOTAL

vote = sum(decision(a) for a in A)

print(['No', 'Yes'][vote >= M])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'g' (ID: 70)
  → Token d'amorce (pas de prédiction)

Token 1: 'imme' (ID: 51327)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' lambda' (ID: 27871)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3345750868320465
    2. '"' → logprob: -1.8345750570297241
    3. ' ' → logprob: -2.2095751762390137
    4. ' '' → logprob: -4.709575176239014
    5. ' "' → logprob: -5.834575176239014
    6. '`' → logprob: -6.834575176239014
    7. ' []' → logprob: -7.084575176239014
    8. ' `' → logprob: -8.459574699401855
    9. ''s' → logprob: -8.584574699401855
    10. '  ' → logprob: -8.834574699401855

Token 4: ' :' (ID: 712)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28198063373565674
    2. ' x' → logprob: -1.7819806337356567
    3. ' ' → logprob: -3.906980514526367
    4. 'x' → logprob: -4.531980514526367
    5. '  ' → logprob: -4.531980514526367
    6. ' g' → logprob: -4.656980514526367
    7. ' a' → logprob: -5.531980514526367
    8. ' s' → logprob: -5.531980514526367
    9. ' )' → logprob: -5.781980514526367
    10. ' space' → logprob: -5.906980514526367

Token 5: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6793452501296997
    2. ' input' → logprob: -1.9293452501296997
    3. '0' → logprob: -2.30434513092041
    4. 'input' → logprob: -2.55434513092041
    5. '1' → logprob: -3.05434513092041
    6. '"' → logprob: -3.42934513092041
    7. ''' → logprob: -3.67934513092041
    8. ' True' → logprob: -4.42934513092041
    9. '42' → logprob: -5.05434513092041
    10. ' '' → logprob: -5.05434513092041

Token 6: 'int' (ID: 491)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07602746039628983
    2. '0' → logprob: -3.3260273933410645
    3. '1' → logprob: -3.3260273933410645
    4. ' ' → logprob: -8.201027870178223
    5. ' ]' → logprob: -8.576027870178223
    6. ']int' → logprob: -8.576027870178223
    7. '']' → logprob: -9.076027870178223
    8. 'x' → logprob: -9.326027870178223
    9. '()]' → logprob: -9.701027870178223
    10. '[]' → logprob: -9.951027870178223

Token 7: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00925294030457735
    2. ']' → logprob: -5.009253025054932
    3. '<|end|>' → logprob: -7.509253025054932
    4. '(x' → logprob: -7.634253025054932
    5. '('' → logprob: -7.759253025054932
    6. '(ord' → logprob: -8.759252548217773
    7. ' (' → logprob: -8.884252548217773
    8. '(s' → logprob: -9.009252548217773
    9. ' ' → logprob: -9.509252548217773
    10. '(i' → logprob: -9.509252548217773

Token 8: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6935675740242004
    2. '(x' → logprob: -1.3185675144195557
    3. ')]' → logprob: -1.6935675144195557
    4. '(' → logprob: -3.1935675144195557
    5. ')])' → logprob: -6.068567752838135
    6. ']' → logprob: -6.568567752838135
    7. '(input' → logprob: -7.318567752838135
    8. 'for' → logprob: -7.818567752838135
    9. ')x' → logprob: -7.818567752838135
    10. 'input' → logprob: -7.943567752838135

Token 9: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5109750032424927
    2. ' for' → logprob: -1.1359750032424927
    3. '(x' → logprob: -3.010974884033203
    4. '(' → logprob: -3.635974884033203
    5. ')' → logprob: -6.260974884033203
    6. ']' → logprob: -7.760974884033203
    7. '(input' → logprob: -8.760974884033203
    8. '(token' → logprob: -8.760974884033203
    9. ')]' → logprob: -9.510974884033203
    10. 'x' → logprob: -9.635974884033203

Token 10: ' x' (ID: 1215)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5828485488891602
    2. ' x' → logprob: -0.9578485488891602
    3. 'input' → logprob: -3.83284854888916
    4. ' ' → logprob: -4.08284854888916
    5. '<|end|>' → logprob: -4.58284854888916
    6. 'x' → logprob: -5.08284854888916
    7. ' range' → logprob: -6.58284854888916
    8. '  ' → logprob: -7.95784854888916
    9. 'range' → logprob: -7.95784854888916
    10. '<|end|>' → logprob: -8.83284854888916

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.025940971449017525
    2. 'in' → logprob: -4.525940895080566
    3. '(input' → logprob: -4.775940895080566
    4. 'input' → logprob: -5.775940895080566
    5. '(' → logprob: -6.150940895080566
    6. ' input' → logprob: -7.650940895080566
    7. '=input' → logprob: -8.400940895080566
    8. 'import' → logprob: -8.900940895080566
    9. '(x' → logprob: -9.525940895080566
    10. ' ' → logprob: -10.150940895080566

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759497284889221
    2. ' input' → logprob: -0.8259497284889221
    3. '(input' → logprob: -12.200949668884277
    4. ' ' → logprob: -13.325949668884277
    5. 'raw' → logprob: -14.075949668884277
    6. ' raw' → logprob: -14.200949668884277
    7. '	input' → logprob: -14.700949668884277
    8. '=input' → logprob: -14.825949668884277
    9. '<input' → logprob: -15.325949668884277
    10. 'open' → logprob: -15.950949668884277

Token 13: '().' (ID: 1454)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0010462664067745209
    2. '()' → logprob: -7.126046180725098
    3. ']' → logprob: -9.376046180725098
    4. '(' → logprob: -9.626046180725098
    5. '().' → logprob: -10.126046180725098
    6. ']()' → logprob: -10.376046180725098
    7. '()][' → logprob: -11.751046180725098
    8. '()].' → logprob: -12.626046180725098
    9. '())' → logprob: -13.001046180725098
    10. ')]' → logprob: -13.126046180725098

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.004202574957162142
    2. 'strip' → logprob: -5.504202365875244
    3. 'rstrip' → logprob: -9.004202842712402
    4. 'spl' → logprob: -14.254202842712402
    5. ' split' → logprob: -14.504202842712402
    6. '(split' → logprob: -16.879201889038086
    7. 'rs' → logprob: -17.254201889038086
    8. 's' → logprob: -17.504201889038086
    9. 'replace' → logprob: -18.004201889038086
    10. ' ' → logprob: -19.129201889038086

Token 15: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.02974412776529789
    2. '(' → logprob: -3.6547441482543945
    3. '()' → logprob: -5.7797441482543945
    4. '('' → logprob: -8.279744148254395
    5. '())' → logprob: -10.029744148254395
    6. ']' → logprob: -11.154744148254395
    7. '()],' → logprob: -12.154744148254395
    8. ']()' → logprob: -12.279744148254395
    9. '(

' → logprob: -12.654744148254395
    10. '()][' → logprob: -12.654744148254395

Token 16: 'N' (ID: 45)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.074473261833191
    2. '\n' → logprob: -1.074473261833191
    3. '#' → logprob: -3.0744733810424805
    4. '\' → logprob: -3.0744733810424805
    5. 'newline' → logprob: -3.0744733810424805
    6. '```' → logprob: -3.3244733810424805
    7. '<|end|>' → logprob: -3.4494733810424805
    8. '
' → logprob: -3.5744733810424805
    9. '' → logprob: -3.6994733810424805
    10. '[' → logprob: -3.8244733810424805

Token 17: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33761289715766907
    2. '=' → logprob: -1.5876128673553467
    3. ',' → logprob: -2.9626128673553467
    4. ' ' → logprob: -3.7126128673553467
    5. ')' → logprob: -6.212613105773926
    6. '<|end|>' → logprob: -6.462613105773926
    7. ' ,' → logprob: -7.337613105773926
    8. '.' → logprob: -8.087613105773926
    9. '_' → logprob: -8.212613105773926
    10. '[' → logprob: -8.462613105773926

Token 18: ' M' (ID: 391)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.3323461413383484
    2. 'M' → logprob: -1.3323462009429932
    3. ' K' → logprob: -4.957345962524414
    4. 'Q' → logprob: -5.582345962524414
    5. ' M' → logprob: -6.082345962524414
    6. 'g' → logprob: -6.832345962524414
    7. 'a' → logprob: -6.957345962524414
    8. 'k' → logprob: -6.957345962524414
    9. 'A' → logprob: -7.332345962524414
    10. '*' → logprob: -7.832345962524414

Token 19: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4988085627555847
    2. ' =' → logprob: -0.9988085627555847
    3. ',' → logprob: -3.7488086223602295
    4. '<|end|>' → logprob: -7.37380838394165
    5. ' ,' → logprob: -8.498808860778809
    6. ' ' → logprob: -10.873808860778809
    7. ')' → logprob: -12.248808860778809
    8. ' =
' → logprob: -12.373808860778809
    9. '=
' → logprob: -12.998808860778809
    10. '=

' → logprob: -12.998808860778809

Token 20: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.582024097442627
    2. 'g' → logprob: -0.832024097442627
    3. ' map' → logprob: -5.457024097442627
    4. 'map' → logprob: -6.332024097442627
    5. ' ' → logprob: -12.082023620605469
    6. 'lambda' → logprob: -12.832023620605469
    7. '[g' → logprob: -13.519523620605469
    8. 'int' → logprob: -13.582023620605469
    9. '	g' → logprob: -13.957023620605469
    10. '```' → logprob: -13.957023620605469

Token 21: 'imme' (ID: 51327)
  Prédit: 'imme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imme' → logprob: -3.47626737493556e-05
    2. 'mme' → logprob: -11.37503433227539
    3. 'emme' → logprob: -12.12503433227539
    4. 'im' → logprob: -12.50003433227539
    5. 'm' → logprob: -12.62503433227539
    6. 'amme' → logprob: -13.12503433227539
    7. '```' → logprob: -13.25003433227539
    8. 'ime' → logprob: -13.37503433227539
    9. 'umme' → logprob: -14.25003433227539
    10. '(' → logprob: -14.50003433227539

Token 22: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0016910118283703923
    2. '()
' → logprob: -6.501690864562988
    3. '()\' → logprob: -9.876690864562988
    4. '<|end|>' → logprob: -10.001690864562988
    5. '(' → logprob: -10.376690864562988
    6. '()

' → logprob: -10.376690864562988
    7. '```' → logprob: -12.126690864562988
    8. '\' → logprob: -12.501690864562988
    9. '\n' → logprob: -12.626690864562988
    10. ' ()' → logprob: -13.001690864562988

Token 23: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.80422043800354
    2. 'g' → logprob: -1.80422043800354
    3. 'a' → logprob: -1.92922043800354
    4. 'graph' → logprob: -2.42922043800354
    5. '
' → logprob: -2.80422043800354
    6. 'for' → logprob: -2.92922043800354
    7. 'data' → logprob: -3.30422043800354
    8. 'd' → logprob: -3.67922043800354
    9. 'result' → logprob: -3.67922043800354
    10. 'arr' → logprob: -3.92922043800354

Token 24: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08076461404561996
    2. '.' → logprob: -3.2057645320892334
    3. ' =' → logprob: -3.8307645320892334
    4. '=' → logprob: -5.8307647705078125
    5. '[]' → logprob: -5.9557647705078125
    6. '[:]' → logprob: -5.9557647705078125
    7. '_' → logprob: -6.8307647705078125
    8. 'A' → logprob: -7.2057647705078125
    9. '<|end|>' → logprob: -7.2057647705078125
    10. 's' → logprob: -7.4557647705078125

Token 25: ' g' (ID: 329)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.7085695266723633
    2. '[g' → logprob: -1.3335695266723633
    3. 'g' → logprob: -1.7085695266723633
    4. ' g' → logprob: -3.4585695266723633
    5. '[' → logprob: -4.333569526672363
    6. '[int' → logprob: -5.083569526672363
    7. 'list' → logprob: -5.583569526672363
    8. '[]' → logprob: -5.833569526672363
    9. ' []' → logprob: -6.333569526672363
    10. ' list' → logprob: -6.333569526672363

Token 26: 'imme' (ID: 51327)
  Prédit: 'imme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imme' → logprob: -0.0020370108541101217
    2. 'range' → logprob: -6.627037048339844
    3. '[' → logprob: -8.502037048339844
    4. 'mme' → logprob: -9.252037048339844
    5. 'amme' → logprob: -9.377037048339844
    6. 'm' → logprob: -10.002037048339844
    7. 'umme' → logprob: -10.377037048339844
    8. '[[' → logprob: -10.752037048339844
    9. 'ime' → logprob: -10.877037048339844
    10. '[i' → logprob: -10.877037048339844

Token 27: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.816093228830141e-06
    2. '()
' → logprob: -13.87500286102295
    3. '()]' → logprob: -13.87500286102295
    4. ' ()' → logprob: -15.00000286102295
    5. '(' → logprob: -16.125001907348633
    6. '()`' → logprob: -16.500001907348633
    7. '()

' → logprob: -16.500001907348633
    8. '()\' → logprob: -16.750001907348633
    9. '()<' → logprob: -17.000001907348633
    10. '();' → logprob: -17.625001907348633

Token 28: 'TOTAL' (ID: 101586)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.05069693550467491
    2. 'b' → logprob: -4.300696849822998
    3. '<|end|>' → logprob: -4.425696849822998
    4. '[' → logprob: -4.800696849822998
    5. 'for' → logprob: -5.300696849822998
    6. 'result' → logprob: -5.925696849822998
    7. 's' → logprob: -6.425696849822998
    8. 'M' → logprob: -6.925696849822998
    9. 'd' → logprob: -7.050696849822998
    10. ' B' → logprob: -7.675696849822998

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10122816264629364
    2. '=' → logprob: -2.3512282371520996
    3. '_' → logprob: -7.3512282371521
    4. '_sum' → logprob: -8.101227760314941
    5. 'sum' → logprob: -10.726227760314941
    6. 'S' → logprob: -10.976227760314941
    7. '_SUM' → logprob: -11.351227760314941
    8. 's' → logprob: -12.226227760314941
    9. '=sum' → logprob: -12.351227760314941
    10. ' ' → logprob: -13.476227760314941

Token 30: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7062200903892517
    2. ' sum' → logprob: -0.8312200903892517
    3. '0' → logprob: -3.4562201499938965
    4. ' M' → logprob: -4.2062201499938965
    5. ' N' → logprob: -4.2062201499938965
    6. ' ' → logprob: -5.2062201499938965
    7. 'N' → logprob: -6.0812201499938965
    8. 'M' → logprob: -6.4562201499938965
    9. '(sum' → logprob: -10.206219673156738
    10. '   ' → logprob: -10.206219673156738

Token 31: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.02976229228079319
    2. '(' → logprob: -3.5297622680664062
    3. '(
' → logprob: -12.154762268066406
    4. '(T' → logprob: -13.404762268066406
    5. '(a' → logprob: -13.529762268066406
    6. '((' → logprob: -13.654762268066406
    7. 'A' → logprob: -14.529762268066406
    8. '('' → logprob: -15.029762268066406
    9. '("("' → logprob: -15.154762268066406
    10. '(M' → logprob: -15.654762268066406

Token 32: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.729906196298543e-06
    2. ' )' → logprob: -12.375009536743164
    3. '))' → logprob: -13.125009536743164
    4. '+' → logprob: -13.500009536743164
    5. ')+' → logprob: -14.875009536743164
    6. ')
' → logprob: -15.000009536743164
    7. '`)' → logprob: -15.000009536743164
    8. ')`' → logprob: -16.125009536743164
    9. '')' → logprob: -16.375009536743164
    10. '()' → logprob: -16.500009536743164

Token 33: 'decision' (ID: 160595)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.49861598014831543
    2. 'if' → logprob: -1.6236159801483154
    3. 'DP' → logprob: -2.8736159801483154
    4. 'B' → logprob: -3.3736159801483154
    5. 'A' → logprob: -3.9986159801483154
    6. 'for' → logprob: -3.9986159801483154
    7. 'result' → logprob: -4.3736162185668945
    8. 'g' → logprob: -4.9986162185668945
    9. 'print' → logprob: -4.9986162185668945
    10. ' dp' → logprob: -5.2486162185668945

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04095170274376869
    2. '=' → logprob: -3.790951728820801
    3. '_' → logprob: -4.415951728820801
    4. ' ' → logprob: -5.915951728820801
    5. 's' → logprob: -5.915951728820801
    6. ' s' → logprob: -11.0409517288208
    7. '  ' → logprob: -12.0409517288208
    8. 'space' → logprob: -12.0409517288208
    9. '_space' → logprob: -12.1659517288208
    10. '_=' → logprob: -12.5409517288208

Token 35: ' lambda' (ID: 27871)
  Prédit: 'TOTAL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'TOTAL' → logprob: -0.8426543474197388
    2. ' TOTAL' → logprob: -1.0926543474197388
    3. '[' → logprob: -3.217654228210449
    4. ' [' → logprob: -3.217654228210449
    5. '[T' → logprob: -3.217654228210449
    6. '0' → logprob: -3.967654228210449
    7. 'False' → logprob: -3.967654228210449
    8. ' ' → logprob: -4.217654228210449
    9. '"' → logprob: -4.342654228210449
    10. '[M' → logprob: -5.092654228210449

Token 36: ' sc' (ID: 1460)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.045528121292591095
    2. 'x' → logprob: -4.170527935028076
    3. ' total' → logprob: -4.170527935028076
    4. ' ' → logprob: -5.670527935028076
    5. ' n' → logprob: -5.795527935028076
    6. ' s' → logprob: -6.170527935028076
    7. ' lambda' → logprob: -6.295527935028076
    8. ' t' → logprob: -7.170527935028076
    9. ' TOTAL' → logprob: -7.795527935028076
    10. ' a' → logprob: -8.170528411865234

Token 37: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13467086851596832
    2. ',' → logprob: -3.1346709728240967
    3. '>=' → logprob: -3.5096709728240967
    4. ' >=' → logprob: -4.384670734405518
    5. ' :' → logprob: -4.759670734405518
    6. ' <=' → logprob: -5.009670734405518
    7. '<=' → logprob: -5.134670734405518
    8. 'ore' → logprob: -5.384670734405518
    9. ' ' → logprob: -5.884670734405518
    10. '>' → logprob: -6.384670734405518

Token 38: ' sc' (ID: 1460)
  Prédit: 'sc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sc' → logprob: -0.7896053791046143
    2. ' sc' → logprob: -0.9146053791046143
    3. 'sum' → logprob: -3.0396053791046143
    4. 'all' → logprob: -4.289605140686035
    5. 'any' → logprob: -4.289605140686035
    6. ' all' → logprob: -4.289605140686035
    7. ' sum' → logprob: -4.289605140686035
    8. 'TOTAL' → logprob: -4.914605140686035
    9. 'abs' → logprob: -5.164605140686035
    10. ' any' → logprob: -5.164605140686035

Token 39: ' *' (ID: 425)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2464175969362259
    2. '>=' → logprob: -2.12141752243042
    3. ' <=' → logprob: -3.49641752243042
    4. ' >' → logprob: -3.99641752243042
    5. ' ' → logprob: -4.62141752243042
    6. '%' → logprob: -4.74641752243042
    7. '*' → logprob: -5.12141752243042
    8. '>' → logprob: -5.37141752243042
    9. ' ==' → logprob: -5.49641752243042
    10. '<=' → logprob: -5.62141752243042

Token 40: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22557179629802704
    2. 'M' → logprob: -1.9755717515945435
    3. 'N' → logprob: -4.100571632385254
    4. '(' → logprob: -4.100571632385254
    5. '(M' → logprob: -4.850571632385254
    6. '(N' → logprob: -5.600571632385254
    7. '3' → logprob: -5.725571632385254
    8. ' ' → logprob: -5.975571632385254
    9. ' (' → logprob: -5.975571632385254
    10. '(T' → logprob: -6.350571632385254

Token 41: '4' (ID: 19)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8496299982070923
    2. 'M' → logprob: -0.8496299982070923
    3. '(M' → logprob: -2.7246298789978027
    4. '(' → logprob: -3.7246298789978027
    5. '(N' → logprob: -4.224629878997803
    6. 'N' → logprob: -4.474629878997803
    7. '(T' → logprob: -4.974629878997803
    8. '3' → logprob: -5.224629878997803
    9. '(sc' → logprob: -5.474629878997803
    10. '4' → logprob: -5.849629878997803

Token 42: ' *' (ID: 425)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6850031018257141
    2. ' >=' → logprob: -1.5600030422210693
    3. ' >' → logprob: -2.1850030422210693
    4. ' ' → logprob: -2.4350030422210693
    5. '<=' → logprob: -3.8100030422210693
    6. '<|end|>' → logprob: -3.9350030422210693
    7. '>=' → logprob: -4.310003280639648
    8. '>' → logprob: -5.060003280639648
    9. '[' → logprob: -5.185003280639648
    10. ' <' → logprob: -5.435003280639648

Token 43: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.4710387885570526
    2. 'N' → logprob: -1.596038818359375
    3. 'sc' → logprob: -2.471038818359375
    4. 'TOTAL' → logprob: -3.096038818359375
    5. ' M' → logprob: -4.971038818359375
    6. ' sc' → logprob: -5.221038818359375
    7. '*' → logprob: -5.596038818359375
    8. '10' → logprob: -5.721038818359375
    9. '(sc' → logprob: -5.846038818359375
    10. '(' → logprob: -6.096038818359375

Token 44: ' >=' (ID: 5064)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4920333921909332
    2. ' >=' → logprob: -1.7420333623886108
    3. '<=' → logprob: -2.2420334815979004
    4. '>=' → logprob: -2.9920334815979004
    5. ' >' → logprob: -3.4920334815979004
    6. '>' → logprob: -4.7420334815979
    7. ' <' → logprob: -5.3670334815979
    8. ' ' → logprob: -5.4920334815979
    9. '<|end|>' → logprob: -6.1170334815979
    10. '<' → logprob: -6.1170334815979

Token 45: ' TOTAL' (ID: 91657)
  Prédit: 'TOTAL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TOTAL' → logprob: -0.003197204554453492
    2. ' TOTAL' → logprob: -5.753197193145752
    3. ' ' → logprob: -11.25319766998291
    4. 'TOT' → logprob: -12.62819766998291
    5. 'T' → logprob: -13.87819766998291
    6. 'total' → logprob: -14.12819766998291
    7. ' total' → logprob: -14.75319766998291
    8. ' ' → logprob: -15.00319766998291
    9. '   ' → logprob: -16.003196716308594
    10. '_TOTAL' → logprob: -16.128196716308594

Token 46: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: 'vote' (ID: 57889)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33607229590415955
    2. 'low' → logprob: -1.711072325706482
    3. 'if' → logprob: -3.9610722064971924
    4. 'left' → logprob: -3.9610722064971924
    5. 'l' → logprob: -4.0860724449157715
    6. ' for' → logprob: -4.2110724449157715
    7. 'score' → logprob: -4.3360724449157715
    8. 'while' → logprob: -5.3360724449157715
    9. 'mid' → logprob: -5.8360724449157715
    10. 'lo' → logprob: -6.3360724449157715

Token 48: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011692996136844158
    2. '_' → logprob: -5.136693000793457
    3. ' =' → logprob: -6.011693000793457
    4. '_s' → logprob: -6.136693000793457
    5. '=' → logprob: -7.636693000793457
    6. ' s' → logprob: -8.761693000793457
    7. '<|end|>' → logprob: -9.261693000793457
    8. '_score' → logprob: -9.761693000793457
    9. '_count' → logprob: -10.011693000793457
    10. 'A' → logprob: -10.136693000793457

Token 49: ' sum' (ID: 4215)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.388729453086853
    2. '[A' → logprob: -1.513729453086853
    3. ' [' → logprob: -1.763729453086853
    4. '0' → logprob: -2.1387295722961426
    5. 'sum' → logprob: -2.7637295722961426
    6. '[]' → logprob: -3.3887295722961426
    7. '[int' → logprob: -3.6387295722961426
    8. ' ' → logprob: -3.7637295722961426
    9. 'lambda' → logprob: -3.7637295722961426
    10. '[N' → logprob: -4.138729572296143

Token 50: '(dec' (ID: 77281)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.2006363570690155
    2. '(' → logprob: -2.200636386871338
    3. '([' → logprob: -3.075636386871338
    4. '(a' → logprob: -4.575636386871338
    5. '((' → logprob: -5.700636386871338
    6. '(x' → logprob: -6.325636386871338
    7. '(v' → logprob: -6.575636386871338
    8. '(int' → logprob: -6.575636386871338
    9. '([(' → logprob: -6.700636386871338
    10. 'A' → logprob: -6.825636386871338

Token 51: 'ision' (ID: 3625)
  Prédit: 'ision'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ision' → logprob: -0.15970227122306824
    2. '(A' → logprob: -2.2847023010253906
    3. 'A' → logprob: -4.534702301025391
    4. '(' → logprob: -4.784702301025391
    5. '[A' → logprob: -4.784702301025391
    6. '([' → logprob: -4.909702301025391
    7. '(v' → logprob: -6.159702301025391
    8. '[' → logprob: -6.284702301025391
    9. 'isions' → logprob: -6.534702301025391
    10. 'ide' → logprob: -6.534702301025391

Token 52: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.2749466598033905
    2. '(A' → logprob: -1.899946689605713
    3. '(x' → logprob: -2.524946689605713
    4. '(score' → logprob: -5.899946689605713
    5. '(v' → logprob: -6.149946689605713
    6. '(' → logprob: -6.274946689605713
    7. '(i' → logprob: -6.399946689605713
    8. '(s' → logprob: -6.774946689605713
    9. '(sc' → logprob: -7.649946689605713
    10. ')' → logprob: -8.774946212768555

Token 53: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.265633419388905e-05
    2. ' )' → logprob: -10.500062942504883
    3. '))' → logprob: -11.375062942504883
    4. 'a' → logprob: -11.500062942504883
    5. ' for' → logprob: -12.000062942504883
    6. 's' → logprob: -13.000062942504883
    7. 'for' → logprob: -13.625062942504883
    8. '*' → logprob: -14.250062942504883
    9. ' ' → logprob: -14.625062942504883
    10. '}' → logprob: -14.875062942504883

Token 54: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09820624440908432
    2. 'for' → logprob: -2.5982062816619873
    3. ')' → logprob: -3.9732062816619873
    4. 'a' → logprob: -8.848206520080566
    5. ' ' → logprob: -9.848206520080566
    6. '(a' → logprob: -10.598206520080566
    7. '  ' → logprob: -10.723206520080566
    8. 'or' → logprob: -11.098206520080566
    9. '	for' → logprob: -11.348206520080566
    10. '()' → logprob: -11.598206520080566

Token 55: ' a' (ID: 261)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.47411227226257324
    2. ' A' → logprob: -0.9741122722625732
    3. 'a' → logprob: -10.724112510681152
    4. ' ' → logprob: -12.099112510681152
    5. ' a' → logprob: -12.474112510681152
    6. '  ' → logprob: -13.474112510681152
    7. '	A' → logprob: -13.849112510681152
    8. ' in' → logprob: -14.724112510681152
    9. ' range' → logprob: -15.099112510681152
    10. '_A' → logprob: -15.474112510681152

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03367278724908829
    2. 'in' → logprob: -3.40867280960083
    3. ')' → logprob: -10.908672332763672
    4. ' ' → logprob: -12.283672332763672
    5. ' )' → logprob: -13.533672332763672
    6. 'A' → logprob: -13.908672332763672
    7. '  ' → logprob: -14.158672332763672
    8. ' A' → logprob: -15.658672332763672
    9. 'a' → logprob: -15.658672332763672
    10. 'In' → logprob: -16.033672332763672

Token 57: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.03364696726202965
    2. ' A' → logprob: -3.408647060394287
    3. ' ' → logprob: -14.158646583557129
    4. ')' → logprob: -15.283646583557129
    5. '	A' → logprob: -16.158647537231445
    6. ' range' → logprob: -16.658647537231445
    7. '  ' → logprob: -17.158647537231445
    8. 'range' → logprob: -17.533647537231445
    9. '(A' → logprob: -17.783647537231445
    10. '>A' → logprob: -18.158647537231445

Token 58: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021962920436635613
    2. ' )' → logprob: -8.875219345092773
    3. ')
' → logprob: -9.500219345092773
    4. '))' → logprob: -13.375219345092773
    5. ')

' → logprob: -13.500219345092773
    6. ')`' → logprob: -14.875219345092773
    7. ')#' → logprob: -15.000219345092773
    8. ')a' → logprob: -15.000219345092773
    9. ')
' → logprob: -15.750219345092773
    10. '())' → logprob: -16.250219345092773

Token 59: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06198852136731148
    2. 'if' → logprob: -2.811988592147827
    3. ' if' → logprob: -11.186988830566406
    4. ' print' → logprob: -12.686988830566406
    5. '```' → logprob: -12.686988830566406
    6. '#print' → logprob: -15.936988830566406
    7. '
' → logprob: -16.311988830566406
    8. '>' → logprob: -16.311988830566406
    9. '``' → logprob: -16.561988830566406
    10. 'pass' → logprob: -16.686988830566406

Token 60: '(['' (ID: 14113)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2520434260368347
    2. '(v' → logprob: -1.5020434856414795
    3. '(V' → logprob: -10.377043724060059
    4. '((' → logprob: -10.502043724060059
    5. '()' → logprob: -10.627043724060059
    6. '('' → logprob: -11.377043724060059
    7. '("("' → logprob: -12.502043724060059
    8. '(`' → logprob: -12.627043724060059
    9. '(len' → logprob: -13.377043724060059
    10. '(
' → logprob: -13.752043724060059

Token 61: 'No' (ID: 3160)
  Prédit: 'NO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.5906076431274414
    2. 'no' → logprob: -1.0906076431274414
    3. 'No' → logprob: -3.3406076431274414
    4. 'YES' → logprob: -3.7156076431274414
    5. 'Yes' → logprob: -4.590607643127441
    6. 'im' → logprob: -5.215607643127441
    7. ''' → logprob: -5.340607643127441
    8. 'yes' → logprob: -5.465607643127441
    9. 'Y' → logprob: -5.840607643127441
    10. 'vote' → logprob: -6.340607643127441

Token 62: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.13807706534862518
    2. '','' → logprob: -2.1380770206451416
    3. ',' → logprob: -5.013077259063721
    4. ''' → logprob: -5.763077259063721
    5. ','' → logprob: -7.138077259063721
    6. ' ,' → logprob: -8.388076782226562
    7. ' ',' → logprob: -8.888076782226562
    8. '",' → logprob: -10.138076782226562
    9. ' ,'' → logprob: -10.888076782226562
    10. '',"' → logprob: -11.013076782226562

Token 63: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00219557574018836
    2. ' '' → logprob: -6.127195358276367
    3. '"' → logprob: -11.627195358276367
    4. '`' → logprob: -14.252195358276367
    5. ''O' → logprob: -15.127195358276367
    6. ' ' → logprob: -15.377195358276367
    7. ' ' → logprob: -16.627195358276367
    8. ''\' → logprob: -16.752195358276367
    9. '	' → logprob: -17.127195358276367
    10. ''s' → logprob: -17.252195358276367

Token 64: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0013360745506361127
    2. ' Yes' → logprob: -6.626336097717285
    3. ''' → logprob: -11.876336097717285
    4. 'YES' → logprob: -13.126336097717285
    5. ' yes' → logprob: -14.751336097717285
    6. 'Ye' → logprob: -14.876336097717285
    7. 'Yeah' → logprob: -15.751336097717285
    8. 'Y' → logprob: -16.37633514404297
    9. 'No' → logprob: -16.87633514404297
    10. ' ' → logprob: -17.00133514404297

Token 65: ''][' (ID: 22110)
  Prédit: '']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''][' → logprob: -0.004701514728367329
    2. '']' → logprob: -6.004701614379883
    3. '][' → logprob: -6.254701614379883
    4. ''])' → logprob: -8.879701614379883
    5. '"][' → logprob: -9.504701614379883
    6. ''])[' → logprob: -9.754701614379883
    7. ''' → logprob: -10.754701614379883
    8. '')[' → logprob: -12.879701614379883
    9. '']['' → logprob: -12.879701614379883
    10. ']' → logprob: -13.379701614379883

Token 66: 'vote' (ID: 57889)
  Prédit: 'vote'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vote' → logprob: -0.0789082944393158
    2. ' vote' → logprob: -2.5789082050323486
    3. ' ' → logprob: -12.07890796661377
    4. 'v' → logprob: -12.20390796661377
    5. '(v' → logprob: -13.20390796661377
    6. '   ' → logprob: -13.45390796661377
    7. '1' → logprob: -13.70390796661377
    8. ' (' → logprob: -14.07890796661377
    9. '.vote' → logprob: -14.57890796661377
    10. '  ' → logprob: -14.95390796661377

Token 67: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5435434579849243
    2. ' >' → logprob: -0.9185434579849243
    3. '*' → logprob: -4.793543338775635
    4. '>=' → logprob: -4.918543338775635
    5. ' >=' → logprob: -5.668543338775635
    6. ' *' → logprob: -6.918543338775635
    7. ' ' → logprob: -8.918543815612793
    8. '>N' → logprob: -11.043543815612793
    9. '>*' → logprob: -11.668543815612793
    10. '>M' → logprob: -12.543543815612793

Token 68: ' M' (ID: 391)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.282174289226532
    2. '(M' → logprob: -2.0321743488311768
    3. '(N' → logprob: -2.7821743488311768
    4. '(' → logprob: -3.5321743488311768
    5. '((' → logprob: -4.657174110412598
    6. 'N' → logprob: -4.907174110412598
    7. ' ' → logprob: -5.532174110412598
    8. 'M' → logprob: -6.782174110412598
    9. ' N' → logprob: -7.407174110412598
    10. ' M' → logprob: -8.157174110412598

Token 69: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.003907657694071531
    2. ')' → logprob: -5.753907680511475
    3. '//' → logprob: -8.253907203674316
    4. ')])' → logprob: -8.628907203674316
    5. ' ])' → logprob: -8.753907203674316
    6. '])
' → logprob: -10.128907203674316
    7. ']' → logprob: -10.253907203674316
    8. ')]' → logprob: -10.878907203674316
    9. '))' → logprob: -11.128907203674316
    10. ')
' → logprob: -12.253907203674316


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 67
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 22
Tokens correctement prédits (top 10): 49
Précision stricte (1ère position): 32.84%
Précision adaptée (1ère position): 32.84%
Précision (top 10): 73.13%
================================================================================
