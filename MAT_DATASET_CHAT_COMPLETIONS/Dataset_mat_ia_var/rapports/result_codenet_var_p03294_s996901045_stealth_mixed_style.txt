================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:53
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
from functools import reduce as red

def g(a, b):
    while b: a, b = b, a % b
    return a

LAMBDA_LCM = lambda x, y: x*y // g(x, y)

def main():
    N = eval(input())
    arr = list(map(int, input().split()))
    # Calcul du PPCM avec une approche différente
    l = red(LAMBDA_LCM, arr)
    res = 0
    [res := res + ((l-1)%x) for x in arr]
    print(res)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010124349035322666
    2. '\n' → logprob: -6.010124206542969
    3. '<|end|>' → logprob: -6.260124206542969
    4. '\' → logprob: -6.510124206542969
    5. '```' → logprob: -6.635124206542969
    6. 'import' → logprob: -6.760124206542969
    7. '.pi' → logprob: -8.260124206542969
    8. 'def' → logprob: -8.385124206542969
    9. 'newline' → logprob: -8.760124206542969
    10. '<|end|>' → logprob: -8.885124206542969

Token 4: ' functools' (ID: 142636)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.744792640209198
    2. ' os' → logprob: -1.1197926998138428
    3. ' collections' → logprob: -3.2447926998138428
    4. ' statistics' → logprob: -3.2447926998138428
    5. ' sys' → logprob: -3.4947926998138428
    6. ' numpy' → logprob: -3.8697926998138428
    7. ' random' → logprob: -4.244792461395264
    8. 'cmath' → logprob: -4.369792461395264
    9. ' ' → logprob: -4.619792461395264
    10. 'math' → logprob: -4.994792461395264

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.747115433216095
    2. 'import' → logprob: -0.872115433216095
    3. '.' → logprob: -2.24711537361145
    4. '.import' → logprob: -6.247115612030029
    5. ' .' → logprob: -8.372115135192871
    6. '_import' → logprob: -8.872115135192871
    7. '```' → logprob: -9.747115135192871
    8. '	import' → logprob: -9.872115135192871
    9. '._' → logprob: -10.622115135192871
    10. '.im' → logprob: -11.622115135192871

Token 6: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.4224971532821655
    2. 'partial' → logprob: -1.6724971532821655
    3. ' wraps' → logprob: -1.6724971532821655
    4. 'wrap' → logprob: -2.172497272491455
    5. ' l' → logprob: -2.297497272491455
    6. 'l' → logprob: -2.797497272491455
    7. ' partial' → logprob: -2.922497272491455
    8. ' reduce' → logprob: -3.047497272491455
    9. 'cache' → logprob: -6.047497272491455
    10. 'cached' → logprob: -6.672497272491455

Token 7: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16220317780971527
    2. 'def' → logprob: -2.412203073501587
    3. ',' → logprob: -3.287203073501587
    4. '\' → logprob: -4.412203311920166
    5. '(
' → logprob: -6.037203311920166
    6. '\(' → logprob: -6.287203311920166
    7. 'import' → logprob: -6.787203311920166
    8. '\n' → logprob: -7.037203311920166
    9. '```' → logprob: -7.162203311920166
    10. '.' → logprob: -7.412203311920166

Token 8: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' → logprob: -1.171593189239502
    2. 'reduce' → logprob: -1.296593189239502
    3. ' red' → logprob: -1.671593189239502
    4. 'rd' → logprob: -2.296593189239502
    5. ' reduce' → logprob: -2.921593189239502
    6. 'redu' → logprob: -3.421593189239502
    7. ' rd' → logprob: -4.796593189239502
    8. 're' → logprob: -5.171593189239502
    9. 'r' → logprob: -5.296593189239502
    10. ' r' → logprob: -5.671593189239502

Token 9: '

' (ID: 279)
  Prédit: 'uct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uct' → logprob: -0.08770675957202911
    2. 'u' → logprob: -2.9627068042755127
    3. 'uce' → logprob: -3.9627068042755127
    4. '(' → logprob: -5.087706565856934
    5. 'uction' → logprob: -6.337706565856934
    6. 'uc' → logprob: -6.712706565856934
    7. '```' → logprob: -6.962706565856934
    8. 'uctor' → logprob: -7.087706565856934
    9. '' → logprob: -7.337706565856934
    10. ' u' → logprob: -7.462706565856934

Token 10: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11806187033653259
    2. 'uct' → logprob: -2.8680617809295654
    3. ',' → logprob: -2.9930617809295654
    4. 'def' → logprob: -7.1180620193481445
    5. '```' → logprob: -7.4930620193481445
    6. '_' → logprob: -7.7430620193481445
    7. 'uction' → logprob: -7.8680620193481445
    8. '.' → logprob: -7.9930620193481445
    9. ')' → logprob: -8.243062019348145
    10. 'u' → logprob: -8.368062019348145

Token 11: ' g' (ID: 329)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10814425349235535
    2. ' factorial' → logprob: -2.9831442832946777
    3. ' gcd' → logprob: -4.483144283294678
    4. ' calculate' → logprob: -4.483144283294678
    5. '_' → logprob: -4.608144283294678
    6. ' math' → logprob: -4.983144283294678
    7. ' f' → logprob: -6.483144283294678
    8. ' factor' → logprob: -6.483144283294678
    9. ' add' → logprob: -6.608144283294678
    10. ' space' → logprob: -6.608144283294678

Token 12: '(a' (ID: 6271)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.32827645540237427
    2. 'e' → logprob: -1.5782763957977295
    3. 'et' → logprob: -3.0782763957977295
    4. 'amma' → logprob: -5.078276634216309
    5. 'enerate' → logprob: -5.453276634216309
    6. 'g' → logprob: -5.453276634216309
    7. 'a' → logprob: -5.703276634216309
    8. '(e' → logprob: -6.328276634216309
    9. 'o' → logprob: -6.578276634216309
    10. 'u' → logprob: -7.328276634216309

Token 13: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6934881210327148
    2. ',' → logprob: -0.8184881210327148
    3. ',b' → logprob: -2.943488121032715
    4. '*' → logprob: -6.568488121032715
    5. ' ,' → logprob: -6.568488121032715
    6. ')' → logprob: -7.443488121032715
    7. ',a' → logprob: -7.693488121032715
    8. ',r' → logprob: -7.943488121032715
    9. '**' → logprob: -8.568488121032715
    10. 'm' → logprob: -8.693488121032715

Token 14: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.22552984952926636
    2. 'b' → logprob: -1.6005299091339111
    3. ' ' → logprob: -10.225529670715332
    4. ',' → logprob: -10.600529670715332
    5. ',b' → logprob: -11.475529670715332
    6. ' l' → logprob: -11.600529670715332
    7. 'l' → logprob: -11.975529670715332
    8. ' n' → logprob: -12.350529670715332
    9. '*b' → logprob: -12.350529670715332
    10. 'n' → logprob: -12.975529670715332

Token 15: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04951276257634163
    2. ')' → logprob: -3.0495128631591797
    3. ',' → logprob: -7.04951286315918
    4. '):
' → logprob: -11.04951286315918
    5. '),' → logprob: -11.67451286315918
    6. ' ):' → logprob: -11.79951286315918
    7. ')=' → logprob: -12.54951286315918
    8. ':' → logprob: -12.92451286315918
    9. '**' → logprob: -13.42451286315918
    10. ')>' → logprob: -13.42451286315918

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6304572224617004
    2. ' return' → logprob: -1.1304571628570557
    3. ' ' → logprob: -2.8804571628570557
    4. 'a' → logprob: -4.005457401275635
    5. 'return' → logprob: -4.130457401275635
    6. ' a' → logprob: -4.255457401275635
    7. ':' → logprob: -4.255457401275635
    8. ' :' → logprob: -4.505457401275635
    9. '    ' → logprob: -5.005457401275635
    10. ')' → logprob: -6.380457401275635

Token 17: ' while' (ID: 2049)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3331809639930725
    2. 'a' → logprob: -1.4581809043884277
    3. ' return' → logprob: -3.9581809043884277
    4. ' math' → logprob: -4.458180904388428
    5. ' ' → logprob: -4.583180904388428
    6. '   ' → logprob: -4.958180904388428
    7. 'return' → logprob: -6.708180904388428
    8. 'math' → logprob: -7.833180904388428
    9. ' (' → logprob: -8.208181381225586
    10. '  ' → logprob: -8.958181381225586

Token 18: ' b' (ID: 287)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.04034711420536041
    2. 'a' → logprob: -3.290347099304199
    3. ' not' → logprob: -6.665347099304199
    4. ' b' → logprob: -7.415347099304199
    5. ' ' → logprob: -8.0403470993042
    6. ' math' → logprob: -10.2903470993042
    7. 'b' → logprob: -10.4153470993042
    8. '(a' → logprob: -11.6653470993042
    9. 'not' → logprob: -11.6653470993042
    10. ' (' → logprob: -12.2903470993042

Token 19: ':' (ID: 25)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.138948917388916
    2. ' !=' → logprob: -1.138948917388916
    3. ':' → logprob: -1.388948917388916
    4. '>' → logprob: -2.638948917388916
    5. '!=' → logprob: -4.138948917388916
    6. ' and' → logprob: -4.263948917388916
    7. 'and' → logprob: -5.763948917388916
    8. '%' → logprob: -6.263948917388916
    9. ' %' → logprob: -6.388948917388916
    10. ' :' → logprob: -7.013948917388916

Token 20: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7284587621688843
    2. 'a' → logprob: -1.1034587621688843
    3. ' a' → logprob: -2.103458881378174
    4. '    ' → logprob: -4.353458881378174
    5. ' ' → logprob: -4.728458881378174
    6. '   ' → logprob: -4.853458881378174
    7. ' %' → logprob: -4.978458881378174
    8. '0' → logprob: -5.103458881378174
    9. ' =' → logprob: -5.353458881378174
    10. ' 
' → logprob: -6.103458881378174

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1364107131958008
    2. ' %=' → logprob: -1.2614107131958008
    3. '%=' → logprob: -1.2614107131958008
    4. '%' → logprob: -2.261410713195801
    5. '%b' → logprob: -5.761410713195801
    6. ' %' → logprob: -6.261410713195801
    7. ',b' → logprob: -6.761410713195801
    8. '=' → logprob: -7.136410713195801
    9. ',a' → logprob: -7.511410713195801
    10. ' ,' → logprob: -8.3864107131958

Token 22: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10021518170833588
    2. ' b' → logprob: -2.350215196609497
    3. '%b' → logprob: -12.725214958190918
    4. 'a' → logprob: -13.475214958190918
    5. ' ' → logprob: -13.725214958190918
    6. '=b' → logprob: -13.850214958190918
    7. '>b' → logprob: -14.475214958190918
    8. '	b' → logprob: -14.850214958190918
    9. '=' → logprob: -14.975214958190918
    10. '   ' → logprob: -15.225214958190918

Token 23: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759465098381042
    2. ' =' → logprob: -0.8259465098381042
    3. ',' → logprob: -12.950946807861328
    4. '=a' → logprob: -13.075946807861328
    5. '   ' → logprob: -14.325946807861328
    6. ' ' → logprob: -14.950946807861328
    7. '=}' → logprob: -15.575946807861328
    8. '=b' → logprob: -15.700946807861328
    9. '=f' → logprob: -16.325946807861328
    10. ')' → logprob: -16.325946807861328

Token 24: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2811550199985504
    2. 'b' → logprob: -1.406154990196228
    3. '(b' → logprob: -13.78115463256836
    4. 'a' → logprob: -14.03115463256836
    5. ' ' → logprob: -14.78115463256836
    6. ' a' → logprob: -14.78115463256836
    7. ',' → logprob: -15.15615463256836
    8. '    ' → logprob: -15.34365463256836
    9. ' (' → logprob: -15.34365463256836
    10. '```' → logprob: -15.40615463256836

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021008584648370743
    2. ' ,' → logprob: -4.021008491516113
    3. 'a' → logprob: -6.521008491516113
    4. '%' → logprob: -7.646008491516113
    5. ' %' → logprob: -7.771008491516113
    6. ' ' → logprob: -8.521008491516113
    7. ' a' → logprob: -9.021008491516113
    8. ',a' → logprob: -9.021008491516113
    9. '  ' → logprob: -12.021008491516113
    10. '%,' → logprob: -12.271008491516113

Token 26: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014200172387063503
    2. ' a' → logprob: -4.264200210571289
    3. 'math' → logprob: -10.389200210571289
    4. ' math' → logprob: -12.764200210571289
    5. ' ' → logprob: -13.264200210571289
    6. '<|end|>' → logprob: -14.764200210571289
    7. '  ' → logprob: -15.889200210571289
    8. '0' → logprob: -16.38920021057129
    9. '	a' → logprob: -16.51420021057129
    10. '(a' → logprob: -16.76420021057129

Token 27: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04860507696866989
    2. '%' → logprob: -3.048604965209961
    3. ' ' → logprob: -11.798604965209961
    4. '%b' → logprob: -12.173604965209961
    5. '<|end|>' → logprob: -13.798604965209961
    6. ' %=' → logprob: -13.923604965209961
    7. '%i' → logprob: -14.298604965209961
    8. ' %

' → logprob: -14.423604965209961
    9. ' %
' → logprob: -14.548604965209961
    10. '%x' → logprob: -15.298604965209961

Token 28: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001584850688232109
    2. ' b' → logprob: -8.750158309936523
    3. ' ' → logprob: -17.375158309936523
    4. '	b' → logprob: -18.125158309936523
    5. '<|end|>' → logprob: -19.125158309936523
    6. '_b' → logprob: -20.000158309936523
    7. ')b' → logprob: -20.250158309936523
    8. ' б' → logprob: -20.250158309936523
    9. '  ' → logprob: -20.625158309936523
    10. '```' → logprob: -20.875158309936523

Token 29: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2013302892446518
    2. '<|end|>' → logprob: -2.5763301849365234
    3. ' 
' → logprob: -3.2013301849365234
    4. '\n' → logprob: -3.4513301849365234
    5. '  
' → logprob: -4.451330184936523
    6. '  ' → logprob: -5.576330184936523
    7. '   
' → logprob: -5.951330184936523
    8. ' 

' → logprob: -5.951330184936523
    9. '   ' → logprob: -5.951330184936523
    10. ' return' → logprob: -6.201330184936523

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05386458709836006
    2. '\n' → logprob: -4.428864479064941
    3. '    
' → logprob: -4.678864479064941
    4. ' ' → logprob: -4.928864479064941
    5. ' return' → logprob: -4.928864479064941
    6. '<|end|>' → logprob: -5.178864479064941
    7. ' 
' → logprob: -5.678864479064941
    8. '    ' → logprob: -6.678864479064941
    9. '\r' → logprob: -6.928864479064941
    10. 'return' → logprob: -7.053864479064941

Token 31: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4213274121284485
    2. ' return' → logprob: -1.9213273525238037
    3. 'a' → logprob: -2.6713273525238037
    4. 'return' (adapté à ' return') → logprob: -2.6713273525238037
    5. ' a' → logprob: -3.4213273525238037
    6. ' ' → logprob: -3.7963273525238037
    7. '    ' → logprob: -6.546327590942383
    8. '    
' → logprob: -7.671327590942383
    9. '0' → logprob: -8.046327590942383
    10. '	return' → logprob: -8.046327590942383

Token 32: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3132680654525757
    2. ' a' → logprob: -1.3132680654525757
    3. ' ' → logprob: -12.313267707824707
    4. '	a' → logprob: -14.313267707824707
    5. ' ' → logprob: -15.188267707824707
    6. '   ' → logprob: -15.500767707824707
    7. ' abs' → logprob: -15.500767707824707
    8. '  ' → logprob: -16.063268661499023
    9. 'abs' → logprob: -16.375768661499023
    10. '    ' → logprob: -16.688268661499023

Token 33: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12878738343715668
    2. '

' → logprob: -2.7537872791290283
    3. '
' → logprob: -3.3787872791290283
    4. ' def' → logprob: -4.628787517547607
    5. '<|end|>' → logprob: -5.253787517547607
    6. ' 

' → logprob: -6.378787517547607
    7. '*' → logprob: -7.003787517547607
    8. ')' → logprob: -7.253787517547607
    9. '


' → logprob: -7.753787517547607
    10. '\' → logprob: -8.00378704071045

Token 34: 'L' (ID: 43)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000977075076662004
    2. '#' → logprob: -8.625977516174316
    3. ')' → logprob: -9.125977516174316
    4. 'a' → logprob: -9.250977516174316
    5. 'print' → logprob: -9.250977516174316
    6. '\' → logprob: -9.625977516174316
    7. 'g' → logprob: -9.750977516174316
    8. ',' → logprob: -10.125977516174316
    9. ' def' → logprob: -10.250977516174316
    10. '
' → logprob: -10.250977516174316

Token 35: 'AMB' (ID: 89274)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6318123936653137
    2. ' =' → logprob: -1.506812334060669
    3. 'CM' → logprob: -3.006812334060669
    4. '[' → logprob: -3.256812334060669
    5. 'C' → logprob: -3.631812334060669
    6. '=[]' → logprob: -3.756812334060669
    7. 'L' → logprob: -4.006812572479248
    8. ',' → logprob: -4.006812572479248
    9. 'ist' → logprob: -4.256812572479248
    10. 'cm' → logprob: -4.506812572479248

Token 36: 'DA' (ID: 6253)
  Prédit: 'DA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DA' → logprob: -2.463036435074173e-05
    2. 'D' → logprob: -10.625024795532227
    3. 'ДА' → logprob: -15.500024795532227
    4. 'A' → logprob: -16.250024795532227
    5. ' DA' → logprob: -18.500024795532227
    6. '=' → logprob: -18.500024795532227
    7. '0' → logprob: -19.250024795532227
    8. ')' → logprob: -19.375024795532227
    9. '_' → logprob: -19.875024795532227
    10. '\' → logprob: -20.125024795532227

Token 37: '_L' (ID: 4258)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09236197173595428
    2. ' ' → logprob: -3.2173619270324707
    3. '=lambda' → logprob: -4.092361927032471
    4. 's' → logprob: -4.467361927032471
    5. '_' → logprob: -5.217361927032471
    6. '=' → logprob: -5.842361927032471
    7. ' lambda' → logprob: -5.967361927032471
    8. 'a' → logprob: -5.967361927032471
    9. ' a' → logprob: -6.717361927032471
    10. 'lambda' → logprob: -7.092361927032471

Token 38: 'CM' (ID: 14170)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9479221105575562
    2. 'AMB' → logprob: -1.1979221105575562
    3. 'A' → logprob: -1.6979221105575562
    4. '=' → logprob: -2.9479222297668457
    5. '_' → logprob: -4.447922229766846
    6. 'DA' → logprob: -4.447922229766846
    7. 'CM' → logprob: -4.447922229766846
    8. 'AM' → logprob: -4.822922229766846
    9. '```' → logprob: -4.947922229766846
    10. 'ambda' → logprob: -5.197922229766846

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16122794151306152
    2. '=' → logprob: -1.9112279415130615
    3. '_' → logprob: -7.161228179931641
    4. '=lambda' → logprob: -9.53622817993164
    5. 's' → logprob: -9.66122817993164
    6. '_=' → logprob: -10.53622817993164
    7. ' ' → logprob: -11.16122817993164
    8. 'S' → logprob: -11.16122817993164
    9. '(' → logprob: -11.53622817993164
    10. ' _' → logprob: -12.41122817993164

Token 40: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.20143985748291016
    2. ' lambda' → logprob: -1.7014398574829102
    3. '(lambda' → logprob: -10.95143985748291
    4. ' lamb' → logprob: -12.57643985748291
    5. '   ' → logprob: -12.82643985748291
    6. 'l' → logprob: -13.70143985748291
    7. ' ' → logprob: -14.57643985748291
    8. 'λ' → logprob: -15.45143985748291
    9. '=lambda' → logprob: -15.70143985748291
    10. '```' → logprob: -15.70143985748291

Token 41: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8852308988571167
    2. ' a' → logprob: -1.2602308988571167
    3. 'x' → logprob: -1.8852308988571167
    4. 'a' → logprob: -1.8852308988571167
    5. ' lambda' → logprob: -10.010231018066406
    6. ' numbers' → logprob: -10.385231018066406
    7. 'lambda' → logprob: -11.010231018066406
    8. '[a' → logprob: -11.510231018066406
    9. ' ' → logprob: -11.760231018066406
    10. ' lst' → logprob: -11.760231018066406

Token 42: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7692570686340332
    2. ',' → logprob: -0.8942570686340332
    3. ' :' → logprob: -2.394257068634033
    4. ',:' → logprob: -4.269257068634033
    5. 's' → logprob: -4.644257068634033
    6. ',x' → logprob: -4.894257068634033
    7. ',y' → logprob: -6.644257068634033
    8. ',L' → logprob: -7.144257068634033
    9. ',l' → logprob: -7.519257068634033
    10. ':x' → logprob: -7.894257068634033

Token 43: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2811824083328247
    2. ' y' → logprob: -1.4061824083328247
    3. ' ' → logprob: -11.031182289123535
    4. '	y' → logprob: -11.656182289123535
    5. '1' → logprob: -13.781182289123535
    6. 'x' → logprob: -14.156182289123535
    7. '  ' → logprob: -14.281182289123535
    8. '_y' → logprob: -14.718682289123535
    9. 'a' → logprob: -14.718682289123535
    10. 'L' → logprob: -14.781182289123535

Token 44: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017839411739259958
    2. ' :' → logprob: -6.626783847808838
    3. ':(' → logprob: -7.876783847808838
    4. ':x' → logprob: -10.126784324645996
    5. ',' → logprob: -10.751784324645996
    6. ' :(' → logprob: -12.376784324645996
    7. ',:' → logprob: -13.626784324645996
    8. '=' → logprob: -13.626784324645996
    9. ':y' → logprob: -13.876784324645996
    10. 'x' → logprob: -14.126784324645996

Token 45: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7021620869636536
    2. ' x' → logprob: -1.0771620273590088
    3. '(x' → logprob: -2.202162027359009
    4. ' (' → logprob: -3.202162027359009
    5. '(int' → logprob: -5.327162265777588
    6. 'int' → logprob: -5.827162265777588
    7. '(' → logprob: -6.327162265777588
    8. ' int' → logprob: -6.827162265777588
    9. 'abs' → logprob: -7.577162265777588
    10. '(abs' → logprob: -7.702162265777588

Token 46: '*y' (ID: 83575)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14716318249702454
    2. ' *' → logprob: -2.397163152694702
    3. '*y' → logprob: -3.147163152694702
    4. '//' → logprob: -6.147163391113281
    5. ' //' → logprob: -7.647163391113281
    6. 'y' → logprob: -8.772163391113281
    7. '*x' → logprob: -9.647163391113281
    8. ' ' → logprob: -11.147163391113281
    9. '*l' → logprob: -11.397163391113281
    10. '*b' → logprob: -11.647163391113281

Token 47: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.28204411268234253
    2. '//' → logprob: -1.4070441722869873
    3. ' /' → logprob: -7.532043933868408
    4. '/' → logprob: -8.407044410705566
    5. ' ' → logprob: -9.282044410705566
    6. '/g' → logprob: -11.782044410705566
    7. ' ' → logprob: -11.782044410705566
    8. '```' → logprob: -12.907044410705566
    9. '://' → logprob: -13.282044410705566
    10. '//=' → logprob: -13.344544410705566

Token 48: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -9.088346359931165e-07
    2. ' g' → logprob: -14.250000953674316
    3. '<|end|>' → logprob: -15.375000953674316
    4. 'math' → logprob: -18.5
    5. '_g' → logprob: -19.0
    6. 'y' → logprob: -19.125
    7. '	g' → logprob: -19.625
    8. 'x' → logprob: -19.75
    9. '(g' → logprob: -20.125
    10. '<|end|>' → logprob: -21.0

Token 49: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.014195355586707592
    2. '(' → logprob: -4.264195442199707
    3. '(y' → logprob: -11.014195442199707
    4. ' (' → logprob: -11.389195442199707
    5. '(a' → logprob: -13.264195442199707
    6. '(
' → logprob: -13.514195442199707
    7. 'x' → logprob: -15.139195442199707
    8. '(s' → logprob: -16.63919448852539
    9. '(None' → logprob: -16.76419448852539
    10. ' ' → logprob: -16.76419448852539

Token 50: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025509702041745186
    2. ',y' → logprob: -4.400509834289551
    3. ' ,' → logprob: -4.400509834289551
    4. 'y' → logprob: -7.400509834289551
    5. ' y' → logprob: -10.40050983428955
    6. ' ' → logprob: -13.52550983428955
    7. ')' → logprob: -13.90050983428955
    8. '(y' → logprob: -14.90050983428955
    9. '2' → logprob: -15.90050983428955
    10. ',
' → logprob: -16.650508880615234

Token 51: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014164921827614307
    2. ' y' → logprob: -4.264164924621582
    3. ' ' → logprob: -14.389164924621582
    4. ')y' → logprob: -15.139164924621582
    5. '	y' → logprob: -15.264164924621582
    6. ')' → logprob: -16.139163970947266
    7. '   ' → logprob: -17.014163970947266
    8. ''y' → logprob: -17.014163970947266
    9. '  ' → logprob: -17.389163970947266
    10. '<|end|>' → logprob: -17.764163970947266

Token 52: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -14.500001907348633
    3. ' )' → logprob: -14.500001907348633
    4. '))' → logprob: -14.625001907348633
    5. ')))' → logprob: -17.000001907348633
    6. '')' → logprob: -17.750001907348633
    7. ')>' → logprob: -17.875001907348633
    8. '),' → logprob: -17.875001907348633
    9. ')#' → logprob: -18.000001907348633
    10. ')

' → logprob: -18.125001907348633

Token 53: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09636526554822922
    2. ',' → logprob: -3.221365213394165
    3. '_' → logprob: -3.971365213394165
    4. ')' → logprob: -4.596365451812744
    5. '#' → logprob: -5.346365451812744
    6. ',
' → logprob: -5.471365451812744
    7. '
' → logprob: -6.221365451812744
    8. '\' → logprob: -6.596365451812744
    9. ' def' → logprob: -6.596365451812744
    10. '_
' → logprob: -6.846365451812744

Token 54: ' main' (ID: 2758)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.008454650640487671
    2. ' L' → logprob: -5.8834547996521
    3. 'l' → logprob: -6.3834547996521
    4. ' find' → logprob: -7.2584547996521
    5. ' least' → logprob: -7.6334547996521
    6. ' reduce' → logprob: -7.7584547996521
    7. ' ' → logprob: -7.7584547996521
    8. ' red' → logprob: -8.258454322814941
    9. ' lst' → logprob: -8.258454322814941
    10. ' calculate' → logprob: -8.383454322814941

Token 55: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.07162835448980331
    2. '(' → logprob: -2.6966283321380615
    3. '()' → logprob: -7.196628570556641
    4. '_' → logprob: -7.196628570556641
    5. '(_:' → logprob: -10.57162857055664
    6. '(:' → logprob: -10.69662857055664
    7. '(_' → logprob: -10.94662857055664
    8. ' ():' → logprob: -11.19662857055664
    9. '(**' → logprob: -11.32162857055664
    10. '```' → logprob: -11.44662857055664

Token 56: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11165691912174225
    2. ' numbers' → logprob: -2.736656904220581
    3. ' n' → logprob: -3.986656904220581
    4. 'n' → logprob: -4.11165714263916
    5. ' nums' → logprob: -6.11165714263916
    6. 'numbers' → logprob: -6.36165714263916
    7. ' pass' → logprob: -7.48665714263916
    8. ' input' → logprob: -8.73665714263916
    9. ' data' → logprob: -8.98665714263916
    10. ' integers' → logprob: -9.11165714263916

Token 57: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6235749125480652
    2. 'nums' → logprob: -1.99857497215271
    3. 'numbers' → logprob: -2.12357497215271
    4. '   ' → logprob: -2.74857497215271
    5. 'arr' → logprob: -3.12357497215271
    6. ' numbers' → logprob: -3.12357497215271
    7. ' nums' → logprob: -3.87357497215271
    8. ' n' → logprob: -4.123574733734131
    9. 'lst' → logprob: -4.873574733734131
    10. ' arr' → logprob: -5.248574733734131

Token 58: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013866222463548183
    2. '=' → logprob: -4.763866424560547
    3. ',' → logprob: -5.263866424560547
    4. '=int' → logprob: -10.513866424560547
    5. ' ,' → logprob: -11.013866424560547
    6. ' ' → logprob: -11.513866424560547
    7. '  ' → logprob: -13.013866424560547
    8. '   ' → logprob: -13.138866424560547
    9. ' =
' → logprob: -13.388866424560547
    10. '=input' → logprob: -13.763866424560547

Token 59: ' eval' (ID: 29383)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.25305455923080444
    2. 'int' → logprob: -1.5030546188354492
    3. '10' → logprob: -7.128054618835449
    4. ' ' → logprob: -9.00305461883545
    5. '20' → logprob: -10.12805461883545
    6. '5' → logprob: -10.12805461883545
    7. '15' → logprob: -10.75305461883545
    8. '100' → logprob: -11.75305461883545
    9. '[int' → logprob: -11.87805461883545
    10. '3' → logprob: -12.00305461883545

Token 60: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.38695207238197327
    2. '(' → logprob: -1.1369520425796509
    3. 'input' → logprob: -9.88695240020752
    4. '(eval' → logprob: -11.38695240020752
    5. '('' → logprob: -12.26195240020752
    6. '(
' → logprob: -12.38695240020752
    7. '("("' → logprob: -12.76195240020752
    8. '((' → logprob: -13.63695240020752
    9. '(open' → logprob: -14.13695240020752
    10. '(raw' → logprob: -14.38695240020752

Token 61: '())
' (ID: 4574)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.8985904455184937
    2. '(' → logprob: -1.0235904455184937
    3. '()' → logprob: -1.7735904455184937
    4. '())' → logprob: -3.523590564727783
    5. ')' → logprob: -3.648590564727783
    6. '("("' → logprob: -5.023590564727783
    7. '("' → logprob: -6.898590564727783
    8. ' ' → logprob: -8.773590087890625
    9. '("")' → logprob: -9.523590087890625
    10. '(""))' → logprob: -9.648590087890625

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7770854234695435
    2. '
' → logprob: -2.152085304260254
    3. '    
' → logprob: -2.277085304260254
    4. ' 
' → logprob: -2.527085304260254
    5. ' ' → logprob: -2.902085304260254
    6. '  
' → logprob: -3.402085304260254
    7. ')' → logprob: -3.652085304260254
    8. '<|end|>' → logprob: -4.152085304260254
    9. '   
' → logprob: -4.277085304260254
    10. 'def' → logprob: -4.902085304260254

Token 63: ' arr' (ID: 1724)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -1.315117359161377
    2. ' arr' → logprob: -2.190117359161377
    3. ' nums' → logprob: -2.315117359161377
    4. 'arr' (adapté à ' arr') → logprob: -2.565117359161377
    5. ' A' → logprob: -2.815117359161377
    6. 'nums' → logprob: -2.815117359161377
    7. '   ' → logprob: -2.940117359161377
    8. ' lst' → logprob: -3.315117359161377
    9. 'A' → logprob: -3.440117359161377
    10. 'numbers' → logprob: -3.440117359161377

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021021069958806038
    2. '=' → logprob: -3.8960211277008057
    3. '[' → logprob: -8.521020889282227
    4. '[:]' → logprob: -8.896020889282227
    5. '[]' → logprob: -10.521020889282227
    6. '  ' → logprob: -11.021020889282227
    7. '[:' → logprob: -11.146020889282227
    8. ')' → logprob: -11.271020889282227
    9. '   ' → logprob: -11.521020889282227
    10. '=[]' → logprob: -11.521020889282227

Token 65: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8278964757919312
    2. '[list' → logprob: -1.5778964757919312
    3. '[' → logprob: -2.0778965950012207
    4. ' list' → logprob: -2.2028965950012207
    5. '[input' → logprob: -2.5778965950012207
    6. ' [' → logprob: -3.7028965950012207
    7. 'eval' → logprob: -4.452896595001221
    8. '[]' → logprob: -6.327896595001221
    9. '[int' → logprob: -6.577896595001221
    10. '(eval' → logprob: -6.577896595001221

Token 66: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.002041890751570463
    2. '(' → logprob: -6.252041816711426
    3. '(eval' → logprob: -9.627041816711426
    4. '(int' → logprob: -10.877041816711426
    5. '(range' → logprob: -11.252041816711426
    6. '(input' → logprob: -11.377041816711426
    7. '()' → logprob: -13.377041816711426
    8. '(
' → logprob: -13.877041816711426
    9. '(filter' → logprob: -14.377041816711426
    10. '(arr' → logprob: -15.752041816711426

Token 67: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00689072348177433
    2. '(' → logprob: -5.006890773773193
    3. '(eval' → logprob: -8.756890296936035
    4. ' (' → logprob: -12.006890296936035
    5. '(
' → logprob: -12.506890296936035
    6. ',int' → logprob: -12.881890296936035
    7. '   ' → logprob: -13.756890296936035
    8. '<int' → logprob: -13.881890296936035
    9. 'int' → logprob: -13.881890296936035
    10. '(input' → logprob: -14.131890296936035

Token 68: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.2293253093957901
    2. ',' → logprob: -1.604325294494629
    3. '(input' → logprob: -5.604325294494629
    4. 'input' → logprob: -9.229325294494629
    5. '(' → logprob: -9.854325294494629
    6. ' ,' → logprob: -10.229325294494629
    7. '),' → logprob: -10.979325294494629
    8. ',(' → logprob: -12.104325294494629
    9. ' input' → logprob: -12.979325294494629
    10. '(),' → logprob: -13.229325294494629

Token 69: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.007761250250041485
    2. ' input' → logprob: -4.882761478424072
    3. '(input' → logprob: -9.382761001586914
    4. ',input' → logprob: -10.507761001586914
    5. '   ' → logprob: -10.757761001586914
    6. ')' → logprob: -12.257761001586914
    7. ' ' → logprob: -12.257761001586914
    8. '    ' → logprob: -12.882761001586914
    9. '	input' → logprob: -12.882761001586914
    10. '  ' → logprob: -13.257761001586914

Token 70: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.8624639324116288e-06
    2. '()' → logprob: -13.625001907348633
    3. ' ().' → logprob: -15.000001907348633
    4. '(' → logprob: -16.625001907348633
    5. ')' → logprob: -16.625001907348633
    6. '.split' → logprob: -16.875001907348633
    7. '()))' → logprob: -17.000001907348633
    8. '))' → logprob: -17.625001907348633
    9. '()
' → logprob: -18.125001907348633
    10. '())' → logprob: -18.625001907348633

Token 71: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001178916310891509
    2. 'strip' → logprob: -6.751178741455078
    3. ' split' → logprob: -12.376178741455078
    4. 'rstrip' → logprob: -12.501178741455078
    5. '(split' → logprob: -14.376178741455078
    6. 'spl' → logprob: -17.001178741455078
    7. ')' → logprob: -17.376178741455078
    8. '.split' → logprob: -17.751178741455078
    9. '().' → logprob: -18.001178741455078
    10. ' strip' → logprob: -18.376178741455078

Token 72: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03762860223650932
    2. '()' → logprob: -3.787628650665283
    3. '())' → logprob: -4.287628650665283
    4. '))' → logprob: -7.912628650665283
    5. '())))' → logprob: -9.537628173828125
    6. '(' → logprob: -10.162628173828125
    7. '()))
' → logprob: -10.162628173828125
    8. ')' → logprob: -11.412628173828125
    9. '()));' → logprob: -12.162628173828125
    10. '()))

' → logprob: -12.787628173828125

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5116508603096008
    2. '
' → logprob: -2.011650800704956
    3. '    
' → logprob: -2.011650800704956
    4. '<|end|>' → logprob: -2.136650800704956
    5. '  
' → logprob: -5.886651039123535
    6. ')' → logprob: -6.011651039123535
    7. '   
' → logprob: -6.386651039123535
    8. '<|end|>' → logprob: -6.636651039123535
    9. 'n' → logprob: -6.886651039123535
    10. '  ' → logprob: -7.011651039123535

Token 74: ' #' (ID: 1069)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.1462124586105347
    2. ' result' → logprob: -1.5212124586105347
    3. '   ' → logprob: -1.6462124586105347
    4. '
' → logprob: -1.8962124586105347
    5. ' l' → logprob: -3.521212577819824
    6. 'n' → logprob: -3.896212577819824
    7. '    
' → logprob: -4.271212577819824
    8. 'res' → logprob: -4.521212577819824
    9. 'l' → logprob: -5.021212577819824
    10. ' for' → logprob: -5.146212577819824

Token 75: ' Calcul' (ID: 57243)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.49890223145484924
    2. ' result' → logprob: -1.3739022016525269
    3. ' res' → logprob: -3.1239023208618164
    4. 'result' → logprob: -3.8739023208618164
    5. ' lc' → logprob: -4.123902320861816
    6. ' if' → logprob: -4.248902320861816
    7. 'l' → logprob: -4.248902320861816
    8. '   ' → logprob: -4.998902320861816
    9. ' ans' → logprob: -5.248902320861816
    10. ' for' → logprob: -5.748902320861816

Token 76: ' du' (ID: 1462)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.4296528398990631
    2. 'ating' → logprob: -1.0546528100967407
    3. '   ' → logprob: -7.929652690887451
    4. 'at' → logprob: -8.55465316772461
    5. 'ation' → logprob: -9.42965316772461
    6. 'ATING' → logprob: -10.17965316772461
    7. 'a' → logprob: -10.42965316772461
    8. 'ator' → logprob: -10.67965316772461
    9. 'atting' → logprob: -11.11715316772461
    10. 'ATE' → logprob: -11.17965316772461

Token 77: ' PPC' (ID: 94738)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -1.2536765336990356
    2. 'l' → logprob: -1.8786765336990356
    3. ' pg' → logprob: -2.878676414489746
    4. '_l' → logprob: -3.003676414489746
    5. '_p' → logprob: -3.128676414489746
    6. 'pg' → logprob: -3.253676414489746
    7. 'LC' → logprob: -3.253676414489746
    8. 'p' → logprob: -3.378676414489746
    9. '```' → logprob: -3.378676414489746
    10. '_' → logprob: -3.628676414489746

Token 78: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.26151952147483826
    2. 'I' → logprob: -1.8865195512771606
    3. 'm' → logprob: -3.886519432067871
    4. 'def' → logprob: -3.886519432067871
    5. 'f' → logprob: -4.636519432067871
    6. 'F' → logprob: -5.136519432067871
    7. 't' → logprob: -5.761519432067871
    8. 'i' → logprob: -6.261519432067871
    9. 'MI' → logprob: -6.261519432067871
    10. 'T' → logprob: -6.386519432067871

Token 79: ' avec' (ID: 3937)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -1.3205444812774658
    2. '(' → logprob: -1.4455444812774658
    3. ' de' → logprob: -1.9455444812774658
    4. ' ' → logprob: -2.945544481277466
    5. ' des' → logprob: -3.070544481277466
    6. 'arr' → logprob: -3.320544481277466
    7. ' (' → logprob: -3.445544481277466
    8. '   ' → logprob: -3.570544481277466
    9. '<|end|>' → logprob: -3.820544481277466
    10. '  ' → logprob: -4.070544242858887

Token 80: ' une' (ID: 2463)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'red' → logprob: -0.07833109050989151
    2. 'lambda' → logprob: -3.2033309936523438
    3. 'reduce' → logprob: -3.4533309936523438
    4. ' red' → logprob: -6.203330993652344
    5. 're' → logprob: -8.328330993652344
    6. 'redu' → logprob: -8.703330993652344
    7. 'L' → logprob: -9.328330993652344
    8. ' lambda' → logprob: -9.328330993652344
    9. 'fold' → logprob: -9.578330993652344
    10. ' functools' → logprob: -10.078330993652344

Token 81: ' approche' (ID: 102373)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.8352686762809753
    2. ' réduction' → logprob: -1.8352687358856201
    3. 'r' → logprob: -2.21026873588562
    4. 'fonction' → logprob: -2.58526873588562
    5. 're' → logprob: -3.71026873588562
    6. 'ré' → logprob: -3.83526873588562
    7. ' reduce' → logprob: -3.96026873588562
    8. 'ed' → logprob: -4.085268497467041
    9. ' fonction' → logprob: -4.210268497467041
    10. '=' → logprob: -4.835268497467041

Token 82: ' différente' (ID: 140707)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.474208116531372
    2. ' divide' → logprob: -2.349208116531372
    3. 'divide' → logprob: -2.724208116531372
    4. ' pair' → logprob: -2.974208116531372
    5. ' continue' → logprob: -3.349208116531372
    6. 'div' → logprob: -3.349208116531372
    7. ' it' → logprob: -3.474208116531372
    8. ' iter' → logprob: -3.599208116531372
    9. '_recursive' → logprob: -3.599208116531372
    10. ' par' → logprob: -3.599208116531372

Token 83: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003973796963691711
    2. ' for' → logprob: -7.003973960876465
    3. ',' → logprob: -7.128973960876465
    4. '    
' → logprob: -7.253973960876465
    5. ':' → logprob: -8.378973960876465
    6. '<|end|>' → logprob: -8.503973960876465
    7. 'for' → logprob: -9.003973960876465
    8. '.' → logprob: -9.003973960876465
    9. 's' → logprob: -9.378973960876465
    10. ')' → logprob: -9.378973960876465

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014761674217879772
    2. '<|end|>' → logprob: -4.889761447906494
    3. '    
' → logprob: -5.514761447906494
    4. '
' → logprob: -6.889761447906494
    5. '<|end|>' → logprob: -7.514761447906494
    6. ' for' → logprob: -7.764761447906494
    7. 'for' → logprob: -8.639761924743652
    8. ',' → logprob: -8.764761924743652
    9. '```' → logprob: -8.764761924743652
    10. '.' → logprob: -9.264761924743652

Token 85: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.7513160109519958
    2. ' result' → logprob: -1.6263160705566406
    3. ' l' → logprob: -1.7513160705566406
    4. 'result' → logprob: -2.2513160705566406
    5. ' res' → logprob: -3.8763160705566406
    6. 'res' → logprob: -4.126316070556641
    7. '   ' → logprob: -4.751316070556641
    8. 'pp' → logprob: -6.751316070556641
    9. ' current' → logprob: -7.126316070556641
    10. 'r' → logprob: -7.251316070556641

Token 86: ' =' (ID: 314)
  Prédit: 'cm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.013519346714019775
    2. ' =' → logprob: -4.888519287109375
    3. '_cm' → logprob: -6.638519287109375
    4. 'c' → logprob: -6.763519287109375
    5. 'ambda' → logprob: -7.263519287109375
    6. '_' → logprob: -7.263519287109375
    7. '   ' → logprob: -7.513519287109375
    8. '=' → logprob: -7.638519287109375
    9. '_c' → logprob: -7.638519287109375
    10. 'CM' → logprob: -9.263519287109375

Token 87: ' red' (ID: 3592)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.01480313390493393
    2. 'red' → logprob: -4.889802932739258
    3. '1' → logprob: -5.639802932739258
    4. ' arr' → logprob: -6.264802932739258
    5. 'reduce' → logprob: -6.639802932739258
    6. '0' → logprob: -8.264802932739258
    7. ' red' → logprob: -10.014802932739258
    8. ' ' → logprob: -10.014802932739258
    9. '   ' → logprob: -11.139802932739258
    10. '[arr' → logprob: -11.764802932739258

Token 88: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0030329711735248566
    2. '(' → logprob: -6.00303316116333
    3. '(lambda' → logprob: -7.50303316116333
    4. 'L' → logprob: -13.003032684326172
    5. '(l' → logprob: -13.628032684326172
    6. ' (' → logprob: -14.003032684326172
    7. '(
' → logprob: -14.628032684326172
    8. '((' → logprob: -14.878032684326172
    9. '	L' → logprob: -15.878032684326172
    10. ' L' → logprob: -15.878032684326172

Token 89: 'AMB' (ID: 89274)
  Prédit: 'AMB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AMB' → logprob: -0.000636904442217201
    2. 'AM' → logprob: -7.625637054443359
    3. 'ambda' → logprob: -9.12563705444336
    4. 'MB' → logprob: -11.00063705444336
    5. 'B' → logprob: -11.75063705444336
    6. ')' → logprob: -13.12563705444336
    7. 'MBA' → logprob: -13.62563705444336
    8. 'AB' → logprob: -13.75063705444336
    9. '   ' → logprob: -13.75063705444336
    10. '```' → logprob: -14.00063705444336

Token 90: 'DA' (ID: 6253)
  Prédit: 'DA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DA' → logprob: -0.00016396844875998795
    2. 'B' → logprob: -9.250164031982422
    3. 'BA' → logprob: -9.750164031982422
    4. 'D' → logprob: -12.375164031982422
    5. 'A' → logprob: -12.625164031982422
    6. 'b' → logprob: -13.875164031982422
    7. 'ДА' → logprob: -14.625164031982422
    8. 'BD' → logprob: -16.125164031982422
    9. '```' → logprob: -16.250164031982422
    10. '\' → logprob: -16.750164031982422

Token 91: '_L' (ID: 4258)
  Prédit: '_L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_L' → logprob: -5.512236498361744e-07
    2. '_l' → logprob: -14.875000953674316
    3. ')_' → logprob: -16.5
    4. '```' → logprob: -17.25
    5. '_C' → logprob: -17.5
    6. ' _' → logprob: -17.625
    7. '_S' → logprob: -17.625
    8. '_N' → logprob: -17.75
    9. 'LC' → logprob: -18.0
    10. ')' → logprob: -18.0

Token 92: 'CM' (ID: 14170)
  Prédit: 'CM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CM' → logprob: -0.015332948416471481
    2. 'M' → logprob: -4.39033317565918
    3. 'C' → logprob: -5.89033317565918
    4. 'MC' → logprob: -11.64033317565918
    5. ')' → logprob: -11.76533317565918
    6. ' CM' → logprob: -12.01533317565918
    7. 'AM' → logprob: -12.70283317565918
    8. '```' → logprob: -12.76533317565918
    9. '   ' → logprob: -13.07783317565918
    10. 'A' → logprob: -13.26533317565918

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.173704271830502e-06
    2. ' ,' → logprob: -12.87500286102295
    3. '   ' → logprob: -15.25000286102295
    4. '‌,' → logprob: -16.375003814697266
    5. 'arr' → logprob: -16.750003814697266
    6. '1' → logprob: -17.250003814697266
    7. '`,' → logprob: -17.500003814697266
    8. '    ' → logprob: -17.625003814697266
    9. '(arr' → logprob: -18.000003814697266
    10. ')' → logprob: -18.125003814697266

Token 94: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.03400906175374985
    2. 'arr' → logprob: -3.4090089797973633
    3. '[arr' → logprob: -8.659008979797363
    4. '(arr' → logprob: -8.909008979797363
    5. '	arr' → logprob: -10.284008979797363
    6. ')' → logprob: -11.784008979797363
    7. '<arr' → logprob: -12.284008979797363
    8. '$arr' → logprob: -12.784008979797363
    9. '_arr' → logprob: -13.284008979797363
    10. ' )' → logprob: -14.409008979797363

Token 95: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000631543982308358
    2. ')
' → logprob: -7.375631332397461
    3. ' )' → logprob: -13.250631332397461
    4. ',' → logprob: -13.375631332397461
    5. '   ' → logprob: -14.500631332397461
    6. '))' → logprob: -14.750631332397461
    7. ')

' → logprob: -15.125631332397461
    8. ')
' → logprob: -16.00063133239746
    9. ' ' → logprob: -16.12563133239746
    10. ')`' → logprob: -16.75063133239746

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013948637992143631
    2. '
' → logprob: -5.013948440551758
    3. '<|end|>' → logprob: -5.888948440551758
    4. 'print' → logprob: -6.013948440551758
    5. ')' → logprob: -6.513948440551758
    6. '    
' → logprob: -8.013948440551758
    7. ' print' → logprob: -10.138948440551758
    8. '```' → logprob: -10.388948440551758
    9. '<|end|>' → logprob: -10.888948440551758
    10. ')
' → logprob: -11.263948440551758

Token 97: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025681324303150177
    2. 'print' → logprob: -4.025681495666504
    3. '
' → logprob: -5.025681495666504
    4. ' print' → logprob: -7.650681495666504
    5. '    
' → logprob: -8.650681495666504
    6. '<|end|>' → logprob: -8.650681495666504
    7. '```' → logprob: -10.275681495666504
    8. ')' → logprob: -10.400681495666504
    9. '\n' → logprob: -12.150681495666504
    10. '	print' → logprob: -12.275681495666504

Token 98: ' =' (ID: 314)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.9586414694786072
    2. 'ult' → logprob: -0.9586414694786072
    3. '=' → logprob: -2.583641529083252
    4. ' =' → logprob: -2.708641529083252
    5. 'ults' → logprob: -3.083641529083252
    6. 'ultat' → logprob: -3.333641529083252
    7. 'ul' → logprob: -5.583641529083252
    8. '   ' → logprob: -6.708641529083252
    9. 'ULT' → logprob: -6.958641529083252
    10. 'ульт' → logprob: -7.458641529083252

Token 99: ' ' (ID: 220)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.6915402412414551
    2. 'l' → logprob: -1.066540241241455
    3. '0' → logprob: -3.441540241241455
    4. 'str' → logprob: -3.691540241241455
    5. ' str' → logprob: -3.816540241241455
    6. '1' → logprob: -4.316540241241455
    7. ' ' → logprob: -4.441540241241455
    8. ' math' → logprob: -5.066540241241455
    9. 'sum' → logprob: -5.066540241241455
    10. 'math' → logprob: -5.191540241241455

Token 100: '0' (ID: 15)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.12913861870765686
    2. 'str' → logprob: -3.254138708114624
    3. 'sum' → logprob: -4.004138469696045
    4. '1' → logprob: -4.254138469696045
    5. 'math' → logprob: -4.504138469696045
    6. '0' → logprob: -4.504138469696045
    7. 'max' → logprob: -4.879138469696045
    8. ' l' → logprob: -5.629138469696045
    9. '[l' → logprob: -6.254138469696045
    10. '"' → logprob: -6.629138469696045

Token 101: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.484305202960968
    2. '   ' → logprob: -1.7343051433563232
    3. ' for' → logprob: -2.3593051433563232
    4. 'for' → logprob: -2.8593051433563232
    5. '<|end|>' → logprob: -3.7343051433563232
    6. ' 
' → logprob: -4.609305381774902
    7. '    
' → logprob: -4.984305381774902
    8. ' ' → logprob: -5.484305381774902
    9. '  
' → logprob: -5.734305381774902
    10. '\n' → logprob: -5.859305381774902

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4893570840358734
    2. ' for' → logprob: -1.3643571138381958
    3. 'for' → logprob: -2.6143569946289062
    4. '
' → logprob: -3.3643569946289062
    5. ' ' → logprob: -4.989356994628906
    6. '<|end|>' → logprob: -4.989356994628906
    7. ' 
' → logprob: -5.614356994628906
    8. '    
' → logprob: -6.364356994628906
    9. '  ' → logprob: -6.614356994628906
    10. '\n' → logprob: -6.989356994628906

Token 103: ' [' (ID: 723)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03717225790023804
    2. ' for' → logprob: -3.412172317504883
    3. '   ' → logprob: -5.662172317504883
    4. 'i' → logprob: -10.912172317504883
    5. 'while' → logprob: -11.912172317504883
    6. 'n' → logprob: -12.412172317504883
    7. 'print' → logprob: -12.662172317504883
    8. ' i' → logprob: -12.912172317504883
    9. 'range' → logprob: -13.287172317504883
    10. 'l' → logprob: -13.412172317504883

Token 104: 'res' (ID: 430)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8866949081420898
    2. 'res' → logprob: -1.5116949081420898
    3. ' res' → logprob: -1.6366949081420898
    4. 'for' → logprob: -2.38669490814209
    5. 'print' → logprob: -3.63669490814209
    6. ' i' → logprob: -3.76169490814209
    7. '   ' → logprob: -4.01169490814209
    8. ' for' → logprob: -5.13669490814209
    9. '_' → logprob: -5.38669490814209
    10. 'x' → logprob: -7.76169490814209

Token 105: ' :=' (ID: 3405)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4059801399707794
    2. ']+=' → logprob: -1.905980110168457
    3. ' +=' → logprob: -2.280980110168457
    4. ':=' → logprob: -4.155980110168457
    5. '+' → logprob: -4.280980110168457
    6. ']' → logprob: -4.780980110168457
    7. ' ' → logprob: -5.030980110168457
    8. 'for' → logprob: -5.030980110168457
    9. '=' → logprob: -5.155980110168457
    10. ' for' → logprob: -5.655980110168457

Token 106: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.5556894540786743
    2. ' res' → logprob: -1.6806894540786743
    3. 'l' → logprob: -1.9306894540786743
    4. ' l' → logprob: -2.0556893348693848
    5. 'x' → logprob: -2.4306893348693848
    6. ' x' → logprob: -2.5556893348693848
    7. 'L' → logprob: -3.0556893348693848
    8. ' L' → logprob: -3.3056893348693848
    9. 'max' → logprob: -3.5556893348693848
    10. ' max' → logprob: -3.8056893348693848

Token 107: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18322424590587616
    2. ' +' → logprob: -1.8082242012023926
    3. '+i' → logprob: -6.058224201202393
    4. '+x' → logprob: -7.308224201202393
    5. '+l' → logprob: -9.18322467803955
    6. '+n' → logprob: -9.80822467803955
    7. '-' → logprob: -10.30822467803955
    8. ' ' → logprob: -10.55822467803955
    9. '+a' → logprob: -10.68322467803955
    10. '+p' → logprob: -10.68322467803955

Token 108: ' ((' (ID: 3536)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.443552851676941
    2. 'x' → logprob: -1.818552851676941
    3. 'i' → logprob: -2.0685529708862305
    4. '1' → logprob: -2.4435529708862305
    5. '(' → logprob: -2.6935529708862305
    6. ' x' → logprob: -3.0685529708862305
    7. ' (' → logprob: -3.0685529708862305
    8. ' l' → logprob: -3.1935529708862305
    9. '(i' → logprob: -3.3185529708862305
    10. '(x' → logprob: -3.4435529708862305

Token 109: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06758168339729309
    2. 'x' → logprob: -4.442581653594971
    3. 'L' → logprob: -4.567581653594971
    4. '1' → logprob: -4.692581653594971
    5. 'i' → logprob: -4.692581653594971
    6. 'arr' → logprob: -5.317581653594971
    7. '(' → logprob: -5.442581653594971
    8. 'N' → logprob: -5.692581653594971
    9. ' l' → logprob: -6.442581653594971
    10. 'n' → logprob: -6.817581653594971

Token 110: '-' (ID: 12)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6874680519104004
    2. '//' → logprob: -0.8124680519104004
    3. ' %' → logprob: -3.6874680519104004
    4. '%' → logprob: -4.0624680519104
    5. '-' → logprob: -4.9374680519104
    6. ' -' → logprob: -6.6874680519104
    7. '%i' → logprob: -7.0624680519104
    8. '+' → logprob: -8.187467575073242
    9. ' ' → logprob: -8.374967575073242
    10. '%x' → logprob: -8.687467575073242

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23341535031795502
    2. 'i' → logprob: -2.483415365219116
    3. 'arr' → logprob: -2.858415365219116
    4. 'x' → logprob: -2.983415365219116
    5. 'a' → logprob: -4.483415126800537
    6. 'e' → logprob: -7.108415126800537
    7. ' x' → logprob: -7.358415126800537
    8. ' i' → logprob: -7.608415126800537
    9. 'n' → logprob: -7.983415126800537
    10. '(arr' → logprob: -7.983415126800537

Token 112: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013057165779173374
    2. ')//' → logprob: -4.513057231903076
    3. ')%' → logprob: -6.638057231903076
    4. ' )' → logprob: -7.888057231903076
    5. '//' → logprob: -8.638056755065918
    6. '%' → logprob: -9.513056755065918
    7. ' //' → logprob: -10.388056755065918
    8. ' %' → logprob: -11.513056755065918
    9. '-' → logprob: -11.888056755065918
    10. '%i' → logprob: -12.638056755065918

Token 113: 'x' (ID: 87)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9458600282669067
    2. 'x' → logprob: -0.9458600282669067
    3. 'a' → logprob: -2.445859909057617
    4. 'arr' → logprob: -2.820859909057617
    5. ' i' → logprob: -3.945859909057617
    6. ' x' → logprob: -4.445859909057617
    7. 'v' → logprob: -4.695859909057617
    8. 'n' → logprob: -5.070859909057617
    9. 'k' → logprob: -5.195859909057617
    10. ')' → logprob: -5.695859909057617

Token 114: ')' (ID: 8)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7525622248649597
    2. ')' → logprob: -0.8775622248649597
    3. '==' → logprob: -2.2525622844696045
    4. ' for' → logprob: -6.127562046051025
    5. ')==' → logprob: -6.127562046051025
    6. ' )' → logprob: -6.127562046051025
    7. ' !=' → logprob: -7.502562046051025
    8. '   ' → logprob: -8.877562522888184
    9. '!=' → logprob: -9.002562522888184
    10. ' ' → logprob: -9.252562522888184

Token 115: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04877868667244911
    2. 'for' → logprob: -3.048778772354126
    3. '   ' → logprob: -9.423778533935547
    4. ' ' → logprob: -9.548778533935547
    5. ')' → logprob: -10.548778533935547
    6. '	for' → logprob: -12.173778533935547
    7. '  ' → logprob: -12.923778533935547
    8. '    ' → logprob: -13.423778533935547
    9. ']' → logprob: -13.673778533935547
    10. ' in' → logprob: -14.173778533935547

Token 116: ' x' (ID: 1215)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.07897967845201492
    2. 'arr' → logprob: -2.578979730606079
    3. '	arr' → logprob: -9.9539794921875
    4. '(arr' → logprob: -10.5789794921875
    5. 'x' → logprob: -12.3289794921875
    6. ' ' → logprob: -12.7039794921875
    7. '[arr' → logprob: -12.7039794921875
    8. '_arr' → logprob: -13.3289794921875
    9. '<arr' → logprob: -13.5789794921875
    10. '$arr' → logprob: -13.9539794921875

Token 117: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04859475791454315
    2. 'in' → logprob: -3.0485947132110596
    3. 'arr' → logprob: -13.04859447479248
    4. ' ' → logprob: -13.04859447479248
    5. '<|end|>' → logprob: -13.17359447479248
    6. '  ' → logprob: -15.54859447479248
    7. '   ' → logprob: -15.67359447479248
    8. ']' → logprob: -16.048595428466797
    9. '<arr' → logprob: -16.673595428466797
    10. ',' → logprob: -16.798595428466797

Token 118: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.02978532575070858
    2. ' arr' → logprob: -3.529785394668579
    3. '(arr' → logprob: -11.27978515625
    4. '[arr' → logprob: -11.27978515625
    5. '	arr' → logprob: -11.90478515625
    6. '$arr' → logprob: -13.65478515625
    7. '<arr' → logprob: -14.02978515625
    8. '_arr' → logprob: -15.15478515625
    9. ' ' → logprob: -15.52978515625
    10. '   ' → logprob: -16.52978515625

Token 119: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0002671768015716225
    2. ')]' → logprob: -8.625267028808594
    3. ' ]' → logprob: -9.500267028808594
    4. ']
' → logprob: -12.250267028808594
    5. '   ' → logprob: -12.375267028808594
    6. ')' → logprob: -13.125267028808594
    7. '])' → logprob: -14.125267028808594
    8. '()]' → logprob: -14.875267028808594
    9. '`]' → logprob: -15.375267028808594
    10. '']' → logprob: -16.625267028808594

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012141639599576592
    2. 'print' → logprob: -7.876214027404785
    3. '
' → logprob: -8.001214027404785
    4. '<|end|>' → logprob: -8.001214027404785
    5. '    
' → logprob: -9.126214027404785
    6. 'return' → logprob: -10.876214027404785
    7. ' return' → logprob: -11.501214027404785
    8. ' print' → logprob: -12.001214027404785
    9. ')' → logprob: -12.126214027404785
    10. '\n' → logprob: -13.501214027404785

Token 121: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01000291295349598
    2. 'print' (adapté à ' print') → logprob: -4.760003089904785
    3. 'return' → logprob: -6.635003089904785
    4. ' return' → logprob: -10.385003089904785
    5. '    
' → logprob: -11.260003089904785
    6. '<|end|>' → logprob: -11.260003089904785
    7. ' print' → logprob: -11.385003089904785
    8. ')' → logprob: -13.885003089904785
    9. '	return' → logprob: -14.010003089904785
    10. '```' → logprob: -14.260003089904785

Token 122: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.0052470373921096325
    2. '(' → logprob: -5.255247116088867
    3. '()' → logprob: -11.755247116088867
    4. ' (' → logprob: -12.505247116088867
    5. 'res' → logprob: -14.380247116088867
    6. '(
' → logprob: -14.505247116088867
    7. '(len' → logprob: -16.005247116088867
    8. '((' → logprob: -16.005247116088867
    9. '(r' → logprob: -16.380247116088867
    10. '(re' → logprob: -16.630247116088867

Token 123: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -13.750000953674316
    3. ')
' → logprob: -15.875000953674316
    4. '))' → logprob: -16.500001907348633
    5. ')`' → logprob: -16.750001907348633
    6. ')}' → logprob: -18.250001907348633
    7. ')#' → logprob: -18.500001907348633
    8. ')**' → logprob: -18.625001907348633
    9. '`)' → logprob: -19.250001907348633
    10. '())' → logprob: -19.250001907348633

Token 124: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 125: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0031964892987161875
    2. '__' → logprob: -5.753196716308594
    3. ' ' → logprob: -11.378196716308594
    4. '_' → logprob: -12.503196716308594
    5. ' _' → logprob: -13.378196716308594
    6. ' ' → logprob: -13.503196716308594
    7. ' ___' → logprob: -15.503196716308594
    8. '_name' → logprob: -15.878196716308594
    9. '  ' → logprob: -15.878196716308594
    10. '___' → logprob: -16.003196716308594

Token 126: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.015027442947030067
    2. ' ==' → logprob: -4.7650275230407715
    3. '==' → logprob: -5.1400275230407715
    4. ' __' → logprob: -8.015027046203613
    5. '.__' → logprob: -9.515027046203613
    6. '_' → logprob: -10.265027046203613
    7. '__.__' → logprob: -10.515027046203613
    8. '=="' → logprob: -11.265027046203613
    9. '__.' → logprob: -11.890027046203613
    10. 'name' → logprob: -12.140027046203613

Token 127: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.438573680294212e-06
    2. '==' → logprob: -12.375005722045898
    3. '__.__' → logprob: -13.875005722045898
    4. ' ==' → logprob: -17.2500057220459
    5. '____' → logprob: -17.2500057220459
    6. '__
' → logprob: -17.3750057220459
    7. ' __' → logprob: -17.8750057220459
    8. '___' → logprob: -17.8750057220459
    9. '_' → logprob: -18.1250057220459
    10. '__.' → logprob: -18.6250057220459

Token 128: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6998282670974731
    2. '==' → logprob: -1.3248282670974731
    3. ' ==' → logprob: -1.4498282670974731
    4. '=="' → logprob: -5.949828147888184
    5. '.__' → logprob: -9.449828147888184
    6. '=='' → logprob: -9.574828147888184
    7. '_' → logprob: -10.449828147888184
    8. '___' → logprob: -11.199828147888184
    9. '=' → logprob: -11.324828147888184
    10. '.' → logprob: -11.449828147888184

Token 129: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.4743601083755493
    2. ''' → logprob: -0.9743601083755493
    3. ' "__' → logprob: -8.349360466003418
    4. ' '__' → logprob: -10.224360466003418
    5. '__' → logprob: -11.724360466003418
    6. ' "' → logprob: -13.974360466003418
    7. '"user' → logprob: -14.849360466003418
    8. ''"' → logprob: -14.974360466003418
    9. ' '' → logprob: -16.0993595123291
    10. '"'' → logprob: -16.5993595123291

Token 130: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.1027957871556282
    2. '__' → logprob: -2.3527958393096924
    3. 'name' → logprob: -5.977795600891113
    4. '_main' → logprob: -11.352795600891113
    5. '__':
' → logprob: -11.852795600891113
    6. 'm' → logprob: -12.227795600891113
    7. '2' → logprob: -12.477795600891113
    8. 'x' → logprob: -12.852795600891113
    9. '7' → logprob: -12.977795600891113
    10. '__.' → logprob: -13.352795600891113

Token 131: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3134027123451233
    2. '__':
' → logprob: -1.3134026527404785
    3. '__.' → logprob: -9.063403129577637
    4. '__:' → logprob: -11.063403129577637
    5. '__":
' → logprob: -12.063403129577637
    6. '__.__' → logprob: -12.813403129577637
    7. '_' → logprob: -15.063403129577637
    8. '__('' → logprob: -15.188403129577637
    9. '___' → logprob: -16.31340217590332
    10. '__.'/' → logprob: -16.56340217590332

Token 132: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2525196075439453
    2. 'main' → logprob: -1.5025196075439453
    3. '	main' → logprob: -7.752519607543945
    4. '   ' → logprob: -9.377519607543945
    5. '__' → logprob: -10.002519607543945
    6. '_main' → logprob: -11.752519607543945
    7. ' ' → logprob: -12.002519607543945
    8. ' __' → logprob: -12.627519607543945
    9. ' ' → logprob: -12.752519607543945
    10. '    
' → logprob: -12.877519607543945

Token 133: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.8624639324116288e-06
    2. ' main' → logprob: -13.250001907348633
    3. '	main' → logprob: -18.875001907348633
    4. '   ' → logprob: -22.750001907348633
    5. '_main' → logprob: -23.875001907348633
    6. '(main' → logprob: -24.500001907348633
    7. 'import' → logprob: -24.875001907348633
    8. '.main' → logprob: -24.875001907348633
    9. 'Main' → logprob: -25.000001907348633
    10. '  ' → logprob: -25.875001907348633

Token 134: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0024699477944523096
    2. '(' → logprob: -6.127470016479492
    3. '<|end|>' → logprob: -9.127470016479492
    4. '()
' → logprob: -9.377470016479492
    5. ')' → logprob: -10.377470016479492
    6. '```' → logprob: -11.127470016479492
    7. '())' → logprob: -11.627470016479492
    8. '#' → logprob: -12.002470016479492
    9. '();' → logprob: -12.502470016479492
    10. '
' → logprob: -12.502470016479492


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 132
Tokens correctement prédits (1ère position, stricte): 48
Tokens correctement prédits (1ère position, avec adaptation): 50
Tokens correctement prédits (top 10): 100
Précision stricte (1ère position): 36.36%
Précision adaptée (1ère position): 37.88%
Précision (top 10): 75.76%
================================================================================
