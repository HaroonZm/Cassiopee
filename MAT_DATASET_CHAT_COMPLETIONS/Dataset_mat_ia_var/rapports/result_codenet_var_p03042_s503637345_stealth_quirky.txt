================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from sys import stdin as _s; I=input; del input
I=lambda:_s.readline().strip()

def main():
    S = I()
    M, Y = int(S[:2]), int(S[2:])
    # On va faire différemment
    mm, yy = [1 <= M <= 12, 1 <= Y <= 12]
    outcome = ("NA", "YYMM", "MMYY", "AMBIGUOUS")[(mm<<1)|yy]
    print(outcome if outcome!="NA" else outcome)

if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' stdin' (ID: 75143)
  Prédit: 'argv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'argv' → logprob: -0.05142802372574806
    2. ' argv' → logprob: -3.4264280796051025
    3. 'exit' → logprob: -4.176427841186523
    4. ' exit' → logprob: -6.801427841186523
    5. 'stdout' → logprob: -7.301427841186523
    6. 'stdin' → logprob: -8.426427841186523
    7. 'path' → logprob: -8.801427841186523
    8. 'import' → logprob: -10.176427841186523
    9. 'stderr' → logprob: -10.426427841186523
    10. 'version' → logprob: -10.676427841186523

Token 4: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09071744233369827
    2. '\n' → logprob: -2.8407175540924072
    3. '.readline' → logprob: -3.8407175540924072
    4. '\' → logprob: -6.465717315673828
    5. 'newline' → logprob: -6.715717315673828
    6. '
' → logprob: -6.965717315673828
    7. '.read' → logprob: -7.340717315673828
    8. 'import' → logprob: -7.590717315673828
    9. 'for' → logprob: -7.715717315673828
    10. '' → logprob: -7.965717315673828

Token 5: ' _' (ID: 1175)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.17638272047042847
    2. ' input' → logprob: -2.1763827800750732
    3. 'sys' → logprob: -3.8013827800750732
    4. 'stdin' → logprob: -4.301382541656494
    5. ' sys' → logprob: -5.426382541656494
    6. 'f' → logprob: -6.176382541656494
    7. ' f' → logprob: -6.551382541656494
    8. 'in' → logprob: -6.801382541656494
    9. 'inp' → logprob: -6.801382541656494
    10. 's' → logprob: -7.301382541656494

Token 6: 's' (ID: 82)
  Prédit: 'stdin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stdin' → logprob: -0.12575531005859375
    2. '_' → logprob: -2.3757553100585938
    3. 's' → logprob: -4.125755310058594
    4. 'is' → logprob: -5.875755310058594
    5. 'std' → logprob: -6.500755310058594
    6. 'in' → logprob: -6.750755310058594
    7. '_st' → logprob: -7.375755310058594
    8. '_s' → logprob: -7.500755310058594
    9. 'r' → logprob: -7.750755310058594
    10. 'sd' → logprob: -8.000755310058594

Token 7: ';' (ID: 26)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5523027181625366
    2. '.' → logprob: -0.9273027181625366
    3. '_' → logprob: -5.177302837371826
    4. 'td' → logprob: -5.177302837371826
    5. '._' → logprob: -5.677302837371826
    6. '.t' → logprob: -5.677302837371826
    7. '_t' → logprob: -6.177302837371826
    8. ',' → logprob: -6.552302837371826
    9. 'tr' → logprob: -6.677302837371826
    10. '.readline' → logprob: -6.677302837371826

Token 8: ' I' (ID: 357)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8171087503433228
    2. 'stdin' → logprob: -1.4421087503433228
    3. 'td' → logprob: -1.8171087503433228
    4. 't' → logprob: -3.067108631134033
    5. '_s' → logprob: -3.192108631134033
    6. 'input' → logprob: -3.692108631134033
    7. '_input' → logprob: -4.567108631134033
    8. 'd' → logprob: -5.067108631134033
    9. 's' → logprob: -5.192108631134033
    10. 'dt' → logprob: -5.567108631134033

Token 9: '=input' (ID: 87911)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0012352262856438756
    2. 'n' → logprob: -6.751235008239746
    3. 'mp' → logprob: -10.876235008239746
    4. 's' → logprob: -11.501235008239746
    5. '_m' → logprob: -11.751235008239746
    6. '_' → logprob: -12.251235008239746
    7. 'O' → logprob: -12.376235008239746
    8. 'mpl' → logprob: -12.626235008239746
    9. 'mpr' → logprob: -13.001235008239746
    10. 'gnore' → logprob: -13.126235008239746

Token 10: ';' (ID: 26)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.032167620956897736
    2. '.' → logprob: -3.532167673110962
    3. '()' → logprob: -7.532167434692383
    4. ',' → logprob: -7.907167434692383
    5. ' (' → logprob: -8.157167434692383
    6. '(
' → logprob: -8.282167434692383
    7. ';' → logprob: -8.532167434692383
    8. ')' → logprob: -8.657167434692383
    9. '_' → logprob: -9.282167434692383
    10. '"' → logprob: -9.282167434692383

Token 11: ' del' (ID: 1083)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5671661496162415
    2. '()' → logprob: -0.9421661496162415
    3. '_' → logprob: -4.067166328430176
    4. '.' → logprob: -5.317166328430176
    5. '();' → logprob: -5.692166328430176
    6. '"' → logprob: -5.942166328430176
    7. ')' → logprob: -6.192166328430176
    8. '=' → logprob: -6.317166328430176
    9. '\' → logprob: -6.567166328430176
    10. ' (' → logprob: -6.942166328430176

Token 12: ' input' (ID: 3422)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8557778000831604
    2. '_s' → logprob: -0.8557778000831604
    3. ' _' → logprob: -3.1057777404785156
    4. 'I' → logprob: -3.4807777404785156
    5. ' I' → logprob: -3.7307777404785156
    6. '_I' → logprob: -3.7307777404785156
    7. ' ' → logprob: -4.605777740478516
    8. '_input' → logprob: -4.730777740478516
    9. 's' → logprob: -5.230777740478516
    10. '_i' → logprob: -6.855777740478516

Token 13: '
' (ID: 198)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33014386892318726
    2. '(' → logprob: -2.330143928527832
    3. '()' → logprob: -3.330143928527832
    4. ',' → logprob: -3.330143928527832
    5. ' ' → logprob: -3.830143928527832
    6. '\' → logprob: -3.830143928527832
    7. ')' → logprob: -4.205143928527832
    8. '=' → logprob: -4.455143928527832
    9. ';' → logprob: -4.705143928527832
    10. '.' → logprob: -5.080143928527832

Token 14: 'I' (ID: 40)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4147203862667084
    2. '(' → logprob: -2.289720296859741
    3. '()' → logprob: -2.664720296859741
    4. '=' → logprob: -3.664720296859741
    5. '#' → logprob: -3.914720296859741
    6. '<|end|>' → logprob: -3.914720296859741
    7. ',' → logprob: -4.03972053527832
    8. '\' → logprob: -4.28972053527832
    9. ')' → logprob: -4.28972053527832
    10. ';' → logprob: -4.66472053527832

Token 15: '=lambda' (ID: 64865)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002461152384057641
    2. '.' → logprob: -6.377460956573486
    3. '(
' → logprob: -7.877460956573486
    4. ')' → logprob: -9.252461433410645
    5. ' (' → logprob: -9.752461433410645
    6. ',' → logprob: -9.752461433410645
    7. ''' → logprob: -10.627461433410645
    8. '()' → logprob: -10.752461433410645
    9. '(

' → logprob: -10.877461433410645
    10. '=' → logprob: -11.002461433410645

Token 16: ':_' (ID: 54242)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.609272301197052
    2. 'lambda' → logprob: -1.6092722415924072
    3. '_' → logprob: -2.1092722415924072
    4. ' s' → logprob: -2.8592722415924072
    5. ' _' → logprob: -3.8592722415924072
    6. ' ' → logprob: -4.359272480010986
    7. ' x' → logprob: -4.734272480010986
    8. 's' → logprob: -4.859272480010986
    9. '_s' → logprob: -4.984272480010986
    10. '_lambda' → logprob: -5.359272480010986

Token 17: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.537180211627856e-05
    2. '_s' → logprob: -10.125045776367188
    3. '-s' → logprob: -13.250045776367188
    4. 'next' → logprob: -13.375045776367188
    5. '.s' → logprob: -14.625045776367188
    6. ''s' → logprob: -14.750045776367188
    7. 'rstrip' → logprob: -15.750045776367188
    8. 'strip' → logprob: -15.875045776367188
    9. 'stdin' → logprob: -16.750045776367188
    10. 'sys' → logprob: -16.750045776367188

Token 18: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.005102122202515602
    2. '.read' → logprob: -5.505102157592773
    3. '.' → logprob: -7.005102157592773
    4. '.readlines' → logprob: -9.505102157592773
    5. 'read' → logprob: -10.630102157592773
    6. '.Read' → logprob: -12.505102157592773
    7. ' readline' → logprob: -12.755102157592773
    8. '.stdin' → logprob: -12.880102157592773
    9. '().' → logprob: -13.005102157592773
    10. ' .' → logprob: -13.630102157592773

Token 19: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009044802747666836
    2. '().' → logprob: -4.759044647216797
    3. '()
' → logprob: -8.759044647216797
    4. '(' → logprob: -8.759044647216797
    5. '()\' → logprob: -9.509044647216797
    6. ' ()' → logprob: -11.759044647216797
    7. '();' → logprob: -11.759044647216797
    8. '()<' → logprob: -12.259044647216797
    9. '()

' → logprob: -12.634044647216797
    10. '()[' → logprob: -12.634044647216797

Token 20: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.10022111982107162
    2. 'rstrip' → logprob: -2.3502211570739746
    3. 'read' → logprob: -12.350220680236816
    4. 'decode' → logprob: -12.600220680236816
    5. ' strip' → logprob: -12.850220680236816
    6. 'replace' → logprob: -13.100220680236816
    7. '_strip' → logprob: -13.850220680236816
    8. 'split' → logprob: -14.975220680236816
    9. '-strip' → logprob: -15.350220680236816
    10. 'rst' → logprob: -15.600220680236816

Token 21: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22922948002815247
    2. '(' → logprob: -1.60422945022583
    3. '(
' → logprob: -6.35422945022583
    4. '()
' → logprob: -6.60422945022583
    5. '<|end|>' → logprob: -8.479229927062988
    6. '
' → logprob: -9.354229927062988
    7. '#' → logprob: -9.604229927062988
    8. ',' → logprob: -9.729229927062988
    9. ')' → logprob: -9.729229927062988
    10. '()

' → logprob: -9.854229927062988

Token 22: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3447473645210266
    2. '#' → logprob: -1.8447473049163818
    3. '()' → logprob: -2.344747304916382
    4. '(
' → logprob: -4.969747543334961
    5. 'def' → logprob: -4.969747543334961
    6. ')' → logprob: -5.219747543334961
    7. '
' → logprob: -5.219747543334961
    8. '()
' → logprob: -5.969747543334961
    9. ',' → logprob: -6.219747543334961
    10. '<|end|>' → logprob: -6.969747543334961

Token 23: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07975421845912933
    2. ' main' → logprob: -3.329754114151001
    3. ' solve' → logprob: -3.954754114151001
    4. '_' → logprob: -4.57975435256958
    5. ' solution' → logprob: -6.57975435256958
    6. ' func' → logprob: -6.82975435256958
    7. ' test' → logprob: -7.07975435256958
    8. ' read' → logprob: -7.20475435256958
    9. ' _' → logprob: -7.20475435256958
    10. ' factorial' → logprob: -7.32975435256958

Token 24: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.14369788765907288
    2. '(' → logprob: -2.01869797706604
    3. '()' → logprob: -7.268697738647461
    4. '_' → logprob: -8.893697738647461
    5. '(:' → logprob: -9.268697738647461
    6. ' ():' → logprob: -10.518697738647461
    7. ':' → logprob: -10.893697738647461
    8. '(**' → logprob: -11.393697738647461
    9. '():
' → logprob: -11.893697738647461
    10. ' (' → logprob: -12.143697738647461

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013092237524688244
    2. 'n' → logprob: -5.263092041015625
    3. ' ' → logprob: -6.513092041015625
    4. '    ' → logprob: -6.638092041015625
    5. 'x' → logprob: -7.513092041015625
    6. '(' → logprob: -7.513092041015625
    7. 'a' → logprob: -7.513092041015625
    8. '<|end|>' → logprob: -7.763092041015625
    9. ':' → logprob: -8.013092041015625
    10. ')' → logprob: -8.263092041015625

Token 26: ' S' (ID: 336)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.058049384504556656
    2. '   ' → logprob: -3.933049440383911
    3. 'pass' → logprob: -4.058049201965332
    4. 'a' → logprob: -5.058049201965332
    5. 'x' → logprob: -6.433049201965332
    6. 'N' → logprob: -6.433049201965332
    7. ' pass' → logprob: -6.558049201965332
    8. 't' → logprob: -6.558049201965332
    9. 'r' → logprob: -6.683049201965332
    10. '#' → logprob: -6.683049201965332

Token 27: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6332560181617737
    2. ' =' → logprob: -0.7582560181617737
    3. '=input' → logprob: -8.008255958557129
    4. '=int' → logprob: -9.008255958557129
    5. '=[]' → logprob: -10.258255958557129
    6. '=S' → logprob: -10.383255958557129
    7. '=len' → logprob: -11.008255958557129
    8. ' ' → logprob: -11.258255958557129
    9. '=''' → logprob: -11.508255958557129
    10. '+=' → logprob: -11.633255958557129

Token 28: ' I' (ID: 357)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.6447922587394714
    2. ' I' → logprob: -0.7697922587394714
    3. '_I' → logprob: -5.394792079925537
    4. ' _' → logprob: -5.644792079925537
    5. ' ' → logprob: -6.644792079925537
    6. '_' → logprob: -6.894792079925537
    7. ' input' → logprob: -7.394792079925537
    8. '_input' → logprob: -8.019792556762695
    9. 'input' → logprob: -8.269792556762695
    10. '_s' → logprob: -8.644792556762695

Token 29: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.9153885558771435e-06
    2. '()
' → logprob: -12.250005722045898
    3. '(' → logprob: -14.750005722045898
    4. '().' → logprob: -15.500005722045898
    5. ' ()' → logprob: -16.2500057220459
    6. '()

' → logprob: -16.5000057220459
    7. '())' → logprob: -16.6250057220459
    8. '()`' → logprob: -16.7500057220459
    9. '();' → logprob: -17.5000057220459
    10. '()<' → logprob: -17.7500057220459

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0790923610329628
    2. '<|end|>' → logprob: -3.329092264175415
    3. ' ' → logprob: -3.954092264175415
    4. 'n' → logprob: -5.704092502593994
    5. '    
' → logprob: -5.829092502593994
    6. '  ' → logprob: -5.954092502593994
    7. ')' → logprob: -5.954092502593994
    8. '
' → logprob: -6.079092502593994
    9. '    ' → logprob: -6.829092502593994
    10. '  
' → logprob: -7.454092502593994

Token 31: ' M' (ID: 391)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3320943117141724
    2. 'count' → logprob: -1.8320943117141724
    3. 'if' → logprob: -1.8320943117141724
    4. 'for' → logprob: -2.582094192504883
    5. 'print' → logprob: -2.707094192504883
    6. '   ' → logprob: -3.207094192504883
    7. 'r' → logprob: -3.832094192504883
    8. 'N' → logprob: -4.082094192504883
    9. 'res' → logprob: -4.207094192504883
    10. 'v' → logprob: -4.332094192504883

Token 32: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27579495310783386
    2. '=' → logprob: -1.5257949829101562
    3. '=len' → logprob: -4.650794982910156
    4. '   ' → logprob: -4.900794982910156
    5. '  ' → logprob: -7.025794982910156
    6. '=int' → logprob: -7.525794982910156
    7. '=set' → logprob: -7.650794982910156
    8. 'A' → logprob: -7.775794982910156
    9. '=A' → logprob: -7.775794982910156
    10. 'ap' → logprob: -7.775794982910156

Token 33: ' Y' (ID: 865)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.5054583549499512
    2. ' N' → logprob: -1.5054583549499512
    3. ' K' → logprob: -2.880458354949951
    4. 'K' → logprob: -3.130458354949951
    5. 'T' → logprob: -5.255458354949951
    6. '_' → logprob: -5.380458354949951
    7. ' ' → logprob: -5.380458354949951
    8. 'D' → logprob: -5.380458354949951
    9. 'L' → logprob: -5.505458354949951
    10. 'E' → logprob: -5.505458354949951

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326331496238708
    2. '=' → logprob: -0.7576331496238708
    3. ' ' → logprob: -11.382633209228516
    4. ',' → logprob: -11.757633209228516
    5. '=int' → logprob: -12.382633209228516
    6. '=input' → logprob: -12.632633209228516
    7. '=S' → logprob: -14.132633209228516
    8. '=M' → logprob: -14.257633209228516
    9. '=line' → logprob: -14.507633209228516
    10. '＝' → logprob: -14.507633209228516

Token 35: ' int' (ID: 677)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07994529604911804
    2. 'map' → logprob: -2.8299453258514404
    3. ' S' → logprob: -4.329945087432861
    4. 'S' → logprob: -6.454945087432861
    5. ' ' → logprob: -6.954945087432861
    6. ' I' → logprob: -7.329945087432861
    7. ' list' → logprob: -8.20494556427002
    8. ' [' → logprob: -8.20494556427002
    9. 'I' → logprob: -8.70494556427002
    10. '[' → logprob: -8.82994556427002

Token 36: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.2374432384967804
    2. '(' → logprob: -1.612443208694458
    3. '(I' → logprob: -4.487443447113037
    4. '()' → logprob: -8.112442970275879
    5. '(M' → logprob: -8.987442970275879
    6. '(s' → logprob: -9.112442970275879
    7. '(
' → logprob: -9.987442970275879
    8. '('' → logprob: -9.987442970275879
    9. '((' → logprob: -11.362442970275879
    10. '(`' → logprob: -11.487442970275879

Token 37: '[:' (ID: 7808)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026981201022863388
    2. '[:' → logprob: -3.6519811153411865
    3. '[:-' → logprob: -7.651981353759766
    4. '.split' → logprob: -9.276981353759766
    5. '0' → logprob: -10.651981353759766
    6. ')' → logprob: -10.901981353759766
    7. ':' → logprob: -11.401981353759766
    8. '[-' → logprob: -11.401981353759766
    9. '.' → logprob: -11.401981353759766
    10. '[
' → logprob: -11.776981353759766

Token 38: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.5302903652191162
    2. '2' → logprob: -0.9052903652191162
    3. '1' → logprob: -5.780290603637695
    4. '3' → logprob: -6.405290603637695
    5. ' ' → logprob: -6.655290603637695
    6. '6' → logprob: -6.905290603637695
    7. '5' → logprob: -10.280290603637695
    8. '   ' → logprob: -11.030290603637695
    9. '8' → logprob: -11.342790603637695
    10. '7' → logprob: -11.342790603637695

Token 39: ']),' (ID: 19560)
  Prédit: ']),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.0026924132835119963
    2. '])' → logprob: -6.002692222595215
    3. ' ' → logprob: -8.877692222595215
    4. ']' → logprob: -10.502692222595215
    5. ' ]' → logprob: -10.627692222595215
    6. '])),' → logprob: -11.877692222595215
    7. '])*' → logprob: -12.752692222595215
    8. '])-' → logprob: -12.752692222595215
    9. '"]),' → logprob: -12.752692222595215
    10. '']),' → logprob: -12.877692222595215

Token 40: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12711215019226074
    2. ' int' → logprob: -2.1271121501922607
    3. 'S' → logprob: -9.37711238861084
    4. ' S' → logprob: -10.75211238861084
    5. '   ' → logprob: -10.75211238861084
    6. ' ' → logprob: -11.00211238861084
    7. '    ' → logprob: -11.75211238861084
    8. '=int' → logprob: -12.00211238861084
    9. '(int' → logprob: -12.62711238861084
    10. 'I' → logprob: -12.87711238861084

Token 41: '(S' (ID: 6181)
  Prédit: '(S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -5.88418151892256e-05
    2. '(' → logprob: -9.750059127807617
    3. ' (' → logprob: -15.375059127807617
    4. '((' → logprob: -16.125059127807617
    5. '(s' → logprob: -16.250059127807617
    6. '(M' → logprob: -19.250059127807617
    7. '(
' → logprob: -19.375059127807617
    8. '()' → logprob: -20.000059127807617
    9. '('' → logprob: -20.125059127807617
    10. '(I' → logprob: -20.125059127807617

Token 42: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002765902318060398
    2. '[-' → logprob: -9.000276565551758
    3. '[:' → logprob: -9.750276565551758
    4. '()[' → logprob: -10.250276565551758
    5. '(' → logprob: -11.062776565551758
    6. ' [' → logprob: -11.625276565551758
    7. '   ' → logprob: -11.875276565551758
    8. '```' → logprob: -12.562776565551758
    9. ')' → logprob: -12.937776565551758
    10. ':' → logprob: -13.312776565551758

Token 43: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0016206686850637197
    2. '[' → logprob: -7.376620769500732
    3. ' ' → logprob: -7.751620769500732
    4. '3' → logprob: -8.626620292663574
    5. ':' → logprob: -8.751620292663574
    6. '(' → logprob: -9.001620292663574
    7. '-' → logprob: -10.251620292663574
    8. '   ' → logprob: -10.501620292663574
    9. '```' → logprob: -12.001620292663574
    10. '0' → logprob: -12.751620292663574

Token 44: ':])
' (ID: 109592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018649426056072116
    2. '2' → logprob: -9.500186920166016
    3. '])' → logprob: -9.625186920166016
    4. '4' → logprob: -10.250186920166016
    5. ':])
' → logprob: -12.875186920166016
    6. '-' → logprob: -13.125186920166016
    7. '6' → logprob: -13.375186920166016
    8. ' ' → logprob: -13.500186920166016
    9. ':]' → logprob: -14.375186920166016
    10. '3' → logprob: -15.000186920166016

Token 45: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5982723832130432
    2. '
' → logprob: -0.9732723832130432
    3. '<|end|>' → logprob: -2.9732723236083984
    4. ' if' → logprob: -4.473272323608398
    5. ')' → logprob: -5.723272323608398
    6. ' ' → logprob: -6.348272323608398
    7. '    
' → logprob: -6.598272323608398
    8. 'if' → logprob: -6.973272323608398
    9. '<|end|>' → logprob: -8.223272323608398
    10. '	if' → logprob: -8.598272323608398

Token 46: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6132382750511169
    2. '
' → logprob: -1.6132383346557617
    3. 'if' → logprob: -1.8632383346557617
    4. '   ' → logprob: -2.4882383346557617
    5. ' 
' → logprob: -4.988238334655762
    6. ' ' → logprob: -5.238238334655762
    7. '    
' → logprob: -6.113238334655762
    8. ':' → logprob: -6.988238334655762
    9. 'print' → logprob: -7.113238334655762
    10. '  
' → logprob: -7.363238334655762

Token 47: ' On' (ID: 2160)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15119585394859314
    2. 'if' → logprob: -2.276195764541626
    3. ' ' → logprob: -3.901195764541626
    4. ' #' → logprob: -5.901196002960205
    5. '   ' → logprob: -6.151196002960205
    6. ' for' → logprob: -6.651196002960205
    7. ' M' → logprob: -6.651196002960205
    8. '<|end|>' → logprob: -7.088696002960205
    9. '#' → logprob: -7.213696002960205
    10. ' return' → logprob: -7.338696002960205

Token 48: ' va' (ID: 3423)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3192952275276184
    2. 'ly' → logprob: -1.3192951679229736
    3. 'l' → logprob: -6.194295406341553
    4. 'line' → logprob: -6.694295406341553
    5. 'ce' → logprob: -7.694295406341553
    6. 'es' → logprob: -7.819295406341553
    7. ' the' → logprob: -8.194294929504395
    8. ' ly' → logprob: -8.444294929504395
    9. '```' → logprob: -9.444294929504395
    10. ' e' → logprob: -9.506794929504395

Token 49: ' faire' (ID: 8119)
  Prédit: ' vérifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -1.0047388076782227
    2. ' continuer' → logprob: -2.2547388076782227
    3. ' voir' → logprob: -2.8797388076782227
    4. ' tester' → logprob: -3.1297388076782227
    5. ' coder' → logprob: -3.5047388076782227
    6. ' déterminer' → logprob: -3.6297388076782227
    7. ' calcul' → logprob: -3.7547388076782227
    8. ' chercher' → logprob: -4.004738807678223
    9. ' analyser' → logprob: -4.192238807678223
    10. '   ' → logprob: -4.254738807678223

Token 50: ' diff' (ID: 8868)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.6885374784469604
    2. ' un' → logprob: -1.4385374784469604
    3. ' ' → logprob: -2.43853759765625
    4. 'un' → logprob: -3.18853759765625
    5. ' quelque' → logprob: -3.68853759765625
    6. 'une' → logprob: -3.93853759765625
    7. '   ' → logprob: -3.93853759765625
    8. '```' → logprob: -4.43853759765625
    9. ' des' → logprob: -5.31353759765625
    10. ' la' → logprob: -5.56353759765625

Token 51: 'é' (ID: 377)
  Prédit: 'érence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érence' → logprob: -1.1384942531585693
    2. 'érent' → logprob: -1.7634942531585693
    3. 'érer' → logprob: -1.8884942531585693
    4. 'é' → logprob: -2.1384942531585693
    5. 'er' → logprob: -2.3884942531585693
    6. 'ér' → logprob: -3.1384942531585693
    7. 'érences' → logprob: -3.5134942531585693
    8. 'érents' → logprob: -3.8884942531585693
    9. '_' → logprob: -4.638494491577148
    10. '=' → logprob: -4.763494491577148

Token 52: 'rem' (ID: 1935)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.3376091420650482
    2. 'rent' → logprob: -1.9626091718673706
    3. 'rence' → logprob: -1.9626091718673706
    4. 'rer' → logprob: -5.46260929107666
    5. 'ren' → logprob: -7.83760929107666
    6. 'rance' → logprob: -8.58760929107666
    7. 're' → logprob: -9.58760929107666
    8. 'rend' → logprob: -9.77510929107666
    9. ' rents' → logprob: -10.15010929107666
    10. '```' → logprob: -10.58760929107666

Token 53: 'ment' (ID: 508)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7561344504356384
    2. 'ter' → logprob: -0.7561344504356384
    3. 'ts' → logprob: -4.631134510040283
    4. 'cer' → logprob: -4.631134510040283
    5. 'r' → logprob: -4.881134510040283
    6. 'n' → logprob: -5.006134510040283
    7. '```' → logprob: -5.443634510040283
    8. 'ent' → logprob: -5.943634510040283
    9. 'cter' → logprob: -6.443634510040283
    10. 'ces' → logprob: -6.443634510040283

Token 54: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7639805674552917
    2. '<|end|>' → logprob: -0.8889805674552917
    3. ',' → logprob: -3.3889806270599365
    4. ':' → logprob: -3.8889806270599365
    5. '
' → logprob: -4.013980388641357
    6. ' ' → logprob: -4.513980388641357
    7. '.' → logprob: -4.638980388641357
    8. '<|end|>' → logprob: -4.888980388641357
    9. '#' → logprob: -5.138980388641357
    10. '    
' → logprob: -6.013980388641357

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7385385632514954
    2. '<|end|>' → logprob: -0.8635385632514954
    3. '
' → logprob: -2.7385385036468506
    4. ':' → logprob: -4.98853874206543
    5. ' if' → logprob: -5.23853874206543
    6. ',' → logprob: -5.48853874206543
    7. ' ' → logprob: -5.48853874206543
    8. ' for' → logprob: -5.73853874206543
    9. '<|end|>' → logprob: -5.73853874206543
    10. '```' → logprob: -6.61353874206543

Token 56: ' mm' (ID: 8957)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24866043031215668
    2. ' ' → logprob: -2.3736603260040283
    3. '<|end|>' → logprob: -3.2486603260040283
    4. '    ' → logprob: -3.7486603260040283
    5. ' 
' → logprob: -4.373660564422607
    6. '
' → logprob: -4.373660564422607
    7. '    
' → logprob: -4.373660564422607
    8. '<|end|>' → logprob: -5.873660564422607
    9. ',' → logprob: -5.998660564422607
    10. '  ' → logprob: -6.123660564422607

Token 57: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22020627558231354
    2. ',' → logprob: -2.3452062606811523
    3. ' =' → logprob: -2.9702062606811523
    4. '=int' → logprob: -4.845206260681152
    5. '=M' → logprob: -5.345206260681152
    6. 'o' → logprob: -5.595206260681152
    7. 'a' → logprob: -5.970206260681152
    8. 's' → logprob: -5.970206260681152
    9. 'ois' → logprob: -6.220206260681152
    10. '   ' → logprob: -6.220206260681152

Token 58: ' yy' (ID: 31344)
  Prédit: 'yy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.4205685555934906
    2. 'jj' → logprob: -2.2955684661865234
    3. ' yy' → logprob: -2.2955684661865234
    4. 'yyyy' → logprob: -2.7955684661865234
    5. ' jj' → logprob: -3.4205684661865234
    6. 'aa' → logprob: -4.170568466186523
    7. 'dd' → logprob: -4.295568466186523
    8. ' yyyy' → logprob: -4.670568466186523
    9. 'aaaa' → logprob: -6.045568466186523
    10. ' aa' → logprob: -6.420568466186523

Token 59: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07055561244487762
    2. ' =' → logprob: -2.6955556869506836
    3. '=int' → logprob: -7.570555686950684
    4. ',' → logprob: -10.945555686950684
    5. '=len' → logprob: -11.070555686950684
    6. '=input' → logprob: -11.695555686950684
    7. '=M' → logprob: -12.070555686950684
    8. '=S' → logprob: -12.195555686950684
    9. '=line' → logprob: -12.820555686950684
    10. '=end' → logprob: -12.820555686950684

Token 60: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7078350782394409
    2. ' M' → logprob: -1.582835078239441
    3. 'M' → logprob: -2.3328351974487305
    4. '0' → logprob: -2.4578351974487305
    5. '1' → logprob: -2.7078351974487305
    6. '12' → logprob: -4.5828351974487305
    7. '22' → logprob: -5.5828351974487305
    8. '[],' → logprob: -5.7078351974487305
    9. '20' → logprob: -5.8328351974487305
    10. 'Y' → logprob: -5.8328351974487305

Token 61: '1' (ID: 16)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.14800861477851868
    2. 'int' → logprob: -2.7730085849761963
    3. '0' → logprob: -2.8980085849761963
    4. ' M' → logprob: -5.523008823394775
    5. '1' → logprob: -6.148008823394775
    6. '12' → logprob: -6.148008823394775
    7. '(M' → logprob: -6.398008823394775
    8. ' ' → logprob: -7.023008823394775
    9. '(int' → logprob: -7.273008823394775
    10. 'm' → logprob: -7.273008823394775

Token 62: ' <=' (ID: 5017)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09300033748149872
    2. '2' → logprob: -3.4680004119873047
    3. '],' → logprob: -4.093000411987305
    4. ' ,' → logprob: -4.593000411987305
    5. '6' → logprob: -4.843000411987305
    6. '9' → logprob: -5.218000411987305
    7. '7' → logprob: -5.843000411987305
    8. ' for' → logprob: -6.093000411987305
    9. ']' → logprob: -6.218000411987305
    10. '1' → logprob: -6.343000411987305

Token 63: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.18716701865196228
    2. ' M' → logprob: -1.8121670484542847
    3. 'm' → logprob: -5.937167167663574
    4. 'x' → logprob: -6.062167167663574
    5. 'mm' → logprob: -7.562167167663574
    6. ' x' → logprob: -7.812167167663574
    7. 'i' → logprob: -8.187167167663574
    8. ' m' → logprob: -8.687167167663574
    9. ' mm' → logprob: -8.937167167663574
    10. ' ' → logprob: -9.187167167663574

Token 64: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5256154537200928
    2. '<=' → logprob: -0.9006154537200928
    3. ' and' → logprob: -7.150615692138672
    4. ',' → logprob: -7.275615692138672
    5. ']<=' → logprob: -7.775615692138672
    6. 'and' → logprob: -8.650615692138672
    7. '<|end|>' → logprob: -8.775615692138672
    8. ']' → logprob: -9.900615692138672
    9. ' ' → logprob: -9.900615692138672
    10. '<|end|>' → logprob: -10.400615692138672

Token 65: ' ' (ID: 220)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.0183526873588562
    2. ' ' → logprob: -4.018352508544922
    3. '9' → logprob: -9.143352508544922
    4. '99' → logprob: -10.393352508544922
    5. '  ' → logprob: -11.143352508544922
    6. '   ' → logprob: -11.393352508544922
    7. '2' → logprob: -11.768352508544922
    8. '1' → logprob: -12.018352508544922
    9. '```' → logprob: -12.268352508544922
    10. '3' → logprob: -12.455852508544922

Token 66: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.0030059886630624533
    2. ' ' → logprob: -5.8780059814453125
    3. '1' → logprob: -9.503005981445312
    4. '9' → logprob: -10.378005981445312
    5. '2' → logprob: -10.503005981445312
    6. '  ' → logprob: -11.128005981445312
    7. '   ' → logprob: -11.190505981445312
    8. '```' → logprob: -12.003005981445312
    9. '3' → logprob: -12.190505981445312
    10. '4' → logprob: -12.878005981445312

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.41212499141693115
    2. '],' → logprob: -1.4121249914169312
    3. '],[' → logprob: -2.5371251106262207
    4. ' ,' → logprob: -4.912125110626221
    5. ' and' → logprob: -5.787125110626221
    6. ' ],' → logprob: -6.287125110626221
    7. ' for' → logprob: -6.412125110626221
    8. '),' → logprob: -8.037124633789062
    9. ']' → logprob: -8.412124633789062
    10. 'and' → logprob: -8.662124633789062

Token 68: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.45992031693458557
    2. ' ' → logprob: -1.2099202871322632
    3. '0' → logprob: -2.9599204063415527
    4. '12' → logprob: -5.584920406341553
    5. '20' → logprob: -6.459920406341553
    6. '  ' → logprob: -6.584920406341553
    7. '2' → logprob: -6.584920406341553
    8. '190' → logprob: -6.584920406341553
    9. '200' → logprob: -6.584920406341553
    10. '(' → logprob: -6.959920406341553

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21428199112415314
    2. ' ' → logprob: -2.0892820358276367
    3. '0' → logprob: -3.2142820358276367
    4. '200' → logprob: -5.339282035827637
    5. '12' → logprob: -5.589282035827637
    6. '190' → logprob: -5.714282035827637
    7. '2' → logprob: -6.214282035827637
    8. '(' → logprob: -6.339282035827637
    9. '  ' → logprob: -6.464282035827637
    10. '   ' → logprob: -6.589282035827637

Token 70: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.038226932287216187
    2. '<=' → logprob: -3.288226842880249
    3. '0' → logprob: -8.913227081298828
    4. ' ' → logprob: -11.163227081298828
    5. '2' → logprob: -11.413227081298828
    6. '1' → logprob: -11.538227081298828
    7. '5' → logprob: -13.538227081298828
    8. '=' → logprob: -13.538227081298828
    9. '00' → logprob: -13.663227081298828
    10. '   ' → logprob: -13.788227081298828

Token 71: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' → logprob: -0.4762750267982483
    2. ' Y' → logprob: -0.9762750267982483
    3. ' ' → logprob: -6.4762749671936035
    4. '  ' → logprob: -8.476275444030762
    5. '   ' → logprob: -9.351275444030762
    6. 'int' → logprob: -9.601275444030762
    7. ' (' → logprob: -9.851275444030762
    8. '    ' → logprob: -10.101275444030762
    9. '	Y' → logprob: -10.226275444030762
    10. ' int' → logprob: -10.663775444030762

Token 72: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.02059759572148323
    2. '<=' → logprob: -3.8955976963043213
    3. ' ' → logprob: -10.395597457885742
    4. ' and' → logprob: -12.270597457885742
    5. '<|end|>' → logprob: -12.270597457885742
    6. ' <' → logprob: -13.583097457885742
    7. '%' → logprob: -13.583097457885742
    8. '   ' → logprob: -13.770597457885742
    9. ']<=' → logprob: -13.833097457885742
    10. '  ' → logprob: -13.833097457885742

Token 73: ' ' (ID: 220)
  Prédit: '99'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '99' → logprob: -0.3944040834903717
    2. ' ' → logprob: -1.1444040536880493
    3. '69' → logprob: -6.76940393447876
    4. '12' → logprob: -6.89440393447876
    5. '49' → logprob: -7.14440393447876
    6. '50' → logprob: -7.26940393447876
    7. '23' → logprob: -7.51940393447876
    8. '39' → logprob: -7.76940393447876
    9. '19' → logprob: -7.76940393447876
    10. '9' → logprob: -8.269404411315918

Token 74: '12' (ID: 899)
  Prédit: '99'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '99' → logprob: -0.020088419318199158
    2. '50' → logprob: -5.020088195800781
    3. ' ' → logprob: -5.645088195800781
    4. '49' → logprob: -6.270088195800781
    5. '23' → logprob: -6.645088195800781
    6. '69' → logprob: -7.145088195800781
    7. '31' → logprob: -7.645088195800781
    8. '999' → logprob: -7.770088195800781
    9. '22' → logprob: -7.895088195800781
    10. '25' → logprob: -7.957588195800781

Token 75: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00032116140937432647
    2. ',' → logprob: -8.625321388244629
    3. ' ]' → logprob: -9.625321388244629
    4. '],' → logprob: -9.875321388244629
    5. '];' → logprob: -11.500321388244629
    6. '])' → logprob: -12.375321388244629
    7. ']
' → logprob: -12.750321388244629
    8. ')' → logprob: -13.625321388244629
    9. ']

' → logprob: -13.750321388244629
    10. '   ' → logprob: -14.125321388244629

Token 76: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1578948050737381
    2. '   ' → logprob: -2.0328948497772217
    3. ' 
' → logprob: -5.032894611358643
    4. '    
' → logprob: -6.032894611358643
    5. ' if' → logprob: -6.532894611358643
    6. ' ' → logprob: -6.907894611358643
    7. 'if' → logprob: -7.407894611358643
    8. '  
' → logprob: -7.407894611358643
    9. '<|end|>' → logprob: -7.657894611358643
    10. ',
' → logprob: -8.2828950881958

Token 77: ' outcome' (ID: 24192)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024664277210831642
    2. '   ' → logprob: -4.274664402008057
    3. ' 
' → logprob: -5.524664402008057
    4. '<|end|>' → logprob: -7.024664402008057
    5. '    
' → logprob: -7.149664402008057
    6. ' ' → logprob: -7.149664402008057
    7. '\n' → logprob: -7.149664402008057
    8. '  
' → logprob: -7.274664402008057
    9. '

' → logprob: -7.774664402008057
    10. ' if' → logprob: -7.774664402008057

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07891876250505447
    2. '=' → logprob: -2.578918695449829
    3. 's' → logprob: -10.82891845703125
    4. ' ' → logprob: -12.57891845703125
    5. ' =
' → logprob: -13.07891845703125
    6. ' =(' → logprob: -13.45391845703125
    7. ',' → logprob: -14.45391845703125
    8. ' ' → logprob: -15.45391845703125
    9. ' =[' → logprob: -15.57891845703125
    10. '_' → logprob: -15.57891845703125

Token 79: ' ("' (ID: 7109)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7442448139190674
    2. 'mm' → logprob: -1.8692448139190674
    3. '"M' → logprob: -2.3692448139190674
    4. ' mm' → logprob: -2.6192448139190674
    5. ' "' → logprob: -2.9942448139190674
    6. ''' → logprob: -3.3692448139190674
    7. '[' → logprob: -3.8692448139190674
    8. ''M' → logprob: -4.119244575500488
    9. '["' → logprob: -4.744244575500488
    10. ' ' → logprob: -4.869244575500488

Token 80: 'NA' (ID: 9555)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.2149780988693237
    2. 'Y' → logprob: -1.4649780988693237
    3. 'M' → logprob: -2.2149782180786133
    4. '{"' → logprob: -2.7149782180786133
    5. 'MM' → logprob: -2.8399782180786133
    6. 'N' → logprob: -2.9649782180786133
    7. 'I' → logprob: -3.4649782180786133
    8. 'YY' → logprob: -3.5899782180786133
    9. 'AMB' → logprob: -3.7149782180786133
    10. 'NA' → logprob: -3.8399782180786133

Token 81: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.21679864823818207
    2. '","' → logprob: -2.3417985439300537
    3. 'M' → logprob: -3.8417985439300537
    4. '"' → logprob: -3.9667985439300537
    5. 'Y' → logprob: -4.466798782348633
    6. 'B' → logprob: -5.341798782348633
    7. ',' → logprob: -5.591798782348633
    8. 'N' → logprob: -5.716798782348633
    9. '")' → logprob: -6.216798782348633
    10. ',"' → logprob: -6.341798782348633

Token 82: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.21999554336071014
    2. ' "' → logprob: -1.7199954986572266
    3. '"M' → logprob: -5.219995498657227
    4. '"N' → logprob: -5.594995498657227
    5. '"B' → logprob: -6.469995498657227
    6. '"A' → logprob: -6.469995498657227
    7. ''' → logprob: -7.594995498657227
    8. '"D' → logprob: -7.594995498657227
    9. '"S' → logprob: -7.719995498657227
    10. '"I' → logprob: -7.719995498657227

Token 83: 'YY' (ID: 17848)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.8972082138061523
    2. '"' → logprob: -1.0222082138061523
    3. 'MM' → logprob: -2.0222082138061523
    4. 'MS' → logprob: -3.1472082138061523
    5. 'Y' → logprob: -4.647208213806152
    6. 'MY' → logprob: -4.647208213806152
    7. '"M' → logprob: -4.647208213806152
    8. 'YY' → logprob: -5.147208213806152
    9. ' M' → logprob: -5.772208213806152
    10. 'YM' → logprob: -6.272208213806152

Token 84: 'MM' (ID: 12365)
  Prédit: 'MM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MM' → logprob: -0.0487927682697773
    2. 'YM' → logprob: -3.673792839050293
    3. '")' → logprob: -4.548792839050293
    4. 'Y' → logprob: -6.173792839050293
    5. '/MM' → logprob: -6.548792839050293
    6. 'M' → logprob: -6.548792839050293
    7. '"' → logprob: -6.673792839050293
    8. 'MY' → logprob: -6.923792839050293
    9. '_MM' → logprob: -7.048792839050293
    10. '-MM' → logprob: -7.298792839050293

Token 85: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.04555454105138779
    2. '")' → logprob: -3.6705546379089355
    3. '")[' → logprob: -4.2955546379089355
    4. '","' → logprob: -5.9205546379089355
    5. '"' → logprob: -6.0455546379089355
    6. '"[' → logprob: -8.545554161071777
    7. 'YY' → logprob: -9.545554161071777
    8. '"),' → logprob: -10.795554161071777
    9. '")
' → logprob: -11.295554161071777
    10. 'MM' → logprob: -11.670554161071777

Token 86: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.2524930536746979
    2. '"' → logprob: -1.5024930238723755
    3. ' ' → logprob: -8.252492904663086
    4. ' ,' → logprob: -9.877492904663086
    5. ')' → logprob: -10.127492904663086
    6. ' ",' → logprob: -10.252492904663086
    7. ',' → logprob: -10.752492904663086
    8. ' ' → logprob: -10.877492904663086
    9. ',"' → logprob: -11.002492904663086
    10. '",' → logprob: -11.002492904663086

Token 87: 'MM' (ID: 12365)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.013931479305028915
    2. ' "' → logprob: -4.5139312744140625
    3. '"M' → logprob: -6.0139312744140625
    4. 'MM' → logprob: -7.8889312744140625
    5. '"My' → logprob: -11.013931274414062
    6. ' MM' → logprob: -11.013931274414062
    7. ' ' → logprob: -11.138931274414062
    8. '",' → logprob: -12.888931274414062
    9. ' ' → logprob: -13.388931274414062
    10. 'MY' → logprob: -13.638931274414062

Token 88: 'YY' (ID: 17848)
  Prédit: 'YY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YY' → logprob: -0.0009343287092633545
    2. 'Y' → logprob: -7.37593412399292
    3. 'YYYY' → logprob: -8.375934600830078
    4. '")' → logprob: -9.750934600830078
    5. 'YM' → logprob: -11.875934600830078
    6. '"' → logprob: -12.875934600830078
    7. 'YX' → logprob: -13.500934600830078
    8. ')' → logprob: -13.750934600830078
    9. 'DD' → logprob: -13.750934600830078
    10. 'YD' → logprob: -14.000934600830078

Token 89: '",' (ID: 672)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5382081866264343
    2. ')' → logprob: -1.163208246231079
    3. ',' → logprob: -2.913208246231079
    4. '",' → logprob: -3.663208246231079
    5. '")[' → logprob: -4.2882080078125
    6. ')[' → logprob: -4.7882080078125
    7. ')")' → logprob: -7.9132080078125
    8. '"' → logprob: -8.0382080078125
    9. ')["' → logprob: -8.9132080078125
    10. '[' → logprob: -9.0382080078125

Token 90: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.40265190601348877
    2. '"' → logprob: -1.2776519060134888
    3. ')' → logprob: -3.027651786804199
    4. ' )' → logprob: -6.152651786804199
    5. '")' → logprob: -7.777651786804199
    6. '"N' → logprob: -7.777651786804199
    7. ' "")' → logprob: -8.2776517868042
    8. ' ")' → logprob: -8.2776517868042
    9. '"M' → logprob: -9.1526517868042
    10. ' ' → logprob: -9.7776517868042

Token 91: 'AMB' (ID: 89274)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3966514468193054
    2. 'AMB' → logprob: -1.2716515064239502
    3. 'Both' → logprob: -3.52165150642395
    4. 'MM' → logprob: -5.521651268005371
    5. 'both' → logprob: -6.146651268005371
    6. ' "' → logprob: -6.271651268005371
    7. 'B' → logprob: -6.521651268005371
    8. 'YY' → logprob: -7.021651268005371
    9. ' Both' → logprob: -7.396651268005371
    10. ''' → logprob: -7.521651268005371

Token 92: 'IG' (ID: 3205)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.09335634112358093
    2. 'I' → logprob: -2.8433563709259033
    3. 'IG' → logprob: -4.343356132507324
    4. '"' → logprob: -4.468356132507324
    5. '").' → logprob: -6.468356132507324
    6. '")
' → logprob: -6.593356132507324
    7. ' ")' → logprob: -6.718356132507324
    8. 'iguous' → logprob: -7.468356132507324
    9. '")[' → logprob: -7.718356132507324
    10. '"I' → logprob: -8.593356132507324

Token 93: 'U' (ID: 52)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.3887459635734558
    2. 'U' → logprob: -1.1387460231781006
    3. '"' → logprob: -6.6387457847595215
    4. '")
' → logprob: -9.01374626159668
    5. ')' → logprob: -9.13874626159668
    6. ' ")' → logprob: -9.13874626159668
    7. 'IOUS' → logprob: -9.63874626159668
    8. '```' → logprob: -10.63874626159668
    9. 'OUS' → logprob: -10.76374626159668
    10. '")[' → logprob: -11.01374626159668

Token 94: 'OUS' (ID: 101154)
  Prédit: 'OUS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OUS' → logprob: -0.6395329833030701
    2. 'E' → logprob: -1.3895330429077148
    3. 'O' → logprob: -1.6395330429077148
    4. '"' → logprob: -4.264533042907715
    5. '")' → logprob: -4.764533042907715
    6. '```' → logprob: -6.389533042907715
    7. 'S' → logprob: -6.764533042907715
    8. '"]' → logprob: -7.514533042907715
    9. ' ")' → logprob: -7.639533042907715
    10. '"O' → logprob: -8.639533042907715

Token 95: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.35094237327575684
    2. '")[' → logprob: -1.2259423732757568
    3. '")
' → logprob: -6.475942611694336
    4. ')' → logprob: -7.725942611694336
    5. '")
' → logprob: -8.725942611694336
    6. '")

' → logprob: -8.975942611694336
    7. ')[' → logprob: -9.100942611694336
    8. '"' → logprob: -10.350942611694336
    9. '"[' → logprob: -10.850942611694336
    10. '")

' → logprob: -11.225942611694336

Token 96: '[(' (ID: 20542)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.032817527651786804
    2. '[
' → logprob: -3.9078176021575928
    3. '[out' → logprob: -4.907817363739014
    4. '[M' → logprob: -6.407817363739014
    5. '[(' → logprob: -7.282817363739014
    6. '[m' → logprob: -7.657817363739014
    7. 'out' → logprob: -8.032817840576172
    8. '[min' → logprob: -8.282817840576172
    9. '["' → logprob: -8.532817840576172
    10. '[\' → logprob: -8.907817840576172

Token 97: 'mm' (ID: 4538)
  Prédit: 'mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mm' → logprob: -0.5295430421829224
    2. 'yy' → logprob: -1.5295430421829224
    3. 'not' → logprob: -2.279542922973633
    4. '1' → logprob: -3.529542922973633
    5. '-' → logprob: -4.154542922973633
    6. '0' → logprob: -4.529542922973633
    7. ' mm' → logprob: -5.029542922973633
    8. '-mm' → logprob: -5.529542922973633
    9. '(mm' → logprob: -5.779542922973633
    10. ' not' → logprob: -5.779542922973633

Token 98: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.08129195123910904
    2. ' <<' → logprob: -2.831291913986206
    3. ')' → logprob: -4.581292152404785
    4. '*' → logprob: -5.831292152404785
    5. ')<<' → logprob: -5.956292152404785
    6. ')+(' → logprob: -6.206292152404785
    7. '0' → logprob: -8.456292152404785
    8. '+' → logprob: -8.831292152404785
    9. '    ' → logprob: -9.081292152404785
    10. ')+' → logprob: -9.331292152404785

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018172669224441051
    2. ' ' → logprob: -6.376817226409912
    3. '2' → logprob: -10.37681770324707
    4. '0' → logprob: -10.75181770324707
    5. ' (' → logprob: -10.87681770324707
    6. '(' → logprob: -11.00181770324707
    7. 'mm' → logprob: -12.62681770324707
    8. '   ' → logprob: -12.75181770324707
    9. 'yy' → logprob: -12.93931770324707
    10. '

' → logprob: -13.00181770324707

Token 100: ')|' (ID: 47976)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '|' → logprob: -0.0030030198395252228
    2. ')' → logprob: -6.628003120422363
    3. ' |' → logprob: -7.128003120422363
    4. ')+' → logprob: -7.753003120422363
    5. ')|' → logprob: -8.503003120422363
    6. ')+(' → logprob: -8.753003120422363
    7. ')|(' → logprob: -9.878003120422363
    8. '|(' → logprob: -11.253003120422363
    9. ' )' → logprob: -11.628003120422363
    10. '│' → logprob: -12.878003120422363

Token 101: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.004210175015032291
    2. ' yy' → logprob: -5.504209995269775
    3. '1' → logprob: -9.629210472106934
    4. 'int' → logprob: -11.129210472106934
    5. '(' → logprob: -11.254210472106934
    6. '	yy' → logprob: -11.254210472106934
    7. '0' → logprob: -11.629210472106934
    8. ' ' → logprob: -12.504210472106934
    9. ' (' → logprob: -13.004210472106934
    10. 'y' → logprob: -13.004210472106934

Token 102: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03869827836751938
    2. ')]' → logprob: -3.288698196411133
    3. ' ]' → logprob: -7.663698196411133
    4. ':]' → logprob: -10.038698196411133
    5. '()]' → logprob: -10.038698196411133
    6. ']
' → logprob: -10.413698196411133
    7. '>]' → logprob: -10.663698196411133
    8. '])' → logprob: -11.663698196411133
    9. ')' → logprob: -11.663698196411133
    10. ']

' → logprob: -11.788698196411133

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8004035949707031
    2. ')' → logprob: -1.9254035949707031
    3. '()' → logprob: -2.050403594970703
    4. '
' → logprob: -2.550403594970703
    5. '<|end|>' → logprob: -2.925403594970703
    6. '(' → logprob: -3.050403594970703
    7. '()
' → logprob: -4.050403594970703
    8. ':' → logprob: -4.675403594970703
    9. '[' → logprob: -4.800403594970703
    10. '(
' → logprob: -5.050403594970703

Token 104: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47137582302093506
    2. 'print' (adapté à ' print') → logprob: -1.096375823020935
    3. ')' → logprob: -3.7213759422302246
    4. '
' → logprob: -4.846375942230225
    5. ' print' → logprob: -6.221375942230225
    6. ':' → logprob: -6.346375942230225
    7. '(' → logprob: -6.471375942230225
    8. '()' → logprob: -7.471375942230225
    9. ')
' → logprob: -7.471375942230225
    10. ' ' → logprob: -7.596375942230225

Token 105: '(out' (ID: 20090)
  Prédit: '(out'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(out' → logprob: -1.4140441635390744e-05
    2. '(' → logprob: -11.625014305114746
    3. '(f' → logprob: -12.750014305114746
    4. ' (' → logprob: -13.500014305114746
    5. '("("' → logprob: -14.875014305114746
    6. '(output' → logprob: -15.250014305114746
    7. '((' → logprob: -17.00001335144043
    8. '(op' → logprob: -17.37501335144043
    9. '(end' → logprob: -17.75001335144043
    10. 'out' → logprob: -17.75001335144043

Token 106: 'come' (ID: 2512)
  Prédit: 'ome'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ome' → logprob: -0.832306981086731
    2. 'ut' → logprob: -1.457306981086731
    3. 'come' → logprob: -2.3323068618774414
    4. 'out' → logprob: -2.4573068618774414
    5. 'ame' → logprob: -2.5823068618774414
    6. 'com' → logprob: -4.207306861877441
    7. 'ay' → logprob: -4.457306861877441
    8. 'me' → logprob: -4.457306861877441
    9. ')' → logprob: -4.707306861877441
    10. 'e' → logprob: -5.457306861877441

Token 107: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.2200749754119897e-06
    2. '))' → logprob: -14.500001907348633
    3. ')
' → logprob: -14.750001907348633
    4. '()' → logprob: -14.750001907348633
    5. ' )' → logprob: -14.875001907348633
    6. ')`' → logprob: -15.250001907348633
    7. '())' → logprob: -15.625001907348633
    8. ')}' → logprob: -17.750001907348633
    9. '`)' → logprob: -17.750001907348633
    10. '])' → logprob: -17.750001907348633

Token 108: ' outcome' (ID: 24192)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.041490502655506134
    2. 'mm' → logprob: -4.29149055480957
    3. ' outcome' → logprob: -4.29149055480957
    4. 'len' → logprob: -5.04149055480957
    5. ' mm' → logprob: -6.29149055480957
    6. 'S' → logprob: -6.79149055480957
    7. 'M' → logprob: -7.04149055480957
    8. 'not' → logprob: -7.41649055480957
    9. ' len' → logprob: -7.66649055480957
    10. ' out' → logprob: -7.91649055480957

Token 109: '!="' (ID: 76516)
  Prédit: '!="'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!="' → logprob: -0.5078087449073792
    2. '!=' → logprob: -1.0078086853027344
    3. ' !=' → logprob: -3.7578086853027344
    4. 'else' → logprob: -5.507808685302734
    5. '=="' → logprob: -6.257808685302734
    6. ' else' → logprob: -6.507808685302734
    7. '!='' → logprob: -6.757808685302734
    8. '==' → logprob: -8.007808685302734
    9. '"' → logprob: -8.507808685302734
    10. ')' → logprob: -8.757808685302734

Token 110: 'NA' (ID: 9555)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0037287031300365925
    2. 'AMB' → logprob: -5.753728866577148
    3. '"A' → logprob: -8.253728866577148
    4. 'NA' → logprob: -9.378728866577148
    5. ''' → logprob: -9.503728866577148
    6. ' "' → logprob: -10.253728866577148
    7. '"M' → logprob: -10.753728866577148
    8. '"N' → logprob: -10.878728866577148
    9. 'amb' → logprob: -11.628728866577148
    10. '"AT' → logprob: -11.878728866577148

Token 111: '"' (ID: 1)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.2014177292585373
    2. 'else' → logprob: -1.7014176845550537
    3. ' ' → logprob: -13.076417922973633
    4. ')' → logprob: -13.326417922973633
    5. '"' → logprob: -15.951417922973633
    6. '   ' → logprob: -16.076417922973633
    7. ' or' → logprob: -16.451417922973633
    8. ' els' → logprob: -16.451417922973633
    9. '```' → logprob: -16.701417922973633
    10. '	else' → logprob: -16.826417922973633

Token 112: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.31326186656951904
    2. 'else' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.563261032104492
    4. '	else' → logprob: -18.438261032104492
    5. '   ' → logprob: -18.688261032104492
    6. ' els' → logprob: -19.063261032104492
    7. '    ' → logprob: -19.188261032104492
    8. '```' → logprob: -19.313261032104492
    9. ' or' → logprob: -19.438261032104492
    10. '
' → logprob: -19.438261032104492

Token 113: ' outcome' (ID: 24192)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.034403860569000244
    2. '"N' → logprob: -3.7844038009643555
    3. 'NA' → logprob: -5.0344038009643555
    4. ''' → logprob: -6.6594038009643555
    5. '"No' → logprob: -7.0344038009643555
    6. '"I' → logprob: -8.159403800964355
    7. '   ' → logprob: -8.284403800964355
    8. '"M' → logprob: -8.409403800964355
    9. '"D' → logprob: -8.659403800964355
    10. '"S' → logprob: -8.784403800964355

Token 114: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7502242922782898
    2. '==' → logprob: -2.0002243518829346
    3. '!=' → logprob: -2.7502243518829346
    4. '!="' → logprob: -3.1252243518829346
    5. '=="' → logprob: -3.3752243518829346
    6. '.replace' → logprob: -3.8752243518829346
    7. ' or' → logprob: -4.1252241134643555
    8. 'else' → logprob: -4.3752241134643555
    9. ' !=' → logprob: -4.3752241134643555
    10. '.endswith' → logprob: -4.3752241134643555

Token 115: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4323473572731018
    2. '<|end|>' → logprob: -1.057347297668457
    3. '
' → logprob: -6.932347297668457
    4. '<|end|>' → logprob: -7.307347297668457
    5. ' ' → logprob: -8.182347297668457
    6. ')
' → logprob: -8.432347297668457
    7. ' if' → logprob: -8.557347297668457
    8. '.replace' → logprob: -8.682347297668457
    9. '```' → logprob: -8.807347297668457
    10. '  ' → logprob: -9.432347297668457

Token 116: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.03804987296462059
    2. '__' → logprob: -3.2880499362945557
    3. ' True' → logprob: -11.788049697875977
    4. 'True' → logprob: -14.788049697875977
    5. ' ' → logprob: -15.913049697875977
    6. ' ' → logprob: -16.038049697875977
    7. 'name' → logprob: -16.538049697875977
    8. '_name' → logprob: -16.538049697875977
    9. ' name' → logprob: -17.288049697875977
    10. ' "__' → logprob: -17.538049697875977

Token 117: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3216152489185333
    2. '==' → logprob: -1.696615219116211
    3. ' ==' → logprob: -2.571615219116211
    4. ' __' → logprob: -5.196615219116211
    5. '=="' → logprob: -5.321615219116211
    6. '.__' → logprob: -6.071615219116211
    7. 'name' → logprob: -6.571615219116211
    8. '.name' → logprob: -7.821615219116211
    9. '__.__' → logprob: -8.821615219116211
    10. '=='' → logprob: -9.196615219116211

Token 118: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.5577775128767826e-06
    2. '__.__' → logprob: -12.500005722045898
    3. '==' → logprob: -14.375005722045898
    4. '=="' → logprob: -15.125005722045898
    5. '__["' → logprob: -15.375005722045898
    6. '__.' → logprob: -15.375005722045898
    7. '__("' → logprob: -16.0000057220459
    8. '___' → logprob: -16.1250057220459
    9. '__
' → logprob: -16.5000057220459
    10. '____' → logprob: -16.5000057220459

Token 119: '=="' (ID: 24027)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8244566917419434
    2. '=="' → logprob: -0.9494566917419434
    3. ' ==' → logprob: -2.3244566917419434
    4. '__' → logprob: -2.5744566917419434
    5. '=='' → logprob: -7.824456691741943
    6. ' =="' → logprob: -9.824457168579102
    7. '==="' → logprob: -10.324457168579102
    8. '==
' → logprob: -10.574457168579102
    9. '="' → logprob: -11.949457168579102
    10. ' ' → logprob: -11.949457168579102

Token 120: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1203540563583374
    2. '"' → logprob: -2.870354175567627
    3. ''' → logprob: -2.870354175567627
    4. ' __' → logprob: -11.120353698730469
    5. ' "__' → logprob: -11.495353698730469
    6. 'main' → logprob: -12.745353698730469
    7. '___' → logprob: -13.120353698730469
    8. ' '__' → logprob: -13.245353698730469
    9. '_main' → logprob: -13.495353698730469
    10. ''s' → logprob: -14.620353698730469

Token 121: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0007104054093360901
    2. 'name' → logprob: -7.250710487365723
    3. '_main' → logprob: -15.875710487365723
    4. ' main' → logprob: -16.250709533691406
    5. 'm' → logprob: -16.750709533691406
    6. '```' → logprob: -17.625709533691406
    7. 'built' → logprob: -17.750709533691406
    8. 'file' → logprob: -18.000709533691406
    9. 'ma' → logprob: -18.000709533691406
    10. '"' → logprob: -18.125709533691406

Token 122: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6938027739524841
    2. '__":
' → logprob: -0.6938027739524841
    3. '__:' → logprob: -7.693802833557129
    4. '__':
' → logprob: -8.568802833557129
    5. '__["' → logprob: -12.443802833557129
    6. '__.' → logprob: -12.943802833557129
    7. '__",' → logprob: -14.193802833557129
    8. '__.__' → logprob: -14.318802833557129
    9. '```' → logprob: -14.818802833557129
    10. '__("' → logprob: -14.818802833557129

Token 123: '   ' (ID: 271)
  Prédit: '	main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	main' → logprob: -0.45494353771209717
    2. '   ' → logprob: -1.4549435377120972
    3. 'main' → logprob: -2.3299436569213867
    4. ' main' → logprob: -3.4549436569213867
    5. '    
' → logprob: -6.329943656921387
    6. '
' → logprob: -7.954943656921387
    7. '	
' → logprob: -8.329943656921387
    8. ' ' → logprob: -8.829943656921387
    9. '  
' → logprob: -9.204943656921387
    10. ' 
' → logprob: -9.204943656921387

Token 124: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.0054139927960932255
    2. ' main' → logprob: -5.255414009094238
    3. '   ' → logprob: -8.755414009094238
    4. '	main' → logprob: -10.755414009094238
    5. ' ' → logprob: -14.630414009094238
    6. '  ' → logprob: -15.505414009094238
    7. '_main' → logprob: -15.755414009094238
    8. '    
' → logprob: -15.880414009094238
    9. '(main' → logprob: -16.005413055419922
    10. '
' → logprob: -16.755413055419922

Token 125: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001310719089815393
    2. '()
' → logprob: -9.000130653381348
    3. '()`' → logprob: -13.000130653381348
    4. ' ()' → logprob: -13.750130653381348
    5. '()"' → logprob: -14.000130653381348
    6. '()

' → logprob: -14.125130653381348
    7. '(' → logprob: -14.625130653381348
    8. '()">' → logprob: -14.625130653381348
    9. '();' → logprob: -14.875130653381348
    10. '()<' → logprob: -15.125130653381348


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 123
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 89
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 34.15%
Précision (top 10): 72.36%
================================================================================
