================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:29
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
nombre_elements = int(input())

liste_entiers = list(map(int, input().split()))

prochain_nombre_attendu = 1

compteur_elements_a_supprimer = 0

au_moins_un_element_trouve = False

for element in liste_entiers:

    if element == prochain_nombre_attendu:

        prochain_nombre_attendu += 1

        au_moins_un_element_trouve = True

    else:

        compteur_elements_a_supprimer += 1

if au_moins_un_element_trouve:

    print(compteur_elements_a_supprimer)

else:

    print("-1")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'nombre' (ID: 28576)
  → Token d'amorce (pas de prédiction)

Token 1: '_elements' (ID: 53344)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11084459722042084
    2. ' len' → logprob: -2.610844612121582
    3. '10' → logprob: -3.860844612121582
    4. '0' → logprob: -5.110844612121582
    5. 'len' → logprob: -6.610844612121582
    6. ' []' → logprob: -7.235844612121582
    7. '5' → logprob: -7.360844612121582
    8. '20' → logprob: -7.485844612121582
    9. ' int' → logprob: -7.985844612121582
    10. '1' → logprob: -8.360844612121582

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001966343028470874
    2. '```' → logprob: -7.37696647644043
    3. '_' → logprob: -8.00196647644043
    4. '`' → logprob: -8.50196647644043
    5. ''' → logprob: -8.50196647644043
    6. '('' → logprob: -8.87696647644043
    7. '(nombre' → logprob: -9.12696647644043
    8. '("("' → logprob: -10.12696647644043
    9. '32' → logprob: -10.25196647644043
    10. '(n' → logprob: -10.37696647644043

Token 5: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003550178138539195
    2. ')' → logprob: -5.878550052642822
    3. '('' → logprob: -8.50355052947998
    4. '("("' → logprob: -8.62855052947998
    5. '(
' → logprob: -9.50355052947998
    6. '(""))' → logprob: -9.75355052947998
    7. '()' → logprob: -10.00355052947998
    8. '(

' → logprob: -10.87855052947998
    9. '```' → logprob: -10.87855052947998
    10. ' (' → logprob: -11.12855052947998

Token 6: 'liste' (ID: 69656)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39536669850349426
    2. 'if' → logprob: -1.3953666687011719
    3. '*' → logprob: -3.645366668701172
    4. ')' → logprob: -4.770366668701172
    5. ' for' → logprob: -4.895366668701172
    6. '=' → logprob: -5.520366668701172
    7. '#' → logprob: -5.645366668701172
    8. ' if' → logprob: -5.645366668701172
    9. ' ' → logprob: -5.895366668701172
    10. 'print' → logprob: -6.020366668701172

Token 7: '_ent' (ID: 66249)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.13358943164348602
    2. '_' → logprob: -2.133589506149292
    3. 's' → logprob: -5.883589267730713
    4. '.' → logprob: -6.758589267730713
    5. '[]' → logprob: -7.258589267730713
    6. '[:]' → logprob: -7.883589267730713
    7. ')' → logprob: -8.133589744567871
    8. '[...]' → logprob: -8.883589744567871
    9. '_s' → logprob: -9.133589744567871
    10. '(' → logprob: -9.258589744567871

Token 8: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0019744306337088346
    2. 'r' → logprob: -7.251974582672119
    3. 'ers' → logprob: -7.376974582672119
    4. 'rs' → logprob: -8.501974105834961
    5. 'ier' → logprob: -9.501974105834961
    6. 'ires' → logprob: -9.501974105834961
    7. 'ités' → logprob: -9.626974105834961
    8. 'irs' → logprob: -9.876974105834961
    9. 'riers' → logprob: -10.501974105834961
    10. 'ri' → logprob: -10.751974105834961

Token 9: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2654734253883362
    2. '.' → logprob: -2.0154733657836914
    3. '[' → logprob: -2.3904733657836914
    4. '[:]' → logprob: -5.640473365783691
    5. '_' → logprob: -6.265473365783691
    6. '.setdefault' → logprob: -7.640473365783691
    7. ' =' → logprob: -8.140473365783691
    8. '.extend' → logprob: -8.265473365783691
    9. '[]' → logprob: -8.390473365783691
    10. '.sort' → logprob: -8.640473365783691

Token 10: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.007977564819157124
    2. ' [' → logprob: -5.507977485656738
    3. '[]' → logprob: -5.632977485656738
    4. ' list' → logprob: -8.757977485656738
    5. 'list' → logprob: -9.507977485656738
    6. '[' → logprob: -10.007977485656738
    7. ' ' → logprob: -11.132977485656738
    8. '[list' → logprob: -11.382977485656738
    9. '[input' → logprob: -12.382977485656738
    10. '[int' → logprob: -12.507977485656738

Token 11: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0031741487327963114
    2. '(range' → logprob: -6.128174304962158
    3. '(input' → logprob: -7.878174304962158
    4. '()' → logprob: -8.753173828125
    5. '(int' → logprob: -8.753173828125
    6. '((' → logprob: -9.878173828125
    7. '(
' → logprob: -10.503173828125
    8. '(map' → logprob: -10.628173828125
    9. '(re' → logprob: -11.378173828125
    10. '[int' → logprob: -11.503173828125

Token 12: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009211080614477396
    2. '(' → logprob: -7.375921249389648
    3. 'int' → logprob: -8.500921249389648
    4. '<int' → logprob: -9.875921249389648
    5. '(input' → logprob: -11.250921249389648
    6. '=int' → logprob: -12.000921249389648
    7. '```' → logprob: -12.250921249389648
    8. '[int' → logprob: -12.375921249389648
    9. '(lambda' → logprob: -12.500921249389648
    10. '(
' → logprob: -13.000921249389648

Token 13: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00275792577303946
    2. ',input' → logprob: -6.377758026123047
    3. 'input' → logprob: -7.377758026123047
    4. '(' → logprob: -8.002758026123047
    5. ',' → logprob: -10.002758026123047
    6. '))' → logprob: -11.127758026123047
    7. '=input' → logprob: -11.127758026123047
    8. ')' → logprob: -12.002758026123047
    9. ' input' → logprob: -12.252758026123047
    10. '<input' → logprob: -13.377758026123047

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01420957688242197
    2. ' input' → logprob: -4.264209747314453
    3. '(input' → logprob: -10.014209747314453
    4. ',input' → logprob: -14.264209747314453
    5. '	input' → logprob: -15.514209747314453
    6. '=input' → logprob: -15.639209747314453
    7. '<input' → logprob: -16.014209747314453
    8. 'range' → logprob: -16.639209747314453
    9. ' ' → logprob: -17.014209747314453
    10. ')' → logprob: -17.389209747314453

Token 15: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.8034358024597168
    2. '()' → logprob: -1.0534358024597168
    3. '())' → logprob: -2.428435802459717
    4. '(' → logprob: -2.428435802459717
    5. '()));' → logprob: -4.303435802459717
    6. '())))' → logprob: -5.803435802459717
    7. '(()' → logprob: -5.928435802459717
    8. '().' → logprob: -6.178435802459717
    9. ')' → logprob: -7.178435802459717
    10. '('' → logprob: -7.178435802459717

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0032057580538094044
    2. 'strip' → logprob: -5.7532057762146
    3. 'rstrip' → logprob: -10.628205299377441
    4. ' split' → logprob: -12.878205299377441
    5. 'spl' → logprob: -14.253205299377441
    6. '(split' → logprob: -14.753205299377441
    7. 's' → logprob: -16.128206253051758
    8. ')' → logprob: -17.003206253051758
    9. ' strip' → logprob: -18.378206253051758
    10. 'replace' → logprob: -18.503206253051758

Token 17: '()))

' (ID: 125972)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.7014607787132263
    2. '()))' → logprob: -0.9514607787132263
    3. '(' → logprob: -3.076460838317871
    4. ')' → logprob: -3.326460838317871
    5. '))' → logprob: -4.076460838317871
    6. '()' → logprob: -4.451460838317871
    7. '('' → logprob: -5.201460838317871
    8. '())))' → logprob: -6.826460838317871
    9. ')))' → logprob: -8.201460838317871
    10. ''))' → logprob: -9.201460838317871

Token 18: 'pro' (ID: 823)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04602264240384102
    2. 'if' → logprob: -4.171022415161133
    3. 's' → logprob: -4.546022415161133
    4. 'i' → logprob: -4.671022415161133
    5. '#' → logprob: -5.546022415161133
    6. 'print' → logprob: -7.171022415161133
    7. '.' → logprob: -7.296022415161133
    8. 'n' → logprob: -7.296022415161133
    9. ')' → logprob: -7.421022415161133
    10. 'sum' → logprob: -7.421022415161133

Token 19: 'chain' (ID: 13289)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3827410936355591
    2. 'du' → logprob: -1.632741093635559
    3. 'cess' → logprob: -2.7577409744262695
    4. 'gram' → logprob: -3.6327409744262695
    5. 'm' → logprob: -3.8827409744262695
    6. 'duit' → logprob: -5.5077409744262695
    7. 'duct' → logprob: -6.7577409744262695
    8. 'for' → logprob: -7.0077409744262695
    9. 'ces' → logprob: -7.3827409744262695
    10. 'f' → logprob: -7.5077409744262695

Token 20: '_nombre' (ID: 118816)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005925600882619619
    2. '(' → logprob: -5.75592565536499
    3. '_token' → logprob: -6.38092565536499
    4. 's' → logprob: -8.880925178527832
    5. ' ' → logprob: -9.255925178527832
    6. '_i' → logprob: -9.630925178527832
    7. '_l' → logprob: -9.755925178527832
    8. '_s' → logprob: -10.005925178527832
    9. '_pro' → logprob: -10.130925178527832
    10. ')' → logprob: -10.255925178527832

Token 21: '_att' (ID: 35618)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004093597177416086
    2. '(' → logprob: -6.504093647003174
    3. ' =' → logprob: -7.004093647003174
    4. '_=' → logprob: -7.379093647003174
    5. '=' → logprob: -8.254093170166016
    6. '(_)' → logprob: -8.879093170166016
    7. '()' → logprob: -9.129093170166016
    8. 's' → logprob: -9.379093170166016
    9. '_space' → logprob: -10.129093170166016
    10. ')' → logprob: -10.254093170166016

Token 22: 'endu' (ID: 46640)
  Prédit: 'endu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endu' → logprob: -0.002108147833496332
    2. 'endue' → logprob: -7.252108097076416
    3. 'endre' → logprob: -7.502108097076416
    4. 'endus' → logprob: -8.127108573913574
    5. 'end' → logprob: -8.252108573913574
    6. 'e' → logprob: -9.002108573913574
    7. 'u' → logprob: -10.502108573913574
    8. 'ente' → logprob: -10.502108573913574
    9. 'ent' → logprob: -10.627108573913574
    10. '=' → logprob: -11.627108573913574

Token 23: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1738806515932083
    2. ' =' → logprob: -2.2988805770874023
    3. '=' → logprob: -2.9238805770874023
    4. '(' → logprob: -5.548880577087402
    5. '_=' → logprob: -7.673880577087402
    6. ' ' → logprob: -7.923880577087402
    7. '[' → logprob: -8.173880577087402
    8. ')' → logprob: -9.298880577087402
    9. '_space' → logprob: -9.423880577087402
    10. ' _' → logprob: -9.673880577087402

Token 24: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6750960350036621
    2. '0' → logprob: -1.050096035003662
    3. 'liste' → logprob: -2.175096035003662
    4. ' ' → logprob: -4.425096035003662
    5. 'nombre' → logprob: -4.425096035003662
    6. ' liste' → logprob: -6.175096035003662
    7. 'len' → logprob: -7.925096035003662
    8. ' nombre' → logprob: -8.42509651184082
    9. 'l' → logprob: -8.67509651184082
    10. 'max' → logprob: -9.17509651184082

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09505262970924377
    2. '0' → logprob: -2.595052719116211
    3. 'liste' → logprob: -4.345052719116211
    4. 'nombre' → logprob: -6.095052719116211
    5. ' ' → logprob: -7.470052719116211
    6. 'l' → logprob: -10.470052719116211
    7. '-' → logprob: -10.720052719116211
    8. 'len' → logprob: -10.720052719116211
    9. 'min' → logprob: -10.970052719116211
    10. 'lst' → logprob: -11.407552719116211

Token 26: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: 'comp' (ID: 3697)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08478843420743942
    2. ' for' → logprob: -2.5847883224487305
    3. '
' → logprob: -5.2097883224487305
    4. '```' → logprob: -8.33478832244873
    5. '\n' → logprob: -9.95978832244873
    6. 'if' → logprob: -10.58478832244873
    7. '<|end|>' → logprob: -10.58478832244873
    8. ' 
' → logprob: -10.95978832244873
    9. '' → logprob: -11.20978832244873
    10. '\' → logprob: -11.20978832244873

Token 28: 'teur' (ID: 45262)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.9768385291099548
    2. 'ter' → logprob: -1.2268385887145996
    3. 't' → logprob: -1.4768385887145996
    4. 'teur' → logprob: -2.9768385887145996
    5. 'té' → logprob: -3.2268385887145996
    6. 'tem' → logprob: -6.2268385887146
    7. 'ar' → logprob: -6.6018385887146
    8. 'tar' → logprob: -6.7268385887146
    9. 'tat' → logprob: -6.8518385887146
    10. 'tele' → logprob: -7.4768385887146

Token 29: '_elements' (ID: 53344)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22934909164905548
    2. ' +=' → logprob: -2.354349136352539
    3. ' =' → logprob: -2.604349136352539
    4. '=' → logprob: -3.604349136352539
    5. '+=' → logprob: -6.354349136352539
    6. '+' → logprob: -6.479349136352539
    7. ' ' → logprob: -6.729349136352539
    8. '_space' → logprob: -6.854349136352539
    9. '_=' → logprob: -7.729349136352539
    10. ' ==' → logprob: -7.979349136352539

Token 30: '_a' (ID: 10852)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02748269774019718
    2. ' =' → logprob: -4.027482509613037
    3. ' +=' → logprob: -5.527482509613037
    4. ' ' → logprob: -6.527482509613037
    5. '=' → logprob: -6.527482509613037
    6. '<|end|>' → logprob: -7.527482509613037
    7. '_=' → logprob: -8.152482986450195
    8. ' _' → logprob: -8.527482986450195
    9. '_space' → logprob: -8.652482986450195
    10. '_con' → logprob: -8.777482986450195

Token 31: '_sup' (ID: 148990)
  Prédit: '_sup'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sup' → logprob: -0.21532481908798218
    2. '_comp' → logprob: -2.965324878692627
    3. '_' → logprob: -3.215324878692627
    4. '_re' → logprob: -3.965324878692627
    5. '_s' → logprob: -4.215324878692627
    6. '_trait' → logprob: -4.340324878692627
    7. '_t' → logprob: -4.465324878692627
    8. 'sup' → logprob: -4.840324878692627
    9. '_tr' → logprob: -5.215324878692627
    10. '_ver' → logprob: -5.215324878692627

Token 32: 'primer' (ID: 55821)
  Prédit: 'primer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'primer' → logprob: -0.009236990474164486
    2. 'pr' → logprob: -4.759236812591553
    3. '>' → logprob: -8.134237289428711
    4. '=' → logprob: -10.509237289428711
    5. '%' → logprob: -10.634237289428711
    6. 'prim' → logprob: -10.884237289428711
    7. 'primir' → logprob: -10.884237289428711
    8. '\' → logprob: -10.884237289428711
    9. '	' → logprob: -11.009237289428711
    10. 'r' → logprob: -11.134237289428711

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002521084388718009
    2. '=' → logprob: -6.12752103805542
    3. ' ' → logprob: -8.252521514892578
    4. '_' → logprob: -10.002521514892578
    5. '  ' → logprob: -11.377521514892578
    6. ' +=' → logprob: -11.502521514892578
    7. ' ,' → logprob: -13.377521514892578
    8. '_=' → logprob: -14.127521514892578
    9. ' _' → logprob: -14.252521514892578
    10. ',' → logprob: -14.252521514892578

Token 34: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01815006136894226
    2. '0' → logprob: -4.0181498527526855
    3. ' ' → logprob: -16.643150329589844
    4. '<|end|>' → logprob: -18.643150329589844
    5. '1' → logprob: -19.018150329589844
    6. '  ' → logprob: -20.768150329589844
    7. '۰' → logprob: -21.143150329589844
    8. '```' → logprob: -21.143150329589844
    9. ' `' → logprob: -21.768150329589844
    10. 's' → logprob: -22.518150329589844

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005532711511477828
    2. ' ' → logprob: -7.500553131103516
    3. 'nombre' → logprob: -16.250553131103516
    4. '1' → logprob: -16.375553131103516
    5. 'len' → logprob: -16.500553131103516
    6. '00' → logprob: -18.313053131103516
    7. '000' → logprob: -18.313053131103516
    8. '```' → logprob: -18.375553131103516
    9. ' ' → logprob: -18.750553131103516
    10. 'int' → logprob: -18.875553131103516

Token 36: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09747809171676636
    2. ' for' → logprob: -3.097478151321411
    3. 'for' → logprob: -3.222478151321411
    4. '
' → logprob: -5.097477912902832
    5. '\n' → logprob: -6.847477912902832
    6. '

' → logprob: -8.222477912902832
    7. '<|end|>' → logprob: -8.597477912902832
    8. '```' → logprob: -9.347477912902832
    9. '' → logprob: -10.097477912902832
    10. ' 
' → logprob: -10.347477912902832

Token 37: 'au' (ID: 753)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.000800811278168112
    2. '
' → logprob: -8.125801086425781
    3. ' for' → logprob: -8.375801086425781
    4. '```' → logprob: -8.500801086425781
    5. '\n' → logprob: -9.625801086425781
    6. '\' → logprob: -13.250801086425781
    7. '
' → logprob: -13.500801086425781
    8. '' → logprob: -14.500801086425781
    9. '	for' → logprob: -14.875801086425781
    10. 'For' → logprob: -15.250801086425781

Token 38: '_m' (ID: 1285)
  Prédit: 'jourd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'jourd' → logprob: -0.7511258721351624
    2. 'mil' → logprob: -2.0011258125305176
    3. 'tant' → logprob: -2.6261258125305176
    4. 'tour' → logprob: -2.7511258125305176
    5. 'cun' → logprob: -3.2511258125305176
    6. 'ssi' → logprob: -3.3761258125305176
    7. 'c' → logprob: -3.5011258125305176
    8. 'paravant' → logprob: -3.6261258125305176
    9. 'tor' → logprob: -3.7511258125305176
    10. 'teur' → logprob: -4.126125812530518

Token 39: 'o' (ID: 78)
  Prédit: 'il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'il' → logprob: -0.011224771849811077
    2. 'mil' → logprob: -4.886224746704102
    3. 'ilie' → logprob: -6.386224746704102
    4. 'lie' → logprob: -7.636224746704102
    5. 'in' → logprob: -8.636224746704102
    6. 'aint' → logprob: -8.761224746704102
    7. 'o' → logprob: -8.886224746704102
    8. 'illeur' → logprob: -9.011224746704102
    9. 'ieux' → logprob: -9.136224746704102
    10. 'ax' → logprob: -9.511224746704102

Token 40: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -8.2994620242971e-06
    2. 'is' → logprob: -12.125008583068848
    3. 'moins' → logprob: -13.875008583068848
    4. 'ns' → logprob: -14.250008583068848
    5. 'in' → logprob: -15.375008583068848
    6. 'i' → logprob: -15.625008583068848
    7. '_ins' → logprob: -15.750008583068848
    8. '1' → logprob: -15.750008583068848
    9. '#' → logprob: -16.12500762939453
    10. 'Ins' → logprob: -16.37500762939453

Token 41: '_un' (ID: 11119)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.949750542640686
    2. '_' → logprob: -1.324750542640686
    3. '_un' → logprob: -1.449750542640686
    4. '=' → logprob: -2.3247504234313965
    5. '_once' → logprob: -5.3247504234313965
    6. 'un' → logprob: -6.4497504234313965
    7. '1' → logprob: -6.5747504234313965
    8. ' ' → logprob: -6.8247504234313965
    9. 'une' → logprob: -7.1997504234313965
    10. '_a' → logprob: -7.5747504234313965

Token 42: '_element' (ID: 21131)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2808918952941895
    2. '_present' → logprob: -1.2808918952941895
    3. '_sup' → logprob: -1.4058918952941895
    4. '_s' → logprob: -3.0308918952941895
    5. '_element' → logprob: -3.0308918952941895
    6. '_pres' → logprob: -3.4058918952941895
    7. ' =' → logprob: -4.9058918952941895
    8. '_=' → logprob: -4.9058918952941895
    9. 'element' → logprob: -5.2808918952941895
    10. '=' → logprob: -5.2808918952941895

Token 43: '_tr' (ID: 7410)
  Prédit: '_present'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_present' → logprob: -0.8040287494659424
    2. ' =' → logprob: -1.6790287494659424
    3. '_sup' → logprob: -1.6790287494659424
    4. '_' → logprob: -2.0540287494659424
    5. '_s' → logprob: -4.429028511047363
    6. '_pres' → logprob: -4.679028511047363
    7. '=True' → logprob: -5.179028511047363
    8. '=False' → logprob: -5.554028511047363
    9. '=' → logprob: -5.679028511047363
    10. '_removed' → logprob: -5.804028511047363

Token 44: 'ouve' (ID: 44982)
  Prédit: 'ouve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouve' → logprob: -0.05564549192786217
    2. 'ouvé' → logprob: -2.93064546585083
    3. 'ouv' → logprob: -7.68064546585083
    4. 'ouver' → logprob: -8.430645942687988
    5. 'ou' → logprob: -10.430645942687988
    6. 'oue' → logprob: -10.680645942687988
    7. 'ove' → logprob: -11.680645942687988
    8. 'e' → logprob: -12.555645942687988
    9. 'ouveau' → logprob: -13.055645942687988
    10. 'o' → logprob: -13.055645942687988

Token 45: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.60438072681427
    2. ' =' → logprob: -0.85438072681427
    3. '_' → logprob: -3.6043806076049805
    4. '_=' → logprob: -7.8543806076049805
    5. '=True' → logprob: -8.22938060760498
    6. '=False' → logprob: -9.72938060760498
    7. 'e' → logprob: -10.85438060760498
    8. '?' → logprob: -10.85438060760498
    9. ' ' → logprob: -10.97938060760498
    10. ',' → logprob: -11.60438060760498

Token 46: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.07893892377614975
    2. 'False' → logprob: -2.5789389610290527
    3. ' True' → logprob: -9.953938484191895
    4. 'True' → logprob: -13.453938484191895
    5. ' F' → logprob: -17.45393943786621
    6. '(False' → logprob: -17.45393943786621
    7. 'F' → logprob: -18.20393943786621
    8. ' ' → logprob: -18.32893943786621
    9. ' Faux' → logprob: -18.57893943786621
    10. '=False' → logprob: -18.70393943786621

Token 47: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19876597821712494
    2. '\n' → logprob: -2.073765993118286
    3. ' 
' → logprob: -4.198765754699707
    4. '\' → logprob: -4.573765754699707
    5. '<|end|>' → logprob: -4.573765754699707
    6. 'for' → logprob: -4.823765754699707
    7. ' for' → logprob: -5.948765754699707
    8. '

' → logprob: -6.073765754699707
    9. '  
' → logprob: -6.198765754699707
    10. '' → logprob: -6.948765754699707

Token 48: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0529882088303566
    2. '
' → logprob: -3.052988290786743
    3. ' for' → logprob: -5.677988052368164
    4. '```' → logprob: -7.302988052368164
    5. '\n' → logprob: -8.552988052368164
    6. '
' → logprob: -9.552988052368164
    7. '

' → logprob: -11.927988052368164
    8. '  
' → logprob: -12.177988052368164
    9. 'if' → logprob: -12.302988052368164
    10. '' → logprob: -12.427988052368164

Token 49: ' element' (ID: 3577)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.2820557951927185
    2. ' element' → logprob: -1.7820558547973633
    3. ' i' → logprob: -3.0320558547973633
    4. ' ' → logprob: -4.407055854797363
    5. ' entier' → logprob: -5.282055854797363
    6. ' élément' → logprob: -5.907055854797363
    7. ' x' → logprob: -6.157055854797363
    8. 'nombre' → logprob: -6.407055854797363
    9. ' _' → logprob: -6.532055854797363
    10. ' n' → logprob: -6.532055854797363

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007788439746946096
    2. 'in' → logprob: -4.88278865814209
    3. ' ' → logprob: -8.88278865814209
    4. '  ' → logprob: -11.50778865814209
    5. '_' → logprob: -12.13278865814209
    6. 's' → logprob: -12.25778865814209
    7. ',' → logprob: -12.38278865814209
    8. '_in' → logprob: -12.88278865814209
    9. ' ,' → logprob: -13.00778865814209
    10. ' ' → logprob: -13.13278865814209

Token 51: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.011071285232901573
    2. 'liste' → logprob: -4.51107120513916
    3. ' ' → logprob: -12.01107120513916
    4. ' lista' → logprob: -12.01107120513916
    5. ' lst' → logprob: -12.51107120513916
    6. ' list' → logprob: -12.88607120513916
    7. ' lijst' → logprob: -14.01107120513916
    8. 'l' → logprob: -14.26107120513916
    9. ' lise' → logprob: -14.38607120513916
    10. ' listes' → logprob: -14.63607120513916

Token 52: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.0265974011272192
    2. '_' → logprob: -3.651597499847412
    3. '_:' → logprob: -9.151597023010254
    4. '_elements' → logprob: -9.276597023010254
    5. 'ent' → logprob: -10.401597023010254
    6. ' _' → logprob: -10.526597023010254
    7. '_ENT' → logprob: -11.276597023010254
    8. '_en' → logprob: -11.526597023010254
    9. '	ent' → logprob: -12.651597023010254
    10. '_entities' → logprob: -13.151597023010254

Token 53: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -6.229872087715194e-05
    2. 'ier' → logprob: -9.750061988830566
    3. 'ers' → logprob: -13.750061988830566
    4. 'i' → logprob: -13.750061988830566
    5. '_' → logprob: -14.250061988830566
    6. '_i' → logprob: -14.500061988830566
    7. 'ieurs' → logprob: -14.750061988830566
    8. 'riers' → logprob: -16.500062942504883
    9. 'airs' → logprob: -17.375062942504883
    10. '```' → logprob: -17.375062942504883

Token 54: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014764121442567557
    2. ' :' → logprob: -8.875147819519043
    3. ':
' → logprob: -11.875147819519043
    4. ':**' → logprob: -14.875147819519043
    5. '<|end|>' → logprob: -15.750147819519043
    6. ':

' → logprob: -16.125146865844727
    7. ':int' → logprob: -17.375146865844727
    8. ' :
' → logprob: -17.500146865844727
    9. '=' → logprob: -17.625146865844727
    10. '```' → logprob: -17.750146865844727

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7066311836242676
    2. ' ' → logprob: -1.8316311836242676
    3. ':' → logprob: -2.2066311836242676
    4. '<|end|>' → logprob: -2.2066311836242676
    5. '```' → logprob: -2.7066311836242676
    6. ' if' → logprob: -3.7066311836242676
    7. '    ' → logprob: -5.081631183624268
    8. ' :' → logprob: -5.081631183624268
    9. '  ' → logprob: -5.456631183624268
    10. '<|end|>' → logprob: -5.706631183624268

Token 56: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8820870518684387
    2. '   ' → logprob: -0.8820870518684387
    3. '```' → logprob: -2.632086992263794
    4. '    ' → logprob: -3.382086992263794
    5. ' if' → logprob: -3.757086992263794
    6. '<|end|>' → logprob: -4.007087230682373
    7. ' ```' → logprob: -5.132087230682373
    8. ' 
' → logprob: -5.382087230682373
    9. '\' → logprob: -5.632087230682373
    10. '     
' → logprob: -6.382087230682373

Token 57: ' element' (ID: 3577)
  Prédit: ' element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' element' → logprob: -0.0013965456746518612
    2. 'element' → logprob: -6.626396656036377
    3. ' élément' → logprob: -9.751396179199219
    4. ' ' → logprob: -12.251396179199219
    5. ' elemento' → logprob: -12.501396179199219
    6. 'élé' → logprob: -13.626396179199219
    7. '	element' → logprob: -13.626396179199219
    8. ' pro' → logprob: -14.251396179199219
    9. ' elementi' → logprob: -15.626396179199219
    10. ' espace' → logprob: -15.751396179199219

Token 58: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014171031303703785
    2. '==' → logprob: -4.264171123504639
    3. ' ' → logprob: -12.88917064666748
    4. ' !=' → logprob: -13.26417064666748
    5. ' ' → logprob: -13.38917064666748
    6. '=' → logprob: -14.51417064666748
    7. '>' → logprob: -15.26417064666748
    8. ' =' → logprob: -15.38917064666748
    9. ' >=' → logprob: -15.88917064666748
    10. '   ' → logprob: -16.139171600341797

Token 59: ' prochain' (ID: 52413)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.47492149472236633
    2. ' prochain' → logprob: -0.974921464920044
    3. ' pro' → logprob: -7.474921703338623
    4. ' ' → logprob: -8.474921226501465
    5. '	pro' → logprob: -10.724921226501465
    6. '  ' → logprob: -11.474921226501465
    7. ' prochaine' → logprob: -11.724921226501465
    8. '```' → logprob: -11.849921226501465
    9. '   ' → logprob: -12.224921226501465
    10. ' ' → logprob: -12.474921226501465

Token 60: '_nombre' (ID: 118816)
  Prédit: '_nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nombre' → logprob: -0.004664134234189987
    2. '_' → logprob: -5.379663944244385
    3. '_n' → logprob: -11.254664421081543
    4. '_nome' → logprob: -11.629664421081543
    5. 'e' → logprob: -11.879664421081543
    6. ' _' → logprob: -12.254664421081543
    7. 'nombre' → logprob: -13.379664421081543
    8. '_nom' → logprob: -13.504664421081543
    9. '_num' → logprob: -13.879664421081543
    10. '_e' → logprob: -14.004664421081543

Token 61: '_att' (ID: 35618)
  Prédit: '_att'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_att' → logprob: -0.00015574338613077998
    2. '_' → logprob: -9.750155448913574
    3. '_ent' → logprob: -10.125155448913574
    4. '_a' → logprob: -10.750155448913574
    5. 's' → logprob: -11.625155448913574
    6. '_expected' → logprob: -11.875155448913574
    7. ' _' → logprob: -12.500155448913574
    8. '_s' → logprob: -13.000155448913574
    9. 'att' → logprob: -13.250155448913574
    10. ' ' → logprob: -13.250155448913574

Token 62: 'endu' (ID: 46640)
  Prédit: 'endu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endu' → logprob: -0.0001097417771234177
    2. 'edu' → logprob: -9.750109672546387
    3. 'e' → logprob: -11.125109672546387
    4. 'endue' → logprob: -11.875109672546387
    5. 'entu' → logprob: -12.375109672546387
    6. 'endeu' → logprob: -12.625109672546387
    7. 'end' → logprob: -12.875109672546387
    8. 'eu' → logprob: -13.125109672546387
    9. '

' → logprob: -13.125109672546387
    10. 'en' → logprob: -13.500109672546387

Token 63: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008229722734540701
    2. ':
' → logprob: -7.125823020935059
    3. ' :' → logprob: -11.750823020935059
    4. '<|end|>' → logprob: -12.375823020935059
    5. ':

' → logprob: -12.875823020935059
    6. '<|end|>' → logprob: -14.375823020935059
    7. ' and' → logprob: -14.500823020935059
    8. '   ' → logprob: -14.625823020935059
    9. ' or' → logprob: -14.875823020935059
    10. ':return' → logprob: -15.250823020935059

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3955978751182556
    2. '
' → logprob: -1.7705979347229004
    3. '\n' → logprob: -2.1455979347229004
    4. '        
' → logprob: -4.1455979347229
    5. '<|end|>' → logprob: -5.5205979347229
    6. '    
' → logprob: -5.6455979347229
    7. '```' → logprob: -5.7705979347229
    8. '\' → logprob: -5.7705979347229
    9. 'pro' → logprob: -5.8955979347229
    10. ' 
' → logprob: -6.1455979347229

Token 65: ' prochain' (ID: 52413)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.13072745501995087
    2. '
' → logprob: -3.255727529525757
    3. ' pro' → logprob: -3.755727529525757
    4. '       ' → logprob: -4.130727291107178
    5. '\n' → logprob: -4.255727291107178
    6. '```' → logprob: -4.880727291107178
    7. '        
' → logprob: -5.380727291107178
    8. '           ' → logprob: -5.630727291107178
    9. '\' → logprob: -5.880727291107178
    10. ' 
' → logprob: -5.880727291107178

Token 66: '_nombre' (ID: 118816)
  Prédit: '_nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nombre' → logprob: -0.004899042658507824
    2. '_' → logprob: -5.379899024963379
    3. '_num' → logprob: -8.879899024963379
    4. '_nom' → logprob: -10.379899024963379
    5. ' _' → logprob: -10.504899024963379
    6. '_n' → logprob: -10.504899024963379
    7. '_nome' → logprob: -10.504899024963379
    8. '_nb' → logprob: -11.754899024963379
    9. '_name' → logprob: -12.004899024963379
    10. '_number' → logprob: -12.129899024963379

Token 67: '_att' (ID: 35618)
  Prédit: '_att'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_att' → logprob: -0.00043698702938854694
    2. 'att' → logprob: -7.750436782836914
    3. '_' → logprob: -12.750436782836914
    4. '_ent' → logprob: -14.000436782836914
    5. '```' → logprob: -14.875436782836914
    6. '_a' → logprob: -15.000436782836914
    7. 's' → logprob: -15.125436782836914
    8. 'a' → logprob: -15.500436782836914
    9. 'Att' → logprob: -15.625436782836914
    10. ' ' → logprob: -15.625436782836914

Token 68: 'endu' (ID: 46640)
  Prédit: 'endu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endu' → logprob: -9.341087570646778e-05
    2. 'edu' → logprob: -9.875093460083008
    3. 'du' → logprob: -10.875093460083008
    4. 'u' → logprob: -11.750093460083008
    5. 'e' → logprob: -12.000093460083008
    6. 'endeu' → logprob: -13.125093460083008
    7. 'endue' → logprob: -13.250093460083008
    8. 'end' → logprob: -13.750093460083008
    9. 'entu' → logprob: -14.000093460083008
    10. 'en' → logprob: -14.250093460083008

Token 69: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3877379596233368
    2. '+=' → logprob: -1.1377379894256592
    3. '+' → logprob: -7.13773775100708
    4. '=' → logprob: -9.762738227844238
    5. ' =' → logprob: -12.262738227844238
    6. '<|end|>' → logprob: -12.262738227844238
    7. ']+=' → logprob: -14.137738227844238
    8. '++' → logprob: -14.387738227844238
    9. ' ' → logprob: -14.512738227844238
    10. '+="' → logprob: -14.512738227844238

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. ' ' → logprob: -19.750036239624023
    4. '   ' → logprob: -20.375036239624023
    5. '```' → logprob: -20.625036239624023
    6. '<|end|>' → logprob: -22.000036239624023
    7. '0' → logprob: -22.625036239624023
    8. '۱' → logprob: -22.750036239624023
    9. '１' → logprob: -23.250036239624023
    10. '+' → logprob: -23.312536239624023

Token 71: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '```' → logprob: -19.0
    4. '   ' → logprob: -20.75
    5. '<|end|>' → logprob: -21.6875
    6. '`' → logprob: -21.6875
    7. ' ' → logprob: -22.0
    8. '১' → logprob: -22.25
    9. '۱' → logprob: -22.3125
    10. '१' → logprob: -22.375

Token 72: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29848095774650574
    2. '<|end|>' → logprob: -1.4234809875488281
    3. 'else' → logprob: -5.548480987548828
    4. '  
' → logprob: -5.798480987548828
    5. ' 
' → logprob: -5.798480987548828
    6. '   ' → logprob: -6.423480987548828
    7. '    
' → logprob: -6.423480987548828
    8. ' else' → logprob: -6.798480987548828
    9. '<|end|>' → logprob: -7.423480987548828
    10. '\n' → logprob: -7.423480987548828

Token 73: '       ' (ID: 309)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2513260543346405
    2. '   ' → logprob: -1.876326084136963
    3. '<|end|>' → logprob: -3.501326084136963
    4. ' else' → logprob: -3.626326084136963
    5. '
' → logprob: -4.876326084136963
    6. '```' → logprob: -6.501326084136963
    7. 'elif' → logprob: -6.751326084136963
    8. '       ' → logprob: -7.501326084136963
    9. '    
' → logprob: -7.751326084136963
    10. '  
' → logprob: -8.251325607299805

Token 74: ' au' (ID: 2791)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' (adapté à ' au') → logprob: -0.003434942802414298
    2. ' au' → logprob: -6.253435134887695
    3. '   ' → logprob: -7.128435134887695
    4. '       ' → logprob: -7.503435134887695
    5. '```' → logprob: -9.878435134887695
    6. 'else' → logprob: -10.003435134887695
    7. 'continue' → logprob: -11.378435134887695
    8. '    ' → logprob: -11.753435134887695
    9. ' ' → logprob: -11.878435134887695
    10. '     ' → logprob: -12.253435134887695

Token 75: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0839436873793602
    2. '_s' → logprob: -2.9589436054229736
    3. '_' → logprob: -3.5839436054229736
    4. '_space' → logprob: -7.833943843841553
    5. 's' → logprob: -8.583943367004395
    6. '_spaces' → logprob: -10.083943367004395
    7. 'underscore' → logprob: -10.583943367004395
    8. '_\' → logprob: -10.708943367004395
    9. '_es' → logprob: -11.083943367004395
    10. '_l' → logprob: -11.083943367004395

Token 76: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.003591279499232769
    2. 'ois' → logprob: -5.878591060638428
    3. 'os' → logprob: -8.003591537475586
    4. 'oi' → logprob: -8.378591537475586
    5. 'moins' → logprob: -9.878591537475586
    6. '_' → logprob: -10.003591537475586
    7. 'oise' → logprob: -10.503591537475586
    8. '_o' → logprob: -10.503591537475586
    9. 'ol' → logprob: -11.503591537475586
    10. 'au' → logprob: -11.628591537475586

Token 77: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.00026073982007801533
    2. 'ls' → logprob: -8.875260353088379
    3. 'is' → logprob: -9.125260353088379
    4. 'ils' → logprob: -12.250260353088379
    5. 'ns' → logprob: -13.625260353088379
    6. '```' → logprob: -13.625260353088379
    7. '_ins' → logprob: -13.750260353088379
    8. 'i' → logprob: -14.250260353088379
    9. 'insen' → logprob: -14.750260353088379
    10. '\' → logprob: -14.875260353088379

Token 78: '_un' (ID: 11119)
  Prédit: '_un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -0.0004800048773176968
    2. '_' → logprob: -7.7504801750183105
    3. '_uns' → logprob: -10.875479698181152
    4. 'un' → logprob: -11.375479698181152
    5. '_unc' → logprob: -12.125479698181152
    6. '_a' → logprob: -13.750479698181152
    7. '_en' → logprob: -13.875479698181152
    8. '_one' → logprob: -14.000479698181152
    9. '_element' → logprob: -14.000479698181152
    10. '_uc' → logprob: -14.000479698181152

Token 79: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -0.011190474964678288
    2. 'element' → logprob: -4.511190414428711
    3. 'élé' → logprob: -9.261190414428711
    4. '_elements' → logprob: -10.386190414428711
    5. '_' → logprob: -11.511190414428711
    6. '_elem' → logprob: -13.011190414428711
    7. '_ele' → logprob: -13.261190414428711
    8. ' élément' → logprob: -13.511190414428711
    9. '_Element' → logprob: -15.386190414428711
    10. ' element' → logprob: -15.386190414428711

Token 80: '_tr' (ID: 7410)
  Prédit: '_tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -0.0005747167742811143
    2. 'tr' → logprob: -7.750574588775635
    3. '_' → logprob: -8.875575065612793
    4. '	tr' → logprob: -14.000575065612793
    5. '_found' → logprob: -14.375575065612793
    6. ' =' → logprob: -14.500575065612793
    7. '_=' → logprob: -14.750575065612793
    8. '=True' → logprob: -14.875575065612793
    9. ' _' → logprob: -15.125575065612793
    10. '_t' → logprob: -15.375575065612793

Token 81: 'ouve' (ID: 44982)
  Prédit: 'ouve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouve' → logprob: -0.014776477590203285
    2. 'ouvé' → logprob: -4.264776706695557
    3. 'ou' → logprob: -7.639776706695557
    4. 'ouv' → logprob: -9.389776229858398
    5. 'ove' → logprob: -11.389776229858398
    6. 'oue' → logprob: -11.639776229858398
    7. 'ouver' → logprob: -12.264776229858398
    8. 'uve' → logprob: -12.264776229858398
    9. '>' → logprob: -12.264776229858398
    10. 'ovou' → logprob: -13.139776229858398

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0338476225733757
    2. '=' → logprob: -3.4088475704193115
    3. '=True' → logprob: -8.53384780883789
    4. ' ' → logprob: -13.15884780883789
    5. ' ' → logprob: -13.65884780883789
    6. '<|end|>' → logprob: -14.28384780883789
    7. 's' → logprob: -14.65884780883789
    8. '	' → logprob: -15.28384780883789
    9. 'True' → logprob: -16.03384780883789
    10. ' True' → logprob: -16.15884780883789

Token 83: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.011047814972698689
    2. 'True' → logprob: -4.511047840118408
    3. '(True' → logprob: -17.88604736328125
    4. '=True' → logprob: -18.63604736328125
    5. ' Tru' → logprob: -19.38604736328125
    6. ' ' → logprob: -20.13604736328125
    7. ' true' → logprob: -21.51104736328125
    8. ' ' → logprob: -21.88604736328125
    9. '.True' → logprob: -22.51104736328125
    10. '_true' → logprob: -22.88604736328125

Token 84: '

' (ID: 279)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02090701274573803
    2. ' else' → logprob: -4.270906925201416
    3. '
' → logprob: -5.895906925201416
    4. 'elif' → logprob: -6.145906925201416
    5. '   ' → logprob: -6.395906925201416
    6. '<|end|>' → logprob: -9.520907402038574
    7. '```' → logprob: -10.145907402038574
    8. ' elif' → logprob: -11.520907402038574
    9. '    
' → logprob: -12.145907402038574
    10. '\n' → logprob: -12.270907402038574

Token 85: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0038677770644426346
    2. ' else' → logprob: -5.7538676261901855
    3. '   ' → logprob: -7.3788676261901855
    4. '```' → logprob: -10.128868103027344
    5. 'elif' → logprob: -10.628868103027344
    6. '_else' → logprob: -14.878868103027344
    7. '	else' → logprob: -15.503868103027344
    8. ' ' → logprob: -15.628868103027344
    9. '
' → logprob: -15.753868103027344
    10. '}else' → logprob: -16.378868103027344

Token 86: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0006832453073002398
    2. ' else' → logprob: -7.500683307647705
    3. 'elif' → logprob: -9.000682830810547
    4. '```' → logprob: -12.000682830810547
    5. '   ' → logprob: -14.500682830810547
    6. '	else' → logprob: -16.375682830810547
    7. '_else' → logprob: -17.000682830810547
    8. 'elser' → logprob: -17.125682830810547
    9. ' elif' → logprob: -17.500682830810547
    10. 'elseif' → logprob: -17.875682830810547

Token 87: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09617643803358078
    2. '       ' → logprob: -2.9711763858795166
    3. '   ' → logprob: -3.8461763858795166
    4. ':
' → logprob: -4.096176624298096
    5. '```' → logprob: -6.971176624298096
    6. '
' → logprob: -7.596176624298096
    7. ':

' → logprob: -8.096176147460938
    8. '    
' → logprob: -8.221176147460938
    9. '    ' → logprob: -9.221176147460938
    10. ' :' → logprob: -9.721176147460938

Token 88: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01007785927504301
    2. 'comp' → logprob: -4.885077953338623
    3. '   ' → logprob: -6.760077953338623
    4. '	comp' → logprob: -7.010077953338623
    5. ' compteur' → logprob: -8.760077476501465
    6. '	' → logprob: -9.635077476501465
    7. ' comp' → logprob: -10.385077476501465
    8. '        
' → logprob: -10.635077476501465
    9. '```' → logprob: -10.635077476501465
    10. '           ' → logprob: -11.135077476501465

Token 89: ' compteur' (ID: 163344)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.0030190644320100546
    2. ' compteur' → logprob: -6.503018856048584
    3. '	comp' → logprob: -7.128018856048584
    4. '       ' → logprob: -8.003019332885742
    5. '   ' → logprob: -8.378019332885742
    6. ' comp' → logprob: -9.003019332885742
    7. ' ' → logprob: -12.128019332885742
    8. '```' → logprob: -12.378019332885742
    9. '_comp' → logprob: -12.878019332885742
    10. '.comp' → logprob: -13.253019332885742

Token 90: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.00018220659694634378
    2. '_' → logprob: -8.625182151794434
    3. ' _' → logprob: -14.875182151794434
    4. '_e' → logprob: -15.125182151794434
    5. '_ELEMENTS' → logprob: -15.125182151794434
    6. '_element' → logprob: -15.500182151794434
    7. '_items' → logprob: -15.500182151794434
    8. '_ent' → logprob: -15.750182151794434
    9. '_ele' → logprob: -16.00018310546875
    10. '_des' → logprob: -16.00018310546875

Token 91: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -1.8074162653647363e-05
    2. '_' → logprob: -11.250018119812012
    3. '_elements' → logprob: -12.625018119812012
    4. 'a' → logprob: -13.750018119812012
    5. 'à' → logprob: -14.875018119812012
    6. ' _' → logprob: -16.750017166137695
    7. '=_' → logprob: -17.125017166137695
    8. '_ent' → logprob: -17.750017166137695
    9. '_auc' → logprob: -18.000017166137695
    10. '_as' → logprob: -18.625017166137695

Token 92: '_sup' (ID: 148990)
  Prédit: 'sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sup' → logprob: -0.009830819442868233
    2. '_sup' → logprob: -4.634830951690674
    3. ' supprimer' → logprob: -10.634830474853516
    4. 'supp' → logprob: -10.634830474853516
    5. '_s' → logprob: -11.134830474853516
    6. 's' → logprob: -12.634830474853516
    7. 'su' → logprob: -12.759830474853516
    8. ' sup' → logprob: -13.259830474853516
    9. '.sup' → logprob: -13.759830474853516
    10. 'aj' → logprob: -14.509830474853516

Token 93: 'primer' (ID: 55821)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0624757818877697
    2. 'primer' → logprob: -2.8124756813049316
    3. 'rim' → logprob: -8.06247615814209
    4. 'imer' → logprob: -9.81247615814209
    5. 'river' → logprob: -10.31247615814209
    6. 'ringer' → logprob: -10.93747615814209
    7. 'irmer' → logprob: -11.43747615814209
    8. 'pr' → logprob: -11.56247615814209
    9. 're' → logprob: -11.68747615814209
    10. '```' → logprob: -11.93747615814209

Token 94: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.16123686730861664
    2. '+=' → logprob: -1.9112368822097778
    3. '+' → logprob: -6.911236763000488
    4. ' ' → logprob: -12.661236763000488
    5. ' ' → logprob: -12.911236763000488
    6. '<|end|>' → logprob: -13.036236763000488
    7. ']+=' → logprob: -13.286236763000488
    8. '=' → logprob: -13.536236763000488
    9. '+='' → logprob: -13.536236763000488
    10. ' +' → logprob: -14.161236763000488

Token 95: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -19.12506675720215
    4. ' ' → logprob: -20.50006675720215
    5. '  ' → logprob: -20.75006675720215
    6. '۱' → logprob: -20.87506675720215
    7. '```' → logprob: -21.50006675720215
    8. '１' → logprob: -21.68756675720215
    9. '१' → logprob: -21.87506675720215
    10. '+' → logprob: -22.12506675720215

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '```' → logprob: -21.875
    4. '۱' → logprob: -22.375
    5. '   ' → logprob: -22.5
    6. '１' → logprob: -22.5
    7. '0' → logprob: -22.875
    8. '१' → logprob: -23.375
    9. '١' → logprob: -23.75
    10. '  ' → logprob: -23.75

Token 97: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0022294751834124327
    2. '
' → logprob: -6.627229690551758
    3. 'if' → logprob: -7.127229690551758
    4. '```' → logprob: -10.127229690551758
    5. ' print' → logprob: -11.002229690551758
    6. '<|end|>' → logprob: -11.127229690551758
    7. '

' → logprob: -11.752229690551758
    8. ' if' → logprob: -12.127229690551758
    9. '\n' → logprob: -12.252229690551758
    10. '#print' → logprob: -12.752229690551758

Token 98: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16331396996974945
    2. 'if' → logprob: -1.9133139848709106
    3. '
' → logprob: -6.038313865661621
    4. '<|end|>' → logprob: -8.288313865661621
    5. ' if' → logprob: -8.413313865661621
    6. '```' → logprob: -8.663313865661621
    7. '

' → logprob: -11.288313865661621
    8. '#' → logprob: -11.413313865661621
    9. ' print' → logprob: -11.413313865661621
    10. '#print' → logprob: -12.413313865661621

Token 99: ' au' (ID: 2791)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.7760592103004456
    2. ' au' → logprob: -0.7760592103004456
    3. 'pro' → logprob: -3.276059150695801
    4. ' not' → logprob: -3.651059150695801
    5. 'not' → logprob: -4.651059150695801
    6. ' prochain' → logprob: -5.276059150695801
    7. ' pro' → logprob: -7.651059150695801
    8. ' compteur' → logprob: -8.7760591506958
    9. '   ' → logprob: -8.9010591506958
    10. ' ' → logprob: -9.1510591506958

Token 100: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0015279557555913925
    2. '_' → logprob: -6.501527786254883
    3. '_s' → logprob: -10.876527786254883
    4. '_b' → logprob: -14.001527786254883
    5. ' _' → logprob: -14.376527786254883
    6. 's' → logprob: -14.376527786254883
    7. '_n' → logprob: -14.751527786254883
    8. '_\' → logprob: -14.876527786254883
    9. '_t' → logprob: -15.001527786254883
    10. '<|end|>' → logprob: -15.251527786254883

Token 101: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.10843586921691895
    2. 'ois' → logprob: -2.358435869216919
    3. 'os' → logprob: -4.85843563079834
    4. '_' → logprob: -8.60843563079834
    5. 'ols' → logprob: -9.85843563079834
    6. '\' → logprob: -10.10843563079834
    7. 'oise' → logprob: -10.35843563079834
    8. '_o' → logprob: -11.23343563079834
    9. 'moins' → logprob: -11.48343563079834
    10. 'ous' → logprob: -11.60843563079834

Token 102: 'ins' (ID: 1564)
  Prédit: 'ins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ins' → logprob: -0.0004484269011300057
    2. 'is' → logprob: -8.500448226928711
    3. '_ins' → logprob: -9.125448226928711
    4. 'ls' → logprob: -9.375448226928711
    5. 'ns' → logprob: -10.375448226928711
    6. '_' → logprob: -12.250448226928711
    7. 'ils' → logprob: -13.000448226928711
    8. '1' → logprob: -13.500448226928711
    9. 'ln' → logprob: -13.625448226928711
    10. '```' → logprob: -13.625448226928711

Token 103: '_un' (ID: 11119)
  Prédit: '_un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -1.1875571544806007e-05
    2. '_' → logprob: -12.125011444091797
    3. 'un' → logprob: -12.625011444091797
    4. '_uns' → logprob: -14.125011444091797
    5. '_a' → logprob: -14.500011444091797
    6. '_unc' → logprob: -14.750011444091797
    7. '_one' → logprob: -15.125011444091797
    8. '_uni' → logprob: -15.500011444091797
    9. '_u' → logprob: -15.625011444091797
    10. '_an' → logprob: -15.750011444091797

Token 104: '_element' (ID: 21131)
  Prédit: '_element'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_element' → logprob: -7.922563963802531e-05
    2. 'element' → logprob: -9.625079154968262
    3. '_elem' → logprob: -12.500079154968262
    4. '_elements' → logprob: -12.750079154968262
    5. 'élé' → logprob: -13.000079154968262
    6. '_' → logprob: -13.125079154968262
    7. '_ele' → logprob: -13.375079154968262
    8. ' _' → logprob: -15.750079154968262
    9. '_Element' → logprob: -16.125080108642578
    10. '_e' → logprob: -16.125080108642578

Token 105: '_tr' (ID: 7410)
  Prédit: '_tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_tr' → logprob: -0.0006274910410866141
    2. 'tr' → logprob: -7.375627517700195
    3. '_found' → logprob: -15.625627517700195
    4. '<tr' → logprob: -16.125627517700195
    5. '	tr' → logprob: -16.375627517700195
    6. '_find' → logprob: -16.375627517700195
    7. 'a' → logprob: -16.625627517700195
    8. '_' → logprob: -16.625627517700195
    9. '_true' → logprob: -17.500627517700195
    10. '...' → logprob: -17.500627517700195

Token 106: 'ouve' (ID: 44982)
  Prédit: 'ouve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouve' → logprob: -0.0008370272698812187
    2. 'ouvé' → logprob: -7.1258368492126465
    3. 'ou' → logprob: -10.750837326049805
    4. 'ouv' → logprob: -11.750837326049805
    5. 'oue' → logprob: -12.875837326049805
    6. 'ouver' → logprob: -15.375837326049805
    7. '>' → logprob: -16.000837326049805
    8. 'ove' → logprob: -16.875837326049805
    9. 'uve' → logprob: -17.000837326049805
    10. '
' → logprob: -17.000837326049805

Token 107: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00025204161647707224
    2. '==' → logprob: -8.750251770019531
    3. ' :' → logprob: -9.875251770019531
    4. ':
' → logprob: -10.875251770019531
    5. ' ==' → logprob: -11.000251770019531
    6. ' and' → logprob: -12.375251770019531
    7. ':

' → logprob: -14.625251770019531
    8. '>' → logprob: -14.750251770019531
    9. '=' → logprob: -14.875251770019531
    10. 'and' → logprob: -14.875251770019531

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16305485367774963
    2. '
' → logprob: -2.413054943084717
    3. 'print' → logprob: -3.288054943084717
    4. ' print' → logprob: -3.788054943084717
    5. '    
' → logprob: -7.788054943084717
    6. '
' → logprob: -8.413054466247559
    7. '```' → logprob: -9.163054466247559
    8. '	print' → logprob: -9.288054466247559
    9. ' 
' → logprob: -9.788054466247559
    10. '  
' → logprob: -11.288054466247559

Token 109: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.7848862373502925e-05
    2. ' print' → logprob: -10.500027656555176
    3. '   ' → logprob: -16.250028610229492
    4. 'comp' → logprob: -16.500028610229492
    5. '
' → logprob: -18.000028610229492
    6. '```' → logprob: -18.250028610229492
    7. 'prin' → logprob: -19.375028610229492
    8. '	print' → logprob: -19.625028610229492
    9. 'pr' → logprob: -20.375028610229492
    10. '    
' → logprob: -20.625028610229492

Token 110: '(comp' (ID: 60272)
  Prédit: '(comp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(comp' → logprob: -0.09926767647266388
    2. '(pro' → logprob: -2.4742677211761475
    3. '(' → logprob: -4.599267482757568
    4. '("' → logprob: -9.974267959594727
    5. 'comp' → logprob: -9.974267959594727
    6. '(len' → logprob: -10.349267959594727
    7. '(cont' → logprob: -10.474267959594727
    8. ' (' → logprob: -10.974267959594727
    9. '((' → logprob: -11.224267959594727
    10. '('' → logprob: -11.849267959594727

Token 111: 'teur' (ID: 45262)
  Prédit: 'teur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.00028016636497341096
    2. 'te' → logprob: -8.750280380249023
    3. 'teurs' → logprob: -9.250280380249023
    4. 'ter' → logprob: -11.750280380249023
    5. 'p' → logprob: -11.875280380249023
    6. 't' → logprob: -13.000280380249023
    7. 'tep' → logprob: -13.125280380249023
    8. 'tre' → logprob: -13.375280380249023
    9. 'ateur' → logprob: -13.375280380249023
    10. 'uteur' → logprob: -13.875280380249023

Token 112: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -5.5577775128767826e-06
    2. 'elements' → logprob: -12.125005722045898
    3. '_' → logprob: -17.6250057220459
    4. 'Elements' → logprob: -18.0000057220459
    5. 'élé' → logprob: -18.2500057220459
    6. '_ELEMENTS' → logprob: -18.5000057220459
    7. '_ele' → logprob: -19.5000057220459
    8. ' elements' → logprob: -19.7500057220459
    9. '_element' → logprob: -19.8750057220459
    10. 'lements' → logprob: -20.0000057220459

Token 113: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.014184068888425827
    2. '_elements' → logprob: -4.26418399810791
    3. '_' → logprob: -11.38918399810791
    4. 'a' → logprob: -12.01418399810791
    5. 'elements' → logprob: -12.88918399810791
    6. '_e' → logprob: -15.88918399810791
    7. ' _' → logprob: -16.264184951782227
    8. '_items' → logprob: -16.764184951782227
    9. '_)' → logprob: -16.889184951782227
    10. '_es' → logprob: -16.889184951782227

Token 114: '_sup' (ID: 148990)
  Prédit: 'sup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sup' → logprob: -0.015683788806200027
    2. '_sup' → logprob: -4.265683650970459
    3. 'a' → logprob: -6.890683650970459
    4. ' supprimer' → logprob: -8.515684127807617
    5. 's' → logprob: -9.765684127807617
    6. '```' → logprob: -10.140684127807617
    7. '_s' → logprob: -10.265684127807617
    8. 'elements' → logprob: -10.640684127807617
    9. 'su' → logprob: -11.140684127807617
    10. ' ' → logprob: -11.390684127807617

Token 115: 'primer' (ID: 55821)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1030302420258522
    2. 'primer' → logprob: -2.478030204772949
    3. 'imer' → logprob: -4.353030204772949
    4. 'rim' → logprob: -7.603030204772949
    5. 'irmer' → logprob: -8.85303020477295
    6. 'river' → logprob: -9.47803020477295
    7. 'rir' → logprob: -9.85303020477295
    8. 'er' → logprob: -9.85303020477295
    9. 'primir' → logprob: -10.35303020477295
    10. '_r' → logprob: -10.47803020477295

Token 116: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08164896816015244
    2. ')
' → logprob: -2.5816490650177
    3. ')

' → logprob: -6.081648826599121
    4. 'else' → logprob: -7.706648826599121
    5. ' )' → logprob: -11.206648826599121
    6. ')
' → logprob: -12.706648826599121
    7. ' else' → logprob: -13.081648826599121
    8. ' )
' → logprob: -13.456648826599121
    9. '   ' → logprob: -15.206648826599121
    10. '),' → logprob: -15.206648826599121

Token 117: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -2.176947600673884e-05
    2. ' else' → logprob: -10.750021934509277
    3. 'elif' → logprob: -16.37502098083496
    4. '```' → logprob: -16.75002098083496
    5. 'elser' → logprob: -17.00002098083496
    6. '-' → logprob: -17.37502098083496
    7. 'aut' → logprob: -17.87502098083496
    8. '_else' → logprob: -18.00002098083496
    9. 'Else' → logprob: -18.00002098083496
    10. 'elses' → logprob: -18.12502098083496

Token 118: ':

' (ID: 1402)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013749953359365463
    2. ':
' → logprob: -6.626375198364258
    3. '   ' → logprob: -10.626375198364258
    4. ':

' → logprob: -11.001375198364258
    5. ' :' → logprob: -12.001375198364258
    6. ':
' → logprob: -14.501375198364258
    7. '<|end|>' → logprob: -14.751375198364258
    8. 'print' → logprob: -15.126375198364258
    9. ' :
' → logprob: -15.501375198364258
    10. '():' → logprob: -15.876375198364258

Token 119: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006296937819570303
    2. '   ' → logprob: -5.5062971115112305
    3. '-' → logprob: -6.2562971115112305
    4. ' print' → logprob: -8.38129711151123
    5. '-print' → logprob: -9.63129711151123
    6. '	print' → logprob: -14.00629711151123
    7. '```' → logprob: -14.13129711151123
    8. '    
' → logprob: -14.38129711151123
    9. ' -' → logprob: -15.25629711151123
    10. '  ' → logprob: -15.38129711151123

Token 120: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005468378076329827
    2. '-' → logprob: -7.750546932220459
    3. ' print' → logprob: -9.2505464553833
    4. '-print' → logprob: -10.8755464553833
    5. '   ' → logprob: -14.3755464553833
    6. ' -' → logprob: -15.2505464553833
    7. 'pr' → logprob: -16.000547409057617
    8. 'prin' → logprob: -16.125547409057617
    9. '-pr' → logprob: -16.875547409057617
    10. '	print' → logprob: -17.750547409057617

Token 121: '("-' (ID: 27133)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.4292440414428711
    2. '(' → logprob: -1.054244041442871
    3. '(len' → logprob: -8.554244041442871
    4. '(nombre' → logprob: -8.679244041442871
    5. '('' → logprob: -10.179244041442871
    6. '("' → logprob: -10.304244041442871
    7. '(n' → logprob: -10.304244041442871
    8. '(
' → logprob: -10.929244041442871
    9. '(pro' → logprob: -10.929244041442871
    10. '-' → logprob: -10.929244041442871

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. 'nombre' → logprob: -13.625004768371582
    3. ' ' → logprob: -13.750004768371582
    4. '"""' → logprob: -14.375004768371582
    5. '"' → logprob: -15.250004768371582
    6. 'n' → logprob: -15.500004768371582
    7. '")' → logprob: -15.750004768371582
    8. '{' → logprob: -15.875004768371582
    9. '{}' → logprob: -16.375003814697266
    10. '}' → logprob: -16.375003814697266

Token 123: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.16036275029182434
    2. ')' → logprob: -1.910362720489502
    3. ')")' → logprob: -8.91036319732666
    4. '')' → logprob: -13.03536319732666
    5. '}")' → logprob: -14.53536319732666
    6. '")
' → logprob: -15.41036319732666
    7. '`)' → logprob: -15.66036319732666
    8. ')"' → logprob: -16.285362243652344
    9. ' )' → logprob: -16.410362243652344
    10. '"' → logprob: -16.410362243652344


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 121
Tokens correctement prédits (1ère position, stricte): 59
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 101
Précision stricte (1ère position): 48.76%
Précision adaptée (1ère position): 52.07%
Précision (top 10): 83.47%
================================================================================
