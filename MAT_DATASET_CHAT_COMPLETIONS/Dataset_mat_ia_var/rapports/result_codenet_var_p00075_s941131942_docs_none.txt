================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 18:46:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
for s in sys.stdin:
    n, w, h = map(float, s.split(","))
    if w / h**2 >= 25.0:
        print(int(n))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'for' (ID: 1938)
  Prédit: 'as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'as' → logprob: -0.018294736742973328
    2. 'import' → logprob: -4.143294811248779
    3. 'os' → logprob: -6.518294811248779
    4. 'from' → logprob: -7.893294811248779
    5. 'sys' → logprob: -8.518294334411621
    6. ' as' → logprob: -9.893294334411621
    7. '```' → logprob: -10.143294334411621
    8. 'numpy' → logprob: -10.268294334411621
    9. 'As' → logprob: -11.268294334411621
    10. 'newline' → logprob: -11.268294334411621

Token 4: ' s' (ID: 265)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.025834793224930763
    2. ' item' → logprob: -4.775834560394287
    3. ' x' → logprob: -4.775834560394287
    4. ' line' → logprob: -5.525834560394287
    5. ' ' → logprob: -5.775834560394287
    6. 'i' → logprob: -8.275835037231445
    7. ' in' → logprob: -8.775835037231445
    8. ' element' → logprob: -9.025835037231445
    9. ' key' → logprob: -9.150835037231445
    10. ' k' → logprob: -9.150835037231445

Token 5: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.19278967380523682
    2. ' in' → logprob: -2.3177895545959473
    3. ':' → logprob: -2.5677895545959473
    4. '_in' → logprob: -9.817790031433105
    5. 'In' → logprob: -10.192790031433105
    6. ':
' → logprob: -11.067790031433105
    7. 's' → logprob: -11.942790031433105
    8. ' ' → logprob: -11.942790031433105
    9. '-in' → logprob: -12.317790031433105
    10. '   ' → logprob: -12.442790031433105

Token 6: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.01811634562909603
    2. 'input' → logprob: -4.518116474151611
    3. 'stdin' → logprob: -5.518116474151611
    4. ':' → logprob: -6.768116474151611
    5. 'range' → logprob: -7.018116474151611
    6. 'in' → logprob: -7.768116474151611
    7. 'open' → logprob: -9.893115997314453
    8. '```' → logprob: -10.143115997314453
    9. '[]' → logprob: -10.518115997314453
    10. '(sys' → logprob: -10.518115997314453

Token 7: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.6392042636871338
    2. '.' → logprob: -1.6392042636871338
    3. '.import' → logprob: -1.6392042636871338
    4. '.iter' → logprob: -3.389204263687134
    5. 'import' → logprob: -4.139204025268555
    6. '.stdout' → logprob: -4.764204025268555
    7. '.argv' → logprob: -4.764204025268555
    8. '.modules' → logprob: -5.764204025268555
    9. '.items' → logprob: -6.264204025268555
    10. '.in' → logprob: -6.514204025268555

Token 8: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038455575122497976
    2. '.readlines' → logprob: -8.875384330749512
    3. '.read' → logprob: -9.250384330749512
    4. ':
' → logprob: -9.750384330749512
    5. '.readline' → logprob: -9.750384330749512
    6. '   ' → logprob: -12.125384330749512
    7. ':`' → logprob: -12.125384330749512
    8. ':\' → logprob: -12.250384330749512
    9. '.strip' → logprob: -12.625384330749512
    10. ':

' → logprob: -13.125384330749512

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010390079842181876
    2. '  ' → logprob: -10.375103950500488
    3. 's' → logprob: -10.500103950500488
    4. ' ' → logprob: -11.250103950500488
    5. 'pass' → logprob: -11.250103950500488
    6. 'print' → logprob: -11.750103950500488
    7. '    ' → logprob: -12.000103950500488
    8. '```' → logprob: -12.875103950500488
    9. '   ' → logprob: -14.500103950500488
    10. 'line' → logprob: -15.125103950500488

Token 10: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0023689894005656242
    2. 'print' → logprob: -6.252368927001953
    3. 's' → logprob: -8.002368927001953
    4. 'pass' → logprob: -9.377368927001953
    5. 'process' → logprob: -11.627368927001953
    6. '  ' → logprob: -11.877368927001953
    7. 'line' → logprob: -13.377368927001953
    8. ' ' → logprob: -14.002368927001953
    9. '    ' → logprob: -14.002368927001953
    10. '#' → logprob: -14.502368927001953

Token 11: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26409995555877686
    2. ' =' → logprob: -1.5140999555587769
    3. '=int' → logprob: -4.889100074768066
    4. '+=' → logprob: -6.014100074768066
    5. '=n' → logprob: -7.264100074768066
    6. '=len' → logprob: -7.514100074768066
    7. '   ' → logprob: -8.514100074768066
    8. ' +=' → logprob: -9.014100074768066
    9. '.append' → logprob: -9.514100074768066
    10. ' ' → logprob: -9.639100074768066

Token 12: ' w' (ID: 286)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.005489991512149572
    2. 'k' → logprob: -5.380489826202393
    3. 's' → logprob: -8.13049030303955
    4. 'a' → logprob: -8.50549030303955
    5. '=' → logprob: -9.00549030303955
    6. 'x' → logprob: -10.13049030303955
    7. 'n' → logprob: -10.13049030303955
    8. 'c' → logprob: -10.63049030303955
    9. 'd' → logprob: -10.63049030303955
    10. 'l' → logprob: -10.75549030303955

Token 13: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001397260813973844
    2. ' =' → logprob: -6.626397132873535
    3. ',' → logprob: -10.876397132873535
    4. 'h' → logprob: -11.126397132873535
    5. 'hile' → logprob: -11.251397132873535
    6. '=int' → logprob: -12.501397132873535
    7. 'ith' → logprob: -13.251397132873535
    8. '=h' → logprob: -13.251397132873535
    9. '=input' → logprob: -13.251397132873535
    10. 'rite' → logprob: -13.751397132873535

Token 14: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -3.79811754100956e-05
    2. 'd' → logprob: -11.000038146972656
    3. 'l' → logprob: -11.125038146972656
    4. 'c' → logprob: -13.375038146972656
    5. 'x' → logprob: -13.500038146972656
    6. 't' → logprob: -14.250038146972656
    7. 'b' → logprob: -14.625038146972656
    8. ' h' → logprob: -14.875038146972656
    9. 's' → logprob: -15.000038146972656
    10. 'm' → logprob: -15.250038146972656

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006284848786890507
    2. ' =' → logprob: -5.131284713745117
    3. ',' → logprob: -8.131284713745117
    4. '=int' → logprob: -10.756284713745117
    5. '   ' → logprob: -11.131284713745117
    6. '.append' → logprob: -12.381284713745117
    7. '=input' → logprob: -12.631284713745117
    8. '=line' → logprob: -12.756284713745117
    9. ' ' → logprob: -13.131284713745117
    10. '=`' → logprob: -13.506284713745117

Token 16: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00026300468016415834
    2. ' map' → logprob: -8.250263214111328
    3. '(map' → logprob: -14.250263214111328
    4. '.map' → logprob: -14.375263214111328
    5. 'list' → logprob: -15.000263214111328
    6. '	map' → logprob: -15.625263214111328
    7. 'input' → logprob: -17.500263214111328
    8. '-map' → logprob: -18.375263214111328
    9. '_map' → logprob: -18.625263214111328
    10. 's' → logprob: -18.625263214111328

Token 17: '(float' (ID: 17830)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09977660328149796
    2. '(int' → logprob: -2.59977650642395
    3. '(lambda' → logprob: -5.474776744842529
    4. '(parse' → logprob: -6.474776744842529
    5. '(tuple' → logprob: -6.599776744842529
    6. '(`' → logprob: -6.724776744842529
    7. '(float' → logprob: -6.849776744842529
    8. '(*' → logprob: -7.099776744842529
    9. '(map' → logprob: -7.162276744842529
    10. '(eval' → logprob: -7.224776744842529

Token 18: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2647625803947449
    2. '(s' → logprob: -2.6397626399993896
    3. '(sys' → logprob: -2.8897626399993896
    4. ')(' → logprob: -3.1397626399993896
    5. '(*' → logprob: -4.1397624015808105
    6. '())' → logprob: -4.2647624015808105
    7. '(input' → logprob: -5.3897624015808105
    8. '   ' → logprob: -5.7647624015808105
    9. ')' → logprob: -5.8897624015808105
    10. ').' → logprob: -6.3897624015808105

Token 19: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0001673061487963423
    2. 'input' → logprob: -9.250166893005371
    3. 'line' → logprob: -9.875166893005371
    4. 'sys' → logprob: -11.500166893005371
    5. 'split' → logprob: -11.625166893005371
    6. 'strip' → logprob: -14.875166893005371
    7. 'map' → logprob: -16.000167846679688
    8. 'stdin' → logprob: -16.000167846679688
    9. ' s' → logprob: -17.000167846679688
    10. 'list' → logprob: -19.125167846679688

Token 20: '.split' (ID: 10347)
  Prédit: '.strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.16044610738754272
    2. '.split' → logprob: -1.9104461669921875
    3. '.rstrip' → logprob: -8.660446166992188
    4. ').' → logprob: -10.410446166992188
    5. '.' → logprob: -11.035446166992188
    6. '.replace' → logprob: -13.910446166992188
    7. 'strip' → logprob: -14.785446166992188
    8. '[:-' → logprob: -15.160446166992188
    9. '.trim' → logprob: -15.410446166992188
    10. '.readline' → logprob: -15.660446166992188

Token 21: '(",' (ID: 23824)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07040751725435257
    2. '()' → logprob: -2.6954076290130615
    3. '(' → logprob: -7.820407390594482
    4. ')' → logprob: -11.44540786743164
    5. '())
' → logprob: -11.57040786743164
    6. '().' → logprob: -11.94540786743164
    7. '('' → logprob: -11.94540786743164
    8. '(()' → logprob: -12.07040786743164
    9. '())

' → logprob: -12.57040786743164
    10. '("' → logprob: -12.57040786743164

Token 22: '"))
' (ID: 10990)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6557915806770325
    2. '"))' → logprob: -0.7807915806770325
    3. '"))
' → logprob: -4.780791759490967
    4. ')' → logprob: -5.155791759490967
    5. '"' → logprob: -5.530791759490967
    6. ' "))' → logprob: -6.280791759490967
    7. '")' → logprob: -6.530791759490967
    8. '))
' → logprob: -6.905791759490967
    9. '   ' → logprob: -8.905791282653809
    10. 'n' → logprob: -9.780791282653809

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006322643253952265
    2. 'print' → logprob: -5.131322860717773
    3. 'n' → logprob: -8.881322860717773
    4. 'w' → logprob: -9.631322860717773
    5. '  ' → logprob: -9.881322860717773
    6. 'pass' → logprob: -10.506322860717773
    7. '#' → logprob: -10.631322860717773
    8. '    ' → logprob: -10.881322860717773
    9. '<|end|>' → logprob: -11.006322860717773
    10. ' ' → logprob: -11.256322860717773

Token 24: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2821844518184662
    2. 'print' → logprob: -1.4071844816207886
    3. '#' → logprob: -7.407184600830078
    4. 'pass' → logprob: -8.032184600830078
    5. 'if' (adapté à ' if') → logprob: -10.282184600830078
    6. '  ' → logprob: -11.032184600830078
    7. 'w' → logprob: -11.407184600830078
    8. '```' → logprob: -11.657184600830078
    9. 'n' → logprob: -12.157184600830078
    10. '    ' → logprob: -12.532184600830078

Token 25: ' w' (ID: 286)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.004163045436143875
    2. 'n' → logprob: -5.5041632652282715
    3. ':' → logprob: -9.879162788391113
    4. ' ' → logprob: -11.254162788391113
    5. '(n' → logprob: -12.004162788391113
    6. ' not' → logprob: -12.129162788391113
    7. ' (' → logprob: -12.879162788391113
    8. '  ' → logprob: -13.379162788391113
    9. '   ' → logprob: -13.504162788391113
    10. ' w' → logprob: -13.879162788391113

Token 26: ' /' (ID: 820)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.021717017516493797
    2. '<=' → logprob: -4.021717071533203
    3. '<' → logprob: -5.771717071533203
    4. '>=' → logprob: -7.896717071533203
    5. '==' → logprob: -9.646717071533203
    6. ' >' → logprob: -12.021717071533203
    7. ' <=' → logprob: -13.396717071533203
    8. '*' → logprob: -13.771717071533203
    9. '!=' → logprob: -15.396717071533203
    10. '≤' → logprob: -15.521717071533203

Token 27: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -6.704273118884885e-07
    2. 'n' → logprob: -14.375000953674316
    3. ' h' → logprob: -16.875
    4. 'float' → logprob: -21.875
    5. '<h' → logprob: -22.125
    6. '	h' → logprob: -23.375
    7. '_h' → logprob: -23.625
    8. '.h' → logprob: -23.625
    9. 'w' → logprob: -24.375
    10. '(h' → logprob: -24.5

Token 28: '**' (ID: 410)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.003041293239220977
    2. '<=' → logprob: -6.5030412673950195
    3. '>=' → logprob: -7.0030412673950195
    4. '<' → logprob: -7.3780412673950195
    5. ' >' → logprob: -13.12804126739502
    6. '==' → logprob: -14.37804126739502
    7. '>`' → logprob: -15.00304126739502
    8. ' <=' → logprob: -16.128042221069336
    9. ' >=' → logprob: -16.253042221069336
    10. '>
' → logprob: -16.378042221069336

Token 29: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.704065213445574e-05
    2. '0' → logprob: -10.000046730041504
    3. '=' → logprob: -13.750046730041504
    4. '3' → logprob: -15.750046730041504
    5. '1' → logprob: -15.750046730041504
    6. '.' → logprob: -15.875046730041504
    7. '(' → logprob: -16.12504768371582
    8. ' ' → logprob: -17.37504768371582
    9. '   ' → logprob: -18.62504768371582
    10. 'n' → logprob: -18.62504768371582

Token 30: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0010982997482642531
    2. '<' → logprob: -7.376098155975342
    3. '>=' → logprob: -8.0010986328125
    4. '<=' → logprob: -9.1260986328125
    5. ':' → logprob: -11.1260986328125
    6. ' >' → logprob: -11.5010986328125
    7. '==' → logprob: -13.5010986328125
    8. '>:' → logprob: -14.1260986328125
    9. ' >=' → logprob: -15.1260986328125
    10. '>`' → logprob: -16.3760986328125

Token 31: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01908731833100319
    2. '2' → logprob: -4.394087314605713
    3. '0' → logprob: -6.144087314605713
    4. 'n' → logprob: -6.519087314605713
    5. '3' → logprob: -6.644087314605713
    6. '5' → logprob: -7.144087314605713
    7. '10' → logprob: -8.269087791442871
    8. '4' → logprob: -8.269087791442871
    9. '6' → logprob: -9.769087791442871
    10. '7' → logprob: -9.894087791442871

Token 32: '25' (ID: 1161)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.039167117327451706
    2. '2' → logprob: -3.7891671657562256
    3. 'n' → logprob: -5.5391669273376465
    4. '3' → logprob: -5.6641669273376465
    5. '0' → logprob: -5.6641669273376465
    6. '5' → logprob: -6.4141669273376465
    7. '4' → logprob: -6.6641669273376465
    8. '10' → logprob: -7.0391669273376465
    9. '6' → logprob: -8.164167404174805
    10. '100' → logprob: -8.539167404174805

Token 33: '.' (ID: 13)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -7.465036105713807e-06
    2. ':`' → logprob: -13.125007629394531
    3. ':\' → logprob: -13.375007629394531
    4. ':
' → logprob: -13.625007629394531
    5. '   ' → logprob: -14.000007629394531
    6. ':**' → logprob: -14.375007629394531
    7. ':

' → logprob: -14.750007629394531
    8. ':#' → logprob: -15.250007629394531
    9. 'print' → logprob: -15.875007629394531
    10. ':<' → logprob: -16.37500762939453

Token 34: '0' (ID: 15)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09924490749835968
    2. ':' → logprob: -3.3492448329925537
    3. '0' → logprob: -4.224245071411133
    4. 'n' → logprob: -4.599245071411133
    5. ':
' → logprob: -4.599245071411133
    6. '5' → logprob: -4.599245071411133
    7. 'break' → logprob: -5.724245071411133
    8. '   ' → logprob: -5.849245071411133
    9. '1' → logprob: -6.099245071411133
    10. 'sys' → logprob: -6.224245071411133

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.5928495486150496e-05
    2. ':
' → logprob: -11.375016212463379
    3. ':`' → logprob: -13.375016212463379
    4. '   ' → logprob: -13.625016212463379
    5. ':

' → logprob: -14.125016212463379
    6. ':\' → logprob: -15.125016212463379
    7. '       ' → logprob: -15.125016212463379
    8. 'print' → logprob: -16.750015258789062
    9. ':return' → logprob: -16.750015258789062
    10. ':**' → logprob: -16.875015258789062

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018041854491457343
    2. 'print' → logprob: -9.0001802444458
    3. '      ' → logprob: -10.7501802444458
    4. '   ' → logprob: -11.2501802444458
    5. '     ' → logprob: -11.5001802444458
    6. '        ' → logprob: -11.7501802444458
    7. 'continue' → logprob: -12.7501802444458
    8. '           ' → logprob: -14.3751802444458
    9. '         ' → logprob: -14.7501802444458
    10. '    ' → logprob: -15.0001802444458

Token 37: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.31407368183135986
    2. '           ' → logprob: -1.3140736818313599
    3. 'continue' → logprob: -7.68907356262207
    4. 'break' → logprob: -8.18907356262207
    5. '       ' → logprob: -9.81407356262207
    6. 'pass' → logprob: -12.18907356262207
    7. '   ' → logprob: -12.43907356262207
    8. 'sys' → logprob: -12.56407356262207
    9. '          ' → logprob: -12.68907356262207
    10. '         ' → logprob: -13.06407356262207

Token 38: '(int' (ID: 2742)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7306506633758545
    2. '("' → logprob: -0.8556506633758545
    3. '(' → logprob: -2.7306506633758545
    4. '(f' → logprob: -4.355650901794434
    5. '("("' → logprob: -5.230650901794434
    6. '(n' → logprob: -5.605650901794434
    7. '('' → logprob: -5.855650901794434
    8. '("")' → logprob: -5.980650901794434
    9. '(...)' → logprob: -8.355650901794434
    10. '(w' → logprob: -9.355650901794434

Token 39: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08633079379796982
    2. '(int' → logprob: -3.5863308906555176
    3. '(float' → logprob: -3.5863308906555176
    4. '(' → logprob: -3.8363308906555176
    5. '(round' → logprob: -6.211330890655518
    6. '(max' → logprob: -6.586330890655518
    7. '())' → logprob: -7.461330890655518
    8. '(bool' → logprob: -8.08633041381836
    9. '(w' → logprob: -8.33633041381836
    10. ')' → logprob: -8.71133041381836

Token 40: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0002538296685088426
    2. ')' → logprob: -8.375253677368164
    3. '))
' → logprob: -11.250253677368164
    4. ')))' → logprob: -11.875253677368164
    5. '))

' → logprob: -14.500253677368164
    6. '"))' → logprob: -14.500253677368164
    7. ''))' → logprob: -15.125253677368164
    8. '),' → logprob: -15.125253677368164
    9. '))+' → logprob: -15.250253677368164
    10. ')`' → logprob: -15.250253677368164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 38
Tokens correctement prédits (1ère position, stricte): 7
Tokens correctement prédits (1ère position, avec adaptation): 8
Tokens correctement prédits (top 10): 24
Précision stricte (1ère position): 18.42%
Précision adaptée (1ère position): 21.05%
Précision (top 10): 63.16%
================================================================================
