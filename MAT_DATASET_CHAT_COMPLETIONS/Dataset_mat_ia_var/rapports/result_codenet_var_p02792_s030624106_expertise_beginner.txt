================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:29:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())

def func(i, j, N):
    result = []
    for x in range(1, N+1):
        x_str = str(x)
        if x_str[0] == str(i) and x_str[-1] == str(j):
            result.append(x)
    return result

total = 0
for i in range(10):
    for j in range(10):
        count1 = len(func(i, j, N))
        count2 = len(func(j, i, N))
        total += count1 * count2

print(total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005778160993941128
    2. '```' → logprob: -8.500577926635742
    3. ''' → logprob: -9.000577926635742
    4. '(N' → logprob: -9.375577926635742
    5. '`' → logprob: -9.625577926635742
    6. '('' → logprob: -10.125577926635742
    7. '("("' → logprob: -11.125577926635742
    8. ')' → logprob: -11.875577926635742
    9. '(
' → logprob: -12.250577926635742
    10. '\(' → logprob: -12.250577926635742

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08323337137699127
    2. ')' → logprob: -2.58323335647583
    3. '()' → logprob: -5.70823335647583
    4. '())' → logprob: -7.70823335647583
    5. '(
' → logprob: -8.833233833312988
    6. '```' → logprob: -9.458233833312988
    7. '('' → logprob: -9.958233833312988
    8. '("("' → logprob: -10.083233833312988
    9. '(""))' → logprob: -10.583233833312988
    10. '(

' → logprob: -10.708233833312988

Token 5: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15767326951026917
    2. 'if' → logprob: -2.1576733589172363
    3. 's' → logprob: -4.282673358917236
    4. 'i' → logprob: -5.282673358917236
    5. 'factor' → logprob: -6.282673358917236
    6. 'x' → logprob: -6.532673358917236
    7. 'sum' → logprob: -6.532673358917236
    8. 'result' → logprob: -6.657673358917236
    9. '`' → logprob: -6.907673358917236
    10. ' for' → logprob: -7.032673358917236

Token 6: ' func' (ID: 4660)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5866909027099609
    2. ' factorial' → logprob: -0.9616909027099609
    3. ' f' → logprob: -4.336690902709961
    4. ' space' → logprob: -4.461690902709961
    5. ' main' → logprob: -5.086690902709961
    6. ' factor' → logprob: -5.461690902709961
    7. ' solution' → logprob: -5.586690902709961
    8. ' fibonacci' → logprob: -5.836690902709961
    9. ' solve' → logprob: -5.961690902709961
    10. ' max' → logprob: -5.961690902709961

Token 7: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007973426021635532
    2. '_' → logprob: -4.8829731941223145
    3. ' (' → logprob: -9.382973670959473
    4. '(a' → logprob: -10.257973670959473
    5. ')' → logprob: -10.382973670959473
    6. 's' → logprob: -10.632973670959473
    7. '("("' → logprob: -10.882973670959473
    8. 'a' → logprob: -11.007973670959473
    9. '```' → logprob: -11.132973670959473
    10. '_a' → logprob: -11.257973670959473

Token 8: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11366941034793854
    2. ')' → logprob: -2.3636693954467773
    3. ',' → logprob: -4.363669395446777
    4. ' ):' → logprob: -8.363669395446777
    5. '+' → logprob: -8.738669395446777
    6. ' ,' → logprob: -9.738669395446777
    7. ':' → logprob: -10.488669395446777
    8. '=' → logprob: -10.613669395446777
    9. ' )' → logprob: -10.988669395446777
    10. '_' → logprob: -11.238669395446777

Token 9: ' j' (ID: 441)
  Prédit: ' N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.8813027739524841
    2. ' j' → logprob: -1.506302833557129
    3. ' n' → logprob: -1.506302833557129
    4. 'N' → logprob: -3.131302833557129
    5. 'n' → logprob: -3.256302833557129
    6. 'j' → logprob: -3.256302833557129
    7. ' k' → logprob: -6.006302833557129
    8. ')' → logprob: -6.256302833557129
    9. ' arr' → logprob: -6.881302833557129
    10. ' ' → logprob: -6.943802833557129

Token 10: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01468215137720108
    2. ')' → logprob: -4.264682292938232
    3. ',' → logprob: -7.889682292938232
    4. ':' → logprob: -9.139681816101074
    5. '):
' → logprob: -11.014681816101074
    6. ' ):' → logprob: -11.389681816101074
    7. ')>' → logprob: -13.764681816101074
    8. ')):' → logprob: -13.764681816101074
    9. '),' → logprob: -14.014681816101074
    10. ''):' → logprob: -14.139681816101074

Token 11: ' N' (ID: 478)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.2781869173049927
    2. 'k' → logprob: -1.7781869173049927
    3. ' N' → logprob: -4.278186798095703
    4. ' n' → logprob: -4.403186798095703
    5. ' dp' → logprob: -4.778186798095703
    6. ' K' → logprob: -5.278186798095703
    7. ' l' → logprob: -5.528186798095703
    8. ' s' → logprob: -5.903186798095703
    9. 'n' → logprob: -6.028186798095703
    10. 'N' → logprob: -6.278186798095703

Token 12: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02169029973447323
    2. ')' → logprob: -3.8966903686523438
    3. ',' → logprob: -6.896690368652344
    4. ':' → logprob: -10.021690368652344
    5. ''):' → logprob: -10.146690368652344
    6. ' ):' → logprob: -11.271690368652344
    7. ')):' → logprob: -11.896690368652344
    8. '):
' → logprob: -12.146690368652344
    9. ')>' → logprob: -12.396690368652344
    10. ' ' → logprob: -12.771690368652344

Token 13: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008889793418347836
    2. '   ' → logprob: -5.133889675140381
    3. '):' → logprob: -6.133889675140381
    4. ' :' → logprob: -8.133890151977539
    5. ':
' → logprob: -8.508890151977539
    6. ' ' → logprob: -9.383890151977539
    7. '':' → logprob: -9.758890151977539
    8. ':return' → logprob: -10.133890151977539
    9. ',' → logprob: -11.133890151977539
    10. ')' → logprob: -11.383890151977539

Token 14: ' result' (ID: 1534)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.1346752643585205
    2. ' ' → logprob: -1.2596752643585205
    3. ' if' → logprob: -2.0096752643585205
    4. '   ' → logprob: -2.5096752643585205
    5. '\n' → logprob: -3.2596752643585205
    6. ' \' → logprob: -3.3846752643585205
    7. ' 
' → logprob: -3.6346752643585205
    8. 'if' → logprob: -4.259675025939941
    9. '     
' → logprob: -4.384675025939941
    10. ' return' → logprob: -4.509675025939941

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4258617162704468
    2. '=' → logprob: -1.4258617162704468
    3. '[' → logprob: -3.0508618354797363
    4. ' ' → logprob: -3.6758618354797363
    5. '   ' → logprob: -4.550861835479736
    6. ' +=' → logprob: -4.550861835479736
    7. '+' → logprob: -5.925861835479736
    8. ')' → logprob: -6.050861835479736
    9. '  ' → logprob: -6.550861835479736
    10. ',' → logprob: -7.300861835479736

Token 16: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7044821381568909
    2. ' ' → logprob: -0.9544821381568909
    3. ' i' → logprob: -3.079482078552246
    4. ' []' → logprob: -3.204482078552246
    5. '[]' → logprob: -4.329482078552246
    6. 'i' → logprob: -4.829482078552246
    7. ' [' → logprob: -4.954482078552246
    8. '[i' → logprob: -5.954482078552246
    9. '[' → logprob: -7.079482078552246
    10. ' (' → logprob: -7.704482078552246

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03912321478128433
    2. ' ' → logprob: -4.039123058319092
    3. '    ' → logprob: -5.164123058319092
    4. '[' → logprob: -5.789123058319092
    5. ' for' → logprob: -6.039123058319092
    6. '    
' → logprob: -6.414123058319092
    7. '       ' → logprob: -6.539123058319092
    8. ')' → logprob: -6.664123058319092
    9. '<|end|>' → logprob: -6.789123058319092
    10. 'for' → logprob: -6.789123058319092

Token 18: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.2157984972000122
    2. '   ' → logprob: -1.5907984972000122
    3. ' for' → logprob: -1.5907984972000122
    4. ' 
' → logprob: -2.8407983779907227
    5. '    ' → logprob: -3.0907983779907227
    6. ' ' → logprob: -3.2157983779907227
    7. 'if' → logprob: -3.3407983779907227
    8. ' if' → logprob: -3.5907983779907227
    9. '\n' → logprob: -3.7157983779907227
    10. '     
' → logprob: -3.8407983779907227

Token 19: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23324741423130035
    2. ' i' → logprob: -2.6082475185394287
    3. ' range' → logprob: -2.8582475185394287
    4. ' _' → logprob: -3.1082475185394287
    5. '_' → logprob: -3.8582475185394287
    6. ' in' → logprob: -4.85824728012085
    7. ' k' → logprob: -6.98324728012085
    8. ' ' → logprob: -7.10824728012085
    9. 'range' → logprob: -7.73324728012085
    10. 'i' → logprob: -8.233247756958008

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1604785919189453
    2. 'in' → logprob: -1.9104785919189453
    3. ' ' → logprob: -8.785478591918945
    4. ')' → logprob: -10.660478591918945
    5. 'range' → logprob: -11.285478591918945
    6. '   ' → logprob: -11.410478591918945
    7. ',' → logprob: -11.410478591918945
    8. '	in' → logprob: -12.160478591918945
    9. '  ' → logprob: -12.410478591918945
    10. '0' → logprob: -12.535478591918945

Token 21: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0025128775741904974
    2. 'range' → logprob: -6.0025129318237305
    3. ' ' → logprob: -10.87751293182373
    4. '	range' → logprob: -12.25251293182373
    5. '   ' → logprob: -12.50251293182373
    6. '(range' → logprob: -13.25251293182373
    7. ' ran' → logprob: -13.25251293182373
    8. ' rang' → logprob: -13.37751293182373
    9. ' ra' → logprob: -13.75251293182373
    10. '  ' → logprob: -13.75251293182373

Token 22: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1010846421122551
    2. '(j' → logprob: -2.8510847091674805
    3. '(' → logprob: -3.3510847091674805
    4. '(N' → logprob: -5.7260847091674805
    5. '(I' → logprob: -10.60108470916748
    6. '(n' → logprob: -10.72608470916748
    7. '(s' → logprob: -13.22608470916748
    8. ' (' → logprob: -13.60108470916748
    9. ')' → logprob: -14.22608470916748
    10. '((' → logprob: -14.47608470916748

Token 23: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31524205207824707
    2. 'j' → logprob: -1.440242052078247
    3. 'N' → logprob: -3.440242052078247
    4. '(i' → logprob: -6.690241813659668
    5. '(j' → logprob: -9.190241813659668
    6. '(N' → logprob: -10.565241813659668
    7. ' i' → logprob: -10.815241813659668
    8. '1' → logprob: -10.815241813659668
    9. '0' → logprob: -11.315241813659668
    10. '(' → logprob: -11.315241813659668

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020614994689822197
    2. ' ,' → logprob: -3.8956151008605957
    3. '(' → logprob: -10.770614624023438
    4. ',j' → logprob: -11.020614624023438
    5. ',N' → logprob: -11.145614624023438
    6. ' ' → logprob: -11.895614624023438
    7. '   ' → logprob: -12.270614624023438
    8. '1' → logprob: -13.145614624023438
    9. '(N' → logprob: -13.645614624023438
    10. 'N' → logprob: -14.645614624023438

Token 25: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.25982606410980225
    2. 'j' → logprob: -2.134826183319092
    3. ' N' → logprob: -2.384826183319092
    4. 'i' → logprob: -4.634826183319092
    5. ' j' → logprob: -4.884826183319092
    6. ' i' → logprob: -7.134826183319092
    7. ' ' → logprob: -8.634825706481934
    8. ')' → logprob: -9.634825706481934
    9. '	N' → logprob: -10.634825706481934
    10. '   ' → logprob: -10.884825706481934

Token 26: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02630819007754326
    2. ' +' → logprob: -3.651308298110962
    3. '-' → logprob: -12.651308059692383
    4. '//' → logprob: -13.651308059692383
    5. ' ' → logprob: -14.026308059692383
    6. ')+' → logprob: -15.151308059692383
    7. '+i' → logprob: -15.276308059692383
    8. ' -' → logprob: -15.276308059692383
    9. ' //' → logprob: -15.276308059692383
    10. '):' → logprob: -15.276308059692383

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.702754474943504e-05
    2. ' ' → logprob: -10.25003719329834
    3. '2' → logprob: -13.62503719329834
    4. '-' → logprob: -15.87503719329834
    5. '+' → logprob: -16.875036239624023
    6. '```' → logprob: -17.000036239624023
    7. '   ' → logprob: -17.750036239624023
    8. ')' → logprob: -18.000036239624023
    9. '

' → logprob: -18.250036239624023
    10. ' -' → logprob: -18.250036239624023

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000940046738833189
    2. ':' → logprob: -7.500939846038818
    3. ')' → logprob: -8.375940322875977
    4. '):
' → logprob: -9.375940322875977
    5. ' ):' → logprob: -10.125940322875977
    6. ',' → logprob: -10.500940322875977
    7. '   ' → logprob: -13.375940322875977
    8. '():' → logprob: -14.000940322875977
    9. ']:' → logprob: -15.250940322875977
    10. ' ' → logprob: -15.500940322875977

Token 29: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45253241062164307
    2. '       ' → logprob: -1.077532410621643
    3. '):' → logprob: -4.9525322914123535
    4. '    ' → logprob: -5.7025322914123535
    5. '   ' → logprob: -5.9525322914123535
    6. ' ' → logprob: -5.9525322914123535
    7. ' :' → logprob: -6.4525322914123535
    8. ',' → logprob: -6.7025322914123535
    9. 'if' → logprob: -6.8275322914123535
    10. ' if' → logprob: -7.2025322914123535

Token 30: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9822494387626648
    2. ':' → logprob: -1.3572494983673096
    3. '       ' → logprob: -1.9822494983673096
    4. '    ' → logprob: -2.3572494983673096
    5. 'if' → logprob: -3.1072494983673096
    6. ' if' → logprob: -3.7322494983673096
    7. '        ' → logprob: -4.2322492599487305
    8. '   ' → logprob: -4.2322492599487305
    9. ' :' → logprob: -4.4822492599487305
    10. '<|end|>' → logprob: -5.4822492599487305

Token 31: '_str' (ID: 6182)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.9209215641021729
    2. '+' → logprob: -1.7959215641021729
    3. ' ' → logprob: -1.7959215641021729
    4. ')' → logprob: -3.045921564102173
    5. '**' → logprob: -3.045921564102173
    6. '%' → logprob: -3.170921564102173
    7. ',' → logprob: -3.420921564102173
    8. '=' → logprob: -3.420921564102173
    9. ' *' → logprob: -4.045921325683594
    10. '-' → logprob: -4.170921325683594

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16033145785331726
    2. '=' → logprob: -1.9103314876556396
    3. ' +=' → logprob: -9.910331726074219
    4. '+=' → logprob: -10.910331726074219
    5. ' ' → logprob: -11.035331726074219
    6. '.append' → logprob: -11.410331726074219
    7. ')' → logprob: -13.285331726074219
    8. '.' → logprob: -13.410331726074219
    9. '+' → logprob: -13.660331726074219
    10. '_' → logprob: -13.785331726074219

Token 33: ' str' (ID: 989)
  Prédit: ' str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.43119996786117554
    2. 'str' → logprob: -1.0562000274658203
    3. '"' → logprob: -6.80620002746582
    4. ' f' → logprob: -7.43120002746582
    5. ''' → logprob: -8.18120002746582
    6. ' "' → logprob: -8.93120002746582
    7. ' ' → logprob: -9.05620002746582
    8. ' '' → logprob: -9.30620002746582
    9. '	str' → logprob: -9.80620002746582
    10. '(str' → logprob: -10.80620002746582

Token 34: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.001510335598140955
    2. '(' → logprob: -6.501510143280029
    3. '(i' → logprob: -12.251510620117188
    4. 'x' → logprob: -12.876510620117188
    5. '(
' → logprob: -15.251510620117188
    6. '((' → logprob: -16.126510620117188
    7. '(max' → logprob: -16.876510620117188
    8. '(int' → logprob: -17.251510620117188
    9. '(abs' → logprob: -17.376510620117188
    10. ' (' → logprob: -17.501510620117188

Token 35: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003910507541149855
    2. ')
' → logprob: -6.253910541534424
    3. '+' → logprob: -7.128910541534424
    4. ').' → logprob: -7.753910541534424
    5. ')+' → logprob: -8.003910064697266
    6. '       ' → logprob: -8.753910064697266
    7. '[::-' → logprob: -10.128910064697266
    8. ' +' → logprob: -10.128910064697266
    9. '))' → logprob: -10.253910064697266
    10. '   ' → logprob: -10.378910064697266

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013771584257483482
    2. '<|end|>' → logprob: -4.5137715339660645
    3. '<|end|>' → logprob: -7.6387715339660645
    4. ' ' → logprob: -8.013772010803223
    5. ',' → logprob: -8.388772010803223
    6. '   ' → logprob: -8.638772010803223
    7. '           ' → logprob: -8.638772010803223
    8. '        ' → logprob: -8.638772010803223
    9. 'if' → logprob: -8.638772010803223
    10. ')' → logprob: -8.888772010803223

Token 37: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47436273097991943
    2. ' if' → logprob: -1.9743627309799194
    3. 'if' (adapté à ' if') → logprob: -2.099362850189209
    4. ' for' → logprob: -2.849362850189209
    5. 'for' → logprob: -3.349362850189209
    6. '   ' → logprob: -4.349362850189209
    7. ' ' → logprob: -4.974362850189209
    8. '<|end|>' → logprob: -6.849362850189209
    9. '    ' → logprob: -7.724362850189209
    10. ',' → logprob: -8.22436237335205

Token 38: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.2367146015167236
    2. ' x' → logprob: -1.2367146015167236
    3. ' j' → logprob: -1.4867146015167236
    4. ' '' → logprob: -2.3617146015167236
    5. ' str' → logprob: -3.6117146015167236
    6. 'x' → logprob: -3.8617146015167236
    7. 'j' → logprob: -4.6117143630981445
    8. 'i' → logprob: -4.6117143630981445
    9. ''' → logprob: -4.8617143630981445
    10. ' f' → logprob: -5.3617143630981445

Token 39: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.6955245733261108
    2. '%' → logprob: -0.9455245733261108
    3. '_' → logprob: -4.0705246925354
    4. '.startswith' → logprob: -4.0705246925354
    5. '>' → logprob: -4.3205246925354
    6. ' %' → logprob: -4.4455246925354
    7. '==' → logprob: -4.4455246925354
    8. '>=' → logprob: -4.6955246925354
    9. 'str' → logprob: -5.1955246925354
    10. '[' → logprob: -5.4455246925354

Token 40: '[' (ID: 58)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1874605417251587
    2. '.startswith' → logprob: -1.1874605417251587
    3. '.count' → logprob: -1.9374605417251587
    4. '[i' → logprob: -2.812460422515869
    5. '.find' → logprob: -2.937460422515869
    6. ' in' → logprob: -3.437460422515869
    7. '[' → logprob: -3.437460422515869
    8. 'in' → logprob: -3.687460422515869
    9. '[j' → logprob: -3.812460422515869
    10. '.endswith' → logprob: -4.812460422515869

Token 41: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.23649591207504272
    2. 'j' → logprob: -1.6114959716796875
    3. '0' → logprob: -4.6114959716796875
    4. 'x' → logprob: -7.3614959716796875
    5. ' i' → logprob: -9.111495971679688
    6. '-i' → logprob: -9.736495971679688
    7. ']' → logprob: -10.111495971679688
    8. '1' → logprob: -10.236495971679688
    9. '-' → logprob: -10.486495971679688
    10. ':j' → logprob: -10.736495971679688

Token 42: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.18516041338443756
    2. ']==' → logprob: -1.9351603984832764
    3. '==' → logprob: -4.3101606369018555
    4. ':' → logprob: -5.3101606369018555
    5. ' ]' → logprob: -6.3101606369018555
    6. '=' → logprob: -6.5601606369018555
    7. ' ==' → logprob: -7.5601606369018555
    8. ']!=' → logprob: -7.6851606369018555
    9. ')' → logprob: -7.9351606369018555
    10. ':j' → logprob: -8.310160636901855

Token 43: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10316389054059982
    2. ' ==' → logprob: -2.603163957595825
    3. '=' → logprob: -3.853163957595825
    4. '!=' → logprob: -6.353163719177246
    5. '>' → logprob: -8.228163719177246
    6. '<' → logprob: -8.728163719177246
    7. '<=' → logprob: -8.978163719177246
    8. ' !=' → logprob: -9.228163719177246
    9. ' =' → logprob: -9.478163719177246
    10. '[' → logprob: -9.853163719177246

Token 44: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.39532095193862915
    2. 'i' → logprob: -2.1453208923339844
    3. 'j' → logprob: -2.2703208923339844
    4. ''i' → logprob: -2.8953208923339844
    5. ''' → logprob: -3.6453208923339844
    6. 'x' → logprob: -4.520320892333984
    7. ' str' → logprob: -5.145320892333984
    8. ' i' → logprob: -6.270320892333984
    9. ''s' → logprob: -6.395320892333984
    10. ''x' → logprob: -6.520320892333984

Token 45: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.014711511321365833
    2. '(j' → logprob: -4.264711380004883
    3. '(' → logprob: -7.639711380004883
    4. 'i' → logprob: -10.264711380004883
    5. 'j' → logprob: -10.639711380004883
    6. '(x' → logprob: -12.514711380004883
    7. '(s' → logprob: -13.264711380004883
    8. ')' → logprob: -13.889711380004883
    9. '(n' → logprob: -15.139711380004883
    10. '(a' → logprob: -15.514711380004883

Token 46: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005675171967595816
    2. '):' → logprob: -5.255675315856934
    3. ' )' → logprob: -8.380675315856934
    4. ' and' → logprob: -8.880675315856934
    5. 'and' → logprob: -10.505675315856934
    6. 'j' → logprob: -11.880675315856934
    7. '')' → logprob: -12.130675315856934
    8. '):
' → logprob: -12.255675315856934
    9. ':' → logprob: -12.630675315856934
    10. '0' → logprob: -12.755675315856934

Token 47: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.08637770265340805
    2. 'and' → logprob: -2.5863776206970215
    3. ' or' → logprob: -5.0863776206970215
    4. ':' → logprob: -7.2113776206970215
    5. ' ' → logprob: -8.58637809753418
    6. ')' → logprob: -8.96137809753418
    7. 'or' → logprob: -9.33637809753418
    8. '0' → logprob: -10.08637809753418
    9. '           ' → logprob: -11.08637809753418
    10. '   ' → logprob: -11.33637809753418

Token 48: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.016182873398065567
    2. 'x' → logprob: -4.141182899475098
    3. ' ' → logprob: -9.641182899475098
    4. ' ' → logprob: -10.016182899475098
    5. '    ' → logprob: -11.391182899475098
    6. ' str' → logprob: -11.766182899475098
    7. ' len' → logprob: -12.266182899475098
    8. ' j' → logprob: -12.641182899475098
    9. '	x' → logprob: -13.016182899475098
    10. 'j' → logprob: -13.516182899475098

Token 49: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -9.591415437171236e-05
    2. 'str' → logprob: -9.625096321105957
    3. '_' → logprob: -11.250096321105957
    4. '_s' → logprob: -13.125096321105957
    5. ')' → logprob: -13.375096321105957
    6. '...' → logprob: -13.625096321105957
    7. '[' → logprob: -14.000096321105957
    8. 'f' → logprob: -14.000096321105957
    9. 's' → logprob: -14.125096321105957
    10. '<|end|>' → logprob: -14.250096321105957

Token 50: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.046082865446805954
    2. '[' → logprob: -3.2960829734802246
    3. '.endswith' → logprob: -5.171082973480225
    4. '[j' → logprob: -7.046082973480225
    5. '.count' → logprob: -8.046082496643066
    6. '_str' → logprob: -8.796082496643066
    7. '[len' → logprob: -8.796082496643066
    8. '==' → logprob: -8.796082496643066
    9. '1' → logprob: -9.421082496643066
    10. ' ' → logprob: -9.796082496643066

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001515696058049798
    2. 'j' → logprob: -6.501515865325928
    3. ']' → logprob: -12.00151538848877
    4. ' ' → logprob: -13.12651538848877
    5. 'str' → logprob: -13.62651538848877
    6. '2' → logprob: -14.12651538848877
    7. ')' → logprob: -14.37651538848877
    8. '   ' → logprob: -14.37651538848877
    9. ' j' → logprob: -15.00151538848877
    10. '  ' → logprob: -15.00151538848877

Token 52: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007962428033351898
    2. ']==' → logprob: -5.132962226867676
    3. '==' → logprob: -6.882962226867676
    4. ')' → logprob: -7.507962226867676
    5. ' ==' → logprob: -8.007962226867676
    6. ' ]' → logprob: -9.632962226867676
    7. '']' → logprob: -10.757962226867676
    8. '=' → logprob: -11.882962226867676
    9. ' ' → logprob: -11.882962226867676
    10. ')]' → logprob: -12.507962226867676

Token 53: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03942546248435974
    2. ' ==' → logprob: -3.2894253730773926
    3. '=' → logprob: -6.664425373077393
    4. ']==' → logprob: -10.41442584991455
    5. ')' → logprob: -10.66442584991455
    6. ' ' → logprob: -10.91442584991455
    7. ')==' → logprob: -11.78942584991455
    8. '==
' → logprob: -12.03942584991455
    9. ' =' → logprob: -12.16442584991455
    10. '[' → logprob: -12.53942584991455

Token 54: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.061979226768016815
    2. ' str' → logprob: -2.811979293823242
    3. 's' → logprob: -12.686979293823242
    4. '	str' → logprob: -12.686979293823242
    5. 'j' → logprob: -13.311979293823242
    6. '(str' → logprob: -13.436979293823242
    7. '=str' → logprob: -14.186979293823242
    8. ' ' → logprob: -14.436979293823242
    9. ''' → logprob: -14.561979293823242
    10. ' ' → logprob: -15.686979293823242

Token 55: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.00025561772054061294
    2. '(' → logprob: -8.625255584716797
    3. 'j' → logprob: -9.500255584716797
    4. '(
' → logprob: -15.000255584716797
    5. ' (' → logprob: -15.375255584716797
    6. '(x' → logprob: -15.875255584716797
    7. '	j' → logprob: -16.250255584716797
    8. '((' → logprob: -16.625255584716797
    9. '(i' → logprob: -16.750255584716797
    10. '   ' → logprob: -16.875255584716797

Token 56: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017439620569348335
    2. ')' → logprob: -6.501743793487549
    3. ':' → logprob: -8.376744270324707
    4. '):
' → logprob: -12.126744270324707
    5. ' ):' → logprob: -12.501744270324707
    6. ''):' → logprob: -13.876744270324707
    7. ')):' → logprob: -14.376744270324707
    8. '):

' → logprob: -16.00174331665039
    9. ')：' → logprob: -16.37674331665039
    10. '):
' → logprob: -16.62674331665039

Token 57: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12992393970489502
    2. '           ' → logprob: -2.1299238204956055
    3. ':
' → logprob: -5.8799238204956055
    4. '):' → logprob: -9.379923820495605
    5. ' :' → logprob: -9.879923820495605
    6. '       ' → logprob: -10.754923820495605
    7. ',' → logprob: -11.379923820495605
    8. '               ' → logprob: -12.004923820495605
    9. '            
' → logprob: -12.129923820495605
    10. '):
' → logprob: -12.879923820495605

Token 58: ' result' (ID: 1534)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.46556803584098816
    2. 'result' (adapté à ' result') → logprob: -1.4655680656433105
    3. ' result' → logprob: -2.2155680656433105
    4. '       ' → logprob: -3.9655680656433105
    5. '               ' → logprob: -4.3405680656433105
    6. '```' → logprob: -9.840567588806152
    7. '
' → logprob: -10.090567588806152
    8. '   ' → logprob: -10.590567588806152
    9. ' ' → logprob: -11.090567588806152
    10. ',result' → logprob: -11.590567588806152

Token 59: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014180435799062252
    2. '.' → logprob: -4.264180660247803
    3. ' .' → logprob: -12.139180183410645
    4. '.Append' → logprob: -12.514180183410645
    5. '.app' → logprob: -12.639180183410645
    6. '.add' → logprob: -12.889180183410645
    7. '.ap' → logprob: -13.889180183410645
    8. '.push' → logprob: -15.014180183410645
    9. '.extend' → logprob: -15.014180183410645
    10. '.py' → logprob: -15.639180183410645

Token 60: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.001503313542343676
    2. '(' → logprob: -6.5015034675598145
    3. '(
' → logprob: -13.876502990722656
    4. 'x' → logprob: -17.126502990722656
    5. '(i' → logprob: -17.126502990722656
    6. ' (' → logprob: -17.876502990722656
    7. '(

' → logprob: -20.126502990722656
    8. '(
' → logprob: -20.251502990722656
    9. '(int' → logprob: -20.501502990722656
    10. '()' → logprob: -20.751502990722656

Token 61: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.1782583391759545e-05
    2. ')
' → logprob: -10.625031471252441
    3. '       ' → logprob: -12.500031471252441
    4. '))' → logprob: -13.625031471252441
    5. '   ' → logprob: -14.250031471252441
    6. ' )' → logprob: -14.500031471252441
    7. '`)' → logprob: -15.500031471252441
    8. ')

' → logprob: -15.625031471252441
    9. ')return' → logprob: -15.875031471252441
    10. '*)' → logprob: -16.000032424926758

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00736950384452939
    2. 'return' → logprob: -5.507369518280029
    3. '
' → logprob: -6.632369518280029
    4. ' return' → logprob: -6.882369518280029
    5. '    
' → logprob: -7.132369518280029
    6. '  
' → logprob: -10.132369041442871
    7. '<|end|>' → logprob: -10.382369041442871
    8. '	return' → logprob: -10.632369041442871
    9. ' ' → logprob: -11.507369041442871
    10. '   
' → logprob: -11.882369041442871

Token 63: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.550060510635376
    2. 'return' (adapté à ' return') → logprob: -1.175060510635376
    3. ' return' → logprob: -2.175060510635376
    4. ' ' → logprob: -8.050060272216797
    5. '    
' → logprob: -8.925060272216797
    6. '
' → logprob: -9.175060272216797
    7. '	return' → logprob: -10.425060272216797
    8. '```' → logprob: -10.425060272216797
    9. ' 
' → logprob: -10.925060272216797
    10. ':return' → logprob: -11.175060272216797

Token 64: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.07889419049024582
    2. 'result' → logprob: -2.5788941383361816
    3. ' ' → logprob: -12.45389461517334
    4. '[result' → logprob: -15.32889461517334
    5. ' ' → logprob: -15.95389461517334
    6. '(result' → logprob: -16.578893661499023
    7. '	result' → logprob: -17.328893661499023
    8. ' sorted' → logprob: -17.453893661499023
    9. 'sorted' → logprob: -18.828893661499023
    10. '  ' → logprob: -19.328893661499023

Token 65: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: 'total' (ID: 9577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8580639958381653
    2. 'print' → logprob: -1.2330639362335205
    3. 'i' → logprob: -1.7330639362335205
    4. 'n' → logprob: -2.9830639362335205
    5. '[' → logprob: -4.2330641746521
    6. '#' → logprob: -4.4830641746521
    7. 'a' → logprob: -4.8580641746521
    8. 'x' → logprob: -5.1080641746521
    9. 'p' → logprob: -5.6080641746521
    10. 'result' → logprob: -6.1080641746521

Token 67: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.025754287838935852
    2. ' =' → logprob: -4.525754451751709
    3. '_sum' → logprob: -4.525754451751709
    4. '_count' → logprob: -6.400754451751709
    5. '=' → logprob: -7.025754451751709
    6. 's' → logprob: -7.275754451751709
    7. '_s' → logprob: -8.90075397491455
    8. '_counts' → logprob: -9.40075397491455
    9. 'sum' → logprob: -9.52575397491455
    10. '(' → logprob: -10.15075397491455

Token 68: ' ' (ID: 220)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6739555597305298
    2. '0' → logprob: -1.1739555597305298
    3. 'sum' → logprob: -2.2989554405212402
    4. 'len' → logprob: -3.2989554405212402
    5. 'func' → logprob: -3.9239554405212402
    6. ' []' → logprob: -4.54895544052124
    7. ' ' → logprob: -5.04895544052124
    8. ' sum' → logprob: -5.54895544052124
    9. ' func' → logprob: -6.92395544052124
    10. ' len' → logprob: -7.04895544052124

Token 69: '0' (ID: 15)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.48057031631469727
    2. '0' → logprob: -1.2305703163146973
    3. 'sum' → logprob: -2.4805703163146973
    4. 'len' → logprob: -5.730570316314697
    5. '[' → logprob: -6.855570316314697
    6. 'func' → logprob: -6.980570316314697
    7. '[len' → logprob: -9.105569839477539
    8. '[]
' → logprob: -9.480569839477539
    9. ' []' → logprob: -9.730569839477539
    10. '[]

' → logprob: -10.480569839477539

Token 70: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010149368084967136
    2. '
' → logprob: -4.6351494789123535
    3. ' for' → logprob: -8.010149002075195
    4. '<|end|>' → logprob: -10.135149002075195
    5. '

' → logprob: -11.135149002075195
    6. '
' → logprob: -12.885149002075195
    7. '' → logprob: -13.385149002075195
    8. '```' → logprob: -14.010149002075195
    9. '<|end|>' → logprob: -14.385149002075195
    10. ' 
' → logprob: -15.385149002075195

Token 71: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0037301299162209034
    2. '
' → logprob: -5.628730297088623
    3. ' for' → logprob: -9.003729820251465
    4. '<|end|>' → logprob: -12.253729820251465
    5. '

' → logprob: -14.003729820251465
    6. '```' → logprob: -14.378729820251465
    7. '
' → logprob: -15.253729820251465
    8. '' → logprob: -15.878729820251465
    9. '\' → logprob: -16.37873077392578
    10. '<|end|>' → logprob: -16.62873077392578

Token 72: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.044821012765169144
    2. 'i' → logprob: -3.16982102394104
    3. '_i' → logprob: -7.419820785522461
    4. '_' → logprob: -7.419820785522461
    5. ' ' → logprob: -8.294820785522461
    6. ' _' → logprob: -8.419820785522461
    7. '	i' → logprob: -9.419820785522461
    8. '```' → logprob: -11.482320785522461
    9. ' ' → logprob: -11.669820785522461
    10. ' a' → logprob: -11.669820785522461

Token 73: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014970499090850353
    2. 'in' → logprob: -4.264970302581787
    3. ' ' → logprob: -7.139970302581787
    4. '	in' → logprob: -12.264970779418945
    5. ' i' → logprob: -13.639970779418945
    6. '1' → logprob: -13.889970779418945
    7. '0' → logprob: -13.889970779418945
    8. '<|end|>' → logprob: -14.014970779418945
    9. ',' → logprob: -14.139970779418945
    10. 'range' → logprob: -14.264970779418945

Token 74: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.026311680674552917
    2. 'range' → logprob: -3.6513116359710693
    3. ' ' → logprob: -11.776311874389648
    4. '	range' → logprob: -13.901311874389648
    5. '  ' → logprob: -14.276311874389648
    6. '(range' → logprob: -14.526311874389648
    7. '   ' → logprob: -14.526311874389648
    8. '1' → logprob: -14.901311874389648
    9. ' ' → logprob: -16.15131187438965
    10. '0' → logprob: -16.15131187438965

Token 75: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003187459195032716
    2. '(N' → logprob: -5.753187656402588
    3. '(n' → logprob: -12.37818717956543
    4. ' (' → logprob: -12.75318717956543
    5. '(
' → logprob: -14.12818717956543
    6. '(len' → logprob: -14.87818717956543
    7. '(-' → logprob: -15.00318717956543
    8. '((' → logprob: -15.37818717956543
    9. '(s' → logprob: -15.37818717956543
    10. '(i' → logprob: -15.50318717956543

Token 76: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4375349283218384
    2. '10' → logprob: -1.3125349283218384
    3. '0' → logprob: -3.062534809112549
    4. 'N' → logprob: -3.312534809112549
    5. ' ' → logprob: -6.687534809112549
    6. '9' → logprob: -7.812534809112549
    7. '   ' → logprob: -9.437535285949707
    8. ')' → logprob: -9.687535285949707
    9. '(' → logprob: -9.812535285949707
    10. '11' → logprob: -10.062535285949707

Token 77: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004540294758044183
    2. ':' → logprob: -7.875453948974609
    3. '):
' → logprob: -10.25045394897461
    4. ' ):' → logprob: -10.75045394897461
    5. ')' → logprob: -11.50045394897461
    6. '+' → logprob: -12.87545394897461
    7. '():' → logprob: -13.87545394897461
    8. '0' → logprob: -14.00045394897461
    9. ',' → logprob: -14.37545394897461
    10. '1' → logprob: -14.75045394897461

Token 78: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5828006267547607
    2. '   ' → logprob: -1.4578006267547607
    3. '<|end|>' → logprob: -1.9578006267547607
    4. ' for' → logprob: -3.4578006267547607
    5. ' ' → logprob: -3.9578006267547607
    6. '<|end|>' → logprob: -4.95780086517334
    7. ''s' → logprob: -6.08280086517334
    8. 'for' → logprob: -6.33280086517334
    9. '    ' → logprob: -6.83280086517334
    10. ' :' → logprob: -7.20780086517334

Token 79: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12749651074409485
    2. '<|end|>' → logprob: -2.3774964809417725
    3. 'for' (adapté à ' for') → logprob: -3.8774964809417725
    4. ' ' → logprob: -5.752496719360352
    5. '   ' → logprob: -6.377496719360352
    6. '<|end|>' → logprob: -7.377496719360352
    7. '	for' → logprob: -7.502496719360352
    8. ' ' → logprob: -10.127496719360352
    9. '       ' → logprob: -10.752496719360352
    10. '    ' → logprob: -11.127496719360352

Token 80: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.023499125614762306
    2. 'j' → logprob: -3.773499011993408
    3. ' range' → logprob: -8.648499488830566
    4. 'range' → logprob: -9.898499488830566
    5. '   ' → logprob: -12.023499488830566
    6. '	j' → logprob: -12.148499488830566
    7. '10' → logprob: -12.148499488830566
    8. '    ' → logprob: -12.773499488830566
    9. ' ' → logprob: -12.898499488830566
    10. '7' → logprob: -13.523499488830566

Token 81: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004632807336747646
    2. 'in' → logprob: -5.379632949829102
    3. ' ' → logprob: -11.629632949829102
    4. 'range' → logprob: -13.129632949829102
    5. ' range' → logprob: -13.879632949829102
    6. '<|end|>' → logprob: -16.5046329498291
    7. '(' → logprob: -16.6296329498291
    8. '0' → logprob: -17.0046329498291
    9. ' i' → logprob: -17.1296329498291
    10. 'import' → logprob: -17.1296329498291

Token 82: ' range' (ID: 3352)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07464662194252014
    2. ' ' → logprob: -2.9496467113494873
    3. 'range' → logprob: -4.574646472930908
    4. ' range' → logprob: -4.699646472930908
    5. '0' → logprob: -9.449646949768066
    6. '(' → logprob: -10.074646949768066
    7. '1' → logprob: -10.699646949768066
    8. '9' → logprob: -11.824646949768066
    9. '   ' → logprob: -12.324646949768066
    10. '(range' → logprob: -12.574646949768066

Token 83: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8908587662735954e-05
    2. '10' → logprob: -11.000019073486328
    3. ' (' → logprob: -14.000019073486328
    4. '(
' → logprob: -14.250019073486328
    5. ' ' → logprob: -15.625019073486328
    6. '((' → logprob: -16.000019073486328
    7. '0' → logprob: -16.125019073486328
    8. ')' → logprob: -16.500019073486328
    9. '   ' → logprob: -17.000019073486328
    10. '(i' → logprob: -17.250019073486328

Token 84: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0004299540014471859
    2. '0' → logprob: -8.3754301071167
    3. ' ' → logprob: -8.8754301071167
    4. '   ' → logprob: -10.1254301071167
    5. '1' → logprob: -12.0004301071167
    6. 'i' → logprob: -12.0004301071167
    7. ')' → logprob: -13.1254301071167
    8. '  ' → logprob: -13.8754301071167
    9. '9' → logprob: -14.0004301071167
    10. '       ' → logprob: -15.0004301071167

Token 85: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023378364741802216
    2. ':' → logprob: -3.773378372192383
    3. ')' → logprob: -9.148378372192383
    4. '):
' → logprob: -11.148378372192383
    5. ' ):' → logprob: -11.773378372192383
    6. ':)' → logprob: -13.523378372192383
    7. '():' → logprob: -13.898378372192383
    8. '   ' → logprob: -14.773378372192383
    9. ' :' → logprob: -15.148378372192383
    10. ',' → logprob: -15.398378372192383

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047803640365600586
    2. ':' → logprob: -3.1728036403656006
    3. '   ' → logprob: -5.92280387878418
    4. '<|end|>' → logprob: -7.29780387878418
    5. ':
' → logprob: -8.42280387878418
    6. '        
' → logprob: -8.79780387878418
    7. '    ' → logprob: -9.17280387878418
    8. ',' → logprob: -9.42280387878418
    9. '```' → logprob: -9.42280387878418
    10. 'total' → logprob: -9.67280387878418

Token 87: ' count' (ID: 3605)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.0385427474975586
    2. ' total' → logprob: -1.6635427474975586
    3. '           ' → logprob: -1.7885427474975586
    4. ' if' → logprob: -2.0385427474975586
    5. 'if' → logprob: -3.0385427474975586
    6. ' ' → logprob: -3.5385427474975586
    7. '<|end|>' → logprob: -3.5385427474975586
    8. '       ' → logprob: -3.6635427474975586
    9. '        ' → logprob: -5.288542747497559
    10. '            ' → logprob: -6.038542747497559

Token 88: '1' (ID: 16)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1643291860818863
    2. ' +=' → logprob: -2.0393292903900146
    3. '=' → logprob: -4.4143290519714355
    4. ' ' → logprob: -5.9143290519714355
    5. '_' → logprob: -6.2893290519714355
    6. '+=' → logprob: -6.2893290519714355
    7. 's' → logprob: -6.4143290519714355
    8. '+' → logprob: -7.9143290519714355
    9. '  ' → logprob: -8.164329528808594
    10. ')' → logprob: -8.164329528808594

Token 89: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.045738011598587036
    2. '=' → logprob: -3.1707379817962646
    3. ' +=' → logprob: -6.170738220214844
    4. ' ' → logprob: -7.920738220214844
    5. 's' → logprob: -8.920738220214844
    6. '+=' → logprob: -9.420738220214844
    7. '_' → logprob: -11.045738220214844
    8. ')' → logprob: -11.670738220214844
    9. '+' → logprob: -11.920738220214844
    10. ',' → logprob: -12.045738220214844

Token 90: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5851165056228638
    2. ' len' → logprob: -0.8351165056228638
    3. ' func' → logprob: -5.210116386413574
    4. 'func' → logprob: -5.710116386413574
    5. '(len' → logprob: -9.210116386413574
    6. ' sum' → logprob: -9.710116386413574
    7. 'sum' → logprob: -10.085116386413574
    8. '	len' → logprob: -10.210116386413574
    9. '[len' → logprob: -10.710116386413574
    10. '0' → logprob: -10.710116386413574

Token 91: '(func' (ID: 40416)
  Prédit: '(func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(func' → logprob: -0.00043102685594931245
    2. '(' → logprob: -7.750431060791016
    3. 'func' → logprob: -15.625431060791016
    4. '(function' → logprob: -16.375431060791016
    5. '(Func' → logprob: -16.750431060791016
    6. '(fun' → logprob: -17.375431060791016
    7. '(
' → logprob: -17.500431060791016
    8. ' (' → logprob: -17.875431060791016
    9. ' func' → logprob: -18.625431060791016
    10. '	func' → logprob: -18.875431060791016

Token 92: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0002670575922820717
    2. '(' → logprob: -8.250267028808594
    3. ')' → logprob: -12.375267028808594
    4. ')(' → logprob: -14.000267028808594
    5. '(I' → logprob: -14.625267028808594
    6. '(
' → logprob: -16.000267028808594
    7. ' (' → logprob: -16.250267028808594
    8. '(j' → logprob: -16.625267028808594
    9. '(ii' → logprob: -17.500267028808594
    10. ')i' → logprob: -18.250267028808594

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018522491678595543
    2. ',j' → logprob: -4.018522262573242
    3. ' ,' → logprob: -8.018522262573242
    4. '<|end|>' → logprob: -11.143522262573242
    5. ' ' → logprob: -11.643522262573242
    6. ',
' → logprob: -11.768522262573242
    7. '‌,' → logprob: -13.268522262573242
    8. '(' → logprob: -13.393522262573242
    9. ')' → logprob: -13.518522262573242
    10. 'j' → logprob: -13.643522262573242

Token 94: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2519531846046448
    2. ' j' → logprob: -1.501953125
    3. ' ' → logprob: -11.126953125
    4. '	j' → logprob: -12.626953125
    5. '   ' → logprob: -13.501953125
    6. ')' → logprob: -13.751953125
    7. '<|end|>' → logprob: -14.001953125
    8. ' ' → logprob: -14.376953125
    9. '    ' → logprob: -14.876953125
    10. '0' → logprob: -15.126953125

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011509364703670144
    2. ',N' → logprob: -7.001151084899902
    3. ' ,' → logprob: -8.626151084899902
    4. '```' → logprob: -10.751151084899902
    5. 'N' → logprob: -11.501151084899902
    6. '),' → logprob: -11.876151084899902
    7. '   ' → logprob: -12.501151084899902
    8. '`,' → logprob: -12.751151084899902
    9. '，' → logprob: -13.001151084899902
    10. '‌,' → logprob: -13.626151084899902

Token 96: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.6326822638511658
    2. ' N' → logprob: -0.7576822638511658
    3. ' ' → logprob: -9.882681846618652
    4. '	N' → logprob: -10.757681846618652
    5. ' ' → logprob: -12.382681846618652
    6. ')' → logprob: -13.507681846618652
    7. '   ' → logprob: -13.632681846618652
    8. '  ' → logprob: -13.882681846618652
    9. '(N' → logprob: -14.007681846618652
    10. '    ' → logprob: -14.882681846618652

Token 97: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.013087058439850807
    2. ')' → logprob: -4.513087272644043
    3. '))
' → logprob: -6.263087272644043
    4. ')))' → logprob: -10.138087272644043
    5. '       ' → logprob: -10.763087272644043
    6. ' ' → logprob: -10.763087272644043
    7. ' ))' → logprob: -11.263087272644043
    8. '))
' → logprob: -11.638087272644043
    9. '))

' → logprob: -11.763087272644043
    10. '   ' → logprob: -11.888087272644043

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1987657994031906
    2. 'count' → logprob: -2.323765754699707
    3. 'if' → logprob: -3.323765754699707
    4. ' if' → logprob: -3.823765754699707
    5. '        
' → logprob: -4.823765754699707
    6. 'total' → logprob: -5.323765754699707
    7. '
' → logprob: -6.073765754699707
    8. '<|end|>' → logprob: -6.073765754699707
    9. '        ' → logprob: -6.198765754699707
    10. ' count' → logprob: -6.323765754699707

Token 99: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5846607089042664
    2. 'count' (adapté à ' count') → logprob: -0.9596607089042664
    3. ' count' → logprob: -2.959660768508911
    4. 'if' → logprob: -6.084660530090332
    5. ' if' → logprob: -6.459660530090332
    6. '	count' → logprob: -6.709660530090332
    7. '   ' → logprob: -7.459660530090332
    8. 'total' → logprob: -7.834660530090332
    9. '           ' → logprob: -8.209660530090332
    10. ' for' → logprob: -8.459660530090332

Token 100: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005268976557999849
    2. ' =' → logprob: -6.1302690505981445
    3. '1' → logprob: -6.2552690505981445
    4. '=' → logprob: -7.3802690505981445
    5. '_' → logprob: -8.630269050598145
    6. '0' → logprob: -8.755269050598145
    7. ' ' → logprob: -8.755269050598145
    8. '```' → logprob: -11.005269050598145
    9. ' +=' → logprob: -11.755269050598145
    10. '+=' → logprob: -12.505269050598145

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002805940806865692
    2. '=' → logprob: -5.877805709838867
    3. ' ' → logprob: -14.377805709838867
    4. ' +=' → logprob: -15.127805709838867
    5. ' ' → logprob: -16.127805709838867
    6. '＝' → logprob: -17.627805709838867
    7. '=count' → logprob: -17.627805709838867
    8. ' =)' → logprob: -18.252805709838867
    9. '=len' → logprob: -18.377805709838867
    10. '+=' → logprob: -18.440305709838867

Token 102: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.515639066696167
    2. ' len' → logprob: -1.015639066696167
    3. 'func' → logprob: -4.140639305114746
    4. ' func' → logprob: -4.390639305114746
    5. 'count' → logprob: -5.265639305114746
    6. ' count' → logprob: -6.140639305114746
    7. ' i' → logprob: -7.265639305114746
    8. ' min' → logprob: -7.390639305114746
    9. ' ' → logprob: -7.640639305114746
    10. '(len' → logprob: -7.890639305114746

Token 103: '(func' (ID: 40416)
  Prédit: '(func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(func' → logprob: -2.641841820150148e-05
    2. '(' → logprob: -10.62502670288086
    3. '(fun' → logprob: -14.62502670288086
    4. 'func' → logprob: -14.75002670288086
    5. ' func' → logprob: -15.00002670288086
    6. ' (' → logprob: -15.12502670288086
    7. '([' → logprob: -15.75002670288086
    8. '	func' → logprob: -16.12502670288086
    9. '(f' → logprob: -16.25002670288086
    10. '(Func' → logprob: -16.75002670288086

Token 104: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.000628683075774461
    2. '(' → logprob: -7.750628471374512
    3. '(i' → logprob: -9.375628471374512
    4. ' (' → logprob: -10.250628471374512
    5. '((' → logprob: -10.250628471374512
    6. '(N' → logprob: -10.625628471374512
    7. ')' → logprob: -12.375628471374512
    8. '(
' → logprob: -12.625628471374512
    9. '(n' → logprob: -13.000628471374512
    10. 'j' → logprob: -13.000628471374512

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037144700763747096
    2. ' ,' → logprob: -8.375370979309082
    3. ',i' → logprob: -8.875370979309082
    4. ' i' → logprob: -14.500370979309082
    5. 'i' → logprob: -15.375370979309082
    6. ' ' → logprob: -15.500370979309082
    7. '   ' → logprob: -15.625370979309082
    8. '‌,' → logprob: -17.5003719329834
    9. ',
' → logprob: -18.3753719329834
    10. '  ' → logprob: -18.5003719329834

Token 106: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029773171991109848
    2. ' i' → logprob: -3.529773235321045
    3. ' ' → logprob: -10.904772758483887
    4. '   ' → logprob: -13.779772758483887
    5. ',' → logprob: -14.279772758483887
    6. '	i' → logprob: -14.529772758483887
    7. 'k' → logprob: -14.779772758483887
    8. ',i' → logprob: -14.904772758483887
    9. 'j' → logprob: -15.154772758483887
    10. '  ' → logprob: -15.904772758483887

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002459841314703226
    2. ' ,' → logprob: -6.12746000289917
    3. ',N' → logprob: -8.627459526062012
    4. 'N' → logprob: -9.377459526062012
    5. ' N' → logprob: -13.002459526062012
    6. '   ' → logprob: -13.002459526062012
    7. ' ' → logprob: -13.002459526062012
    8. ')' → logprob: -13.877459526062012
    9. '```' → logprob: -14.002459526062012
    10. '),' → logprob: -14.502459526062012

Token 108: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004621780011802912
    2. ' N' → logprob: -5.379621982574463
    3. ' ' → logprob: -13.879621505737305
    4. '   ' → logprob: -15.129621505737305
    5. ')' → logprob: -15.879621505737305
    6. '	N' → logprob: -15.879621505737305
    7. '  ' → logprob: -16.754621505737305
    8. ',' → logprob: -17.254621505737305
    9. '(N' → logprob: -17.629621505737305
    10. ' ' → logprob: -18.254621505737305

Token 109: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5768745541572571
    2. '))
' → logprob: -0.8268745541572571
    3. '       ' → logprob: -7.576874732971191
    4. ')' → logprob: -8.076874732971191
    5. ')
' → logprob: -9.701874732971191
    6. '))
' → logprob: -10.951874732971191
    7. '))

' → logprob: -11.076874732971191
    8. '   ' → logprob: -12.201874732971191
    9. ' ))
' → logprob: -12.326874732971191
    10. ' ))' → logprob: -12.826874732971191

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3259068727493286
    2. '<|end|>' → logprob: -1.5759068727493286
    3. '
' → logprob: -2.825906753540039
    4. '        
' → logprob: -4.700906753540039
    5. 'total' → logprob: -7.200906753540039
    6. '  
' → logprob: -7.325906753540039
    7. '<|end|>' → logprob: -7.325906753540039
    8. ' 
' → logprob: -8.825906753540039
    9. ')' → logprob: -8.825906753540039
    10. '```' → logprob: -9.700906753540039

Token 111: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.04633293300867081
    2. 'if' → logprob: -3.546332836151123
    3. '       ' → logprob: -4.546332836151123
    4. ' total' → logprob: -5.296332836151123
    5. ' if' → logprob: -7.171332836151123
    6. '   ' → logprob: -10.671333312988281
    7. '
' → logprob: -10.796333312988281
    8. '	total' → logprob: -11.546333312988281
    9. '           ' → logprob: -12.921333312988281
    10. '        
' → logprob: -13.796333312988281

Token 112: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.007617506198585033
    2. '+=' → logprob: -4.882617473602295
    3. '+' → logprob: -11.882617950439453
    4. ' +' → logprob: -14.007617950439453
    5. ' =' → logprob: -14.382617950439453
    6. ']+=' → logprob: -14.507617950439453
    7. '   ' → logprob: -14.757617950439453
    8. '	' → logprob: -14.882617950439453
    9. '+=(' → logprob: -15.007617950439453
    10. ' ' → logprob: -15.632617950439453

Token 113: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.264038622379303
    2. 'min' → logprob: -1.6390385627746582
    3. ' min' → logprob: -3.889038562774658
    4. ' count' → logprob: -4.514038562774658
    5. 'max' → logprob: -5.139038562774658
    6. ' max' → logprob: -8.264039039611816
    7. ' ' → logprob: -9.514039039611816
    8. '(min' → logprob: -10.451539039611816
    9. 'co' → logprob: -10.514039039611816
    10. 'abs' → logprob: -10.701539039611816

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9146995327901095e-05
    2. '2' → logprob: -11.000019073486328
    3. ' ' → logprob: -13.875019073486328
    4. 's' → logprob: -15.000019073486328
    5. '```' → logprob: -15.250019073486328
    6. 'x' → logprob: -16.500019073486328
    7. '１' → logprob: -16.625019073486328
    8. '   ' → logprob: -16.625019073486328
    9. '_' → logprob: -16.687519073486328
    10. '[' → logprob: -16.750019073486328

Token 115: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 116: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.005234594456851482
    2. ' count' → logprob: -5.255234718322754
    3. '	count' → logprob: -15.255234718322754
    4. '   ' → logprob: -15.630234718322754
    5. ' ' → logprob: -15.755234718322754
    6. '       ' → logprob: -15.880234718322754
    7. '(count' → logprob: -17.380233764648438
    8. '<count' → logprob: -17.505233764648438
    9. '$count' → logprob: -17.880233764648438
    10. '  ' → logprob: -18.130233764648438

Token 117: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.173704271830502e-06
    2. '1' → logprob: -13.50000286102295
    3. ' ' → logprob: -13.62500286102295
    4. '<|end|>' → logprob: -16.250003814697266
    5. '   ' → logprob: -16.625003814697266
    6. '２' → logprob: -16.812503814697266
    7. '```' → logprob: -16.812503814697266
    8. '۲' → logprob: -17.000003814697266
    9. '₂' → logprob: -17.125003814697266
    10. ')' → logprob: -17.875003814697266

Token 118: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015181921189650893
    2. '
' → logprob: -6.501518249511719
    3. ' print' → logprob: -12.001518249511719
    4. ' 
' → logprob: -13.001518249511719
    5. '
' → logprob: -13.001518249511719
    6. '  
' → logprob: -13.126518249511719
    7. '

' → logprob: -13.251518249511719
    8. '    
' → logprob: -14.251518249511719
    9. '        
' → logprob: -15.251518249511719
    10. ')
' → logprob: -15.751518249511719

Token 119: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.5027299822540954e-05
    2. '
' → logprob: -10.250055313110352
    3. ' print' → logprob: -10.875055313110352
    4. ' 
' → logprob: -15.125055313110352
    5. ')
' → logprob: -16.00005531311035
    6. '  
' → logprob: -16.25005531311035
    7. '
' → logprob: -16.62505531311035
    8. ')' → logprob: -16.75005531311035
    9. '(print' → logprob: -17.12505531311035
    10. '```' → logprob: -17.62505531311035

Token 120: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5759528279304504
    2. '(total' → logprob: -0.8259528279304504
    3. ' (' → logprob: -12.075952529907227
    4. '('' → logprob: -13.075952529907227
    5. '(
' → logprob: -13.075952529907227
    6. '(f' → logprob: -13.825952529907227
    7. '((' → logprob: -14.200952529907227
    8. '("("' → logprob: -14.575952529907227
    9. 'total' → logprob: -14.700952529907227
    10. '()' → logprob: -15.450952529907227

Token 121: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -13.875000953674316
    3. ')
' → logprob: -15.500000953674316
    4. '))' → logprob: -15.875000953674316
    5. ')`' → logprob: -17.000001907348633
    6. '`)' → logprob: -18.500001907348633
    7. '+' → logprob: -18.625001907348633
    8. ')#' → logprob: -18.750001907348633
    9. '#' → logprob: -19.000001907348633
    10. '')' → logprob: -19.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 119
Tokens correctement prédits (1ère position, stricte): 55
Tokens correctement prédits (1ère position, avec adaptation): 57
Tokens correctement prédits (top 10): 104
Précision stricte (1ère position): 46.22%
Précision adaptée (1ère position): 47.90%
Précision (top 10): 87.39%
================================================================================
