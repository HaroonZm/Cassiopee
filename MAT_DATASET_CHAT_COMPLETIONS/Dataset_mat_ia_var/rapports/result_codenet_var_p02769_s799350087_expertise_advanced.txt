================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
from functools import reduce
from collections import deque
import sys

sys.setrecursionlimit(10**7)

from typing import Iterator

def get_nums_l() -> list[int]:
    return list(map(int, input().split()))

def get_nums_n(n: int) -> list[int]:
    return [int(input()) for _ in range(n)]

def get_all_int() -> Iterator[int]:
    return map(int, sys.stdin.read().split())

def log(*args) -> None:
    print("DEBUG:", *args, file=sys.stderr)

MOD = 10**9 + 7
_MAX = 400020

kaijo = [1]
for i in range(1, _MAX):
    kaijo.append(kaijo[-1] * i % MOD)

inv_kaijo = [1] * _MAX
inv_kaijo[-1] = pow(kaijo[-1], MOD-2, MOD)
for i in range(_MAX - 2, -1, -1):
    inv_kaijo[i] = inv_kaijo[i+1] * (i+1) % MOD

def inv(x: int) -> int:
    return pow(x, MOD-2, MOD)

def nPk(n: int, k: int) -> int:
    if 0 <= k <= n:
        return kaijo[n] * inv_kaijo[n - k] % MOD
    return 0

def nCk(n: int, k: int) -> int:
    if 0 <= k <= n:
        return kaijo[n] * inv_kaijo[k] % MOD * inv_kaijo[n - k] % MOD
    return 0

n, k = get_nums_l()

if k >= n - 1:
    print(nCk(n + n - 1, n) % MOD)
    sys.exit()

ans = sum(
    nCk(n, z) * nCk(n - 1, z) % MOD
    for z in range(1, k + 1)
)
ans = (ans + 1) % MOD

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0005792465526610613
    2. '```' → logprob: -8.750578880310059
    3. '\n' → logprob: -9.000578880310059
    4. '<|end|>' → logprob: -9.625578880310059
    5. '\' → logprob: -9.750578880310059
    6. 'import' → logprob: -10.250578880310059
    7. '.pi' → logprob: -10.625578880310059
    8. '.e' → logprob: -10.875578880310059
    9. 'def' → logprob: -11.375578880310059
    10. '.

' → logprob: -11.625578880310059

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.5645936727523804
    2. ' math' → logprob: -1.4395936727523804
    3. ' sys' → logprob: -3.06459379196167
    4. ' collections' → logprob: -3.18959379196167
    5. ' numpy' → logprob: -3.68959379196167
    6. ' statistics' → logprob: -3.93959379196167
    7. ' random' → logprob: -4.43959379196167
    8. 'os' → logprob: -4.43959379196167
    9. 'math' → logprob: -4.43959379196167
    10. 'cmath' → logprob: -5.31459379196167

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.31759995222091675
    2. 'import' → logprob: -1.3176000118255615
    3. '.' → logprob: -5.567599773406982
    4. '_import' → logprob: -8.19260025024414
    5. '```' → logprob: -9.69260025024414
    6. '.import' → logprob: -9.81760025024414
    7. '	import' → logprob: -10.06760025024414
    8. '_' → logprob: -10.69260025024414
    9. ' .' → logprob: -10.81760025024414
    10. ' ' → logprob: -11.06760025024414

Token 6: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -1.0314419269561768
    2. 'l' → logprob: -1.5314419269561768
    3. 'reduce' → logprob: -1.6564419269561768
    4. ' l' → logprob: -2.4064419269561768
    5. 'partial' → logprob: -2.4064419269561768
    6. ' wraps' → logprob: -3.0314419269561768
    7. ' reduce' → logprob: -5.906441688537598
    8. ' partial' → logprob: -6.031441688537598
    9. 'cache' → logprob: -6.906441688537598
    10. 'import' → logprob: -7.281441688537598

Token 7: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18124592304229736
    2. ',' → logprob: -2.306245803833008
    3. 'import' → logprob: -3.681245803833008
    4. '\' → logprob: -4.556245803833008
    5. '(
' → logprob: -4.681245803833008
    6. 'def' → logprob: -4.931245803833008
    7. '.' → logprob: -5.681245803833008
    8. '```' → logprob: -6.056245803833008
    9. '\n' → logprob: -6.306245803833008
    10. ' 

' → logprob: -6.931245803833008

Token 8: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33436912298202515
    2. '(' → logprob: -2.33436918258667
    3. 'import' → logprob: -2.33436918258667
    4. ',' → logprob: -2.58436918258667
    5. '(
' → logprob: -5.20936918258667
    6. '\' → logprob: -6.45936918258667
    7. 'a' → logprob: -6.83436918258667
    8. ')' → logprob: -7.08436918258667
    9. '.' → logprob: -7.33436918258667
    10. '\n' → logprob: -7.83436918258667

Token 9: ' collections' (ID: 22690)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.1073981449007988
    2. 'operator' → logprob: -2.60739803314209
    3. ' itertools' → logprob: -3.60739803314209
    4. ' ' → logprob: -7.85739803314209
    5. ' collections' → logprob: -8.35739803314209
    6. ' math' → logprob: -8.48239803314209
    7. 'collections' → logprob: -10.10739803314209
    8. ' os' → logprob: -10.35739803314209
    9. 'it' → logprob: -10.73239803314209
    10. 'math' → logprob: -11.10739803314209

Token 10: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.814558207988739
    2. 'import' → logprob: -0.814558207988739
    3. ' import' → logprob: -2.189558267593384
    4. '.import' → logprob: -6.689558029174805
    5. '.Counter' → logprob: -8.314558029174805
    6. ' .' → logprob: -8.564558029174805
    7. '<|end|>' → logprob: -8.689558029174805
    8. '```' → logprob: -8.814558029174805
    9. ' ' → logprob: -9.564558029174805
    10. 'abc' → logprob: -9.689558029174805

Token 11: ' deque' (ID: 90347)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.9057498574256897
    2. ' abc' → logprob: -1.030749797821045
    3. ' defaultdict' → logprob: -1.905749797821045
    4. 'deque' → logprob: -2.655749797821045
    5. ' deque' → logprob: -4.155749797821045
    6. 'named' → logprob: -6.655749797821045
    7. ' named' → logprob: -6.780749797821045
    8. ' Counter' → logprob: -7.155749797821045
    9. 'Counter' → logprob: -7.655749797821045
    10. 'default' → logprob: -7.905749797821045

Token 12: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9217391014099121
    2. 'import' → logprob: -1.546739101409912
    3. '\n' → logprob: -2.046739101409912
    4. '```' → logprob: -2.421739101409912
    5. '\' → logprob: -2.921739101409912
    6. ',' → logprob: -3.546739101409912
    7. '

' → logprob: -3.796739101409912
    8. '
' → logprob: -3.796739101409912
    9. '#' → logprob: -3.921739101409912
    10. '`' → logprob: -5.421739101409912

Token 13: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.052352726459503174
    2. '```' → logprob: -3.5523526668548584
    3. 'import' → logprob: -5.1773529052734375
    4. '\' → logprob: -5.3023529052734375
    5. '\n' → logprob: -5.9273529052734375
    6. '
' → logprob: -5.9273529052734375
    7. '

' → logprob: -6.6773529052734375
    8. '#' → logprob: -6.9273529052734375
    9. ',' → logprob: -7.1773529052734375
    10. ' 

' → logprob: -7.5523529052734375

Token 14: ' sys' (ID: 12228)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.6223351955413818
    2. ' sys' → logprob: -1.6223351955413818
    3. ' heap' → logprob: -1.8723351955413818
    4. ' os' → logprob: -2.497335195541382
    5. ' operator' → logprob: -3.622335195541382
    6. 'operator' → logprob: -7.122335433959961
    7. ' math' → logprob: -7.247335433959961
    8. ' re' → logprob: -7.497335433959961
    9. 'heap' → logprob: -8.622335433959961
    10. ' random' → logprob: -8.872335433959961

Token 15: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.3448256254196167
    2. '\n' → logprob: -1.4698256254196167
    3. 'def' → logprob: -1.9698256254196167
    4. 'import' → logprob: -2.5948257446289062
    5. '\' → logprob: -2.7198257446289062
    6. '#' → logprob: -2.8448257446289062
    7. '```' → logprob: -2.8448257446289062
    8. '.' → logprob: -3.3448257446289062
    9. ',' → logprob: -3.7198257446289062
    10. '

' → logprob: -3.8448257446289062

Token 16: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.041334960609674454
    2. '```' → logprob: -4.041335105895996
    3. 'import' → logprob: -5.041335105895996
    4. '\' → logprob: -5.041335105895996
    5. 'class' → logprob: -5.541335105895996
    6. '\n' → logprob: -6.541335105895996
    7. '.' → logprob: -6.666335105895996
    8. '`' → logprob: -7.166335105895996
    9. '#' → logprob: -7.166335105895996
    10. '
' → logprob: -7.666335105895996

Token 17: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00022916549642104656
    2. '.exit' → logprob: -9.250228881835938
    3. '.stdin' → logprob: -10.500228881835938
    4. '.stdout' → logprob: -10.625228881835938
    5. '.readline' → logprob: -10.875228881835938
    6. '.argv' → logprob: -11.125228881835938
    7. '.setdefault' → logprob: -11.625228881835938
    8. ' .' → logprob: -12.000228881835938
    9. '.stderr' → logprob: -12.000228881835938
    10. '.import' → logprob: -12.125228881835938

Token 18: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.02693108282983303
    2. '_rec' → logprob: -3.901931047439575
    3. '_limit' → logprob: -5.651931285858154
    4. '_stack' → logprob: -7.651931285858154
    5. '_version' → logprob: -7.776931285858154
    6. '_' → logprob: -7.901931285858154
    7. '_max' → logprob: -8.026930809020996
    8. '_int' → logprob: -8.026930809020996
    9. 's' → logprob: -8.526930809020996
    10. 'limit' → logprob: -8.526930809020996

Token 19: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.008163342252373695
    2. 'urs' → logprob: -5.1331634521484375
    3. 'ur' → logprob: -6.2581634521484375
    4. 'urf' → logprob: -9.133163452148438
    5. 'ursive' → logprob: -9.133163452148438
    6. 'limit' → logprob: -10.258163452148438
    7. 'urst' → logprob: -10.383163452148438
    8. 'urse' → logprob: -10.883163452148438
    9. 'ursor' → logprob: -12.383163452148438
    10. 'urz' → logprob: -13.383163452148438

Token 20: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.05537460744380951
    2. 'limit' → logprob: -2.9303746223449707
    3. '_depth' → logprob: -7.805374622344971
    4. '_lim' → logprob: -10.055374145507812
    5. '_threshold' → logprob: -11.930374145507812
    6. ' limit' → logprob: -12.180374145507812
    7. 'lim' → logprob: -12.430374145507812
    8. '_limits' → logprob: -12.555374145507812
    9. '_li' → logprob: -12.555374145507812
    10. '_LIMIT' → logprob: -12.680374145507812

Token 21: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.080963092041202e-06
    2. '(
' → logprob: -13.125004768371582
    3. ' (' → logprob: -13.375004768371582
    4. '(

' → logprob: -14.125004768371582
    5. '((' → logprob: -15.750004768371582
    6. '("("' → logprob: -16.0000057220459
    7. '(**' → logprob: -16.7500057220459
    8. '()' → logprob: -16.7500057220459
    9. '(None' → logprob: -16.8750057220459
    10. '('' → logprob: -17.1250057220459

Token 22: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1270861178636551
    2. '100' → logprob: -2.1270861625671387
    3. ' ' → logprob: -9.25208568572998
    4. '500' → logprob: -10.62708568572998
    5. '300' → logprob: -10.75208568572998
    6. '1' → logprob: -11.62708568572998
    7. '999' → logprob: -12.87708568572998
    8. '   ' → logprob: -13.62708568572998
    9. '200' → logprob: -13.62708568572998
    10. '150' → logprob: -14.37708568572998

Token 23: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.037243470549583435
    2. '00' → logprob: -3.662243366241455
    3. '0' → logprob: -4.537243366241455
    4. '**' → logprob: -9.287243843078613
    5. '6' → logprob: -9.787243843078613
    6. '4' → logprob: -11.037243843078613
    7. '7' → logprob: -12.162243843078613
    8. '5' → logprob: -12.162243843078613
    9. '```' → logprob: -12.912243843078613
    10. '2' → logprob: -13.787243843078613

Token 24: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0037089812103658915
    2. '9' → logprob: -6.003708839416504
    3. '6' → logprob: -6.753708839416504
    4. '8' → logprob: -9.628708839416504
    5. '**' → logprob: -16.75370979309082
    6. ' ' → logprob: -17.00370979309082
    7. '```' → logprob: -17.00370979309082
    8. '

' → logprob: -18.12870979309082
    9. '10' → logprob: -19.25370979309082
    10. '``' → logprob: -19.62870979309082

Token 25: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. '))' → logprob: -14.000001907348633
    3. ' )' → logprob: -14.625001907348633
    4. ')
' → logprob: -14.625001907348633
    5. '),' → logprob: -16.750001907348633
    6. ')))' → logprob: -17.500001907348633
    7. '`)' → logprob: -18.250001907348633
    8. ')`' → logprob: -18.500001907348633
    9. ')#' → logprob: -18.625001907348633
    10. ')

' → logprob: -18.625001907348633

Token 26: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1385732740163803
    2. '
' → logprob: -2.638573169708252
    3. 'class' → logprob: -3.138573169708252
    4. '

' → logprob: -4.513573169708252
    5. '\' → logprob: -6.763573169708252
    6. '
' → logprob: -7.138573169708252
    7. '```' → logprob: -7.138573169708252
    8. 'n' → logprob: -7.638573169708252
    9. '\n' → logprob: -8.51357364654541
    10. 'd' → logprob: -9.88857364654541

Token 27: ' typing' (ID: 34152)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.10644251108169556
    2. ' collections' → logprob: -3.106442451477051
    3. ' itertools' → logprob: -3.231442451477051
    4. ' typing' → logprob: -4.981442451477051
    5. ' functools' → logprob: -5.981442451477051
    6. 'collections' → logprob: -6.231442451477051
    7. 'math' → logprob: -6.356442451477051
    8. '_' → logprob: -6.481442451477051
    9. ' operator' → logprob: -7.231442451477051
    10. ' heap' → logprob: -7.606442451477051

Token 28: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02640874870121479
    2. 'import' → logprob: -3.6514086723327637
    3. ' ' → logprob: -9.901409149169922
    4. '.' → logprob: -10.401409149169922
    5. '<|end|>' → logprob: -11.776409149169922
    6. '	import' → logprob: -12.026409149169922
    7. '[' → logprob: -12.776409149169922
    8. ' im' → logprob: -12.901409149169922
    9. '.import' → logprob: -13.151409149169922
    10. ' .' → logprob: -13.776409149169922

Token 29: ' Iterator' (ID: 41994)
  Prédit: ' List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.10463032871484756
    2. 'List' → logprob: -2.3546302318573
    3. ' Generator' → logprob: -6.104630470275879
    4. ' Callable' → logprob: -6.729630470275879
    5. ' Any' → logprob: -7.854630470275879
    6. 'Generator' → logprob: -8.479630470275879
    7. 'Any' → logprob: -8.854630470275879
    8. 'Callable' → logprob: -9.229630470275879
    9. ' De' → logprob: -9.979630470275879
    10. ' Optional' → logprob: -10.604630470275879

Token 30: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.9165567755699158
    2. 'def' → logprob: -1.1665568351745605
    3. '
' → logprob: -1.2915568351745605
    4. 'class' → logprob: -5.2915568351745605
    5. ',' → logprob: -6.2915568351745605
    6. '```' → logprob: -6.4165568351745605
    7. 'import' → logprob: -6.6665568351745605
    8. '\n' → logprob: -6.9165568351745605
    9. '
' → logprob: -7.5415568351745605
    10. ':' → logprob: -7.9165568351745605

Token 31: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013038688339293003
    2. 'd' → logprob: -4.888038635253906
    3. 'class' → logprob: -5.638038635253906
    4. 'de' → logprob: -7.138038635253906
    5. '
' → logprob: -7.763038635253906
    6. '\' → logprob: -8.888038635253906
    7. '#' → logprob: -9.138038635253906
    8. '```' → logprob: -9.513038635253906
    9. '

' → logprob: -10.013038635253906
    10. 'from' → logprob: -10.138038635253906

Token 32: ' get' (ID: 717)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.032309021800756454
    2. ' factorial' → logprob: -3.907309055328369
    3. ' fibonacci' → logprob: -5.907309055328369
    4. '_' → logprob: -5.907309055328369
    5. ' factor' → logprob: -6.532309055328369
    6. ' dfs' → logprob: -7.157309055328369
    7. '_factor' → logprob: -7.157309055328369
    8. ' space' → logprob: -7.532309055328369
    9. ' fib' → logprob: -7.657309055328369
    10. ' generate' → logprob: -8.407308578491211

Token 33: '_nums' (ID: 128266)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2884172201156616
    2. '_iterator' → logprob: -1.4134172201156616
    3. '_next' → logprob: -2.163417339324951
    4. '_prime' → logprob: -2.538417339324951
    5. '_numbers' → logprob: -2.913417339324951
    6. '_pr' → logprob: -3.663417339324951
    7. '_tokens' → logprob: -3.663417339324951
    8. '_factor' → logprob: -3.913417339324951
    9. '_lines' → logprob: -4.163417339324951
    10. '_max' → logprob: -4.288417339324951

Token 34: '_l' (ID: 1478)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24813541769981384
    2. '():' → logprob: -1.8731354475021362
    3. '(' → logprob: -2.7481353282928467
    4. '(line' → logprob: -7.873135566711426
    5. '(iter' → logprob: -8.623135566711426
    6. '()(' → logprob: -8.748135566711426
    7. ' ()' → logprob: -8.748135566711426
    8. '```' → logprob: -8.873135566711426
    9. '_from' → logprob: -9.373135566711426
    10. '(n' → logprob: -9.498135566711426

Token 35: '()' (ID: 416)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.21992158889770508
    2. 'ist' → logprob: -1.719921588897705
    3. 'ines' → logprob: -4.094921588897705
    4. 'en' → logprob: -7.469921588897705
    5. 'ength' → logprob: -8.094921112060547
    6. 'inear' → logprob: -8.469921112060547
    7. 'imit' → logprob: -8.844921112060547
    8. 'ambda' → logprob: -8.844921112060547
    9. '()' → logprob: -9.594921112060547
    10. '(' → logprob: -9.969921112060547

Token 36: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04544440656900406
    2. ' ->' → logprob: -3.7954444885253906
    3. ' :' → logprob: -4.170444488525391
    4. '():' → logprob: -5.295444488525391
    5. '->' → logprob: -7.170444488525391
    6. '(' → logprob: -8.42044448852539
    7. ' ' → logprob: -9.54544448852539
    8. '):' → logprob: -9.54544448852539
    9. '[:]' → logprob: -9.79544448852539
    10. ')' → logprob: -9.92044448852539

Token 37: ' list' (ID: 1562)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.35134533047676086
    2. ' Iterator' → logprob: -1.4763453006744385
    3. 'list' → logprob: -2.8513453006744385
    4. ' list' → logprob: -4.851345539093018
    5. 'int' → logprob: -6.476345539093018
    6. 'List' → logprob: -8.22634506225586
    7. '	Iterator' → logprob: -9.10134506225586
    8. ' int' → logprob: -9.85134506225586
    9. ' ' → logprob: -10.47634506225586
    10. 'iterator' → logprob: -10.85134506225586

Token 38: '[int' (ID: 40124)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7772809267044067
    2. '[int' → logprob: -0.9022809267044067
    3. '[' → logprob: -2.027280807495117
    4. '():' → logprob: -6.652280807495117
    5. '[str' → logprob: -7.027280807495117
    6. '[:]' → logprob: -8.152280807495117
    7. '[:' → logprob: -9.027280807495117
    8. '[]' → logprob: -9.027280807495117
    9. '[Any' → logprob: -9.152280807495117
    10. ':**' → logprob: -9.152280807495117

Token 39: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -3.106736039626412e-05
    2. '):' → logprob: -10.875031471252441
    3. ']' → logprob: -12.000031471252441
    4. ']:
' → logprob: -12.625031471252441
    5. ':' → logprob: -14.250031471252441
    6. ']:
' → logprob: -14.625031471252441
    7. '[int' → logprob: -15.000031471252441
    8. '>:' → logprob: -15.125031471252441
    9. ']):' → logprob: -15.250031471252441
    10. '[' → logprob: -15.500031471252441

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22875769436359406
    2. ' ' → logprob: -2.103757619857788
    3. '    ' → logprob: -3.728757619857788
    4. ' return' → logprob: -4.228757858276367
    5. '    
' → logprob: -4.353757858276367
    6. ' 
' → logprob: -5.103757858276367
    7. ':' → logprob: -5.103757858276367
    8. '  
' → logprob: -5.603757858276367
    9. '  ' → logprob: -6.103757858276367
    10. '\n' → logprob: -6.478757858276367

Token 41: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.28438830375671387
    2. 'return' (adapté à ' return') → logprob: -1.7843883037567139
    3. '   ' → logprob: -2.534388303756714
    4. ' n' → logprob: -9.284388542175293
    5. 'n' → logprob: -10.159388542175293
    6. '    ' → logprob: -10.409388542175293
    7. ' line' → logprob: -10.534388542175293
    8. ' ' → logprob: -10.784388542175293
    9. '	return' → logprob: -11.284388542175293
    10. ' s' → logprob: -11.659388542175293

Token 42: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.057326968759298325
    2. 'list' → logprob: -3.3073270320892334
    3. '[list' → logprob: -4.557326793670654
    4. ' [' → logprob: -4.932326793670654
    5. '[' → logprob: -7.057326793670654
    6. '[int' → logprob: -8.432327270507812
    7. '[]' → logprob: -9.182327270507812
    8. ' map' → logprob: -9.307327270507812
    9. ' []' → logprob: -10.182327270507812
    10. '   ' → logprob: -11.057327270507812

Token 43: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.024081753566861153
    2. '(' → logprob: -3.7740817070007324
    3. '(int' → logprob: -7.399081707000732
    4. '(range' → logprob: -8.77408218383789
    5. '(iter' → logprob: -11.02408218383789
    6. ' map' → logprob: -11.39908218383789
    7. '()' → logprob: -11.89908218383789
    8. '(input' → logprob: -11.89908218383789
    9. '(math' → logprob: -12.02408218383789
    10. '[int' → logprob: -12.02408218383789

Token 44: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.011084488593041897
    2. '(' → logprob: -4.51108455657959
    3. '(lambda' → logprob: -10.88608455657959
    4. '[int' → logprob: -12.01108455657959
    5. 'int' → logprob: -12.51108455657959
    6. '(
' → logprob: -12.63608455657959
    7. '<int' → logprob: -13.26108455657959
    8. '(eval' → logprob: -15.01108455657959
    9. '(float' → logprob: -15.01108455657959
    10. '(str' → logprob: -15.38608455657959

Token 45: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.48840439319610596
    2. '(sys' → logprob: -1.863404393196106
    3. ',' → logprob: -2.3634042739868164
    4. '(' → logprob: -2.6134042739868164
    5. ',input' → logprob: -2.9884042739868164
    6. 'input' → logprob: -4.488404273986816
    7. 'sys' → logprob: -6.738404273986816
    8. ' ,' → logprob: -8.488404273986816
    9. '```' → logprob: -8.613404273986816
    10. ' input' → logprob: -8.863404273986816

Token 46: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.43895965814590454
    2. ' input' → logprob: -1.0639595985412598
    3. 'sys' → logprob: -4.93895959854126
    4. ' sys' → logprob: -5.81395959854126
    5. '	input' → logprob: -11.188960075378418
    6. ',input' → logprob: -11.313960075378418
    7. '=input' → logprob: -12.188960075378418
    8. ')' → logprob: -12.313960075378418
    9. '(input' → logprob: -12.438960075378418
    10. '=sys' → logprob: -12.563960075378418

Token 47: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.469590491382405e-05
    2. '()' → logprob: -9.62507438659668
    3. '()))' → logprob: -12.37507438659668
    4. '(' → logprob: -13.00007438659668
    5. ' ().' → logprob: -13.75007438659668
    6. '())))' → logprob: -15.25007438659668
    7. '())' → logprob: -15.62507438659668
    8. '))' → logprob: -15.87507438659668
    9. '()));' → logprob: -16.12507438659668
    10. 'split' → logprob: -16.50007438659668

Token 48: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019431571708992124
    2. 'strip' → logprob: -6.251943111419678
    3. 'rstrip' → logprob: -11.376943588256836
    4. ' split' → logprob: -13.126943588256836
    5. 'read' → logprob: -14.751943588256836
    6. 'spl' → logprob: -14.876943588256836
    7. '(split' → logprob: -15.251943588256836
    8. ' strip' → logprob: -16.876943588256836
    9. 's' → logprob: -17.501943588256836
    10. '().' → logprob: -17.751943588256836

Token 49: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.019456472247838974
    2. '))' → logprob: -4.894456386566162
    3. '())' → logprob: -4.894456386566162
    4. '()' → logprob: -5.769456386566162
    5. '())))' → logprob: -7.019456386566162
    6. ')))' → logprob: -8.89445686340332
    7. '(' → logprob: -9.39445686340332
    8. ')' → logprob: -10.51945686340332
    9. '()))
' → logprob: -11.26945686340332
    10. '()));' → logprob: -11.89445686340332

Token 50: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0056193312630057335
    2. '\' → logprob: -6.005619525909424
    3. '
' → logprob: -6.005619525909424
    4. '\n' → logprob: -8.380619049072266
    5. 'd' → logprob: -8.880619049072266
    6. 'class' → logprob: -9.255619049072266
    7. 'n' → logprob: -9.505619049072266
    8. '

' → logprob: -10.380619049072266
    9. '```' → logprob: -11.005619049072266
    10. '#' → logprob: -11.130619049072266

Token 51: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.14477205276489258
    2. ' main' → logprob: -2.2697720527648926
    3. '_' → logprob: -4.769772052764893
    4. ' solve' → logprob: -5.269772052764893
    5. ' factorial' → logprob: -5.519772052764893
    6. 'get' → logprob: -5.769772052764893
    7. '_get' → logprob: -6.519772052764893
    8. ' gcd' → logprob: -6.769772052764893
    9. ' bfs' → logprob: -7.269772052764893
    10. ' dfs' → logprob: -7.394772052764893

Token 52: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -0.17195120453834534
    2. '_num' → logprob: -1.921951174736023
    3. '_' → logprob: -5.5469512939453125
    4. '_str' → logprob: -5.9219512939453125
    5. '_int' → logprob: -6.5469512939453125
    6. '_chars' → logprob: -7.0469512939453125
    7. '_n' → logprob: -7.5469512939453125
    8. '_line' → logprob: -7.6719512939453125
    9. '_s' → logprob: -8.296951293945312
    10. '_input' → logprob: -8.296951293945312

Token 53: '_n' (ID: 2170)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22979341447353363
    2. '_s' → logprob: -1.7297934293746948
    3. '_' → logprob: -4.729793548583984
    4. '_i' → logprob: -4.979793548583984
    5. '_n' → logprob: -5.604793548583984
    6. '_l' → logprob: -5.979793548583984
    7. '_a' → logprob: -6.104793548583984
    8. '_t' → logprob: -6.479793548583984
    9. '(' → logprob: -7.604793548583984
    10. '_r' → logprob: -7.729793548583984

Token 54: '(n' (ID: 2406)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005892522749491036
    2. '(' → logprob: -8.500589370727539
    3. ' ()' → logprob: -8.875589370727539
    4. '`()' → logprob: -9.500589370727539
    5. '():' → logprob: -10.250589370727539
    6. ')' → logprob: -11.000589370727539
    7. ']()' → logprob: -11.250589370727539
    8. 'l' → logprob: -11.375589370727539
    9. '```' → logprob: -11.375589370727539
    10. 'a' → logprob: -11.625589370727539

Token 55: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10743925720453262
    2. ')' → logprob: -2.4824392795562744
    3. '):' → logprob: -4.107439041137695
    4. ':int' → logprob: -6.482439041137695
    5. ' :' → logprob: -8.607439041137695
    6. ' )' → logprob: -9.232439041137695
    7. '):
' → logprob: -10.482439041137695
    8. ' ):' → logprob: -10.982439041137695
    9. 'int' → logprob: -12.732439041137695
    10. '  ' → logprob: -12.857439041137695

Token 56: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0015078396536409855
    2. ' int' → logprob: -6.751507759094238
    3. ')' → logprob: -8.001507759094238
    4. '   ' → logprob: -13.876507759094238
    5. '[int' → logprob: -14.001507759094238
    6. '=int' → logprob: -15.251507759094238
    7. ':int' → logprob: -15.501507759094238
    8. ' )' → logprob: -16.001508712768555
    9. '(int' → logprob: -16.126508712768555
    10. '	int' → logprob: -16.376508712768555

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.273621405242011e-05
    2. '):' → logprob: -10.750032424926758
    3. ' )' → logprob: -11.500032424926758
    4. '))' → logprob: -14.875032424926758
    5. '()' → logprob: -15.625032424926758
    6. '   ' → logprob: -16.000032424926758
    7. '`)' → logprob: -16.000032424926758
    8. '())' → logprob: -16.375032424926758
    9. ')->' → logprob: -16.750032424926758
    10. '):
' → logprob: -16.875032424926758

Token 58: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.09056554734706879
    2. '->' → logprob: -2.4655654430389404
    3. ':' → logprob: -6.7155656814575195
    4. ')' → logprob: -7.9655656814575195
    5. ' ' → logprob: -10.59056568145752
    6. '   ' → logprob: -11.09056568145752
    7. ')->' → logprob: -11.34056568145752
    8. '  ' → logprob: -12.59056568145752
    9. ' :' → logprob: -13.21556568145752
    10. '>' → logprob: -13.21556568145752

Token 59: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02325584553182125
    2. ' list' → logprob: -3.7732558250427246
    3. '[list' → logprob: -12.398256301879883
    4. 'Iterator' → logprob: -12.773256301879883
    5. 'List' → logprob: -14.023256301879883
    6. '   ' → logprob: -14.398256301879883
    7. 'deque' → logprob: -14.398256301879883
    8. ' Iterator' → logprob: -15.023256301879883
    9. ' ' → logprob: -15.398256301879883
    10. 'tuple' → logprob: -15.648256301879883

Token 60: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -7.896309739408025e-07
    2. '<int' → logprob: -14.750000953674316
    3. 'int' → logprob: -15.000000953674316
    4. '[' → logprob: -18.5
    5. '(int' → logprob: -19.25
    6. '[Int' → logprob: -21.25
    7. ':int' → logprob: -21.25
    8. '	int' → logprob: -22.125
    9. '=int' → logprob: -22.375
    10. '```' → logprob: -22.5

Token 61: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027178567834198475
    2. '):
' → logprob: -6.252717971801758
    3. ')' → logprob: -7.252717971801758
    4. ':' → logprob: -10.377717971801758
    5. '):
' → logprob: -10.377717971801758
    6. '   ' → logprob: -12.002717971801758
    7. ']:' → logprob: -12.502717971801758
    8. ' ):' → logprob: -13.252717971801758
    9. '）：' → logprob: -13.252717971801758
    10. '[' → logprob: -13.627717971801758

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012159519828855991
    2. 'return' → logprob: -7.251215934753418
    3. ' return' → logprob: -7.751215934753418
    4. '[' → logprob: -10.126215934753418
    5. '	return' → logprob: -11.751215934753418
    6. '[]' → logprob: -12.001215934753418
    7. '    ' → logprob: -12.126215934753418
    8. ' ' → logprob: -12.501215934753418
    9. '   ' → logprob: -12.626215934753418
    10. '  ' → logprob: -13.001215934753418

Token 63: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.15888641774654388
    2. ' return' → logprob: -2.408886432647705
    3. '[' → logprob: -3.533886432647705
    4. '   ' → logprob: -4.783886432647705
    5. '[get' → logprob: -4.908886432647705
    6. '[int' → logprob: -5.033886432647705
    7. ' [' → logprob: -5.783886432647705
    8. '[list' → logprob: -6.533886432647705
    9. '[n' → logprob: -8.408885955810547
    10. '[num' → logprob: -9.033885955810547

Token 64: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.43264809250831604
    2. '[list' → logprob: -1.4326480627059937
    3. ' list' → logprob: -2.432648181915283
    4. '[get' → logprob: -4.307648181915283
    5. 'list' → logprob: -4.807648181915283
    6. '[' → logprob: -6.057648181915283
    7. '[int' → logprob: -7.432648181915283
    8. '[n' → logprob: -10.182647705078125
    9. '[m' → logprob: -10.807647705078125
    10. '[List' → logprob: -11.057647705078125

Token 65: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -2.0219828002154827e-05
    2. ' int' → logprob: -11.250020027160645
    3. '   ' → logprob: -12.375020027160645
    4. '<int' → logprob: -13.500020027160645
    5. '(int' → logprob: -14.875020027160645
    6. '	int' → logprob: -15.250020027160645
    7. '[int' → logprob: -15.250020027160645
    8. '    ' → logprob: -15.750020027160645
    9. '  ' → logprob: -16.00002098083496
    10. ':int' → logprob: -16.25002098083496

Token 66: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0001239196863025427
    2. 'input' → logprob: -9.000123977661133
    3. '(' → logprob: -14.875123977661133
    4. '()' → logprob: -16.500123977661133
    5. '=input' → logprob: -16.750123977661133
    6. ' input' → logprob: -17.500123977661133
    7. '(x' → logprob: -17.625123977661133
    8. '(inp' → logprob: -17.625123977661133
    9. '<input' → logprob: -18.750123977661133
    10. '(in' → logprob: -18.750123977661133

Token 67: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -6.802049756515771e-05
    2. '().' → logprob: -9.875067710876465
    3. '()' → logprob: -11.750067710876465
    4. '())
' → logprob: -12.125067710876465
    5. ' ())' → logprob: -13.375067710876465
    6. ')' → logprob: -13.625067710876465
    7. '()))' → logprob: -15.500067710876465
    8. '(' → logprob: -16.62506866455078
    9. '())
' → logprob: -17.00006866455078
    10. '()]' → logprob: -17.00006866455078

Token 68: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2103712409734726
    2. 'for' → logprob: -1.8353712558746338
    3. '()' → logprob: -4.210371017456055
    4. ' for' → logprob: -4.210371017456055
    5. ' ' → logprob: -8.460371017456055
    6. '	for' → logprob: -9.085371017456055
    7. '   ' → logprob: -9.585371017456055
    8. '(' → logprob: -10.960371017456055
    9. ' )' → logprob: -11.085371017456055
    10. ')]' → logprob: -11.335371017456055

Token 69: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6937677264213562
    2. ' _' → logprob: -0.6937677264213562
    3. ' range' → logprob: -7.568767547607422
    4. ' in' → logprob: -10.193767547607422
    5. '_range' → logprob: -10.568767547607422
    6. 'range' → logprob: -10.818767547607422
    7. ' ' → logprob: -11.818767547607422
    8. ' ' → logprob: -12.318767547607422
    9. '_in' → logprob: -12.443767547607422
    10. '_i' → logprob: -13.693767547607422

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13235324621200562
    2. 'in' → logprob: -2.1323533058166504
    3. 'range' → logprob: -5.38235330581665
    4. ' range' → logprob: -7.25735330581665
    5. ' ' → logprob: -9.632352828979492
    6. '_' → logprob: -11.382352828979492
    7. 'n' → logprob: -11.507352828979492
    8. ' _' → logprob: -11.757352828979492
    9. '  ' → logprob: -12.632352828979492
    10. 'i' → logprob: -13.007352828979492

Token 71: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003177952254191041
    2. ' range' → logprob: -5.753178119659424
    3. '	range' → logprob: -15.628177642822266
    4. '(range' → logprob: -17.503177642822266
    5. 'rang' → logprob: -18.253177642822266
    6. ' ' → logprob: -18.628177642822266
    7. '_range' → logprob: -18.628177642822266
    8. '   ' → logprob: -19.378177642822266
    9. '```' → logprob: -19.628177642822266
    10. '.range' → logprob: -20.003177642822266

Token 72: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.8828707804204896e-05
    2. '(' → logprob: -10.125048637390137
    3. 'n' → logprob: -11.875048637390137
    4. ' n' → logprob: -13.750048637390137
    5. '	n' → logprob: -15.000048637390137
    6. ' (' → logprob: -15.250048637390137
    7. ')n' → logprob: -18.000049591064453
    8. '(
' → logprob: -18.375049591064453
    9. '_n' → logprob: -18.625049591064453
    10. '   ' → logprob: -18.625049591064453

Token 73: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.662937372922897e-05
    2. ')' → logprob: -9.375096321105957
    3. ']' → logprob: -11.500096321105957
    4. ')]
' → logprob: -14.375096321105957
    5. ')])' → logprob: -15.125096321105957
    6. '))' → logprob: -15.375096321105957
    7. ' )' → logprob: -16.375097274780273
    8. ')}' → logprob: -16.375097274780273
    9. '')]' → logprob: -16.500097274780273
    10. '])' → logprob: -16.625097274780273

Token 74: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000668713531922549
    2. '
' → logprob: -8.0006685256958
    3. 'class' → logprob: -8.1256685256958
    4. '\' → logprob: -11.2506685256958
    5. '

' → logprob: -12.2506685256958
    6. '<|end|>' → logprob: -12.3756685256958
    7. '```' → logprob: -12.3756685256958
    8. 'ndef' → logprob: -13.0006685256958
    9. 'from' → logprob: -13.6256685256958
    10. '<|end|>' → logprob: -13.6256685256958

Token 75: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.1364416629076004
    2. ' main' → logprob: -2.761441707611084
    3. '_' → logprob: -2.886441707611084
    4. ' solve' → logprob: -5.761441707611084
    5. ' gcd' → logprob: -6.886441707611084
    6. ' dfs' → logprob: -7.136441707611084
    7. 'get' → logprob: -7.261441707611084
    8. ' factorial' → logprob: -7.636441707611084
    9. '_get' → logprob: -7.886441707611084
    10. ' _' → logprob: -7.886441707611084

Token 76: '_all' (ID: 13305)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.3917102813720703
    2. '_nums' → logprob: -1.3917102813720703
    3. '_line' → logprob: -1.7667102813720703
    4. '_' → logprob: -2.1417102813720703
    5. '_chars' → logprob: -2.3917102813720703
    6. '_num' → logprob: -3.0167102813720703
    7. '_char' → logprob: -3.5167102813720703
    8. 's' → logprob: -4.14171028137207
    9. '_input' → logprob: -4.39171028137207
    10. '_lines' → logprob: -5.26671028137207

Token 77: '_int' (ID: 12285)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.0474251508712769
    2. '_lines' → logprob: -1.0474251508712769
    3. '()' → logprob: -2.1724252700805664
    4. '_nums' → logprob: -2.4224252700805664
    5. '_inputs' → logprob: -3.5474252700805664
    6. '_tokens' → logprob: -3.6724252700805664
    7. '_data' → logprob: -4.422425270080566
    8. '_numbers' → logprob: -5.297425270080566
    9. '_n' → logprob: -5.422425270080566
    10. '_l' → logprob: -5.922425270080566

Token 78: '()' (ID: 416)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00026383911608718336
    2. '_s' → logprob: -8.875264167785645
    3. 'eger' → logprob: -9.875264167785645
    4. '()' → logprob: -11.000264167785645
    5. '```' → logprob: -11.500264167785645
    6. '():' → logprob: -11.750264167785645
    7. '_inputs' → logprob: -11.875264167785645
    8. '():
' → logprob: -11.875264167785645
    9. '_input' → logprob: -12.375264167785645
    10. '_list' → logprob: -12.625264167785645

Token 79: ' ->' (ID: 2747)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4288572371006012
    2. '():' → logprob: -1.0538572072982788
    3. '()->' → logprob: -9.80385684967041
    4. '(' → logprob: -9.80385684967041
    5. ':' → logprob: -10.67885684967041
    6. '():
' → logprob: -11.80385684967041
    7. ' ()' → logprob: -12.55385684967041
    8. ' ():' → logprob: -12.55385684967041
    9. '():
' → logprob: -13.80385684967041
    10. '_iterator' → logprob: -14.30385684967041

Token 80: ' Iterator' (ID: 41994)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.525681734085083
    2. 'map' → logprob: -1.400681734085083
    3. 'Iterator' → logprob: -2.025681734085083
    4. ' list' → logprob: -4.275681495666504
    5. ' map' → logprob: -5.025681495666504
    6. ' Iterator' → logprob: -5.775681495666504
    7. 'iter' → logprob: -5.900681495666504
    8. 'int' → logprob: -6.775681495666504
    9. '[' → logprob: -7.150681495666504
    10. ' iter' → logprob: -7.275681495666504

Token 81: '[int' (ID: 40124)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.027521323412656784
    2. '():' → logprob: -4.027521133422852
    3. '[int' → logprob: -4.777521133422852
    4. 'int' → logprob: -7.902521133422852
    5. ':' → logprob: -8.152521133422852
    6. ':int' → logprob: -9.027521133422852
    7. '():
' → logprob: -9.902521133422852
    8. '<int' → logprob: -10.527521133422852
    9. '=int' → logprob: -11.027521133422852
    10. '(' → logprob: -11.402521133422852

Token 82: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010051772929728031
    2. '():' → logprob: -4.635051727294922
    3. ')' → logprob: -9.135051727294922
    4. '()' → logprob: -9.385051727294922
    5. '):
' → logprob: -9.760051727294922
    6. ':' → logprob: -10.635051727294922
    7. ']:' → logprob: -11.510051727294922
    8. ' ):' → logprob: -12.135051727294922
    9. '():
' → logprob: -13.135051727294922
    10. ' ():' → logprob: -14.135051727294922

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021974841365590692
    2. ' map' → logprob: -9.625219345092773
    3. 'map' → logprob: -9.750219345092773
    4. 'while' → logprob: -10.500219345092773
    5. ' while' → logprob: -10.875219345092773
    6. ' ' → logprob: -11.125219345092773
    7. ' for' → logprob: -11.875219345092773
    8. 'for' → logprob: -11.875219345092773
    9. 'from' → logprob: -11.875219345092773
    10. 'yield' → logprob: -13.000219345092773

Token 84: ' return' (ID: 622)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.09225698560476303
    2. ' map' → logprob: -2.467257022857666
    3. '   ' → logprob: -6.092257022857666
    4. ' ' → logprob: -7.967257022857666
    5. 'for' → logprob: -8.342256546020508
    6. 'from' → logprob: -9.217256546020508
    7. '(map' → logprob: -9.217256546020508
    8. 'int' → logprob: -9.342256546020508
    9. 'yield' → logprob: -9.967256546020508
    10. 'iter' → logprob: -9.967256546020508

Token 85: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5349932312965393
    2. 'map' → logprob: -1.4099931716918945
    3. '(map' → logprob: -1.7849931716918945
    4. ' (' → logprob: -7.0349931716918945
    5. ' ' → logprob: -7.5349931716918945
    6. ' iter' → logprob: -8.284993171691895
    7. '   ' → logprob: -8.534993171691895
    8. '	map' → logprob: -8.909993171691895
    9. '  ' → logprob: -9.034993171691895
    10. '(iter' → logprob: -9.534993171691895

Token 86: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008143932209350169
    2. '(' → logprob: -7.125814437866211
    3. '(lambda' → logprob: -12.500814437866211
    4. 'int' → logprob: -12.625814437866211
    5. '<int' → logprob: -13.250814437866211
    6. '(
' → logprob: -15.125814437866211
    7. ' (' → logprob: -15.625814437866211
    8. '(in' → logprob: -16.00081443786621
    9. '=int' → logprob: -16.12581443786621
    10. '```' → logprob: -16.12581443786621

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005993382073938847
    2. ',input' → logprob: -5.130993366241455
    3. ' ,' → logprob: -10.005993843078613
    4. 'input' → logprob: -11.130993843078613
    5. '(input' → logprob: -13.880993843078613
    6. '(sys' → logprob: -13.880993843078613
    7. 'sys' → logprob: -14.255993843078613
    8. '   ' → logprob: -14.505993843078613
    9. '(' → logprob: -14.755993843078613
    10. '(),' → logprob: -15.505993843078613

Token 88: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4330621063709259
    2. ' sys' → logprob: -1.0580620765686035
    3. 'input' → logprob: -5.6830620765686035
    4. ' input' → logprob: -7.8080620765686035
    5. ' ' → logprob: -9.058062553405762
    6. '=sys' → logprob: -9.183062553405762
    7. 'iter' → logprob: -9.433062553405762
    8. '	sys' → logprob: -9.558062553405762
    9. 'open' → logprob: -10.058062553405762
    10. ')' → logprob: -10.308062553405762

Token 89: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.981667537620524e-06
    2. '.std' → logprob: -14.125001907348633
    3. '.' → logprob: -14.500001907348633
    4. '.stdout' → logprob: -15.125001907348633
    5. 'stdin' → logprob: -15.125001907348633
    6. '.argv' → logprob: -16.250001907348633
    7. '.__' → logprob: -18.375001907348633
    8. ' stdin' → logprob: -18.625001907348633
    9. '.stderr' → logprob: -19.125001907348633
    10. '.input' → logprob: -19.750001907348633

Token 90: '.read' (ID: 7211)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40620699524879456
    2. '.readline' → logprob: -1.1562069654464722
    3. '.' → logprob: -4.156207084655762
    4. '.readlines' → logprob: -6.406207084655762
    5. ' .' → logprob: -7.281207084655762
    6. ' )' → logprob: -7.906207084655762
    7. '.buffer' → logprob: -8.531207084655762
    8. ' ' → logprob: -9.031207084655762
    9. '.read' → logprob: -9.156207084655762
    10. '))' → logprob: -9.406207084655762

Token 91: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.013233285397291183
    2. '())' → logprob: -4.763233184814453
    3. '()' → logprob: -5.513233184814453
    4. ')' → logprob: -8.013233184814453
    5. 'lines' → logprob: -9.388233184814453
    6. '(' → logprob: -9.888233184814453
    7. 'line' → logprob: -10.138233184814453
    8. '()))' → logprob: -10.138233184814453
    9. '_lines' → logprob: -12.013233184814453
    10. '```' → logprob: -12.888233184814453

Token 92: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005408813012763858
    2. 'strip' → logprob: -8.250540733337402
    3. 'read' → logprob: -8.375540733337402
    4. 'decode' → logprob: -10.125540733337402
    5. ' split' → logprob: -12.125540733337402
    6. ')' → logprob: -13.000540733337402
    7. 'rstrip' → logprob: -14.125540733337402
    8. '(split' → logprob: -15.250540733337402
    9. 'spl' → logprob: -16.00054168701172
    10. '```' → logprob: -16.87554168701172

Token 93: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03996143117547035
    2. '()))' → logprob: -3.289961338043213
    3. '()' → logprob: -6.539961338043213
    4. ')' → logprob: -8.039961814880371
    5. '))' → logprob: -8.914961814880371
    6. '())
' → logprob: -12.039961814880371
    7. '()))
' → logprob: -12.539961814880371
    8. '(' → logprob: -13.039961814880371
    9. ' ())' → logprob: -13.164961814880371
    10. '())))' → logprob: -14.289961814880371

Token 94: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03148806467652321
    2. '<|end|>' → logprob: -4.031487941741943
    3. '#' → logprob: -4.906487941741943
    4. '
' → logprob: -5.781487941741943
    5. '\n' → logprob: -6.906487941741943
    6. '<|end|>' → logprob: -7.781487941741943
    7. '\' → logprob: -8.031488418579102
    8. '```' → logprob: -8.281488418579102
    9. ' ' → logprob: -9.031488418579102
    10. 'class' → logprob: -9.406488418579102

Token 95: ' log' (ID: 2142)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.6129327416419983
    2. ' main' → logprob: -0.9879327416419983
    3. '_' → logprob: -2.7379326820373535
    4. ' _' → logprob: -5.3629326820373535
    5. ' solve' → logprob: -5.6129326820373535
    6. ' ' → logprob: -6.4879326820373535
    7. 'main' → logprob: -6.6129326820373535
    8. ' max' → logprob: -6.7379326820373535
    9. ' factorial' → logprob: -6.7379326820373535
    10. 'get' → logprob: -6.8629326820373535

Token 96: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.168025404214859
    2. '10' → logprob: -2.168025493621826
    3. '_' → logprob: -4.293025493621826
    4. '2' → logprob: -4.918025493621826
    5. 'arith' → logprob: -5.543025493621826
    6. '("' → logprob: -5.668025493621826
    7. '1' → logprob: -5.918025493621826
    8. '()' → logprob: -6.168025493621826
    9. '('' → logprob: -6.793025493621826
    10. 'ging' → logprob: -7.543025493621826

Token 97: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -9.817902173381299e-05
    2. 'a' → logprob: -9.62509822845459
    3. 'argv' → logprob: -10.87509822845459
    4. ' args' → logprob: -12.37509822845459
    5. 'values' → logprob: -12.75009822845459
    6. ')' → logprob: -13.75009822845459
    7. '_args' → logprob: -13.75009822845459
    8. 'messages' → logprob: -14.00009822845459
    9. 'objects' → logprob: -14.25009822845459
    10. 'params' → logprob: -14.50009822845459

Token 98: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5253000855445862
    2. '):' → logprob: -0.9003000855445862
    3. ':' → logprob: -6.525300025939941
    4. ')' → logprob: -7.900300025939941
    5. '):
' → logprob: -8.400300025939941
    6. ' ,' → logprob: -9.525300025939941
    7. ' ):' → logprob: -11.275300025939941
    8. '):
' → logprob: -12.150300025939941
    9. '   ' → logprob: -12.275300025939941
    10. ' ' → logprob: -12.400300025939941

Token 99: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012582694762386382
    2. '):' → logprob: -9.500125885009766
    3. ' :' → logprob: -10.250125885009766
    4. ':
' → logprob: -12.000125885009766
    5. '():' → logprob: -12.750125885009766
    6. ':void' → logprob: -13.000125885009766
    7. ':def' → logprob: -13.375125885009766
    8. ',' → logprob: -14.250125885009766
    9. ')' → logprob: -14.375125885009766
    10. ':**' → logprob: -14.500125885009766

Token 100: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.018151583150029182
    2. ' None' → logprob: -4.018151760101318
    3. 'none' → logprob: -14.26815128326416
    4. 'str' → logprob: -14.39315128326416
    5. 'print' → logprob: -15.26815128326416
    6. '   ' → logprob: -16.018152236938477
    7. 'int' → logprob: -16.018152236938477
    8. '_None' → logprob: -17.268152236938477
    9. ' ' → logprob: -17.893152236938477
    10. '(None' → logprob: -18.018152236938477

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00019626895664259791
    2. ':
' → logprob: -8.62519645690918
    3. ' :' → logprob: -11.37519645690918
    4. '):' → logprob: -13.12519645690918
    5. '   ' → logprob: -13.75019645690918
    6. ':void' → logprob: -14.25019645690918
    7. ':**' → logprob: -14.50019645690918
    8. ':return' → logprob: -15.37519645690918
    9. ':def' → logprob: -15.62519645690918
    10. ',' → logprob: -15.87519645690918

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00045843268162570894
    2. ' print' → logprob: -8.250458717346191
    3. 'print' → logprob: -9.125458717346191
    4. ' pass' → logprob: -10.000458717346191
    5. '    ' → logprob: -10.875458717346191
    6. 'pass' → logprob: -11.000458717346191
    7. '   ' → logprob: -12.750458717346191
    8. '    
' → logprob: -13.000458717346191
    9. '	pass' → logprob: -14.000458717346191
    10. '#' → logprob: -15.125458717346191

Token 103: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.25274452567100525
    2. 'pass' → logprob: -1.5027445554733276
    3. '   ' → logprob: -7.377744674682617
    4. '...' → logprob: -8.752744674682617
    5. ' pass' → logprob: -11.252744674682617
    6. 'import' → logprob: -11.752744674682617
    7. ' print' → logprob: -11.877744674682617
    8. 'return' → logprob: -13.627744674682617
    9. '	pass' → logprob: -13.877744674682617
    10. '#' → logprob: -14.252744674682617

Token 104: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029843280091881752
    2. '(*' → logprob: -3.529843330383301
    3. '()' → logprob: -10.2798433303833
    4. '(
' → logprob: -10.7798433303833
    5. '("("' → logprob: -11.4048433303833
    6. '('' → logprob: -11.9048433303833
    7. '((' → logprob: -12.7798433303833
    8. '("' → logprob: -13.2798433303833
    9. '("")' → logprob: -13.4048433303833
    10. '(end' → logprob: -13.4048433303833

Token 105: 'DEBUG' (ID: 13806)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.4467426538467407
    2. '",' → logprob: -1.6967426538467407
    3. 'DEBUG' → logprob: -2.071742534637451
    4. '"' → logprob: -4.696742534637451
    5. '[' → logprob: -4.821742534637451
    6. '*",' → logprob: -4.946742534637451
    7. '"[' → logprob: -5.321742534637451
    8. '"*' → logprob: -6.071742534637451
    9. '"log' → logprob: -6.321742534637451
    10. '(*' → logprob: -6.321742534637451

Token 106: ':",' (ID: 25704)
  Prédit: ':",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':",' → logprob: -0.0017005297122523189
    2. ':' → logprob: -6.501700401306152
    3. '",' → logprob: -9.126700401306152
    4. ':"' → logprob: -9.876700401306152
    5. ' :",' → logprob: -10.751700401306152
    6. '>",' → logprob: -12.126700401306152
    7. '(",' → logprob: -12.501700401306152
    8. ',",' → logprob: -13.001700401306152
    9. ':',' → logprob: -14.251700401306152
    10. '(*' → logprob: -14.501700401306152

Token 107: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0004147032741457224
    2. ' *' → logprob: -7.875414848327637
    3. '*a' → logprob: -11.875414848327637
    4. '*out' → logprob: -12.375414848327637
    5. '*self' → logprob: -12.875414848327637
    6. '*f' → logprob: -13.000414848327637
    7. '*object' → logprob: -13.000414848327637
    8. '*t' → logprob: -13.125414848327637
    9. '*d' → logprob: -13.125414848327637
    10. '*l' → logprob: -13.500414848327637

Token 108: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -3.166338137816638e-05
    2. ' args' → logprob: -10.375031471252441
    3. '(args' → logprob: -15.625031471252441
    4. '$args' → logprob: -16.375032424926758
    5. '	args' → logprob: -16.750032424926758
    6. ',args' → logprob: -17.750032424926758
    7. '_args' → logprob: -18.375032424926758
    8. ')' → logprob: -19.125032424926758
    9. 'arg' → logprob: -19.375032424926758
    10. '.args' → logprob: -19.375032424926758

Token 109: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ')
' → logprob: -13.37500286102295
    3. ',' → logprob: -14.62500286102295
    4. ' )' → logprob: -15.50000286102295
    5. ')#' → logprob: -17.000001907348633
    6. '),' → logprob: -17.250001907348633
    7. '<|end|>' → logprob: -17.625001907348633
    8. ')`' → logprob: -18.250001907348633
    9. ')

' → logprob: -18.375001907348633
    10. ')**' → logprob: -18.375001907348633

Token 110: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -0.0013485688250511885
    2. ' file' → logprob: -7.251348495483398
    3. 'flush' → logprob: -7.376348495483398
    4. ')' → logprob: -11.501348495483398
    5. ' flush' → logprob: -14.126348495483398
    6. ' ' → logprob: -14.126348495483398
    7. ')
' → logprob: -15.251348495483398
    8. 'end' → logprob: -15.876348495483398
    9. ',file' → logprob: -15.876348495483398
    10. '  ' → logprob: -16.2513484954834

Token 111: '=sys' (ID: 149200)
  Prédit: '=sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sys' → logprob: -7.707997428951785e-05
    2. '=' → logprob: -9.500077247619629
    3. 'sys' → logprob: -13.125077247619629
    4. '=subprocess' → logprob: -16.000076293945312
    5. ' sys' → logprob: -17.625076293945312
    6. '=file' → logprob: -18.250076293945312
    7. '=os' → logprob: -18.375076293945312
    8. '	sys' → logprob: -18.375076293945312
    9. '=torch' → logprob: -18.875076293945312
    10. '=logging' → logprob: -19.500076293945312

Token 112: '.stderr' (ID: 87058)
  Prédit: '.stderr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stderr' → logprob: -0.00034869377850554883
    2. '.stdout' → logprob: -8.000349044799805
    3. 'stderr' → logprob: -11.375349044799805
    4. '.' → logprob: -14.000349044799805
    5. '.stdin' → logprob: -14.875349044799805
    6. '.__' → logprob: -15.625349044799805
    7. '(stderr' → logprob: -16.375349044799805
    8. ' stderr' → logprob: -16.500349044799805
    9. '._' → logprob: -16.625349044799805
    10. ' .' → logprob: -16.625349044799805

Token 113: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.750000953674316
    3. ' )' → logprob: -14.875000953674316
    4. '))' → logprob: -17.875
    5. '),' → logprob: -18.125
    6. '<|end|>' → logprob: -18.375
    7. ')

' → logprob: -19.0
    8. ')`' → logprob: -19.125
    9. ')#' → logprob: -19.25
    10. ').' → logprob: -19.625

Token 114: 'MOD' (ID: 52135)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004734495654702187
    2. 'class' → logprob: -5.379734516143799
    3. 'n' → logprob: -10.00473403930664
    4. '\' → logprob: -10.12973403930664
    5. '#' → logprob: -12.12973403930664
    6. 'ndef' → logprob: -12.62973403930664
    7. '\n' → logprob: -12.62973403930664
    8. '@' → logprob: -12.87973403930664
    9. 'import' → logprob: -13.37973403930664
    10. 'from' → logprob: -13.50473403930664

Token 115: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03844742476940155
    2. '=' → logprob: -3.288447380065918
    3. ' ' → logprob: -7.913447380065918
    4. ' =
' → logprob: -11.163447380065918
    5. ' =)' → logprob: -11.288447380065918
    6. '_' → logprob: -12.538447380065918
    7. ':' → logprob: -12.538447380065918
    8. ' )' → logprob: -13.663447380065918
    9. ',' → logprob: -14.163447380065918
    10. ')' → logprob: -14.288447380065918

Token 116: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -7.541112427134067e-05
    2. '100' → logprob: -9.875075340270996
    3. ' ' → logprob: -10.750075340270996
    4. '998' → logprob: -13.250075340270996
    5. '1' → logprob: -14.250075340270996
    6. 'int' → logprob: -18.250076293945312
    7. '(' → logprob: -19.375076293945312
    8. '```' → logprob: -19.500076293945312
    9. '999' → logprob: -19.875076293945312
    10. '123' → logprob: -20.125076293945312

Token 117: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.001295596593990922
    2. '100' → logprob: -6.751295566558838
    3. '998' → logprob: -9.001296043395996
    4. '1' → logprob: -13.126296043395996
    5. 'int' → logprob: -16.75129508972168
    6. ' ' → logprob: -17.25129508972168
    7. '(' → logprob: -17.25129508972168
    8. '１０' → logprob: -17.87629508972168
    9. '123' → logprob: -18.50129508972168
    10. '999' → logprob: -18.62629508972168

Token 118: '**' (ID: 410)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0007008800748735666
    2. '**' → logprob: -7.375700950622559
    3. '09' → logprob: -9.625700950622559
    4. '```' → logprob: -11.750700950622559
    5. '``' → logprob: -16.125699996948242
    6. ' ' → logprob: -16.500699996948242
    7. '_' → logprob: -16.625699996948242
    8. '7' → logprob: -16.875699996948242
    9. '99' → logprob: -17.125699996948242
    10. '009' → logprob: -17.375699996948242

Token 119: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.320199877838604e-07
    2. '09' → logprob: -15.0
    3. '```' → logprob: -17.375
    4. '+' → logprob: -18.375
    5. '
' → logprob: -20.25
    6. '10' → logprob: -20.625
    7. ' ' → logprob: -21.5
    8. '``' → logprob: -22.375
    9. '９' → logprob: -22.5
    10. '19' → logprob: -22.625

Token 120: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006631145952269435
    2. '7' → logprob: -7.3756632804870605
    3. ' +' → logprob: -10.250662803649902
    4. '```' → logprob: -14.625662803649902
    5. '＋' → logprob: -15.125662803649902
    6. '+
' → logprob: -15.375662803649902
    7. 'plus' → logprob: -15.375662803649902
    8. ' plus' → logprob: -16.75066375732422
    9. 'Plus' → logprob: -17.25066375732422
    10. '+

' → logprob: -17.62566375732422

Token 121: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -20.375
    3. '07' → logprob: -20.625
    4. '```' → logprob: -20.875
    5. ' ' → logprob: -21.0
    6. '

' → logprob: -21.375
    7. '
' → logprob: -22.5
    8. '9' → logprob: -22.5
    9. '   ' → logprob: -22.75
    10. '７' → logprob: -23.0

Token 122: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '```' → logprob: -20.625
    3. '07' → logprob: -21.25
    4. '+' → logprob: -21.5
    5. '７' → logprob: -22.0
    6. ' ' → logprob: -22.25
    7. '

' → logprob: -22.25
    8. '   ' → logprob: -22.875
    9. '
' → logprob: -23.375
    10. ' ' → logprob: -23.75

Token 123: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025309573858976364
    2. '\n' → logprob: -4.6503095626831055
    3. '
' → logprob: -5.1503095626831055
    4. '<|end|>' → logprob: -5.4003095626831055
    5. '\' → logprob: -6.0253095626831055
    6. 'class' → logprob: -7.2753095626831055
    7. 'n' → logprob: -7.6503095626831055
    8. '#' → logprob: -7.7753095626831055
    9. '

' → logprob: -8.650309562683105
    10. '' → logprob: -8.650309562683105

Token 124: '_MAX' (ID: 15267)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0033539244905114174
    2. '
' → logprob: -5.753354072570801
    3. 'class' → logprob: -9.3783540725708
    4. '

' → logprob: -10.1283540725708
    5. '\' → logprob: -11.6283540725708
    6. 'n' → logprob: -11.7533540725708
    7. ' def' → logprob: -12.0033540725708
    8. '#' → logprob: -12.2533540725708
    9. '  
' → logprob: -12.3783540725708
    10. ' 
' → logprob: -12.5033540725708

Token 125: ' =' (ID: 314)
  Prédit: '_N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_N' → logprob: -0.9509738087654114
    2. '_DEPTH' → logprob: -1.5759737491607666
    3. 'N' → logprob: -1.8259737491607666
    4. ' =' → logprob: -2.5759737491607666
    5. '_SIZE' → logprob: -3.2009737491607666
    6. '_LEN' → logprob: -3.8259737491607666
    7. '_VAL' → logprob: -4.200973987579346
    8. 'SIZE' → logprob: -4.325973987579346
    9. '_STACK' → logprob: -4.450973987579346
    10. '_VALUE' → logprob: -4.575973987579346

Token 126: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0991707369685173
    2. ' ' → logprob: -2.474170684814453
    3. '100' → logprob: -5.099170684814453
    4. 'int' → logprob: -6.724170684814453
    5. '1' → logprob: -6.974170684814453
    6. 'float' → logprob: -7.474170684814453
    7. '2' → logprob: -7.599170684814453
    8. '987' → logprob: -8.224170684814453
    9. '922' → logprob: -8.974170684814453
    10. '999' → logprob: -9.099170684814453

Token 127: '400' (ID: 4812)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0030563808977603912
    2. '1' → logprob: -7.253056526184082
    3. 'int' → logprob: -7.378056526184082
    4. '100' → logprob: -7.378056526184082
    5. 'float' → logprob: -7.628056526184082
    6. '2' → logprob: -7.753056526184082
    7. 'sys' → logprob: -9.128056526184082
    8. '200' → logprob: -11.503056526184082
    9. ' ' → logprob: -11.628056526184082
    10. '3' → logprob: -11.878056526184082

Token 128: '020' (ID: 19164)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.33571845293045044
    2. '000' → logprob: -1.8357183933258057
    3. '00' → logprob: -2.0857183933258057
    4. 'def' → logprob: -8.210718154907227
    5. '1' → logprob: -8.710718154907227
    6. '005' → logprob: -9.398218154907227
    7. '2' → logprob: -9.460718154907227
    8. '_' → logprob: -9.585718154907227
    9. '001' → logprob: -9.710718154907227
    10. '

' → logprob: -9.773218154907227

Token 129: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022397082298994064
    2. '

' → logprob: -4.272397041320801
    3. '
' → logprob: -5.522397041320801
    4. 'def' → logprob: -6.272397041320801
    5. '\n' → logprob: -6.397397041320801
    6. ' 
' → logprob: -8.5223970413208
    7. '  
' → logprob: -9.1473970413208
    8. '' → logprob: -9.7723970413208
    9. 'newline' → logprob: -9.7723970413208
    10. '\' → logprob: -10.1473970413208

Token 130: 'ka' (ID: 1854)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.6029523611068726
    2. 'fac' → logprob: -1.2279523611068726
    3. 'factor' → logprob: -2.227952480316162
    4. 'def' → logprob: -4.102952480316162
    5. 'class' → logprob: -4.727952480316162
    6. 'dp' → logprob: -4.852952480316162
    7. 'n' → logprob: -4.977952480316162
    8. 'pow' → logprob: -5.727952480316162
    9. '_fac' → logprob: -5.852952480316162
    10. '_fact' → logprob: -6.352952480316162

Token 131: 'ijo' (ID: 11585)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.102683663368225
    2. 'ck' → logprob: -1.852683663368225
    3. 'is' → logprob: -1.977683663368225
    4. 'pow' → logprob: -3.3526835441589355
    5. 'k' → logprob: -3.8526835441589355
    6. 'wa' → logprob: -4.1026835441589355
    7. 'kai' → logprob: -4.2276835441589355
    8. 'n' → logprob: -4.2276835441589355
    9. 'm' → logprob: -4.4776835441589355
    10. '_factor' → logprob: -4.4776835441589355

Token 132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5457141399383545
    2. '=' → logprob: -0.9207141399383545
    3. 's' → logprob: -4.045714378356934
    4. '=[' → logprob: -5.420714378356934
    5. '[' → logprob: -9.295714378356934
    6. '=[]' → logprob: -9.545714378356934
    7. '=_' → logprob: -9.795714378356934
    8. '_=' → logprob: -10.170714378356934
    9. '_' → logprob: -10.295714378356934
    10. '_s' → logprob: -11.295714378356934

Token 133: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0019287518225610256
    2. ' [' → logprob: -6.251928806304932
    3. '1' → logprob: -17.001928329467773
    4. ' ' → logprob: -17.126928329467773
    5. '[Math' → logprob: -17.376928329467773
    6. '[int' → logprob: -18.001928329467773
    7. '   ' → logprob: -18.626928329467773
    8. '[len' → logprob: -18.751928329467773
    9. 'math' → logprob: -18.876928329467773
    10. '[i' → logprob: -19.376928329467773

Token 134: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.250000953674316
    3. '0' → logprob: -14.750000953674316
    4. ']' → logprob: -15.875000953674316
    5. 'None' → logprob: -16.750001907348633
    6. '```' → logprob: -18.125001907348633
    7. '-' → logprob: -18.875001907348633
    8. '   ' → logprob: -19.000001907348633
    9. '...' → logprob: -20.000001907348633
    10. ')' → logprob: -20.125001907348633

Token 135: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0021282529924064875
    2. ']
' → logprob: -6.2521281242370605
    3. ']*(' → logprob: -9.252128601074219
    4. ']*' → logprob: -9.377128601074219
    5. ',' → logprob: -11.502128601074219
    6. ']
' → logprob: -12.877128601074219
    7. ']

' → logprob: -12.877128601074219
    8. ']int' → logprob: -13.127128601074219
    9. ']+' → logprob: -14.127128601074219
    10. '1' → logprob: -15.377128601074219

Token 136: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1870637983083725
    2. '<|end|>' → logprob: -2.812063694000244
    3. ' for' → logprob: -2.937063694000244
    4. ',' → logprob: -3.562063694000244
    5. '*' → logprob: -3.687063694000244
    6. 'import' → logprob: -7.437063694000244
    7. 'while' → logprob: -7.562063694000244
    8. ')' → logprob: -7.562063694000244
    9. '
' → logprob: -7.937063694000244
    10. ',
' → logprob: -8.062064170837402

Token 137: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3132705092430115
    2. 'i' → logprob: -1.3132705688476562
    3. '_i' → logprob: -12.313270568847656
    4. '	i' → logprob: -13.438270568847656
    5. '_' → logprob: -13.813270568847656
    6. ' ' → logprob: -14.063270568847656
    7. ' _' → logprob: -14.313270568847656
    8. 'x' → logprob: -15.688270568847656
    9. ' ' → logprob: -16.563270568847656
    10. 'I' → logprob: -16.813270568847656

Token 138: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029769930988550186
    2. 'in' → logprob: -3.5297698974609375
    3. ' ' → logprob: -11.279769897460938
    4. 'n' → logprob: -13.654769897460938
    5. ',' → logprob: -14.029769897460938
    6. '_in' → logprob: -14.279769897460938
    7. ' i' → logprob: -14.279769897460938
    8. '1' → logprob: -14.404769897460938
    9. '	in' → logprob: -14.529769897460938
    10. 'In' → logprob: -15.029769897460938

Token 139: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20141683518886566
    2. 'range' → logprob: -1.7014168500900269
    3. '(range' → logprob: -13.451416969299316
    4. ' ' → logprob: -13.826416969299316
    5. '	range' → logprob: -13.951416969299316
    6. '_range' → logprob: -16.076416015625
    7. '   ' → logprob: -17.576416015625
    8. '  ' → logprob: -17.701416015625
    9. ' xrange' → logprob: -17.826416015625
    10. '.range' → logprob: -17.826416015625

Token 140: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -16.0
    3. '(_' → logprob: -16.5
    4. ' ' → logprob: -19.5
    5. ' (' → logprob: -19.875
    6. '(
' → logprob: -20.0
    7. '_' → logprob: -22.0
    8. '2' → logprob: -23.0
    9. '[' → logprob: -23.5
    10. '   ' → logprob: -23.625

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003721622342709452
    2. '_MAX' → logprob: -8.125371932983398
    3. ' ' → logprob: -9.500371932983398
    4. '(' → logprob: -14.375371932983398
    5. '_' → logprob: -15.125371932983398
    6. '   ' → logprob: -16.2503719329834
    7. 'MAX' → logprob: -16.5003719329834
    8. '_Max' → logprob: -16.8753719329834
    9. '_max' → logprob: -17.0003719329834
    10. '  ' → logprob: -17.0003719329834

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00223185564391315
    2. ',_' → logprob: -6.127232074737549
    3. ' ,' → logprob: -10.00223159790039
    4. ',
' → logprob: -13.87723159790039
    5. '_MAX' → logprob: -15.25223159790039
    6. '_,' → logprob: -15.75223159790039
    7. ' ' → logprob: -17.12723159790039
    8. ' _' → logprob: -17.37723159790039
    9. ')(_' → logprob: -17.75223159790039
    10. ',

' → logprob: -17.75223159790039

Token 143: ' _' (ID: 1175)
  Prédit: '_MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MAX' → logprob: -0.0036225237417966127
    2. ' _' → logprob: -5.628622531890869
    3. '_max' → logprob: -11.253622055053711
    4. ' ' → logprob: -12.503622055053711
    5. '_Max' → logprob: -13.253622055053711
    6. '_' → logprob: -14.253622055053711
    7. '   ' → logprob: -14.378622055053711
    8. '_MIN' → logprob: -14.378622055053711
    9. '._' → logprob: -14.753622055053711
    10. '400' → logprob: -15.253622055053711

Token 144: 'MAX' (ID: 21911)
  Prédit: '_MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MAX' → logprob: -0.00023166877508629113
    2. 'MAX' → logprob: -8.375231742858887
    3. ' _' → logprob: -14.750231742858887
    4. ' MAX' → logprob: -15.000231742858887
    5. 'max' → logprob: -16.00023078918457
    6. '_MIN' → logprob: -17.00023078918457
    7. '_max' → logprob: -17.25023078918457
    8. '_SIZE' → logprob: -18.00023078918457
    9. '400' → logprob: -18.00023078918457
    10. '.MAX' → logprob: -18.62523078918457

Token 145: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1608983427286148
    2. '):
' → logprob: -1.9108983278274536
    3. ' ):' → logprob: -7.535898208618164
    4. ' ):
' → logprob: -9.410898208618164
    5. ':' → logprob: -10.535898208618164
    6. '+' → logprob: -10.910898208618164
    7. '):
' → logprob: -11.785898208618164
    8. ')' → logprob: -13.160898208618164
    9. ']:' → logprob: -13.785898208618164
    10. '1' → logprob: -14.785898208618164

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004590568598359823
    2. ' ka' → logprob: -5.5045905113220215
    3. 'ka' → logprob: -7.6295905113220215
    4. '```' → logprob: -12.25459098815918
    5. '	' → logprob: -12.37959098815918
    6. '   ' → logprob: -12.62959098815918
    7. '    
' → logprob: -13.12959098815918
    8. '  ' → logprob: -13.25459098815918
    9. ' ' → logprob: -13.62959098815918
    10. ':' → logprob: -13.81709098815918

Token 147: ' ka' (ID: 1908)
  Prédit: 'ka'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ka' (adapté à ' ka') → logprob: -0.19319118559360504
    2. ' ka' → logprob: -1.8181911706924438
    3. '   ' → logprob: -4.318191051483154
    4. ' ' → logprob: -12.068191528320312
    5. '-ka' → logprob: -12.443191528320312
    6. '  ' → logprob: -12.818191528320312
    7. '```' → logprob: -12.943191528320312
    8. 'kan' → logprob: -13.068191528320312
    9. 'k' → logprob: -13.318191528320312
    10. 'ja' → logprob: -13.568191528320312

Token 148: 'ijo' (ID: 11585)
  Prédit: 'ijo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijo' → logprob: -9.198043699143454e-05
    2. 'jo' → logprob: -9.375091552734375
    3. 'ij' → logprob: -12.000091552734375
    4. 'ijos' → logprob: -15.125091552734375
    5. 'i' → logprob: -15.375091552734375
    6. 'j' → logprob: -16.000091552734375
    7. '

' → logprob: -16.625091552734375
    8. 'ijoje' → logprob: -16.875091552734375
    9. 'ujo' → logprob: -17.000091552734375
    10. 'njo' → logprob: -17.250091552734375

Token 149: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00010592726175673306
    2. '.' → logprob: -9.250105857849121
    3. '.ap' → logprob: -12.750105857849121
    4. '.app' → logprob: -12.750105857849121
    5. ' .' → logprob: -13.000105857849121
    6. 'append' → logprob: -13.500105857849121
    7. '.extend' → logprob: -16.250106811523438
    8. '​.' → logprob: -16.625106811523438
    9. '_append' → logprob: -17.375106811523438
    10. '=' → logprob: -17.750106811523438

Token 150: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06196869537234306
    2. '((' → logprob: -2.8119688034057617
    3. '(i' → logprob: -14.561968803405762
    4. '(
' → logprob: -15.936968803405762
    5. '(k' → logprob: -16.686967849731445
    6. ' (' → logprob: -16.686967849731445
    7. '((_' → logprob: -16.936967849731445
    8. '(math' → logprob: -17.061967849731445
    9. '(((' → logprob: -17.311967849731445
    10. 'ka' → logprob: -17.811967849731445

Token 151: 'ka' (ID: 1854)
  Prédit: 'ka'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ka' → logprob: -0.2259434312582016
    2. '(' → logprob: -1.6009434461593628
    3. ' ka' → logprob: -7.850943565368652
    4. ' (' → logprob: -9.350943565368652
    5. '(i' → logprob: -11.600943565368652
    6. '(k' → logprob: -11.975943565368652
    7. '-ka' → logprob: -12.225943565368652
    8. '   ' → logprob: -12.350943565368652
    9. 'Ka' → logprob: -12.350943565368652
    10. 'i' → logprob: -12.350943565368652

Token 152: 'ijo' (ID: 11585)
  Prédit: 'ijo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijo' → logprob: -0.00016265720478259027
    2. '[i' → logprob: -9.625163078308105
    3. 'ijos' → logprob: -10.250163078308105
    4. 'jo' → logprob: -10.750163078308105
    5. 'ojo' → logprob: -11.125163078308105
    6. '[-' → logprob: -11.375163078308105
    7. '(i' → logprob: -12.625163078308105
    8. 'ajo' → logprob: -13.125163078308105
    9. '(' → logprob: -13.250163078308105
    10. '[(' → logprob: -13.750163078308105

Token 153: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00033558503491804004
    2. '[i' → logprob: -8.000335693359375
    3. '[' → logprob: -16.250335693359375
    4. '[
' → logprob: -17.375335693359375
    5. 'i' → logprob: -20.500335693359375
    6. ' [-' → logprob: -21.000335693359375
    7. '   ' → logprob: -22.125335693359375
    8. '-' → logprob: -22.375335693359375
    9. '```' → logprob: -22.625335693359375
    10. '[j' → logprob: -23.250335693359375

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -14.125000953674316
    3. 'i' → logprob: -14.375000953674316
    4. '
' → logprob: -17.125001907348633
    5. '   ' → logprob: -17.125001907348633
    6. ' i' → logprob: -18.625001907348633
    7. ']' → logprob: -19.125001907348633
    8. '-' → logprob: -19.125001907348633
    9. '```' → logprob: -19.750001907348633
    10. '  ' → logprob: -19.875001907348633

Token 155: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.009418758563697338
    2. ' *' → logprob: -4.759418964385986
    3. '*i' → logprob: -7.134418964385986
    4. ' ' → logprob: -12.384418487548828
    5. ']*' → logprob: -14.134418487548828
    6. ' ' → logprob: -14.634418487548828
    7. '*
' → logprob: -15.134418487548828
    8. '**' → logprob: -15.259418487548828
    9. ']' → logprob: -15.384418487548828
    10. ')*' → logprob: -15.509418487548828

Token 156: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.01218537986278534
    2. ' *' → logprob: -4.762185573577881
    3. '*i' → logprob: -5.637185573577881
    4. ' ' → logprob: -14.387185096740723
    5. '**' → logprob: -15.012185096740723
    6. '*
' → logprob: -15.137185096740723
    7. ' ' → logprob: -15.637185096740723
    8. '   ' → logprob: -16.51218605041504
    9. '*object' → logprob: -17.13718605041504
    10. '*

' → logprob: -17.38718605041504

Token 157: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0040785204619169235
    2. ' i' → logprob: -5.504078388214111
    3. '   ' → logprob: -16.629077911376953
    4. ' ' → logprob: -18.254077911376953
    5. '	i' → logprob: -18.254077911376953
    6. '  ' → logprob: -18.629077911376953
    7. '```' → logprob: -20.754077911376953
    8. ' ' → logprob: -21.504077911376953
    9. '    ' → logprob: -21.754077911376953
    10. 'import' → logprob: -22.129077911376953

Token 158: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6931512355804443
    2. ' %' → logprob: -0.6931512355804443
    3. ')' → logprob: -13.193151473999023
    4. '%A' → logprob: -14.443151473999023
    5. ' ' → logprob: -14.818151473999023
    6. ')%' → logprob: -14.818151473999023
    7. '%i' → logprob: -14.943151473999023
    8. '%m' → logprob: -15.443151473999023
    9. ' %=' → logprob: -15.943151473999023
    10. '%B' → logprob: -16.068151473999023

Token 159: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.5491004129871726e-05
    2. ' MOD' → logprob: -10.000045776367188
    3. '_MOD' → logprob: -19.875045776367188
    4. 'MO' → logprob: -21.250045776367188
    5. '.MOD' → logprob: -22.375045776367188
    6. 'MODE' → logprob: -24.125045776367188
    7. ' ' → logprob: -24.375045776367188
    8. 'MD' → logprob: -24.875045776367188
    9. 'MODULE' → logprob: -25.000045776367188
    10. '100' → logprob: -26.500045776367188

Token 160: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -13.625000953674316
    3. ')
' → logprob: -17.000001907348633
    4. '))' → logprob: -18.875001907348633
    5. ')#' → logprob: -19.500001907348633
    6. '),' → logprob: -20.000001907348633
    7. ')`' → logprob: -20.250001907348633
    8. ')

' → logprob: -20.875001907348633
    9. '）' → logprob: -21.250001907348633
    10. ',)' → logprob: -21.750001907348633

Token 161: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.004775311332195997
    2. 'inverse' → logprob: -7.004775524139404
    3. 'def' → logprob: -7.129775524139404
    4. 'ikin' → logprob: -7.254775524139404
    5. '_inv' → logprob: -7.379775524139404
    6. 'in' → logprob: -7.504775524139404
    7. 'rev' → logprob: -7.879775524139404
    8. 'ika' → logprob: -8.879775047302246
    9. 'ik' → logprob: -9.129775047302246
    10. 'ifact' → logprob: -9.129775047302246

Token 162: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1356171816587448
    2. ' =' → logprob: -2.135617256164551
    3. 's' → logprob: -5.635617256164551
    4. 'ka' → logprob: -6.010617256164551
    5. '=' → logprob: -6.260617256164551
    6. 'a' → logprob: -8.51061725616455
    7. '_fact' → logprob: -8.88561725616455
    8. '_factor' → logprob: -9.01061725616455
    9. 'fact' → logprob: -10.01061725616455
    10. '_mod' → logprob: -10.26061725616455

Token 163: 'ka' (ID: 1854)
  Prédit: 'ka'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ka' → logprob: -7.107425062713446e-06
    2. 'a' → logprob: -12.750006675720215
    3. '```' → logprob: -13.750006675720215
    4. '_' → logprob: -14.125006675720215
    5. 'kai' → logprob: -14.125006675720215
    6. ' =' → logprob: -15.000006675720215
    7. 'kaa' → logprob: -15.750006675720215
    8. '-ka' → logprob: -15.750006675720215
    9. 'Ka' → logprob: -15.875006675720215
    10. '=' → logprob: -16.12500762939453

Token 164: 'ijo' (ID: 11585)
  Prédit: 'ijo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijo' → logprob: -0.00020985817536711693
    2. 'jo' → logprob: -8.50020980834961
    3. 'ij' → logprob: -13.50020980834961
    4. '

' → logprob: -14.12520980834961
    5. 'j' → logprob: -14.25020980834961
    6. 'ijos' → logprob: -14.25020980834961
    7. '_' → logprob: -14.75020980834961
    8. 'njo' → logprob: -14.75020980834961
    9. 'ojo' → logprob: -14.87520980834961
    10. '```' → logprob: -15.12520980834961

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020763427019119
    2. '=' → logprob: -2.350207567214966
    3. 's' → logprob: -15.225207328796387
    4. ' ' → logprob: -15.350207328796387
    5. '=[' → logprob: -16.100208282470703
    6. ' =[' → logprob: -16.350208282470703
    7. '[' → logprob: -16.600208282470703
    8. '＝' → logprob: -16.725208282470703
    9. '.append' → logprob: -16.850208282470703
    10. '=[]' → logprob: -17.100208282470703

Token 166: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.014684110297821e-06
    2. ' [' → logprob: -11.625008583068848
    3. '[-' → logprob: -17.250009536743164
    4. '[i' → logprob: -17.750009536743164
    5. '[]' → logprob: -18.125009536743164
    6. '[k' → logprob: -18.375009536743164
    7. ' ' → logprob: -18.375009536743164
    8. '[len' → logprob: -18.375009536743164
    9. '[in' → logprob: -18.375009536743164
    10. '[_' → logprob: -18.875009536743164

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5941604690160602e-05
    2. 'None' → logprob: -11.125025749206543
    3. '0' → logprob: -11.625025749206543
    4. 'pow' → logprob: -14.000025749206543
    5. ']' → logprob: -14.500025749206543
    6. '```' → logprob: -14.625025749206543
    7. '-' → logprob: -15.375025749206543
    8. ' ' → logprob: -15.875025749206543
    9. '
' → logprob: -17.62502670288086
    10. '

' → logprob: -17.62502670288086

Token 168: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0003863438032567501
    2. ']
' → logprob: -8.000386238098145
    3. ',' → logprob: -10.250386238098145
    4. ']

' → logprob: -11.500386238098145
    5. ']
' → logprob: -12.750386238098145
    6. ' ]' → logprob: -13.875386238098145
    7. ')' → logprob: -14.500386238098145
    8. 'import' → logprob: -15.375386238098145
    9. '1' → logprob: -16.00038719177246
    10. ']*' → logprob: -16.25038719177246

Token 169: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: ' _' (ID: 1175)
  Prédit: '_MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MAX' → logprob: -3.047134305234067e-05
    2. '(_' → logprob: -10.750030517578125
    3. ' _' → logprob: -12.250030517578125
    4. '_SIZE' → logprob: -13.875030517578125
    5. '_max' → logprob: -14.375030517578125
    6. '400' → logprob: -14.625030517578125
    7. '_MIN' → logprob: -15.375030517578125
    8. '_' → logprob: -15.875030517578125
    9. 'MAX' → logprob: -15.875030517578125
    10. '_MASK' → logprob: -16.000030517578125

Token 171: 'MAX' (ID: 21911)
  Prédit: '_MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MAX' → logprob: -0.0019307781476527452
    2. 'MAX' → logprob: -6.2519307136535645
    3. '400' → logprob: -13.376931190490723
    4. 'max' → logprob: -15.251931190490723
    5. '(MAX' → logprob: -15.751931190490723
    6. ' MAX' → logprob: -16.251930236816406
    7. '/MAX' → logprob: -18.126930236816406
    8. '[MAX' → logprob: -18.126930236816406
    9. '.MAX' → logprob: -18.251930236816406
    10. '_SIZE' → logprob: -18.376930236816406

Token 172: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.009861035272479057
    2. ' for' → logprob: -5.134860992431641
    3. 'inv' → logprob: -5.884860992431641
    4. '<|end|>' → logprob: -7.634860992431641
    5. '
' → logprob: -8.38486099243164
    6. ')' → logprob: -8.63486099243164
    7. ',' → logprob: -9.63486099243164
    8. 'i' → logprob: -9.75986099243164
    9. '#' → logprob: -10.63486099243164
    10. 'import' → logprob: -10.63486099243164

Token 173: 'inv' (ID: 31086)
  Prédit: 'inv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -9.491498531133402e-06
    2. 'for' → logprob: -12.375009536743164
    3. 'def' → logprob: -13.000009536743164
    4. '_inv' → logprob: -13.750009536743164
    5. '#' → logprob: -13.875009536743164
    6. 'import' → logprob: -15.125009536743164
    7. ' inv' → logprob: -15.500009536743164
    8. 'inverse' → logprob: -15.625009536743164
    9. '.inv' → logprob: -16.000009536743164
    10. '(inv' → logprob: -16.250009536743164

Token 174: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00013262155698612332
    2. 'def' → logprob: -9.87513256072998
    3. 'import' → logprob: -10.25013256072998
    4. '_inv' → logprob: -11.62513256072998
    5. 'from' → logprob: -11.75013256072998
    6. '_factor' → logprob: -12.12513256072998
    7. '=' → logprob: -12.25013256072998
    8. '_val' → logprob: -12.62513256072998
    9. ' =' → logprob: -13.00013256072998
    10. '(' → logprob: -13.62513256072998

Token 175: 'ka' (ID: 1854)
  Prédit: 'ka'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ka' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.500000953674316
    3. 'ка' → logprob: -16.375
    4. '```' → logprob: -16.75
    5. ' ka' → logprob: -16.875
    6. 'ko' → logprob: -17.375
    7. '
' → logprob: -18.375
    8. 'kai' → logprob: -18.5
    9. 'ke' → logprob: -19.75
    10. 'kaa' → logprob: -19.75

Token 176: 'ijo' (ID: 11585)
  Prédit: 'ijo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijo' → logprob: -0.001417142222635448
    2. 'jo' → logprob: -6.62641716003418
    3. '_' → logprob: -10.50141716003418
    4. 'j' → logprob: -11.37641716003418
    5. 'ij' → logprob: -11.37641716003418
    6. 'jou' → logprob: -12.00141716003418
    7. 'njo' → logprob: -12.37641716003418
    8. 'ojo' → logprob: -12.62641716003418
    9. '```' → logprob: -12.62641716003418
    10. '

' → logprob: -12.87641716003418

Token 177: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.004675169009715319
    2. '[-' → logprob: -5.379675388336182
    3. '[_' → logprob: -10.004674911499023
    4. '=' → logprob: -12.879674911499023
    5. '```' → logprob: -13.254674911499023
    6. 'def' → logprob: -13.754674911499023
    7. ' [' → logprob: -13.879674911499023
    8. '[len' → logprob: -14.129674911499023
    9. '0' → logprob: -14.629674911499023
    10. 'import' → logprob: -14.879674911499023

Token 178: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. '0' → logprob: -14.18750286102295
    3. '2' → logprob: -14.31250286102295
    4. '-' → logprob: -14.43750286102295
    5. ' ' → logprob: -14.50000286102295
    6. '
' → logprob: -15.25000286102295
    7. '```' → logprob: -16.062503814697266
    8. ']' → logprob: -17.062503814697266
    9. '

' → logprob: -17.250003814697266
    10. '3' → logprob: -17.375003814697266

Token 179: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19419214129447937
    2. ']=' → logprob: -2.3191921710968018
    3. '=' → logprob: -2.5691921710968018
    4. ' =' → logprob: -6.944191932678223
    5. 'pow' → logprob: -7.694191932678223
    6. ')' → logprob: -9.944191932678223
    7. ' pow' → logprob: -10.444191932678223
    8. ')=' → logprob: -10.569191932678223
    9. ' ]' → logprob: -11.569191932678223
    10. '(pow' → logprob: -12.069191932678223

Token 180: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013848782982677221
    2. ' =' → logprob: -6.876384735107422
    3. 'pow' → logprob: -8.001384735107422
    4. ' pow' → logprob: -11.251384735107422
    5. '*=' → logprob: -13.376384735107422
    6. '(pow' → logprob: -14.126384735107422
    7. '=

' → logprob: -14.751384735107422
    8. '＝' → logprob: -15.501384735107422
    9. 'p' → logprob: -15.626384735107422
    10. '_pow' → logprob: -15.751384735107422

Token 181: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -8.180258191714529e-06
    2. ' pow' → logprob: -11.750008583068848
    3. '(pow' → logprob: -15.500008583068848
    4. '_pow' → logprob: -21.00000762939453
    5. '1' → logprob: -21.12500762939453
    6. 'power' → logprob: -21.37500762939453
    7. 'Pow' → logprob: -22.87500762939453
    8. '```' → logprob: -23.00000762939453
    9. '0' → logprob: -23.25000762939453
    10. '.pow' → logprob: -23.37500762939453

Token 182: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8624639324116288e-06
    2. 'ka' → logprob: -13.250001907348633
    3. 'Ka' → logprob: -19.375001907348633
    4. '((' → logprob: -20.250001907348633
    5. '-ka' → logprob: -20.250001907348633
    6. '(k' → logprob: -21.125001907348633
    7. '```' → logprob: -21.125001907348633
    8. '(
' → logprob: -21.125001907348633
    9. ' ka' → logprob: -21.375001907348633
    10. '	' → logprob: -21.500001907348633

Token 183: 'ka' (ID: 1854)
  Prédit: 'ka'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ka' → logprob: -0.3869078457355499
    2. '(' → logprob: -1.1369078159332275
    3. ' ka' → logprob: -11.511907577514648
    4. ')' → logprob: -11.511907577514648
    5. 'Ka' → logprob: -12.136907577514648
    6. '```' → logprob: -12.511907577514648
    7. ' ' → logprob: -13.011907577514648
    8. '-ka' → logprob: -13.636907577514648
    9. '  ' → logprob: -14.386907577514648
    10. '(
' → logprob: -14.636907577514648

Token 184: 'ijo' (ID: 11585)
  Prédit: 'ijo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijo' → logprob: -0.0015084355836734176
    2. 'jo' → logprob: -6.5015082359313965
    3. 'njo' → logprob: -13.376508712768555
    4. 'ij' → logprob: -14.001508712768555
    5. 'ojo' → logprob: -14.126508712768555
    6. 'ujo' → logprob: -14.126508712768555
    7. 'ijos' → logprob: -14.376508712768555
    8. 'ijoje' → logprob: -14.626508712768555
    9. 'jajo' → logprob: -15.876508712768555
    10. 'jou' → logprob: -15.876508712768555

Token 185: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.4021237802808173e-05
    2. '-' → logprob: -11.250014305114746
    3. '[_' → logprob: -13.875014305114746
    4. '(-' → logprob: -18.00001335144043
    5. '[' → logprob: -18.62501335144043
    6. '-_' → logprob: -19.75001335144043
    7. '```' → logprob: -20.50001335144043
    8. '[
' → logprob: -20.62501335144043
    9. '-M' → logprob: -22.00001335144043
    10. '[MAX' → logprob: -22.50001335144043

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -12.500007629394531
    3. '-' → logprob: -13.250007629394531
    4. '１' → logprob: -14.687507629394531
    5. '
' → logprob: -14.812507629394531
    6. '```' → logprob: -14.812507629394531
    7. '   ' → logprob: -15.250007629394531
    8. '

' → logprob: -15.812507629394531
    9. '2' → logprob: -16.00000762939453
    10. ' -' → logprob: -16.75000762939453

Token 187: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -7.822646693966817e-06
    2. ' ,' → logprob: -12.000007629394531
    3. ',M' → logprob: -14.125007629394531
    4. ',
' → logprob: -14.625007629394531
    5. 'MOD' → logprob: -15.250007629394531
    6. ',-' → logprob: -15.875007629394531
    7. '```' → logprob: -17.75000762939453
    8. ',module' → logprob: -18.37500762939453
    9. ',m' → logprob: -18.62500762939453
    10. '，' → logprob: -18.87500762939453

Token 188: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0005576779949478805
    2. ' MOD' → logprob: -7.500557899475098
    3. '-' → logprob: -12.375557899475098
    4. '_MOD' → logprob: -15.000557899475098
    5. '.MOD' → logprob: -16.87555694580078
    6. ' ' → logprob: -17.62555694580078
    7. ' -' → logprob: -17.62555694580078
    8. '-mod' → logprob: -18.37555694580078
    9. '```' → logprob: -18.50055694580078
    10. '-M' → logprob: -18.75055694580078

Token 189: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.611323624383658e-05
    2. ' -' → logprob: -9.625065803527832
    3. '−' → logprob: -19.12506675720215
    4. '```' → logprob: -20.50006675720215
    5. '–' → logprob: -21.25006675720215
    6. ' ' → logprob: -22.37506675720215
    7. '()-' → logprob: -22.62506675720215
    8. '－' → logprob: -22.87506675720215
    9. '2' → logprob: -23.37506675720215
    10. '{-' → logprob: -23.62506675720215

Token 190: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. '-' → logprob: -13.75000286102295
    3. '```' → logprob: -14.25000286102295
    4. ' ' → logprob: -15.50000286102295
    5. '
' → logprob: -15.62500286102295
    6. '

' → logprob: -15.87500286102295
    7. ' -' → logprob: -16.500001907348633
    8. '２' → logprob: -18.437501907348633
    9. '' → logprob: -18.812501907348633
    10. '   ' → logprob: -18.812501907348633

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004627360496670008
    2. ')' → logprob: -5.379627227783203
    3. ' ,' → logprob: -12.504627227783203
    4. ',)' → logprob: -13.254627227783203
    5. ',
' → logprob: -13.879627227783203
    6. ' ' → logprob: -16.379627227783203
    7. '),' → logprob: -16.504627227783203
    8. ',...' → logprob: -16.629627227783203
    9. ',",' → logprob: -17.004627227783203
    10. '```' → logprob: -17.254627227783203

Token 192: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0009115827269852161
    2. ' MOD' → logprob: -7.000911712646484
    3. ')' → logprob: -18.375911712646484
    4. '_MOD' → logprob: -18.750911712646484
    5. '.MOD' → logprob: -21.625911712646484
    6. '   ' → logprob: -22.125911712646484
    7. 'mod' → logprob: -22.125911712646484
    8. 'MO' → logprob: -22.250911712646484
    9. ' ' → logprob: -22.500911712646484
    10. '```' → logprob: -23.000911712646484

Token 193: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2015305757522583
    2. ')
' → logprob: -1.7015305757522583
    3. ')

' → logprob: -9.076530456542969
    4. ')
' → logprob: -12.826530456542969
    5. 'for' → logprob: -16.07653045654297
    6. ' )' → logprob: -16.95153045654297
    7. ')`' → logprob: -17.57653045654297
    8. ' )
' → logprob: -17.70153045654297
    9. ')

' → logprob: -17.70153045654297
    10. ')


' → logprob: -17.82653045654297

Token 194: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: 0.0
    2. ' for' → logprob: -19.25
    3. '
' → logprob: -23.25
    4. '```' → logprob: -23.875
    5. '	for' → logprob: -24.375
    6. 'i' → logprob: -24.5
    7. '#' → logprob: -24.875
    8. ')' → logprob: -24.875
    9. '   ' → logprob: -26.0
    10. 'For' → logprob: -26.625

Token 195: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03804183006286621
    2. ' i' → logprob: -3.288041830062866
    3. '	i' → logprob: -15.788042068481445
    4. ' ' → logprob: -16.288042068481445
    5. '   ' → logprob: -16.788042068481445
    6. '_i' → logprob: -17.163042068481445
    7. '  ' → logprob: -18.913042068481445
    8. '(i' → logprob: -20.038042068481445
    9. 'I' → logprob: -20.788042068481445
    10. '```' → logprob: -20.913042068481445

Token 196: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011052416637539864
    2. 'in' → logprob: -4.51105260848999
    3. ' ' → logprob: -13.261052131652832
    4. ' reversed' → logprob: -14.261052131652832
    5. 'range' → logprob: -14.386052131652832
    6. ' range' → logprob: -14.511052131652832
    7. '_' → logprob: -14.761052131652832
    8. ' i' → logprob: -14.761052131652832
    9. '   ' → logprob: -16.13605308532715
    10. ' _' → logprob: -16.26105308532715

Token 197: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0036171816755086184
    2. 're' → logprob: -5.753617286682129
    3. ' range' → logprob: -7.753617286682129
    4. ' reversed' → logprob: -11.503617286682129
    5. '(range' → logprob: -16.128616333007812
    6. 'reverse' → logprob: -18.003616333007812
    7. '   ' → logprob: -19.128616333007812
    8. '
' → logprob: -19.378616333007812
    9. '(re' → logprob: -19.378616333007812
    10. ' ' → logprob: -19.753616333007812

Token 198: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.00015669701679144055
    2. '_MAX' → logprob: -9.12515640258789
    3. ' _' → logprob: -12.00015640258789
    4. ' (_' → logprob: -12.25015640258789
    5. '((_' → logprob: -12.25015640258789
    6. '(' → logprob: -12.37515640258789
    7. '_BACK' → logprob: -12.62515640258789
    8. '_RANGE' → logprob: -12.62515640258789
    9. '_' → logprob: -12.75015640258789
    10. '_DOWN' → logprob: -13.75015640258789

Token 199: 'MAX' (ID: 21911)
  Prédit: '_MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MAX' → logprob: -6.682846287731081e-05
    2. 'MAX' → logprob: -9.625066757202148
    3. '-' → logprob: -15.375066757202148
    4. 'max' → logprob: -15.625066757202148
    5. '.MAX' → logprob: -16.75006675720215
    6. ' -' → logprob: -17.12506675720215
    7. '(MAX' → logprob: -17.12506675720215
    8. ' MAX' → logprob: -17.25006675720215
    9. ' _' → logprob: -17.25006675720215
    10. '+' → logprob: -17.62506675720215

Token 200: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0031777136027812958
    2. ' -' → logprob: -5.753177642822266
    3. '-_' → logprob: -17.753177642822266
    4. '_' → logprob: -18.628177642822266
    5. '_-' → logprob: -19.628177642822266
    6. '−' → logprob: -20.003177642822266
    7. ' ' → logprob: -20.253177642822266
    8. '   ' → logprob: -20.253177642822266
    9. '2' → logprob: -21.128177642822266
    10. '```' → logprob: -22.128177642822266

Token 201: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '1' → logprob: -17.25
    3. ' ' → logprob: -18.125
    4. '２' → logprob: -20.125
    5. '
' → logprob: -20.75
    6. '-' → logprob: -21.25
    7. '   ' → logprob: -21.5
    8. '```' → logprob: -21.625
    9. '۲' → logprob: -21.875
    10. '

' → logprob: -21.875

Token 202: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.125
    3. ' ' → logprob: -16.875
    4. '
' → logprob: -19.125
    5. '２' → logprob: -19.75
    6. '-' → logprob: -20.0
    7. '   ' → logprob: -20.375
    8. '```' → logprob: -20.375
    9. '

' → logprob: -20.625
    10. '۲' → logprob: -21.75

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.412610233994201e-05
    2. ' ,' → logprob: -9.500094413757324
    3. ',-' → logprob: -10.875094413757324
    4. '-' → logprob: -16.125093460083008
    5. ',
' → logprob: -17.125093460083008
    6. ' ,-' → logprob: -17.125093460083008
    7. '   ' → logprob: -17.625093460083008
    8. ' -' → logprob: -18.375093460083008
    9. '_,' → logprob: -18.375093460083008
    10. '1' → logprob: -18.875093460083008

Token 204: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0007145775598473847
    2. ' -' → logprob: -7.2507147789001465
    3. '0' → logprob: -12.500714302062988
    4. '   ' → logprob: -14.500714302062988
    5. ' ' → logprob: -14.875714302062988
    6. '  ' → logprob: -17.625715255737305
    7. '-_' → logprob: -18.500715255737305
    8. '-
' → logprob: -19.500715255737305
    9. '-re' → logprob: -19.875715255737305
    10. '    ' → logprob: -20.000715255737305

Token 205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.750000953674316
    3. '   ' → logprob: -15.500000953674316
    4. '
' → logprob: -16.0
    5. '

' → logprob: -17.5
    6. '```' → logprob: -17.75
    7. ' -' → logprob: -18.4375
    8. '１' → logprob: -18.625
    9. '  ' → logprob: -18.8125
    10. '
' → logprob: -19.0

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.286852345103398e-05
    2. '-' → logprob: -10.625042915344238
    3. ',-' → logprob: -11.125042915344238
    4. ' ,' → logprob: -12.750042915344238
    5. '   ' → logprob: -14.750042915344238
    6. '1' → logprob: -15.750042915344238
    7. ',
' → logprob: -15.875042915344238
    8. ' -' → logprob: -16.500041961669922
    9. '```' → logprob: -17.125041961669922
    10. ' ,-' → logprob: -18.375041961669922

Token 207: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.003178544342517853
    2. ' -' → logprob: -5.753178596496582
    3. '   ' → logprob: -14.503178596496582
    4. ' ' → logprob: -15.253178596496582
    5. '```' → logprob: -17.128177642822266
    6. '  ' → logprob: -17.628177642822266
    7. ',' → logprob: -17.878177642822266
    8. ')' → logprob: -18.128177642822266
    9. '	' → logprob: -18.878177642822266
    10. '):
' → logprob: -19.003177642822266

Token 208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.750003814697266
    3. '   ' → logprob: -14.625003814697266
    4. '
' → logprob: -16.750003814697266
    5. ')' → logprob: -17.375003814697266
    6. '  ' → logprob: -17.750003814697266
    7. '):
' → logprob: -18.062503814697266
    8. '```' → logprob: -18.187503814697266
    9. '-' → logprob: -18.687503814697266
    10. '2' → logprob: -18.875003814697266

Token 209: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11313299834728241
    2. '):' → logprob: -2.238132953643799
    3. '-' → logprob: -8.988133430480957
    4. '):
' → logprob: -9.613133430480957
    5. '   ' → logprob: -9.988133430480957
    6. ',' → logprob: -10.238133430480957
    7. ':' → logprob: -11.363133430480957
    8. ' ):
' → logprob: -11.488133430480957
    9. ' ):' → logprob: -12.613133430480957
    10. ')' → logprob: -12.613133430480957

Token 210: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007336281123571098
    2. 'inv' → logprob: -7.250733852386475
    3. ' inv' → logprob: -11.000733375549316
    4. '```' → logprob: -12.625733375549316
    5. '(inv' → logprob: -13.500733375549316
    6. '_inv' → logprob: -13.750733375549316
    7. 'in' → logprob: -14.625733375549316
    8. '	in' → logprob: -15.250733375549316
    9. '   ' → logprob: -15.500733375549316
    10. 'inverse' → logprob: -16.375734329223633

Token 211: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' (adapté à ' inv') → logprob: -0.0018377259839326143
    2. '   ' → logprob: -6.501837730407715
    3. ' inv' → logprob: -8.001837730407715
    4. '.inv' → logprob: -16.2518367767334
    5. ' ' → logprob: -16.6268367767334
    6. '(inv' → logprob: -16.6268367767334
    7. '
' → logprob: -16.8768367767334
    8. '  ' → logprob: -17.0018367767334
    9. '```' → logprob: -17.0018367767334
    10. '_inv' → logprob: -17.3768367767334

Token 212: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '_ke' → logprob: -19.0
    3. '```' → logprob: -19.25
    4. '[' → logprob: -19.625
    5. '‌' → logprob: -19.75
    6. '\' → logprob: -20.0
    7. '_inv' → logprob: -20.375
    8. '[i' → logprob: -20.5
    9. 'ka' → logprob: -20.625
    10. 'a' → logprob: -21.3125

Token 213: 'ka' (ID: 1854)
  Prédit: 'ka'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ka' → logprob: -0.04859418421983719
    2. '_' → logprob: -3.0485942363739014
    3. ' ka' → logprob: -12.42359447479248
    4. 'ika' → logprob: -14.92359447479248
    5. 'ка' → logprob: -14.92359447479248
    6. '```' → logprob: -15.04859447479248
    7. 'ko' → logprob: -15.29859447479248
    8. '[' → logprob: -15.67359447479248
    9. 'kai' → logprob: -15.67359447479248
    10. 'a' → logprob: -15.92359447479248

Token 214: 'ijo' (ID: 11585)
  Prédit: 'ijo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijo' → logprob: -0.04726414754986763
    2. 'jo' → logprob: -3.1722640991210938
    3. 'ojo' → logprob: -6.047264099121094
    4. 'jou' → logprob: -7.422264099121094
    5. '_' → logprob: -7.922264099121094
    6. 'joj' → logprob: -8.172264099121094
    7. '.append' → logprob: -8.922264099121094
    8. 'ujo' → logprob: -9.172264099121094
    9. '[j' → logprob: -9.422264099121094
    10. 'じ' → logprob: -9.547264099121094

Token 215: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.2378600735682994e-05
    2. '[' → logprob: -10.500032424926758
    3. '\[' → logprob: -13.000032424926758
    4. '```' → logprob: -14.250032424926758
    5. ' [' → logprob: -14.500032424926758
    6. '[
' → logprob: -14.625032424926758
    7. '[I' → logprob: -15.250032424926758
    8. '
' → logprob: -15.750032424926758
    9. '[next' → logprob: -16.625032424926758
    10. ' ' → logprob: -16.875032424926758

Token 216: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03956824168562889
    2. ' =' → logprob: -3.2895681858062744
    3. ']' → logprob: -6.5395684242248535
    4. ']=' → logprob: -9.914567947387695
    5. ')' → logprob: -10.539567947387695
    6. ')=' → logprob: -13.039567947387695
    7. '=i' → logprob: -14.664567947387695
    8. ' ]' → logprob: -14.664567947387695
    9. ',' → logprob: -14.914567947387695
    10. ' ' → logprob: -15.039567947387695

Token 217: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245595395565033
    2. ' =' → logprob: -3.7732455730438232
    3. '＝' → logprob: -17.148244857788086
    4. '=i' → logprob: -17.398244857788086
    5. '=

' → logprob: -18.648244857788086
    6. '=
' → logprob: -19.023244857788086
    7. '=int' → logprob: -19.398244857788086
    8. '=(' → logprob: -19.898244857788086
    9. '   ' → logprob: -20.023244857788086
    10. '=in' → logprob: -20.773244857788086

Token 218: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.062319666147232056
    2. '(inv' → logprob: -2.812319755554199
    3. ' inv' → logprob: -8.0623197555542
    4. '(in' → logprob: -11.0623197555542
    5. ' (' → logprob: -11.6873197555542
    6. '(' → logprob: -11.6873197555542
    7. 'in' → logprob: -13.5623197555542
    8. '.inv' → logprob: -13.9373197555542
    9. '_inv' → logprob: -14.8123197555542
    10. ' ' → logprob: -14.8123197555542

Token 219: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -5.824579784530215e-05
    2. 'inv' → logprob: -10.1250581741333
    3. 'ka' → logprob: -11.7500581741333
    4. '_inv' → logprob: -11.8750581741333
    5. '(inv' → logprob: -14.0000581741333
    6. '_ke' → logprob: -15.1250581741333
    7. 'kai' → logprob: -15.1250581741333
    8. '(' → logprob: -15.2500581741333
    9. '_ai' → logprob: -15.6250581741333
    10. '[' → logprob: -15.7500581741333

Token 220: 'ka' (ID: 1854)
  Prédit: 'ka'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ka' → logprob: -8.399378566537052e-05
    2. 'ko' → logprob: -9.625083923339844
    3. 'ja' → logprob: -11.500083923339844
    4. '_' → logprob: -13.250083923339844
    5. ' ka' → logprob: -14.000083923339844
    6. '```' → logprob: -14.000083923339844
    7. 'kai' → logprob: -14.125083923339844
    8. 'ка' → logprob: -14.125083923339844
    9. 'za' → logprob: -14.500083923339844
    10. 'ke' → logprob: -15.375083923339844

Token 221: 'ijo' (ID: 11585)
  Prédit: 'ijo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijo' → logprob: -0.005340963136404753
    2. 'jo' → logprob: -5.255341053009033
    3. 'ij' → logprob: -10.255340576171875
    4. 'ijos' → logprob: -10.755340576171875
    5. '_' → logprob: -10.880340576171875
    6. '[i' → logprob: -11.880340576171875
    7. 'ijoje' → logprob: -12.130340576171875
    8. 'j' → logprob: -12.630340576171875
    9. '[' → logprob: -12.630340576171875
    10. 'ojo' → logprob: -13.630340576171875

Token 222: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.625000953674316
    3. '[I' → logprob: -16.5
    4. 'i' → logprob: -16.875
    5. '[
' → logprob: -17.875
    6. ' [' → logprob: -18.75
    7. '
' → logprob: -18.75
    8. '[next' → logprob: -18.875
    9. '[++' → logprob: -19.125
    10. '{i' → logprob: -19.5

Token 223: '+' (ID: 10)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.062027398496866226
    2. '+' → logprob: -2.8120274543762207
    3. '[' → logprob: -10.187026977539062
    4. ' +' → logprob: -11.687026977539062
    5. '+i' → logprob: -12.312026977539062
    6. '1' → logprob: -12.812026977539062
    7. '[I' → logprob: -12.812026977539062
    8. '[
' → logprob: -13.687026977539062
    9. 'i' → logprob: -14.312026977539062
    10. '[next' → logprob: -14.937026977539062

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. ' ' → logprob: -13.375001907348633
    3. '```' → logprob: -17.000001907348633
    4. '   ' → logprob: -17.625001907348633
    5. '  ' → logprob: -19.125001907348633
    6. '
' → logprob: -19.375001907348633
    7. ']' → logprob: -19.625001907348633
    8. '１' → logprob: -20.312501907348633
    9. '১' → logprob: -20.687501907348633
    10. '-' → logprob: -20.687501907348633

Token 225: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0011055675568059087
    2. '*(' → logprob: -7.126105785369873
    3. ' *' → logprob: -8.751105308532715
    4. ']' → logprob: -9.126105308532715
    5. ' ' → logprob: -11.251105308532715
    6. '*i' → logprob: -12.376105308532715
    7. ')' → logprob: -12.376105308532715
    8. '*
' → logprob: -13.126105308532715
    9. '**' → logprob: -13.251105308532715
    10. '```' → logprob: -13.251105308532715

Token 226: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.006482661236077547
    2. ' *' → logprob: -5.2564826011657715
    3. '*(' → logprob: -6.7564826011657715
    4. '*i' → logprob: -9.88148307800293
    5. '*object' → logprob: -11.25648307800293
    6. ' ' → logprob: -11.38148307800293
    7. '**' → logprob: -13.13148307800293
    8. ' ' → logprob: -13.25648307800293
    9. '*j' → logprob: -13.50648307800293
    10. '   ' → logprob: -14.25648307800293

Token 227: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0033904027659446
    2. ' (' → logprob: -5.753390312194824
    3. '(' → logprob: -8.503390312194824
    4. '(ii' → logprob: -12.878390312194824
    5. '(
' → logprob: -13.003390312194824
    6. '[i' → logprob: -13.003390312194824
    7. '((' → logprob: -14.378390312194824
    8. '(max' → logprob: -14.878390312194824
    9. '(next' → logprob: -15.253390312194824
    10. '   ' → logprob: -15.503390312194824

Token 228: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006276909727603197
    2. '(i' → logprob: -5.131277084350586
    3. ' i' → logprob: -8.006277084350586
    4. ' (' → logprob: -11.506277084350586
    5. '[i' → logprob: -13.506277084350586
    6. '{i' → logprob: -13.631277084350586
    7. '(' → logprob: -13.881277084350586
    8. '   ' → logprob: -13.881277084350586
    9. '	i' → logprob: -15.381277084350586
    10. '
' → logprob: -17.131277084350586

Token 229: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001326433615759015
    2. ' +' → logprob: -6.626326560974121
    3. '+
' → logprob: -14.626326560974121
    4. '1' → logprob: -16.876325607299805
    5. '＋' → logprob: -17.126325607299805
    6. ' +
' → logprob: -18.376325607299805
    7. '+i' → logprob: -19.126325607299805
    8. '+

' → logprob: -19.626325607299805
    9. '()+' → logprob: -20.501325607299805
    10. ' ' → logprob: -20.626325607299805

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018196819291915745
    2. '+' → logprob: -8.625182151794434
    3. ' ' → logprob: -13.125182151794434
    4. ' +' → logprob: -16.000181198120117
    5. '
' → logprob: -16.125181198120117
    6. '```' → logprob: -16.375181198120117
    7. '+
' → logprob: -18.875181198120117
    8. '

' → logprob: -19.000181198120117
    9. '   ' → logprob: -19.625181198120117
    10. '۱' → logprob: -20.000181198120117

Token 231: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36581021547317505
    2. '%' → logprob: -1.6158101558685303
    3. ' %' → logprob: -2.2408101558685303
    4. ')%' → logprob: -6.740810394287109
    5. ' )' → logprob: -9.49081039428711
    6. '%)' → logprob: -13.36581039428711
    7. ']' → logprob: -13.49081039428711
    8. '   ' → logprob: -14.49081039428711
    9. ' %=' → logprob: -14.86581039428711
    10. ' ' → logprob: -14.99081039428711

Token 232: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1269284337759018
    2. '%' → logprob: -2.1269283294677734
    3. ' %=' → logprob: -16.126928329467773
    4. ')%' → logprob: -16.751928329467773
    5. '%i' → logprob: -17.126928329467773
    6. ')' → logprob: -17.376928329467773
    7. '   ' → logprob: -17.876928329467773
    8. ' ' → logprob: -17.876928329467773
    9. '%d' → logprob: -18.126928329467773
    10. '%c' → logprob: -18.626928329467773

Token 233: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.306760805164231e-05
    2. ' MOD' → logprob: -11.25001335144043
    3. '_MOD' → logprob: -21.25001335144043
    4. '.MOD' → logprob: -23.75001335144043
    5. 'MO' → logprob: -24.50001335144043
    6. 'MODULE' → logprob: -25.12501335144043
    7. 'MODE' → logprob: -25.62501335144043
    8. '```' → logprob: -25.75001335144043
    9. 'MD' → logprob: -25.87501335144043
    10. 'M' → logprob: -27.25001335144043

Token 234: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003710894088726491
    2. ')' → logprob: -8.000370979309082
    3. '
' → logprob: -11.000370979309082
    4. '```' → logprob: -11.625370979309082
    5. 'from' → logprob: -12.625370979309082
    6. ' def' → logprob: -12.625370979309082
    7. ')
' → logprob: -13.875370979309082
    8. '

' → logprob: -14.250370979309082
    9. 'import' → logprob: -14.375370979309082
    10. ']' → logprob: -15.500370979309082

Token 235: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2664456789934775e-06
    2. ')' → logprob: -13.750000953674316
    3. ' def' → logprob: -16.500001907348633
    4. '
' → logprob: -17.000001907348633
    5. '```' → logprob: -17.000001907348633
    6. '<|end|>' → logprob: -17.750001907348633
    7. '

' → logprob: -18.000001907348633
    8. ':def' → logprob: -19.375001907348633
    9. '#' → logprob: -19.500001907348633
    10. ']' → logprob: -19.500001907348633

Token 236: ' inv' (ID: 1827)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.3060472011566162
    2. ' n' → logprob: -1.9310472011566162
    3. 'comb' → logprob: -2.931047201156616
    4. 'n' → logprob: -3.056047201156616
    5. ' cmb' → logprob: -4.306047439575195
    6. 'cmb' → logprob: -6.056047439575195
    7. 'com' → logprob: -7.056047439575195
    8. ' combination' → logprob: -7.306047439575195
    9. ' mod' → logprob: -8.556047439575195
    10. 'C' → logprob: -9.431047439575195

Token 237: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12003365159034729
    2. '(n' → logprob: -2.4950337409973145
    3. '_factor' → logprob: -4.1200337409973145
    4. '(a' → logprob: -4.9950337409973145
    5. 'a' → logprob: -5.7450337409973145
    6. 'def' → logprob: -7.1200337409973145
    7. '_fac' → logprob: -7.4950337409973145
    8. '_fact' → logprob: -7.4950337409973145
    9. '_pow' → logprob: -7.8700337409973145
    10. '_mod' → logprob: -8.245033264160156

Token 238: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.31974712014198303
    2. ':' → logprob: -1.3197470903396606
    3. ')' → logprob: -5.069746971130371
    4. '):
' → logprob: -8.694746971130371
    5. ':int' → logprob: -11.944746971130371
    6. ' ):' → logprob: -13.194746971130371
    7. ' :' → logprob: -13.569746971130371
    8. ',' → logprob: -14.319746971130371
    9. '}:' → logprob: -14.444746971130371
    10. ')->' → logprob: -14.569746971130371

Token 239: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.0948158382670954e-05
    2. ' int' → logprob: -10.625030517578125
    3. ')' → logprob: -12.000030517578125
    4. '   ' → logprob: -15.375030517578125
    5. 'x' → logprob: -16.500030517578125
    6. '(int' → logprob: -17.375030517578125
    7. ':int' → logprob: -17.750030517578125
    8. 'def' → logprob: -18.000030517578125
    9. '):' → logprob: -18.375030517578125
    10. '	int' → logprob: -18.875030517578125

Token 240: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. '):' → logprob: -14.000001907348633
    3. ' )' → logprob: -14.750001907348633
    4. ')->' → logprob: -15.125001907348633
    5. ':' → logprob: -17.000001907348633
    6. '):
' → logprob: -17.250001907348633
    7. '   ' → logprob: -18.125001907348633
    8. '`)' → logprob: -18.875001907348633
    9. '):
' → logprob: -19.375001907348633
    10. '）' → logprob: -19.375001907348633

Token 241: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7464656829833984
    2. '->' → logprob: -0.9964656829833984
    3. ' ->' → logprob: -2.2464656829833984
    4. ')' → logprob: -2.9964656829833984
    5. ')->' → logprob: -7.246465682983398
    6. '   ' → logprob: -8.496465682983398
    7. ':int' → logprob: -9.871465682983398
    8. '):' → logprob: -10.371465682983398
    9. '>' → logprob: -11.371465682983398
    10. ' ' → logprob: -12.371465682983398

Token 242: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005667338264174759
    2. ' int' → logprob: -7.5005669593811035
    3. 'pow' → logprob: -11.625566482543945
    4. '(int' → logprob: -12.500566482543945
    5. '[int' → logprob: -13.875566482543945
    6. ' pow' → logprob: -16.625566482543945
    7. ':int' → logprob: -17.250566482543945
    8. '	int' → logprob: -17.625566482543945
    9. '<int' → logprob: -17.875566482543945
    10. '   ' → logprob: -19.125566482543945

Token 243: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014585316239390522
    2. ':
' → logprob: -8.87514591217041
    3. ':return' → logprob: -12.75014591217041
    4. '):' → logprob: -13.12514591217041
    5. '   ' → logprob: -14.50014591217041
    6. ':
' → logprob: -15.75014591217041
    7. ' :' → logprob: -16.000144958496094
    8. ')' → logprob: -16.500144958496094
    9. '):
' → logprob: -17.000144958496094
    10. '():' → logprob: -17.125144958496094

Token 244: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002479700604453683
    2. ' return' → logprob: -6.002479553222656
    3. 'return' → logprob: -12.627479553222656
    4. '   ' → logprob: -14.752479553222656
    5. '	return' → logprob: -15.252479553222656
    6. '
' → logprob: -16.377479553222656
    7. '```' → logprob: -17.502479553222656
    8. '    ' → logprob: -17.877479553222656
    9. '   ' → logprob: -18.127479553222656
    10. '       ' → logprob: -18.752479553222656

Token 245: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0491224080324173
    2. 'pow' → logprob: -3.0491223335266113
    3. '   ' → logprob: -7.549122333526611
    4. ' return' → logprob: -11.79912281036377
    5. '	return' → logprob: -14.67412281036377
    6. '```' → logprob: -15.79912281036377
    7. ' pow' → logprob: -16.174121856689453
    8. 'eturn' → logprob: -17.549121856689453
    9. 'print' → logprob: -17.674121856689453
    10. 'power' → logprob: -18.049121856689453

Token 246: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -2.339278580620885e-06
    2. ' pow' → logprob: -13.000001907348633
    3. '(pow' → logprob: -17.875001907348633
    4. '   ' → logprob: -21.625001907348633
    5. '_pow' → logprob: -22.125001907348633
    6. 'power' → logprob: -23.125001907348633
    7. 'pw' → logprob: -23.125001907348633
    8. 'p' → logprob: -23.125001907348633
    9. 'Pow' → logprob: -23.750001907348633
    10. '.pow' → logprob: -24.000001907348633

Token 247: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0024775585625320673
    2. '(' → logprob: -6.002477645874023
    3. '(
' → logprob: -13.627477645874023
    4. 'x' → logprob: -14.627477645874023
    5. '<|end|>' → logprob: -16.502477645874023
    6. '(token' → logprob: -17.002477645874023
    7. '(xhr' → logprob: -18.127477645874023
    8. '(xs' → logprob: -18.877477645874023
    9. '<|end|>' → logprob: -19.002477645874023
    10. '(user' → logprob: -19.002477645874023

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.219262624857947e-05
    2. ' ,' → logprob: -10.125072479248047
    3. 'MOD' → logprob: -10.375072479248047
    4. ' MOD' → logprob: -14.500072479248047
    5. '   ' → logprob: -15.625072479248047
    6. ',M' → logprob: -16.375072479248047
    7. ',
' → logprob: -17.125072479248047
    8. '_MOD' → logprob: -17.750072479248047
    9. '2' → logprob: -17.750072479248047
    10. 'mod' → logprob: -17.875072479248047

Token 249: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -9.372294698550832e-06
    2. ' MOD' → logprob: -11.625009536743164
    3. '.MOD' → logprob: -15.500009536743164
    4. '_MOD' → logprob: -16.125009536743164
    5. '-' → logprob: -17.875009536743164
    6. '```' → logprob: -19.500009536743164
    7. '   ' → logprob: -20.000009536743164
    8. ' ' → logprob: -20.250009536743164
    9. 'mod' → logprob: -20.750009536743164
    10. '
' → logprob: -20.750009536743164

Token 250: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00038014890742488205
    2. ' -' → logprob: -7.875380039215088
    3. '−' → logprob: -20.25037956237793
    4. '```' → logprob: -20.50037956237793
    5. '   ' → logprob: -21.75037956237793
    6. '2' → logprob: -22.00037956237793
    7. '–' → logprob: -22.12537956237793
    8. ' ' → logprob: -22.25037956237793
    9. '-
' → logprob: -23.00037956237793
    10. '()-' → logprob: -23.12537956237793

Token 251: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. '-' → logprob: -14.750000953674316
    3. '```' → logprob: -15.625000953674316
    4. ' ' → logprob: -16.312501907348633
    5. '9' → logprob: -16.875001907348633
    6. '
' → logprob: -17.687501907348633
    7. '۲' → logprob: -17.750001907348633
    8. '   ' → logprob: -17.812501907348633
    9. ')' → logprob: -18.000001907348633
    10. '' → logprob: -18.062501907348633

Token 252: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2814801037311554
    2. ')' → logprob: -1.406480073928833
    3. ' ,' → logprob: -8.531479835510254
    4. ' )' → logprob: -9.031479835510254
    5. '   ' → logprob: -12.156479835510254
    6. ',
' → logprob: -12.531479835510254
    7. '}' → logprob: -13.656479835510254
    8. ',)' → logprob: -14.656479835510254
    9. ' ' → logprob: -14.781479835510254
    10. ')
' → logprob: -15.031479835510254

Token 253: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0001238004770129919
    2. ' MOD' → logprob: -9.000123977661133
    3. ')' → logprob: -15.000123977661133
    4. '_MOD' → logprob: -17.375123977661133
    5. 'Mod' → logprob: -19.625123977661133
    6. '.MOD' → logprob: -19.875123977661133
    7. 'MO' → logprob: -21.000123977661133
    8. '```' → logprob: -22.000123977661133
    9. '   ' → logprob: -22.125123977661133
    10. '10' → logprob: -22.250123977661133

Token 254: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.000000953674316
    3. ' )' → logprob: -17.25
    4. ')

' → logprob: -18.25
    5. ')return' → logprob: -18.5
    6. '),' → logprob: -19.75
    7. ')`' → logprob: -19.875
    8. '}' → logprob: -20.125
    9. ')#' → logprob: -20.25
    10. '）' → logprob: -20.5

Token 255: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.782141569303349e-05
    2. '
' → logprob: -9.87509822845459
    3. '<|end|>' → logprob: -10.62509822845459
    4. ')' → logprob: -11.75009822845459
    5. '

' → logprob: -12.25009822845459
    6. ' def' → logprob: -12.37509822845459
    7. '```' → logprob: -13.12509822845459
    8. ':def' → logprob: -14.12509822845459
    9. '#' → logprob: -14.25009822845459
    10. '<|end|>' → logprob: -14.62509822845459

Token 256: ' n' (ID: 297)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.35410425066947937
    2. 'comb' → logprob: -2.3541042804718018
    3. 'n' → logprob: -2.4791042804718018
    4. ' n' → logprob: -2.6041042804718018
    5. ' cmb' → logprob: -3.4791042804718018
    6. 'cmb' → logprob: -4.854104042053223
    7. 'com' → logprob: -6.604104042053223
    8. 'choose' → logprob: -6.729104042053223
    9. ' combination' → logprob: -6.979104042053223
    10. ' choose' → logprob: -7.354104042053223

Token 257: 'Pk' (ID: 64138)
  Prédit: 'Cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Cr' → logprob: -0.0849447101354599
    2. 'cr' → logprob: -3.084944725036621
    3. 'C' → logprob: -3.334944725036621
    4. 'ck' → logprob: -10.584944725036621
    5. 'CR' → logprob: -11.084944725036621
    6. '_cr' → logprob: -11.584944725036621
    7. '_choose' → logprob: -11.709944725036621
    8. '!' → logprob: -11.959944725036621
    9. 'def' → logprob: -12.209944725036621
    10. 'choose' → logprob: -12.459944725036621

Token 258: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8631464242935181
    2. '(x' → logprob: -0.8631464242935181
    3. '(n' → logprob: -1.863146424293518
    4. '(k' → logprob: -6.9881463050842285
    5. '(i' → logprob: -9.488146781921387
    6. 'def' → logprob: -10.488146781921387
    7. '(a' → logprob: -10.613146781921387
    8. '(p' → logprob: -10.988146781921387
    9. '(num' → logprob: -10.988146781921387
    10. ' (' → logprob: -11.113146781921387

Token 259: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008859666995704174
    2. ':' → logprob: -4.758859634399414
    3. ':int' → logprob: -9.008859634399414
    4. ',k' → logprob: -9.758859634399414
    5. ' ,' → logprob: -10.383859634399414
    6. ',int' → logprob: -11.258859634399414
    7. ',n' → logprob: -11.758859634399414
    8. ',
' → logprob: -12.383859634399414
    9. 'int' → logprob: -13.383859634399414
    10. ')' → logprob: -13.633859634399414

Token 260: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0028324576560407877
    2. ' int' → logprob: -5.877832412719727
    3. ',' → logprob: -10.752832412719727
    4. ':int' → logprob: -13.127832412719727
    5. ',int' → logprob: -13.252832412719727
    6. '[int' → logprob: -14.002832412719727
    7. 'n' → logprob: -14.877832412719727
    8. '(int' → logprob: -14.877832412719727
    9. '<int' → logprob: -15.627832412719727
    10. '=int' → logprob: -15.752832412719727

Token 261: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.13388703338569e-06
    2. ',k' → logprob: -12.250009536743164
    3. ' ,' → logprob: -12.375009536743164
    4. ',n' → logprob: -18.000009536743164
    5. ',int' → logprob: -18.125009536743164
    6. ',
' → logprob: -18.875009536743164
    7. ',p' → logprob: -19.500009536743164
    8. 'def' → logprob: -19.875009536743164
    9. ')' → logprob: -20.375009536743164
    10. 'k' → logprob: -20.750009536743164

Token 262: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0006347587914206088
    2. ' k' → logprob: -7.375634670257568
    3. 'r' → logprob: -11.750635147094727
    4. '```' → logprob: -16.625635147094727
    5. 'p' → logprob: -17.000635147094727
    6. '
' → logprob: -17.125635147094727
    7. ' r' → logprob: -17.250635147094727
    8. ' ' → logprob: -17.625635147094727
    9. 'def' → logprob: -17.750635147094727
    10. '	k' → logprob: -18.000635147094727

Token 263: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016935378313064575
    2. ':' → logprob: -4.266935348510742
    3. '):' → logprob: -5.891935348510742
    4. '):
' → logprob: -12.391935348510742
    5. '   ' → logprob: -14.641935348510742
    6. ':int' → logprob: -14.641935348510742
    7. ',' → logprob: -14.766935348510742
    8. ' )' → logprob: -15.266935348510742
    9. ')->' → logprob: -15.516935348510742
    10. ')
' → logprob: -16.266935348510742

Token 264: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.001437493017874658
    2. ' int' → logprob: -6.626437664031982
    3. ')' → logprob: -9.126437187194824
    4. ':int' → logprob: -13.626437187194824
    5. '[int' → logprob: -13.876437187194824
    6. ']int' → logprob: -16.00143814086914
    7. '):
' → logprob: -16.12643814086914
    8. '(int' → logprob: -16.25143814086914
    9. '):' → logprob: -16.37643814086914
    10. '=int' → logprob: -16.75143814086914

Token 265: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '):' → logprob: -14.250000953674316
    3. ' )' → logprob: -15.625000953674316
    4. ')
' → logprob: -18.375
    5. ')->' → logprob: -18.875
    6. ':' → logprob: -19.0
    7. ',)' → logprob: -19.125
    8. '`)' → logprob: -19.25
    9. '):
' → logprob: -20.125
    10. '   ' → logprob: -20.375

Token 266: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.18711896240711212
    2. ')' → logprob: -2.5621190071105957
    3. ' ->' → logprob: -2.6871190071105957
    4. ':' → logprob: -3.6871190071105957
    5. ')->' → logprob: -8.312118530273438
    6. '>' → logprob: -9.812118530273438
    7. '   ' → logprob: -10.437118530273438
    8. ':int' → logprob: -11.187118530273438
    9. '-' → logprob: -11.437118530273438
    10. ']' → logprob: -11.687118530273438

Token 267: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0005333751323632896
    2. ' int' → logprob: -7.625533580780029
    3. '0' → logprob: -10.250533103942871
    4. '(int' → logprob: -11.750533103942871
    5. ' ' → logprob: -14.375533103942871
    6. '   ' → logprob: -14.500533103942871
    7. '[int' → logprob: -15.375533103942871
    8. '1' → logprob: -15.500533103942871
    9. 'math' → logprob: -15.750533103942871
    10. ':int' → logprob: -15.750533103942871

Token 268: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.107425062713446e-06
    2. ':
' → logprob: -12.500006675720215
    3. '):' → logprob: -13.250006675720215
    4. ':return' → logprob: -13.625006675720215
    5. ':**' → logprob: -16.00000762939453
    6. '   ' → logprob: -16.25000762939453
    7. ':def' → logprob: -16.37500762939453
    8. ' :' → logprob: -17.12500762939453
    9. ':
' → logprob: -17.75000762939453
    10. ')' → logprob: -17.75000762939453

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.039174679666757584
    2. 'if' → logprob: -3.289174795150757
    3. ' if' → logprob: -7.039174556732178
    4. 'return' → logprob: -8.289175033569336
    5. '   ' → logprob: -13.164175033569336
    6. '	if' → logprob: -13.539175033569336
    7. ' return' → logprob: -13.914175033569336
    8. 'res' → logprob: -15.664175033569336
    9. 'result' → logprob: -16.289175033569336
    10. '```' → logprob: -16.789175033569336

Token 270: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1269584596157074
    2. 'return' → logprob: -2.1269583702087402
    3. '   ' → logprob: -10.751958847045898
    4. ' if' → logprob: -11.751958847045898
    5. ' return' → logprob: -13.751958847045898
    6. '
' → logprob: -17.7519588470459
    7. '```' → logprob: -18.2519588470459
    8. '	if' → logprob: -18.6269588470459
    9. '	return' → logprob: -19.0019588470459
    10. 'assert' → logprob: -19.8769588470459

Token 271: ' ' (ID: 220)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.3552512526512146
    2. 'k' → logprob: -1.2302513122558594
    3. ' n' → logprob: -5.105251312255859
    4. 'n' → logprob: -7.355251312255859
    5. ' not' → logprob: -9.73025131225586
    6. '	k' → logprob: -11.60525131225586
    7. ' ' → logprob: -12.60525131225586
    8. '(k' → logprob: -13.23025131225586
    9. '   ' → logprob: -13.48025131225586
    10. '```' → logprob: -13.85525131225586

Token 272: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0003143704670947045
    2. 'n' → logprob: -8.125314712524414
    3. ' k' → logprob: -11.000314712524414
    4. 'not' → logprob: -14.375314712524414
    5. '   ' → logprob: -14.875314712524414
    6. '0' → logprob: -15.000314712524414
    7. '(k' → logprob: -16.500314712524414
    8. ' n' → logprob: -16.500314712524414
    9. '```' → logprob: -16.500314712524414
    10. '	k' → logprob: -16.875314712524414

Token 273: ' <=' (ID: 5017)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6064895987510681
    2. ' >' → logprob: -0.8564895987510681
    3. ' <=' → logprob: -4.481489658355713
    4. ' <' → logprob: -4.856489658355713
    5. '<' → logprob: -5.106489658355713
    6. '<=' → logprob: -5.731489658355713
    7. ' ' → logprob: -7.356489658355713
    8. ' k' → logprob: -8.106489181518555
    9. '<n' → logprob: -8.356489181518555
    10. ' >=' → logprob: -8.981489181518555

Token 274: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00020354038861114532
    2. ' k' → logprob: -8.500203132629395
    3. '	k' → logprob: -17.00020408630371
    4. '   ' → logprob: -17.25020408630371
    5. 'n' → logprob: -17.87520408630371
    6. ' ' → logprob: -20.12520408630371
    7. '_k' → logprob: -20.37520408630371
    8. '  ' → logprob: -20.50020408630371
    9. ',k' → logprob: -20.50020408630371
    10. '=k' → logprob: -21.00020408630371

Token 275: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3134811222553253
    2. '<=' → logprob: -1.313481092453003
    3. ' and' → logprob: -8.563481330871582
    4. 'and' → logprob: -10.813481330871582
    5. '<' → logprob: -13.313481330871582
    6. 'le' → logprob: -13.813481330871582
    7. ')<=' → logprob: -13.813481330871582
    8. ' <' → logprob: -14.188481330871582
    9. ' ' → logprob: -14.563481330871582
    10. '[' → logprob: -14.688481330871582

Token 276: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.005233882926404476
    2. ' n' → logprob: -5.2552337646484375
    3. '	n' → logprob: -17.505233764648438
    4. ' ' → logprob: -20.005233764648438
    5. '   ' → logprob: -20.255233764648438
    6. ',n' → logprob: -22.005233764648438
    7. '```' → logprob: -22.005233764648438
    8. ')n' → logprob: -22.255233764648438
    9. '<|end|>' → logprob: -22.255233764648438
    10. '_n' → logprob: -22.380233764648438

Token 277: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14691466093063354
    2. ':' → logprob: -2.0219147205352783
    3. ' and' → logprob: -5.646914482116699
    4. '   ' → logprob: -7.771914482116699
    5. ':return' → logprob: -8.3969144821167
    6. ' :
' → logprob: -11.0219144821167
    7. '):
' → logprob: -11.3969144821167
    8. 'and' → logprob: -11.6469144821167
    9. ':
' → logprob: -12.0219144821167
    10. ':

' → logprob: -12.3969144821167

Token 278: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026568034663796425
    2. '   ' → logprob: -3.6515679359436035
    3. ' return' → logprob: -8.276568412780762
    4. ':return' → logprob: -12.651568412780762
    5. 'return' → logprob: -12.776568412780762
    6. '	return' → logprob: -12.776568412780762
    7. '	   ' → logprob: -13.776568412780762
    8. ':' → logprob: -13.901568412780762
    9. '    
' → logprob: -14.276568412780762
    10. ',' → logprob: -14.401568412780762

Token 279: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.11337026953697205
    2. '       ' → logprob: -2.363370180130005
    3. ' return' → logprob: -4.863370418548584
    4. '   ' → logprob: -5.238370418548584
    5. '	return' → logprob: -10.113369941711426
    6. ':return' → logprob: -13.488369941711426
    7. ' ' → logprob: -14.488369941711426
    8. '{return' → logprob: -15.113369941711426
    9. '     ' → logprob: -15.363369941711426
    10. '    ' → logprob: -15.363369941711426

Token 280: ' ka' (ID: 1908)
  Prédit: 'ka'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ka' → logprob: -0.0008590542711317539
    2. ' ka' → logprob: -7.250859260559082
    3. '(' → logprob: -8.875859260559082
    4. ' (' → logprob: -11.750859260559082
    5. ' ' → logprob: -14.500859260559082
    6. '   ' → logprob: -14.750859260559082
    7. '  ' → logprob: -15.750859260559082
    8. 'Ka' → logprob: -15.875859260559082
    9. '
' → logprob: -16.750858306884766
    10. 'kan' → logprob: -16.875858306884766

Token 281: 'ijo' (ID: 11585)
  Prédit: 'ijo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijo' → logprob: -1.664371848164592e-05
    2. 'jo' → logprob: -11.125016212463379
    3. 'ij' → logprob: -14.375016212463379
    4. 'ijos' → logprob: -14.625016212463379
    5. 'ijoje' → logprob: -14.875016212463379
    6. 'njo' → logprob: -16.125017166137695
    7. 'ijom' → logprob: -17.125017166137695
    8. '

' → logprob: -17.250017166137695
    9. 'ujo' → logprob: -17.750017166137695
    10. '[i' → logprob: -17.750017166137695

Token 282: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -9.088346359931165e-07
    2. 'n' → logprob: -14.125000953674316
    3. '[' → logprob: -15.875000953674316
    4. ' [' → logprob: -17.25
    5. '
' → logprob: -17.5
    6. '[
' → logprob: -17.5
    7. '	n' → logprob: -18.5
    8. '[k' → logprob: -19.125
    9. '   ' → logprob: -19.75
    10. '[-' → logprob: -20.875

Token 283: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.084206375409849e-05
    2. ']*' → logprob: -10.125041007995605
    3. '   ' → logprob: -14.750041007995605
    4. ' ]' → logprob: -15.125041007995605
    5. ']
' → logprob: -17.25004005432129
    6. ' ' → logprob: -18.25004005432129
    7. ']

' → logprob: -19.75004005432129
    8. ']%' → logprob: -20.12504005432129
    9. ' ' → logprob: -20.75004005432129
    10. '],' → logprob: -20.75004005432129

Token 284: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6932399868965149
    2. ' *' → logprob: -0.6932399868965149
    3. '   ' → logprob: -9.44324016571045
    4. ' ' → logprob: -11.94324016571045
    5. ' ' → logprob: -12.19324016571045
    6. '**' → logprob: -14.31824016571045
    7. '```' → logprob: -14.69324016571045
    8. '
' → logprob: -15.19324016571045
    9. '#' → logprob: -15.69324016571045
    10. '=' → logprob: -16.443239212036133

Token 285: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.0009115827269852161
    2. ' inv' → logprob: -7.000911712646484
    3. '(inv' → logprob: -16.375911712646484
    4. '_inv' → logprob: -19.000911712646484
    5. '   ' → logprob: -19.500911712646484
    6. '
' → logprob: -19.625911712646484
    7. 'inverse' → logprob: -20.000911712646484
    8. ' ' → logprob: -20.375911712646484
    9. 'in' → logprob: -20.875911712646484
    10. '.inv' → logprob: -21.125911712646484

Token 286: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0087516784551553e-05
    2. 'ka' → logprob: -12.00001049041748
    3. '(' → logprob: -12.50001049041748
    4. '(_' → logprob: -16.500009536743164
    5. '```' → logprob: -17.250009536743164
    6. '_ke' → logprob: -17.250009536743164
    7. ' ka' → logprob: -17.750009536743164
    8. 'Ka' → logprob: -17.875009536743164
    9. '‌' → logprob: -18.750009536743164
    10. '_^(' → logprob: -18.750009536743164

Token 287: 'ka' (ID: 1854)
  Prédit: 'ka'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ka' → logprob: -0.0005539863486774266
    2. '_' → logprob: -7.500554084777832
    3. '(' → logprob: -13.875554084777832
    4. ' ka' → logprob: -17.500553131103516
    5. '[' → logprob: -19.125553131103516
    6. 'Ka' → logprob: -19.375553131103516
    7. 'ika' → logprob: -19.750553131103516
    8. 'ка' → logprob: -19.750553131103516
    9. '-ka' → logprob: -20.625553131103516
    10. 'ko' → logprob: -21.000553131103516

Token 288: 'ijo' (ID: 11585)
  Prédit: 'ijo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijo' → logprob: -0.00477804196998477
    2. 'jo' → logprob: -5.379777908325195
    3. 'joj' → logprob: -9.504777908325195
    4. 'ojo' → logprob: -10.879777908325195
    5. 'ij' → logprob: -11.129777908325195
    6. 'njo' → logprob: -11.379777908325195
    7. 'j' → logprob: -11.504777908325195
    8. 'ijom' → logprob: -12.254777908325195
    9. 'jou' → logprob: -12.379777908325195
    10. '```' → logprob: -12.504777908325195

Token 289: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -5.88418151892256e-05
    2. 'n' → logprob: -9.750059127807617
    3. '[' → logprob: -15.750059127807617
    4. '[k' → logprob: -16.375059127807617
    5. '
' → logprob: -16.750059127807617
    6. '	n' → logprob: -16.750059127807617
    7. '(n' → logprob: -17.375059127807617
    8. '[
' → logprob: -17.625059127807617
    9. '```' → logprob: -17.625059127807617
    10. ' n' → logprob: -18.500059127807617

Token 290: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.0034865085035562515
    2. ' -' → logprob: -6.378486633300781
    3. '-' → logprob: -7.003486633300781
    4. '[-' → logprob: -7.128486633300781
    5. '[k' → logprob: -9.878486633300781
    6. 'k' → logprob: -11.753486633300781
    7. '[n' → logprob: -12.003486633300781
    8. '-n' → logprob: -12.878486633300781
    9. '[' → logprob: -13.253486633300781
    10. '   ' → logprob: -14.003486633300781

Token 291: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.36574100604048e-06
    2. ' k' → logprob: -12.375004768371582
    3. '	k' → logprob: -18.250003814697266
    4. '{k' → logprob: -18.250003814697266
    5. '<|end|>' → logprob: -19.125003814697266
    6. ',k' → logprob: -19.625003814697266
    7. '_k' → logprob: -20.000003814697266
    8. '   ' → logprob: -20.375003814697266
    9. '[k' → logprob: -21.375003814697266
    10. '?k' → logprob: -21.500003814697266

Token 292: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00033784625702537596
    2. ']%' → logprob: -8.000337600708008
    3. ' ]' → logprob: -13.375337600708008
    4. ']
' → logprob: -15.375337600708008
    5. '[' → logprob: -15.750337600708008
    6. '[n' → logprob: -16.250337600708008
    7. '[k' → logprob: -16.375337600708008
    8. '])' → logprob: -16.375337600708008
    9. '%' → logprob: -16.875337600708008
    10. '   ' → logprob: -17.000337600708008

Token 293: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.575950562953949
    2. ' %' → logprob: -0.825950562953949
    3. '   ' → logprob: -11.575950622558594
    4. ')' → logprob: -14.575950622558594
    5. '%n' → logprob: -14.950950622558594
    6. ' ' → logprob: -15.200950622558594
    7. '%A' → logprob: -15.575950622558594
    8. ')%' → logprob: -15.700950622558594
    9. ' ' → logprob: -16.200950622558594
    10. '%d' → logprob: -16.825950622558594

Token 294: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00020354038861114532
    2. ' MOD' → logprob: -8.500203132629395
    3. '_MOD' → logprob: -21.50020408630371
    4. 'MO' → logprob: -22.37520408630371
    5. '.MOD' → logprob: -22.87520408630371
    6. 'MODULE' → logprob: -24.50020408630371
    7. 'MD' → logprob: -24.62520408630371
    8. 'M' → logprob: -25.37520408630371
    9. 'MODE' → logprob: -25.75020408630371
    10. '   ' → logprob: -27.12520408630371

Token 295: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.796184723294573e-06
    2. 'else' → logprob: -12.750005722045898
    3. 'return' → logprob: -13.750005722045898
    4. '<|end|>' → logprob: -14.875005722045898
    5. ')' → logprob: -15.125005722045898
    6. '       ' → logprob: -15.500005722045898
    7. '    
' → logprob: -15.750005722045898
    8. ' else' → logprob: -15.875005722045898
    9. ' return' → logprob: -16.0000057220459
    10. '
' → logprob: -16.3750057220459

Token 296: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -3.869639476761222e-05
    2. 'return' → logprob: -10.750039100646973
    3. 'else' → logprob: -11.125039100646973
    4. ')' → logprob: -14.500039100646973
    5. 'def' → logprob: -14.875039100646973
    6. '	return' → logprob: -14.875039100646973
    7. '[]' → logprob: -14.875039100646973
    8. '       ' → logprob: -15.750039100646973
    9. ' return' → logprob: -15.750039100646973
    10. '    
' → logprob: -15.875039100646973

Token 297: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7645277976989746
    2. 'else' → logprob: -1.0145277976989746
    3. ' else' → logprob: -1.7645277976989746
    4. 'return' (adapté à ' return') → logprob: -7.889527797698975
    5. '	else' → logprob: -9.139528274536133
    6. ' return' → logprob: -9.514528274536133
    7. '    
' → logprob: -11.264528274536133
    8. ' ' → logprob: -11.264528274536133
    9. ')' → logprob: -11.764528274536133
    10. '.' → logprob: -12.889528274536133

Token 298: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005928678438067436
    2. ' ' → logprob: -5.1309285163879395
    3. ' ' → logprob: -16.50592803955078
    4. '
' → logprob: -17.75592803955078
    5. '  ' → logprob: -18.13092803955078
    6. '   ' → logprob: -18.50592803955078
    7. '۰' → logprob: -18.63092803955078
    8. '０' → logprob: -18.88092803955078
    9. ' 
' → logprob: -19.50592803955078
    10. '  
' → logprob: -20.13092803955078

Token 299: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '۰' → logprob: -20.5
    4. '０' → logprob: -20.75
    5. '```' → logprob: -22.5
    6. 'None' → logprob: -22.5
    7. '   ' → logprob: -22.75
    8. '
' → logprob: -23.375
    9. '00' → logprob: -23.375
    10. '000' → logprob: -23.9375

Token 300: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 301: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0016349549405276775
    2. '<|end|>' → logprob: -6.7516350746154785
    3. '
' → logprob: -7.7516350746154785
    4. '```' → logprob: -11.25163459777832
    5. ')' → logprob: -12.00163459777832
    6. ' def' → logprob: -12.25163459777832
    7. '<|end|>' → logprob: -12.87663459777832
    8. '

' → logprob: -13.00163459777832
    9. '  
' → logprob: -13.00163459777832
    10. '#' → logprob: -13.75163459777832

Token 302: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04434777423739433
    2. ' n' → logprob: -3.1693477630615234
    3. 'comb' → logprob: -6.919347763061523
    4. ' comb' → logprob: -8.544347763061523
    5. 'C' → logprob: -9.919347763061523
    6. 'factor' → logprob: -10.794347763061523
    7. 'com' → logprob: -11.044347763061523
    8. ' ' → logprob: -11.169347763061523
    9. ' C' → logprob: -12.044347763061523
    10. 'c' → logprob: -12.044347763061523

Token 303: 'C' (ID: 34)
  Prédit: 'Cr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cr' → logprob: -0.20162324607372284
    2. 'C' → logprob: -1.7016232013702393
    3. 'Cn' → logprob: -9.20162296295166
    4. 'Pr' → logprob: -10.20162296295166
    5. 'Ci' → logprob: -10.57662296295166
    6. 'Cm' → logprob: -11.45162296295166
    7. 'Cx' → logprob: -11.57662296295166
    8. '_C' → logprob: -11.57662296295166
    9. '```' → logprob: -12.45162296295166
    10. 'Comb' → logprob: -12.70162296295166

Token 304: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.01263713650405407
    2. '(n' → logprob: -5.137637138366699
    3. 'r' → logprob: -5.262637138366699
    4. 'int' → logprob: -7.637637138366699
    5. 'n' → logprob: -8.1376371383667
    6. 'def' → logprob: -8.2626371383667
    7. 'C' → logprob: -9.8876371383667
    8. '```' → logprob: -9.8876371383667
    9. 'q' → logprob: -10.0126371383667
    10. '2' → logprob: -10.1376371383667

Token 305: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002614550176076591
    2. '(' → logprob: -8.250261306762695
    3. ' (' → logprob: -16.250261306762695
    4. '(
' → logprob: -16.750261306762695
    5. 'def' → logprob: -17.375261306762695
    6. 'n' → logprob: -17.625261306762695
    7. '(N' → logprob: -19.500261306762695
    8. '(x' → logprob: -19.750261306762695
    9. '```' → logprob: -20.500261306762695
    10. '(

' → logprob: -21.000261306762695

Token 306: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01975630782544613
    2. ',' → logprob: -4.019756317138672
    3. ':int' → logprob: -6.519756317138672
    4. 'int' → logprob: -9.269756317138672
    5. ' :' → logprob: -11.019756317138672
    6. '):' → logprob: -12.144756317138672
    7. ',k' → logprob: -12.644756317138672
    8. '```' → logprob: -13.144756317138672
    9. '[int' → logprob: -13.644756317138672
    10. 'k' → logprob: -13.644756317138672

Token 307: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.56102097814437e-05
    2. ' int' → logprob: -10.000045776367188
    3. '(int' → logprob: -16.750045776367188
    4. 'n' → logprob: -18.000045776367188
    5. ':int' → logprob: -18.500045776367188
    6. '[int' → logprob: -18.625045776367188
    7. ',int' → logprob: -18.875045776367188
    8. ',' → logprob: -19.250045776367188
    9. '<int' → logprob: -19.250045776367188
    10. '=int' → logprob: -19.500045776367188

Token 308: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005908019375056028
    2. 'int' → logprob: -7.750590801239014
    3. ',int' → logprob: -9.125591278076172
    4. ' ,' → logprob: -10.375591278076172
    5. ':int' → logprob: -11.500591278076172
    6. 'n' → logprob: -12.750591278076172
    7. '[int' → logprob: -13.125591278076172
    8. ',n' → logprob: -13.250591278076172
    9. ':' → logprob: -13.750591278076172
    10. '<int' → logprob: -14.375591278076172

Token 309: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0013172623002901673
    2. ' k' → logprob: -6.751317024230957
    3. 'int' → logprob: -8.876317024230957
    4. 'n' → logprob: -12.001317024230957
    5. ' int' → logprob: -14.001317024230957
    6. ' n' → logprob: -15.126317024230957
    7. ',' → logprob: -17.626317977905273
    8. '   ' → logprob: -17.876317977905273
    9. ',k' → logprob: -18.501317977905273
    10. ' ' → logprob: -18.876317977905273

Token 310: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.041473016142845154
    2. ')' → logprob: -3.291472911834717
    3. 'int' → logprob: -6.166472911834717
    4. ':int' → logprob: -7.041472911834717
    5. '):' → logprob: -8.166473388671875
    6. '   ' → logprob: -9.666473388671875
    7. '):
' → logprob: -10.666473388671875
    8. ',' → logprob: -11.041473388671875
    9. '```' → logprob: -11.291473388671875
    10. '[int' → logprob: -11.541473388671875

Token 311: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009119403548538685
    2. ' int' → logprob: -7.000911712646484
    3. '(int' → logprob: -15.125911712646484
    4. ')' → logprob: -16.750911712646484
    5. '[int' → logprob: -16.875911712646484
    6. ':int' → logprob: -17.500911712646484
    7. '=int' → logprob: -17.875911712646484
    8. '<int' → logprob: -17.875911712646484
    9. ']int' → logprob: -18.375911712646484
    10. '	int' → logprob: -19.000911712646484

Token 312: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1398757123970427e-05
    2. ':' → logprob: -11.625011444091797
    3. '):' → logprob: -13.750011444091797
    4. '   ' → logprob: -14.750011444091797
    5. 'int' → logprob: -15.000011444091797
    6. ' )' → logprob: -15.125011444091797
    7. '):
' → logprob: -15.625011444091797
    8. ')
' → logprob: -16.125011444091797
    9. '```' → logprob: -18.000011444091797
    10. ')->' → logprob: -18.375011444091797

Token 313: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7059022188186646
    2. '->' → logprob: -1.5809022188186646
    3. ' ->' → logprob: -1.7059022188186646
    4. ':' → logprob: -2.205902099609375
    5. '(n' → logprob: -5.455902099609375
    6. '   ' → logprob: -5.830902099609375
    7. '>' → logprob: -7.205902099609375
    8. 'def' → logprob: -8.080902099609375
    9. ')->' → logprob: -8.455902099609375
    10. 'int' → logprob: -9.830902099609375

Token 314: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -8.061054359131958e-06
    2. ' int' → logprob: -11.750007629394531
    3. '(int' → logprob: -16.25000762939453
    4. '[int' → logprob: -19.50000762939453
    5. '   ' → logprob: -20.50000762939453
    6. '=int' → logprob: -20.87500762939453
    7. '```' → logprob: -20.87500762939453
    8. '	int' → logprob: -21.25000762939453
    9. '
' → logprob: -21.25000762939453
    10. ' ' → logprob: -21.87500762939453

Token 315: ':
' (ID: 734)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3877512216567993
    2. ':' → logprob: -1.1377512216567993
    3. '   ' → logprob: -7.13775110244751
    4. ':
' → logprob: -10.012751579284668
    5. ')' → logprob: -11.137751579284668
    6. 'def' → logprob: -11.262751579284668
    7. '(' → logprob: -12.387751579284668
    8. '):' → logprob: -13.387751579284668
    9. ' ->' → logprob: -13.512751579284668
    10. '->' → logprob: -13.762751579284668

Token 316: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.319370302458992e-06
    2. 'if' → logprob: -12.375005722045898
    3. ' if' → logprob: -14.250005722045898
    4. '   ' → logprob: -15.250005722045898
    5. '```' → logprob: -16.2500057220459
    6. '	if' → logprob: -17.0000057220459
    7. 'def' → logprob: -18.6250057220459
    8. '       ' → logprob: -18.6250057220459
    9. ':' → logprob: -19.0000057220459
    10. '   ' → logprob: -19.1250057220459

Token 317: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007154115010052919
    2. '   ' → logprob: -5.2571539878845215
    3. ' if' → logprob: -6.2571539878845215
    4. '	if' → logprob: -13.25715446472168
    5. ' ' → logprob: -16.88215446472168
    6. '0' → logprob: -17.13215446472168
    7. '```' → logprob: -17.38215446472168
    8. '  ' → logprob: -18.25715446472168
    9. 'def' → logprob: -18.50715446472168
    10. '
' → logprob: -19.75715446472168

Token 318: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1128382757306099
    2. ' ' → logprob: -2.2378382682800293
    3. '   ' → logprob: -11.487838745117188
    4. '(' → logprob: -13.362838745117188
    5. 'k' → logprob: -13.925338745117188
    6. ' k' → logprob: -14.112838745117188
    7. ' (' → logprob: -14.175338745117188
    8. '  ' → logprob: -14.362838745117188
    9. '    ' → logprob: -15.675338745117188
    10. '1' → logprob: -15.925338745117188

Token 319: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014072739577386528
    2. ' ' → logprob: -8.875141143798828
    3. 'k' → logprob: -14.750141143798828
    4. '   ' → logprob: -15.000141143798828
    5. '(' → logprob: -16.000141143798828
    6. '  ' → logprob: -17.250141143798828
    7. '    ' → logprob: -18.250141143798828
    8. '
' → logprob: -18.375141143798828
    9. 'n' → logprob: -18.750141143798828
    10. ' (' → logprob: -18.812641143798828

Token 320: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.018169842660427094
    2. '<=' → logprob: -4.01816987991333
    3. '0' → logprob: -11.018169403076172
    4. '   ' → logprob: -13.143169403076172
    5. ' <' → logprob: -14.268169403076172
    6. ' ' → logprob: -15.268169403076172
    7. '```' → logprob: -15.518169403076172
    8. 'if' → logprob: -16.268169403076172
    9. ' k' → logprob: -16.268169403076172
    10. 'k' → logprob: -16.393169403076172

Token 321: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0019286326132714748
    2. ' k' → logprob: -6.251928806304932
    3. '	k' → logprob: -18.251928329467773
    4. '   ' → logprob: -18.876928329467773
    5. ' ' → logprob: -19.376928329467773
    6. '_k' → logprob: -19.751928329467773
    7. 'kx' → logprob: -20.126928329467773
    8. '{k' → logprob: -21.251928329467773
    9. '  ' → logprob: -21.501928329467773
    10. ',k' → logprob: -21.751928329467773

Token 322: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.6931540369987488
    2. '<=' → logprob: -0.6931540369987488
    3. ' and' → logprob: -12.818154335021973
    4. 'and' → logprob: -12.943154335021973
    5. '   ' → logprob: -14.943154335021973
    6. ' ' → logprob: -15.068154335021973
    7. ']<=' → logprob: -15.693154335021973
    8. '```' → logprob: -15.943154335021973
    9. '≤' → logprob: -16.443153381347656
    10. '    ' → logprob: -16.568153381347656

Token 323: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009117019944824278
    2. ' n' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.000911712646484
    4. '	n' → logprob: -16.500911712646484
    5. ' ' → logprob: -18.125911712646484
    6. '```' → logprob: -18.250911712646484
    7. '
' → logprob: -18.875911712646484
    8. '  ' → logprob: -19.125911712646484
    9. '_n' → logprob: -19.625911712646484
    10. '(n' → logprob: -20.125911712646484

Token 324: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1624613255262375
    2. ':' → logprob: -1.912461280822754
    3. ' and' → logprob: -6.537461280822754
    4. '   ' → logprob: -7.287461280822754
    5. ':

' → logprob: -10.287461280822754
    6. '):
' → logprob: -10.912461280822754
    7. ' :
' → logprob: -11.162461280822754
    8. ':return' → logprob: -11.287461280822754
    9. ':
' → logprob: -11.912461280822754
    10. '       ' → logprob: -12.287461280822754

Token 325: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003377099521458149
    2. '   ' → logprob: -5.7533769607543945
    3. ' return' → logprob: -9.003376960754395
    4. 'return' → logprob: -9.503376960754395
    5. ':return' → logprob: -14.878376960754395
    6. '	return' → logprob: -15.003376960754395
    7. ',' → logprob: -15.503376960754395
    8. '     ' → logprob: -15.503376960754395
    9. '	   ' → logprob: -16.12837791442871
    10. '      ' → logprob: -16.12837791442871

Token 326: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0032521041575819254
    2. '   ' → logprob: -5.753252029418945
    3. ' return' → logprob: -9.753252029418945
    4. '       ' → logprob: -11.128252029418945
    5. '	return' → logprob: -13.378252029418945
    6. '
' → logprob: -17.753252029418945
    7. ' ' → logprob: -17.753252029418945
    8. '  ' → logprob: -18.003252029418945
    9. 'result' → logprob: -18.128252029418945
    10. '    ' → logprob: -18.503252029418945

Token 327: ' ka' (ID: 1908)
  Prédit: 'ka'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ka' → logprob: -0.00041208078619092703
    2. ' ka' → logprob: -8.500411987304688
    3. '(' → logprob: -8.625411987304688
    4. '   ' → logprob: -10.750411987304688
    5. ' ' → logprob: -12.875411987304688
    6. '  ' → logprob: -13.125411987304688
    7. ' (' → logprob: -13.500411987304688
    8. 'Ka' → logprob: -15.375411987304688
    9. 'kan' → logprob: -15.500411987304688
    10. '     ' → logprob: -15.500411987304688

Token 328: 'ijo' (ID: 11585)
  Prédit: 'ijo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijo' → logprob: -7.755678961984813e-05
    2. 'jo' → logprob: -9.500077247619629
    3. 'ijos' → logprob: -13.625077247619629
    4. 'ij' → logprob: -13.875077247619629
    5. 'ijoje' → logprob: -15.625077247619629
    6. 'isho' → logprob: -17.250078201293945
    7. 'j' → logprob: -17.500078201293945
    8. 'njo' → logprob: -17.625078201293945
    9. 'ijom' → logprob: -17.750078201293945
    10. 'ijs' → logprob: -18.000078201293945

Token 329: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -7.896309739408025e-07
    2. 'n' → logprob: -14.250000953674316
    3. '[' → logprob: -17.5
    4. '[
' → logprob: -20.125
    5. '(n' → logprob: -20.75
    6. '	n' → logprob: -20.875
    7. ' [' → logprob: -21.125
    8. '   ' → logprob: -21.875
    9. '[N' → logprob: -22.625
    10. '```' → logprob: -22.625

Token 330: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.153795766294934e-06
    2. ']*' → logprob: -12.125005722045898
    3. '   ' → logprob: -14.875005722045898
    4. ' ]' → logprob: -15.250005722045898
    5. ']
' → logprob: -16.1250057220459
    6. ' ' → logprob: -19.0000057220459
    7. ']%' → logprob: -19.0000057220459
    8. '']' → logprob: -20.0000057220459
    9. ']
' → logprob: -20.1250057220459
    10. '],' → logprob: -20.3750057220459

Token 331: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.28124889731407166
    2. '*' → logprob: -1.406248927116394
    3. '   ' → logprob: -9.406249046325684
    4. ' ' → logprob: -11.656249046325684
    5. '
' → logprob: -13.531249046325684
    6. ' ' → logprob: -13.656249046325684
    7. '*k' → logprob: -13.656249046325684
    8. '    ' → logprob: -13.906249046325684
    9. '**' → logprob: -14.406249046325684
    10. '  ' → logprob: -14.656249046325684

Token 332: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.029895931482315063
    2. '(inv' → logprob: -3.5298960208892822
    3. ' inv' → logprob: -9.029895782470703
    4. ' (' → logprob: -11.779895782470703
    5. '(in' → logprob: -11.779895782470703
    6. '(' → logprob: -12.029895782470703
    7. '_inv' → logprob: -13.779895782470703
    8. '   ' → logprob: -13.904895782470703
    9. 'in' → logprob: -14.404895782470703
    10. '((' → logprob: -14.654895782470703

Token 333: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. 'ka' → logprob: -20.5
    3. '[' → logprob: -20.625
    4. '\' → logprob: -22.125
    5. '```' → logprob: -22.375
    6. 'Ka' → logprob: -22.875
    7. '‌' → logprob: -23.875
    8. '(' → logprob: -23.875
    9. 'a' → logprob: -24.75
    10. '-' → logprob: -24.75

Token 334: 'ka' (ID: 1854)
  Prédit: 'ka'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ka' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.12500286102295
    3. '(' → logprob: -14.50000286102295
    4. '[' → logprob: -15.62500286102295
    5. ' ka' → logprob: -16.750001907348633
    6. 'ка' → logprob: -16.875001907348633
    7. '```' → logprob: -17.000001907348633
    8. '
' → logprob: -18.125001907348633
    9. 'Ka' → logprob: -18.375001907348633
    10. 'ko' → logprob: -18.375001907348633

Token 335: 'ijo' (ID: 11585)
  Prédit: 'jo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jo' → logprob: -0.010563496500253677
    2. 'ijo' → logprob: -4.635563373565674
    3. 'j' → logprob: -7.510563373565674
    4. 'joj' → logprob: -9.135563850402832
    5. 'jou' → logprob: -9.760563850402832
    6. 'ojo' → logprob: -10.135563850402832
    7. 'yo' → logprob: -11.260563850402832
    8. 'ij' → logprob: -12.010563850402832
    9. 'oj' → logprob: -12.010563850402832
    10. '[j' → logprob: -12.260563850402832

Token 336: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -5.180879816180095e-05
    2. 'k' → logprob: -10.000051498413086
    3. '[n' → logprob: -12.000051498413086
    4. '{k' → logprob: -16.500051498413086
    5. '[' → logprob: -16.750051498413086
    6. '   ' → logprob: -17.250051498413086
    7. '
' → logprob: -17.375051498413086
    8. '	k' → logprob: -17.500051498413086
    9. '```' → logprob: -18.375051498413086
    10. '(k' → logprob: -18.625051498413086

Token 337: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.1994775377388578e-05
    2. ']*' → logprob: -11.750012397766113
    3. ']%' → logprob: -12.500012397766113
    4. ' ]' → logprob: -15.375012397766113
    5. '%' → logprob: -16.375011444091797
    6. '   ' → logprob: -17.500011444091797
    7. '']' → logprob: -17.875011444091797
    8. '"]' → logprob: -18.000011444091797
    9. '*' → logprob: -18.375011444091797
    10. ']
' → logprob: -18.625011444091797

Token 338: ' %' (ID: 1851)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5226994156837463
    2. '   ' → logprob: -1.6476993560791016
    3. '%' → logprob: -1.7726993560791016
    4. ' %' → logprob: -3.2726993560791016
    5. '*' → logprob: -5.022699356079102
    6. ' ' → logprob: -9.022699356079102
    7. '  ' → logprob: -10.147699356079102
    8. '    ' → logprob: -10.647699356079102
    9. '[n' → logprob: -11.647699356079102
    10. '[' → logprob: -11.897699356079102

Token 339: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.012556619942188263
    2. ' MOD' → logprob: -4.637556552886963
    3. 'ka' → logprob: -6.012556552886963
    4. ' ka' → logprob: -8.512557029724121
    5. '(' → logprob: -9.637557029724121
    6. '   ' → logprob: -10.262557029724121
    7. '_MOD' → logprob: -11.012557029724121
    8. 'mod' → logprob: -11.262557029724121
    9. ' (' → logprob: -12.137557029724121
    10. '```' → logprob: -12.387557029724121

Token 340: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.48097753524780273
    2. '*' → logprob: -0.9809775352478027
    3. '   ' → logprob: -4.980977535247803
    4. ' ' → logprob: -11.980978012084961
    5. '  ' → logprob: -13.980978012084961
    6. ' ' → logprob: -14.105978012084961
    7. '```' → logprob: -14.605978012084961
    8. '	' → logprob: -14.980978012084961
    9. '**' → logprob: -15.105978012084961
    10. '    ' → logprob: -16.10597801208496

Token 341: ' inv' (ID: 1827)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.00012415809032972902
    2. ' inv' → logprob: -9.000123977661133
    3. '(inv' → logprob: -14.125123977661133
    4. '   ' → logprob: -18.000123977661133
    5. '           ' → logprob: -19.375123977661133
    6. ' ' → logprob: -19.500123977661133
    7. '.inv' → logprob: -19.625123977661133
    8. '
' → logprob: -19.875123977661133
    9. '_inv' → logprob: -20.000123977661133
    10. '                   ' → logprob: -21.500123977661133

Token 342: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. 'ka' → logprob: -19.625
    3. '[' → logprob: -20.375
    4. '```' → logprob: -21.0
    5. '(' → logprob: -21.75
    6. 'n' → logprob: -22.25
    7. 'inv' → logprob: -22.625
    8. '‌' → logprob: -23.125
    9. '_ke' → logprob: -23.25
    10. 'Ka' → logprob: -23.375

Token 343: 'ka' (ID: 1854)
  Prédit: 'ka'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ka' → logprob: -4.008129963040119e-06
    2. '_' → logprob: -12.625003814697266
    3. ' ka' → logprob: -15.750003814697266
    4. '(' → logprob: -15.875003814697266
    5. '```' → logprob: -16.000003814697266
    6. 'ko' → logprob: -16.250003814697266
    7. 'ка' → logprob: -16.375003814697266
    8. '[' → logprob: -17.000003814697266
    9. '
' → logprob: -17.625003814697266
    10. 'ke' → logprob: -18.125003814697266

Token 344: 'ijo' (ID: 11585)
  Prédit: 'jo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jo' → logprob: -0.03849950432777405
    2. 'ka' → logprob: -3.788499593734741
    3. 'ko' → logprob: -4.413499355316162
    4. 'ijo' → logprob: -6.538499355316162
    5. 'j' → logprob: -7.913499355316162
    6. '_' → logprob: -8.41349983215332
    7. 'ojo' → logprob: -8.41349983215332
    8. 'oj' → logprob: -8.53849983215332
    9. 'ja' → logprob: -9.16349983215332
    10. 'koj' → logprob: -9.53849983215332

Token 345: '[n' (ID: 15433)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0619698166847229
    2. '[n' → logprob: -2.811969757080078
    3. '   ' → logprob: -13.561969757080078
    4. '[' → logprob: -14.561969757080078
    5. 'k' → logprob: -15.811969757080078
    6. ' [' → logprob: -16.686969757080078
    7. '
' → logprob: -16.811969757080078
    8. '[
' → logprob: -16.936969757080078
    9. '(k' → logprob: -17.061969757080078
    10. '

' → logprob: -17.561969757080078

Token 346: ' -' (ID: 533)
  Prédit: '-k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-k' → logprob: -0.0014901040121912956
    2. '[k' → logprob: -7.501490116119385
    3. ' -' → logprob: -7.626490116119385
    4. '-' → logprob: -7.751490116119385
    5. '[-' → logprob: -11.251489639282227
    6. '[' → logprob: -12.751489639282227
    7. 'k' → logprob: -13.126489639282227
    8. '   ' → logprob: -15.126489639282227
    9. '[
' → logprob: -15.501489639282227
    10. '−' → logprob: -15.626489639282227

Token 347: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -5.512236498361744e-07
    2. ' k' → logprob: -14.500000953674316
    3. '	k' → logprob: -19.625
    4. '{k' → logprob: -21.0
    5. 'к' → logprob: -21.125
    6. '   ' → logprob: -21.625
    7. '_k' → logprob: -21.875
    8. '
' → logprob: -22.125
    9. ' ' → logprob: -22.25
    10. ' к' → logprob: -22.75

Token 348: ']' (ID: 60)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.008878686465322971
    2. ']' → logprob: -4.758878707885742
    3. '[n' → logprob: -8.883878707885742
    4. 'k' → logprob: -9.133878707885742
    5. '[' → logprob: -11.258878707885742
    6. '][' → logprob: -13.008878707885742
    7. '(k' → logprob: -14.133878707885742
    8. ' k' → logprob: -14.508878707885742
    9. '{k' → logprob: -15.008878707885742
    10. '   ' → logprob: -15.508878707885742

Token 349: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.02996557392179966
    2. '%' → logprob: -3.52996563911438
    3. '[n' → logprob: -9.4049654006958
    4. '[' → logprob: -9.6549654006958
    5. '[k' → logprob: -10.6549654006958
    6. ')' → logprob: -11.2799654006958
    7. '   ' → logprob: -11.5299654006958
    8. ' ' → logprob: -12.1549654006958
    9. '%n' → logprob: -12.4049654006958
    10. '```' → logprob: -12.4049654006958

Token 350: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.547789674485102e-05
    2. ' MOD' → logprob: -10.250035285949707
    3. '_MOD' → logprob: -18.250036239624023
    4. '.MOD' → logprob: -19.625036239624023
    5. '   ' → logprob: -19.875036239624023
    6. '
' → logprob: -20.000036239624023
    7. ' ' → logprob: -20.750036239624023
    8. '```' → logprob: -21.000036239624023
    9. 'MO' → logprob: -21.375036239624023
    10. 'MODE' → logprob: -22.625036239624023

Token 351: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05460318922996521
    2. 'return' → logprob: -3.554603099822998
    3. '
' → logprob: -3.929603099822998
    4. '<|end|>' → logprob: -5.929603099822998
    5. '    
' → logprob: -7.554603099822998
    6. 'def' → logprob: -8.304603576660156
    7. ' return' → logprob: -8.429603576660156
    8. ' 
' → logprob: -8.679603576660156
    9. '  
' → logprob: -8.804603576660156
    10. ')' → logprob: -8.804603576660156

Token 352: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.0339031834737398e-05
    2. 'return' → logprob: -11.375020027160645
    3. ' return' → logprob: -13.250020027160645
    4. '(' → logprob: -13.750020027160645
    5. ')' → logprob: -14.000020027160645
    6. '<|end|>' → logprob: -14.000020027160645
    7. '	return' → logprob: -14.125020027160645
    8. '    
' → logprob: -14.250020027160645
    9. '[' → logprob: -14.500020027160645
    10. '
' → logprob: -14.750020027160645

Token 353: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10396337509155273
    2. '   ' → logprob: -2.3539633750915527
    3. ' return' → logprob: -5.603963375091553
    4. '
' → logprob: -9.978963851928711
    5. '0' → logprob: -11.728963851928711
    6. '	return' → logprob: -12.228963851928711
    7. ' ' → logprob: -12.853963851928711
    8. '  ' → logprob: -13.353963851928711
    9. '       ' → logprob: -13.478963851928711
    10. '```' → logprob: -14.353963851928711

Token 354: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. '
' → logprob: -19.500625610351562
    4. '   ' → logprob: -20.250625610351562
    5. '00' → logprob: -21.125625610351562
    6. '  ' → logprob: -21.625625610351562
    7. '000' → logprob: -22.250625610351562
    8. '０' → logprob: -22.250625610351562
    9. '۰' → logprob: -22.375625610351562
    10. ' ' → logprob: -22.375625610351562

Token 355: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.125
    3. '000' → logprob: -23.125
    4. '０' → logprob: -23.25
    5. '۰' → logprob: -23.375
    6. '00' → logprob: -23.75
    7. 'None' → logprob: -24.625
    8. '```' → logprob: -24.75
    9. '
' → logprob: -25.0
    10. 'False' → logprob: -25.75

Token 356: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 357: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.412610233994201e-05
    2. 'class' → logprob: -9.500094413757324
    3. 'from' → logprob: -12.000094413757324
    4. '#' → logprob: -12.125094413757324
    5. 'n' → logprob: -12.375094413757324
    6. 'import' → logprob: -13.750094413757324
    7. ' def' → logprob: -14.625094413757324
    8. 'if' → logprob: -14.750094413757324
    9. 'N' → logprob: -15.000094413757324
    10. '
' → logprob: -15.750094413757324

Token 358: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07462450116872787
    2. '=' → logprob: -3.449624538421631
    3. ' ' → logprob: -3.449624538421631
    4. ',' → logprob: -5.074624538421631
    5. '<|end|>' → logprob: -6.824624538421631
    6. ')' → logprob: -7.824624538421631
    7. '=input' → logprob: -9.199624061584473
    8. ' ,' → logprob: -9.824624061584473
    9. 'space' → logprob: -9.949624061584473
    10. '=int' → logprob: -9.949624061584473

Token 359: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.10268166661262512
    2. 'm' → logprob: -2.4776816368103027
    3. 'a' → logprob: -4.727681636810303
    4. 'r' → logprob: -6.602681636810303
    5. 'K' → logprob: -7.102681636810303
    6. ' k' → logprob: -7.227681636810303
    7. 'x' → logprob: -7.352681636810303
    8. 'p' → logprob: -8.102682113647461
    9. 'l' → logprob: -8.227682113647461
    10. 'd' → logprob: -8.852682113647461

Token 360: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132626414299011
    2. ' =' → logprob: -1.313262701034546
    3. ',' → logprob: -14.313262939453125
    4. ' ' → logprob: -16.063262939453125
    5. '=input' → logprob: -16.063262939453125
    6. '＝' → logprob: -16.938262939453125
    7. ' ' → logprob: -17.813262939453125
    8. '=int' → logprob: -17.813262939453125
    9. ')' → logprob: -18.438262939453125
    10. '=k' → logprob: -18.938262939453125

Token 361: ' get' (ID: 717)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.7481895685195923
    2. 'get' → logprob: -1.3731895685195923
    3. ' map' → logprob: -1.4981895685195923
    4. ' get' → logprob: -2.9981894493103027
    5. ' ' → logprob: -9.873189926147461
    6. 'list' → logprob: -12.123189926147461
    7. '	map' → logprob: -13.123189926147461
    8. '	get' → logprob: -13.248189926147461
    9. ' list' → logprob: -13.623189926147461
    10. '0' → logprob: -14.123189926147461

Token 362: '_nums' (ID: 128266)
  Prédit: '_nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_nums' → logprob: -6.694766489090398e-05
    2. 'nums' → logprob: -9.625066757202148
    3. 'Nums' → logprob: -15.000066757202148
    4. '_num' → logprob: -15.875066757202148
    5. '_n' → logprob: -16.00006675720215
    6. '(nums' → logprob: -16.87506675720215
    7. '_' → logprob: -17.00006675720215
    8. 'all' → logprob: -17.87506675720215
    9. '```' → logprob: -18.12506675720215
    10. 's' → logprob: -18.25006675720215

Token 363: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.16165822744369507
    2. '()' → logprob: -1.9116582870483398
    3. '_n' → logprob: -7.28665828704834
    4. '(' → logprob: -7.78665828704834
    5. 'l' → logprob: -9.03665828704834
    6. '()[' → logprob: -9.41165828704834
    7. '())' → logprob: -10.03665828704834
    8. '_s' → logprob: -10.91165828704834
    9. '```' → logprob: -11.28665828704834
    10. '()
' → logprob: -11.66165828704834

Token 364: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4118640720844269
    2. '(n' → logprob: -1.4118640422821045
    3. '(' → logprob: -3.2868640422821045
    4. '
' → logprob: -4.286864280700684
    5. '[' → logprob: -4.661864280700684
    6. 'if' → logprob: -5.036864280700684
    7. '[n' → logprob: -5.036864280700684
    8. '#' → logprob: -5.661864280700684
    9. 'def' → logprob: -5.661864280700684
    10. 'n' → logprob: -5.911864280700684

Token 365: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012003178708255291
    2. 'result' → logprob: -4.887002944946289
    3. 'res' → logprob: -6.262002944946289
    4. 'ans' → logprob: -6.387002944946289
    5. 'print' → logprob: -7.887002944946289
    6. 'def' → logprob: -8.887002944946289
    7. 'answer' → logprob: -9.512002944946289
    8. 'r' → logprob: -9.762002944946289
    9. 'a' → logprob: -10.387002944946289
    10. 's' → logprob: -10.762002944946289

Token 366: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.013845302164554596
    2. 'k' → logprob: -4.388845443725586
    3. ' n' → logprob: -6.638845443725586
    4. ' ' → logprob: -11.263845443725586
    5. 'n' → logprob: -11.513845443725586
    6. ' not' → logprob: -12.763845443725586
    7. ' ' → logprob: -15.513845443725586
    8. '	k' → logprob: -15.888845443725586
    9. '  ' → logprob: -16.138845443725586
    10. ' (' → logprob: -16.888845443725586

Token 367: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4930941164493561
    2. ' ==' → logprob: -1.1180940866470337
    3. '>' → logprob: -3.2430942058563232
    4. '==' → logprob: -4.243093967437744
    5. ' <' → logprob: -4.993093967437744
    6. ' >=' → logprob: -7.118093967437744
    7. '=' → logprob: -7.993093967437744
    8. ' =' → logprob: -8.118094444274902
    9. ' <=' → logprob: -8.618094444274902
    10. ' ' → logprob: -8.743094444274902

Token 368: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006094338372349739
    2. '1' → logprob: -5.506094455718994
    3. '=' → logprob: -6.381094455718994
    4. '2' → logprob: -8.756093978881836
    5. '=n' → logprob: -10.006093978881836
    6. '3' → logprob: -10.256093978881836
    7. ' n' → logprob: -10.631093978881836
    8. '0' → logprob: -10.881093978881836
    9. '(n' → logprob: -11.881093978881836
    10. '10' → logprob: -12.006093978881836

Token 369: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.021035658195614815
    2. ':
' → logprob: -4.021035671234131
    3. '-' → logprob: -5.896035671234131
    4. ':return' → logprob: -10.271035194396973
    5. '==' → logprob: -10.646035194396973
    6. ' -' → logprob: -10.646035194396973
    7. ':n' → logprob: -11.646035194396973
    8. '+' → logprob: -12.146035194396973
    9. ' :' → logprob: -12.271035194396973
    10. ':
' → logprob: -12.271035194396973

Token 370: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0683535037969705e-05
    2. '0' → logprob: -12.62501049041748
    3. 'k' → logprob: -12.62501049041748
    4. ' ' → logprob: -12.87501049041748
    5. '2' → logprob: -13.50001049041748
    6. 'n' → logprob: -16.500011444091797
    7. 'abs' → logprob: -18.250011444091797
    8. '(k' → logprob: -18.250011444091797
    9. '(n' → logprob: -18.625011444091797
    10. '   ' → logprob: -19.000011444091797

Token 371: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.013994814362377e-05
    2. '2' → logprob: -10.37505054473877
    3. 'k' → logprob: -11.12505054473877
    4. ' ' → logprob: -13.50005054473877
    5. '0' → logprob: -13.62505054473877
    6. 'abs' → logprob: -14.50005054473877
    7. '
' → logprob: -15.12505054473877
    8. '```' → logprob: -15.87505054473877
    9. 'n' → logprob: -16.000049591064453
    10. '`' → logprob: -17.000049591064453

Token 372: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16028088331222534
    2. ':
' → logprob: -1.9102809429168701
    3. ' or' → logprob: -10.41028118133545
    4. ':
' → logprob: -11.66028118133545
    5. ' :' → logprob: -12.16028118133545
    6. '   ' → logprob: -12.53528118133545
    7. ' and' → logprob: -13.16028118133545
    8. 'or' → logprob: -13.41028118133545
    9. ':return' → logprob: -13.66028118133545
    10. ' :
' → logprob: -13.78528118133545

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.059475094079971313
    2. 'print' → logprob: -2.9344751834869385
    3. ':' → logprob: -5.684474945068359
    4. ':
' → logprob: -7.059474945068359
    5. ' print' → logprob: -8.43447494506836
    6. '```' → logprob: -9.55947494506836
    7. '	print' → logprob: -11.30947494506836
    8. '.' → logprob: -12.55947494506836
    9. '0' → logprob: -12.80947494506836
    10. '    
' → logprob: -13.18447494506836

Token 374: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0003404687449801713
    2. '   ' → logprob: -8.000340461730957
    3. ' print' → logprob: -13.125340461730957
    4. '```' → logprob: -13.125340461730957
    5. '
' → logprob: -14.250340461730957
    6. 'ans' → logprob: -16.000341415405273
    7. '	print' → logprob: -16.750341415405273
    8. '``' → logprob: -17.000341415405273
    9. '0' → logprob: -17.125341415405273
    10. '    
' → logprob: -17.625341415405273

Token 375: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01945004239678383
    2. '(n' → logprob: -4.0194501876831055
    3. '(k' → logprob: -7.5194501876831055
    4. '1' → logprob: -8.269450187683105
    5. '(pow' → logprob: -8.519450187683105
    6. '((' → logprob: -9.394450187683105
    7. '(math' → logprob: -9.769450187683105
    8. '("' → logprob: -9.894450187683105
    9. '(-' → logprob: -9.894450187683105
    10. 'pow' → logprob: -11.394450187683105

Token 376: 'C' (ID: 34)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5759817957878113
    2. ')' → logprob: -0.8259817957878113
    3. ')
' → logprob: -10.325982093811035
    4. '%' → logprob: -12.325982093811035
    5. '   ' → logprob: -13.325982093811035
    6. ' )' → logprob: -13.700982093811035
    7. ' )
' → logprob: -14.200982093811035
    8. '-' → logprob: -14.950982093811035
    9. '*' → logprob: -15.075982093811035
    10. ')`
' → logprob: -15.575982093811035

Token 377: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -8.482821431243792e-05
    2. '(n' → logprob: -9.75008487701416
    3. 'n' → logprob: -11.12508487701416
    4. 'C' → logprob: -11.37508487701416
    5. '2' → logprob: -16.000083923339844
    6. '
' → logprob: -17.125083923339844
    7. '(k' → logprob: -17.250083923339844
    8. 'r' → logprob: -17.500083923339844
    9. '1' → logprob: -17.625083923339844
    10. 'к' → logprob: -17.875083923339844

Token 378: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.0259150157216936e-05
    2. '(' → logprob: -10.00005054473877
    3. 'n' → logprob: -12.50005054473877
    4. '(
' → logprob: -14.25005054473877
    5. '(k' → logprob: -15.87505054473877
    6. '
' → logprob: -16.125049591064453
    7. ' (' → logprob: -16.250049591064453
    8. ')' → logprob: -16.875049591064453
    9. '((' → logprob: -18.375049591064453
    10. '()' → logprob: -19.500049591064453

Token 379: ' +' (ID: 659)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03681359812617302
    2. '(k' → logprob: -3.536813497543335
    3. '(' → logprob: -5.161813735961914
    4. ',' → logprob: -7.411813735961914
    5. ' (' → logprob: -8.286813735961914
    6. ',k' → logprob: -8.536813735961914
    7. '(
' → logprob: -8.911813735961914
    8. '
' → logprob: -10.161813735961914
    9. ',n' → logprob: -10.286813735961914
    10. 'k' → logprob: -11.286813735961914

Token 380: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07214511930942535
    2. '1' → logprob: -2.6971452236175537
    3. 'n' → logprob: -6.197144985198975
    4. '
' → logprob: -10.072145462036133
    5. ' k' → logprob: -10.447145462036133
    6. '(k' → logprob: -10.822145462036133
    7. '2' → logprob: -11.072145462036133
    8. '(n' → logprob: -11.072145462036133
    9. '0' → logprob: -11.322145462036133
    10. '   ' → logprob: -11.697145462036133

Token 381: ' -' (ID: 533)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6125155687332153
    2. ',' → logprob: -1.2375155687332153
    3. '-' → logprob: -1.8625155687332153
    4. '   ' → logprob: -5.737515449523926
    5. 'n' → logprob: -5.737515449523926
    6. '
' → logprob: -6.612515449523926
    7. ' -' → logprob: -6.612515449523926
    8. ',k' → logprob: -6.737515449523926
    9. '(n' → logprob: -7.987515449523926
    10. '[' → logprob: -8.237515449523926

Token 382: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.030334316194057465
    2. '1' → logprob: -3.530334234237671
    3. 'k' → logprob: -7.78033447265625
    4. '   ' → logprob: -9.65533447265625
    5. '3' → logprob: -9.78033447265625
    6. ' ' → logprob: -11.40533447265625
    7. '
' → logprob: -11.78033447265625
    8. '4' → logprob: -12.03033447265625
    9. '
' → logprob: -12.28033447265625
    10. '```' → logprob: -12.40533447265625

Token 383: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002670426620170474
    2. '1' → logprob: -6.6276702880859375
    3. 'k' → logprob: -6.6276702880859375
    4. 'n' → logprob: -12.002670288085938
    5. '3' → logprob: -12.002670288085938
    6. '   ' → logprob: -13.002670288085938
    7. '
' → logprob: -13.002670288085938
    8. '
' → logprob: -14.377670288085938
    9. ' ' → logprob: -14.502670288085938
    10. '4' → logprob: -14.627670288085938

Token 384: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005609253887087107
    2. ',k' → logprob: -5.255609035491943
    3. ',n' → logprob: -8.130609512329102
    4. ' ,' → logprob: -9.755609512329102
    5. 'n' → logprob: -11.630609512329102
    6. 'k' → logprob: -11.880609512329102
    7. '   ' → logprob: -13.255609512329102
    8. '(n' → logprob: -13.755609512329102
    9. ')' → logprob: -14.005609512329102
    10. ',
' → logprob: -14.005609512329102

Token 385: ' n' (ID: 297)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4741635322570801
    2. 'n' → logprob: -0.9741635322570801
    3. ' n' → logprob: -9.599163055419922
    4. '2' → logprob: -11.849163055419922
    5. ' k' → logprob: -11.849163055419922
    6. '   ' → logprob: -12.724163055419922
    7. '(n' → logprob: -14.974163055419922
    8. ')' → logprob: -15.474163055419922
    9. ' ' → logprob: -15.849163055419922
    10. '	n' → logprob: -16.349163055419922

Token 386: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.08673529326915741
    2. '))' → logprob: -2.711735248565674
    3. ' -' → logprob: -4.461735248565674
    4. '1' → logprob: -6.336735248565674
    5. ')' → logprob: -6.836735248565674
    6. 'k' → logprob: -6.836735248565674
    7. '))
' → logprob: -7.836735248565674
    8. '   ' → logprob: -8.336735725402832
    9. 'print' → logprob: -8.711735725402832
    10. '
' → logprob: -9.336735725402832

Token 387: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02480127662420273
    2. ')
' → logprob: -3.774801254272461
    3. '))' → logprob: -6.524801254272461
    4. '))
' → logprob: -9.899801254272461
    5. ' )' → logprob: -11.149801254272461
    6. '   ' → logprob: -11.274801254272461
    7. ')))' → logprob: -13.524801254272461
    8. ')`
' → logprob: -13.649801254272461
    9. ')
' → logprob: -13.774801254272461
    10. ',' → logprob: -13.899801254272461

Token 388: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00033581978641450405
    2. ' MOD' → logprob: -8.000335693359375
    3. ')' → logprob: -15.250335693359375
    4. '_MOD' → logprob: -15.750335693359375
    5. '.MOD' → logprob: -18.500335693359375
    6. '(M' → logprob: -18.625335693359375
    7. '```' → logprob: -19.250335693359375
    8. '100' → logprob: -19.750335693359375
    9. '(' → logprob: -20.000335693359375
    10. 'MO' → logprob: -20.375335693359375

Token 389: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028493294958025217
    2. ')
' → logprob: -5.877849102020264
    3. '))' → logprob: -10.127849578857422
    4. ' )' → logprob: -13.502849578857422
    5. '   ' → logprob: -13.752849578857422
    6. ')
' → logprob: -14.502849578857422
    7. '))
' → logprob: -14.627849578857422
    8. ')`
' → logprob: -15.377849578857422
    9. '())' → logprob: -16.002849578857422
    10. ')))' → logprob: -16.002849578857422

Token 390: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0015540247550234199
    2. 'elif' → logprob: -6.501554012298584
    3. ')' → logprob: -10.876554489135742
    4. ' else' → logprob: -11.001554489135742
    5. '
' → logprob: -11.876554489135742
    6. '```' → logprob: -12.376554489135742
    7. '   ' → logprob: -13.251554489135742
    8. '    
' → logprob: -13.501554489135742
    9. 'print' → logprob: -15.126554489135742
    10. '#else' → logprob: -15.501554489135742

Token 391: ' sys' (ID: 12228)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.011970081366598606
    2. 'elif' → logprob: -4.511970043182373
    3. 'exit' → logprob: -7.011970043182373
    4. '   ' → logprob: -11.386970520019531
    5. '```' → logprob: -12.386970520019531
    6. 'print' → logprob: -13.261970520019531
    7. 'sys' (adapté à ' sys') → logprob: -13.386970520019531
    8. '    
' → logprob: -14.886970520019531
    9. 'quit' → logprob: -15.136970520019531
    10. ' else' → logprob: -15.136970520019531

Token 392: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -8.180258191714529e-06
    2. '.' → logprob: -12.000008583068848
    3. 'exit' → logprob: -14.000008583068848
    4. '.stdout' → logprob: -14.250008583068848
    5. '	exit' → logprob: -15.875008583068848
    6. '.quit' → logprob: -16.25000762939453
    7. '.EXIT' → logprob: -16.25000762939453
    8. '.Exit' → logprob: -16.37500762939453
    9. ' .' → logprob: -16.62500762939453
    10. '.ex' → logprob: -17.37500762939453

Token 393: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009199160267598927
    2. '(' → logprob: -7.000919818878174
    3. '0' → logprob: -13.125920295715332
    4. '()
' → logprob: -13.250920295715332
    5. ' ()' → logprob: -13.625920295715332
    6. '()(' → logprob: -13.875920295715332
    7. '()`' → logprob: -14.250920295715332
    8. '().' → logprob: -14.500920295715332
    9. '()?' → logprob: -15.375920295715332
    10. '()]' → logprob: -15.500920295715332

Token 394: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2583252787590027
    2. 'for' → logprob: -2.5083253383636475
    3. 'result' → logprob: -2.7583253383636475
    4. 'res' → logprob: -3.6333253383636475
    5. 'ans' → logprob: -3.8833253383636475
    6. 'answer' → logprob: -3.8833253383636475
    7. 'n' → logprob: -6.133325099945068
    8. 'count' → logprob: -6.508325099945068
    9. 'def' → logprob: -6.633325099945068
    10. 'r' → logprob: -6.633325099945068

Token 395: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022887587547302
    2. '=' → logprob: -2.350228786468506
    3. ':' → logprob: -10.975229263305664
    4. ' ' → logprob: -13.100229263305664
    5. '_' → logprob: -13.850229263305664
    6. ')' → logprob: -14.975229263305664
    7. '.' → logprob: -15.225229263305664
    8. ',' → logprob: -15.475229263305664
    9. '(' → logprob: -16.100229263305664
    10. '=n' → logprob: -16.100229263305664

Token 396: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021567221730947495
    2. 'n' → logprob: -4.521567344665527
    3. '(n' → logprob: -5.146567344665527
    4. '1' → logprob: -6.021567344665527
    5. '(k' → logprob: -7.146567344665527
    6. '(' → logprob: -7.146567344665527
    7. 'k' → logprob: -8.646567344665527
    8. ' ' → logprob: -8.896567344665527
    9. 'pow' → logprob: -9.771567344665527
    10. ' (' → logprob: -10.021567344665527

Token 397: '(
' (ID: 1607)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005165747134014964
    2. '((' → logprob: -8.250516891479492
    3. '(' → logprob: -8.875516891479492
    4. '(
' → logprob: -9.750516891479492
    5. '(range' → logprob: -10.625516891479492
    6. 'n' → logprob: -10.875516891479492
    7. '([' → logprob: -11.375516891479492
    8. '[n' → logprob: -14.500516891479492
    9. '(pow' → logprob: -14.875516891479492
    10. '(i' → logprob: -15.250516891479492

Token 398: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0045593613758683205
    2. '(n' → logprob: -5.629559516906738
    3. '   ' → logprob: -7.254559516906738
    4. ' n' → logprob: -9.129559516906738
    5. '(' → logprob: -9.629559516906738
    6. 'pow' → logprob: -10.754559516906738
    7. ')' → logprob: -11.754559516906738
    8. '[n' → logprob: -11.879559516906738
    9. 'k' → logprob: -12.004559516906738
    10. '(
' → logprob: -12.129559516906738

Token 399: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.011505997739732265
    2. '(n' → logprob: -4.511506080627441
    3. '(' → logprob: -8.511506080627441
    4. 'pow' → logprob: -9.636506080627441
    5. 'k' → logprob: -10.011506080627441
    6. ' n' → logprob: -10.511506080627441
    7. '(
' → logprob: -10.636506080627441
    8. '   ' → logprob: -11.011506080627441
    9. '(k' → logprob: -11.011506080627441
    10. '((' → logprob: -11.136506080627441

Token 400: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.723973582556937e-05
    2. 'Pk' → logprob: -11.250017166137695
    3. ',' → logprob: -13.250017166137695
    4. '(n' → logprob: -14.625017166137695
    5. ')' → logprob: -14.750017166137695
    6. ' C' → logprob: -14.875017166137695
    7. 'n' → logprob: -15.250017166137695
    8. 'P' → logprob: -15.750017166137695
    9. ' -' → logprob: -15.875017166137695
    10. 'Cn' → logprob: -16.000017166137695

Token 401: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.014251885935664177
    2. '(n' → logprob: -4.264251708984375
    3. '(' → logprob: -10.014251708984375
    4. 'n' → logprob: -10.639251708984375
    5. '2' → logprob: -11.639251708984375
    6. '(k' → logprob: -11.764251708984375
    7. '_k' → logprob: -13.389251708984375
    8. '((' → logprob: -14.764251708984375
    9. ' (' → logprob: -15.014251708984375
    10. ' k' → logprob: -15.514251708984375

Token 402: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001570683903992176
    2. '(' → logprob: -6.626570701599121
    3. '(k' → logprob: -8.501570701599121
    4. '((' → logprob: -10.626570701599121
    5. '(
' → logprob: -11.376570701599121
    6. 'n' → logprob: -12.501570701599121
    7. '(i' → logprob: -14.126570701599121
    8. ' (' → logprob: -14.376570701599121
    9. '
' → logprob: -15.751570701599121
    10. '2' → logprob: -16.251569747924805

Token 403: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7227898240089417
    2. '+k' → logprob: -1.8477897644042969
    3. '+' → logprob: -1.9727897644042969
    4. '   ' → logprob: -2.472789764404297
    5. ',' → logprob: -2.972789764404297
    6. 'k' → logprob: -3.722789764404297
    7. ' +' → logprob: -3.972789764404297
    8. ' -' → logprob: -4.472789764404297
    9. '+n' → logprob: -5.097789764404297
    10. 'n' → logprob: -5.222789764404297

Token 404: ' z' (ID: 579)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02135206200182438
    2. 'x' → logprob: -4.646352291107178
    3. 'k' → logprob: -4.771352291107178
    4. 'j' → logprob: -6.396352291107178
    5. 'a' → logprob: -7.896352291107178
    6. 'm' → logprob: -8.64635181427002
    7. 'r' → logprob: -9.02135181427002
    8. 'd' → logprob: -9.39635181427002
    9. 't' → logprob: -9.77135181427002
    10. 'n' → logprob: -9.89635181427002

Token 405: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00027325618430040777
    2. ')*' → logprob: -9.000273704528809
    3. ')
' → logprob: -9.625273704528809
    4. '   ' → logprob: -9.750273704528809
    5. ' )' → logprob: -11.875273704528809
    6. 'k' → logprob: -12.875273704528809
    7. '```' → logprob: -13.000273704528809
    8. '  ' → logprob: -13.625273704528809
    9. ' ' → logprob: -13.750273704528809
    10. '+' → logprob: -13.875273704528809

Token 406: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5057206749916077
    2. 'for' → logprob: -1.630720615386963
    3. ' for' → logprob: -2.005720615386963
    4. '(n' → logprob: -2.880720615386963
    5. ' *' → logprob: -5.880720615386963
    6. '(k' → logprob: -6.255720615386963
    7. '(' → logprob: -6.380720615386963
    8. '*' → logprob: -6.380720615386963
    9. ')' → logprob: -7.255720615386963
    10. '(
' → logprob: -8.005721092224121

Token 407: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0008968125330284238
    2. ' n' → logprob: -7.62589693069458
    3. '   ' → logprob: -8.125896453857422
    4. 'k' → logprob: -9.625896453857422
    5. '(n' → logprob: -11.250896453857422
    6. 'pow' → logprob: -11.375896453857422
    7. ' ' → logprob: -12.250896453857422
    8. '  ' → logprob: -12.250896453857422
    9. '
' → logprob: -13.000896453857422
    10. '2' → logprob: -13.250896453857422

Token 408: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.0010229245526716113
    2. 'Pk' → logprob: -7.251022815704346
    3. '(n' → logprob: -8.251023292541504
    4. 'k' → logprob: -10.751023292541504
    5. '-k' → logprob: -12.251023292541504
    6. '-' → logprob: -12.501023292541504
    7. 'n' → logprob: -12.501023292541504
    8. '[n' → logprob: -12.876023292541504
    9. '(k' → logprob: -13.126023292541504
    10. '   ' → logprob: -13.251023292541504

Token 409: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0044120787642896175
    2. '(n' → logprob: -6.0044121742248535
    3. '(k' → logprob: -6.2544121742248535
    4. 'n' → logprob: -12.004411697387695
    5. '(' → logprob: -12.754411697387695
    6. '_k' → logprob: -13.754411697387695
    7. 'C' → logprob: -13.879411697387695
    8. '
' → logprob: -15.004411697387695
    9. ' k' → logprob: -15.629411697387695
    10. '{k' → logprob: -15.754411697387695

Token 410: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.009667552076280117
    2. '(k' → logprob: -4.88466739654541
    3. 'n' → logprob: -6.63466739654541
    4. '(' → logprob: -7.88466739654541
    5. '((' → logprob: -8.13466739654541
    6. '(
' → logprob: -10.50966739654541
    7. 'k' → logprob: -10.88466739654541
    8. '
' → logprob: -11.38466739654541
    9. '(m' → logprob: -11.88466739654541
    10. ' (' → logprob: -12.00966739654541

Token 411: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7494121193885803
    2. '+' → logprob: -1.6244120597839355
    3. '+k' → logprob: -2.1244120597839355
    4. 'k' → logprob: -2.3744120597839355
    5. ' +' → logprob: -3.2494120597839355
    6. '(n' → logprob: -3.7494120597839355
    7. '(k' → logprob: -4.3744120597839355
    8. 'n' → logprob: -4.6244120597839355
    9. ' -' → logprob: -4.7494120597839355
    10. 'z' → logprob: -5.2494120597839355

Token 412: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0016605432610958815
    2. 'k' → logprob: -6.501660346984863
    3. 'z' → logprob: -9.376660346984863
    4. '2' → logprob: -9.751660346984863
    5. ' ' → logprob: -11.751660346984863
    6. 'n' → logprob: -12.376660346984863
    7. '-' → logprob: -14.126660346984863
    8. ' k' → logprob: -14.626660346984863
    9. '
' → logprob: -14.814160346984863
    10. '   ' → logprob: -14.876660346984863

Token 413: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008852534228935838
    2. 'k' → logprob: -7.250885486602783
    3. '2' → logprob: -9.375885009765625
    4. 'z' → logprob: -9.500885009765625
    5. ' ' → logprob: -12.125885009765625
    6. '
' → logprob: -12.375885009765625
    7. 'n' → logprob: -13.375885009765625
    8. '-' → logprob: -14.000885009765625
    9. '
' → logprob: -14.000885009765625
    10. '3' → logprob: -14.250885009765625

Token 414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08113686740398407
    2. '(n' → logprob: -3.70613694190979
    3. ' -' → logprob: -4.331136703491211
    4. '-' → logprob: -4.456136703491211
    5. '(k' → logprob: -5.331136703491211
    6. ',k' → logprob: -5.331136703491211
    7. '   ' → logprob: -5.581136703491211
    8. '-k' → logprob: -5.831136703491211
    9. '(' → logprob: -5.956136703491211
    10. ' ,' → logprob: -6.081136703491211

Token 415: ' z' (ID: 579)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0039980229921638966
    2. 'z' → logprob: -6.503997802734375
    3. '   ' → logprob: -6.753997802734375
    4. ' k' → logprob: -6.878997802734375
    5. '
' → logprob: -8.878997802734375
    6. 'n' → logprob: -9.878997802734375
    7. ' ' → logprob: -10.503997802734375
    8. '
' → logprob: -10.878997802734375
    9. '(k' → logprob: -10.878997802734375
    10. '    
' → logprob: -11.878997802734375

Token 416: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019294193014502525
    2. ')
' → logprob: -4.019294261932373
    3. '-' → logprob: -7.894294261932373
    4. 'for' → logprob: -8.769293785095215
    5. ' -' → logprob: -8.769293785095215
    6. '   ' → logprob: -9.269293785095215
    7. 'z' → logprob: -9.269293785095215
    8. '+' → logprob: -9.519293785095215
    9. ' for' → logprob: -10.019293785095215
    10. ')%' → logprob: -10.019293785095215

Token 417: ' %' (ID: 1851)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0230120420455933
    2. '%' → logprob: -1.1480120420455933
    3. ' for' → logprob: -1.2730120420455933
    4. ' %' → logprob: -3.398012161254883
    5. '   ' → logprob: -4.648012161254883
    6. '
' → logprob: -9.648012161254883
    7. ' ' → logprob: -10.023012161254883
    8. '%n' → logprob: -10.398012161254883
    9. ')' → logprob: -10.773012161254883
    10. '%d' → logprob: -11.273012161254883

Token 418: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.5954712075181305e-05
    2. ' MOD' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.625036239624023
    4. '
' → logprob: -19.250036239624023
    5. '_MOD' → logprob: -19.250036239624023
    6. '(M' → logprob: -19.750036239624023
    7. ' ' → logprob: -20.125036239624023
    8. '.MOD' → logprob: -20.250036239624023
    9. '(' → logprob: -21.250036239624023
    10. '  ' → logprob: -21.250036239624023

Token 419: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40475067496299744
    2. ' for' → logprob: -1.5297507047653198
    3. 'for' → logprob: -2.1547505855560303
    4. '
' → logprob: -9.15475082397461
    5. '  ' → logprob: -9.52975082397461
    6. ')' → logprob: -10.02975082397461
    7. '    ' → logprob: -10.15475082397461
    8. ' ' → logprob: -10.15475082397461
    9. '*' → logprob: -11.90475082397461
    10. '%' → logprob: -12.02975082397461

Token 420: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7324261665344238
    2. ' for' → logprob: -0.8574261665344238
    3. 'for' → logprob: -2.357426166534424
    4. '
' → logprob: -9.732425689697266
    5. ' ' → logprob: -9.732425689697266
    6. '  ' → logprob: -9.857425689697266
    7. ' *' → logprob: -9.982425689697266
    8. ')' → logprob: -10.107425689697266
    9. '*' → logprob: -10.357425689697266
    10. '    ' → logprob: -10.482425689697266

Token 421: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4805689752101898
    2. 'for' (adapté à ' for') → logprob: -0.9805690050125122
    3. '   ' → logprob: -5.105568885803223
    4. '%' → logprob: -8.105568885803223
    5. '*' → logprob: -10.105568885803223
    6. ' *' → logprob: -10.355568885803223
    7. ' ' → logprob: -11.230568885803223
    8. ' %' → logprob: -12.105568885803223
    9. '  ' → logprob: -12.355568885803223
    10. ')' → logprob: -12.480568885803223

Token 422: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.009762110188603401
    2. ' z' → logprob: -4.634762287139893
    3. '	z' → logprob: -12.134761810302734
    4. '```' → logprob: -15.634761810302734
    5. ' ' → logprob: -15.884761810302734
    6. '
' → logprob: -16.009761810302734
    7. '_z' → logprob: -16.009761810302734
    8. 'range' → logprob: -16.134761810302734
    9. '   ' → logprob: -16.259761810302734
    10. ')' → logprob: -18.384761810302734

Token 423: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011947521707043052
    2. 'in' → logprob: -6.751194953918457
    3. 'range' → logprob: -10.876194953918457
    4. ' range' → logprob: -13.126194953918457
    5. ')' → logprob: -13.501194953918457
    6. '   ' → logprob: -14.251194953918457
    7. ' ' → logprob: -14.501194953918457
    8. '	in' → logprob: -15.126194953918457
    9. 'z' → logprob: -15.501194953918457
    10. '<|end|>' → logprob: -15.751194953918457

Token 424: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7610454708337784e-05
    2. ' range' → logprob: -10.500027656555176
    3. '(range' → logprob: -21.12502670288086
    4. '	range' → logprob: -21.25002670288086
    5. 'r' → logprob: -22.62502670288086
    6. '.range' → logprob: -23.37502670288086
    7. ')' → logprob: -23.75002670288086
    8. 'ran' → logprob: -23.87502670288086
    9. 'rang' → logprob: -24.00002670288086
    10. '
' → logprob: -24.00002670288086

Token 425: '(' (ID: 7)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.0007343433680944145
    2. '(' → logprob: -7.750734329223633
    3. 'k' → logprob: -8.250734329223633
    4. '(min' → logprob: -10.250734329223633
    5. ' (' → logprob: -13.375734329223633
    6. '(
' → logprob: -13.375734329223633
    7. '0' → logprob: -13.500734329223633
    8. ')' → logprob: -14.375734329223633
    9. '1' → logprob: -14.500734329223633
    10. '((' → logprob: -15.125734329223633

Token 426: '1' (ID: 16)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.6895233531831764e-05
    2. '0' → logprob: -11.00002670288086
    3. '(k' → logprob: -12.37502670288086
    4. '   ' → logprob: -12.75002670288086
    5. ' k' → logprob: -13.12502670288086
    6. '{k' → logprob: -14.50002670288086
    7. 'min' → logprob: -15.62502670288086
    8. '1' → logprob: -15.87502670288086
    9. ')' → logprob: -16.50002670288086
    10. '
' → logprob: -16.87502670288086

Token 427: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01178642176091671
    2. ',k' → logprob: -4.511786460876465
    3. '(k' → logprob: -8.011786460876465
    4. ' ,' → logprob: -8.511786460876465
    5. 'k' → logprob: -9.136786460876465
    6. ',n' → logprob: -9.886786460876465
    7. ',
' → logprob: -10.886786460876465
    8. '   ' → logprob: -11.386786460876465
    9. ' k' → logprob: -11.886786460876465
    10. '(n' → logprob: -12.386786460876465

Token 428: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.951771421066951e-05
    2. ' k' → logprob: -10.500029563903809
    3. '   ' → logprob: -13.625029563903809
    4. '(k' → logprob: -15.375029563903809
    5. 'min' → logprob: -15.375029563903809
    6. '	k' → logprob: -16.125028610229492
    7. '{k' → logprob: -16.250028610229492
    8. '
' → logprob: -18.375028610229492
    9. ' ' → logprob: -18.375028610229492
    10. 'n' → logprob: -18.625028610229492

Token 429: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17976194620132446
    2. ' +' → logprob: -1.8047618865966797
    3. '+
' → logprob: -11.80476188659668
    4. '   ' → logprob: -12.55476188659668
    5. ' +
' → logprob: -12.92976188659668
    6. ')' → logprob: -13.92976188659668
    7. '):
' → logprob: -14.17976188659668
    8. ',' → logprob: -14.80476188659668
    9. '＋' → logprob: -15.05476188659668
    10. ' ' → logprob: -15.55476188659668

Token 430: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021891399228479713
    2. ' ' → logprob: -9.000219345092773
    3. '2' → logprob: -9.375219345092773
    4. '+' → logprob: -11.500219345092773
    5. '   ' → logprob: -16.125219345092773
    6. 'k' → logprob: -16.125219345092773
    7. ' +' → logprob: -16.625219345092773
    8. ' k' → logprob: -16.875219345092773
    9. '```' → logprob: -17.375219345092773
    10. '
' → logprob: -17.500219345092773

Token 431: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006340435356833041
    2. '2' → logprob: -7.37563419342041
    3. ' ' → logprob: -12.12563419342041
    4. '+' → logprob: -13.62563419342041
    5. '```' → logprob: -15.75063419342041
    6. '
' → logprob: -15.87563419342041
    7. '3' → logprob: -15.93813419342041
    8. '   ' → logprob: -16.688133239746094
    9. 'k' → logprob: -16.875633239746094
    10. 'z' → logprob: -17.063133239746094

Token 432: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025484352372586727
    2. '))' → logprob: -6.1275482177734375
    3. ')
' → logprob: -8.002548217773438
    4. '):' → logprob: -11.752548217773438
    5. '   ' → logprob: -12.127548217773438
    6. ')))' → logprob: -12.252548217773438
    7. ')+' → logprob: -12.377548217773438
    8. '+' → logprob: -13.252548217773438
    9. '):
' → logprob: -13.502548217773438
    10. ' )' → logprob: -14.127548217773438

Token 433: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010379294399172068
    2. ')+' → logprob: -7.626038074493408
    3. '+' → logprob: -8.00103759765625
    4. ')
' → logprob: -8.75103759765625
    5. '   ' → logprob: -10.62603759765625
    6. ' )' → logprob: -11.62603759765625
    7. ')*' → logprob: -12.00103759765625
    8. ' +' → logprob: -12.75103759765625
    9. '):' → logprob: -13.37603759765625
    10. ')**' → logprob: -13.62603759765625

Token 434: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2948405128554441e-05
    2. ' print' → logprob: -11.75001335144043
    3. 'ans' → logprob: -12.87501335144043
    4. '
' → logprob: -13.50001335144043
    5. '```' → logprob: -14.87501335144043
    6. '+' → logprob: -15.37501335144043
    7. ')' → logprob: -15.75001335144043
    8. ')
' → logprob: -16.12501335144043
    9. '%' → logprob: -17.37501335144043
    10. '<|end|>' → logprob: -17.37501335144043

Token 435: ' =' (ID: 314)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.6503421068191528
    2. '%=' → logprob: -1.0253421068191528
    3. '=' → logprob: -2.5253419876098633
    4. '%' → logprob: -3.6503419876098633
    5. '+=' → logprob: -5.025341987609863
    6. ' =' → logprob: -5.650341987609863
    7. ' +=' → logprob: -6.275341987609863
    8. ' %' → logprob: -6.900341987609863
    9. 'print' → logprob: -8.025341987609863
    10. ')' → logprob: -10.650341987609863

Token 436: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.013474064879119396
    2. 'ans' → logprob: -4.638473987579346
    3. ' (' → logprob: -5.888473987579346
    4. ' ans' → logprob: -7.513473987579346
    5. '(' → logprob: -7.888473987579346
    6. '(int' → logprob: -12.763474464416504
    7. '(n' → logprob: -12.763474464416504
    8. '(an' → logprob: -12.888474464416504
    9. 'int' → logprob: -13.013474464416504
    10. '(answer' → logprob: -13.513474464416504

Token 437: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3874635696411133
    2. '(ans' → logprob: -1.1374635696411133
    3. '(' → logprob: -8.137463569641113
    4. '(n' → logprob: -8.887463569641113
    5. '1' → logprob: -9.637463569641113
    6. 'n' → logprob: -9.887463569641113
    7. ' ans' → logprob: -10.512463569641113
    8. '(k' → logprob: -12.762463569641113
    9. '	ans' → logprob: -12.887463569641113
    10. ' (' → logprob: -13.137463569641113

Token 438: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6993483901023865
    2. ' +' → logprob: -0.6993483901023865
    3. ' *' → logprob: -5.574348449707031
    4. '*' → logprob: -6.574348449707031
    5. ')' → logprob: -7.074348449707031
    6. '%' → logprob: -9.449348449707031
    7. '+n' → logprob: -10.074348449707031
    8. ' %' → logprob: -12.324348449707031
    9. '+k' → logprob: -12.449348449707031
    10. '   ' → logprob: -12.824348449707031

Token 439: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5707814693450928
    2. '1' → logprob: -0.9457814693450928
    3. ' n' → logprob: -3.3207814693450928
    4. ' ' → logprob: -4.945781707763672
    5. '2' → logprob: -5.945781707763672
    6. '   ' → logprob: -7.820781707763672
    7. '
' → logprob: -9.695781707763672
    8. '(n' → logprob: -9.820781707763672
    9. ')' → logprob: -10.195781707763672
    10. '(' → logprob: -10.570781707763672

Token 440: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38981637358665466
    2. 'n' → logprob: -1.139816403388977
    3. '2' → logprob: -6.0148162841796875
    4. ' n' → logprob: -8.639816284179688
    5. ' ' → logprob: -9.264816284179688
    6. '
' → logprob: -9.514816284179688
    7. '   ' → logprob: -10.389816284179688
    8. 'ans' → logprob: -10.764816284179688
    9. '(n' → logprob: -10.764816284179688
    10. 'sum' → logprob: -10.764816284179688

Token 441: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8670179997570813e-05
    2. ' )' → logprob: -11.375019073486328
    3. ')%' → logprob: -11.875019073486328
    4. '）' → logprob: -16.000019073486328
    5. ')
' → logprob: -16.750019073486328
    6. '   ' → logprob: -17.500019073486328
    7. '```' → logprob: -19.625019073486328
    8. ' ' → logprob: -20.125019073486328
    9. ' ' → logprob: -20.750019073486328
    10. '
' → logprob: -20.875019073486328

Token 442: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.20262308418750763
    2. '%' → logprob: -1.7026231288909912
    3. ')' → logprob: -6.827622890472412
    4. ')%' → logprob: -9.57762336730957
    5. '
' → logprob: -10.82762336730957
    6. '%n' → logprob: -11.07762336730957
    7. ' ' → logprob: -11.57762336730957
    8. '<|end|>' → logprob: -13.20262336730957
    9. ' %=' → logprob: -13.45262336730957
    10. '%D' → logprob: -13.82762336730957

Token 443: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.320199877838604e-07
    2. ' MOD' → logprob: -14.75
    3. '```' → logprob: -21.625
    4. '_MOD' → logprob: -22.25
    5. '(M' → logprob: -22.375
    6. 'MO' → logprob: -22.875
    7. '.MOD' → logprob: -23.125
    8. '100' → logprob: -23.75
    9. '`' → logprob: -25.25
    10. '
' → logprob: -25.75

Token 444: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00043162284418940544
    2. '
' → logprob: -7.750431537628174
    3. ' print' → logprob: -14.375432014465332
    4. '```' → logprob: -15.000432014465332
    5. '

' → logprob: -17.625431060791016
    6. '
' → logprob: -17.625431060791016
    7. '(print' → logprob: -19.000431060791016
    8. '  
' → logprob: -19.500431060791016
    9. '<|end|>' → logprob: -19.875431060791016
    10. '.print' → logprob: -20.250431060791016

Token 445: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. '```' → logprob: -18.375
    3. ' print' → logprob: -18.625
    4. '
' → logprob: -21.875
    5. '#print' → logprob: -23.25
    6. '``' → logprob: -24.25
    7. '	print' → logprob: -24.875
    8. '.print' → logprob: -25.75
    9. '(print' → logprob: -25.75
    10. '<|end|>' → logprob: -26.625

Token 446: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00012594614236149937
    2. '(' → logprob: -9.000125885009766
    3. 'ans' → logprob: -13.000125885009766
    4. ' (' → logprob: -16.500125885009766
    5. '(
' → logprob: -16.875125885009766
    6. '(answer' → logprob: -17.250125885009766
    7. '	ans' → logprob: -19.375125885009766
    8. '(an' → logprob: -20.250125885009766
    9. '((' → logprob: -20.625125885009766
    10. ' ans' → logprob: -20.750125885009766

Token 447: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ')
' → logprob: -12.500006675720215
    3. ' )' → logprob: -13.250006675720215
    4. '())' → logprob: -14.500006675720215
    5. '()' → logprob: -15.125006675720215
    6. '`)' → logprob: -16.2500057220459
    7. '```' → logprob: -16.8750057220459
    8. '))' → logprob: -16.8750057220459
    9. '')' → logprob: -17.3750057220459
    10. ')`' → logprob: -17.6250057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 445
Tokens correctement prédits (1ère position, stricte): 198
Tokens correctement prédits (1ère position, avec adaptation): 210
Tokens correctement prédits (top 10): 400
Précision stricte (1ère position): 44.49%
Précision adaptée (1ère position): 47.19%
Précision (top 10): 89.89%
================================================================================
