================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:51
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys  # Importe le module système, utile pour interagir avec les entrées/sorties standard et d'autres fonctions système

read = sys.stdin.read  # Crée un alias 'read' qui référence la fonction d'entrée standard pour tout lire, rarement utilisé ici
readlines = sys.stdin.readlines  # Crée un alias 'readlines' pour lire toutes les lignes depuis l'entrée standard

def main():
    # Demande à l'utilisateur d'entrer un nombre entier depuis l'entrée standard
    # La fonction input() lit une ligne de texte, puis int() convertit cette chaîne en un entier
    n = int(input())

    # Crée une liste vide nommée 'nums' pour stocker tous les puissances de 6 et 9 inférieures ou égales à n
    nums = []

    # Initialise une variable pour parcourir les puissances de 6, commence à 6
    n6 = 6

    # Boucle while pour ajouter toutes les puissances de 6 <= n à la liste 'nums'
    # Ex: 6, 36, 216, etc.
    while n6 <= n:
        nums.append(n6)  # Ajoute la puissance courante de 6 à la liste
        n6 = n6 * 6      # Multiplie la valeur courante de n6 par 6 pour passer à la puissance suivante

    # Initialise une variable pour parcourir les puissances de 9, commence à 9
    n9 = 9

    # Boucle while pour ajouter toutes les puissances de 9 <= n à la liste 'nums'
    # Ex: 9, 81, 729, etc.
    while n9 <= n:
        nums.append(n9)  # Ajoute la puissance courante de 9 à la liste
        n9 = n9 * 9      # Multiplie la valeur courante de n9 par 9 pour passer à la puissance suivante

    # Trie la liste 'nums' en ordre décroissant (du plus grand au plus petit) pour rendre les calculs potentiellement plus rapides
    nums.sort(reverse=True)

    # Initialise une liste 'dp' pour la programmation dynamique
    # dp[i] représentera le nombre minimal de pièces requises pour former le nombre i
    # On initialise dp[i] avec la valeur i, ce qui correspond au cas où on ne pourrait utiliser que des pièces de 1
    dp = [i for i in range(2 * n + 1)]
    # range(2 * n + 1) génère la séquence d'entiers de 0 à 2n inclus, soit (2n + 1) valeurs

    # Boucle sur chaque valeur dans 'nums', c'est-à-dire chaque pièce de type "puissance de 6 ou 9"
    for num in nums:
        # Pour chaque pièce 'num', on essaie de mettre à jour tous les dp pour les montants possibles
        for j1 in range(n + 1):
            # On essaie d'utiliser une nouvelle pièce 'num' pour former la somme j1 + num
            # On vérifie si utiliser la pièce 'num' diminue le nombre total de pièces nécessaires pour obtenir j1+num
            dp[j1 + num] = min(dp[j1 + num], dp[j1] + 1)

    # Affiche le nombre minimum de pièces nécessaires pour former le nombre 'n'
    print(dp[n])

# Ce bloc assure que la fonction main() n'est appelée que si le fichier est exécuté comme programme principal
# __name__ est une variable spéciale qui prend la valeur '__main__' quand le fichier est exécuté et non importé
if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.013888094574213028
    2. '\n' → logprob: -5.513887882232666
    3. '<|end|>' → logprob: -5.513887882232666
    4. '\' → logprob: -5.763887882232666
    5. 'import' → logprob: -7.263887882232666
    6. 'newline' → logprob: -7.388887882232666
    7. '```' → logprob: -8.513888359069824
    8. '<|end|>' → logprob: -8.638888359069824
    9. '' → logprob: -8.763888359069824
    10. '[' → logprob: -8.763888359069824

Token 4: ' Im' (ID: 3133)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13698412477970123
    2. '.' → logprob: -3.13698410987854
    3. '  ' → logprob: -3.51198410987854
    4. '<|end|>' → logprob: -3.88698410987854
    5. '<|end|>' → logprob: -4.886984348297119
    6. 'import' → logprob: -5.011984348297119
    7. 'space' → logprob: -5.636984348297119
    8. '[' → logprob: -6.011984348297119
    9. ' .' → logprob: -6.136984348297119
    10. '#' → logprob: -6.261984348297119

Token 5: 'porte' (ID: 17761)
  Prédit: 'port'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'port' → logprob: -0.0003959992900490761
    2. 'p' → logprob: -7.875395774841309
    3. 'ported' → logprob: -11.750395774841309
    4. 'ports' → logprob: -12.500395774841309
    5. 'por' → logprob: -13.375395774841309
    6. 'porter' → logprob: -13.875395774841309
    7. ' port' → logprob: -15.000395774841309
    8. 'plement' → logprob: -15.375395774841309
    9. 'import' → logprob: -15.500395774841309
    10. ' ' → logprob: -15.625395774841309

Token 6: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.21152691543102264
    2. ' ' → logprob: -1.711526870727539
    3. ' r' → logprob: -5.586526870727539
    4. 'rt' → logprob: -5.961526870727539
    5. 'n' → logprob: -7.336526870727539
    6. 'nt' → logprob: -7.586526870727539
    7. ' space' → logprob: -7.711526870727539
    8. 'd' → logprob: -7.836526870727539
    9. '  ' → logprob: -7.836526870727539
    10. ' d' → logprob: -7.961526870727539

Token 7: ' module' (ID: 8827)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6566522717475891
    2. ' ' → logprob: -1.2816522121429443
    3. 'r' → logprob: -2.2816522121429443
    4. ' sys' → logprob: -3.9066522121429443
    5. ' module' → logprob: -4.031652450561523
    6. ' r' → logprob: -4.406652450561523
    7. 'space' → logprob: -4.656652450561523
    8. ' space' → logprob: -4.781652450561523
    9. ' ' → logprob: -5.031652450561523
    10. '  ' → logprob: -5.531652450561523

Token 8: ' système' (ID: 30034)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1288491040468216
    2. ',' → logprob: -3.5038490295410156
    3. ' ' → logprob: -3.6288490295410156
    4. '' → logprob: -4.003849029541016
    5. '\' → logprob: -4.128849029541016
    6. '\n' → logprob: -4.503849029541016
    7. 'import' → logprob: -5.003849029541016
    8. ' .' → logprob: -6.253849029541016
    9. '<|end|>' → logprob: -6.503849029541016
    10. '
' → logprob: -6.878849029541016

Token 9: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4640711545944214
    2. '\n' → logprob: -1.4640711545944214
    3. '' → logprob: -1.8390711545944214
    4. 'import' → logprob: -2.089071273803711
    5. '
' → logprob: -2.214071273803711
    6. ' ' → logprob: -2.714071273803711
    7. '\' → logprob: -3.839071273803711
    8. '<|end|>' → logprob: -3.964071273803711
    9. ',' → logprob: -4.339071273803711
    10. '

' → logprob: -4.714071273803711

Token 10: ' utile' (ID: 68237)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9207556843757629
    2. ',' → logprob: -1.6707556247711182
    3. 'import' → logprob: -2.170755624771118
    4. '.' → logprob: -2.920755624771118
    5. '<|end|>' → logprob: -3.045755624771118
    6. '
' → logprob: -3.170755624771118
    7. '\n' → logprob: -3.295755624771118
    8. ' ,' → logprob: -3.420755624771118
    9. '  ' → logprob: -4.295755863189697
    10. '\' → logprob: -4.295755863189697

Token 11: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.27183374762535095
    2. ',' → logprob: -2.896833658218384
    3. ' ' → logprob: -2.896833658218384
    4. 'import' → logprob: -3.396833658218384
    5. '\' → logprob: -3.521833658218384
    6. '\n' → logprob: -3.896833658218384
    7. '<|end|>' → logprob: -4.521833896636963
    8. '```' → logprob: -4.771833896636963
    9. ' pour' → logprob: -5.521833896636963
    10. '  ' → logprob: -5.646833896636963

Token 12: ' inter' (ID: 993)
  Prédit: ' gérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gérer' → logprob: -0.9907366633415222
    2. ' manip' → logprob: -1.240736722946167
    3. 'l' → logprob: -2.490736722946167
    4. 'man' → logprob: -3.115736722946167
    5. 'inter' → logprob: -3.240736722946167
    6. ' l' → logprob: -3.490736722946167
    7. ' la' → logprob: -3.740736722946167
    8. 'la' → logprob: -3.990736722946167
    9. 'les' → logprob: -4.490736484527588
    10. 'g' → logprob: -4.615736484527588

Token 13: 'agir' (ID: 105832)
  Prédit: 'rom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rom' → logprob: -0.738122820854187
    2. 'preter' → logprob: -1.863122820854187
    3. 'agir' → logprob: -1.863122820854187
    4. 'rupt' → logprob: -2.6131229400634766
    5. 'rup' → logprob: -3.1131229400634766
    6. 'pr' → logprob: -3.7381229400634766
    7. 'face' → logprob: -4.238122940063477
    8. 'ruption' → logprob: -4.238122940063477
    9. 'faces' → logprob: -5.113122940063477
    10. 'act' → logprob: -5.113122940063477

Token 14: ' avec' (ID: 3937)
  Prédit: ' avec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avec' → logprob: -0.4386439025402069
    2. ' ' → logprob: -2.0636439323425293
    3. 'with' → logprob: -2.4386439323425293
    4. ' with' → logprob: -2.6886439323425293
    5. 'avec' → logprob: -3.5636439323425293
    6. '.' → logprob: -4.063643932342529
    7. '_' → logprob: -4.438643932342529
    8. 'import' → logprob: -5.313643932342529
    9. ',' → logprob: -5.813643932342529
    10. 's' → logprob: -6.688643932342529

Token 15: ' les' (ID: 1341)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.17878791689872742
    2. ' le' → logprob: -2.92878794670105
    3. 'l' → logprob: -3.17878794670105
    4. 'le' → logprob: -3.42878794670105
    5. ' les' → logprob: -4.428787708282471
    6. ' ' → logprob: -4.553787708282471
    7. ' ' → logprob: -5.553787708282471
    8. ' des' → logprob: -5.928787708282471
    9. 'les' → logprob: -6.178787708282471
    10. ' sys' → logprob: -6.803787708282471

Token 16: ' entr' (ID: 7072)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.167357325553894
    2. 'process' → logprob: -2.1673574447631836
    3. 'program' → logprob: -2.5423574447631836
    4. 'util' → logprob: -2.6673574447631836
    5. 'arguments' → logprob: -2.6673574447631836
    6. 's' → logprob: -2.7923574447631836
    7. ' fichiers' → logprob: -3.0423574447631836
    8. ' ' → logprob: -3.2923574447631836
    9. ' arguments' → logprob: -3.5423574447631836
    10. ' utilisateurs' → logprob: -3.7923574447631836

Token 17: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.023532193154096603
    2. 'ée' → logprob: -4.398532390594482
    3. 'é' → logprob: -4.523532390594482
    4. 'és' → logprob: -9.523531913757324
    5. 'e' → logprob: -11.148531913757324
    6. 'er' → logprob: -12.023531913757324
    7. 'es' → logprob: -12.773531913757324
    8. 't' → logprob: -12.773531913757324
    9. 'è' → logprob: -12.898531913757324
    10. '́' → logprob: -13.523531913757324

Token 18: '/s' (ID: 5031)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13946491479873657
    2. '.' → logprob: -2.139464855194092
    3. 'e' → logprob: -5.389464855194092
    4. '\' → logprob: -5.889464855194092
    5. 'et' → logprob: -6.889464855194092
    6. ' ' → logprob: -7.139464855194092
    7. ')' → logprob: -7.514464855194092
    8. 'a' → logprob: -7.889464855194092
    9. '[' → logprob: -8.01446533203125
    10. '```' → logprob: -8.13946533203125

Token 19: 'ort' (ID: 390)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.0027946571353822947
    2. 'ort' → logprob: -7.2527947425842285
    3. 'or' → logprob: -7.3777947425842285
    4. '\' → logprob: -7.6277947425842285
    5. 'ó' → logprob: -9.00279426574707
    6. 'ô' → logprob: -9.12779426574707
    7. '/' → logprob: -9.37779426574707
    8. '&' → logprob: -9.87779426574707
    9. 'о' → logprob: -10.00279426574707
    10. '```' → logprob: -10.00279426574707

Token 20: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.08511387556791306
    2. 'ie' → logprob: -2.585113763809204
    3. 'i' → logprob: -5.210114002227783
    4. 'es' → logprob: -7.335114002227783
    5. '```' → logprob: -10.460113525390625
    6. '#' → logprob: -10.710113525390625
    7. '\' → logprob: -11.085113525390625
    8. 'e' → logprob: -11.585113525390625
    9. ' ies' → logprob: -12.835113525390625
    10. 'ées' → logprob: -13.335113525390625

Token 21: ' standard' (ID: 7024)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.3188667297363281
    2. '' → logprob: -1.3188667297363281
    3. '\' → logprob: -1.9438667297363281
    4. '\n' → logprob: -2.068866729736328
    5. ' ' → logprob: -2.318866729736328
    6. '
' → logprob: -3.068866729736328
    7. ',' → logprob: -3.568866729736328
    8. '

' → logprob: -5.193866729736328
    9. '#' → logprob: -5.443866729736328
    10. 'import' → logprob: -6.193866729736328

Token 22: ' et' (ID: 859)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2300946712493896
    2. '' → logprob: -1.2300946712493896
    3. '.' → logprob: -1.8550946712493896
    4. '\n' → logprob: -2.2300946712493896
    5. ',' → logprob: -3.1050946712493896
    6. ' ' → logprob: -3.2300946712493896
    7. '

' → logprob: -3.3550946712493896
    8. '\' → logprob: -4.230094909667969
    9. '#' → logprob: -5.230094909667969
    10. 'import' → logprob: -5.605094909667969

Token 23: ' d' (ID: 272)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.6407666206359863
    2. ' l' → logprob: -1.2657666206359863
    3. 'les' → logprob: -2.0157666206359863
    4. ' la' → logprob: -3.8907666206359863
    5. 'l' → logprob: -4.265766620635986
    6. ' gérer' → logprob: -4.890766620635986
    7. 'le' → logprob: -5.640766620635986
    8. 'la' → logprob: -6.140766620635986
    9. ' argv' → logprob: -6.140766620635986
    10. ' manip' → logprob: -6.265766620635986

Token 24: ''autres' (ID: 38753)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.005484183318912983
    2. 'u' → logprob: -6.630484104156494
    3. ''' → logprob: -6.880484104156494
    4. 'é' → logprob: -7.005484104156494
    5. 'es' → logprob: -7.505484104156494
    6. ''autres' → logprob: -7.880484104156494
    7. ''ex' → logprob: -8.380484580993652
    8. ''e' → logprob: -8.505484580993652
    9. ''import' → logprob: -8.755484580993652
    10. ''é' → logprob: -8.880484580993652

Token 25: ' fonctions' (ID: 87283)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4470258355140686
    2. '\' → logprob: -1.6970257759094238
    3. '<|end|>' → logprob: -2.572025775909424
    4. '\n' → logprob: -3.572025775909424
    5. ' ' → logprob: -3.697025775909424
    6. ',' → logprob: -3.947025775909424
    7. 'es' → logprob: -5.322025775909424
    8. '```' → logprob: -5.697025775909424
    9. 'import' → logprob: -5.947025775909424
    10. '<|end|>' → logprob: -6.322025775909424

Token 26: ' système' (ID: 30034)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6882609724998474
    2. '' → logprob: -1.3132610321044922
    3. '

' → logprob: -2.313261032104492
    4. '\n' → logprob: -2.688261032104492
    5. '\' → logprob: -3.688261032104492
    6. ' ' → logprob: -3.938261032104492
    7. ',' → logprob: -5.438261032104492
    8. '.' → logprob: -5.563261032104492
    9. '  
' → logprob: -6.563261032104492
    10. 'import' → logprob: -6.688261032104492

Token 27: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1482690572738647
    2. '' → logprob: -1.2732690572738647
    3. '\n' → logprob: -1.3982690572738647
    4. '.' → logprob: -3.1482691764831543
    5. '\' → logprob: -3.3982691764831543
    6. ' ' → logprob: -3.6482691764831543
    7. '

' → logprob: -3.6482691764831543
    8. '#' → logprob: -4.898269176483154
    9. ',' → logprob: -5.148269176483154
    10. 'import' → logprob: -5.648269176483154

Token 28: 'read' (ID: 1293)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7227869629859924
    2. '\n' → logprob: -1.2227869033813477
    3. '' → logprob: -2.2227869033813477
    4. '

' → logprob: -2.7227869033813477
    5. ' ' → logprob: -4.222786903381348
    6. '\' → logprob: -4.347786903381348
    7. '#' → logprob: -5.347786903381348
    8. 'import' → logprob: -5.597786903381348
    9. ',' → logprob: -6.472786903381348
    10. '  
' → logprob: -6.722786903381348

Token 29: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15424929559230804
    2. 'line' → logprob: -2.7792491912841797
    3. '()' → logprob: -2.7792491912841797
    4. '_' → logprob: -4.52924919128418
    5. '_line' → logprob: -6.77924919128418
    6. 'er' → logprob: -7.02924919128418
    7. ' (' → logprob: -7.02924919128418
    8. '.' → logprob: -7.27924919128418
    9. 'space' → logprob: -7.65424919128418
    10. 'lines' → logprob: -7.77924919128418

Token 30: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.0563272200524807
    2. 'sys' → logprob: -3.0563271045684814
    3. ' input' → logprob: -5.1813273429870605
    4. 'input' → logprob: -6.5563273429870605
    5. ' ' → logprob: -8.181326866149902
    6. ' lambda' → logprob: -8.681326866149902
    7. ' open' → logprob: -9.306326866149902
    8. '	sys' → logprob: -10.181326866149902
    9. 'lambda' → logprob: -10.681326866149902
    10. '(sys' → logprob: -10.806326866149902

Token 31: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02055240049958229
    2. '.stdin' → logprob: -4.020552635192871
    3. '.readline' → logprob: -7.145552635192871
    4. '.stdout' → logprob: -7.270552635192871
    5. '.read' → logprob: -7.895552635192871
    6. ' .' → logprob: -7.895552635192871
    7. '.import' → logprob: -10.020552635192871
    8. '.input' → logprob: -10.145552635192871
    9. '.argv' → logprob: -10.145552635192871
    10. '.exit' → logprob: -12.020552635192871

Token 32: '.read' (ID: 7211)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.15012137591838837
    2. '.read' → logprob: -2.4001214504241943
    3. '.readline' → logprob: -3.0251214504241943
    4. '.readlines' → logprob: -10.150121688842773
    5. '.Read' → logprob: -10.525121688842773
    6. 'read' → logprob: -10.650121688842773
    7. '.write' → logprob: -11.400121688842773
    8. ' .' → logprob: -11.400121688842773
    9. '.get' → logprob: -12.650121688842773
    10. '```' → logprob: -12.775121688842773

Token 33: ' ' (ID: 220)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4742855131626129
    2. '()' → logprob: -0.9742854833602905
    3. '(

' → logprob: -9.724285125732422
    4. '(
' → logprob: -9.849285125732422
    5. ')' → logprob: -10.849285125732422
    6. ' (' → logprob: -11.099285125732422
    7. '()
' → logprob: -11.224285125732422
    8. ' ()' → logprob: -11.224285125732422
    9. '()

' → logprob: -11.849285125732422
    10. '().' → logprob: -12.349285125732422

Token 34: ' #' (ID: 1069)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12883642315864563
    2. '()' → logprob: -2.1288363933563232
    3. '(

' → logprob: -7.003836631774902
    4. '(
' → logprob: -7.128836631774902
    5. '.' → logprob: -9.878836631774902
    6. ')' → logprob: -9.878836631774902
    7. '()
' → logprob: -10.128836631774902
    8. '()

' → logprob: -11.378836631774902
    9. ' (' → logprob: -11.628836631774902
    10. ' ' → logprob: -12.128836631774902

Token 35: ' Cr' (ID: 5790)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -1.1069878339767456
    2. 'read' → logprob: -1.6069878339767456
    3. '()' → logprob: -1.8569878339767456
    4. '<|end|>' → logprob: -2.606987953186035
    5. 'Lire' → logprob: -3.106987953186035
    6. ' ' → logprob: -3.231987953186035
    7. ' Lire' → logprob: -3.981987953186035
    8. 'Lecture' → logprob: -4.231987953186035
    9. 'Read' → logprob: -4.356987953186035
    10. '<|end|>' → logprob: -4.481987953186035

Token 36: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.468051016330719
    2. 'é' → logprob: -1.5930509567260742
    3. 'e' → logprob: -2.093050956726074
    4. 'édit' → logprob: -3.968050956726074
    5. 'ead' → logprob: -4.218050956726074
    6. 'ad' → logprob: -5.843050956726074
    7. 'éer' → logprob: -6.218050956726074
    8. 'ea' → logprob: -6.468050956726074
    9. 'eit' → logprob: -6.593050956726074
    10. 'ed' → logprob: -6.843050956726074

Token 37: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05885545164346695
    2. ' une' → logprob: -4.0588555335998535
    3. ' un' → logprob: -4.4338555335998535
    4. ' =' → logprob: -4.5588555335998535
    5. '  ' → logprob: -4.5588555335998535
    6. 'e' → logprob: -6.6838555335998535
    7. 'a' → logprob: -6.6838555335998535
    8. ' a' → logprob: -6.9338555335998535
    9. '=' → logprob: -7.3088555335998535
    10. 's' → logprob: -7.4338555335998535

Token 38: ' alias' (ID: 26026)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.4050688147544861
    2. '=' → logprob: -2.405068874359131
    3. ' =' → logprob: -2.405068874359131
    4. ' espace' → logprob: -3.030068874359131
    5. 'alias' → logprob: -3.280068874359131
    6. ' ' → logprob: -3.655068874359131
    7. 'esp' → logprob: -4.405068874359131
    8. 'e' → logprob: -5.405068874359131
    9. 'space' → logprob: -6.030068874359131
    10. ' alias' → logprob: -6.030068874359131

Token 39: ' '' (ID: 461)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028583532199263573
    2. ' ' → logprob: -3.653583526611328
    3. '(
' → logprob: -7.278583526611328
    4. '()' → logprob: -7.653583526611328
    5. ' (' → logprob: -8.278583526611328
    6. ' for' → logprob: -9.153583526611328
    7. '_' → logprob: -9.153583526611328
    8. '<|end|>' → logprob: -9.278583526611328
    9. '(

' → logprob: -9.278583526611328
    10. ')' → logprob: -9.403583526611328

Token 40: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0021985520143061876
    2. ' read' → logprob: -6.127198696136475
    3. ' ' → logprob: -11.752198219299316
    4. '	read' → logprob: -13.002198219299316
    5. 'sys' → logprob: -13.877198219299316
    6. 'r' → logprob: -14.627198219299316
    7. ' readline' → logprob: -14.877198219299316
    8. '(read' → logprob: -14.877198219299316
    9. '_read' → logprob: -15.127198219299316
    10. '  ' → logprob: -15.502198219299316

Token 41: ''' (ID: 6)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17372015118598938
    2. ')' → logprob: -2.048720121383667
    3. '<|end|>' → logprob: -4.298720359802246
    4. ' ' → logprob: -5.173720359802246
    5. '<|end|>' → logprob: -6.048720359802246
    6. ' (' → logprob: -6.423720359802246
    7. '()' → logprob: -6.548720359802246
    8. '('' → logprob: -7.048720359802246
    9. '(
' → logprob: -7.173720359802246
    10. ' for' → logprob: -7.173720359802246

Token 42: ' qui' (ID: 2780)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021156232804059982
    2. '(
' → logprob: -4.896156311035156
    3. '()' → logprob: -5.021156311035156
    4. '(

' → logprob: -6.021156311035156
    5. '<|end|>' → logprob: -6.396156311035156
    6. ')' → logprob: -7.646156311035156
    7. '\n' → logprob: -7.896156311035156
    8. '.' → logprob: -8.271156311035156
    9. '<|end|>' → logprob: -8.271156311035156
    10. '\' → logprob: -8.396156311035156

Token 43: ' référence' (ID: 76252)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.49630165100097656
    2. ' =' → logprob: -1.4963016510009766
    3. ' ' → logprob: -2.7463016510009766
    4. '()' → logprob: -4.246301651000977
    5. ' facilite' → logprob: -4.621301651000977
    6. ' lit' → logprob: -4.746301651000977
    7. ' permettra' → logprob: -4.746301651000977
    8. ' récup' → logprob: -4.996301651000977
    9. ' peut' → logprob: -5.121301651000977
    10. '=' → logprob: -5.371301651000977

Token 44: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05504680052399635
    2. ' la' → logprob: -4.305047035217285
    3. '  ' → logprob: -4.680047035217285
    4. '(' → logprob: -5.305047035217285
    5. '(sys' → logprob: -5.305047035217285
    6. 'l' → logprob: -5.430047035217285
    7. ' ' → logprob: -5.805047035217285
    8. 'la' → logprob: -6.055047035217285
    9. '()' → logprob: -6.305047035217285
    10. ' l' → logprob: -6.555047035217285

Token 45: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6217518448829651
    2. ' read' → logprob: -1.7467517852783203
    3. ' readline' → logprob: -3.1217517852783203
    4. 'read' → logprob: -3.2467517852783203
    5. ' lecture' → logprob: -3.6217517852783203
    6. '.' → logprob: -3.6217517852783203
    7. ' méthode' → logprob: -3.8717517852783203
    8. ' function' → logprob: -3.8717517852783203
    9. ' fonction' → logprob: -4.12175178527832
    10. ' sys' → logprob: -4.24675178527832

Token 46: ' d' (ID: 272)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.3980061709880829
    2. ' read' → logprob: -1.6480062007904053
    3. ' ' → logprob: -3.0230062007904053
    4. '(read' → logprob: -4.148005962371826
    5. '.read' → logprob: -4.273005962371826
    6. '(' → logprob: -4.398005962371826
    7. '.' → logprob: -5.273005962371826
    8. '()' → logprob: -5.523005962371826
    9. ' (' → logprob: -5.523005962371826
    10. ' sys' → logprob: -5.523005962371826

Token 47: ''entrée' (ID: 115820)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.056123923510313034
    2. ''entrée' → logprob: -3.556123971939087
    3. 'entrée' → logprob: -5.431123733520508
    4. 'é' → logprob: -5.931123733520508
    5. 'ef' → logprob: -6.056123733520508
    6. 'escription' → logprob: -6.181123733520508
    7. 'lecture' → logprob: -6.431123733520508
    8. 'a' → logprob: -7.056123733520508
    9. 'ecture' → logprob: -7.056123733520508
    10. '```' → logprob: -7.306123733520508

Token 48: ' standard' (ID: 7024)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04456886276602745
    2. '(' → logprob: -3.4195687770843506
    3. '().' → logprob: -6.16956901550293
    4. '.' → logprob: -6.41956901550293
    5. '\' → logprob: -6.54456901550293
    6. '_' → logprob: -7.29456901550293
    7. ' ()' → logprob: -7.41956901550293
    8. ',' → logprob: -7.66956901550293
    9. 's' → logprob: -7.66956901550293
    10. '("")' → logprob: -7.79456901550293

Token 49: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.333126038312912
    2. '.' → logprob: -1.4581260681152344
    3. '()' → logprob: -4.208126068115234
    4. '(
' → logprob: -4.708126068115234
    5. ' ' → logprob: -5.333126068115234
    6. ' (' → logprob: -5.333126068115234
    7. ')' → logprob: -5.333126068115234
    8. '_' → logprob: -5.583126068115234
    9. '\' → logprob: -6.208126068115234
    10. ',' → logprob: -6.583126068115234

Token 50: ' tout' (ID: 5501)
  Prédit: ' lire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lire' → logprob: -0.15819934010505676
    2. 'l' → logprob: -2.0331993103027344
    3. 't' → logprob: -5.783199310302734
    4. 'tout' → logprob: -5.908199310302734
    5. '()' → logprob: -6.283199310302734
    6. ' récupérer' → logprob: -6.658199310302734
    7. 'r' → logprob: -7.033199310302734
    8. 'lecture' → logprob: -7.033199310302734
    9. 'la' → logprob: -7.408199310302734
    10. 'lect' → logprob: -7.408199310302734

Token 51: ' lire' (ID: 46082)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18217889964580536
    2. 'e' → logprob: -2.1821789741516113
    3. 'es' → logprob: -3.5571789741516113
    4. 'l' → logprob: -4.932178974151611
    5. 'ent' → logprob: -5.057178974151611
    6. '_' → logprob: -5.432178974151611
    7. 'le' → logprob: -6.432178974151611
    8. ' ()' → logprob: -6.807178974151611
    9. 'import' → logprob: -7.557178974151611
    10. ' ' → logprob: -7.682178974151611

Token 52: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.259070485830307
    2. '()' → logprob: -1.6340705156326294
    3. '(
' → logprob: -4.38407039642334
    4. '.' → logprob: -4.75907039642334
    5. '(

' → logprob: -5.00907039642334
    6. '\' → logprob: -7.00907039642334
    7. ')' → logprob: -7.38407039642334
    8. '
' → logprob: -7.50907039642334
    9. '()
' → logprob: -7.50907039642334
    10. ' ' → logprob: -8.00907039642334

Token 53: ' rarement' (ID: 172887)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6393989324569702
    2. ')' → logprob: -2.3893990516662598
    3. ' 
' → logprob: -2.7643990516662598
    4. '()' → logprob: -2.8893990516662598
    5. '(' → logprob: -3.6393990516662598
    6. '  
' → logprob: -3.7643990516662598
    7. ''' → logprob: -3.8893990516662598
    8. '.' → logprob: -4.01439905166626
    9. '\n' → logprob: -4.01439905166626
    10. '```' → logprob: -4.13939905166626

Token 54: ' utilisé' (ID: 53138)
  Prédit: ' utilisé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.8465723991394043
    2. ' utilisée' → logprob: -1.4715723991394043
    3. '()' → logprob: -1.8465723991394043
    4. ' used' → logprob: -2.0965723991394043
    5. 'util' → logprob: -3.4715723991394043
    6. 'used' → logprob: -4.721572399139404
    7. ' utilisées' → logprob: -5.221572399139404
    8. ' utilisés' → logprob: -6.096572399139404
    9. '_util' → logprob: -6.221572399139404
    10. 'import' → logprob: -6.596572399139404

Token 55: ' ici' (ID: 27994)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2570284605026245
    2. '.' → logprob: -1.8820284605026245
    3. '\' → logprob: -4.132028579711914
    4. '(
' → logprob: -4.257028579711914
    5. '()' → logprob: -4.507028579711914
    6. '
' → logprob: -5.257028579711914
    7. '(

' → logprob: -5.257028579711914
    8. '\n' → logprob: -5.507028579711914
    9. '_' → logprob: -5.632028579711914
    10. ' (' → logprob: -5.757028579711914

Token 56: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6613072156906128
    2. '

' → logprob: -1.2863072156906128
    3. '(' → logprob: -2.4113073348999023
    4. ' ' → logprob: -3.6613073348999023
    5. '.' → logprob: -3.6613073348999023
    6. '


' → logprob: -4.786307334899902
    7. 'newline' → logprob: -4.911307334899902
    8. '' → logprob: -5.161307334899902
    9. ' 

' → logprob: -5.286307334899902
    10. '\' → logprob: -5.286307334899902

Token 57: 'read' (ID: 1293)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7023062705993652
    2. '

' → logprob: -1.2023062705993652
    3. '(' → logprob: -2.8273062705993652
    4. '.' → logprob: -3.4523062705993652
    5. 'def' → logprob: -3.7023062705993652
    6. 'newline' → logprob: -4.452306270599365
    7. '


' → logprob: -4.577306270599365
    8. '' → logprob: -4.577306270599365
    9. ' ' → logprob: -4.702306270599365
    10. '_' → logprob: -5.327306270599365

Token 58: 'lines' (ID: 10105)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08912627398967743
    2. '(' → logprob: -2.4641263484954834
    3. ' ()' → logprob: -9.589126586914062
    4. '.' → logprob: -10.214126586914062
    5. '().' → logprob: -11.089126586914062
    6. '(
' → logprob: -11.089126586914062
    7. '()
' → logprob: -11.714126586914062
    8. '(

' → logprob: -11.714126586914062
    9. ' (' → logprob: -11.839126586914062
    10. '()

' → logprob: -12.214126586914062

Token 59: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1413121521472931
    2. '()' → logprob: -3.2663121223449707
    3. '=' → logprob: -3.3913121223449707
    4. '.' → logprob: -3.5163121223449707
    5. ' =' → logprob: -3.6413121223449707
    6. ')' → logprob: -6.266312122344971
    7. ' (' → logprob: -7.391312122344971
    8. 'read' → logprob: -7.766312122344971
    9. '(
' → logprob: -8.016312599182129
    10. '[' → logprob: -9.391312599182129

Token 60: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.10021119564771652
    2. 'sys' → logprob: -2.3502111434936523
    3. '	sys' → logprob: -13.225211143493652
    4. '=sys' → logprob: -13.225211143493652
    5. '(sys' → logprob: -14.225211143493652
    6. 'read' → logprob: -16.22521209716797
    7. ' ' → logprob: -17.35021209716797
    8. ' read' → logprob: -17.85021209716797
    9. 's' → logprob: -17.97521209716797
    10. '_sys' → logprob: -18.10021209716797

Token 61: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.004130288027226925
    2. '.stdout' → logprob: -5.8791303634643555
    3. '.' → logprob: -6.7541303634643555
    4. '.stderr' → logprob: -9.379130363464355
    5. '.readline' → logprob: -10.754130363464355
    6. 'stdin' → logprob: -10.879130363464355
    7. ' .' → logprob: -11.504130363464355
    8. '.argv' → logprob: -11.754130363464355
    9. '.std' → logprob: -12.004130363464355
    10. '.readlines' → logprob: -12.129130363464355

Token 62: '.readlines' (ID: 92237)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.7337173223495483
    2. '.readlines' → logprob: -0.7337173223495483
    3. '.read' → logprob: -3.233717441558838
    4. '.' → logprob: -7.983717441558838
    5. 'read' → logprob: -12.73371696472168
    6. ' .' → logprob: -12.73371696472168
    7. '.Read' → logprob: -15.60871696472168
    8. '.imread' → logprob: -16.23371696472168
    9. '_read' → logprob: -16.48371696472168
    10. '.findall' → logprob: -17.10871696472168

Token 63: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.032007843255996704
    2. '  ' → logprob: -3.657007932662964
    3. '  
' → logprob: -6.407007694244385
    4. '<|end|>' → logprob: -6.782007694244385
    5. '()' → logprob: -7.032007694244385
    6. ' #' → logprob: -7.157007694244385
    7. '<|end|>' → logprob: -8.157008171081543
    8. '#' → logprob: -8.157008171081543
    9. '
' → logprob: -8.657008171081543
    10. ' 
' → logprob: -8.782008171081543

Token 64: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09826534986495972
    2. '  ' → logprob: -3.2232654094696045
    3. '#' → logprob: -3.5982654094696045
    4. '<|end|>' → logprob: -4.223265171051025
    5. ' #' → logprob: -4.598265171051025
    6. '  
' → logprob: -7.848265171051025
    7. '<|end|>' → logprob: -7.848265171051025
    8. ')' → logprob: -7.973265171051025
    9. '[' → logprob: -9.348265647888184
    10. '()' → logprob: -9.473265647888184

Token 65: ' Cr' (ID: 5790)
  Prédit: ' Cr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Cr' → logprob: -0.18645189702510834
    2. ' ' → logprob: -2.1864519119262695
    3. 'Cr' → logprob: -3.6864519119262695
    4. ' read' → logprob: -4.4364519119262695
    5. '#' → logprob: -5.1864519119262695
    6. '<|end|>' → logprob: -5.8114519119262695
    7. ' #' → logprob: -5.9364519119262695
    8. ' crée' → logprob: -6.0614519119262695
    9. '  ' → logprob: -6.1864519119262695
    10. ' ' → logprob: -6.4364519119262695

Token 66: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0010511501459404826
    2. 'e' → logprob: -7.87605094909668
    3. 'é' → logprob: -8.00105094909668
    4. 'éer' → logprob: -8.75105094909668
    5. 'ee' → logprob: -9.00105094909668
    6. 'ées' → logprob: -10.75105094909668
    7. 'a' → logprob: -11.75105094909668
    8. 'ea' → logprob: -12.50105094909668
    9. 'rée' → logprob: -13.00105094909668
    10. 'É' → logprob: -13.00105094909668

Token 67: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.021234547719359398
    2. 'un' → logprob: -3.8962345123291016
    3. ' ' → logprob: -8.271234512329102
    4. ' une' → logprob: -8.396234512329102
    5. 's' → logprob: -9.896234512329102
    6. '_un' → logprob: -10.646234512329102
    7. ' =' → logprob: -10.771234512329102
    8. 'une' → logprob: -10.896234512329102
    9. ' ' → logprob: -11.146234512329102
    10. ''un' → logprob: -11.646234512329102

Token 68: ' alias' (ID: 26026)
  Prédit: ' alias'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alias' → logprob: -0.5776004791259766
    2. 'alias' → logprob: -0.8276004791259766
    3. ' espace' → logprob: -8.202600479125977
    4. 's' → logprob: -8.327600479125977
    5. '(alias' → logprob: -8.452600479125977
    6. '_alias' → logprob: -8.952600479125977
    7. ' ali' → logprob: -9.077600479125977
    8. 'a' → logprob: -9.202600479125977
    9. 'ali' → logprob: -9.202600479125977
    10. ' ' → logprob: -9.827600479125977

Token 69: ' '' (ID: 461)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.8036640286445618
    2. '(' → logprob: -0.9286640286445618
    3. ' ' → logprob: -2.928663969039917
    4. ' =' → logprob: -3.428663969039917
    5. ''' → logprob: -3.553663969039917
    6. '=' → logprob: -4.553664207458496
    7. ' (' → logprob: -4.803664207458496
    8. '_' → logprob: -5.428664207458496
    9. '[' → logprob: -5.803664207458496
    10. 'read' → logprob: -5.928664207458496

Token 70: 'read' (ID: 1293)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.25434446334838867
    2. ' sys' → logprob: -1.7543444633483887
    3. 'read' → logprob: -3.0043444633483887
    4. ' read' → logprob: -6.379344463348389
    5. '(sys' → logprob: -8.629344940185547
    6. '=sys' → logprob: -9.879344940185547
    7. ' ' → logprob: -11.379344940185547
    8. 's' → logprob: -11.879344940185547
    9. 'stdin' → logprob: -12.004344940185547
    10. '	sys' → logprob: -12.004344940185547

Token 71: 'lines' (ID: 10105)
  Prédit: 'lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0022920407354831696
    2. 'line' → logprob: -6.127292156219482
    3. '_lines' → logprob: -10.127291679382324
    4. 'lin' → logprob: -11.002291679382324
    5. '()' → logprob: -11.377291679382324
    6. ')' → logprob: -11.377291679382324
    7. 'ines' → logprob: -11.752291679382324
    8. 'ln' → logprob: -12.252291679382324
    9. '_line' → logprob: -12.752291679382324
    10. 'elines' → logprob: -13.252291679382324

Token 72: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6071950793266296
    2. ' ' → logprob: -1.3571951389312744
    3. '<|end|>' → logprob: -2.6071951389312744
    4. '(' → logprob: -3.3571951389312744
    5. ' =' → logprob: -3.8571951389312744
    6. '()' → logprob: -4.482194900512695
    7. '  ' → logprob: -4.732194900512695
    8. ']' → logprob: -4.982194900512695
    9. '<|end|>' → logprob: -4.982194900512695
    10. ' reads' → logprob: -5.107194900512695

Token 73: ' pour' (ID: 1930)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: ' lire' (ID: 46082)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4511702060699463
    2. ' sys' → logprob: -1.5761702060699463
    3. ' la' → logprob: -2.4511702060699463
    4. 'la' → logprob: -3.3261702060699463
    5. ' lire' → logprob: -3.5761702060699463
    6. 'l' → logprob: -5.451169967651367
    7. 'les' → logprob: -7.701169967651367
    8. 'le' → logprob: -7.951169967651367
    9. ' read' → logprob: -8.701169967651367
    10. ' ' → logprob: -9.201169967651367

Token 75: ' toutes' (ID: 17502)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2034558206796646
    2. ' toutes' → logprob: -2.203455924987793
    3. 'l' → logprob: -3.953455924987793
    4. 'tout' → logprob: -4.328455924987793
    5. 'les' → logprob: -4.953455924987793
    6. ' toute' → logprob: -5.078455924987793
    7. ' les' → logprob: -5.453455924987793
    8. ' la' → logprob: -5.578455924987793
    9. 'all' → logprob: -5.828455924987793
    10. ' tout' → logprob: -5.953455924987793

Token 76: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5759995579719543
    2. '()' → logprob: -1.4509994983673096
    3. ' les' → logprob: -1.8259994983673096
    4. 'l' → logprob: -3.3259994983673096
    5. 's' → logprob: -6.700999736785889
    6. 'lines' → logprob: -6.700999736785889
    7. '(' → logprob: -6.950999736785889
    8. 'la' → logprob: -7.200999736785889
    9. ' la' → logprob: -7.450999736785889
    10. ' ' → logprob: -7.700999736785889

Token 77: ' lignes' (ID: 81687)
  Prédit: ' lignes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lignes' → logprob: -0.20298349857330322
    2. 'l' → logprob: -1.7029834985733032
    3. ' l' → logprob: -7.702983379364014
    4. ' ' → logprob: -8.077983856201172
    5. ' ligne' → logprob: -8.202983856201172
    6. ' lines' → logprob: -8.702983856201172
    7. 'ligne' → logprob: -9.702983856201172
    8. ' lign' → logprob: -9.827983856201172
    9. '	l' → logprob: -9.952983856201172
    10. ' ' → logprob: -10.077983856201172

Token 78: ' depuis' (ID: 16277)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4059276878833771
    2. '()' → logprob: -1.1559276580810547
    3. '(
' → logprob: -5.155927658081055
    4. '.' → logprob: -5.155927658081055
    5. '\' → logprob: -5.780927658081055
    6. '\n' → logprob: -7.280927658081055
    7. ',' → logprob: -7.405927658081055
    8. ' ' → logprob: -7.530927658081055
    9. ')' → logprob: -8.030927658081055
    10. '[' → logprob: -8.155927658081055

Token 79: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.32376354932785034
    2. 'l' → logprob: -1.6987636089324951
    3. ' standard' → logprob: -3.948763608932495
    4. ' stdin' → logprob: -3.948763608932495
    5. ' sys' → logprob: -4.323763370513916
    6. ' la' → logprob: -4.448763370513916
    7. ' ' → logprob: -4.448763370513916
    8. 'stdin' → logprob: -5.698763370513916
    9. '(stdin' → logprob: -5.948763370513916
    10. 'sys' → logprob: -6.073763370513916

Token 80: ''entrée' (ID: 115820)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6503441333770752
    2. ''entrée' → logprob: -1.7753441333770752
    3. 'e' → logprob: -2.525344133377075
    4. ''' → logprob: -2.775344133377075
    5. 'es' → logprob: -3.150344133377075
    6. ''s' → logprob: -3.275344133377075
    7. 'sys' → logprob: -3.275344133377075
    8. 'stdin' → logprob: -3.650344133377075
    9. 'input' → logprob: -5.400343894958496
    10. 'entrée' → logprob: -5.525343894958496

Token 81: ' standard' (ID: 7024)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40252453088760376
    2. '()' → logprob: -1.652524471282959
    3. '.' → logprob: -2.402524471282959
    4. '\' → logprob: -4.402524471282959
    5. '(
' → logprob: -5.027524471282959
    6. '<|end|>' → logprob: -5.277524471282959
    7. '\n' → logprob: -5.652524471282959
    8. ' (' → logprob: -6.152524471282959
    9. '_' → logprob: -6.152524471282959
    10. '#' → logprob: -6.402524471282959

Token 82: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6903990507125854
    2. '.' → logprob: -1.8153990507125854
    3. '[' → logprob: -2.565399169921875
    4. '(' → logprob: -2.690399169921875
    5. '#' → logprob: -3.065399169921875
    6. '\' → logprob: -3.565399169921875
    7. 'def' → logprob: -4.065399169921875
    8. '' → logprob: -4.065399169921875
    9. '\n' → logprob: -4.440399169921875
    10. '

' → logprob: -4.565399169921875

Token 83: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.20854514837265015
    2. '#' → logprob: -2.583545207977295
    3. 'def' → logprob: -2.708545207977295
    4. '\' → logprob: -4.458545207977295
    5. 'n' → logprob: -4.958545207977295
    6. '(' → logprob: -4.958545207977295
    7. '
' → logprob: -5.583545207977295
    8. 'p' → logprob: -6.208545207977295
    9. '\n' → logprob: -6.208545207977295
    10. 'a' → logprob: -6.333545207977295

Token 84: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0008130819769576192
    2. '_' → logprob: -8.375813484191895
    3. ' space' → logprob: -8.375813484191895
    4. ' ' → logprob: -8.750813484191895
    5. ' ```' → logprob: -10.000813484191895
    6. ' a' → logprob: -10.875813484191895
    7. ' ‌' → logprob: -11.375813484191895
    8. ' ​' → logprob: -11.500813484191895
    9. ' parse' → logprob: -11.500813484191895
    10. ' main' → logprob: -11.750813484191895

Token 85: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3497430086135864
    2. '(' → logprob: -1.3497430086135864
    3. ':' → logprob: -3.349742889404297
    4. '()' → logprob: -7.724742889404297
    5. '(:' → logprob: -8.349742889404297
    6. ' ():' → logprob: -11.349742889404297
    7. '(
' → logprob: -11.974742889404297
    8. '():
' → logprob: -12.349742889404297
    9. ' :' → logprob: -12.349742889404297
    10. ' (' → logprob: -12.474742889404297

Token 86: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8762109875679016
    2. ' ' → logprob: -1.0012109279632568
    3. 'r' → logprob: -2.001210927963257
    4. ':' → logprob: -2.876210927963257
    5. '   ' → logprob: -4.376211166381836
    6. ')' → logprob: -5.876211166381836
    7. 'a' → logprob: -6.251211166381836
    8. 'p' → logprob: -7.251211166381836
    9. 'n' → logprob: -7.376211166381836
    10. '    ' → logprob: -7.376211166381836

Token 87: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.31677135825157166
    2. 'r' → logprob: -1.691771388053894
    3. 'n' → logprob: -3.1917712688446045
    4. '   ' → logprob: -4.191771507263184
    5. ' r' → logprob: -4.941771507263184
    6. '    ' → logprob: -5.816771507263184
    7. ' pass' → logprob: -6.066771507263184
    8. 'data' → logprob: -6.816771507263184
    9. ' lines' → logprob: -6.816771507263184
    10. '  ' → logprob: -6.941771507263184

Token 88: ' Dem' (ID: 9458)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05888388678431511
    2. '   ' → logprob: -3.8088839054107666
    3. 'r' → logprob: -4.1838836669921875
    4. ' pass' → logprob: -5.5588836669921875
    5. '#' → logprob: -6.0588836669921875
    6. 'n' → logprob: -6.3088836669921875
    7. ' #' → logprob: -6.5588836669921875
    8. '  ' → logprob: -6.6838836669921875
    9. '_' → logprob: -7.3088836669921875
    10. ' """' → logprob: -7.4338836669921875

Token 89: 'ande' (ID: 4102)
  Prédit: 'ande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ande' → logprob: -0.6135120987892151
    2. 'arrer' → logprob: -1.7385120391845703
    3. 'a' → logprob: -2.3635120391845703
    4. 'ander' → logprob: -2.8635120391845703
    5. 'arr' → logprob: -3.1135120391845703
    6. 'ar' → logprob: -3.6135120391845703
    7. 'arre' → logprob: -4.36351203918457
    8. 'and' → logprob: -4.48851203918457
    9. 'arer' → logprob: -4.98851203918457
    10. 'an' → logprob: -5.48851203918457

Token 90: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.027656888589262962
    2. '(' → logprob: -4.5276570320129395
    3. '   ' → logprob: -5.4026570320129395
    4. '  ' → logprob: -6.0276570320129395
    5. ' =' → logprob: -6.4026570320129395
    6. '_' → logprob: -6.7776570320129395
    7. ' la' → logprob: -7.1526570320129395
    8. 's' → logprob: -7.2776570320129395
    9. '()' → logprob: -7.4026570320129395
    10. ' )' → logprob: -7.5276570320129395

Token 91: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06866364181041718
    2. ' l' → logprob: -2.8186635971069336
    3. 'user' → logprob: -6.068663597106934
    4. ' utilisateur' → logprob: -6.568663597106934
    5. 'util' → logprob: -6.818663597106934
    6. ' user' → logprob: -7.318663597106934
    7. ' ' → logprob: -8.068663597106934
    8. '   ' → logprob: -8.693663597106934
    9. 'la' → logprob: -8.693663597106934
    10. '	l' → logprob: -9.318663597106934

Token 92: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.30769333243370056
    2. 'e' → logprob: -1.932693362236023
    3. 'a' → logprob: -2.8076932430267334
    4. 'u' → logprob: -3.3076932430267334
    5. '’utilisateur' → logprob: -5.0576934814453125
    6. ''' → logprob: -5.4326934814453125
    7. '   ' → logprob: -5.5576934814453125
    8. ' utilisateur' → logprob: -5.6826934814453125
    9. 'util' → logprob: -6.6826934814453125
    10. ''us' → logprob: -7.3076934814453125

Token 93: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5528756380081177
    2. ' ' → logprob: -0.9278756380081177
    3. '   ' → logprob: -3.927875518798828
    4. ' (' → logprob: -6.677875518798828
    5. '  ' → logprob: -7.052875518798828
    6. '("' → logprob: -7.177875518798828
    7. ',' → logprob: -7.302875518798828
    8. ':' → logprob: -7.302875518798828
    9. 's' → logprob: -7.302875518798828
    10. ' )' → logprob: -7.302875518798828

Token 94: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.33179938793182373
    2. ''' → logprob: -1.3317993879318237
    3. ' e' → logprob: -4.831799507141113
    4. ''entrée' → logprob: -6.331799507141113
    5. 'a' → logprob: -6.581799507141113
    6. ' '' → logprob: -6.706799507141113
    7. ''é' → logprob: -7.206799507141113
    8. ' ' → logprob: -7.331799507141113
    9. 'u' → logprob: -7.331799507141113
    10. ''utilisateur' → logprob: -7.581799507141113

Token 95: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.5200639963150024
    2. 'input' → logprob: -2.395063877105713
    3. 's' → logprob: -2.770063877105713
    4. 'e' → logprob: -3.395063877105713
    5. 'entrée' → logprob: -3.395063877105713
    6. ' saisir' → logprob: -3.520063877105713
    7. 'un' → logprob: -3.895063877105713
    8. 'une' → logprob: -4.145063877105713
    9. 'user' → logprob: -4.270063877105713
    10. 'n' → logprob: -4.645063877105713

Token 96: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0012133294949308038
    2. 'e' → logprob: -6.876213550567627
    3. 'erer' → logprob: -9.626213073730469
    4. 'rer' → logprob: -10.251213073730469
    5. 'r' → logprob: -11.501213073730469
    6. 'er's' → logprob: -11.751213073730469
    7. 'erp' → logprob: -11.751213073730469
    8. ' er' → logprob: -11.751213073730469
    9. 'eer' → logprob: -11.876213073730469
    10. 'ée' → logprob: -11.876213073730469

Token 97: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03012462891638279
    2. ' un' → logprob: -4.280124664306641
    3. '(' → logprob: -5.655124664306641
    4. ' "' → logprob: -5.780124664306641
    5. '  ' → logprob: -6.530124664306641
    6. '"' → logprob: -6.655124664306641
    7. ' une' → logprob: -6.780124664306641
    8. '   ' → logprob: -6.780124664306641
    9. '    ' → logprob: -7.030124664306641
    10. ' a' → logprob: -7.155124664306641

Token 98: ' nombre' (ID: 9733)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.04859577491879463
    2. ' e' → logprob: -4.173595905303955
    3. ' nombre' → logprob: -4.298595905303955
    4. ' ' → logprob: -5.048595905303955
    5. 'es' → logprob: -6.423595905303955
    6. ' message' → logprob: -6.798595905303955
    7. ' input' → logprob: -6.923595905303955
    8. '_' → logprob: -6.923595905303955
    9. ' nom' → logprob: -7.298595905303955
    10. ' espace' → logprob: -7.423595905303955

Token 99: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4492433965206146
    2. '(' → logprob: -1.574243426322937
    3. '   ' → logprob: -2.1992433071136475
    4. '  ' → logprob: -3.6992433071136475
    5. ':' → logprob: -5.574243545532227
    6. ' (' → logprob: -5.949243545532227
    7. ',' → logprob: -5.949243545532227
    8. '    ' → logprob: -6.199243545532227
    9. 'n' → logprob: -6.324243545532227
    10. 's' → logprob: -6.324243545532227

Token 100: ' depuis' (ID: 16277)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6532129049301147
    2. '(' → logprob: -1.2782129049301147
    3. '   ' → logprob: -1.9032129049301147
    4. ':' → logprob: -3.1532130241394043
    5. 'n' → logprob: -6.028213024139404
    6. '  ' → logprob: -6.528213024139404
    7. ',' → logprob: -6.528213024139404
    8. ' :' → logprob: -6.903213024139404
    9. '    ' → logprob: -7.403213024139404
    10. ' (' → logprob: -8.028212547302246

Token 101: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4200378656387329
    2. 'l' → logprob: -2.0450377464294434
    3. ' input' → logprob: -2.4200377464294434
    4. ' la' → logprob: -2.7950377464294434
    5. 'input' → logprob: -3.7950377464294434
    6. ' ' → logprob: -4.170037746429443
    7. ' une' → logprob: -5.420037746429443
    8. '   ' → logprob: -5.670037746429443
    9. ' un' → logprob: -6.170037746429443
    10. ' standard' → logprob: -6.295037746429443

Token 102: ''entrée' (ID: 115820)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6205931305885315
    2. ''entrée' → logprob: -0.9955931305885315
    3. 'e' → logprob: -3.1205930709838867
    4. 'a' → logprob: -3.6205930709838867
    5. ''utilisateur' → logprob: -4.495593070983887
    6. 'es' → logprob: -5.995593070983887
    7. ''espace' → logprob: -6.370593070983887
    8. ''a' → logprob: -6.870593070983887
    9. 'u' → logprob: -6.995593070983887
    10. ''ent' → logprob: -7.620593070983887

Token 103: ' standard' (ID: 7024)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3994190990924835
    2. '   ' → logprob: -1.1494190692901611
    3. '  ' → logprob: -5.64941930770874
    4. '(' → logprob: -5.89941930770874
    5. ' )' → logprob: -6.14941930770874
    6. 'n' → logprob: -7.02441930770874
    7. ' ' → logprob: -7.64941930770874
    8. '    ' → logprob: -8.024418830871582
    9. ' (' → logprob: -8.149418830871582
    10. ':' → logprob: -8.274418830871582

Token 104: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13094499707221985
    2. 'n' → logprob: -3.2559449672698975
    3. '(' → logprob: -4.005945205688477
    4. ':' → logprob: -4.380945205688477
    5. ' ' → logprob: -4.505945205688477
    6. '\' → logprob: -4.630945205688477
    7. '    
' → logprob: -4.755945205688477
    8. '\n' → logprob: -4.880945205688477
    9. '
' → logprob: -5.630945205688477
    10. '  
' → logprob: -5.755945205688477

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08479106426239014
    2. ' ' → logprob: -3.4597911834716797
    3. 'n' → logprob: -3.8347911834716797
    4. '    
' → logprob: -5.33479118347168
    5. ':' → logprob: -5.45979118347168
    6. '
' → logprob: -5.58479118347168
    7. ' 
' → logprob: -5.95979118347168
    8. '  
' → logprob: -5.95979118347168
    9. '   
' → logprob: -6.08479118347168
    10. '\' → logprob: -6.33479118347168

Token 106: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.041430119425058365
    2. '   ' → logprob: -3.7914302349090576
    3. ' n' → logprob: -4.1664299964904785
    4. ' ' → logprob: -7.5414299964904785
    5. 'x' → logprob: -8.166430473327637
    6. ' number' → logprob: -8.666430473327637
    7. 'num' → logprob: -9.166430473327637
    8. 'number' → logprob: -9.166430473327637
    9. ' ' → logprob: -9.291430473327637
    10. '    
' → logprob: -9.291430473327637

Token 107: ' La' (ID: 3038)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.26560670137405396
    2. ' ' → logprob: -2.140606641769409
    3. '   ' → logprob: -2.515606641769409
    4. ' n' → logprob: -3.765606641769409
    5. 'x' → logprob: -5.890606880187988
    6. 'i' → logprob: -6.140606880187988
    7. ' i' → logprob: -6.515606880187988
    8. ' 
' → logprob: -7.140606880187988
    9. '    ' → logprob: -7.890606880187988
    10. ' x' → logprob: -7.890606880187988

Token 108: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19155257940292358
    2. 'n' → logprob: -2.4415526390075684
    3. ' n' → logprob: -3.3165526390075684
    4. 's' → logprob: -5.066552639007568
    5. ' valeur' → logprob: -5.191552639007568
    6. ' i' → logprob: -5.441552639007568
    7. ' number' → logprob: -5.441552639007568
    8. ' user' → logprob: -5.691552639007568
    9. ' nombre' → logprob: -5.691552639007568
    10. ' ligne' → logprob: -5.691552639007568

Token 109: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.125780701637268
    2. ' n' → logprob: -1.125780701637268
    3. ' input' → logprob: -2.0007805824279785
    4. ' =' → logprob: -2.1257805824279785
    5. 'n' → logprob: -3.5007805824279785
    6. 'input' → logprob: -4.2507805824279785
    7. '(' → logprob: -4.7507805824279785
    8. '()' → logprob: -4.8757805824279785
    9. ' ' → logprob: -5.2507805824279785
    10. ' number' → logprob: -5.3757805824279785

Token 110: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06248407065868378
    2. '()' → logprob: -2.8124840259552
    3. '('' → logprob: -8.062483787536621
    4. '("' → logprob: -9.812483787536621
    5. '(
' → logprob: -9.937483787536621
    6. '(

' → logprob: -10.937483787536621
    7. 's' → logprob: -11.312483787536621
    8. '("")' → logprob: -11.437483787536621
    9. ' (' → logprob: -11.562483787536621
    10. '("("' → logprob: -11.937483787536621

Token 111: ' lit' (ID: 11980)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47908592224121094
    2. '(' → logprob: -0.9790859222412109
    3. '('' → logprob: -6.479085922241211
    4. ',' → logprob: -7.354085922241211
    5. ')' → logprob: -7.729085922241211
    6. '(
' → logprob: -7.729085922241211
    7. '("")' → logprob: -7.979085922241211
    8. '("' → logprob: -8.479085922241211
    9. ':' → logprob: -8.604085922241211
    10. ' ()' → logprob: -8.729085922241211

Token 112: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.012600771151483059
    2. '(' → logprob: -5.012600898742676
    3. ' ()' → logprob: -5.512600898742676
    4. ' ' → logprob: -7.387600898742676
    5. '("")' → logprob: -8.262600898742676
    6. '('' → logprob: -8.387600898742676
    7. ' (' → logprob: -8.387600898742676
    8. '("' → logprob: -9.637600898742676
    9. ' un' → logprob: -9.762600898742676
    10. ' a' → logprob: -10.262600898742676

Token 113: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.3360384702682495
    2. ' chaîne' → logprob: -1.8360384702682495
    3. ' ' → logprob: -2.586038589477539
    4. 'ligne' → logprob: -3.836038589477539
    5. 'entrée' → logprob: -5.086038589477539
    6. '()' → logprob: -5.336038589477539
    7. 'l' → logprob: -5.711038589477539
    8. ' chaine' → logprob: -5.836038589477539
    9. ' entrée' → logprob: -6.461038589477539
    10. ' line' → logprob: -6.711038589477539

Token 114: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07332239300012589
    2. '()' → logprob: -2.823322296142578
    3. ':' → logprob: -5.948322296142578
    4. ',' → logprob: -5.948322296142578
    5. ')' → logprob: -6.698322296142578
    6. '(
' → logprob: -6.823322296142578
    7. '('' → logprob: -6.823322296142578
    8. '   ' → logprob: -7.323322296142578
    9. ' ' → logprob: -7.823322296142578
    10. '("")' → logprob: -8.323322296142578

Token 115: ' texte' (ID: 53492)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.9083654284477234
    2. 'l' → logprob: -1.1583654880523682
    3. ' code' → logprob: -1.9083654880523682
    4. 'code' → logprob: -2.783365488052368
    5. 'entrée' → logprob: -3.783365488052368
    6. 's' → logprob: -4.033365249633789
    7. 'texte' → logprob: -4.783365249633789
    8. ' texte' → logprob: -5.283365249633789
    9. ' input' → logprob: -5.283365249633789
    10. 'input' → logprob: -6.533365249633789

Token 116: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07087893784046173
    2. '()' → logprob: -3.3208789825439453
    3. ',' → logprob: -4.320878982543945
    4. '   ' → logprob: -5.195878982543945
    5. ' ' → logprob: -5.445878982543945
    6. ')' → logprob: -6.195878982543945
    7. '(
' → logprob: -6.445878982543945
    8. ' =' → logprob: -6.820878982543945
    9. ':' → logprob: -7.195878982543945
    10. '_' → logprob: -7.195878982543945

Token 117: ' puis' (ID: 18766)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6231207847595215
    2. '   ' → logprob: -1.6231207847595215
    3. ' )' → logprob: -2.4981207847595215
    4. ' puis' → logprob: -3.3731207847595215
    5. ' convert' → logprob: -3.7481207847595215
    6. '    ' → logprob: -3.7481207847595215
    7. ')' → logprob: -4.1231207847595215
    8. '  ' → logprob: -4.4981207847595215
    9. 'convert' → logprob: -5.2481207847595215
    10. ' convertir' → logprob: -5.3106207847595215

Token 118: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.8935117125511169
    2. 'int' → logprob: -1.3935117721557617
    3. ' ' → logprob: -2.1435117721557617
    4. ' strip' → logprob: -2.8935117721557617
    5. 'strip' → logprob: -3.0185117721557617
    6. ' n' → logprob: -3.6435117721557617
    7. 'rstrip' → logprob: -3.8935117721557617
    8. '()' → logprob: -4.643511772155762
    9. 'split' → logprob: -4.768511772155762
    10. ' split' → logprob: -4.893511772155762

Token 119: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012332366895861924
    2. '(input' → logprob: -10.625123023986816
    3. '(read' → logprob: -11.000123023986816
    4. '()' → logprob: -11.000123023986816
    5. '('' → logprob: -11.000123023986816
    6. ' (' → logprob: -11.250123023986816
    7. ' ' → logprob: -11.625123023986816
    8. '(convert' → logprob: -11.750123023986816
    9. '(
' → logprob: -12.000123023986816
    10. '("' → logprob: -13.250123023986816

Token 120: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004979863297194242
    2. '('' → logprob: -8.625497817993164
    3. ' (' → logprob: -9.125497817993164
    4. ' ' → logprob: -9.250497817993164
    5. '(
' → logprob: -9.750497817993164
    6. ',' → logprob: -11.000497817993164
    7. '(read' → logprob: -11.625497817993164
    8. ')' → logprob: -11.875497817993164
    9. '("""' → logprob: -12.625497817993164
    10. '   ' → logprob: -13.250497817993164

Token 121: 'it' (ID: 278)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005974419880658388
    2. ' (' → logprob: -6.005974292755127
    3. 'u' → logprob: -7.255974292755127
    4. 'e' → logprob: -7.630974292755127
    5. ')' → logprob: -8.005974769592285
    6. '(
' → logprob: -8.130974769592285
    7. 'i' → logprob: -8.255974769592285
    8. '(input' → logprob: -8.255974769592285
    9. ' ' → logprob: -8.505974769592285
    10. '(e' → logprob: -9.005974769592285

Token 122: ' cette' (ID: 7696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014024113304913044
    2. ' ' → logprob: -4.889024257659912
    3. '(input' → logprob: -5.514024257659912
    4. ' (' → logprob: -6.764024257659912
    5. '(read' → logprob: -7.514024257659912
    6. '(
' → logprob: -8.264023780822754
    7. '   ' → logprob: -9.264023780822754
    8. 'l' → logprob: -9.764023780822754
    9. '(user' → logprob: -10.139023780822754
    10. '  ' → logprob: -10.514023780822754

Token 123: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.034470196813344955
    2. '(' → logprob: -3.6594700813293457
    3. ' (' → logprob: -5.909470081329346
    4. ' valeur' → logprob: -6.659470081329346
    5. ' )' → logprob: -6.784470081329346
    6. '  ' → logprob: -7.784470081329346
    7. ' entrée' → logprob: -7.784470081329346
    8. ',' → logprob: -8.284470558166504
    9. '   ' → logprob: -8.409470558166504
    10. ')' → logprob: -8.409470558166504

Token 124: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010447880253195763
    2. ' ' → logprob: -5.135447978973389
    3. ' (' → logprob: -6.385447978973389
    4. '('' → logprob: -6.635447978973389
    5. ',' → logprob: -7.635447978973389
    6. ')' → logprob: -8.76044750213623
    7. '(
' → logprob: -9.01044750213623
    8. '   ' → logprob: -9.26044750213623
    9. 's' → logprob: -9.63544750213623
    10. '  ' → logprob: -9.88544750213623

Token 125: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.11724007874727249
    2. ' ' → logprob: -2.7422401905059814
    3. ' int' → logprob: -3.4922401905059814
    4. ' entier' → logprob: -5.742239952087402
    5. 'int' → logprob: -6.117239952087402
    6. 'n' → logprob: -6.117239952087402
    7. 'un' → logprob: -6.242239952087402
    8. ' nombre' → logprob: -6.742239952087402
    9. ' une' → logprob: -6.992239952087402
    10. 'ent' → logprob: -7.117239952087402

Token 126: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16516409814357758
    2. ' entier' → logprob: -2.415163993835449
    3. ' nombre' → logprob: -3.540163993835449
    4. ' espace' → logprob: -4.040163993835449
    5. ' int' → logprob: -5.790163993835449
    6. 'ent' → logprob: -5.790163993835449
    7. ' ent' → logprob: -5.915163993835449
    8. 'nombre' → logprob: -6.040163993835449
    9. 'int' → logprob: -7.165163993835449
    10. ' ' → logprob: -7.415163993835449

Token 127: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01431475393474102
    2. '   ' → logprob: -4.639314651489258
    3. ' ' → logprob: -6.389314651489258
    4. ':' → logprob: -6.639314651489258
    5. '(
' → logprob: -7.139314651489258
    6. ',' → logprob: -8.389314651489258
    7. ')' → logprob: -9.639314651489258
    8. '  ' → logprob: -9.639314651489258
    9. ' (' → logprob: -9.639314651489258
    10. '()' → logprob: -9.889314651489258

Token 128: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32788902521133423
    2. '   ' → logprob: -1.3278889656066895
    3. 'n' → logprob: -4.9528889656066895
    4. ' ' → logprob: -6.3278889656066895
    5. '(n' → logprob: -6.4528889656066895
    6. ':' → logprob: -7.0778889656066895
    7. 'a' → logprob: -7.3278889656066895
    8. '(
' → logprob: -8.077889442443848
    9. '    
' → logprob: -8.077889442443848
    10. '    ' → logprob: -8.202889442443848

Token 129: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.06263121962547302
    2. '   ' → logprob: -3.562631130218506
    3. ' ' → logprob: -4.562631130218506
    4. ' n' → logprob: -4.937631130218506
    5. 'i' → logprob: -5.437631130218506
    6. 'x' → logprob: -5.687631130218506
    7. 'a' → logprob: -7.062631130218506
    8. ' 
' → logprob: -7.312631130218506
    9. 'e' → logprob: -7.437631130218506
    10. 'v' → logprob: -7.687631130218506

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03809806704521179
    2. '=' → logprob: -3.288098096847534
    3. ' ' → logprob: -10.163098335266113
    4. '  ' → logprob: -12.163098335266113
    5. ' =
' → logprob: -12.413098335266113
    6. '=int' → logprob: -12.663098335266113
    7. ')' → logprob: -13.288098335266113
    8. '=input' → logprob: -13.663098335266113
    9. ',' → logprob: -14.038098335266113
    10. '.' → logprob: -14.538098335266113

Token 131: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0011467679869383574
    2. 'int' → logprob: -6.8761467933654785
    3. ' ' → logprob: -9.37614631652832
    4. ' input' → logprob: -11.00114631652832
    5. ' ' → logprob: -12.25114631652832
    6. ' in' → logprob: -12.37614631652832
    7. '	int' → logprob: -13.87614631652832
    8. '=int' → logprob: -14.37614631652832
    9. ' i' → logprob: -14.62614631652832
    10. '(int' → logprob: -15.25114631652832

Token 132: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.42476239800453186
    2. '(' → logprob: -1.1747623682022095
    3. '(read' → logprob: -3.299762487411499
    4. ' (' → logprob: -8.799762725830078
    5. '()' → logprob: -9.299762725830078
    6. '('' → logprob: -11.174762725830078
    7. 'input' → logprob: -11.299762725830078
    8. 'read' → logprob: -11.924762725830078
    9. '(
' → logprob: -12.424762725830078
    10. ' ' → logprob: -13.299762725830078

Token 133: '())

' (ID: 27654)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5768789052963257
    2. '())' → logprob: -0.8268789052963257
    3. '(' → logprob: -7.201879024505615
    4. '()>' → logprob: -10.201878547668457
    5. '("' → logprob: -10.701878547668457
    6. ' ())' → logprob: -10.826878547668457
    7. '();)' → logprob: -10.951878547668457
    8. '()]' → logprob: -11.451878547668457
    9. '()">' → logprob: -11.451878547668457
    10. '());' → logprob: -11.826878547668457

Token 134: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2918438911437988
    2. ':' → logprob: -1.4168438911437988
    3. ')' → logprob: -1.7918438911437988
    4. '
' → logprob: -2.416843891143799
    5. '<|end|>' → logprob: -2.666843891143799
    6. '   ' → logprob: -2.791843891143799
    7. '  
' → logprob: -3.541843891143799
    8. ' 
' → logprob: -4.041843891143799
    9. '#' → logprob: -4.416843891143799
    10. '\' → logprob: -4.916843891143799

Token 135: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0373840369284153
    2. '#' (adapté à ' #') → logprob: -4.787384033203125
    3. 'for' → logprob: -5.537384033203125
    4. '   ' → logprob: -5.662384033203125
    5. 'r' → logprob: -5.662384033203125
    6. ' 
' → logprob: -6.037384033203125
    7. ' for' → logprob: -6.162384033203125
    8. 'n' → logprob: -6.162384033203125
    9. 's' → logprob: -6.662384033203125
    10. '\' → logprob: -6.787384033203125

Token 136: ' Cr' (ID: 5790)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22151969373226166
    2. 'for' → logprob: -2.721519708633423
    3. 'r' → logprob: -3.346519708633423
    4. ' for' → logprob: -3.471519708633423
    5. '#' → logprob: -4.221519470214844
    6. '   ' → logprob: -4.846519470214844
    7. ' #' → logprob: -4.971519470214844
    8. 's' → logprob: -5.221519470214844
    9. 'result' → logprob: -5.596519470214844
    10. 'n' → logprob: -5.971519470214844

Token 137: 'ée' (ID: 2894)
  Prédit: 'éer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'éer' → logprob: -0.9208530783653259
    2. 'ée' → logprob: -1.1708531379699707
    3. 'é' → logprob: -1.5458531379699707
    4. 'e' → logprob: -2.7958531379699707
    5. 'ea' → logprob: -4.545853137969971
    6. 'ép' → logprob: -6.545853137969971
    7. 'eat' → logprob: -7.295853137969971
    8. 'a' → logprob: -7.545853137969971
    9. '   ' → logprob: -7.670853137969971
    10. 'éal' → logprob: -7.795853137969971

Token 138: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2131359726190567
    2. ' un' → logprob: -1.8381359577178955
    3. ' a' → logprob: -4.088136196136475
    4. ' une' → logprob: -4.338136196136475
    5. 'a' → logprob: -6.463136196136475
    6. ' =' → logprob: -7.963136196136475
    7. '  ' → logprob: -8.588135719299316
    8. '_' → logprob: -8.838135719299316
    9. ' la' → logprob: -9.088135719299316
    10. 's' → logprob: -9.213135719299316

Token 139: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.08040674775838852
    2. ' ' → logprob: -3.330406665802002
    3. 'liste' → logprob: -3.330406665802002
    4. ' list' → logprob: -6.455406665802002
    5. ' ' → logprob: -7.580406665802002
    6. 's' → logprob: -7.580406665802002
    7. 'list' → logprob: -7.955406665802002
    8. ' lst' → logprob: -8.20540714263916
    9. ' =' → logprob: -8.33040714263916
    10. ' l' → logprob: -8.45540714263916

Token 140: ' vide' (ID: 21835)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -1.344022512435913
    2. '[' → logprob: -1.469022512435913
    3. 's' → logprob: -2.094022512435913
    4. '<|end|>' → logprob: -2.469022512435913
    5. ' de' → logprob: -3.094022512435913
    6. '[]' → logprob: -3.219022512435913
    7. ' =' → logprob: -3.219022512435913
    8. ' [' → logprob: -3.469022512435913
    9. 'des' → logprob: -4.344022750854492
    10. '(' → logprob: -4.719022750854492

Token 141: ' nom' (ID: 8080)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11614588648080826
    2. '[' → logprob: -2.7411458492279053
    3. '[]' → logprob: -4.491146087646484
    4. '_' → logprob: -5.116146087646484
    5. '<|end|>' → logprob: -5.116146087646484
    6. '(' → logprob: -5.366146087646484
    7. ' []' → logprob: -5.616146087646484
    8. '   ' → logprob: -5.991146087646484
    9. '()' → logprob: -6.116146087646484
    10. ',' → logprob: -6.866146087646484

Token 142: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4441109895706177
    2. 'ée' → logprob: -1.0691109895706177
    3. 'e' → logprob: -5.444110870361328
    4. 'é' → logprob: -5.569110870361328
    5. 'me' → logprob: -6.319110870361328
    6. '=' → logprob: -6.319110870361328
    7. 'mé' → logprob: -6.944110870361328
    8. 'uée' → logprob: -7.069110870361328
    9. 'née' → logprob: -7.944110870361328
    10. 'rée' → logprob: -8.194110870361328

Token 143: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.4856041371822357
    2. 'é' → logprob: -0.9856041669845581
    3. 'e' → logprob: -4.485604286193848
    4. '=' → logprob: -8.985604286193848
    5. 'm' → logprob: -9.985604286193848
    6. 'me' → logprob: -12.860604286193848
    7. 'mé' → logprob: -12.860604286193848
    8. 'ee' → logprob: -13.110604286193848
    9. 'née' → logprob: -13.610604286193848
    10. ' =' → logprob: -13.610604286193848

Token 144: ' '' (ID: 461)
  Prédit: ' numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.5093891024589539
    2. ' results' → logprob: -2.3843891620635986
    3. ' result' → logprob: -2.7593891620635986
    4. 'numbers' → logprob: -3.1343891620635986
    5. 'results' → logprob: -3.5093891620635986
    6. 'result' → logprob: -3.5093891620635986
    7. ' data' → logprob: -4.1343889236450195
    8. ' lst' → logprob: -4.6343889236450195
    9. 's' → logprob: -4.6343889236450195
    10. ' lines' → logprob: -4.8843889236450195

Token 145: 'nums' (ID: 44465)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.8340722918510437
    2. 'results' → logprob: -1.5840723514556885
    3. 'result' → logprob: -2.5840723514556885
    4. ' numbers' → logprob: -2.7090723514556885
    5. 'data' → logprob: -3.3340723514556885
    6. 'arr' → logprob: -3.5840723514556885
    7. 'values' → logprob: -3.8340723514556885
    8. 'lines' → logprob: -4.084072113037109
    9. 'lst' → logprob: -4.209072113037109
    10. 's' → logprob: -4.584072113037109

Token 146: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34607163071632385
    2. ''' → logprob: -1.3460716009140015
    3. '[]' → logprob: -4.096071720123291
    4. '=' → logprob: -5.096071720123291
    5. ')'' → logprob: -5.846071720123291
    6. ' ='' → logprob: -6.221071720123291
    7. '=[]' → logprob: -6.971071720123291
    8. '_list' → logprob: -6.971071720123291
    9. ')' → logprob: -7.346071720123291
    10. '   ' → logprob: -7.596071720123291

Token 147: ' pour' (ID: 1930)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.105687141418457
    2. ' ' → logprob: -1.730687141418457
    3. '[' → logprob: -1.980687141418457
    4. '<|end|>' → logprob: -2.855687141418457
    5. '   ' → logprob: -2.980687141418457
    6. '[:]' → logprob: -3.105687141418457
    7. ' =' → logprob: -3.230687141418457
    8. '=' → logprob: -3.730687141418457
    9. '()' → logprob: -3.855687141418457
    10. '(' → logprob: -3.980687141418457

Token 148: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.00909217819571495
    2. ' y' → logprob: -5.634092330932617
    3. ' accueillir' → logprob: -6.634092330932617
    4. 'stock' → logprob: -6.759092330932617
    5. ' collect' → logprob: -7.259092330932617
    6. ' ' → logprob: -7.509092330932617
    7. ' recevoir' → logprob: -7.634092330932617
    8. '_' → logprob: -8.384092330932617
    9. ' recue' → logprob: -8.634092330932617
    10. 'collect' → logprob: -9.009092330932617

Token 149: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.010620228946208954
    2. 'e' → logprob: -5.1356201171875
    3. '   ' → logprob: -5.7606201171875
    4. ' ' → logprob: -7.7606201171875
    5. '  ' → logprob: -8.2606201171875
    6. 'a' → logprob: -8.3856201171875
    7. 'es' → logprob: -9.1356201171875
    8. '[]' → logprob: -9.2606201171875
    9. '_' → logprob: -9.5106201171875
    10. '<|end|>' → logprob: -10.2606201171875

Token 150: ' tous' (ID: 10688)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.194009929895401
    2. ' des' → logprob: -2.444010019302368
    3. ' ' → logprob: -2.944010019302368
    4. '<|end|>' → logprob: -4.319009780883789
    5. ' n' → logprob: -4.819009780883789
    6. 'les' → logprob: -5.694009780883789
    7. 's' → logprob: -6.194009780883789
    8. '[]' → logprob: -6.194009780883789
    9. 'n' → logprob: -6.444009780883789
    10. ' the' → logprob: -6.819009780883789

Token 151: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.7334908246994019
    2. ' ' → logprob: -0.9834908246994019
    3. 'les' → logprob: -2.4834909439086914
    4. '()' → logprob: -4.108490943908691
    5. 'es' → logprob: -4.483490943908691
    6. '(' → logprob: -4.733490943908691
    7. '  ' → logprob: -5.233490943908691
    8. ' des' → logprob: -5.358490943908691
    9. ' (' → logprob: -6.108490943908691
    10. 's' → logprob: -6.233490943908691

Token 152: ' puiss' (ID: 102546)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.005735144484788179
    2. ' ent' → logprob: -6.005734920501709
    3. 'ent' → logprob: -7.005734920501709
    4. 'n' → logprob: -7.005734920501709
    5. ' ' → logprob: -7.380734920501709
    6. 'nombre' → logprob: -7.880734920501709
    7. ' nombre' → logprob: -8.505735397338867
    8. ' éléments' → logprob: -10.130735397338867
    9. 'élé' → logprob: -10.130735397338867
    10. ' numbers' → logprob: -10.255735397338867

Token 153: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.001018398441374302
    2. 'ance' → logprob: -7.251018524169922
    3. 'an' → logprob: -9.626018524169922
    4. ' ' → logprob: -10.251018524169922
    5. 'a' → logprob: -10.376018524169922
    6. 'ancers' → logprob: -10.626018524169922
    7. 'ancements' → logprob: -11.001018524169922
    8. 'anciers' → logprob: -11.126018524169922
    9. 'ANCES' → logprob: -11.251018524169922
    10. '   ' → logprob: -11.376018524169922

Token 154: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08293914049863815
    2. ' de' → logprob: -3.4579391479492188
    3. '(' → logprob: -3.5829391479492188
    4. ' (' → logprob: -5.207939147949219
    5. ' des' → logprob: -5.707939147949219
    6. '[' → logprob: -5.832939147949219
    7. 's' → logprob: -6.332939147949219
    8. '  ' → logprob: -6.707939147949219
    9. '_' → logprob: -7.082939147949219
    10. ' of' → logprob: -7.332939147949219

Token 155: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6354476809501648
    2. ' ' → logprob: -0.8854476809501648
    3. 'de' → logprob: -3.6354477405548096
    4. ' deux' → logprob: -4.2604475021362305
    5. '10' → logprob: -4.5104475021362305
    6. ' two' → logprob: -5.6354475021362305
    7. ' n' → logprob: -7.1354475021362305
    8. 'n' → logprob: -7.6354475021362305
    9. ' de' → logprob: -8.13544750213623
    10. 'two' → logprob: -8.76044750213623

Token 156: '6' (ID: 21)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08042631298303604
    2. 'de' → logprob: -2.8304262161254883
    3. ' ' → logprob: -4.080426216125488
    4. '10' → logprob: -6.955426216125488
    5. 'n' → logprob: -8.705426216125488
    6. ' deux' → logprob: -9.205426216125488
    7. 'nombre' → logprob: -10.455426216125488
    8. '3' → logprob: -10.955426216125488
    9. 'l' → logprob: -11.205426216125488
    10. '```' → logprob: -11.330426216125488

Token 157: ' et' (ID: 859)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7890881299972534
    2. ' ' → logprob: -1.6640881299972534
    3. '6' → logprob: -2.164088249206543
    4. '[' → logprob: -2.164088249206543
    5. '   ' → logprob: -2.914088249206543
    6. ',' → logprob: -3.164088249206543
    7. '.' → logprob: -5.414088249206543
    8. '[]' → logprob: -5.539088249206543
    9. 's' → logprob: -5.664088249206543
    10. ':' → logprob: -5.789088249206543

Token 158: ' ' (ID: 220)
  Prédit: ' leurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' leurs' → logprob: -0.8878538608551025
    2. ' ' → logprob: -1.5128538608551025
    3. '7' → logprob: -1.8878538608551025
    4. 'leurs' → logprob: -3.0128538608551025
    5. '10' → logprob: -3.3878538608551025
    6. '4' → logprob: -4.262853622436523
    7. '2' → logprob: -4.512853622436523
    8. ' de' → logprob: -4.762853622436523
    9. '  ' → logprob: -4.887853622436523
    10. '5' → logprob: -4.950353622436523

Token 159: '9' (ID: 24)
  Prédit: 'leurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leurs' → logprob: -1.8209635019302368
    2. '5' → logprob: -2.0709633827209473
    3. 'leur' → logprob: -2.1959633827209473
    4. '10' → logprob: -2.1959633827209473
    5. ' leurs' → logprob: -2.3209633827209473
    6. ' ' → logprob: -2.4459633827209473
    7. '4' → logprob: -2.6959633827209473
    8. '7' → logprob: -3.0709633827209473
    9. '9' → logprob: -3.3209633827209473
    10. '12' → logprob: -3.5709633827209473

Token 160: ' inf' (ID: 5603)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9020242691040039
    2. ',' → logprob: -2.027024269104004
    3. '[' → logprob: -2.027024269104004
    4. '
' → logprob: -2.777024269104004
    5. '   ' → logprob: -2.902024269104004
    6. '  ' → logprob: -3.277024269104004
    7. '.' → logprob: -3.527024269104004
    8. '  
' → logprob: -3.652024269104004
    9. 's' → logprob: -3.777024269104004
    10. '<|end|>' → logprob: -4.027024269104004

Token 161: 'érieures' (ID: 108978)
  Prédit: 'érieures'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érieures' → logprob: -0.016444873064756393
    2. 'érieur' → logprob: -5.516444683074951
    3. 'érieurs' → logprob: -5.766444683074951
    4. 'é' → logprob: -5.766444683074951
    5. 'érieure' → logprob: -6.141444683074951
    6. 'er' → logprob: -6.516444683074951
    7. 'érie' → logprob: -6.766444683074951
    8. 'ér' → logprob: -7.891444683074951
    9. 'éri' → logprob: -9.14144515991211
    10. 'érées' → logprob: -9.14144515991211

Token 162: ' ou' (ID: 2031)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.12382159382104874
    2. 'à' → logprob: -3.373821496963501
    3. ' ' → logprob: -3.623821496963501
    4. '  ' → logprob: -4.12382173538208
    5. 'au' → logprob: -5.12382173538208
    6. '=' → logprob: -5.24882173538208
    7. '   ' → logprob: -5.24882173538208
    8. ' a' → logprob: -5.37382173538208
    9. ' aux' → logprob: -5.74882173538208
    10. ' au' → logprob: -5.99882173538208

Token 163: ' ég' (ID: 33150)
  Prédit: ' ég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.08576289564371109
    2. '=' → logprob: -2.7107629776000977
    3. 'ég' → logprob: -5.210762977600098
    4. 'égal' → logprob: -5.335762977600098
    5. 'ou' → logprob: -6.210762977600098
    6. 'à' → logprob: -7.085762977600098
    7. ' eg' → logprob: -7.210762977600098
    8. 'eg' → logprob: -7.460762977600098
    9. ' à' → logprob: -7.835762977600098
    10. ' égal' → logprob: -8.460762977600098

Token 164: 'ales' (ID: 3459)
  Prédit: 'ales'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ales' → logprob: -0.3992340564727783
    2. 'al' → logprob: -1.1492340564727783
    3. 'ale' → logprob: -4.774233818054199
    4. 'a' → logprob: -6.649233818054199
    5. '```' → logprob: -7.836733818054199
    6. '{' → logprob: -8.6492338180542
    7. 'à' → logprob: -8.8367338180542
    8. 'als' → logprob: -8.8367338180542
    9. '=' → logprob: -9.3992338180542
    10. ' ' → logprob: -9.6492338180542

Token 165: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.547029972076416
    2. ' à' → logprob: -0.922029972076416
    3. '  ' → logprob: -5.172029972076416
    4. ' a' → logprob: -5.172029972076416
    5. 'au' → logprob: -5.422029972076416
    6. ' au' → logprob: -5.672029972076416
    7. 'à' → logprob: -6.547029972076416
    8. ' aux' → logprob: -6.672029972076416
    9. ' ' → logprob: -8.047029495239258
    10. '   ' → logprob: -8.797029495239258

Token 166: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.018279295414686203
    2. 'n' → logprob: -4.018279075622559
    3. ' ' → logprob: -9.143279075622559
    4. ' ' → logprob: -10.893279075622559
    5. '	n' → logprob: -13.143279075622559
    6. ' ' → logprob: -14.893279075622559
    7. ' `' → logprob: -15.143279075622559
    8. ' a' → logprob: -16.330780029296875
    9. '```' → logprob: -16.518280029296875
    10. 'a' → logprob: -16.893280029296875

Token 167: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1480135917663574
    2. 'nums' → logprob: -1.5230135917663574
    3. ' ' → logprob: -1.6480135917663574
    4. '   ' → logprob: -2.2730135917663574
    5. ' nums' → logprob: -3.3980135917663574
    6. '  
' → logprob: -3.5230135917663574
    7. '  ' → logprob: -3.7730135917663574
    8. ',' → logprob: -4.148013591766357
    9. '<|end|>' → logprob: -4.773013591766357
    10. '   
' → logprob: -4.898013591766357

Token 168: '   ' (ID: 271)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.4715304374694824
    2. ' ' → logprob: -1.8465304374694824
    3. ' nums' → logprob: -2.0965304374694824
    4. '   ' → logprob: -2.7215304374694824
    5. '  
' → logprob: -4.971530437469482
    6. '
' → logprob: -5.471530437469482
    7. ' 
' → logprob: -5.596530437469482
    8. '[' → logprob: -5.971530437469482
    9. '  ' → logprob: -6.096530437469482
    10. ',' → logprob: -6.596530437469482

Token 169: ' nums' (ID: 18117)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6891126036643982
    2. 'nums' (adapté à ' nums') → logprob: -1.314112663269043
    3. ' nums' → logprob: -2.064112663269043
    4. ' 
' → logprob: -3.189112663269043
    5. '  
' → logprob: -4.189112663269043
    6. 'n' → logprob: -4.439112663269043
    7. '   ' → logprob: -4.564112663269043
    8. '[' → logprob: -5.564112663269043
    9. '   
' → logprob: -5.564112663269043
    10. '
' → logprob: -6.064112663269043

Token 170: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023315127938985825
    2. '=' → logprob: -3.773315191268921
    3. '=[]' → logprob: -9.7733154296875
    4. ' ' → logprob: -12.3983154296875
    5. '[]' → logprob: -12.5233154296875
    6. ' =[' → logprob: -14.1483154296875
    7. ' []' → logprob: -14.3983154296875
    8. ',' → logprob: -14.5233154296875
    9. '.' → logprob: -14.6483154296875
    10. ' ' → logprob: -15.0233154296875

Token 171: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.11261781305074692
    2. '[]' → logprob: -2.3626177310943604
    3. ' [' → logprob: -4.4876179695129395
    4. '[' → logprob: -6.8626179695129395
    5. ' ' → logprob: -10.487617492675781
    6. ' []
' → logprob: -12.112617492675781
    7. '[]}' → logprob: -13.737617492675781
    8. '[]
' → logprob: -13.987617492675781
    9. ' [];' → logprob: -14.362617492675781
    10. ' set' → logprob: -14.612617492675781

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10879497230052948
    2. 'for' → logprob: -2.733794927597046
    3. ' for' → logprob: -3.483794927597046
    4. '    
' → logprob: -5.483795166015625
    5. ' ' → logprob: -6.233795166015625
    6. '    ' → logprob: -7.983795166015625
    7. '  ' → logprob: -8.483795166015625
    8. ' 
' → logprob: -8.608795166015625
    9. '
' → logprob: -8.733795166015625
    10. '   
' → logprob: -9.108795166015625

Token 173: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.40246737003326416
    2. ' for' → logprob: -1.5274673700332642
    3. '   ' → logprob: -2.6524672508239746
    4. ' ' → logprob: -3.7774672508239746
    5. 'i' → logprob: -4.652467250823975
    6. '6' → logprob: -5.027467250823975
    7. ' i' → logprob: -5.902467250823975
    8. '#' (adapté à ' #') → logprob: -7.777467250823975
    9. '  ' → logprob: -7.777467250823975
    10. ' 
' → logprob: -7.902467250823975

Token 174: ' Initialise' (ID: 179601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24220594763755798
    2. 'i' → logprob: -1.9922059774398804
    3. ' for' → logprob: -2.992205858230591
    4. ' i' → logprob: -3.867205858230591
    5. 'power' → logprob: -6.11720609664917
    6. 'x' → logprob: -6.99220609664917
    7. '#' → logprob: -6.99220609664917
    8. 'pow' → logprob: -7.11720609664917
    9. ' power' → logprob: -7.99220609664917
    10. 'val' → logprob: -8.117205619812012

Token 175: ' une' (ID: 2463)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.09663425385951996
    2. 'i' → logprob: -3.2216341495513916
    3. ' x' → logprob: -3.4716341495513916
    4. ' power' → logprob: -5.221634387969971
    5. 'x' → logprob: -5.346634387969971
    6. ' ' → logprob: -5.971634387969971
    7. ' a' → logprob: -5.971634387969971
    8. ' base' → logprob: -6.596634387969971
    9. ' p' → logprob: -6.846634387969971
    10. 'a' → logprob: -7.096634387969971

Token 176: ' variable' (ID: 11076)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.33344304561615
    2. 'base' → logprob: -1.45844304561615
    3. 'power' → logprob: -2.0834431648254395
    4. ' base' → logprob: -2.0834431648254395
    5. ' i' → logprob: -2.7084431648254395
    6. 'x' → logprob: -3.3334431648254395
    7. 'val' → logprob: -3.5834431648254395
    8. 'pow' → logprob: -3.5834431648254395
    9. ' power' → logprob: -3.9584431648254395
    10. 'value' → logprob: -4.2084431648254395

Token 177: ' pour' (ID: 1930)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08799334615468979
    2. 'i' → logprob: -2.7129933834075928
    3. ' x' → logprob: -4.587993144989014
    4. ' power' → logprob: -6.087993144989014
    5. 'x' → logprob: -6.212993144989014
    6. ' ' → logprob: -7.087993144989014
    7. ' base' → logprob: -7.587993144989014
    8. ' k' → logprob: -7.712993144989014
    9. ' p' → logprob: -7.962993144989014
    10. ' pow' → logprob: -8.462993621826172

Token 178: ' parcour' (ID: 130642)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17965687811374664
    2. 'i' → logprob: -1.9296568632125854
    3. ' la' → logprob: -5.304656982421875
    4. ' p' → logprob: -6.179656982421875
    5. ' base' → logprob: -6.304656982421875
    6. ' multiplier' → logprob: -6.679656982421875
    7. ' ' → logprob: -6.804656982421875
    8. ' x' → logprob: -6.804656982421875
    9. ' k' → logprob: -6.929656982421875
    10. 'x' → logprob: -6.929656982421875

Token 179: 'ir' (ID: 380)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.005726013332605362
    2. 'r' → logprob: -5.755725860595703
    3. 'ir' → logprob: -7.005725860595703
    4. 'iner' → logprob: -8.130725860595703
    5. 'iter' → logprob: -8.505725860595703
    6. 'orer' → logprob: -8.630725860595703
    7. 'ter' → logprob: -9.005725860595703
    8. 'irer' → logprob: -9.505725860595703
    9. 'ner' → logprob: -9.630725860595703
    10. 'ser' → logprob: -9.880725860595703

Token 180: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8856690526008606
    2. ' les' → logprob: -1.3856689929962158
    3. ' ' → logprob: -2.135668992996216
    4. 'i' → logprob: -2.385668992996216
    5. ' la' → logprob: -2.385668992996216
    6. '6' → logprob: -4.385669231414795
    7. 'les' → logprob: -5.260669231414795
    8. ' le' → logprob: -5.385669231414795
    9. 'la' → logprob: -6.510669231414795
    10. 'le' → logprob: -6.760669231414795

Token 181: ' puiss' (ID: 102546)
  Prédit: ' puiss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puiss' → logprob: -0.2900656461715698
    2. ' ' → logprob: -2.6650657653808594
    3. 'pu' → logprob: -3.4150657653808594
    4. ' i' → logprob: -3.5400657653808594
    5. ' bases' → logprob: -3.6650657653808594
    6. 'ex' → logprob: -4.040065765380859
    7. 'i' → logprob: -4.165065765380859
    8. '6' → logprob: -4.290065765380859
    9. ' nombres' → logprob: -4.665065765380859
    10. ' ex' → logprob: -4.665065765380859

Token 182: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.00018911674851551652
    2. 'ance' → logprob: -9.250188827514648
    3. 'an' → logprob: -10.375188827514648
    4. 's' → logprob: -11.250188827514648
    5. '6' → logprob: -11.625188827514648
    6. 'a' → logprob: -11.875188827514648
    7. 'es' → logprob: -11.875188827514648
    8. '```' → logprob: -12.625188827514648
    9. '   ' → logprob: -12.750188827514648
    10. 'anc' → logprob: -12.875188827514648

Token 183: ' de' (ID: 334)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.39819544553756714
    2. ' ' → logprob: -2.148195505142212
    3. 'i' → logprob: -2.273195505142212
    4. ' de' → logprob: -2.523195505142212
    5. 'de' → logprob: -4.273195266723633
    6. ' `' → logprob: -6.273195266723633
    7. '_' → logprob: -6.398195266723633
    8. 'x' → logprob: -6.523195266723633
    9. 'a' → logprob: -6.523195266723633
    10. '6' → logprob: -6.648195266723633

Token 184: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.25210076570510864
    2. ' ' → logprob: -1.5021007061004639
    3. '2' → logprob: -10.252100944519043
    4. '1' → logprob: -10.502100944519043
    5. '   ' → logprob: -10.627100944519043
    6. '  ' → logprob: -11.502100944519043
    7. '```' → logprob: -11.752100944519043
    8. ' ' → logprob: -11.939600944519043
    9. '`' → logprob: -12.064600944519043
    10. ' base' → logprob: -12.314600944519043

Token 185: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0017198040150105953
    2. ' ' → logprob: -6.376719951629639
    3. '  ' → logprob: -12.62671947479248
    4. '   ' → logprob: -12.87671947479248
    5. 'six' → logprob: -13.12671947479248
    6. '```' → logprob: -13.37671947479248
    7. '`' → logprob: -13.50171947479248
    8. '1' → logprob: -13.87671947479248
    9. '2' → logprob: -13.93921947479248
    10. ' six' → logprob: -14.12671947479248

Token 186: ',' (ID: 11)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.585413932800293
    2. 'i' → logprob: -0.835413932800293
    3. 'p' → logprob: -5.710413932800293
    4. 'x' → logprob: -6.335413932800293
    5. ' p' → logprob: -6.960413932800293
    6. 'a' → logprob: -7.335413932800293
    7. ' x' → logprob: -7.835413932800293
    8. 'power' → logprob: -7.835413932800293
    9. ',' → logprob: -7.960413932800293
    10. ' power' → logprob: -8.085413932800293

Token 187: ' commence' (ID: 44755)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5195965766906738
    2. ' i' → logprob: -1.5195965766906738
    3. '   ' → logprob: -2.269596576690674
    4. 'x' → logprob: -3.144596576690674
    5. ' x' → logprob: -4.394596576690674
    6. 'p' → logprob: -5.019596576690674
    7. 'power' → logprob: -5.394596576690674
    8. 'k' → logprob: -5.894596576690674
    9. ' power' → logprob: -6.019596576690674
    10. ' p' → logprob: -6.144596576690674

Token 188: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5817627310752869
    2. ' par' → logprob: -1.7067627906799316
    3. ' à' → logprob: -2.2067627906799316
    4. ' =' → logprob: -2.9567627906799316
    5. 'par' → logprob: -2.9567627906799316
    6. 'e' → logprob: -3.4567627906799316
    7. ' ' → logprob: -4.956762790679932
    8. '_par' → logprob: -6.456762790679932
    9. 'à' → logprob: -6.581762790679932
    10. ' avec' → logprob: -7.581762790679932

Token 189: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3805772662162781
    2. '1' → logprob: -1.2555773258209229
    3. '0' → logprob: -3.505577325820923
    4. '6' → logprob: -6.505577087402344
    5. '2' → logprob: -10.130577087402344
    6. 'i' → logprob: -10.630577087402344
    7. ' i' → logprob: -11.880577087402344
    8. ' zéro' → logprob: -12.380577087402344
    9. '  ' → logprob: -12.755577087402344
    10. ' ' → logprob: -12.880577087402344

Token 190: '6' (ID: 21)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4811958968639374
    2. '0' → logprob: -0.9811959266662598
    3. '6' → logprob: -4.98119592666626
    4. ' ' → logprob: -8.481195449829102
    5. 'i' → logprob: -11.981195449829102
    6. '```' → logprob: -12.856195449829102
    7. '`' → logprob: -13.606195449829102
    8. 'pow' → logprob: -13.918695449829102
    9. '   ' → logprob: -14.356195449829102
    10. '=' → logprob: -14.356195449829102

Token 191: '
' (ID: 198)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.503318190574646
    2. 'i' → logprob: -1.503318190574646
    3. '*' → logprob: -2.8783183097839355
    4. ',' → logprob: -3.0033183097839355
    5. ' ' → logprob: -4.1283183097839355
    6. 'p' → logprob: -4.8783183097839355
    7. 'x' → logprob: -5.2533183097839355
    8. 'pow' → logprob: -5.5033183097839355
    9. 'power' → logprob: -5.6283183097839355
    10. '=' → logprob: -5.6283183097839355

Token 192: '   ' (ID: 271)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.2126675248146057
    2. ',' → logprob: -2.837667465209961
    3. '
' → logprob: -3.587667465209961
    4. 'i' → logprob: -3.837667465209961
    5. '*' → logprob: -3.962667465209961
    6. ' ' → logprob: -4.587667465209961
    7. 'x' → logprob: -4.712667465209961
    8. '**' → logprob: -4.837667465209961
    9. 'p' → logprob: -5.212667465209961
    10. 'a' → logprob: -5.712667465209961

Token 193: ' n' (ID: 297)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6539505124092102
    2. 'power' → logprob: -1.7789504528045654
    3. 'p' → logprob: -2.2789504528045654
    4. 'x' → logprob: -2.6539504528045654
    5. 'pow' → logprob: -2.6539504528045654
    6. ' i' → logprob: -3.9039504528045654
    7. 'base' → logprob: -4.5289506912231445
    8. 'num' → logprob: -4.9039506912231445
    9. ' power' → logprob: -4.9039506912231445
    10. '6' → logprob: -5.2789506912231445

Token 194: '6' (ID: 21)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.02335926704108715
    2. 'ums' → logprob: -4.898359298706055
    3. 'umber' → logprob: -5.773359298706055
    4. 'u' → logprob: -6.148359298706055
    5. 'p' → logprob: -6.398359298706055
    6. 'pow' → logprob: -6.398359298706055
    7. '6' → logprob: -6.648359298706055
    8. '_pow' → logprob: -7.023359298706055
    9. '_' → logprob: -7.148359298706055
    10. 'x' → logprob: -7.523359298706055

Token 195: ' =' (ID: 314)
  Prédit: '_pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pow' → logprob: -0.9668882489204407
    2. ' =' → logprob: -1.091888189315796
    3. '_power' → logprob: -2.341888189315796
    4. '_' → logprob: -2.341888189315796
    5. '_val' → logprob: -3.466888189315796
    6. 'pow' → logprob: -3.966888189315796
    7. '=' → logprob: -4.091888427734375
    8. 'um' → logprob: -4.841888427734375
    9. '_p' → logprob: -4.966888427734375
    10. 'u' → logprob: -6.716888427734375

Token 196: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.002551646437495947
    2. ' ' → logprob: -6.002551555633545
    3. '1' → logprob: -9.502552032470703
    4. '   ' → logprob: -14.127552032470703
    5. '  ' → logprob: -15.627552032470703
    6. '' → logprob: -16.940052032470703
    7. '	' → logprob: -17.252552032470703
    8. '۶' → logprob: -17.440052032470703
    9. '=' → logprob: -17.752552032470703
    10. '```' → logprob: -17.752552032470703

Token 197: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00030042731668800116
    2. '1' → logprob: -8.500300407409668
    3. ' ' → logprob: -9.250300407409668
    4. '   ' → logprob: -15.625300407409668
    5. '' → logprob: -16.625301361083984
    6. '```' → logprob: -16.625301361083984
    7. '  ' → logprob: -16.875301361083984
    8. '۶' → logprob: -17.125301361083984
    9. '0' → logprob: -17.187801361083984
    10. '٦' → logprob: -17.187801361083984

Token 198: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5419511198997498
    2. '**' → logprob: -1.2919511795043945
    3. 'while' → logprob: -2.2919511795043945
    4. '6' → logprob: -4.6669511795043945
    5. '*' → logprob: -4.6669511795043945
    6. ' while' → logprob: -4.9169511795043945
    7. '#' → logprob: -5.6669511795043945
    8. ' 
' → logprob: -6.1669511795043945
    9. '  
' → logprob: -6.4169511795043945
    10. ' ' → logprob: -6.4169511795043945

Token 199: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8688772320747375
    2. '<|end|>' → logprob: -0.9938772320747375
    3. 'while' → logprob: -2.4938771724700928
    4. '   ' → logprob: -3.3688771724700928
    5. ' while' → logprob: -3.7438771724700928
    6. '<|end|>' → logprob: -4.243877410888672
    7. '  
' → logprob: -4.368877410888672
    8. ',' → logprob: -4.368877410888672
    9. '	while' → logprob: -4.743877410888672
    10. '*' → logprob: -5.368877410888672

Token 200: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03771436959505081
    2. ' while' → logprob: -3.5377144813537598
    3. '   ' → logprob: -6.03771448135376
    4. '
' → logprob: -6.28771448135376
    5. '6' → logprob: -6.78771448135376
    6. ',' → logprob: -7.03771448135376
    7. '	while' → logprob: -7.16271448135376
    8. '#' (adapté à ' #') → logprob: -8.912714004516602
    9. '<|end|>' → logprob: -8.912714004516602
    10. '*' → logprob: -9.287714004516602

Token 201: ' Bou' (ID: 33816)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.00045593673712573946
    2. ' while' → logprob: -7.750455856323242
    3. 'While' → logprob: -11.625455856323242
    4. '#' → logprob: -11.875455856323242
    5. '   ' → logprob: -12.125455856323242
    6. '6' → logprob: -13.750455856323242
    7. '
' → logprob: -14.000455856323242
    8. '	while' → logprob: -14.250455856323242
    9. 'wh' → logprob: -14.375455856323242
    10. 'n' → logprob: -14.875455856323242

Token 202: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.011202730238437653
    2. 'cler' → logprob: -5.511202812194824
    3. '   ' → logprob: -5.636202812194824
    4. 'c' → logprob: -6.261202812194824
    5. 'cl' → logprob: -7.511202812194824
    6. '#' → logprob: -8.261202812194824
    7. '

' → logprob: -9.011202812194824
    8. 'clé' → logprob: -9.011202812194824
    9. '
' → logprob: -9.261202812194824
    10. 't' → logprob: -9.386202812194824

Token 203: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5246530771255493
    2. 'while' → logprob: -0.8996530771255493
    3. ':' → logprob: -7.27465295791626
    4. '   ' → logprob: -7.52465295791626
    5. ',' → logprob: -9.774653434753418
    6. '	while' → logprob: -9.899653434753418
    7. ' tant' → logprob: -9.899653434753418
    8. ' ' → logprob: -10.774653434753418
    9. ' :' → logprob: -11.024653434753418
    10. 'tant' → logprob: -11.149653434753418

Token 204: ' pour' (ID: 1930)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.056821197271347046
    2. 'n' → logprob: -3.18182110786438
    3. ' ' → logprob: -5.056821346282959
    4. ':' → logprob: -5.931821346282959
    5. ' (' → logprob: -6.431821346282959
    6. ' while' → logprob: -6.931821346282959
    7. '(n' → logprob: -7.931821346282959
    8. '  ' → logprob: -7.931821346282959
    9. ' :' → logprob: -7.931821346282959
    10. ' nums' → logprob: -8.1818208694458

Token 205: ' ajouter' (ID: 78457)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03376348689198494
    2. 'n' → logprob: -3.4087634086608887
    3. ' parcour' → logprob: -10.283763885498047
    4. ' ' → logprob: -10.658763885498047
    5. ' ajouter' → logprob: -10.908763885498047
    6. ' continuer' → logprob: -10.908763885498047
    7. ' s' → logprob: -13.846263885498047
    8. 's' → logprob: -13.846263885498047
    9. '	n' → logprob: -13.971263885498047
    10. ' (' → logprob: -13.971263885498047

Token 206: ' toutes' (ID: 17502)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.19227911531925201
    2. 'n' → logprob: -2.942279100418091
    3. ' les' → logprob: -3.192279100418091
    4. ' tous' → logprob: -3.442279100418091
    5. ' all' → logprob: -3.692279100418091
    6. ' toutes' → logprob: -4.69227933883667
    7. ' ' → logprob: -4.81727933883667
    8. ' des' → logprob: -5.81727933883667
    9. 'les' → logprob: -7.31727933883667
    10. 'all' → logprob: -7.31727933883667

Token 207: ' les' (ID: 1341)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3956833779811859
    2. ' les' → logprob: -1.7706834077835083
    3. ' ' → logprob: -2.6456832885742188
    4. 'n' → logprob: -3.1456832885742188
    5. ' nums' → logprob: -4.645683288574219
    6. '6' → logprob: -5.020683288574219
    7. ' des' → logprob: -5.270683288574219
    8. ' (' → logprob: -5.520683288574219
    9. 'nums' → logprob: -6.020683288574219
    10. '(n' → logprob: -6.145683288574219

Token 208: ' puiss' (ID: 102546)
  Prédit: ' puiss'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' puiss' → logprob: -0.12616078555583954
    2. 'pu' → logprob: -2.2511608600616455
    3. 'n' → logprob: -5.376160621643066
    4. ' ' → logprob: -6.251160621643066
    5. 'powers' → logprob: -6.251160621643066
    6. 'pow' → logprob: -6.876160621643066
    7. ' n' → logprob: -7.001160621643066
    8. '6' → logprob: -7.251160621643066
    9. ' valeurs' → logprob: -7.376160621643066
    10. ' puissance' → logprob: -7.626160621643066

Token 209: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.004440682008862495
    2. '6' → logprob: -5.879440784454346
    3. 'es' → logprob: -7.754440784454346
    4. '#' → logprob: -8.254440307617188
    5. 'ences' → logprob: -8.504440307617188
    6. '```' → logprob: -9.129440307617188
    7. '{' → logprob: -9.379440307617188
    8. '>' → logprob: -9.879440307617188
    9. '[' → logprob: -10.504440307617188
    10. 'ance' → logprob: -10.504440307617188

Token 210: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.15584269165992737
    2. ' ' → logprob: -2.9058427810668945
    3. 'de' → logprob: -3.2808427810668945
    4. '   ' → logprob: -3.6558427810668945
    5. ' of' → logprob: -4.2808427810668945
    6. '6' → logprob: -5.0308427810668945
    7. ' n' → logprob: -6.7808427810668945
    8. '    ' → logprob: -7.1558427810668945
    9. '  ' → logprob: -7.1558427810668945
    10. '_' → logprob: -7.4058427810668945

Token 211: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.091574527323246
    2. ' ' → logprob: -2.4665744304656982
    3. ' n' → logprob: -6.591574668884277
    4. 'n' → logprob: -6.716574668884277
    5. ' six' → logprob: -11.091574668884277
    6. 'six' → logprob: -11.341574668884277
    7. '   ' → logprob: -11.841574668884277
    8. '1' → logprob: -13.154074668884277
    9. '  ' → logprob: -13.779074668884277
    10. '`' → logprob: -13.904074668884277

Token 212: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.001989897806197405
    2. ' ' → logprob: -6.251989841461182
    3. 'n' → logprob: -10.25199031829834
    4. '```' → logprob: -12.25199031829834
    5. 'six' → logprob: -12.25199031829834
    6. ' six' → logprob: -12.62699031829834
    7. '`' → logprob: -12.75199031829834
    8. ' n' → logprob: -12.87699031829834
    9. '   ' → logprob: -13.12699031829834
    10. '9' → logprob: -14.00199031829834

Token 213: ' <=' (ID: 5017)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2534326314926147
    2. '<=' → logprob: -1.5034326314926147
    3. ' <=' → logprob: -2.0034327507019043
    4. 'inf' → logprob: -2.3784327507019043
    5. '6' → logprob: -2.7534327507019043
    6. ',' → logprob: -3.3784327507019043
    7. ' jusqu' → logprob: -3.5034327507019043
    8. '   ' → logprob: -3.5034327507019043
    9. ' à' → logprob: -3.8784327507019043
    10. 'jus' → logprob: -4.378432750701904

Token 214: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.22577126324176788
    2. 'n' → logprob: -1.6007713079452515
    3. ' ' → logprob: -7.975771427154541
    4. '	n' → logprob: -12.225770950317383
    5. ' ' → logprob: -13.225770950317383
    6. '   ' → logprob: -13.350770950317383
    7. '  ' → logprob: -13.600770950317383
    8. '_n' → logprob: -14.225770950317383
    9. ' '' → logprob: -14.475770950317383
    10. '6' → logprob: -14.600770950317383

Token 215: ' à' (ID: 1221)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08426600694656372
    2. ' :' → logprob: -2.959265947341919
    3. '   ' → logprob: -4.459266185760498
    4. ':
' → logprob: -4.709266185760498
    5. ' :
' → logprob: -4.959266185760498
    6. ' ' → logprob: -7.959266185760498
    7. 'while' → logprob: -8.08426570892334
    8. ',' → logprob: -8.70926570892334
    9. ' while' → logprob: -9.08426570892334
    10. '
' → logprob: -9.58426570892334

Token 216: ' la' (ID: 557)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.023362180218100548
    2. ' nums' → logprob: -3.773362159729004
    3. ' la' → logprob: -10.273362159729004
    4. 'la' → logprob: -10.898362159729004
    5. '   ' → logprob: -11.023362159729004
    6. ' ' → logprob: -11.148362159729004
    7. 'num' → logprob: -11.398362159729004
    8. '(nums' → logprob: -12.648362159729004
    9. 'n' → logprob: -12.773362159729004
    10. 'Nums' → logprob: -12.773362159729004

Token 217: ' liste' (ID: 31719)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.0016262639546766877
    2. ' nums' → logprob: -6.501626491546631
    3. 'num' → logprob: -10.126626014709473
    4. 'list' → logprob: -10.376626014709473
    5. '[]' → logprob: -11.626626014709473
    6. '   ' → logprob: -12.126626014709473
    7. 'liste' → logprob: -12.126626014709473
    8. 'while' → logprob: -12.251626014709473
    9. '_nums' → logprob: -12.501626014709473
    10. 'numbers' → logprob: -12.626626014709473

Token 218: ' '' (ID: 461)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.565799355506897
    2. '   ' → logprob: -1.315799355506897
    3. ' :' → logprob: -2.0657992362976074
    4. 'while' → logprob: -4.065799236297607
    5. ' while' → logprob: -4.315799236297607
    6. ' :
' → logprob: -5.815799236297607
    7. ' ' → logprob: -7.440799236297607
    8. 'n' → logprob: -7.565799236297607
    9. ':
' → logprob: -7.690799236297607
    10. '6' → logprob: -7.940799236297607

Token 219: 'nums' (ID: 44465)
  Prédit: 'nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.07894156873226166
    2. ' nums' → logprob: -2.578941583633423
    3. 'n' → logprob: -11.078941345214844
    4. ' ' → logprob: -11.328941345214844
    5. 'num' → logprob: -11.703941345214844
    6. '_nums' → logprob: -12.578941345214844
    7. '(nums' → logprob: -12.703941345214844
    8. ' n' → logprob: -13.328941345214844
    9. 'Nums' → logprob: -13.328941345214844
    10. 'numbers' → logprob: -13.578941345214844

Token 220: ''
' (ID: 2207)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12670212984085083
    2. '   ' → logprob: -2.501702070236206
    3. ':
' → logprob: -3.626702070236206
    4. ' :' → logprob: -5.751702308654785
    5. 'while' → logprob: -5.751702308654785
    6. ' :
' → logprob: -6.376702308654785
    7. ' while' → logprob: -7.251702308654785
    8. ')' → logprob: -7.501702308654785
    9. ',' → logprob: -7.876702308654785
    10. '
' → logprob: -8.626702308654785

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.235958069562912
    2. ' while' → logprob: -2.1109580993652344
    3. 'while' → logprob: -2.8609580993652344
    4. '
' → logprob: -4.110958099365234
    5. ':' → logprob: -4.985958099365234
    6. '    
' → logprob: -5.360958099365234
    7. '  
' → logprob: -6.735958099365234
    8. ' 
' → logprob: -6.985958099365234
    9. ':
' → logprob: -7.485958099365234
    10. '   
' → logprob: -8.110958099365234

Token 222: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.22873492538928986
    2. ' while' → logprob: -1.6037349700927734
    3. '   ' → logprob: -5.978734970092773
    4. '
' → logprob: -7.853734970092773
    5. ' 
' → logprob: -8.228734970092773
    6. '    
' → logprob: -9.603734970092773
    7. 'While' → logprob: -10.728734970092773
    8. '	while' → logprob: -10.853734970092773
    9. '  
' → logprob: -12.603734970092773
    10. '    ' → logprob: -12.853734970092773

Token 223: ' Ex' (ID: 1771)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.634436309337616
    2. ' while' → logprob: -0.759436309337616
    3. '   ' → logprob: -6.384436130523682
    4. ' 
' → logprob: -9.63443660736084
    5. '
' → logprob: -10.38443660736084
    6. '    
' → logprob: -11.25943660736084
    7. '	while' → logprob: -11.50943660736084
    8. '6' → logprob: -11.75943660736084
    9. 'While' → logprob: -11.75943660736084
    10. '    ' → logprob: -12.25943660736084

Token 224: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7361826300621033
    2. 'pl' → logprob: -2.236182689666748
    3. 'cept' → logprob: -2.236182689666748
    4. 'ec' → logprob: -2.861182689666748
    5. 'ecute' → logprob: -3.361182689666748
    6. 'while' → logprob: -3.486182689666748
    7. 'p' → logprob: -3.486182689666748
    8. 'c' → logprob: -3.611182689666748
    9. 'plore' → logprob: -3.986182689666748
    10. 'plique' → logprob: -4.736182689666748

Token 225: ' ' (ID: 220)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.901220977306366
    2. '    ' → logprob: -1.2762210369110107
    3. '   ' → logprob: -1.7762210369110107
    4. 'while' → logprob: -3.1512210369110107
    5. ' n' → logprob: -3.2762210369110107
    6. ' 
' → logprob: -4.151220798492432
    7. 'n' → logprob: -4.401220798492432
    8. '6' → logprob: -4.526220798492432
    9. '
' → logprob: -5.026220798492432
    10. ' ' → logprob: -5.026220798492432

Token 226: '6' (ID: 21)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.4187000095844269
    2. 'n' → logprob: -1.7936999797821045
    3. ' while' → logprob: -2.0436999797821045
    4. ' n' → logprob: -3.9186999797821045
    5. '6' → logprob: -4.293700218200684
    6. '   ' → logprob: -4.418700218200684
    7. ' ' → logprob: -7.793700218200684
    8. 'While' → logprob: -9.793700218200684
    9. '  ' → logprob: -10.543700218200684
    10. '
' → logprob: -11.293700218200684

Token 227: ',' (ID: 11)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2212105244398117
    2. ' **' → logprob: -2.096210479736328
    3. ' <=' → logprob: -2.721210479736328
    4. '<=' → logprob: -4.971210479736328
    5. '*' → logprob: -6.971210479736328
    6. ',' → logprob: -7.471210479736328
    7. ' *' → logprob: -7.971210479736328
    8. ' ' → logprob: -8.471210479736328
    9. '
' → logprob: -9.221210479736328
    10. ')' → logprob: -9.471210479736328

Token 228: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2532777786254883
    2. '36' → logprob: -1.5032777786254883
    3. '  ' → logprob: -7.753277778625488
    4. '6' → logprob: -7.753277778625488
    5. 'while' → logprob: -8.628277778625488
    6. '   ' → logprob: -9.003277778625488
    7. ' while' → logprob: -9.878277778625488
    8. '    ' → logprob: -10.628277778625488
    9. '37' → logprob: -11.128277778625488
    10. ' ,' → logprob: -11.253277778625488

Token 229: '36' (ID: 2636)
  Prédit: '36'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '36' → logprob: -0.008640335872769356
    2. ' ' → logprob: -4.758640289306641
    3. '6' → logprob: -10.75864028930664
    4. '   ' → logprob: -13.50864028930664
    5. 'while' → logprob: -13.75864028930664
    6. '  ' → logprob: -14.00864028930664
    7. 'n' → logprob: -15.13364028930664
    8. '1' → logprob: -15.75864028930664
    9. '```' → logprob: -16.00864028930664
    10. '"""' → logprob: -16.38364028930664

Token 230: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7107270359992981
    2. 'while' → logprob: -0.9607270359992981
    3. ' while' → logprob: -2.3357269763946533
    4. ',' → logprob: -3.8357269763946533
    5. ')' → logprob: -5.585727214813232
    6. ' ' → logprob: -6.960727214813232
    7. '6' → logprob: -7.335727214813232
    8. '  ' → logprob: -7.960727214813232
    9. '	while' → logprob: -7.960727214813232
    10. ' ,' → logprob: -8.210726737976074

Token 231: ' ' (ID: 220)
  Prédit: '216'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '216' → logprob: -0.2530522644519806
    2. ' ' → logprob: -1.5030522346496582
    3. '   ' → logprob: -7.128052234649658
    4. '  ' → logprob: -9.253052711486816
    5. '217' → logprob: -9.753052711486816
    6. '```' → logprob: -9.878052711486816
    7. '...' → logprob: -10.753052711486816
    8. '    
' → logprob: -11.003052711486816
    9. '    ' → logprob: -11.128052711486816
    10. '
' → logprob: -11.253052711486816

Token 232: '216' (ID: 22705)
  Prédit: '216'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '216' → logprob: -0.0004428243264555931
    2. ' ' → logprob: -7.875442981719971
    3. '   ' → logprob: -10.125442504882812
    4. '```' → logprob: -12.000442504882812
    5. '  ' → logprob: -12.625442504882812
    6. '217' → logprob: -12.625442504882812
    7. '    
' → logprob: -13.250442504882812
    8. '
' → logprob: -13.250442504882812
    9. '...' → logprob: -13.500442504882812
    10. '2' → logprob: -13.875442504882812

Token 233: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03536628931760788
    2. 'while' → logprob: -3.6603662967681885
    3. ' while' → logprob: -4.785366058349609
    4. '	while' → logprob: -8.16036605834961
    5. '    
' → logprob: -8.41036605834961
    6. ',' → logprob: -9.91036605834961
    7. '
' → logprob: -10.03536605834961
    8. '    ' → logprob: -11.28536605834961
    9. '  ' → logprob: -11.41036605834961
    10. '6' → logprob: -11.41036605834961

Token 234: ' etc' (ID: 5178)
  Prédit: '129'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '129' → logprob: -0.12397114932537079
    2. ' ' → logprob: -2.4989712238311768
    3. '...' → logprob: -3.9989712238311768
    4. '   ' → logprob: -4.373970985412598
    5. '  ' → logprob: -6.873970985412598
    6. ' ...' → logprob: -6.998970985412598
    7. '1' → logprob: -7.623970985412598
    8. '```' → logprob: -7.998970985412598
    9. '    ' → logprob: -8.248970985412598
    10. '...
' → logprob: -8.748970985412598

Token 235: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21077775955200195
    2. 'while' → logprob: -2.460777759552002
    3. ' while' → logprob: -3.085777759552002
    4. '
' → logprob: -3.085777759552002
    5. '    
' → logprob: -5.460777759552002
    6. ':' → logprob: -5.585777759552002
    7. '  
' → logprob: -6.460777759552002
    8. ',' → logprob: -6.960777759552002
    9. '   
' → logprob: -7.585777759552002
    10. '	while' → logprob: -7.835777759552002

Token 236: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.37569981813430786
    2. ' while' → logprob: -1.750699758529663
    3. '   ' → logprob: -2.000699758529663
    4. '
' → logprob: -5.500699996948242
    5. '    
' → logprob: -9.375699996948242
    6. '	while' → logprob: -9.750699996948242
    7. ' 
' → logprob: -10.250699996948242
    8. 'While' → logprob: -11.875699996948242
    9. ' ' → logprob: -12.125699996948242
    10. '  
' → logprob: -12.375699996948242

Token 237: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.18956786394119263
    2. ' while' → logprob: -2.064567804336548
    3. '   ' → logprob: -3.189567804336548
    4. '
' → logprob: -5.439568042755127
    5. '    
' → logprob: -8.814567565917969
    6. ' 
' → logprob: -9.689567565917969
    7. '	while' → logprob: -10.189567565917969
    8. 'While' → logprob: -11.439567565917969
    9. '6' → logprob: -12.564567565917969
    10. '   
' → logprob: -12.564567565917969

Token 238: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.029754191637039185
    2. 'n' → logprob: -3.529754161834717
    3. ' ' → logprob: -13.404754638671875
    4. ' ' → logprob: -13.779754638671875
    5. '(n' → logprob: -14.779754638671875
    6. '	n' → logprob: -14.904754638671875
    7. '   ' → logprob: -14.904754638671875
    8. ' (' → logprob: -16.779754638671875
    9. '  ' → logprob: -17.279754638671875
    10. '_n' → logprob: -17.404754638671875

Token 239: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00018280261429026723
    2. '_' → logprob: -9.37518310546875
    3. '>=' → logprob: -9.62518310546875
    4. ' >=' → logprob: -10.62518310546875
    5. ' ' → logprob: -13.12518310546875
    6. '   ' → logprob: -13.75018310546875
    7. '-' → logprob: -14.25018310546875
    8. '>' → logprob: -14.31268310546875
    9. '%' → logprob: -15.06268310546875
    10. '≥' → logprob: -15.12518310546875

Token 240: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.03804183006286621
    2. '<=' → logprob: -3.288041830062866
    3. '*' → logprob: -15.538042068481445
    4. ' ' → logprob: -16.288042068481445
    5. ' ' → logprob: -16.913042068481445
    6. '<' → logprob: -17.788042068481445
    7. ')<=' → logprob: -17.788042068481445
    8. ' <<=' → logprob: -17.913042068481445
    9. ' *' → logprob: -18.413042068481445
    10. ' <' → logprob: -18.538042068481445

Token 241: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931495666503906
    2. ' n' → logprob: -0.6931495666503906
    3. '	n' → logprob: -13.44314956665039
    4. ' ' → logprob: -15.44314956665039
    5. ' ' → logprob: -15.56814956665039
    6. '_n' → logprob: -15.94314956665039
    7. '   ' → logprob: -16.06814956665039
    8. '(n' → logprob: -16.44314956665039
    9. ')n' → logprob: -17.06814956665039
    10. '[n' → logprob: -17.19314956665039

Token 242: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17985986173152924
    2. ':
' → logprob: -1.8048598766326904
    3. '   ' → logprob: -9.42986011505127
    4. ' :
' → logprob: -11.55486011505127
    5. ':
' → logprob: -11.67986011505127
    6. ' :' → logprob: -12.17986011505127
    7. ':n' → logprob: -12.42986011505127
    8. '):
' → logprob: -12.67986011505127
    9. ':

' → logprob: -12.80486011505127
    10. ',' → logprob: -15.05486011505127

Token 243: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04325973615050316
    2. '   ' → logprob: -3.668259620666504
    3. '
' → logprob: -5.043259620666504
    4. 'nums' → logprob: -6.043259620666504
    5. '    
' → logprob: -6.543259620666504
    6. '):
' → logprob: -6.668259620666504
    7. '<|end|>' → logprob: -7.168259620666504
    8. ')' → logprob: -7.168259620666504
    9. '  
' → logprob: -7.293259620666504
    10. '        
' → logprob: -7.918259620666504

Token 244: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' (adapté à ' nums') → logprob: -0.10343781858682632
    2. ' nums' → logprob: -2.603437900543213
    3. '   ' → logprob: -3.728437900543213
    4. '       ' → logprob: -8.853437423706055
    5. '
' → logprob: -10.353437423706055
    6. '(nums' → logprob: -11.478437423706055
    7. ' ' → logprob: -11.603437423706055
    8. '  ' → logprob: -11.978437423706055
    9. '    
' → logprob: -12.103437423706055
    10. '_nums' → logprob: -13.103437423706055

Token 245: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002477677771821618
    2. '.' → logprob: -6.002477645874023
    3. '.add' → logprob: -14.627477645874023
    4. '.push' → logprob: -14.752477645874023
    5. 'append' → logprob: -14.877477645874023
    6. '.Append' → logprob: -15.502477645874023
    7. '.app' → logprob: -15.752477645874023
    8. '.extend' → logprob: -16.127477645874023
    9. ' .' → logprob: -16.377477645874023
    10. 's' → logprob: -16.377477645874023

Token 246: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.79811754100956e-05
    2. '(' → logprob: -10.250038146972656
    3. 'n' → logprob: -12.875038146972656
    4. ' (' → logprob: -17.375038146972656
    5. '((' → logprob: -18.625038146972656
    6. '(
' → logprob: -18.625038146972656
    7. ' n' → logprob: -20.000038146972656
    8. '()' → logprob: -20.500038146972656
    9. '	n' → logprob: -20.500038146972656
    10. '(int' → logprob: -21.250038146972656

Token 247: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -14.625000953674316
    3. '٦' → logprob: -17.0
    4. '۶' → logprob: -17.25
    5. '' → logprob: -17.375
    6. '[' → logprob: -18.0
    7. ')' → logprob: -18.125
    8. ' ' → logprob: -18.25
    9. '६' → logprob: -18.5
    10. '```' → logprob: -18.6875

Token 248: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6934099197387695
    2. ')
' → logprob: -0.6934099197387695
    3. ')
' → logprob: -9.19340991973877
    4. ')n' → logprob: -9.31840991973877
    5. ' )
' → logprob: -10.19340991973877
    6. '       ' → logprob: -11.19340991973877
    7. ' )' → logprob: -11.44340991973877
    8. '   ' → logprob: -12.44340991973877
    9. ')

' → logprob: -12.69340991973877
    10. ')`
' → logprob: -14.19340991973877

Token 249: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23090632259845734
    2. '\n' → logprob: -2.7309062480926514
    3. 'n' → logprob: -2.9809062480926514
    4. '6' → logprob: -3.1059062480926514
    5. '    
' → logprob: -3.7309062480926514
    6. '   ' → logprob: -4.4809064865112305
    7. ' 
' → logprob: -5.6059064865112305
    8. '  
' → logprob: -6.7309064865112305
    9. '       ' → logprob: -6.8559064865112305
    10. '   
' → logprob: -6.9809064865112305

Token 250: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49898865818977356
    2. 'n' → logprob: -0.9989886283874512
    3. '   ' → logprob: -4.748988628387451
    4. '    
' → logprob: -4.998988628387451
    5. '6' → logprob: -5.123988628387451
    6. ' n' → logprob: -6.998988628387451
    7. ' 
' → logprob: -7.373988628387451
    8. '\n' → logprob: -7.623988628387451
    9. '
' → logprob: -8.24898910522461
    10. '*n' → logprob: -8.24898910522461

Token 251: ' Aj' (ID: 28294)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08063463866710663
    2. ' n' → logprob: -2.580634593963623
    3. '   ' → logprob: -6.580634593963623
    4. '6' → logprob: -9.080635070800781
    5. '       ' → logprob: -9.205635070800781
    6. '
' → logprob: -9.705635070800781
    7. '    ' → logprob: -10.830635070800781
    8. '    
' → logprob: -11.580635070800781
    9. '	n' → logprob: -11.580635070800781
    10. ' ' → logprob: -11.705635070800781

Token 252: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.00947131309658289
    2. 'outer' → logprob: -4.759471416473389
    3. 'outez' → logprob: -7.259471416473389
    4. 'out' → logprob: -9.00947093963623
    5. 'outes' → logprob: -10.50947093963623
    6. 'outs' → logprob: -13.38447093963623
    7. 'ou' → logprob: -14.75947093963623
    8. '#' → logprob: -15.38447093963623
    9. 'o' → logprob: -15.50947093963623
    10. '   ' → logprob: -16.009471893310547

Token 253: ' la' (ID: 557)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.011028259061276913
    2. '(' → logprob: -4.886028289794922
    3. 'n' → logprob: -5.761028289794922
    4. '(
' → logprob: -8.511028289794922
    5. ' (' → logprob: -10.511028289794922
    6. ' n' → logprob: -10.636028289794922
    7. '6' → logprob: -11.386028289794922
    8. '(nums' → logprob: -14.261028289794922
    9. '()' → logprob: -14.511028289794922
    10. ' ' → logprob: -14.511028289794922

Token 254: ' puissance' (ID: 63494)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.5408517122268677
    2. 'n' → logprob: -0.9158517122268677
    3. ' n' → logprob: -4.665851593017578
    4. ' ' → logprob: -7.165851593017578
    5. 'power' → logprob: -7.290851593017578
    6. 'pow' → logprob: -7.290851593017578
    7. 'nums' → logprob: -7.540851593017578
    8. '**' → logprob: -7.665851593017578
    9. '
' → logprob: -7.728351593017578
    10. ')' → logprob: -7.790851593017578

Token 255: ' cour' (ID: 2871)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.48314255475997925
    2. '   ' → logprob: -1.733142614364624
    3. ' de' → logprob: -2.608142614364624
    4. '    ' → logprob: -3.733142614364624
    5. 'de' → logprob: -4.108142375946045
    6. '**' → logprob: -4.233142375946045
    7. '(n' → logprob: -4.358142375946045
    8. 'n' → logprob: -4.733142375946045
    9. ' ' → logprob: -4.733142375946045
    10. '_' → logprob: -4.983142375946045

Token 256: 'ante' (ID: 2116)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.6057174205780029
    2. 'ante' → logprob: -0.8557174205780029
    3. 'u' → logprob: -4.230717658996582
    4. 'ente' → logprob: -4.355717658996582
    5. '   ' → logprob: -8.605717658996582
    6. '=' → logprob: -8.730717658996582
    7. '```' → logprob: -8.730717658996582
    8. '#' → logprob: -8.855717658996582
    9. 'n' → logprob: -8.980717658996582
    10. '**' → logprob: -9.105717658996582

Token 257: ' de' (ID: 334)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.49610409140586853
    2. '*' → logprob: -1.996104121208191
    3. '   ' → logprob: -2.4961040019989014
    4. 'n' → logprob: -2.6211040019989014
    5. '    
' → logprob: -3.8711040019989014
    6. ' 
' → logprob: -4.2461042404174805
    7. ' ' → logprob: -4.7461042404174805
    8. '**' → logprob: -4.9961042404174805
    9. '     
' → logprob: -4.9961042404174805
    10. '*
' → logprob: -5.1211042404174805

Token 258: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.01733577996492386
    2. 'n' → logprob: -4.267335891723633
    3. ' ' → logprob: -5.892335891723633
    4. ' n' → logprob: -7.892335891723633
    5. '   ' → logprob: -11.892335891723633
    6. 'six' → logprob: -11.892335891723633
    7. ' six' → logprob: -12.017335891723633
    8. 'nums' → logprob: -13.329835891723633
    9. '`' → logprob: -13.329835891723633
    10. '```' → logprob: -13.392335891723633

Token 259: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.00014537633978761733
    2. ' ' → logprob: -9.000144958496094
    3. 'n' → logprob: -11.000144958496094
    4. 'six' → logprob: -12.750144958496094
    5. ' six' → logprob: -14.625144958496094
    6. '```' → logprob: -15.000144958496094
    7. ' n' → logprob: -15.250144958496094
    8. '

' → logprob: -15.500144958496094
    9. '   ' → logprob: -15.562644958496094
    10. '`' → logprob: -16.187644958496094

Token 260: ' à' (ID: 1221)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7026678323745728
    2. '   ' → logprob: -1.4526678323745728
    3. '6' → logprob: -1.8276678323745728
    4. 'n' → logprob: -2.952667713165283
    5. '    
' → logprob: -3.827667713165283
    6. '\n' → logprob: -4.452667713165283
    7. '*' → logprob: -4.702667713165283
    8. '       ' → logprob: -5.452667713165283
    9. '
' → logprob: -6.202667713165283
    10. ' 
' → logprob: -6.577667713165283

Token 261: ' la' (ID: 557)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.4746597707271576
    2. ' nums' → logprob: -0.97465980052948
    3. ' la' → logprob: -7.5996599197387695
    4. 'la' → logprob: -10.72465991973877
    5. '(nums' → logprob: -11.22465991973877
    6. ' ' → logprob: -11.22465991973877
    7. ' the' → logprob: -11.59965991973877
    8. '_nums' → logprob: -12.22465991973877
    9. 'num' → logprob: -12.47465991973877
    10. '   ' → logprob: -12.84965991973877

Token 262: ' liste' (ID: 31719)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.0075277164578437805
    2. ' nums' → logprob: -5.132527828216553
    3. 'list' → logprob: -6.882527828216553
    4. 'liste' → logprob: -8.007527351379395
    5. ' list' → logprob: -9.257527351379395
    6. 'num' → logprob: -10.882527351379395
    7. ' liste' → logprob: -11.507527351379395
    8. '[]' → logprob: -11.507527351379395
    9. ' ' → logprob: -11.632527351379395
    10. 'lista' → logprob: -11.632527351379395

Token 263: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011231731623411179
    2. 'n' → logprob: -5.261231899261475
    3. '   ' → logprob: -5.511231899261475
    4. '6' → logprob: -7.136231899261475
    5. ' n' → logprob: -8.011231422424316
    6. '        
' → logprob: -8.136231422424316
    7. '
' → logprob: -8.511231422424316
    8. '    
' → logprob: -9.886231422424316
    9. '    ' → logprob: -10.261231422424316
    10. '      ' → logprob: -10.636231422424316

Token 264: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.24520429968833923
    2. '	n' → logprob: -2.620204210281372
    3. '   ' → logprob: -2.745204210281372
    4. '6' → logprob: -2.745204210281372
    5. ' n' → logprob: -4.745204448699951
    6. '    
' → logprob: -5.370204448699951
    7. ' 
' → logprob: -7.120204448699951
    8. '
' → logprob: -7.870204448699951
    9. '     
' → logprob: -8.245203971862793
    10. '       ' → logprob: -8.245203971862793

Token 265: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.0017137357499450445
    2. ' n' → logprob: -6.501713752746582
    3. '   ' → logprob: -8.751713752746582
    4. '	n' → logprob: -9.876713752746582
    5. '6' → logprob: -13.376713752746582
    6. '    ' → logprob: -15.501713752746582
    7. '    
' → logprob: -16.751712799072266
    8. '_n' → logprob: -17.251712799072266
    9. ' ' → logprob: -17.376712799072266
    10. '  ' → logprob: -17.376712799072266

Token 266: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: 0.0
    2. ' *=' → logprob: -17.375
    3. ' ' → logprob: -17.625
    4. '_' → logprob: -18.25
    5. '۶' → logprob: -18.25
    6. '   ' → logprob: -18.75
    7. '६' → logprob: -19.0
    8. '```' → logprob: -19.125
    9. '=' → logprob: -19.25
    10. ' =' → logprob: -19.3125

Token 267: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.16032131016254425
    2. ' *=' → logprob: -1.9103213548660278
    3. '*' → logprob: -9.910321235656738
    4. '=' → logprob: -10.035321235656738
    5. ' =' → logprob: -12.785321235656738
    6. ' ' → logprob: -14.785321235656738
    7. ' ' → logprob: -15.910321235656738
    8. ' *' → logprob: -15.910321235656738
    9. '	' → logprob: -16.410322189331055
    10. '**' → logprob: -16.910322189331055

Token 268: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12694784998893738
    2. ' n' → logprob: -2.1269478797912598
    3. '6' → logprob: -10.876947402954102
    4. '	n' → logprob: -14.376947402954102
    5. ' ' → logprob: -16.2519474029541
    6. '[n' → logprob: -16.7519474029541
    7. '(n' → logprob: -16.7519474029541
    8. ')n' → logprob: -17.1269474029541
    9. '   ' → logprob: -17.3769474029541
    10. '$n' → logprob: -17.8769474029541

Token 269: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -2.7491250875755213e-05
    2. '*' → logprob: -11.125027656555176
    3. ' *' → logprob: -11.875027656555176
    4. ' ' → logprob: -12.875027656555176
    5. 'n' → logprob: -13.125027656555176
    6. '_' → logprob: -14.750027656555176
    7. '*n' → logprob: -15.125027656555176
    8. ' n' → logprob: -15.500027656555176
    9. '   ' → logprob: -15.500027656555176
    10. '  ' → logprob: -17.25002670288086

Token 270: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.12693557143211365
    2. ' *' → logprob: -2.1269354820251465
    3. '6' → logprob: -12.626935958862305
    4. '*n' → logprob: -13.126935958862305
    5. ' ' → logprob: -13.251935958862305
    6. ' ' → logprob: -15.376935958862305
    7. '**' → logprob: -15.626935958862305
    8. '*object' → logprob: -16.626935958862305
    9. '*p' → logprob: -18.376935958862305
    10. '```' → logprob: -18.751935958862305

Token 271: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -20.2500057220459
    4. '```' → logprob: -20.2500057220459
    5. '٦' → logprob: -20.3750057220459
    6. '६' → logprob: -20.5000057220459
    7. '۶' → logprob: -20.7500057220459
    8. '৬' → logprob: -20.8750057220459
    9. '' → logprob: -21.2500057220459
    10. '  ' → logprob: -21.5000057220459

Token 272: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '६' → logprob: -20.25
    4. '٦' → logprob: -20.625
    5. '৬' → logprob: -21.0
    6. '۶' → logprob: -21.0
    7. '```' → logprob: -22.25
    8. '   ' → logprob: -22.375
    9. '六' → logprob: -22.625
    10. '' → logprob: -22.625

Token 273: '     ' (ID: 530)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38462185859680176
    2. '   ' → logprob: -1.5096218585968018
    3. '6' → logprob: -3.3846218585968018
    4. '

' → logprob: -3.5096218585968018
    5. '    
' → logprob: -3.8846218585968018
    6. 'n' → logprob: -4.884621620178223
    7. ' 
' → logprob: -6.259621620178223
    8. '  
' → logprob: -6.759621620178223
    9. '
' → logprob: -7.134621620178223
    10. '\n' → logprob: -7.884621620178223

Token 274: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 275: ' Mult' (ID: 15431)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.12783382833003998
    2. 'n' → logprob: -4.002833843231201
    3. ' ' → logprob: -4.002833843231201
    4. '<|end|>' → logprob: -4.377833843231201
    5. 'Multip' → logprob: -4.502833843231201
    6. 'Multiply' → logprob: -4.752833843231201
    7. '#' → logprob: -4.877833843231201
    8. 'Continue' → logprob: -5.127833843231201
    9. ' n' → logprob: -5.252833843231201
    10. '...' → logprob: -5.752833843231201

Token 276: 'ipl' (ID: 7840)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6622214913368225
    2. '6' → logprob: -0.7872214913368225
    3. 'plique' → logprob: -4.787221431732178
    4. 'iplier' → logprob: -5.037221431732178
    5. '<|end|>' → logprob: -6.037221431732178
    6. 'ipl' → logprob: -6.162221431732178
    7. 'pl' → logprob: -6.662221431732178
    8. 'n' → logprob: -6.912221431732178
    9. 'plies' → logprob: -6.912221431732178
    10. '=n' → logprob: -7.287221431732178

Token 277: 'ie' (ID: 396)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -0.07988783717155457
    2. 'ie' → logprob: -3.079887866973877
    3. 'iquer' → logprob: -3.829887866973877
    4. 'e' → logprob: -5.829887866973877
    5. 'er' → logprob: -6.079887866973877
    6. 'y' → logprob: -6.204887866973877
    7. 'ic' → logprob: -7.954887866973877
    8. 'ique' → logprob: -8.079887390136719
    9. 'yer' → logprob: -8.204887390136719
    10. 'i' → logprob: -9.204887390136719

Token 278: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00354578229598701
    2. ' n' → logprob: -6.003545761108398
    3. '6' → logprob: -7.128545761108398
    4. '(n' → logprob: -9.003545761108398
    5. '   ' → logprob: -10.378545761108398
    6. '<|end|>' → logprob: -10.378545761108398
    7. 'par' → logprob: -10.878545761108398
    8. '	n' → logprob: -10.878545761108398
    9. ' ' → logprob: -11.378545761108398
    10. '    ' → logprob: -11.878545761108398

Token 279: ' valeur' (ID: 41664)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -0.008305693045258522
    2. 'n' → logprob: -4.883305549621582
    3. ' n' → logprob: -8.508305549621582
    4. ' ' → logprob: -8.633305549621582
    5. ' prochaine' → logprob: -10.133305549621582
    6. 'current' → logprob: -10.570805549621582
    7. ' current' → logprob: -10.820805549621582
    8. ' previous' → logprob: -10.945805549621582
    9. 'previous' → logprob: -10.945805549621582
    10. ' variable' → logprob: -11.195805549621582

Token 280: ' cour' (ID: 2871)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.7105177640914917
    2. 'n' → logprob: -1.8355177640914917
    3. ' actuelle' → logprob: -1.8355177640914917
    4. 'cour' → logprob: -1.9605177640914917
    5. ' par' → logprob: -4.335517883300781
    6. 'act' → logprob: -4.335517883300781
    7. 'current' → logprob: -4.335517883300781
    8. '   ' → logprob: -6.085517883300781
    9. '6' → logprob: -6.585517883300781
    10. ' n' → logprob: -7.085517883300781

Token 281: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.010425708256661892
    2. 'r' → logprob: -5.260425567626953
    3. 'ant' → logprob: -5.510425567626953
    4. '6' → logprob: -7.010425567626953
    5. 'n' → logprob: -9.635425567626953
    6. 'an' → logprob: -10.135425567626953
    7. '#' → logprob: -10.635425567626953
    8. '   ' → logprob: -11.385425567626953
    9. 'a' → logprob: -11.635425567626953
    10. 'nante' → logprob: -11.635425567626953

Token 282: ' de' (ID: 334)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.1842726469039917
    2. ' par' → logprob: -1.8092726469039917
    3. '6' → logprob: -6.559272766113281
    4. ' ' → logprob: -6.934272766113281
    5. '.' → logprob: -7.559272766113281
    6. '_par' → logprob: -7.809272766113281
    7. 'n' → logprob: -8.559272766113281
    8. '<|end|>' → logprob: -8.934272766113281
    9. '   ' → logprob: -9.184272766113281
    10. 'by' → logprob: -9.309272766113281

Token 283: ' n' (ID: 297)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0003200922510586679
    2. 'n' → logprob: -8.500320434570312
    3. ' ' → logprob: -9.125320434570312
    4. ' n' → logprob: -12.250320434570312
    5. 'six' → logprob: -14.375320434570312
    6. '```' → logprob: -14.500320434570312
    7. 'la' → logprob: -15.125320434570312
    8. 'l' → logprob: -15.250320434570312
    9. '   ' → logprob: -15.250320434570312
    10. ' six' → logprob: -15.750320434570312

Token 284: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -12.125008583068848
    3. '*' → logprob: -13.750008583068848
    4. '   ' → logprob: -14.875008583068848
    5. '.' → logprob: -15.250008583068848
    6. '  ' → logprob: -15.500008583068848
    7. ',' → logprob: -15.875008583068848
    8. '<|end|>' → logprob: -15.875008583068848
    9. '_' → logprob: -16.000009536743164
    10. '    ' → logprob: -16.125009536743164

Token 285: ' par' (ID: 686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.75002098083496
    4. '٦' → logprob: -19.12502098083496
    5. '' → logprob: -19.62502098083496
    6. '```' → logprob: -19.75002098083496
    7. ' six' → logprob: -20.00002098083496
    8. '  ' → logprob: -20.37502098083496
    9. '

' → logprob: -20.62502098083496
    10. '۶' → logprob: -20.62502098083496

Token 287: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '٦' → logprob: -20.0
    4. '```' → logprob: -20.0
    5. '   ' → logprob: -21.0
    6. '' → logprob: -21.25
    7. '۶' → logprob: -22.0
    8. '৬' → logprob: -22.125
    9. '`' → logprob: -22.25
    10. 'six' → logprob: -22.25

Token 288: ' pour' (ID: 1930)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29580748081207275
    2. '   ' → logprob: -1.6708074808120728
    3. '    
' → logprob: -3.795807361602783
    4. '

' → logprob: -3.920807361602783
    5. '6' → logprob: -4.295807361602783
    6. 'n' → logprob: -4.920807361602783
    7. '9' → logprob: -6.420807361602783
    8. ' 
' → logprob: -7.295807361602783
    9. '
' → logprob: -7.545807361602783
    10. '   
' → logprob: -7.920807361602783

Token 289: ' passer' (ID: 27727)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.2038779854774475
    2. 'ob' → logprob: -1.8288779258728027
    3. 'la' → logprob: -4.578877925872803
    4. ' passer' → logprob: -5.453877925872803
    5. 'calcul' → logprob: -5.703877925872803
    6. 'le' → logprob: -6.078877925872803
    7. ' obtenir' → logprob: -6.578877925872803
    8. 'contin' → logprob: -6.953877925872803
    9. 'avoir' → logprob: -7.453877925872803
    10. 'pro' → logprob: -8.828878402709961

Token 290: ' à' (ID: 1221)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.15739241242408752
    2. 'à' → logprob: -2.6573925018310547
    3. ' au' → logprob: -2.9073925018310547
    4. ' à' → logprob: -3.9073925018310547
    5. '6' → logprob: -8.532392501831055
    6. ' ' → logprob: -8.657392501831055
    7. '<|end|>' → logprob: -9.157392501831055
    8. 'a' → logprob: -9.407392501831055
    9. ''au' → logprob: -10.282392501831055
    10. '```' → logprob: -10.282392501831055

Token 291: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.10808990895748138
    2. ' la' → logprob: -2.3580899238586426
    3. '6' → logprob: -5.233089923858643
    4. 'le' → logprob: -6.233089923858643
    5. 'the' → logprob: -7.983089923858643
    6. ' ' → logprob: -8.608089447021484
    7. ' the' → logprob: -11.483089447021484
    8. ' le' → logprob: -11.858089447021484
    9. 'l' → logprob: -12.733089447021484
    10. 'une' → logprob: -13.483089447021484

Token 292: ' puissance' (ID: 63494)
  Prédit: 'pu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pu' → logprob: -0.008983612060546875
    2. 'pro' → logprob: -5.883983612060547
    3. '6' → logprob: -6.758983612060547
    4. ' puissance' → logprob: -6.758983612060547
    5. 'power' → logprob: -6.883983612060547
    6. ' suivante' → logprob: -7.133983612060547
    7. '```' → logprob: -7.508983612060547
    8. 'su' → logprob: -7.883983612060547
    9. 'fois' → logprob: -8.383983612060547
    10. 'niveau' → logprob: -8.508983612060547

Token 293: ' suivante' (ID: 107439)
  Prédit: ' suivante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.08798898756504059
    2. '6' → logprob: -2.712989091873169
    3. ' ' → logprob: -4.46298885345459
    4. '   ' → logprob: -6.21298885345459
    5. '*' → logprob: -6.58798885345459
    6. ' suivantes' → logprob: -7.46298885345459
    7. ' suivant' → logprob: -7.96298885345459
    8. ' siguiente' → logprob: -8.08798885345459
    9. 'su' → logprob: -8.58798885345459
    10. ' supérieure' → logprob: -8.71298885345459

Token 294: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09135575592517853
    2. 'n' → logprob: -3.216355800628662
    3. '   ' → logprob: -3.466355800628662
    4. '9' → logprob: -5.091355800628662
    5. '

' → logprob: -5.216355800628662
    6. '    
' → logprob: -5.966355800628662
    7. '
' → logprob: -7.216355800628662
    8. '6' → logprob: -8.091355323791504
    9. '  
' → logprob: -8.841355323791504
    10. ' n' → logprob: -9.091355323791504

Token 295: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17004725337028503
    2. '   ' → logprob: -1.9200472831726074
    3. '
' → logprob: -5.170047283172607
    4. ' n' → logprob: -6.170047283172607
    5. '#' → logprob: -6.920047283172607
    6. '9' → logprob: -7.670047283172607
    7. '    
' → logprob: -8.17004680633545
    8. ' ' → logprob: -9.29504680633545
    9. '  ' → logprob: -9.92004680633545
    10. '6' → logprob: -10.67004680633545

Token 296: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006503389682620764
    2. '9' → logprob: -5.881503582000732
    3. ' n' → logprob: -6.506503582000732
    4. '
' → logprob: -6.881503582000732
    5. '#' (adapté à ' #') → logprob: -7.256503582000732
    6. '   ' → logprob: -8.256503105163574
    7. ' ' → logprob: -10.131503105163574
    8. '6' → logprob: -10.131503105163574
    9. '

' → logprob: -10.631503105163574
    10. '    
' → logprob: -10.756503105163574

Token 297: ' Initialise' (ID: 179601)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006540587637573481
    2. '#' → logprob: -7.500654220581055
    3. ' n' → logprob: -9.375654220581055
    4. '9' → logprob: -11.875654220581055
    5. '   ' → logprob: -12.250654220581055
    6. '
' → logprob: -13.875654220581055
    7. '
' → logprob: -14.000654220581055
    8. ' #' → logprob: -14.250654220581055
    9. 'i' → logprob: -14.625654220581055
    10. ' ' → logprob: -14.750654220581055

Token 298: ' une' (ID: 2463)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02351752668619156
    2. ' n' → logprob: -3.773517608642578
    3. 'a' → logprob: -9.398517608642578
    4. '9' → logprob: -9.523517608642578
    5. '#' → logprob: -9.648517608642578
    6. ' ' → logprob: -11.148517608642578
    7. ' a' → logprob: -11.273517608642578
    8. '   ' → logprob: -11.648517608642578
    9. '_n' → logprob: -13.023517608642578
    10. '
' → logprob: -13.461017608642578

Token 299: ' variable' (ID: 11076)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.057824503630399704
    2. 'variable' → logprob: -3.0578246116638184
    3. ' n' → logprob: -5.307824611663818
    4. ' variable' → logprob: -5.807824611663818
    5. 'var' → logprob: -7.057824611663818
    6. '9' → logprob: -8.80782413482666
    7. '#' → logprob: -10.30782413482666
    8. 'variables' → logprob: -10.43282413482666
    9. '变量' → logprob: -10.80782413482666
    10. 'v' → logprob: -10.93282413482666

Token 300: ' pour' (ID: 1930)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0147010562941432
    2. ' n' → logprob: -4.514700889587402
    3. '9' → logprob: -5.639700889587402
    4. '#' → logprob: -10.014700889587402
    5. 'for' → logprob: -11.139700889587402
    6. ' for' → logprob: -11.764700889587402
    7. '6' → logprob: -11.764700889587402
    8. 'import' → logprob: -12.764700889587402
    9. '   ' → logprob: -13.014700889587402
    10. '=' → logprob: -13.264700889587402

Token 301: ' parcour' (ID: 130642)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0021666751708835363
    2. '9' → logprob: -6.752166748046875
    3. ' n' → logprob: -7.377166748046875
    4. '#' → logprob: -8.127166748046875
    5. '7' → logprob: -11.127166748046875
    6. ' ' → logprob: -11.627166748046875
    7. 'pow' → logprob: -12.002166748046875
    8. '```' → logprob: -12.252166748046875
    9. '6' → logprob: -12.502166748046875
    10. '   ' → logprob: -12.502166748046875

Token 302: 'ir' (ID: 380)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.4856233596801758
    2. 'ager' → logprob: -1.4856233596801758
    3. 'ir' → logprob: -2.610623359680176
    4. 'iner' → logprob: -3.235623359680176
    5. 'ur' → logprob: -4.610623359680176
    6. 'iter' → logprob: -4.735623359680176
    7. 'age' → logprob: -5.985623359680176
    8. 'enter' → logprob: -6.110623359680176
    9. 'iser' → logprob: -6.235623359680176
    10. 'uer' → logprob: -6.235623359680176

Token 303: ' les' (ID: 1341)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0014607120538130403
    2. ' n' → logprob: -7.126460552215576
    3. '9' → logprob: -7.376460552215576
    4. 'a' → logprob: -12.001461029052734
    5. '   ' → logprob: -12.126461029052734
    6. '```' → logprob: -12.626461029052734
    7. '6' → logprob: -13.001461029052734
    8. ' ' → logprob: -13.126461029052734
    9. '#' → logprob: -13.251461029052734
    10. 'l' → logprob: -13.751461029052734

Token 304: ' puiss' (ID: 102546)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0006618033512495458
    2. '9' → logprob: -8.125661849975586
    3. ' n' → logprob: -8.125661849975586
    4. '#' → logprob: -10.750661849975586
    5. 'pu' → logprob: -11.375661849975586
    6. ' ' → logprob: -12.250661849975586
    7. 'pow' → logprob: -12.375661849975586
    8. '   ' → logprob: -12.750661849975586
    9. 'power' → logprob: -12.750661849975586
    10. 'powers' → logprob: -13.250661849975586

Token 305: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.0007692479994148016
    2. '6' → logprob: -7.250769138336182
    3. 'p' → logprob: -11.37576961517334
    4. 'ices' → logprob: -11.75076961517334
    5. '#' → logprob: -12.00076961517334
    6. 'a' → logprob: -12.12576961517334
    7. 'powers' → logprob: -12.25076961517334
    8. 'ences' → logprob: -12.75076961517334
    9. '9' → logprob: -12.87576961517334
    10. '_' → logprob: -13.25076961517334

Token 306: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05417020246386528
    2. '9' → logprob: -3.3041701316833496
    3. ' n' → logprob: -4.55417013168335
    4. 'de' → logprob: -6.05417013168335
    5. ' de' → logprob: -6.67917013168335
    6. '   ' → logprob: -6.92917013168335
    7. ' ' → logprob: -8.179170608520508
    8. '#' → logprob: -8.429170608520508
    9. 'of' → logprob: -9.054170608520508
    10. ' of' → logprob: -9.679170608520508

Token 307: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.009770373813807964
    2. ' ' → logprob: -4.634770393371582
    3. '6' → logprob: -12.134770393371582
    4. '   ' → logprob: -12.759770393371582
    5. 'n' → logprob: -13.009770393371582
    6. ' n' → logprob: -13.634770393371582
    7. ' neuf' → logprob: -14.884770393371582
    8. ' nine' → logprob: -14.947270393371582
    9. '  ' → logprob: -15.134770393371582
    10. 'def' → logprob: -15.197270393371582

Token 308: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.023293538717553e-05
    2. ' ' → logprob: -10.875030517578125
    3. 'n' → logprob: -11.625030517578125
    4. '6' → logprob: -14.000030517578125
    5. 'nine' → logprob: -14.875030517578125
    6. '   ' → logprob: -15.500030517578125
    7. 'def' → logprob: -15.750030517578125
    8. 'num' → logprob: -16.250030517578125
    9. ' n' → logprob: -16.250030517578125
    10. ' neuf' → logprob: -16.437530517578125

Token 309: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5368843078613281
    2. 'n' → logprob: -1.4118843078613281
    3. ' n' → logprob: -2.536884307861328
    4. '=' → logprob: -2.786884307861328
    5. '   ' → logprob: -3.536884307861328
    6. '=n' → logprob: -6.411884307861328
    7. '9' → logprob: -8.411884307861328
    8. ' ' → logprob: -10.536884307861328
    9. '_n' → logprob: -11.536884307861328
    10. '#' → logprob: -12.786884307861328

Token 310: ' commence' (ID: 44755)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007362048607319593
    2. ' n' → logprob: -5.132361888885498
    3. '9' → logprob: -6.882361888885498
    4. '   ' → logprob: -7.882361888885498
    5. ' ' → logprob: -11.507362365722656
    6. '  ' → logprob: -12.132362365722656
    7. '#' → logprob: -12.882362365722656
    8. '	n' → logprob: -13.382362365722656
    9. '=' → logprob: -13.507362365722656
    10. 'import' → logprob: -13.757362365722656

Token 311: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.047552466392517
    2. ' à' → logprob: -1.172552466392517
    3. '   ' → logprob: -1.297552466392517
    4. '9' → logprob: -3.0475525856018066
    5. '=' → logprob: -4.422552585601807
    6. 'a' → logprob: -5.297552585601807
    7. 'n' → logprob: -7.547552585601807
    8. ' a' → logprob: -7.922552585601807
    9. ' =' → logprob: -8.172552108764648
    10. ' ' → logprob: -8.422552108764648

Token 312: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0059477598406374454
    2. ' ' → logprob: -5.380947589874268
    3. '6' → logprob: -6.630947589874268
    4. '   ' → logprob: -12.005948066711426
    5. '  ' → logprob: -15.068448066711426
    6. '```' → logprob: -15.193448066711426
    7. '`' → logprob: -16.31844711303711
    8. '    ' → logprob: -16.38094711303711
    9. ' ' → logprob: -16.38094711303711
    10. '=' → logprob: -16.44344711303711

Token 313: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.500004768371582
    3. '6' → logprob: -13.750004768371582
    4. '   ' → logprob: -17.5000057220459
    5. '۹' → logprob: -18.3750057220459
    6. 'nine' → logprob: -18.5000057220459
    7. '```' → logprob: -18.6250057220459
    8. '९' → logprob: -19.6250057220459
    9. '=' → logprob: -19.6875057220459
    10. '９' → logprob: -19.6875057220459

Token 314: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16714294254779816
    2. '   ' → logprob: -1.9171429872512817
    3. '
' → logprob: -5.542142868041992
    4. ' n' → logprob: -5.917142868041992
    5. '9' → logprob: -8.917142868041992
    6. '    
' → logprob: -9.667142868041992
    7. '	n' → logprob: -10.167142868041992
    8. ' ' → logprob: -11.167142868041992
    9. '\n' → logprob: -11.667142868041992
    10. '  
' → logprob: -12.167142868041992

Token 315: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2949698269367218
    2. ' n' → logprob: -1.7949697971343994
    3. '   ' → logprob: -2.4199697971343994
    4. '	n' → logprob: -8.79496955871582
    5. '9' → logprob: -9.04496955871582
    6. ' ' → logprob: -9.66996955871582
    7. '
' → logprob: -10.29496955871582
    8. '    
' → logprob: -11.91996955871582
    9. '  ' → logprob: -12.04496955871582
    10. ' 
' → logprob: -12.79496955871582

Token 316: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.004103692714124918
    2. ' n' → logprob: -5.504103660583496
    3. '   ' → logprob: -10.629103660583496
    4. ' ' → logprob: -14.879103660583496
    5. '9' → logprob: -15.254103660583496
    6. '```' → logprob: -15.254103660583496
    7. '	n' → logprob: -16.254104614257812
    8. '  ' → logprob: -17.254104614257812
    9. '
' → logprob: -17.379104614257812
    10. '    ' → logprob: -17.754104614257812

Token 317: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.416665640543215e-05
    2. '=' → logprob: -10.62503433227539
    3. ' ' → logprob: -12.25003433227539
    4. ' =' → logprob: -12.25003433227539
    5. 'n' → logprob: -16.62503433227539
    6. '   ' → logprob: -16.87503433227539
    7. '_' → logprob: -17.00003433227539
    8. '  ' → logprob: -17.50003433227539
    9. 'nine' → logprob: -18.12503433227539
    10. '    ' → logprob: -18.87503433227539

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858805239200592
    2. '=' → logprob: -3.0485880374908447
    3. ' ' → logprob: -14.673587799072266
    4. '   ' → logprob: -15.423587799072266
    5. ' =
' → logprob: -18.298587799072266
    6. '  ' → logprob: -19.173587799072266
    7. '=
' → logprob: -19.423587799072266
    8. ' ' → logprob: -19.548587799072266
    9. '9' → logprob: -19.673587799072266
    10. '    ' → logprob: -20.298587799072266

Token 319: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.002475777640938759
    2. ' ' → logprob: -6.002475738525391
    3. '   ' → logprob: -17.12747573852539
    4. '۹' → logprob: -18.12747573852539
    5. '  ' → logprob: -18.50247573852539
    6. '９' → logprob: -18.87747573852539
    7. ' ' → logprob: -19.31497573852539
    8. '09' → logprob: -19.31497573852539
    9. ' nine' → logprob: -19.68997573852539
    10. '```' → logprob: -19.87747573852539

Token 320: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '۹' → logprob: -19.500003814697266
    4. '   ' → logprob: -20.125003814697266
    5. '９' → logprob: -20.250003814697266
    6. '09' → logprob: -20.750003814697266
    7. '  ' → logprob: -21.375003814697266
    8. '९' → logprob: -21.812503814697266
    9. '6' → logprob: -21.875003814697266
    10. '```' → logprob: -21.875003814697266

Token 321: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15749426186084747
    2. '   ' → logprob: -2.157494306564331
    3. 'while' → logprob: -4.032494068145752
    4. '<|end|>' → logprob: -4.782494068145752
    5. ' while' → logprob: -6.032494068145752
    6. '<|end|>' → logprob: -7.282494068145752
    7. '

' → logprob: -7.782494068145752
    8. '    
' → logprob: -8.65749454498291
    9. '	while' → logprob: -8.90749454498291
    10. '
' → logprob: -10.40749454498291

Token 322: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10146287083625793
    2. 'while' → logprob: -2.3514628410339355
    3. ' while' → logprob: -6.8514628410339355
    4. '	while' → logprob: -9.601463317871094
    5. '
' → logprob: -9.851463317871094
    6. '    
' → logprob: -10.351463317871094
    7. '<|end|>' → logprob: -10.476463317871094
    8. '<|end|>' → logprob: -12.226463317871094
    9. '```' → logprob: -12.351463317871094
    10. '#' → logprob: -12.726463317871094

Token 323: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.01100101601332426
    2. '   ' → logprob: -4.886001110076904
    3. '#' (adapté à ' #') → logprob: -6.011001110076904
    4. ' while' → logprob: -7.386001110076904
    5. '
' → logprob: -8.136000633239746
    6. '	while' → logprob: -10.886000633239746
    7. 'While' → logprob: -12.761000633239746
    8. '    
' → logprob: -13.886000633239746
    9. '```' → logprob: -14.386000633239746
    10. ' #' → logprob: -14.761000633239746

Token 324: ' Bou' (ID: 33816)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -8.387458365177736e-05
    2. '#' → logprob: -9.500083923339844
    3. ' while' → logprob: -11.625083923339844
    4. 'While' → logprob: -16.875083923339844
    5. '	while' → logprob: -17.500083923339844
    6. '```' → logprob: -17.625083923339844
    7. '
' → logprob: -19.000083923339844
    8. ' #' → logprob: -20.750083923339844
    9. '   ' → logprob: -20.875083923339844
    10. 'wh' → logprob: -21.625083923339844

Token 325: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -6.034592388459714e-06
    2. 'cles' → logprob: -13.500005722045898
    3. 'c' → logprob: -13.750005722045898
    4. 'clé' → logprob: -13.750005722045898
    5. 'kle' → logprob: -14.375005722045898
    6. '#' → logprob: -14.500005722045898
    7. 'le' → logprob: -14.750005722045898
    8. 'while' → logprob: -15.625005722045898
    9. 'cl' → logprob: -15.625005722045898
    10. 'e' → logprob: -15.875005722045898

Token 326: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.01831335388123989
    2. 'while' → logprob: -4.018313407897949
    3. ' n' → logprob: -8.89331340789795
    4. '9' → logprob: -11.26831340789795
    5. 'n' → logprob: -11.89331340789795
    6. ' ' → logprob: -13.01831340789795
    7. 'While' → logprob: -13.51831340789795
    8. '   ' → logprob: -13.76831340789795
    9. '	while' → logprob: -14.64331340789795
    10. ' for' → logprob: -14.89331340789795

Token 327: ' pour' (ID: 1930)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.009891846217215061
    2. 'n' → logprob: -4.634891986846924
    3. ' while' → logprob: -9.509891510009766
    4. '   ' → logprob: -10.884891510009766
    5. '(n' → logprob: -11.134891510009766
    6. 'while' → logprob: -11.384891510009766
    7. ' for' → logprob: -11.634891510009766
    8. ' ' → logprob: -13.509891510009766
    9. '	n' → logprob: -13.759891510009766
    10. '    ' → logprob: -14.009891510009766

Token 328: ' ajouter' (ID: 78457)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12693503499031067
    2. ' n' → logprob: -2.1269350051879883
    3. ' ajouter' → logprob: -13.001935005187988
    4. 'while' → logprob: -13.501935005187988
    5. ' add' → logprob: -14.001935005187988
    6. '9' → logprob: -14.251935005187988
    7. 'add' → logprob: -14.501935005187988
    8. ' while' → logprob: -15.001935005187988
    9. '	n' → logprob: -15.376935005187988
    10. ' ' → logprob: -16.126935958862305

Token 329: ' toutes' (ID: 17502)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6931527256965637
    2. ' n' → logprob: -0.6931527256965637
    3. '(n' → logprob: -13.06815242767334
    4. ' ' → logprob: -14.44315242767334
    5. '	n' → logprob: -14.44315242767334
    6. '<n' → logprob: -14.69315242767334
    7. '   ' → logprob: -15.06815242767334
    8. '[n' → logprob: -15.19315242767334
    9. '$n' → logprob: -15.69315242767334
    10. '#' → logprob: -15.81815242767334

Token 330: ' les' (ID: 1341)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.39591631293296814
    2. 'n' → logprob: -1.1459163427352905
    3. '(n' → logprob: -4.77091646194458
    4. ' les' → logprob: -7.89591646194458
    5. '   ' → logprob: -9.270915985107422
    6. ' (' → logprob: -10.770915985107422
    7. 'les' → logprob: -10.770915985107422
    8. ' la' → logprob: -12.520915985107422
    9. '	n' → logprob: -12.520915985107422
    10. ' ' → logprob: -12.645915985107422

Token 331: ' puiss' (ID: 102546)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0025138312485069036
    2. ' n' → logprob: -6.002513885498047
    3. 'pu' → logprob: -10.752513885498047
    4. 'pow' → logprob: -11.752513885498047
    5. 'powers' → logprob: -12.377513885498047
    6. '(n' → logprob: -13.502513885498047
    7. '9' → logprob: -13.877513885498047
    8. 'nums' → logprob: -14.127513885498047
    9. 'p' → logprob: -15.002513885498047
    10. ' puiss' → logprob: -15.127513885498047

Token 332: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -0.002266232157126069
    2. 'antes' → logprob: -7.1272664070129395
    3. '6' → logprob: -7.7522664070129395
    4. 'ences' → logprob: -7.7522664070129395
    5. '{' → logprob: -9.127265930175781
    6. '#' → logprob: -9.252265930175781
    7. 'n' → logprob: -9.627265930175781
    8. 'ises' → logprob: -10.252265930175781
    9. 'p' → logprob: -10.627265930175781
    10. 'es' → logprob: -10.627265930175781

Token 333: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1105286031961441
    2. ' of' → logprob: -2.6105287075042725
    3. '   ' → logprob: -4.360528469085693
    4. 'de' → logprob: -4.360528469085693
    5. 'n' → logprob: -5.735528469085693
    6. ' n' → logprob: -6.485528469085693
    7. 'of' → logprob: -7.985528469085693
    8. '    ' → logprob: -8.610528945922852
    9. ' ' → logprob: -9.360528945922852
    10. '9' → logprob: -9.610528945922852

Token 334: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.1812000721693039
    2. ' ' → logprob: -1.8062000274658203
    3. 'n' → logprob: -6.93120002746582
    4. ' n' → logprob: -7.68120002746582
    5. '   ' → logprob: -12.18120002746582
    6. ' neuf' → logprob: -13.05620002746582
    7. '(n' → logprob: -13.30620002746582
    8. ' nine' → logprob: -13.68120002746582
    9. ' ' → logprob: -13.93120002746582
    10. '(' → logprob: -14.05620002746582

Token 335: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -9.245724504580721e-05
    2. 'n' → logprob: -9.500092506408691
    3. ' ' → logprob: -11.000092506408691
    4. ' n' → logprob: -14.125092506408691
    5. 'nine' → logprob: -16.875091552734375
    6. '   ' → logprob: -17.500091552734375
    7. '...' → logprob: -17.875091552734375
    8. '```' → logprob: -18.500091552734375
    9. '#' → logprob: -18.562591552734375
    10. '۹' → logprob: -18.812591552734375

Token 336: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10020741820335388
    2. '<=' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.475207328796387
    4. 'le' → logprob: -16.475208282470703
    5. '   ' → logprob: -16.600208282470703
    6. '#' → logprob: -16.725208282470703
    7. 'n' → logprob: -16.975208282470703
    8. ' #' → logprob: -17.100208282470703
    9. '```' → logprob: -17.225208282470703
    10. ' <<=' → logprob: -17.475208282470703

Token 337: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.42870470881462097
    2. ' n' → logprob: -1.0537047386169434
    3. '9' → logprob: -14.053704261779785
    4. ' ' → logprob: -14.178704261779785
    5. '	n' → logprob: -14.553704261779785
    6. '```' → logprob: -14.678704261779785
    7. ' ' → logprob: -15.178704261779785
    8. '   ' → logprob: -15.928704261779785
    9. '_n' → logprob: -15.991204261779785
    10. '(n' → logprob: -16.1787052154541

Token 338: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011470282450318336
    2. ':' → logprob: -4.511470317840576
    3. ':
' → logprob: -8.511469841003418
    4. 'while' → logprob: -8.886469841003418
    5. ' while' → logprob: -9.761469841003418
    6. '       ' → logprob: -11.636469841003418
    7. '  ' → logprob: -11.886469841003418
    8. ' to' → logprob: -13.136469841003418
    9. 'n' → logprob: -13.511469841003418
    10. ':\' → logprob: -13.886469841003418

Token 339: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0238602664321661
    2. 'nums' → logprob: -4.023860454559326
    3. ' n' → logprob: -5.273860454559326
    4. ' nums' → logprob: -7.523860454559326
    5. ' la' → logprob: -11.648859977722168
    6. '[n' → logprob: -12.273859977722168
    7. 'la' → logprob: -13.148859977722168
    8. 'list' → logprob: -13.148859977722168
    9. ' ' → logprob: -13.398859977722168
    10. 'l' → logprob: -13.398859977722168

Token 340: ' liste' (ID: 31719)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.711185872554779
    2. 'n' → logprob: -0.961185872554779
    3. 'liste' → logprob: -2.086185932159424
    4. 'nums' → logprob: -6.336185932159424
    5. ' liste' → logprob: -8.711185455322266
    6. ' list' → logprob: -9.211185455322266
    7. 'while' → logprob: -9.461185455322266
    8. 'lista' → logprob: -10.211185455322266
    9. 'lst' → logprob: -10.211185455322266
    10. '```' → logprob: -10.336185455322266

Token 341: ' '' (ID: 461)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002108267042785883
    2. 'while' → logprob: -6.877108097076416
    3. ' while' → logprob: -6.877108097076416
    4. ':' → logprob: -10.377108573913574
    5. '  ' → logprob: -12.252108573913574
    6. '       ' → logprob: -12.377108573913574
    7. ' ' → logprob: -13.377108573913574
    8. '	while' → logprob: -13.627108573913574
    9. ':
' → logprob: -15.627108573913574
    10. '    ' → logprob: -15.752108573913574

Token 342: 'nums' (ID: 44465)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05500200390815735
    2. 'nums' → logprob: -2.930001974105835
    3. ' n' → logprob: -9.430002212524414
    4. ' nums' → logprob: -11.055002212524414
    5. '9' → logprob: -11.180002212524414
    6. '   ' → logprob: -13.430002212524414
    7. 'num' → logprob: -13.555002212524414
    8. 'read' → logprob: -13.680002212524414
    9. 'numbers' → logprob: -14.180002212524414
    10. '	n' → logprob: -14.305002212524414

Token 343: ''
' (ID: 2207)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034501638263463974
    2. ':' → logprob: -3.409501552581787
    3. ':
' → logprob: -7.284501552581787
    4. 'while' → logprob: -9.659502029418945
    5. ' while' → logprob: -10.534502029418945
    6. '):
' → logprob: -10.659502029418945
    7. ')' → logprob: -11.034502029418945
    8. '       ' → logprob: -11.284502029418945
    9. '  ' → logprob: -11.784502029418945
    10. '):' → logprob: -11.784502029418945

Token 344: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015065373852849007
    2. 'while' → logprob: -4.2650651931762695
    3. ' while' → logprob: -7.0150651931762695
    4. '	while' → logprob: -12.76506519317627
    5. 'While' → logprob: -15.39006519317627
    6. '```' → logprob: -16.640066146850586
    7. '       ' → logprob: -17.265066146850586
    8. ':' → logprob: -17.390066146850586
    9. '    
' → logprob: -17.390066146850586
    10. '  ' → logprob: -17.890066146850586

Token 345: ' #' (ID: 1069)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.32657548785209656
    2. '   ' → logprob: -1.326575517654419
    3. ' while' → logprob: -4.32657527923584
    4. '	while' → logprob: -11.45157527923584
    5. 'While' → logprob: -13.82657527923584
    6. '  ' → logprob: -14.45157527923584
    7. ' ' → logprob: -15.07657527923584
    8. '```' → logprob: -15.32657527923584
    9. '    
' → logprob: -17.576576232910156
    10. '       ' → logprob: -17.576576232910156

Token 346: ' Ex' (ID: 1771)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0002613358374219388
    2. ' while' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.125261306762695
    4. 'While' → logprob: -19.500261306762695
    5. '	while' → logprob: -19.500261306762695
    6. 'wh' → logprob: -21.250261306762695
    7. '```' → logprob: -21.250261306762695
    8. '
' → logprob: -23.000261306762695
    9. 'w' → logprob: -23.250261306762695
    10. ' ' → logprob: -24.125261306762695

Token 347: ':' (ID: 25)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6000362634658813
    2. ':' → logprob: -0.8500362634658813
    3. 'while' → logprob: -4.100036144256592
    4. 'n' → logprob: -5.725036144256592
    5. '9' → logprob: -6.600036144256592
    6. ' while' → logprob: -6.725036144256592
    7. ' n' → logprob: -6.850036144256592
    8. '#' → logprob: -8.85003662109375
    9. ':
' → logprob: -9.97503662109375
    10. ' :' → logprob: -10.10003662109375

Token 348: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.11474984884262085
    2. ' while' → logprob: -3.2397499084472656
    3. '   ' → logprob: -3.6147499084472656
    4. 'while' → logprob: -3.7397499084472656
    5. 'n' → logprob: -4.614749908447266
    6. ' n' → logprob: -5.114749908447266
    7. ' ' → logprob: -5.989749908447266
    8. 'nums' → logprob: -10.739749908447266
    9. ' nums' → logprob: -10.989749908447266
    10. '  ' → logprob: -11.239749908447266

Token 349: '9' (ID: 24)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7264167666435242
    2. '9' → logprob: -0.8514167666435242
    3. 'n' → logprob: -2.601416826248169
    4. ' while' → logprob: -4.35141658782959
    5. '   ' → logprob: -6.72641658782959
    6. ' n' → logprob: -7.10141658782959
    7. ' ' → logprob: -8.22641658782959
    8. 'nums' → logprob: -10.10141658782959
    9. '       ' → logprob: -10.35141658782959
    10. 'While' → logprob: -11.16391658782959

Token 350: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17484106123447418
    2. ' <=' → logprob: -2.5498411655426025
    3. '       ' → logprob: -2.9248411655426025
    4. '<=' → logprob: -4.549840927124023
    5. ' while' → logprob: -4.924840927124023
    6. 'while' → logprob: -5.049840927124023
    7. ':' → logprob: -6.549840927124023
    8. '<|end|>' → logprob: -7.424840927124023
    9. ':
' → logprob: -7.924840927124023
    10. '    ' → logprob: -7.924840927124023

Token 351: ' ' (ID: 220)
  Prédit: '81'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '81' → logprob: -0.09181282669305801
    2. ' ' → logprob: -2.4668128490448
    3. '9' → logprob: -6.091812610626221
    4. '   ' → logprob: -7.591812610626221
    5. ' n' → logprob: -10.841813087463379
    6. '  ' → logprob: -10.841813087463379
    7. '729' → logprob: -11.216813087463379
    8. 'while' → logprob: -11.591813087463379
    9. ' while' → logprob: -11.716813087463379
    10. '36' → logprob: -11.841813087463379

Token 352: '81' (ID: 9989)
  Prédit: '81'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '81' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.375000953674316
    3. '9' → logprob: -15.250000953674316
    4. '   ' → logprob: -17.25
    5. '  ' → logprob: -18.0
    6. '8' → logprob: -18.625
    7. '89' → logprob: -20.375
    8. '729' → logprob: -20.375
    9. 'n' → logprob: -20.5
    10. '...' → logprob: -20.875

Token 353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010229245526716113
    2. '   ' → logprob: -7.001022815704346
    3. ',
' → logprob: -10.251023292541504
    4. ' ,' → logprob: -10.501023292541504
    5. 'n' → logprob: -11.126023292541504
    6. ',n' → logprob: -11.501023292541504
    7. 'while' → logprob: -11.626023292541504
    8. '       ' → logprob: -12.126023292541504
    9. '9' → logprob: -12.376023292541504
    10. ')' → logprob: -13.376023292541504

Token 354: ' ' (ID: 220)
  Prédit: '81'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '81' → logprob: -0.05889580398797989
    2. ' ' → logprob: -3.1838958263397217
    3. '9' → logprob: -4.558895587921143
    4. '729' → logprob: -5.308895587921143
    5. '   ' → logprob: -8.0588960647583
    6. '  ' → logprob: -10.9338960647583
    7. '     ' → logprob: -12.4338960647583
    8. '89' → logprob: -12.5588960647583
    9. '79' → logprob: -13.5588960647583
    10. '    ' → logprob: -13.6838960647583

Token 355: '729' (ID: 43698)
  Prédit: '81'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '81' → logprob: -0.1486262083053589
    2. '729' → logprob: -2.6486263275146484
    3. ' ' → logprob: -3.0236263275146484
    4. '9' → logprob: -4.023626327514648
    5. '   ' → logprob: -7.523626327514648
    6. '  ' → logprob: -8.898626327514648
    7. '     ' → logprob: -10.023626327514648
    8. '#' → logprob: -10.648626327514648
    9. '656' → logprob: -10.898626327514648
    10. '
' → logprob: -11.148626327514648

Token 356: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024280499666929245
    2. ',' → logprob: -3.899280548095703
    3. ' while' → logprob: -6.399280548095703
    4. 'while' → logprob: -6.899280548095703
    5. '<|end|>' → logprob: -7.524280548095703
    6. '<|end|>' → logprob: -8.899280548095703
    7. ':' → logprob: -9.024280548095703
    8. ' ,' → logprob: -10.149280548095703
    9. '       ' → logprob: -10.149280548095703
    10. '...' → logprob: -10.274280548095703

Token 357: ' etc' (ID: 5178)
  Prédit: ' etc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' etc' → logprob: -0.03465099632740021
    2. 'etc' → logprob: -3.784651041030884
    3. '   ' → logprob: -5.284650802612305
    4. ' ' → logprob: -6.659650802612305
    5. '       ' → logprob: -7.034650802612305
    6. '    ' → logprob: -7.284650802612305
    7. ' n' → logprob: -7.409650802612305
    8. ',' → logprob: -7.784650802612305
    9. '...' → logprob: -7.909650802612305
    10. '9' → logprob: -7.909650802612305

Token 358: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.933173426659778e-05
    2. 'while' → logprob: -10.250069618225098
    3. ' while' → logprob: -10.375069618225098
    4. ':' → logprob: -13.750069618225098
    5. '    
' → logprob: -14.500069618225098
    6. '       ' → logprob: -15.250069618225098
    7. '  ' → logprob: -15.375069618225098
    8. ')' → logprob: -15.625069618225098
    9. '	while' → logprob: -15.875069618225098
    10. '
' → logprob: -16.25006866455078

Token 359: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.0007852102862671018
    2. '   ' → logprob: -7.2507853507995605
    3. ' while' → logprob: -9.500784873962402
    4. '	while' → logprob: -15.375784873962402
    5. '```' → logprob: -15.625784873962402
    6. 'While' → logprob: -17.50078582763672
    7. '
' → logprob: -18.12578582763672
    8. '    
' → logprob: -19.62578582763672
    9. 'wh' → logprob: -20.25078582763672
    10. '  ' → logprob: -20.62578582763672

Token 360: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -1.8624639324116288e-06
    2. ' while' → logprob: -13.250001907348633
    3. '   ' → logprob: -21.125001907348633
    4. '```' → logprob: -21.125001907348633
    5. 'wh' → logprob: -21.750001907348633
    6. '	while' → logprob: -21.875001907348633
    7. '
' → logprob: -22.375001907348633
    8. 'While' → logprob: -22.500001907348633
    9. 'w' → logprob: -25.000001907348633
    10. 'with' → logprob: -25.750001907348633

Token 361: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.31326377391815186
    2. 'n' → logprob: -1.3132637739181519
    3. '(n' → logprob: -14.438263893127441
    4. '   ' → logprob: -14.563263893127441
    5. '	n' → logprob: -15.313263893127441
    6. ' ' → logprob: -15.563263893127441
    7. ' ' → logprob: -15.688263893127441
    8. '_n' → logprob: -15.938263893127441
    9. '<n' → logprob: -16.438262939453125
    10. '9' → logprob: -16.813262939453125

Token 362: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.282920129597187e-05
    2. '<=' → logprob: -12.000012397766113
    3. ' <=' → logprob: -12.500012397766113
    4. ' ' → logprob: -13.750012397766113
    5. 'n' → logprob: -14.500012397766113
    6. '   ' → logprob: -14.500012397766113
    7. '۹' → logprob: -15.875012397766113
    8. '<' → logprob: -16.25001335144043
    9. '```' → logprob: -16.25001335144043
    10. '९' → logprob: -16.62501335144043

Token 363: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.023245712742209435
    2. '<=' → logprob: -3.7732458114624023
    3. ' ' → logprob: -15.398245811462402
    4. ')<=' → logprob: -17.773244857788086
    5. '<' → logprob: -18.398244857788086
    6. ' <<=' → logprob: -18.773244857788086
    7. ' <' → logprob: -19.023244857788086
    8. ' ' → logprob: -19.023244857788086
    9. ' <=",' → logprob: -19.148244857788086
    10. ' ≤' → logprob: -19.148244857788086

Token 364: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1602243334054947
    2. ' n' → logprob: -1.9102243185043335
    3. '	n' → logprob: -15.910223960876465
    4. '_n' → logprob: -17.91022491455078
    5. '[n' → logprob: -19.03522491455078
    6. ')n' → logprob: -19.28522491455078
    7. '9' → logprob: -19.53522491455078
    8. ' ' → logprob: -19.66022491455078
    9. '<n' → logprob: -19.78522491455078
    10. ' ' → logprob: -19.91022491455078

Token 365: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12702102959156036
    2. ':
' → logprob: -2.127021074295044
    3. '   ' → logprob: -10.002020835876465
    4. '       ' → logprob: -10.627020835876465
    5. '):
' → logprob: -11.377020835876465
    6. ':
' → logprob: -12.252020835876465
    7. ':

' → logprob: -13.002020835876465
    8. '):' → logprob: -13.377020835876465
    9. ' :
' → logprob: -13.752020835876465
    10. ' :' → logprob: -14.377020835876465

Token 366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.384836888173595e-05
    2. '   ' → logprob: -10.3750638961792
    3. 'nums' → logprob: -10.5000638961792
    4. ' nums' → logprob: -13.6250638961792
    5. '```' → logprob: -13.6250638961792
    6. '<|end|>' → logprob: -14.3750638961792
    7. 'n' → logprob: -14.6250638961792
    8. '      ' → logprob: -15.1250638961792
    9. '{
' → logprob: -15.6250638961792
    10. '#' → logprob: -15.7500638961792

Token 367: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' (adapté à ' nums') → logprob: -5.0020742492051795e-05
    2. ' nums' → logprob: -10.000049591064453
    3. '   ' → logprob: -12.750049591064453
    4. '       ' → logprob: -13.375049591064453
    5. 'num' → logprob: -16.375049591064453
    6. '(nums' → logprob: -16.750049591064453
    7. 'numbers' → logprob: -17.125049591064453
    8. '```' → logprob: -17.500049591064453
    9. ' ' → logprob: -18.000049591064453
    10. '  ' → logprob: -19.375049591064453

Token 368: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.01815626211464405
    2. '.' → logprob: -4.018156051635742
    3. '.app' → logprob: -13.018156051635742
    4. '.extend' → logprob: -13.768156051635742
    5. '.add' → logprob: -14.018156051635742
    6. ' .' → logprob: -14.393156051635742
    7. '.Append' → logprob: -14.643156051635742
    8. '.setdefault' → logprob: -14.768156051635742
    9. '.push' → logprob: -15.518156051635742
    10. '.ap' → logprob: -16.018156051635742

Token 369: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.15310683415737e-05
    2. '(' → logprob: -10.750021934509277
    3. ' (' → logprob: -19.50002098083496
    4. 'n' → logprob: -19.75002098083496
    5. '(
' → logprob: -20.12502098083496
    6. '(nn' → logprob: -21.00002098083496
    7. '(noun' → logprob: -21.87502098083496
    8. '(nums' → logprob: -23.00002098083496
    9. '(N' → logprob: -23.25002098083496
    10. '((' → logprob: -23.25002098083496

Token 370: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -5.512236498361744e-07
    2. 'n' → logprob: -15.500000953674316
    3. ' ' → logprob: -17.0
    4. '[' → logprob: -17.125
    5. '۹' → logprob: -17.5625
    6. '९' → logprob: -17.6875
    7. '.' → logprob: -17.875
    8. '.py' → logprob: -18.0
    9. '٩' → logprob: -18.125
    10. '```' → logprob: -18.1875

Token 371: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6286106983898208e-05
    2. ')
' → logprob: -11.375016212463379
    3. ' )' → logprob: -12.375016212463379
    4. ')n' → logprob: -15.500016212463379
    5. '   ' → logprob: -15.875016212463379
    6. ')

' → logprob: -16.125017166137695
    7. '       ' → logprob: -16.500017166137695
    8. ')#' → logprob: -16.875017166137695
    9. '),' → logprob: -17.750017166137695
    10. '#' → logprob: -18.250017166137695

Token 372: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03283887356519699
    2. '
' → logprob: -4.407838821411133
    3. '   ' → logprob: -4.532838821411133
    4. 'n' → logprob: -4.907838821411133
    5. ' n' → logprob: -6.782838821411133
    6. '        
' → logprob: -8.032838821411133
    7. '    
' → logprob: -8.407838821411133
    8. ' 
' → logprob: -8.532838821411133
    9. '      ' → logprob: -10.907838821411133
    10. '	n' → logprob: -10.907838821411133

Token 373: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5091708898544312
    2. 'n' → logprob: -1.0091708898544312
    3. '
' → logprob: -3.7591710090637207
    4. ' n' → logprob: -4.759171009063721
    5. '   ' → logprob: -6.009171009063721
    6. '        
' → logprob: -9.759170532226562
    7. ' 
' → logprob: -10.384170532226562
    8. '      ' → logprob: -11.259170532226562
    9. '	n' → logprob: -11.384170532226562
    10. '    
' → logprob: -11.759170532226562

Token 374: ' Aj' (ID: 28294)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002890705829486251
    2. 'nums' → logprob: -6.377890586853027
    3. ' n' → logprob: -7.127890586853027
    4. '       ' → logprob: -8.002890586853027
    5. '   ' → logprob: -10.377890586853027
    6. ' nums' → logprob: -11.377890586853027
    7. '	n' → logprob: -12.752890586853027
    8. '           ' → logprob: -13.877890586853027
    9. '    ' → logprob: -14.377890586853027
    10. '        
' → logprob: -14.377890586853027

Token 375: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.00121428316924721
    2. 'outer' → logprob: -7.126214504241943
    3. 'outes' → logprob: -8.251214027404785
    4. 'outez' → logprob: -9.001214027404785
    5. 'outs' → logprob: -11.376214027404785
    6. 'out' → logprob: -12.001214027404785
    7. 'uste' → logprob: -13.126214027404785
    8. 'nums' → logprob: -13.376214027404785
    9. 'ous' → logprob: -13.751214027404785
    10. 's' → logprob: -14.501214027404785

Token 376: ' la' (ID: 557)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00014597235713154078
    2. '(' → logprob: -9.37514591217041
    3. 'the' → logprob: -10.25014591217041
    4. 'n' → logprob: -10.62514591217041
    5. '<|end|>' → logprob: -15.50014591217041
    6. ' the' → logprob: -15.62514591217041
    7. ' (' → logprob: -15.62514591217041
    8. 'le' → logprob: -15.87514591217041
    9. 'The' → logprob: -16.250146865844727
    10. ' la' → logprob: -16.250146865844727

Token 377: ' puissance' (ID: 63494)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001217813478433527
    2. '9' → logprob: -9.7501220703125
    3. ' n' → logprob: -9.7501220703125
    4. 'pu' → logprob: -12.8751220703125
    5. 'num' → logprob: -14.5001220703125
    6. 'pow' → logprob: -14.7501220703125
    7. 'nu' → logprob: -14.8751220703125
    8. '(n' → logprob: -15.3751220703125
    9. 'nums' → logprob: -16.0001220703125
    10. '_n' → logprob: -16.2501220703125

Token 378: ' cour' (ID: 2871)
  Prédit: 'cour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cour' → logprob: -0.16070254147052765
    2. '(n' → logprob: -2.2857024669647217
    3. '_c' → logprob: -3.1607024669647217
    4. 'n' → logprob: -6.160702705383301
    5. '(' → logprob: -7.035702705383301
    6. '9' → logprob: -7.660702705383301
    7. 'cur' → logprob: -8.2857027053833
    8. '_n' → logprob: -8.9107027053833
    9. 'c' → logprob: -9.0357027053833
    10. ' cour' → logprob: -9.4107027053833

Token 379: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.08001791685819626
    2. 'ente' → logprob: -2.5800178050994873
    3. 'r' → logprob: -7.080018043518066
    4. 'nte' → logprob: -9.580018043518066
    5. 'urrent' → logprob: -10.080018043518066
    6. '   ' → logprob: -10.080018043518066
    7. 'ent' → logprob: -11.080018043518066
    8. 'ur' → logprob: -11.080018043518066
    9. 'u' → logprob: -11.205018043518066
    10. 'current' → logprob: -11.330018043518066

Token 380: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.041125740855932236
    2. 'de' → logprob: -3.291125774383545
    3. '   ' → logprob: -6.166125774383545
    4. ' of' → logprob: -7.666125774383545
    5. '       ' → logprob: -9.166125297546387
    6. '    ' → logprob: -9.291125297546387
    7. '(' → logprob: -9.791125297546387
    8. 'of' → logprob: -9.916125297546387
    9. '9' → logprob: -10.041125297546387
    10. ' ' → logprob: -10.416125297546387

Token 381: ' ' (ID: 220)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.010917536914348602
    2. '9' → logprob: -4.635917663574219
    3. ' n' → logprob: -6.760917663574219
    4. ' ' → logprob: -13.135917663574219
    5. 'nine' → logprob: -15.510917663574219
    6. '(n' → logprob: -16.13591766357422
    7. ' neuf' → logprob: -16.26091766357422
    8. '	n' → logprob: -16.38591766357422
    9. '   ' → logprob: -16.88591766357422
    10. '  ' → logprob: -17.88591766357422

Token 382: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.1008713702030946e-06
    2. 'n' → logprob: -13.375001907348633
    3. ' ' → logprob: -14.500001907348633
    4. 'nine' → logprob: -17.500001907348633
    5. '۹' → logprob: -18.000001907348633
    6. ' neuf' → logprob: -18.125001907348633
    7. '```' → logprob: -18.625001907348633
    8. '٩' → logprob: -18.937501907348633
    9. '९' → logprob: -19.250001907348633
    10. '９' → logprob: -19.562501907348633

Token 383: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03281925618648529
    2. '   ' → logprob: -3.7828192710876465
    3. '       ' → logprob: -5.4078192710876465
    4. ' to' → logprob: -6.1578192710876465
    5. '=' → logprob: -7.0328192710876465
    6. ' )' → logprob: -7.5328192710876465
    7. '9' → logprob: -8.282818794250488
    8. ' à' → logprob: -8.532818794250488
    9. '<|end|>' → logprob: -8.532818794250488
    10. 'n' → logprob: -8.782818794250488

Token 384: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011745783500373363
    2. 'nums' → logprob: -4.636745929718018
    3. ' n' → logprob: -6.261745929718018
    4. ' nums' → logprob: -9.88674545288086
    5. 'num' → logprob: -12.26174545288086
    6. '9' → logprob: -12.38674545288086
    7. 'list' → logprob: -12.63674545288086
    8. '[n' → logprob: -12.76174545288086
    9. 'the' → logprob: -13.01174545288086
    10. ' la' → logprob: -13.38674545288086

Token 385: ' liste' (ID: 31719)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.20297250151634216
    2. 'list' → logprob: -1.9529725313186646
    3. 'liste' → logprob: -3.202972412109375
    4. 'lista' → logprob: -7.952972412109375
    5. 'lists' → logprob: -8.202972412109375
    6. '9' → logprob: -8.327972412109375
    7. ' nums' → logprob: -9.077972412109375
    8. 'num' → logprob: -9.577972412109375
    9. 'lst' → logprob: -9.952972412109375
    10. 'lis' → logprob: -10.327972412109375

Token 386: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014617416076362133
    2. 'n' → logprob: -4.389617443084717
    3. '
' → logprob: -6.264617443084717
    4. '   ' → logprob: -9.139616966247559
    5. '        
' → logprob: -10.639616966247559
    6. ' n' → logprob: -11.139616966247559
    7. ' 
' → logprob: -11.264616966247559
    8. '\n' → logprob: -12.139616966247559
    9. '
' → logprob: -12.764616966247559
    10. '      ' → logprob: -12.764616966247559

Token 387: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004298015031963587
    2. 'n' → logprob: -5.879298210144043
    3. '
' → logprob: -6.879298210144043
    4. '   ' → logprob: -7.754298210144043
    5. '        
' → logprob: -11.879298210144043
    6. ' n' → logprob: -12.379298210144043
    7. '```' → logprob: -12.629298210144043
    8. '	n' → logprob: -12.754298210144043
    9. '
' → logprob: -12.879298210144043
    10. ' 
' → logprob: -13.254298210144043

Token 388: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -8.208653162000701e-05
    2. ' n' → logprob: -9.500082015991211
    3. '   ' → logprob: -12.125082015991211
    4. '       ' → logprob: -13.750082015991211
    5. '	n' → logprob: -14.250082015991211
    6. '_n' → logprob: -19.25008201599121
    7. '
' → logprob: -19.62508201599121
    8. '  ' → logprob: -20.62508201599121
    9. ' ' → logprob: -20.87508201599121
    10. '           ' → logprob: -21.00008201599121

Token 389: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.650518920039758e-06
    2. '=' → logprob: -13.000003814697266
    3. 'n' → logprob: -14.000003814697266
    4. ' =' → logprob: -15.000003814697266
    5. ' ' → logprob: -17.125003814697266
    6. '=n' → logprob: -17.250003814697266
    7. '```' → logprob: -17.500003814697266
    8. '+=' → logprob: -17.500003814697266
    9. '   ' → logprob: -17.750003814697266
    10. '٩' → logprob: -17.750003814697266

Token 390: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759552121162415
    2. '=' → logprob: -0.8259552121162415
    3. ' *=' → logprob: -11.325955390930176
    4. '*=' → logprob: -12.700955390930176
    5. '   ' → logprob: -15.075955390930176
    6. ' ' → logprob: -15.325955390930176
    7. '*' → logprob: -16.32595443725586
    8. '＝' → logprob: -18.57595443725586
    9. 's' → logprob: -18.95095443725586
    10. '	' → logprob: -19.20095443725586

Token 391: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0024764856789261103
    2. ' n' → logprob: -6.002476692199707
    3. '9' → logprob: -14.002476692199707
    4. '	n' → logprob: -18.12747573852539
    5. ')n' → logprob: -20.25247573852539
    6. '­n' → logprob: -21.37747573852539
    7. '_n' → logprob: -21.50247573852539
    8. ' ' → logprob: -22.00247573852539
    9. '(n' → logprob: -22.00247573852539
    10. '<|end|>' → logprob: -22.25247573852539

Token 392: '9' (ID: 24)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.48802056908607483
    2. '9' → logprob: -0.9880205392837524
    3. ' n' → logprob: -4.363020420074463
    4. '*n' → logprob: -7.488020420074463
    5. '*' → logprob: -7.738020420074463
    6. ' *' → logprob: -9.488020896911621
    7. ' ' → logprob: -11.363020896911621
    8. '_n' → logprob: -11.738020896911621
    9. '   ' → logprob: -12.238020896911621
    10. '(n' → logprob: -13.238020896911621

Token 393: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20637370645999908
    2. ' *' → logprob: -2.206373691558838
    3. '9' → logprob: -2.956373691558838
    4. 'n' → logprob: -3.831373691558838
    5. ' n' → logprob: -6.206373691558838
    6. '*n' → logprob: -7.456373691558838
    7. ' ' → logprob: -9.456374168395996
    8. '   ' → logprob: -11.831374168395996
    9. ' ' → logprob: -13.081374168395996
    10. '	n' → logprob: -14.581374168395996

Token 394: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.988221684878226e-06
    2. ' ' → logprob: -11.875006675720215
    3. '۹' → logprob: -18.75000762939453
    4. '९' → logprob: -19.87500762939453
    5. '   ' → logprob: -20.37500762939453
    6. '```' → logprob: -20.37500762939453
    7. '٩' → logprob: -20.62500762939453
    8. '９' → logprob: -20.75000762939453
    9. '৯' → logprob: -20.87500762939453
    10. ' nine' → logprob: -21.12500762939453

Token 395: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '۹' → logprob: -20.125
    4. '९' → logprob: -20.75
    5. '```' → logprob: -21.125
    6. '৯' → logprob: -21.625
    7. '９' → logprob: -21.625
    8. 'nine' → logprob: -22.0
    9. '٩' → logprob: -22.125
    10. '   ' → logprob: -22.375

Token 396: '     ' (ID: 530)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2522149980068207
    2. '   ' → logprob: -1.877215027809143
    3. '<|end|>' → logprob: -2.8772149085998535
    4. '    
' → logprob: -5.1272149085998535
    5. '

' → logprob: -5.2522149085998535
    6. '  
' → logprob: -7.2522149085998535
    7. ' ' → logprob: -8.377215385437012
    8. '   
' → logprob: -8.502215385437012
    9. ' 
' → logprob: -8.627215385437012
    10. '  ' → logprob: -8.752215385437012

Token 397: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 398: ' Mult' (ID: 15431)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.002870611846446991
    2. '9' → logprob: -6.252870559692383
    3. ' n' → logprob: -7.002870559692383
    4. ' ' → logprob: -11.502870559692383
    5. '<|end|>' → logprob: -11.877870559692383
    6. '   ' → logprob: -12.752870559692383
    7. '<|end|>' → logprob: -13.127870559692383
    8. ')' → logprob: -13.252870559692383
    9. '(n' → logprob: -13.502870559692383
    10. ')n' → logprob: -13.627870559692383

Token 399: 'ipl' (ID: 7840)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0002682496269699186
    2. '<|end|>' → logprob: -8.50026798248291
    3. '<|end|>' → logprob: -10.62526798248291
    4. ')' → logprob: -10.75026798248291
    5. '=' → logprob: -12.87526798248291
    6. 'ultiply' → logprob: -13.00026798248291
    7. 'inue' → logprob: -13.25026798248291
    8. 'ultip' → logprob: -13.62526798248291
    9. '#' → logprob: -13.62526798248291
    10. '*' → logprob: -13.75026798248291

Token 400: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.14177779853343964
    2. 'ier' → logprob: -2.266777753829956
    3. 'plier' → logprob: -4.891777992248535
    4. 'ipl' → logprob: -5.016777992248535
    5. 'e' → logprob: -5.766777992248535
    6. 'iplier' → logprob: -6.141777992248535
    7. 'i' → logprob: -6.516777992248535
    8. 'ip' → logprob: -7.141777992248535
    9. 'uie' → logprob: -7.391777992248535
    10. 'ue' → logprob: -7.766777992248535

Token 401: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0034956615418195724
    2. ' n' → logprob: -5.878495693206787
    3. '9' → logprob: -8.128495216369629
    4. '(n' → logprob: -8.128495216369629
    5. ' ' → logprob: -10.128495216369629
    6. '	n' → logprob: -11.253495216369629
    7. '<|end|>' → logprob: -11.628495216369629
    8. ')n' → logprob: -11.753495216369629
    9. '    ' → logprob: -12.128495216369629
    10. '<n' → logprob: -12.253495216369629

Token 402: ' valeur' (ID: 41664)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0038531555328518152
    2. '9' → logprob: -5.8788533210754395
    3. ' n' → logprob: -7.2538533210754395
    4. 'value' → logprob: -8.378852844238281
    5. 'val' → logprob: -9.753852844238281
    6. ' value' → logprob: -10.878852844238281
    7. ' ' → logprob: -11.378852844238281
    8. ' valeur' → logprob: -12.628852844238281
    9. '<|end|>' → logprob: -12.753852844238281
    10. 'nu' → logprob: -13.378852844238281

Token 403: ' cour' (ID: 2871)
  Prédit: 'cour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cour' → logprob: -0.0018403483554720879
    2. ' cour' → logprob: -6.626840114593506
    3. '9' → logprob: -8.251840591430664
    4. 'n' → logprob: -9.001840591430664
    5. '_c' → logprob: -9.501840591430664
    6. '_' → logprob: -10.876840591430664
    7. '_n' → logprob: -11.001840591430664
    8. 'cours' → logprob: -12.251840591430664
    9. ' courant' → logprob: -12.876840591430664
    10. '```' → logprob: -13.126840591430664

Token 404: 'ante' (ID: 2116)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0009219424682669342
    2. 'n' → logprob: -7.625921726226807
    3. '#' → logprob: -9.125922203063965
    4. '=' → logprob: -9.500922203063965
    5. '6' → logprob: -9.625922203063965
    6. '   ' → logprob: -10.375922203063965
    7. '```' → logprob: -10.500922203063965
    8. ')' → logprob: -11.375922203063965
    9. ' ' → logprob: -11.625922203063965
    10. '...' → logprob: -12.500922203063965

Token 405: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6984373927116394
    2. '<|end|>' → logprob: -0.9484373927116394
    3. ' of' → logprob: -3.448437452316284
    4. 'n' → logprob: -3.823437452316284
    5. 'de' → logprob: -3.823437452316284
    6. ' ' → logprob: -4.073437213897705
    7. ' n' → logprob: -5.448437213897705
    8. ')' → logprob: -5.823437213897705
    9. '    ' → logprob: -6.073437213897705
    10. '(n' → logprob: -6.073437213897705

Token 406: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023272618651390076
    2. ' n' → logprob: -3.7732725143432617
    3. '9' → logprob: -10.523272514343262
    4. '	n' → logprob: -16.023273468017578
    5. '   ' → logprob: -17.148273468017578
    6. ' ' → logprob: -17.523273468017578
    7. '_n' → logprob: -18.773273468017578
    8. '(n' → logprob: -18.773273468017578
    9. ')n' → logprob: -19.148273468017578
    10. '    ' → logprob: -19.523273468017578

Token 407: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.975612187583465e-05
    2. ' ' → logprob: -10.500029563903809
    3. 'n' → logprob: -13.875029563903809
    4. '_' → logprob: -15.000029563903809
    5. ' neuf' → logprob: -15.937529563903809
    6. '```' → logprob: -15.937529563903809
    7. '  ' → logprob: -16.062530517578125
    8. '=' → logprob: -16.437530517578125
    9. '   ' → logprob: -16.625030517578125
    10. ' n' → logprob: -16.625030517578125

Token 408: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.6986079812049866
    2. 'par' → logprob: -0.6986079812049866
    3. '9' → logprob: -5.948607921600342
    4. ' by' → logprob: -7.073607921600342
    5. ' ' → logprob: -7.198607921600342
    6. 'by' → logprob: -7.823607921600342
    7. '*' → logprob: -7.823607921600342
    8. '   ' → logprob: -9.0736083984375
    9. ' *' → logprob: -9.3236083984375
    10. '       ' → logprob: -9.6986083984375

Token 409: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.008615042082965374
    2. ' ' → logprob: -4.758615016937256
    3. ' ' → logprob: -14.883615493774414
    4. '   ' → logprob: -16.633615493774414
    5. '```' → logprob: -17.133615493774414
    6. ' neuf' → logprob: -18.508615493774414
    7. '  ' → logprob: -19.008615493774414
    8. '`' → logprob: -19.383615493774414
    9. '    ' → logprob: -19.508615493774414
    10. '９' → logprob: -19.821115493774414

Token 410: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '```' → logprob: -20.875
    4. '   ' → logprob: -21.625
    5. '۹' → logprob: -22.0
    6. '`' → logprob: -22.375
    7. '９' → logprob: -22.5
    8. '09' → logprob: -22.875
    9. '
' → logprob: -23.0
    10. ' neuf' → logprob: -23.125

Token 411: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.48846638202667236
    2. '<|end|>' → logprob: -1.2384663820266724
    3. '
' → logprob: -2.613466262817383
    4. '    
' → logprob: -4.238466262817383
    5. '

' → logprob: -5.488466262817383
    6. '\n' → logprob: -7.238466262817383
    7. 'n' → logprob: -7.363466262817383
    8. '  
' → logprob: -7.363466262817383
    9. '```' → logprob: -7.863466262817383
    10. '<|end|>' → logprob: -7.988466262817383

Token 412: ' passer' (ID: 27727)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.024463161826133728
    2. ' ' → logprob: -3.774463176727295
    3. 'pass' → logprob: -7.399463176727295
    4. ' pass' → logprob: -8.149462699890137
    5. ' passer' → logprob: -8.524462699890137
    6. ' neuf' → logprob: -10.149462699890137
    7. '   ' → logprob: -11.149462699890137
    8. 'n' → logprob: -11.399462699890137
    9. ' continuer' → logprob: -11.649462699890137
    10. ' n' → logprob: -11.774462699890137

Token 413: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.30440330505371094
    2. ' à' → logprob: -1.929403305053711
    3. 'to' → logprob: -2.429403305053711
    4. 'au' → logprob: -4.804403305053711
    5. '<|end|>' → logprob: -5.304403305053711
    6. '   ' → logprob: -5.554403305053711
    7. ' to' → logprob: -5.679403305053711
    8. '9' → logprob: -6.054403305053711
    9. '       ' → logprob: -6.804403305053711
    10. '#' → logprob: -7.054403305053711

Token 414: ' la' (ID: 557)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.004627241287380457
    2. ' ' → logprob: -5.379627227783203
    3. ' neuf' → logprob: -13.754627227783203
    4. '   ' → logprob: -14.004627227783203
    5. ' la' → logprob: -14.129627227783203
    6. 'l' → logprob: -14.129627227783203
    7. 'the' → logprob: -14.629627227783203
    8. 'n' → logprob: -14.754627227783203
    9. '```' → logprob: -14.754627227783203
    10. '1' → logprob: -15.067127227783203

Token 415: ' puissance' (ID: 63494)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.005050283391028643
    2. 'n' → logprob: -5.755050182342529
    3. ' ' → logprob: -6.380050182342529
    4. 'pu' → logprob: -9.755050659179688
    5. ' n' → logprob: -9.880050659179688
    6. 'next' → logprob: -10.380050659179688
    7. ' neuf' → logprob: -12.005050659179688
    8. ' next' → logprob: -12.255050659179688
    9. '  ' → logprob: -12.630050659179688
    10. 'pow' → logprob: -12.755050659179688

Token 416: ' suivante' (ID: 107439)
  Prédit: 'su'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'su' → logprob: -0.08514014631509781
    2. ' suivante' → logprob: -2.5851402282714844
    3. '9' → logprob: -5.210140228271484
    4. ' ' → logprob: -8.335140228271484
    5. '```' → logprob: -8.835140228271484
    6. ' su' → logprob: -9.335140228271484
    7. ' ' → logprob: -9.710140228271484
    8. '   ' → logprob: -9.710140228271484
    9. 's' → logprob: -9.960140228271484
    10. ' suivant' → logprob: -10.210140228271484

Token 417: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20781999826431274
    2. '<|end|>' → logprob: -2.207819938659668
    3. '   ' → logprob: -3.082819938659668
    4. '    
' → logprob: -3.832819938659668
    5. 'n' → logprob: -5.957819938659668
    6. '

' → logprob: -6.207819938659668
    7. '  
' → logprob: -6.582819938659668
    8. 'nums' → logprob: -7.082819938659668
    9. '\n' → logprob: -7.207819938659668
    10. '<|end|>' → logprob: -7.832819938659668

Token 418: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7143311500549316
    2. 'nums' → logprob: -0.9643311500549316
    3. '    
' → logprob: -3.2143311500549316
    4. '
' → logprob: -3.4643311500549316
    5. ' nums' → logprob: -3.7143311500549316
    6. ' 
' → logprob: -4.839331150054932
    7. '  
' → logprob: -5.214331150054932
    8. 'n' → logprob: -5.339331150054932
    9. '<|end|>' → logprob: -5.464331150054932
    10. '\n' → logprob: -5.839331150054932

Token 419: ' #' (ID: 1069)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.11998353898525238
    2. '   ' → logprob: -2.244983434677124
    3. '    
' → logprob: -5.744983673095703
    4. 'n' → logprob: -6.494983673095703
    5. ' nums' → logprob: -7.369983673095703
    6. 'num' → logprob: -7.619983673095703
    7. 'dp' → logprob: -7.744983673095703
    8. '
' → logprob: -8.369983673095703
    9. '(nums' → logprob: -8.869983673095703
    10. '#' (adapté à ' #') → logprob: -9.244983673095703

Token 420: ' Trie' (ID: 131955)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.09696082770824432
    2. 'dp' → logprob: -2.4719607830047607
    3. '#' → logprob: -5.97196102142334
    4. 'from' → logprob: -6.72196102142334
    5. 'for' → logprob: -7.47196102142334
    6. 'print' → logprob: -7.72196102142334
    7. 'import' → logprob: -8.09696102142334
    8. 'coins' → logprob: -8.22196102142334
    9. ' nums' → logprob: -8.47196102142334
    10. 'counts' → logprob: -8.47196102142334

Token 421: ' la' (ID: 557)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.32606950402259827
    2. ' nums' → logprob: -1.5760694742202759
    3. '()' → logprob: -3.0760695934295654
    4. '   ' → logprob: -4.201069355010986
    5. '(nums' → logprob: -4.701069355010986
    6. '()
' → logprob: -7.701069355010986
    7. 's' → logprob: -8.076069831848145
    8. '_nums' → logprob: -9.076069831848145
    9. ' ' → logprob: -9.201069831848145
    10. '(' → logprob: -9.451069831848145

Token 422: ' liste' (ID: 31719)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.0010343570029363036
    2. ' nums' → logprob: -6.876034259796143
    3. 'num' → logprob: -14.0010347366333
    4. 'Nums' → logprob: -15.3760347366333
    5. 'list' → logprob: -15.7510347366333
    6. '_nums' → logprob: -16.126033782958984
    7. '(nums' → logprob: -16.626033782958984
    8. 'numbers' → logprob: -16.876033782958984
    9. '   ' → logprob: -17.126033782958984
    10. 's' → logprob: -17.251033782958984

Token 423: ' '' (ID: 461)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.22322751581668854
    2. '(nums' → logprob: -1.9732275009155273
    3. ' nums' → logprob: -2.8482275009155273
    4. '   ' → logprob: -5.973227500915527
    5. '(' → logprob: -8.598227500915527
    6. '()' → logprob: -8.723227500915527
    7. '_nums' → logprob: -9.223227500915527
    8. 'Nums' → logprob: -10.098227500915527
    9. 's' → logprob: -10.723227500915527
    10. ',' → logprob: -11.848227500915527

Token 424: 'nums' (ID: 44465)
  Prédit: 'nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.0002043748099822551
    2. ' nums' → logprob: -8.500204086303711
    3. '(nums' → logprob: -14.125204086303711
    4. 'num' → logprob: -16.12520408630371
    5. 'Nums' → logprob: -18.62520408630371
    6. 'numbers' → logprob: -19.00020408630371
    7. '_nums' → logprob: -19.25020408630371
    8. ' ' → logprob: -20.37520408630371
    9. '```' → logprob: -20.37520408630371
    10. 'n' → logprob: -20.62520408630371

Token 425: ''' (ID: 6)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.07704523950815201
    2. ')' → logprob: -2.702045202255249
    3. '.' → logprob: -5.327045440673828
    4. ',' → logprob: -6.327045440673828
    5. '   ' → logprob: -8.452045440673828
    6. '.sorted' → logprob: -9.952045440673828
    7. ').' → logprob: -10.327045440673828
    8. '(nums' → logprob: -10.452045440673828
    9. ')
' → logprob: -10.577045440673828
    10. 'nums' → logprob: -11.327045440673828

Token 426: ' en' (ID: 469)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.175033688545227
    2. '   ' → logprob: -1.300033688545227
    3. '.sort' → logprob: -1.675033688545227
    4. 'nums' → logprob: -1.675033688545227
    5. '(nums' → logprob: -3.1750335693359375
    6. ' nums' → logprob: -7.3000335693359375
    7. ',' → logprob: -7.4250335693359375
    8. ')' → logprob: -8.300033569335938
    9. '    
' → logprob: -9.550033569335938
    10. '()' → logprob: -9.550033569335938

Token 427: ' ordre' (ID: 103061)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.21656522154808044
    2. 'place' → logprob: -1.8415652513504028
    3. 'sorted' → logprob: -4.216565132141113
    4. ' nums' → logprob: -4.966565132141113
    5. 'ordre' → logprob: -5.591565132141113
    6. ' place' → logprob: -5.591565132141113
    7. 'ascending' → logprob: -6.466565132141113
    8. 's' → logprob: -6.966565132141113
    9. '-place' → logprob: -6.966565132141113
    10. ' ascending' → logprob: -7.341565132141113

Token 428: ' décro' (ID: 176854)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.08407948911190033
    2. ' nums' → logprob: -3.4590795040130615
    3. '   ' → logprob: -3.7090795040130615
    4. '.sort' → logprob: -4.709079265594482
    5. ')' → logprob: -5.209079265594482
    6. '(nums' → logprob: -5.334079265594482
    7. 'sorted' → logprob: -6.459079265594482
    8. '.' → logprob: -6.709079265594482
    9. 'asc' → logprob: -7.459079265594482
    10. 'cro' → logprob: -8.08407974243164

Token 429: 'issant' (ID: 31359)
  Prédit: 'desc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'desc' → logprob: -1.1870924234390259
    2. 'endant' → logprob: -1.8120924234390259
    3. 'd' → logprob: -2.0620923042297363
    4. 'cro' → logprob: -2.0620923042297363
    5. 'descending' → logprob: -2.9370923042297363
    6. 'dec' → logprob: -3.8120923042297363
    7. 'ordre' → logprob: -4.312092304229736
    8. 'r' → logprob: -4.312092304229736
    9. 'de' → logprob: -4.312092304229736
    10. 's' → logprob: -4.437092304229736

Token 430: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3192259967327118
    2. 'nums' → logprob: -1.5692260265350342
    3. '(nums' → logprob: -2.819226026535034
    4. '    
' → logprob: -6.319225788116455
    5. ' nums' → logprob: -6.819225788116455
    6. '.' → logprob: -7.444225788116455
    7. '
' → logprob: -7.444225788116455
    8. ',' → logprob: -7.944225788116455
    9. ')' → logprob: -8.319226264953613
    10. '.sort' → logprob: -8.319226264953613

Token 431: 'du' (ID: 698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6105997562408447
    2. 'reverse' → logprob: -0.9855997562408447
    3. ' reverse' → logprob: -2.7355997562408447
    4. ' ,' → logprob: -4.860599517822266
    5. ')' → logprob: -5.110599517822266
    6. 'nums' → logprob: -6.110599517822266
    7. ' nums' → logprob: -6.985599517822266
    8. '(reverse' → logprob: -7.110599517822266
    9. '   ' → logprob: -7.360599517822266
    10. ' )' → logprob: -8.610599517822266

Token 432: ' plus' (ID: 2932)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6864970326423645
    2. ' ' → logprob: -2.0614969730377197
    3. ' )' → logprob: -2.0614969730377197
    4. ',' → logprob: -2.4364969730377197
    5. ' reverse' → logprob: -2.6864969730377197
    6. 'reverse' → logprob: -3.4364969730377197
    7. ']' → logprob: -4.561497211456299
    8. ' plus' → logprob: -4.561497211456299
    9. 's' → logprob: -5.061497211456299
    10. ' ]' → logprob: -5.936497211456299

Token 433: ' grand' (ID: 6363)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6761159896850586
    2. 'grand' → logprob: -1.1761159896850586
    3. ')' → logprob: -2.3011159896850586
    4. ' ' → logprob: -4.051115989685059
    5. ' grand' → logprob: -4.051115989685059
    6. '=' → logprob: -4.301115989685059
    7. ' =' → logprob: -4.551115989685059
    8. ']' → logprob: -4.926115989685059
    9. 'large' → logprob: -6.301115989685059
    10. ' ,' → logprob: -6.426115989685059

Token 434: ' au' (ID: 2791)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05309820920228958
    2. ')' → logprob: -3.053098201751709
    3. ' ,' → logprob: -6.053098201751709
    4. '),' → logprob: -7.553098201751709
    5. ',
' → logprob: -8.303098678588867
    6. ' )' → logprob: -8.428098678588867
    7. ',)' → logprob: -8.428098678588867
    8. ',n' → logprob: -8.928098678588867
    9. 'nums' → logprob: -8.928098678588867
    10. ',num' → logprob: -8.928098678588867

Token 435: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.37453746795654297
    2. ',' → logprob: -2.124537467956543
    3. ' ' → logprob: -2.874537467956543
    4. 'plus' → logprob: -3.124537467956543
    5. ')' → logprob: -3.249537467956543
    6. '   ' → logprob: -4.749537467956543
    7. ' )' → logprob: -5.249537467956543
    8. '+' → logprob: -5.374537467956543
    9. '  ' → logprob: -5.374537467956543
    10. '#' → logprob: -5.499537467956543

Token 436: ' petit' (ID: 20577)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.35003387928009033
    2. ' petit' → logprob: -1.2250338792800903
    3. 'grand' → logprob: -6.725033760070801
    4. 'small' → logprob: -9.3500337600708
    5. '```' → logprob: -9.3500337600708
    6. 'pu' → logprob: -10.2250337600708
    7. 'Petit' → logprob: -10.4750337600708
    8. ' grand' → logprob: -10.7250337600708
    9. ' small' → logprob: -10.8500337600708
    10. ' Petit' → logprob: -10.8500337600708

Token 437: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04465116932988167
    2. ')
' → logprob: -3.1696512699127197
    3. ',' → logprob: -7.169651031494141
    4. '   ' → logprob: -7.419651031494141
    5. 'nums' → logprob: -8.54465103149414
    6. ')
' → logprob: -10.29465103149414
    7. ' )' → logprob: -11.41965103149414
    8. '(nums' → logprob: -12.04465103149414
    9. ',
' → logprob: -12.16965103149414
    10. 'sorted' → logprob: -12.29465103149414

Token 438: ' pour' (ID: 1930)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.4155004918575287
    2. '   ' → logprob: -1.165500521659851
    3. '
' → logprob: -4.290500640869141
    4. ')
' → logprob: -5.790500640869141
    5. '(nums' → logprob: -5.915500640869141
    6. ')' → logprob: -5.915500640869141
    7. ',' → logprob: -6.165500640869141
    8. '    
' → logprob: -6.290500640869141
    9. ' nums' → logprob: -7.290500640869141
    10. ',
' → logprob: -8.04050064086914

Token 439: ' rendre' (ID: 44629)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.1946866810321808
    2. ' nums' → logprob: -1.8196866512298584
    3. ')' → logprob: -4.5696868896484375
    4. 'num' → logprob: -6.5696868896484375
    5. ' reverse' → logprob: -7.4446868896484375
    6. '   ' → logprob: -7.6946868896484375
    7. 'reverse' → logprob: -7.9446868896484375
    8. '_nums' → logprob: -8.319686889648438
    9. ' )' → logprob: -8.444686889648438
    10. 's' → logprob: -8.444686889648438

Token 440: ' les' (ID: 1341)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.009864931926131248
    2. ' nums' → logprob: -4.759864807128906
    3. 'reverse' → logprob: -7.134864807128906
    4. '(nums' → logprob: -8.134864807128906
    5. ' reverse' → logprob: -8.884864807128906
    6. '   ' → logprob: -11.384864807128906
    7. 'num' → logprob: -12.509864807128906
    8. '_nums' → logprob: -13.509864807128906
    9. '```' → logprob: -14.134864807128906
    10. '(reverse' → logprob: -14.384864807128906

Token 441: ' calcul' (ID: 7559)
  Prédit: ' nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.6335420608520508
    2. 'nums' → logprob: -0.7585420608520508
    3. ' ' → logprob: -8.25854206085205
    4. 'num' → logprob: -8.63354206085205
    5. 's' → logprob: -9.63354206085205
    6. '(nums' → logprob: -10.00854206085205
    7. '_nums' → logprob: -10.00854206085205
    8. ' reverse' → logprob: -10.13354206085205
    9. ')' → logprob: -10.13354206085205
    10. ' )' → logprob: -10.25854206085205

Token 442: 's' (ID: 82)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.4901895523071289
    2. '   ' → logprob: -1.990189552307129
    3. 's' → logprob: -2.240189552307129
    4. ' nums' → logprob: -2.490189552307129
    5. '#' → logprob: -3.865189552307129
    6. 'er' → logprob: -4.615189552307129
    7. 'ation' → logprob: -5.115189552307129
    8. 'tris' → logprob: -5.365189552307129
    9. '_nums' → logprob: -5.615189552307129
    10. '(nums' → logprob: -5.865189552307129

Token 443: ' potent' (ID: 35668)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.5874091386795044
    2. '(nums' → logprob: -1.0874091386795044
    3. '   ' → logprob: -2.712409019470215
    4. ' nums' → logprob: -3.462409019470215
    5. ')' → logprob: -5.212409019470215
    6. ',' → logprob: -6.837409019470215
    7. 's' → logprob: -6.962409019470215
    8. '_nums' → logprob: -6.962409019470215
    9. '(' → logprob: -8.087409019470215
    10. '()' → logprob: -8.962409019470215

Token 444: 'iellement' (ID: 70958)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.682304859161377
    2. ' nums' → logprob: -0.932304859161377
    3. '   ' → logprob: -3.182304859161377
    4. 's' → logprob: -4.557304859161377
    5. 'sorted' → logprob: -4.557304859161377
    6. '(nums' → logprob: -5.182304859161377
    7. 'orted' → logprob: -5.432304859161377
    8. 'tris' → logprob: -5.557304859161377
    9. '_nums' → logprob: -6.057304859161377
    10. 'ated' → logprob: -6.182304859161377

Token 445: ' plus' (ID: 2932)
  Prédit: ' nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nums' → logprob: -0.21268218755722046
    2. 'nums' → logprob: -1.7126822471618652
    3. ' plus' → logprob: -4.587682247161865
    4. 'plus' → logprob: -8.337681770324707
    5. ' more' → logprob: -8.837681770324707
    6. '_nums' → logprob: -8.962681770324707
    7. '(nums' → logprob: -9.212681770324707
    8. 'num' → logprob: -9.587681770324707
    9. ' optim' → logprob: -9.837681770324707
    10. ' possible' → logprob: -9.962681770324707

Token 446: ' rapides' (ID: 163697)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.17392073571681976
    2. ')' → logprob: -2.2989206314086914
    3. ',' → logprob: -3.6739206314086914
    4. ' nums' → logprob: -4.173920631408691
    5. 'sorted' → logprob: -5.923920631408691
    6. 'descending' → logprob: -5.923920631408691
    7. 's' → logprob: -6.048920631408691
    8. ']' → logprob: -6.048920631408691
    9. '_nums' → logprob: -6.423920631408691
    10. ' )' → logprob: -6.673920631408691

Token 447: '
' (ID: 198)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.26423972845077515
    2. '   ' → logprob: -2.26423978805542
    3. '
' → logprob: -2.51423978805542
    4. '(nums' → logprob: -4.26423978805542
    5. ')' → logprob: -4.38923978805542
    6. ')
' → logprob: -5.01423978805542
    7. ',' → logprob: -5.38923978805542
    8. '    
' → logprob: -6.01423978805542
    9. ',
' → logprob: -6.51423978805542
    10. ' nums' → logprob: -6.76423978805542

Token 448: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25295403599739075
    2. 'nums' → logprob: -1.5029540061950684
    3. ' nums' → logprob: -7.002954006195068
    4. '(nums' → logprob: -9.877954483032227
    5. '
' → logprob: -10.127954483032227
    6. '    
' → logprob: -11.127954483032227
    7. '  ' → logprob: -12.877954483032227
    8. ' ' → logprob: -13.502954483032227
    9. '```' → logprob: -13.502954483032227
    10. ',' → logprob: -13.877954483032227

Token 449: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' (adapté à ' nums') → logprob: -0.008428522385656834
    2. '   ' → logprob: -5.133428573608398
    3. ' nums' → logprob: -6.008428573608398
    4. '(nums' → logprob: -10.508428573608398
    5. ')' → logprob: -13.008428573608398
    6. '    
' → logprob: -13.008428573608398
    7. ',' → logprob: -13.508428573608398
    8. '_nums' → logprob: -14.008428573608398
    9. '.' → logprob: -14.133428573608398
    10. 'num' → logprob: -14.258428573608398

Token 450: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.01815696805715561
    2. '.' → logprob: -4.018157005310059
    3. '.=' → logprob: -13.143157005310059
    4. '.s' → logprob: -13.268157005310059
    5. '.reverse' → logprob: -13.268157005310059
    6. 'sort' → logprob: -14.268157005310059
    7. '=' → logprob: -15.393157005310059
    8. '.Sort' → logprob: -15.393157005310059
    9. '.sorted' → logprob: -15.393157005310059
    10. ' .' → logprob: -15.518157005310059

Token 451: '(reverse' (ID: 110806)
  Prédit: '(reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.0009224193054251373
    2. 'reverse' → logprob: -7.000922203063965
    3. '(' → logprob: -11.500922203063965
    4. ' reverse' → logprob: -14.875922203063965
    5. '.reverse' → logprob: -15.500922203063965
    6. '_reverse' → logprob: -16.12592315673828
    7. 'Reverse' → logprob: -16.75092315673828
    8. '(re' → logprob: -17.37592315673828
    9. '(key' → logprob: -17.37592315673828
    10. '()' → logprob: -18.75092315673828

Token 452: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.008620131760835648
    2. '=' → logprob: -4.758620262145996
    3. '=
' → logprob: -12.508620262145996
    4. 'True' → logprob: -14.383620262145996
    5. ' =' → logprob: -14.883620262145996
    6. ')' → logprob: -15.008620262145996
    7. ')=' → logprob: -15.258620262145996
    8. '=T' → logprob: -15.508620262145996
    9. '=

' → logprob: -15.758620262145996
    10. ' True' → logprob: -17.13361930847168

Token 453: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1160349458805285e-05
    2. ')
' → logprob: -11.625011444091797
    3. ' )' → logprob: -13.250011444091797
    4. '   ' → logprob: -16.375011444091797
    5. ')

' → logprob: -16.625011444091797
    6. ')#' → logprob: -17.000011444091797
    7. ')`' → logprob: -17.000011444091797
    8. '<|end|>' → logprob: -17.500011444091797
    9. '),' → logprob: -17.625011444091797
    10. '))' → logprob: -18.125011444091797

Token 454: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29527702927589417
    2. 'dp' → logprob: -1.4202769994735718
    3. '<|end|>' → logprob: -5.170277118682861
    4. ' dp' → logprob: -5.670277118682861
    5. '    
' → logprob: -6.920277118682861
    6. 'n' → logprob: -7.295277118682861
    7. ' ' → logprob: -8.045276641845703
    8. '  ' → logprob: -8.170276641845703
    9. '	dp' → logprob: -8.170276641845703
    10. 'd' → logprob: -8.295276641845703

Token 455: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.004585226532071829
    2. ' dp' → logprob: -6.504585266113281
    3. '   ' → logprob: -6.879585266113281
    4. 'count' → logprob: -7.629585266113281
    5. 'dist' → logprob: -8.004585266113281
    6. 'coins' → logprob: -8.879585266113281
    7. 'memo' → logprob: -9.004585266113281
    8. 'd' → logprob: -9.254585266113281
    9. 'm' → logprob: -9.254585266113281
    10. 'min' → logprob: -9.254585266113281

Token 456: ' Initialise' (ID: 179601)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0012122603366151452
    2. '#' → logprob: -8.251212120056152
    3. 'from' → logprob: -8.251212120056152
    4. 'for' → logprob: -8.876212120056152
    5. 'dist' → logprob: -9.001212120056152
    6. 'coins' → logprob: -9.251212120056152
    7. 'memo' → logprob: -9.626212120056152
    8. 'count' → logprob: -9.751212120056152
    9. 'res' → logprob: -10.251212120056152
    10. 'import' → logprob: -10.751212120056152

Token 457: ' une' (ID: 2463)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.01568026840686798
    2. ' dp' → logprob: -4.265680313110352
    3. 'count' → logprob: -7.390680313110352
    4. 'res' → logprob: -8.640680313110352
    5. 'ans' → logprob: -8.765680313110352
    6. 'min' → logprob: -8.890680313110352
    7. 'dist' → logprob: -9.390680313110352
    8. 'cnt' → logprob: -9.890680313110352
    9. 'result' → logprob: -10.265680313110352
    10. 'a' → logprob: -10.265680313110352

Token 458: ' liste' (ID: 31719)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.010267253033816814
    2. ' dp' → logprob: -4.88526725769043
    3. 'count' → logprob: -6.76026725769043
    4. 'min' → logprob: -8.01026725769043
    5. 'dist' → logprob: -8.63526725769043
    6. 'c' → logprob: -8.63526725769043
    7. 'from' → logprob: -8.76026725769043
    8. 'cnt' → logprob: -9.13526725769043
    9. 'for' → logprob: -9.51026725769043
    10. 'memo' → logprob: -9.63526725769043

Token 459: ' '' (ID: 461)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5061426162719727
    2. ' dp' → logprob: -1.1311426162719727
    3. '(dp' → logprob: -2.8811426162719727
    4. ' des' → logprob: -5.131142616271973
    5. '_dp' → logprob: -5.131142616271973
    6. ' =' → logprob: -6.631142616271973
    7. 'dist' → logprob: -6.881142616271973
    8. '[' → logprob: -7.256142616271973
    9. '	dp' → logprob: -7.506142616271973
    10. ' de' → logprob: -8.006142616271973

Token 460: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -6.217951886355877e-05
    2. 'dist' → logprob: -10.375061988830566
    3. ' dp' → logprob: -11.375061988830566
    4. 'res' → logprob: -12.250061988830566
    5. 'memo' → logprob: -12.750061988830566
    6. 'count' → logprob: -13.500061988830566
    7. 'ans' → logprob: -13.500061988830566
    8. 'cost' → logprob: -13.625061988830566
    9. 'd' → logprob: -13.875061988830566
    10. 'min' → logprob: -14.000061988830566

Token 461: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0005703099304810166
    2. '=' → logprob: -7.500570297241211
    3. ']' → logprob: -12.000570297241211
    4. ')' → logprob: -12.375570297241211
    5. ' ' → logprob: -12.750570297241211
    6. '=[' → logprob: -14.125570297241211
    7. ' =[' → logprob: -14.750570297241211
    8. ',' → logprob: -14.875570297241211
    9. '[]' → logprob: -15.000570297241211
    10. '[' → logprob: -15.000570297241211

Token 462: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002107552019879222
    2. '=' → logprob: -6.252107620239258
    3. ' =[' → logprob: -9.252107620239258
    4. '=[' → logprob: -10.002107620239258
    5. '[' → logprob: -10.877107620239258
    6. ' =
' → logprob: -11.877107620239258
    7. '   ' → logprob: -12.002107620239258
    8. ' ' → logprob: -13.002107620239258
    9. ',' → logprob: -13.127107620239258
    10. ' [' → logprob: -15.627107620239258

Token 463: ' la' (ID: 557)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.12918910384178162
    2. '[' → logprob: -2.8791890144348145
    3. ' n' → logprob: -3.8791890144348145
    4. 'n' → logprob: -4.2541890144348145
    5. ' [' → logprob: -4.3791890144348145
    6. ' range' → logprob: -4.6291890144348145
    7. 'range' → logprob: -5.0041890144348145
    8. '   ' → logprob: -7.2541890144348145
    9. '[i' → logprob: -8.504189491271973
    10. '(n' → logprob: -9.129189491271973

Token 464: ' programmation' (ID: 166376)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.43215039372444153
    2. ' n' → logprob: -1.3071503639221191
    3. ' range' → logprob: -3.307150363922119
    4. '[n' → logprob: -3.807150363922119
    5. 'range' → logprob: -4.932150363922119
    6. '[' → logprob: -5.057150363922119
    7. ' [' → logprob: -5.057150363922119
    8. '(n' → logprob: -8.307150840759277
    9. 'dp' → logprob: -8.557150840759277
    10. '=[' → logprob: -8.807150840759277

Token 465: ' dynamique' (ID: 98708)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.99471515417099
    2. '[' → logprob: -1.2447152137756348
    3. ' dp' → logprob: -2.6197152137756348
    4. ' dynamic' → logprob: -2.8697152137756348
    5. '[]' → logprob: -2.8697152137756348
    6. ' =' → logprob: -2.9947152137756348
    7. '   ' → logprob: -3.4947152137756348
    8. '[n' → logprob: -3.7447152137756348
    9. 'dynamic' → logprob: -4.369715213775635
    10. ' dynamique' → logprob: -4.869715213775635

Token 466: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010350903496146202
    2. '=' → logprob: -4.635350704193115
    3. '   ' → logprob: -8.135351181030273
    4. 'dp' → logprob: -8.510351181030273
    5. '=[' → logprob: -9.760351181030273
    6. ' =[' → logprob: -11.135351181030273
    7. ' ' → logprob: -11.885351181030273
    8. '(dp' → logprob: -12.135351181030273
    9. ',' → logprob: -12.635351181030273
    10. ' dp' → logprob: -13.010351181030273

Token 467: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04891037568449974
    2. '=' → logprob: -3.04891037940979
    3. '=[' → logprob: -8.923910140991211
    4. ' =[' → logprob: -9.923910140991211
    5. 'dp' → logprob: -10.048910140991211
    6. '[' → logprob: -10.173910140991211
    7. '   ' → logprob: -10.548910140991211
    8. ',' → logprob: -10.798910140991211
    9. ' dp' → logprob: -12.673910140991211
    10. ' =
' → logprob: -12.798910140991211

Token 468: ' #' (ID: 1069)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0925678163766861
    2. 'dp' → logprob: -2.8425679206848145
    3. '=' → logprob: -3.5925679206848145
    4. ' dp' → logprob: -6.2175679206848145
    5. '=[' → logprob: -8.217567443847656
    6. '[' → logprob: -8.842567443847656
    7. '   ' → logprob: -9.217567443847656
    8. ' =[' → logprob: -10.717567443847656
    9. ']' → logprob: -10.967567443847656
    10. '_dp' → logprob: -11.092567443847656

Token 469: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6510144472122192
    2. ' dp' → logprob: -0.7760144472122192
    3. ' [' → logprob: -4.40101432800293
    4. '[' → logprob: -5.15101432800293
    5. '   ' → logprob: -9.02601432800293
    6. ' ' → logprob: -10.90101432800293
    7. '	dp' → logprob: -11.27601432800293
    8. 'd' → logprob: -11.40101432800293
    9. '_dp' → logprob: -11.90101432800293
    10. ' d' → logprob: -12.52601432800293

Token 470: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04302465170621872
    2. '=' → logprob: -3.1680245399475098
    3. ' ' → logprob: -11.293025016784668
    4. '[' → logprob: -11.918025016784668
    5. '=[' → logprob: -13.043025016784668
    6. ']' → logprob: -13.418025016784668
    7. ' =[' → logprob: -13.418025016784668
    8. ')' → logprob: -14.668025016784668
    9. '.' → logprob: -15.668025016784668
    10. ',' → logprob: -15.918025016784668

Token 471: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0023191531654447317
    2. ' =' → logprob: -6.5023193359375
    3. ' ]' → logprob: -7.3773193359375
    4. '=' → logprob: -9.1273193359375
    5. ']=' → logprob: -9.6273193359375
    6. '']' → logprob: -12.2523193359375
    7. ')' → logprob: -13.1273193359375
    8. '
' → logprob: -13.8773193359375
    9. ' ' → logprob: -13.8773193359375
    10. ':' → logprob: -14.2523193359375

Token 472: ' représent' (ID: 42664)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740826487541199
    2. '=' → logprob: -0.9740826487541199
    3. '=[' → logprob: -12.724082946777344
    4. ' =[' → logprob: -13.724082946777344
    5. ']' → logprob: -14.974082946777344
    6. ',' → logprob: -15.224082946777344
    7. ' ' → logprob: -15.474082946777344
    8. '=i' → logprob: -15.974082946777344
    9. '=
' → logprob: -15.974082946777344
    10. '=[]' → logprob: -16.224082946777344

Token 473: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00015157493180595338
    2. 'ant' → logprob: -9.625151634216309
    3. 'er' → logprob: -10.125151634216309
    4. 'ent' → logprob: -10.375151634216309
    5. '=' → logprob: -12.625151634216309
    6. 'es' → logprob: -12.750151634216309
    7. 'é' → logprob: -13.000151634216309
    8. '```' → logprob: -13.750151634216309
    9. 'ate' → logprob: -14.250151634216309
    10. '[' → logprob: -14.750151634216309

Token 474: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.18218256533145905
    2. 'le' → logprob: -2.932182550430298
    3. ' la' → logprob: -2.932182550430298
    4. ' i' → logprob: -3.307182550430298
    5. 'i' → logprob: -4.182182788848877
    6. ' l' → logprob: -5.807182788848877
    7. 'l' → logprob: -6.307182788848877
    8. 'la' → logprob: -7.057182788848877
    9. ' True' → logprob: -7.057182788848877
    10. ' the' → logprob: -7.307182788848877

Token 475: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.3992989957332611
    2. 'nombre' → logprob: -1.6492990255355835
    3. ' minimum' → logprob: -2.399298906326294
    4. 'i' → logprob: -4.524299144744873
    5. 'minimum' → logprob: -4.524299144744873
    6. ' i' → logprob: -4.649299144744873
    7. '0' → logprob: -5.774299144744873
    8. ' number' → logprob: -6.274299144744873
    9. '"' → logprob: -6.274299144744873
    10. ' min' → logprob: -6.649299144744873

Token 476: ' minimal' (ID: 19957)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16716451942920685
    2. '=' → logprob: -2.9171645641326904
    3. '[' → logprob: -3.6671645641326904
    4. '_' → logprob: -4.167164325714111
    5. '[]' → logprob: -4.292164325714111
    6. ' ' → logprob: -4.417164325714111
    7. '[i' → logprob: -4.667164325714111
    8. ' de' → logprob: -4.917164325714111
    9. '   ' → logprob: -5.792164325714111
    10. 's' → logprob: -5.917164325714111

Token 477: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.34989550709724426
    2. ' des' → logprob: -1.7248954772949219
    3. ' d' → logprob: -2.599895477294922
    4. ' ' → logprob: -4.224895477294922
    5. '_' → logprob: -5.099895477294922
    6. '[]' → logprob: -5.224895477294922
    7. '[' → logprob: -5.474895477294922
    8. ' =' → logprob: -6.099895477294922
    9. '_des' → logprob: -6.099895477294922
    10. '  ' → logprob: -6.224895477294922

Token 478: ' pièces' (ID: 49165)
  Prédit: 'coins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coins' → logprob: -0.9195255637168884
    2. ' i' → logprob: -1.7945256233215332
    3. ' coins' → logprob: -1.9195256233215332
    4. 'i' → logprob: -2.669525623321533
    5. 'steps' → logprob: -2.794525623321533
    6. 'pieces' → logprob: -3.544525623321533
    7. ' pieces' → logprob: -3.544525623321533
    8. ' steps' → logprob: -3.669525623321533
    9. 'tokens' → logprob: -4.294525623321533
    10. ' pièces' → logprob: -4.669525623321533

Token 479: ' requ' (ID: 7028)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22042270004749298
    2. ' nécessaires' → logprob: -2.2204227447509766
    3. ' nécessaire' → logprob: -3.7204227447509766
    4. ' pour' → logprob: -4.470422744750977
    5. '[' → logprob: -4.845422744750977
    6. ' ' → logprob: -4.970422744750977
    7. '_' → logprob: -5.220422744750977
    8. '   ' → logprob: -5.345422744750977
    9. '  ' → logprob: -5.345422744750977
    10. ' needed' → logprob: -5.845422744750977

Token 480: 'ises' (ID: 5555)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6638692021369934
    2. ' pour' → logprob: -2.6638691425323486
    3. '   ' → logprob: -2.7888691425323486
    4. '=' → logprob: -3.0388691425323486
    5. 'pour' → logprob: -3.2888691425323486
    6. 'uire' → logprob: -3.4138691425323486
    7. 's' → logprob: -3.4138691425323486
    8. 'i' → logprob: -3.4138691425323486
    9. ']' → logprob: -3.9138691425323486
    10. 'és' → logprob: -4.038869380950928

Token 481: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7402568459510803
    2. ' for' → logprob: -0.7402568459510803
    3. 'for' → logprob: -4.3652567863464355
    4. ' =' → logprob: -4.4902567863464355
    5. 'dp' → logprob: -4.9902567863464355
    6. '[' → logprob: -5.3652567863464355
    7. ' dp' → logprob: -5.4902567863464355
    8. '=' → logprob: -6.6152567863464355
    9. ',' → logprob: -6.7402567863464355
    10. '[i' → logprob: -6.8652567863464355

Token 482: ' former' (ID: 9254)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14360979199409485
    2. ' ' → logprob: -3.1436097621917725
    3. 'i' → logprob: -3.3936097621917725
    4. ' atteindre' → logprob: -4.018610000610352
    5. ' obtenir' → logprob: -4.518610000610352
    6. ' représ' → logprob: -5.018610000610352
    7. ' couvrir' → logprob: -5.393610000610352
    8. ' assembler' → logprob: -5.518610000610352
    9. ' form' → logprob: -6.143610000610352
    10. ' ' → logprob: -6.268610000610352

Token 483: ' le' (ID: 505)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3134799003601074
    2. 'i' → logprob: -1.3134799003601074
    3. '   ' → logprob: -9.563480377197266
    4. ' n' → logprob: -9.813480377197266
    5. ' ' → logprob: -10.438480377197266
    6. '[i' → logprob: -10.813480377197266
    7. '(i' → logprob: -10.938480377197266
    8. 'n' → logprob: -11.438480377197266
    9. ' (' → logprob: -12.313480377197266
    10. ' =' → logprob: -13.313480377197266

Token 484: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1798974871635437
    2. ' i' → logprob: -1.8048975467681885
    3. '   ' → logprob: -9.67989730834961
    4. ' ' → logprob: -10.05489730834961
    5. ' number' → logprob: -11.05489730834961
    6. '    ' → logprob: -11.80489730834961
    7. 'number' → logprob: -11.92989730834961
    8. 'n' → logprob: -12.67989730834961
    9. '[i' → logprob: -13.42989730834961
    10. '  ' → logprob: -13.42989730834961

Token 485: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011161359027028084
    2. 'i' → logprob: -4.5111613273620605
    3. '   ' → logprob: -9.636161804199219
    4. ' ' → logprob: -10.636161804199219
    5. '[i' → logprob: -11.886161804199219
    6. ' =' → logprob: -12.511161804199219
    7. '(i' → logprob: -12.511161804199219
    8. ' (' → logprob: -12.886161804199219
    9. ' de' → logprob: -13.636161804199219
    10. '  ' → logprob: -13.886161804199219

Token 486: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05580998957157135
    2. '=' → logprob: -2.93080997467041
    3. '[' → logprob: -8.55580997467041
    4. ',' → logprob: -8.68080997467041
    5. ' ' → logprob: -8.80580997467041
    6. 'dp' → logprob: -8.80580997467041
    7. '   ' → logprob: -9.55580997467041
    8. ' =
' → logprob: -10.05580997467041
    9. '.' → logprob: -10.55580997467041
    10. '
' → logprob: -10.68080997467041

Token 487: '   ' (ID: 271)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0803450271487236
    2. '=' → logprob: -2.5803449153900146
    3. ' =
' → logprob: -7.830345153808594
    4. '   ' → logprob: -7.830345153808594
    5. '=[' → logprob: -8.330345153808594
    6. '[' → logprob: -8.955345153808594
    7. '=
' → logprob: -9.330345153808594
    8. 'dp' → logprob: -9.705345153808594
    9. ' =[' → logprob: -10.330345153808594
    10. ',' → logprob: -10.705345153808594

Token 488: ' #' (ID: 1069)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.2798941731452942
    2. 'dp' → logprob: -1.6548941135406494
    3. '   ' → logprob: -3.5298941135406494
    4. ' ' → logprob: -4.1548943519592285
    5. 'd' → logprob: -5.9048943519592285
    6. '[' → logprob: -6.5298943519592285
    7. ' =' → logprob: -6.6548943519592285
    8. ' 
' → logprob: -7.2798943519592285
    9. '	dp' → logprob: -7.9048943519592285
    10. '
' → logprob: -8.27989387512207

Token 489: ' On' (ID: 2160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.024289339780807495
    2. ' dp' → logprob: -3.77428936958313
    3. '   ' → logprob: -6.899289131164551
    4. '	dp' → logprob: -10.52428913116455
    5. 'd' → logprob: -12.27428913116455
    6. ' ' → logprob: -13.52428913116455
    7. '
' → logprob: -13.89928913116455
    8. '_dp' → logprob: -14.39928913116455
    9. '(dp' → logprob: -15.52428913116455
    10. '.dp' → logprob: -16.149290084838867

Token 490: ' initialise' (ID: 145250)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1818653792142868
    2. '=' → logprob: -1.8068653345108032
    3. ' ' → logprob: -7.306865215301514
    4. '_' → logprob: -7.556865215301514
    5. '[' → logprob: -8.181865692138672
    6. 'n' → logprob: -9.056865692138672
    7. 'dp' → logprob: -9.181865692138672
    8. ' dp' → logprob: -9.431865692138672
    9. ')' → logprob: -10.056865692138672
    10. 'for' → logprob: -10.056865692138672

Token 491: ' dp' (ID: 21546)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4284045696258545
    2. ' dp' → logprob: -1.8034045696258545
    3. 'dp' → logprob: -2.4284045696258545
    4. '[' → logprob: -2.4284045696258545
    5. '([' → logprob: -6.178404808044434
    6. '(dp' → logprob: -6.553404808044434
    7. ' (' → logprob: -6.928404808044434
    8. '   ' → logprob: -7.303404808044434
    9. '[n' → logprob: -7.303404808044434
    10. ' =' → logprob: -7.678404808044434

Token 492: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009591871872544289
    2. '=' → logprob: -4.759592056274414
    3. '[' → logprob: -7.259592056274414
    4. '=[' → logprob: -8.759592056274414
    5. ' =[' → logprob: -10.259592056274414
    6. '   ' → logprob: -10.759592056274414
    7. ' ' → logprob: -11.134592056274414
    8. ']' → logprob: -11.384592056274414
    9. ',' → logprob: -12.009592056274414
    10. ' =
' → logprob: -12.634592056274414

Token 493: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01783534325659275
    2. ' =' → logprob: -4.7678351402282715
    3. '=' → logprob: -5.2678351402282715
    4. ']=' → logprob: -5.8928351402282715
    5. ' ]' → logprob: -6.7678351402282715
    6. '[' → logprob: -11.26783561706543
    7. ')' → logprob: -11.64283561706543
    8. ',' → logprob: -11.76783561706543
    9. ' for' → logprob: -11.76783561706543
    10. 's' → logprob: -11.89283561706543

Token 494: ' avec' (ID: 3937)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01369104441255331
    2. '=' → logprob: -4.388690948486328
    3. '[' → logprob: -7.388690948486328
    4. '=[' → logprob: -7.763690948486328
    5. ' =[' → logprob: -9.513690948486328
    6. ' ' → logprob: -10.763690948486328
    7. 's' → logprob: -11.388690948486328
    8. '[:]' → logprob: -11.888690948486328
    9. ',' → logprob: -12.138690948486328
    10. ']' → logprob: -12.513690948486328

Token 495: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5047889351844788
    2. 'n' → logprob: -1.504788875579834
    3. ' float' → logprob: -2.629788875579834
    4. ' [' → logprob: -3.254788875579834
    5. 'float' → logprob: -3.379788875579834
    6. '[n' → logprob: -4.254788875579834
    7. '[' → logprob: -5.004788875579834
    8. ' i' → logprob: -5.504788875579834
    9. 'i' → logprob: -5.879788875579834
    10. '[i' → logprob: -7.004788875579834

Token 496: ' valeur' (ID: 41664)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.12459166347980499
    2. 'n' → logprob: -2.749591588973999
    3. ' float' → logprob: -3.624591588973999
    4. 'i' → logprob: -3.749591588973999
    5. '0' → logprob: -7.374591827392578
    6. 'inf' → logprob: -7.624591827392578
    7. ' i' → logprob: -7.874591827392578
    8. '100' → logprob: -7.874591827392578
    9. ' n' → logprob: -8.499591827392578
    10. 'None' → logprob: -8.874591827392578

Token 497: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7466140389442444
    2. ' float' → logprob: -1.2466139793395996
    3. ' n' → logprob: -1.6216139793395996
    4. 'i' → logprob: -3.8716139793395996
    5. 'n' → logprob: -4.8716139793396
    6. 'float' → logprob: -4.8716139793396
    7. ' ' → logprob: -5.9966139793396
    8. ' sys' → logprob: -7.1216139793396
    9. '   ' → logprob: -7.6216139793396
    10. '    ' → logprob: -7.6216139793396

Token 498: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9715771675109863
    2. '   ' → logprob: -1.4715771675109863
    3. '[' → logprob: -1.9715771675109863
    4. ' +' → logprob: -2.7215771675109863
    5. 'for' → logprob: -2.9715771675109863
    6. ' for' → logprob: -3.2215771675109863
    7. ' ' → logprob: -3.9715771675109863
    8. '
' → logprob: -4.346577167510986
    9. 'dp' → logprob: -4.346577167510986
    10. '=' → logprob: -4.346577167510986

Token 499: ' ce' (ID: 2357)
  Prédit: ' car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' car' → logprob: -1.2594871520996094
    2. ' 
' → logprob: -1.7594871520996094
    3. ' ' → logprob: -1.8844871520996094
    4. '   ' → logprob: -3.1344871520996094
    5. ' as' → logprob: -3.1344871520996094
    6. ' "' → logprob: -3.5094871520996094
    7. ' for' → logprob: -3.6344871520996094
    8. '   
' → logprob: -3.6344871520996094
    9. ' since' → logprob: -3.7594871520996094
    10. ' pour' → logprob: -3.8844871520996094

Token 500: ' qui' (ID: 2780)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -1.6314252614974976
    2. ' ' → logprob: -1.8814252614974976
    3. ''' → logprob: -2.006425380706787
    4. ' space' → logprob: -2.131425380706787
    5. '[' → logprob: -2.756425380706787
    6. ' is' → logprob: -3.381425380706787
    7. 'space' → logprob: -3.506425380706787
    8. '#' → logprob: -3.631425380706787
    9. ''s' → logprob: -4.006425380706787
    10. ' n' → logprob: -4.006425380706787

Token 501: ' correspond' (ID: 11095)
  Prédit: ' signifie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' signifie' → logprob: -0.6654360890388489
    2. ' est' → logprob: -1.915436029434204
    3. ' correspond' → logprob: -1.915436029434204
    4. ' corresponds' → logprob: -2.290436029434204
    5. ' représente' → logprob: -3.665436029434204
    6. ' ' → logprob: -4.290436267852783
    7. ' is' → logprob: -4.915436267852783
    8. ' means' → logprob: -5.040436267852783
    9. ' #' → logprob: -5.290436267852783
    10. ' represents' → logprob: -5.415436267852783

Token 502: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.35525035858154297
    2. ' to' → logprob: -1.855250358581543
    3. ' au' → logprob: -3.355250358581543
    4. '<|end|>' → logprob: -3.355250358581543
    5. ' ' → logprob: -3.480250358581543
    6. ' a' → logprob: -3.605250358581543
    7. ' aux' → logprob: -4.980250358581543
    8. 'to' → logprob: -5.480250358581543
    9. '<|end|>' → logprob: -7.605250358581543
    10. ' ' → logprob: -7.730250358581543

Token 503: ' cas' (ID: 2108)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.3710307478904724
    2. ' i' → logprob: -1.9960308074951172
    3. ' '' → logprob: -2.746030807495117
    4. ' maximum' → logprob: -3.746030807495117
    5. ' plus' → logprob: -3.996030807495117
    6. 'i' → logprob: -4.121030807495117
    7. 'nombre' → logprob: -4.621030807495117
    8. ' "' → logprob: -4.996030807495117
    9. ' minimum' → logprob: -5.371030807495117
    10. ' code' → logprob: -5.371030807495117

Token 504: ' où' (ID: 15113)
  Prédit: ' où'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' où' → logprob: -0.5033688545227051
    2. ' where' → logprob: -1.878368854522705
    3. ' de' → logprob: -2.003368854522705
    4. 'où' → logprob: -3.378368854522705
    5. ' ' → logprob: -3.628368854522705
    6. ' d' → logprob: -3.878368854522705
    7. ' i' → logprob: -4.753368854522705
    8. '   ' → logprob: -5.003368854522705
    9. '  ' → logprob: -6.878368854522705
    10. 'd' → logprob: -6.878368854522705

Token 505: ' on' (ID: 402)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.032318245619535446
    2. 'i' → logprob: -3.907318353652954
    3. ' ' → logprob: -5.657318115234375
    4. ' '' → logprob: -5.782318115234375
    5. ' dp' → logprob: -6.907318115234375
    6. ''' → logprob: -7.032318115234375
    7. ''i' → logprob: -7.407318115234375
    8. ' we' → logprob: -7.532318115234375
    9. '    ' → logprob: -8.157318115234375
    10. 's' → logprob: -8.407318115234375

Token 506: ' ne' (ID: 453)
  Prédit: ' utilise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilise' → logprob: -0.1535690277814865
    2. ' utiliser' → logprob: -2.653568983078003
    3. ''util' → logprob: -4.028569221496582
    4. 'util' → logprob: -4.778569221496582
    5. ''utiliser' → logprob: -4.903569221496582
    6. ' chois' → logprob: -5.903569221496582
    7. ' utilis' → logprob: -5.903569221496582
    8. ' i' → logprob: -6.403569221496582
    9. ' use' → logprob: -6.528569221496582
    10. ' le' → logprob: -6.528569221496582

Token 507: ' pourrait' (ID: 39622)
  Prédit: ' utilise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilise' → logprob: -0.9085789322853088
    2. 'util' → logprob: -1.783578872680664
    3. ''util' → logprob: -2.283578872680664
    4. 'f' → logprob: -2.783578872680664
    5. '<|end|>' → logprob: -3.783578872680664
    6. ' use' → logprob: -3.908578872680664
    7. ' utiliser' → logprob: -4.158578872680664
    8. '’util' → logprob: -4.283578872680664
    9. ''use' → logprob: -4.408578872680664
    10. '_util' → logprob: -4.408578872680664

Token 508: ' utiliser' (ID: 43227)
  Prédit: ' utiliser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utiliser' → logprob: -0.386403352022171
    2. ' pas' → logprob: -1.3864033222198486
    3. 'pas' → logprob: -2.7614033222198486
    4. 'util' → logprob: -6.136403560638428
    5. ''utiliser' → logprob: -6.386403560638428
    6. 'u' → logprob: -8.01140308380127
    7. ' utilizar' → logprob: -8.13640308380127
    8. 't' → logprob: -8.26140308380127
    9. ' compter' → logprob: -8.38640308380127
    10. '’utiliser' → logprob: -8.38640308380127

Token 509: ' que' (ID: 661)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.6341759562492371
    2. ' ' → logprob: -1.1341760158538818
    3. '1' → logprob: -3.384176015853882
    4. ' i' → logprob: -3.634176015853882
    5. ''' → logprob: -3.759176015853882
    6. ' '' → logprob: -3.884176015853882
    7. 'des' → logprob: -4.884175777435303
    8. ' l' → logprob: -5.134175777435303
    9. ' une' → logprob: -5.259175777435303
    10. ' a' → logprob: -5.759175777435303

Token 510: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.20445503294467926
    2. '1' → logprob: -2.3294551372528076
    3. ' l' → logprob: -3.2044551372528076
    4. 'des' → logprob: -4.0794548988342285
    5. ' une' → logprob: -4.7044548988342285
    6. ' ' → logprob: -4.8294548988342285
    7. 'l' → logprob: -5.0794548988342285
    8. ' '' → logprob: -6.4544548988342285
    9. ' un' → logprob: -6.9544548988342285
    10. 'une' → logprob: -7.3294548988342285

Token 511: ' pièces' (ID: 49165)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6979011297225952
    2. ' ' → logprob: -0.6979011297225952
    3. ' '' → logprob: -6.947901248931885
    4. ' ones' → logprob: -7.072901248931885
    5. ' coins' → logprob: -7.447901248931885
    6. 'coins' → logprob: -8.072900772094727
    7. ''' → logprob: -8.322900772094727
    8. ' pièces' → logprob: -8.572900772094727
    9. ' pieces' → logprob: -8.572900772094727
    10. ' "' → logprob: -8.697900772094727

Token 512: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7509143352508545
    2. '1' → logprob: -1.3759143352508545
    3. ' d' → logprob: -2.7509143352508545
    4. ' '' → logprob: -3.0009143352508545
    5. ' =' → logprob: -3.3759143352508545
    6. ' ' → logprob: -3.3759143352508545
    7. '   ' → logprob: -4.000914573669434
    8. '[' → logprob: -4.375914573669434
    9. ' "' → logprob: -4.875914573669434
    10. '```' → logprob: -5.125914573669434

Token 513: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0054024881683290005
    2. ' ' → logprob: -5.255402565002441
    3. 'tail' → logprob: -9.130402565002441
    4. 'un' → logprob: -11.630402565002441
    5. 'value' → logprob: -11.630402565002441
    6. 'size' → logprob: -11.755402565002441
    7. 'val' → logprob: -11.880402565002441
    8. 'unit' → logprob: -12.005402565002441
    9. ' taille' → logprob: -12.380402565002441
    10. '```' → logprob: -12.880402565002441

Token 514: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001729921787045896
    2. ' ' → logprob: -6.376729965209961
    3. 'tail' → logprob: -11.501729965209961
    4. 'un' → logprob: -12.126729965209961
    5. 'size' → logprob: -12.501729965209961
    6. 'unit' → logprob: -12.876729965209961
    7. 'value' → logprob: -13.876729965209961
    8. ' taille' → logprob: -14.001729965209961
    9. '  ' → logprob: -14.126729965209961
    10. '   ' → logprob: -14.751729965209961

Token 515: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.524603545665741
    2. '
' → logprob: -1.0246036052703857
    3. '    
' → logprob: -3.3996036052703857
    4. '  
' → logprob: -5.649603366851807
    5. '   
' → logprob: -6.149603366851807
    6. ' 
' → logprob: -6.399603366851807
    7. '
' → logprob: -6.524603366851807
    8. ' ' → logprob: -6.649603366851807
    9. '\n' → logprob: -6.774603366851807
    10. 'dp' → logprob: -7.024603366851807

Token 516: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38375648856163025
    2. '   ' → logprob: -1.2587565183639526
    3. ' =' → logprob: -4.258756637573242
    4. '\n' → logprob: -5.633756637573242
    5. '    
' → logprob: -5.633756637573242
    6. 'dp' → logprob: -5.633756637573242
    7. '=' → logprob: -6.258756637573242
    8. '[' → logprob: -6.633756637573242
    9. '  
' → logprob: -6.758756637573242
    10. '\' → logprob: -6.883756637573242

Token 517: ' dp' (ID: 21546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3284984230995178
    2. '
' → logprob: -1.828498363494873
    3. 'dp' (adapté à ' dp') → logprob: -2.453498363494873
    4. ' dp' → logprob: -3.453498363494873
    5. '    
' → logprob: -7.203498363494873
    6. ' =' → logprob: -8.328498840332031
    7. ' ' → logprob: -8.453498840332031
    8. '	dp' → logprob: -8.828498840332031
    9. ' 
' → logprob: -9.078498840332031
    10. '  
' → logprob: -10.078498840332031

Token 518: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029772823676466942
    2. '=' → logprob: -3.5297727584838867
    3. '[' → logprob: -11.279772758483887
    4. ' =[' → logprob: -12.029772758483887
    5. '=[' → logprob: -12.779772758483887
    6. ' ' → logprob: -14.904772758483887
    7. ',' → logprob: -15.279772758483887
    8. ']' → logprob: -15.904772758483887
    9. '[:]' → logprob: -16.779773712158203
    10. '[i' → logprob: -16.904773712158203

Token 519: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.21833834052085876
    2. '[i' → logprob: -1.7183383703231812
    3. '[n' → logprob: -4.218338489532471
    4. '[' → logprob: -6.218338489532471
    5. '[list' → logprob: -9.843338012695312
    6. '[int' → logprob: -12.843338012695312
    7. ' list' → logprob: -13.593338012695312
    8. '[id' → logprob: -13.718338012695312
    9. '[num' → logprob: -13.968338012695312
    10. '[m' → logprob: -13.968338012695312

Token 520: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0002941095153801143
    2. '0' → logprob: -8.750293731689453
    3. ' i' → logprob: -9.000293731689453
    4. 'x' → logprob: -12.375293731689453
    5. '(i' → logprob: -12.750293731689453
    6. ']' → logprob: -13.500293731689453
    7. 'float' → logprob: -13.875293731689453
    8. 'j' → logprob: -14.000293731689453
    9. '   ' → logprob: -15.000293731689453
    10. ')i' → logprob: -15.250293731689453

Token 521: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0550004243850708
    2. 'for' → logprob: -2.9300003051757812
    3. ' ' → logprob: -9.180000305175781
    4. ']' → logprob: -12.055000305175781
    5. '
' → logprob: -12.930000305175781
    6. ' i' → logprob: -13.430000305175781
    7. '	for' → logprob: -13.680000305175781
    8. ' if' → logprob: -13.930000305175781
    9. ' 
' → logprob: -14.055000305175781
    10. '   ' → logprob: -14.180000305175781

Token 522: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.47408953309059143
    2. 'i' → logprob: -0.974089503288269
    3. '	i' → logprob: -11.974089622497559
    4. ' in' → logprob: -12.474089622497559
    5. ' ' → logprob: -14.224089622497559
    6. 'in' → logprob: -14.224089622497559
    7. '  ' → logprob: -15.224089622497559
    8. ' ' → logprob: -15.599089622497559
    9. '<|end|>' → logprob: -15.974089622497559
    10. '`' → logprob: -16.349088668823242

Token 523: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17339235544204712
    2. 'in' → logprob: -1.9233922958374023
    3. 'i' → logprob: -4.548392295837402
    4. ' i' → logprob: -6.173392295837402
    5. 'range' → logprob: -8.173392295837402
    6. ' ' → logprob: -9.423392295837402
    7. ' range' → logprob: -10.298392295837402
    8. 'n' → logprob: -11.798392295837402
    9. '  ' → logprob: -12.798392295837402
    10. 's' → logprob: -13.173392295837402

Token 524: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.15310683415737e-05
    2. ' range' → logprob: -10.750021934509277
    3. '(range' → logprob: -17.25002098083496
    4. '	range' → logprob: -18.37502098083496
    5. 'i' → logprob: -18.87502098083496
    6. 'rang' → logprob: -20.62502098083496
    7. 'in' → logprob: -20.75002098083496
    8. '   ' → logprob: -20.75002098083496
    9. ' ' → logprob: -20.87502098083496
    10. '  ' → logprob: -21.00002098083496

Token 525: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.026508698239922523
    2. '(' → logprob: -3.6515088081359863
    3. ' (' → logprob: -8.526508331298828
    4. '(
' → logprob: -12.276508331298828
    5. 'n' → logprob: -13.276508331298828
    6. ' n' → logprob: -14.151508331298828
    7. ']' → logprob: -14.151508331298828
    8. ' ' → logprob: -14.651508331298828
    9. '()' → logprob: -14.651508331298828
    10. '   ' → logprob: -14.776508331298828

Token 526: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.008650857023894787
    2. ' n' → logprob: -4.883650779724121
    3. '(n' → logprob: -7.008650779724121
    4. '   ' → logprob: -9.508650779724121
    5. '0' → logprob: -10.008650779724121
    6. ' ' → logprob: -12.008650779724121
    7. '	n' → logprob: -12.133650779724121
    8. ' (' → logprob: -12.633650779724121
    9. ')n' → logprob: -13.633650779724121
    10. '(' → logprob: -13.633650779724121

Token 527: ' *' (ID: 425)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.30682945251464844
    2. '(n' → logprob: -1.8068294525146484
    3. ' n' → logprob: -2.5568294525146484
    4. '0' → logprob: -4.681829452514648
    5. '+' → logprob: -5.431829452514648
    6. ' +' → logprob: -6.181829452514648
    7. ' (' → logprob: -6.306829452514648
    8. '(' → logprob: -6.681829452514648
    9. ' ' → logprob: -6.931829452514648
    10. '+n' → logprob: -7.431829452514648

Token 528: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.36844733357429504
    2. ' n' → logprob: -1.2434473037719727
    3. '(n' → logprob: -4.243447303771973
    4. ' (' → logprob: -5.493447303771973
    5. '10' → logprob: -7.868447303771973
    6. ' ' → logprob: -8.243447303771973
    7. '0' → logprob: -8.618447303771973
    8. '*n' → logprob: -9.493447303771973
    9. '(' → logprob: -9.993447303771973
    10. '   ' → logprob: -10.180947303771973

Token 529: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6326465606689453
    2. ' +' → logprob: -0.7576465606689453
    3. ' ' → logprob: -10.757646560668945
    4. ')' → logprob: -11.132646560668945
    5. ')]' → logprob: -12.507646560668945
    6. '   ' → logprob: -13.382646560668945
    7. '1' → logprob: -13.757646560668945
    8. 's' → logprob: -14.007646560668945
    9. ' +
' → logprob: -14.382646560668945
    10. ' )' → logprob: -14.882646560668945

Token 530: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005245260428637266
    2. ' ' → logprob: -5.255245208740234
    3. '+' → logprob: -12.255245208740234
    4. ' +' → logprob: -12.880245208740234
    5. '2' → logprob: -13.005245208740234
    6. ')' → logprob: -13.755245208740234
    7. '   ' → logprob: -15.380245208740234
    8. '  ' → logprob: -15.755245208740234
    9. ' n' → logprob: -16.130245208740234
    10. 'n' → logprob: -16.505245208740234

Token 531: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011728443205356598
    2. ' ' → logprob: -6.75117301940918
    3. '+' → logprob: -13.50117301940918
    4. ' +' → logprob: -14.87617301940918
    5. ')' → logprob: -15.25117301940918
    6. '   ' → logprob: -15.37617301940918
    7. '2' → logprob: -15.75117301940918
    8. 'n' → logprob: -16.00117301940918
    9. '  ' → logprob: -16.25117301940918
    10. ' n' → logprob: -16.62617301940918

Token 532: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0009663687669672072
    2. ' )' → logprob: -7.375966548919678
    3. ']' → logprob: -9.00096607208252
    4. ' ]' → logprob: -9.12596607208252
    5. ')' → logprob: -9.25096607208252
    6. ')]
' → logprob: -13.00096607208252
    7. ')])' → logprob: -13.00096607208252
    8. ' ])' → logprob: -13.50096607208252
    9. '])]' → logprob: -13.62596607208252
    10. ')],' → logprob: -13.75096607208252

Token 533: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.024825233966112137
    2. '   ' → logprob: -4.274825096130371
    3. ' 
' → logprob: -5.774825096130371
    4. '  
' → logprob: -5.899825096130371
    5. '    
' → logprob: -6.274825096130371
    6. '\n' → logprob: -7.149825096130371
    7. '
' → logprob: -7.274825096130371
    8. ':' → logprob: -8.149825096130371
    9. '<|end|>' → logprob: -8.399825096130371
    10. '

' → logprob: -8.899825096130371

Token 534: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03743433207273483
    2. '   ' → logprob: -4.037434101104736
    3. '\n' → logprob: -5.162434101104736
    4. '  
' → logprob: -6.037434101104736
    5. ' 
' → logprob: -6.037434101104736
    6. '[' → logprob: -6.162434101104736
    7. '
' → logprob: -6.537434101104736
    8. '    
' → logprob: -6.662434101104736
    9. '\' → logprob: -7.037434101104736
    10. ' ' → logprob: -7.162434101104736

Token 535: ' range' (ID: 3352)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.08157622814178467
    2. ' dp' → logprob: -3.206576347351074
    3. ' for' → logprob: -4.081576347351074
    4. '   ' → logprob: -4.581576347351074
    5. 'for' → logprob: -4.706576347351074
    6. ' ' → logprob: -7.831576347351074
    7. '	dp' → logprob: -7.956576347351074
    8. '
' → logprob: -7.956576347351074
    9. ' 
' → logprob: -8.456576347351074
    10. '    
' → logprob: -9.081576347351074

Token 536: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07978031039237976
    2. '(n' → logprob: -2.579780340194702
    3. '(
' → logprob: -7.329780101776123
    4. '<|end|>' → logprob: -9.579780578613281
    5. ' (' → logprob: -9.829780578613281
    6. ')' → logprob: -10.204780578613281
    7. '((' → logprob: -10.829780578613281
    8. '(

' → logprob: -11.954780578613281
    9. '(len' → logprob: -12.079780578613281
    10. '(i' → logprob: -12.204780578613281

Token 537: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1716640591621399
    2. '(' → logprob: -2.421663999557495
    3. 'n' → logprob: -3.671663999557495
    4. '0' → logprob: -4.046664237976074
    5. '1' → logprob: -4.296664237976074
    6. ')' → logprob: -4.796664237976074
    7. '(n' → logprob: -6.171664237976074
    8. ' ' → logprob: -6.671664237976074
    9. ' (' → logprob: -8.171664237976074
    10. ')n' → logprob: -8.921664237976074

Token 538: ' *' (ID: 425)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8404763340950012
    2. '(n' → logprob: -0.9654763340950012
    3. ' (' → logprob: -1.9654762744903564
    4. ')' → logprob: -3.7154762744903564
    5. ' ' → logprob: -4.7154765129089355
    6. ' *' → logprob: -5.0904765129089355
    7. '(
' → logprob: -5.9654765129089355
    8. '*' → logprob: -6.7154765129089355
    9. '   ' → logprob: -7.2154765129089355
    10. ' )' → logprob: -7.2154765129089355

Token 539: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12721377611160278
    2. ' n' → logprob: -2.377213716506958
    3. '(n' → logprob: -4.127213954925537
    4. ' ' → logprob: -5.752213954925537
    5. '(' → logprob: -5.877213954925537
    6. '<|end|>' → logprob: -6.127213954925537
    7. ')' → logprob: -7.127213954925537
    8. ' (' → logprob: -7.252213954925537
    9. ')n' → logprob: -8.502213478088379
    10. '*n' → logprob: -8.627213478088379

Token 540: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17239364981651306
    2. ' +' → logprob: -1.9223936796188354
    3. ')' → logprob: -4.422393798828125
    4. ' )' → logprob: -10.422393798828125
    5. '+)' → logprob: -10.547393798828125
    6. ',' → logprob: -11.547393798828125
    7. '[' → logprob: -12.547393798828125
    8. '   ' → logprob: -12.672393798828125
    9. '),' → logprob: -12.797393798828125
    10. '+
' → logprob: -12.922393798828125

Token 541: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004062132444232702
    2. ')' → logprob: -6.004062175750732
    3. ' ' → logprob: -7.004062175750732
    4. '(' → logprob: -7.629062175750732
    5. ' (' → logprob: -9.504061698913574
    6. '(n' → logprob: -10.379061698913574
    7. '2' → logprob: -10.504061698913574
    8. '   ' → logprob: -10.504061698913574
    9. 'n' → logprob: -11.754061698913574
    10. '  ' → logprob: -12.504061698913574

Token 542: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.375006675720215
    3. '2' → logprob: -14.375006675720215
    4. '0' → logprob: -14.625006675720215
    5. '(' → logprob: -14.750006675720215
    6. ')' → logprob: -15.375006675720215
    7. '   ' → logprob: -15.375006675720215
    8. '```' → logprob: -18.0000057220459
    9. '+' → logprob: -18.3125057220459
    10. '  ' → logprob: -18.3750057220459

Token 543: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00034416402922943234
    2. ')]' → logprob: -8.875344276428223
    3. ']' → logprob: -9.500344276428223
    4. '])' → logprob: -9.625344276428223
    5. ' )' → logprob: -10.000344276428223
    6. ')])' → logprob: -11.500344276428223
    7. ')
' → logprob: -13.375344276428223
    8. '   ' → logprob: -13.500344276428223
    9. ' ' → logprob: -13.625344276428223
    10. '),' → logprob: -14.625344276428223

Token 544: ' gén' (ID: 15330)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 545: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.005934486165642738
    2. 'er' → logprob: -5.630934715270996
    3. 'èr' → logprob: -6.505934715270996
    4. 'èrent' → logprob: -7.755934715270996
    5. 'ere' → logprob: -8.880934715270996
    6. 'érer' → logprob: -9.505934715270996
    7. 'è' → logprob: -9.880934715270996
    8. 'érique' → logprob: -10.755934715270996
    9. 'érez' → logprob: -11.005934715270996
    10. 'r' → logprob: -11.255934715270996

Token 546: ' la' (ID: 557)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 547: ' sé' (ID: 7462)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -1.5920538902282715
    2. ' ' → logprob: -1.7170538902282715
    3. 'range' → logprob: -1.8420538902282715
    4. 'sequence' → logprob: -1.8420538902282715
    5. ' liste' → logprob: -2.8420538902282715
    6. 'liste' → logprob: -3.5920538902282715
    7. ' range' → logprob: -3.8420538902282715
    8. ' suivante' → logprob: -3.8420538902282715
    9. 's' → logprob: -3.9670538902282715
    10. ' list' → logprob: -3.9670538902282715

Token 548: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.015822721645236015
    2. 'qu' → logprob: -5.640822887420654
    3. ' ' → logprob: -6.140822887420654
    4. '   ' → logprob: -6.390822887420654
    5. 'range' → logprob: -6.515822887420654
    6. 'q' → logprob: -6.640822887420654
    7. 'quences' → logprob: -7.265822887420654
    8. 'quent' → logprob: -7.765822887420654
    9. 'm' → logprob: -8.265822410583496
    10. '-' → logprob: -8.265822410583496

Token 549: ' d' (ID: 272)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8940026760101318
    2. '(range' → logprob: -1.1440026760101318
    3. ' ' → logprob: -2.519002676010132
    4. '<|end|>' → logprob: -2.644002676010132
    5. ' (' → logprob: -3.144002676010132
    6. '[' → logprob: -3.769002676010132
    7. ')' → logprob: -3.769002676010132
    8. ',' → logprob: -4.894002914428711
    9. '   ' → logprob: -5.644002914428711
    10. '(
' → logprob: -5.769002914428711

Token 550: ''ent' (ID: 53422)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7650620341300964
    2. '0' → logprob: -1.1400620937347412
    3. 's' → logprob: -2.515062093734741
    4. ' ' → logprob: -2.515062093734741
    5. ' i' → logprob: -3.765062093734741
    6. '2' → logprob: -5.140061855316162
    7. 'n' → logprob: -5.390061855316162
    8. ' nombres' → logprob: -5.890061855316162
    9. 'des' → logprob: -6.390061855316162
    10. 'ent' → logprob: -6.515061855316162

Token 551: 'iers' (ID: 11012)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.8922343254089355
    2. 'um' → logprob: -1.8922343254089355
    3. 'i' → logprob: -2.0172343254089355
    4. 'rée' → logprob: -2.6422343254089355
    5. 'range' → logprob: -2.7672343254089355
    6. 'umer' → logprob: -3.0172343254089355
    7. 're' → logprob: -4.0172343254089355
    8. '   ' → logprob: -4.1422343254089355
    9. 'umerator' → logprob: -4.3922343254089355
    10. 'r' → logprob: -4.3922343254089355

Token 552: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2271180897951126
    2. ' ' → logprob: -2.7271180152893066
    3. ')' → logprob: -2.9771180152893066
    4. '[' → logprob: -3.7271180152893066
    5. ',' → logprob: -4.102118015289307
    6. '(range' → logprob: -4.477118015289307
    7. '()' → logprob: -4.852118015289307
    8. ' (' → logprob: -5.102118015289307
    9. '<|end|>' → logprob: -5.602118015289307
    10. '   ' → logprob: -5.602118015289307

Token 553: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020544925704598427
    2. ' ' → logprob: -3.89554500579834
    3. '1' → logprob: -13.39554500579834
    4. '2' → logprob: -14.52054500579834
    5. ' zéro' → logprob: -15.39554500579834
    6. '<|end|>' → logprob: -15.39554500579834
    7. '  ' → logprob: -15.89554500579834
    8. 's' → logprob: -16.020544052124023
    9. '`' → logprob: -16.833044052124023
    10. ' ' → logprob: -16.895544052124023

Token 554: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005537479883059859
    2. ' ' → logprob: -7.500553607940674
    3. '1' → logprob: -14.375554084777832
    4. '  ' → logprob: -17.125553131103516
    5. '2' → logprob: -17.500553131103516
    6. '```' → logprob: -17.875553131103516
    7. '۰' → logprob: -18.250553131103516
    8. '   ' → logprob: -18.375553131103516
    9. 's' → logprob: -18.688053131103516
    10. ' zéro' → logprob: -18.688053131103516

Token 555: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2981595993041992
    2. ',' → logprob: -2.423159599304199
    3. ' ' → logprob: -2.548159599304199
    4. 'à' → logprob: -3.548159599304199
    5. ')' → logprob: -3.923159599304199
    6. ' ,' → logprob: -4.423159599304199
    7. '0' → logprob: -4.423159599304199
    8. ' jusqu' → logprob: -5.173159599304199
    9. ' )' → logprob: -5.423159599304199
    10. '<|end|>' → logprob: -6.173159599304199

Token 556: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3484645187854767
    2. '2' → logprob: -1.2234644889831543
    3. ' (' → logprob: -12.098464965820312
    4. '    ' → logprob: -12.848464965820312
    5. ' n' → logprob: -12.973464965820312
    6. 'n' → logprob: -13.098464965820312
    7. '0' → logprob: -13.598464965820312
    8. '(' → logprob: -13.598464965820312
    9. '`' → logprob: -13.848464965820312
    10. '  ' → logprob: -13.973464965820312

Token 557: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019469641847535968
    2. ' ' → logprob: -6.251946926116943
    3. '(' → logprob: -11.251947402954102
    4. ' (' → logprob: -13.126947402954102
    5. '`' → logprob: -14.251947402954102
    6. '
' → logprob: -14.251947402954102
    7. '0' → logprob: -15.001947402954102
    8. '```' → logprob: -15.251947402954102
    9. '{' → logprob: -15.376947402954102
    10. '1' → logprob: -15.501947402954102

Token 558: 'n' (ID: 77)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.38684356212615967
    2. '*n' → logprob: -1.3868435621261597
    3. '*' → logprob: -2.761843681335449
    4. 'n' → logprob: -4.886843681335449
    5. ' n' → logprob: -9.26184368133545
    6. ' ' → logprob: -9.63684368133545
    7. ' ' → logprob: -11.26184368133545
    8. '<|end|>' → logprob: -11.51184368133545
    9. '*num' → logprob: -11.51184368133545
    10. ')' → logprob: -12.38684368133545

Token 559: ' inclus' (ID: 11891)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5260431170463562
    2. '   ' → logprob: -1.026043176651001
    3. '<|end|>' → logprob: -4.026042938232422
    4. '    
' → logprob: -4.401042938232422
    5. '  
' → logprob: -4.901042938232422
    6. ' 
' → logprob: -5.276042938232422
    7. '  ' → logprob: -6.276042938232422
    8. ' ' → logprob: -6.401042938232422
    9. '   
' → logprob: -6.526042938232422
    10. '
' → logprob: -7.526042938232422

Token 560: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6073240637779236
    2. '   ' → logprob: -0.8573240637779236
    3. '    
' → logprob: -4.482324123382568
    4. '<|end|>' → logprob: -5.232324123382568
    5. '  
' → logprob: -5.232324123382568
    6. ' 
' → logprob: -5.607324123382568
    7. ' ' → logprob: -6.607324123382568
    8. '  ' → logprob: -6.732324123382568
    9. '   
' → logprob: -6.982324123382568
    10. '

' → logprob: -8.23232364654541

Token 561: ' soit' (ID: 17293)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06872998923063278
    2. '
' → logprob: -4.068729877471924
    3. '    
' → logprob: -4.193729877471924
    4. 'dp' → logprob: -4.443729877471924
    5. ' 
' → logprob: -4.818729877471924
    6. ')' → logprob: -5.568729877471924
    7. ' dp' → logprob: -6.068729877471924
    8. '    ' → logprob: -6.318729877471924
    9. ' ' → logprob: -6.443729877471924
    10. '  
' → logprob: -6.943729877471924

Token 562: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.103331208229065
    2. ' [' → logprob: -1.728331208229065
    3. '2' → logprob: -1.853331208229065
    4. '0' → logprob: -2.1033310890197754
    5. ' ' → logprob: -2.7283310890197754
    6. ' une' → logprob: -2.8533310890197754
    7. ' la' → logprob: -3.4783310890197754
    8. 'une' → logprob: -4.353331089019775
    9. 'le' → logprob: -4.478331089019775
    10. ' le' → logprob: -5.228331089019775

Token 563: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.387675404548645
    2. ' ' → logprob: -1.137675404548645
    3. '   ' → logprob: -8.387675285339355
    4. '    ' → logprob: -8.762675285339355
    5. ')' → logprob: -9.387675285339355
    6. ' (' → logprob: -9.512675285339355
    7. ' n' → logprob: -9.762675285339355
    8. '  ' → logprob: -10.137675285339355
    9. 'n' → logprob: -10.325175285339355
    10. '0' → logprob: -10.700175285339355

Token 564: 'n' (ID: 77)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.009592464193701744
    2. '*' → logprob: -4.884592533111572
    3. '*n' → logprob: -6.259592533111572
    4. ')' → logprob: -10.384592056274414
    5. 'n' → logprob: -10.884592056274414
    6. ' ' → logprob: -11.759592056274414
    7. ' ' → logprob: -12.259592056274414
    8. '*)' → logprob: -12.759592056274414
    9. ' *)' → logprob: -13.509592056274414
    10. ' )' → logprob: -13.634592056274414

Token 565: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3485059142112732
    2. '+' → logprob: -1.223505973815918
    3. ')' → logprob: -10.098505973815918
    4. ' plus' → logprob: -11.598505973815918
    5. ' )' → logprob: -11.973505973815918
    6. ' ' → logprob: -13.348505973815918
    7. '+)' → logprob: -13.598505973815918
    8. ' ' → logprob: -14.223505973815918
    9. ',' → logprob: -15.223505973815918
    10. ')+' → logprob: -15.848505973815918

Token 566: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005234002135694027
    2. ' ' → logprob: -5.2552337646484375
    3. ')' → logprob: -16.005233764648438
    4. ' ' → logprob: -16.255233764648438
    5. '   ' → logprob: -17.505233764648438
    6. '2' → logprob: -18.380233764648438
    7. '```' → logprob: -18.505233764648438
    8. '  ' → logprob: -19.005233764648438
    9. '0' → logprob: -19.755233764648438
    10. ' )' → logprob: -20.380233764648438

Token 567: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017032715259119868
    2. ' ' → logprob: -6.376703262329102
    3. ')' → logprob: -15.126703262329102
    4. ' ' → logprob: -15.376703262329102
    5. '2' → logprob: -15.501703262329102
    6. '0' → logprob: -16.2517032623291
    7. '   ' → logprob: -16.5017032623291
    8. '  ' → logprob: -16.7517032623291
    9. '```' → logprob: -16.8767032623291
    10. '
' → logprob: -17.4392032623291

Token 568: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006482214666903019
    2. ' )' → logprob: -7.375648021697998
    3. ']' → logprob: -11.875648498535156
    4. ' ' → logprob: -13.000648498535156
    5. ')]' → logprob: -13.500648498535156
    6. ',' → logprob: -13.625648498535156
    7. ')])' → logprob: -13.875648498535156
    8. ').' → logprob: -14.000648498535156
    9. '),' → logprob: -14.000648498535156
    10. '+' → logprob: -14.125648498535156

Token 569: ' valeurs' (ID: 73668)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2526874244213104
    2. '
' → logprob: -1.8776874542236328
    3. '<|end|>' → logprob: -3.377687454223633
    4. '    
' → logprob: -4.627687454223633
    5. ' 
' → logprob: -5.502687454223633
    6. '  
' → logprob: -5.502687454223633
    7. 'dp' → logprob: -5.502687454223633
    8. ' ' → logprob: -5.877687454223633
    9. '  ' → logprob: -6.127687454223633
    10. ')' → logprob: -6.252687454223633

Token 570: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33147338032722473
    2. '
' → logprob: -1.4564733505249023
    3. '<|end|>' → logprob: -3.8314733505249023
    4. '    
' → logprob: -4.706473350524902
    5. '  
' → logprob: -5.081473350524902
    6. ' 
' → logprob: -5.581473350524902
    7. ' for' → logprob: -5.956473350524902
    8. '  ' → logprob: -6.706473350524902
    9. ' ' → logprob: -6.831473350524902
    10. '   
' → logprob: -7.081473350524902

Token 571: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4473065435886383
    2. '   ' → logprob: -1.072306513786316
    3. ' for' → logprob: -5.1973066329956055
    4. '\n' → logprob: -5.5723066329956055
    5. '    
' → logprob: -5.5723066329956055
    6. '  
' → logprob: -6.4473066329956055
    7. ' 
' → logprob: -6.6973066329956055
    8. ' ' → logprob: -7.3223066329956055
    9. 'for' → logprob: -7.5723066329956055
    10. '

' → logprob: -8.322306632995605

Token 572: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5049643516540527
    2. '   ' → logprob: -1.2549643516540527
    3. 'for' → logprob: -2.2549643516540527
    4. '
' → logprob: -5.504964351654053
    5. ' ' → logprob: -7.129964351654053
    6. '	for' → logprob: -8.004964828491211
    7. '    
' → logprob: -8.129964828491211
    8. ' 
' → logprob: -8.254964828491211
    9. '\n' → logprob: -8.254964828491211
    10. 'n' → logprob: -8.879964828491211

Token 573: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14841412007808685
    2. ' for' → logprob: -2.148414134979248
    3. 'dp' → logprob: -3.898414134979248
    4. 'i' → logprob: -7.773414134979248
    5. ' dp' → logprob: -7.898414134979248
    6. ' i' → logprob: -9.27341365814209
    7. '   ' → logprob: -9.77341365814209
    8. 'd' → logprob: -11.39841365814209
    9. ' ' → logprob: -12.27341365814209
    10. 'n' → logprob: -12.52341365814209

Token 574: 'cle' (ID: 3170)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6646530032157898
    2. 'r' → logprob: -1.2896530628204346
    3. '   ' → logprob: -2.4146530628204346
    4. 'cle' → logprob: -3.5396530628204346
    5. 'cles' → logprob: -4.0396528244018555
    6. 'n' → logprob: -4.0396528244018555
    7. 't' → logprob: -4.2896528244018555
    8. 'f' → logprob: -4.4146528244018555
    9. 'for' → logprob: -4.7896528244018555
    10. 'k' → logprob: -5.1646528244018555

Token 575: ' sur' (ID: 1512)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6601502299308777
    2. ' for' → logprob: -0.7851502299308777
    3. ' ' → logprob: -3.7851502895355225
    4. 'for' → logprob: -6.285150051116943
    5. ' _' → logprob: -6.910150051116943
    6. '_' → logprob: -7.160150051116943
    7. '    ' → logprob: -8.160150527954102
    8. '   ' → logprob: -8.410150527954102
    9. 'i' → logprob: -8.910150527954102
    10. ' ' → logprob: -9.660150527954102

Token 576: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.29192793369293213
    2. ' i' → logprob: -1.4169279336929321
    3. ' range' → logprob: -5.291927814483643
    4. 'range' → logprob: -5.291927814483643
    5. '   ' → logprob: -7.541927814483643
    6. ' ' → logprob: -9.7919282913208
    7. 'nums' → logprob: -10.7919282913208
    8. 'num' → logprob: -11.2919282913208
    9. 'n' → logprob: -11.6669282913208
    10. ' nums' → logprob: -12.4169282913208

Token 577: ' valeur' (ID: 41664)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16129013895988464
    2. ' i' → logprob: -1.911290168762207
    3. 'num' → logprob: -7.411290168762207
    4. ' num' → logprob: -7.786290168762207
    5. ' ' → logprob: -11.411290168762207
    6. 'x' → logprob: -11.661290168762207
    7. 'j' → logprob: -13.036290168762207
    8. '	i' → logprob: -13.036290168762207
    9. 'val' → logprob: -13.286290168762207
    10. '   ' → logprob: -13.411290168762207

Token 578: ' dans' (ID: 2671)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.052631109952926636
    2. 'i' → logprob: -4.17763090133667
    3. ' in' → logprob: -4.30263090133667
    4. '_' → logprob: -4.42763090133667
    5. ' _' → logprob: -6.05263090133667
    6. '   ' → logprob: -6.30263090133667
    7. '(i' → logprob: -6.55263090133667
    8. '(' → logprob: -6.92763090133667
    9. ' for' → logprob: -7.30263090133667
    10. ' ' → logprob: -7.30263090133667

Token 579: ' '' (ID: 461)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.43454936146736145
    2. 'nums' → logprob: -1.059549331665039
    3. ' range' → logprob: -5.559549331665039
    4. 'dp' → logprob: -6.934549331665039
    5. ' nums' → logprob: -7.559549331665039
    6. '   ' → logprob: -7.934549331665039
    7. ' ' → logprob: -9.934549331665039
    8. '(nums' → logprob: -11.184549331665039
    9. 'num' → logprob: -11.434549331665039
    10. '  ' → logprob: -11.559549331665039

Token 580: 'nums' (ID: 44465)
  Prédit: 'nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.1008872389793396
    2. 'range' → logprob: -2.3508872985839844
    3. 'dp' → logprob: -8.350887298583984
    4. ' range' → logprob: -8.475887298583984
    5. ' nums' → logprob: -8.600887298583984
    6. '   ' → logprob: -11.100887298583984
    7. 'num' → logprob: -11.475887298583984
    8. '(nums' → logprob: -12.225887298583984
    9. ' ' → logprob: -12.850887298583984
    10. 'n' → logprob: -13.100887298583984

Token 581: '',' (ID: 787)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00814560055732727
    2. ':
' → logprob: -4.883145809173584
    3. '   ' → logprob: -7.758145809173584
    4. ' :' → logprob: -9.383145332336426
    5. '):' → logprob: -11.508145332336426
    6. 'for' → logprob: -12.133145332336426
    7. ' :
' → logprob: -12.258145332336426
    8. ',' → logprob: -12.883145332336426
    9. ' for' → logprob: -13.383145332336426
    10. '):
' → logprob: -13.883145332336426

Token 582: ' c' (ID: 274)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.564429521560669
    2. 'for' → logprob: -1.314429521560669
    3. '   ' → logprob: -2.689429521560669
    4. '<|end|>' → logprob: -2.939429521560669
    5. ':' → logprob: -4.18942928314209
    6. ' ' → logprob: -4.68942928314209
    7. ' 
' → logprob: -5.81442928314209
    8. ' i' → logprob: -6.06442928314209
    9. '  ' → logprob: -6.06442928314209
    10. 'i' → logprob: -6.18942928314209

Token 583: ''est' (ID: 6616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09134846180677414
    2. ' for' → logprob: -2.71634840965271
    3. '   ' → logprob: -3.96634840965271
    4. 'on' → logprob: -7.591348648071289
    5. 'a' → logprob: -8.341348648071289
    6. '#' → logprob: -8.341348648071289
    7. '  ' → logprob: -8.466348648071289
    8. ' ' → logprob: -8.841348648071289
    9. '    ' → logprob: -9.091348648071289
    10. ' pour' → logprob: -9.216348648071289

Token 584: '-à' (ID: 56297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.888259768486023
    2. ':' → logprob: -1.888259768486023
    3. ' ' → logprob: -2.5132598876953125
    4. '   ' → logprob: -2.6382598876953125
    5. 'for' → logprob: -2.7632598876953125
    6. '  ' → logprob: -3.6382598876953125
    7. ' for' → logprob: -3.7632598876953125
    8. 'à' → logprob: -3.7632598876953125
    9. '-à' → logprob: -4.0132598876953125
    10. ')' → logprob: -4.3882598876953125

Token 585: '-dire' (ID: 76064)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.354274183511734
    2. '-à' → logprob: -2.104274272918701
    3. 'une' → logprob: -2.729274272918701
    4. '#' → logprob: -4.479274272918701
    5. 'la' → logprob: -4.479274272918701
    6. 'part' → logprob: -4.729274272918701
    7. 'to' → logprob: -4.854274272918701
    8. 'liste' → logprob: -4.979274272918701
    9. 'for' → logprob: -5.354274272918701
    10. 'un' → logprob: -5.479274272918701

Token 586: ' chaque' (ID: 21194)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.3698091506958008
    2. ' nums' → logprob: -1.8698091506958008
    3. '   ' → logprob: -2.869809150695801
    4. ':' → logprob: -3.494809150695801
    5. 'range' → logprob: -3.744809150695801
    6. ' ' → logprob: -4.619809150695801
    7. ' range' → logprob: -5.119809150695801
    8. ' for' → logprob: -5.244809150695801
    9. ')' → logprob: -5.369809150695801
    10. 'for' → logprob: -5.619809150695801

Token 587: ' pièce' (ID: 56132)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18091729283332825
    2. 'num' → logprob: -2.680917263031006
    3. ' num' → logprob: -3.430917263031006
    4. '  ' → logprob: -4.055917263031006
    5. ' piece' → logprob: -4.680917263031006
    6. '   ' → logprob: -4.805917263031006
    7. '<|end|>' → logprob: -4.930917263031006
    8. 'piece' → logprob: -5.430917263031006
    9. ')' → logprob: -5.805917263031006
    10. ' )' → logprob: -6.305917263031006

Token 588: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12582258880138397
    2. 'for' → logprob: -2.5008225440979004
    3. ' for' → logprob: -4.2508225440979
    4. '   ' → logprob: -4.8758225440979
    5. ' :' → logprob: -5.6258225440979
    6. 'in' → logprob: -5.6258225440979
    7. ' in' → logprob: -5.6258225440979
    8. ':
' → logprob: -6.8758225440979
    9. 's' → logprob: -7.3758225440979
    10. ',' → logprob: -7.3758225440979

Token 589: ' type' (ID: 1490)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.13497808575630188
    2. 'coins' → logprob: -2.3849780559539795
    3. ' nums' → logprob: -4.634978294372559
    4. 'piece' → logprob: -5.509978294372559
    5. 'tokens' → logprob: -5.634978294372559
    6. 'pieces' → logprob: -5.884978294372559
    7. ' monnaie' → logprob: -6.009978294372559
    8. ' coins' → logprob: -6.134978294372559
    9. 'coin' → logprob: -6.259978294372559
    10. 'mon' → logprob: -6.259978294372559

Token 590: ' "' (ID: 392)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.15076421201229095
    2. 'num' → logprob: -2.525764226913452
    3. ' nums' → logprob: -3.025764226913452
    4. '   ' → logprob: -5.775763988494873
    5. ' ' → logprob: -6.150763988494873
    6. ' num' → logprob: -6.525763988494873
    7. 'piece' → logprob: -6.525763988494873
    8. '6' → logprob: -7.150763988494873
    9. ':' → logprob: -8.150764465332031
    10. 'pow' → logprob: -8.525764465332031

Token 591: 'pu' (ID: 5112)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.6139298677444458
    2. 'num' → logprob: -0.8639298677444458
    3. ' nums' → logprob: -4.363929748535156
    4. ' num' → logprob: -5.613929748535156
    5. '6' → logprob: -5.613929748535156
    6. ' ' → logprob: -5.863929748535156
    7. 'power' → logprob: -6.238929748535156
    8. '   ' → logprob: -6.363929748535156
    9. 'pow' → logprob: -6.363929748535156
    10. 'token' → logprob: -6.738929748535156

Token 592: 'issance' (ID: 17968)
  Prédit: 'issance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issance' → logprob: -0.06641799211502075
    2. 'iss' → logprob: -3.316417932510376
    3. 'i' → logprob: -4.566418170928955
    4. 'is' → logprob: -4.691418170928955
    5. 'ss' → logprob: -5.816418170928955
    6. 'ix' → logprob: -6.191418170928955
    7. 'x' → logprob: -7.691418170928955
    8. 'ls' → logprob: -7.691418170928955
    9. 'ds' → logprob: -7.816418170928955
    10. 'isse' → logprob: -8.566417694091797

Token 593: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.06619586795568466
    2. '_' → logprob: -3.5661959648132324
    3. ' ' → logprob: -3.8161959648132324
    4. 'de' → logprob: -5.441195964813232
    5. '6' → logprob: -6.066195964813232
    6. '   ' → logprob: -6.316195964813232
    7. '_de' → logprob: -6.816195964813232
    8. ' _' → logprob: -6.941195964813232
    9. '  ' → logprob: -7.191195964813232
    10. ' d' → logprob: -7.941195964813232

Token 594: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.28286832571029663
    2. ' ' → logprob: -1.4078683853149414
    3. ' "' → logprob: -7.657868385314941
    4. '"' → logprob: -8.157868385314941
    5. 'six' → logprob: -8.907868385314941
    6. ' six' → logprob: -8.970368385314941
    7. '<|end|>' → logprob: -9.282868385314941
    8. ' '' → logprob: -9.282868385314941
    9. '_' → logprob: -10.032868385314941
    10. 'space' → logprob: -10.220368385314941

Token 595: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.054978206753730774
    2. ' ' → logprob: -2.929978132247925
    3. '"' → logprob: -10.054978370666504
    4. '9' → logprob: -11.804978370666504
    5. 'num' → logprob: -11.929978370666504
    6. '   ' → logprob: -12.179978370666504
    7. '  ' → logprob: -12.617478370666504
    8. ''' → logprob: -12.742478370666504
    9. ')' → logprob: -12.742478370666504
    10. '`' → logprob: -12.929978370666504

Token 596: ' ou' (ID: 2031)
  Prédit: 'ou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ou' → logprob: -0.34081965684890747
    2. '"' → logprob: -1.7158195972442627
    3. ' ou' → logprob: -2.3408195972442627
    4. ' "' → logprob: -5.090819835662842
    5. 'or' → logprob: -5.590819835662842
    6. ' or' → logprob: -6.965819835662842
    7. '   ' → logprob: -6.965819835662842
    8. 'et' → logprob: -8.340819358825684
    9. ' ' → logprob: -8.840819358825684
    10. ',"' → logprob: -9.340819358825684

Token 597: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.04003392904996872
    2. ' ' → logprob: -3.2900338172912598
    3. ' de' → logprob: -6.54003381729126
    4. ' neuf' → logprob: -8.290034294128418
    5. 'de' → logprob: -8.540034294128418
    6. '"' → logprob: -10.790034294128418
    7. ' ou' → logprob: -11.665034294128418
    8. '   ' → logprob: -11.727534294128418
    9. '  ' → logprob: -11.977534294128418
    10. 'ou' → logprob: -12.165034294128418

Token 598: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.014179613441228867
    2. ' ' → logprob: -4.264179706573486
    3. '```' → logprob: -13.139179229736328
    4. ',' → logprob: -13.389179229736328
    5. ' neuf' → logprob: -13.451679229736328
    6. '  ' → logprob: -13.701679229736328
    7. '   ' → logprob: -13.951679229736328
    8. 'pow' → logprob: -14.139179229736328
    9. '"' → logprob: -14.264179229736328
    10. '_' → logprob: -14.451679229736328

Token 599: '"
' (ID: 1092)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.5650144219398499
    2. '"' → logprob: -1.440014362335205
    3. ' "' → logprob: -2.315014362335205
    4. ' ":' → logprob: -3.440014362335205
    5. '   ' → logprob: -3.940014362335205
    6. '):' → logprob: -4.065014362335205
    7. ':' → logprob: -4.815014362335205
    8. ')' → logprob: -5.315014362335205
    9. ':"' → logprob: -6.440014362335205
    10. ',' → logprob: -6.565014362335205

Token 600: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32745057344436646
    2. ' for' → logprob: -2.0774505138397217
    3. '   ' → logprob: -2.5774505138397217
    4. 'for' → logprob: -2.8274505138397217
    5. ' ' → logprob: -4.827450752258301
    6. ' :' → logprob: -6.202450752258301
    7. ':
' → logprob: -6.327450752258301
    8. ' 
' → logprob: -6.577450752258301
    9. '  
' → logprob: -6.702450752258301
    10. ',' → logprob: -7.077450752258301

Token 601: ' for' (ID: 395)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1815861463546753
    2. ' for' → logprob: -1.3065861463546753
    3. '   ' → logprob: -1.5565861463546753
    4. 'for' (adapté à ' for') → logprob: -1.6815861463546753
    5. ':
' → logprob: -4.806586265563965
    6. '
' → logprob: -4.806586265563965
    7. ' ' → logprob: -6.306586265563965
    8. ' 
' → logprob: -6.556586265563965
    9. '    
' → logprob: -7.056586265563965
    10. '  
' → logprob: -7.181586265563965

Token 602: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.06285177171230316
    2. 'coin' → logprob: -3.437851667404175
    3. 'x' → logprob: -4.062851905822754
    4. 'piece' → logprob: -5.312851905822754
    5. 'v' → logprob: -6.062851905822754
    6. ' num' → logprob: -6.562851905822754
    7. 'val' → logprob: -6.562851905822754
    8. 'value' → logprob: -7.937851905822754
    9. 'c' → logprob: -7.937851905822754
    10. 'p' → logprob: -8.437851905822754

Token 603: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12758339941501617
    2. 'in' → logprob: -2.1275835037231445
    3. ':' → logprob: -8.377583503723145
    4. 's' → logprob: -8.752583503723145
    5. ' :' → logprob: -8.877583503723145
    6. ' ' → logprob: -9.502583503723145
    7. '  ' → logprob: -11.502583503723145
    8. '   ' → logprob: -12.002583503723145
    9. '	in' → logprob: -12.002583503723145
    10. ',' → logprob: -12.377583503723145

Token 604: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.016042815521359444
    2. ' nums' → logprob: -4.141042709350586
    3. 'num' → logprob: -12.266042709350586
    4. ' ' → logprob: -13.516042709350586
    5. '(nums' → logprob: -14.016042709350586
    6. '   ' → logprob: -14.016042709350586
    7. 'n' → logprob: -15.516042709350586
    8. '_nums' → logprob: -15.641042709350586
    9. 'Nums' → logprob: -15.641042709350586
    10. '  ' → logprob: -15.891042709350586

Token 605: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07126320898532867
    2. ':
' → logprob: -2.821263313293457
    3. '   ' → logprob: -4.696263313293457
    4. '       ' → logprob: -9.321263313293457
    5. ',' → logprob: -10.946263313293457
    6. '):
' → logprob: -12.321263313293457
    7. ':
' → logprob: -12.321263313293457
    8. ' :' → logprob: -13.071263313293457
    9. ' :
' → logprob: -13.696263313293457
    10. ':

' → logprob: -14.446263313293457

Token 606: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4327472448348999
    2. '       ' → logprob: -1.0577472448349
    3. ' for' → logprob: -5.5577473640441895
    4. '<|end|>' → logprob: -9.182746887207031
    5. '	   ' → logprob: -10.307746887207031
    6. 'for' → logprob: -10.932746887207031
    7. ',' → logprob: -11.682746887207031
    8. '	for' → logprob: -12.182746887207031
    9. '<|end|>' → logprob: -12.932746887207031
    10. '   ' → logprob: -13.557746887207031

Token 607: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5134113430976868
    2. 'for' → logprob: -1.013411283493042
    3. '   ' → logprob: -3.263411283493042
    4. '       ' → logprob: -8.263411521911621
    5. '	for' → logprob: -10.138411521911621
    6. '    ' → logprob: -11.888411521911621
    7. ' ' → logprob: -12.263411521911621
    8. '  ' → logprob: -12.513411521911621
    9. '	   ' → logprob: -16.388410568237305
    10. 'i' → logprob: -16.388410568237305

Token 608: ' Pour' (ID: 13931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00015955790877342224
    2. ' for' → logprob: -8.75015926361084
    3. '   ' → logprob: -13.75015926361084
    4. 'fo' → logprob: -17.125160217285156
    5. ' ' → logprob: -18.500160217285156
    6. '	for' → logprob: -18.875160217285156
    7. 'i' → logprob: -19.500160217285156
    8. 'f' → logprob: -19.625160217285156
    9. 'range' → logprob: -19.625160217285156
    10. 'if' → logprob: -20.125160217285156

Token 609: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2812092900276184
    2. ' i' → logprob: -1.4062092304229736
    3. 'j' → logprob: -10.531208992004395
    4. 'amount' → logprob: -11.281208992004395
    5. ' amount' → logprob: -12.156208992004395
    6. ' j' → logprob: -12.281208992004395
    7. 'x' → logprob: -12.656208992004395
    8. '	i' → logprob: -13.656208992004395
    9. 'value' → logprob: -13.906208992004395
    10. '   ' → logprob: -14.031208992004395

Token 610: ' pièce' (ID: 56132)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6344868540763855
    2. ' i' → logprob: -0.7594868540763855
    3. 'j' → logprob: -6.884486675262451
    4. ' j' → logprob: -7.759486675262451
    5. ' amount' → logprob: -8.88448715209961
    6. 'amount' → logprob: -9.00948715209961
    7. 'val' → logprob: -10.00948715209961
    8. 'x' → logprob: -10.25948715209961
    9. 'value' → logprob: -10.88448715209961
    10. ' x' → logprob: -11.63448715209961

Token 611: ' '' (ID: 461)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006496166344732046
    2. ' i' → logprob: -5.256495952606201
    3. 'in' → logprob: -6.881495952606201
    4. 'i' → logprob: -9.00649642944336
    5. ',' → logprob: -10.25649642944336
    6. ' for' → logprob: -11.00649642944336
    7. '   ' → logprob: -11.00649642944336
    8. ' ' → logprob: -11.38149642944336
    9. ' ,' → logprob: -12.38149642944336
    10. ' dans' → logprob: -12.50649642944336

Token 612: 'num' (ID: 4571)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0047508650459349155
    2. ' i' → logprob: -5.379750728607178
    3. 'j' → logprob: -9.629751205444336
    4. 'val' → logprob: -10.879751205444336
    5. '   ' → logprob: -11.254751205444336
    6. 'value' → logprob: -11.754751205444336
    7. 'amount' → logprob: -11.879751205444336
    8. ' ' → logprob: -12.629751205444336
    9. '	i' → logprob: -12.629751205444336
    10. '```' → logprob: -12.879751205444336

Token 613: '',' (ID: 787)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03224795684218407
    2. 'in' → logprob: -4.407248020172119
    3. ',' → logprob: -4.657248020172119
    4. '   ' → logprob: -5.532248020172119
    5. ' en' → logprob: -6.157248020172119
    6. ''' → logprob: -7.282248020172119
    7. ' i' → logprob: -7.532248020172119
    8. ' dans' → logprob: -7.532248020172119
    9. ' ,' → logprob: -7.657248020172119
    10. ' for' → logprob: -8.657247543334961

Token 614: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07893969118595123
    2. ' for' → logprob: -2.57893967628479
    3. '   ' → logprob: -9.953939437866211
    4. '       ' → logprob: -13.828939437866211
    5. '	for' → logprob: -13.828939437866211
    6. ' ' → logprob: -15.328939437866211
    7. '    ' → logprob: -16.20393943786621
    8. '  ' → logprob: -17.32893943786621
    9. '
' → logprob: -17.45393943786621
    10. ' 
' → logprob: -18.70393943786621

Token 615: ' essa' (ID: 19417)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1638767570257187
    2. 'for' → logprob: -1.9138767719268799
    3. ' range' → logprob: -6.038876533508301
    4. 'range' → logprob: -6.788876533508301
    5. ' in' → logprob: -9.0388765335083
    6. 'in' → logprob: -12.5388765335083
    7. ' pour' → logprob: -13.0388765335083
    8. 'or' → logprob: -13.4138765335083
    9. ' continue' → logprob: -13.6638765335083
    10. 'fo' → logprob: -13.7888765335083

Token 616: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.0030586346983909607
    2. 'y' → logprob: -6.753058433532715
    3. 'ye' → logprob: -7.003058433532715
    4. 'iye' → logprob: -8.503058433532715
    5. 'aye' → logprob: -8.628058433532715
    6. 'i' → logprob: -9.128058433532715
    7. 'yer' → logprob: -9.253058433532715
    8. 'uie' → logprob: -9.503058433532715
    9. '#' → logprob: -9.753058433532715
    10. 'aie' → logprob: -9.878058433532715

Token 617: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.37233221530914307
    2. 'd' → logprob: -2.2473320960998535
    3. '   ' → logprob: -2.2473320960998535
    4. ' de' → logprob: -2.3723320960998535
    5. ' i' → logprob: -6.2473320960998535
    6. 'de' → logprob: -6.2473320960998535
    7. 'i' → logprob: -7.3723320960998535
    8. 'for' → logprob: -7.7473320960998535
    9. 'in' → logprob: -8.122332572937012
    10. '_' → logprob: -8.372332572937012

Token 618: ' mettre' (ID: 25339)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16035085916519165
    2. ' range' → logprob: -1.9103507995605469
    3. 'i' → logprob: -9.910350799560547
    4. '1' → logprob: -10.535350799560547
    5. '2' → logprob: -11.035350799560547
    6. '   ' → logprob: -11.785350799560547
    7. ' ' → logprob: -12.035350799560547
    8. ' i' → logprob: -12.535350799560547
    9. 'for' → logprob: -12.535350799560547
    10. 'n' → logprob: -13.285350799560547

Token 619: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.01468990184366703
    2. ' à' → logprob: -4.639689922332764
    3. 'i' → logprob: -6.514689922332764
    4. 'j' → logprob: -6.639689922332764
    5. 'aj' → logprob: -6.889689922332764
    6. 'a' → logprob: -8.014689445495605
    7. 'jour' → logprob: -8.139689445495605
    8. 'dp' → logprob: -9.014689445495605
    9. ''à' → logprob: -9.139689445495605
    10. 'la' → logprob: -9.514689445495605

Token 620: ' jour' (ID: 8379)
  Prédit: 'jour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jour' → logprob: -0.0015882966108620167
    2. 'jou' → logprob: -7.376588344573975
    3. 'j' → logprob: -8.001587867736816
    4. '```' → logprob: -8.376587867736816
    5. 'jours' → logprob: -8.626587867736816
    6. ' jour' → logprob: -10.001587867736816
    7. ' ' → logprob: -10.376587867736816
    8. 'profit' → logprob: -10.376587867736816
    9. 'dp' → logprob: -10.626587867736816
    10. '[j' → logprob: -11.126587867736816

Token 621: ' tous' (ID: 10688)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.28049084544181824
    2. 'for' → logprob: -1.6554908752441406
    3. 'range' → logprob: -4.030490875244141
    4. ' for' → logprob: -4.155490875244141
    5. ' dp' → logprob: -4.405490875244141
    6. 'la' → logprob: -6.030490875244141
    7. 'le' → logprob: -6.280490875244141
    8. '   ' → logprob: -6.905490875244141
    9. ' range' → logprob: -7.405490875244141
    10. 'les' → logprob: -7.655490875244141

Token 622: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5794755816459656
    2. 'i' → logprob: -0.9544755816459656
    3. ' les' → logprob: -3.8294756412506104
    4. 'j' → logprob: -3.9544756412506104
    5. ' j' → logprob: -4.704475402832031
    6. 'les' → logprob: -5.704475402832031
    7. ' l' → logprob: -7.454475402832031
    8. 'l' → logprob: -7.579475402832031
    9. '[i' → logprob: -9.579475402832031
    10. 'dp' → logprob: -9.829475402832031

Token 623: ' dp' (ID: 21546)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03884357213973999
    2. ' i' → logprob: -3.4138436317443848
    3. 'j' → logprob: -5.413843631744385
    4. ' j' → logprob: -7.413843631744385
    5. 'indices' → logprob: -9.913843154907227
    6. 'dp' → logprob: -10.288843154907227
    7. ' indices' → logprob: -10.788843154907227
    8. ' ' → logprob: -12.413843154907227
    9. 's' → logprob: -12.913843154907227
    10. '   ' → logprob: -13.038843154907227

Token 624: ' pour' (ID: 1930)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012738249264657497
    2. ' i' → logprob: -5.512738227844238
    3. 'i' → logprob: -5.762738227844238
    4. '[' → logprob: -5.887738227844238
    5. '[j' → logprob: -6.762738227844238
    6. 'indices' → logprob: -7.137738227844238
    7. '   ' → logprob: -8.137738227844238
    8. 'for' → logprob: -8.637738227844238
    9. ' for' → logprob: -9.512738227844238
    10. ' indices' → logprob: -10.012738227844238

Token 625: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12812574207782745
    2. 'i' → logprob: -2.1281256675720215
    3. ' j' → logprob: -7.0031256675720215
    4. 'j' → logprob: -8.37812614440918
    5. ' range' → logprob: -10.50312614440918
    6. ' ' → logprob: -11.87812614440918
    7. '	i' → logprob: -11.87812614440918
    8. '   ' → logprob: -12.50312614440918
    9. ' num' → logprob: -13.00312614440918
    10. 'range' → logprob: -13.12812614440918

Token 626: ' mont' (ID: 11554)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10159888863563538
    2. ' i' → logprob: -2.3515989780426025
    3. 'j' → logprob: -6.851598739624023
    4. 'val' → logprob: -8.851598739624023
    5. ' j' → logprob: -9.476598739624023
    6. 'indices' → logprob: -10.476598739624023
    7. ' indices' → logprob: -10.851598739624023
    8. 'x' → logprob: -11.351598739624023
    9. 'num' → logprob: -11.601598739624023
    10. 'range' → logprob: -12.226598739624023

Token 627: 'ants' (ID: 2027)
  Prédit: 'ages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.24574129283428192
    2. 'ant' → logprob: -2.495741367340088
    3. 'age' → logprob: -2.620741367340088
    4. 'ants' → logprob: -3.120741367340088
    5. 'i' → logprob: -4.745741367340088
    6. 'agnes' → logprob: -6.245741367340088
    7. 'ées' → logprob: -6.370741367340088
    8. 'és' → logprob: -6.995741367340088
    9. 'ables' → logprob: -7.120741367340088
    10. 'aux' → logprob: -7.495741367340088

Token 628: ' possibles' (ID: 97753)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6882933974266052
    2. 'num' → logprob: -1.93829345703125
    3. 'from' → logprob: -2.18829345703125
    4. ' from' → logprob: -2.56329345703125
    5. ' num' → logprob: -2.93829345703125
    6. ' j' → logprob: -4.06329345703125
    7. ' compris' → logprob: -4.06329345703125
    8. ' allant' → logprob: -4.06329345703125
    9. '       ' → logprob: -4.18829345703125
    10. ' i' → logprob: -4.81329345703125

Token 629: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14367824792861938
    2. ':' → logprob: -2.2686781883239746
    3. ' for' → logprob: -4.268678188323975
    4. ' in' → logprob: -4.518678188323975
    5. '       ' → logprob: -6.143678188323975
    6. ' :' → logprob: -7.143678188323975
    7. 'for' → logprob: -7.518678188323975
    8. ':
' → logprob: -7.643678188323975
    9. ' ' → logprob: -8.018678665161133
    10. 'in' → logprob: -8.143678665161133

Token 630: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17859309911727905
    2. ':' → logprob: -2.803593158721924
    3. '
' → logprob: -3.553593158721924
    4. ' 
' → logprob: -3.553593158721924
    5. ' for' → logprob: -4.053593158721924
    6. '  
' → logprob: -5.178593158721924
    7. '    
' → logprob: -5.428593158721924
    8. ' in' → logprob: -5.553593158721924
    9. ' ' → logprob: -5.803593158721924
    10. '  ' → logprob: -6.053593158721924

Token 631: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3020618259906769
    2. '   ' → logprob: -1.4270617961883545
    3. ' range' → logprob: -4.802062034606934
    4. 'for' (adapté à ' for') → logprob: -5.427062034606934
    5. ' i' → logprob: -6.052062034606934
    6. '    ' → logprob: -6.302062034606934
    7. '	for' → logprob: -6.677062034606934
    8. 'range' → logprob: -6.927062034606934
    9. ' ' → logprob: -7.427062034606934
    10. '       ' → logprob: -7.677062034606934

Token 632: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.581185519695282
    2. ' i' → logprob: -0.831185519695282
    3. 'j' → logprob: -6.331185340881348
    4. ' j' → logprob: -6.706185340881348
    5. ' amount' → logprob: -7.331185340881348
    6. 'amount' → logprob: -7.456185340881348
    7. 'x' → logprob: -7.581185340881348
    8. ' x' → logprob: -8.331185340881348
    9. ' ' → logprob: -10.081185340881348
    10. '   ' → logprob: -10.331185340881348

Token 633: '1' (ID: 16)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011065390892326832
    2. 'in' → logprob: -4.511065483093262
    3. ' ' → logprob: -12.261065483093262
    4. '   ' → logprob: -12.761065483093262
    5. 'range' → logprob: -13.136065483093262
    6. ',' → logprob: -13.261065483093262
    7. '	in' → logprob: -13.886065483093262
    8. 'n' → logprob: -14.136065483093262
    9. 'd' → logprob: -14.636065483093262
    10. ')' → logprob: -14.886065483093262

Token 634: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0700264647603035
    2. 'in' → logprob: -2.695026397705078
    3. 'range' → logprob: -9.695026397705078
    4. 'n' → logprob: -12.195026397705078
    5. ',' → logprob: -12.445026397705078
    6. 's' → logprob: -12.570026397705078
    7. 'd' → logprob: -12.945026397705078
    8. '   ' → logprob: -13.195026397705078
    9. ' ' → logprob: -13.320026397705078
    10. 'import' → logprob: -13.445026397705078

Token 635: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759603977203369
    2. 'range' → logprob: -0.8259603977203369
    3. ' ' → logprob: -11.450960159301758
    4. '   ' → logprob: -13.075960159301758
    5. '(range' → logprob: -13.200960159301758
    6. '  ' → logprob: -13.325960159301758
    7. '	range' → logprob: -13.450960159301758
    8. 'r' → logprob: -13.700960159301758
    9. 'num' → logprob: -15.325960159301758
    10. '    ' → logprob: -15.325960159301758

Token 636: '(n' (ID: 2406)
  Prédit: '(num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(num' → logprob: -0.0006159355980344117
    2. 'num' → logprob: -7.750616073608398
    3. '(' → logprob: -9.250616073608398
    4. ' num' → logprob: -9.625616073608398
    5. ' (' → logprob: -12.250616073608398
    6. '	num' → logprob: -12.500616073608398
    7. '(len' → logprob: -12.500616073608398
    8. '(n' → logprob: -12.500616073608398
    9. '[num' → logprob: -12.750616073608398
    10. '<num' → logprob: -13.750616073608398

Token 637: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9391077756881714
    2. ',num' → logprob: -0.9391077756881714
    3. 'num' → logprob: -2.439107894897461
    4. ',' → logprob: -2.439107894897461
    5. '*num' → logprob: -4.314107894897461
    6. ' +' → logprob: -4.439107894897461
    7. ' num' → logprob: -5.439107894897461
    8. '   ' → logprob: -6.189107894897461
    9. '[num' → logprob: -6.189107894897461
    10. 'um' → logprob: -6.189107894897461

Token 638: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1148194670677185
    2. 'num' → logprob: -2.2398195266723633
    3. ' num' → logprob: -6.864819526672363
    4. ' ' → logprob: -7.114819526672363
    5. '   ' → logprob: -9.739819526672363
    6. 'nums' → logprob: -10.864819526672363
    7. '	num' → logprob: -11.114819526672363
    8. 'n' → logprob: -12.239819526672363
    9. '2' → logprob: -12.427319526672363
    10. '  ' → logprob: -12.552319526672363

Token 639: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.802049756515771e-05
    2. 'num' → logprob: -10.000067710876465
    3. ' ' → logprob: -10.750067710876465
    4. 'nums' → logprob: -15.250067710876465
    5. ' num' → logprob: -15.375067710876465
    6. '2' → logprob: -15.750067710876465
    7. '   ' → logprob: -16.81256866455078
    8. '  ' → logprob: -17.18756866455078
    9. '6' → logprob: -17.25006866455078
    10. '0' → logprob: -17.37506866455078

Token 640: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000989699736237526
    2. ',' → logprob: -7.87598991394043
    3. ' ):' → logprob: -8.00098991394043
    4. '):
' → logprob: -8.87598991394043
    5. ',num' → logprob: -10.00098991394043
    6. ')' → logprob: -10.00098991394043
    7. ':' → logprob: -11.12598991394043
    8. ',n' → logprob: -11.25098991394043
    9. '):
' → logprob: -12.12598991394043
    10. '   ' → logprob: -12.25098991394043

Token 641: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9677113890647888
    2. ':' → logprob: -1.0927114486694336
    3. '           ' → logprob: -1.4677114486694336
    4. '        ' → logprob: -3.3427114486694336
    5. ':
' → logprob: -5.717711448669434
    6. ',' → logprob: -6.092711448669434
    7. '               ' → logprob: -6.342711448669434
    8. '            ' → logprob: -6.342711448669434
    9. '   ' → logprob: -6.592711448669434
    10. ' if' → logprob: -6.717711448669434

Token 642: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4811168313026428
    2. '           ' → logprob: -2.231116771697998
    3. 'if' → logprob: -2.356116771697998
    4. 'dp' → logprob: -2.356116771697998
    5. ' dp' → logprob: -2.856116771697998
    6. ' for' → logprob: -4.356116771697998
    7. '       ' → logprob: -5.106116771697998
    8. 'for' → logprob: -5.481116771697998
    9. '               ' → logprob: -5.981116771697998
    10. '   ' → logprob: -7.481116771697998

Token 643: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8579892516136169
    2. ' if' → logprob: -1.2329893112182617
    3. 'dp' → logprob: -1.8579893112182617
    4. '           ' → logprob: -3.1079893112182617
    5. ' dp' → logprob: -3.2329893112182617
    6. '   ' → logprob: -3.8579893112182617
    7. '       ' → logprob: -4.857989311218262
    8. 'for' → logprob: -5.232989311218262
    9. ' for' → logprob: -5.857989311218262
    10. ' new' → logprob: -5.982989311218262

Token 644: ' essa' (ID: 19417)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4791046679019928
    2. ' if' → logprob: -0.9791046380996704
    3. '       ' → logprob: -6.104104518890381
    4. '           ' → logprob: -6.729104518890381
    5. '   ' → logprob: -7.479104518890381
    6. '    ' → logprob: -8.604104995727539
    7. 'continue' → logprob: -8.979104995727539
    8. ' continue' → logprob: -9.104104995727539
    9. 'for' → logprob: -9.729104995727539
    10. '=' → logprob: -9.979104995727539

Token 645: 'ie' (ID: 396)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16701343655586243
    2. 'ye' → logprob: -1.91701340675354
    3. 'yle' → logprob: -5.667013645172119
    4. 'aye' → logprob: -8.042013168334961
    5. 'ie' → logprob: -8.167013168334961
    6. 'yre' → logprob: -8.417013168334961
    7. 'j' → logprob: -8.542013168334961
    8. 'yme' → logprob: -8.667013168334961
    9. 'lie' → logprob: -8.792013168334961
    10. '#' → logprob: -8.917013168334961

Token 646: ' d' (ID: 272)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23844490945339203
    2. ' if' → logprob: -1.9884449243545532
    3. '           ' → logprob: -3.3634448051452637
    4. 'if' → logprob: -4.113444805145264
    5. ':' → logprob: -5.113444805145264
    6. ' dp' → logprob: -5.363444805145264
    7. 'dp' → logprob: -5.488444805145264
    8. '   ' → logprob: -5.488444805145264
    9. ' :' → logprob: -7.238444805145264
    10. '              ' → logprob: -7.363444805145264

Token 647: ''utiliser' (ID: 133355)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.864374041557312
    2. 'dp' → logprob: -1.739374041557312
    3. 'p' → logprob: -1.864374041557312
    4. ' dp' → logprob: -2.2393741607666016
    5. ' j' → logprob: -2.3643741607666016
    6. 'n' → logprob: -4.489374160766602
    7. '   ' → logprob: -5.239374160766602
    8. 'crire' → logprob: -5.614374160766602
    9. '       ' → logprob: -5.989374160766602
    10. 'j' → logprob: -6.114374160766602

Token 648: ' une' (ID: 2463)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8006646037101746
    2. 'num' → logprob: -0.9256646037101746
    3. ' if' → logprob: -2.3006646633148193
    4. 'dp' → logprob: -4.17566442489624
    5. ' num' → logprob: -4.55066442489624
    6. '   ' → logprob: -4.67566442489624
    7. '           ' → logprob: -4.67566442489624
    8. 'nums' → logprob: -5.92566442489624
    9. '       ' → logprob: -6.05066442489624
    10. ' dp' → logprob: -6.80066442489624

Token 649: ' nouvelle' (ID: 24562)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'piece' → logprob: -1.1584010124206543
    2. 'pi' → logprob: -1.4084010124206543
    3. ' pièce' → logprob: -2.1584010124206543
    4. '   ' → logprob: -2.7834010124206543
    5. 'dp' → logprob: -3.2834010124206543
    6. 'num' → logprob: -3.2834010124206543
    7. ' piece' → logprob: -3.6584010124206543
    8. 'if' → logprob: -3.7834010124206543
    9. ' dp' → logprob: -3.9084010124206543
    10. ' ' → logprob: -4.033401012420654

Token 650: ' pièce' (ID: 56132)
  Prédit: 'piece'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'piece' → logprob: -0.9926558136940002
    2. ' pièce' → logprob: -1.4926557540893555
    3. ' piece' → logprob: -2.3676557540893555
    4. ' 
' → logprob: -2.8676557540893555
    5. ' ' → logprob: -3.3676557540893555
    6. 'pi' → logprob: -3.7426557540893555
    7. ' num' → logprob: -3.8676557540893555
    8. '   ' → logprob: -3.9926557540893555
    9. 'num' → logprob: -3.9926557540893555
    10. ' coin' → logprob: -4.3051557540893555

Token 651: ' '' (ID: 461)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2699984610080719
    2. '           ' → logprob: -2.519998550415039
    3. 'if' → logprob: -2.894998550415039
    4. ',' → logprob: -4.269998550415039
    5. 'num' → logprob: -4.519998550415039
    6. '   ' → logprob: -4.769998550415039
    7. ' num' → logprob: -4.769998550415039
    8. ':' → logprob: -4.894998550415039
    9. ' =' → logprob: -5.394998550415039
    10. 'nums' → logprob: -5.394998550415039

Token 652: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.003607317106798291
    2. ' num' → logprob: -5.628607273101807
    3. '
' → logprob: -13.628607749938965
    4. '	num' → logprob: -13.878607749938965
    5. '   ' → logprob: -14.003607749938965
    6. '[num' → logprob: -14.378607749938965
    7. 'nums' → logprob: -14.503607749938965
    8. '=num' → logprob: -14.628607749938965
    9. ' ' → logprob: -14.753607749938965
    10. ',num' → logprob: -14.878607749938965

Token 653: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1729432344436646
    2. ' pour' → logprob: -1.9229432344436646
    3. '           ' → logprob: -2.047943115234375
    4. ',' → logprob: -2.047943115234375
    5. ')' → logprob: -2.422943115234375
    6. '',' → logprob: -3.297943115234375
    7. ' if' → logprob: -3.672943115234375
    8. ' +' → logprob: -4.172943115234375
    9. ' et' → logprob: -4.297943115234375
    10. '   ' → logprob: -4.672943115234375

Token 654: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13885532319545746
    2. ':' → logprob: -2.888855218887329
    3. ':
' → logprob: -3.138855218887329
    4. ' if' → logprob: -4.388855457305908
    5. '               ' → logprob: -5.138855457305908
    6. ',' → logprob: -5.138855457305908
    7. ' :
' → logprob: -6.388855457305908
    8. ' :' → logprob: -7.013855457305908
    9. 'if' → logprob: -7.263855457305908
    10. '
' → logprob: -7.638855457305908

Token 655: ' former' (ID: 9254)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.39437878131866455
    2. 'min' → logprob: -1.8943787813186646
    3. ' j' → logprob: -2.394378662109375
    4. ' améliorer' → logprob: -3.394378662109375
    5. '   ' → logprob: -4.769378662109375
    6. 'former' → logprob: -4.894378662109375
    7. ' réduire' → logprob: -5.269378662109375
    8. '
' → logprob: -5.894378662109375
    9. 'dp' → logprob: -5.894378662109375
    10. 'form' → logprob: -5.894378662109375

Token 656: ' la' (ID: 557)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4050082266330719
    2. 'j' → logprob: -1.1550081968307495
    3. 'dp' → logprob: -5.155008316040039
    4. '           ' → logprob: -5.280008316040039
    5. ' dp' → logprob: -5.530008316040039
    6. '   ' → logprob: -7.030008316040039
    7. 'num' → logprob: -7.780008316040039
    8. '       ' → logprob: -7.905008316040039
    9. '    ' → logprob: -7.905008316040039
    10. '[j' → logprob: -8.405008316040039

Token 657: ' somme' (ID: 64484)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.03433302044868469
    2. ' j' → logprob: -3.4093329906463623
    3. 'dp' → logprob: -8.034333229064941
    4. '   ' → logprob: -8.784333229064941
    5. 'i' → logprob: -10.534333229064941
    6. '[j' → logprob: -10.784333229064941
    7. 'min' → logprob: -10.909333229064941
    8. ' ' → logprob: -11.409333229064941
    9. 'num' → logprob: -11.534333229064941
    10. '	j' → logprob: -11.534333229064941

Token 658: ' j' (ID: 441)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4508248567581177
    2. ' if' → logprob: -1.3258248567581177
    3. 'dp' → logprob: -3.575824737548828
    4. 'if' → logprob: -4.075824737548828
    5. ' dp' → logprob: -4.450824737548828
    6. ' j' → logprob: -4.700824737548828
    7. '               ' → logprob: -5.200824737548828
    8. ' =' → logprob: -5.450824737548828
    9. ' +' → logprob: -5.950824737548828
    10. '
' → logprob: -6.325824737548828

Token 659: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12629644572734833
    2. '+' → logprob: -3.1262965202331543
    3. ' +' → logprob: -3.1262965202331543
    4. ' =' → logprob: -4.251296520233154
    5. ' ' → logprob: -5.376296520233154
    6. '           ' → logprob: -6.001296520233154
    7. '=' → logprob: -6.126296520233154
    8. '   ' → logprob: -6.626296520233154
    9. '    ' → logprob: -6.751296520233154
    10. ':' → logprob: -7.376296520233154

Token 660: ' +' (ID: 659)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6957985162734985
    2. ':' → logprob: -1.0707985162734985
    3. ':
' → logprob: -2.070798397064209
    4. '               ' → logprob: -4.195798397064209
    5. ' if' → logprob: -5.070798397064209
    6. ',' → logprob: -5.695798397064209
    7. ' :
' → logprob: -5.820798397064209
    8. ' :' → logprob: -6.320798397064209
    9. '       ' → logprob: -7.195798397064209
    10. '   ' → logprob: -7.945798397064209

Token 661: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.004622491542249918
    2. ' num' → logprob: -5.379622459411621
    3. '   ' → logprob: -13.754622459411621
    4. '	num' → logprob: -14.629622459411621
    5. ' ' → logprob: -15.254622459411621
    6. '[num' → logprob: -16.254623413085938
    7. '=num' → logprob: -16.379623413085938
    8. '(num' → logprob: -16.379623413085938
    9. 'nums' → logprob: -17.254623413085938
    10. '$num' → logprob: -17.379623413085938

Token 662: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0639980137348175
    2. ':' → logprob: -2.938997983932495
    3. '               ' → logprob: -5.938998222351074
    4. ' if' → logprob: -6.188998222351074
    5. ':
' → logprob: -6.188998222351074
    6. ',' → logprob: -7.063998222351074
    7. '       ' → logprob: -8.313998222351074
    8. 'if' → logprob: -9.063998222351074
    9. '=' → logprob: -9.063998222351074
    10. '   ' → logprob: -9.313998222351074

Token 663: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0555778369307518
    2. ':' → logprob: -3.0555777549743652
    3. '               ' → logprob: -5.555577754974365
    4. ':
' → logprob: -6.430577754974365
    5. ',' → logprob: -7.680577754974365
    6. '=' → logprob: -8.305578231811523
    7. ' =' → logprob: -8.930578231811523
    8. ' if' → logprob: -8.930578231811523
    9. '       ' → logprob: -9.305578231811523
    10. ' :' → logprob: -9.430578231811523

Token 664: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6980870962142944
    2. ' if' → logprob: -0.8230870962142944
    3. '               ' → logprob: -3.073087215423584
    4. 'if' → logprob: -4.198087215423584
    5. ' ' → logprob: -7.698087215423584
    6. '            ' → logprob: -7.698087215423584
    7. ' ' → logprob: -7.823087215423584
    8. ' for' → logprob: -8.823086738586426
    9. '   ' → logprob: -9.073086738586426
    10. ' dp' → logprob: -9.698086738586426

Token 665: ' On' (ID: 2160)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8584821224212646
    2. ' if' → logprob: -0.8584821224212646
    3. '               ' → logprob: -1.9834821224212646
    4. ' 
' → logprob: -5.233482360839844
    5. 'if' → logprob: -5.608482360839844
    6. ' ' → logprob: -5.608482360839844
    7. ' ' → logprob: -7.233482360839844
    8. '   ' → logprob: -8.608482360839844
    9. '            ' → logprob: -8.608482360839844
    10. '            
' → logprob: -8.733482360839844

Token 666: ' vér' (ID: 42524)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.116655632853508
    2. ' if' → logprob: -2.2416555881500244
    3. '           ' → logprob: -5.9916558265686035
    4. '       ' → logprob: -7.9916558265686035
    5. 'dp' → logprob: -8.241655349731445
    6. '   ' → logprob: -9.241655349731445
    7. 'v' → logprob: -9.491655349731445
    8. 'update' → logprob: -9.991655349731445
    9. 's' → logprob: -10.116655349731445
    10. 'j' → logprob: -10.366655349731445

Token 667: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.3227460980415344
    2. 'rif' → logprob: -1.3227460384368896
    3. 'rite' → logprob: -5.072746276855469
    4. 'ite' → logprob: -6.947746276855469
    5. 'r' → logprob: -7.197746276855469
    6. 'if' → logprob: -7.572746276855469
    7. 'ife' → logprob: -8.697746276855469
    8. 'ifi' → logprob: -8.697746276855469
    9. 'er' → logprob: -8.947746276855469
    10. 'ritte' → logprob: -9.822746276855469

Token 668: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02670489065349102
    2. 'if' → logprob: -4.276704788208008
    3. ' j' → logprob: -4.526704788208008
    4. ' si' → logprob: -6.526704788208008
    5. ' ' → logprob: -9.651704788208008
    6. ' dp' → logprob: -10.526704788208008
    7. ' s' → logprob: -10.651704788208008
    8. 'j' → logprob: -10.651704788208008
    9. '   ' → logprob: -11.526704788208008
    10. ' ' → logprob: -11.651704788208008

Token 669: ' utiliser' (ID: 43227)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.7716178297996521
    2. ' j' → logprob: -1.3966178894042969
    3. 'dp' → logprob: -1.5216178894042969
    4. 'j' → logprob: -2.646617889404297
    5. '(dp' → logprob: -8.271617889404297
    6. '   ' → logprob: -8.521617889404297
    7. ' ' → logprob: -8.646617889404297
    8. '	dp' → logprob: -9.271617889404297
    9. ' (' → logprob: -9.396617889404297
    10. ' ' → logprob: -9.709117889404297

Token 670: ' la' (ID: 557)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.26348957419395447
    2. 'dp' → logprob: -1.8884896039962769
    3. ' j' → logprob: -3.2634894847869873
    4. ' nums' → logprob: -4.763489723205566
    5. 'nums' → logprob: -4.888489723205566
    6. 'num' → logprob: -5.138489723205566
    7. 'j' → logprob: -5.263489723205566
    8. ' num' → logprob: -5.513489723205566
    9. '(dp' → logprob: -5.763489723205566
    10. '   ' → logprob: -6.638489723205566

Token 671: ' pièce' (ID: 56132)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6395260095596313
    2. ' dp' → logprob: -0.8895260095596313
    3. 'num' → logprob: -3.139525890350342
    4. ' num' → logprob: -4.514525890350342
    5. ' new' → logprob: -6.389525890350342
    6. 'piece' → logprob: -7.014525890350342
    7. ' piece' → logprob: -7.264525890350342
    8. ' ' → logprob: -7.639525890350342
    9. '[num' → logprob: -8.1395263671875
    10. 'new' → logprob: -8.1395263671875

Token 672: ' '' (ID: 461)
  Prédit: ' num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.3135502338409424
    2. 'num' → logprob: -1.9385502338409424
    3. ' de' → logprob: -3.1885502338409424
    4. ' nums' → logprob: -3.1885502338409424
    5. '[num' → logprob: -4.688549995422363
    6. ' ' → logprob: -5.063549995422363
    7. ' j' → logprob: -5.563549995422363
    8. '   ' → logprob: -5.813549995422363
    9. 'nums' → logprob: -5.813549995422363
    10. ' at' → logprob: -6.063549995422363

Token 673: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.10061120241880417
    2. ' num' → logprob: -2.3506112098693848
    3. ''' → logprob: -8.975610733032227
    4. '   ' → logprob: -8.975610733032227
    5. ' ' → logprob: -9.975610733032227
    6. ' '' → logprob: -10.850610733032227
    7. '[num' → logprob: -11.350610733032227
    8. '	num' → logprob: -11.475610733032227
    9. 'nums' → logprob: -11.850610733032227
    10. '`' → logprob: -11.975610733032227

Token 674: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10286925733089447
    2. ' '' → logprob: -3.2278692722320557
    3. ' pour' → logprob: -3.2278692722320557
    4. '',' → logprob: -5.352869033813477
    5. ' permet' → logprob: -5.602869033813477
    6. 'pour' → logprob: -6.102869033813477
    7. '']' → logprob: -6.602869033813477
    8. '')' → logprob: -6.852869033813477
    9. ' ' → logprob: -7.977869033813477
    10. ']' → logprob: -7.977869033813477

Token 675: ' dim' (ID: 6051)
  Prédit: ' pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.28171399235725403
    2. ' et' → logprob: -2.6567139625549316
    3. ' permet' → logprob: -3.5317139625549316
    4. 'pour' → logprob: -3.6567139625549316
    5. ' dans' → logprob: -4.031713962554932
    6. 'et' → logprob: -4.281713962554932
    7. 'dans' → logprob: -4.906713962554932
    8. ' ' → logprob: -4.906713962554932
    9. ' for' → logprob: -5.031713962554932
    10. ' peut' → logprob: -5.281713962554932

Token 676: 'inue' (ID: 9329)
  Prédit: 'inue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inue' → logprob: -1.5928495486150496e-05
    2. 'inu' → logprob: -11.125016212463379
    3. 'ine' → logprob: -14.250016212463379
    4. 'i' → logprob: -16.500015258789062
    5. 'j' → logprob: -16.750015258789062
    6. 'inus' → logprob: -16.875015258789062
    7. 'p' → logprob: -17.250015258789062
    8. 'unie' → logprob: -17.375015258789062
    9. 'inie' → logprob: -17.375015258789062
    10. 'INUE' → logprob: -17.625015258789062

Token 677: ' le' (ID: 505)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3537057340145111
    2. 'dp' → logprob: -1.2287057638168335
    3. ' le' → logprob: -5.978705883026123
    4. '(dp' → logprob: -7.353705883026123
    5. '           ' → logprob: -7.478705883026123
    6. '   ' → logprob: -7.853705883026123
    7. 'le' → logprob: -7.853705883026123
    8. '	dp' → logprob: -7.978705883026123
    9. ' l' → logprob: -9.353705406188965
    10. 'l' → logprob: -9.478705406188965

Token 678: ' nombre' (ID: 9733)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.29419076442718506
    2. 'dp' → logprob: -1.419190764427185
    3. ' nombre' → logprob: -4.794190883636475
    4. 'nombre' → logprob: -5.544190883636475
    5. 'd' → logprob: -8.419190406799316
    6. 'p' → logprob: -8.919190406799316
    7. '   ' → logprob: -9.919190406799316
    8. '_dp' → logprob: -10.169190406799316
    9. '	dp' → logprob: -10.419190406799316
    10. ' ' → logprob: -10.419190406799316

Token 679: ' total' (ID: 3609)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7912576794624329
    2. '_' → logprob: -1.041257619857788
    3. '_dp' → logprob: -3.041257619857788
    4. '   ' → logprob: -3.416257619857788
    5. ' dp' → logprob: -3.666257619857788
    6. '_de' → logprob: -3.666257619857788
    7. '_d' → logprob: -4.291257858276367
    8. 'dp' → logprob: -4.291257858276367
    9. '           ' → logprob: -4.916257858276367
    10. '_min' → logprob: -5.291257858276367

Token 680: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.13591556251049042
    2. '_' → logprob: -3.260915517807007
    3. '_de' → logprob: -3.635915517807007
    4. ' dp' → logprob: -4.260915756225586
    5. '   ' → logprob: -4.385915756225586
    6. '           ' → logprob: -4.760915756225586
    7. '_dp' → logprob: -5.010915756225586
    8. 'de' → logprob: -5.510915756225586
    9. '_d' → logprob: -5.635915756225586
    10. 'dp' → logprob: -5.760915756225586

Token 681: ' pièces' (ID: 49165)
  Prédit: ' pieces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pieces' → logprob: -1.0546112060546875
    2. 'pieces' → logprob: -1.0546112060546875
    3. ' dp' → logprob: -1.9296112060546875
    4. 'dp' → logprob: -2.6796112060546875
    5. ' pièces' → logprob: -2.8046112060546875
    6. ' coins' → logprob: -4.0546112060546875
    7. 'coins' → logprob: -5.6796112060546875
    8. 'pi' → logprob: -5.8046112060546875
    9. ' morceaux' → logprob: -6.0546112060546875
    10. ' pi' → logprob: -7.4296112060546875

Token 682: ' nécessaires' (ID: 74402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04627489671111107
    2. '               ' → logprob: -3.9212749004364014
    3. ':' → logprob: -4.671274662017822
    4. ' if' → logprob: -5.296274662017822
    5. ',' → logprob: -5.671274662017822
    6. ' and' → logprob: -6.171274662017822
    7. ':
' → logprob: -6.671274662017822
    8. '   ' → logprob: -7.671274662017822
    9. ' for' → logprob: -7.796274662017822
    10. '[' → logprob: -7.921274662017822

Token 683: ' pour' (ID: 1930)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011692638508975506
    2. ':' → logprob: -5.386692523956299
    3. '               ' → logprob: -6.261692523956299
    4. ',' → logprob: -6.261692523956299
    5. ' if' → logprob: -6.886692523956299
    6. '   ' → logprob: -7.761692523956299
    7. ':
' → logprob: -7.886692523956299
    8. '.' → logprob: -8.636693000793457
    9. '            
' → logprob: -8.886693000793457
    10. ' =' → logprob: -9.136693000793457

Token 684: ' obtenir' (ID: 54423)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2831145226955414
    2. ' j' → logprob: -1.4081145524978638
    3. '   ' → logprob: -6.783114433288574
    4. 'form' → logprob: -7.658114433288574
    5. ' form' → logprob: -9.408114433288574
    6. 'former' → logprob: -10.033114433288574
    7. 'forming' → logprob: -10.158114433288574
    8. ' ' → logprob: -10.158114433288574
    9. ' forming' → logprob: -10.658114433288574
    10. '[j' → logprob: -10.783114433288574

Token 685: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.3487452566623688
    2. 'j' → logprob: -1.2237452268600464
    3. '   ' → logprob: -8.598745346069336
    4. '[j' → logprob: -9.848745346069336
    5. ' ' → logprob: -11.223745346069336
    6. '(j' → logprob: -11.723745346069336
    7. ' le' → logprob: -12.098745346069336
    8. '    ' → logprob: -12.223745346069336
    9. ' la' → logprob: -12.223745346069336
    10. '	j' → logprob: -12.473745346069336

Token 686: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007100143004208803
    2. '+' → logprob: -5.1321001052856445
    3. ' +' → logprob: -7.6321001052856445
    4. ' ' → logprob: -8.632100105285645
    5. '_' → logprob: -9.007100105285645
    6. '   ' → logprob: -9.132100105285645
    7. ' j' → logprob: -10.319600105285645
    8. '`' → logprob: -10.444600105285645
    9. '    ' → logprob: -10.757100105285645
    10. ',' → logprob: -10.944600105285645

Token 687: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38305437564849854
    2. '+' → logprob: -1.6330543756484985
    3. '           ' → logprob: -2.133054256439209
    4. ':
' → logprob: -7.133054256439209
    5. ':' → logprob: -7.258054256439209
    6. '+j' → logprob: -7.383054256439209
    7. '               ' → logprob: -7.633054256439209
    8. ' and' → logprob: -7.633054256439209
    9. '1' → logprob: -8.383054733276367
    10. '       ' → logprob: -8.758054733276367

Token 688: 'num' (ID: 4571)
  Prédit: 'num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.011083188466727734
    2. ' num' → logprob: -4.511083126068115
    3. '   ' → logprob: -11.261083602905273
    4. '	num' → logprob: -12.136083602905273
    5. '[num' → logprob: -12.886083602905273
    6. '_num' → logprob: -13.386083602905273
    7. 'nu' → logprob: -13.386083602905273
    8. ' ' → logprob: -13.636083602905273
    9. '    ' → logprob: -13.636083602905273
    10. '```' → logprob: -14.136083602905273

Token 689: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022422149777412415
    2. ':' → logprob: -4.1474223136901855
    3. ':
' → logprob: -6.0224223136901855
    4. '               ' → logprob: -6.5224223136901855
    5. ',' → logprob: -7.3974223136901855
    6. ' if' → logprob: -7.6474223136901855
    7. 'if' → logprob: -8.397421836853027
    8. '.' → logprob: -8.772421836853027
    9. '[' → logprob: -9.022421836853027
    10. ')' → logprob: -9.147421836853027

Token 690: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025783937890082598
    2. '               ' → logprob: -6.127578258514404
    3. ':' → logprob: -9.127578735351562
    4. ' if' → logprob: -9.377578735351562
    5. ',' → logprob: -10.252578735351562
    6. '   ' → logprob: -10.627578735351562
    7. '       ' → logprob: -10.752578735351562
    8. 'dp' → logprob: -10.877578735351562
    9. 'if' → logprob: -11.252578735351562
    10. '                   ' → logprob: -11.627578735351562

Token 691: ' dp' (ID: 21546)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09812584519386292
    2. '               ' → logprob: -2.72312593460083
    3. ' if' → logprob: -4.22312593460083
    4. ' for' → logprob: -4.97312593460083
    5. 'for' → logprob: -5.59812593460083
    6. 'if' → logprob: -6.34812593460083
    7. 'dp' (adapté à ' dp') → logprob: -8.973125457763672
    8. '       ' → logprob: -9.348125457763672
    9. '            ' → logprob: -9.473125457763672
    10. 'j' → logprob: -9.598125457763672

Token 692: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.5332478142227046e-05
    2. '[' → logprob: -11.125015258789062
    3. 'j' → logprob: -15.125015258789062
    4. ' [' → logprob: -15.375015258789062
    5. '   ' → logprob: -18.750015258789062
    6. '[i' → logprob: -18.875015258789062
    7. '[min' → logprob: -18.875015258789062
    8. '[js' → logprob: -19.125015258789062
    9. '[
' → logprob: -19.250015258789062
    10. '[num' → logprob: -19.375015258789062

Token 693: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008365504327230155
    2. '+' → logprob: -7.125836372375488
    3. ' +' → logprob: -10.625836372375488
    4. ' ' → logprob: -12.750836372375488
    5. ']' → logprob: -13.750836372375488
    6. '   ' → logprob: -14.250836372375488
    7. '           ' → logprob: -14.375836372375488
    8. '+j' → logprob: -14.375836372375488
    9. ']+' → logprob: -15.000836372375488
    10. '```' → logprob: -15.625836372375488

Token 694: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868745267391205
    2. '+' → logprob: -1.1368745565414429
    3. ']' → logprob: -13.511874198913574
    4. ' ' → logprob: -13.761874198913574
    5. ' ' → logprob: -14.761874198913574
    6. ']+' → logprob: -15.636874198913574
    7. '   ' → logprob: -15.636874198913574
    8. ' plus' → logprob: -15.886874198913574
    9. '＋' → logprob: -16.88687515258789
    10. ' +
' → logprob: -17.38687515258789

Token 695: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -7.493430894101039e-05
    2. ' num' → logprob: -9.500075340270996
    3. '   ' → logprob: -18.12507438659668
    4. '[num' → logprob: -18.25007438659668
    5. '	num' → logprob: -18.62507438659668
    6. ' ' → logprob: -18.87507438659668
    7. '(num' → logprob: -19.75007438659668
    8. 'nums' → logprob: -20.12507438659668
    9. '=num' → logprob: -20.25007438659668
    10. ',num' → logprob: -20.62507438659668

Token 696: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.231182826217264e-05
    2. ']=' → logprob: -9.625072479248047
    3. ' ]' → logprob: -12.125072479248047
    4. '=' → logprob: -14.375072479248047
    5. '])' → logprob: -16.375072479248047
    6. ' =' → logprob: -17.375072479248047
    7. '],' → logprob: -17.625072479248047
    8. 'min' → logprob: -18.000072479248047
    9. '']' → logprob: -18.125072479248047
    10. ')' → logprob: -18.375072479248047

Token 697: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.030038809403777122
    2. ' =' → logprob: -3.530038833618164
    3. '=min' → logprob: -8.155038833618164
    4. 'min' → logprob: -13.905038833618164
    5. '=max' → logprob: -17.280038833618164
    6. '   ' → logprob: -18.155038833618164
    7. ' min' → logprob: -18.405038833618164
    8. '＝' → logprob: -18.905038833618164
    9. '=

' → logprob: -19.030038833618164
    10. '=
' → logprob: -19.405038833618164

Token 698: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.011048408225178719
    2. ' min' → logprob: -4.511048316955566
    3. '	min' → logprob: -14.261048316955566
    4. '   ' → logprob: -17.011049270629883
    5. '(min' → logprob: -18.761049270629883
    6. '[min' → logprob: -18.761049270629883
    7. 'max' → logprob: -19.011049270629883
    8. ' ' → logprob: -20.511049270629883
    9. ',min' → logprob: -21.136049270629883
    10. '=min' → logprob: -21.261049270629883

Token 699: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -5.848420551046729e-05
    2. '(' → logprob: -9.7500581741333
    3. '(
' → logprob: -16.000059127807617
    4. 'dp' → logprob: -19.250059127807617
    5. '(d' → logprob: -19.375059127807617
    6. ' (' → logprob: -19.625059127807617
    7. '(dt' → logprob: -19.875059127807617
    8. '	dp' → logprob: -20.500059127807617
    9. '(df' → logprob: -20.625059127807617
    10. '(

' → logprob: -21.000059127807617

Token 700: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.4974866644479334e-05
    2. '[' → logprob: -11.125015258789062
    3. 'dp' → logprob: -16.500015258789062
    4. 'j' → logprob: -17.125015258789062
    5. '[
' → logprob: -17.875015258789062
    6. ' [' → logprob: -18.000015258789062
    7. '[js' → logprob: -18.250015258789062
    8. '[i' → logprob: -19.125015258789062
    9. '(j' → logprob: -19.500015258789062
    10. '[d' → logprob: -19.750015258789062

Token 701: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00048536903341300786
    2. '+' → logprob: -7.750485420227051
    3. ' +' → logprob: -10.50048542022705
    4. ']' → logprob: -11.62548542022705
    5. '+j' → logprob: -12.12548542022705
    6. '[num' → logprob: -12.87548542022705
    7. '[j' → logprob: -13.37548542022705
    8. ' ' → logprob: -14.00048542022705
    9. '   ' → logprob: -14.00048542022705
    10. ')' → logprob: -14.00048542022705

Token 702: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1441275179386139
    2. '+j' → logprob: -2.644127607345581
    3. '[j' → logprob: -2.894127607345581
    4. ' +' → logprob: -4.894127368927002
    5. ']' → logprob: -9.01912784576416
    6. '],' → logprob: -9.51912784576416
    7. ']+' → logprob: -9.89412784576416
    8. '   ' → logprob: -10.26912784576416
    9. '[' → logprob: -11.01912784576416
    10. 'j' → logprob: -11.76912784576416

Token 703: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.001048646867275238
    2. ' num' → logprob: -6.876048564910889
    3. ' ' → logprob: -12.251049041748047
    4. '   ' → logprob: -12.626049041748047
    5. '[num' → logprob: -12.751049041748047
    6. '1' → logprob: -13.001049041748047
    7. '(num' → logprob: -14.251049041748047
    8. '  ' → logprob: -14.751049041748047
    9. '     ' → logprob: -15.126049041748047
    10. '	num' → logprob: -15.251049041748047

Token 704: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022557605989277363
    2. ' ,' → logprob: -6.127255916595459
    3. '],' → logprob: -9.7522554397583
    4. 'dp' → logprob: -12.0022554397583
    5. ',
' → logprob: -13.1272554397583
    6. '   ' → logprob: -13.2522554397583
    7. ' dp' → logprob: -14.0022554397583
    8. '(dp' → logprob: -15.5022554397583
    9. '),' → logprob: -15.7522554397583
    10. ']' → logprob: -15.7522554397583

Token 705: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06204286217689514
    2. ' dp' → logprob: -2.8120429515838623
    3. '           ' → logprob: -10.312043190002441
    4. '               ' → logprob: -11.312043190002441
    5. '	dp' → logprob: -11.937043190002441
    6. '              ' → logprob: -12.687043190002441
    7. '            ' → logprob: -12.937043190002441
    8. '   ' → logprob: -12.937043190002441
    9. '                ' → logprob: -13.062043190002441
    10. '             ' → logprob: -13.062043190002441

Token 706: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.5
    3. 'j' → logprob: -16.875
    4. ' [' → logprob: -18.875
    5. '[
' → logprob: -19.25
    6. '[js' → logprob: -21.125
    7. '[i' → logprob: -21.375
    8. '   ' → logprob: -21.75
    9. '	j' → logprob: -22.375
    10. '```' → logprob: -22.5

Token 707: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.061054359131958e-06
    2. '[j' → logprob: -12.750007629394531
    3. '_' → logprob: -13.125007629394531
    4. '+' → logprob: -14.000007629394531
    5. '```' → logprob: -14.250007629394531
    6. '_j' → logprob: -14.375007629394531
    7. '[' → logprob: -14.875007629394531
    8. '+j' → logprob: -15.250007629394531
    9. ']' → logprob: -16.50000762939453
    10. ']+' → logprob: -16.62500762939453

Token 708: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009907725034281611
    2. ' ]' → logprob: -7.500990867614746
    3. ']+' → logprob: -7.750990867614746
    4. '   ' → logprob: -12.750990867614746
    5. '+' → logprob: -13.125990867614746
    6. '[' → logprob: -14.125990867614746
    7. ' +' → logprob: -14.250990867614746
    8. ' ' → logprob: -14.875990867614746
    9. '    ' → logprob: -16.12598991394043
    10. '  ' → logprob: -16.25098991394043

Token 709: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3868762254714966
    2. '+' → logprob: -1.1368762254714966
    3. ')' → logprob: -13.511876106262207
    4. ']' → logprob: -13.761876106262207
    5. ']+' → logprob: -14.011876106262207
    6. ' ' → logprob: -14.636876106262207
    7. ')+' → logprob: -14.886876106262207
    8. '1' → logprob: -15.136876106262207
    9. ' ' → logprob: -15.261876106262207
    10. ' plus' → logprob: -16.136877059936523

Token 710: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.12506675720215
    4. '  ' → logprob: -20.12506675720215
    5. '１' → logprob: -20.62506675720215
    6. '```' → logprob: -20.81256675720215
    7. ' ' → logprob: -21.31256675720215
    8. '2' → logprob: -21.56256675720215
    9. '0' → logprob: -21.75006675720215
    10. '    ' → logprob: -21.87506675720215

Token 711: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5597102396423e-05
    2. ' ' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.500036239624023
    4. '１' → logprob: -18.937536239624023
    5. '  ' → logprob: -19.312536239624023
    6. '[' → logprob: -19.687536239624023
    7. '```' → logprob: -19.875036239624023
    8. '100' → logprob: -20.250036239624023
    9. '2' → logprob: -20.375036239624023
    10. '
' → logprob: -20.375036239624023

Token 712: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4855663721391466e-05
    2. ')
' → logprob: -11.250015258789062
    3. ' )' → logprob: -13.375015258789062
    4. '   ' → logprob: -16.000015258789062
    5. '       ' → logprob: -16.625015258789062
    6. '<|end|>' → logprob: -17.750015258789062
    7. '),' → logprob: -18.750015258789062
    8. ')#' → logprob: -19.000015258789062
    9. ')

' → logprob: -19.125015258789062
    10. ')
' → logprob: -19.250015258789062

Token 713: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5829017758369446
    2. '<|end|>' → logprob: -0.9579017758369446
    3. '\n' → logprob: -3.0829017162323
    4. ' 
' → logprob: -5.832901954650879
    5. ' ' → logprob: -5.957901954650879
    6. '  
' → logprob: -6.332901954650879
    7. '   ' → logprob: -6.957901954650879
    8. '    
' → logprob: -7.457901954650879
    9. ')' → logprob: -7.457901954650879
    10. '```' → logprob: -7.832901954650879

Token 714: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7394176125526428
    2. 'print' → logprob: -0.7394176125526428
    3. 'for' → logprob: -3.239417552947998
    4. ' for' → logprob: -5.989417552947998
    5. 'result' → logprob: -6.864417552947998
    6. 'n' → logprob: -7.739417552947998
    7. ' print' → logprob: -7.864417552947998
    8. 'if' → logprob: -7.989417552947998
    9. '    
' → logprob: -8.364418029785156
    10. 'return' → logprob: -8.614418029785156

Token 715: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1269567757844925
    2. 'result' → logprob: -2.5019567012786865
    3. 'for' → logprob: -4.126956939697266
    4. '#' → logprob: -5.251956939697266
    5. 'answer' → logprob: -5.751956939697266
    6. 'min' → logprob: -5.876956939697266
    7. 'res' → logprob: -6.001956939697266
    8. '   ' → logprob: -6.126956939697266
    9. 'ans' → logprob: -6.376956939697266
    10. 'm' → logprob: -6.626956939697266

Token 716: 'iche' (ID: 7509)
  Prédit: 'iche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iche' → logprob: -0.2115737944841385
    2. 'icher' → logprob: -1.711573839187622
    3. 'ichage' → logprob: -5.086573600769043
    4. 'ich' → logprob: -5.836573600769043
    5. '#' → logprob: -7.461573600769043
    6. 'ic' → logprob: -8.836573600769043
    7. '   ' → logprob: -9.086573600769043
    8. 'i' → logprob: -9.711573600769043
    9. '```' → logprob: -10.586573600769043
    10. 'iché' → logprob: -11.086573600769043

Token 717: ' le' (ID: 505)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0029661727603524923
    2. '(' → logprob: -6.002966403961182
    3. '(
' → logprob: -8.627965927124023
    4. '(min' → logprob: -8.752965927124023
    5. 'dp' → logprob: -9.252965927124023
    6. '(n' → logprob: -10.252965927124023
    7. '(sum' → logprob: -11.627965927124023
    8. '(max' → logprob: -12.502965927124023
    9. '(len' → logprob: -13.252965927124023
    10. ' dp' → logprob: -13.752965927124023

Token 718: ' nombre' (ID: 9733)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.578077495098114
    2. '(dp' → logprob: -0.828077495098114
    3. '(min' → logprob: -6.95307731628418
    4. 'min' → logprob: -7.45307731628418
    5. ' dp' → logprob: -7.95307731628418
    6. '(' → logprob: -9.57807731628418
    7. 'n' → logprob: -9.57807731628418
    8. 'result' → logprob: -10.57807731628418
    9. 'print' → logprob: -10.57807731628418
    10. '(n' → logprob: -10.70307731628418

Token 719: ' minimum' (ID: 11085)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020062008872628212
    2. '(dp' → logprob: -4.02006196975708
    3. ' (' → logprob: -8.020062446594238
    4. '   ' → logprob: -8.145062446594238
    5. '(
' → logprob: -8.145062446594238
    6. '(min' → logprob: -8.270062446594238
    7. 'dp' → logprob: -8.395062446594238
    8. '()' → logprob: -8.895062446594238
    9. '(n' → logprob: -8.895062446594238
    10. 'min' → logprob: -9.020062446594238

Token 720: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5786454677581787
    2. '(dp' → logprob: -0.8286454677581787
    3. 'dp' → logprob: -6.328645706176758
    4. '(
' → logprob: -7.953645706176758
    5. ' (' → logprob: -8.578645706176758
    6. '   ' → logprob: -8.828645706176758
    7. '()' → logprob: -9.328645706176758
    8. ' dp' → logprob: -10.203645706176758
    9. '(n' → logprob: -10.203645706176758
    10. '(min' → logprob: -10.953645706176758

Token 721: ' pièces' (ID: 49165)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1205616146326065
    2. 'pieces' → logprob: -2.3705615997314453
    3. ' dp' → logprob: -4.495561599731445
    4. 'pi' → logprob: -5.495561599731445
    5. 'coins' → logprob: -6.120561599731445
    6. ' pièces' → logprob: -6.870561599731445
    7. ' pieces' → logprob: -7.120561599731445
    8. 'p' → logprob: -7.870561599731445
    9. 'tokens' → logprob: -9.245561599731445
    10. 'pies' → logprob: -9.745561599731445

Token 722: ' nécessaires' (ID: 74402)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.08928436040878296
    2. '(dp' → logprob: -2.9642844200134277
    3. 'dp' → logprob: -4.089284420013428
    4. '[n' → logprob: -4.714284420013428
    5. '(' → logprob: -5.214284420013428
    6. '   ' → logprob: -6.589284420013428
    7. 'n' → logprob: -7.214284420013428
    8. 'print' → logprob: -8.71428394317627
    9. '(nums' → logprob: -9.96428394317627
    10. '()' → logprob: -10.08928394317627

Token 723: ' pour' (ID: 1930)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2933349907398224
    2. '   ' → logprob: -1.4183349609375
    3. '(' → logprob: -5.1683349609375
    4. '(n' → logprob: -6.0433349609375
    5. '(print' → logprob: -6.0433349609375
    6. ' print' → logprob: -7.5433349609375
    7. '(dp' → logprob: -7.7933349609375
    8. 'for' → logprob: -8.4183349609375
    9. 'dp' → logprob: -8.6683349609375
    10. '()' → logprob: -9.4183349609375

Token 724: ' former' (ID: 9254)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.22557075321674347
    2. ' n' → logprob: -1.600570797920227
    3. 'form' → logprob: -9.850570678710938
    4. ' form' → logprob: -9.850570678710938
    5. ' ' → logprob: -11.100570678710938
    6. ' obtenir' → logprob: -11.350570678710938
    7. ' atteindre' → logprob: -12.350570678710938
    8. 'constit' → logprob: -12.850570678710938
    9. '   ' → logprob: -13.100570678710938
    10. '(n' → logprob: -13.225570678710938

Token 725: ' le' (ID: 505)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3485115170478821
    2. 'n' → logprob: -1.2235114574432373
    3. '[n' → logprob: -10.348511695861816
    4. '(n' → logprob: -11.223511695861816
    5. ' le' → logprob: -12.223511695861816
    6. '   ' → logprob: -12.223511695861816
    7. ' ' → logprob: -12.973511695861816
    8. 'le' → logprob: -12.973511695861816
    9. ' la' → logprob: -13.723511695861816
    10. '	n' → logprob: -13.723511695861816

Token 726: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.2378600735682994e-05
    2. ' n' → logprob: -10.375032424926758
    3. 'nombre' → logprob: -14.000032424926758
    4. 'num' → logprob: -15.500032424926758
    5. 'number' → logprob: -17.000032424926758
    6. '[n' → logprob: -17.750032424926758
    7. '2' → logprob: -17.875032424926758
    8. '`' → logprob: -18.125032424926758
    9. '   ' → logprob: -18.125032424926758
    10. ' ' → logprob: -18.500032424926758

Token 727: ' '' (ID: 461)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0014282134361565113
    2. ' n' → logprob: -7.001428127288818
    3. '[n' → logprob: -7.626428127288818
    4. '   ' → logprob: -10.751428604125977
    5. '(n' → logprob: -11.876428604125977
    6. '[' → logprob: -14.876428604125977
    7. '`' → logprob: -15.626428604125977
    8. 'print' → logprob: -16.876428604125977
    9. '	n' → logprob: -16.876428604125977
    10. '```' → logprob: -17.376428604125977

Token 728: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00020795092859771103
    2. ' n' → logprob: -8.500207901000977
    3. '2' → logprob: -13.000207901000977
    4. '   ' → logprob: -13.500207901000977
    5. '(n' → logprob: -15.250207901000977
    6. '[n' → logprob: -15.625207901000977
    7. ' ' → logprob: -16.125207901000977
    8. '`' → logprob: -16.750207901000977
    9. '	n' → logprob: -17.000207901000977
    10. '    ' → logprob: -17.500207901000977

Token 729: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5718408823013306
    2. 'print' → logprob: -1.1968408823013306
    3. '   ' → logprob: -2.321840763092041
    4. ')
' → logprob: -3.446840763092041
    5. ',' → logprob: -6.196840763092041
    6. ' print' → logprob: -6.946840763092041
    7. '
' → logprob: -8.5718412399292
    8. ' )' → logprob: -9.9468412399292
    9. 'dp' → logprob: -10.5718412399292
    10. '+' → logprob: -10.8218412399292

Token 730: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.015323561616241932
    2. '   ' → logprob: -4.265323638916016
    3. ' print' → logprob: -6.765323638916016
    4. '```' → logprob: -12.015323638916016
    5. '
' → logprob: -16.140323638916016
    6. '	print' → logprob: -16.265323638916016
    7. '(print' → logprob: -17.890323638916016
    8. '``' → logprob: -18.015323638916016
    9. '    
' → logprob: -18.265323638916016
    10. '`' → logprob: -18.390323638916016

Token 731: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.008874312974512577
    2. '   ' → logprob: -4.758874416351318
    3. ' print' → logprob: -8.25887393951416
    4. '```' → logprob: -14.13387393951416
    5. '	print' → logprob: -17.008874893188477
    6. '
' → logprob: -17.383874893188477
    7. '.print' → logprob: -19.133874893188477
    8. '#print' → logprob: -19.383874893188477
    9. '(print' → logprob: -19.383874893188477
    10. '`' → logprob: -19.508874893188477

Token 732: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -7.517272024415433e-05
    2. '(' → logprob: -9.500075340270996
    3. 'dp' → logprob: -15.750075340270996
    4. ' (' → logprob: -16.25007438659668
    5. ' dp' → logprob: -18.37507438659668
    6. '(df' → logprob: -18.75007438659668
    7. '	dp' → logprob: -19.50007438659668
    8. '()' → logprob: -19.62507438659668
    9. '(
' → logprob: -19.62507438659668
    10. '(dc' → logprob: -20.12507438659668

Token 733: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -4.320199877838604e-07
    2. 'n' → logprob: -15.0
    3. '[' → logprob: -20.125
    4. ')n' → logprob: -21.875
    5. '[num' → logprob: -22.25
    6. '[N' → logprob: -23.0
    7. '[i' → logprob: -23.0
    8. ' [' → logprob: -23.25
    9. '[j' → logprob: -23.25
    10. '[m' → logprob: -23.375

Token 734: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -6.623244553338736e-05
    2. ')' → logprob: -10.000065803527832
    3. ']' → logprob: -11.125065803527832
    4. ' ])' → logprob: -12.250065803527832
    5. '])
' → logprob: -14.125065803527832
    6. '))' → logprob: -15.375065803527832
    7. ')]' → logprob: -16.00006675720215
    8. ')])' → logprob: -16.25006675720215
    9. ']))' → logprob: -17.25006675720215
    10. '],' → logprob: -17.37506675720215

Token 735: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 736: ' Ce' (ID: 14228)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0009240844519808888
    2. 'main' → logprob: -7.000924110412598
    3. ' if' → logprob: -12.125924110412598
    4. '
' → logprob: -12.500924110412598
    5. '#' → logprob: -13.125924110412598
    6. '```' → logprob: -14.000924110412598
    7. '<|end|>' → logprob: -15.875924110412598
    8. 'print' → logprob: -16.37592315673828
    9. '__' → logprob: -16.50092315673828
    10. '(main' → logprob: -16.62592315673828

Token 737: ' bloc' (ID: 51218)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0032550732139497995
    2. '

' → logprob: -6.6282548904418945
    3. '
' → logprob: -7.0032548904418945
    4. ' if' → logprob: -7.3782548904418945
    5. '\' → logprob: -9.503254890441895
    6. '\n' → logprob: -9.503254890441895
    7. '```' → logprob: -9.753254890441895
    8. '=' → logprob: -10.253254890441895
    9. '<|end|>' → logprob: -10.503254890441895
    10. '_' → logprob: -10.628254890441895

Token 738: ' assure' (ID: 38361)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004344786982983351
    2. ' if' → logprob: -6.254344940185547
    3. '_' → logprob: -6.379344940185547
    4. '
' → logprob: -8.629344940185547
    5. '=' → logprob: -9.004344940185547
    6. '<|end|>' → logprob: -9.004344940185547
    7. '_if' → logprob: -9.254344940185547
    8. '{' → logprob: -9.754344940185547
    9. ' =' → logprob: -9.879344940185547
    10. '```' → logprob: -11.629344940185547

Token 739: ' que' (ID: 661)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00046320082037709653
    2. ' if' → logprob: -7.750463008880615
    3. '_if' → logprob: -11.375463485717773
    4. '__' → logprob: -12.125463485717773
    5. '_' → logprob: -12.500463485717773
    6. ':' → logprob: -12.625463485717773
    7. '```' → logprob: -12.875463485717773
    8. 'If' → logprob: -13.250463485717773
    9. '{' → logprob: -13.875463485717773
    10. 'ifs' → logprob: -14.875463485717773

Token 740: ' la' (ID: 557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04015097767114639
    2. '__' → logprob: -3.2901508808135986
    3. ' if' → logprob: -6.290151119232178
    4. '```' → logprob: -8.91515064239502
    5. ' __' → logprob: -9.29015064239502
    6. '_if' → logprob: -12.41515064239502
    7. 'If' → logprob: -12.91515064239502
    8. 'the' → logprob: -12.91515064239502
    9. '
' → logprob: -13.04015064239502
    10. '_' → logprob: -13.41515064239502

Token 741: ' fonction' (ID: 17610)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3133179843425751
    2. '__' → logprob: -1.3133180141448975
    3. ' if' → logprob: -10.188318252563477
    4. ' __' → logprob: -11.313318252563477
    5. '```' → logprob: -12.438318252563477
    6. '_' → logprob: -14.438318252563477
    7. 'name' → logprob: -14.563318252563477
    8. '___' → logprob: -15.188318252563477
    9. '_if' → logprob: -15.313318252563477
    10. '`' → logprob: -15.313318252563477

Token 742: ' main' (ID: 2758)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.016500327736139297
    2. '__' → logprob: -4.266500473022461
    3. ' if' → logprob: -6.266500473022461
    4. ' __' → logprob: -8.766500473022461
    5. 'main' → logprob: -9.016500473022461
    6. '_' → logprob: -10.016500473022461
    7. '_if' → logprob: -10.016500473022461
    8. ' main' → logprob: -10.641500473022461
    9. '_main' → logprob: -10.641500473022461
    10. '```' → logprob: -11.891500473022461

Token 743: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.019855646416544914
    2. '_' → logprob: -4.644855499267578
    3. '__' → logprob: -4.644855499267578
    4. 'if' → logprob: -8.519855499267578
    5. '()==' → logprob: -9.269855499267578
    6. '()
' → logprob: -10.269855499267578
    7. ' is' → logprob: -11.394855499267578
    8. '().__' → logprob: -11.519855499267578
    9. '(' → logprob: -11.644855499267578
    10. '#' → logprob: -11.644855499267578

Token 744: ' n' (ID: 297)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0012608295073732734
    2. ' if' → logprob: -7.001260757446289
    3. '```' → logprob: -8.876260757446289
    4. ' is' → logprob: -9.626260757446289
    5. '
' → logprob: -10.001260757446289
    6. '()' → logprob: -10.126260757446289
    7. '<|end|>' → logprob: -11.626260757446289
    8. '_' → logprob: -11.751260757446289
    9. 'is' → logprob: -12.251260757446289
    10. '__' → logprob: -12.376260757446289

Token 745: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.2604113519191742
    2. 'if' → logprob: -2.135411262512207
    3. '__' → logprob: -3.260411262512207
    4. '#' → logprob: -4.510411262512207
    5. 'est' → logprob: -4.510411262512207
    6. 'a' → logprob: -4.760411262512207
    7. '’est' → logprob: -5.010411262512207
    8. ''' → logprob: -5.135411262512207
    9. '.py' → logprob: -5.260411262512207
    10. '```' → logprob: -5.635411262512207

Token 746: ' appelée' (ID: 179130)
  Prédit: 'appel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'appel' → logprob: -0.7052519917488098
    2. '__' → logprob: -1.830251932144165
    3. 'ex' → logprob: -2.080251932144165
    4. 'execut' → logprob: -2.330251932144165
    5. 'pas' → logprob: -2.830251932144165
    6. ' exécut' → logprob: -3.705251932144165
    7. 'app' → logprob: -4.080252170562744
    8. ' appelée' → logprob: -4.580252170562744
    9. '_ex' → logprob: -5.955252170562744
    10. ''appel' → logprob: -6.080252170562744

Token 747: ' que' (ID: 661)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010954678989946842
    2. '
' → logprob: -5.510954856872559
    3. ' if' → logprob: -5.510954856872559
    4. '```' → logprob: -6.635954856872559
    5. 'only' → logprob: -7.760954856872559
    6. ' only' → logprob: -8.135954856872559
    7. ' uniquement' → logprob: -9.135954856872559
    8. '   ' → logprob: -9.260954856872559
    9. '  
' → logprob: -9.635954856872559
    10. '(
' → logprob: -9.760954856872559

Token 748: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.009975998662412167
    2. ' si' → logprob: -6.009975910186768
    3. 'si' → logprob: -6.134975910186768
    4. ' if' → logprob: -6.509975910186768
    5. ' lorsque' → logprob: -6.634975910186768
    6. '```' → logprob: -7.259975910186768
    7. ' lorsqu' → logprob: -7.384975910186768
    8. '__' → logprob: -7.884975910186768
    9. 'l' → logprob: -8.259976387023926
    10. 'dans' → logprob: -9.384976387023926

Token 749: ' le' (ID: 505)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.002807013690471649
    2. ' __' → logprob: -5.877807140350342
    3. '_' → logprob: -13.377806663513184
    4. 'name' → logprob: -15.377806663513184
    5. '_name' → logprob: -16.1278076171875
    6. '___' → logprob: -16.2528076171875
    7. '/__' → logprob: -16.8778076171875
    8. ' ' → logprob: -17.0028076171875
    9. '```' → logprob: -17.3778076171875
    10. ' ' → logprob: -17.3778076171875

Token 750: ' fichier' (ID: 69637)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0004934602184221148
    2. ' __' → logprob: -7.62549352645874
    3. '```' → logprob: -13.250493049621582
    4. 'name' → logprob: -13.500493049621582
    5. '___' → logprob: -13.625493049621582
    6. '_name' → logprob: -15.000493049621582
    7. 'if' → logprob: -15.875493049621582
    8. '.__' → logprob: -16.0004940032959
    9. '/__' → logprob: -16.3754940032959
    10. '_' → logprob: -16.6254940032959

Token 751: ' est' (ID: 893)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003150980919599533
    2. ' __' → logprob: -6.003150939941406
    3. '_name' → logprob: -8.253150939941406
    4. ' is' → logprob: -9.253150939941406
    5. 'if' → logprob: -9.503150939941406
    6. '_' → logprob: -9.503150939941406
    7. '.__' → logprob: -9.628150939941406
    8. 'name' → logprob: -10.628150939941406
    9. '==' → logprob: -11.003150939941406
    10. ' ==' → logprob: -11.628150939941406

Token 752: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0013683346332982183
    2. ' __' → logprob: -7.251368522644043
    3. ' exécut' → logprob: -7.876368522644043
    4. 'execut' → logprob: -9.251368522644043
    5. '_ex' → logprob: -9.501368522644043
    6. '```' → logprob: -10.376368522644043
    7. 'run' → logprob: -10.626368522644043
    8. 'ex' → logprob: -10.751368522644043
    9. ' run' → logprob: -11.501368522644043
    10. '_run' → logprob: -11.751368522644043

Token 753: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003404540242627263
    2. ' __' → logprob: -6.37840461730957
    3. 'if' → logprob: -7.12840461730957
    4. ' en' → logprob: -8.00340461730957
    5. 'direct' → logprob: -8.50340461730957
    6. '_' → logprob: -9.75340461730957
    7. '_name' → logprob: -10.12840461730957
    8. '_direct' → logprob: -10.50340461730957
    9. ' directement' → logprob: -10.50340461730957
    10. ' as' → logprob: -10.87840461730957

Token 754: ' comme' (ID: 7971)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0159907266497612
    2. '
' → logprob: -5.015990734100342
    3. ' if' → logprob: -5.140990734100342
    4. ' as' → logprob: -6.390990734100342
    5. '__' → logprob: -7.265990734100342
    6. 'as' → logprob: -7.265990734100342
    7. '_as' → logprob: -9.515990257263184
    8. '```' → logprob: -9.765990257263184
    9. ' en' → logprob: -10.640990257263184
    10. '_if' → logprob: -10.765990257263184

Token 755: ' programme' (ID: 18190)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009826921857893467
    2. ' __' → logprob: -5.634827136993408
    3. ' le' → logprob: -6.134827136993408
    4. ' un' → logprob: -6.259827136993408
    5. 'principal' → logprob: -6.884827136993408
    6. 'le' → logprob: -8.00982666015625
    7. ' principal' → logprob: -8.25982666015625
    8. 'un' → logprob: -8.25982666015625
    9. '_le' → logprob: -8.63482666015625
    10. '_un' → logprob: -11.00982666015625

Token 756: ' principal' (ID: 10589)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.023533238098025322
    2. 'if' → logprob: -4.148533344268799
    3. '

' → logprob: -5.148533344268799
    4. '\n' → logprob: -7.148533344268799
    5. '```' → logprob: -7.898533344268799
    6. ' if' → logprob: -9.02353286743164
    7. '  
' → logprob: -9.14853286743164
    8. '
' → logprob: -9.64853286743164
    9. '\' → logprob: -9.89853286743164
    10. ' 
' → logprob: -10.02353286743164

Token 757: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25288906693458557
    2. 'if' → logprob: -1.5028890371322632
    3. '

' → logprob: -7.752889156341553
    4. '\n' → logprob: -8.377888679504395
    5. ' if' → logprob: -8.627888679504395
    6. '  
' → logprob: -9.752888679504395
    7. '```' → logprob: -10.627888679504395
    8. '    
' → logprob: -11.377888679504395
    9. ' 
' → logprob: -11.752888679504395
    10. ':
' → logprob: -12.002888679504395

Token 758: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0020264238119125366
    2. '
' → logprob: -6.252026557922363
    3. ' if' → logprob: -9.502026557922363
    4. '```' → logprob: -10.877026557922363
    5. '  
' → logprob: -13.377026557922363
    6. '\n' → logprob: -13.752026557922363
    7. '    
' → logprob: -14.252026557922363
    8. ' 
' → logprob: -15.252026557922363
    9. '

' → logprob: -15.252026557922363
    10. '\' → logprob: -15.877026557922363

Token 759: ' __' (ID: 2516)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.8074162653647363e-05
    2. ' if' → logprob: -11.500018119812012
    3. '
' → logprob: -11.750018119812012
    4. '```' → logprob: -17.625017166137695
    5. '  
' → logprob: -18.375017166137695
    6. '    
' → logprob: -19.000017166137695
    7. '\n' → logprob: -20.000017166137695
    8. 'i' → logprob: -20.125017166137695
    9. '

' → logprob: -20.250017166137695
    10. ' 
' → logprob: -20.500017166137695

Token 760: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -4.842555426876061e-06
    2. 'na' → logprob: -13.000004768371582
    3. 'main' → logprob: -13.750004768371582
    4. 'if' → logprob: -14.125004768371582
    5. 'nam' → logprob: -14.125004768371582
    6. 'n' → logprob: -17.0000057220459
    7. ' name' → logprob: -19.8750057220459
    8. '```' → logprob: -20.5000057220459
    9. '_' → logprob: -22.0000057220459
    10. '(name' → logprob: -22.1250057220459

Token 761: '__' (ID: 771)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.43001505732536316
    2. '==' → logprob: -1.0550150871276855
    3. '=' → logprob: -7.0550150871276855
    4. '__' → logprob: -8.430014610290527
    5. '=="' → logprob: -9.430014610290527
    6. '=='' → logprob: -9.930014610290527
    7. '<|end|>' → logprob: -10.430014610290527
    8. ' =' → logprob: -10.680014610290527
    9. ')==' → logprob: -11.930014610290527
    10. '==
' → logprob: -12.055014610290527

Token 762: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.31441470980644226
    2. '==' → logprob: -1.3144147396087646
    3. '=' → logprob: -7.3144145011901855
    4. '=="' → logprob: -8.314414978027344
    5. '=='' → logprob: -8.939414978027344
    6. ' =' → logprob: -10.064414978027344
    7. '__' → logprob: -10.564414978027344
    8. ' =="' → logprob: -11.814414978027344
    9. '==
' → logprob: -12.314414978027344
    10. ')==' → logprob: -12.314414978027344

Token 763: ' une' (ID: 2463)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.05140809342265129
    2. ''' → logprob: -3.176408052444458
    3. ' "__' → logprob: -5.176408290863037
    4. '__' → logprob: -6.176408290863037
    5. ' '__' → logprob: -8.176407814025879
    6. '==' → logprob: -9.176407814025879
    7. '=="' → logprob: -9.426407814025879
    8. '=' → logprob: -9.801407814025879
    9. ' ==' → logprob: -9.926407814025879
    10. '="' → logprob: -11.051407814025879

Token 764: ' variable' (ID: 11076)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2978020906448364
    2. '==' → logprob: -1.9228020906448364
    3. '=' → logprob: -3.172801971435547
    4. '_' → logprob: -3.297801971435547
    5. '__' → logprob: -3.672801971435547
    6. '=="' → logprob: -5.922801971435547
    7. ' =' → logprob: -6.172801971435547
    8. ' ' → logprob: -7.422801971435547
    9. 'space' → logprob: -7.797801971435547
    10. '=='' → logprob: -8.297801971435547

Token 765: ' spéciale' (ID: 142408)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5929784178733826
    2. ' ==' → logprob: -0.8429784178733826
    3. '__' → logprob: -4.592978477478027
    4. '=' → logprob: -5.342978477478027
    5. '=="' → logprob: -6.967978477478027
    6. '=='' → logprob: -7.592978477478027
    7. '_' → logprob: -7.717978477478027
    8. ' =' → logprob: -10.092978477478027
    9. ' ' → logprob: -11.217978477478027
    10. '==
' → logprob: -12.092978477478027

Token 766: ' qui' (ID: 2780)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2835690677165985
    2. ' ==' → logprob: -1.408569097518921
    3. '=="' → logprob: -6.658568859100342
    4. '=' → logprob: -7.533568859100342
    5. '=='' → logprob: -7.908568859100342
    6. '__' → logprob: -8.5335693359375
    7. '==
' → logprob: -11.2835693359375
    8. ' =' → logprob: -12.1585693359375
    9. 'if' → logprob: -12.2835693359375
    10. ' =="' → logprob: -12.4085693359375

Token 767: ' prend' (ID: 37463)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3503100574016571
    2. ' ==' → logprob: -1.2253100872039795
    3. '=' → logprob: -6.4753098487854
    4. '=="' → logprob: -9.100310325622559
    5. '__' → logprob: -9.725310325622559
    6. '=='' → logprob: -9.725310325622559
    7. '===' → logprob: -10.100310325622559
    8. ' =' → logprob: -10.475310325622559
    9. ' ' → logprob: -12.600310325622559
    10. '_' → logprob: -12.850310325622559

Token 768: ' la' (ID: 557)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.36184266209602356
    2. '"' → logprob: -1.2368426322937012
    3. '__' → logprob: -4.861842632293701
    4. ' "__' → logprob: -6.236842632293701
    5. ' '__' → logprob: -6.361842632293701
    6. '_' → logprob: -8.23684310913086
    7. '=' → logprob: -8.48684310913086
    8. '"value' → logprob: -8.61184310913086
    9. 'le' → logprob: -8.73684310913086
    10. '"_' → logprob: -8.86184310913086

Token 769: ' valeur' (ID: 41664)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.720743715763092
    2. '"' → logprob: -1.0957436561584473
    3. '__' → logprob: -1.7207436561584473
    4. ''name' → logprob: -9.220744132995605
    5. ' "__' → logprob: -10.220744132995605
    6. ' '__' → logprob: -10.345744132995605
    7. '"name' → logprob: -10.720744132995605
    8. '==' → logprob: -10.720744132995605
    9. '=' → logprob: -10.845744132995605
    10. ''value' → logprob: -10.845744132995605

Token 770: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.38813498616218567
    2. '"' → logprob: -1.1381349563598633
    3. ' "__' → logprob: -7.513134956359863
    4. '__' → logprob: -7.763134956359863
    5. ' '__' → logprob: -8.638134956359863
    6. '=="' → logprob: -10.263134956359863
    7. '==' → logprob: -10.388134956359863
    8. '=='' → logprob: -11.138134956359863
    9. ' ==' → logprob: -11.888134956359863
    10. '("__' → logprob: -12.263134956359863

Token 771: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -9.088346359931165e-07
    2. 'name' → logprob: -14.000000953674316
    3. ' main' → logprob: -17.875
    4. '_main' → logprob: -19.125
    5. 'ma' → logprob: -19.625
    6. '	main' → logprob: -20.25
    7. 'mai' → logprob: -21.0
    8. 'maine' → logprob: -21.0
    9. 'm' → logprob: -22.0
    10. '(main' → logprob: -22.25

Token 772: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00862119346857071
    2. '__':
' → logprob: -4.7586212158203125
    3. ''' → logprob: -12.008621215820312
    4. '__":
' → logprob: -15.883621215820312
    5. '__
' → logprob: -15.883621215820312
    6. '__('' → logprob: -16.508621215820312
    7. '```' → logprob: -17.133621215820312
    8. '**' → logprob: -17.258621215820312
    9. '__:' → logprob: -17.508621215820312
    10. '__.' → logprob: -17.508621215820312

Token 773: ''' (ID: 6)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.004046344663947821
    2. ':' → logprob: -6.129046440124512
    3. '__:' → logprob: -7.254046440124512
    4. '__':
' → logprob: -7.629046440124512
    5. '__
' → logprob: -8.379046440124512
    6. 'if' → logprob: -9.129046440124512
    7. ' ==' → logprob: -9.504046440124512
    8. '==' → logprob: -9.754046440124512
    9. '__":
' → logprob: -9.879046440124512
    10. ''' → logprob: -10.004046440124512

Token 774: ' quand' (ID: 18026)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02336159534752369
    2. ' if' → logprob: -4.148361682891846
    3. ':' → logprob: -5.648361682891846
    4. '
' → logprob: -5.773361682891846
    5. ':
' → logprob: -8.273361206054688
    6. '

' → logprob: -8.773361206054688
    7. '__' → logprob: -9.898361206054688
    8. '_' → logprob: -10.148361206054688
    9. ' ==' → logprob: -10.773361206054688
    10. '\n' → logprob: -10.898361206054688

Token 775: ' le' (ID: 505)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0004898841143585742
    2. ' __' → logprob: -7.625489711761475
    3. '"' → logprob: -14.500490188598633
    4. ' "__' → logprob: -14.625490188598633
    5. ''' → logprob: -15.125490188598633
    6. 'name' → logprob: -15.625490188598633
    7. 'the' → logprob: -15.875490188598633
    8. ' ' → logprob: -16.000490188598633
    9. '/__' → logprob: -16.250490188598633
    10. '("__' → logprob: -17.375490188598633

Token 776: ' fichier' (ID: 69637)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00988499540835619
    2. 'if' → logprob: -4.884884834289551
    3. ' __' → logprob: -6.134884834289551
    4. '_' → logprob: -9.50988483428955
    5. ' if' → logprob: -11.25988483428955
    6. '==' → logprob: -12.00988483428955
    7. 'file' → logprob: -12.75988483428955
    8. 'main' → logprob: -13.00988483428955
    9. 'name' → logprob: -13.38488483428955
    10. '```' → logprob: -13.38488483428955

Token 777: ' est' (ID: 893)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0910826325416565
    2. ' ==' → logprob: -2.7160825729370117
    3. 'if' → logprob: -4.091082572937012
    4. '__' → logprob: -5.841082572937012
    5. ' is' → logprob: -7.966082572937012
    6. 'is' → logprob: -8.591082572937012
    7. '=="' → logprob: -8.591082572937012
    8. '=' → logprob: -9.466082572937012
    9. '==
' → logprob: -9.466082572937012
    10. '#' → logprob: -9.591082572937012

Token 778: ' exécut' (ID: 165350)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.046945273876190186
    2. '"' → logprob: -3.671945333480835
    3. ''' → logprob: -4.046945095062256
    4. ''ex' → logprob: -6.296945095062256
    5. ' "__' → logprob: -7.921945095062256
    6. 'ex' → logprob: -8.421945571899414
    7. ' exécut' → logprob: -8.546945571899414
    8. ' '__' → logprob: -8.796945571899414
    9. 'execut' → logprob: -9.796945571899414
    10. ' __' → logprob: -10.046945571899414

Token 779: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0022154422476887703
    2. 'if' → logprob: -7.002215385437012
    3. '__.' → logprob: -8.002215385437012
    4. '__["' → logprob: -8.377215385437012
    5. '__
' → logprob: -8.377215385437012
    6. '__":
' → logprob: -9.127215385437012
    7. '__':
' → logprob: -9.377215385437012
    8. '_main' → logprob: -9.877215385437012
    9. '_' → logprob: -10.252215385437012
    10. '__[' → logprob: -10.377215385437012

Token 780: ' et' (ID: 859)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005345940124243498
    2. ' if' → logprob: -5.630345821380615
    3. '
' → logprob: -6.505345821380615
    4. ':
' → logprob: -9.005346298217773
    5. ':' → logprob: -9.755346298217773
    6. '```' → logprob: -10.630346298217773
    7. '

' → logprob: -11.005346298217773
    8. '__' → logprob: -11.755346298217773
    9. ':

' → logprob: -12.255346298217773
    10. '__
' → logprob: -13.005346298217773

Token 781: ' non' (ID: 2893)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.37547415494918823
    2. '__' → logprob: -1.250474214553833
    3. ' not' → logprob: -4.000473976135254
    4. 'if' → logprob: -5.000473976135254
    5. ' __' → logprob: -7.375473976135254
    6. '_not' → logprob: -8.500473976135254
    7. 'import' → logprob: -8.875473976135254
    8. 'non' → logprob: -9.125473976135254
    9. ' "__' → logprob: -9.375473976135254
    10. '#' → logprob: -9.500473976135254

Token 782: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.11577858775854111
    2. ' import' → logprob: -2.240778684616089
    3. ' en' → logprob: -6.61577844619751
    4. 'importe' → logprob: -8.240778923034668
    5. '__' → logprob: -8.740778923034668
    6. 'en' → logprob: -8.740778923034668
    7. 'comme' → logprob: -8.740778923034668
    8. '(import' → logprob: -9.115778923034668
    9. '_import' → logprob: -9.365778923034668
    10. ' ' → logprob: -9.865778923034668

Token 783: 'é' (ID: 377)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.23202112317085266
    2. 'if' → logprob: -1.6070210933685303
    3. '==' → logprob: -5.982021331787109
    4. ' ==' → logprob: -6.732021331787109
    5. '__
' → logprob: -6.857021331787109
    6. ' if' → logprob: -6.857021331787109
    7. '_' → logprob: -8.10702133178711
    8. '```' → logprob: -9.10702133178711
    9. '_if' → logprob: -9.48202133178711
    10. ':' → logprob: -9.60702133178711

Token 784: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.014210169203579426
    2. '
' → logprob: -4.264210224151611
    3. ' if' → logprob: -10.264209747314453
    4. '

' → logprob: -11.889209747314453
    5. '  
' → logprob: -13.139209747314453
    6. '\n' → logprob: -13.764209747314453
    7. '```' → logprob: -14.014209747314453
    8. '
' → logprob: -14.764209747314453
    9. '    
' → logprob: -15.014209747314453
    10. ' 
' → logprob: -15.889209747314453

Token 785: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.4121114822482923e-06
    2. '```' → logprob: -13.500003814697266
    3. ' if' → logprob: -13.625003814697266
    4. '
' → logprob: -14.250003814697266
    5. '``' → logprob: -18.750003814697266
    6. '  
' → logprob: -18.750003814697266
    7. '    
' → logprob: -19.125003814697266
    8. '\n' → logprob: -19.375003814697266
    9. '\
' → logprob: -20.000003814697266
    10. '\' → logprob: -20.375003814697266

Token 786: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3870299458503723
    2. ' __' → logprob: -1.1370298862457275
    3. ' ' → logprob: -8.887029647827148
    4. '_' → logprob: -11.512029647827148
    5. ' ' → logprob: -12.012029647827148
    6. 'name' → logprob: -14.012029647827148
    7. '​' → logprob: -14.137029647827148
    8. 'space' → logprob: -14.137029647827148
    9. ' ' → logprob: -14.262029647827148
    10. '﻿' → logprob: -15.012029647827148

Token 787: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5562372803688049
    2. ' ==' → logprob: -1.4312372207641602
    3. '==' → logprob: -1.6812372207641602
    4. ' __' → logprob: -6.93123722076416
    5. '=' → logprob: -8.93123722076416
    6. '=="' → logprob: -9.18123722076416
    7. ' =' → logprob: -9.55623722076416
    8. '_' → logprob: -10.30623722076416
    9. '=='' → logprob: -10.43123722076416
    10. ' =="' → logprob: -10.68123722076416

Token 788: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.5
    3. '==' → logprob: -17.0
    4. '____' → logprob: -17.875
    5. ' __' → logprob: -18.0
    6. '__
' → logprob: -18.5
    7. '__.__' → logprob: -18.75
    8. '___' → logprob: -19.125
    9. '______' → logprob: -19.375
    10. '=' → logprob: -20.375

Token 789: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0010887817479670048
    2. '==' → logprob: -6.876088619232178
    3. ' ==' → logprob: -9.876089096069336
    4. '=="' → logprob: -13.376089096069336
    5. '=' → logprob: -14.126089096069336
    6. '____' → logprob: -14.501089096069336
    7. ' __' → logprob: -14.501089096069336
    8. '_' → logprob: -14.751089096069336
    9. '___' → logprob: -15.251089096069336
    10. '=='' → logprob: -15.501089096069336

Token 790: ' '__' (ID: 28278)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5761439204216003
    2. '"' → logprob: -0.8261439204216003
    3. '__' → logprob: -9.201144218444824
    4. ' '__' → logprob: -9.826144218444824
    5. ' "__' → logprob: -9.951144218444824
    6. '"'' → logprob: -14.076144218444824
    7. '('__' → logprob: -14.826144218444824
    8. ''"' → logprob: -15.326144218444824
    9. 'main' → logprob: -15.701144218444824
    10. '("__' → logprob: -16.826143264770508

Token 791: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: 0.0
    2. 'name' → logprob: -19.75
    3. ' main' → logprob: -20.625
    4. 'm' → logprob: -21.125
    5. '_main' → logprob: -21.625
    6. 'ma' → logprob: -22.125
    7. '	main' → logprob: -22.375
    8. 'mail' → logprob: -23.25
    9. '__' → logprob: -23.5
    10. 'mai' → logprob: -24.125

Token 792: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.47408872842788696
    2. '__' → logprob: -0.974088728427887
    3. '_' → logprob: -11.474088668823242
    4. '__":
' → logprob: -13.849088668823242
    5. '__:' → logprob: -14.849088668823242
    6. '___' → logprob: -18.099088668823242
    7. '__('' → logprob: -18.724088668823242
    8. '__.' → logprob: -18.974088668823242
    9. '____' → logprob: -19.224088668823242
    10. '__
' → logprob: -19.599088668823242

Token 793: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.7081082463264465
    2. ':' → logprob: -0.8331082463264465
    3. ' main' → logprob: -3.2081081867218018
    4. '   ' → logprob: -4.333108425140381
    5. ':
' → logprob: -4.583108425140381
    6. '(main' → logprob: -5.583108425140381
    7. '	main' → logprob: -6.083108425140381
    8. '():' → logprob: -6.458108425140381
    9. '():
' → logprob: -7.333108425140381
    10. '_main' → logprob: -8.083107948303223

Token 794: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -17.75
    3. '(main' → logprob: -23.875
    4. '	main' → logprob: -24.125
    5. 'Main' → logprob: -25.75
    6. '.main' → logprob: -25.75
    7. '_main' → logprob: -26.25
    8. 'm' → logprob: -27.0
    9. 'mai' → logprob: -27.0
    10. 'mainwindow' → logprob: -27.0

Token 795: '()' (ID: 416)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6523756980895996
    2. '<|end|>' → logprob: -0.7773756980895996
    3. '\n' → logprob: -4.5273756980896
    4. ')' → logprob: -5.6523756980896
    5. '```' → logprob: -6.1523756980896
    6. '()' → logprob: -6.7773756980896
    7. '<|end|>' → logprob: -7.2773756980896
    8. '

' → logprob: -8.027376174926758
    9. '#' → logprob: -8.902376174926758
    10. '(' → logprob: -8.902376174926758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 793
Tokens correctement prédits (1ère position, stricte): 209
Tokens correctement prédits (1ère position, avec adaptation): 220
Tokens correctement prédits (top 10): 469
Précision stricte (1ère position): 26.36%
Précision adaptée (1ère position): 27.74%
Précision (top 10): 59.14%
================================================================================
