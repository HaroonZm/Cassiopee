================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
input_value_a, input_value_b = map(int, input().split())
range_divisor = (2 * input_value_b) + 1
division_result = input_value_a / range_divisor
minimum_group_count = math.ceil(division_result)
print(minimum_group_count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008858839981257915
    2. '\n' → logprob: -5.883858680725098
    3. '<|end|>' → logprob: -6.008858680725098
    4. '```' → logprob: -6.883858680725098
    5. '\' → logprob: -6.883858680725098
    6. 'import' → logprob: -7.133858680725098
    7. '<|end|>' → logprob: -9.133858680725098
    8. 'def' → logprob: -9.633858680725098
    9. '.pi' → logprob: -9.883858680725098
    10. 'newline' → logprob: -9.883858680725098

Token 4: '_value' (ID: 6734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002555211540311575
    2. '.' → logprob: -6.3775553703308105
    3. ' (' → logprob: -8.377554893493652
    4. '(
' → logprob: -8.627554893493652
    5. '_' → logprob: -8.877554893493652
    6. '('' → logprob: -9.877554893493652
    7. '()' → logprob: -10.127554893493652
    8. ')' → logprob: -10.377554893493652
    9. '[' → logprob: -10.502554893493652
    10. ' ' → logprob: -10.627554893493652

Token 5: '_a' (ID: 10852)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04210924729704857
    2. '.' → logprob: -4.16710901260376
    3. ')' → logprob: -4.29210901260376
    4. '_' → logprob: -5.41710901260376
    5. '[' → logprob: -5.91710901260376
    6. '=' → logprob: -6.04210901260376
    7. '(
' → logprob: -6.54210901260376
    8. ',' → logprob: -8.167109489440918
    9. ' (' → logprob: -8.667109489440918
    10. '()' → logprob: -9.292109489440918

Token 6: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2477031797170639
    2. '.' → logprob: -2.3727030754089355
    3. '_' → logprob: -2.9977030754089355
    4. '=' → logprob: -3.1227030754089355
    5. '[' → logprob: -4.3727030754089355
    6. '+' → logprob: -5.2477030754089355
    7. ' =' → logprob: -5.6227030754089355
    8. ',' → logprob: -5.6227030754089355
    9. ' ' → logprob: -5.9977030754089355
    10. '*' → logprob: -6.4977030754089355

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.022056175395846367
    2. ' input' → logprob: -4.0220561027526855
    3. ' ' → logprob: -6.2720561027526855
    4. '=input' → logprob: -7.3970561027526855
    5. '<|end|>' → logprob: -7.6470561027526855
    6. 'space' → logprob: -8.147056579589844
    7. 'import' → logprob: -8.397056579589844
    8. '_' → logprob: -9.397056579589844
    9. ',input' → logprob: -9.647056579589844
    10. '```' → logprob: -10.397056579589844

Token 8: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16134856641292572
    2. '_value' → logprob: -1.911348581314087
    3. '_val' → logprob: -8.161348342895508
    4. '_s' → logprob: -8.286348342895508
    5. '_values' → logprob: -8.661348342895508
    6. ' _' → logprob: -9.786348342895508
    7. '```' → logprob: -10.036348342895508
    8. '_token' → logprob: -10.286348342895508
    9. '_a' → logprob: -10.411348342895508
    10. '_)' → logprob: -10.411348342895508

Token 9: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.5946158170700073
    2. '_' → logprob: -0.9696158170700073
    3. '_a' → logprob: -3.594615936279297
    4. '_s' → logprob: -3.719615936279297
    5. '_c' → logprob: -4.219615936279297
    6. '_,' → logprob: -6.719615936279297
    7. 's' → logprob: -7.969615936279297
    8. '_=' → logprob: -8.469615936279297
    9. '_f' → logprob: -8.719615936279297
    10. '_d' → logprob: -8.844615936279297

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20729711651802063
    2. '=' → logprob: -1.7072970867156982
    3. ',' → logprob: -5.207297325134277
    4. '_' → logprob: -8.957297325134277
    5. ')' → logprob: -9.207297325134277
    6. '<|end|>' → logprob: -9.707297325134277
    7. ' ' → logprob: -10.957297325134277
    8. ' ,' → logprob: -11.082297325134277
    9. '[' → logprob: -11.207297325134277
    10. '```' → logprob: -11.457297325134277

Token 11: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6527230739593506
    2. ' map' → logprob: -1.4027230739593506
    3. '0' → logprob: -1.9027230739593506
    4. ' input' → logprob: -3.2777230739593506
    5. 'map' → logprob: -4.02772331237793
    6. ' math' → logprob: -4.27772331237793
    7. 'input' → logprob: -5.02772331237793
    8. ' float' → logprob: -5.40272331237793
    9. ' int' → logprob: -6.52772331237793
    10. 'math' → logprob: -7.40272331237793

Token 12: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.182888925075531
    2. '(int' → logprob: -2.432888984680176
    3. '(lambda' → logprob: -3.307888984680176
    4. '<|end|>' → logprob: -3.682888984680176
    5. '(str' → logprob: -4.557888984680176
    6. '(input' → logprob: -6.057888984680176
    7. '(range' → logprob: -7.557888984680176
    8. '(eval' → logprob: -7.682888984680176
    9. 'int' → logprob: -7.807888984680176
    10. '```' → logprob: -7.932888984680176

Token 13: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07950136065483093
    2. 'input' → logprob: -3.0795013904571533
    3. ')' → logprob: -3.5795013904571533
    4. ',input' → logprob: -6.454501152038574
    5. ',' → logprob: -7.954501152038574
    6. ' input' → logprob: -8.079501152038574
    7. '(' → logprob: -9.079501152038574
    8. '=input' → logprob: -10.329501152038574
    9. '[input' → logprob: -10.329501152038574
    10. '<input' → logprob: -10.579501152038574

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04883057624101639
    2. ' input' → logprob: -3.048830509185791
    3. ')' → logprob: -8.42383098602295
    4. '(input' → logprob: -11.29883098602295
    5. ' )' → logprob: -12.79883098602295
    6. ',input' → logprob: -12.79883098602295
    7. '```' → logprob: -13.92383098602295
    8. '=input' → logprob: -13.92383098602295
    9. '))' → logprob: -14.42383098602295
    10. '),' → logprob: -14.67383098602295

Token 15: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0359687805175781
    2. '(' → logprob: -1.5359687805175781
    3. '())' → logprob: -1.5359687805175781
    4. '()' → logprob: -1.6609687805175781
    5. '('' → logprob: -4.160968780517578
    6. '(()' → logprob: -5.160968780517578
    7. '().' → logprob: -7.410968780517578
    8. '(""))' → logprob: -7.660968780517578
    9. '("")' → logprob: -8.160968780517578
    10. '`)' → logprob: -8.785968780517578

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003460712905507535
    2. 'strip' → logprob: -8.000346183776855
    3. 'rstrip' → logprob: -11.500346183776855
    4. ' split' → logprob: -15.500346183776855
    5. 'spl' → logprob: -15.875346183776855
    6. '(split' → logprob: -16.87534523010254
    7. 'read' → logprob: -17.50034523010254
    8. 'startswith' → logprob: -17.75034523010254
    9. 'replace' → logprob: -18.37534523010254
    10. 's' → logprob: -18.37534523010254

Token 17: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.32233700156211853
    2. '())' → logprob: -1.447337031364441
    3. '))' → logprob: -3.3223369121551514
    4. '()' → logprob: -6.0723371505737305
    5. '()))' → logprob: -6.6973371505737305
    6. '(' → logprob: -7.6973371505737305
    7. '`)' → logprob: -8.82233715057373
    8. '('' → logprob: -10.69733715057373
    9. ')`' → logprob: -11.07233715057373
    10. '>)' → logprob: -11.44733715057373

Token 18: 'range' (ID: 20967)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.03579746186733246
    2. 'if' → logprob: -4.285797595977783
    3. '+' → logprob: -5.535797595977783
    4. '*' → logprob: -5.785797595977783
    5. 'x' → logprob: -6.785797595977783
    6. 's' → logprob: -6.785797595977783
    7. 'a' → logprob: -6.910797595977783
    8. 'res' → logprob: -6.910797595977783
    9. 'sum' → logprob: -7.035797595977783
    10. ')' → logprob: -7.160797595977783

Token 19: '_div' (ID: 36926)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00022022522171027958
    2. '_' → logprob: -8.87522029876709
    3. '(range' → logprob: -10.87522029876709
    4. '_range' → logprob: -11.00022029876709
    5. 's' → logprob: -11.62522029876709
    6. ' (' → logprob: -12.12522029876709
    7. '(
' → logprob: -12.62522029876709
    8. '(s' → logprob: -12.75022029876709
    9. '(`' → logprob: -13.00022029876709
    10. '(a' → logprob: -13.25022029876709

Token 20: 'isor' (ID: 65473)
  Prédit: 'ision'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ision' → logprob: -0.7300925254821777
    2. 'isor' → logprob: -1.7300925254821777
    3. '_' → logprob: -1.8550925254821777
    4. 'ider' → logprob: -1.9800925254821777
    5. 's' → logprob: -4.230092525482178
    6. 'er' → logprob: -4.230092525482178
    7. '_range' → logprob: -5.605092525482178
    8. '_id' → logprob: -5.980092525482178
    9. ' =' → logprob: -6.605092525482178
    10. 'isions' → logprob: -7.230092525482178

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24581867456436157
    2. '=' → logprob: -1.9958186149597168
    3. '_' → logprob: -2.620818614959717
    4. 's' → logprob: -5.245818614959717
    5. ' ' → logprob: -6.995818614959717
    6. '_range' → logprob: -7.245818614959717
    7. ' _' → logprob: -7.370818614959717
    8. '_space' → logprob: -7.620818614959717
    9. '(' → logprob: -7.870818614959717
    10. ')' → logprob: -8.120819091796875

Token 22: ' (' (ID: 350)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9632068276405334
    2. ' input' → logprob: -1.2132067680358887
    3. 'input' → logprob: -2.7132067680358887
    4. ' ' → logprob: -2.8382067680358887
    5. ' int' → logprob: -2.8382067680358887
    6. 'math' → logprob: -2.9632067680358887
    7. '10' → logprob: -3.8382067680358887
    8. ' max' → logprob: -4.088206768035889
    9. '2' → logprob: -4.338206768035889
    10. 'int' → logprob: -4.463206768035889

Token 23: '2' (ID: 17)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5153665542602539
    2. 'math' → logprob: -1.640366554260254
    3. ' input' → logprob: -2.265366554260254
    4. ' math' → logprob: -3.140366554260254
    5. 'abs' → logprob: -3.640366554260254
    6. 'max' → logprob: -4.265366554260254
    7. ' abs' → logprob: -5.140366554260254
    8. ' max' → logprob: -5.390366554260254
    9. 'int' → logprob: -5.640366554260254
    10. '10' → logprob: -6.640366554260254

Token 24: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7591352462768555
    2. ' *' → logprob: -0.7591352462768555
    3. ')' → logprob: -4.0091352462768555
    4. ' +' → logprob: -4.2591352462768555
    5. '+' → logprob: -4.6341352462768555
    6. ' **' → logprob: -4.8841352462768555
    7. ' )' → logprob: -5.1341352462768555
    8. '**' → logprob: -5.2591352462768555
    9. ' -' → logprob: -7.2591352462768555
    10. ' ' → logprob: -7.8841352462768555

Token 25: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6858579516410828
    2. 'math' → logprob: -1.5608580112457275
    3. ' input' → logprob: -1.6858580112457275
    4. ' math' → logprob: -2.6858580112457275
    5. 'int' → logprob: -4.935857772827148
    6. '(math' → logprob: -5.310857772827148
    7. 'max' → logprob: -5.560857772827148
    8. '(input' → logprob: -5.685857772827148
    9. ' (' → logprob: -6.060857772827148
    10. ' int' → logprob: -6.185857772827148

Token 26: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.0259150157216936e-05
    2. '_' → logprob: -10.50005054473877
    3. ' _' → logprob: -11.62505054473877
    4. ')_' → logprob: -12.25005054473877
    5. '_val' → logprob: -12.50005054473877
    6. ')' → logprob: -13.12505054473877
    7. '_div' → logprob: -14.50005054473877
    8. '_input' → logprob: -14.75005054473877
    9. '._' → logprob: -15.00005054473877
    10. '_values' → logprob: -15.12505054473877

Token 27: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.08040377497673035
    2. '_b' → logprob: -2.5804038047790527
    3. '_' → logprob: -7.080403804779053
    4. 'a' → logprob: -8.455403327941895
    5. ')' → logprob: -8.705403327941895
    6. ' _' → logprob: -8.830403327941895
    7. '_s' → logprob: -10.080403327941895
    8. ')_' → logprob: -10.830403327941895
    9. '_)' → logprob: -11.080403327941895
    10. '_value' → logprob: -11.705403327941895

Token 28: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04648907110095024
    2. ' )' → logprob: -3.4214890003204346
    3. ' +' → logprob: -5.171489238739014
    4. '+' → logprob: -5.546489238739014
    5. ')**' → logprob: -6.796489238739014
    6. '*' → logprob: -7.421489238739014
    7. ')+' → logprob: -7.546489238739014
    8. ' *' → logprob: -8.546488761901855
    9. ' -' → logprob: -8.796488761901855
    10. '))' → logprob: -9.171488761901855

Token 29: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.42801418900489807
    2. ' +' → logprob: -1.4280141592025757
    3. '**' → logprob: -3.1780142784118652
    4. ' //' → logprob: -3.3030142784118652
    5. ')' → logprob: -5.053014278411865
    6. ' ' → logprob: -5.303014278411865
    7. '//' → logprob: -5.678014278411865
    8. ' **' → logprob: -5.678014278411865
    9. '<|end|>' → logprob: -5.803014278411865
    10. ' /' → logprob: -5.803014278411865

Token 30: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7178773880004883
    2. ' ' → logprob: -0.7178773880004883
    3. ' input' → logprob: -4.842877388000488
    4. ' (' → logprob: -5.342877388000488
    5. 'input' → logprob: -5.842877388000488
    6. '3' → logprob: -5.967877388000488
    7. ' math' → logprob: -5.967877388000488
    8. '2' → logprob: -6.842877388000488
    9. '(' → logprob: -7.592877388000488
    10. 'math' → logprob: -7.592877388000488

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12805160880088806
    2. ' ' → logprob: -2.378051519393921
    3. '3' → logprob: -4.6280517578125
    4. '2' → logprob: -5.6280517578125
    5. ' math' → logprob: -6.0030517578125
    6. '5' → logprob: -6.2530517578125
    7. ' input' → logprob: -6.6280517578125
    8. 'input' → logprob: -6.6280517578125
    9. 'math' → logprob: -6.6280517578125
    10. '(' → logprob: -6.7530517578125

Token 32: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7972643375396729
    2. ')' → logprob: -2.547264337539673
    3. 'for' → logprob: -2.547264337539673
    4. '\n' → logprob: -2.672264337539673
    5. '**' → logprob: -2.922264337539673
    6. '<|end|>' → logprob: -3.047264337539673
    7. 'range' → logprob: -3.172264337539673
    8. '*' → logprob: -3.547264337539673
    9. ':' → logprob: -3.797264337539673
    10. ' for' → logprob: -3.922264337539673

Token 33: 'division' (ID: 50596)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3641238808631897
    2. 'result' → logprob: -1.489123821258545
    3. ' for' → logprob: -3.364123821258545
    4. '
' → logprob: -3.989123821258545
    5. 'range' → logprob: -4.364123821258545
    6. '\n' → logprob: -5.739123821258545
    7. 'if' → logprob: -6.239123821258545
    8. '\' → logprob: -6.989123821258545
    9. 'print' → logprob: -7.114123821258545
    10. ' 
' → logprob: -7.489123821258545

Token 34: '_result' (ID: 11623)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9143548607826233
    2. '(' → logprob: -1.1643548011779785
    3. '_result' → logprob: -1.6643548011779785
    4. ' =' → logprob: -2.7893548011779785
    5. '_value' → logprob: -4.9143548011779785
    6. '_output' → logprob: -5.2893548011779785
    7. ' (' → logprob: -5.5393548011779785
    8. ' ' → logprob: -5.6643548011779785
    9. '_space' → logprob: -5.7893548011779785
    10. '=' → logprob: -5.7893548011779785

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015577126760035753
    2. ' ' → logprob: -6.75155782699585
    3. '=' → logprob: -7.87655782699585
    4. '_' → logprob: -13.501557350158691
    5. ',' → logprob: -13.876557350158691
    6. ' =
' → logprob: -14.126557350158691
    7. '_space' → logprob: -14.501557350158691
    8. '  ' → logprob: -14.501557350158691
    9. ' /=' → logprob: -14.751557350158691
    10. '<|end|>' → logprob: -14.751557350158691

Token 36: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.38707101345062256
    2. 'input' → logprob: -1.5120710134506226
    3. ' math' → logprob: -2.762071132659912
    4. 'math' → logprob: -3.512071132659912
    5. ' (' → logprob: -6.012071132659912
    6. '(input' → logprob: -6.137071132659912
    7. 'range' → logprob: -6.887071132659912
    8. ' range' → logprob: -7.512071132659912
    9. 'int' → logprob: -8.262070655822754
    10. ' int' → logprob: -8.262070655822754

Token 37: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.438573680294212e-06
    2. '_val' → logprob: -13.000005722045898
    3. '_' → logprob: -13.500005722045898
    4. ' _' → logprob: -14.000005722045898
    5. '_div' → logprob: -15.000005722045898
    6. 'value' → logprob: -15.875005722045898
    7. '```' → logprob: -16.0000057220459
    8. '_values' → logprob: -16.2500057220459
    9. '_Value' → logprob: -16.3750057220459
    10. '_VALUE' → logprob: -16.8750057220459

Token 38: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0011868956498801708
    2. '_' → logprob: -6.876186847686768
    3. '_b' → logprob: -9.251187324523926
    4. 'a' → logprob: -10.126187324523926
    5. ' _' → logprob: -12.251187324523926
    6. '_value' → logprob: -12.501187324523926
    7. '_div' → logprob: -12.626187324523926
    8. '_s' → logprob: -12.751187324523926
    9. '```' → logprob: -13.626187324523926
    10. ' /' → logprob: -15.626187324523926

Token 39: ' /' (ID: 820)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.16357943415641785
    2. '%' → logprob: -2.4135794639587402
    3. ' //' → logprob: -2.9135794639587402
    4. ' /' → logprob: -5.16357946395874
    5. '/' → logprob: -7.41357946395874
    6. ' ' → logprob: -7.78857946395874
    7. ' ' → logprob: -9.538578987121582
    8. '//' → logprob: -9.663578987121582
    9. '<|end|>' → logprob: -10.163578987121582
    10. ' *' → logprob: -10.788578987121582

Token 40: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.054899100214242935
    2. ' range' → logprob: -2.929899215698242
    3. 'input' → logprob: -12.429899215698242
    4. 'float' → logprob: -12.929899215698242
    5. ' math' → logprob: -13.429899215698242
    6. 'math' → logprob: -13.554899215698242
    7. '(range' → logprob: -13.554899215698242
    8. ' input' → logprob: -13.804899215698242
    9. 'rang' → logprob: -13.804899215698242
    10. '	range' → logprob: -13.929899215698242

Token 41: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.030268177390098572
    2. '_' → logprob: -3.5302681922912598
    3. '_range' → logprob: -7.78026819229126
    4. ' _' → logprob: -10.155267715454102
    5. ' ' → logprob: -11.905267715454102
    6. '_space' → logprob: -12.280267715454102
    7. 'div' → logprob: -12.530267715454102
    8. '_di' → logprob: -12.530267715454102
    9. '_dist' → logprob: -12.655267715454102
    10. '_DIV' → logprob: -12.905267715454102

Token 42: 'isor' (ID: 65473)
  Prédit: 'isor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isor' → logprob: -0.0004618896055035293
    2. 'is' → logprob: -7.750462055206299
    3. 'visor' → logprob: -12.25046157836914
    4. 'os' → logprob: -12.37546157836914
    5. 's' → logprob: -12.62546157836914
    6. 'esor' → logprob: -12.75046157836914
    7. 'or' → logprob: -12.87546157836914
    8. '_' → logprob: -13.00046157836914
    9. 'issor' → logprob: -13.62546157836914
    10. 'xor' → logprob: -13.62546157836914

Token 43: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3717025816440582
    2. '\n' → logprob: -2.8717026710510254
    3. ')' → logprob: -3.2467026710510254
    4. '*' → logprob: -3.3717026710510254
    5. '.' → logprob: -3.6217026710510254
    6. ' ' → logprob: -3.6217026710510254
    7. '<|end|>' → logprob: -3.6217026710510254
    8. '+' → logprob: -4.121702671051025
    9. '\' → logprob: -4.246702671051025
    10. '```' → logprob: -4.621702671051025

Token 44: 'minimum' (ID: 80931)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.27227649092674255
    2. '<|end|>' → logprob: -2.3972764015197754
    3. '
' → logprob: -2.8972764015197754
    4. ')' → logprob: -3.6472764015197754
    5. '+' → logprob: -3.8972764015197754
    6. '*' → logprob: -4.522276401519775
    7. '\n' → logprob: -4.647276401519775
    8. '**' → logprob: -5.397276401519775
    9. '#' → logprob: -5.647276401519775
    10. '```' → logprob: -5.772276401519775

Token 45: '_group' (ID: 15990)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.39031216502189636
    2. '_value' → logprob: -1.2653121948242188
    3. '_range' → logprob: -4.640312194824219
    4. '_space' → logprob: -4.765312194824219
    5. '_val' → logprob: -4.890312194824219
    6. ' _' → logprob: -5.265312194824219
    7. '_div' → logprob: -5.890312194824219
    8. ' =' → logprob: -6.140312194824219
    9. '_result' → logprob: -7.015312194824219
    10. '_values' → logprob: -7.140312194824219

Token 46: '_count' (ID: 7536)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12630558013916016
    2. '_size' → logprob: -2.25130558013916
    3. '_s' → logprob: -5.50130558013916
    4. '_value' → logprob: -5.87630558013916
    5. ' =' → logprob: -6.25130558013916
    6. 's' → logprob: -6.62630558013916
    7. '=' → logprob: -7.00130558013916
    8. ' ' → logprob: -7.50130558013916
    9. ' _' → logprob: -7.62630558013916
    10. '_count' → logprob: -8.50130558013916

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00034809779026545584
    2. '=' → logprob: -8.250348091125488
    3. ' ' → logprob: -9.500348091125488
    4. '_' → logprob: -12.125348091125488
    5. 's' → logprob: -13.125348091125488
    6. ',' → logprob: -13.500348091125488
    7. ' ' → logprob: -14.125348091125488
    8. ' =
' → logprob: -14.875348091125488
    9. ' _' → logprob: -15.000348091125488
    10. ' +=' → logprob: -15.000348091125488

Token 48: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.03679647296667099
    2. 'math' → logprob: -3.5367965698242188
    3. ' int' → logprob: -5.661796569824219
    4. ' division' → logprob: -6.036796569824219
    5. 'int' → logprob: -7.911796569824219
    6. ' max' → logprob: -8.536796569824219
    7. ' input' → logprob: -8.536796569824219
    8. ' min' → logprob: -9.536796569824219
    9. '(math' → logprob: -9.661796569824219
    10. 'division' → logprob: -9.911796569824219

Token 49: '.ceil' (ID: 60295)
  Prédit: '.ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ceil' → logprob: -0.12797911465168
    2. '.' → logprob: -2.127979040145874
    3. '.floor' → logprob: -7.127979278564453
    4. '.ce' → logprob: -9.002979278564453
    5. '.c' → logprob: -9.127979278564453
    6. '.f' → logprob: -12.127979278564453
    7. 'ceil' → logprob: -13.127979278564453
    8. '_ce' → logprob: -13.627979278564453
    9. '.inf' → logprob: -13.627979278564453
    10. '_floor' → logprob: -14.127979278564453

Token 50: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00045724798110313714
    2. '(div' → logprob: -8.375456809997559
    3. ' (' → logprob: -8.500456809997559
    4. 'division' → logprob: -12.000456809997559
    5. '(range' → logprob: -12.625456809997559
    6. ' division' → logprob: -12.750456809997559
    7. '((' → logprob: -12.750456809997559
    8. '(min' → logprob: -13.875456809997559
    9. '(
' → logprob: -14.000456809997559
    10. '(s' → logprob: -14.250456809997559

Token 51: 'division' (ID: 50596)
  Prédit: 'division'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.20201586186885834
    2. ' division' → logprob: -1.7020158767700195
    3. 'div' → logprob: -7.4520158767700195
    4. '(' → logprob: -12.32701587677002
    5. '   ' → logprob: -12.32701587677002
    6. ')' → logprob: -12.45201587677002
    7. 'Division' → logprob: -13.07701587677002
    8. '_div' → logprob: -13.95201587677002
    9. ' ' → logprob: -14.20201587677002
    10. 'input' → logprob: -14.20201587677002

Token 52: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -2.248469718324486e-05
    2. '_' → logprob: -12.000022888183594
    3. '_res' → logprob: -12.000022888183594
    4. ')' → logprob: -12.750022888183594
    5. 'result' → logprob: -13.250022888183594
    6. '_value' → logprob: -13.250022888183594
    7. '_Result' → logprob: -14.000022888183594
    8. ' _' → logprob: -14.125022888183594
    9. '_results' → logprob: -14.375022888183594
    10. '_RESULT' → logprob: -14.625022888183594

Token 53: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013463040813803673
    2. ' )' → logprob: -6.751346111297607
    3. ' /' → logprob: -8.751346588134766
    4. '/' → logprob: -11.501346588134766
    5. ')
' → logprob: -12.376346588134766
    6. '))' → logprob: -14.126346588134766
    7. ')`' → logprob: -14.376346588134766
    8. ' ' → logprob: -14.751346588134766
    9. ')

' → logprob: -15.126346588134766
    10. '),' → logprob: -15.501346588134766

Token 54: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38689401745796204
    2. '(min' → logprob: -1.1368939876556396
    3. '(max' → logprob: -11.011894226074219
    4. '()' → logprob: -13.511894226074219
    5. '('' → logprob: -13.761894226074219
    6. '((' → logprob: -14.636894226074219
    7. '(
' → logprob: -14.886894226074219
    8. '(round' → logprob: -14.886894226074219
    9. '(input' → logprob: -15.136894226074219
    10. '(m' → logprob: -15.261894226074219

Token 56: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.10046426951885223
    2. 'um' → logprob: -2.350464344024658
    3. 'mum' → logprob: -8.4754638671875
    4. 'im' → logprob: -10.2254638671875
    5. '_' → logprob: -11.8504638671875
    6. 'ium' → logprob: -12.8504638671875
    7. 'inum' → logprob: -13.6004638671875
    8. 'unum' → logprob: -15.3504638671875
    9. 'imal' → logprob: -15.6004638671875
    10. '```' → logprob: -15.7254638671875

Token 57: '_group' (ID: 15990)
  Prédit: '_group'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_group' → logprob: -8.061054359131958e-06
    2. '_' → logprob: -12.250007629394531
    3. '_g' → logprob: -13.250007629394531
    4. '_groups' → logprob: -13.875007629394531
    5. ')_' → logprob: -16.37500762939453
    6. '_Group' → logprob: -16.75000762939453
    7. ' _' → logprob: -16.75000762939453
    8. '_grp' → logprob: -16.75000762939453
    9. ')' → logprob: -17.37500762939453
    10. '_GROUP' → logprob: -18.00000762939453

Token 58: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.522638169466518e-05
    2. '_' → logprob: -11.750024795532227
    3. '_c' → logprob: -12.125024795532227
    4. '_counts' → logprob: -12.625024795532227
    5. '_counter' → logprob: -13.000024795532227
    6. ')_' → logprob: -13.125024795532227
    7. '_cnt' → logprob: -13.250024795532227
    8. '_co' → logprob: -14.250024795532227
    9. '_cont' → logprob: -14.500024795532227
    10. '_ct' → logprob: -15.125024795532227

Token 59: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. '))' → logprob: -15.125000953674316
    3. ' )' → logprob: -15.750000953674316
    4. ')`' → logprob: -16.0
    5. ')
' → logprob: -16.125
    6. ')}' → logprob: -18.0
    7. '`)' → logprob: -19.125
    8. '),' → logprob: -19.25
    9. '```' → logprob: -19.375
    10. '#' → logprob: -19.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 57
Tokens correctement prédits (1ère position, stricte): 25
Tokens correctement prédits (1ère position, avec adaptation): 25
Tokens correctement prédits (top 10): 45
Précision stricte (1ère position): 43.86%
Précision adaptée (1ère position): 43.86%
Précision (top 10): 78.95%
================================================================================
