================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import heapq
from functools import partial

def dijkstra(graph, start, cost_idx):
    dist = [float('inf')] * len(graph)
    dist[start] = 0
    heap = [(0, start)]
    while heap:
        d, u = heapq.heappop(heap)
        if d > dist[u]:
            continue
        for v, *ws in graph[u]:
            w = ws[cost_idx]
            if dist[v] > d + w:
                dist[v] = d + w
                heapq.heappush(heap, (dist[v], v))
    return dist

n, m, s, t = map(int, raw_input().split())
edges = [tuple(map(int, raw_input().split())) for _ in xrange(m)]
graph = [[] for _ in xrange(n + 1)]
for u, v, a, b in edges:
    graph[u].append((v, a, b))
    graph[v].append((u, a, b))

d_y = dijkstra(graph, s, 0)
d_s = dijkstra(graph, t, 1)

min_cost = float('inf')
ans = []
for i in xrange(n, 0, -1):
    min_cost = min(min_cost, d_y[i] + d_s[i])
    ans.append(min_cost)

for v in reversed(ans):
    print 10**15 - v
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' heap' (ID: 37237)
  → Token d'amorce (pas de prédiction)

Token 2: 'q' (ID: 80)
  → Token d'amorce (pas de prédiction)

Token 3: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.6100132496794686e-05
    2. '.\' → logprob: -11.125056266784668
    3. '(' → logprob: -11.625056266784668
    4. '.
' → logprob: -11.750056266784668
    5. '.​' → logprob: -12.000056266784668
    6. '."""' → logprob: -12.750056266784668
    7. '```' → logprob: -12.875056266784668
    8. '\' → logprob: -13.125056266784668
    9. '.

' → logprob: -13.250056266784668
    10. ' .' → logprob: -13.250056266784668

Token 4: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00020509003661572933
    2. '\' → logprob: -9.500205039978027
    3. '.

' → logprob: -10.875205039978027
    4. '(' → logprob: -11.000205039978027
    5. '.
' → logprob: -11.000205039978027
    6. '```' → logprob: -11.250205039978027
    7. '<|end|>' → logprob: -11.750205039978027
    8. '

' → logprob: -11.750205039978027
    9. '.\' → logprob: -11.750205039978027
    10. '.

' → logprob: -12.000205039978027

Token 5: ' functools' (ID: 142636)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.012652203440666199
    2. ' math' → logprob: -5.137652397155762
    3. 'collections' → logprob: -5.637652397155762
    4. ' ' → logprob: -7.012652397155762
    5. ' itertools' → logprob: -7.137652397155762
    6. ' heap' → logprob: -7.387652397155762
    7. ' queue' → logprob: -8.387652397155762
    8. ' sys' → logprob: -8.637652397155762
    9. ' threading' → logprob: -9.262652397155762
    10. '_' → logprob: -9.762652397155762

Token 6: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.09127730876207352
    2. 'import' → logprob: -2.4662773609161377
    3. '.' → logprob: -6.216277122497559
    4. '.import' → logprob: -8.841277122497559
    5. '_import' → logprob: -9.966277122497559
    6. '	import' → logprob: -9.966277122497559
    7. ' .' → logprob: -10.091277122497559
    8. ' ' → logprob: -10.591277122497559
    9. '```' → logprob: -11.716277122497559
    10. '_' → logprob: -12.216277122497559

Token 7: ' partial' (ID: 13664)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -1.0918209552764893
    2. 'total' → logprob: -1.3418209552764893
    3. 'cmp' → logprob: -1.4668209552764893
    4. 'wrap' → logprob: -2.9668209552764893
    5. 'partial' → logprob: -3.2168209552764893
    6. ' l' → logprob: -3.7168209552764893
    7. ' cmp' → logprob: -3.8418209552764893
    8. ' wraps' → logprob: -4.59182071685791
    9. 'l' → logprob: -4.71682071685791
    10. 'reduce' → logprob: -4.96682071685791

Token 8: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5582099556922913
    2. '.' → logprob: -1.0582098960876465
    3. '\' → logprob: -3.4332098960876465
    4. '\n' → logprob: -4.1832098960876465
    5. 'def' → logprob: -4.1832098960876465
    6. '(
' → logprob: -6.0582098960876465
    7. '
' → logprob: -6.3082098960876465
    8. ',' → logprob: -6.4332098960876465
    9. '.
' → logprob: -6.4332098960876465
    10. 'import' → logprob: -6.4332098960876465

Token 9: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.50132155418396
    2. 'd' → logprob: -1.12632155418396
    3. '\' → logprob: -3.50132155418396
    4. '`' → logprob: -4.251321792602539
    5. '(' → logprob: -4.876321792602539
    6. 'heap' → logprob: -5.501321792602539
    7. '.' → logprob: -6.001321792602539
    8. '```' → logprob: -6.001321792602539
    9. ',' → logprob: -6.501321792602539
    10. '\n' → logprob: -7.001321792602539

Token 10: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.003604105906561017
    2. '_' → logprob: -6.128603935241699
    3. ' heap' → logprob: -8.0036039352417
    4. ' find' → logprob: -8.6286039352417
    5. ' heaps' → logprob: -9.2536039352417
    6. ' merge' → logprob: -9.2536039352417
    7. ' he' → logprob: -9.3786039352417
    8. ' _' → logprob: -9.6286039352417
    9. '_heap' → logprob: -9.7536039352417
    10. ' add' → logprob: -10.2536039352417

Token 11: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.17598450183868408
    2. 'e' → logprob: -1.925984501838684
    3. 'ijk' → logprob: -4.4259843826293945
    4. 'ij' → logprob: -7.0509843826293945
    5. '_' → logprob: -7.1759843826293945
    6. '_e' → logprob: -7.1759843826293945
    7. 'i' → logprob: -7.6759843826293945
    8. 'eep' → logprob: -7.9259843826293945
    9. 'jik' → logprob: -9.050984382629395
    10. 'ef' → logprob: -9.175984382629395

Token 12: '(graph' (ID: 51300)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00160317518748343
    2. '_' → logprob: -6.501603126525879
    3. ' (' → logprob: -11.376603126525879
    4. 'def' → logprob: -11.751603126525879
    5. '```' → logprob: -11.751603126525879
    6. '(node' → logprob: -11.876603126525879
    7. '<|end|>' → logprob: -12.126603126525879
    8. '(def' → logprob: -12.751603126525879
    9. '_def' → logprob: -12.876603126525879
    10. '_(' → logprob: -13.001603126525879

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21511775255203247
    2. ')' → logprob: -1.7151176929473877
    3. '(' → logprob: -5.090117931365967
    4. '<|end|>' → logprob: -5.465117931365967
    5. '[' → logprob: -6.215117931365967
    6. '<|end|>' → logprob: -7.965117931365967
    7. ',)' → logprob: -8.590117454528809
    8. '):' → logprob: -8.840117454528809
    9. ' ,' → logprob: -9.215117454528809
    10. ' (' → logprob: -10.215117454528809

Token 14: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.3219587206840515
    2. 'start' → logprob: -1.8219587802886963
    3. ' source' → logprob: -2.3219587802886963
    4. 'source' → logprob: -4.196958541870117
    5. 'src' → logprob: -8.196958541870117
    6. ' src' → logprob: -9.821958541870117
    7. ' ' → logprob: -9.946958541870117
    8. ')' → logprob: -11.321958541870117
    9. '```' → logprob: -11.321958541870117
    10. '   ' → logprob: -12.071958541870117

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16038163006305695
    2. '):' → logprob: -1.9103816747665405
    3. ')' → logprob: -9.035381317138672
    4. ',node' → logprob: -11.785381317138672
    5. ' ,' → logprob: -12.035381317138672
    6. ' ):' → logprob: -12.160381317138672
    7. ':' → logprob: -12.785381317138672
    8. ',:' → logprob: -13.160381317138672
    9. '):
' → logprob: -13.285381317138672
    10. '_vertex' → logprob: -13.660381317138672

Token 16: ' cost' (ID: 3097)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.7256912589073181
    2. 'end' → logprob: -1.600691318511963
    3. ' goal' → logprob: -2.225691318511963
    4. ' distances' → logprob: -2.600691318511963
    5. 'goal' → logprob: -3.225691318511963
    6. ' target' → logprob: -3.725691318511963
    7. ' ' → logprob: -3.975691318511963
    8. 'dist' → logprob: -3.975691318511963
    9. '   ' → logprob: -4.850691318511963
    10. 'target' → logprob: -5.100691318511963

Token 17: '_idx' (ID: 15257)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014179613441228867
    2. ',' → logprob: -5.139179706573486
    3. 's' → logprob: -5.264179706573486
    4. '_func' → logprob: -6.389179706573486
    5. '_map' → logprob: -8.389179229736328
    6. ')' → logprob: -8.514179229736328
    7. '_fn' → logprob: -8.514179229736328
    8. '_function' → logprob: -8.639179229736328
    9. '=' → logprob: -9.014179229736328
    10. ' ):' → logprob: -9.014179229736328

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016187651781365275
    2. ')' → logprob: -6.7516188621521
    3. '=' → logprob: -8.376618385314941
    4. ' ):' → logprob: -9.501618385314941
    5. '):
' → logprob: -9.501618385314941
    6. ',' → logprob: -10.126618385314941
    7. 'ex' → logprob: -11.126618385314941
    8. '):
' → logprob: -13.001618385314941
    9. ' ' → logprob: -13.501618385314941
    10. ':' → logprob: -13.501618385314941

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18677297234535217
    2. ':' → logprob: -1.8117729425430298
    3. '):' → logprob: -6.18677282333374
    4. '```' → logprob: -6.18677282333374
    5. ' :' → logprob: -6.43677282333374
    6. '    ' → logprob: -8.311773300170898
    7. '    
' → logprob: -8.436773300170898
    8. ':
' → logprob: -9.061773300170898
    9. '():' → logprob: -9.311773300170898
    10. ',' → logprob: -9.561773300170898

Token 20: ' dist' (ID: 3601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30952122807502747
    2. 'dist' (adapté à ' dist') → logprob: -1.559521198272705
    3. ' dist' → logprob: -4.059521198272705
    4. 'visited' → logprob: -4.309521198272705
    5. ' visited' → logprob: -4.934521198272705
    6. '```' → logprob: -5.184521198272705
    7. ' distances' → logprob: -5.684521198272705
    8. 'heap' → logprob: -5.809521198272705
    9. 'distance' → logprob: -5.809521198272705
    10. ' ' → logprob: -7.559521198272705

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49195757508277893
    2. ' =' → logprob: -1.2419575452804565
    3. '[' → logprob: -2.491957664489746
    4. '   ' → logprob: -5.116957664489746
    5. ',' → logprob: -5.741957664489746
    6. 'ances' → logprob: -5.866957664489746
    7. 'ance' → logprob: -6.491957664489746
    8. '=[]' → logprob: -6.866957664489746
    9. ' ' → logprob: -7.616957664489746
    10. '[]' → logprob: -8.116957664489746

Token 22: ' [' (ID: 723)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.6150009036064148
    2. ' {' → logprob: -0.8650009036064148
    3. '{}' → logprob: -3.6150009632110596
    4. ' {}' → logprob: -4.4900007247924805
    5. ' [' → logprob: -9.49000072479248
    6. ' defaultdict' → logprob: -9.99000072479248
    7. '[' → logprob: -10.24000072479248
    8. ' ' → logprob: -12.36500072479248
    9. 'default' → logprob: -12.49000072479248
    10. 'dict' → logprob: -14.11500072479248

Token 23: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.005238736979663372
    2. ' float' → logprob: -5.2552385330200195
    3. '   ' → logprob: -12.88023853302002
    4. '(float' → logprob: -13.88023853302002
    5. '0' → logprob: -14.50523853302002
    6. ' ' → logprob: -15.25523853302002
    7. '	float' → logprob: -15.38023853302002
    8. '    ' → logprob: -15.63023853302002
    9. ',float' → logprob: -16.505239486694336
    10. '       ' → logprob: -16.755239486694336

Token 24: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -3.380904672667384e-05
    2. '(' → logprob: -10.625033378601074
    3. '("' → logprob: -12.000033378601074
    4. ''' → logprob: -13.500033378601074
    5. ''in' → logprob: -13.500033378601074
    6. '(in' → logprob: -15.000033378601074
    7. 'inf' → logprob: -16.87503433227539
    8. '('-' → logprob: -17.75003433227539
    9. ' ('' → logprob: -17.87503433227539
    10. '('+' → logprob: -17.87503433227539

Token 25: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -5.512236498361744e-07
    2. 'in' → logprob: -14.625000953674316
    3. ''in' → logprob: -17.875
    4. 'info' → logprob: -17.875
    5. ' inf' → logprob: -18.5
    6. '_inf' → logprob: -18.625
    7. 'Inf' → logprob: -20.0
    8. ''' → logprob: -20.125
    9. '-inf' → logprob: -20.375
    10. '∞' → logprob: -20.375

Token 26: '')]' (ID: 94377)
  Prédit: '')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')]' → logprob: -0.17663191258907318
    2. ')' → logprob: -2.4266319274902344
    3. ')]' → logprob: -3.0516319274902344
    4. '')' → logprob: -3.8016319274902344
    5. ']' → logprob: -5.926631927490234
    6. ''),' → logprob: -7.051631927490234
    7. '),' → logprob: -8.176631927490234
    8. '('' → logprob: -10.301631927490234
    9. ''' → logprob: -10.551631927490234
    10. '']' → logprob: -10.801631927490234

Token 27: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1266927719116211
    2. ' for' → logprob: -2.251692771911621
    3. ']*' → logprob: -5.376692771911621
    4. ',' → logprob: -5.626692771911621
    5. 'for' → logprob: -5.876692771911621
    6. ' ]' → logprob: -6.251692771911621
    7. '   ' → logprob: -8.626692771911621
    8. '<|end|>' → logprob: -9.001692771911621
    9. ']*(' → logprob: -9.251692771911621
    10. '()]' → logprob: -9.251692771911621

Token 28: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0054017845541238785
    2. '(len' → logprob: -5.505401611328125
    3. ' len' → logprob: -6.630401611328125
    4. '(' → logprob: -13.380401611328125
    5. '	len' → logprob: -14.880401611328125
    6. ' (' → logprob: -15.005401611328125
    7. '[len' → logprob: -15.880401611328125
    8. '   ' → logprob: -16.005401611328125
    9. '=len' → logprob: -16.130401611328125
    10. '<len' → logprob: -16.380401611328125

Token 29: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -0.0013340517180040479
    2. '(' → logprob: -6.626334190368652
    3. 'graph' → logprob: -12.751334190368652
    4. ' (' → logprob: -12.751334190368652
    5. ' graph' → logprob: -14.751334190368652
    6. '(Graph' → logprob: -15.251334190368652
    7. '(gr' → logprob: -15.501334190368652
    8. '	graph' → logprob: -15.501334190368652
    9. '(grammar' → logprob: -15.626334190368652
    10. '(
' → logprob: -15.626334190368652

Token 30: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.073596548754722e-05
    2. ')
' → logprob: -10.12505054473877
    3. ' )' → logprob: -12.37505054473877
    4. '   ' → logprob: -12.87505054473877
    5. '`)' → logprob: -13.62505054473877
    6. ']' → logprob: -14.50005054473877
    7. ')])' → logprob: -15.00005054473877
    8. '[' → logprob: -15.37505054473877
    9. '),' → logprob: -15.50005054473877
    10. '）' → logprob: -15.50005054473877

Token 31: '   ' (ID: 271)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.037204645574092865
    2. '<|end|>' → logprob: -4.787204742431641
    3. ')' → logprob: -5.037204742431641
    4. ' dist' → logprob: -5.162204742431641
    5. '[' → logprob: -5.287204742431641
    6. '   ' → logprob: -5.412204742431641
    7. '	dist' → logprob: -7.037204742431641
    8. '    
' → logprob: -7.162204742431641
    9. '
' → logprob: -7.162204742431641
    10. ']' → logprob: -7.412204742431641

Token 32: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.03385903686285019
    2. '<|end|>' → logprob: -3.9088590145111084
    3. ' dist' → logprob: -4.7838592529296875
    4. 'start' → logprob: -6.1588592529296875
    5. '<|end|>' → logprob: -7.4088592529296875
    6. ' ' → logprob: -7.4088592529296875
    7. '_dist' → logprob: -8.408859252929688
    8. '	dist' → logprob: -8.408859252929688
    9. '[start' → logprob: -8.908859252929688
    10. ' 
' → logprob: -8.908859252929688

Token 33: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.06199995428323746
    2. '[' → logprob: -2.812000036239624
    3. '[end' → logprob: -11.687000274658203
    4. '[user' → logprob: -12.062000274658203
    5. '[
' → logprob: -12.562000274658203
    6. '[s' → logprob: -13.187000274658203
    7. '```' → logprob: -13.562000274658203
    8. '<|end|>' → logprob: -13.687000274658203
    9. '[state' → logprob: -13.812000274658203
    10. '[current' → logprob: -13.937000274658203

Token 34: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0038053072057664394
    2. ')' → logprob: -6.003805160522461
    3. ' ]' → logprob: -7.003805160522461
    4. ')]' → logprob: -7.878805160522461
    5. '=' → logprob: -10.753805160522461
    6. ']=' → logprob: -11.378805160522461
    7. '`]' → logprob: -12.753805160522461
    8. ' )' → logprob: -13.003805160522461
    9. ' =' → logprob: -13.378805160522461
    10. '[' → logprob: -14.878805160522461

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16022758185863495
    2. '=' → logprob: -1.9102275371551514
    3. ' =
' → logprob: -13.53522777557373
    4. ']' → logprob: -14.53522777557373
    5. ' ' → logprob: -14.66022777557373
    6. ')' → logprob: -14.91022777557373
    7. ' =)' → logprob: -15.91022777557373
    8. '=

' → logprob: -16.035226821899414
    9. '<|end|>' → logprob: -16.410226821899414
    10. '=}' → logprob: -16.660226821899414

Token 36: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -17.375179290771484
    4. '۰' → logprob: -17.750179290771484
    5. ' ' → logprob: -18.375179290771484
    6. '  ' → logprob: -18.625179290771484
    7. '```' → logprob: -19.125179290771484
    8. '00' → logprob: -19.562679290771484
    9. '０' → logprob: -19.875179290771484
    10. '٠' → logprob: -20.000179290771484

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.375
    3. '۰' → logprob: -20.125
    4. '   ' → logprob: -21.0
    5. '00' → logprob: -21.875
    6. '０' → logprob: -22.375
    7. '٠' → logprob: -22.875
    8. '```' → logprob: -22.875
    9. '  ' → logprob: -23.125
    10. ' ' → logprob: -23.625

Token 38: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.009972340427339077
    2. '' → logprob: -5.75997257232666
    3. '\n' → logprob: -5.75997257232666
    4. ' 
' → logprob: -6.63497257232666
    5. '    
' → logprob: -7.25997257232666
    6. 'newline' → logprob: -7.88497257232666
    7. '\' → logprob: -8.00997257232666
    8. '   ' → logprob: -8.13497257232666
    9. '  
' → logprob: -8.38497257232666
    10. '
' → logprob: -9.38497257232666

Token 39: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0077128661796450615
    2. '    
' → logprob: -5.8827128410339355
    3. '   ' → logprob: -6.1327128410339355
    4. '\n' → logprob: -6.6327128410339355
    5. '' → logprob: -7.1327128410339355
    6. '
' → logprob: -8.632713317871094
    7. ' 
' → logprob: -9.007713317871094
    8. '  
' → logprob: -9.132713317871094
    9. '   
' → logprob: -9.882713317871094
    10. '```' → logprob: -10.132713317871094

Token 40: ' heap' (ID: 37237)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1811879426240921
    2. '   ' → logprob: -2.056187868118286
    3. '    
' → logprob: -3.806187868118286
    4. 'pq' → logprob: -5.181188106536865
    5. 'heap' (adapté à ' heap') → logprob: -5.681188106536865
    6. '```' → logprob: -6.306188106536865
    7. 'priority' → logprob: -7.056188106536865
    8. ',' → logprob: -7.431188106536865
    9. ',
' → logprob: -7.556188106536865
    10. ' heap' → logprob: -7.681188106536865

Token 41: ' =' (ID: 314)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0019199562957510352
    2. '.' → logprob: -6.876919746398926
    3. '.push' → logprob: -8.126919746398926
    4. ' =' → logprob: -8.251919746398926
    5. '=' → logprob: -9.251919746398926
    6. ')' → logprob: -9.626919746398926
    7. '.append' → logprob: -10.126919746398926
    8. '.q' → logprob: -10.376919746398926
    9. '=[]' → logprob: -10.376919746398926
    10. '.queue' → logprob: -11.626919746398926

Token 42: ' [(' (ID: 43900)
  Prédit: ' [('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [(' → logprob: -0.6504606604576111
    2. '[(' → logprob: -1.1504607200622559
    3. ' []' → logprob: -2.400460720062256
    4. '[]' → logprob: -2.650460720062256
    5. '[' → logprob: -8.400460243225098
    6. ' [' → logprob: -8.650460243225098
    7. '[((' → logprob: -12.400460243225098
    8. ' [('' → logprob: -13.900460243225098
    9. '[]
' → logprob: -14.025460243225098
    10. ' []
' → logprob: -14.025460243225098

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005045388825237751
    2. 'start' → logprob: -7.625504493713379
    3. '(start' → logprob: -11.750504493713379
    4. ' ' → logprob: -12.250504493713379
    5. 'dist' → logprob: -12.875504493713379
    6. ' start' → logprob: -14.125504493713379
    7. '(' → logprob: -15.875504493713379
    8. ')' → logprob: -16.125505447387695
    9. '[start' → logprob: -16.125505447387695
    10. '   ' → logprob: -17.000505447387695

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.15441757265944e-05
    2. ',start' → logprob: -11.125031471252441
    3. ',)' → logprob: -12.500031471252441
    4. ')' → logprob: -12.625031471252441
    5. ' ,' → logprob: -12.625031471252441
    6. ')]' → logprob: -14.125031471252441
    7. ',
' → logprob: -14.375031471252441
    8. ',user' → logprob: -14.500031471252441
    9. '<|end|>' → logprob: -14.500031471252441
    10. ',index' → logprob: -14.750031471252441

Token 45: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.006715728435665369
    2. ' start' → logprob: -5.006715774536133
    3. ')' → logprob: -16.756715774536133
    4. '[start' → logprob: -17.006715774536133
    5. ' ' → logprob: -17.131715774536133
    6. ':start' → logprob: -17.631715774536133
    7. '(start' → logprob: -17.881715774536133
    8. '=start' → logprob: -18.006715774536133
    9. 'star' → logprob: -18.131715774536133
    10. '   ' → logprob: -18.131715774536133

Token 46: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005286292172968388
    2. ')' → logprob: -5.25528621673584
    3. '),' → logprob: -10.50528621673584
    4. ')])' → logprob: -11.75528621673584
    5. ' )' → logprob: -11.88028621673584
    6. '))' → logprob: -12.38028621673584
    7. ',' → logprob: -12.88028621673584
    8. ']' → logprob: -13.75528621673584
    9. ')]
' → logprob: -14.13028621673584
    10. ')],' → logprob: -14.63028621673584

Token 47: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5596337914466858
    2. '   ' → logprob: -1.809633731842041
    3. ')' → logprob: -1.934633731842041
    4. ',' → logprob: -2.684633731842041
    5. ',
' → logprob: -4.059633731842041
    6. '\n' → logprob: -4.684633731842041
    7. '    
' → logprob: -5.059633731842041
    8. 'while' → logprob: -5.309633731842041
    9. '```' → logprob: -5.809633731842041
    10. '  
' → logprob: -5.934633731842041

Token 48: ' while' (ID: 2049)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6074237823486328
    2. '
' → logprob: -1.3574237823486328
    3. ',' → logprob: -2.107423782348633
    4. ',
' → logprob: -3.357423782348633
    5. '\n' → logprob: -4.607423782348633
    6. ')
' → logprob: -4.857423782348633
    7. ':' → logprob: -4.857423782348633
    8. '   ' → logprob: -5.732423782348633
    9. 'while' (adapté à ' while') → logprob: -6.232423782348633
    10. '  
' → logprob: -6.357423782348633

Token 49: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.008697065524756908
    2. 'heap' → logprob: -4.883697032928467
    3. ' ' → logprob: -7.133697032928467
    4. '(heap' → logprob: -8.258697509765625
    5. ' len' → logprob: -10.758697509765625
    6. '.heap' → logprob: -12.133697509765625
    7. '  ' → logprob: -13.008697509765625
    8. '_heap' → logprob: -13.258697509765625
    9. ' he' → logprob: -13.758697509765625
    10. ' ' → logprob: -14.508697509765625

Token 50: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014995507895946503
    2. '):' → logprob: -5.139995574951172
    3. '.pop' → logprob: -5.389995574951172
    4. ',' → logprob: -6.139995574951172
    5. '[' → logprob: -6.389995574951172
    6. ')' → logprob: -9.014995574951172
    7. ':
' → logprob: -9.264995574951172
    8. 'q' → logprob: -9.764995574951172
    9. ']:' → logprob: -9.764995574951172
    10. '.' → logprob: -9.764995574951172

Token 51: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032086700201034546
    2. '       ' → logprob: -3.6570866107940674
    3. '   ' → logprob: -5.7820868492126465
    4. '):' → logprob: -6.9070868492126465
    5. ':' → logprob: -7.5320868492126465
    6. ')' → logprob: -8.282086372375488
    7. ',
' → logprob: -8.532086372375488
    8. ' ,' → logprob: -8.782086372375488
    9. 'heap' → logprob: -9.157086372375488
    10. '):
' → logprob: -9.782086372375488

Token 52: ' d' (ID: 272)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.15344122052192688
    2. ' cost' → logprob: -2.4034411907196045
    3. ',' → logprob: -4.278441429138184
    4. 'dist' → logprob: -4.528441429138184
    5. 'current' → logprob: -4.903441429138184
    6. ' dist' → logprob: -5.778441429138184
    7. ' ,' → logprob: -5.778441429138184
    8. 'cur' → logprob: -6.028441429138184
    9. ' current' → logprob: -6.653441429138184
    10. 'curr' → logprob: -6.778441429138184

Token 53: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005649457452818751
    2. 'ist' → logprob: -7.750565052032471
    3. ' ,' → logprob: -9.875564575195312
    4. 'e' → logprob: -10.250564575195312
    5. 'istance' → logprob: -11.125564575195312
    6. ',
' → logprob: -11.750564575195312
    7. ',u' → logprob: -12.125564575195312
    8. 'is' → logprob: -12.875564575195312
    9. ',)' → logprob: -13.000564575195312
    10. 'u' → logprob: -13.125564575195312

Token 54: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.2523733973503113
    2. 'u' → logprob: -1.502373456954956
    3. ' node' → logprob: -8.002373695373535
    4. 'node' → logprob: -9.502373695373535
    5. ' v' → logprob: -11.252373695373535
    6. 'v' → logprob: -12.002373695373535
    7. ' ' → logprob: -12.377373695373535
    8. '   ' → logprob: -12.502373695373535
    9. '```' → logprob: -12.502373695373535
    10. '	u' → logprob: -13.002373695373535

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6115841269493103
    2. '=' → logprob: -0.8615841269493103
    3. ')' → logprob: -3.361584186553955
    4. ']' → logprob: -8.736583709716797
    5. ')=' → logprob: -9.111583709716797
    6. ',' → logprob: -10.361583709716797
    7. ' )' → logprob: -11.486583709716797
    8. ' ' → logprob: -11.986583709716797
    9. '   ' → logprob: -12.236583709716797
    10. '<|end|>' → logprob: -12.486583709716797

Token 56: ' heap' (ID: 37237)
  Prédit: ' heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.20258453488349915
    2. 'heap' → logprob: -1.7025845050811768
    3. ' he' → logprob: -7.202584743499756
    4. 'he' → logprob: -8.202584266662598
    5. ' ' → logprob: -9.077584266662598
    6. '(heap' → logprob: -10.827584266662598
    7. '.heap' → logprob: -11.952584266662598
    8. '_heap' → logprob: -12.577584266662598
    9. '<|end|>' → logprob: -12.827584266662598
    10. 'h' → logprob: -14.140084266662598

Token 57: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.003951475024223328
    2. '.pop' → logprob: -5.628951549530029
    3. 'pop' → logprob: -9.753951072692871
    4. '[' → logprob: -9.753951072692871
    5. '   ' → logprob: -9.753951072692871
    6. '.he' → logprob: -10.003951072692871
    7. ')' → logprob: -10.253951072692871
    8. '.' → logprob: -10.628951072692871
    9. ',' → logprob: -11.503951072692871
    10. '.q' → logprob: -11.628951072692871

Token 58: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.00014418430509977043
    2. '.' → logprob: -9.000144004821777
    3. '.pop' → logprob: -11.625144004821777
    4. 'he' → logprob: -12.500144004821777
    5. '.heap' → logprob: -12.500144004821777
    6. ' he' → logprob: -13.000144004821777
    7. '.q' → logprob: -14.500144004821777
    8. '.h' → logprob: -14.625144004821777
    9. 'q' → logprob: -15.250144004821777
    10. ' .' → logprob: -15.625144004821777

Token 59: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -2.816093228830141e-06
    2. 'pp' → logprob: -13.12500286102295
    3. 'ap' → logprob: -14.12500286102295
    4. ' app' → logprob: -17.875001907348633
    5. 'appen' → logprob: -18.125001907348633
    6. '[' → logprob: -18.250001907348633
    7. '```' → logprob: -18.250001907348633
    8. 'appe' → logprob: -18.500001907348633
    9. '(app' → logprob: -18.625001907348633
    10. 'a' → logprob: -18.750001907348633

Token 60: 'op' (ID: 467)
  Prédit: 'op'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.026143649592995644
    2. 'ush' → logprob: -3.7761435508728027
    3. 'le' → logprob: -6.026143550872803
    4. 'pop' → logprob: -8.276144027709961
    5. 'p' → logprob: -9.776144027709961
    6. 'app' → logprob: -10.276144027709961
    7. 'el' → logprob: -10.651144027709961
    8. 'uf' → logprob: -10.901144027709961
    9. 'push' → logprob: -10.901144027709961
    10. 'u' → logprob: -11.026144027709961

Token 61: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.018154388293623924
    2. '(' → logprob: -4.018154621124268
    3. '(h' → logprob: -13.39315414428711
    4. ' (' → logprob: -14.39315414428711
    5. '(queue' → logprob: -14.51815414428711
    6. '(

' → logprob: -14.51815414428711
    7. '(
' → logprob: -14.64315414428711
    8. ')' → logprob: -15.01815414428711
    9. 'heap' → logprob: -16.14315414428711
    10. '(graph' → logprob: -16.26815414428711

Token 62: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005038236267864704
    2. ')
' → logprob: -8.250503540039062
    3. '       ' → logprob: -8.375503540039062
    4. '   ' → logprob: -12.125503540039062
    5. ')`' → logprob: -13.250503540039062
    6. ' )' → logprob: -13.750503540039062
    7. '`)' → logprob: -14.125503540039062
    8. '))' → logprob: -14.250503540039062
    9. ')

' → logprob: -14.250503540039062
    10. '()' → logprob: -15.375503540039062

Token 63: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6688098311424255
    2. '       ' → logprob: -0.7938098311424255
    3. '<|end|>' → logprob: -3.6688098907470703
    4. '        
' → logprob: -5.66880989074707
    5. ' 
' → logprob: -6.04380989074707
    6. '  
' → logprob: -6.54380989074707
    7. ')' → logprob: -7.41880989074707
    8. '   ' → logprob: -7.79380989074707
    9. ' if' → logprob: -8.29380989074707
    10. 'if' → logprob: -8.41880989074707

Token 64: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.62387615442276
    2. 'if' (adapté à ' if') → logprob: -0.99887615442276
    3. '       ' → logprob: -2.6238760948181152
    4. ' 
' → logprob: -4.748876094818115
    5. '        
' → logprob: -5.123876094818115
    6. '
' → logprob: -5.373876094818115
    7. '        ' → logprob: -7.373876094818115
    8. '    
' → logprob: -7.498876094818115
    9. '\n' → logprob: -7.623876094818115
    10. '   ' → logprob: -7.623876094818115

Token 65: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.161879301071167
    2. 'd' → logprob: -1.911879301071167
    3. ' dist' → logprob: -6.661879539489746
    4. 'dist' → logprob: -7.911879539489746
    5. '	d' → logprob: -12.411879539489746
    6. '   ' → logprob: -13.786879539489746
    7. ' ' → logprob: -14.286879539489746
    8. ' ' → logprob: -14.411879539489746
    9. '	dist' → logprob: -14.536879539489746
    10. ' д' → logprob: -14.786879539489746

Token 66: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1427304446697235
    2. '>' → logprob: -2.017730474472046
    3. ' ' → logprob: -10.892730712890625
    4. '">' → logprob: -11.017730712890625
    5. ' ' → logprob: -12.017730712890625
    6. '<|end|>' → logprob: -12.892730712890625
    7. ' !=' → logprob: -13.017730712890625
    8. ' >
' → logprob: -13.642730712890625
    9. ' >

' → logprob: -13.892730712890625
    10. ' >
' → logprob: -14.142730712890625

Token 67: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0011706985533237457
    2. ' dist' → logprob: -6.751170635223389
    3. '	dist' → logprob: -14.876171112060547
    4. 'd' → logprob: -16.626171112060547
    5. '(dist' → logprob: -16.876171112060547
    6. '_dist' → logprob: -17.251171112060547
    7. 'Dist' → logprob: -18.251171112060547
    8. ' ' → logprob: -18.376171112060547
    9. '```' → logprob: -18.376171112060547
    10. '.dist' → logprob: -18.751171112060547

Token 68: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.2603901015827432e-05
    2. '[' → logprob: -10.750022888183594
    3. 'u' → logprob: -13.875022888183594
    4. '```' → logprob: -16.125022888183594
    5. '[
' → logprob: -16.875022888183594
    6. '[user' → logprob: -17.875022888183594
    7. ' u' → logprob: -18.375022888183594
    8. '	u' → logprob: -18.875022888183594
    9. '\[' → logprob: -19.125022888183594
    10. '<u' → logprob: -19.125022888183594

Token 69: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01670047454535961
    2. ']:' → logprob: -4.141700267791748
    3. ':' → logprob: -7.766700267791748
    4. '):
' → logprob: -8.766700744628906
    5. ')' → logprob: -10.766700744628906
    6. ' ):' → logprob: -10.891700744628906
    7. ']):' → logprob: -11.391700744628906
    8. '[u' → logprob: -11.391700744628906
    9. '[' → logprob: -11.516700744628906
    10. '}:' → logprob: -13.266700744628906

Token 70: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.45960500836372375
    2. ':' → logprob: -1.2096049785614014
    3. '       ' → logprob: -2.8346049785614014
    4. ' continue' → logprob: -5.0846052169799805
    5. 'continue' → logprob: -5.5846052169799805
    6. ':
' → logprob: -6.9596052169799805
    7. '\n' → logprob: -8.70960521697998
    8. '   ' → logprob: -9.20960521697998
    9. '               ' → logprob: -9.58460521697998
    10. '	continue' → logprob: -10.45960521697998

Token 71: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.20349571108818054
    2. 'continue' (adapté à ' continue') → logprob: -1.703495740890503
    3. '       ' → logprob: -6.703495502471924
    4. '           ' → logprob: -7.578495502471924
    5. '	continue' → logprob: -8.453495979309082
    6. '_continue' → logprob: -9.328495979309082
    7. '   ' → logprob: -10.953495979309082
    8. 'contin' → logprob: -11.578495979309082
    9. 'continu' → logprob: -12.703495979309082
    10. '               ' → logprob: -12.828495979309082

Token 72: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05102019011974335
    2. '
' → logprob: -3.1760201454162598
    3. '        
' → logprob: -5.67602014541626
    4. '<|end|>' → logprob: -6.30102014541626
    5. 'u' → logprob: -7.05102014541626
    6. '\n' → logprob: -7.17602014541626
    7. 'n' → logprob: -8.551020622253418
    8. '  
' → logprob: -8.801020622253418
    9. '   ' → logprob: -9.051020622253418
    10. '    
' → logprob: -9.176020622253418

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019937340170145035
    2. '        
' → logprob: -4.019937515258789
    3. '<|end|>' → logprob: -7.144937515258789
    4. '
' → logprob: -9.019937515258789
    5. '        ' → logprob: -9.144937515258789
    6. ',' → logprob: -9.519937515258789
    7. '  
' → logprob: -9.519937515258789
    8. '\n' → logprob: -9.769937515258789
    9. '       
' → logprob: -9.769937515258789
    10. ' 
' → logprob: -9.894937515258789

Token 74: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29468098282814026
    2. ' for' → logprob: -1.6696809530258179
    3. '        
' → logprob: -3.0446810722351074
    4. 'for' (adapté à ' for') → logprob: -5.169681072235107
    5. ' 
' → logprob: -5.544681072235107
    6. '<|end|>' → logprob: -5.669681072235107
    7. '   ' → logprob: -6.544681072235107
    8. '
' → logprob: -6.669681072235107
    9. '    
' → logprob: -6.794681072235107
    10. '\n' → logprob: -7.794681072235107

Token 75: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.2521733343601227
    2. 'v' → logprob: -1.5021733045578003
    3. '(v' → logprob: -9.50217342376709
    4. ' (' → logprob: -10.12717342376709
    5. ',' → logprob: -10.50217342376709
    6. 'neighbor' → logprob: -10.50217342376709
    7. ' ' → logprob: -10.62717342376709
    8. ' idx' → logprob: -11.50217342376709
    9. ',v' → logprob: -12.00217342376709
    10. '	v' → logprob: -12.25217342376709

Token 76: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.2020991056924686e-05
    2. ' ,' → logprob: -10.750032424926758
    3. '<|end|>' → logprob: -12.375032424926758
    4. ' in' → logprob: -12.875032424926758
    5. ',v' → logprob: -14.000032424926758
    6. '‌,' → logprob: -14.250032424926758
    7. ',value' → logprob: -15.000032424926758
    8. ',user' → logprob: -15.000032424926758
    9. '<|end|>' → logprob: -15.000032424926758
    10. '```' → logprob: -16.000032424926758

Token 77: ' *' (ID: 425)
  Prédit: ' costs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' costs' → logprob: -0.6259752511978149
    2. 'cost' → logprob: -1.375975251197815
    3. ' edge' → logprob: -2.7509751319885254
    4. ' cost' → logprob: -3.2509751319885254
    5. ' w' → logprob: -3.8759751319885254
    6. ' weights' → logprob: -4.375975131988525
    7. 'weights' → logprob: -4.625975131988525
    8. ' neighbor' → logprob: -4.625975131988525
    9. 'edge' → logprob: -4.625975131988525
    10. ' edges' → logprob: -4.750975131988525

Token 78: 'ws' (ID: 8811)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.9665168523788452
    2. 'weights' → logprob: -2.2165169715881348
    3. 'rest' → logprob: -2.3415169715881348
    4. 'w' → logprob: -2.4665169715881348
    5. 'attrs' → logprob: -2.5915169715881348
    6. ' w' → logprob: -3.2165169715881348
    7. 'edge' → logprob: -3.4665169715881348
    8. 'weight' → logprob: -3.7165169715881348
    9. ' weights' → logprob: -3.9665169715881348
    10. ' costs' → logprob: -4.091516971588135

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00031282080453820527
    2. 's' → logprob: -8.875312805175781
    3. 'in' → logprob: -9.250312805175781
    4. ' ' → logprob: -10.500312805175781
    5. 'paces' → logprob: -12.125312805175781
    6. ',' → logprob: -12.500312805175781
    7. 'okens' → logprob: -12.625312805175781
    8. '  ' → logprob: -12.625312805175781
    9. 'tokens' → logprob: -12.750312805175781
    10. 'ectors' → logprob: -13.125312805175781

Token 80: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.2014847844839096
    2. 'graph' → logprob: -1.7014847993850708
    3. '	graph' → logprob: -10.451484680175781
    4. ' enumerate' → logprob: -11.201484680175781
    5. 'enumer' → logprob: -11.326484680175781
    6. '(graph' → logprob: -11.326484680175781
    7. ' ' → logprob: -12.701484680175781
    8. '_graph' → logprob: -14.576484680175781
    9. '.graph' → logprob: -15.326484680175781
    10. '   ' → logprob: -16.07648468017578

Token 81: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -2.3676733690081164e-05
    2. '[' → logprob: -11.50002384185791
    3. '[v' → logprob: -11.50002384185791
    4. 'u' → logprob: -13.12502384185791
    5. '[d' → logprob: -14.25002384185791
    6. '[node' → logprob: -15.87502384185791
    7. '[s' → logprob: -16.750022888183594
    8. '[q' → logprob: -16.750022888183594
    9. ',u' → logprob: -17.000022888183594
    10. '```' → logprob: -17.250022888183594

Token 82: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.042735833674669266
    2. ':' → logprob: -3.5427358150482178
    3. '):' → logprob: -5.167736053466797
    4. ']:
' → logprob: -6.292736053466797
    5. ',' → logprob: -6.417736053466797
    6. '       ' → logprob: -6.542736053466797
    7. '[' → logprob: -7.417736053466797
    8. '],' → logprob: -7.792736053466797
    9. '[v' → logprob: -8.792736053466797
    10. ']):' → logprob: -8.792736053466797

Token 83: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5219321846961975
    2. ',' → logprob: -1.6469321250915527
    3. ':' → logprob: -1.6469321250915527
    4. '<|end|>' → logprob: -4.646932125091553
    5. '       ' → logprob: -5.771932125091553
    6. ' ,' → logprob: -6.396932125091553
    7. ' :' → logprob: -6.521932125091553
    8. '            
' → logprob: -7.021932125091553
    9. '        ' → logprob: -7.146932125091553
    10. ' ' → logprob: -7.271932125091553

Token 84: ' w' (ID: 286)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3644084334373474
    2. '               ' → logprob: -1.7394084930419922
    3. '           ' → logprob: -2.614408493041992
    4. ' cost' → logprob: -3.739408493041992
    5. '
' → logprob: -4.989408493041992
    6. ' 
' → logprob: -5.114408493041992
    7. ' new' → logprob: -5.239408493041992
    8. 'if' → logprob: -5.489408493041992
    9. '            ' → logprob: -6.114408493041992
    10. '                
' → logprob: -6.489408493041992

Token 85: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39164820313453674
    2. ' =' → logprob: -1.1416481733322144
    3. '[c' → logprob: -5.891648292541504
    4. 's' → logprob: -7.516648292541504
    5. '=c' → logprob: -7.516648292541504
    6. ' ' → logprob: -7.641648292541504
    7. '[' → logprob: -8.516648292541504
    8. '_cost' → logprob: -9.766648292541504
    9. 'cost' → logprob: -10.016648292541504
    10. '(cost' → logprob: -11.141648292541504

Token 86: ' ws' (ID: 33500)
  Prédit: ' ws'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ws' → logprob: -0.1602502167224884
    2. 'ws' → logprob: -1.910250186920166
    3. '(ws' → logprob: -11.660250663757324
    4. '	ws' → logprob: -11.785250663757324
    5. ' ' → logprob: -13.160250663757324
    6. 'w' → logprob: -13.160250663757324
    7. '/ws' → logprob: -13.160250663757324
    8. ' w' → logprob: -13.785250663757324
    9. '_ws' → logprob: -14.660250663757324
    10. 's' → logprob: -14.847750663757324

Token 87: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -4.274932143744081e-05
    2. '[' → logprob: -10.625042915344238
    3. 'cost' → logprob: -11.500042915344238
    4. '           ' → logprob: -12.500042915344238
    5. '       ' → logprob: -13.750042915344238
    6. '            
' → logprob: -15.000042915344238
    7. ' cost' → logprob: -15.000042915344238
    8. '/c' → logprob: -15.250042915344238
    9. '            ' → logprob: -15.250042915344238
    10. '        ' → logprob: -15.375042915344238

Token 88: 'ost' (ID: 564)
  Prédit: 'ost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ost' → logprob: -1.981667537620524e-06
    2. 'cost' → logprob: -13.375001907348633
    3. 'o' → logprob: -15.500001907348633
    4. ' ost' → logprob: -16.625001907348633
    5. '_cost' → logprob: -17.625001907348633
    6. '   ' → logprob: -18.125001907348633
    7. 'os' → logprob: -18.250001907348633
    8. ' cost' → logprob: -18.500001907348633
    9. '0' → logprob: -18.625001907348633
    10. '  ' → logprob: -19.125001907348633

Token 89: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -4.4849443838757e-06
    2. 'idx' → logprob: -12.750004768371582
    3. '_' → logprob: -14.500004768371582
    4. '_IDX' → logprob: -15.125004768371582
    5. 'Idx' → logprob: -16.000003814697266
    6. '1' → logprob: -16.500003814697266
    7. 'x' → logprob: -16.500003814697266
    8. '   ' → logprob: -16.625003814697266
    9. '	idx' → logprob: -17.000003814697266
    10. '0' → logprob: -17.250003814697266

Token 90: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017347980756312609
    2. ']
' → logprob: -6.376734733581543
    3. ' ]' → logprob: -10.626734733581543
    4. ']
' → logprob: -12.001734733581543
    5. ']

' → logprob: -14.126734733581543
    6. '       ' → logprob: -14.501734733581543
    7. ' ]
' → logprob: -14.876734733581543
    8. ')' → logprob: -15.876734733581543
    9. '']' → logprob: -16.25173568725586
    10. '           ' → logprob: -16.50173568725586

Token 91: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0059584262780845165
    2. '<|end|>' → logprob: -6.005958557128906
    3. '       ' → logprob: -6.255958557128906
    4. '            ' → logprob: -8.005958557128906
    5. '            
' → logprob: -8.130958557128906
    6. '               ' → logprob: -8.630958557128906
    7. '        ' → logprob: -8.755958557128906
    8. ' 
' → logprob: -9.005958557128906
    9. '
' → logprob: -9.255958557128906
    10. ')' → logprob: -9.505958557128906

Token 92: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6450747847557068
    2. ' if' → logprob: -0.7700747847557068
    3. 'if' (adapté à ' if') → logprob: -4.770074844360352
    4. '       ' → logprob: -6.395074844360352
    5. ' ' → logprob: -7.020074844360352
    6. '            ' → logprob: -8.020074844360352
    7. '        ' → logprob: -8.395074844360352
    8. '               ' → logprob: -8.395074844360352
    9. '            
' → logprob: -9.020074844360352
    10. ' new' → logprob: -9.520074844360352

Token 93: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.011338996700942516
    2. 'dist' → logprob: -4.51133918762207
    3. ' ' → logprob: -9.26133918762207
    4. ' d' → logprob: -9.51133918762207
    5. ' ' → logprob: -10.13633918762207
    6. '	dist' → logprob: -10.38633918762207
    7. '(dist' → logprob: -10.88633918762207
    8. 'd' → logprob: -10.88633918762207
    9. '    ' → logprob: -12.13633918762207
    10. '_dist' → logprob: -12.88633918762207

Token 94: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.000428761966759339
    2. '[v' → logprob: -7.875428676605225
    3. 'u' → logprob: -10.250429153442383
    4. '[' → logprob: -11.625429153442383
    5. ' [' → logprob: -13.000429153442383
    6. ' u' → logprob: -13.750429153442383
    7. '	u' → logprob: -15.000429153442383
    8. '```' → logprob: -15.875429153442383
    9. 'v' → logprob: -16.250429153442383
    10. ']' → logprob: -16.875429153442383

Token 95: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16064651310443878
    2. '>' → logprob: -1.9106465578079224
    3. '+' → logprob: -8.785646438598633
    4. ' +' → logprob: -9.160646438598633
    5. ']' → logprob: -9.660646438598633
    6. ' ' → logprob: -10.160646438598633
    7. ']>' → logprob: -10.660646438598633
    8. ')' → logprob: -11.660646438598633
    9. '   ' → logprob: -12.285646438598633
    10. ')>' → logprob: -12.535646438598633

Token 96: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.15666036307811737
    2. '>' → logprob: -2.031660318374634
    3. ' +' → logprob: -4.531660556793213
    4. '+' → logprob: -5.781660556793213
    5. ' ' → logprob: -11.031660079956055
    6. '   ' → logprob: -11.531660079956055
    7. '">' → logprob: -13.031660079956055
    8. '>w' → logprob: -13.156660079956055
    9. '[' → logprob: -13.656660079956055
    10. '>d' → logprob: -13.656660079956055

Token 97: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.07873345166444778
    2. 'd' → logprob: -2.703733444213867
    3. ' dist' → logprob: -4.828733444213867
    4. 'dist' → logprob: -7.328733444213867
    5. ' ' → logprob: -9.328733444213867
    6. '	d' → logprob: -12.703733444213867
    7. ' ' → logprob: -12.703733444213867
    8. '    ' → logprob: -13.766233444213867
    9. '   ' → logprob: -13.953733444213867
    10. '```' → logprob: -13.953733444213867

Token 98: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.023861197754740715
    2. '+' → logprob: -3.7738611698150635
    3. '+w' → logprob: -7.398861408233643
    4. ' ' → logprob: -13.398860931396484
    5. ' ' → logprob: -13.898860931396484
    6. ' +
' → logprob: -15.273860931396484
    7. ' plus' → logprob: -15.273860931396484
    8. ' +

' → logprob: -16.148860931396484
    9. '＋' → logprob: -16.273860931396484
    10. '+h' → logprob: -16.398860931396484

Token 99: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.5759447813034058
    2. 'w' → logprob: -0.8259447813034058
    3. ' ' → logprob: -12.700944900512695
    4. ' ' → logprob: -14.450944900512695
    5. '	w' → logprob: -14.700944900512695
    6. '```' → logprob: -14.950944900512695
    7. '    ' → logprob: -15.450944900512695
    8. '   ' → logprob: -15.888444900512695
    9. '  ' → logprob: -15.950944900512695
    10. '`' → logprob: -16.200944900512695

Token 100: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003681313246488571
    2. ':
' → logprob: -5.628681182861328
    3. ' :' → logprob: -9.878681182861328
    4. '):' → logprob: -11.003681182861328
    5. ':
' → logprob: -12.628681182861328
    6. ' :
' → logprob: -12.628681182861328
    7. ']:' → logprob: -13.253681182861328
    8. '):
' → logprob: -13.503681182861328
    9. '           ' → logprob: -13.628681182861328
    10. '=' → logprob: -14.753681182861328

Token 101: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04348266124725342
    2. ':' → logprob: -3.418482780456543
    3. ':
' → logprob: -5.418482780456543
    4. '           ' → logprob: -5.918482780456543
    5. '=' → logprob: -6.918482780456543
    6. ' :' → logprob: -7.918482780456543
    7. ' :
' → logprob: -7.918482780456543
    8. ' =' → logprob: -8.793482780456543
    9. '):
' → logprob: -8.918482780456543
    10. '                
' → logprob: -9.293482780456543

Token 102: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.5272442698478699
    2. 'dist' (adapté à ' dist') → logprob: -1.5272443294525146
    3. '               ' → logprob: -2.5272443294525146
    4. ' 
' → logprob: -3.2772443294525146
    5. ' ' → logprob: -3.6522443294525146
    6. '                ' → logprob: -4.0272440910339355
    7. '                   ' → logprob: -4.4022440910339355
    8. '                    
' → logprob: -5.1522440910339355
    9. '                
' → logprob: -5.9022440910339355
    10. '
' → logprob: -6.4022440910339355

Token 103: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0003609680861700326
    2. '[u' → logprob: -8.000361442565918
    3. '[' → logprob: -10.750361442565918
    4. 'v' → logprob: -12.625361442565918
    5. '[val' → logprob: -15.750361442565918
    6. '<v' → logprob: -16.3753604888916
    7. '=v' → logprob: -16.5003604888916
    8. '```' → logprob: -16.5003604888916
    9. '	v' → logprob: -16.8753604888916
    10. ' [' → logprob: -17.2503604888916

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006449135486036539
    2. ' ]' → logprob: -5.631449222564697
    3. ' =' → logprob: -6.131449222564697
    4. ']=' → logprob: -7.881449222564697
    5. '=' → logprob: -8.256448745727539
    6. '               ' → logprob: -11.506448745727539
    7. '[' → logprob: -11.756448745727539
    8. '           ' → logprob: -12.881448745727539
    9. '                   ' → logprob: -13.131448745727539
    10. '`]' → logprob: -13.131448745727539

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0015024791937321424
    2. '=' → logprob: -6.501502513885498
    3. ' ' → logprob: -16.251502990722656
    4. ']' → logprob: -17.126502990722656
    5. ' =
' → logprob: -17.251502990722656
    6. ')' → logprob: -18.001502990722656
    7. ' =)' → logprob: -18.626502990722656
    8. '[' → logprob: -18.876502990722656
    9. ' =
' → logprob: -19.001502990722656
    10. 's' → logprob: -19.126502990722656

Token 106: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.02326202020049095
    2. 'd' → logprob: -3.7732620239257812
    3. ' ' → logprob: -11.148262023925781
    4. ' ' → logprob: -13.273262023925781
    5. '_d' → logprob: -16.52326202392578
    6. 's' → logprob: -16.58576202392578
    7. '    ' → logprob: -17.27326202392578
    8. '                ' → logprob: -17.33576202392578
    9. '	d' → logprob: -17.39826202392578
    10. ' (' → logprob: -17.39826202392578

Token 107: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03367486596107483
    2. '+' → logprob: -3.408674955368042
    3. '+w' → logprob: -10.908675193786621
    4. '[' → logprob: -12.533675193786621
    5. ' ' → logprob: -13.033675193786621
    6. '[u' → logprob: -13.158675193786621
    7. '[v' → logprob: -13.908675193786621
    8. ' +
' → logprob: -15.033675193786621
    9. '[w' → logprob: -15.033675193786621
    10. ' ' → logprob: -15.283675193786621

Token 108: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6326066851615906
    2. ' w' → logprob: -0.7576066851615906
    3. 'v' → logprob: -13.132606506347656
    4. ' ' → logprob: -13.382606506347656
    5. ' ' → logprob: -13.757606506347656
    6. '(w' → logprob: -14.132606506347656
    7. ' v' → logprob: -14.882606506347656
    8. '```' → logprob: -14.882606506347656
    9. '+w' → logprob: -15.382606506347656
    10. '[w' → logprob: -15.507606506347656

Token 109: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004414928145706654
    2. 'heap' → logprob: -5.754415035247803
    3. ' heap' → logprob: -6.879415035247803
    4. '                
' → logprob: -9.254414558410645
    5. '(heap' → logprob: -10.129414558410645
    6. '```' → logprob: -10.504414558410645
    7. '           ' → logprob: -11.129414558410645
    8. '                   ' → logprob: -11.629414558410645
    9. '              ' → logprob: -12.004414558410645
    10. '       ' → logprob: -13.004414558410645

Token 110: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018429918214678764
    2. 'heap' → logprob: -4.393429756164551
    3. ' heap' → logprob: -5.143429756164551
    4. '(heap' → logprob: -10.26842975616455
    5. '```' → logprob: -11.26842975616455
    6. '                
' → logprob: -11.89342975616455
    7. '                   ' → logprob: -12.51842975616455
    8. '           ' → logprob: -12.76842975616455
    9. '.heap' → logprob: -13.89342975616455
    10. '              ' → logprob: -14.39342975616455

Token 111: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.011276880279183388
    2. ' heap' → logprob: -4.511276721954346
    3. '               ' → logprob: -8.386277198791504
    4. '           ' → logprob: -14.886277198791504
    5. '                   ' → logprob: -15.136277198791504
    6. '(heap' → logprob: -15.261277198791504
    7. '   ' → logprob: -16.511276245117188
    8. 'he' → logprob: -16.761276245117188
    9. '.heap' → logprob: -16.886276245117188
    10. '```' → logprob: -17.761276245117188

Token 112: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -3.128163257315464e-07
    2. '.he' → logprob: -16.25
    3. '.push' → logprob: -17.5
    4. '.q' → logprob: -17.625
    5. 'p' → logprob: -18.625
    6. '```' → logprob: -18.625
    7. 'push' → logprob: -18.875
    8. '_push' → logprob: -19.75
    9. 'qx' → logprob: -20.25
    10. ' .' → logprob: -20.25

Token 113: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -5.526570384972729e-05
    2. '.heap' → logprob: -10.000055313110352
    3. 'he' → logprob: -12.375055313110352
    4. 'q' → logprob: -13.000055313110352
    5. ' he' → logprob: -14.000055313110352
    6. '.push' → logprob: -14.250055313110352
    7. '.' → logprob: -14.250055313110352
    8. ' .' → logprob: -15.375055313110352
    9. '   ' → logprob: -15.750055313110352
    10. '```' → logprob: -15.875055313110352

Token 114: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0001037815964082256
    2. 'ap' → logprob: -9.500103950500488
    3. 'pp' → logprob: -10.625103950500488
    4. 'p' → logprob: -12.500103950500488
    5. 'q' → logprob: -15.125103950500488
    6. '```' → logprob: -15.625103950500488
    7. 'push' → logprob: -15.875103950500488
    8. 'a' → logprob: -16.625102996826172
    9. ' app' → logprob: -17.250102996826172
    10. '   ' → logprob: -17.250102996826172

Token 115: 'ush' (ID: 1776)
  Prédit: 'ush'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ush' → logprob: -3.173704271830502e-06
    2. 'push' → logprob: -13.25000286102295
    3. 'op' → logprob: -13.87500286102295
    4. 'sh' → logprob: -15.62500286102295
    5. '```' → logprob: -16.500003814697266
    6. '   ' → logprob: -17.125003814697266
    7. '[' → logprob: -17.875003814697266
    8. '{' → logprob: -18.875003814697266
    9. 'app' → logprob: -18.875003814697266
    10. 'p' → logprob: -18.875003814697266

Token 116: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.375000953674316
    3. 'heap' → logprob: -15.125000953674316
    4. ' (' → logprob: -15.125000953674316
    5. '```' → logprob: -17.125001907348633
    6. '(queue' → logprob: -17.875001907348633
    7. ' heap' → logprob: -18.250001907348633
    8. '(
' → logprob: -19.000001907348633
    9. '(h' → logprob: -19.000001907348633
    10. '.heap' → logprob: -19.500001907348633

Token 117: ',' (ID: 11)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.875000953674316
    3. 'heap' → logprob: -15.500000953674316
    4. ' (' → logprob: -15.875000953674316
    5. ' heap' → logprob: -16.500001907348633
    6. ')' → logprob: -16.750001907348633
    7. ',' → logprob: -17.000001907348633
    8. '(queue' → logprob: -17.000001907348633
    9. '.heap' → logprob: -17.375001907348633
    10. ',(' → logprob: -18.000001907348633

Token 118: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.36364060640335083
    2. '(dist' → logprob: -1.363640546798706
    3. '(' → logprob: -3.363640546798706
    4. '(d' → logprob: -4.238640785217285
    5. '(distance' → logprob: -10.113640785217285
    6. '((' → logprob: -10.488640785217285
    7. '(dp' → logprob: -12.113640785217285
    8. ' ' → logprob: -12.363640785217285
    9. '(diff' → logprob: -12.488640785217285
    10. '(dis' → logprob: -13.363640785217285

Token 119: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.001949344645254314
    2. ' dist' → logprob: -6.251949310302734
    3. 'd' → logprob: -11.126949310302734
    4. '(dist' → logprob: -12.251949310302734
    5. '               ' → logprob: -14.376949310302734
    6. '	dist' → logprob: -15.751949310302734
    7. '   ' → logprob: -16.001949310302734
    8. '                   ' → logprob: -16.501949310302734
    9. ' d' → logprob: -16.751949310302734
    10. 'distance' → logprob: -16.876949310302734

Token 120: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.259079363080673e-05
    2. 'v' → logprob: -12.000012397766113
    3. '[' → logprob: -12.375012397766113
    4. ',v' → logprob: -14.125012397766113
    5. ',' → logprob: -15.000012397766113
    6. '```' → logprob: -15.000012397766113
    7. '[u' → logprob: -15.375012397766113
    8. ' [' → logprob: -15.875012397766113
    9. '(v' → logprob: -16.37501335144043
    10. '<v' → logprob: -16.37501335144043

Token 121: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.726595241460018e-05
    2. ' ,' → logprob: -10.37503719329834
    3. ',v' → logprob: -12.87503719329834
    4. '],' → logprob: -13.25003719329834
    5. '),' → logprob: -14.25003719329834
    6. ',u' → logprob: -14.25003719329834
    7. '‌,' → logprob: -16.500038146972656
    8. '<|end|>' → logprob: -16.625038146972656
    9. ')' → logprob: -16.875038146972656
    10. 'v' → logprob: -17.375038146972656

Token 122: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0040785204619169235
    2. ' v' → logprob: -5.504078388214111
    3. '	v' → logprob: -17.504077911376953
    4. ')v' → logprob: -17.629077911376953
    5. ')' → logprob: -20.379077911376953
    6. ' ' → logprob: -20.629077911376953
    7. '<|end|>' → logprob: -20.879077911376953
    8. '```' → logprob: -21.004077911376953
    9. '   ' → logprob: -21.504077911376953
    10. '$v' → logprob: -21.754077911376953

Token 123: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00010521204239921644
    2. '))
' → logprob: -9.875104904174805
    3. ')' → logprob: -10.000104904174805
    4. '           ' → logprob: -12.875104904174805
    5. '               ' → logprob: -13.000104904174805
    6. '       ' → logprob: -13.500104904174805
    7. ')))' → logprob: -13.875104904174805
    8. ' ))' → logprob: -13.875104904174805
    9. '   ' → logprob: -16.875104904174805
    10. '));' → logprob: -17.625104904174805

Token 124: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3514252007007599
    2. ')' → logprob: -1.6014251708984375
    3. '<|end|>' → logprob: -3.1014251708984375
    4. '
' → logprob: -4.6014251708984375
    5. '    
' → logprob: -4.7264251708984375
    6. '       ' → logprob: -4.9764251708984375
    7. ':return' → logprob: -5.4764251708984375
    8. '\n' → logprob: -5.6014251708984375
    9. '```' → logprob: -5.7264251708984375
    10. ' ' → logprob: -6.2264251708984375

Token 125: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.33247506618499756
    2. '   ' → logprob: -1.5824750661849976
    3. ' return' → logprob: -2.582475185394287
    4. '
' → logprob: -7.207475185394287
    5. '	return' → logprob: -7.957475185394287
    6. ':return' → logprob: -8.207474708557129
    7. ' ' → logprob: -9.332474708557129
    8. '    
' → logprob: -9.582474708557129
    9. '<|end|>' → logprob: -9.582474708557129
    10. ')' → logprob: -9.957474708557129

Token 126: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.38687199354171753
    2. ' dist' → logprob: -1.1368720531463623
    3. '(dist' → logprob: -14.636872291564941
    4. '	dist' → logprob: -14.761872291564941
    5. '_dist' → logprob: -16.386871337890625
    6. 'Dist' → logprob: -17.511871337890625
    7. '.dist' → logprob: -18.386871337890625
    8. ' ' → logprob: -18.511871337890625
    9. ' ' → logprob: -18.511871337890625
    10. '   ' → logprob: -19.136871337890625

Token 127: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: 'n' (ID: 77)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06416014581918716
    2. '<|end|>' → logprob: -3.314160108566284
    3. '#' → logprob: -5.064160346984863
    4. 'def' → logprob: -5.189160346984863
    5. '[' → logprob: -5.564160346984863
    6. '

' → logprob: -5.814160346984863
    7. '```' → logprob: -5.814160346984863
    8. '\n' → logprob: -6.689160346984863
    9. '_' → logprob: -7.814160346984863
    10. '\' → logprob: -7.814160346984863

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28760093450546265
    2. ' ' → logprob: -2.0376009941101074
    3. ' =' → logprob: -2.9126009941101074
    4. '<|end|>' → logprob: -3.1626009941101074
    5. ' ,' → logprob: -4.037600994110107
    6. '=' → logprob: -6.287600994110107
    7. ')' → logprob: -6.662600994110107
    8. '  ' → logprob: -7.537600994110107
    9. '<|end|>' → logprob: -7.912600994110107
    10. ' n' → logprob: -8.41260051727295

Token 130: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0636541098356247
    2. ' m' → logprob: -2.8136541843414307
    3. 'k' → logprob: -6.563653945922852
    4. ' k' → logprob: -8.688653945922852
    5. 's' → logprob: -9.938653945922852
    6. 'q' → logprob: -11.563653945922852
    7. ' ' → logprob: -11.813653945922852
    8. ' =' → logprob: -11.938653945922852
    9. ' s' → logprob: -12.188653945922852
    10. '=' → logprob: -12.188653945922852

Token 131: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06378699094057083
    2. '=' → logprob: -2.8137869834899902
    3. ',' → logprob: -6.31378698348999
    4. ' ,' → logprob: -12.813787460327148
    5. ' ' → logprob: -13.688787460327148
    6. ' =
' → logprob: -13.813787460327148
    7. ')' → logprob: -14.938787460327148
    8. '=input' → logprob: -15.063787460327148
    9. ' =
' → logprob: -15.313787460327148
    10. '<|end|>' → logprob: -15.938787460327148

Token 132: ' s' (ID: 265)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7471284866333008
    2. 's' → logprob: -0.9971284866333008
    3. 'start' → logprob: -2.747128486633301
    4. 'q' → logprob: -2.997128486633301
    5. 't' → logprob: -4.372128486633301
    6. 'S' → logprob: -5.247128486633301
    7. 'cost' → logprob: -5.247128486633301
    8. '_' → logprob: -5.497128486633301
    9. 'source' → logprob: -5.872128486633301
    10. 'c' → logprob: -6.122128486633301

Token 133: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4763232171535492
    2. '=' → logprob: -0.9763232469558716
    3. ',' → logprob: -6.101323127746582
    4. ' ,' → logprob: -13.851323127746582
    5. '=input' → logprob: -14.101323127746582
    6. ' ' → logprob: -14.851323127746582
    7. 'n' → logprob: -14.851323127746582
    8. '<|end|>' → logprob: -15.226323127746582
    9. '=int' → logprob: -15.351323127746582
    10. ' =
' → logprob: -16.1013240814209

Token 134: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.005884114652872086
    2. 'd' → logprob: -5.755884170532227
    3. 'e' → logprob: -6.880884170532227
    4. 'f' → logprob: -7.255884170532227
    5. 'k' → logprob: -7.380884170532227
    6. ' t' → logprob: -9.755884170532227
    7. 'c' → logprob: -10.005884170532227
    8. 'g' → logprob: -10.130884170532227
    9. 'l' → logprob: -10.380884170532227
    10. '_' → logprob: -10.380884170532227

Token 135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5762156248092651
    2. ' =' → logprob: -0.8262156248092651
    3. ',' → logprob: -8.201215744018555
    4. '=input' → logprob: -14.701215744018555
    5. ' ' → logprob: -14.951215744018555
    6. ' =
' → logprob: -15.201215744018555
    7. '=

' → logprob: -15.576215744018555
    8. ' ,' → logprob: -15.951215744018555
    9. '=int' → logprob: -16.451215744018555
    10. ' =
' → logprob: -16.576215744018555

Token 136: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4742179214954376
    2. ' map' → logprob: -0.9742178916931152
    3. ' ' → logprob: -9.349218368530273
    4. '0' → logprob: -10.724218368530273
    5. '5' → logprob: -11.724218368530273
    6. '	map' → logprob: -12.099218368530273
    7. 'input' → logprob: -12.224218368530273
    8. '1' → logprob: -12.474218368530273
    9. '10' → logprob: -12.849218368530273
    10. 'list' → logprob: -12.974218368530273

Token 137: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0037316649686545134
    2. '(' → logprob: -5.628731727600098
    3. 'int' → logprob: -9.378731727600098
    4. '(map' → logprob: -10.878731727600098
    5. '(input' → logprob: -11.628731727600098
    6. '[int' → logprob: -11.753731727600098
    7. '<int' → logprob: -12.878731727600098
    8. '(str' → logprob: -12.878731727600098
    9. '(
' → logprob: -13.128731727600098
    10. 'map' → logprob: -13.628731727600098

Token 138: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08503526449203491
    2. 'input' → logprob: -2.5850353240966797
    3. ',input' → logprob: -5.71003532409668
    4. '(' → logprob: -6.83503532409668
    5. ')' → logprob: -6.96003532409668
    6. '=input' → logprob: -7.96003532409668
    7. ' input' → logprob: -8.08503532409668
    8. ',' → logprob: -9.46003532409668
    9. '()' → logprob: -11.58503532409668
    10. '[input' → logprob: -11.58503532409668

Token 139: ' raw' (ID: 11428)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009117019944824278
    2. ' input' → logprob: -7.000911712646484
    3. '(input' → logprob: -15.875911712646484
    4. '=input' → logprob: -17.000911712646484
    5. ',input' → logprob: -17.750911712646484
    6. '```' → logprob: -18.875911712646484
    7. 'open' → logprob: -18.875911712646484
    8. ')' → logprob: -18.875911712646484
    9. '	input' → logprob: -19.000911712646484
    10. '   ' → logprob: -19.250911712646484

Token 140: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0003820524725597352
    2. 'input' → logprob: -7.875381946563721
    3. 'Input' → logprob: -14.125382423400879
    4. '```' → logprob: -15.250382423400879
    5. '_in' → logprob: -15.500382423400879
    6. '_' → logprob: -15.500382423400879
    7. 's' → logprob: -15.750382423400879
    8. '_inputs' → logprob: -16.125381469726562
    9. '__' → logprob: -16.375381469726562
    10. '(input' → logprob: -17.000381469726562

Token 141: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.005665445234626532
    2. '()' → logprob: -5.255665302276611
    3. '())' → logprob: -7.755665302276611
    4. '(' → logprob: -14.63066577911377
    5. '()[' → logprob: -14.63066577911377
    6. '()
' → logprob: -15.00566577911377
    7. '().'' → logprob: -15.00566577911377
    8. '());' → logprob: -15.25566577911377
    9. '(),' → logprob: -15.50566577911377
    10. '()]' → logprob: -15.63066577911377

Token 142: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.005258183926343918
    2. 'strip' → logprob: -5.255258083343506
    3. 'rstrip' → logprob: -11.130258560180664
    4. '(split' → logprob: -12.130258560180664
    5. ' split' → logprob: -12.630258560180664
    6. 'spl' → logprob: -15.130258560180664
    7. '().' → logprob: -15.630258560180664
    8. 's' → logprob: -15.880258560180664
    9. ')' → logprob: -16.255258560180664
    10. '()' → logprob: -16.755258560180664

Token 143: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.07371412962675095
    2. ')' → logprob: -3.073714017868042
    3. '()' → logprob: -3.698714017868042
    4. '(' → logprob: -10.323714256286621
    5. '('' → logprob: -11.448714256286621
    6. '();)' → logprob: -12.573714256286621
    7. '(),' → logprob: -12.823714256286621
    8. '()))' → logprob: -13.573714256286621
    9. ' ())' → logprob: -13.573714256286621
    10. '()]' → logprob: -13.823714256286621

Token 144: 'edges' (ID: 39127)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.039280932396650314
    2. ' graph' → logprob: -3.414280891418457
    3. '_graph' → logprob: -6.789280891418457
    4. 'edges' → logprob: -6.789280891418457
    5. '<|end|>' → logprob: -7.414280891418457
    6. '(graph' → logprob: -7.539280891418457
    7. '	graph' → logprob: -7.914280891418457
    8. '
' → logprob: -7.914280891418457
    9. ' edges' → logprob: -8.039280891418457
    10. ' 
' → logprob: -8.289280891418457

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03369872272014618
    2. '=' → logprob: -3.408698797225952
    3. '=[]' → logprob: -10.283699035644531
    4. 's' → logprob: -11.658699035644531
    5. '[]' → logprob: -12.783699035644531
    6. '_' → logprob: -13.658699035644531
    7. '[' → logprob: -14.158699035644531
    8. ',' → logprob: -14.283699035644531
    9. ')' → logprob: -14.283699035644531
    10. ' ' → logprob: -14.658699035644531

Token 146: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.023657474666833878
    2. '[' → logprob: -3.7736575603485107
    3. ' []' → logprob: -8.52365779876709
    4. '[]
' → logprob: -8.89865779876709
    5. '[int' → logprob: -10.64865779876709
    6. ' [' → logprob: -11.39865779876709
    7. ' [[]' → logprob: -11.64865779876709
    8. '[n' → logprob: -11.89865779876709
    9. '[len' → logprob: -11.89865779876709
    10. '[][]' → logprob: -13.14865779876709

Token 147: 'tuple' (ID: 52834)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3661896884441376
    2. 'tuple' → logprob: -1.36618971824646
    3. 'list' → logprob: -3.61618971824646
    4. '()]' → logprob: -4.116189479827881
    5. '()' → logprob: -5.116189479827881
    6. ']' → logprob: -6.866189479827881
    7. ' tuple' → logprob: -7.866189479827881
    8. '(tuple' → logprob: -7.866189479827881
    9. ' []' → logprob: -7.991189479827881
    10. '[]
' → logprob: -10.241189956665039

Token 148: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.022834019735455513
    2. '(raw' → logprob: -3.897834062576294
    3. 'map' → logprob: -6.397833824157715
    4. '(int' → logprob: -8.272833824157715
    5. '(' → logprob: -8.522833824157715
    6. 'raw' → logprob: -9.147833824157715
    7. '()' → logprob: -10.272833824157715
    8. '(
' → logprob: -11.272833824157715
    9. '(input' → logprob: -11.647833824157715
    10. 'int' → logprob: -13.397833824157715

Token 149: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06202862784266472
    2. 'int' → logprob: -2.812028646469116
    3. ' int' → logprob: -11.062028884887695
    4. '<int' → logprob: -11.937028884887695
    5. 'str' → logprob: -12.062028884887695
    6. '[int' → logprob: -12.062028884887695
    7. 'input' → logprob: -12.187028884887695
    8. ',int' → logprob: -12.312028884887695
    9. '(str' → logprob: -12.562028884887695
    10. '=int' → logprob: -12.562028884887695

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14827556908130646
    2. '(raw' → logprob: -2.14827561378479
    3. ',input' → logprob: -4.023275375366211
    4. ')' → logprob: -6.773275375366211
    5. 'raw' → logprob: -7.023275375366211
    6. '(input' → logprob: -7.523275375366211
    7. '(' → logprob: -7.898275375366211
    8. '),' → logprob: -9.898275375366211
    9. ')(' → logprob: -10.398275375366211
    10. ' ,' → logprob: -10.398275375366211

Token 151: ' raw' (ID: 11428)
  Prédit: 'raw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'raw' → logprob: -0.015316858887672424
    2. ' raw' → logprob: -4.390316963195801
    3. 'input' → logprob: -5.890316963195801
    4. '(raw' → logprob: -11.0153169631958
    5. ' input' → logprob: -11.0153169631958
    6. '	raw' → logprob: -12.8903169631958
    7. ')' → logprob: -13.6403169631958
    8. '_raw' → logprob: -15.3903169631958
    9. '.raw' → logprob: -16.140316009521484
    10. '```' → logprob: -16.765316009521484

Token 152: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.0009193199803121388
    2. 'input' → logprob: -7.000919342041016
    3. 'Input' → logprob: -12.500919342041016
    4. '_inputs' → logprob: -12.875919342041016
    5. 'split' → logprob: -14.750919342041016
    6. 'import' → logprob: -15.250919342041016
    7. '_output' → logprob: -15.500919342041016
    8. '_INPUT' → logprob: -15.750919342041016
    9. '```' → logprob: -16.375919342041016
    10. 'inputs' → logprob: -16.500919342041016

Token 153: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.166338137816638e-05
    2. '()' → logprob: -10.750031471252441
    3. ')' → logprob: -12.375031471252441
    4. '))' → logprob: -13.375031471252441
    5. '()))' → logprob: -13.375031471252441
    6. '().__' → logprob: -14.500031471252441
    7. '.' → logprob: -14.750031471252441
    8. '())' → logprob: -14.750031471252441
    9. '.readline' → logprob: -14.750031471252441
    10. '.split' → logprob: -15.500031471252441

Token 154: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00027015688829123974
    2. 'strip' → logprob: -8.250269889831543
    3. 'rstrip' → logprob: -11.875269889831543
    4. '(split' → logprob: -13.875269889831543
    5. ' split' → logprob: -15.000269889831543
    6. ')' → logprob: -15.125269889831543
    7. 'read' → logprob: -15.750269889831543
    8. 'decode' → logprob: -17.37527084350586
    9. 'spl' → logprob: -17.37527084350586
    10. '.split' → logprob: -18.12527084350586

Token 155: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.3876555263996124
    2. '))' → logprob: -1.13765549659729
    3. '()' → logprob: -7.512655735015869
    4. '())' → logprob: -8.637655258178711
    5. '(' → logprob: -11.012655258178711
    6. '()))
' → logprob: -11.012655258178711
    7. ')' → logprob: -11.137655258178711
    8. '()));' → logprob: -12.887655258178711
    9. ')))' → logprob: -13.262655258178711
    10. ' ))' → logprob: -13.512655258178711

Token 156: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0025596146006137133
    2. ' for' → logprob: -7.002559661865234
    3. ')]' → logprob: -7.252559661865234
    4. 'for' → logprob: -8.002559661865234
    5. '()' → logprob: -8.127559661865234
    6. ' )' → logprob: -8.752559661865234
    7. '(' → logprob: -9.752559661865234
    8. ',' → logprob: -10.752559661865234
    9. '())' → logprob: -11.002559661865234
    10. ')
' → logprob: -11.252559661865234

Token 157: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003794336807914078
    2. ' range' → logprob: -8.25037956237793
    3. 'range' → logprob: -9.37537956237793
    4. ' _' → logprob: -10.50037956237793
    5. '_range' → logprob: -12.50037956237793
    6. '_i' → logprob: -13.62537956237793
    7. ' xrange' → logprob: -15.50037956237793
    8. '_=' → logprob: -15.50037956237793
    9. '_
' → logprob: -15.87537956237793
    10. '(range' → logprob: -16.25037956237793

Token 158: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0032282178290188313
    2. ' range' → logprob: -6.378228187561035
    3. 'in' → logprob: -6.503228187561035
    4. ' in' → logprob: -11.253228187561035
    5. '(range' → logprob: -11.753228187561035
    6. '	range' → logprob: -13.378228187561035
    7. 'm' → logprob: -13.628228187561035
    8. '_' → logprob: -13.753228187561035
    9. ' xrange' → logprob: -14.128228187561035
    10. '(' → logprob: -14.628228187561035

Token 159: ' xrange' (ID: 92050)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.735893965815194e-05
    2. ' range' → logprob: -11.000017166137695
    3. 'x' → logprob: -15.250017166137695
    4. '(range' → logprob: -15.500017166137695
    5. ' xrange' → logprob: -16.500017166137695
    6. '	range' → logprob: -16.625017166137695
    7. '```' → logprob: -18.500017166137695
    8. ')' → logprob: -19.000017166137695
    9. 'rang' → logprob: -19.250017166137695
    10. '   ' → logprob: -19.500017166137695

Token 160: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.3856492842023727e-06
    2. '(' → logprob: -13.625000953674316
    3. 'm' → logprob: -15.750000953674316
    4. ' (' → logprob: -18.375001907348633
    5. '((' → logprob: -18.625001907348633
    6. '(n' → logprob: -19.125001907348633
    7. '(M' → logprob: -19.875001907348633
    8. '(
' → logprob: -20.625001907348633
    9. ')m' → logprob: -21.625001907348633
    10. '[m' → logprob: -21.875001907348633

Token 161: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0009151478880085051
    2. ']' → logprob: -7.250915050506592
    3. ')' → logprob: -8.50091552734375
    4. ' )' → logprob: -14.75091552734375
    5. ')],' → logprob: -14.87591552734375
    6. ')])' → logprob: -14.87591552734375
    7. ' ]' → logprob: -15.50091552734375
    8. '])]' → logprob: -16.00091552734375
    9. '])' → logprob: -16.12591552734375
    10. ')]
' → logprob: -16.12591552734375

Token 162: 'graph' (ID: 7978)
  Prédit: 'graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.1019199788570404
    2. '
' → logprob: -2.4769198894500732
    3. ' graph' → logprob: -5.601920127868652
    4. '<|end|>' → logprob: -5.601920127868652
    5. ' 
' → logprob: -5.726920127868652
    6. 'g' → logprob: -6.976920127868652
    7. '_graph' → logprob: -8.476920127868652
    8. '(graph' → logprob: -8.726920127868652
    9. 'n' → logprob: -8.976920127868652
    10. '  
' → logprob: -9.101920127868652

Token 163: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1128259226679802
    2. '=' → logprob: -2.237825870513916
    3. '[' → logprob: -13.987826347351074
    4. 's' → logprob: -14.237826347351074
    5. ' =[' → logprob: -14.362826347351074
    6. ' =
' → logprob: -14.737826347351074
    7. ' ' → logprob: -15.237826347351074
    8. '=[]' → logprob: -15.612826347351074
    9. ')' → logprob: -15.737826347351074
    10. '=[' → logprob: -15.987826347351074

Token 164: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12692904472351074
    2. ' [[]' → logprob: -2.1269290447235107
    3. '[[' → logprob: -15.00192928314209
    4. ' [' → logprob: -15.25192928314209
    5. '{' → logprob: -16.251928329467773
    6. '   ' → logprob: -16.501928329467773
    7. '[]' → logprob: -16.626928329467773
    8. '[len' → logprob: -16.751928329467773
    9. '[
' → logprob: -17.251928329467773
    10. '[n' → logprob: -17.251928329467773

Token 165: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38935965299606323
    2. ' for' → logprob: -1.139359712600708
    3. '(n' → logprob: -6.139359474182129
    4. ',' → logprob: -8.764359474182129
    5. ')' → logprob: -9.764359474182129
    6. ']' → logprob: -10.014359474182129
    7. '
' → logprob: -11.139359474182129
    8. 'n' → logprob: -11.264359474182129
    9. '()' → logprob: -11.764359474182129
    10. '   ' → logprob: -12.014359474182129

Token 166: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05606531351804733
    2. 'range' → logprob: -3.056065320968628
    3. ' range' → logprob: -5.056065082550049
    4. 'in' → logprob: -7.181065082550049
    5. ' in' → logprob: -8.431065559387207
    6. '(range' → logprob: -9.806065559387207
    7. '_range' → logprob: -11.056065559387207
    8. ' _' → logprob: -11.056065559387207
    9. 'i' → logprob: -11.806065559387207
    10. 'x' → logprob: -13.181065559387207

Token 167: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1151946559548378
    2. 'in' → logprob: -2.36519455909729
    3. ' range' → logprob: -4.615194797515869
    4. ' in' → logprob: -5.365194797515869
    5. 'x' → logprob: -8.615194320678711
    6. ' xrange' → logprob: -9.615194320678711
    7. '(range' → logprob: -10.365194320678711
    8. '_' → logprob: -11.990194320678711
    9. 'graph' → logprob: -12.240194320678711
    10. 'i' → logprob: -12.615194320678711

Token 168: ' xrange' (ID: 92050)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004989399458281696
    2. ' range' → logprob: -7.6254987716674805
    3. 'x' → logprob: -12.00049877166748
    4. ' xrange' → logprob: -12.87549877166748
    5. '(range' → logprob: -13.37549877166748
    6. ' ' → logprob: -15.75049877166748
    7. '   ' → logprob: -16.000499725341797
    8. '	range' → logprob: -16.125499725341797
    9. 'n' → logprob: -16.375499725341797
    10. 'rang' → logprob: -16.500499725341797

Token 169: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.00000286102295
    3. 'n' → logprob: -15.12500286102295
    4. '(len' → logprob: -16.750001907348633
    5. ' (' → logprob: -17.375001907348633
    6. '((' → logprob: -17.500001907348633
    7. '(
' → logprob: -20.875001907348633
    8. '(m' → logprob: -20.875001907348633
    9. '[n' → logprob: -20.875001907348633
    10. '(N' → logprob: -20.875001907348633

Token 170: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00013047587708570063
    2. ')]
' → logprob: -9.000130653381348
    3. ']' → logprob: -12.750130653381348
    4. ')' → logprob: -13.125130653381348
    5. ')]

' → logprob: -13.875130653381348
    6. ')]
' → logprob: -14.375130653381348
    7. ' )' → logprob: -15.125130653381348
    8. '')]' → logprob: -16.12512969970703
    9. '])' → logprob: -16.75012969970703
    10. '])]' → logprob: -17.12512969970703

Token 171: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.5716304410016164e-05
    2. ' ' → logprob: -10.250035285949707
    3. '(' → logprob: -16.375036239624023
    4. '2' → logprob: -16.500036239624023
    5. '0' → logprob: -17.125036239624023
    6. ')' → logprob: -17.750036239624023
    7. '   ' → logprob: -18.375036239624023
    8. '
' → logprob: -19.000036239624023
    9. '```' → logprob: -19.125036239624023
    10. '１' → logprob: -19.250036239624023

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.735893965815194e-05
    2. ' ' → logprob: -11.000017166137695
    3. '0' → logprob: -15.250017166137695
    4. '
' → logprob: -16.000017166137695
    5. '(' → logprob: -16.875017166137695
    6. '```' → logprob: -17.000017166137695
    7. '   ' → logprob: -17.250017166137695
    8. '2' → logprob: -18.000017166137695
    9. '`' → logprob: -18.250017166137695
    10. '

' → logprob: -18.312517166137695

Token 173: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00041172682540491223
    2. ']' → logprob: -7.875411510467529
    3. ')' → logprob: -10.500411987304688
    4. '])' → logprob: -13.250411987304688
    5. '])]' → logprob: -13.625411987304688
    6. ')])' → logprob: -14.875411987304688
    7. ')]
' → logprob: -15.500411987304688
    8. '')]' → logprob: -15.625411987304688
    9. '}]' → logprob: -16.375411987304688
    10. ')],' → logprob: -16.625411987304688

Token 174: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.011080714873969555
    2. ' for' → logprob: -4.511080741882324
    3. '<|end|>' → logprob: -11.261080741882324
    4. '   ' → logprob: -11.761080741882324
    5. '	for' → logprob: -12.011080741882324
    6. '
' → logprob: -12.886080741882324
    7. ' 
' → logprob: -13.261080741882324
    8. '    
' → logprob: -13.761080741882324
    9. '  
' → logprob: -15.386080741882324
    10. 'i' → logprob: -16.261079788208008

Token 175: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.017228463664650917
    2. 'a' → logprob: -4.517228603363037
    3. '(u' → logprob: -6.142228603363037
    4. 'x' → logprob: -6.267228603363037
    5. ' u' → logprob: -6.892228603363037
    6. 'i' → logprob: -8.267228126525879
    7. '_,' → logprob: -8.392228126525879
    8. '_u' → logprob: -8.767228126525879
    9. 'f' → logprob: -9.142228126525879
    10. 'e' → logprob: -9.767228126525879

Token 176: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15654049813747406
    2. 'in' → logprob: -2.6565403938293457
    3. ' in' → logprob: -2.7815403938293457
    4. ' ,' → logprob: -5.031540393829346
    5. ',u' → logprob: -5.406540393829346
    6. '[' → logprob: -7.406540393829346
    7. '[u' → logprob: -7.406540393829346
    8. ',in' → logprob: -9.156540870666504
    9. '_,' → logprob: -9.156540870666504
    10. 'u' → logprob: -9.781540870666504

Token 177: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0114979837089777
    2. ' v' → logprob: -4.511497974395752
    3. 'w' → logprob: -7.761497974395752
    4. ' w' → logprob: -11.63649845123291
    5. 'u' → logprob: -12.38649845123291
    6. ',' → logprob: -12.63649845123291
    7. ' ' → logprob: -12.76149845123291
    8. ',v' → logprob: -12.88649845123291
    9. 'c' → logprob: -14.01149845123291
    10. 'e' → logprob: -15.38649845123291

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012189284898340702
    2. ' ,' → logprob: -6.751218795776367
    3. ',w' → logprob: -10.251218795776367
    4. ',u' → logprob: -11.376218795776367
    5. ',v' → logprob: -14.501218795776367
    6. 'w' → logprob: -15.001218795776367
    7. ' in' → logprob: -15.126218795776367
    8. '_,' → logprob: -15.251218795776367
    9. '‌,' → logprob: -16.001218795776367
    10. ',user' → logprob: -16.501218795776367

Token 179: ' a' (ID: 261)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8971520066261292
    2. 'w' → logprob: -0.8971520066261292
    3. 'a' → logprob: -2.2721519470214844
    4. 'l' → logprob: -4.022151947021484
    5. ' w' → logprob: -4.272151947021484
    6. 'd' → logprob: -4.772151947021484
    7. ' c' → logprob: -5.022151947021484
    8. 'ws' → logprob: -5.147151947021484
    9. '*' → logprob: -5.772151947021484
    10. 'x' → logprob: -5.772151947021484

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038562860572710633
    2. ' ,' → logprob: -8.000385284423828
    3. ',b' → logprob: -10.250385284423828
    4. ',w' → logprob: -12.125385284423828
    5. 'b' → logprob: -12.625385284423828
    6. 'w' → logprob: -12.625385284423828
    7. ',c' → logprob: -14.375385284423828
    8. 'c' → logprob: -14.375385284423828
    9. '_,' → logprob: -14.625385284423828
    10. 's' → logprob: -16.125385284423828

Token 181: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.004641353618353605
    2. ' b' → logprob: -5.379641532897949
    3. 'c' → logprob: -11.87964153289795
    4. 'd' → logprob: -12.25464153289795
    5. 'l' → logprob: -13.00464153289795
    6. ' ' → logprob: -13.87964153289795
    7. 'w' → logprob: -13.87964153289795
    8. 'p' → logprob: -14.50464153289795
    9. 'f' → logprob: -14.50464153289795
    10. 'x' → logprob: -14.62964153289795

Token 182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05067699775099754
    2. 'in' → logprob: -3.0506770610809326
    3. ',' → logprob: -6.1756768226623535
    4. ' ,' → logprob: -12.675677299499512
    5. '	in' → logprob: -13.425677299499512
    6. ',in' → logprob: -13.550677299499512
    7. ' ' → logprob: -14.425677299499512
    8. '   ' → logprob: -14.550677299499512
    9. '_in' → logprob: -15.425677299499512
    10. 'a' → logprob: -16.050676345825195

Token 183: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.0015029559144750237
    2. ' edges' → logprob: -6.501502990722656
    3. '(edges' → logprob: -15.626502990722656
    4. 'edge' → logprob: -16.501502990722656
    5. '_edges' → logprob: -16.626502990722656
    6. ' ' → logprob: -16.751502990722656
    7. '.edges' → logprob: -16.751502990722656
    8. '   ' → logprob: -16.876502990722656
    9. 'ed' → logprob: -17.251502990722656
    10. 'raw' → logprob: -17.876502990722656

Token 184: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1136186495423317
    2. ':
' → logprob: -2.2386186122894287
    3. '   ' → logprob: -7.238618850708008
    4. ',' → logprob: -9.988618850708008
    5. '[' → logprob: -11.738618850708008
    6. '):
' → logprob: -11.988618850708008
    7. ' :
' → logprob: -13.238618850708008
    8. '.append' → logprob: -13.363618850708008
    9. ':
' → logprob: -13.488618850708008
    10. ' :' → logprob: -13.488618850708008

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005483710207045078
    2. '	graph' → logprob: -5.380483627319336
    3. ' graph' → logprob: -7.130483627319336
    4. 'graph' → logprob: -10.005483627319336
    5. '<|end|>' → logprob: -11.880483627319336
    6. '(graph' → logprob: -12.630483627319336
    7. '    
' → logprob: -13.255483627319336
    8. '```' → logprob: -13.380483627319336
    9. '       ' → logprob: -13.630483627319336
    10. '   ' → logprob: -14.005483627319336

Token 186: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.32547616958618164
    2. 'graph' (adapté à ' graph') → logprob: -1.3254761695861816
    3. '   ' → logprob: -4.450476169586182
    4. '	graph' → logprob: -7.700476169586182
    5. '(graph' → logprob: -12.075475692749023
    6. '_graph' → logprob: -12.950475692749023
    7. '```' → logprob: -13.450475692749023
    8. '.graph' → logprob: -14.075475692749023
    9. ' ' → logprob: -14.075475692749023
    10. 'Graph' → logprob: -14.450475692749023

Token 187: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.25
    3. ' [' → logprob: -16.875
    4. '   ' → logprob: -17.25
    5. '[v' → logprob: -17.625
    6. 'u' → logprob: -17.625
    7. '```' → logprob: -18.0
    8. '[a' → logprob: -18.5
    9. '[user' → logprob: -18.5
    10. '
' → logprob: -19.25

Token 188: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -1.0683535037969705e-05
    2. '.append' → logprob: -12.50001049041748
    3. ').' → logprob: -13.12501049041748
    4. '.' → logprob: -13.12501049041748
    5. ']' → logprob: -13.37501049041748
    6. ' ].' → logprob: -14.00001049041748
    7. '   ' → logprob: -15.25001049041748
    8. '[u' → logprob: -17.375011444091797
    9. ''].' → logprob: -17.875011444091797
    10. '}.' → logprob: -18.250011444091797

Token 189: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.2200749754119897e-06
    2. ' append' → logprob: -13.625001907348633
    3. '.append' → logprob: -13.875001907348633
    4. '	append' → logprob: -17.875001907348633
    5. '_append' → logprob: -18.250001907348633
    6. 'app' → logprob: -18.750001907348633
    7. 'appen' → logprob: -18.875001907348633
    8. '```' → logprob: -18.875001907348633
    9. 'Append' → logprob: -20.750001907348633
    10. 'push' → logprob: -20.875001907348633

Token 190: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00010425841173855588
    2. '(' → logprob: -9.250103950500488
    3. '(v' → logprob: -11.750103950500488
    4. '(
' → logprob: -15.375103950500488
    5. '([' → logprob: -16.875104904174805
    6. '(u' → logprob: -17.875104904174805
    7. '(('' → logprob: -18.500104904174805
    8. ' ((' → logprob: -18.625104904174805
    9. '[(' → logprob: -19.125104904174805
    10. '(((' → logprob: -19.250104904174805

Token 191: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.896309739408025e-07
    2. ' v' → logprob: -14.125000953674316
    3. ')v' → logprob: -17.75
    4. '   ' → logprob: -19.25
    5. '	v' → logprob: -19.875
    6. ',v' → logprob: -21.375
    7. 'vq' → logprob: -21.875
    8. ')' → logprob: -22.0
    9. 'vj' → logprob: -22.625
    10. '```' → logprob: -23.25

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002421202603727579
    2. ',a' → logprob: -6.5024213790893555
    3. ' ,' → logprob: -7.0024213790893555
    4. ',(' → logprob: -12.752421379089355
    5. '(a' → logprob: -13.502421379089355
    6. '(' → logprob: -13.502421379089355
    7. ' (' → logprob: -13.502421379089355
    8. 'a' → logprob: -14.002421379089355
    9. '   ' → logprob: -14.502421379089355
    10. ',
' → logprob: -15.502421379089355

Token 193: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0021860685665160418
    2. ' a' → logprob: -6.127186298370361
    3. ' ' → logprob: -15.502185821533203
    4. '	a' → logprob: -15.502185821533203
    5. '   ' → logprob: -15.627185821533203
    6. ')a' → logprob: -15.877185821533203
    7. ',a' → logprob: -16.252185821533203
    8. '(a' → logprob: -16.752185821533203
    9. '
' → logprob: -16.877185821533203
    10. '  ' → logprob: -17.002185821533203

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004497381451074034
    2. ',b' → logprob: -7.7504496574401855
    3. ' ,' → logprob: -10.875450134277344
    4. 'b' → logprob: -15.625450134277344
    5. ',
' → logprob: -18.250450134277344
    6. ' b' → logprob: -18.375450134277344
    7. ',B' → logprob: -20.875450134277344
    8. ' ' → logprob: -21.875450134277344
    9. '   ' → logprob: -22.125450134277344
    10. ',

' → logprob: -22.375450134277344

Token 195: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029750604182481766
    2. ' b' → logprob: -3.5297505855560303
    3. ' ' → logprob: -16.52975082397461
    4. ')b' → logprob: -17.27975082397461
    5. '   ' → logprob: -17.77975082397461
    6. '	b' → logprob: -18.02975082397461
    7. '  ' → logprob: -18.52975082397461
    8. '    ' → logprob: -18.52975082397461
    9. ',b' → logprob: -19.52975082397461
    10. ')' → logprob: -19.52975082397461

Token 196: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -5.526570384972729e-05
    2. ')' → logprob: -10.000055313110352
    3. '))
' → logprob: -12.250055313110352
    4. ' ))' → logprob: -12.750055313110352
    5. ',' → logprob: -13.375055313110352
    6. ')))' → logprob: -15.000055313110352
    7. '   ' → logprob: -16.37505531311035
    8. '));' → logprob: -16.50005531311035
    9. '),' → logprob: -16.75005531311035
    10. ' ' → logprob: -17.12505531311035

Token 197: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.03814121335744858
    2. 'for' → logprob: -3.2881412506103516
    3. ' graph' → logprob: -10.038141250610352
    4. ' for' → logprob: -10.913141250610352
    5. '   ' → logprob: -11.788141250610352
    6. 'from' → logprob: -12.288141250610352
    7. '```' → logprob: -12.538141250610352
    8. '<|end|>' → logprob: -12.663141250610352
    9. '	graph' → logprob: -12.788141250610352
    10. '#' → logprob: -13.163141250610352

Token 198: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.003369611920788884
    2. ' graph' → logprob: -5.7533698081970215
    3. '	graph' → logprob: -8.628369331359863
    4. '   ' → logprob: -11.378369331359863
    5. '(graph' → logprob: -13.753369331359863
    6. '.graph' → logprob: -16.37837028503418
    7. 'graphql' → logprob: -17.12837028503418
    8. ' ' → logprob: -17.25337028503418
    9. '_graph' → logprob: -17.25337028503418
    10. '```' → logprob: -17.37837028503418

Token 199: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -4.961759259458631e-06
    2. '[u' → logprob: -12.750004768371582
    3. 'v' → logprob: -13.625004768371582
    4. '[' → logprob: -14.125004768371582
    5. '[b' → logprob: -16.6250057220459
    6. '[V' → logprob: -16.7500057220459
    7. ' [' → logprob: -17.8750057220459
    8. '[t' → logprob: -18.1250057220459
    9. '[a' → logprob: -18.7500057220459
    10. '
' → logprob: -18.7500057220459

Token 200: '].' (ID: 1651)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3873434364795685
    2. '.' → logprob: -1.137343406677246
    3. ').' → logprob: -7.887343406677246
    4. ' .' → logprob: -9.887343406677246
    5. '].' → logprob: -10.637343406677246
    6. '.app' → logprob: -11.387343406677246
    7. ',' → logprob: -12.387343406677246
    8. '   ' → logprob: -13.262343406677246
    9. '.Append' → logprob: -13.262343406677246
    10. '}.' → logprob: -14.262343406677246

Token 201: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.0280383548888494e-06
    2. '.append' → logprob: -14.125000953674316
    3. 'appen' → logprob: -15.750000953674316
    4. ' append' → logprob: -16.250001907348633
    5. 'app' → logprob: -18.000001907348633
    6. '	append' → logprob: -18.625001907348633
    7. '
' → logprob: -20.250001907348633
    8. '```' → logprob: -20.500001907348633
    9. '_append' → logprob: -21.000001907348633
    10. 'add' → logprob: -21.250001907348633

Token 202: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0015262868255376816
    2. '(u' → logprob: -6.501526355743408
    3. '(' → logprob: -11.50152587890625
    4. ' (' → logprob: -11.62652587890625
    5. '(v' → logprob: -12.75152587890625
    6. ' ((' → logprob: -13.50152587890625
    7. '(
' → logprob: -14.25152587890625
    8. '   ' → logprob: -18.62652587890625
    9. ' ' → logprob: -18.87652587890625
    10. 'u' → logprob: -19.75152587890625

Token 203: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.03376752510666847
    2. '(u' → logprob: -3.4087674617767334
    3. ' u' → logprob: -9.283767700195312
    4. ' (' → logprob: -11.033767700195312
    5. '[u' → logprob: -12.158767700195312
    6. ',u' → logprob: -12.908767700195312
    7. '   ' → logprob: -13.533767700195312
    8. '	u' → logprob: -13.658767700195312
    9. ',' → logprob: -14.658767700195312
    10. '(' → logprob: -14.908767700195312

Token 204: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3663626305060461e-05
    2. ' ,' → logprob: -11.37501335144043
    3. ',u' → logprob: -13.75001335144043
    4. ',
' → logprob: -14.37501335144043
    5. ',(' → logprob: -15.87501335144043
    6. ',v' → logprob: -16.12501335144043
    7. ')' → logprob: -16.62501335144043
    8. '   ' → logprob: -16.75001335144043
    9. ',a' → logprob: -17.50001335144043
    10. '(' → logprob: -17.50001335144043

Token 205: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2811540365219116
    2. ' a' → logprob: -1.4061540365219116
    3. ' ' → logprob: -13.281153678894043
    4. '	a' → logprob: -14.281153678894043
    5. '   ' → logprob: -15.281153678894043
    6. ')a' → logprob: -15.281153678894043
    7. '    ' → logprob: -15.406153678894043
    8. ',a' → logprob: -15.531153678894043
    9. '  ' → logprob: -15.906153678894043
    10. '<|end|>' → logprob: -15.906153678894043

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004273315134923905
    2. ' ,' → logprob: -7.87542724609375
    3. ',b' → logprob: -10.00042724609375
    4. 'b' → logprob: -13.50042724609375
    5. ',
' → logprob: -15.12542724609375
    6. '   ' → logprob: -16.62542724609375
    7. ' b' → logprob: -17.37542724609375
    8. ' ' → logprob: -17.75042724609375
    9. ')' → logprob: -17.87542724609375
    10. '```' → logprob: -17.87542724609375

Token 207: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03804183006286621
    2. ' b' → logprob: -3.288041830062866
    3. ' ' → logprob: -15.663042068481445
    4. ')b' → logprob: -16.038042068481445
    5. '<|end|>' → logprob: -16.163042068481445
    6. 'B' → logprob: -17.788042068481445
    7. '	b' → logprob: -17.788042068481445
    8. '   ' → logprob: -18.038042068481445
    9. ')' → logprob: -18.538042068481445
    10. ',b' → logprob: -18.725542068481445

Token 208: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011050998233258724
    2. ')' → logprob: -4.511051177978516
    3. '))
' → logprob: -13.136051177978516
    4. ' ))' → logprob: -14.261051177978516
    5. ')))' → logprob: -14.636051177978516
    6. ')
' → logprob: -16.886051177978516
    7. '),' → logprob: -17.136051177978516
    8. '));' → logprob: -17.761051177978516
    9. ' )' → logprob: -17.886051177978516
    10. '))

' → logprob: -18.511051177978516

Token 209: 'd' (ID: 67)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.006384352687746286
    2. 'cost' → logprob: -5.256384372711182
    3. 'd' → logprob: -7.756384372711182
    4. 'da' → logprob: -7.881384372711182
    5. 'a' → logprob: -9.506383895874023
    6. 'distance' → logprob: -9.506383895874023
    7. '```' → logprob: -10.131383895874023
    8. ' dist' → logprob: -10.381383895874023
    9. 'start' → logprob: -11.006383895874023
    10. 'short' → logprob: -11.256383895874023

Token 210: '_y' (ID: 9410)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.11304856836795807
    2. 'a' → logprob: -2.613048553466797
    3. '_a' → logprob: -4.863048553466797
    4. 'istance' → logprob: -5.113048553466797
    5. 'start' → logprob: -5.238048553466797
    6. 'dist' → logprob: -5.488048553466797
    7. 's' → logprob: -6.238048553466797
    8. 'ists' → logprob: -6.613048553466797
    9. 'from' → logprob: -6.988048553466797
    10. '_start' → logprob: -7.238048553466797

Token 211: ' =' (ID: 314)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.010265479795634747
    2. 'ijkstra' → logprob: -6.135265350341797
    3. '_dist' → logprob: -7.010265350341797
    4. 'ists' → logprob: -7.010265350341797
    5. 'ista' → logprob: -7.135265350341797
    6. ' =' → logprob: -7.260265350341797
    7. 'istance' → logprob: -7.260265350341797
    8. '1' → logprob: -7.260265350341797
    9. 'st' → logprob: -7.635265350341797
    10. '=' → logprob: -7.635265350341797

Token 212: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.006108908914029598
    2. ' d' → logprob: -5.75610876083374
    3. 'ijkstra' → logprob: -5.88110876083374
    4. '(d' → logprob: -9.756109237670898
    5. 'partial' → logprob: -10.381109237670898
    6. '(' → logprob: -11.006109237670898
    7. '[' → logprob: -11.756109237670898
    8. 's' → logprob: -12.256109237670898
    9. 'dist' → logprob: -12.756109237670898
    10. ' partial' → logprob: -12.756109237670898

Token 213: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -3.333223139634356e-05
    2. 'ijk' → logprob: -10.625033378601074
    3. 'graph' → logprob: -12.875033378601074
    4. 'ij' → logprob: -13.125033378601074
    5. 'y' → logprob: -13.625033378601074
    6. 'ijks' → logprob: -14.000033378601074
    7. 'jik' → logprob: -14.625033378601074
    8. '```' → logprob: -15.250033378601074
    9. '(graph' → logprob: -15.375033378601074
    10. '_y' → logprob: -15.375033378601074

Token 214: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -1.5451681974809617e-05
    2. '(' → logprob: -11.375015258789062
    3. '(
' → logprob: -13.375015258789062
    4. 'graph' → logprob: -14.000015258789062
    5. '(grammar' → logprob: -15.125015258789062
    6. '(game' → logprob: -15.500015258789062
    7. ' (' → logprob: -15.875015258789062
    8. '(gr' → logprob: -16.000015258789062
    9. 'partial' → logprob: -16.000015258789062
    10. '(heap' → logprob: -16.125015258789062

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0023130958434194326
    2. ',s' → logprob: -6.377313137054443
    3. '(s' → logprob: -7.502313137054443
    4. ' ,' → logprob: -10.127312660217285
    5. '(' → logprob: -11.877312660217285
    6. 's' → logprob: -12.002312660217285
    7. ',t' → logprob: -13.002312660217285
    8. ',n' → logprob: -13.877312660217285
    9. ',y' → logprob: -14.002312660217285
    10. ',d' → logprob: -14.127312660217285

Token 216: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.016055485233664513
    2. ' s' → logprob: -4.141055583953857
    3. 't' → logprob: -11.5160551071167
    4. 'y' → logprob: -12.7660551071167
    5. ')' → logprob: -12.8910551071167
    6. ' ' → logprob: -13.5160551071167
    7. '<|end|>' → logprob: -13.7660551071167
    8. ' y' → logprob: -14.0160551071167
    9. ' t' → logprob: -14.0160551071167
    10. '1' → logprob: -14.2660551071167

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006878906278871
    2. '0' → logprob: -7.375688076019287
    3. '1' → logprob: -10.375687599182129
    4. ' ,' → logprob: -10.500687599182129
    5. '2' → logprob: -13.375687599182129
    6. '   ' → logprob: -15.125687599182129
    7. ',
' → logprob: -15.625687599182129
    8. '[' → logprob: -15.875687599182129
    9. '```' → logprob: -16.000688552856445
    10. ')' → logprob: -16.250688552856445

Token 218: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38965922594070435
    2. '2' → logprob: -1.1396591663360596
    3. '0' → logprob: -5.889659404754639
    4. ' ' → logprob: -11.88965892791748
    5. '3' → logprob: -12.63965892791748
    6. '```' → logprob: -12.70215892791748
    7. '   ' → logprob: -13.88965892791748
    8. '
' → logprob: -15.20215892791748
    9. '``' → logprob: -15.26465892791748
    10. '-' → logprob: -15.26465892791748

Token 219: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12838442623615265
    2. '2' → logprob: -2.5033843517303467
    3. '0' → logprob: -3.2533843517303467
    4. '3' → logprob: -11.253384590148926
    5. '```' → logprob: -11.440884590148926
    6. ' ' → logprob: -12.940884590148926
    7. '``' → logprob: -13.690884590148926
    8. '   ' → logprob: -14.378384590148926
    9. '`' → logprob: -14.503384590148926
    10. '4' → logprob: -14.815884590148926

Token 220: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ' )' → logprob: -12.750004768371582
    3. ')
' → logprob: -13.625004768371582
    4. ')d' → logprob: -15.500004768371582
    5. ')`' → logprob: -16.500003814697266
    6. '))' → logprob: -16.750003814697266
    7. ')#' → logprob: -16.875003814697266
    8. '),' → logprob: -17.125003814697266
    9. ')

' → logprob: -17.375003814697266
    10. ')}' → logprob: -18.000003814697266

Token 221: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.319370302458992e-06
    2. ' d' → logprob: -12.750005722045898
    3. 'dist' → logprob: -13.500005722045898
    4. '
' → logprob: -15.750005722045898
    5. 'print' → logprob: -16.1250057220459
    6. '   ' → logprob: -16.1250057220459
    7. '#' → logprob: -16.3750057220459
    8. ' ' → logprob: -16.5000057220459
    9. 'distance' → logprob: -16.5000057220459
    10. 'if' → logprob: -17.0000057220459

Token 222: '_s' (ID: 1278)
  Prédit: '_y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.08160501718521118
    2. '_' → logprob: -3.7066049575805664
    3. '_x' → logprob: -3.8316049575805664
    4. '_t' → logprob: -3.8316049575805664
    5. '_z' → logprob: -4.956604957580566
    6. '_b' → logprob: -6.331604957580566
    7. 't' → logprob: -7.456604957580566
    8. 'b' → logprob: -9.331604957580566
    9. '_=' → logprob: -9.456604957580566
    10. '[' → logprob: -9.581604957580566

Token 223: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759827494621277
    2. '=' → logprob: -0.8259827494621277
    3. 't' → logprob: -10.825983047485352
    4. '[' → logprob: -11.700983047485352
    5. 's' → logprob: -12.075983047485352
    6. '_' → logprob: -12.950983047485352
    7. ' ' → logprob: -13.075983047485352
    8. '_t' → logprob: -13.950983047485352
    9. ']' → logprob: -14.325983047485352
    10. '_s' → logprob: -14.325983047485352

Token 224: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.009756917133927345
    2. ' d' → logprob: -4.634757041931152
    3. '(d' → logprob: -15.259757041931152
    4. '[d' → logprob: -15.384757041931152
    5. '[' → logprob: -16.009756088256836
    6. ')d' → logprob: -16.509756088256836
    7. '	d' → logprob: -17.259756088256836
    8. ' ' → logprob: -17.322256088256836
    9. 'partial' → logprob: -17.384756088256836
    10. '   ' → logprob: -17.384756088256836

Token 225: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -2.069664333248511e-05
    2. 'ijk' → logprob: -11.000020980834961
    3. 'ij' → logprob: -13.625020980834961
    4. 'd' → logprob: -14.625020980834961
    5. 'jik' → logprob: -14.875020980834961
    6. 'y' → logprob: -15.125020980834961
    7. 'ijks' → logprob: -15.125020980834961
    8. '[' → logprob: -15.250020980834961
    9. '(d' → logprob: -15.625020980834961
    10. '```' → logprob: -15.875020980834961

Token 226: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -1.9361264946837764e-07
    2. 'graph' → logprob: -16.625
    3. '(' → logprob: -17.25
    4. '	graph' → logprob: -18.75
    5. '(game' → logprob: -18.875
    6. '(heap' → logprob: -19.0
    7. '(grammar' → logprob: -19.25
    8. ' (' → logprob: -19.375
    9. '(
' → logprob: -19.5
    10. '(Graph' → logprob: -19.75

Token 227: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009402852156199515
    2. '(graph' → logprob: -7.000940322875977
    3. 'graph' → logprob: -11.000940322875977
    4. ' ,' → logprob: -11.750940322875977
    5. ' graph' → logprob: -12.750940322875977
    6. ',
' → logprob: -14.000940322875977
    7. ')' → logprob: -15.500940322875977
    8. '),' → logprob: -16.500940322875977
    9. '=' → logprob: -16.625940322875977
    10. '	graph' → logprob: -17.000940322875977

Token 228: ' t' (ID: 260)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.014513094909489155
    2. ' graph' → logprob: -4.26451301574707
    3. 't' → logprob: -8.51451301574707
    4. '(graph' → logprob: -9.38951301574707
    5. 's' → logprob: -9.76451301574707
    6. '	graph' → logprob: -12.13951301574707
    7. ' t' → logprob: -13.26451301574707
    8. ' s' → logprob: -15.26451301574707
    9. ' ' → logprob: -15.38951301574707
    10. '.graph' → logprob: -15.88951301574707

Token 229: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8351892473874614e-05
    2. ' ,' → logprob: -10.000048637390137
    3. '0' → logprob: -13.500048637390137
    4. ')' → logprob: -14.875048637390137
    5. ' ' → logprob: -15.375048637390137
    6. 'import' → logprob: -15.375048637390137
    7. '1' → logprob: -15.750048637390137
    8. '<|end|>' → logprob: -15.750048637390137
    9. '2' → logprob: -16.25004768371582
    10. 's' → logprob: -16.50004768371582

Token 230: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010737768607214093
    2. ' ' → logprob: -6.876073837280273
    3. '0' → logprob: -10.126073837280273
    4. ')' → logprob: -15.063573837280273
    5. '   ' → logprob: -15.501073837280273
    6. '```' → logprob: -16.501073837280273
    7. '<|end|>' → logprob: -16.938573837280273
    8. '۱' → logprob: -17.001073837280273
    9. '[' → logprob: -17.188573837280273
    10. '  ' → logprob: -17.313573837280273

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.052377623040229e-05
    2. '0' → logprob: -9.625070571899414
    3. ' ' → logprob: -12.375070571899414
    4. '```' → logprob: -16.750070571899414
    5. '   ' → logprob: -17.812570571899414
    6. '' → logprob: -17.812570571899414
    7. ')' → logprob: -18.062570571899414
    8. '۱' → logprob: -18.125070571899414
    9. '01' → logprob: -18.750070571899414
    10. '１' → logprob: -19.000070571899414

Token 232: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.500001907348633
    3. ' )' → logprob: -15.625001907348633
    4. '))' → logprob: -16.250001907348633
    5. '()' → logprob: -16.750001907348633
    6. ')d' → logprob: -17.125001907348633
    7. ')`' → logprob: -17.625001907348633
    8. ').' → logprob: -18.625001907348633
    9. ')

' → logprob: -19.000001907348633
    10. '),' → logprob: -19.000001907348633

Token 233: 'min' (ID: 1493)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5533801913261414
    2. 'res' → logprob: -1.8033802509307861
    3. 'result' → logprob: -2.178380250930786
    4. 'answer' → logprob: -2.303380250930786
    5. 'answers' → logprob: -4.428380012512207
    6. 'dp' → logprob: -4.803380012512207
    7. 'cost' → logprob: -5.303380012512207
    8. 'prefix' → logprob: -5.553380012512207
    9. 'total' → logprob: -5.678380012512207
    10. 'results' → logprob: -5.678380012512207

Token 234: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.06924768537282944
    2. '_dist' → logprob: -3.4442477226257324
    3. '_time' → logprob: -4.444247722625732
    4. '_' → logprob: -4.944247722625732
    5. 'cost' → logprob: -5.069247722625732
    6. '_sum' → logprob: -6.319247722625732
    7. '_ans' → logprob: -6.819247722625732
    8. '_val' → logprob: -6.944247722625732
    9. '_distance' → logprob: -6.944247722625732
    10. '_total' → logprob: -7.194247722625732

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31337088346481323
    2. '=' → logprob: -1.313370943069458
    3. 's' → logprob: -10.063370704650879
    4. ',' → logprob: -10.563370704650879
    5. '=[]' → logprob: -11.313370704650879
    6. ' ' → logprob: -11.563370704650879
    7. '_' → logprob: -12.063370704650879
    8. '[' → logprob: -12.188370704650879
    9. ' =[' → logprob: -13.813370704650879
    10. 'import' → logprob: -13.938370704650879

Token 236: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.004822768736630678
    2. '[' → logprob: -5.629822731018066
    3. '0' → logprob: -8.004822731018066
    4. '10' → logprob: -8.129822731018066
    5. ' float' → logprob: -8.754822731018066
    6. 'd' → logprob: -8.754822731018066
    7. '[d' → logprob: -8.879822731018066
    8. '[min' → logprob: -10.004822731018066
    9. 'min' → logprob: -10.879822731018066
    10. '1' → logprob: -11.504822731018066

Token 237: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0011878492077812552
    2. ''s' → logprob: -7.251187801361084
    3. ''in' → logprob: -7.751187801361084
    4. ''' → logprob: -11.126188278198242
    5. '(' → logprob: -12.251188278198242
    6. '(in' → logprob: -12.501188278198242
    7. '('-' → logprob: -12.501188278198242
    8. ''user' → logprob: -13.001188278198242
    9. ''n' → logprob: -13.251188278198242
    10. ''y' → logprob: -13.376188278198242

Token 238: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -1.1472419600977446e-06
    2. '')' → logprob: -14.875000953674316
    3. ''' → logprob: -15.125000953674316
    4. ' inf' → logprob: -15.500000953674316
    5. '-inf' → logprob: -15.875000953674316
    6. '.inf' → logprob: -17.000001907348633
    7. '-' → logprob: -17.125001907348633
    8. 'in' → logprob: -17.375001907348633
    9. ')' → logprob: -17.750001907348633
    10. '∞' → logprob: -18.375001907348633

Token 239: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.044214796274900436
    2. ')
' → logprob: -3.1692147254943848
    3. ' )' → logprob: -7.044214725494385
    4. ',' → logprob: -8.919215202331543
    5. ' )
' → logprob: -8.919215202331543
    6. '')' → logprob: -10.669215202331543
    7. '-' → logprob: -11.044215202331543
    8. ')
' → logprob: -11.294215202331543
    9. ')

' → logprob: -12.669215202331543
    10. 'import' → logprob: -12.794215202331543

Token 240: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6472955942153931
    2. 'result' → logprob: -1.647295594215393
    3. 'ans' → logprob: -2.0222954750061035
    4. 'res' → logprob: -2.7722954750061035
    5. 'answer' → logprob: -2.8972954750061035
    6. 'cost' → logprob: -4.2722954750061035
    7. 'answers' → logprob: -5.1472954750061035
    8. 'results' → logprob: -5.1472954750061035
    9. 'min' → logprob: -6.0222954750061035
    10. 'best' → logprob: -6.3972954750061035

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1799238920211792
    2. '=' → logprob: -1.8049238920211792
    3. '_' → logprob: -9.179924011230469
    4. ',' → logprob: -9.929924011230469
    5. '_=' → logprob: -12.054924011230469
    6. '[' → logprob: -12.554924011230469
    7. '=[]' → logprob: -12.554924011230469
    8. 's' → logprob: -12.929924011230469
    9. '[]' → logprob: -13.679924011230469
    10. 'import' → logprob: -13.679924011230469

Token 242: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2938264310359955
    2. 'None' → logprob: -2.1688263416290283
    3. '0' → logprob: -2.6688263416290283
    4. '-' → logprob: -2.9188263416290283
    5. '[' → logprob: -4.793826580047607
    6. 'float' → logprob: -5.418826580047607
    7. 'n' → logprob: -6.418826580047607
    8. '[]
' → logprob: -6.668826580047607
    9. ' []' → logprob: -7.793826580047607
    10. '[n' → logprob: -8.41882610321045

Token 243: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002656870288774371
    2. 'total' → logprob: -7.252656936645508
    3. 'current' → logprob: -7.252656936645508
    4. 'acc' → logprob: -7.627656936645508
    5. ' for' → logprob: -8.627656936645508
    6. 'curr' → logprob: -8.627656936645508
    7. 'cost' → logprob: -9.502656936645508
    8. 'sum' → logprob: -9.502656936645508
    9. 'c' → logprob: -9.877656936645508
    10. 'prefix' → logprob: -10.127656936645508

Token 244: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05610453709959984
    2. 'u' → logprob: -3.5561044216156006
    3. 'v' → logprob: -4.18110466003418
    4. 'x' → logprob: -4.80610466003418
    5. 'node' → logprob: -6.43110466003418
    6. ' i' → logprob: -8.18110466003418
    7. 'city' → logprob: -9.05610466003418
    8. 'k' → logprob: -9.18110466003418
    9. 'time' → logprob: -9.43110466003418
    10. 'cost' → logprob: -10.05610466003418

Token 245: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3165751099586487
    2. 'in' → logprob: -1.316575050354004
    3. ',' → logprob: -5.816575050354004
    4. ' ' → logprob: -8.316575050354004
    5. 'range' → logprob: -10.191575050354004
    6. 'n' → logprob: -11.191575050354004
    7. ')' → logprob: -11.691575050354004
    8. '	in' → logprob: -11.816575050354004
    9. ' ,' → logprob: -12.066575050354004
    10. '```' → logprob: -13.316575050354004

Token 246: ' xrange' (ID: 92050)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019901362247765064
    2. 'x' → logprob: -6.62699031829834
    3. ' range' → logprob: -7.50199031829834
    4. ' xrange' → logprob: -9.12699031829834
    5. '	range' → logprob: -14.00199031829834
    6. '   ' → logprob: -14.75199031829834
    7. 're' → logprob: -15.00199031829834
    8. ' ' → logprob: -15.12699031829834
    9. '```' → logprob: -15.12699031829834
    10. '(range' → logprob: -15.12699031829834

Token 247: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3914496898651123
    2. '(' → logprob: -1.1414496898651123
    3. '(len' → logprob: -5.391449928283691
    4. 'n' → logprob: -12.641449928283691
    5. '((' → logprob: -13.016449928283691
    6. '(s' → logprob: -13.391449928283691
    7. '1' → logprob: -13.891449928283691
    8. '(min' → logprob: -14.016449928283691
    9. '(range' → logprob: -14.141449928283691
    10. ' (' → logprob: -14.141449928283691

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1623743623495102
    2. '+' → logprob: -2.037374258041382
    3. ' +' → logprob: -4.787374496459961
    4. '-' → logprob: -5.037374496459961
    5. ' ,' → logprob: -6.287374496459961
    6. '):' → logprob: -6.662374496459961
    7. ' -' → logprob: -7.162374496459961
    8. '):
' → logprob: -7.912374496459961
    9. '1' → logprob: -9.037374496459961
    10. ')' → logprob: -9.287374496459961

Token 249: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5963957905769348
    2. '0' → logprob: -0.8463957905769348
    3. ' ' → logprob: -4.596395969390869
    4. ' -' → logprob: -4.596395969390869
    5. '1' → logprob: -10.346395492553711
    6. '
' → logprob: -11.221395492553711
    7. 's' → logprob: -11.971395492553711
    8. '-i' → logprob: -12.471395492553711
    9. '   ' → logprob: -12.846395492553711
    10. '  ' → logprob: -12.971395492553711

Token 250: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.576827883720398
    2. '-' → logprob: -0.826827883720398
    3. ' -' → logprob: -7.5768280029296875
    4. ' ' → logprob: -7.9518280029296875
    5. '1' → logprob: -10.826828002929688
    6. '   ' → logprob: -13.576828002929688
    7. '
' → logprob: -14.201828002929688
    8. '  ' → logprob: -14.576828002929688
    9. 's' → logprob: -15.201828002929688
    10. '−' → logprob: -15.826828002929688

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08209547400474548
    2. '-' → logprob: -2.5820953845977783
    3. ' -' → logprob: -5.957095623016357
    4. '0' → logprob: -8.2070951461792
    5. ',-' → logprob: -8.7070951461792
    6. ' ,' → logprob: -8.8320951461792
    7. '   ' → logprob: -11.2070951461792
    8. '-,' → logprob: -11.5820951461792
    9. ' ' → logprob: -13.2070951461792
    10. '+' → logprob: -13.8320951461792

Token 252: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.008619893342256546
    2. ' -' → logprob: -4.758619785308838
    3. '   ' → logprob: -13.258620262145996
    4. ' ' → logprob: -13.758620262145996
    5. ')' → logprob: -14.133620262145996
    6. '  ' → logprob: -14.258620262145996
    7. ',-' → logprob: -14.883620262145996
    8. ',' → logprob: -15.508620262145996
    9. '	' → logprob: -15.633620262145996
    10. '```' → logprob: -15.883620262145996

Token 253: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014678741805255413
    2. '1' → logprob: -4.389678955078125
    3. ' -' → logprob: -6.139678955078125
    4. ')' → logprob: -12.889678955078125
    5. ' ' → logprob: -13.014678955078125
    6. '   ' → logprob: -13.014678955078125
    7. '−' → logprob: -13.514678955078125
    8. '```' → logprob: -13.639678955078125
    9. '  ' → logprob: -14.264678955078125
    10. '):
' → logprob: -15.014678955078125

Token 254: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5803337693214417
    2. '-' → logprob: -0.8303337693214417
    3. '):
' → logprob: -5.705333709716797
    4. ' -' → logprob: -6.955333709716797
    5. ')' → logprob: -10.205333709716797
    6. ',' → logprob: -10.580333709716797
    7. '):-' → logprob: -10.830333709716797
    8. ' ):' → logprob: -12.205333709716797
    9. '   ' → logprob: -12.330333709716797
    10. ',-' → logprob: -12.580333709716797

Token 255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004721087869256735
    2. ':' → logprob: -6.379721164703369
    3. ' ' → logprob: -6.754721164703369
    4. '    
' → logprob: -7.504721164703369
    5. '  ' → logprob: -7.629721164703369
    6. ',' → logprob: -9.254720687866211
    7. ' if' → logprob: -9.254720687866211
    8. '<|end|>' → logprob: -9.254720687866211
    9. '   
' → logprob: -9.504720687866211
    10. '  
' → logprob: -9.629720687866211

Token 256: ' min' (ID: 1349)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0531171560287476
    2. 'cost' → logprob: -1.3031171560287476
    3. ' cost' → logprob: -2.053117275238037
    4. 'min' (adapté à ' min') → logprob: -2.678117275238037
    5. ' min' → logprob: -3.303117275238037
    6. 'cur' → logprob: -3.803117275238037
    7. ' dist' → logprob: -3.928117275238037
    8. ' if' → logprob: -4.178117275238037
    9. 'd' → logprob: -4.178117275238037
    10. 'c' → logprob: -4.428117275238037

Token 257: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -1.1517960956552997e-05
    2. '_' → logprob: -11.875011444091797
    3. 'cost' → logprob: -12.500011444091797
    4. 'Cost' → logprob: -15.375011444091797
    5. '_min' → logprob: -16.000011444091797
    6. '=_' → logprob: -16.000011444091797
    7. 'if' → logprob: -17.000011444091797
    8. '_COST' → logprob: -17.125011444091797
    9. '_val' → logprob: -17.250011444091797
    10. '_dist' → logprob: -17.375011444091797

Token 258: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10026317834854126
    2. ' =' → logprob: -2.3502631187438965
    3. '=min' → logprob: -9.850263595581055
    4. '   ' → logprob: -12.975263595581055
    5. '```' → logprob: -14.850263595581055
    6. '=

' → logprob: -15.600263595581055
    7. 'min' → logprob: -15.725263595581055
    8. '=
' → logprob: -15.850263595581055
    9. ' ' → logprob: -16.600263595581055
    10. '=max' → logprob: -16.850263595581055

Token 259: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.011049824766814709
    2. ' min' → logprob: -4.511049747467041
    3. '   ' → logprob: -13.8860502243042
    4. 'max' → logprob: -14.3860502243042
    5. '	min' → logprob: -15.0110502243042
    6. ' ' → logprob: -15.6360502243042
    7. '(min' → logprob: -16.761049270629883
    8. '=min' → logprob: -17.011049270629883
    9. '  ' → logprob: -17.636049270629883
    10. '[min' → logprob: -18.261049270629883

Token 260: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.00021045419271104038
    2. '(' → logprob: -8.500210762023926
    3. '(d' → logprob: -12.375210762023926
    4. 'min' → logprob: -13.375210762023926
    5. '(m' → logprob: -15.125210762023926
    6. '(dist' → logprob: -15.375210762023926
    7. '((' → logprob: -16.25020980834961
    8. ' (' → logprob: -16.25020980834961
    9. '(max' → logprob: -16.37520980834961
    10. '(
' → logprob: -16.50020980834961

Token 261: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0004481885116547346
    2. '(min' → logprob: -8.000448226928711
    3. 'cost' → logprob: -9.500448226928711
    4. 'Cost' → logprob: -11.250448226928711
    5. '(' → logprob: -11.875448226928711
    6. '_' → logprob: -11.875448226928711
    7. '(_' → logprob: -13.000448226928711
    8. '(cost' → logprob: -13.375448226928711
    9. '_dist' → logprob: -14.000448226928711
    10. ')' → logprob: -14.000448226928711

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.522638169466518e-05
    2. ',d' → logprob: -11.375024795532227
    3. ' ,' → logprob: -11.375024795532227
    4. ',
' → logprob: -13.750024795532227
    5. 'd' → logprob: -14.250024795532227
    6. ',

' → logprob: -16.500024795532227
    7. ')' → logprob: -16.750024795532227
    8. '),' → logprob: -17.000024795532227
    9. ',min' → logprob: -17.125024795532227
    10. '   ' → logprob: -17.375024795532227

Token 263: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.002254218328744173
    2. ' d' → logprob: -6.127254009246826
    3. '   ' → logprob: -10.127254486083984
    4. ')' → logprob: -12.002254486083984
    5. 'max' → logprob: -12.252254486083984
    6. ' ' → logprob: -12.252254486083984
    7. ')d' → logprob: -13.002254486083984
    8. '  ' → logprob: -13.252254486083984
    9. 'min' → logprob: -13.252254486083984
    10. '	d' → logprob: -13.502254486083984

Token 264: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0035058727953583
    2. '_s' → logprob: -5.878505706787109
    3. '_i' → logprob: -8.12850570678711
    4. 'y' → logprob: -8.12850570678711
    5. 's' → logprob: -9.50350570678711
    6. 'i' → logprob: -11.12850570678711
    7. '[i' → logprob: -11.12850570678711
    8. '_u' → logprob: -13.62850570678711
    9. '_x' → logprob: -14.12850570678711
    10. '_d' → logprob: -14.37850570678711

Token 265: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0445127372804563e-05
    2. '[' → logprob: -12.37501049041748
    3. ' [' → logprob: -12.87501049041748
    4. '
' → logprob: -13.87501049041748
    5. 'i' → logprob: -14.12501049041748
    6. '[
' → logprob: -14.50001049041748
    7. '[s' → logprob: -14.75001049041748
    8. ')' → logprob: -15.12501049041748
    9. '```' → logprob: -15.50001049041748
    10. ' ' → logprob: -16.000009536743164

Token 266: ']' (ID: 60)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5569327473640442
    2. ']' → logprob: -0.9319327473640442
    3. ']+' → logprob: -4.3069329261779785
    4. '])
' → logprob: -4.4319329261779785
    5. '],' → logprob: -4.9319329261779785
    6. ')' → logprob: -8.55693244934082
    7. '-' → logprob: -8.93193244934082
    8. ' ])' → logprob: -9.05693244934082
    9. ' ]' → logprob: -9.80693244934082
    10. '])

' → logprob: -10.30693244934082

Token 267: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.582873523235321
    2. ' +' → logprob: -1.3328735828399658
    3. '+' → logprob: -1.8328735828399658
    4. ',' → logprob: -4.957873344421387
    5. ')
' → logprob: -5.207873344421387
    6. '+d' → logprob: -5.332873344421387
    7. ' )' → logprob: -8.832873344421387
    8. '   ' → logprob: -8.832873344421387
    9. '+)' → logprob: -9.707873344421387
    10. '+
' → logprob: -9.707873344421387

Token 268: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.011073173955082893
    2. ' d' → logprob: -4.511073112487793
    3. '   ' → logprob: -11.261073112487793
    4. ' ' → logprob: -11.511073112487793
    5. '  ' → logprob: -13.261073112487793
    6. '
' → logprob: -15.511073112487793
    7. '    ' → logprob: -16.01107406616211
    8. '	d' → logprob: -16.38607406616211
    9. '     ' → logprob: -16.51107406616211
    10. '(d' → logprob: -16.63607406616211

Token 269: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0003374886582605541
    2. 's' → logprob: -8.000337600708008
    3. '[i' → logprob: -14.375337600708008
    4. '_' → logprob: -14.625337600708008
    5. '_i' → logprob: -15.500337600708008
    6. '```' → logprob: -15.625337600708008
    7. ')' → logprob: -16.250337600708008
    8. '_t' → logprob: -16.875337600708008
    9. ' s' → logprob: -16.937837600708008
    10. '   ' → logprob: -17.250337600708008

Token 270: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.25
    3. ' [' → logprob: -17.75
    4. 'i' → logprob: -19.125
    5. '[I' → logprob: -19.375
    6. '[
' → logprob: -19.5
    7. '```' → logprob: -19.875
    8. ')' → logprob: -20.5
    9. '(i' → logprob: -21.375
    10. '
' → logprob: -21.625

Token 271: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20151254534721375
    2. ')' → logprob: -1.7015125751495361
    3. ' )
' → logprob: -9.576512336730957
    4. ')
' → logprob: -11.326512336730957
    5. ' )' → logprob: -11.826512336730957
    6. ')

' → logprob: -12.826512336730957
    7. '])
' → logprob: -13.326512336730957
    8. '))
' → logprob: -13.576512336730957
    9. '   ' → logprob: -13.951512336730957
    10. '])' → logprob: -14.076512336730957

Token 272: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.354758620262146
    2. ' ans' → logprob: -1.354758620262146
    3. 'ans' → logprob: -3.2297587394714355
    4. '	ans' → logprob: -6.9797587394714355
    5. '(ans' → logprob: -8.979758262634277
    6. '
' → logprob: -11.729758262634277
    7. '_ans' → logprob: -12.229758262634277
    8. '```' → logprob: -12.729758262634277
    9. ' ' → logprob: -13.354758262634277
    10. 'answers' → logprob: -13.729758262634277

Token 273: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -2.45848218582978e-06
    2. ' ans' → logprob: -13.25000286102295
    3. '   ' → logprob: -14.62500286102295
    4. '	ans' → logprob: -16.250001907348633
    5. 'print' → logprob: -16.750001907348633
    6. '(ans' → logprob: -17.250001907348633
    7. 'answer' → logprob: -18.250001907348633
    8. '_ans' → logprob: -19.000001907348633
    9. '
' → logprob: -19.375001907348633
    10. '    
' → logprob: -20.375001907348633

Token 274: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011021106038242579
    2. '.insert' → logprob: -7.251101970672607
    3. '.' → logprob: -8.126102447509766
    4. '.ap' → logprob: -9.376102447509766
    5. '.app' → logprob: -11.876102447509766
    6. '.a' → logprob: -13.376102447509766
    7. ' .' → logprob: -14.751102447509766
    8. '`.' → logprob: -15.001102447509766
    9. '   ' → logprob: -15.126102447509766
    10. '.py' → logprob: -15.376102447509766

Token 275: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0001085497424355708
    2. '(str' → logprob: -9.62510871887207
    3. 'min' → logprob: -10.12510871887207
    4. '(' → logprob: -13.12510871887207
    5. '(max' → logprob: -15.50010871887207
    6. ' min' → logprob: -16.25010871887207
    7. 'str' → logprob: -17.75010871887207
    8. '((' → logprob: -17.87510871887207
    9. '(m' → logprob: -18.62510871887207
    10. '[min' → logprob: -18.87510871887207

Token 276: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -4.320199877838604e-07
    2. 'cost' → logprob: -16.25
    3. '(cost' → logprob: -16.625
    4. '_COST' → logprob: -16.625
    5. '_' → logprob: -17.0
    6. 'Cost' → logprob: -17.125
    7. '(_' → logprob: -17.5
    8. ' cost' → logprob: -17.75
    9. '-cost' → logprob: -18.25
    10. '(i' → logprob: -19.125

Token 277: ')

' (ID: 1029)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4872395396232605
    2. ')' → logprob: -0.9872395396232605
    3. ')
' → logprob: -4.612239360809326
    4. '\n' → logprob: -6.487239360809326
    5. 'print' → logprob: -6.987239360809326
    6. '  
' → logprob: -8.987239837646484
    7. '    
' → logprob: -9.112239837646484
    8. '[::-' → logprob: -9.237239837646484
    9. '

' → logprob: -9.362239837646484
    10. ')

' → logprob: -9.612239837646484

Token 278: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.004262057598680258
    2. 'print' → logprob: -6.0042619705200195
    3. 'ans' → logprob: -6.5042619705200195
    4. ' for' → logprob: -8.75426197052002
    5. '
' → logprob: -9.37926197052002
    6. '\n' → logprob: -10.75426197052002
    7. 'while' → logprob: -11.62926197052002
    8. '\' → logprob: -12.00426197052002
    9. '```' → logprob: -12.75426197052002
    10. '(ans' → logprob: -13.00426197052002

Token 279: ' v' (ID: 323)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.33723220229148865
    2. 'cost' → logprob: -2.2122321128845215
    3. 'i' → logprob: -2.3372321128845215
    4. 'c' → logprob: -3.7122321128845215
    5. '_' → logprob: -3.8372321128845215
    6. 'a' → logprob: -4.9622321128845215
    7. 'v' → logprob: -5.2122321128845215
    8. 'val' → logprob: -5.3372321128845215
    9. '_cost' → logprob: -5.4622321128845215
    10. ' cost' → logprob: -5.7122321128845215

Token 280: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.024051612243056297
    2. 'in' → logprob: -3.8990516662597656
    3. 'al' → logprob: -6.149051666259766
    4. 'alue' → logprob: -6.649051666259766
    5. 'i' → logprob: -10.524051666259766
    6. 'alu' → logprob: -11.024051666259766
    7. ' ' → logprob: -12.024051666259766
    8. 'e' → logprob: -12.524051666259766
    9. 'l' → logprob: -12.649051666259766
    10. '	in' → logprob: -13.149051666259766

Token 281: ' reversed' (ID: 57184)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.28222137689590454
    2. 're' → logprob: -1.4072213172912598
    3. ' reversed' → logprob: -7.40722131729126
    4. ' ans' → logprob: -8.032221794128418
    5. 'range' → logprob: -10.532221794128418
    6. 'x' → logprob: -10.532221794128418
    7. 'reverse' → logprob: -11.157221794128418
    8. 'answer' → logprob: -11.282221794128418
    9. '[::-' → logprob: -11.532221794128418
    10. '	ans' → logprob: -11.657221794128418

Token 282: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.0564331205387134e-05
    2. '(range' → logprob: -11.50001049041748
    3. 'ans' → logprob: -15.62501049041748
    4. '(' → logprob: -16.000011444091797
    5. '(answer' → logprob: -17.250011444091797
    6. '(min' → logprob: -17.500011444091797
    7. 'range' → logprob: -18.750011444091797
    8. '(
' → logprob: -19.125011444091797
    9. '(an' → logprob: -19.500011444091797
    10. '(arr' → logprob: -19.625011444091797

Token 283: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028967633843421936
    2. '):
' → logprob: -6.002896785736084
    3. ')' → logprob: -8.002896308898926
    4. '():' → logprob: -10.002896308898926
    5. ':' → logprob: -11.127896308898926
    6. '(' → logprob: -11.627896308898926
    7. '()' → logprob: -11.627896308898926
    8. ' ):' → logprob: -13.127896308898926
    9. '):
' → logprob: -13.127896308898926
    10. '():
' → logprob: -13.627896308898926

Token 284: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7255533337593079
    2. 'print' → logprob: -0.9755533337593079
    3. ' print' → logprob: -1.975553274154663
    4. '```' → logprob: -8.975553512573242
    5. '	print' → logprob: -9.100553512573242
    6. '    
' → logprob: -11.600553512573242
    7. '``' → logprob: -11.850553512573242
    8. '`' → logprob: -11.975553512573242
    9. '>' → logprob: -12.600553512573242
    10. ' 
' → logprob: -13.225553512573242

Token 285: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10025983303785324
    2. ' print' → logprob: -2.350259780883789
    3. '   ' → logprob: -9.850259780883789
    4. '	print' → logprob: -15.100259780883789
    5. '```' → logprob: -15.975259780883789
    6. 'pr' → logprob: -16.97525978088379
    7. 'printf' → logprob: -18.22525978088379
    8. '.print' → logprob: -18.72525978088379
    9. ' prin' → logprob: -18.72525978088379
    10. '    ' → logprob: -18.85025978088379

Token 286: ' ' (ID: 220)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.2018422782421112
    2. 'v' → logprob: -1.8268423080444336
    3. ' v' → logprob: -4.451842308044434
    4. '(' → logprob: -4.951842308044434
    5. '(int' → logprob: -6.076842308044434
    6. 'int' → logprob: -7.701842308044434
    7. '10' → logprob: -8.451842308044434
    8. ' int' → logprob: -10.201842308044434
    9. ' (' → logprob: -10.576842308044434
    10. '100' → logprob: -10.576842308044434

Token 287: '10' (ID: 702)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.19106309115886688
    2. '10' → logprob: -1.8160630464553833
    3. '100' → logprob: -5.316062927246094
    4. 'int' → logprob: -5.816062927246094
    5. '(v' → logprob: -5.941062927246094
    6. '(' → logprob: -7.566062927246094
    7. 'max' → logprob: -9.566062927246094
    8. '(int' → logprob: -9.941062927246094
    9. '(max' → logprob: -10.566062927246094
    10. ' v' → logprob: -10.941062927246094

Token 288: '**' (ID: 410)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.7844811081886292
    2. '14' → logprob: -0.9094811081886292
    3. '13' → logprob: -3.1594810485839844
    4. '**' → logprob: -3.4094810485839844
    5. '15' → logprob: -3.4094810485839844
    6. '000' → logprob: -4.034481048583984
    7. '9' → logprob: -4.409481048583984
    8. '18' → logprob: -6.659481048583984
    9. '10' → logprob: -8.034481048583984
    10. '11' → logprob: -8.034481048583984

Token 289: '15' (ID: 1055)
  Prédit: '15'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -0.00015383612480945885
    2. '9' → logprob: -8.875153541564941
    3. '**' → logprob: -12.375153541564941
    4. '1' → logprob: -12.625153541564941
    5. '```' → logprob: -13.375153541564941
    6. '\
' → logprob: -13.625153541564941
    7. '5' → logprob: -14.375153541564941
    8. '16' → logprob: -14.750153541564941
    9. '10' → logprob: -15.000153541564941
    10. '
' → logprob: -15.250153541564941

Token 290: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.313375324010849
    2. ' -' → logprob: -1.3133753538131714
    3. '+' → logprob: -9.563375473022461
    4. '-
' → logprob: -10.563375473022461
    5. '-v' → logprob: -12.438375473022461
    6. ' ' → logprob: -12.938375473022461
    7. ' +' → logprob: -13.313375473022461
    8. ' -
' → logprob: -13.313375473022461
    9. '
' → logprob: -13.563375473022461
    10. '+-' → logprob: -13.688375473022461

Token 291: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.15310683415737e-05
    2. ' v' → logprob: -10.750021934509277
    3. '	v' → logprob: -22.87502098083496
    4. '_v' → logprob: -23.87502098083496
    5. '(v' → logprob: -23.87502098083496
    6. '10' → logprob: -24.62502098083496
    7. ' ' → logprob: -25.37502098083496
    8. '   ' → logprob: -25.37502098083496
    9. '*v' → logprob: -25.62502098083496
    10. '$v' → logprob: -25.75002098083496


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 289
Tokens correctement prédits (1ère position, stricte): 148
Tokens correctement prédits (1ère position, avec adaptation): 154
Tokens correctement prédits (top 10): 259
Précision stricte (1ère position): 51.21%
Précision adaptée (1ère position): 53.29%
Précision (top 10): 89.62%
================================================================================
