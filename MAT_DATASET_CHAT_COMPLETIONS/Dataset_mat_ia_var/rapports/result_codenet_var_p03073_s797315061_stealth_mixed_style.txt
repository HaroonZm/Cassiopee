================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def upd(i, val):
    return val[:i] + ('1' if val[i-1]=='0' else '0') + val[i+1:]

from functools import reduce

seq = input()
cnt = [0]
i = 1
while i < len(seq):
    if seq[i] == seq[i-1]:
        cnt[0] = cnt[0] + 1
        seq = upd(i, seq)
    i += 1

print(reduce(lambda x, y: x + y, cnt))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' upd' (ID: 145403)
  → Token d'amorce (pas de prédiction)

Token 2: '(i' (ID: 3649)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.38622066378593445
    2. 'ate' → logprob: -1.2612206935882568
    3. '_' → logprob: -4.761220455169678
    4. ')' → logprob: -4.761220455169678
    5. '):' → logprob: -4.886220455169678
    6. 'date' → logprob: -5.136220455169678
    7. 'd' → logprob: -6.636220455169678
    8. 'at' → logprob: -6.886220455169678
    9. ',' → logprob: -7.011220455169678
    10. 'e' → logprob: -7.261220455169678

Token 4: ' val' (ID: 1459)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.5743687152862549
    2. ' x' → logprob: -1.5743687152862549
    3. ' val' → logprob: -1.9493687152862549
    4. ' n' → logprob: -2.199368715286255
    5. 'n' → logprob: -2.824368715286255
    6. ' v' → logprob: -2.949368715286255
    7. 'val' → logprob: -3.074368715286255
    8. 'v' → logprob: -3.199368715286255
    9. 'value' → logprob: -4.199368476867676
    10. ' k' → logprob: -4.449368476867676

Token 5: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.09499126672744751
    2. ')' → logprob: -2.4699912071228027
    3. ',' → logprob: -5.219991207122803
    4. '):
' → logprob: -8.719991683959961
    5. '```' → logprob: -8.969991683959961
    6. 's' → logprob: -9.594991683959961
    7. ')：' → logprob: -10.094991683959961
    8. ' ):' → logprob: -10.594991683959961
    9. '**' → logprob: -10.969991683959961
    10. ')=' → logprob: -10.969991683959961

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12353917956352234
    2. ':' → logprob: -3.1235392093658447
    3. '```' → logprob: -3.2485392093658447
    4. '    ' → logprob: -4.373538970947266
    5. ' ' → logprob: -5.373538970947266
    6. '\' → logprob: -5.748538970947266
    7. ' :' → logprob: -6.498538970947266
    8. '       ' → logprob: -6.623538970947266
    9. '    
' → logprob: -6.748538970947266
    10. ''' → logprob: -6.873538970947266

Token 7: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13422077894210815
    2. ' ' → logprob: -3.134220838546753
    3. 'tree' → logprob: -3.634220838546753
    4. ' tree' → logprob: -4.259220600128174
    5. '    ' → logprob: -4.634220600128174
    6. 't' → logprob: -5.134220600128174
    7. 'a' → logprob: -5.884220600128174
    8. 'u' → logprob: -6.009220600128174
    9. '  ' → logprob: -6.134220600128174
    10. 'd' → logprob: -6.259220600128174

Token 8: ' val' (ID: 1459)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6664436459541321
    2. ' i' → logprob: -0.7914436459541321
    3. 'i' → logprob: -4.041443824768066
    4. ' val' → logprob: -5.041443824768066
    5. '  ' → logprob: -6.541443824768066
    6. 'val' → logprob: -6.666443824768066
    7. ' None' → logprob: -7.166443824768066
    8. 'upd' → logprob: -7.166443824768066
    9. ' upd' → logprob: -7.666443824768066
    10. ' (' → logprob: -7.666443824768066

Token 9: '[:' (ID: 7808)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7235654592514038
    2. '<|end|>' → logprob: -1.2235654592514038
    3. '+' → logprob: -2.7235655784606934
    4. '(' → logprob: -2.7235655784606934
    5. '*' → logprob: -3.2235655784606934
    6. '_' → logprob: -4.223565578460693
    7. ' ' → logprob: -4.973565578460693
    8. ',' → logprob: -5.348565578460693
    9. '\n' → logprob: -5.348565578460693
    10. '
' → logprob: -5.348565578460693

Token 10: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.2603901015827432e-05
    2. ' i' → logprob: -11.625022888183594
    3. '1' → logprob: -12.000022888183594
    4. ']' → logprob: -12.875022888183594
    5. ')' → logprob: -13.125022888183594
    6. ':i' → logprob: -14.375022888183594
    7. ':' → logprob: -14.750022888183594
    8. ' ' → logprob: -15.125022888183594
    9. '2' → logprob: -15.500022888183594
    10. '])' → logprob: -15.625022888183594

Token 11: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017390783177688718
    2. '+' → logprob: -6.751739025115967
    3. ']+' → logprob: -7.626739025115967
    4. ' ]' → logprob: -9.626739501953125
    5. '])' → logprob: -12.251739501953125
    6. ')' → logprob: -12.626739501953125
    7. '-' → logprob: -12.751739501953125
    8. 's' → logprob: -14.001739501953125
    9. ' +' → logprob: -14.001739501953125
    10. '+]' → logprob: -14.001739501953125

Token 12: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6308318972587585
    2. ']' → logprob: -0.8808318972587585
    3. '_' → logprob: -4.630831718444824
    4. '[' → logprob: -4.755831718444824
    5. '<|end|>' → logprob: -4.880831718444824
    6. ')' → logprob: -5.130831718444824
    7. '```' → logprob: -5.380831718444824
    8. ' +' → logprob: -5.505831718444824
    9. '[:' → logprob: -5.755831718444824
    10. '[:]' → logprob: -5.880831718444824

Token 13: ' ('' (ID: 9906)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0067934091202914715
    2. ' val' → logprob: -5.00679349899292
    3. ''' → logprob: -10.506793022155762
    4. '	val' → logprob: -11.256793022155762
    5. '   ' → logprob: -11.506793022155762
    6. '"' → logprob: -11.881793022155762
    7. '_val' → logprob: -12.256793022155762
    8. ' ' → logprob: -13.006793022155762
    9. '[val' → logprob: -13.006793022155762
    10. '  ' → logprob: -13.256793022155762

Token 14: '1' (ID: 16)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.2527087926864624
    2. ''' → logprob: -2.877708911895752
    3. ')' → logprob: -3.252708911895752
    4. '')' → logprob: -4.002708911895752
    5. '1' → logprob: -4.127708911895752
    6. 'a' → logprob: -4.502708911895752
    7. 'x' → logprob: -4.502708911895752
    8. '0' → logprob: -4.752708911895752
    9. '*' → logprob: -4.877708911895752
    10. ' ')' → logprob: -5.002708911895752

Token 15: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9517375230789185
    2. '')' → logprob: -0.9517375230789185
    3. '0' → logprob: -1.8267375230789185
    4. '*' → logprob: -4.076737403869629
    5. ''*' → logprob: -4.076737403869629
    6. ')' → logprob: -4.326737403869629
    7. '1' → logprob: -4.826737403869629
    8. 'val' → logprob: -5.951737403869629
    9. '',' → logprob: -6.451737403869629
    10. ',' → logprob: -6.576737403869629

Token 16: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024888835847377777
    2. ',' → logprob: -4.77488899230957
    3. '+' → logprob: -4.77488899230957
    4. ',)' → logprob: -6.27488899230957
    5. '[i' → logprob: -6.89988899230957
    6. '')' → logprob: -7.39988899230957
    7. ')+' → logprob: -7.52488899230957
    8. ',val' → logprob: -7.52488899230957
    9. ' +' → logprob: -7.64988899230957
    10. '<|end|>' → logprob: -8.39988899230957

Token 17: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.6326868534088135
    2. 'val' → logprob: -0.7576868534088135
    3. ' not' → logprob: -10.632686614990234
    4. '(val' → logprob: -11.257686614990234
    5. ' ' → logprob: -11.507686614990234
    6. '	val' → logprob: -11.632686614990234
    7. ' i' → logprob: -12.132686614990234
    8. '[val' → logprob: -12.132686614990234
    9. 'i' → logprob: -12.632686614990234
    10. 'not' → logprob: -12.757686614990234

Token 18: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0016323324525728822
    2. '[' → logprob: -6.626632213592529
    3. '>' → logprob: -9.501632690429688
    4. ' [' → logprob: -9.751632690429688
    5. '==' → logprob: -9.876632690429688
    6. ' ' → logprob: -11.001632690429688
    7. '[int' → logprob: -11.001632690429688
    8. ' ==' → logprob: -11.751632690429688
    9. '[id' → logprob: -11.876632690429688
    10. 'i' → logprob: -11.876632690429688

Token 19: '-' (ID: 12)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07296983152627945
    2. ']==' → logprob: -2.822969913482666
    3. '==' → logprob: -4.572969913482666
    4. 'else' → logprob: -8.947969436645508
    5. ' ]' → logprob: -9.197969436645508
    6. ' else' → logprob: -9.322969436645508
    7. '=' → logprob: -9.572969436645508
    8. ']=' → logprob: -10.072969436645508
    9. ']=='' → logprob: -10.197969436645508
    10. ' ==' → logprob: -10.322969436645508

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012880703434348106
    2. ' ' → logprob: -9.625128746032715
    3. '0' → logprob: -10.125128746032715
    4. ']' → logprob: -11.250128746032715
    5. 'i' → logprob: -12.500128746032715
    6. '-' → logprob: -13.625128746032715
    7. '>' → logprob: -13.875128746032715
    8. '2' → logprob: -13.875128746032715
    9. ']==' → logprob: -15.000128746032715
    10. ''s' → logprob: -15.000128746032715

Token 21: ']=='' (ID: 71177)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2713416814804077
    2. ']==' → logprob: -1.7713416814804077
    3. ' else' → logprob: -3.6463418006896973
    4. '==' → logprob: -3.6463418006896973
    5. ']=='' → logprob: -5.021341800689697
    6. 'else' → logprob: -5.396341800689697
    7. ' ]' → logprob: -6.396341800689697
    8. '-' → logprob: -7.771341800689697
    9. ' ==' → logprob: -7.771341800689697
    10. ':' → logprob: -7.896341800689697

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.055203162133693695
    2. '1' → logprob: -2.9302031993865967
    3. ' '' → logprob: -8.430203437805176
    4. '-'' → logprob: -11.055203437805176
    5. ' ' → logprob: -11.555203437805176
    6. 'a' → logprob: -11.555203437805176
    7. ''' → logprob: -12.055203437805176
    8. '='' → logprob: -12.180203437805176
    9. '-' → logprob: -12.305203437805176
    10. '9' → logprob: -12.367703437805176

Token 23: ''' (ID: 6)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.13058269023895264
    2. 'else' → logprob: -2.130582809448242
    3. ''' → logprob: -5.880582809448242
    4. '1' → logprob: -7.755582809448242
    5. '0' → logprob: -8.505582809448242
    6. ' ' → logprob: -9.880582809448242
    7. ' and' → logprob: -10.005582809448242
    8. '-' → logprob: -10.630582809448242
    9. 'and' → logprob: -11.005582809448242
    10. '')' → logprob: -11.255582809448242

Token 24: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.1606423556804657
    2. 'else' → logprob: -1.910642385482788
    3. '==' → logprob: -8.535642623901367
    4. '-' → logprob: -9.785642623901367
    5. ' ' → logprob: -9.910642623901367
    6. ' and' → logprob: -10.785642623901367
    7. '	else' → logprob: -10.910642623901367
    8. 'and' → logprob: -11.160642623901367
    9. '+' → logprob: -11.535642623901367
    10. ')' → logprob: -11.723142623901367

Token 25: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06202392280101776
    2. ' '' → logprob: -2.812023878097534
    3. '0' → logprob: -10.687024116516113
    4. ' ' → logprob: -11.062024116516113
    5. ' ' → logprob: -12.312024116516113
    6. '"' → logprob: -12.687024116516113
    7. ')' → logprob: -12.812024116516113
    8. '   ' → logprob: -13.062024116516113
    9. '`' → logprob: -13.562024116516113
    10. '1' → logprob: -14.437024116516113

Token 26: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.049139320850372314
    2. '0' → logprob: -3.0491392612457275
    3. ' '' → logprob: -7.799139499664307
    4. '1' → logprob: -9.174139022827148
    5. ' ' → logprob: -11.174139022827148
    6. '')' → logprob: -12.049139022827148
    7. ')' → logprob: -12.299139022827148
    8. '"' → logprob: -12.299139022827148
    9. '   ' → logprob: -12.924139022827148
    10. '('' → logprob: -13.424139022827148

Token 27: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6744921803474426
    2. '')' → logprob: -1.4244921207427979
    3. ']' → logprob: -1.9244921207427979
    4. '[i' → logprob: -2.674492120742798
    5. '])' → logprob: -3.549492120742798
    6. '']' → logprob: -6.549492359161377
    7. ''])' → logprob: -6.924492359161377
    8. ')])' → logprob: -7.049492359161377
    9. '`)' → logprob: -7.424492359161377
    10. 'i' → logprob: -7.424492359161377

Token 28: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0013267839094623923
    2. ' val' → logprob: -6.626326560974121
    3. '	val' → logprob: -15.501326560974121
    4. '   ' → logprob: -15.876326560974121
    5. '(val' → logprob: -16.126327514648438
    6. '[val' → logprob: -16.251327514648438
    7. ' ' → logprob: -16.501327514648438
    8. 'v' → logprob: -17.001327514648438
    9. '_val' → logprob: -17.001327514648438
    10. '.val' → logprob: -17.126327514648438

Token 30: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1004134863615036
    2. '[:' → logprob: -2.7254135608673096
    3. '[' → logprob: -3.6004135608673096
    4. '[:]' → logprob: -5.9754133224487305
    5. ':' → logprob: -9.47541332244873
    6. ':i' → logprob: -10.60041332244873
    7. '[:-' → logprob: -11.72541332244873
    8. 'i' → logprob: -11.85041332244873
    9. ' ' → logprob: -11.97541332244873
    10. '[user' → logprob: -12.35041332244873

Token 31: '+' (ID: 10)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.6212888956069946
    2. '+' → logprob: -1.2462888956069946
    3. ':' → logprob: -1.7462888956069946
    4. ']' → logprob: -7.996288776397705
    5. '+:' → logprob: -9.371289253234863
    6. ':i' → logprob: -9.621289253234863
    7. ':],' → logprob: -9.871289253234863
    8. ' +' → logprob: -10.121289253234863
    9. ' :]' → logprob: -10.371289253234863
    10. '+i' → logprob: -10.621289253234863

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '0' → logprob: -13.50000286102295
    3. '```' → logprob: -14.50000286102295
    4. ' ' → logprob: -14.75000286102295
    5. 'i' → logprob: -15.62500286102295
    6. '2' → logprob: -15.62500286102295
    7. '...' → logprob: -19.125001907348633
    8. '<|end|>' → logprob: -19.750001907348633
    9. '+' → logprob: -19.875001907348633
    10. '3' → logprob: -20.000001907348633

Token 33: ':]

' (ID: 170549)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14153733849525452
    2. ':]' → logprob: -2.1415374279022217
    3. ')' → logprob: -4.391537189483643
    4. '])' → logprob: -7.016537189483643
    5. ':' → logprob: -7.641537189483643
    6. ')]' → logprob: -8.0165376663208
    7. ':)' → logprob: -8.6415376663208
    8. '1' → logprob: -9.6415376663208
    9. ' :]' → logprob: -9.7665376663208
    10. '']' → logprob: -10.6415376663208

Token 34: 'from' (ID: 2845)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25929969549179077
    2. '<|end|>' → logprob: -1.7592997550964355
    3. '(' → logprob: -4.0092997550964355
    4. '
' → logprob: -4.6342997550964355
    5. '```' → logprob: -5.2592997550964355
    6. '\n' → logprob: -5.2592997550964355
    7. ' ' → logprob: -5.3842997550964355
    8. 'def' → logprob: -5.7592997550964355
    9. '\' → logprob: -5.7592997550964355
    10. '#' → logprob: -6.8842997550964355

Token 35: ' functools' (ID: 142636)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6481757164001465
    2. ' itertools' → logprob: -1.5231757164001465
    3. ' random' → logprob: -1.8981757164001465
    4. ' math' → logprob: -3.3981757164001465
    5. 'collections' → logprob: -3.5231757164001465
    6. ' ' → logprob: -4.5231757164001465
    7. ' copy' → logprob: -5.1481757164001465
    8. ' functools' → logprob: -5.1481757164001465
    9. '_' → logprob: -5.2731757164001465
    10. 'random' → logprob: -5.5231757164001465

Token 36: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.31451186537742615
    2. 'import' → logprob: -1.3145118951797485
    3. '_import' → logprob: -6.814511775970459
    4. '_' → logprob: -9.939512252807617
    5. '	import' → logprob: -10.064512252807617
    6. ' l' → logprob: -10.814512252807617
    7. '`' → logprob: -12.064512252807617
    8. 'from' → logprob: -12.314512252807617
    9. 'l' → logprob: -12.564512252807617
    10. ' ' → logprob: -13.314512252807617

Token 37: ' reduce' (ID: 10389)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.08763740956783295
    2. ' l' → logprob: -2.587637424468994
    3. 'reduce' → logprob: -5.337637424468994
    4. 'cache' → logprob: -5.712637424468994
    5. 'wrap' → logprob: -8.337636947631836
    6. 'cached' → logprob: -8.462636947631836
    7. 'partial' → logprob: -9.212636947631836
    8. ' reduce' → logprob: -11.337636947631836
    9. ' cache' → logprob: -11.587636947631836
    10. 'cmp' → logprob: -11.837636947631836

Token 38: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09275471419095993
    2. 'def' → logprob: -2.717754602432251
    3. '
' → logprob: -5.34275484085083
    4. 'val' → logprob: -5.59275484085083
    5. '

' → logprob: -6.34275484085083
    6. ' 
' → logprob: -6.34275484085083
    7. '\n' → logprob: -6.84275484085083
    8. ',' → logprob: -6.84275484085083
    9. ',
' → logprob: -6.96775484085083
    10. '' → logprob: -7.09275484085083

Token 39: 'seq' (ID: 27794)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5587170124053955
    2. 'result' → logprob: -1.5587170124053955
    3. 'res' → logprob: -1.6837170124053955
    4. 'val' → logprob: -1.9337170124053955
    5. 'print' → logprob: -2.9337170124053955
    6. 's' → logprob: -3.0587170124053955
    7. 'vals' → logprob: -3.3087170124053955
    8. 'lst' → logprob: -4.058716773986816
    9. 'reduce' → logprob: -4.308716773986816
    10. 'dp' → logprob: -4.558716773986816

Token 40: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22886152565479279
    2. 'u' → logprob: -2.1038615703582764
    3. 'ence' → logprob: -3.6038615703582764
    4. '_val' → logprob: -3.8538615703582764
    5. '(' → logprob: -4.603861331939697
    6. '=' → logprob: -4.853861331939697
    7. ' =' → logprob: -5.353861331939697
    8. 'ential' → logprob: -6.228861331939697
    9. 's' → logprob: -6.603861331939697
    10. '_len' → logprob: -6.978861331939697

Token 41: ' input' (ID: 3422)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.6733786463737488
    2. ' "' → logprob: -1.7983787059783936
    3. ' [' → logprob: -2.4233787059783936
    4. ' ['' → logprob: -2.5483787059783936
    5. ''' → logprob: -2.6733787059783936
    6. '"' → logprob: -3.2983787059783936
    7. ' []' → logprob: -3.7983787059783936
    8. '[' → logprob: -4.5483784675598145
    9. '['' → logprob: -5.2983784675598145
    10. ' ["' → logprob: -5.6733784675598145

Token 42: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5255519151687622
    2. '()' → logprob: -0.9005519151687622
    3. '("")' → logprob: -7.900551795959473
    4. '<|end|>' → logprob: -7.900551795959473
    5. '('' → logprob: -8.150551795959473
    6. '()>' → logprob: -8.275551795959473
    7. '("("' → logprob: -8.650551795959473
    8. '```' → logprob: -8.900551795959473
    9. ')' → logprob: -9.525551795959473
    10. '(">' → logprob: -9.650551795959473

Token 43: 'cnt' (ID: 33160)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.448797345161438
    2. 'n' → logprob: -1.823797345161438
    3. 'res' → logprob: -1.823797345161438
    4. 'result' → logprob: -2.1987972259521484
    5. ' for' → logprob: -2.8237972259521484
    6. 'val' → logprob: -3.0737972259521484
    7. 's' → logprob: -3.0737972259521484
    8. 'if' → logprob: -3.3237972259521484
    9. 'dp' → logprob: -3.6987972259521484
    10. ' res' → logprob: -4.823797225952148

Token 44: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10862836986780167
    2. '=' → logprob: -2.358628273010254
    3. '_' → logprob: -4.983628273010254
    4. 's' → logprob: -7.108628273010254
    5. ' ' → logprob: -8.233628273010254
    6. ',' → logprob: -8.483628273010254
    7. '[' → logprob: -9.858628273010254
    8. '  ' → logprob: -10.108628273010254
    9. '_=' → logprob: -10.233628273010254
    10. ')' → logprob: -10.358628273010254

Token 45: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06150752678513527
    2. ' ' → logprob: -3.3115074634552
    3. 'seq' → logprob: -4.311507701873779
    4. ' seq' → logprob: -5.811507701873779
    5. '[' → logprob: -6.311507701873779
    6. '{' → logprob: -6.311507701873779
    7. '{}' → logprob: -6.686507701873779
    8. ' [' → logprob: -7.936507701873779
    9. '1' → logprob: -8.186507225036621
    10. 'len' → logprob: -8.561507225036621

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002929174806922674
    2. ' ' → logprob: -8.750292778015137
    3. 'int' → logprob: -10.375292778015137
    4. '[' → logprob: -10.625292778015137
    5. 'seq' → logprob: -10.875292778015137
    6. '(' → logprob: -11.375292778015137
    7. '1' → logprob: -11.500292778015137
    8. ']' → logprob: -11.500292778015137
    9. 'len' → logprob: -12.250292778015137
    10. '(seq' → logprob: -12.500292778015137

Token 47: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00655633257701993
    2. ']*' → logprob: -5.631556510925293
    3. ',' → logprob: -5.881556510925293
    4. ' ]' → logprob: -9.506556510925293
    5. ' for' → logprob: -9.881556510925293
    6. ')]' → logprob: -11.006556510925293
    7. ']*(' → logprob: -11.756556510925293
    8. '`]' → logprob: -12.756556510925293
    9. ')' → logprob: -12.881556510925293
    10. 'for' → logprob: -13.506556510925293

Token 48: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6201298832893372
    2. ' for' → logprob: -0.8701298832893372
    3. 'def' → logprob: -3.8701298236846924
    4. ' 
' → logprob: -4.7451300621032715
    5. '
' → logprob: -5.2451300621032715
    6. '0' → logprob: -6.1201300621032715
    7. '[' → logprob: -6.1201300621032715
    8. ' ' → logprob: -7.6201300621032715
    9. '\n' → logprob: -7.6201300621032715
    10. 'n' → logprob: -7.7451300621032715

Token 49: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5765936374664307
    2. ' =' → logprob: -0.8265936374664307
    3. 'n' → logprob: -7.576593399047852
    4. ' ' → logprob: -9.451593399047852
    5. 'nd' → logprob: -10.701593399047852
    6. 'nt' → logprob: -11.326593399047852
    7. 'x' → logprob: -11.826593399047852
    8. 's' → logprob: -12.201593399047852
    9. 'f' → logprob: -12.576593399047852
    10. ',' → logprob: -13.201593399047852

Token 50: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0465100035071373
    2. '1' → logprob: -3.6715099811553955
    3. ' ' → logprob: -3.9215099811553955
    4. '2' → logprob: -9.046509742736816
    5. 'len' → logprob: -11.234009742736816
    6. '<|end|>' → logprob: -11.421509742736816
    7. '3' → logprob: -11.921509742736816
    8. ' -' → logprob: -12.109009742736816
    9. '-' → logprob: -12.234009742736816
    10. 's' → logprob: -12.546509742736816

Token 51: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.033901557326316833
    2. '1' → logprob: -3.5339014530181885
    3. ' ' → logprob: -5.658901691436768
    4. '2' → logprob: -8.28390121459961
    5. 'len' → logprob: -8.40890121459961
    6. '-' → logprob: -9.28390121459961
    7. ' len' → logprob: -10.28390121459961
    8. '3' → logprob: -11.15890121459961
    9. ' -' → logprob: -11.90890121459961
    10. '4' → logprob: -12.40890121459961

Token 52: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27628251910209656
    2. 'while' → logprob: -2.026282548904419
    3. ' while' → logprob: -2.901282548904419
    4. '<|end|>' → logprob: -3.151282548904419
    5. '+' → logprob: -4.90128231048584
    6. ' 
' → logprob: -6.15128231048584
    7. ' ' → logprob: -7.52628231048584
    8. '+
' → logprob: -7.90128231048584
    9. '  
' → logprob: -8.40128231048584
    10. '0' → logprob: -8.52628231048584

Token 53: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.165041208267212
    2. ' while' → logprob: -1.290041208267212
    3. '
' → logprob: -1.540041208267212
    4. '<|end|>' → logprob: -1.665041208267212
    5. '+' → logprob: -5.540040969848633
    6. ' ' → logprob: -6.290040969848633
    7. '<|end|>' → logprob: -7.040040969848633
    8. '0' → logprob: -7.415040969848633
    9. ' 
' → logprob: -7.540040969848633
    10. '	while' → logprob: -8.165040969848633

Token 54: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06198235973715782
    2. 'i' → logprob: -2.8119823932647705
    3. ' True' → logprob: -12.311982154846191
    4. '(i' → logprob: -12.936982154846191
    5. ' ' → logprob: -12.936982154846191
    6. ' len' → logprob: -13.186982154846191
    7. 'True' → logprob: -13.811982154846191
    8. 'len' → logprob: -13.936982154846191
    9. ' not' → logprob: -14.936982154846191
    10. '1' → logprob: -15.874482154846191

Token 55: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.36575350165367126
    2. '<' → logprob: -1.2407535314559937
    3. '<len' → logprob: -4.115753650665283
    4. ' <=' → logprob: -7.490753650665283
    5. '<=' → logprob: -8.240753173828125
    6. ' ' → logprob: -10.990753173828125
    7. '<size' → logprob: -13.240753173828125
    8. ' len' → logprob: -13.240753173828125
    9. 'len' → logprob: -13.615753173828125
    10. '<n' → logprob: -14.615753173828125

Token 56: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.018160121515393257
    2. ' len' → logprob: -4.018160343170166
    3. '(len' → logprob: -12.393159866333008
    4. '=len' → logprob: -13.518159866333008
    5. '1' → logprob: -14.143159866333008
    6. ' ' → logprob: -14.393159866333008
    7. '<len' → logprob: -14.643159866333008
    8. '6' → logprob: -15.143159866333008
    9. '2' → logprob: -15.143159866333008
    10. '10' → logprob: -15.268159866333008

Token 57: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -1.6405310816480778e-05
    2. 'seq' → logprob: -11.500016212463379
    3. '(' → logprob: -12.125016212463379
    4. '(cnt' → logprob: -15.000016212463379
    5. ' seq' → logprob: -15.125016212463379
    6. '(sequence' → logprob: -15.250016212463379
    7. '(se' → logprob: -17.000017166137695
    8. '(s' → logprob: -17.625017166137695
    9. ' (' → logprob: -18.000017166137695
    10. '(val' → logprob: -18.125017166137695

Token 58: '):
' (ID: 1883)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3716738224029541
    2. '):' → logprob: -1.871673822402954
    3. '):
' → logprob: -2.371673822402954
    4. ')' → logprob: -3.371673822402954
    5. 'and' → logprob: -3.621673822402954
    6. ' ):' → logprob: -6.996673583984375
    7. ' ):
' → logprob: -7.496673583984375
    8. ' )' → logprob: -8.621673583984375
    9. '-' → logprob: -8.996673583984375
    10. '   ' → logprob: -9.121673583984375

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32667216658592224
    2. ' ' → logprob: -2.326672077178955
    3. '<|end|>' → logprob: -2.451672077178955
    4. ' if' → logprob: -3.451672077178955
    5. ' and' → logprob: -4.076672077178955
    6. ':' → logprob: -4.201672077178955
    7. '    ' → logprob: -4.701672077178955
    8. ' 
' → logprob: -4.826672077178955
    9. '<|end|>' → logprob: -5.701672077178955
    10. '    
' → logprob: -5.701672077178955

Token 60: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16604134440422058
    2. 'if' (adapté à ' if') → logprob: -1.916041374206543
    3. '   ' → logprob: -5.291041374206543
    4. ' ' → logprob: -8.041041374206543
    5. '    ' → logprob: -8.666041374206543
    6. ' i' → logprob: -9.291041374206543
    7. '```' → logprob: -10.416041374206543
    8. ' cnt' → logprob: -10.541041374206543
    9. 'cnt' → logprob: -10.791041374206543
    10. 'val' → logprob: -11.541041374206543

Token 61: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.07916274666786194
    2. 'seq' → logprob: -2.579162836074829
    3. '(seq' → logprob: -9.32916259765625
    4. ' ' → logprob: -9.57916259765625
    5. ' cnt' → logprob: -9.82916259765625
    6. '   ' → logprob: -10.82916259765625
    7. ' i' → logprob: -11.95416259765625
    8. 'cnt' → logprob: -11.95416259765625
    9. ' val' → logprob: -12.07916259765625
    10. ' sequence' → logprob: -12.45416259765625

Token 62: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.250000953674316
    3. 'i' → logprob: -16.75
    4. '```' → logprob: -16.875
    5. '[I' → logprob: -17.0
    6. '!=' → logprob: -17.125
    7. '==' → logprob: -17.25
    8. ' ' → logprob: -17.625
    9. ' [' → logprob: -17.875
    10. '   ' → logprob: -17.875

Token 63: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.028075283393263817
    2. ']!=' → logprob: -4.278075218200684
    3. '!=' → logprob: -5.153075218200684
    4. ']==' → logprob: -5.278075218200684
    5. '==' → logprob: -6.403075218200684
    6. ' !=' → logprob: -7.528075218200684
    7. ' ]' → logprob: -7.778075218200684
    8. '=' → logprob: -9.778075218200684
    9. ' ' → logprob: -10.028075218200684
    10. ' ==' → logprob: -10.403075218200684

Token 64: ' ==' (ID: 951)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3282042443752289
    2. '==' → logprob: -1.5782042741775513
    3. ' !=' → logprob: -2.7032041549682617
    4. ' ==' → logprob: -5.078204154968262
    5. '=' → logprob: -9.078204154968262
    6. ']!=' → logprob: -10.953204154968262
    7. ' ' → logprob: -11.203204154968262
    8. '>' → logprob: -11.328204154968262
    9. '```' → logprob: -11.453204154968262
    10. ']' → logprob: -12.078204154968262

Token 65: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.03668317198753357
    2. ''' → logprob: -4.036683082580566
    3. ' seq' → logprob: -4.036683082580566
    4. ' '' → logprob: -7.661683082580566
    5. '(seq' → logprob: -10.161683082580566
    6. 'sequence' → logprob: -10.411683082580566
    7. '1' → logprob: -10.849183082580566
    8. ' ' → logprob: -11.036683082580566
    9. 's' → logprob: -11.161683082580566
    10. ''s' → logprob: -11.224183082580566

Token 66: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.729906196298543e-06
    2. '-' → logprob: -12.500009536743164
    3. '[' → logprob: -12.500009536743164
    4. 'i' → logprob: -13.500009536743164
    5. ']' → logprob: -14.875009536743164
    6. '(i' → logprob: -16.000009536743164
    7. '   ' → logprob: -16.500009536743164
    8. ' i' → logprob: -16.875009536743164
    9. '[-' → logprob: -16.875009536743164
    10. ' [' → logprob: -17.125009536743164

Token 67: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09272201359272003
    2. 'i' → logprob: -2.467721939086914
    3. '[i' → logprob: -6.467721939086914
    4. '1' → logprob: -6.967721939086914
    5. ' -' → logprob: -7.967721939086914
    6. '   ' → logprob: -8.217721939086914
    7. ']' → logprob: -8.342721939086914
    8. ' i' → logprob: -8.842721939086914
    9. '])' → logprob: -9.717721939086914
    10. ' ' → logprob: -10.217721939086914

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.576873758807778e-05
    2. ' ' → logprob: -10.125075340270996
    3. 'i' → logprob: -10.750075340270996
    4. '0' → logprob: -12.000075340270996
    5. '```' → logprob: -12.625075340270996
    6. '-' → logprob: -13.625075340270996
    7. '   ' → logprob: -14.000075340270996
    8. '2' → logprob: -14.125075340270996
    9. '<|end|>' → logprob: -15.125075340270996
    10. ')' → logprob: -15.312575340270996

Token 69: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3535793423652649
    2. ':' → logprob: -1.6035792827606201
    3. ']:' → logprob: -2.60357928276062
    4. '):
' → logprob: -4.728579521179199
    5. ' and' → logprob: -5.853579521179199
    6. ''):' → logprob: -5.853579521179199
    7. ' ):' → logprob: -5.978579521179199
    8. ')' → logprob: -6.478579521179199
    9. ']' → logprob: -6.978579521179199
    10. '=' → logprob: -7.228579521179199

Token 70: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003849717089906335
    2. ':' → logprob: -6.503849506378174
    3. '   ' → logprob: -6.628849506378174
    4. ',' → logprob: -8.753849983215332
    5. '	   ' → logprob: -8.753849983215332
    6. ' and' → logprob: -8.878849983215332
    7. ':
' → logprob: -9.128849983215332
    8. '    ' → logprob: -9.378849983215332
    9. '      ' → logprob: -9.753849983215332
    10. '+' → logprob: -10.003849983215332

Token 71: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.3730317950248718
    2. ' cnt' → logprob: -1.2480318546295166
    3. '       ' → logprob: -3.9980318546295166
    4. '           ' → logprob: -6.1230316162109375
    5. '
' → logprob: -6.9980316162109375
    6. '	cnt' → logprob: -6.9980316162109375
    7. 'i' → logprob: -8.123031616210938
    8. ' i' → logprob: -8.123031616210938
    9. 'val' → logprob: -8.373031616210938
    10. '   ' → logprob: -8.498031616210938

Token 72: '[' (ID: 58)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.3134121894836426
    2. '[' → logprob: -1.3134121894836426
    3. '.append' → logprob: -8.813411712646484
    4. '[len' → logprob: -14.563411712646484
    5. '][-' → logprob: -14.938411712646484
    6. '[i' → logprob: -15.063411712646484
    7. '.' → logprob: -16.563411712646484
    8. '[
' → logprob: -16.563411712646484
    9. '0' → logprob: -16.688411712646484
    10. '```' → logprob: -16.813411712646484

Token 73: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.033941660076379776
    2. '0' → logprob: -3.4089417457580566
    3. '-i' → logprob: -9.033941268920898
    4. ' -' → logprob: -9.158941268920898
    5. ' ' → logprob: -10.033941268920898
    6. '-I' → logprob: -11.783941268920898
    7. ']' → logprob: -13.408941268920898
    8. '   ' → logprob: -13.408941268920898
    9. '-c' → logprob: -13.408941268920898
    10. '-add' → logprob: -13.408941268920898

Token 74: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3282615840435028
    2. ']+=' → logprob: -1.3282616138458252
    3. '+=' → logprob: -4.453261375427246
    4. '+' → logprob: -5.953261375427246
    5. ']+' → logprob: -8.078261375427246
    6. ')' → logprob: -8.953261375427246
    7. ' +=' → logprob: -9.453261375427246
    8. '+]' → logprob: -9.703261375427246
    9. ' ]' → logprob: -9.703261375427246
    10. '']' → logprob: -13.203261375427246

Token 75: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.014388319104909897
    2. ' +=' → logprob: -4.264388084411621
    3. '=' → logprob: -8.889388084411621
    4. '+' → logprob: -9.389388084411621
    5. ']+=' → logprob: -12.889388084411621
    6. '+='' → logprob: -14.639388084411621
    7. '+=(' → logprob: -15.264388084411621
    8. ' =' → logprob: -16.889389038085938
    9. '+="' → logprob: -16.889389038085938
    10. '-=' → logprob: -17.264389038085938

Token 76: ' cnt' (ID: 27340)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5072398781776428
    2. ' i' → logprob: -1.382239818572998
    3. 'cnt' → logprob: -3.007239818572998
    4. '0' → logprob: -3.257239818572998
    5. ' cnt' → logprob: -3.507239818572998
    6. ' ' → logprob: -4.382239818572998
    7. '1' → logprob: -4.757239818572998
    8. ' max' → logprob: -5.757239818572998
    9. 'max' → logprob: -6.132239818572998
    10. 'len' → logprob: -7.007239818572998

Token 77: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007627923507243395
    2. '0' → logprob: -4.882627964019775
    3. '+' → logprob: -11.757627487182617
    4. '[
' → logprob: -12.382627487182617
    5. ' ' → logprob: -12.632627487182617
    6. '```' → logprob: -13.382627487182617
    7. ']' → logprob: -13.757627487182617
    8. '1' → logprob: -14.382627487182617
    9. '[i' → logprob: -15.132627487182617
    10. '	' → logprob: -15.132627487182617

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00030388421146199107
    2. ' ' → logprob: -8.875304222106934
    3. ']' → logprob: -10.125304222106934
    4. 'i' → logprob: -10.125304222106934
    5. '+' → logprob: -10.500304222106934
    6. '-' → logprob: -10.625304222106934
    7. '1' → logprob: -11.250304222106934
    8. '[' → logprob: -11.750304222106934
    9. ']+' → logprob: -12.125304222106934
    10. ')' → logprob: -13.375304222106934

Token 79: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.06998156756162643
    2. ' +' → logprob: -2.694981575012207
    3. ']+' → logprob: -10.819981575012207
    4. ')+' → logprob: -11.194981575012207
    5. ')' → logprob: -12.194981575012207
    6. ']' → logprob: -13.069981575012207
    7. '1' → logprob: -13.444981575012207
    8. ' ' → logprob: -13.819981575012207
    9. '+
' → logprob: -14.694981575012207
    10. '()+' → logprob: -15.694981575012207

Token 80: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0040831477381289005
    2. ' +' → logprob: -5.504083156585693
    3. '+i' → logprob: -12.754082679748535
    4. '+
' → logprob: -13.879082679748535
    5. '1' → logprob: -15.004082679748535
    6. ' ' → logprob: -16.37908363342285
    7. '0' → logprob: -16.75408363342285
    8. '-' → logprob: -17.00408363342285
    9. ' plus' → logprob: -17.12908363342285
    10. '+=' → logprob: -17.37908363342285

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002021901309490204
    2. ' ' → logprob: -6.252021789550781
    3. '2' → logprob: -9.627021789550781
    4. 'i' → logprob: -11.127021789550781
    5. ' i' → logprob: -11.627021789550781
    6. '(i' → logprob: -13.502021789550781
    7. '(' → logprob: -14.002021789550781
    8. 'int' → logprob: -15.627021789550781
    9. ' (' → logprob: -15.627021789550781
    10. '3' → logprob: -15.752021789550781

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.802049756515771e-05
    2. '2' → logprob: -10.375067710876465
    3. ' ' → logprob: -10.875067710876465
    4. 'i' → logprob: -11.750067710876465
    5. '(i' → logprob: -12.125067710876465
    6. '(' → logprob: -12.750067710876465
    7. 'int' → logprob: -15.250067710876465
    8. 'abs' → logprob: -15.375067710876465
    9. 'len' → logprob: -15.500067710876465
    10. 'seq' → logprob: -15.625067710876465

Token 83: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0012585645308718085
    2. '    
' → logprob: -7.876258373260498
    3. '       ' → logprob: -8.126258850097656
    4. '   ' → logprob: -8.626258850097656
    5. '
' → logprob: -8.876258850097656
    6. ' 
' → logprob: -9.501258850097656
    7. '        
' → logprob: -10.001258850097656
    8. 'i' → logprob: -10.251258850097656
    9. '  
' → logprob: -10.376258850097656
    10. '   
' → logprob: -10.876258850097656

Token 84: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22163210809230804
    2. '
' → logprob: -2.3466320037841797
    3. '   ' → logprob: -3.0966320037841797
    4. 'i' → logprob: -3.5966320037841797
    5. ' i' → logprob: -4.47163200378418
    6. '        
' → logprob: -4.72163200378418
    7. '    
' → logprob: -5.22163200378418
    8. 'else' → logprob: -6.97163200378418
    9. ' 
' → logprob: -7.34663200378418
    10. '   
' → logprob: -7.72163200378418

Token 85: ' seq' (ID: 26775)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06413040310144424
    2. '       ' → logprob: -3.0641303062438965
    3. ' i' → logprob: -4.9391303062438965
    4. '   ' → logprob: -5.0641303062438965
    5. 'while' → logprob: -6.5641303062438965
    6. ' while' → logprob: -8.564130783081055
    7. '        
' → logprob: -9.314130783081055
    8. '
' → logprob: -9.814130783081055
    9. '           ' → logprob: -10.314130783081055
    10. ' ' → logprob: -10.439130783081055

Token 86: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22541804611682892
    2. ' =' → logprob: -1.6004180908203125
    3. ' +=' → logprob: -12.850418090820312
    4. '+=' → logprob: -13.475418090820312
    5. ',' → logprob: -14.600418090820312
    6. '=i' → logprob: -15.725418090820312
    7. ' ' → logprob: -16.225418090820312
    8. ')' → logprob: -16.350418090820312
    9. '[' → logprob: -16.725418090820312
    10. '[i' → logprob: -16.975418090820312

Token 87: ' upd' (ID: 145403)
  Prédit: 'upd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upd' → logprob: -0.160283625125885
    2. ' upd' → logprob: -1.9102835655212402
    3. 'up' → logprob: -10.035284042358398
    4. 'Upd' → logprob: -12.410284042358398
    5. ' ' → logprob: -13.035284042358398
    6. 'upp' → logprob: -13.535284042358398
    7. '   ' → logprob: -13.910284042358398
    8. 'upt' → logprob: -14.035284042358398
    9. 'upr' → logprob: -14.160284042358398
    10. ' up' → logprob: -14.535284042358398

Token 88: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.001511408481746912
    2. '(' → logprob: -6.626511573791504
    3. '(seq' → logprob: -8.626511573791504
    4. ' (' → logprob: -12.626511573791504
    5. '(sequence' → logprob: -14.126511573791504
    6. '(ii' → logprob: -14.376511573791504
    7. '(len' → logprob: -15.001511573791504
    8. '((' → logprob: -15.126511573791504
    9. '(
' → logprob: -15.251511573791504
    10. '(s' → logprob: -15.876511573791504

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010819945018738508
    2. ' ,' → logprob: -7.001081943511963
    3. ')' → logprob: -9.126082420349121
    4. ' ' → logprob: -10.626082420349121
    5. '+' → logprob: -11.251082420349121
    6. ',val' → logprob: -11.751082420349121
    7. ',
' → logprob: -12.126082420349121
    8. '-' → logprob: -13.251082420349121
    9. ' +' → logprob: -13.876082420349121
    10. ',s' → logprob: -13.876082420349121

Token 90: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.28117796778678894
    2. ' seq' → logprob: -1.4061779975891113
    3. '(seq' → logprob: -11.156177520751953
    4. 'sequence' → logprob: -12.156177520751953
    5. ' sequence' → logprob: -13.031177520751953
    6. ' ' → logprob: -13.031177520751953
    7. 'se' → logprob: -13.281177520751953
    8. ' sequ' → logprob: -14.406177520751953
    9. ')' → logprob: -14.656177520751953
    10. '_seq' → logprob: -15.406177520751953

Token 91: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.685467764735222e-05
    2. ')
' → logprob: -9.375086784362793
    3. ' )' → logprob: -14.375086784362793
    4. ')

' → logprob: -14.625086784362793
    5. '))' → logprob: -14.875086784362793
    6. ')
' → logprob: -15.250086784362793
    7. ')i' → logprob: -15.375086784362793
    8. '),' → logprob: -16.87508773803711
    9. ');' → logprob: -16.87508773803711
    10. ')`' → logprob: -17.50008773803711

Token 92: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04903683438897133
    2. '   ' → logprob: -3.424036741256714
    3. ' i' → logprob: -4.549036979675293
    4. 'i' → logprob: -5.799036979675293
    5. '
' → logprob: -7.549036979675293
    6. '    ' → logprob: -8.299036979675293
    7. '        
' → logprob: -8.424036979675293
    8. '    
' → logprob: -8.424036979675293
    9. '      ' → logprob: -9.299036979675293
    10. '  ' → logprob: -9.424036979675293

Token 93: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38245609402656555
    2. '   ' → logprob: -1.3824560642242432
    3. '       ' → logprob: -3.257456064224243
    4. 'i' (adapté à ' i') → logprob: -3.882456064224243
    5. '    ' → logprob: -5.882456302642822
    6. ' else' → logprob: -6.507456302642822
    7. '    
' → logprob: -7.257456302642822
    8. 'else' → logprob: -7.382456302642822
    9. '
' → logprob: -7.632456302642822
    10. '  ' → logprob: -7.882456302642822

Token 94: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.26841822266578674
    2. '+' → logprob: -1.7684181928634644
    3. ' +=' → logprob: -3.018418312072754
    4. '=' → logprob: -4.143418312072754
    5. ' ' → logprob: -10.143418312072754
    6. ' +' → logprob: -11.518418312072754
    7. ' =' → logprob: -12.143418312072754
    8. '++' → logprob: -12.643418312072754
    9. '+="' → logprob: -13.643418312072754
    10. '+='' → logprob: -13.893418312072754

Token 95: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.313314952421933e-05
    2. ' ' → logprob: -9.750062942504883
    3. '2' → logprob: -12.375062942504883
    4. '3' → logprob: -15.125062942504883
    5. '4' → logprob: -15.750062942504883
    6. '   ' → logprob: -16.437562942504883
    7. '0' → logprob: -17.312562942504883
    8. '  ' → logprob: -17.437562942504883
    9. '5' → logprob: -17.875062942504883
    10. '6' → logprob: -18.250062942504883

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.3596853831550106e-05
    2. ' ' → logprob: -10.375053405761719
    3. '2' → logprob: -10.750053405761719
    4. '3' → logprob: -14.750053405761719
    5. '4' → logprob: -15.250053405761719
    6. '0' → logprob: -16.25005340576172
    7. '   ' → logprob: -16.93755340576172
    8. '5' → logprob: -17.00005340576172
    9. '  ' → logprob: -17.06255340576172
    10. '```' → logprob: -17.12505340576172

Token 97: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12086652964353561
    2. '<|end|>' → logprob: -2.620866537094116
    3. ')' → logprob: -3.745866537094116
    4. 'if' → logprob: -4.870866298675537
    5. ' ' → logprob: -5.745866298675537
    6. ' if' → logprob: -6.370866298675537
    7. ']' → logprob: -7.120866298675537
    8. '#' → logprob: -7.370866298675537
    9. '
' → logprob: -7.620866298675537
    10. '```' → logprob: -7.745866298675537

Token 99: '(re' (ID: 8178)
  Prédit: '(cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.014289969578385353
    2. '(' → logprob: -4.264289855957031
    3. '(sum' → logprob: -9.889289855957031
    4. '(len' → logprob: -9.889289855957031
    5. '(count' → logprob: -11.764289855957031
    6. '(seq' → logprob: -11.764289855957031
    7. '(tuple' → logprob: -13.014289855957031
    8. '((' → logprob: -13.639289855957031
    9. '(
' → logprob: -13.764289855957031
    10. '()' → logprob: -13.764289855957031

Token 100: 'duce' (ID: 21375)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4743632674217224
    2. 'duce' → logprob: -0.9743632674217224
    3. 'du' → logprob: -9.349363327026367
    4. 't' → logprob: -9.474363327026367
    5. 'dc' → logprob: -10.224363327026367
    6. 'duc' → logprob: -10.474363327026367
    7. 'duced' → logprob: -11.599363327026367
    8. 'nt' → logprob: -11.849363327026367
    9. 'duct' → logprob: -11.974363327026367
    10. 'de' → logprob: -11.974363327026367

Token 101: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0035033728927373886
    2. '(' → logprob: -5.753503322601318
    3. '(int' → logprob: -8.628503799438477
    4. '(operator' → logprob: -9.753503799438477
    5. '(max' → logprob: -10.378503799438477
    6. '((' → logprob: -10.378503799438477
    7. ' (' → logprob: -11.753503799438477
    8. '(cnt' → logprob: -12.253503799438477
    9. 'lambda' → logprob: -12.753503799438477
    10. '```' → logprob: -12.878503799438477

Token 102: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.034646619111299515
    2. 'x' → logprob: -3.909646511077881
    3. ' a' → logprob: -4.534646511077881
    4. 'a' → logprob: -6.034646511077881
    5. ' acc' → logprob: -7.909646511077881
    6. ' lambda' → logprob: -7.909646511077881
    7. 'lambda' → logprob: -9.534646987915039
    8. 'acc' → logprob: -9.909646987915039
    9. ' ' → logprob: -11.284646987915039
    10. '	x' → logprob: -12.659646987915039

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004008793330285698
    2. ',x' → logprob: -7.875401020050049
    3. ' ,' → logprob: -11.12540054321289
    4. ',y' → logprob: -12.75040054321289
    5. ',a' → logprob: -14.12540054321289
    6. 'a' → logprob: -14.25040054321289
    7. 'x' → logprob: -15.25040054321289
    8. 'lambda' → logprob: -15.62540054321289
    9. ',i' → logprob: -15.87540054321289
    10. ',l' → logprob: -16.00040054321289

Token 104: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12695865333080292
    2. ' y' → logprob: -2.1269586086273193
    3. ' ' → logprob: -11.626958847045898
    4. '   ' → logprob: -11.751958847045898
    5. 'lambda' → logprob: -12.626958847045898
    6. '  ' → logprob: -12.876958847045898
    7. '    ' → logprob: -13.126958847045898
    8. 'x' → logprob: -13.126958847045898
    9. ' lambda' → logprob: -13.626958847045898
    10. 'acc' → logprob: -13.626958847045898

Token 105: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000925157277379185
    2. ',x' → logprob: -7.125925064086914
    3. ',y' → logprob: -9.250925064086914
    4. ':' → logprob: -10.875925064086914
    5. ' ,' → logprob: -12.500925064086914
    6. 'x' → logprob: -14.250925064086914
    7. '1' → logprob: -15.250925064086914
    8. '=' → logprob: -15.750925064086914
    9. ':x' → logprob: -15.750925064086914
    10. ' :' → logprob: -16.375925064086914

Token 106: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03835013881325722
    2. ' x' → logprob: -3.2883501052856445
    3. 'max' → logprob: -8.913350105285645
    4. ' ' → logprob: -9.913350105285645
    5. '   ' → logprob: -9.913350105285645
    6. ' max' → logprob: -10.663350105285645
    7. 'int' → logprob: -10.663350105285645
    8. '  ' → logprob: -12.038350105285645
    9. '	x' → logprob: -12.038350105285645
    10. '(x' → logprob: -12.413350105285645

Token 107: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1732827126979828
    2. '^' → logprob: -2.9232826232910156
    3. '+y' → logprob: -2.9232826232910156
    4. '*' → logprob: -3.6732826232910156
    5. ' +' → logprob: -4.423282623291016
    6. '|' → logprob: -5.048282623291016
    7. '*y' → logprob: -5.798282623291016
    8. ' ^' → logprob: -5.923282623291016
    9. '+x' → logprob: -7.173282623291016
    10. ' *' → logprob: -8.173282623291016

Token 108: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.474279522895813
    2. ' y' → logprob: -0.974279522895813
    3. ' ' → logprob: -9.349279403686523
    4. '1' → logprob: -9.849279403686523
    5. 'cnt' → logprob: -10.849279403686523
    6. '  ' → logprob: -11.724279403686523
    7. '   ' → logprob: -11.974279403686523
    8. ' cnt' → logprob: -12.474279403686523
    9. ' (' → logprob: -12.599279403686523
    10. '(y' → logprob: -12.599279403686523

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11313533037900925
    2. '+' → logprob: -2.73813533782959
    3. ' +' → logprob: -4.23813533782959
    4. 'cnt' → logprob: -4.36313533782959
    5. ' ,' → logprob: -5.11313533782959
    6. ')' → logprob: -5.61313533782959
    7. ' cnt' → logprob: -5.73813533782959
    8. ',c' → logprob: -6.98813533782959
    9. '(cnt' → logprob: -7.61313533782959
    10. '[cnt' → logprob: -7.73813533782959

Token 110: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.051338229328393936
    2. ' cnt' → logprob: -3.0513381958007812
    3. '[' → logprob: -6.801338195800781
    4. '[cnt' → logprob: -7.051338195800781
    5. 'map' → logprob: -8.551338195800781
    6. '(cnt' → logprob: -9.051338195800781
    7. 'range' → logprob: -9.176338195800781
    8. 'seq' → logprob: -9.426338195800781
    9. ' [' → logprob: -9.676338195800781
    10. ' map' → logprob: -10.551338195800781

Token 111: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16025154292583466
    2. ')' → logprob: -1.910251498222351
    3. ')))' → logprob: -11.41025161743164
    4. '[' → logprob: -11.53525161743164
    5. ',' → logprob: -13.53525161743164
    6. '])' → logprob: -14.03525161743164
    7. ')>' → logprob: -14.03525161743164
    8. ' ))' → logprob: -14.16025161743164
    9. '))
' → logprob: -14.53525161743164
    10. '),' → logprob: -14.53525161743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 109
Tokens correctement prédits (1ère position, stricte): 44
Tokens correctement prédits (1ère position, avec adaptation): 45
Tokens correctement prédits (top 10): 91
Précision stricte (1ère position): 40.37%
Précision adaptée (1ère position): 41.28%
Précision (top 10): 83.49%
================================================================================
