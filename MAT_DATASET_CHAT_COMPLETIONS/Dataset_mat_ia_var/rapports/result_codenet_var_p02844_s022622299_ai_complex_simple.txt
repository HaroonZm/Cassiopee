================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:55
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import accumulate, chain, product, compress, tee
from functools import reduce, lru_cache
from collections import deque

# Lecture et conversion tout-en-un
n = list(map(int, input().__add__(' ').__len__().__sub__(1).__str__.__call__() and input().split()))
s = input()

# Générateur d'états initial vide
a = frozenset([''])
ans = set()

# Utilisation des produits cartésiens déguisés pour générer les sous-chaînes
for c in s:
    old = a
    a = frozenset(set(chain.from_iterable(
        (x, x + c) if len(x) != 2 else (x,) for x in old
    )))
    ans |= set(map(lambda x: x + c, filter(lambda x: len(x) == 2, old)))

# Calcul inutilement verbeux de la taille
print(reduce(lambda x, _: x + 1, ans, 0))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' accumulate' (ID: 74226)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2794735431671143
    2. 'product' → logprob: -1.5294735431671143
    3. 'per' → logprob: -1.6544735431671143
    4. 'com' → logprob: -1.9044735431671143
    5. ' permutations' → logprob: -2.7794735431671143
    6. ' product' → logprob: -3.5294735431671143
    7. 'cycle' → logprob: -3.6544735431671143
    8. 'chain' → logprob: -4.654473304748535
    9. 'group' → logprob: -4.654473304748535
    10. ' cycle' → logprob: -4.904473304748535

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003987336531281471
    2. '.' → logprob: -8.250398635864258
    3. '(
' → logprob: -9.250398635864258
    4. ',' → logprob: -11.000398635864258
    5. '\(' → logprob: -12.375398635864258
    6. '```' → logprob: -12.750398635864258
    7. ' (' → logprob: -12.875398635864258
    8. '(

' → logprob: -13.125398635864258
    9. '`' → logprob: -13.250398635864258
    10. ''' → logprob: -13.625398635864258

Token 5: ' chain' (ID: 13464)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.7163315415382385
    2. ' chain' → logprob: -0.9663315415382385
    3. 'group' → logprob: -2.7163314819335938
    4. ' group' → logprob: -3.4663314819335938
    5. 'com' → logprob: -3.7163314819335938
    6. 'compress' → logprob: -5.841331481933594
    7. 'product' → logprob: -6.216331481933594
    8. ' product' → logprob: -7.341331481933594
    9. 'cycle' → logprob: -7.591331481933594
    10. 'filter' → logprob: -7.591331481933594

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02658219262957573
    2. '(
' → logprob: -3.9015822410583496
    3. '.' → logprob: -5.52658224105835
    4. ',' → logprob: -6.65158224105835
    5. '```' → logprob: -8.776581764221191
    6. '\n' → logprob: -9.276581764221191
    7. '\' → logprob: -9.276581764221191
    8. '\(' → logprob: -9.526581764221191
    9. 'import' → logprob: -9.651581764221191
    10. '(
' → logprob: -9.776581764221191

Token 7: ' product' (ID: 1888)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.38328078389167786
    2. ' compress' → logprob: -1.7582807540893555
    3. 'compress' → logprob: -2.3832807540893555
    4. ' combinations' → logprob: -3.6332807540893555
    5. ' cycle' → logprob: -4.0082807540893555
    6. 'cycle' → logprob: -5.7582807540893555
    7. '```' → logprob: -6.6332807540893555
    8. ' product' → logprob: -6.7582807540893555
    9. ' group' → logprob: -7.1332807540893555
    10. '_com' → logprob: -7.3832807540893555

Token 8: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.037672802805900574
    2. '.' → logprob: -3.412672758102417
    3. '(
' → logprob: -5.787672996520996
    4. ',' → logprob: -7.537672996520996
    5. '```' → logprob: -9.162672996520996
    6. '\(' → logprob: -9.287672996520996
    7. '\' → logprob: -10.162672996520996
    8. '[' → logprob: -10.662672996520996
    9. '`' → logprob: -10.662672996520996
    10. ' (' → logprob: -11.037672996520996

Token 9: ' compress' (ID: 34112)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.1649913787841797
    2. ' permutations' → logprob: -2.9149913787841797
    3. 'st' → logprob: -3.5399913787841797
    4. 'compress' → logprob: -4.41499137878418
    5. '```' → logprob: -4.78999137878418
    6. 'cycle' → logprob: -5.03999137878418
    7. 'repeat' → logprob: -5.16499137878418
    8. ' combinations' → logprob: -5.16499137878418
    9. ' cycle' → logprob: -5.28999137878418
    10. ' st' → logprob: -5.41499137878418

Token 10: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02785549871623516
    2. '.' → logprob: -4.277855396270752
    3. ',' → logprob: -5.027855396270752
    4. '(
' → logprob: -5.152855396270752
    5. '\' → logprob: -7.652855396270752
    6. '\(' → logprob: -8.40285587310791
    7. '\n' → logprob: -8.90285587310791
    8. '[' → logprob: -9.27785587310791
    9. '```' → logprob: -10.40285587310791
    10. '_' → logprob: -10.40285587310791

Token 11: ' tee' (ID: 44157)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -1.5542649030685425
    2. 'count' → logprob: -1.6792649030685425
    3. 'drop' → logprob: -1.6792649030685425
    4. ' cycle' → logprob: -1.8042649030685425
    5. ' drop' → logprob: -2.429265022277832
    6. 'filter' → logprob: -3.054265022277832
    7. 'group' → logprob: -3.679265022277832
    8. ' group' → logprob: -4.304265022277832
    9. 'com' → logprob: -4.429265022277832
    10. ' count' → logprob: -4.554265022277832

Token 12: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09491419792175293
    2. '.' → logprob: -2.969914197921753
    3. ',' → logprob: -3.344914197921753
    4. '(
' → logprob: -6.094914436340332
    5. '\' → logprob: -7.094914436340332
    6. '\(' → logprob: -8.594914436340332
    7. '\n' → logprob: -8.969914436340332
    8. ' (' → logprob: -9.219914436340332
    9. 'import' → logprob: -9.219914436340332
    10. ',
' → logprob: -9.344914436340332

Token 13: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22189319133758545
    2. '(' → logprob: -2.221893310546875
    3. '.' → logprob: -3.721893310546875
    4. '(
' → logprob: -4.221893310546875
    5. ',
' → logprob: -4.346893310546875
    6. '\' → logprob: -4.596893310546875
    7. '
' → logprob: -4.721893310546875
    8. 'import' → logprob: -5.346893310546875
    9. '\n' → logprob: -5.346893310546875
    10. '```' → logprob: -5.971893310546875

Token 14: ' functools' (ID: 142636)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -1.0793269872665405
    2. 'collections' → logprob: -1.3293269872665405
    3. 'operator' → logprob: -1.9543269872665405
    4. ' collections' → logprob: -2.20432710647583
    5. ' functools' → logprob: -2.45432710647583
    6. 'math' → logprob: -3.95432710647583
    7. ' math' → logprob: -4.07932710647583
    8. 'fun' → logprob: -4.20432710647583
    9. 'sys' → logprob: -6.45432710647583
    10. ' sys' → logprob: -7.20432710647583

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.035752490162849426
    2. 'import' → logprob: -3.410752534866333
    3. ' ' → logprob: -6.410752296447754
    4. '_import' → logprob: -8.035752296447754
    5. '	import' → logprob: -10.285752296447754
    6. '_' → logprob: -10.410752296447754
    7. '.' → logprob: -10.410752296447754
    8. ' _' → logprob: -11.410752296447754
    9. '.import' → logprob: -11.660752296447754
    10. ' .' → logprob: -11.660752296447754

Token 16: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.15976811945438385
    2. 'partial' → logprob: -2.7847681045532227
    3. ' reduce' → logprob: -3.1597681045532227
    4. 'l' → logprob: -3.9097681045532227
    5. ' l' → logprob: -4.659768104553223
    6. ' partial' → logprob: -4.784768104553223
    7. 'wrap' → logprob: -5.534768104553223
    8. ' wraps' → logprob: -6.534768104553223
    9. 'redu' → logprob: -9.784768104553223
    10. 'cache' → logprob: -10.284768104553223

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22670279443264008
    2. 'import' → logprob: -2.7267026901245117
    3. '(' → logprob: -2.8517026901245117
    4. '\' → logprob: -3.4767026901245117
    5. ',
' → logprob: -4.226702690124512
    6. '(
' → logprob: -4.726702690124512
    7. '\n' → logprob: -5.476702690124512
    8. '<|end|>' → logprob: -5.476702690124512
    9. '```' → logprob: -5.851702690124512
    10. 'def' → logprob: -6.101702690124512

Token 18: ' l' (ID: 305)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.188046395778656
    2. ' partial' → logprob: -1.8130464553833008
    3. ' l' → logprob: -5.563046455383301
    4. 'l' → logprob: -5.813046455383301
    5. 'wrap' → logprob: -7.438046455383301
    6. ' wraps' → logprob: -7.938046455383301
    7. 'cmp' → logprob: -8.1880464553833
    8. ' singled' → logprob: -9.4380464553833
    9. ' cmp' → logprob: -9.8130464553833
    10. 'cache' → logprob: -10.5630464553833

Token 19: 'ru' (ID: 1942)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.6644774675369263
    2. 'ambda' → logprob: -1.2894774675369263
    3. 'ru' → logprob: -1.7894774675369263
    4. 'amb' → logprob: -3.2894773483276367
    5. 'a' → logprob: -5.914477348327637
    6. 'ist' → logprob: -6.789477348327637
    7. 'e' → logprob: -7.539477348327637
    8. 'am' → logprob: -7.539477348327637
    9. 'map' → logprob: -9.414477348327637
    10. 'z' → logprob: -9.539477348327637

Token 20: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -5.097437315271236e-05
    2. '_c' → logprob: -10.25005054473877
    3. 'cache' → logprob: -12.00005054473877
    4. '_' → logprob: -12.62505054473877
    5. '_cached' → logprob: -12.75005054473877
    6. '_ca' → logprob: -14.00005054473877
    7. 'c' → logprob: -14.12505054473877
    8. '_CACHE' → logprob: -14.12505054473877
    9. '_cash' → logprob: -14.50005054473877
    10. 'Cache' → logprob: -16.125051498413086

Token 21: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12312166392803192
    2. '<|end|>' → logprob: -3.373121738433838
    3. ' ' → logprob: -3.873121738433838
    4. ',
' → logprob: -4.123121738433838
    5. 'import' → logprob: -4.748121738433838
    6. '
' → logprob: -4.748121738433838
    7. '\' → logprob: -5.498121738433838
    8. ' ,' → logprob: -5.748121738433838
    9. '\n' → logprob: -5.873121738433838
    10. '(' → logprob: -5.998121738433838

Token 22: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6974323391914368
    2. 'import' → logprob: -2.072432279586792
    3. '\' → logprob: -2.447432279586792
    4. 'def' → logprob: -2.697432279586792
    5. ',
' → logprob: -2.822432279586792
    6. '\n' → logprob: -3.072432279586792
    7. '
' → logprob: -3.322432279586792
    8. '`' → logprob: -4.197432518005371
    9. '```' → logprob: -4.447432518005371
    10. 'from' → logprob: -4.697432518005371

Token 23: ' collections' (ID: 22690)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.5661659240722656
    2. ' operator' → logprob: -1.0661659240722656
    3. ' collections' → logprob: -2.5661659240722656
    4. 'operator' → logprob: -5.066165924072266
    5. 'math' → logprob: -5.816165924072266
    6. 'collections' → logprob: -6.941165924072266
    7. ' itertools' → logprob: -8.191165924072266
    8. ' os' → logprob: -8.316165924072266
    9. ' typing' → logprob: -8.691165924072266
    10. ' random' → logprob: -9.316165924072266

Token 24: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.03420538827776909
    2. ' import' → logprob: -3.534205436706543
    3. 'abc' → logprob: -6.034205436706543
    4. '.' → logprob: -6.534205436706543
    5. '<|end|>' → logprob: -7.784205436706543
    6. '	import' → logprob: -9.909205436706543
    7. '```' → logprob: -10.284205436706543
    8. ' abc' → logprob: -10.909205436706543
    9. '_import' → logprob: -11.909205436706543
    10. 'abstract' → logprob: -12.034205436706543

Token 25: ' deque' (ID: 90347)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.0847913920879364
    2. ' deque' → logprob: -3.209791421890259
    3. ' abc' → logprob: -4.20979118347168
    4. ' named' → logprob: -4.83479118347168
    5. 'abc' → logprob: -4.83479118347168
    6. 'deque' → logprob: -5.08479118347168
    7. 'named' → logprob: -6.08479118347168
    8. 'default' → logprob: -6.83479118347168
    9. ' Counter' → logprob: -7.58479118347168
    10. 'Counter' → logprob: -9.45979118347168

Token 26: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5370094776153564
    2. 'import' → logprob: -1.6620094776153564
    3. '
' → logprob: -2.2870094776153564
    4. '<|end|>' → logprob: -2.7870094776153564
    5. '

' → logprob: -3.6620094776153564
    6. ',
' → logprob: -4.662009239196777
    7. ',

' → logprob: -5.287009239196777
    8. '```' → logprob: -5.662009239196777
    9. 'def' → logprob: -5.912009239196777
    10. '\n' → logprob: -6.037009239196777

Token 27: '#' (ID: 2)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.16358570754528046
    2. 'def' → logprob: -2.913585662841797
    3. '#' → logprob: -3.038585662841797
    4. '@' → logprob: -3.913585662841797
    5. '_' → logprob: -4.663585662841797
    6. ',' → logprob: -6.038585662841797
    7. 'D' → logprob: -6.163585662841797
    8. 'f' → logprob: -6.163585662841797
    9. 'de' → logprob: -6.538585662841797
    10. 'a' → logprob: -6.538585662841797

Token 28: ' Lecture' (ID: 106534)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9319435954093933
    2. ' ' → logprob: -1.556943655014038
    3. 'def' → logprob: -1.681943655014038
    4. ' class' → logprob: -3.431943655014038
    5. ' import' → logprob: -3.681943655014038
    6. ' defaultdict' → logprob: -3.681943655014038
    7. ' Counter' → logprob: -3.806943655014038
    8. 'import' → logprob: -4.056943416595459
    9. ' The' → logprob: -4.306943416595459
    10. ' 

' → logprob: -4.681943416595459

Token 29: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.17383357882499695
    2. ' =' → logprob: -2.2988336086273193
    3. ' ' → logprob: -3.9238336086273193
    4. 's' → logprob: -5.04883337020874
    5. '#' → logprob: -5.29883337020874
    6. 'def' → logprob: -5.54883337020874
    7. '`' → logprob: -6.04883337020874
    8. ':' → logprob: -6.17383337020874
    9. 'import' → logprob: -6.17383337020874
    10. '_notes' → logprob: -6.17383337020874

Token 30: ' conversion' (ID: 22165)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8465104103088379
    2. ' ' → logprob: -2.096510410308838
    3. ' d' → logprob: -2.221510410308838
    4. ' ' → logprob: -2.721510410308838
    5. ' manipulation' → logprob: -3.096510410308838
    6. ' de' → logprob: -3.221510410308838
    7. ' traitement' → logprob: -3.346510410308838
    8. 'd' → logprob: -3.846510410308838
    9. ' #' → logprob: -3.971510410308838
    10. ',' → logprob: -4.346510410308838

Token 31: ' tout' (ID: 5501)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1159504652023315
    2. ' des' → logprob: -1.2409504652023315
    3. ' d' → logprob: -1.8659504652023315
    4. ' ' → logprob: -2.365950584411621
    5. 's' → logprob: -3.365950584411621
    6. 'des' → logprob: -3.615950584411621
    7. '_' → logprob: -3.990950584411621
    8. 'd' → logprob: -4.365950584411621
    9. 'de' → logprob: -4.990950584411621
    10. ' of' → logprob: -5.240950584411621

Token 32: '-en' (ID: 17888)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.6086630821228027
    2. 'à' → logprob: -2.2336630821228027
    3. '```' → logprob: -3.1086630821228027
    4. 'texte' → logprob: -3.2336630821228027
    5. 'es' → logprob: -3.4836630821228027
    6. ' ' → logprob: -3.6086630821228027
    7. ' simplement' → logprob: -3.7336630821228027
    8. 'autom' → logprob: -3.8586630821228027
    9. 'au' → logprob: -3.8586630821228027
    10. ' \' → logprob: -3.9836630821228027

Token 33: '-un' (ID: 30296)
  Prédit: '_un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_un' → logprob: -0.5429258942604065
    2. 'un' → logprob: -1.9179258346557617
    3. '_' → logprob: -2.5429258346557617
    4. '-un' → logprob: -3.2929258346557617
    5. ''un' → logprob: -3.4179258346557617
    6. '_b' → logprob: -3.5429258346557617
    7. ' un' → logprob: -4.042925834655762
    8. 'u' → logprob: -4.667925834655762
    9. '_u' → logprob: -4.667925834655762
    10. '_unicode' → logprob: -4.792925834655762

Token 34: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7436510324478149
    2. '_' → logprob: -1.243651032447815
    3. ' ' → logprob: -2.9936509132385254
    4. ' def' → logprob: -3.1186509132385254
    5. 'd' → logprob: -3.2436509132385254
    6. 's' → logprob: -3.8686509132385254
    7. ':' → logprob: -4.618650913238525
    8. ',' → logprob: -4.868650913238525
    9. 'n' → logprob: -4.993650913238525
    10. 'data' → logprob: -5.118650913238525

Token 35: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3114759624004364
    2. ' def' → logprob: -1.5614759922027588
    3. '_' → logprob: -3.936475992202759
    4. ' ' → logprob: -4.31147575378418
    5. ':' → logprob: -5.18647575378418
    6. 'd' → logprob: -5.43647575378418
    7. ' :' → logprob: -5.93647575378418
    8. 's' → logprob: -6.06147575378418
    9. ' de' → logprob: -6.43647575378418
    10. ',' → logprob: -6.43647575378418

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07181011140346527
    2. ',' → logprob: -3.821810007095337
    3. ' ' → logprob: -4.071810245513916
    4. '_' → logprob: -4.321810245513916
    5. '=' → logprob: -4.571810245513916
    6. ' ,' → logprob: -6.196810245513916
    7. 'u' → logprob: -6.696810245513916
    8. 'p' → logprob: -7.071810245513916
    9. 'um' → logprob: -7.196810245513916
    10. 'umber' → logprob: -7.821810245513916

Token 37: ' list' (ID: 1562)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.02731950953602791
    2. 'int' → logprob: -4.152319431304932
    3. ' ' → logprob: -4.777319431304932
    4. ' input' → logprob: -6.652319431304932
    5. '10' → logprob: -7.402319431304932
    6. ' map' → logprob: -7.777319431304932
    7. ' len' → logprob: -9.27731990814209
    8. 'input' → logprob: -9.27731990814209
    9. '5' → logprob: -9.77731990814209
    10. '20' → logprob: -10.15231990814209

Token 38: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.767848789691925
    2. '(' → logprob: -1.2678487300872803
    3. '(acc' → logprob: -1.7678487300872803
    4. '(chain' → logprob: -3.0178487300872803
    5. '(com' → logprob: -3.7678487300872803
    6. '(range' → logprob: -5.142848968505859
    7. '(input' → logprob: -5.767848968505859
    8. '(int' → logprob: -6.392848968505859
    9. '(filter' → logprob: -8.51784896850586
    10. '()' → logprob: -8.64284896850586

Token 39: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08089017868041992
    2. '(' → logprob: -2.58089017868042
    3. '(str' → logprob: -6.45589017868042
    4. '(lambda' → logprob: -8.330890655517578
    5. '(input' → logprob: -9.455890655517578
    6. '(float' → logprob: -10.830890655517578
    7. '(eval' → logprob: -11.080890655517578
    8. ' (' → logprob: -11.330890655517578
    9. '<int' → logprob: -11.455890655517578
    10. '(
' → logprob: -11.580890655517578

Token 40: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2600770592689514
    2. '(' → logprob: -1.5100769996643066
    3. ',' → logprob: -5.885076999664307
    4. ',input' → logprob: -6.635076999664307
    5. ')' → logprob: -6.760076999664307
    6. '<|end|>' → logprob: -7.135076999664307
    7. 'input' → logprob: -7.510076999664307
    8. '))' → logprob: -8.135077476501465
    9. '(raw' → logprob: -8.510077476501465
    10. '(chain' → logprob: -9.385077476501465

Token 41: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004675403703004122
    2. ' input' → logprob: -5.379675388336182
    3. ',input' → logprob: -10.87967586517334
    4. 'open' → logprob: -11.50467586517334
    5. '(input' → logprob: -11.50467586517334
    6. ')' → logprob: -11.62967586517334
    7. '	input' → logprob: -13.00467586517334
    8. '```' → logprob: -13.87967586517334
    9. '=input' → logprob: -14.25467586517334
    10. ' ' → logprob: -14.37967586517334

Token 42: '().__' (ID: 57377)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005913979839533567
    2. '()' → logprob: -7.875591278076172
    3. '()))' → logprob: -8.500591278076172
    4. '(' → logprob: -12.750591278076172
    5. '))' → logprob: -13.750591278076172
    6. '())))' → logprob: -13.750591278076172
    7. '()));' → logprob: -14.125591278076172
    8. '())' → logprob: -14.500591278076172
    9. '()[' → logprob: -14.625591278076172
    10. ' ().' → logprob: -15.250591278076172

Token 43: 'add' (ID: 964)
  Prédit: 'getitem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getitem' → logprob: -0.4098585247993469
    2. 'add' → logprob: -1.2848584651947021
    3. 'split' → logprob: -4.159858703613281
    4. 'next' → logprob: -4.659858703613281
    5. 'iter' → logprob: -4.784858703613281
    6. 'call' → logprob: -5.159858703613281
    7. 'str' → logprob: -5.159858703613281
    8. 'len' → logprob: -5.159858703613281
    9. 'eq' → logprob: -5.659858703613281
    10. 'mul' → logprob: -6.034858703613281

Token 44: '__('' (ID: 54460)
  Prédit: '__(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__('' → logprob: -0.1437065452337265
    2. '__("' → logprob: -2.8937065601348877
    3. '__' → logprob: -3.3937065601348877
    4. '__(' → logprob: -3.5187065601348877
    5. '__))' → logprob: -4.768706321716309
    6. '__)' → logprob: -6.143706321716309
    7. '(""))' → logprob: -6.393706321716309
    8. '__((' → logprob: -6.893706321716309
    9. '__.' → logprob: -7.268706321716309
    10. '('' → logprob: -8.268706321716309

Token 45: ' '' (ID: 461)
  Prédit: '')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')))' → logprob: -0.29059889912605286
    2. '').' → logprob: -2.1655988693237305
    3. ' ').' → logprob: -3.6655988693237305
    4. '\n' → logprob: -3.6655988693237305
    5. ' '' → logprob: -3.9155988693237305
    6. ''))' → logprob: -3.9155988693237305
    7. ''' → logprob: -4.2905988693237305
    8. ''\' → logprob: -5.1655988693237305
    9. ' \' → logprob: -5.2905988693237305
    10. '')' → logprob: -5.6655988693237305

Token 46: ').__' (ID: 48990)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.6943885087966919
    2. ')' → logprob: -1.444388508796692
    3. ').' → logprob: -1.444388508796692
    4. '+' → logprob: -4.194388389587402
    5. '())))' → logprob: -5.444388389587402
    6. '')))' → logprob: -6.194388389587402
    7. '().' → logprob: -6.319388389587402
    8. ')+' → logprob: -7.069388389587402
    9. '.split' → logprob: -7.194388389587402
    10. ' ' → logprob: -7.569388389587402

Token 47: 'len' (ID: 3303)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0038308333605527878
    2. 'getitem' → logprob: -6.378830909729004
    3. 'iter' → logprob: -7.128830909729004
    4. 'mul' → logprob: -7.503830909729004
    5. 'i' → logprob: -8.003830909729004
    6. 'split' → logprob: -8.503830909729004
    7. 'call' → logprob: -10.003830909729004
    8. 'imul' → logprob: -10.128830909729004
    9. 'eq' → logprob: -10.503830909729004
    10. 'contains' → logprob: -10.628830909729004

Token 48: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0343901589512825
    2. '__))' → logprob: -3.4093902111053467
    3. '__)' → logprob: -7.409389972686768
    4. '__('' → logprob: -9.534390449523926
    5. '__.__' → logprob: -10.534390449523926
    6. '()))' → logprob: -12.159390449523926
    7. '__(' → logprob: -12.159390449523926
    8. '__((' → logprob: -12.284390449523926
    9. '__(
' → logprob: -12.409390449523926
    10. '__()
' → logprob: -12.534390449523926

Token 49: '().__' (ID: 57377)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.039291705936193466
    2. '()' → logprob: -4.039291858673096
    3. '))' → logprob: -4.289291858673096
    4. '())' → logprob: -5.164291858673096
    5. '(' → logprob: -7.914291858673096
    6. ')' → logprob: -8.414291381835938
    7. '())))' → logprob: -8.414291381835938
    8. '().__' → logprob: -8.789291381835938
    9. '()));' → logprob: -9.164291381835938
    10. '()))
' → logprob: -9.539291381835938

Token 50: 'sub' (ID: 3834)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.4400368928909302
    2. 'add' → logprob: -1.5650368928909302
    3. 'call' → logprob: -2.9400367736816406
    4. 'str' → logprob: -3.0650367736816406
    5. 'sub' → logprob: -4.315036773681641
    6. 'pow' → logprob: -4.440036773681641
    7. 'r' → logprob: -4.815036773681641
    8. 'abs' → logprob: -5.190036773681641
    9. 'imul' → logprob: -6.440036773681641
    10. '__' → logprob: -6.815036773681641

Token 51: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0019126958213746548
    2. '__' → logprob: -6.751912593841553
    3. '__((' → logprob: -7.751912593841553
    4. '__(
' → logprob: -9.376913070678711
    5. '(' → logprob: -9.626913070678711
    6. '__)' → logprob: -9.751913070678711
    7. '__('' → logprob: -9.751913070678711
    8. '__("' → logprob: -11.126913070678711
    9. '__),' → logprob: -11.751913070678711
    10. '__(*' → logprob: -11.876913070678711

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017268884927034378
    2. '-' → logprob: -5.017268657684326
    3. ' n' → logprob: -6.142268657684326
    4. 'n' → logprob: -6.392268657684326
    5. ' ' → logprob: -6.517268657684326
    6. ')' → logprob: -6.767268657684326
    7. '2' → logprob: -7.017268657684326
    8. '0' → logprob: -7.392268657684326
    9. '(' → logprob: -7.642268657684326
    10. '__' → logprob: -7.892268657684326

Token 53: ').__' (ID: 48990)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.24972669780254364
    2. ')' → logprob: -1.99972665309906
    3. '))' → logprob: -2.6247267723083496
    4. '),' → logprob: -5.87472677230835
    5. ' ' → logprob: -5.87472677230835
    6. '))))' → logprob: -6.49972677230835
    7. ',' → logprob: -7.12472677230835
    8. ').' → logprob: -7.24972677230835
    9. '())))' → logprob: -7.24972677230835
    10. ')));' → logprob: -7.62472677230835

Token 54: 'str' (ID: 689)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.20959530770778656
    2. 'sub' → logprob: -2.084595203399658
    3. 'call' → logprob: -3.334595203399658
    4. 'mul' → logprob: -4.209595203399658
    5. 'str' → logprob: -5.084595203399658
    6. 'r' → logprob: -5.584595203399658
    7. 'abs' → logprob: -6.834595203399658
    8. 'getitem' → logprob: -7.459595203399658
    9. 'int' → logprob: -8.209595680236816
    10. 'init' → logprob: -8.459595680236816

Token 55: '__.__' (ID: 124889)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.014874893240630627
    2. '__))' → logprob: -4.3898749351501465
    3. '__)' → logprob: -6.8898749351501465
    4. '__('' → logprob: -7.3898749351501465
    5. '()))' → logprob: -7.7648749351501465
    6. '_' → logprob: -9.389874458312988
    7. '()' → logprob: -10.139874458312988
    8. '___' → logprob: -10.139874458312988
    9. '__()
' → logprob: -10.264874458312988
    10. '())' → logprob: -10.639874458312988

Token 56: 'call' (ID: 9925)
  Prédit: 'call'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'call' → logprob: -0.000605337496381253
    2. 'add' → logprob: -7.62560510635376
    3. 'getitem' → logprob: -9.625605583190918
    4. 'str' → logprob: -11.000605583190918
    5. 'eq' → logprob: -12.250605583190918
    6. 'get' → logprob: -12.625605583190918
    7. ')' → logprob: -12.625605583190918
    8. ' call' → logprob: -12.875605583190918
    9. '_call' → logprob: -13.125605583190918
    10. 'func' → logprob: -13.125605583190918

Token 57: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02227083221077919
    2. '__))' → logprob: -4.397270679473877
    3. '__('' → logprob: -5.147270679473877
    4. '__)' → logprob: -6.397270679473877
    5. '()' → logprob: -7.397270679473877
    6. '()))' → logprob: -7.522270679473877
    7. '_' → logprob: -7.772270679473877
    8. '__((' → logprob: -8.897271156311035
    9. '__("' → logprob: -9.147271156311035
    10. '())' → logprob: -9.147271156311035

Token 58: '()' (ID: 416)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.22594693303108215
    2. '()' → logprob: -2.2259469032287598
    3. '())' → logprob: -2.7259469032287598
    4. '())))' → logprob: -3.8509469032287598
    5. '(()' → logprob: -6.35094690322876
    6. '(' → logprob: -6.47594690322876
    7. '()));' → logprob: -7.22594690322876
    8. '))' → logprob: -7.60094690322876
    9. '('' → logprob: -7.72594690322876
    10. ')' → logprob: -7.85094690322876

Token 59: ' and' (ID: 326)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.5045464634895325
    2. '))' → logprob: -1.3795464038848877
    3. '())' → logprob: -3.0045464038848877
    4. ')' → logprob: -3.7545464038848877
    5. '()' → logprob: -4.004546642303467
    6. ')))' → logprob: -4.004546642303467
    7. '(' → logprob: -4.129546642303467
    8. '())))' → logprob: -4.629546642303467
    9. '()))
' → logprob: -6.754546642303467
    10. ' ' → logprob: -7.004546642303467

Token 60: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47772830724716187
    2. ' input' → logprob: -0.9777283072471619
    3. '(input' → logprob: -5.977728366851807
    4. ' ' → logprob: -8.227727890014648
    5. 'str' → logprob: -9.790227890014648
    6. ' str' → logprob: -9.790227890014648
    7. '(' → logprob: -9.852727890014648
    8. ' (' → logprob: -9.915227890014648
    9. 'split' → logprob: -10.040227890014648
    10. 'list' → logprob: -10.040227890014648

Token 61: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.09438358247280121
    2. '()' → logprob: -3.344383478164673
    3. '().' → logprob: -3.344383478164673
    4. '())' → logprob: -4.469383716583252
    5. '())))' → logprob: -5.844383716583252
    6. '('' → logprob: -5.969383716583252
    7. '()));' → logprob: -7.094383716583252
    8. '(' → logprob: -7.719383716583252
    9. '()))
' → logprob: -8.469383239746094
    10. '()))

' → logprob: -8.719383239746094

Token 62: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008379471488296986
    2. 'strip' → logprob: -5.2583794593811035
    3. ' split' → logprob: -6.0083794593811035
    4. 'replace' → logprob: -7.8833794593811035
    5. 'rstrip' → logprob: -9.508379936218262
    6. '__' → logprob: -9.758379936218262
    7. '(split' → logprob: -10.133379936218262
    8. '()' → logprob: -10.758379936218262
    9. '```' → logprob: -10.883379936218262
    10. ' strip' → logprob: -11.133379936218262

Token 63: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0472797267138958
    2. '()' → logprob: -3.5472798347473145
    3. '())' → logprob: -4.4222798347473145
    4. '))' → logprob: -6.0472798347473145
    5. '()))
' → logprob: -6.5472798347473145
    6. '())))' → logprob: -7.6722798347473145
    7. '(' → logprob: -7.9222798347473145
    8. '()));' → logprob: -8.547279357910156
    9. '('' → logprob: -8.797279357910156
    10. '()))

' → logprob: -8.922279357910156

Token 64: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5017813444137573
    2. '[' → logprob: -1.3767813444137573
    3. '<|end|>' → logprob: -2.126781463623047
    4. ' ' → logprob: -4.251781463623047
    5. '(' → logprob: -5.751781463623047
    6. '<|end|>' → logprob: -6.376781463623047
    7. ' )' → logprob: -6.501781463623047
    8. '[n' → logprob: -7.626781463623047
    9. '```' → logprob: -8.501781463623047
    10. '.' → logprob: -8.626781463623047

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26766619086265564
    2. '=' → logprob: -1.517666220664978
    3. 'paces' → logprob: -4.642666339874268
    4. 'pace' → logprob: -6.642666339874268
    5. '_' → logprob: -7.392666339874268
    6. 'p' → logprob: -7.517666339874268
    7. '.' → logprob: -7.642666339874268
    8. '[' → logprob: -7.892666339874268
    9. 'plit' → logprob: -8.26766586303711
    10. 'tr' → logprob: -8.39266586303711

Token 66: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5184391736984253
    2. 'list' → logprob: -1.5184391736984253
    3. ' input' → logprob: -2.893439292907715
    4. ' list' → logprob: -3.268439292907715
    5. 'deque' → logprob: -3.768439292907715
    6. '''' → logprob: -4.518439292907715
    7. '[]' → logprob: -4.643439292907715
    8. ''' → logprob: -4.893439292907715
    9. 'n' → logprob: -5.018439292907715
    10. '[input' → logprob: -5.143439292907715

Token 67: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0016153192846104503
    2. '().' → logprob: -6.501615524291992
    3. '())' → logprob: -9.751615524291992
    4. '(' → logprob: -11.001615524291992
    5. '()`' → logprob: -11.626615524291992
    6. '()
' → logprob: -12.376615524291992
    7. '().__' → logprob: -12.376615524291992
    8. ')' → logprob: -12.501615524291992
    9. '`()' → logprob: -12.626615524291992
    10. '()]' → logprob: -13.001615524291992

Token 68: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1892528533935547
    2. '.split' → logprob: -1.4392528533935547
    3. '.' → logprob: -1.6892528533935547
    4. '[' → logprob: -1.8142528533935547
    5. '<|end|>' → logprob: -3.0642528533935547
    6. '.strip' → logprob: -3.6892528533935547
    7. ' ' → logprob: -4.439252853393555
    8. ',' → logprob: -4.939252853393555
    9. 'split' → logprob: -6.189252853393555
    10. '=' → logprob: -6.439252853393555

Token 69: ' Gén' (ID: 71828)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17882470786571503
    2. '[' → logprob: -2.8038246631622314
    3. 'n' → logprob: -3.1788246631622314
    4. ' =' → logprob: -3.9288246631622314
    5. '<|end|>' → logprob: -4.3038249015808105
    6. '=' → logprob: -5.0538249015808105
    7. ' n' → logprob: -5.1788249015808105
    8. ')' → logprob: -5.9288249015808105
    9. '[n' → logprob: -5.9288249015808105
    10. '(' → logprob: -6.0538249015808105

Token 70: 'érateur' (ID: 108528)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.10022791475057602
    2. 'ération' → logprob: -2.9752278327941895
    3. 'érateur' → logprob: -4.6002278327941895
    4. 'éral' → logprob: -4.9752278327941895
    5. 'r' → logprob: -5.4752278327941895
    6. 'eral' → logprob: -5.6002278327941895
    7. '#' → logprob: -5.7252278327941895
    8. '=' → logprob: -5.8502278327941895
    9. 'rate' → logprob: -6.4752278327941895
    10. 'ral' → logprob: -6.4752278327941895

Token 71: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34603115916252136
    2. 'def' → logprob: -1.7210311889648438
    3. 's' → logprob: -3.4710311889648438
    4. ' def' → logprob: -3.7210311889648438
    5. ':' → logprob: -4.221031188964844
    6. '=' → logprob: -4.471031188964844
    7. ' :' → logprob: -4.596031188964844
    8. '(' → logprob: -4.971031188964844
    9. ' ' → logprob: -5.596031188964844
    10. ',' → logprob: -5.846031188964844

Token 72: ''ét' (ID: 23771)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9653200507164001
    2. ''' → logprob: -1.590320110321045
    3. ''ex' → logprob: -1.840320110321045
    4. 'e' → logprob: -3.215320110321045
    5. '_ranges' → logprob: -4.340320110321045
    6. '_sequences' → logprob: -4.465320110321045
    7. '```' → logprob: -4.465320110321045
    8. ''une' → logprob: -4.590320110321045
    9. ''un' → logprob: -4.590320110321045
    10. 'es' → logprob: -4.840320110321045

Token 73: 'ats' (ID: 1838)
  Prédit: 'erm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'erm' → logprob: -0.4943923354148865
    2. 'er' → logprob: -2.9943923950195312
    3. 'ér' → logprob: -2.9943923950195312
    4. 'ab' → logprob: -3.4943923950195312
    5. 'iers' → logprob: -3.6193923950195312
    6. 'ern' → logprob: -3.9943923950195312
    7. 'ères' → logprob: -4.494392395019531
    8. 'iqu' → logprob: -4.494392395019531
    9. 'ités' → logprob: -4.494392395019531
    10. 'éros' → logprob: -4.494392395019531

Token 74: ' initial' (ID: 4871)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.49665647745132446
    2. ' def' → logprob: -1.3716564178466797
    3. ' =' → logprob: -3.6216564178466797
    4. ':' → logprob: -3.6216564178466797
    5. '_' → logprob: -3.7466564178466797
    6. ' de' → logprob: -4.12165641784668
    7. ',' → logprob: -4.74665641784668
    8. ' :' → logprob: -4.87165641784668
    9. '=' → logprob: -4.99665641784668
    10. ' ' → logprob: -5.24665641784668

Token 75: ' vide' (ID: 21835)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8331018686294556
    2. ':' → logprob: -1.7081018686294556
    3. ' def' → logprob: -2.208101749420166
    4. '_' → logprob: -2.583101749420166
    5. ' =' → logprob: -2.583101749420166
    6. ' :' → logprob: -2.708101749420166
    7. 's' → logprob: -3.583101749420166
    8. ',' → logprob: -5.083101749420166
    9. '_states' → logprob: -5.333101749420166
    10. '=' → logprob: -5.458101749420166

Token 76: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5929986834526062
    2. ' :' → logprob: -1.592998743057251
    3. ':' → logprob: -2.092998743057251
    4. ' def' → logprob: -2.842998743057251
    5. ' ' → logprob: -4.092998504638672
    6. ' =' → logprob: -4.342998504638672
    7. ',' → logprob: -4.592998504638672
    8. '_' → logprob: -4.842998504638672
    9. 's' → logprob: -5.717998504638672
    10. '=' → logprob: -6.092998504638672

Token 77: 'a' (ID: 64)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22957482933998108
    2. 'states' → logprob: -2.3545749187469482
    3. ' states' → logprob: -3.6045749187469482
    4. '_states' → logprob: -3.7295749187469482
    5. 'state' → logprob: -4.104574680328369
    6. ' def' → logprob: -4.354574680328369
    7. ':' → logprob: -4.854574680328369
    8. ' =' → logprob: -5.354574680328369
    9. '_' → logprob: -5.854574680328369
    10. 's' → logprob: -5.854574680328369

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03153068572282791
    2. '=' → logprob: -4.531530857086182
    3. 'r' → logprob: -4.781530857086182
    4. ',' → logprob: -5.531530857086182
    5. '_states' → logprob: -5.781530857086182
    6. 'rg' → logprob: -6.781530857086182
    7. '_' → logprob: -7.281530857086182
    8. ' ' → logprob: -7.656530857086182
    9. 'rray' → logprob: -7.906530857086182
    10. '=[]' → logprob: -8.156530380249023

Token 79: ' fro' (ID: 16956)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.0304008722305298
    2. '[]' → logprob: -1.5304008722305298
    3. ' [' → logprob: -1.9054008722305298
    4. ' deque' → logprob: -2.1554007530212402
    5. ' []' → logprob: -2.5304007530212402
    6. '[' → logprob: -3.2804007530212402
    7. ' iter' → logprob: -4.90540075302124
    8. ' (' → logprob: -5.40540075302124
    9. ' chain' → logprob: -6.03040075302124
    10. '(de' → logprob: -6.15540075302124

Token 80: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -0.00010115911572938785
    2. 'zen' → logprob: -9.500101089477539
    3. 'zent' → logprob: -11.750101089477539
    4. 'z' → logprob: -11.750101089477539
    5. 'zend' → logprob: -12.250101089477539
    6. 'zes' → logprob: -12.750101089477539
    7. 'zs' → logprob: -14.625101089477539
    8. 'ze' → logprob: -14.625101089477539
    9. 'ns' → logprob: -15.625101089477539
    10. 'st' → logprob: -15.750101089477539

Token 81: 'et' (ID: 292)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4726449251174927
    2. 'et' → logprob: -1.4726449251174927
    3. 'set' → logprob: -1.9726449251174927
    4. 'a' → logprob: -5.347644805908203
    5. 'ss' → logprob: -6.972644805908203
    6. 's' → logprob: -7.222644805908203
    7. 'ap' → logprob: -7.972644805908203
    8. 'p' → logprob: -8.347644805908203
    9. 'ze' → logprob: -8.472644805908203
    10. 'st' → logprob: -8.722644805908203

Token 82: '(['' (ID: 14113)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00256864121183753
    2. '([]' → logprob: -6.50256872177124
    3. '(' → logprob: -7.12756872177124
    4. '({' → logprob: -8.627568244934082
    5. '()
' → logprob: -10.877568244934082
    6. '(()' → logprob: -11.002568244934082
    7. '(),' → logprob: -11.752568244934082
    8. '()]' → logprob: -12.002568244934082
    9. '([' → logprob: -12.502568244934082
    10. '())' → logprob: -12.877568244934082

Token 83: ''])
' (ID: 16733)
  Prédit: ''])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''])' → logprob: -0.009896212257444859
    2. 'a' → logprob: -5.384896278381348
    3. ''' → logprob: -6.384896278381348
    4. '']' → logprob: -7.509896278381348
    5. '0' → logprob: -7.634896278381348
    6. ''])
' → logprob: -7.759896278381348
    7. '])' → logprob: -7.884896278381348
    8. '',' → logprob: -8.259896278381348
    9. ' '' → logprob: -8.259896278381348
    10. '"])' → logprob: -8.509896278381348

Token 84: 'ans' (ID: 616)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.1120153665542603
    2. ' ' → logprob: -1.6120153665542603
    3. '<|end|>' → logprob: -1.8620153665542603
    4. '
' → logprob: -2.4870152473449707
    5. ')' → logprob: -2.6120152473449707
    6. ',' → logprob: -3.3620152473449707
    7. ' 
' → logprob: -3.4870152473449707
    8. '=' → logprob: -3.7370152473449707
    9. 'a' → logprob: -3.9870152473449707
    10. '_' → logprob: -4.362015247344971

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04431584104895592
    2. '=' → logprob: -3.169315814971924
    3. ' +=' → logprob: -7.544315814971924
    4. ',' → logprob: -8.669316291809082
    5. '.' → logprob: -8.669316291809082
    6. ' ' → logprob: -9.669316291809082
    7. 's' → logprob: -9.669316291809082
    8. '_' → logprob: -10.044316291809082
    9. ':' → logprob: -10.169316291809082
    10. '+=' → logprob: -10.544316291809082

Token 86: ' set' (ID: 920)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.757110595703125
    2. '0' → logprob: -1.382110595703125
    3. ' set' → logprob: -2.132110595703125
    4. ' []' → logprob: -2.507110595703125
    5. 'set' → logprob: -3.757110595703125
    6. '[]' → logprob: -4.257110595703125
    7. 'deque' → logprob: -4.507110595703125
    8. ' {}' → logprob: -5.757110595703125
    9. ' deque' → logprob: -6.007110595703125
    10. ' [' → logprob: -6.007110595703125

Token 87: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13411393761634827
    2. '(' → logprob: -2.1341140270233154
    3. '([]' → logprob: -5.759113788604736
    4. '([' → logprob: -6.384113788604736
    5. '([(' → logprob: -6.884113788604736
    6. '((' → logprob: -7.759113788604736
    7. '(()' → logprob: -8.384114265441895
    8. '('' → logprob: -9.259114265441895
    9. '([...' → logprob: -9.509114265441895
    10. '()]' → logprob: -9.759114265441895

Token 88: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16777414083480835
    2. '
' → logprob: -2.542774200439453
    3. ' for' → logprob: -3.792774200439453
    4. ' ' → logprob: -4.417774200439453
    5. '=' → logprob: -4.792774200439453
    6. '.' → logprob: -4.792774200439453
    7. ':' → logprob: -5.042774200439453
    8. ',' → logprob: -5.292774200439453
    9. ')' → logprob: -5.917774200439453
    10. '<|end|>' → logprob: -6.417774200439453

Token 89: ' Util' (ID: 13564)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19187882542610168
    2. 'for' → logprob: -2.0668787956237793
    3. ' for' → logprob: -3.5668787956237793
    4. 'def' → logprob: -5.566878795623779
    5. ' 
' → logprob: -5.816878795623779
    6. '_' → logprob: -6.566878795623779
    7. 'n' → logprob: -6.816878795623779
    8. 's' → logprob: -6.816878795623779
    9. ' \' → logprob: -7.066878795623779
    10. '<|end|>' → logprob: -7.066878795623779

Token 90: 'isation' (ID: 6993)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4227307438850403
    2. 'isateur' → logprob: -2.0477306842803955
    3. 'se' → logprob: -2.5477306842803955
    4. '```' → logprob: -3.4227306842803955
    5. 'isation' → logprob: -3.9227306842803955
    6. '#' → logprob: -3.9227306842803955
    7. 't' → logprob: -4.297730922698975
    8. 'ser' → logprob: -4.547730922698975
    9. 'isé' → logprob: -4.797730922698975
    10. 'set' → logprob: -5.672730922698975

Token 91: ' des' (ID: 731)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.1765484809875488
    2. 'a' → logprob: -1.5515484809875488
    3. ' a' → logprob: -1.8015484809875488
    4. '(' → logprob: -2.176548480987549
    5. ' for' → logprob: -3.176548480987549
    6. 'for' → logprob: -3.801548480987549
    7. ':' → logprob: -4.051548480987549
    8. '=' → logprob: -4.051548480987549
    9. '(chain' → logprob: -4.051548480987549
    10. ' ' → logprob: -4.176548480987549

Token 92: ' produits' (ID: 23489)
  Prédit: ' chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chain' → logprob: -0.7082806825637817
    2. ' product' → logprob: -1.4582806825637817
    3. ' itertools' → logprob: -1.7082806825637817
    4. ' a' → logprob: -4.458280563354492
    5. ' accumulate' → logprob: -4.833280563354492
    6. 'product' → logprob: -4.833280563354492
    7. ' deque' → logprob: -5.083280563354492
    8. 'chain' → logprob: -5.208280563354492
    9. ' states' → logprob: -5.458280563354492
    10. ' generators' → logprob: -5.833280563354492

Token 93: ' cart' (ID: 8149)
  Prédit: '(product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.24040783941745758
    2. 'product' → logprob: -1.9904078245162964
    3. '(' → logprob: -3.240407943725586
    4. ' product' → logprob: -3.740407943725586
    5. '(chain' → logprob: -5.365407943725586
    6. 'a' → logprob: -6.490407943725586
    7. ' (' → logprob: -6.615407943725586
    8. '(
' → logprob: -6.615407943725586
    9. 'chain' → logprob: -7.490407943725586
    10. ' itertools' → logprob: -7.740407943725586

Token 94: 'és' (ID: 1756)
  Prédit: 'esian'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esian' → logprob: -0.30201342701911926
    2. 'product' → logprob: -1.8020133972167969
    3. 'es' → logprob: -2.552013397216797
    4. '_product' → logprob: -4.927013397216797
    5. 'és' → logprob: -5.427013397216797
    6. ' product' → logprob: -6.177013397216797
    7. 'esion' → logprob: -6.927013397216797
    8. '(product' → logprob: -7.177013397216797
    9. 'prod' → logprob: -7.552013397216797
    10. '.product' → logprob: -7.927013397216797

Token 95: 'iens' (ID: 64394)
  Prédit: 'iens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iens' → logprob: -0.2520182132720947
    2. 'i' → logprob: -2.1270182132720947
    3. 'ians' → logprob: -3.7520182132720947
    4. 'product' → logprob: -3.8770182132720947
    5. 'ian' → logprob: -4.377017974853516
    6. 'es' → logprob: -4.627017974853516
    7. '```' → logprob: -4.877017974853516
    8. ' product' → logprob: -5.127017974853516
    9. 'ien' → logprob: -5.252017974853516
    10. '_product' → logprob: -5.877017974853516

Token 96: ' dég' (ID: 62409)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1673799306154251
    2. '(product' → logprob: -2.417379856109619
    3. '(
' → logprob: -4.042379856109619
    4. '(a' → logprob: -4.417379856109619
    5. 'product' → logprob: -4.417379856109619
    6. 'a' → logprob: -5.042379856109619
    7. 'for' → logprob: -5.292379856109619
    8. ' (' → logprob: -5.917379856109619
    9. '(chain' → logprob: -6.417379856109619
    10. '('' → logprob: -7.042379856109619

Token 97: 'uis' (ID: 4560)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.6612106561660767
    2. 'én' → logprob: -1.1612106561660767
    3. 'éné' → logprob: -2.411210536956787
    4. 'é' → logprob: -3.161210536956787
    5. 'n' → logprob: -5.411210536956787
    6. '```' → logprob: -5.411210536956787
    7. 'enerated' → logprob: -5.661210536956787
    8. 'e' → logprob: -5.786210536956787
    9. '``' → logprob: -6.161210536956787
    10. 'uis' → logprob: -6.161210536956787

Token 98: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.3392220437526703
    2. 'é' → logprob: -1.3392220735549927
    3. 'ed' → logprob: -3.964221954345703
    4. 'e' → logprob: -5.714221954345703
    5. 'es' → logprob: -7.214221954345703
    6. 'ant' → logprob: -7.464221954345703
    7. 'ément' → logprob: -7.964221954345703
    8. '```' → logprob: -8.089221954345703
    9. 'ing' → logprob: -8.339221954345703
    10. 'ée' → logprob: -8.839221954345703

Token 99: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22378386557102203
    2. '(product' → logprob: -2.3487839698791504
    3. 'for' → logprob: -3.4737839698791504
    4. 'product' → logprob: -3.8487839698791504
    5. ' (' → logprob: -4.22378396987915
    6. '(
' → logprob: -4.84878396987915
    7. ' for' → logprob: -5.09878396987915
    8. ',' → logprob: -5.59878396987915
    9. '(chain' → logprob: -5.59878396987915
    10. ' product' → logprob: -5.72378396987915

Token 100: ' génér' (ID: 18939)
  Prédit: ' chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chain' → logprob: -1.4988902807235718
    2. ' i' → logprob: -2.2488903999328613
    3. ' comb' → logprob: -2.4988903999328613
    4. ' génér' → logprob: -2.6238903999328613
    5. ' la' → logprob: -2.8738903999328613
    6. ' p' → logprob: -2.9988903999328613
    7. ' _' → logprob: -3.4988903999328613
    8. 'i' → logprob: -3.7488903999328613
    9. '_' → logprob: -3.8738903999328613
    10. ' construire' → logprob: -3.9988903999328613

Token 101: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.11330460011959076
    2. 'érer' → logprob: -2.238304615020752
    3. 'ate' → logprob: -9.238304138183594
    4. 'erer' → logprob: -9.238304138183594
    5. 'rer' → logprob: -9.613304138183594
    6. 'ator' → logprob: -10.238304138183594
    7. 'r' → logprob: -10.488304138183594
    8. 'ér' → logprob: -10.738304138183594
    9. 'érateur' → logprob: -10.738304138183594
    10. 'ateur' → logprob: -11.238304138183594

Token 102: ' les' (ID: 1341)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 103: ' sous' (ID: 14487)
  Prédit: ' états'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' états' → logprob: -0.3475429117679596
    2. ' comb' → logprob: -2.9725430011749268
    3. ' states' → logprob: -3.3475430011749268
    4. 'a' → logprob: -4.097542762756348
    5. ' prochaines' → logprob: -4.097542762756348
    6. ' prochains' → logprob: -4.097542762756348
    7. 'poss' → logprob: -4.097542762756348
    8. 'states' → logprob: -4.472542762756348
    9. ' nouveaux' → logprob: -4.472542762756348
    10. ' candidats' → logprob: -4.847542762756348

Token 104: '-cha' (ID: 163177)
  Prédit: 'ense'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ense' → logprob: -0.047233328223228455
    2. 'sets' → logprob: -3.2972333431243896
    3. 'se' → logprob: -5.1722331047058105
    4. 'strings' → logprob: -7.1722331047058105
    5. 'chain' → logprob: -7.1722331047058105
    6. 'chains' → logprob: -7.2972331047058105
    7. 's' → logprob: -8.047233581542969
    8. 'sé' → logprob: -8.172233581542969
    9. 'ensemble' → logprob: -8.922233581542969
    10. ' ensembles' → logprob: -9.172233581542969

Token 105: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.07890509814023972
    2. 't' → logprob: -2.8289051055908203
    3. 'î' → logprob: -4.32890510559082
    4. 'ins' → logprob: -6.82890510559082
    5. 'în' → logprob: -7.57890510559082
    6. 'ts' → logprob: -7.82890510559082
    7. 'tes' → logprob: -8.57890510559082
    8. 'Î' → logprob: -8.57890510559082
    9. 'ines' → logprob: -8.70390510559082
    10. 'îne' → logprob: -8.95390510559082

Token 106: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8124290108680725
    2. ',' → logprob: -1.6874289512634277
    3. '<|end|>' → logprob: -2.8124289512634277
    4. '.' → logprob: -2.9374289512634277
    5. '[' → logprob: -2.9374289512634277
    6. 'a' → logprob: -3.5624289512634277
    7. ' (' → logprob: -3.5624289512634277
    8. '(chain' → logprob: -3.6874289512634277
    9. ')' → logprob: -4.062428951263428
    10. '(product' → logprob: -4.187428951263428

Token 107: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39742597937583923
    2. ' for' → logprob: -1.3974260091781616
    3. 'product' → logprob: -3.272425889968872
    4. 'a' → logprob: -4.522426128387451
    5. ' product' → logprob: -4.772426128387451
    6. 'chain' → logprob: -5.147426128387451
    7. ' chain' → logprob: -5.772426128387451
    8. ' a' → logprob: -6.147426128387451
    9. 'token' → logprob: -6.647426128387451
    10. 'tokens' → logprob: -7.022426128387451

Token 108: ' c' (ID: 274)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.18687601387500763
    2. 'length' → logprob: -2.811876058578491
    3. ' i' → logprob: -4.186875820159912
    4. 'i' → logprob: -4.436875820159912
    5. ' sub' → logprob: -4.686875820159912
    6. ' substr' → logprob: -4.811875820159912
    7. 'sub' → logprob: -4.936875820159912
    8. ' subse' → logprob: -5.311875820159912
    9. ' _' → logprob: -5.436875820159912
    10. ' r' → logprob: -5.561875820159912

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015552344731986523
    2. 'in' → logprob: -4.390552520751953
    3. '  ' → logprob: -7.015552520751953
    4. 's' → logprob: -7.265552520751953
    5. ' ' → logprob: -7.265552520751953
    6. 'a' → logprob: -8.515552520751953
    7. ',' → logprob: -9.515552520751953
    8. ' i' → logprob: -9.515552520751953
    9. 'n' → logprob: -9.765552520751953
    10. '   ' → logprob: -10.265552520751953

Token 110: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8638232350349426
    2. 'chain' → logprob: -0.9888232350349426
    3. 'product' → logprob: -1.9888231754302979
    4. ' chain' → logprob: -3.488823175430298
    5. ' s' → logprob: -3.988823175430298
    6. 'range' → logprob: -4.863823413848877
    7. ' product' → logprob: -5.488823413848877
    8. 'acc' → logprob: -6.113823413848877
    9. 'com' → logprob: -6.613823413848877
    10. 'a' → logprob: -6.988823413848877

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06925002485513687
    2. ' in' → logprob: -3.4442501068115234
    3. ' :' → logprob: -3.9442501068115234
    4. ':
' → logprob: -4.819250106811523
    5. 'in' → logprob: -5.194250106811523
    6. '[' → logprob: -8.069250106811523
    7. ' :
' → logprob: -8.069250106811523
    8. ' ' → logprob: -8.194250106811523
    9. '[:' → logprob: -8.444250106811523
    10. '   ' → logprob: -8.819250106811523

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03315582126379013
    2. ' a' → logprob: -4.033155918121338
    3. 'a' → logprob: -4.783155918121338
    4. '    ' → logprob: -6.158155918121338
    5. '    
' → logprob: -6.533155918121338
    6. ' ans' → logprob: -7.533155918121338
    7. '
' → logprob: -7.783155918121338
    8. ' if' → logprob: -8.15815544128418
    9. ' for' → logprob: -8.28315544128418
    10. ':' → logprob: -8.65815544128418

Token 113: ' old' (ID: 2890)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.030118154361844063
    2. ' a' → logprob: -3.905118227005005
    3. '   ' → logprob: -5.030117988586426
    4. 'ans' → logprob: -6.155117988586426
    5. 'new' → logprob: -8.280117988586426
    6. ' new' → logprob: -8.655117988586426
    7. ' ans' → logprob: -8.655117988586426
    8. 'if' → logprob: -9.405117988586426
    9. ' ' → logprob: -10.405117988586426
    10. 'tmp' → logprob: -10.655117988586426

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33386728167533875
    2. '=' → logprob: -1.9588673114776611
    3. 'a' → logprob: -3.458867311477661
    4. ',' → logprob: -3.458867311477661
    5. 's' → logprob: -3.458867311477661
    6. '_' → logprob: -4.333867073059082
    7. '_ans' → logprob: -4.333867073059082
    8. '_a' → logprob: -5.208867073059082
    9. '_states' → logprob: -5.208867073059082
    10. 'ans' → logprob: -6.083867073059082

Token 115: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3485262989997864
    2. '{' → logprob: -1.9735262393951416
    3. 'ans' → logprob: -2.2235262393951416
    4. 'set' → logprob: -3.0985262393951416
    5. '[a' → logprob: -7.473526477813721
    6. 'list' → logprob: -7.598526477813721
    7. 'fro' → logprob: -8.598526000976562
    8. '[' → logprob: -9.473526000976562
    9. ' a' → logprob: -9.598526000976562
    10. '(ans' → logprob: -9.598526000976562

Token 116: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8240175843238831
    2. ' =' → logprob: -1.4490175247192383
    3. '|' → logprob: -1.9490175247192383
    4. '=' → logprob: -2.9490175247192383
    5. ' |' → logprob: -3.0740175247192383
    6. 'product' → logprob: -3.6990175247192383
    7. '   ' → logprob: -4.324017524719238
    8. ' product' → logprob: -4.574017524719238
    9. 'a' → logprob: -4.949017524719238
    10. '.union' → logprob: -5.074017524719238

Token 117: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36769649386405945
    2. 'a' → logprob: -1.3676965236663818
    3. '
' → logprob: -3.367696523666382
    4. ' a' → logprob: -4.117696285247803
    5. ' =' → logprob: -7.242696285247803
    6. '    
' → logprob: -7.242696285247803
    7. '=' → logprob: -8.742696762084961
    8. ',' → logprob: -8.867696762084961
    9. ' new' → logprob: -8.992696762084961
    10. 'new' → logprob: -9.242696762084961

Token 118: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.017203737050294876
    2. ' a' → logprob: -4.1422038078308105
    3. '   ' → logprob: -6.7672038078308105
    4. 'new' → logprob: -12.267203330993652
    5. ' ' → logprob: -12.767203330993652
    6. 'b' → logprob: -12.892203330993652
    7. ' new' → logprob: -13.017203330993652
    8. '
' → logprob: -14.017203330993652
    9. '    ' → logprob: -14.267203330993652
    10. '    
' → logprob: -14.267203330993652

Token 119: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020543057471513748
    2. ' =' → logprob: -3.895543098449707
    3. ',' → logprob: -14.395543098449707
    4. '=set' → logprob: -15.645543098449707
    5. ' ' → logprob: -16.27054214477539
    6. 'a' → logprob: -17.27054214477539
    7. '=

' → logprob: -17.27054214477539
    8. '＝' → logprob: -17.64554214477539
    9. '=new' → logprob: -17.64554214477539
    10. '.=' → logprob: -17.83304214477539

Token 120: ' fro' (ID: 16956)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.7749914526939392
    2. 'fro' → logprob: -0.8999914526939392
    3. '{' → logprob: -2.399991512298584
    4. 'chain' → logprob: -3.274991512298584
    5. 'product' → logprob: -7.399991512298584
    6. 'a' → logprob: -7.399991512298584
    7. ' set' → logprob: -7.899991512298584
    8. 'list' → logprob: -8.024991035461426
    9. '(set' → logprob: -8.274991035461426
    10. '{
' → logprob: -8.524991035461426

Token 121: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -1.2664456789934775e-06
    2. 'zes' → logprob: -13.875000953674316
    3. 'zent' → logprob: -16.500001907348633
    4. 'z' → logprob: -16.625001907348633
    5. 'vens' → logprob: -17.250001907348633
    6. 'zen' → logprob: -17.750001907348633
    7. 'zet' → logprob: -18.000001907348633
    8. '```' → logprob: -18.000001907348633
    9. 'zz' → logprob: -18.625001907348633
    10. 'sz' → logprob: -18.750001907348633

Token 122: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.3869186341762543
    2. 'set' → logprob: -1.1369186639785767
    3. 'Set' → logprob: -11.261919021606445
    4. 't' → logprob: -11.261919021606445
    5. 'st' → logprob: -12.761919021606445
    6. '(set' → logprob: -12.761919021606445
    7. '_set' → logprob: -12.886919021606445
    8. '{' → logprob: -13.011919021606445
    9. 'ets' → logprob: -13.261919021606445
    10. ' set' → logprob: -14.011919021606445

Token 123: '(set' (ID: 25904)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.34372204542160034
    2. '({' → logprob: -1.3437221050262451
    3. '([' → logprob: -4.093721866607666
    4. '('' → logprob: -5.968721866607666
    5. '((' → logprob: -6.093721866607666
    6. '(['' → logprob: -6.343721866607666
    7. '(c' → logprob: -6.343721866607666
    8. '(set' → logprob: -6.843721866607666
    9. '(' → logprob: -6.968721866607666
    10. '(x' → logprob: -7.093721866607666

Token 124: '(chain' (ID: 124348)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.8061087727546692
    2. '(chain' → logprob: -0.8061087727546692
    3. '(x' → logprob: -2.8061087131500244
    4. '(map' → logprob: -4.4311089515686035
    5. '().' → logprob: -4.5561089515686035
    6. '([' → logprob: -5.0561089515686035
    7. '(i' → logprob: -5.8061089515686035
    8. '(['' → logprob: -5.8061089515686035
    9. '((' → logprob: -5.9311089515686035
    10. '(p' → logprob: -6.5561089515686035

Token 125: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.10978394746780396
    2. '(*(' → logprob: -3.109783887863159
    3. '(*' → logprob: -3.359783887863159
    4. '((' → logprob: -4.609784126281738
    5. '(old' → logprob: -5.109784126281738
    6. '([' → logprob: -5.484784126281738
    7. '(' → logprob: -6.609784126281738
    8. '(map' → logprob: -6.734784126281738
    9. '(from' → logprob: -7.234784126281738
    10. '(a' → logprob: -7.359784126281738

Token 126: '_iter' (ID: 27043)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.38726040720939636
    2. '_iter' → logprob: -1.1372604370117188
    3. '(iter' → logprob: -8.387260437011719
    4. 'Iter' → logprob: -10.012260437011719
    5. 'Iterable' → logprob: -10.512260437011719
    6. 'it' → logprob: -10.637260437011719
    7. ' iterable' → logprob: -10.637260437011719
    8. ' iter' → logprob: -11.512260437011719
    9. 'iterator' → logprob: -11.887260437011719
    10. '([' → logprob: -12.762260437011719

Token 127: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.0014486834406852722
    2. 'ble' → logprob: -7.376448631286621
    3. 'table' → logprob: -7.626448631286621
    4. 'ables' → logprob: -8.876448631286621
    5. 'nable' → logprob: -10.126448631286621
    6. 'gable' → logprob: -10.251448631286621
    7. 'bles' → logprob: -10.376448631286621
    8. 'a' → logprob: -10.876448631286621
    9. '(a' → logprob: -10.876448631286621
    10. '(' → logprob: -11.501448631286621

Token 128: '(
' (ID: 1607)
  Prédit: '(product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.043377891182899475
    2. '(map' → logprob: -3.9183778762817383
    3. '((' → logprob: -4.043377876281738
    4. '([' → logprob: -5.918377876281738
    5. '(' → logprob: -7.293377876281738
    6. '(old' → logprob: -7.793377876281738
    7. 'product' → logprob: -8.668377876281738
    8. '(
' → logprob: -8.668377876281738
    9. '(p' → logprob: -8.793377876281738
    10. '(((' → logprob: -9.418377876281738

Token 129: '       ' (ID: 309)
  Prédit: '(product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.05397426337003708
    2. '(map' → logprob: -3.553974151611328
    3. 'product' → logprob: -4.053974151611328
    4. '((' → logprob: -5.928974151611328
    5. 'map' → logprob: -6.928974151611328
    6. '([' → logprob: -7.053974151611328
    7. '(com' → logprob: -7.428974151611328
    8. '(' → logprob: -7.553974151611328
    9. '(p' → logprob: -8.428974151611328
    10. '(chain' → logprob: -9.053974151611328

Token 130: ' (' (ID: 350)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.4895150065422058
    2. 'map' → logprob: -1.7395150661468506
    3. '(product' → logprob: -1.8645150661468506
    4. '(map' → logprob: -3.1145150661468506
    5. '[' → logprob: -5.7395148277282715
    6. '{' → logprob: -5.8645148277282715
    7. '(com' → logprob: -6.8645148277282715
    8. 'chain' → logprob: -7.3645148277282715
    9. '(' (adapté à ' (') → logprob: -7.4895148277282715
    10. '((' → logprob: -7.9895148277282715

Token 131: 'x' (ID: 87)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(map' → logprob: -1.3401942253112793
    2. 'map' → logprob: -1.7151942253112793
    3. '(p' → logprob: -1.9651942253112793
    4. '(x' → logprob: -2.5901942253112793
    5. '{' → logprob: -3.2151942253112793
    6. '(old' → logprob: -3.4651942253112793
    7. '('' → logprob: -3.7151942253112793
    8. 'p' → logprob: -3.7151942253112793
    9. '(f' → logprob: -3.9651942253112793
    10. 'old' → logprob: -4.090194225311279

Token 132: ',' (ID: 11)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5366690754890442
    2. '+' → logprob: -1.1616690158843994
    3. '+c' → logprob: -2.4116690158843994
    4. '+x' → logprob: -4.7866692543029785
    5. '+y' → logprob: -5.6616692543029785
    6. '+b' → logprob: -7.9116692543029785
    7. '+a' → logprob: -9.53666877746582
    8. ' ' → logprob: -9.78666877746582
    9. '+(' → logprob: -9.78666877746582
    10. ',' → logprob: -9.91166877746582

Token 133: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5235603451728821
    2. ' x' → logprob: -0.8985603451728821
    3. ' ' → logprob: -8.898560523986816
    4. '   ' → logprob: -9.523560523986816
    5. '  ' → logprob: -9.898560523986816
    6. '    ' → logprob: -10.523560523986816
    7. 'c' → logprob: -10.773560523986816
    8. '(x' → logprob: -10.898560523986816
    9. ')' → logprob: -11.148560523986816
    10. ' (' → logprob: -11.398560523986816

Token 134: ' +' (ID: 659)
  Prédit: '+c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.48288989067077637
    2. '+' → logprob: -1.4828898906707764
    3. ' +' → logprob: -1.8578898906707764
    4. 'c' → logprob: -11.607890129089355
    5. '+C' → logprob: -13.232890129089355
    6. '+x' → logprob: -13.232890129089355
    7. '+
' → logprob: -13.357890129089355
    8. ' ' → logprob: -13.857890129089355
    9. '＋' → logprob: -14.482890129089355
    10. ' ' → logprob: -14.482890129089355

Token 135: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0019299437990412116
    2. ' c' → logprob: -6.251929759979248
    3. ')c' → logprob: -14.501930236816406
    4. '   ' → logprob: -15.501930236816406
    5. ' ' → logprob: -16.126930236816406
    6. ')' → logprob: -16.251930236816406
    7. '	c' → logprob: -16.376930236816406
    8. '```' → logprob: -16.501930236816406
    9. 'str' → logprob: -17.001930236816406
    10. '
' → logprob: -17.189430236816406

Token 136: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015669701679144055
    2. ')
' → logprob: -9.25015640258789
    3. ' )' → logprob: -10.00015640258789
    4. '')' → logprob: -12.00015640258789
    5. '   ' → logprob: -12.62515640258789
    6. '))' → logprob: -12.75015640258789
    7. '  ' → logprob: -14.87515640258789
    8. 'for' → logprob: -14.87515640258789
    9. ' ' → logprob: -15.12515640258789
    10. '       ' → logprob: -15.62515640258789

Token 137: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17132705450057983
    2. 'for' → logprob: -2.1713271141052246
    3. ' for' → logprob: -3.1713271141052246
    4. '       ' → logprob: -7.296327114105225
    5. '   ' → logprob: -7.796327114105225
    6. ')
' → logprob: -9.296326637268066
    7. ' )' → logprob: -9.671326637268066
    8. '           ' → logprob: -9.921326637268066
    9. '    ' → logprob: -10.046326637268066
    10. '        ' → logprob: -10.171326637268066

Token 138: ' len' (ID: 4631)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10776104032993317
    2. 'c' → logprob: -2.7327611446380615
    3. ' x' → logprob: -3.6077611446380615
    4. 'len' → logprob: -5.357760906219482
    5. ' c' → logprob: -6.107760906219482
    6. '(x' → logprob: -6.607760906219482
    7. 'True' → logprob: -7.982760906219482
    8. '''' → logprob: -7.982760906219482
    9. 'not' → logprob: -8.48276138305664
    10. ' len' → logprob: -8.73276138305664

Token 139: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0005469570169225335
    2. 'x' → logprob: -7.750546932220459
    3. '(' → logprob: -10.125547409057617
    4. ' (' → logprob: -10.250547409057617
    5. '#' → logprob: -12.125547409057617
    6. '(
' → logprob: -12.625547409057617
    7. '<=' → logprob: -12.625547409057617
    8. '>' → logprob: -12.750547409057617
    9. '(c' → logprob: -12.750547409057617
    10. '((' → logprob: -13.000547409057617

Token 140: ')' (ID: 8)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.8934803605079651
    2. ' <' → logprob: -0.8934803605079651
    3. ')' → logprob: -2.2684803009033203
    4. '+' → logprob: -4.51848030090332
    5. '==' → logprob: -4.51848030090332
    6. '<=' → logprob: -4.64348030090332
    7. ')<' → logprob: -4.89348030090332
    8. ' ' → logprob: -5.01848030090332
    9. ' <=' → logprob: -5.14348030090332
    10. ' ==' → logprob: -5.51848030090332

Token 141: ' !=' (ID: 1666)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9866411089897156
    2. ' ' → logprob: -1.4866411685943604
    3. '<' → logprob: -2.1116411685943604
    4. '1' → logprob: -3.1116411685943604
    5. '=' → logprob: -3.6116411685943604
    6. '<=' → logprob: -3.6116411685943604
    7. ' <' → logprob: -3.8616411685943604
    8. 'len' → logprob: -4.236640930175781
    9. '<len' → logprob: -4.236640930175781
    10. '>' → logprob: -4.236640930175781

Token 142: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01993091218173504
    2. '1' → logprob: -5.269930839538574
    3. ' ' → logprob: -5.269930839538574
    4. '3' → logprob: -6.144930839538574
    5. '4' → logprob: -6.644930839538574
    6. '2' → logprob: -7.019930839538574
    7. 'n' → logprob: -7.144930839538574
    8. 'len' → logprob: -7.144930839538574
    9. '5' → logprob: -7.394930839538574
    10. '7' → logprob: -7.394930839538574

Token 143: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04503355547785759
    2. '1' → logprob: -4.0450334548950195
    3. '3' → logprob: -5.2950334548950195
    4. '2' → logprob: -5.5450334548950195
    5. '4' → logprob: -6.1700334548950195
    6. 'n' → logprob: -6.1700334548950195
    7. '10' → logprob: -6.2950334548950195
    8. '7' → logprob: -6.4200334548950195
    9. '5' → logprob: -6.5450334548950195
    10. 'len' → logprob: -6.6700334548950195

Token 144: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.47433578968048096
    2. 'else' → logprob: -0.974335789680481
    3. ' ' → logprob: -9.974335670471191
    4. '        ' → logprob: -10.099335670471191
    5. '    ' → logprob: -10.224335670471191
    6. '   ' → logprob: -10.474335670471191
    7. '       ' → logprob: -10.599335670471191
    8. '           ' → logprob: -11.099335670471191
    9. '         ' → logprob: -11.099335670471191
    10. '          ' → logprob: -11.474335670471191

Token 145: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.15845584869384766
    2. ' (' → logprob: -2.0334558486938477
    3. '()' → logprob: -4.658455848693848
    4. '(' → logprob: -6.658455848693848
    5. ' ()' → logprob: -6.908455848693848
    6. ' ' → logprob: -7.033455848693848
    7. '   ' → logprob: -7.783455848693848
    8. '[x' → logprob: -7.908455848693848
    9. '(y' → logprob: -8.033455848693848
    10. '{' → logprob: -8.783455848693848

Token 146: 'x' (ID: 87)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2972581684589386
    2. 'x' → logprob: -1.4222581386566162
    3. '()' → logprob: -4.922258377075195
    4. ')' → logprob: -5.672258377075195
    5. '())' → logprob: -5.672258377075195
    6. '()
' → logprob: -8.422258377075195
    7. '(' → logprob: -8.422258377075195
    8. '('',' → logprob: -8.422258377075195
    9. ' (' → logprob: -8.672258377075195
    10. 'tuple' → logprob: -9.047258377075195

Token 147: ',)' (ID: 83132)
  Prédit: ',)'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',)' → logprob: -0.26442644000053406
    2. ',' → logprob: -1.5144264698028564
    3. ')' → logprob: -5.264426231384277
    4. ',x' → logprob: -5.889426231384277
    5. ' ,' → logprob: -6.264426231384277
    6. ',)
' → logprob: -7.139426231384277
    7. ' for' → logprob: -7.389426231384277
    8. 'for' → logprob: -7.764426231384277
    9. '   ' → logprob: -9.139426231384277
    10. ' )' → logprob: -9.139426231384277

Token 148: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.18517576158046722
    2. ' for' → logprob: -1.8101757764816284
    3. '       ' → logprob: -5.935175895690918
    4. '   ' → logprob: -6.810175895690918
    5. 'else' → logprob: -7.185175895690918
    6. '           ' → logprob: -7.560175895690918
    7. ' else' → logprob: -9.060175895690918
    8. '
' → logprob: -9.685175895690918
    9. '    ' → logprob: -10.310175895690918
    10. '        ' → logprob: -10.310175895690918

Token 149: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02021120674908161
    2. ' x' → logprob: -4.020211219787598
    3. 'old' → logprob: -6.270211219787598
    4. ' old' → logprob: -8.770211219787598
    5. ' ' → logprob: -12.270211219787598
    6. 'y' → logprob: -13.020211219787598
    7. '   ' → logprob: -13.520211219787598
    8. '  ' → logprob: -14.020211219787598
    9. ' y' → logprob: -14.520211219787598
    10. '	x' → logprob: -14.645211219787598

Token 150: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.28133121132850647
    2. 'in' → logprob: -1.406331181526184
    3. 'old' → logprob: -8.906331062316895
    4. ' ' → logprob: -11.031331062316895
    5. ' old' → logprob: -11.281331062316895
    6. '
' → logprob: -12.781331062316895
    7. '  ' → logprob: -13.281331062316895
    8. ')' → logprob: -13.406331062316895
    9. '   ' → logprob: -13.468831062316895
    10. '_in' → logprob: -14.093831062316895

Token 151: ' old' (ID: 2890)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.02324780821800232
    2. ' old' → logprob: -3.773247718811035
    3. '   ' → logprob: -14.773247718811035
    4. 'chain' → logprob: -14.773247718811035
    5. ' ' → logprob: -14.898247718811035
    6. 'a' → logprob: -15.023247718811035
    7. '	old' → logprob: -15.398247718811035
    8. 'olds' → logprob: -16.14824867248535
    9. '  ' → logprob: -16.39824867248535
    10. '(old' → logprob: -16.64824867248535

Token 152: '
' (ID: 198)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.006934997625648975
    2. '))))' → logprob: -5.631935119628906
    3. '   ' → logprob: -6.381935119628906
    4. '
' → logprob: -7.256935119628906
    5. '))' → logprob: -7.881935119628906
    6. ')))
' → logprob: -8.256935119628906
    7. ')));' → logprob: -8.506935119628906
    8. ')' → logprob: -10.381935119628906
    9. '))))
' → logprob: -10.881935119628906
    10. '       ' → logprob: -10.881935119628906

Token 153: '   ' (ID: 271)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.004445550963282585
    2. '))))' → logprob: -6.254445552825928
    3. '))' → logprob: -6.504445552825928
    4. '   ' → logprob: -7.129445552825928
    5. ')))
' → logprob: -9.25444507598877
    6. ')));' → logprob: -9.75444507598877
    7. '
' → logprob: -11.25444507598877
    8. '       ' → logprob: -11.25444507598877
    9. ')' → logprob: -11.37944507598877
    10. ' ' → logprob: -11.50444507598877

Token 154: ' ' (ID: 220)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.002031657611951232
    2. '))' → logprob: -6.8770318031311035
    3. '))))' → logprob: -7.3770318031311035
    4. '   ' → logprob: -8.502031326293945
    5. ')))
' → logprob: -9.127031326293945
    6. ' ' → logprob: -10.752031326293945
    7. ')));' → logprob: -10.877031326293945
    8. ')' → logprob: -11.627031326293945
    9. ')))

' → logprob: -13.002031326293945
    10. '))).' → logprob: -13.252031326293945

Token 155: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.003228933084756136
    2. '))' → logprob: -7.003229141235352
    3. ')))
' → logprob: -7.003229141235352
    4. '))))' → logprob: -7.128229141235352
    5. '   ' → logprob: -7.878229141235352
    6. ')));' → logprob: -9.378229141235352
    7. ' ' → logprob: -10.003229141235352
    8. '
' → logprob: -10.378229141235352
    9. ')' → logprob: -11.003229141235352
    10. ')))

' → logprob: -11.378229141235352

Token 156: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5130167603492737
    2. '   ' → logprob: -1.138016700744629
    3. '<|end|>' → logprob: -3.263016700744629
    4. 'for' → logprob: -4.513016700744629
    5. '
' → logprob: -4.888016700744629
    6. ' for' → logprob: -5.513016700744629
    7. ')' → logprob: -5.763016700744629
    8. '(ans' → logprob: -5.763016700744629
    9. ' ans' → logprob: -6.013016700744629
    10. '...' → logprob: -6.013016700744629

Token 157: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0483187735080719
    2. 'for' → logprob: -3.423318862915039
    3. 'if' → logprob: -5.173318862915039
    4. '#' → logprob: -6.173318862915039
    5. 'a' → logprob: -6.548318862915039
    6. '<|end|>' → logprob: -6.548318862915039
    7. '...' → logprob: -6.923318862915039
    8. ')' → logprob: -7.673318862915039
    9. 'pass' → logprob: -7.798318862915039
    10. '   ' → logprob: -7.798318862915039

Token 158: ' |=' (ID: 19917)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.01666412502527237
    2. '.' → logprob: -4.141664028167725
    3. '.union' → logprob: -8.391664505004883
    4. '.add' → logprob: -8.516664505004883
    5. 'update' → logprob: -9.766664505004883
    6. '|' → logprob: -9.766664505004883
    7. ' |=' → logprob: -10.016664505004883
    8. '.=' → logprob: -10.516664505004883
    9. '.|' → logprob: -11.891664505004883
    10. '=' → logprob: -12.891664505004883

Token 159: ' set' (ID: 920)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019565867260098457
    2. '{' → logprob: -6.626956462860107
    3. ' a' → logprob: -7.501956462860107
    4. 'set' → logprob: -9.876956939697266
    5. ' {' → logprob: -11.501956939697266
    6. '{x' → logprob: -11.876956939697266
    7. '   ' → logprob: -12.626956939697266
    8. ' set' → logprob: -12.876956939697266
    9. '{
' → logprob: -13.751956939697266
    10. '(a' → logprob: -14.376956939697266

Token 160: '(map' (ID: 16946)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0017240844899788499
    2. '((' → logprob: -7.3767242431640625
    3. '(x' → logprob: -7.6267242431640625
    4. '(chain' → logprob: -7.7517242431640625
    5. 'a' → logprob: -9.876724243164062
    6. '(filter' → logprob: -10.251724243164062
    7. '({' → logprob: -10.876724243164062
    8. '(
' → logprob: -11.001724243164062
    9. '(ans' → logprob: -11.001724243164062
    10. '(' → logprob: -11.126724243164062

Token 161: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.6344093680381775
    2. '(str' → logprob: -1.3844094276428223
    3. '(f' → logprob: -2.2594094276428223
    4. '(len' → logprob: -2.3844094276428223
    5. '('' → logprob: -4.009409427642822
    6. '(tuple' → logprob: -6.134409427642822
    7. '(ord' → logprob: -6.884409427642822
    8. '(list' → logprob: -7.509409427642822
    9. '(hash' → logprob: -8.384408950805664
    10. '(int' → logprob: -8.884408950805664

Token 162: ' x' (ID: 1215)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.41722655296325684
    2. 'lambda' → logprob: -1.4172265529632568
    3. 'len' → logprob: -2.667226552963257
    4. '(len' → logprob: -3.792226552963257
    5. ' lambda' → logprob: -6.167226791381836
    6. 'str' → logprob: -6.542226791381836
    7. '(str' → logprob: -6.792226791381836
    8. '(f' → logprob: -7.542226791381836
    9. ' (' → logprob: -7.542226791381836
    10. '   ' → logprob: -8.042226791381836

Token 163: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009001323953270912
    2. ' :' → logprob: -5.2590012550354
    3. 'len' → logprob: -6.1340012550354
    4. ':int' → logprob: -7.1340012550354
    5. ':x' → logprob: -8.134001731872559
    6. ':str' → logprob: -8.384001731872559
    7. ':length' → logprob: -9.634001731872559
    8. ':(' → logprob: -10.009001731872559
    9. '(len' → logprob: -10.259001731872559
    10. ',len' → logprob: -10.509001731872559

Token 164: ' x' (ID: 1215)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.1795957088470459
    2. 'x' → logprob: -2.679595708847046
    3. 'lambda' → logprob: -3.054595708847046
    4. 'int' → logprob: -3.929595708847046
    5. '(lambda' → logprob: -5.054595947265625
    6. '(len' → logprob: -5.304595947265625
    7. 'print' → logprob: -5.804595947265625
    8. '(x' → logprob: -5.929595947265625
    9. 'str' → logprob: -6.429595947265625
    10. 's' → logprob: -6.429595947265625

Token 165: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3863806128501892
    2. '+' → logprob: -2.886380672454834
    3. 'len' → logprob: -3.011380672454834
    4. '[:' → logprob: -3.136380672454834
    5. '[::-' → logprob: -3.261380672454834
    6. '[' → logprob: -3.886380672454834
    7. ' +' → logprob: -4.011380672454834
    8. 'if' → logprob: -4.136380672454834
    9. '.__' → logprob: -4.386380672454834
    10. '[:-' → logprob: -4.511380672454834

Token 166: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.012816987000405788
    2. ''' → logprob: -5.137816905975342
    3. ' c' → logprob: -6.012816905975342
    4. 's' → logprob: -6.137816905975342
    5. '(c' → logprob: -7.637816905975342
    6. 'x' → logprob: -7.887816905975342
    7. '')' → logprob: -8.1378173828125
    8. 'str' → logprob: -8.2628173828125
    9. ''*' → logprob: -9.1378173828125
    10. 'chr' → logprob: -9.6378173828125

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004484119825065136
    2. ',a' → logprob: -6.254484176635742
    3. 'if' → logprob: -6.879484176635742
    4. ' if' → logprob: -6.879484176635742
    5. '   ' → logprob: -8.754484176635742
    6. 'a' → logprob: -9.129484176635742
    7. ' ,' → logprob: -9.754484176635742
    8. ',x' → logprob: -9.754484176635742
    9. '(),' → logprob: -10.879484176635742
    10. '       ' → logprob: -11.379484176635742

Token 168: ' filter' (ID: 6690)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6680641174316406
    2. 'old' → logprob: -0.9180641174316406
    3. 'filter' → logprob: -2.7930641174316406
    4. 'ans' → logprob: -4.043064117431641
    5. '[a' → logprob: -6.293064117431641
    6. '(filter' → logprob: -7.043064117431641
    7. '(ans' → logprob: -7.043064117431641
    8. ' old' → logprob: -7.293064117431641
    9. '(old' → logprob: -7.293064117431641
    10. '(a' → logprob: -7.293064117431641

Token 169: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0006735934875905514
    2. '(len' → logprob: -7.375673770904541
    3. 'lambda' → logprob: -10.500673294067383
    4. '(' → logprob: -11.625673294067383
    5. '(None' → logprob: -12.000673294067383
    6. ' (' → logprob: -13.625673294067383
    7. '(
' → logprob: -13.625673294067383
    8. 'len' → logprob: -14.500673294067383
    9. '   ' → logprob: -14.625673294067383
    10. '
' → logprob: -14.750673294067383

Token 170: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.2954334616661072
    2. 'lambda' → logprob: -2.295433521270752
    3. ' x' → logprob: -2.295433521270752
    4. ' lambda' → logprob: -3.170433521270752
    5. '(lambda' → logprob: -4.670433521270752
    6. 'len' → logprob: -6.170433521270752
    7. '=lambda' → logprob: -8.170433044433594
    8. ' len' → logprob: -8.920433044433594
    9. '   ' → logprob: -9.295433044433594
    10. '(x' → logprob: -9.420433044433594

Token 171: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04859986528754234
    2. '=lambda' → logprob: -3.2985999584198
    3. 'len' → logprob: -5.548599720001221
    4. '=len' → logprob: -5.798599720001221
    5. 'lambda' → logprob: -6.298599720001221
    6. '=' → logprob: -6.923599720001221
    7. '(lambda' → logprob: -8.423600196838379
    8. ' :' → logprob: -8.548600196838379
    9. '(len' → logprob: -8.798600196838379
    10. '<len' → logprob: -9.423600196838379

Token 172: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.055059660226106644
    2. 'lambda' → logprob: -2.9300596714019775
    3. ' len' → logprob: -9.555059432983398
    4. ' lambda' → logprob: -9.680059432983398
    5. '(lambda' → logprob: -10.430059432983398
    6. '(len' → logprob: -11.930059432983398
    7. '
' → logprob: -13.305059432983398
    8. 'x' → logprob: -13.680059432983398
    9. '2' → logprob: -13.930059432983398
    10. 'lam' → logprob: -14.055059432983398

Token 173: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -5.466968650580384e-05
    2. 'x' → logprob: -10.250054359436035
    3. '(' → logprob: -11.500054359436035
    4. '(lambda' → logprob: -11.750054359436035
    5. '(len' → logprob: -14.250054359436035
    6. ' (' → logprob: -15.000054359436035
    7. 'lambda' → logprob: -16.75005531311035
    8. ' x' → logprob: -17.25005531311035
    9. '<x' → logprob: -17.62505531311035
    10. '(
' → logprob: -17.75005531311035

Token 174: ')' (ID: 8)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9396596550941467
    2. '!=' → logprob: -1.564659595489502
    3. '==' → logprob: -1.689659595489502
    4. ')' → logprob: -2.814659595489502
    5. ' !=' → logprob: -3.064659595489502
    6. '(x' → logprob: -3.064659595489502
    7. ' x' → logprob: -3.939659595489502
    8. ' ==' → logprob: -4.314659595489502
    9. '<' → logprob: -4.564659595489502
    10. '<=' → logprob: -5.814659595489502

Token 175: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.32960402965545654
    2. ' ==' → logprob: -2.329604148864746
    3. '(x' → logprob: -2.579604148864746
    4. '!=' → logprob: -3.079604148864746
    5. '<' → logprob: -3.829604148864746
    6. ' !=' → logprob: -4.829604148864746
    7. '()==' → logprob: -4.954604148864746
    8. 'x' → logprob: -4.954604148864746
    9. '<=' → logprob: -5.704604148864746
    10. '<x' → logprob: -6.079604148864746

Token 176: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23043721914291382
    2. '2' → logprob: -1.6054372787475586
    3. ' ' → logprob: -5.480437278747559
    4. '0' → logprob: -7.105437278747559
    5. '3' → logprob: -11.355437278747559
    6. '   ' → logprob: -11.730437278747559
    7. '  ' → logprob: -13.730437278747559
    8. '(' → logprob: -14.667937278747559
    9. '```' → logprob: -15.417937278747559
    10. '           ' → logprob: -15.480437278747559

Token 177: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09054747223854065
    2. '2' → logprob: -2.465547561645508
    3. '0' → logprob: -7.090547561645508
    4. ' ' → logprob: -7.215547561645508
    5. '3' → logprob: -10.590547561645508
    6. '   ' → logprob: -11.840547561645508
    7. '  ' → logprob: -13.653047561645508
    8. '
' → logprob: -13.778047561645508
    9. '4' → logprob: -15.215547561645508
    10. '```' → logprob: -15.215547561645508

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00782522652298212
    2. ',a' → logprob: -5.5078253746032715
    3. 'a' → logprob: -6.3828253746032715
    4. 'old' → logprob: -6.8828253746032715
    5. '   ' → logprob: -7.6328253746032715
    6. ' ,' → logprob: -8.257824897766113
    7. '(old' → logprob: -9.632824897766113
    8. ' old' → logprob: -9.632824897766113
    9. ')),' → logprob: -10.257824897766113
    10. ' a' → logprob: -10.757824897766113

Token 179: ' old' (ID: 2890)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.32880404591560364
    2. 'old' → logprob: -1.3288040161132812
    3. 'ans' → logprob: -5.078804016113281
    4. ' a' → logprob: -5.453804016113281
    5. ' old' → logprob: -5.453804016113281
    6. ' ans' → logprob: -7.703804016113281
    7. '   ' → logprob: -8.953804016113281
    8. ' ' → logprob: -11.453804016113281
    9. 'list' → logprob: -11.828804016113281
    10. 'answer' → logprob: -12.828804016113281

Token 180: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.38702404499053955
    2. ')))' → logprob: -1.1370240449905396
    3. '))))' → logprob: -9.13702392578125
    4. '))
' → logprob: -10.88702392578125
    5. ')))
' → logprob: -11.38702392578125
    6. ')));' → logprob: -12.01202392578125
    7. ')' → logprob: -12.63702392578125
    8. ' ))' → logprob: -13.63702392578125
    9. ' ' → logprob: -13.88702392578125
    10. '   ' → logprob: -14.01202392578125

Token 181: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006762025412172079
    2. 'for' → logprob: -5.6317620277404785
    3. ')' → logprob: -6.0067620277404785
    4. '#' → logprob: -8.13176155090332
    5. 'ans' → logprob: -8.63176155090332
    6. '<|end|>' → logprob: -9.88176155090332
    7. 'if' → logprob: -10.13176155090332
    8. 'a' → logprob: -11.00676155090332
    9. '...' → logprob: -11.13176155090332
    10. '```' → logprob: -11.50676155090332

Token 182: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010478908196091652
    2. 'for' → logprob: -4.635478973388672
    3. 'result' → logprob: -8.010478973388672
    4. 'ans' → logprob: -8.385478973388672
    5. 'if' → logprob: -10.010478973388672
    6. ' for' → logprob: -10.635478973388672
    7. ' print' → logprob: -10.635478973388672
    8. 'answer' → logprob: -10.635478973388672
    9. '#' → logprob: -11.010478973388672
    10. 'return' → logprob: -11.510478973388672

Token 183: ' inutile' (ID: 157748)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8958724141120911
    2. 'total' → logprob: -1.3958723545074463
    3. 'res' → logprob: -1.8958723545074463
    4. 'count' → logprob: -3.1458723545074463
    5. 'sum' → logprob: -3.2708723545074463
    6. 'print' → logprob: -4.020872592926025
    7. 'answer' → logprob: -4.020872592926025
    8. 'max' → logprob: -4.145872592926025
    9. 'ans' → logprob: -4.520872592926025
    10. '#' → logprob: -4.770872592926025

Token 184: 'ment' (ID: 508)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06427697092294693
    2. '#' → logprob: -3.689276933670044
    3. 'result' → logprob: -3.689276933670044
    4. 'sum' → logprob: -5.314277172088623
    5. 'total' → logprob: -6.439277172088623
    6. 'ans' → logprob: -6.439277172088623
    7. 'for' → logprob: -7.064277172088623
    8. 'max' → logprob: -7.689277172088623
    9. '#print' → logprob: -7.939277172088623
    10. '=' → logprob: -7.939277172088623

Token 185: ' ver' (ID: 1245)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7367059588432312
    2. 'sum' → logprob: -2.236706018447876
    3. 'ans' → logprob: -3.111706018447876
    4. 'for' → logprob: -3.236706018447876
    5. ' ans' → logprob: -3.361706018447876
    6. 'print' → logprob: -3.486706018447876
    7. '_' → logprob: -3.736706018447876
    8. 'max' → logprob: -3.986706018447876
    9. 'len' → logprob: -3.986706018447876
    10. 'final' → logprob: -4.111705780029297

Token 186: 'be' (ID: 1464)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6110255122184753
    2. 'ifier' → logprob: -1.7360255718231201
    3. 'ification' → logprob: -2.61102557182312
    4. 'set' → logprob: -3.23602557182312
    5. 'sum' → logprob: -3.23602557182312
    6. 'if' → logprob: -3.73602557182312
    7. 'sus' → logprob: -4.111025333404541
    8. 'ifie' → logprob: -4.361025333404541
    9. 'ifié' → logprob: -4.361025333404541
    10. 'batim' → logprob: -4.486025333404541

Token 187: 'ux' (ID: 1778)
  Prédit: 'ux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ux' → logprob: -7.5649528298527e-05
    2. 'use' → logprob: -10.125075340270996
    3. 'eux' → logprob: -10.625075340270996
    4. 't' → logprob: -13.250075340270996
    5. '```' → logprob: -13.250075340270996
    6. 'u' → logprob: -13.375075340270996
    7. 'uxe' → logprob: -13.375075340270996
    8. '#' → logprob: -13.625075340270996
    9. 'x' → logprob: -13.875075340270996
    10. 'se' → logprob: -14.875075340270996

Token 188: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13827693462371826
    2. 'result' → logprob: -3.013277053833008
    3. 'ans' → logprob: -3.513277053833008
    4. ' =' → logprob: -4.513277053833008
    5. 'answer' → logprob: -5.013277053833008
    6. '=' → logprob: -5.263277053833008
    7. 'total' → logprob: -5.513277053833008
    8. 'res' → logprob: -5.513277053833008
    9. 'sum' → logprob: -5.513277053833008
    10. 'len' → logprob: -6.138277053833008

Token 189: ' la' (ID: 557)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.48836392164230347
    2. 'len' → logprob: -1.2383639812469482
    3. 'sum' → logprob: -2.4883639812469482
    4. 'ans' → logprob: -4.988363742828369
    5. 'min' → logprob: -6.113363742828369
    6. 'reduce' → logprob: -6.488363742828369
    7. ' max' → logprob: -6.988363742828369
    8. ' len' → logprob: -7.863363742828369
    9. '(len' → logprob: -8.113364219665527
    10. 'result' → logprob: -8.488364219665527

Token 190: ' taille' (ID: 41644)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.7657773494720459
    2. 'max' → logprob: -1.015777349472046
    3. 'long' → logprob: -2.265777349472046
    4. 's' → logprob: -4.390777587890625
    5. 'sum' → logprob: -4.390777587890625
    6. 'tail' → logprob: -4.640777587890625
    7. 'ré' → logprob: -5.015777587890625
    8. 'result' → logprob: -5.390777587890625
    9. 'plus' → logprob: -5.390777587890625
    10. 'rés' → logprob: -6.015777587890625

Token 191: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3158298432826996
    2. 'ans' → logprob: -1.690829873085022
    3. '=' → logprob: -3.0658297538757324
    4. '(ans' → logprob: -4.190829753875732
    5. ' =' → logprob: -4.690829753875732
    6. 'answer' → logprob: -5.690829753875732
    7. 'len' → logprob: -5.690829753875732
    8. '(len' → logprob: -5.940829753875732
    9. '=len' → logprob: -6.065829753875732
    10. 'result' → logprob: -6.440829753875732

Token 192: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002439266536384821
    2. 'len' → logprob: -7.127439498901367
    3. 'ans' → logprob: -7.127439498901367
    4. 'result' → logprob: -7.752439498901367
    5. 'answer' → logprob: -8.502439498901367
    6. 'n' → logprob: -10.627439498901367
    7. '_' → logprob: -10.752439498901367
    8. 'res' → logprob: -11.127439498901367
    9. ' =' → logprob: -11.252439498901367
    10. 'l' → logprob: -11.377439498901367

Token 193: '(re' (ID: 8178)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0006968271918594837
    2. '(' → logprob: -7.625696659088135
    3. '(sum' → logprob: -9.250697135925293
    4. '(max' → logprob: -9.250697135925293
    5. 'len' → logprob: -11.875697135925293
    6. '('' → logprob: -12.625697135925293
    7. '(ans' → logprob: -12.750697135925293
    8. '((' → logprob: -13.375697135925293
    9. ' (' → logprob: -13.625697135925293
    10. ' len' → logprob: -15.625697135925293

Token 194: 'duce' (ID: 21375)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9038719534873962
    2. 'duce' → logprob: -1.153872013092041
    3. 'pr' → logprob: -1.903872013092041
    4. 'd' → logprob: -2.153872013092041
    5. 'du' → logprob: -5.778872013092041
    6. 'duced' → logprob: -6.403872013092041
    7. 's' → logprob: -6.778872013092041
    8. 'sum' → logprob: -6.903872013092041
    9. 'm' → logprob: -7.153872013092041
    10. 'f' → logprob: -7.153872013092041

Token 195: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.020659716799855232
    2. '(len' → logprob: -4.020659923553467
    3. '(operator' → logprob: -6.270659923553467
    4. '(' → logprob: -7.645659923553467
    5. '(int' → logprob: -9.770659446716309
    6. '((' → logprob: -10.020659446716309
    7. '(
' → logprob: -11.020659446716309
    8. '(max' → logprob: -11.395659446716309
    9. 'lambda' → logprob: -13.395659446716309
    10. ' (' → logprob: -13.395659446716309

Token 196: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6321547627449036
    2. ' x' → logprob: -1.5071547031402588
    3. ' acc' → logprob: -2.007154703140259
    4. 'a' → logprob: -2.632154703140259
    5. ' a' → logprob: -4.007154941558838
    6. 'acc' → logprob: -4.382154941558838
    7. ' lambda' → logprob: -5.257154941558838
    8. 'lambda' → logprob: -5.382154941558838
    9. ' ac' → logprob: -9.75715446472168
    10. ' ' → logprob: -9.88215446472168

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007476831669919193
    2. 'lambda' → logprob: -7.3757476806640625
    3. ',x' → logprob: -9.750747680664062
    4. 'a' → logprob: -10.375747680664062
    5. ' ,' → logprob: -11.000747680664062
    6. 'x' → logprob: -12.875747680664062
    7. '=lambda' → logprob: -13.000747680664062
    8. ',y' → logprob: -13.250747680664062
    9. '_,' → logprob: -13.750747680664062
    10. '1' → logprob: -13.750747680664062

Token 198: ' _:' (ID: 133568)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005248106550425291
    2. ' y' → logprob: -5.255248069763184
    3. 'acc' → logprob: -11.880248069763184
    4. 'x' → logprob: -13.130248069763184
    5. '   ' → logprob: -13.630248069763184
    6. 'a' → logprob: -13.880248069763184
    7. 'lambda' → logprob: -13.880248069763184
    8. ' ' → logprob: -14.505248069763184
    9. '    ' → logprob: -14.755248069763184
    10. '  ' → logprob: -14.880248069763184

Token 199: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.007964316755533218
    2. ' x' → logprob: -4.882964134216309
    3. 'lambda' → logprob: -8.007964134216309
    4. ' lambda' → logprob: -11.132964134216309
    5. 'max' → logprob: -13.007964134216309
    6. '(x' → logprob: -13.257964134216309
    7. 'int' → logprob: -13.382964134216309
    8. '   ' → logprob: -13.632964134216309
    9. '(lambda' → logprob: -14.382964134216309
    10. 'operator' → logprob: -14.507964134216309

Token 200: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012151814065873623
    2. ' +' → logprob: -4.512151718139648
    3. '+x' → logprob: -7.762151718139648
    4. ',' → logprob: -8.012151718139648
    5. ':' → logprob: -9.012151718139648
    6. '+:' → logprob: -9.387151718139648
    7. '+
' → logprob: -10.137151718139648
    8. '+,' → logprob: -10.387151718139648
    9. '```' → logprob: -11.637151718139648
    10. 'plus' → logprob: -11.887151718139648

Token 201: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002988776541315019
    2. ' ' → logprob: -8.125298500061035
    3. 'len' → logprob: -13.875298500061035
    4. '   ' → logprob: -14.000298500061035
    5. '  ' → logprob: -15.250298500061035
    6. '2' → logprob: -15.750298500061035
    7. '_' → logprob: -16.37529945373535
    8. 'int' → logprob: -16.56279945373535
    9. '    ' → logprob: -16.68779945373535
    10. '0' → logprob: -17.12529945373535

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001414426224073395
    2. ' ' → logprob: -9.250141143798828
    3. 'len' → logprob: -10.250141143798828
    4. '   ' → logprob: -12.875141143798828
    5. 'int' → logprob: -13.375141143798828
    6. 'ans' → logprob: -14.312641143798828
    7. '  ' → logprob: -14.312641143798828
    8. '2' → logprob: -14.312641143798828
    9. 'lambda' → logprob: -14.375141143798828
    10. '
' → logprob: -14.812641143798828

Token 203: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.729906196298543e-06
    2. ' ,' → logprob: -11.875009536743164
    3. 'ans' → logprob: -14.250009536743164
    4. ' ans' → logprob: -14.375009536743164
    5. '(ans' → logprob: -15.250009536743164
    6. ',a' → logprob: -15.250009536743164
    7. ',
' → logprob: -15.250009536743164
    8. '   ' → logprob: -15.375009536743164
    9. ',len' → logprob: -16.750009536743164
    10. ',[' → logprob: -16.875009536743164

Token 204: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.003201004583388567
    2. ' ans' → logprob: -5.753201007843018
    3. '(ans' → logprob: -11.50320053100586
    4. 'a' → logprob: -12.50320053100586
    5. '	ans' → logprob: -12.50320053100586
    6. '   ' → logprob: -13.25320053100586
    7. ' ' → logprob: -14.00320053100586
    8. 'set' → logprob: -14.00320053100586
    9. 'filter' → logprob: -14.50320053100586
    10. '  ' → logprob: -15.12820053100586

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8550976164988242e-05
    2. ' ,' → logprob: -11.000018119812012
    3. '))' → logprob: -14.375018119812012
    4. ',''' → logprob: -14.625018119812012
    5. '(),' → logprob: -15.625018119812012
    6. ' ' → logprob: -16.000019073486328
    7. ')' → logprob: -16.500019073486328
    8. ',set' → logprob: -16.625019073486328
    9. 'set' → logprob: -16.625019073486328
    10. ',"' → logprob: -16.875019073486328

Token 206: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.816591434879228e-05
    2. ' ' → logprob: -9.37508773803711
    3. '1' → logprob: -13.37508773803711
    4. '   ' → logprob: -15.00008773803711
    5. '-' → logprob: -15.18758773803711
    6. '2' → logprob: -15.75008773803711
    7. 'len' → logprob: -16.31258773803711
    8. '  ' → logprob: -17.00008773803711
    9. '           ' → logprob: -17.00008773803711
    10. ')' → logprob: -17.06258773803711

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.333223139634356e-05
    2. ' ' → logprob: -10.500033378601074
    3. '1' → logprob: -12.750033378601074
    4. '-' → logprob: -14.500033378601074
    5. 'set' → logprob: -15.000033378601074
    6. 'len' → logprob: -15.187533378601074
    7. '   ' → logprob: -15.375033378601074
    8. '2' → logprob: -15.437533378601074
    9. 'int' → logprob: -15.937533378601074
    10. ')' → logprob: -16.500032424926758

Token 208: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.12694691121578217
    2. ')' → logprob: -2.1269469261169434
    3. ')))' → logprob: -11.751946449279785
    4. '))
' → logprob: -12.501946449279785
    5. ')
' → logprob: -12.626946449279785
    6. '),' → logprob: -14.126946449279785
    7. ' )' → logprob: -14.251946449279785
    8. ' ))' → logprob: -14.251946449279785
    9. ')+' → logprob: -14.376946449279785
    10. '+' → logprob: -15.001946449279785


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 206
Tokens correctement prédits (1ère position, stricte): 52
Tokens correctement prédits (1ère position, avec adaptation): 54
Tokens correctement prédits (top 10): 138
Précision stricte (1ère position): 25.24%
Précision adaptée (1ère position): 26.21%
Précision (top 10): 66.99%
================================================================================
