================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
v = int(input())
P = dict(); Q = dict()

for z in range(v):
    *a, b = input().split()
    Q[a[0]] = z
    P[z] = int(b)

Y = input()
result = sum(map(lambda x: P[x], range(Q[Y], v)))
if Q[Y] in P:
    result -= P[Q[Y]]
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'v' (ID: 85)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002220914699137211
    2. 'v' → logprob: -6.37722110748291
    3. ''' → logprob: -7.87722110748291
    4. '('' → logprob: -9.87722110748291
    5. '```' → logprob: -10.50222110748291
    6. '(v' → logprob: -11.12722110748291
    7. '(
' → logprob: -11.62722110748291
    8. '[' → logprob: -12.12722110748291
    9. '("("' → logprob: -12.25222110748291
    10. '`' → logprob: -12.25222110748291

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05521894991397858
    2. ')' → logprob: -3.4302189350128174
    3. '()' → logprob: -3.9302189350128174
    4. '())' → logprob: -7.3052191734313965
    5. '(
' → logprob: -8.180218696594238
    6. '('' → logprob: -8.930218696594238
    7. '(()' → logprob: -9.430218696594238
    8. '```' → logprob: -9.430218696594238
    9. ''' → logprob: -9.930218696594238
    10. '))' → logprob: -10.055218696594238

Token 5: 'P' (ID: 47)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3849503695964813
    2. 'if' → logprob: -1.7599503993988037
    3. '%' → logprob: -2.5099503993988037
    4. '*' → logprob: -3.1349503993988037
    5. 'i' → logprob: -4.759950160980225
    6. 'v' → logprob: -5.384950160980225
    7. ' if' → logprob: -6.509950160980225
    8. '>' → logprob: -6.509950160980225
    9. '+
' → logprob: -6.509950160980225
    10. '\n' → logprob: -6.634950160980225

Token 6: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.21256528794765472
    2. '=' → logprob: -2.2125651836395264
    3. 'v' → logprob: -3.8375651836395264
    4. ' =' → logprob: -4.0875654220581055
    5. '*' → logprob: -4.5875654220581055
    6. '(' → logprob: -4.8375654220581055
    7. '%' → logprob: -5.4625654220581055
    8. 'R' → logprob: -5.5875654220581055
    9. '+' → logprob: -5.8375654220581055
    10. '#' → logprob: -5.9625654220581055

Token 7: ' dict' (ID: 11878)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.7122185826301575
    2. ' v' → logprob: -0.8372185826301575
    3. ' ' → logprob: -3.4622185230255127
    4. '0' → logprob: -4.087218761444092
    5. '1' → logprob: -4.462218761444092
    6. 'int' → logprob: -5.212218761444092
    7. '100' → logprob: -6.337218761444092
    8. ' int' → logprob: -6.337218761444092
    9. '3' → logprob: -6.962218761444092
    10. '2' → logprob: -6.962218761444092

Token 8: '();' (ID: 4177)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14453108608722687
    2. '()' → logprob: -2.019531011581421
    3. '[' → logprob: -7.64453125
    4. '([(' → logprob: -7.76953125
    5. ')' → logprob: -9.01953125
    6. '())' → logprob: -9.26953125
    7. '([' → logprob: -9.26953125
    8. ' (' → logprob: -9.39453125
    9. '[(' → logprob: -9.39453125
    10. '.setdefault' → logprob: -9.51953125

Token 9: ' Q' (ID: 1486)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08953694254159927
    2. 'v' → logprob: -3.0895369052886963
    3. ' for' → logprob: -4.339537143707275
    4. '[' → logprob: -4.464537143707275
    5. ' ' → logprob: -4.839537143707275
    6. '\n' → logprob: -6.089537143707275
    7. '(' → logprob: -6.464537143707275
    8. 'f' → logprob: -7.339537143707275
    9. 'a' → logprob: -7.839537143707275
    10. 'i' → logprob: -7.964537143707275

Token 10: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3216423988342285
    2. '=' → logprob: -1.3216423988342285
    3. '[' → logprob: -4.8216423988342285
    4. '[]' → logprob: -9.82164192199707
    5. ' ' → logprob: -9.94664192199707
    6. '.' → logprob: -10.07164192199707
    7. '_' → logprob: -10.69664192199707
    8. '(' → logprob: -10.94664192199707
    9. 'a' → logprob: -11.82164192199707
    10. '={}' → logprob: -11.82164192199707

Token 11: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.23528511822223663
    2. 'dict' → logprob: -1.6102851629257202
    3. '[]' → logprob: -4.98528528213501
    4. 'set' → logprob: -6.86028528213501
    5. ' {}' → logprob: -7.48528528213501
    6. ' dict' → logprob: -7.61028528213501
    7. '{' → logprob: -7.98528528213501
    8. 'list' → logprob: -8.485284805297852
    9. 'default' → logprob: -9.485284805297852
    10. ' []' → logprob: -9.860284805297852

Token 12: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00022999993234407157
    2. '(' → logprob: -9.250229835510254
    3. '();' → logprob: -9.875229835510254
    4. '()`' → logprob: -10.750229835510254
    5. '())' → logprob: -11.250229835510254
    6. '()

' → logprob: -11.875229835510254
    7. '()<' → logprob: -11.875229835510254
    8. '()]' → logprob: -12.000229835510254
    9. '`()' → logprob: -12.000229835510254
    10. '()\' → logprob: -12.375229835510254

Token 13: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005656790919601917
    2. 'v' → logprob: -5.755656719207764
    3. 'f' → logprob: -7.255656719207764
    4. ' for' → logprob: -7.505656719207764
    5. 'a' → logprob: -7.880656719207764
    6. 'n' → logprob: -8.380657196044922
    7. 'p' → logprob: -8.630657196044922
    8. 'i' → logprob: -9.130657196044922
    9. 'P' → logprob: -9.880657196044922
    10. 'x' → logprob: -10.005657196044922

Token 14: ' z' (ID: 579)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016069678589701653
    2. ' i' → logprob: -4.3910698890686035
    3. ' v' → logprob: -6.0160698890686035
    4. ' _' → logprob: -7.0160698890686035
    5. '  ' → logprob: -8.891069412231445
    6. ' x' → logprob: -10.641069412231445
    7. 'i' → logprob: -11.641069412231445
    8. '_' → logprob: -11.766069412231445
    9. 'v' → logprob: -11.891069412231445
    10. ' t' → logprob: -12.391069412231445

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.053928524255752563
    2. 'in' → logprob: -3.5539286136627197
    3. ' ' → logprob: -3.8039286136627197
    4. '  ' → logprob: -7.553928375244141
    5. '_' → logprob: -8.05392837524414
    6. 'n' → logprob: -8.67892837524414
    7. ' i' → logprob: -8.80392837524414
    8. ',' → logprob: -9.30392837524414
    9. '   ' → logprob: -9.42892837524414
    10. 'z' → logprob: -9.80392837524414

Token 16: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.11300885677337646
    2. 'range' → logprob: -2.238008975982666
    3. ' v' → logprob: -8.863008499145508
    4. 'v' → logprob: -10.738008499145508
    5. ' ' → logprob: -11.613008499145508
    6. '(range' → logprob: -12.238008499145508
    7. '	range' → logprob: -12.613008499145508
    8. ' P' → logprob: -13.863008499145508
    9. ' xrange' → logprob: -14.238008499145508
    10. '  ' → logprob: -14.363008499145508

Token 17: '(v' (ID: 6932)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01525077037513256
    2. '(v' → logprob: -4.2652506828308105
    3. '(len' → logprob: -7.0152506828308105
    4. ' (' → logprob: -8.890251159667969
    5. '(n' → logprob: -10.265251159667969
    6. '(z' → logprob: -12.390251159667969
    7. '(
' → logprob: -13.015251159667969
    8. '((' → logprob: -13.015251159667969
    9. '(s' → logprob: -13.515251159667969
    10. '(length' → logprob: -13.640251159667969

Token 18: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01522693783044815
    2. ')' → logprob: -4.5152268409729
    3. '+' → logprob: -5.8902268409729
    4. ' ):' → logprob: -6.7652268409729
    5. '):
' → logprob: -9.390227317810059
    6. ':' → logprob: -9.390227317810059
    7. ',' → logprob: -10.515227317810059
    8. ' +' → logprob: -10.640227317810059
    9. ' )' → logprob: -10.890227317810059
    10. '**' → logprob: -13.390227317810059

Token 19: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7991982102394104
    2. '    ' → logprob: -1.2991981506347656
    3. '   ' → logprob: -1.4241981506347656
    4. ' i' → logprob: -4.549198150634766
    5. ' s' → logprob: -5.674198150634766
    6. ' P' → logprob: -6.174198150634766
    7. ' n' → logprob: -6.174198150634766
    8. '    
' → logprob: -6.549198150634766
    9. ' )' → logprob: -6.674198150634766
    10. ' ind' → logprob: -6.799198150634766

Token 20: ' *' (ID: 425)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.9901029467582703
    2. ' s' → logprob: -2.240103006362915
    3. ' key' → logprob: -2.240103006362915
    4. '   ' → logprob: -2.240103006362915
    5. ' n' → logprob: -3.115103006362915
    6. ' i' → logprob: -3.490103006362915
    7. ' x' → logprob: -3.615103006362915
    8. 'key' → logprob: -3.740103006362915
    9. ' k' → logprob: -4.115102767944336
    10. ' ' → logprob: -4.365102767944336

Token 21: 'a' (ID: 64)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0985995531082153
    2. ' key' → logprob: -2.223599433898926
    3. 'x' → logprob: -2.473599433898926
    4. ' x' → logprob: -2.723599433898926
    5. 'key' → logprob: -2.723599433898926
    6. ' line' → logprob: -3.098599433898926
    7. ' n' → logprob: -3.348599433898926
    8. ' ' → logprob: -3.473599433898926
    9. 'k' → logprob: -3.598599433898926
    10. 'n' → logprob: -3.723599433898926

Token 22: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.273703396320343
    2. '=' → logprob: -1.6487033367156982
    3. ',' → logprob: -3.2737033367156982
    4. ')' → logprob: -6.398703575134277
    5. ',a' → logprob: -6.898703575134277
    6. '.append' → logprob: -7.023703575134277
    7. '[' → logprob: -7.148703575134277
    8. ' ,' → logprob: -7.398703575134277
    9. '   ' → logprob: -7.398703575134277
    10. 'pp' → logprob: -7.523703575134277

Token 23: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3294857144355774
    2. '=' → logprob: -1.9544856548309326
    3. '_=' → logprob: -2.8294856548309326
    4. ' b' → logprob: -3.4544856548309326
    5. ' =' → logprob: -3.9544856548309326
    6. 'n' → logprob: -4.829485893249512
    7. '_' → logprob: -5.204485893249512
    8. 'x' → logprob: -5.329485893249512
    9. 's' → logprob: -6.454485893249512
    10. 'k' → logprob: -6.579485893249512

Token 24: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47423267364501953
    2. ' =' → logprob: -0.9742326736450195
    3. ',' → logprob: -9.72423267364502
    4. '=input' → logprob: -9.72423267364502
    5. ' ' → logprob: -11.09923267364502
    6. '=int' → logprob: -11.97423267364502
    7. '   ' → logprob: -12.72423267364502
    8. '  ' → logprob: -12.97423267364502
    9. ')' → logprob: -12.97423267364502
    10. 'a' → logprob: -13.84923267364502

Token 25: ' input' (ID: 3422)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.03402968868613243
    2. ' map' → logprob: -3.534029722213745
    3. 'input' → logprob: -5.909029483795166
    4. 'list' → logprob: -6.534029483795166
    5. ' input' → logprob: -10.159029960632324
    6. ' list' → logprob: -10.284029960632324
    7. '(map' → logprob: -11.284029960632324
    8. ' ' → logprob: -12.409029960632324
    9. 'int' → logprob: -12.784029960632324
    10. '   ' → logprob: -12.909029960632324

Token 26: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.15042345225811005
    2. '().' → logprob: -2.025423526763916
    3. '(' → logprob: -4.900423526763916
    4. '('' → logprob: -8.650423049926758
    5. '())' → logprob: -10.400423049926758
    6. '("' → logprob: -11.775423049926758
    7. '()]' → logprob: -11.775423049926758
    8. ')' → logprob: -11.775423049926758
    9. '("("' → logprob: -11.900423049926758
    10. '("")' → logprob: -12.400423049926758

Token 27: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00021772195759695023
    2. 'strip' → logprob: -8.75021743774414
    3. 'rstrip' → logprob: -10.12521743774414
    4. 'rs' → logprob: -11.37521743774414
    5. ' split' → logprob: -12.37521743774414
    6. 'spl' → logprob: -12.75021743774414
    7. '(split' → logprob: -15.50021743774414
    8. '```' → logprob: -15.75021743774414
    9. 'r' → logprob: -16.75021743774414
    10. '.split' → logprob: -17.12521743774414

Token 28: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20331402122974396
    2. '()' → logprob: -1.9533140659332275
    3. '('' → logprob: -3.2033140659332275
    4. '("("' → logprob: -6.703313827514648
    5. '("' → logprob: -9.203313827514648
    6. '(`' → logprob: -10.328313827514648
    7. '(()' → logprob: -10.578313827514648
    8. '((' → logprob: -10.703313827514648
    9. '```' → logprob: -10.828313827514648
    10. '(
' → logprob: -11.328313827514648

Token 29: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 30: ' Q' (ID: 1486)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.5440000295639038
    2. '[b' → logprob: -0.9190000295639038
    3. '[*' → logprob: -4.169000148773193
    4. '[' → logprob: -5.669000148773193
    5. 'b' → logprob: -7.044000148773193
    6. 'a' → logprob: -7.794000148773193
    7. '.setdefault' → logprob: -8.293999671936035
    8. '[int' → logprob: -9.668999671936035
    9. '[q' → logprob: -11.293999671936035
    10. '[c' → logprob: -11.293999671936035

Token 32: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8913393616676331
    2. ']' → logprob: -0.8913393616676331
    3. '[-' → logprob: -2.0163393020629883
    4. '.append' → logprob: -4.016339302062988
    5. ']+=' → logprob: -4.641339302062988
    6. ',' → logprob: -4.766339302062988
    7. ')]' → logprob: -6.391339302062988
    8. '])' → logprob: -6.766339302062988
    9. '`]' → logprob: -6.891339302062988
    10. '']' → logprob: -7.016339302062988

Token 33: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.043285876512527466
    2. '0' → logprob: -3.168285846710205
    3. ' -' → logprob: -9.043286323547363
    4. ']' → logprob: -9.418286323547363
    5. ']]' → logprob: -10.543286323547363
    6. 'len' → logprob: -11.168286323547363
    7. '])' → logprob: -11.418286323547363
    8. ' ' → logprob: -12.043286323547363
    9. '   ' → logprob: -12.793286323547363
    10. ')]' → logprob: -12.793286323547363

Token 34: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08740171790122986
    2. ']]' → logprob: -2.5874016284942627
    3. ']][' → logprob: -5.962401866912842
    4. ']+' → logprob: -6.337401866912842
    5. '][' → logprob: -6.337401866912842
    6. ')]' → logprob: -7.837401866912842
    7. ']+=' → logprob: -7.962401866912842
    8. '],' → logprob: -8.212401390075684
    9. '+]' → logprob: -8.587401390075684
    10. '']]' → logprob: -8.587401390075684

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9434469938278198
    2. '=' → logprob: -1.0684469938278198
    3. ' +=' → logprob: -1.9434469938278198
    4. ']' → logprob: -3.3184471130371094
    5. '[' → logprob: -3.6934471130371094
    6. '+=' → logprob: -3.8184471130371094
    7. ')' → logprob: -4.318447113037109
    8. '+' → logprob: -4.568447113037109
    9. ' ' → logprob: -5.318447113037109
    10. ']+=' → logprob: -5.318447113037109

Token 36: ' z' (ID: 579)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.22884729504585266
    2. 'int' → logprob: -1.7288472652435303
    3. ' b' → logprob: -5.103847503662109
    4. 'a' → logprob: -5.103847503662109
    5. ' int' → logprob: -5.228847503662109
    6. 'Q' → logprob: -5.603847503662109
    7. '1' → logprob: -6.978847503662109
    8. '0' → logprob: -6.978847503662109
    9. '[int' → logprob: -7.228847503662109
    10. 'float' → logprob: -7.478847503662109

Token 37: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: ' P' (ID: 398)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: '[z' (ID: 105082)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.012379317544400692
    2. '[b' → logprob: -4.637379169464111
    3. '[' → logprob: -6.012379169464111
    4. 'a' → logprob: -10.01237964630127
    5. '[...]' → logprob: -10.76237964630127
    6. '[*' → logprob: -10.88737964630127
    7. ' [' → logprob: -11.13737964630127
    8. 'b' → logprob: -11.88737964630127
    9. '[q' → logprob: -12.01237964630127
    10. '[z' → logprob: -12.01237964630127

Token 41: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009954405017197132
    2. ']=' → logprob: -4.759954452514648
    3. '][' → logprob: -7.759954452514648
    4. '[' → logprob: -8.134954452514648
    5. '=' → logprob: -8.259954452514648
    6. '[a' → logprob: -9.009954452514648
    7. ' ]' → logprob: -9.759954452514648
    8. ',' → logprob: -10.259954452514648
    9. '[b' → logprob: -10.259954452514648
    10. ' =' → logprob: -11.009954452514648

Token 42: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5763986706733704
    2. ' =' → logprob: -0.8263986706733704
    3. ']' → logprob: -9.076398849487305
    4. '<|end|>' → logprob: -9.201398849487305
    5. ',' → logprob: -9.826398849487305
    6. ' ' → logprob: -9.951398849487305
    7. ')' → logprob: -10.076398849487305
    8. '[' → logprob: -10.076398849487305
    9. '=int' → logprob: -11.951398849487305
    10. 'a' → logprob: -12.326398849487305

Token 43: ' int' (ID: 677)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5013096928596497
    2. 'b' → logprob: -1.0013096332550049
    3. ' a' → logprob: -4.251309871673584
    4. ' b' → logprob: -4.876309871673584
    5. 'int' → logprob: -6.126309871673584
    6. '[a' → logprob: -6.751309871673584
    7. ' int' → logprob: -8.626309394836426
    8. '[' → logprob: -8.626309394836426
    9. '[int' → logprob: -9.001309394836426
    10. 'list' → logprob: -9.001309394836426

Token 44: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.03817620873451233
    2. '(' → logprob: -3.2881762981414795
    3. '(a' → logprob: -9.163176536560059
    4. '((' → logprob: -11.413176536560059
    5. '(B' → logprob: -12.163176536560059
    6. '(s' → logprob: -13.538176536560059
    7. '(Q' → logprob: -13.538176536560059
    8. '('' → logprob: -13.663176536560059
    9. '(q' → logprob: -13.663176536560059
    10. 'b' → logprob: -13.913176536560059

Token 45: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. '))' → logprob: -13.000005722045898
    3. ')
' → logprob: -13.250005722045898
    4. ' )' → logprob: -14.250005722045898
    5. ')`' → logprob: -16.0000057220459
    6. '`)' → logprob: -16.3750057220459
    7. '}' → logprob: -16.6250057220459
    8. ')}' → logprob: -16.6250057220459
    9. '   ' → logprob: -16.7500057220459
    10. '')' → logprob: -16.8750057220459

Token 46: 'Y' (ID: 56)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7024263143539429
    2. 'e' → logprob: -1.9524263143539429
    3. 'ield' → logprob: -2.8274264335632324
    4. '[' → logprob: -2.8274264335632324
    5. 'ou' → logprob: -3.2024264335632324
    6. 'our' → logprob: -3.4524264335632324
    7. 'o' → logprob: -3.4524264335632324
    8. ' =' → logprob: -3.9524264335632324
    9. ')' → logprob: -4.077426433563232
    10. ']' → logprob: -4.202426433563232

Token 48: ' input' (ID: 3422)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.9633991122245789
    2. 'max' → logprob: -1.8383991718292236
    3. ' sorted' → logprob: -2.5883991718292236
    4. '[]' → logprob: -2.9633991718292236
    5. 'v' → logprob: -3.2133991718292236
    6. '0' → logprob: -3.2133991718292236
    7. 'min' → logprob: -3.4633991718292236
    8. '[v' → logprob: -3.5883991718292236
    9. '[max' → logprob: -3.5883991718292236
    10. '[' → logprob: -3.7133991718292236

Token 49: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03825768083333969
    2. '(' → logprob: -3.288257598876953
    3. '`()' → logprob: -10.413257598876953
    4. '```' → logprob: -10.538257598876953
    5. ')' → logprob: -11.038257598876953
    6. ' ()' → logprob: -11.038257598876953
    7. '()`' → logprob: -11.163257598876953
    8. '().' → logprob: -11.288257598876953
    9. '#' → logprob: -11.538257598876953
    10. ' ' → logprob: -11.788257598876953

Token 50: 'result' (ID: 2521)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7975240349769592
    2. '<|end|>' → logprob: -1.7975239753723145
    3. 'for' → logprob: -1.7975239753723145
    4. ')' → logprob: -3.2975239753723145
    5. '.' → logprob: -3.2975239753723145
    6. '\n' → logprob: -4.0475239753723145
    7. 'n' → logprob: -4.0475239753723145
    8. 's' → logprob: -4.0475239753723145
    9. ' for' → logprob: -4.2975239753723145
    10. 'a' → logprob: -4.4225239753723145

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12930800020694733
    2. '=' → logprob: -2.629307985305786
    3. '[' → logprob: -3.379307985305786
    4. '_' → logprob: -4.504308223724365
    5. ' ' → logprob: -6.504308223724365
    6. '.' → logprob: -7.129308223724365
    7. ' +=' → logprob: -8.129307746887207
    8. '(' → logprob: -8.129307746887207
    9. '[]' → logprob: -8.254307746887207
    10. '[:]' → logprob: -8.254307746887207

Token 52: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16288429498672485
    2. '[]' → logprob: -2.78788423538208
    3. ' ' → logprob: -3.03788423538208
    4. ' []' → logprob: -3.41288423538208
    5. '""' → logprob: -5.53788423538208
    6. '"' → logprob: -6.28788423538208
    7. '[' → logprob: -7.66288423538208
    8. '1' → logprob: -8.287884712219238
    9. ' ""' → logprob: -8.537884712219238
    10. '[]
' → logprob: -8.787884712219238

Token 53: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.052165254950523376
    2. '(P' → logprob: -3.0521652698516846
    3. '([' → logprob: -6.3021650314331055
    4. '((' → logprob: -6.9271650314331055
    5. '(Q' → logprob: -7.4271650314331055
    6. '(+' → logprob: -10.302165031433105
    7. '([(' → logprob: -10.427165031433105
    8. '(
' → logprob: -11.177165031433105
    9. '(lambda' → logprob: -11.177165031433105
    10. '(p' → logprob: -11.927165031433105

Token 54: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.23278914391994476
    2. '(P' → logprob: -1.732789158821106
    3. '(' → logprob: -3.4827890396118164
    4. '(int' → logprob: -9.732789039611816
    5. '((' → logprob: -10.607789039611816
    6. '(Q' → logprob: -10.732789039611816
    7. '(
' → logprob: -10.857789039611816
    8. '(len' → logprob: -11.732789039611816
    9. ' (' → logprob: -11.857789039611816
    10. '(str' → logprob: -12.732789039611816

Token 55: ' x' (ID: 1215)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.3706494867801666
    2. '(lambda' → logprob: -1.8706494569778442
    3. 'lambda' → logprob: -2.495649576187134
    4. ' P' → logprob: -3.245649576187134
    5. ' Q' → logprob: -4.370649337768555
    6. 'P' → logprob: -4.870649337768555
    7. '=lambda' → logprob: -5.495649337768555
    8. ' (' → logprob: -5.995649337768555
    9. 'Q' → logprob: -6.495649337768555
    10. ')' → logprob: -6.620649337768555

Token 56: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.017964614555239677
    2. ':P' → logprob: -4.642964839935303
    3. ' :' → logprob: -5.892964839935303
    4. ',' → logprob: -6.017964839935303
    5. 'P' → logprob: -7.017964839935303
    6. ',Q' → logprob: -7.267964839935303
    7. ',P' → logprob: -7.642964839935303
    8. '(P' → logprob: -8.017964363098145
    9. '(Q' → logprob: -9.267964363098145
    10. ' P' → logprob: -9.392964363098145

Token 57: ' P' (ID: 398)
  Prédit: ' P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.41342848539352417
    2. 'P' → logprob: -1.163428544998169
    3. ' Q' → logprob: -4.16342830657959
    4. 'Q' → logprob: -4.78842830657959
    5. ' lambda' → logprob: -6.53842830657959
    6. ' ' → logprob: -7.91342830657959
    7. 'lambda' → logprob: -8.41342830657959
    8. '   ' → logprob: -10.22592830657959
    9. '(P' → logprob: -10.60092830657959
    10. '	P' → logprob: -10.72592830657959

Token 58: '[x' (ID: 17295)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.062149737030267715
    2. '(Q' → logprob: -2.8121497631073
    3. '[
' → logprob: -9.687150001525879
    4. 'Q' → logprob: -10.062150001525879
    5. '[(' → logprob: -10.812150001525879
    6. '(' → logprob: -11.062150001525879
    7. '([' → logprob: -11.187150001525879
    8. ' [' → logprob: -11.812150001525879
    9. ' Q' → logprob: -12.937150001525879
    10. '[P' → logprob: -12.937150001525879

Token 59: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.11621572077274323
    2. 'Q' → logprob: -2.366215705871582
    3. ' ],' → logprob: -5.241215705871582
    4. '[' → logprob: -5.366215705871582
    5. '+' → logprob: -6.616215705871582
    6. ' Q' → logprob: -7.241215705871582
    7. ']' → logprob: -7.241215705871582
    8. ' +' → logprob: -7.616215705871582
    9. '),' → logprob: -7.741215705871582
    10. ' if' → logprob: -7.741215705871582

Token 60: ' range' (ID: 3352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3877023458480835
    2. ' [' → logprob: -2.012702465057373
    3. '(Q' → logprob: -2.887702465057373
    4. 'map' → logprob: -3.012702465057373
    5. ' map' → logprob: -3.387702465057373
    6. '(map' → logprob: -3.887702465057373
    7. '[Y' → logprob: -4.262702465057373
    8. '[list' → logprob: -6.012702465057373
    9. ' (' → logprob: -6.137702465057373
    10. ' Q' → logprob: -6.762702465057373

Token 61: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.18490776419639587
    2. '(v' → logprob: -2.3099076747894287
    3. '(len' → logprob: -2.6849076747894287
    4. '(' → logprob: -6.809907913208008
    5. '(Y' → logprob: -9.684907913208008
    6. '(q' → logprob: -10.309907913208008
    7. 'v' → logprob: -10.809907913208008
    8. 'len' → logprob: -11.184907913208008
    9. 'Q' → logprob: -11.309907913208008
    10. ' (' → logprob: -11.559907913208008

Token 62: '[Y' (ID: 173881)
  Prédit: '[Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[Y' → logprob: -0.6421561241149902
    2. '(Y' → logprob: -0.7671561241149902
    3. '[' → logprob: -5.76715612411499
    4. '.get' → logprob: -6.01715612411499
    5. '(' → logprob: -6.14215612411499
    6. '(len' → logprob: -6.89215612411499
    7. '[len' → logprob: -8.767156600952148
    8. 'Y' → logprob: -8.892156600952148
    9. '   ' → logprob: -9.767156600952148
    10. '[y' → logprob: -9.767156600952148

Token 63: '],' (ID: 2155)
  Prédit: '[Y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[Y' → logprob: -0.009824206121265888
    2. '[' → logprob: -5.009824275970459
    3. ']))' → logprob: -6.134824275970459
    4. '])))' → logprob: -7.384824275970459
    5. ']' → logprob: -9.1348237991333
    6. '[
' → logprob: -10.1348237991333
    7. '(Y' → logprob: -10.2598237991333
    8. '   ' → logprob: -10.6348237991333
    9. '['' → logprob: -11.3848237991333
    10. '["' → logprob: -11.6348237991333

Token 64: ' v' (ID: 323)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.2600477635860443
    2. 'v' → logprob: -1.7600477933883667
    3. ' Q' → logprob: -3.510047674179077
    4. 'len' → logprob: -3.760047674179077
    5. ' v' → logprob: -6.260047912597656
    6. ' len' → logprob: -7.010047912597656
    7. 'range' → logprob: -8.385047912597656
    8. '0' → logprob: -8.510047912597656
    9. '   ' → logprob: -9.135047912597656
    10. 'Y' → logprob: -9.385047912597656

Token 65: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0026773218996822834
    2. ')' → logprob: -6.5026774406433105
    3. '))' → logprob: -6.8776774406433105
    4. '))))' → logprob: -9.627676963806152
    5. ')))
' → logprob: -9.877676963806152
    6. ' ' → logprob: -11.127676963806152
    7. ')));' → logprob: -12.502676963806152
    8. ')))

' → logprob: -12.752676963806152
    9. '')))' → logprob: -13.752676963806152
    10. ' )' → logprob: -14.252676963806152

Token 66: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015159426257014275
    2. '<|end|>' → logprob: -4.890159606933594
    3. 'print' → logprob: -5.015159606933594
    4. '
' → logprob: -8.140159606933594
    5. '#' → logprob: -8.890159606933594
    6. '```' → logprob: -9.390159606933594
    7. ')
' → logprob: -9.515159606933594
    8. ' )' → logprob: -9.765159606933594
    9. '(' → logprob: -10.390159606933594
    10. '\n' → logprob: -10.640159606933594

Token 67: ' Q' (ID: 1486)
  Prédit: ' result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.06325313448905945
    2. 'result' → logprob: -2.938253164291382
    3. ' len' → logprob: -5.938252925872803
    4. ' v' → logprob: -6.438252925872803
    5. ' ' → logprob: -6.938252925872803
    6. ' Q' → logprob: -7.063252925872803
    7. ' Y' → logprob: -7.313252925872803
    8. ' P' → logprob: -7.688252925872803
    9. ' not' → logprob: -7.938252925872803
    10. 'v' → logprob: -8.563253402709961

Token 68: '[Y' (ID: 173881)
  Prédit: '[Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[Y' → logprob: -0.0003124632057733834
    2. '[' → logprob: -8.125312805175781
    3. ' [' → logprob: -12.375312805175781
    4. 'Y' → logprob: -12.750312805175781
    5. '[y' → logprob: -13.125312805175781
    6. ' Y' → logprob: -13.500312805175781
    7. '[X' → logprob: -13.875312805175781
    8. '[T' → logprob: -14.125312805175781
    9. '[
' → logprob: -14.375312805175781
    10. '[P' → logprob: -14.750312805175781

Token 69: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4326598644256592
    2. ' <' → logprob: -1.9326598644256592
    3. '>' → logprob: -2.807659864425659
    4. '<' → logprob: -3.182659864425659
    5. ' >' → logprob: -3.182659864425659
    6. ' !=' → logprob: -4.307660102844238
    7. ' <=' → logprob: -4.682660102844238
    8. '+' → logprob: -4.807660102844238
    9. ' )' → logprob: -5.557660102844238
    10. ' >=' → logprob: -5.682660102844238

Token 70: ' in' (ID: 306)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.8454499244689941
    2. ' >' → logprob: -1.4704499244689941
    3. ' !=' → logprob: -2.220449924468994
    4. '>' → logprob: -2.470449924468994
    5. '<' → logprob: -2.845449924468994
    6. ' >=' → logprob: -3.720449924468994
    7. ' ==' → logprob: -3.720449924468994
    8. '!=' → logprob: -4.470449924468994
    9. '+' → logprob: -4.970449924468994
    10. ' <=' → logprob: -5.095449924468994

Token 71: ' P' (ID: 398)
  Prédit: ' P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.2456396520137787
    2. 'P' → logprob: -2.2456395626068115
    3. ' Q' → logprob: -3.1206395626068115
    4. ' [' → logprob: -3.4956395626068115
    5. 'Q' → logprob: -4.370639801025391
    6. '[' → logprob: -4.370639801025391
    7. ' range' → logprob: -5.120639801025391
    8. ' {' → logprob: -6.620639801025391
    9. '[P' → logprob: -6.620639801025391
    10. ' ' → logprob: -6.745639801025391

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014794083312153816
    2. '.keys' → logprob: -4.889793872833252
    3. ':
' → logprob: -6.139793872833252
    4. ' and' → logprob: -6.514793872833252
    5. '<|end|>' → logprob: -7.014793872833252
    6. '.' → logprob: -7.264793872833252
    7. ')' → logprob: -7.264793872833252
    8. ' :' → logprob: -7.889793872833252
    9. '):' → logprob: -8.63979434967041
    10. ' ' → logprob: -9.26479434967041

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04512312635779381
    2. ' print' → logprob: -3.5451231002807617
    3. ' result' → logprob: -4.920123100280762
    4. 'print' → logprob: -6.295123100280762
    5. ' del' → logprob: -6.420123100280762
    6. ' P' → logprob: -7.045123100280762
    7. 'result' → logprob: -7.045123100280762
    8. ')' → logprob: -7.170123100280762
    9. '    ' → logprob: -8.045123100280762
    10. ':' → logprob: -8.045123100280762

Token 74: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8561028838157654
    2. ' result' → logprob: -1.6061029434204102
    3. ' print' → logprob: -1.9811029434204102
    4. 'result' (adapté à ' result') → logprob: -1.9811029434204102
    5. ' del' → logprob: -2.98110294342041
    6. 'del' → logprob: -3.73110294342041
    7. '   ' → logprob: -4.85610294342041
    8. ' P' → logprob: -4.98110294342041
    9. 'P' → logprob: -4.98110294342041
    10. 'v' → logprob: -7.73110294342041

Token 75: ' -=' (ID: 12583)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.717431366443634
    2. '+=' → logprob: -1.8424313068389893
    3. '<|end|>' → logprob: -1.8424313068389893
    4. '=' → logprob: -3.0924313068389893
    5. ' ' → logprob: -3.3424313068389893
    6. '+' → logprob: -3.4674313068389893
    7. ' =' → logprob: -3.5924313068389893
    8. ' -=' → logprob: -4.342431545257568
    9. '*' → logprob: -5.342431545257568
    10. '   ' → logprob: -5.467431545257568

Token 76: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.01726466603577137
    2. ' P' → logprob: -4.1422648429870605
    3. '1' → logprob: -7.3922648429870605
    4. 'Q' → logprob: -8.142264366149902
    5. 'int' → logprob: -9.142264366149902
    6. ' ' → logprob: -9.767264366149902
    7. '10' → logprob: -10.267264366149902
    8. '   ' → logprob: -10.517264366149902
    9. '0' → logprob: -10.767264366149902
    10. 'v' → logprob: -11.267264366149902

Token 77: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005996193503960967
    2. '[v' → logprob: -8.12559986114502
    3. '[P' → logprob: -8.87559986114502
    4. '[Y' → logprob: -10.25059986114502
    5. 'Q' → logprob: -10.75059986114502
    6. 'v' → logprob: -10.87559986114502
    7. '[result' → logprob: -11.50059986114502
    8. '[q' → logprob: -11.50059986114502
    9. '[[' → logprob: -11.75059986114502
    10. '   ' → logprob: -12.12559986114502

Token 78: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.000252160825766623
    2. ' Q' → logprob: -8.750251770019531
    3. '0' → logprob: -9.625251770019531
    4. '   ' → logprob: -11.500251770019531
    5. '[' → logprob: -12.000251770019531
    6. 'v' → logprob: -12.250251770019531
    7. '	Q' → logprob: -13.125251770019531
    8. 'q' → logprob: -14.375251770019531
    9. '(Q' → logprob: -14.500251770019531
    10. '1' → logprob: -14.875251770019531

Token 79: '[Y' (ID: 173881)
  Prédit: '[Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[Y' → logprob: -8.244413766078651e-05
    2. 'Y' → logprob: -9.500082015991211
    3. '[' → logprob: -12.375082015991211
    4. ' Y' → logprob: -12.875082015991211
    5. '	Y' → logprob: -15.250082015991211
    6. '(Y' → logprob: -15.625082015991211
    7. ' ' → logprob: -16.37508201599121
    8. ' [' → logprob: -16.50008201599121
    9. '   ' → logprob: -16.87508201599121
    10. ']' → logprob: -17.50008201599121

Token 80: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.29070472717285156
    2. ']' → logprob: -1.4157047271728516
    3. ')]' → logprob: -5.040704727172852
    4. '])' → logprob: -6.915704727172852
    5. ' ]]' → logprob: -7.665704727172852
    6. '}]' → logprob: -7.790704727172852
    7. '']]' → logprob: -7.915704727172852
    8. '])]' → logprob: -9.040704727172852
    9. ']])' → logprob: -9.290704727172852
    10. ']]
' → logprob: -9.290704727172852

Token 81: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.3134612441062927
    2. '(' → logprob: -1.3134613037109375
    3. '()' → logprob: -8.938461303710938
    4. '('' → logprob: -10.688461303710938
    5. 'result' → logprob: -11.063461303710938
    6. '("("' → logprob: -11.438461303710938
    7. ' (' → logprob: -12.688461303710938
    8. '(f' → logprob: -12.938461303710938
    9. '(len' → logprob: -13.063461303710938
    10. '(sum' → logprob: -13.313461303710938

Token 83: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.700132997939363e-05
    2. ' )' → logprob: -11.125017166137695
    3. '))' → logprob: -14.500017166137695
    4. '`)' → logprob: -14.500017166137695
    5. ')
' → logprob: -15.500017166137695
    6. '(' → logprob: -15.625017166137695
    7. ')`' → logprob: -15.625017166137695
    8. '')' → logprob: -15.875017166137695
    9. '#' → logprob: -16.625017166137695
    10. '```' → logprob: -16.625017166137695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 81
Tokens correctement prédits (1ère position, stricte): 25
Tokens correctement prédits (1ère position, avec adaptation): 25
Tokens correctement prédits (top 10): 50
Précision stricte (1ère position): 30.86%
Précision adaptée (1ère position): 30.86%
Précision (top 10): 61.73%
================================================================================
