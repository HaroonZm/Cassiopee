================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
Alist = list(map(int, input().split()))
Blist = list(map(int, input().split()))
Clist = list(map(int, input().split()))
point = 0
for b in Blist:
    point += b
i = 0
while i < N - 1:
    if Alist[i + 1] == Alist[i] + 1:
        point += Clist[Alist[i] - 1]
    i += 1
print(point)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00027933192905038595
    2. '('' → logprob: -8.625279426574707
    3. '(N' → logprob: -10.000279426574707
    4. '(
' → logprob: -10.875279426574707
    5. '(input' → logprob: -11.250279426574707
    6. ''' → logprob: -12.125279426574707
    7. '```' → logprob: -12.375279426574707
    8. '("("' → logprob: -12.500279426574707
    9. '`' → logprob: -12.750279426574707
    10. '(`' → logprob: -13.125279426574707

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038750916719436646
    2. ')' → logprob: -3.4137508869171143
    3. '()' → logprob: -5.538751125335693
    4. '())' → logprob: -7.788751125335693
    5. '(
' → logprob: -8.288750648498535
    6. '```' → logprob: -9.413750648498535
    7. '(

' → logprob: -9.913750648498535
    8. '("("' → logprob: -9.913750648498535
    9. '('' → logprob: -10.163750648498535
    10. '<|end|>' → logprob: -10.288750648498535

Token 5: 'Al' (ID: 2348)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31470787525177
    2. 'if' → logprob: -2.1897077560424805
    3. 'i' → logprob: -3.3147077560424805
    4. 'a' → logprob: -3.6897077560424805
    5. 's' → logprob: -3.9397077560424805
    6. 'x' → logprob: -4.3147077560424805
    7. '*' → logprob: -4.8147077560424805
    8. 'f' → logprob: -4.9397077560424805
    9. '`' → logprob: -4.9397077560424805
    10. ')' → logprob: -4.9397077560424805

Token 6: 'ist' (ID: 421)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.03728102892637253
    2. 'g' → logprob: -3.537281036376953
    3. 'ls' → logprob: -5.537281036376953
    4. 'lst' → logprob: -6.662281036376953
    5. 'i' → logprob: -7.537281036376953
    6. 'ist' → logprob: -8.662281036376953
    7. 's' → logprob: -8.787281036376953
    8. 'list' → logprob: -8.787281036376953
    9. '[' → logprob: -8.787281036376953
    10. '[i' → logprob: -9.037281036376953

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11798496544361115
    2. '.' → logprob: -2.2429850101470947
    3. '[:]' → logprob: -6.742984771728516
    4. '.append' → logprob: -6.867984771728516
    5. '```' → logprob: -7.117984771728516
    6. '[]' → logprob: -7.242984771728516
    7. '\[' → logprob: -7.742984771728516
    8. '[i' → logprob: -8.742984771728516
    9. '=' → logprob: -9.242984771728516
    10. ')' → logprob: -9.492984771728516

Token 8: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.9209608435630798
    2. '[]' → logprob: -1.1709609031677246
    3. 'list' → logprob: -1.5459609031677246
    4. ' list' → logprob: -2.6709609031677246
    5. '[' → logprob: -5.670960903167725
    6. ' [' → logprob: -5.795960903167725
    7. '[list' → logprob: -6.545960903167725
    8. '[input' → logprob: -6.920960903167725
    9. 'input' → logprob: -8.170960426330566
    10. '[int' → logprob: -8.545960426330566

Token 9: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017450349405407906
    2. '(input' → logprob: -7.126745223999023
    3. '()' → logprob: -7.876745223999023
    4. '(int' → logprob: -8.251745223999023
    5. '(range' → logprob: -8.501745223999023
    6. '(`' → logprob: -11.626745223999023
    7. '(
' → logprob: -11.626745223999023
    8. '(N' → logprob: -11.751745223999023
    9. '(

' → logprob: -12.001745223999023
    10. '(user' → logprob: -12.126745223999023

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.016368646174669266
    2. '(' → logprob: -4.141368865966797
    3. '(str' → logprob: -9.141368865966797
    4. 'int' → logprob: -9.516368865966797
    5. '(input' → logprob: -9.891368865966797
    6. '<int' → logprob: -10.391368865966797
    7. ')' → logprob: -10.766368865966797
    8. '(
' → logprob: -10.891368865966797
    9. '(lambda' → logprob: -11.266368865966797
    10. '=int' → logprob: -11.766368865966797

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007714636158198118
    2. ',input' → logprob: -5.257714748382568
    3. '(' → logprob: -6.507714748382568
    4. ',' → logprob: -8.00771427154541
    5. '))' → logprob: -8.25771427154541
    6. ')' → logprob: -8.75771427154541
    7. '=input' → logprob: -9.75771427154541
    8. 'input' → logprob: -10.13271427154541
    9. ' (' → logprob: -10.63271427154541
    10. '<input' → logprob: -10.75771427154541

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029796771705150604
    2. ' input' → logprob: -3.529796838760376
    3. '(input' → logprob: -10.154796600341797
    4. ',input' → logprob: -12.029796600341797
    5. '=input' → logprob: -14.529796600341797
    6. '	input' → logprob: -14.904796600341797
    7. ')' → logprob: -15.529796600341797
    8. ' ' → logprob: -15.904796600341797
    9. '<input' → logprob: -16.154796600341797
    10. '(' → logprob: -17.154796600341797

Token 13: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6835111975669861
    2. '())' → logprob: -0.9335111975669861
    3. '()' → logprob: -2.433511257171631
    4. '(' → logprob: -4.558511257171631
    5. '()));' → logprob: -6.808511257171631
    6. ')' → logprob: -7.433511257171631
    7. '().' → logprob: -7.558511257171631
    8. '))' → logprob: -7.808511257171631
    9. '());' → logprob: -8.308510780334473
    10. '(()' → logprob: -8.433510780334473

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001640876434976235
    2. 'strip' → logprob: -8.750164031982422
    3. 'rstrip' → logprob: -12.250164031982422
    4. ' split' → logprob: -14.250164031982422
    5. '(split' → logprob: -15.875164031982422
    6. 'spl' → logprob: -16.750164031982422
    7. ')' → logprob: -19.250164031982422
    8. 'startswith' → logprob: -19.375164031982422
    9. 's' → logprob: -19.500164031982422
    10. 'read' → logprob: -19.625164031982422

Token 15: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5099148750305176
    2. ')' → logprob: -1.3849148750305176
    3. '(' → logprob: -2.2599148750305176
    4. '()))' → logprob: -3.5099148750305176
    5. '('' → logprob: -5.134914875030518
    6. '())' → logprob: -5.134914875030518
    7. ')))' → logprob: -6.509914875030518
    8. '(','' → logprob: -7.509914875030518
    9. '()' → logprob: -7.759914875030518
    10. ''))' → logprob: -8.63491439819336

Token 16: 'B' (ID: 33)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.321764349937439
    2. 'Al' → logprob: -1.571764349937439
    3. 's' → logprob: -1.696764349937439
    4. 'for' → logprob: -2.3217644691467285
    5. 'A' → logprob: -2.8217644691467285
    6. 'result' → logprob: -2.9467644691467285
    7. 'max' → logprob: -3.3217644691467285
    8. 'sorted' → logprob: -3.8217644691467285
    9. 'count' → logprob: -4.0717644691467285
    10. 'dp' → logprob: -4.5717644691467285

Token 17: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0004245972086209804
    2. 'ist' → logprob: -8.1254243850708
    3. ' =' → logprob: -9.7504243850708
    4. 'alist' → logprob: -10.2504243850708
    5. '_list' → logprob: -10.6254243850708
    6. 'List' → logprob: -12.3754243850708
    7. '=' → logprob: -12.8754243850708
    8. '=list' → logprob: -14.1254243850708
    9. '[' → logprob: -14.3754243850708
    10. 'lst' → logprob: -14.3754243850708

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03855044022202492
    2. '=' → logprob: -3.28855037689209
    3. '.' → logprob: -7.78855037689209
    4. '[' → logprob: -9.78855037689209
    5. '.append' → logprob: -11.91355037689209
    6. ')' → logprob: -12.03855037689209
    7. '[:]' → logprob: -12.03855037689209
    8. '.extend' → logprob: -12.66355037689209
    9. ' .' → logprob: -12.91355037689209
    10. '_' → logprob: -13.03855037689209

Token 19: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5235485434532166
    2. ' list' → logprob: -0.8985485434532166
    3. '[' → logprob: -8.773548126220703
    4. '[]' → logprob: -9.398548126220703
    5. ' [' → logprob: -9.523548126220703
    6. ' []' → logprob: -10.523548126220703
    7. '[list' → logprob: -10.648548126220703
    8. ' Al' → logprob: -11.023548126220703
    9. 'Al' → logprob: -11.773548126220703
    10. 'List' → logprob: -11.773548126220703

Token 20: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00650623207911849
    2. '(map' → logprob: -5.131506443023682
    3. '(list' → logprob: -9.006505966186523
    4. '(int' → logprob: -9.131505966186523
    5. '(.' → logprob: -9.256505966186523
    6. '(

' → logprob: -9.381505966186523
    7. '((' → logprob: -10.131505966186523
    8. '(
' → logprob: -10.631505966186523
    9. '(range' → logprob: -11.006505966186523
    10. '("("' → logprob: -11.256505966186523

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0013990452280268073
    2. '(' → logprob: -6.751399040222168
    3. '(lambda' → logprob: -9.751399040222168
    4. '[int' → logprob: -10.001399040222168
    5. '<int' → logprob: -10.126399040222168
    6. '=int' → logprob: -10.376399040222168
    7. 'int' → logprob: -10.501399040222168
    8. '```' → logprob: -11.251399040222168
    9. ' (' → logprob: -12.876399040222168
    10. ')(' → logprob: -13.126399040222168

Token 22: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06182974949479103
    2. ',' → logprob: -3.4368298053741455
    3. '(' → logprob: -4.186829566955566
    4. ',int' → logprob: -4.561829566955566
    5. '(input' → logprob: -6.936829566955566
    6. 'int' → logprob: -7.561829566955566
    7. '```' → logprob: -8.561829566955566
    8. ',input' → logprob: -8.811829566955566
    9. '=int' → logprob: -9.311829566955566
    10. '<int' → logprob: -9.436829566955566

Token 23: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.39380744099617004
    2. 'input' → logprob: -1.1438074111938477
    3. 'int' → logprob: -5.018807411193848
    4. ' int' → logprob: -8.143807411193848
    5. '(input' → logprob: -11.893807411193848
    6. '(int' → logprob: -14.018807411193848
    7. 'str' → logprob: -14.143807411193848
    8. ' ' → logprob: -15.643807411193848
    9. '<input' → logprob: -15.768807411193848
    10. ',input' → logprob: -15.768807411193848

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03218967467546463
    2. '()' → logprob: -3.5321896076202393
    3. '(' → logprob: -6.407189846038818
    4. '()))' → logprob: -7.407189846038818
    5. '())' → logprob: -9.15718936920166
    6. '(int' → logprob: -10.90718936920166
    7. '()));' → logprob: -11.03218936920166
    8. '()`' → logprob: -11.78218936920166
    9. '(.' → logprob: -12.03218936920166
    10. '()-' → logprob: -12.53218936920166

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.339278580620885e-06
    2. 'strip' → logprob: -13.250001907348633
    3. ' split' → logprob: -14.750001907348633
    4. ')' → logprob: -16.250001907348633
    5. 'rstrip' → logprob: -18.250001907348633
    6. '(split' → logprob: -18.500001907348633
    7. 'plit' → logprob: -18.625001907348633
    8. '.split' → logprob: -19.250001907348633
    9. 'spl' → logprob: -19.375001907348633
    10. 's' → logprob: -19.750001907348633

Token 26: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.06156020238995552
    2. '())' → logprob: -3.3115601539611816
    3. '()' → logprob: -4.186560153961182
    4. '))' → logprob: -4.936560153961182
    5. ')' → logprob: -7.186560153961182
    6. '()))
' → logprob: -10.18656063079834
    7. '()));' → logprob: -10.31156063079834
    8. '(' → logprob: -11.06156063079834
    9. '()),' → logprob: -12.43656063079834
    10. '()>' → logprob: -12.56156063079834

Token 27: 'Cl' (ID: 1388)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.7508763670921326
    2. 'result' → logprob: -1.2508764266967773
    3. 'dp' → logprob: -3.0008764266967773
    4. 'answer' → logprob: -3.2508764266967773
    5. 'count' → logprob: -3.5008764266967773
    6. 'diff' → logprob: -3.6258764266967773
    7. 'ans' → logprob: -4.000876426696777
    8. 'max' → logprob: -4.250876426696777
    9. 'res' → logprob: -5.000876426696777
    10. 'total' → logprob: -5.125876426696777

Token 28: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -2.951771421066951e-05
    2. ' =' → logprob: -10.625029563903809
    3. '=' → logprob: -13.250029563903809
    4. '[' → logprob: -14.000029563903809
    5. '```' → logprob: -14.000029563903809
    6. 'is' → logprob: -15.000029563903809
    7. '=[]' → logprob: -15.125029563903809
    8. '   ' → logprob: -15.500029563903809
    9. 'en' → logprob: -16.000028610229492
    10. 'ists' → logprob: -16.250028610229492

Token 29: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2400938868522644
    2. '=' → logprob: -1.6150939464569092
    3. '.' → logprob: -4.49009370803833
    4. '[' → logprob: -5.86509370803833
    5. ')' → logprob: -8.365094184875488
    6. '[:]' → logprob: -9.115094184875488
    7. '.append' → logprob: -9.865094184875488
    8. '=[]' → logprob: -10.740094184875488
    9. '_' → logprob: -10.865094184875488
    10. '.=' → logprob: -10.990094184875488

Token 30: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.15311047434806824
    2. ' list' → logprob: -2.0281105041503906
    3. '[]' → logprob: -5.653110504150391
    4. '[' → logprob: -5.903110504150391
    5. '(list' → logprob: -6.028110504150391
    6. 'sorted' → logprob: -7.903110504150391
    7. '(' → logprob: -8.15311050415039
    8. '([' → logprob: -8.15311050415039
    9. ' [' → logprob: -8.27811050415039
    10. ' []' → logprob: -9.15311050415039

Token 31: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027872882783412933
    2. '(range' → logprob: -6.627787113189697
    3. '(map' → logprob: -7.377787113189697
    4. '((' → logprob: -8.127787590026855
    5. '(int' → logprob: -8.377787590026855
    6. '([]' → logprob: -10.377787590026855
    7. '(list' → logprob: -10.502787590026855
    8. '([' → logprob: -10.502787590026855
    9. '(()' → logprob: -10.877787590026855
    10. '(.' → logprob: -10.877787590026855

Token 32: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00036787090357393026
    2. '(' → logprob: -8.625368118286133
    3. 'int' → logprob: -8.750368118286133
    4. '<int' → logprob: -11.375368118286133
    5. '=int' → logprob: -12.000368118286133
    6. '[int' → logprob: -12.500368118286133
    7. ')(' → logprob: -13.000368118286133
    8. ')' → logprob: -13.125368118286133
    9. '```' → logprob: -13.375368118286133
    10. '(lambda' → logprob: -14.375368118286133

Token 33: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0013166663702577353
    2. ',int' → logprob: -7.126316547393799
    3. '(' → logprob: -7.876316547393799
    4. ',' → logprob: -9.501317024230957
    5. ' (' → logprob: -10.376317024230957
    6. '=int' → logprob: -11.251317024230957
    7. '```' → logprob: -11.876317024230957
    8. 'int' → logprob: -13.751317024230957
    9. '[int' → logprob: -13.751317024230957
    10. '<int' → logprob: -14.001317024230957

Token 34: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.11235415935516357
    2. ' int' → logprob: -2.987354278564453
    3. 'input' → logprob: -3.237354278564453
    4. ' input' → logprob: -4.112354278564453
    5. '(int' → logprob: -8.487354278564453
    6. 'str' → logprob: -13.237354278564453
    7. '[int' → logprob: -13.362354278564453
    8. '(input' → logprob: -13.612354278564453
    9. '<int' → logprob: -13.862354278564453
    10. ' ' → logprob: -13.987354278564453

Token 35: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0018170286202803254
    2. '()' → logprob: -6.626817226409912
    3. '())' → logprob: -8.251816749572754
    4. '()))' → logprob: -8.626816749572754
    5. '(' → logprob: -10.001816749572754
    6. '()));' → logprob: -13.626816749572754
    7. '(int' → logprob: -14.001816749572754
    8. '(.' → logprob: -14.751816749572754
    9. ' ().' → logprob: -14.751816749572754
    10. '()>' → logprob: -15.001816749572754

Token 36: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -7.822646693966817e-06
    2. ')' → logprob: -12.250007629394531
    3. 'spl' → logprob: -13.500007629394531
    4. 'strip' → logprob: -14.500007629394531
    5. '))' → logprob: -14.750007629394531
    6. ' split' → logprob: -15.375007629394531
    7. 's' → logprob: -15.500007629394531
    8. '(split' → logprob: -16.00000762939453
    9. '()' → logprob: -16.50000762939453
    10. '())' → logprob: -17.37500762939453

Token 37: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2698720693588257
    2. '))' → logprob: -1.8948720693588257
    3. '())' → logprob: -3.0198721885681152
    4. '()' → logprob: -3.8948721885681152
    5. ')' → logprob: -4.144872188568115
    6. '()))
' → logprob: -7.144872188568115
    7. '(' → logprob: -8.269871711730957
    8. '())
' → logprob: -10.519871711730957
    9. '()));' → logprob: -10.894871711730957
    10. '))
' → logprob: -11.144871711730957

Token 38: 'point' (ID: 4859)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.039412260055542
    2. 'C' → logprob: -1.914412260055542
    3. 'result' → logprob: -1.914412260055542
    4. 'D' → logprob: -3.164412260055542
    5. 'd' → logprob: -3.164412260055542
    6. 'a' → logprob: -3.414412260055542
    7. 'for' → logprob: -3.414412260055542
    8. 'ans' → logprob: -3.414412260055542
    9. 's' → logprob: -3.914412260055542
    10. 'res' → logprob: -4.039412498474121

Token 39: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002998858690261841
    2. '_s' → logprob: -6.1279988288879395
    3. ' =' → logprob: -7.5029988288879395
    4. '=' → logprob: -9.252999305725098
    5. '_' → logprob: -9.752999305725098
    6. '1' → logprob: -10.252999305725098
    7. 'A' → logprob: -11.002999305725098
    8. 'S' → logprob: -11.252999305725098
    9. '.' → logprob: -11.752999305725098
    10. 'sum' → logprob: -12.252999305725098

Token 40: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.089776910841465
    2. ' ' → logprob: -2.4647769927978516
    3. '[' → logprob: -7.339776992797852
    4. '{}' → logprob: -9.714776992797852
    5. ' [' → logprob: -9.839776992797852
    6. '[]' → logprob: -10.089776992797852
    7. ' {}' → logprob: -11.464776992797852
    8. ' []' → logprob: -11.464776992797852
    9. '{' → logprob: -12.714776992797852
    10. '(' → logprob: -13.339776992797852

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004445074126124382
    2. '[' → logprob: -5.5044450759887695
    3. '[]' → logprob: -8.50444507598877
    4. '{}' → logprob: -9.62944507598877
    5. ' ' → logprob: -9.75444507598877
    6. '{' → logprob: -11.25444507598877
    7. 'sum' → logprob: -12.00444507598877
    8. '[int' → logprob: -12.62944507598877
    9. '[N' → logprob: -13.00444507598877
    10. ' [' → logprob: -13.25444507598877

Token 42: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001394284307025373
    2. '
' → logprob: -7.126394271850586
    3. ' for' → logprob: -7.751394271850586
    4. '\n' → logprob: -8.876394271850586
    5. '```' → logprob: -11.501394271850586
    6. '' → logprob: -12.376394271850586
    7. '<|end|>' → logprob: -13.126394271850586
    8. 'f' → logprob: -14.251394271850586
    9. 'n' → logprob: -14.626394271850586
    10. '\
' → logprob: -14.751394271850586

Token 43: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.3822154111694545e-05
    2. ' for' → logprob: -10.500043869018555
    3. 'f' → logprob: -12.125043869018555
    4. 'prev' → logprob: -12.375043869018555
    5. '```' → logprob: -12.625043869018555
    6. '
' → logprob: -13.875043869018555
    7. 'F' → logprob: -14.625043869018555
    8. 'A' → logprob: -15.000043869018555
    9. 'i' → logprob: -15.125043869018555
    10. 'previous' → logprob: -15.375043869018555

Token 44: ' b' (ID: 287)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28515297174453735
    2. ' i' → logprob: -1.4101529121398926
    3. '  ' → logprob: -6.160152912139893
    4. '_' → logprob: -7.160152912139893
    5. ' ‌' → logprob: -7.785152912139893
    6. 'i' → logprob: -8.16015338897705
    7. ' _' → logprob: -8.28515338897705
    8. ' N' → logprob: -9.53515338897705
    9. ' I' → logprob: -11.03515338897705
    10. ' ▁' → logprob: -11.16015338897705

Token 45: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3280576765537262
    2. 'in' → logprob: -1.5780576467514038
    3. '_' → logprob: -2.8280577659606934
    4. ' ' → logprob: -5.203057765960693
    5. 'i' → logprob: -5.328057765960693
    6. ' i' → logprob: -5.828057765960693
    7. '_i' → logprob: -8.453057289123535
    8. '  ' → logprob: -8.703057289123535
    9. ' _' → logprob: -8.828057289123535
    10. ',' → logprob: -9.578057289123535

Token 46: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.2928183376789093
    2. ' B' → logprob: -1.417818307876587
    3. ' range' → logprob: -4.792818546295166
    4. 'range' → logprob: -5.792818546295166
    5. '(B' → logprob: -9.542818069458008
    6. '(range' → logprob: -9.667818069458008
    7. 'Bl' → logprob: -10.542818069458008
    8. 'Br' → logprob: -10.667818069458008
    9. '(' → logprob: -10.667818069458008
    10. '	B' → logprob: -11.292818069458008

Token 47: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00031270162435248494
    2. 'ist' → logprob: -8.250312805175781
    3. 'lst' → logprob: -11.000312805175781
    4. '_list' → logprob: -11.250312805175781
    5. ':' → logprob: -12.000312805175781
    6. 'in' → logprob: -12.875312805175781
    7. 'l' → logprob: -12.875312805175781
    8. 'lis' → logprob: -13.000312805175781
    9. '):' → logprob: -13.375312805175781
    10. 'List' → logprob: -13.500312805175781

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011915886716451496
    2. ':
' → logprob: -9.62511920928955
    3. '[' → logprob: -11.00011920928955
    4. ' :' → logprob: -11.62511920928955
    5. '=' → logprob: -11.75011920928955
    6. '[:]' → logprob: -12.50011920928955
    7. '):' → logprob: -12.62511920928955
    8. '>' → logprob: -12.87511920928955
    9. ',' → logprob: -12.87511920928955
    10. '[:' → logprob: -14.25011920928955

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04077833890914917
    2. ' ' → logprob: -4.165778160095215
    3. ' if' → logprob: -4.665778160095215
    4. '[' → logprob: -4.915778160095215
    5. 'if' → logprob: -6.790778160095215
    6. '    ' → logprob: -7.165778160095215
    7. '  ' → logprob: -7.415778160095215
    8. ':' → logprob: -7.415778160095215
    9. '```' → logprob: -7.415778160095215
    10. '	' → logprob: -7.915778160095215

Token 50: ' point' (ID: 2438)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.49825650453567505
    2. ' point' → logprob: -1.8732564449310303
    3. 'if' → logprob: -2.2482564449310303
    4. 'point' (adapté à ' point') → logprob: -2.7482564449310303
    5. '   ' → logprob: -3.9982564449310303
    6. ' for' → logprob: -4.498256683349609
    7. ' ' → logprob: -4.873256683349609
    8. ' index' → logprob: -5.373256683349609
    9. ' idx' → logprob: -5.373256683349609
    10. '_' → logprob: -5.623256683349609

Token 51: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.020656337961554527
    2. '+=' → logprob: -3.8956563472747803
    3. '+' → logprob: -9.14565658569336
    4. '=' → logprob: -13.02065658569336
    5. ' =' → logprob: -13.52065658569336
    6. ' -=' → logprob: -13.64565658569336
    7. ' +' → logprob: -14.02065658569336
    8. '+=(' → logprob: -14.52065658569336
    9. '+='' → logprob: -15.02065658569336
    10. '+="' → logprob: -15.14565658569336

Token 52: ' b' (ID: 287)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.2685573995113373
    2. 'Cl' → logprob: -1.8935574293136597
    3. 'b' → logprob: -2.51855731010437
    4. '1' → logprob: -6.143557548522949
    5. 'A' → logprob: -7.268557548522949
    6. ' Al' → logprob: -7.393557548522949
    7. 'a' → logprob: -8.51855754852295
    8. 'C' → logprob: -8.64355754852295
    9. ' b' → logprob: -8.64355754852295
    10. ' Cl' → logprob: -8.89355754852295

Token 53: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: 'i' (ID: 72)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.019057726487517357
    2. 'nd' → logprob: -5.019057750701904
    3. 'n' → logprob: -5.019057750701904
    4. '+' → logprob: -6.394057750701904
    5. 'd' → logprob: -6.519057750701904
    6. 'm' → logprob: -6.769057750701904
    7. 't' → logprob: -7.769057750701904
    8. '-' → logprob: -8.269057273864746
    9. 's' → logprob: -9.144057273864746
    10. 'nt' → logprob: -9.269057273864746

Token 56: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18816864490509033
    2. '0' → logprob: -1.8131686449050903
    3. '1' → logprob: -4.813168525695801
    4. ' N' → logprob: -8.4381685256958
    5. 'N' → logprob: -10.6881685256958
    6. ' -' → logprob: -11.5631685256958
    7. '2' → logprob: -11.6881685256958
    8. '-' → logprob: -13.0631685256958
    9. '  ' → logprob: -13.1881685256958
    10. ' ' → logprob: -14.6256685256958

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02999507263302803
    2. '1' → logprob: -3.5299949645996094
    3. ' ' → logprob: -8.65499496459961
    4. 'N' → logprob: -10.27999496459961
    5. '-' → logprob: -10.40499496459961
    6. '2' → logprob: -12.77999496459961
    7. ' -' → logprob: -14.65499496459961
    8. 'B' → logprob: -14.77999496459961
    9. 'len' → logprob: -15.02999496459961
    10. 'b' → logprob: -15.34249496459961

Token 58: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0030900125857442617
    2. '<|end|>' → logprob: -6.503089904785156
    3. ' 
' → logprob: -7.003089904785156
    4. 'while' → logprob: -8.128089904785156
    5. '  
' → logprob: -8.878089904785156
    6. ' while' → logprob: -9.628089904785156
    7. '
' → logprob: -10.003089904785156
    8. '\n' → logprob: -10.253089904785156
    9. '' → logprob: -10.628089904785156
    10. '<|end|>' → logprob: -11.128089904785156

Token 59: 'while' (ID: 7032)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22207793593406677
    2. 'while' → logprob: -2.0970778465270996
    3. '<|end|>' → logprob: -3.4720778465270996
    4. ' while' → logprob: -3.8470778465270996
    5. '\n' → logprob: -4.7220778465271
    6. 'for' → logprob: -5.2220778465271
    7. '' → logprob: -5.4720778465271
    8. ' 
' → logprob: -6.5970778465271
    9. ' ' → logprob: -7.0970778465271
    10. ' for' → logprob: -7.4720778465271

Token 60: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07936912029981613
    2. 'i' → logprob: -2.579369068145752
    3. ' N' → logprob: -8.32936954498291
    4. 'N' → logprob: -8.57936954498291
    5. ' ' → logprob: -10.70436954498291
    6. '(i' → logprob: -12.07936954498291
    7. '<' → logprob: -12.32936954498291
    8. ' len' → logprob: -12.82936954498291
    9. '	i' → logprob: -12.82936954498291
    10. ' <' → logprob: -13.32936954498291

Token 61: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.11351532489061356
    2. '<' → logprob: -2.2385153770446777
    3. ' ' → logprob: -7.613515377044678
    4. '+' → logprob: -8.86351490020752
    5. '<len' → logprob: -10.73851490020752
    6. '<N' → logprob: -10.86351490020752
    7. '<n' → logprob: -11.98851490020752
    8. ' +' → logprob: -12.11351490020752
    9. ' <
' → logprob: -13.86351490020752
    10. ' <=' → logprob: -14.23851490020752

Token 62: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.632752537727356
    2. ' N' → logprob: -0.757752537727356
    3. ' ' → logprob: -9.257752418518066
    4. 'len' → logprob: -10.757752418518066
    5. ' len' → logprob: -10.882752418518066
    6. 'n' → logprob: -12.007752418518066
    7. '(' → logprob: -12.632752418518066
    8. ' n' → logprob: -13.382752418518066
    9. ' (' → logprob: -13.632752418518066
    10. '	N' → logprob: -13.632752418518066

Token 63: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004106896463781595
    2. ':
' → logprob: -5.5041069984436035
    3. ' :' → logprob: -11.129106521606445
    4. '+:' → logprob: -12.254106521606445
    5. '+' → logprob: -12.504106521606445
    6. ' and' → logprob: -13.254106521606445
    7. '-' → logprob: -13.379106521606445
    8. ' :
' → logprob: -14.254106521606445
    9. 'and' → logprob: -15.129106521606445
    10. ':

' → logprob: -15.254106521606445

Token 64: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043102685594931245
    2. ' ' → logprob: -7.750431060791016
    3. '2' → logprob: -15.000431060791016
    4. '  ' → logprob: -17.750431060791016
    5. '１' → logprob: -18.125431060791016
    6. '```' → logprob: -18.500431060791016
    7. '   ' → logprob: -18.750431060791016
    8. '<|end|>' → logprob: -18.937931060791016
    9. '-' → logprob: -19.062931060791016
    10. '۱' → logprob: -19.375431060791016

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '2' → logprob: -15.625015258789062
    4. '１' → logprob: -19.000015258789062
    5. '```' → logprob: -19.625015258789062
    6. '۱' → logprob: -19.937515258789062
    7. '  ' → logprob: -19.937515258789062
    8. '১' → logprob: -20.312515258789062
    9. '   ' → logprob: -20.375015258789062
    10. '-' → logprob: -20.375015258789062

Token 66: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0030737295746803284
    2. ':
' → logprob: -6.003073692321777
    3. ' :' → logprob: -7.503073692321777
    4. ' :
' → logprob: -10.253073692321777
    5. ' and' → logprob: -11.878073692321777
    6. '   ' → logprob: -14.003073692321777
    7. 'and' → logprob: -14.128073692321777
    8. ' ' → logprob: -14.878073692321777
    9. ':

' → logprob: -14.878073692321777
    10. '：' → logprob: -15.003073692321777

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.813023567199707
    2. ' if' → logprob: -1.063023567199707
    3. 'if' → logprob: -1.563023567199707
    4. ' ' → logprob: -7.313023567199707
    5. '```' → logprob: -7.813023567199707
    6. '	if' → logprob: -9.438023567199707
    7. '  ' → logprob: -9.438023567199707
    8. '<|end|>' → logprob: -9.438023567199707
    9. 'i' → logprob: -9.563023567199707
    10. '    ' → logprob: -9.813023567199707

Token 68: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5305712819099426
    2. '   ' → logprob: -1.0305712223052979
    3. ' if' → logprob: -2.905571222305298
    4. ' ' → logprob: -9.155570983886719
    5. '	if' → logprob: -9.905570983886719
    6. 'i' → logprob: -11.030570983886719
    7. '```' → logprob: -11.530570983886719
    8. '    ' → logprob: -11.655570983886719
    9. '<|end|>' → logprob: -12.155570983886719
    10. 'If' → logprob: -12.155570983886719

Token 69: ' Al' (ID: 1667)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0394919328391552
    2. ' B' → logprob: -3.289491891860962
    3. 'Al' → logprob: -6.789492130279541
    4. 'Bl' → logprob: -8.789491653442383
    5. ' Al' → logprob: -9.289491653442383
    6. 'Cl' → logprob: -10.789491653442383
    7. ' ' → logprob: -10.914491653442383
    8. '	B' → logprob: -11.289491653442383
    9. '   ' → logprob: -12.039491653442383
    10. 'A' → logprob: -12.414491653442383

Token 70: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.008884118869900703
    2. 'st' → logprob: -4.758883953094482
    3. '[i' → logprob: -8.38388442993164
    4. 'i' → logprob: -11.00888442993164
    5. 'list' → logprob: -11.38388442993164
    6. '[' → logprob: -11.88388442993164
    7. '```' → logprob: -13.88388442993164
    8. 's' → logprob: -14.13388442993164
    9. 'sit' → logprob: -14.25888442993164
    10. 'ист' → logprob: -14.63388442993164

Token 71: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.839121826691553e-05
    2. '[' → logprob: -9.500078201293945
    3. ' [' → logprob: -12.750078201293945
    4. 'i' → logprob: -15.750078201293945
    5. '[I' → logprob: -16.250078201293945
    6. '[
' → logprob: -16.750078201293945
    7. ' i' → logprob: -17.500078201293945
    8. '(i' → logprob: -17.625078201293945
    9. '```' → logprob: -17.750078201293945
    10. '{i' → logprob: -18.750078201293945

Token 72: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2262142300605774
    2. ' +' → logprob: -1.6012141704559326
    3. '==' → logprob: -7.851214408874512
    4. ' ==' → logprob: -8.226214408874512
    5. ']==' → logprob: -9.851214408874512
    6. ']+' → logprob: -10.226214408874512
    7. ']' → logprob: -10.476214408874512
    8. '=' → logprob: -11.726214408874512
    9. '```' → logprob: -12.476214408874512
    10. ' ' → logprob: -12.726214408874512

Token 73: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01163561549037695
    2. ' ' → logprob: -4.511635780334473
    3. ']' → logprob: -7.511635780334473
    4. '   ' → logprob: -11.011635780334473
    5. '0' → logprob: -12.136635780334473
    6. '  ' → logprob: -12.261635780334473
    7. '-' → logprob: -12.511635780334473
    8. '```' → logprob: -12.636635780334473
    9. ' ]' → logprob: -13.261635780334473
    10. ' -' → logprob: -13.511635780334473

Token 74: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017979251220822334
    2. '-' → logprob: -4.767979145050049
    3. ']' → logprob: -5.392979145050049
    4. '0' → logprob: -5.517979145050049
    5. ' ' → logprob: -7.767979145050049
    6. ' -' → logprob: -9.392979621887207
    7. ']-' → logprob: -9.517979621887207
    8. ']==' → logprob: -9.767979621887207
    9. 'i' → logprob: -10.517979621887207
    10. '   ' → logprob: -10.767979621887207

Token 75: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21552230417728424
    2. ' ==' → logprob: -2.090522289276123
    3. ']==' → logprob: -3.465522289276123
    4. ' ]' → logprob: -3.840522289276123
    5. '==' → logprob: -4.840522289276123
    6. ' ' → logprob: -5.090522289276123
    7. ')' → logprob: -6.090522289276123
    8. ' -' → logprob: -7.590522289276123
    9. '=' → logprob: -9.465522766113281
    10. ' )' → logprob: -9.465522766113281

Token 76: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759909749031067
    2. '==' → logprob: -0.8259909749031067
    3. '=' → logprob: -10.700990676879883
    4. '==
' → logprob: -10.950990676879883
    5. ']==' → logprob: -12.825990676879883
    6. '===' → logprob: -13.325990676879883
    7. ' ' → logprob: -13.450990676879883
    8. ' =' → logprob: -13.700990676879883
    9. ')==' → logprob: -13.825990676879883
    10. '==(' → logprob: -13.825990676879883

Token 77: ' Al' (ID: 1667)
  Prédit: 'Al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.1524413824081421
    2. ' Al' → logprob: -2.1524415016174316
    3. 'B' → logprob: -3.7774415016174316
    4. ' B' → logprob: -7.027441501617432
    5. 'Bl' → logprob: -7.402441501617432
    6. ' ' → logprob: -8.027441024780273
    7. '   ' → logprob: -8.402441024780273
    8. '  ' → logprob: -9.527441024780273
    9. '	B' → logprob: -10.027441024780273
    10. ' Bl' → logprob: -10.652441024780273

Token 78: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.00023321842309087515
    2. 'st' → logprob: -8.87523365020752
    3. 'i' → logprob: -10.75023365020752
    4. 'is' → logprob: -11.25023365020752
    5. 'list' → logprob: -11.75023365020752
    6. '```' → logprob: -11.81273365020752
    7. 'ист' → logprob: -12.31273365020752
    8. '1' → logprob: -12.37523365020752
    9. '[' → logprob: -12.93773365020752
    10. '   ' → logprob: -13.06273365020752

Token 79: '[i' (ID: 1768)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.39507612586021423
    2. '[i' → logprob: -1.2700761556625366
    3. ' B' → logprob: -3.145076036453247
    4. 'i' → logprob: -7.395076274871826
    5. '[' → logprob: -7.395076274871826
    6. '[B' → logprob: -7.645076274871826
    7. 'Bi' → logprob: -7.645076274871826
    8. ' ' → logprob: -9.395075798034668
    9. '```' → logprob: -10.145075798034668
    10. '_B' → logprob: -10.520075798034668

Token 80: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38200581073760986
    2. '+' → logprob: -1.2570058107376099
    3. ')' → logprob: -4.38200569152832
    4. ']+' → logprob: -5.00700569152832
    5. ' ' → logprob: -5.13200569152832
    6. '[i' → logprob: -6.00700569152832
    7. ']' → logprob: -6.13200569152832
    8. ')+' → logprob: -6.25700569152832
    9. '1' → logprob: -8.50700569152832
    10. 'B' → logprob: -8.88200569152832

Token 81: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759904384613037
    2. ' +' → logprob: -0.8259904384613037
    3. '1' → logprob: -10.325990676879883
    4. ' ' → logprob: -11.450990676879883
    5. ' -' → logprob: -13.075990676879883
    6. '-' → logprob: -13.450990676879883
    7. ':' → logprob: -13.575990676879883
    8. '  ' → logprob: -14.700990676879883
    9. '   ' → logprob: -14.825990676879883
    10. '+i' → logprob: -14.950990676879883

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '<|end|>' → logprob: -19.37506675720215
    4. '   ' → logprob: -19.62506675720215
    5. '  ' → logprob: -20.37506675720215
    6. '１' → logprob: -21.25006675720215
    7. '```' → logprob: -21.50006675720215
    8. '+' → logprob: -22.00006675720215
    9. '100' → logprob: -22.25006675720215
    10. '<|end|>' → logprob: -22.25006675720215

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '１' → logprob: -19.625009536743164
    4. '১' → logprob: -20.125009536743164
    5. '' → logprob: -20.250009536743164
    6. '  ' → logprob: -20.250009536743164
    7. '   ' → logprob: -20.375009536743164
    8. '१' → logprob: -20.500009536743164
    9. '2' → logprob: -20.562509536743164
    10. '<|end|>' → logprob: -21.562509536743164

Token 84: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0014369006967172027
    2. ':
' → logprob: -6.626436710357666
    3. ' :' → logprob: -9.751437187194824
    4. ' and' → logprob: -10.126437187194824
    5. 'and' → logprob: -12.376437187194824
    6. '   ' → logprob: -13.126437187194824
    7. ':
' → logprob: -13.376437187194824
    8. '       ' → logprob: -13.876437187194824
    9. '):' → logprob: -14.001437187194824
    10. ' :
' → logprob: -14.126437187194824

Token 85: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08417122066020966
    2. ':
' → logprob: -3.0841712951660156
    3. '       ' → logprob: -3.5841712951660156
    4. '   ' → logprob: -5.334171295166016
    5. 'point' → logprob: -7.209171295166016
    6. ' and' → logprob: -7.834171295166016
    7. ' ' → logprob: -8.209171295166016
    8. ' point' → logprob: -8.334171295166016
    9. ' :' → logprob: -8.584171295166016
    10. '<|end|>' → logprob: -9.584171295166016

Token 86: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' (adapté à ' point') → logprob: -0.0062331948429346085
    2. ' point' → logprob: -5.381233215332031
    3. '
' → logprob: -7.256233215332031
    4. '       ' → logprob: -7.881233215332031
    5. '   ' → logprob: -8.006233215332031
    6. '	point' → logprob: -9.631233215332031
    7. '           ' → logprob: -10.381233215332031
    8. ' ' → logprob: -10.506233215332031
    9. '```' → logprob: -11.131233215332031
    10. 'if' → logprob: -11.506233215332031

Token 87: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.12695109844207764
    2. '+=' → logprob: -2.126951217651367
    3. '+' → logprob: -11.001951217651367
    4. ']+=' → logprob: -12.876951217651367
    5. '.' → logprob: -13.751951217651367
    6. '+='' → logprob: -13.876951217651367
    7. '+=(' → logprob: -14.876951217651367
    8. ' ' → logprob: -15.376951217651367
    9. '<|end|>' → logprob: -15.376951217651367
    10. '=' → logprob: -15.626951217651367

Token 88: ' Cl' (ID: 2190)
  Prédit: 'Cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cl' → logprob: -0.0007514976896345615
    2. 'C' → logprob: -7.500751495361328
    3. 'B' → logprob: -9.250751495361328
    4. ' Cl' → logprob: -9.375751495361328
    5. 'Cc' → logprob: -12.375751495361328
    6. ' ' → logprob: -12.625751495361328
    7. '1' → logprob: -13.500751495361328
    8. 'Cls' → logprob: -13.500751495361328
    9. 'Bc' → logprob: -14.000751495361328
    10. '	' → logprob: -14.125751495361328

Token 89: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -8.180258191714529e-06
    2. 'i' → logprob: -13.250008583068848
    3. '[' → logprob: -13.500008583068848
    4. 'ист' → logprob: -13.875008583068848
    5. 'is' → logprob: -14.125008583068848
    6. '[i' → logprob: -14.375008583068848
    7. 'st' → logprob: -14.812508583068848
    8. '1' → logprob: -14.875008583068848
    9. '   ' → logprob: -15.062508583068848
    10. '```' → logprob: -15.125008583068848

Token 90: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5090506672859192
    2. 'Al' → logprob: -1.1340506076812744
    3. '[i' → logprob: -2.7590506076812744
    4. 'i' → logprob: -4.5090508460998535
    5. 'Ai' → logprob: -6.7590508460998535
    6. 'A' → logprob: -7.8840508460998535
    7. '   ' → logprob: -8.134050369262695
    8. '[int' → logprob: -8.134050369262695
    9. ' Al' → logprob: -8.509050369262695
    10. '[A' → logprob: -9.134050369262695

Token 91: 'Al' (ID: 2348)
  Prédit: 'Al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Al' → logprob: -0.00029995047952979803
    2. ' Al' → logprob: -8.250300407409668
    3. 'Ai' → logprob: -11.500300407409668
    4. 'Ab' → logprob: -11.750300407409668
    5. 'i' → logprob: -12.125300407409668
    6. 'Ali' → logprob: -12.500300407409668
    7. 'A' → logprob: -12.875300407409668
    8. '   ' → logprob: -13.250300407409668
    9. '[' → logprob: -14.125300407409668
    10. 'As' → logprob: -14.125300407409668

Token 92: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.005357667803764343
    2. 'i' → logprob: -6.00535774230957
    3. 'st' → logprob: -6.00535774230957
    4. 'is' → logprob: -8.88035774230957
    5. '[i' → logprob: -9.75535774230957
    6. '```' → logprob: -10.00535774230957
    7. '[' → logprob: -10.25535774230957
    8. 'it' → logprob: -10.75535774230957
    9. '   ' → logprob: -11.50535774230957
    10. ' i' → logprob: -11.69285774230957

Token 93: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.000000953674316
    3. 'i' → logprob: -15.000000953674316
    4. '```' → logprob: -18.5
    5. ' [' → logprob: -18.625
    6. '(i' → logprob: -18.75
    7. ' i' → logprob: -19.0
    8. 's' → logprob: -19.25
    9. '[I' → logprob: -19.5
    10. '[
' → logprob: -20.125

Token 94: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10630972683429718
    2. ']' → logprob: -2.481309652328491
    3. 'i' → logprob: -4.73130989074707
    4. ']-' → logprob: -5.60630989074707
    5. ']]' → logprob: -7.35630989074707
    6. '])' → logprob: -7.48130989074707
    7. '[' → logprob: -7.60630989074707
    8. ' -' → logprob: -7.60630989074707
    9. ' i' → logprob: -7.85630989074707
    10. '(i' → logprob: -8.10630989074707

Token 95: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.046467676758766174
    2. '-' → logprob: -3.5464677810668945
    3. ' -' → logprob: -4.5464677810668945
    4. ' ]' → logprob: -5.6714677810668945
    5. ']-' → logprob: -6.1714677810668945
    6. '1' → logprob: -8.796467781066895
    7. ' ' → logprob: -9.546467781066895
    8. '<|end|>' → logprob: -9.671467781066895
    9. ']]' → logprob: -10.546467781066895
    10. ')' → logprob: -10.671467781066895

Token 96: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0040793512016534805
    2. ' ' → logprob: -5.504079341888428
    3. '１' → logprob: -15.129079818725586
    4. '2' → logprob: -15.379079818725586
    5. '   ' → logprob: -15.379079818725586
    6. '  ' → logprob: -16.254079818725586
    7. '۱' → logprob: -16.816579818725586
    8. '11' → logprob: -17.316579818725586
    9. ' ' → logprob: -17.566579818725586
    10. '0' → logprob: -18.129079818725586

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001503790495917201
    2. ' ' → logprob: -6.501503944396973
    3. '2' → logprob: -13.876503944396973
    4. '   ' → logprob: -15.376503944396973
    5. '  ' → logprob: -16.126502990722656
    6. '１' → logprob: -16.376502990722656
    7. '11' → logprob: -17.251502990722656
    8. '0' → logprob: -17.314002990722656
    9. '۱' → logprob: -17.689002990722656
    10. '100' → logprob: -18.314002990722656

Token 98: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12791922688484192
    2. ']
' → logprob: -2.1279191970825195
    3. '   ' → logprob: -7.5029191970825195
    4. ']
' → logprob: -8.25291919708252
    5. ' ]' → logprob: -9.75291919708252
    6. ' ]
' → logprob: -10.37791919708252
    7. '       ' → logprob: -10.50291919708252
    8. ']

' → logprob: -10.75291919708252
    9. ' ' → logprob: -11.12791919708252
    10. ')' → logprob: -11.12791919708252

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03449012339115143
    2. '       ' → logprob: -3.9094901084899902
    3. ' i' → logprob: -4.40949010848999
    4. '
' → logprob: -7.15949010848999
    5. 'i' → logprob: -7.53449010848999
    6. '    
' → logprob: -8.909490585327148
    7. '	i' → logprob: -9.034490585327148
    8. ' ' → logprob: -10.034490585327148
    9. '        
' → logprob: -10.284490585327148
    10. '```' → logprob: -10.784490585327148

Token 100: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.8621326088905334
    2. '   ' → logprob: -0.8621326088905334
    3. ' i' → logprob: -1.8621325492858887
    4. ' ' → logprob: -9.612133026123047
    5. '	i' → logprob: -10.487133026123047
    6. '
' → logprob: -10.737133026123047
    7. '```' → logprob: -11.237133026123047
    8. '  ' → logprob: -12.737133026123047
    9. '    
' → logprob: -12.862133026123047
    10. '``' → logprob: -13.862133026123047

Token 101: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.029898816719651222
    2. ' +=' → logprob: -4.029898643493652
    3. '+' → logprob: -4.529898643493652
    4. '=' → logprob: -7.029898643493652
    5. '++' → logprob: -11.529898643493652
    6. '+="' → logprob: -14.279898643493652
    7. ']+=' → logprob: -14.404898643493652
    8. '+='' → logprob: -14.404898643493652
    9. '+++' → logprob: -15.154898643493652
    10. ' +' → logprob: -15.279898643493652

Token 102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '```' → logprob: -18.500036239624023
    4. '１' → logprob: -19.375036239624023
    5. '   ' → logprob: -19.750036239624023
    6. '2' → logprob: -22.000036239624023
    7. '+' → logprob: -22.000036239624023
    8. '۱' → logprob: -22.125036239624023
    9. '  ' → logprob: -22.250036239624023
    10. '0' → logprob: -22.312536239624023

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '１' → logprob: -19.125
    4. '```' → logprob: -20.125
    5. '   ' → logprob: -20.625
    6. '0' → logprob: -21.625
    7. '۱' → logprob: -21.625
    8. '+' → logprob: -21.75
    9. '2' → logprob: -22.125
    10. '' → logprob: -22.375

Token 104: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0017025562701746821
    2. '
' → logprob: -6.876702785491943
    3. '<|end|>' → logprob: -7.876702785491943
    4. ' print' → logprob: -8.501702308654785
    5. ')' → logprob: -10.376702308654785
    6. '```' → logprob: -10.876702308654785
    7. '\n' → logprob: -11.126702308654785
    8. '#' → logprob: -11.501702308654785
    9. '#print' → logprob: -12.501702308654785
    10. ' ' → logprob: -13.126702308654785

Token 105: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1875571544806007e-05
    2. ' print' → logprob: -11.875011444091797
    3. '
' → logprob: -12.625011444091797
    4. '```' → logprob: -14.000011444091797
    5. '#' → logprob: -15.125011444091797
    6. '<|end|>' → logprob: -15.375011444091797
    7. '#print' → logprob: -16.000011444091797
    8. ')' → logprob: -17.500011444091797
    9. 'point' → logprob: -17.625011444091797
    10. '\n' → logprob: -17.625011444091797

Token 106: '(point' (ID: 46989)
  Prédit: '(point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(point' → logprob: -0.31326621770858765
    2. '(' → logprob: -1.3132662773132324
    3. '()' → logprob: -13.563265800476074
    4. '(Point' → logprob: -13.813265800476074
    5. '(
' → logprob: -14.313265800476074
    6. '(p' → logprob: -14.563265800476074
    7. '(points' → logprob: -14.688265800476074
    8. '(po' → logprob: -15.688265800476074
    9. '((' → logprob: -16.06326675415039
    10. '('' → logprob: -16.06326675415039

Token 107: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -16.75
    3. ')
' → logprob: -18.125
    4. ')`' → logprob: -19.0
    5. '))' → logprob: -20.5
    6. '）' → logprob: -21.125
    7. ')#' → logprob: -21.375
    8. '),' → logprob: -21.75
    9. ')}' → logprob: -21.75
    10. ')**' → logprob: -22.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 105
Tokens correctement prédits (1ère position, stricte): 45
Tokens correctement prédits (1ère position, avec adaptation): 48
Tokens correctement prédits (top 10): 92
Précision stricte (1ère position): 42.86%
Précision adaptée (1ère position): 45.71%
Précision (top 10): 87.62%
================================================================================
