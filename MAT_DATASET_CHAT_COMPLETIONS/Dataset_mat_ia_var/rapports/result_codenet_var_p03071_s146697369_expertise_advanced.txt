================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from functools import lru_cache, partial
from operator import itemgetter
from statistics import mean
from math import gcd as math_gcd, ceil as math_ceil

class IP:
    __slots__ = ('input',)
    def __init__(self):
        self.input = sys.stdin.readline

    def I(self) -> int:
        return int(self.input())

    def S(self) -> str:
        return self.input().rstrip('\n')

    def IL(self) -> list[int]:
        return list(map(int, self.input().split()))

    def SL(self) -> list[str]:
        return self.input().split()

    def ILS(self, n: int) -> list[int]:
        return [int(self.input()) for _ in range(n)]

    def SLS(self, n: int) -> list[str]:
        return [self.input().rstrip('\n') for _ in range(n)]

    def SILS(self, n: int) -> list[list[int]]:
        return [self.IL() for _ in range(n)]

    def SSLS(self, n: int) -> list[list[str]]:
        return [self.SL() for _ in range(n)]

class Idea:
    __slots__ = ()
    @staticmethod
    def HF(p):
        # 半分全列挙: 和の組み合わせを求めて重複なし・ソート
        from itertools import combinations_with_replacement
        return sorted(set(sum(x) for x in combinations_with_replacement(p, 2)))

    @staticmethod
    def Bfs2(a):
        # bit全探索：bit列(16桁), その総和をリストで返す
        N = len(a)
        fmt = f'0{max(16, N)}b'
        results = [(format(mask, fmt), sum(a[j] for j in range(N) if (mask>>j)&1)) for mask in range(1<<N)]
        results.sort(key=itemgetter(1))
        return [b for b, _ in results], [v for _, v in results]

    @staticmethod
    def S(s, r=0, m=-1):
        s.sort(reverse=bool(r), key=None if m == -1 else itemgetter(m))

    @staticmethod
    def bit_n(a, b):
        return (a >> b) & 1 > 0

    @staticmethod
    def bit_o(a, b):
        return ((a >> b) & 1) == 1

    @staticmethod
    def ceil(x, y):
        return math_ceil(x / y)

    @staticmethod
    def ave(a):
        return mean(a)

    @staticmethod
    @lru_cache(maxsize=None)
    def gcd(x, y):
        return math_gcd(x, y)

def main():
    r, e, p = range, enumerate, print
    ip = IP()
    id = Idea()
    mod = 10**9 + 7

    a, b = ip.IL()
    # 2回取り出す最大値計算の最短化
    ans = max(a, b)
    ans += max(a-1, b-1)
    p(ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00688101164996624
    2. 'os' → logprob: -5.756881237030029
    3. ' math' → logprob: -6.881881237030029
    4. ' collections' → logprob: -7.256881237030029
    5. ' pathlib' → logprob: -7.756881237030029
    6. ' ' → logprob: -8.131880760192871
    7. ' typing' → logprob: -8.131880760192871
    8. ' datetime' → logprob: -9.006880760192871
    9. 'collections' → logprob: -9.256880760192871
    10. ' Py' → logprob: -9.256880760192871

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.11333024501800537
    2. 'import' → logprob: -2.238330364227295
    3. '_import' → logprob: -8.113329887390137
    4. ' ' → logprob: -8.863329887390137
    5. '_' → logprob: -10.363329887390137
    6. '	import' → logprob: -10.988329887390137
    7. '.' → logprob: -12.488329887390137
    8. ' _' → logprob: -12.613329887390137
    9. ' ' → logprob: -12.738329887390137
    10. '```' → logprob: -13.238329887390137

Token 6: ' l' (ID: 305)
  Prédit: ' wraps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wraps' → logprob: -0.9669124484062195
    2. 'wrap' → logprob: -1.4669125080108643
    3. 'partial' → logprob: -1.8419125080108643
    4. 'l' → logprob: -2.4669125080108643
    5. ' l' → logprob: -2.7169125080108643
    6. ' partial' → logprob: -2.8419125080108643
    7. 'reduce' → logprob: -3.9669125080108643
    8. ' reduce' → logprob: -6.591912269592285
    9. 'cmp' → logprob: -8.591912269592285
    10. 'cached' → logprob: -8.716912269592285

Token 7: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.00013977376511320472
    2. 'r' → logprob: -9.375140190124512
    3. 'ruz' → logprob: -11.000140190124512
    4. 'amb' → logprob: -12.000140190124512
    5. 'z' → logprob: -12.125140190124512
    6. 'ambda' → logprob: -12.375140190124512
    7. 'rum' → logprob: -12.750140190124512
    8. 'rup' → logprob: -12.750140190124512
    9. 'wrap' → logprob: -13.000140190124512
    10. 'a' → logprob: -13.125140190124512

Token 8: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.008079150691628456
    2. '_c' → logprob: -5.0080790519714355
    3. '_' → logprob: -6.6330790519714355
    4. '_ca' → logprob: -11.008079528808594
    5. 'c' → logprob: -12.008079528808594
    6. '_cached' → logprob: -12.133079528808594
    7. 'cache' → logprob: -12.383079528808594
    8. '_
' → logprob: -12.883079528808594
    9. '_\' → logprob: -13.133079528808594
    10. '_

' → logprob: -13.258079528808594

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8329473733901978
    2. '\' → logprob: -1.3329473733901978
    3. '\n' → logprob: -1.8329473733901978
    4. '\(' → logprob: -3.707947254180908
    5. 'def' → logprob: -3.707947254180908
    6. '```' → logprob: -3.707947254180908
    7. 'import' → logprob: -3.832947254180908
    8. '<|end|>' → logprob: -4.457947254180908
    9. '[' → logprob: -4.832947254180908
    10. '@' → logprob: -5.207947254180908

Token 10: ' partial' (ID: 13664)
  Prédit: ' wraps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wraps' → logprob: -0.4222568869590759
    2. 'wrap' → logprob: -1.5472569465637207
    3. 'partial' → logprob: -2.9222569465637207
    4. 'reduce' → logprob: -3.1722569465637207
    5. ' partial' → logprob: -3.9222569465637207
    6. ' reduce' → logprob: -4.547256946563721
    7. ' singled' → logprob: -5.922256946563721
    8. 'cache' → logprob: -7.172256946563721
    9. 'cached' → logprob: -7.297256946563721
    10. ' cache' → logprob: -8.422256469726562

Token 11: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8439317941665649
    2. '

' → logprob: -1.093931794166565
    3. 'import' → logprob: -2.3439316749572754
    4. '\n' → logprob: -3.3439316749572754
    5. '\' → logprob: -3.5939316749572754
    6. '<|end|>' → logprob: -3.9689316749572754
    7. '```' → logprob: -4.218931674957275
    8. ',' → logprob: -4.343931674957275
    9. '(' → logprob: -5.093931674957275
    10. '' → logprob: -5.093931674957275

Token 12: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.38710275292396545
    2. 'import' → logprob: -2.1371028423309326
    3. '
' → logprob: -2.6371028423309326
    4. '```' → logprob: -2.7621028423309326
    5. '\n' → logprob: -3.3871028423309326
    6. ',' → logprob: -4.5121026039123535
    7. '\' → logprob: -4.6371026039123535
    8. 'def' → logprob: -5.5121026039123535
    9. '<|end|>' → logprob: -6.7621026039123535
    10. ',

' → logprob: -6.7621026039123535

Token 13: ' operator' (ID: 11019)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.5558790564537048
    2. ' typing' → logprob: -1.5558791160583496
    3. ' math' → logprob: -2.3058791160583496
    4. ' os' → logprob: -2.9308791160583496
    5. ' itertools' → logprob: -3.8058791160583496
    6. 'collections' → logprob: -4.18087911605835
    7. ' pathlib' → logprob: -4.80587911605835
    8. ' threading' → logprob: -5.68087911605835
    9. ' ' → logprob: -6.30587911605835
    10. 'math' → logprob: -6.43087911605835

Token 14: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.018214095383882523
    2. 'import' → logprob: -4.018214225769043
    3. '.' → logprob: -10.768214225769043
    4. ' ' → logprob: -11.018214225769043
    5. '	import' → logprob: -11.393214225769043
    6. '_import' → logprob: -12.268214225769043
    7. ' as' → logprob: -13.393214225769043
    8. ',' → logprob: -13.393214225769043
    9. '.import' → logprob: -13.643214225769043
    10. ' ' → logprob: -14.143214225769043

Token 15: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.6183584332466125
    2. 'item' → logprob: -1.3683583736419678
    3. ' attr' → logprob: -1.9933583736419678
    4. 'attr' → logprob: -3.4933583736419678
    5. ' method' → logprob: -4.493358612060547
    6. 'method' → logprob: -4.743358612060547
    7. 'getitem' → logprob: -5.118358612060547
    8. ' add' → logprob: -5.743358612060547
    9. ' import' → logprob: -5.743358612060547
    10. 'import' → logprob: -5.993358612060547

Token 16: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0003012617235071957
    2. 'get' → logprob: -8.125301361083984
    3. 'getitem' → logprob: -12.500301361083984
    4. 'attr' → logprob: -14.750301361083984
    5. 'gett' → logprob: -15.000301361083984
    6. 'g' → logprob: -15.500301361083984
    7. 's' → logprob: -15.750301361083984
    8. 'got' → logprob: -16.750301361083984
    9. ' getter' → logprob: -16.875301361083984
    10. '_get' → logprob: -16.875301361083984

Token 17: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0591822862625122
    2. ',' → logprob: -1.3091822862625122
    3. '

' → logprob: -1.6841822862625122
    4. '\n' → logprob: -2.6841821670532227
    5. '
' → logprob: -3.0591821670532227
    6. '```' → logprob: -3.5591821670532227
    7. '<|end|>' → logprob: -3.8091821670532227
    8. '\' → logprob: -4.309182167053223
    9. ',

' → logprob: -5.684182167053223
    10. '' → logprob: -6.059182167053223

Token 18: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8881973028182983
    2. ',' → logprob: -1.7631973028182983
    3. '

' → logprob: -2.013197422027588
    4. '<|end|>' → logprob: -2.263197422027588
    5. '
' → logprob: -2.763197422027588
    6. '\n' → logprob: -2.888197422027588
    7. '```' → logprob: -3.638197422027588
    8. '\' → logprob: -4.513197422027588
    9. ',

' → logprob: -5.513197422027588
    10. ',
' → logprob: -5.638197422027588

Token 19: ' statistics' (ID: 21729)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.31777504086494446
    2. ' collections' → logprob: -1.942775011062622
    3. 'collections' → logprob: -2.442775011062622
    4. ' math' → logprob: -4.317775249481201
    5. 'math' → logprob: -5.067775249481201
    6. ' os' → logprob: -5.067775249481201
    7. ' heap' → logprob: -5.192775249481201
    8. 'heap' → logprob: -5.442775249481201
    9. 'os' → logprob: -5.942775249481201
    10. ' pathlib' → logprob: -7.317775249481201

Token 20: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.011759212240576744
    2. 'import' → logprob: -4.511759281158447
    3. ' ' → logprob: -7.386759281158447
    4. '.' → logprob: -9.636758804321289
    5. '_import' → logprob: -12.011758804321289
    6. '	import' → logprob: -12.386758804321289
    7. ' ,' → logprob: -12.761758804321289
    8. ',' → logprob: -13.011758804321289
    9. '<|end|>' → logprob: -13.011758804321289
    10. ' Import' → logprob: -13.761758804321289

Token 21: ' mean' (ID: 4774)
  Prédit: ' mean'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mean' → logprob: -0.14740124344825745
    2. 'mean' → logprob: -2.0224013328552246
    3. ' median' → logprob: -6.272401332855225
    4. 'median' → logprob: -6.272401332855225
    5. '```' → logprob: -8.022400856018066
    6. ' st' → logprob: -8.772400856018066
    7. 'mult' → logprob: -9.397400856018066
    8. ' mode' → logprob: -9.397400856018066
    9. ' multim' → logprob: -9.522400856018066
    10. ' ' → logprob: -9.897400856018066

Token 22: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6570721864700317
    2. 'import' → logprob: -1.1570721864700317
    3. '

' → logprob: -2.907072067260742
    4. '```' → logprob: -3.532072067260742
    5. '
' → logprob: -3.782072067260742
    6. '\n' → logprob: -4.032072067260742
    7. '<|end|>' → logprob: -4.157072067260742
    8. 'from' → logprob: -4.282072067260742
    9. ',

' → logprob: -5.657072067260742
    10. '\' → logprob: -6.282072067260742

Token 23: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.39932167530059814
    2. '

' → logprob: -2.0243215560913086
    3. '
' → logprob: -2.8993215560913086
    4. ',' → logprob: -3.1493215560913086
    5. 'from' → logprob: -3.3993215560913086
    6. '```' → logprob: -3.7743215560913086
    7. '\n' → logprob: -4.024321556091309
    8. '<|end|>' → logprob: -4.649321556091309
    9. '#' → logprob: -5.524321556091309
    10. '\' → logprob: -6.149321556091309

Token 24: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.16692182421684265
    2. ' itertools' → logprob: -2.416921854019165
    3. ' collections' → logprob: -3.416921854019165
    4. 'math' → logprob: -3.666921854019165
    5. 'collections' → logprob: -5.666921615600586
    6. ' typing' → logprob: -6.541921615600586
    7. ' ' → logprob: -7.791921615600586
    8. ' heap' → logprob: -8.791921615600586
    9. ' fractions' → logprob: -9.041921615600586
    10. ' functools' → logprob: -9.416921615600586

Token 25: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.05969894304871559
    2. ' ' → logprob: -3.309699058532715
    3. 'import' → logprob: -3.934699058532715
    4. '.' → logprob: -6.684699058532715
    5. '<|end|>' → logprob: -8.184699058532715
    6. '_import' → logprob: -9.684699058532715
    7. ' im' → logprob: -10.184699058532715
    8. '	import' → logprob: -10.309699058532715
    9. '```' → logprob: -10.309699058532715
    10. ' _' → logprob: -10.434699058532715

Token 26: ' gcd' (ID: 106918)
  Prédit: ' ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ceil' → logprob: -0.6548599600791931
    2. ' sqrt' → logprob: -1.029860019683838
    3. ' inf' → logprob: -2.904860019683838
    4. ' log' → logprob: -4.154860019683838
    5. 'sqrt' → logprob: -4.279860019683838
    6. 'ceil' → logprob: -4.404860019683838
    7. ' factorial' → logprob: -4.654860019683838
    8. 'log' → logprob: -5.404860019683838
    9. ' floor' → logprob: -5.529860019683838
    10. ' comb' → logprob: -6.154860019683838

Token 27: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 28: ' math' (ID: 13324)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.8984764814376831
    2. ' math' → logprob: -0.8984764814376831
    3. 'math' → logprob: -2.1484766006469727
    4. ' g' → logprob: -3.0234766006469727
    5. ' gcd' → logprob: -4.398476600646973
    6. '_g' → logprob: -5.773476600646973
    7. ' _' → logprob: -6.273476600646973
    8. '_math' → logprob: -7.648476600646973
    9. '`' → logprob: -7.773476600646973
    10. ' ' → logprob: -8.023476600646973

Token 29: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.022161003202199936
    2. 'g' → logprob: -4.27216100692749
    3. '_' → logprob: -4.89716100692749
    4. '.g' → logprob: -8.647160530090332
    5. ' gcd' → logprob: -9.522160530090332
    6. '```' → logprob: -9.647160530090332
    7. '_l' → logprob: -10.647160530090332
    8. '_

' → logprob: -11.147160530090332
    9. '_import' → logprob: -11.147160530090332
    10. '_
' → logprob: -11.397160530090332

Token 30: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -3.1186566047836095e-05
    2. 'c' → logprob: -11.375031471252441
    3. 'cdn' → logprob: -11.500031471252441
    4. 'CD' → logprob: -12.500031471252441
    5. '_cd' → logprob: -13.000031471252441
    6. 'cm' → logprob: -14.000031471252441
    7. '```' → logprob: -14.125031471252441
    8. '	cd' → logprob: -14.500031471252441
    9. 'cf' → logprob: -15.000031471252441
    10. 'cdf' → logprob: -15.000031471252441

Token 31: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5555524230003357
    2. '

' → logprob: -1.6805524826049805
    3. ',' → logprob: -2.3055524826049805
    4. 'import' → logprob: -2.5555524826049805
    5. '<|end|>' → logprob: -3.9305524826049805
    6. 'from' → logprob: -4.3055524826049805
    7. ',
' → logprob: -4.6805524826049805
    8. '```' → logprob: -5.5555524826049805
    9. ',

' → logprob: -5.9305524826049805
    10. '' → logprob: -5.9305524826049805

Token 32: ' ceil' (ID: 35964)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.394389033317566
    2. ' is' → logprob: -1.519389033317566
    3. 'ceil' → logprob: -1.769389033317566
    4. ' ceil' → logprob: -2.2693891525268555
    5. 'l' → logprob: -2.8943891525268555
    6. 'sqrt' → logprob: -3.1443891525268555
    7. ' l' → logprob: -3.7693891525268555
    8. 'fabs' → logprob: -4.0193891525268555
    9. 'floor' → logprob: -4.1443891525268555
    10. ' sqrt' → logprob: -4.1443891525268555

Token 33: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5287060737609863
    2. '<|end|>' → logprob: -1.4037060737609863
    3. '
' → logprob: -2.6537060737609863
    4. '(' → logprob: -2.6537060737609863
    5. 'import' → logprob: -5.028706073760986
    6. '(
' → logprob: -5.028706073760986
    7. '<|end|>' → logprob: -6.028706073760986
    8. ')' → logprob: -6.278706073760986
    9. ',
' → logprob: -6.778706073760986
    10. '

' → logprob: -6.903706073760986

Token 34: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.05158914998173714
    2. 'math' → logprob: -3.551589250564575
    3. ' ceil' → logprob: -3.926589250564575
    4. 'ceil' → logprob: -6.551589012145996
    5. ' ' → logprob: -8.301589012145996
    6. ' ce' → logprob: -9.926589012145996
    7. ' ceiling' → logprob: -10.301589012145996
    8. 'cmath' → logprob: -10.301589012145996
    9. '```' → logprob: -11.301589012145996
    10. ' _' → logprob: -11.551589012145996

Token 35: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0014311899431049824
    2. '_c' → logprob: -7.376430988311768
    3. '_g' → logprob: -8.376431465148926
    4. '_floor' → logprob: -8.501431465148926
    5. '_ce' → logprob: -9.376431465148926
    6. ' _' → logprob: -9.876431465148926
    7. '_
' → logprob: -10.376431465148926
    8. '```' → logprob: -10.501431465148926
    9. '.ceil' → logprob: -10.751431465148926
    10. '_

' → logprob: -11.251431465148926

Token 36: 'ceil' (ID: 43552)
  Prédit: 'ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -7.600714161526412e-05
    2. 'cel' → logprob: -10.375076293945312
    3. '.ceil' → logprob: -10.875076293945312
    4. 'ce' → logprob: -11.250076293945312
    5. ' ceil' → logprob: -12.000076293945312
    6. 'c' → logprob: -13.375076293945312
    7. 'floor' → logprob: -13.500076293945312
    8. '```' → logprob: -13.500076293945312
    9. 'log' → logprob: -14.125076293945312
    10. 'div' → logprob: -14.875076293945312

Token 37: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8511115908622742
    2. 'd' → logprob: -1.101111650466919
    3. '#' → logprob: -2.351111650466919
    4. '@' → logprob: -2.976111650466919
    5. 'class' → logprob: -3.351111650466919
    6. '
' → logprob: -3.976111650466919
    7. 'import' → logprob: -4.72611141204834
    8. 'from' → logprob: -4.72611141204834
    9. '\' → logprob: -5.47611141204834
    10. '

' → logprob: -5.60111141204834

Token 39: ' IP' (ID: 10108)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9402226805686951
    2. ' My' → logprob: -1.3152227401733398
    3. ' Calculator' → logprob: -2.31522274017334
    4. ' Factor' → logprob: -2.56522274017334
    5. ' Data' → logprob: -3.31522274017334
    6. ' Parser' → logprob: -3.94022274017334
    7. ' Space' → logprob: -4.44022274017334
    8. ' Fraction' → logprob: -4.56522274017334
    9. ' Math' → logprob: -4.69022274017334
    10. ' G' → logprob: -4.81522274017334

Token 40: ':
' (ID: 734)
  Prédit: 'Address'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Address' → logprob: -0.10172715038061142
    2. 'v' → logprob: -2.851727247238159
    3. 'ython' → logprob: -4.47672700881958
    4. 'Network' → logprob: -4.85172700881958
    5. 'Version' → logprob: -5.10172700881958
    6. 'Range' → logprob: -5.60172700881958
    7. 'Set' → logprob: -6.10172700881958
    8. 'Block' → logprob: -6.35172700881958
    9. 'Prefix' → logprob: -7.35172700881958
    10. 'Filter' → logprob: -7.35172700881958

Token 41: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.728131890296936
    2. ':' → logprob: -0.978131890296936
    3. ' def' → logprob: -3.3531317710876465
    4. '(' → logprob: -3.6031317710876465
    5. ' (' → logprob: -4.1031317710876465
    6. 'def' → logprob: -4.2281317710876465
    7. ' :' → logprob: -4.2281317710876465
    8. '   ' → logprob: -4.3531317710876465
    9. ')' → logprob: -5.1031317710876465
    10. '  ' → logprob: -5.2281317710876465

Token 42: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.025594180449843407
    2. 'def' → logprob: -3.9005942344665527
    3. ' __' → logprob: -5.525594234466553
    4. '__' (adapté à ' __') → logprob: -7.025594234466553
    5. ' pass' → logprob: -9.900593757629395
    6. '   ' → logprob: -9.900593757629395
    7. ' ' → logprob: -11.150593757629395
    8. ' None' → logprob: -11.650593757629395
    9. 'pass' → logprob: -11.775593757629395
    10. 'class' → logprob: -12.025593757629395

Token 43: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.07925713062286377
    2. 'init' → logprob: -2.579257011413574
    3. '_slots' → logprob: -8.329257011413574
    4. '_init' → logprob: -9.829257011413574
    5. 'slot' → logprob: -10.829257011413574
    6. 'module' → logprob: -11.954257011413574
    7. 'qual' → logprob: -12.079257011413574
    8. 'cache' → logprob: -12.329257011413574
    9. ' slots' → logprob: -12.454257011413574
    10. 'new' → logprob: -12.579257011413574

Token 44: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005103779956698418
    2. '=' → logprob: -5.380103588104248
    3. '=['' → logprob: -8.005104064941406
    4. ' =' → logprob: -9.380104064941406
    5. '___' → logprob: -10.630104064941406
    6. '__[' → logprob: -11.255104064941406
    7. '_=' → logprob: -11.880104064941406
    8. '_' → logprob: -12.380104064941406
    9. '__('' → logprob: -13.130104064941406
    10. '=[' → logprob: -13.130104064941406

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6739720106124878
    2. '__' → logprob: -1.2989720106124878
    3. '=' → logprob: -1.5489720106124878
    4. '=['' → logprob: -5.423972129821777
    5. '=('' → logprob: -8.173972129821777
    6. '__[' → logprob: -9.548972129821777
    7. '__('' → logprob: -10.048972129821777
    8. '['' → logprob: -10.173972129821777
    9. '[' → logprob: -10.173972129821777
    10. ' =[' → logprob: -10.298972129821777

Token 46: ' ('' (ID: 9906)
  Prédit: '('_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('_' → logprob: -0.14228768646717072
    2. '('__' → logprob: -3.5172877311706543
    3. ''_' → logprob: -3.7672877311706543
    4. '('' → logprob: -3.7672877311706543
    5. ''' → logprob: -4.142287731170654
    6. ''s' → logprob: -4.392287731170654
    7. '("_' → logprob: -4.517287731170654
    8. '(' → logprob: -4.892287731170654
    9. '['_' → logprob: -5.392287731170654
    10. '['' → logprob: -6.767287731170654

Token 47: 'input' (ID: 2586)
  Prédit: 'address'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'address' → logprob: -1.078778862953186
    2. '_address' → logprob: -1.578778862953186
    3. '_ip' → logprob: -1.703778862953186
    4. 'ip' → logprob: -1.953778862953186
    5. 'value' → logprob: -3.8287787437438965
    6. 'a' → logprob: -4.2037787437438965
    7. '_value' → logprob: -4.3287787437438965
    8. '_version' → logprob: -4.5787787437438965
    9. 'version' → logprob: -4.7037787437438965
    10. '_addr' → logprob: -4.8287787437438965

Token 48: '',' (ID: 787)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -1.0294235944747925
    2. '',' → logprob: -1.4044235944747925
    3. '')' → logprob: -2.279423713684082
    4. '_buffer' → logprob: -3.029423713684082
    5. '_string' → logprob: -3.029423713684082
    6. '_len' → logprob: -3.404423713684082
    7. '_str' → logprob: -3.654423713684082
    8. '_size' → logprob: -3.779423713684082
    9. '_length' → logprob: -4.404423713684082
    10. '_source' → logprob: -4.529423713684082

Token 49: ')
' (ID: 446)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.0742019414901733
    2. ' output' → logprob: -1.6992019414901733
    3. ''' → logprob: -1.8242019414901733
    4. 'output' → logprob: -2.949202060699463
    5. ' ip' → logprob: -3.449202060699463
    6. ' data' → logprob: -3.949202060699463
    7. ' pos' → logprob: -3.949202060699463
    8. 'data' → logprob: -4.449202060699463
    9. ' index' → logprob: -4.449202060699463
    10. ' length' → logprob: -4.449202060699463

Token 50: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22263970971107483
    2. 'def' → logprob: -2.222639799118042
    3. ':' → logprob: -3.347639799118042
    4. ' def' → logprob: -3.597639799118042
    5. '
' → logprob: -4.347639560699463
    6. ')' → logprob: -5.597639560699463
    7. '    
' → logprob: -5.722639560699463
    8. ',' → logprob: -5.972639560699463
    9. '	def' → logprob: -6.972639560699463
    10. '<|end|>' → logprob: -7.347639560699463

Token 51: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.7311474680900574
    2. ' def' → logprob: -1.1061475276947021
    3. '
' → logprob: -2.606147527694702
    4. ':' → logprob: -3.231147527694702
    5. '   ' → logprob: -3.981147527694702
    6. '    
' → logprob: -4.231147289276123
    7. '_' → logprob: -4.856147289276123
    8. ' ' → logprob: -4.981147289276123
    9. ' =' → logprob: -4.981147289276123
    10. '=' → logprob: -5.731147289276123

Token 52: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004390594083815813
    2. '__' → logprob: -5.754390716552734
    3. '_init' → logprob: -7.129390716552734
    4. '_' → logprob: -8.754390716552734
    5. ' _' → logprob: -9.004390716552734
    6. ' init' → logprob: -9.754390716552734
    7. ' ' → logprob: -10.754390716552734
    8. ' def' → logprob: -11.254390716552734
    9. 'init' → logprob: -11.879390716552734
    10. '___' → logprob: -12.254390716552734

Token 53: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.246537173457909e-06
    2. 'ini' → logprob: -13.000003814697266
    3. 'nit' → logprob: -13.500003814697266
    4. 'it' → logprob: -15.250003814697266
    5. 'int' → logprob: -16.375003814697266
    6. 'in' → logprob: -16.750003814697266
    7. 'new' → logprob: -17.125003814697266
    8. '```' → logprob: -17.125003814697266
    9. 'inite' → logprob: -17.500003814697266
    10. 'call' → logprob: -17.875003814697266

Token 54: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26940733194351196
    2. '__(' → logprob: -2.144407272338867
    3. ' (' → logprob: -2.769407272338867
    4. '(self' → logprob: -2.894407272338867
    5. '<|end|>' → logprob: -8.019407272338867
    6. '_(' → logprob: -8.644407272338867
    7. '__' → logprob: -8.769407272338867
    8. '__(
' → logprob: -9.144407272338867
    9. '_' → logprob: -9.894407272338867
    10. ' ' → logprob: -10.269407272338867

Token 55: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015340241370722651
    2. ' self' → logprob: -6.5015339851379395
    3. 'input' → logprob: -10.376534461975098
    4. ' input' → logprob: -15.001534461975098
    5. '(self' → logprob: -16.50153350830078
    6. ' ' → logprob: -17.37653350830078
    7. '	self' → logprob: -18.12653350830078
    8. 's' → logprob: -18.37653350830078
    9. '
' → logprob: -18.75153350830078
    10. '   ' → logprob: -18.75153350830078

Token 56: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0855293869972229
    2. ' ,' → logprob: -2.835529327392578
    3. '(self' → logprob: -4.085529327392578
    4. '(' → logprob: -6.335529327392578
    5. ' (' → logprob: -6.585529327392578
    6. ' self' → logprob: -6.960529327392578
    7. ',input' → logprob: -7.335529327392578
    8. 'self' → logprob: -7.460529327392578
    9. ')' → logprob: -7.585529327392578
    10. ' )' → logprob: -8.335529327392578

Token 57: '       ' (ID: 309)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4778591990470886
    2. ' input' → logprob: -0.9778591990470886
    3. 'self' → logprob: -6.227859020233154
    4. ' self' → logprob: -6.477859020233154
    5. '   ' → logprob: -9.602859497070312
    6. 'ip' → logprob: -10.602859497070312
    7. ' ip' → logprob: -10.727859497070312
    8. 'inp' → logprob: -11.227859497070312
    9. ' inp' → logprob: -11.227859497070312
    10. 'inputs' → logprob: -11.477859497070312

Token 58: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2029440999031067
    2. ' self' → logprob: -1.702944040298462
    3. '       ' → logprob: -7.702944278717041
    4. 'pass' → logprob: -7.952944278717041
    5. ' pass' → logprob: -8.202943801879883
    6. '   ' → logprob: -8.452943801879883
    7. 'import' → logprob: -9.077943801879883
    8. 'input' → logprob: -9.702943801879883
    9. '...' → logprob: -11.577943801879883
    10. ' input' → logprob: -11.702943801879883

Token 59: '.input' (ID: 18322)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0015360506949946284
    2. '.input' → logprob: -6.626535892486572
    3. ' .' → logprob: -8.50153636932373
    4. '.user' → logprob: -13.87653636932373
    5. '.py' → logprob: -14.00153636932373
    6. ' ' → logprob: -14.12653636932373
    7. 'input' → logprob: -14.25153636932373
    8. '._' → logprob: -14.25153636932373
    9. '<|end|>' → logprob: -14.25153636932373
    10. '.ip' → logprob: -14.62653636932373

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14298859238624573
    2. '=' → logprob: -2.017988681793213
    3. ' ' → logprob: -8.517988204956055
    4. '  ' → logprob: -10.017988204956055
    5. ',' → logprob: -10.642988204956055
    6. 'data' → logprob: -12.017988204956055
    7. ':' → logprob: -12.142988204956055
    8. '=None' → logprob: -12.392988204956055
    9. '<|end|>' → logprob: -12.392988204956055
    10. 's' → logprob: -12.767988204956055

Token 61: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.4411661922931671
    2. 'sys' → logprob: -1.9411661624908447
    3. ' []' → logprob: -2.0661661624908447
    4. '[]' → logprob: -2.8161661624908447
    5. ' None' → logprob: -4.566166400909424
    6. ' ''' → logprob: -5.691166400909424
    7. ' lambda' → logprob: -6.316166400909424
    8. ' iter' → logprob: -6.441166400909424
    9. '""' → logprob: -6.441166400909424
    10. '''' → logprob: -6.441166400909424

Token 62: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.801997721195221
    2. '.' → logprob: -0.926997721195221
    3. ' .' → logprob: -1.9269976615905762
    4. '<|end|>' → logprob: -5.426997661590576
    5. '.argv' → logprob: -6.426997661590576
    6. '.stdout' → logprob: -6.676997661590576
    7. '.readline' → logprob: -6.801997661590576
    8. '._' → logprob: -8.051998138427734
    9. '.setdefault' → logprob: -8.176998138427734
    10. '<|end|>' → logprob: -8.301998138427734

Token 63: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.057827096432447433
    2. '.read' → logprob: -3.0578269958496094
    3. '.buffer' → logprob: -5.307826995849609
    4. '.readlines' → logprob: -6.057826995849609
    5. 'read' → logprob: -6.807826995849609
    6. 'buffer' → logprob: -7.807826995849609
    7. '.' → logprob: -8.30782699584961
    8. '<|end|>' → logprob: -9.18282699584961
    9. ')' → logprob: -12.05782699584961
    10. '_read' → logprob: -12.18282699584961

Token 64: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.007694525644183159
    2. '().' → logprob: -4.882694721221924
    3. '()
' → logprob: -10.132694244384766
    4. '(' → logprob: -10.257694244384766
    5. '())' → logprob: -12.757694244384766
    6. '()]' → logprob: -13.507694244384766
    7. ' ()' → logprob: -13.507694244384766
    8. '()

' → logprob: -13.632694244384766
    9. ')' → logprob: -13.757694244384766
    10. '()\' → logprob: -14.007694244384766

Token 65: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06255171447992325
    2. '   ' → logprob: -3.062551736831665
    3. '(' → logprob: -5.437551498413086
    4. 'def' → logprob: -5.562551498413086
    5. '()
' → logprob: -5.812551498413086
    6. '()

' → logprob: -7.562551498413086
    7. '    
' → logprob: -7.937551498413086
    8. '
' → logprob: -7.937551498413086
    9. ' def' → logprob: -8.187551498413086
    10. '(
' → logprob: -8.562551498413086

Token 66: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42609211802482605
    2. 'def' (adapté à ' def') → logprob: -1.1760921478271484
    3. ' def' → logprob: -3.3010921478271484
    4. '    
' → logprob: -7.301092147827148
    5. ' ' → logprob: -8.301092147827148
    6. '	def' → logprob: -8.801092147827148
    7. '@' → logprob: -8.801092147827148
    8. '
' → logprob: -8.801092147827148
    9. '    ' → logprob: -9.051092147827148
    10. '       ' → logprob: -11.176092147827148

Token 67: ' I' (ID: 357)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5262807607650757
    2. '_read' → logprob: -1.5262807607650757
    3. '():' → logprob: -1.6512807607650757
    4. 'read' → logprob: -2.2762808799743652
    5. ' readline' → logprob: -3.2762808799743652
    6. 'parse' → logprob: -3.4012808799743652
    7. ' read' → logprob: -3.5262808799743652
    8. '_get' → logprob: -3.9012808799743652
    9. '_parse' → logprob: -3.9012808799743652
    10. '_split' → logprob: -4.276280879974365

Token 68: '(self' (ID: 2402)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.036456529051065445
    2. 'nit' → logprob: -4.03645658493042
    3. 'N' → logprob: -4.91145658493042
    4. 'P' → logprob: -5.66145658493042
    5. 'nt' → logprob: -6.16145658493042
    6. '()' → logprob: -6.28645658493042
    7. 'np' → logprob: -6.53645658493042
    8. 'p' → logprob: -7.91145658493042
    9. '(self' → logprob: -8.036456108093262
    10. '_n' → logprob: -8.286456108093262

Token 69: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.040820907801389694
    2. 'N' → logprob: -3.915820837020874
    3. 'n' → logprob: -4.665821075439453
    4. ')' → logprob: -5.415821075439453
    5. ' ):' → logprob: -5.915821075439453
    6. 'P' → logprob: -7.040821075439453
    7. 'nt' → logprob: -7.040821075439453
    8. '):
' → logprob: -8.040821075439453
    9. 'p' → logprob: -8.540821075439453
    10. 'self' → logprob: -9.165821075439453

Token 70: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4767601490020752
    2. '(' → logprob: -1.8517601490020752
    3. '():' → logprob: -2.476760149002075
    4. '(self' → logprob: -2.851760149002075
    5. '()' → logprob: -3.351760149002075
    6. 'self' → logprob: -4.351759910583496
    7. '       ' → logprob: -5.476759910583496
    8. '.' → logprob: -5.726759910583496
    9. '.readline' → logprob: -5.726759910583496
    10. ' :' → logprob: -5.851759910583496

Token 71: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.014283623546361923
    2. ' int' → logprob: -4.264283657073975
    3. 'str' → logprob: -9.389283180236816
    4. ' str' → logprob: -10.639283180236816
    5. ' ' → logprob: -12.514283180236816
    6. '[int' → logprob: -12.764283180236816
    7. 'list' → logprob: -13.264283180236816
    8. '  ' → logprob: -13.764283180236816
    9. '(int' → logprob: -14.139283180236816
    10. '	int' → logprob: -14.264283180236816

Token 72: ':
' (ID: 734)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.05605347827076912
    2. ':' → logprob: -2.931053400039673
    3. '()' → logprob: -7.306053638458252
    4. '(' → logprob: -8.181053161621094
    5. '):' → logprob: -9.306053161621094
    6. '():
' → logprob: -9.556053161621094
    7. ' ():' → logprob: -10.931053161621094
    8. '(self' → logprob: -11.056053161621094
    9. ':
' → logprob: -11.806053161621094
    10. '       ' → logprob: -12.681053161621094

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13712754845619202
    2. ' return' → logprob: -3.012127637863159
    3. 'return' → logprob: -3.262127637863159
    4. '        ' → logprob: -3.637127637863159
    5. ' ' → logprob: -5.13712739944458
    6. '    ' → logprob: -5.13712739944458
    7. '   ' → logprob: -7.13712739944458
    8. '(' → logprob: -7.88712739944458
    9. '      ' → logprob: -8.012127876281738
    10. '()' → logprob: -8.387127876281738

Token 74: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07850490510463715
    2. ' return' → logprob: -2.703504800796509
    3. 'int' → logprob: -4.828505039215088
    4. '       ' → logprob: -7.703505039215088
    5. ' int' → logprob: -10.20350456237793
    6. ' ' → logprob: -11.07850456237793
    7. 'r' → logprob: -11.57850456237793
    8. '        ' → logprob: -12.32850456237793
    9. '        
' → logprob: -12.45350456237793
    10. 'ret' → logprob: -12.82850456237793

Token 75: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.008642582222819328
    2. 'int' → logprob: -4.758642673492432
    3. ' self' → logprob: -10.633642196655273
    4. ' ' → logprob: -12.633642196655273
    5. 'self' → logprob: -14.758642196655273
    6. '(int' → logprob: -15.258642196655273
    7. '<int' → logprob: -17.383642196655273
    8. '=int' → logprob: -18.008642196655273
    9. '	int' → logprob: -18.133642196655273
    10. '    ' → logprob: -18.258642196655273

Token 76: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16023580729961395
    2. '(self' → logprob: -1.9102357625961304
    3. '(
' → logprob: -11.785235404968262
    4. '(s' → logprob: -13.410235404968262
    5. '(

' → logprob: -13.910235404968262
    6. ' (' → logprob: -14.535235404968262
    7. '(this' → logprob: -15.160235404968262
    8. '(space' → logprob: -15.535235404968262
    9. '('' → logprob: -15.660235404968262
    10. '((' → logprob: -16.285236358642578

Token 77: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -6.749814019713085e-06
    2. '.' → logprob: -12.125006675720215
    3. ' .' → logprob: -14.750006675720215
    4. 'input' → logprob: -15.125006675720215
    5. ').' → logprob: -15.625006675720215
    6. '.INPUT' → logprob: -16.25000762939453
    7. '(input' → logprob: -16.37500762939453
    8. ')' → logprob: -16.75000762939453
    9. '.output' → logprob: -17.25000762939453
    10. '.in' → logprob: -17.50000762939453

Token 78: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.15335991978645325
    2. '().' → logprob: -2.153359889984131
    3. '()' → logprob: -3.653359889984131
    4. ' ())' → logprob: -8.778360366821289
    5. '()
' → logprob: -11.403360366821289
    6. '(' → logprob: -12.153360366821289
    7. '();)' → logprob: -13.028360366821289
    8. ' ()' → logprob: -13.028360366821289
    9. '())
' → logprob: -13.903360366821289
    10. '()`' → logprob: -14.153360366821289

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22066564857959747
    2. '<|end|>' → logprob: -2.345665693283081
    3. '
' → logprob: -2.970665693283081
    4. '<|end|>' → logprob: -4.220665454864502
    5. '\n' → logprob: -4.595665454864502
    6. ' ' → logprob: -5.095665454864502
    7. 'def' → logprob: -5.470665454864502
    8. '

' → logprob: -5.595665454864502
    9. ')' → logprob: -6.095665454864502
    10. '    
' → logprob: -6.470665454864502

Token 80: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37986433506011963
    2. 'def' (adapté à ' def') → logprob: -1.2548643350601196
    3. ' def' → logprob: -4.25486421585083
    4. ' ' → logprob: -4.62986421585083
    5. '    
' → logprob: -6.50486421585083
    6. '()' → logprob: -6.75486421585083
    7. ')' → logprob: -7.12986421585083
    8. '
' → logprob: -7.25486421585083
    9. '  ' → logprob: -7.62986421585083
    10. '(' → logprob: -7.62986421585083

Token 81: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.44710230827331543
    2. 'L' → logprob: -2.0721023082733154
    3. ' S' → logprob: -2.6971023082733154
    4. 'D' → logprob: -2.6971023082733154
    5. 'M' → logprob: -3.4471023082733154
    6. 'F' → logprob: -4.4471025466918945
    7. ' L' → logprob: -4.5721025466918945
    8. 'I' → logprob: -5.1971025466918945
    9. 'A' → logprob: -5.3221025466918945
    10. ' M' → logprob: -5.4471025466918945

Token 82: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0691194236278534
    2. '(' → logprob: -3.069119453430176
    3. '()' → logprob: -4.319119453430176
    4. 'elf' → logprob: -5.194119453430176
    5. 'tring' → logprob: -7.194119453430176
    6. 'tr' → logprob: -8.569119453430176
    7. '(t' → logprob: -9.319119453430176
    8. '```' → logprob: -9.569119453430176
    9. '()(' → logprob: -10.319119453430176
    10. 'el' → logprob: -10.319119453430176

Token 83: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011154872365295887
    2. '(self' → logprob: -5.761154651641846
    3. '())' → logprob: -5.886154651641846
    4. '()' → logprob: -6.011154651641846
    5. ' )' → logprob: -6.761154651641846
    6. 'self' → logprob: -7.511154651641846
    7. '(' → logprob: -7.761154651641846
    8. '):' → logprob: -8.261155128479004
    9. '   ' → logprob: -9.136155128479004
    10. ')return' → logprob: -9.761155128479004

Token 84: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0019877557642757893
    2. '(' → logprob: -6.251987934112549
    3. '():' → logprob: -10.25198745727539
    4. 'def' → logprob: -12.00198745727539
    5. '()' → logprob: -12.12698745727539
    6. ' (' → logprob: -12.50198745727539
    7. '   ' → logprob: -12.87698745727539
    8. 'elf' → logprob: -13.12698745727539
    9. 'self' → logprob: -13.25198745727539
    10. '(Self' → logprob: -13.87698745727539

Token 85: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.5790461897850037
    2. ' str' → logprob: -0.8290461897850037
    3. ' ' → logprob: -6.579046249389648
    4. ' self' → logprob: -7.454046249389648
    5. 'self' → logprob: -7.829046249389648
    6. '(str' → logprob: -7.954046249389648
    7. '<|end|>' → logprob: -9.329046249389648
    8. 's' → logprob: -9.954046249389648
    9. 'strip' → logprob: -10.329046249389648
    10. 'input' → logprob: -10.579046249389648

Token 86: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3516284227371216
    2. '(' → logprob: -1.8516284227371216
    3. '():' → logprob: -2.226628303527832
    4. ':' → logprob: -3.476628303527832
    5. '():
' → logprob: -8.351628303527832
    6. '(
' → logprob: -8.726628303527832
    7. '):' → logprob: -9.351628303527832
    8. '       ' → logprob: -9.726628303527832
    9. '()' → logprob: -10.601628303527832
    10. ':
' → logprob: -10.976628303527832

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.036971572786569595
    2. 'return' → logprob: -3.4119715690612793
    3. '()' → logprob: -5.911971569061279
    4. ' return' → logprob: -7.786971569061279
    5. '(' → logprob: -8.911972045898438
    6. '   ' → logprob: -10.911972045898438
    7. ':return' → logprob: -11.786972045898438
    8. '():' → logprob: -11.911972045898438
    9. '	return' → logprob: -12.536972045898438
    10. '      ' → logprob: -12.536972045898438

Token 88: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023879360407590866
    2. 'return' (adapté à ' return') → logprob: -3.773879289627075
    3. ' self' → logprob: -7.398879528045654
    4. ' return' → logprob: -10.773879051208496
    5. '       ' → logprob: -15.023879051208496
    6. '(self' → logprob: -16.023880004882812
    7. '   ' → logprob: -16.023880004882812
    8. '        
' → logprob: -16.273880004882812
    9. '	self' → logprob: -17.273880004882812
    10. 's' → logprob: -17.773880004882812

Token 89: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.31326377391815186
    2. ' self' → logprob: -1.3132637739181519
    3. 'str' → logprob: -13.438263893127441
    4. '(self' → logprob: -15.438263893127441
    5. ' str' → logprob: -15.563263893127441
    6. '	self' → logprob: -16.438262939453125
    7. ' ' → logprob: -17.438262939453125
    8. 's' → logprob: -17.438262939453125
    9. ' ' → logprob: -17.938262939453125
    10. '   ' → logprob: -18.188262939453125

Token 90: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -4.000763510703109e-05
    2. 'input' → logprob: -10.250040054321289
    3. '.' → logprob: -12.875040054321289
    4. ' .' → logprob: -13.250040054321289
    5. ' input' → logprob: -15.125040054321289
    6. '<input' → logprob: -18.12504005432129
    7. '.output' → logprob: -18.62504005432129
    8. '.INPUT' → logprob: -18.62504005432129
    9. '	input' → logprob: -18.87504005432129
    10. '.S' → logprob: -19.25004005432129

Token 91: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007152927573770285
    2. '().' → logprob: -7.250715255737305
    3. '()
' → logprob: -13.250715255737305
    4. '())' → logprob: -14.125715255737305
    5. '(' → logprob: -14.250715255737305
    6. ' ()' → logprob: -14.375715255737305
    7. '()

' → logprob: -14.625715255737305
    8. '()]' → logprob: -15.625715255737305
    9. '()\' → logprob: -15.625715255737305
    10. '()`' → logprob: -16.000715255737305

Token 92: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.07889033854007721
    2. 'rstrip' → logprob: -2.578890323638916
    3. ' strip' → logprob: -14.328890800476074
    4. 'str' → logprob: -17.203889846801758
    5. '_strip' → logprob: -17.203889846801758
    6. '.rstrip' → logprob: -18.203889846801758
    7. 'rst' → logprob: -19.328889846801758
    8. 'r' → logprob: -19.328889846801758
    9. '(strip' → logprob: -19.328889846801758
    10. 'decode' → logprob: -19.828889846801758

Token 93: '('\' (ID: 24345)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12026241421699524
    2. '('\' → logprob: -2.370262384414673
    3. '(' → logprob: -4.870262622833252
    4. '('' → logprob: -5.370262622833252
    5. '()\' → logprob: -5.995262622833252
    6. '()
' → logprob: -6.620262622833252
    7. '("\' → logprob: -6.745262622833252
    8. ''' → logprob: -6.995262622833252
    9. '\n' → logprob: -7.370262622833252
    10. ''\' → logprob: -8.370262145996094

Token 94: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -9.65101717156358e-05
    2. '\n' → logprob: -9.250096321105957
    3. 'r' → logprob: -15.375096321105957
    4. ' \' → logprob: -17.000097274780273
    5. ' n' → logprob: -17.125097274780273
    6. '<|end|>' → logprob: -17.750097274780273
    7. 'u' → logprob: -18.125097274780273
    8. 'newline' → logprob: -18.500097274780273
    9. '
' → logprob: -19.250097274780273
    10. '012' → logprob: -19.375097274780273

Token 95: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0007616263465024531
    2. ')' → logprob: -7.25076150894165
    3. '')
' → logprob: -10.625761985778809
    4. '")' → logprob: -11.250761985778809
    5. ''' → logprob: -11.500761985778809
    6. ''))' → logprob: -12.875761985778809
    7. '')"' → logprob: -14.375761985778809
    8. ' ')' → logprob: -14.875761985778809
    9. '()' → logprob: -14.875761985778809
    10. '')

' → logprob: -15.750761985778809

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5709325075149536
    2. '
' → logprob: -0.9459325075149536
    3. '<|end|>' → logprob: -3.320932388305664
    4. '<|end|>' → logprob: -5.195932388305664
    5. '    
' → logprob: -5.945932388305664
    6. '

' → logprob: -7.070932388305664
    7. 'def' → logprob: -7.570932388305664
    8. '    ' → logprob: -8.570932388305664
    9. ' ' → logprob: -8.945932388305664
    10. '  ' → logprob: -8.945932388305664

Token 97: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.033397968858480453
    2. '   ' → logprob: -4.158398151397705
    3. '@' → logprob: -4.533398151397705
    4. 'D' → logprob: -6.158398151397705
    5. 'd' → logprob: -6.283398151397705
    6. ' def' → logprob: -6.658398151397705
    7. '	def' → logprob: -7.408398151397705
    8. '    
' → logprob: -8.658397674560547
    9. '#' → logprob: -9.283397674560547
    10. 'A' → logprob: -9.908397674560547

Token 98: ' IL' (ID: 16067)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.9038677215576172
    2. ' L' → logprob: -1.7788677215576172
    3. 'I' → logprob: -2.153867721557617
    4. 'LI' → logprob: -3.028867721557617
    5. 'LS' → logprob: -3.028867721557617
    6. ' LS' → logprob: -3.778867721557617
    7. 'F' → logprob: -4.278867721557617
    8. '_list' → logprob: -4.278867721557617
    9. 'lst' → logprob: -4.278867721557617
    10. 'l' → logprob: -4.403867721557617

Token 99: '(self' (ID: 2402)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.16383638978004456
    2. '()' → logprob: -2.1638364791870117
    3. '(self' → logprob: -4.038836479187012
    4. 'ine' → logprob: -4.913836479187012
    5. 'IST' → logprob: -5.288836479187012
    6. 'ines' → logprob: -5.788836479187012
    7. 'st' → logprob: -6.038836479187012
    8. ')' → logprob: -8.788836479187012
    9. '():' → logprob: -9.913836479187012
    10. 'S' → logprob: -10.038836479187012

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8586183190345764
    2. '(self' → logprob: -0.8586183190345764
    3. '):' → logprob: -2.3586182594299316
    4. '()' → logprob: -3.1086182594299316
    5. '():' → logprob: -5.233618259429932
    6. 'self' → logprob: -5.358618259429932
    7. '   ' → logprob: -7.233618259429932
    8. ' ' → logprob: -7.608618259429932
    9. ' ):' → logprob: -8.10861873626709
    10. ' )' → logprob: -8.10861873626709

Token 101: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0073205092921853065
    2. '(' → logprob: -5.132320404052734
    3. '():' → logprob: -7.132320404052734
    4. '()' → logprob: -8.632320404052734
    5. '[]' → logprob: -8.882320404052734
    6. 'self' → logprob: -9.632320404052734
    7. 'ist' → logprob: -9.757320404052734
    8. ':' → logprob: -10.132320404052734
    9. '[' → logprob: -10.382320404052734
    10. '   ' → logprob: -10.382320404052734

Token 102: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.526702344417572
    2. ' list' → logprob: -0.901702344417572
    3. 'int' → logprob: -6.401702404022217
    4. 'ist' → logprob: -6.651702404022217
    5. 'List' → logprob: -8.276701927185059
    6. '[' → logprob: -9.151701927185059
    7. '[int' → logprob: -9.526701927185059
    8. 'lambda' → logprob: -10.151701927185059
    9. ' [' → logprob: -10.401701927185059
    10. ' int' → logprob: -10.526701927185059

Token 103: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.044721733778715134
    2. '[' → logprob: -4.044721603393555
    3. '(self' → logprob: -5.044721603393555
    4. '()' → logprob: -5.044721603393555
    5. '(int' → logprob: -5.294721603393555
    6. '(' → logprob: -5.669721603393555
    7. '<int' → logprob: -6.544721603393555
    8. '<|end|>' → logprob: -7.044721603393555
    9. '():' → logprob: -7.419721603393555
    10. '   ' → logprob: -8.294721603393555

Token 104: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07721585035324097
    2. ']:' → logprob: -2.7022159099578857
    3. '():' → logprob: -5.077215671539307
    4. '):
' → logprob: -7.077215671539307
    5. '():
' → logprob: -10.452216148376465
    6. ' ):' → logprob: -10.452216148376465
    7. ']):' → logprob: -10.577216148376465
    8. ']:
' → logprob: -10.702216148376465
    9. '()' → logprob: -10.952216148376465
    10. ':' → logprob: -11.202216148376465

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014731602743268013
    2. 'return' → logprob: -4.514731407165527
    3. '()' → logprob: -6.389731407165527
    4. ' return' → logprob: -6.764731407165527
    5. '():' → logprob: -8.264731407165527
    6. '[]' → logprob: -8.514731407165527
    7. ':' → logprob: -8.639731407165527
    8. '(' → logprob: -9.389731407165527
    9. '=' → logprob: -10.764731407165527
    10. ' =' → logprob: -11.014731407165527

Token 106: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6123725771903992
    2. ' list' → logprob: -1.612372636795044
    3. ' return' → logprob: -1.612372636795044
    4. 'list' → logprob: -2.862372636795044
    5. '   ' → logprob: -6.862372398376465
    6. '       ' → logprob: -7.362372398376465
    7. 'map' → logprob: -8.862372398376465
    8. '    ' → logprob: -9.612372398376465
    9. ' map' → logprob: -9.737372398376465
    10. ' ' → logprob: -10.987372398376465

Token 107: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5763527154922485
    2. 'list' → logprob: -0.8263527154922485
    3. '[list' → logprob: -7.826352596282959
    4. '	list' → logprob: -12.701353073120117
    5. '[' → logprob: -12.701353073120117
    6. 'map' → logprob: -12.951353073120117
    7. ' [' → logprob: -13.326353073120117
    8. '[int' → logprob: -13.701353073120117
    9. ' ' → logprob: -14.076353073120117
    10. '(list' → logprob: -14.451353073120117

Token 108: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00010986098641296849
    2. '(' → logprob: -9.125109672546387
    3. '(
' → logprob: -14.625109672546387
    4. '(int' → logprob: -15.625109672546387
    5. '	map' → logprob: -15.875109672546387
    6. '()' → logprob: -16.375110626220703
    7. 'map' → logprob: -17.125110626220703
    8. '(m' → logprob: -17.250110626220703
    9. ' map' → logprob: -17.250110626220703
    10. '[' → logprob: -17.375110626220703

Token 109: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0014220185112208128
    2. '(' → logprob: -6.626421928405762
    3. ',int' → logprob: -10.626421928405762
    4. '(
' → logprob: -10.626421928405762
    5. ')' → logprob: -11.376421928405762
    6. '<int' → logprob: -11.376421928405762
    7. ' (' → logprob: -12.126421928405762
    8. 'int' → logprob: -12.501421928405762
    9. '	int' → logprob: -12.501421928405762
    10. '=int' → logprob: -12.751421928405762

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012919136323034763
    2. ',self' → logprob: -4.887918949127197
    3. '(self' → logprob: -5.637918949127197
    4. ' ,' → logprob: -6.387918949127197
    5. ' (' → logprob: -11.262919425964355
    6. '(' → logprob: -11.262919425964355
    7. ' self' → logprob: -11.387919425964355
    8. 'self' → logprob: -12.012919425964355
    9. ')' → logprob: -12.137919425964355
    10. '),' → logprob: -12.762919425964355

Token 111: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.05492358282208443
    2. 'self' → logprob: -2.9299235343933105
    3. '   ' → logprob: -11.054924011230469
    4. '       ' → logprob: -11.429924011230469
    5. '	self' → logprob: -12.304924011230469
    6. ' ' → logprob: -12.554924011230469
    7. '(self' → logprob: -12.804924011230469
    8. '    ' → logprob: -13.304924011230469
    9. '  ' → logprob: -14.304924011230469
    10. ',self' → logprob: -15.054924011230469

Token 112: '.input' (ID: 18322)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.02322288230061531
    2. '.input' → logprob: -4.398222923278809
    3. ' .' → logprob: -5.898222923278809
    4. '(self' → logprob: -6.023222923278809
    5. '(' → logprob: -6.273222923278809
    6. '(input' → logprob: -6.523222923278809
    7. ' (' → logprob: -6.648222923278809
    8. '.' → logprob: -8.148222923278809
    9. ' ().' → logprob: -9.023222923278809
    10. '.S' → logprob: -9.148222923278809

Token 113: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.320199877838604e-07
    2. '()' → logprob: -15.25
    3. ' ().' → logprob: -15.75
    4. '()))' → logprob: -18.375
    5. '.split' → logprob: -19.625
    6. '))' → logprob: -19.75
    7. 'split' → logprob: -19.875
    8. '(' → logprob: -20.625
    9. '().__' → logprob: -20.75
    10. ')' → logprob: -20.75

Token 114: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.012427947483956814
    2. 'rstrip' → logprob: -4.762427806854248
    3. 'strip' → logprob: -5.637427806854248
    4. ')' → logprob: -8.637428283691406
    5. ' split' → logprob: -9.887428283691406
    6. '().' → logprob: -12.012428283691406
    7. 'read' → logprob: -12.637428283691406
    8. ' ' → logprob: -12.887428283691406
    9. '(split' → logprob: -13.512428283691406
    10. 'rs' → logprob: -14.137428283691406

Token 115: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.019532108679413795
    2. '()' → logprob: -4.269532203674316
    3. '))' → logprob: -5.269532203674316
    4. '()))
' → logprob: -8.644532203674316
    5. '())' → logprob: -11.519532203674316
    6. '()));' → logprob: -11.769532203674316
    7. '(' → logprob: -12.394532203674316
    8. '()))

' → logprob: -12.519532203674316
    9. '())))' → logprob: -13.019532203674316
    10. '()))
' → logprob: -13.644532203674316

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010376152582466602
    2. 'def' → logprob: -5.3853759765625
    3. '
' → logprob: -5.8853759765625
    4. '    
' → logprob: -6.8853759765625
    5. '()' → logprob: -7.8853759765625
    6. '<|end|>' → logprob: -8.1353759765625
    7. ' def' → logprob: -8.7603759765625
    8. ')' → logprob: -8.8853759765625
    9. '(' → logprob: -8.8853759765625
    10. '_' → logprob: -9.1353759765625

Token 117: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.08853411674499512
    2. 'D' → logprob: -2.963534116744995
    3. '   ' → logprob: -3.963534116744995
    4. ' def' → logprob: -4.588534355163574
    5. 'P' → logprob: -7.213534355163574
    6. '@' → logprob: -7.463534355163574
    7. 'L' → logprob: -7.838534355163574
    8. 'DP' → logprob: -7.838534355163574
    9. 'DS' → logprob: -7.963534355163574
    10. 'DL' → logprob: -8.338534355163574

Token 118: ' SL' (ID: 30659)
  Prédit: ' FL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' FL' → logprob: -0.9455894827842712
    2. 'FL' → logprob: -1.320589542388916
    3. 'L' → logprob: -1.570589542388916
    4. 'F' → logprob: -2.445589542388916
    5. ' L' → logprob: -3.945589542388916
    6. 'OL' → logprob: -4.695589542388916
    7. ' ' → logprob: -6.195589542388916
    8. ' OL' → logprob: -6.320589542388916
    9. 'I' → logprob: -6.445589542388916
    10. ' F' → logprob: -6.695589542388916

Token 119: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0029598698019981384
    2. '(' → logprob: -5.877959728240967
    3. '()' → logprob: -10.127960205078125
    4. 'L' → logprob: -10.627960205078125
    5. 'C' → logprob: -11.127960205078125
    6. 'S' → logprob: -11.252960205078125
    7. 'A' → logprob: -11.377960205078125
    8. ')' → logprob: -11.502960205078125
    9. '(s' → logprob: -11.627960205078125
    10. '   ' → logprob: -12.002960205078125

Token 120: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014021758921444416
    2. '(self' → logprob: -4.389021873474121
    3. 'self' → logprob: -6.889021873474121
    4. '   ' → logprob: -8.639021873474121
    5. '):
' → logprob: -8.639021873474121
    6. ')(' → logprob: -10.264021873474121
    7. '):' → logprob: -10.389021873474121
    8. '       ' → logprob: -10.889021873474121
    9. ' )' → logprob: -11.014021873474121
    10. '()' → logprob: -12.264021873474121

Token 121: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00013679367839358747
    2. '->' → logprob: -9.750136375427246
    3. ' ->' → logprob: -9.875136375427246
    4. '(' → logprob: -11.750136375427246
    5. ')' → logprob: -11.750136375427246
    6. '(s' → logprob: -12.250136375427246
    7. ' (' → logprob: -12.500136375427246
    8. 'self' → logprob: -13.750136375427246
    9. '   ' → logprob: -14.875136375427246
    10. '(sel' → logprob: -15.000136375427246

Token 122: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.9424725148128346e-05
    2. ' list' → logprob: -10.000049591064453
    3. 'ist' → logprob: -13.250049591064453
    4. 'str' → logprob: -13.250049591064453
    5. '[list' → logprob: -14.875049591064453
    6. 'List' → logprob: -16.875049591064453
    7. '[str' → logprob: -17.625049591064453
    8. 'int' → logprob: -18.250049591064453
    9. '(list' → logprob: -18.875049591064453
    10. 'lst' → logprob: -19.000049591064453

Token 123: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -4.320199877838604e-07
    2. 'str' → logprob: -15.125
    3. '[' → logprob: -16.5
    4. '<|end|>' → logprob: -18.375
    5. '[int' → logprob: -18.375
    6. '[s' → logprob: -18.625
    7. '[
' → logprob: -18.625
    8. '(str' → logprob: -19.75
    9. ' ' → logprob: -20.0
    10. ' [' → logprob: -20.125

Token 124: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.44564661383628845
    2. '()' → logprob: -1.5706466436386108
    3. '():' → logprob: -2.8206465244293213
    4. '):
' → logprob: -3.0706465244293213
    5. ')' → logprob: -4.4456467628479
    6. '()):
' → logprob: -4.4456467628479
    7. '():
' → logprob: -4.6956467628479
    8. ']):' → logprob: -5.0706467628479
    9. '   ' → logprob: -6.5706467628479
    10. ' ):' → logprob: -7.1956467628479

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011277174344286323
    2. ' return' → logprob: -7.87612771987915
    3. 'return' → logprob: -8.376127243041992
    4. '()' → logprob: -9.001127243041992
    5. '():
' → logprob: -9.376127243041992
    6. '():' → logprob: -9.626127243041992
    7. '(self' → logprob: -9.876127243041992
    8. ':' → logprob: -10.376127243041992
    9. '(' → logprob: -10.501127243041992
    10. '):
' → logprob: -10.876127243041992

Token 126: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023258987814188004
    2. ' return' → logprob: -3.773258924484253
    3. '       ' → logprob: -11.773259162902832
    4. 'self' → logprob: -12.273259162902832
    5. 'def' → logprob: -14.148259162902832
    6. '   ' → logprob: -16.273258209228516
    7. ' ' → logprob: -16.523258209228516
    8. ' self' → logprob: -16.648258209228516
    9. ':return' → logprob: -16.773258209228516
    10. '
' → logprob: -17.023258209228516

Token 127: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05248463153839111
    2. 'list' → logprob: -3.0524845123291016
    3. ' self' → logprob: -5.677484512329102
    4. ' list' → logprob: -7.802484512329102
    5. '[self' → logprob: -9.927484512329102
    6. '(self' → logprob: -11.552484512329102
    7. 'map' → logprob: -16.4274845123291
    8. '(list' → logprob: -16.5524845123291
    9. '[]' → logprob: -17.5524845123291
    10. '   ' → logprob: -17.6774845123291

Token 128: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.003603036515414715
    2. 'input' → logprob: -5.628602981567383
    3. '.' → logprob: -13.628602981567383
    4. '.S' → logprob: -14.628602981567383
    5. '<input' → logprob: -14.753602981567383
    6. ' .' → logprob: -15.253602981567383
    7. '[input' → logprob: -16.003602981567383
    8. ' input' → logprob: -16.253602981567383
    9. 'import' → logprob: -16.378602981567383
    10. '().' → logprob: -16.503602981567383

Token 129: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0325924449716695e-05
    2. '()' → logprob: -11.50001049041748
    3. ' ().' → logprob: -16.125009536743164
    4. '.split' → logprob: -17.500009536743164
    5. '.strip' → logprob: -18.875009536743164
    6. '.' → logprob: -19.500009536743164
    7. '.rstrip' → logprob: -19.750009536743164
    8. '().'' → logprob: -19.875009536743164
    9. '()
' → logprob: -19.875009536743164
    10. '(' → logprob: -20.000009536743164

Token 130: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0071498495526611805
    2. 'rstrip' → logprob: -5.007149696350098
    3. 'strip' → logprob: -7.757149696350098
    4. 'rs' → logprob: -12.007149696350098
    5. 'spl' → logprob: -14.507149696350098
    6. ' split' → logprob: -16.132150650024414
    7. 'rst' → logprob: -18.132150650024414
    8. '(split' → logprob: -18.507150650024414
    9. 's' → logprob: -19.257150650024414
    10. 'str' → logprob: -19.632150650024414

Token 131: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.04321419075131416
    2. '(' → logprob: -3.1682140827178955
    3. '('' → logprob: -8.918213844299316
    4. '<|end|>' → logprob: -11.543213844299316
    5. ' ()' → logprob: -11.793213844299316
    6. '()]' → logprob: -12.043213844299316
    7. '()`' → logprob: -12.168213844299316
    8. '()
' → logprob: -12.543213844299316
    9. '("("' → logprob: -12.543213844299316
    10. '(

' → logprob: -12.543213844299316

Token 132: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6891409754753113
    2. '   ' → logprob: -0.8141409754753113
    3. 'def' → logprob: -3.939141035079956
    4. '    
' → logprob: -4.189140796661377
    5. '<|end|>' → logprob: -4.689140796661377
    6. 'class' → logprob: -5.314140796661377
    7. '

' → logprob: -6.814140796661377
    8. '<|end|>' → logprob: -7.189140796661377
    9. '@' → logprob: -7.314140796661377
    10. '\n' → logprob: -7.689140796661377

Token 133: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0030950047075748444
    2. '   ' → logprob: -6.2530951499938965
    3. 'class' → logprob: -7.5030951499938965
    4. '@' → logprob: -7.7530951499938965
    5. ' def' → logprob: -10.003094673156738
    6. '    
' → logprob: -10.253094673156738
    7. '	def' → logprob: -10.753094673156738
    8. '
' → logprob: -10.878094673156738
    9. '#' → logprob: -11.253094673156738
    10. ' ' → logprob: -11.753094673156738

Token 134: ' I' (ID: 357)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.3309067189693451
    2. 'FL' → logprob: -2.580906629562378
    3. 'L' → logprob: -3.080906629562378
    4. 'D' → logprob: -3.830906629562378
    5. 'T' → logprob: -3.830906629562378
    6. ' F' → logprob: -4.080906867980957
    7. 'C' → logprob: -4.205906867980957
    8. 'I' → logprob: -4.830906867980957
    9. ' FL' → logprob: -4.955906867980957
    10. 'IL' → logprob: -4.955906867980957

Token 135: 'LS' (ID: 10172)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.13732926547527313
    2. '()' → logprob: -3.512329339981079
    3. 'M' → logprob: -3.762329339981079
    4. 'I' → logprob: -4.5123291015625
    5. '2' → logprob: -4.6373291015625
    6. 'S' → logprob: -4.7623291015625
    7. 'N' → logprob: -4.8873291015625
    8. '1' → logprob: -5.0123291015625
    9. 'D' → logprob: -5.2623291015625
    10. 'A' → logprob: -5.5123291015625

Token 136: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00028946425300091505
    2. '(' → logprob: -9.000289916992188
    3. 'L' → logprob: -9.250289916992188
    4. '()' → logprob: -10.875289916992188
    5. 'elf' → logprob: -11.500289916992188
    6. ' (' → logprob: -11.500289916992188
    7. 'self' → logprob: -11.875289916992188
    8. '(sel' → logprob: -12.625289916992188
    9. '```' → logprob: -12.875289916992188
    10. '()(' → logprob: -13.250289916992188

Token 137: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005742375273257494
    2. ')' → logprob: -5.25574254989624
    3. '()' → logprob: -8.630742073059082
    4. ')(' → logprob: -9.630742073059082
    5. 'self' → logprob: -9.630742073059082
    6. '   ' → logprob: -9.755742073059082
    7. '):' → logprob: -10.255742073059082
    8. '(' → logprob: -10.755742073059082
    9. ' (' → logprob: -10.755742073059082
    10. '):
' → logprob: -10.880742073059082

Token 138: ' n' (ID: 297)
  Prédit: ' sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sep' → logprob: -1.0447112321853638
    2. 'sep' → logprob: -1.4197112321853638
    3. ')' → logprob: -2.294711112976074
    4. 'n' → logprob: -2.544711112976074
    5. 'delimiter' → logprob: -3.044711112976074
    6. ' n' → logprob: -3.169711112976074
    7. 'del' → logprob: -4.044711112976074
    8. 'separator' → logprob: -4.044711112976074
    9. ' delimiter' → logprob: -4.294711112976074
    10. ' delim' → logprob: -4.419711112976074

Token 139: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34305715560913086
    2. '):' → logprob: -1.3430571556091309
    3. ')' → logprob: -3.718057155609131
    4. ':int' → logprob: -5.468057155609131
    5. '=' → logprob: -7.593057155609131
    6. '=None' → logprob: -8.843057632446289
    7. ' :' → logprob: -9.468057632446289
    8. ' ):' → logprob: -9.843057632446289
    9. '):
' → logprob: -10.468057632446289
    10. '   ' → logprob: -11.718057632446289

Token 140: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02688906528055668
    2. ' int' → logprob: -3.6518890857696533
    3. ')' → logprob: -7.526888847351074
    4. '[int' → logprob: -11.526888847351074
    5. '=int' → logprob: -11.776888847351074
    6. ':int' → logprob: -12.026888847351074
    7. '):' → logprob: -12.026888847351074
    8. '  ' → logprob: -12.401888847351074
    9. ' )' → logprob: -12.526888847351074
    10. ']int' → logprob: -12.901888847351074

Token 141: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03813490271568298
    2. '):' → logprob: -3.288134813308716
    3. '):
' → logprob: -9.413134574890137
    4. ')->' → logprob: -12.163134574890137
    5. ' )' → logprob: -12.788134574890137
    6. '):
' → logprob: -13.538134574890137
    7. ':' → logprob: -14.038134574890137
    8. '   ' → logprob: -14.913134574890137
    9. ' ):' → logprob: -14.913134574890137
    10. ',' → logprob: -15.663134574890137

Token 142: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.5616879463195801
    2. ':' → logprob: -0.9366879463195801
    3. ' ->' → logprob: -3.93668794631958
    4. ')' → logprob: -4.81168794631958
    5. '():' → logprob: -4.93668794631958
    6. '()' → logprob: -6.68668794631958
    7. '()->' → logprob: -7.18668794631958
    8. '   ' → logprob: -8.186687469482422
    9. '):' → logprob: -8.811687469482422
    10. '(' → logprob: -9.436687469482422

Token 143: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6397061944007874
    2. ' list' → logprob: -0.7647061944007874
    3. '[list' → logprob: -5.014706134796143
    4. ' [' → logprob: -8.0147066116333
    5. 'List' → logprob: -10.1397066116333
    6. ' tuple' → logprob: -11.1397066116333
    7. '[' → logprob: -11.1397066116333
    8. 'tuple' → logprob: -11.1397066116333
    9. '[List' → logprob: -11.7647066116333
    10. ' ' → logprob: -12.8897066116333

Token 144: '[int' (ID: 40124)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.004561019130051136
    2. '[int' → logprob: -5.754560947418213
    3. '[List' → logprob: -7.254560947418213
    4. ':' → logprob: -7.754560947418213
    5. '[' → logprob: -8.629561424255371
    6. '[str' → logprob: -9.754561424255371
    7. ':list' → logprob: -13.004561424255371
    8. '[]' → logprob: -13.379561424255371
    9. ':
' → logprob: -13.379561424255371
    10. '[
' → logprob: -13.379561424255371

Token 145: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.02847590297460556
    2. ']:
' → logprob: -3.6534759998321533
    3. ']' → logprob: -6.653475761413574
    4. '):' → logprob: -7.903475761413574
    5. ']:
' → logprob: -8.278475761413574
    6. '):
' → logprob: -9.528475761413574
    7. '[int' → logprob: -9.653475761413574
    8. '[' → logprob: -10.028475761413574
    9. ':' → logprob: -10.028475761413574
    10. ']:

' → logprob: -11.528475761413574

Token 146: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020937370136380196
    2. '[]' → logprob: -5.145937442779541
    3. '[' → logprob: -5.770937442779541
    4. ' [' → logprob: -6.020937442779541
    5. ' return' → logprob: -6.145937442779541
    6. '	' → logprob: -6.395937442779541
    7. '   ' → logprob: -7.145937442779541
    8. ':' → logprob: -7.270937442779541
    9. ' ' → logprob: -7.520937442779541
    10. 'return' → logprob: -7.770937442779541

Token 147: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6908921003341675
    2. ' return' → logprob: -1.0658921003341675
    3. '       ' → logprob: -1.9408921003341675
    4. 'result' → logprob: -5.440892219543457
    5. ' result' → logprob: -6.190892219543457
    6. 'res' → logprob: -6.815892219543457
    7. 'lst' → logprob: -7.565892219543457
    8. ' lines' → logprob: -7.940892219543457
    9. 'data' → logprob: -7.940892219543457
    10. ' res' → logprob: -8.190892219543457

Token 148: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.062396835535764694
    2. '[int' → logprob: -2.937396764755249
    3. 'list' → logprob: -5.312397003173828
    4. '[' → logprob: -6.437397003173828
    5. ' [' → logprob: -7.812397003173828
    6. '[self' → logprob: -8.312397003173828
    7. '[List' → logprob: -8.562397003173828
    8. '[item' → logprob: -10.687397003173828
    9. ' list' → logprob: -10.687397003173828
    10. '   ' → logprob: -11.687397003173828

Token 149: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.18033467233181
    2. 'self' → logprob: -1.8053346872329712
    3. '   ' → logprob: -7.930334568023682
    4. ' int' → logprob: -9.30533504486084
    5. ' self' → logprob: -9.80533504486084
    6. '       ' → logprob: -10.68033504486084
    7. '    ' → logprob: -11.30533504486084
    8. '  ' → logprob: -11.43033504486084
    9. '           ' → logprob: -11.68033504486084
    10. '(int' → logprob: -12.43033504486084

Token 150: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002547832846175879
    2. '(' → logprob: -8.37525463104248
    3. '(x' → logprob: -11.12525463104248
    4. '(s' → logprob: -12.25025463104248
    5. '(
' → logprob: -13.37525463104248
    6. 'self' → logprob: -13.75025463104248
    7. '((' → logprob: -14.50025463104248
    8. '(sys' → logprob: -14.75025463104248
    9. ']' → logprob: -15.50025463104248
    10. '(

' → logprob: -15.75025463104248

Token 151: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.20303399860858917
    2. '().' → logprob: -1.7030340433120728
    3. 'input' → logprob: -7.078033924102783
    4. '.' → logprob: -7.828033924102783
    5. '.S' → logprob: -8.578034400939941
    6. 'S' → logprob: -9.328034400939941
    7. '.I' → logprob: -10.578034400939941
    8. ' .' → logprob: -11.078034400939941
    9. '(input' → logprob: -11.328034400939941
    10. '()' → logprob: -11.453034400939941

Token 152: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014775192365050316
    2. '().' → logprob: -4.389775276184082
    3. '()' → logprob: -6.139775276184082
    4. ' ())' → logprob: -10.014775276184082
    5. '()]' → logprob: -10.014775276184082
    6. '())
' → logprob: -12.139775276184082
    7. '()
' → logprob: -12.389775276184082
    8. ')' → logprob: -12.514775276184082
    9. ' ()' → logprob: -13.889775276184082
    10. '(' → logprob: -13.889775276184082

Token 153: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004918262362480164
    2. '().' → logprob: -5.629918098449707
    3. 'for' → logprob: -7.379918098449707
    4. ' for' → logprob: -7.629918098449707
    5. ')' → logprob: -9.004918098449707
    6. '.strip' → logprob: -10.629918098449707
    7. 'rstrip' → logprob: -11.004918098449707
    8. '()]' → logprob: -11.129918098449707
    9. '.rstrip' → logprob: -11.379918098449707
    10. '())' → logprob: -12.379918098449707

Token 154: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00862119346857071
    2. ' _' → logprob: -4.7586212158203125
    3. ' in' → logprob: -12.383621215820312
    4. ' range' → logprob: -13.633621215820312
    5. '__' → logprob: -14.883621215820312
    6. ' ' → logprob: -15.258621215820312
    7. '_in' → logprob: -15.633621215820312
    8. 'range' → logprob: -15.883621215820312
    9. '_range' → logprob: -15.883621215820312
    10. '_i' → logprob: -16.008621215820312

Token 155: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010096495971083641
    2. 'in' → logprob: -4.760096549987793
    3. 'range' → logprob: -6.635096549987793
    4. '_' → logprob: -9.885096549987793
    5. ' _' → logprob: -9.885096549987793
    6. ' range' → logprob: -10.385096549987793
    7. ' ' → logprob: -10.635096549987793
    8. '_range' → logprob: -12.760096549987793
    9. 'n' → logprob: -12.885096549987793
    10. '  ' → logprob: -13.135096549987793

Token 156: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38687315583229065
    2. ' range' → logprob: -1.1368731260299683
    3. '	range' → logprob: -13.886873245239258
    4. '_range' → logprob: -14.136873245239258
    5. '(range' → logprob: -14.886873245239258
    6. 'rang' → logprob: -17.386873245239258
    7. '.range' → logprob: -17.511873245239258
    8. '_' → logprob: -17.761873245239258
    9. ' ' → logprob: -18.261873245239258
    10. ' xrange' → logprob: -18.386873245239258

Token 157: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -11.750008583068848
    3. 'n' → logprob: -15.875008583068848
    4. ' (' → logprob: -17.25000762939453
    5. ' n' → logprob: -17.37500762939453
    6. '(
' → logprob: -18.25000762939453
    7. '	n' → logprob: -19.00000762939453
    8. '   ' → logprob: -19.75000762939453
    9. '((' → logprob: -20.75000762939453
    10. ')n' → logprob: -20.75000762939453

Token 158: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.011672962456941605
    2. ']' → logprob: -4.6366729736328125
    3. ')' → logprob: -6.2616729736328125
    4. '])' → logprob: -13.511672973632812
    5. '()]' → logprob: -13.511672973632812
    6. '   ' → logprob: -14.011672973632812
    7. '}]' → logprob: -14.511672973632812
    8. ' ]' → logprob: -14.511672973632812
    9. ')])' → logprob: -14.761672973632812
    10. ')}' → logprob: -15.136672973632812

Token 159: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.48385414481163025
    2. 'D' → logprob: -1.1088541746139526
    3. 'S' → logprob: -4.358854293823242
    4. '   ' → logprob: -4.733854293823242
    5. 'L' → logprob: -4.983854293823242
    6. ' def' → logprob: -5.608854293823242
    7. 'LS' → logprob: -5.858854293823242
    8. 'T' → logprob: -6.358854293823242
    9. 'P' → logprob: -6.358854293823242
    10. 'I' → logprob: -6.483854293823242

Token 161: ' S' (ID: 336)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.5579035878181458
    2. 'FL' → logprob: -1.932903528213501
    3. 'ILS' → logprob: -2.182903528213501
    4. 'IL' → logprob: -2.432903528213501
    5. 'LS' → logprob: -4.05790376663208
    6. ' F' → logprob: -4.68290376663208
    7. 'L' → logprob: -4.80790376663208
    8. 'S' → logprob: -4.93290376663208
    9. ' FL' → logprob: -5.05790376663208
    10. 'SL' → logprob: -5.05790376663208

Token 162: 'LS' (ID: 10172)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -6.539801688631997e-05
    2. 'Ls' → logprob: -10.125065803527832
    3. 'LS' → logprob: -10.750065803527832
    4. '(self' → logprob: -14.250065803527832
    5. 'List' → logprob: -14.375065803527832
    6. '```' → logprob: -14.625065803527832
    7. '(' → logprob: -14.750065803527832
    8. 'LINES' → logprob: -14.750065803527832
    9. 'Lines' → logprob: -14.875065803527832
    10. ' L' → logprob: -15.000065803527832

Token 163: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010447168024256825
    2. '(' → logprob: -6.876044750213623
    3. 'self' → logprob: -12.376044273376465
    4. '(
' → logprob: -13.001044273376465
    5. ' (' → logprob: -13.001044273376465
    6. '(s' → logprob: -13.126044273376465
    7. '(Self' → logprob: -14.376044273376465
    8. '(this' → logprob: -16.25104522705078
    9. '(sel' → logprob: -16.37604522705078
    10. '(S' → logprob: -16.62604522705078

Token 164: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.039601247757673264
    2. ',' → logprob: -3.4146013259887695
    3. 'self' → logprob: -5.6646013259887695
    4. '(' → logprob: -6.2896013259887695
    5. ')' → logprob: -7.9146013259887695
    6. ' (' → logprob: -9.28960132598877
    7. ',self' → logprob: -9.66460132598877
    8. ')(' → logprob: -10.03960132598877
    9. ' self' → logprob: -11.41460132598877
    10. ' ,' → logprob: -11.41460132598877

Token 165: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6199342608451843
    2. 'self' → logprob: -0.8699342608451843
    3. ' self' → logprob: -3.619934320449829
    4. ' n' → logprob: -4.11993408203125
    5. ')' → logprob: -12.36993408203125
    6. '(self' → logprob: -13.49493408203125
    7. '   ' → logprob: -13.61993408203125
    8. '       ' → logprob: -13.74493408203125
    9. 'int' → logprob: -14.74493408203125
    10. '):
' → logprob: -14.99493408203125

Token 166: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004618896055035293
    2. ':int' → logprob: -7.750462055206299
    3. '):' → logprob: -10.87546157836914
    4. ' :' → logprob: -11.62546157836914
    5. ')' → logprob: -12.87546157836914
    6. '=' → logprob: -15.50046157836914
    7. 'int' → logprob: -15.87546157836914
    8. 'def' → logprob: -16.00046157836914
    9. '   ' → logprob: -16.12546157836914
    10. '):
' → logprob: -16.87546157836914

Token 167: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004085524007678032
    2. ' int' → logprob: -5.504085540771484
    3. '(int' → logprob: -12.504085540771484
    4. '=int' → logprob: -14.129085540771484
    5. '[int' → logprob: -14.254085540771484
    6. ':int' → logprob: -14.254085540771484
    7. '<int' → logprob: -14.754085540771484
    8. '<|end|>' → logprob: -15.129085540771484
    9. '	int' → logprob: -15.379085540771484
    10. ' ' → logprob: -15.379085540771484

Token 168: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8312570318812504e-05
    2. '):' → logprob: -11.000018119812012
    3. '):
' → logprob: -13.875018119812012
    4. ':' → logprob: -14.750018119812012
    5. ' )' → logprob: -16.000019073486328
    6. '   ' → logprob: -16.500019073486328
    7. '）' → logprob: -17.750019073486328
    8. ']' → logprob: -18.125019073486328
    9. ')
' → logprob: -18.750019073486328
    10. '):

' → logprob: -18.750019073486328

Token 169: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.6236620545387268
    2. ':' → logprob: -1.123661994934082
    3. ')' → logprob: -1.998661994934082
    4. '->' → logprob: -6.123661994934082
    5. ' ' → logprob: -7.498661994934082
    6. ' :' → logprob: -7.748661994934082
    7. '   ' → logprob: -9.498661994934082
    8. ' )' → logprob: -9.748661994934082
    9. ')->' → logprob: -10.498661994934082
    10. ']' → logprob: -10.623661994934082

Token 170: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06580573320388794
    2. ' list' → logprob: -2.815805673599243
    3. '[list' → logprob: -5.565805912017822
    4. 'List' → logprob: -13.190805435180664
    5. '[List' → logprob: -13.940805435180664
    6. '[str' → logprob: -14.315805435180664
    7. ' [' → logprob: -14.315805435180664
    8. '[' → logprob: -15.690805435180664
    9. ':list' → logprob: -17.440805435180664
    10. '[
' → logprob: -17.815805435180664

Token 171: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.625
    3. '[list' → logprob: -16.75
    4. 'str' → logprob: -17.625
    5. '[List' → logprob: -18.125
    6. '[
' → logprob: -20.375
    7. '[s' → logprob: -21.125
    8. ' [' → logprob: -21.625
    9. '.str' → logprob: -21.75
    10. '(str' → logprob: -22.0

Token 172: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.14624185860157013
    2. '):
' → logprob: -2.6462419033050537
    3. ']:' → logprob: -2.7712419033050537
    4. ']:
' → logprob: -6.521241664886475
    5. ':' → logprob: -7.646241664886475
    6. '):
' → logprob: -8.021242141723633
    7. '(self' → logprob: -8.771242141723633
    8. ']' → logprob: -10.396242141723633
    9. ']):' → logprob: -10.896242141723633
    10. '   ' → logprob: -11.271242141723633

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00010616567305987701
    2. ' return' → logprob: -10.000105857849121
    3. 'return' → logprob: -10.500105857849121
    4. '	' → logprob: -10.750105857849121
    5. '   ' → logprob: -11.750105857849121
    6. '     ' → logprob: -13.375105857849121
    7. '	return' → logprob: -13.875105857849121
    8. '      ' → logprob: -14.750105857849121
    9. '    ' → logprob: -15.000105857849121
    10. '[' → logprob: -15.625105857849121

Token 174: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.020697087049484253
    2. ' return' → logprob: -4.520697116851807
    3. '[' → logprob: -5.020697116851807
    4. '       ' → logprob: -6.270697116851807
    5. '[self' → logprob: -7.395697116851807
    6. '[str' → logprob: -8.145696640014648
    7. '[string' → logprob: -10.145696640014648
    8. '	return' → logprob: -10.520696640014648
    9. '   ' → logprob: -10.645696640014648
    10. '[s' → logprob: -10.770696640014648

Token 175: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.003415935905650258
    2. ' [' → logprob: -6.003416061401367
    3. '[' → logprob: -7.003416061401367
    4. '[int' → logprob: -10.628416061401367
    5. '[str' → logprob: -12.878416061401367
    6. '[S' → logprob: -13.753416061401367
    7. '[item' → logprob: -13.878416061401367
    8. '[input' → logprob: -14.628416061401367
    9. '[array' → logprob: -15.253416061401367
    10. '[String' → logprob: -15.253416061401367

Token 176: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.531315314830863e-06
    2. ' self' → logprob: -12.750003814697266
    3. 'str' → logprob: -14.250003814697266
    4. '(self' → logprob: -17.000003814697266
    5. '
' → logprob: -19.500003814697266
    6. '[self' → logprob: -20.125003814697266
    7. 's' → logprob: -20.500003814697266
    8. '	self' → logprob: -20.750003814697266
    9. '           ' → logprob: -21.000003814697266
    10. '   ' → logprob: -21.500003814697266

Token 177: '.input' (ID: 18322)
  Prédit: '.input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.00016921341011766344
    2. 'input' → logprob: -8.750168800354004
    3. '.' → logprob: -12.125168800354004
    4. '(input' → logprob: -12.625168800354004
    5. '.S' → logprob: -14.250168800354004
    6. 'S' → logprob: -14.250168800354004
    7. ' .' → logprob: -15.125168800354004
    8. '().' → logprob: -16.00016975402832
    9. '<input' → logprob: -16.25016975402832
    10. '.s' → logprob: -16.87516975402832

Token 178: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.5759463310241699
    2. '()' → logprob: -0.8259463310241699
    3. '()]' → logprob: -12.200946807861328
    4. '()
' → logprob: -14.200946807861328
    5. ' ()' → logprob: -14.950946807861328
    6. ' ().' → logprob: -15.450946807861328
    7. '()].' → logprob: -15.450946807861328
    8. '()[' → logprob: -15.950946807861328
    9. '（）' → logprob: -15.950946807861328
    10. '()`' → logprob: -16.450946807861328

Token 179: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -6.749814019713085e-06
    2. 'strip' → logprob: -12.000006675720215
    3. '.rstrip' → logprob: -14.375006675720215
    4. 'r' → logprob: -20.25000762939453
    5. 'for' → logprob: -20.62500762939453
    6. 'rs' → logprob: -20.75000762939453
    7. '```' → logprob: -21.25000762939453
    8. 'rst' → logprob: -21.75000762939453
    9. '().' → logprob: -22.00000762939453
    10. 'ru' → logprob: -22.25000762939453

Token 180: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -6.182190554682165e-05
    2. '()' → logprob: -9.875061988830566
    3. ''\' → logprob: -12.125061988830566
    4. '("\' → logprob: -13.250061988830566
    5. '(' → logprob: -13.375061988830566
    6. '('' → logprob: -13.625061988830566
    7. '()\' → logprob: -15.125061988830566
    8. '(
' → logprob: -17.25006103515625
    9. '(\' → logprob: -18.00006103515625
    10. '()
' → logprob: -18.00006103515625

Token 181: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2014302909374237
    2. '\n' → logprob: -1.701430320739746
    3. ''\' → logprob: -11.076430320739746
    4. ''n' → logprob: -13.451430320739746
    5. '('\' → logprob: -16.70142936706543
    6. 'newline' → logprob: -17.32642936706543
    7. '	n' → logprob: -17.57642936706543
    8. ''' → logprob: -18.20142936706543
    9. '\' → logprob: -18.20142936706543
    10. '_n' → logprob: -18.20142936706543

Token 182: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05033630505204201
    2. '')' → logprob: -3.0503363609313965
    3. '())' → logprob: -6.4253363609313965
    4. '()' → logprob: -9.300335884094238
    5. '")' → logprob: -10.800335884094238
    6. '`)' → logprob: -12.175335884094238
    7. ' )' → logprob: -12.550335884094238
    8. '))' → logprob: -13.300335884094238
    9. '）' → logprob: -13.675335884094238
    10. '’)' → logprob: -13.800335884094238

Token 183: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3520868420600891
    2. 'for' → logprob: -1.2270867824554443
    3. '()' → logprob: -5.977087020874023
    4. ')' → logprob: -7.477087020874023
    5. '	for' → logprob: -7.727087020874023
    6. '       ' → logprob: -9.977087020874023
    7. '   ' → logprob: -10.852087020874023
    8. '        ' → logprob: -11.852087020874023
    9. ']' → logprob: -11.852087020874023
    10. ' ' → logprob: -12.602087020874023

Token 184: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.56102097814437e-05
    2. ' _' → logprob: -10.000045776367188
    3. ' range' → logprob: -16.375045776367188
    4. '_]' → logprob: -17.000045776367188
    5. ' in' → logprob: -17.750045776367188
    6. 'range' → logprob: -18.250045776367188
    7. '_range' → logprob: -19.000045776367188
    8. '_
' → logprob: -19.625045776367188
    9. '_

' → logprob: -20.125045776367188
    10. ' ' → logprob: -20.500045776367188

Token 185: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.13111399114131927
    2. ' range' → logprob: -2.1311140060424805
    3. '_' → logprob: -5.8811140060424805
    4. ' in' → logprob: -6.8811140060424805
    5. 'in' → logprob: -8.00611400604248
    6. '_range' → logprob: -10.75611400604248
    7. ' _' → logprob: -13.38111400604248
    8. '(range' → logprob: -14.00611400604248
    9. '	range' → logprob: -14.38111400604248
    10. ' ' → logprob: -14.75611400604248

Token 186: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067156096920371056
    2. ' range' → logprob: -5.006715774536133
    3. '(range' → logprob: -15.381715774536133
    4. '_range' → logprob: -20.131715774536133
    5. '	range' → logprob: -20.506715774536133
    6. 'rang' → logprob: -21.256715774536133
    7. ' ' → logprob: -21.506715774536133
    8. 'n' → logprob: -22.131715774536133
    9. '
' → logprob: -22.506715774536133
    10. 'ran' → logprob: -22.756715774536133

Token 187: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.0536883615423e-05
    2. '(' → logprob: -10.125080108642578
    3. 'n' → logprob: -10.125080108642578
    4. ' n' → logprob: -15.625080108642578
    5. '(
' → logprob: -17.125080108642578
    6. ' (' → logprob: -17.750080108642578
    7. ')n' → logprob: -19.500080108642578
    8. '	n' → logprob: -19.625080108642578
    9. '   ' → logprob: -20.875080108642578
    10. '<n' → logprob: -21.625080108642578

Token 188: ')]

' (ID: 56882)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04870898276567459
    2. ')]' → logprob: -3.048708915710449
    3. ']' → logprob: -9.54870891571045
    4. ')])' → logprob: -10.79870891571045
    5. '])' → logprob: -12.04870891571045
    6. ')}' → logprob: -12.29870891571045
    7. ')return' → logprob: -12.42370891571045
    8. '）' → logprob: -12.54870891571045
    9. '))' → logprob: -12.67370891571045
    10. '   ' → logprob: -13.04870891571045

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4114386737346649
    2. '<|end|>' → logprob: -2.0364387035369873
    3. '#' → logprob: -2.2864387035369873
    4. 'def' → logprob: -2.9114387035369873
    5. '
' → logprob: -3.6614387035369873
    6. '    
' → logprob: -4.786438465118408
    7. '<|end|>' → logprob: -5.911438465118408
    8. 'class' → logprob: -6.036438465118408
    9. '    ' → logprob: -6.411438465118408
    10. ' ' → logprob: -6.661438465118408

Token 190: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.019881589338183403
    2. '@' → logprob: -4.269881725311279
    3. '   ' → logprob: -6.269881725311279
    4. ' def' → logprob: -6.769881725311279
    5. 'd' → logprob: -7.019881725311279
    6. 'class' → logprob: -7.394881725311279
    7. 'D' → logprob: -7.644881725311279
    8. 'async' → logprob: -8.644881248474121
    9. '#' → logprob: -9.019881248474121
    10. 'IP' → logprob: -9.894881248474121

Token 191: ' SIL' (ID: 94808)
  Prédit: 'F'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'F' → logprob: -0.6772127151489258
    2. ' F' → logprob: -1.9272127151489258
    3. 'IL' → logprob: -3.052212715148926
    4. ' FL' → logprob: -3.052212715148926
    5. 'FL' → logprob: -3.677212715148926
    6. ' IL' → logprob: -3.802212715148926
    7. 'ILS' → logprob: -3.927212715148926
    8. 'I' → logprob: -3.927212715148926
    9. 'FLT' → logprob: -4.052212715148926
    10. 'LS' → logprob: -4.177212715148926

Token 192: 'S' (ID: 50)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002393963746726513
    2. 'F' → logprob: -6.752394199371338
    3. 'ist' → logprob: -8.12739372253418
    4. 'S' → logprob: -8.25239372253418
    5. 'L' → logprob: -8.62739372253418
    6. 'T' → logprob: -8.62739372253418
    7. '   ' → logprob: -8.75239372253418
    8. 'f' → logprob: -9.87739372253418
    9. 'IST' → logprob: -10.75239372253418
    10. '(' → logprob: -10.87739372253418

Token 193: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.353008499601856e-05
    2. '(' → logprob: -9.500093460083008
    3. 'self' → logprob: -11.625093460083008
    4. '(s' → logprob: -11.750093460083008
    5. ' (' → logprob: -14.375093460083008
    6. '(
' → logprob: -14.625093460083008
    7. '(Self' → logprob: -15.625093460083008
    8. ',' → logprob: -16.500093460083008
    9. '(S' → logprob: -16.500093460083008
    10. 'def' → logprob: -16.500093460083008

Token 194: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0240726787596941
    2. ',' → logprob: -3.7740726470947266
    3. '(' → logprob: -8.024072647094727
    4. 'self' → logprob: -8.149072647094727
    5. ')' → logprob: -9.524072647094727
    6. 's' → logprob: -10.024072647094727
    7. '(n' → logprob: -10.899072647094727
    8. '   ' → logprob: -11.024072647094727
    9. '(s' → logprob: -11.274072647094727
    10. ' (' → logprob: -11.524072647094727

Token 195: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20329825580120087
    2. ' n' → logprob: -1.7032982110977173
    3. 'self' → logprob: -6.578298091888428
    4. ')' → logprob: -8.453298568725586
    5. ' self' → logprob: -9.078298568725586
    6. 's' → logprob: -9.953298568725586
    7. 'l' → logprob: -11.890798568725586
    8. 'args' → logprob: -11.890798568725586
    9. 'arr' → logprob: -12.078298568725586
    10. ' s' → logprob: -12.078298568725586

Token 196: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3455476760864258
    2. '):' → logprob: -1.3455476760864258
    3. ')' → logprob: -3.470547676086426
    4. ':int' → logprob: -8.220547676086426
    5. '):
' → logprob: -8.595547676086426
    6. '   ' → logprob: -9.720547676086426
    7. ',' → logprob: -9.970547676086426
    8. '=' → logprob: -10.595547676086426
    9. ' :' → logprob: -11.220547676086426
    10. '=None' → logprob: -11.470547676086426

Token 197: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.033657222986221313
    2. ' int' → logprob: -3.4086573123931885
    3. '(int' → logprob: -12.65865707397461
    4. ')' → logprob: -13.28365707397461
    5. '[int' → logprob: -13.28365707397461
    6. ':int' → logprob: -13.53365707397461
    7. '=int' → logprob: -14.40865707397461
    8. 'list' → logprob: -14.53365707397461
    9. ' ' → logprob: -14.53365707397461
    10. ']int' → logprob: -14.78365707397461

Token 198: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001745392568409443
    2. '):' → logprob: -6.376745223999023
    3. '):
' → logprob: -10.251745223999023
    4. '   ' → logprob: -12.501745223999023
    5. ' )' → logprob: -13.001745223999023
    6. ')->' → logprob: -14.001745223999023
    7. ':' → logprob: -15.501745223999023
    8. '')' → logprob: -16.001745223999023
    9. '):
' → logprob: -16.501745223999023
    10. ')
' → logprob: -16.626745223999023

Token 199: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5343687534332275
    2. '->' → logprob: -0.9093687534332275
    3. ' ->' → logprob: -4.784368515014648
    4. ')' → logprob: -6.034368515014648
    5. ':
' → logprob: -8.284368515014648
    6. '   ' → logprob: -9.784368515014648
    7. ')->' → logprob: -10.409368515014648
    8. '->[' → logprob: -11.159368515014648
    9. '()->' → logprob: -11.284368515014648
    10. '[' → logprob: -11.534368515014648

Token 200: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.05498191714286804
    2. ' list' → logprob: -2.9299819469451904
    3. 'set' → logprob: -10.30498218536377
    4. 'List' → logprob: -10.67998218536377
    5. '[list' → logprob: -10.80498218536377
    6. 'int' → logprob: -11.05498218536377
    7. 'tuple' → logprob: -13.17998218536377
    8. 's' → logprob: -13.42998218536377
    9. ' set' → logprob: -14.17998218536377
    10. 'str' → logprob: -14.55498218536377

Token 201: '[list' (ID: 141696)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -4.0126840758603066e-05
    2. '[int' → logprob: -10.250040054321289
    3. '[list' → logprob: -13.375040054321289
    4. '(str' → logprob: -13.875040054321289
    5. '[List' → logprob: -14.000040054321289
    6. 'str' → logprob: -14.250040054321289
    7. '[' → logprob: -14.625040054321289
    8. '[
' → logprob: -16.25004005432129
    9. 's' → logprob: -16.25004005432129
    10. '<|end|>' → logprob: -16.25004005432129

Token 202: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.12693335115909576
    2. '[str' → logprob: -2.1269333362579346
    3. 'int' → logprob: -12.751933097839355
    4. '<int' → logprob: -13.626933097839355
    5. 'str' → logprob: -14.501933097839355
    6. '[' → logprob: -14.626933097839355
    7. '[
' → logprob: -16.251934051513672
    8. 's' → logprob: -17.626934051513672
    9. ']int' → logprob: -18.001934051513672
    10. '[List' → logprob: -18.501934051513672

Token 203: ']]:
' (ID: 183340)
  Prédit: ']]:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]:
' → logprob: -0.20091693103313446
    2. ']]' → logprob: -2.0759170055389404
    3. ']:' → logprob: -3.0759170055389404
    4. ']:
' → logprob: -4.950916767120361
    5. ']' → logprob: -5.825916767120361
    6. ']):
' → logprob: -9.20091724395752
    7. ']):' → logprob: -9.20091724395752
    8. ']:
' → logprob: -9.45091724395752
    9. '[' → logprob: -9.70091724395752
    10. ']]]' → logprob: -11.57591724395752

Token 204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008758509531617165
    2. '(self' → logprob: -5.133758544921875
    3. '(' → logprob: -6.758758544921875
    4. '[' → logprob: -7.633758544921875
    5. '<|end|>' → logprob: -7.883758544921875
    6. 'self' → logprob: -8.508758544921875
    7. '(n' → logprob: -9.258758544921875
    8. ' self' → logprob: -9.383758544921875
    9. '   ' → logprob: -10.008758544921875
    10. '[]' → logprob: -10.008758544921875

Token 205: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07487206906080246
    2. '       ' → logprob: -3.3248720169067383
    3. ' return' → logprob: -3.3248720169067383
    4. '	return' → logprob: -9.074872016906738
    5. '   ' → logprob: -9.824872016906738
    6. '	' → logprob: -11.699872016906738
    7. '
' → logprob: -12.699872016906738
    8. 'def' → logprob: -14.199872016906738
    9. ' ' → logprob: -14.699872016906738
    10. '[' → logprob: -14.949872016906738

Token 206: ' [' (ID: 723)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.696021556854248
    2. '[self' → logprob: -0.946021556854248
    3. '[' → logprob: -2.696021556854248
    4. '[int' → logprob: -3.196021556854248
    5. '[List' → logprob: -5.946021556854248
    6. '[[' → logprob: -6.821021556854248
    7. '[Int' → logprob: -8.446022033691406
    8. '[array' → logprob: -8.571022033691406
    9. '[input' → logprob: -8.821022033691406
    10. ' [' → logprob: -9.571022033691406

Token 207: 'self' (ID: 1156)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02129044197499752
    2. 'self' → logprob: -3.8962905406951904
    3. ' list' → logprob: -7.396290302276611
    4. 'IL' → logprob: -10.02129077911377
    5. 'ilist' → logprob: -10.77129077911377
    6. 'map' → logprob: -11.02129077911377
    7. '[self' → logprob: -11.27129077911377
    8. ' self' → logprob: -11.27129077911377
    9. '[' → logprob: -11.52129077911377
    10. '[list' → logprob: -12.89629077911377

Token 208: '.' (ID: 13)
  Prédit: 'IL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.44523555040359497
    2. '.' → logprob: -1.1952354907989502
    3. '.input' → logprob: -3.19523549079895
    4. 'input' → logprob: -4.570235729217529
    5. 'ILS' → logprob: -5.820235729217529
    6. '	IL' → logprob: -6.820235729217529
    7. '(input' → logprob: -7.695235729217529
    8. '.L' → logprob: -8.445235252380371
    9. '_IL' → logprob: -8.820235252380371
    10. 'ILT' → logprob: -8.945235252380371

Token 209: 'IL' (ID: 2654)
  Prédit: 'IL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -8.625866030342877e-05
    2. 'ILS' → logprob: -9.375085830688477
    3. ' IL' → logprob: -14.125085830688477
    4. '_IL' → logprob: -15.500085830688477
    5. '	IL' → logprob: -15.625085830688477
    6. 'ILD' → logprob: -15.625085830688477
    7. 'ILT' → logprob: -16.625085830688477
    8. 'L' → logprob: -17.750085830688477
    9. 'I' → logprob: -17.875085830688477
    10. 'ILA' → logprob: -18.750085830688477

Token 210: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08125238865613937
    2. '()]' → logprob: -2.581252336502075
    3. '())' → logprob: -6.081252574920654
    4. ' ()' → logprob: -10.831252098083496
    5. ']()' → logprob: -10.831252098083496
    6. 'S' → logprob: -10.956252098083496
    7. 'L' → logprob: -12.706252098083496
    8. '()
' → logprob: -12.706252098083496
    9. '()]
' → logprob: -12.956252098083496
    10. '()`' → logprob: -13.581252098083496

Token 211: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7064307928085327
    2. 'for' → logprob: -0.7064307928085327
    3. '()' → logprob: -4.331430912017822
    4. '	for' → logprob: -10.706430435180664
    5. ')' → logprob: -11.081430435180664
    6. ' ()' → logprob: -12.081430435180664
    7. '       ' → logprob: -13.581430435180664
    8. '   ' → logprob: -14.081430435180664
    9. ' ' → logprob: -14.706430435180664
    10. ']' → logprob: -15.206430435180664

Token 212: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11084747314453125
    2. ' range' → logprob: -2.3608474731445312
    3. '_range' → logprob: -5.360847473144531
    4. 'range' → logprob: -5.360847473144531
    5. ' _' → logprob: -6.735847473144531
    6. '	range' → logprob: -13.610847473144531
    7. '(range' → logprob: -14.110847473144531
    8. '   ' → logprob: -15.235847473144531
    9. ' ' → logprob: -15.485847473144531
    10. ' in' → logprob: -15.485847473144531

Token 213: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3147260546684265
    2. 'range' → logprob: -1.5647261142730713
    3. ' range' → logprob: -2.8147261142730713
    4. 'in' → logprob: -7.064725875854492
    5. ' _' → logprob: -10.064725875854492
    6. ' ' → logprob: -10.314725875854492
    7. '_' → logprob: -11.814725875854492
    8. '_range' → logprob: -12.689725875854492
    9. '(range' → logprob: -13.939725875854492
    10. '  ' → logprob: -14.189725875854492

Token 214: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0031892398837953806
    2. ' range' → logprob: -5.7531890869140625
    3. '(range' → logprob: -11.378189086914062
    4. '	range' → logprob: -16.878189086914062
    5. '   ' → logprob: -17.378189086914062
    6. ' ' → logprob: -18.878189086914062
    7. '_range' → logprob: -19.128189086914062
    8. '
' → logprob: -19.503189086914062
    9. '[' → logprob: -20.378189086914062
    10. 'n' → logprob: -20.503189086914062

Token 215: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0001589618914294988
    2. '(' → logprob: -9.00015926361084
    3. 'n' → logprob: -10.25015926361084
    4. '(
' → logprob: -15.62515926361084
    5. ' n' → logprob: -17.625158309936523
    6. ' (' → logprob: -19.125158309936523
    7. '(nn' → logprob: -20.875158309936523
    8. ')n' → logprob: -21.000158309936523
    9. '	n' → logprob: -21.625158309936523
    10. '(

' → logprob: -21.625158309936523

Token 216: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001762286527082324
    2. ')' → logprob: -6.376762390136719
    3. ']' → logprob: -10.751762390136719
    4. ')])' → logprob: -10.876762390136719
    5. '])' → logprob: -12.501762390136719
    6. '<|end|>' → logprob: -12.876762390136719
    7. '   ' → logprob: -13.001762390136719
    8. '')]' → logprob: -13.251762390136719
    9. ')]
' → logprob: -13.251762390136719
    10. '])]' → logprob: -13.251762390136719

Token 217: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5222310423851013
    2. '<|end|>' → logprob: -1.022231101989746
    3. '<|end|>' → logprob: -3.397231101989746
    4. '
' → logprob: -4.522231101989746
    5. 'def' → logprob: -7.397231101989746
    6. '```' → logprob: -7.397231101989746
    7. ')' → logprob: -7.647231101989746
    8. '    
' → logprob: -8.522231101989746
    9. '

' → logprob: -9.147231101989746
    10. '  ' → logprob: -9.397231101989746

Token 218: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.013622953556478024
    2. '   ' → logprob: -5.013622760772705
    3. ' def' → logprob: -5.638622760772705
    4. '
' → logprob: -5.763622760772705
    5. '    
' → logprob: -9.763623237609863
    6. '	def' → logprob: -9.763623237609863
    7. 'class' → logprob: -11.263623237609863
    8. ' ' → logprob: -11.388623237609863
    9. '

' → logprob: -11.513623237609863
    10. '```' → logprob: -11.638623237609863

Token 219: ' SS' (ID: 30354)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.9970706105232239
    2. ' SIL' → logprob: -1.497070550918579
    3. ' S' → logprob: -1.747070550918579
    4. ' SSL' → logprob: -3.122070550918579
    5. ' SL' → logprob: -3.372070550918579
    6. 'SL' → logprob: -3.497070550918579
    7. ' SS' → logprob: -4.247070789337158
    8. 'SS' → logprob: -4.497070789337158
    9. 'SSL' → logprob: -4.497070789337158
    10. ' PIL' → logprob: -4.497070789337158

Token 220: 'LS' (ID: 10172)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.5721055269241333
    2. '(self' → logprob: -1.3221055269241333
    3. 'S' → logprob: -1.9471055269241333
    4. 'LS' → logprob: -3.6971054077148438
    5. '(' → logprob: -6.572105407714844
    6. '(S' → logprob: -9.947105407714844
    7. 'Ls' → logprob: -10.322105407714844
    8. ' (' → logprob: -10.447105407714844
    9. '   ' → logprob: -10.822105407714844
    10. '```' → logprob: -10.947105407714844

Token 221: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010774685069918633
    2. '(' → logprob: -7.126077651977539
    3. 'self' → logprob: -8.751077651977539
    4. ' (' → logprob: -9.376077651977539
    5. '   ' → logprob: -11.876077651977539
    6. '<|end|>' → logprob: -12.126077651977539
    7. '(s' → logprob: -12.626077651977539
    8. ' self' → logprob: -12.876077651977539
    9. '(
' → logprob: -12.876077651977539
    10. 'def' → logprob: -13.376077651977539

Token 222: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2890216112136841
    2. ',' → logprob: -1.414021611213684
    3. '(' → logprob: -4.9140214920043945
    4. 'self' → logprob: -7.7890214920043945
    5. ' (' → logprob: -10.539021492004395
    6. ',self' → logprob: -10.539021492004395
    7. ')' → logprob: -11.539021492004395
    8. '(s' → logprob: -12.664021492004395
    9. ' self' → logprob: -12.789021492004395
    10. ' ,' → logprob: -12.914021492004395

Token 223: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.08013851940631866
    2. ' n' → logprob: -2.5801384449005127
    3. 'self' → logprob: -6.830138683319092
    4. ' self' → logprob: -8.705138206481934
    5. '(n' → logprob: -14.830138206481934
    6. 'int' → logprob: -15.330138206481934
    7. '   ' → logprob: -15.705138206481934
    8. ')n' → logprob: -15.705138206481934
    9. '	n' → logprob: -15.955138206481934
    10. ')' → logprob: -15.955138206481934

Token 224: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006746663711965084
    2. ':int' → logprob: -7.750674724578857
    3. '):' → logprob: -8.8756742477417
    4. ' :' → logprob: -9.7506742477417
    5. '   ' → logprob: -10.8756742477417
    6. ')' → logprob: -11.1256742477417
    7. '<|end|>' → logprob: -12.8756742477417
    8. 'def' → logprob: -13.2506742477417
    9. '<|end|>' → logprob: -13.3756742477417
    10. '(int' → logprob: -14.0006742477417

Token 225: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06198998540639877
    2. ' int' → logprob: -2.8119900226593018
    3. '(int' → logprob: -11.311989784240723
    4. '=int' → logprob: -12.561989784240723
    5. '[int' → logprob: -12.811989784240723
    6. ':int' → logprob: -12.936989784240723
    7. '<int' → logprob: -14.186989784240723
    8. ']int' → logprob: -15.561989784240723
    9. ')' → logprob: -15.936989784240723
    10. ',int' → logprob: -16.31199073791504

Token 226: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.44574936106801e-05
    2. '):' → logprob: -9.62507438659668
    3. '   ' → logprob: -12.37507438659668
    4. ' )' → logprob: -13.37507438659668
    5. ':' → logprob: -13.50007438659668
    6. '):
' → logprob: -14.37507438659668
    7. 'def' → logprob: -15.25007438659668
    8. '))' → logprob: -16.62507438659668
    9. ')
' → logprob: -16.87507438659668
    10. '    ' → logprob: -17.25007438659668

Token 227: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.036389175802469254
    2. ')' → logprob: -4.536389350891113
    3. ' ->' → logprob: -4.786389350891113
    4. '   ' → logprob: -5.286389350891113
    5. ' :' → logprob: -5.286389350891113
    6. 'def' → logprob: -5.911389350891113
    7. '->' → logprob: -6.661389350891113
    8. ' def' → logprob: -7.036389350891113
    9. ':def' → logprob: -7.911389350891113
    10. ' for' → logprob: -8.036389350891113

Token 228: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.06197518855333328
    2. ' list' → logprob: -2.8119752407073975
    3. '[list' → logprob: -11.811975479125977
    4. 'List' → logprob: -16.436975479125977
    5. '(list' → logprob: -17.311975479125977
    6. '.list' → logprob: -18.561975479125977
    7. '_list' → logprob: -18.686975479125977
    8. '	list' → logprob: -19.186975479125977
    9. 'int' → logprob: -19.311975479125977
    10. '$list' → logprob: -19.436975479125977

Token 229: '[list' (ID: 141696)
  Prédit: '[list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.3076426684856415
    2. '[str' → logprob: -1.8076426982879639
    3. '[List' → logprob: -2.307642698287964
    4. '[' → logprob: -6.682642459869385
    5. '[int' → logprob: -11.432642936706543
    6. '[
' → logprob: -11.807642936706543
    7. '[[' → logprob: -12.807642936706543
    8. '[S' → logprob: -13.182642936706543
    9. '[line' → logprob: -13.307642936706543
    10. '<|end|>' → logprob: -13.307642936706543

Token 230: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.676292231422849e-05
    2. 'str' → logprob: -11.000017166137695
    3. '	str' → logprob: -17.625017166137695
    4. '[' → logprob: -18.500017166137695
    5. ' str' → logprob: -18.500017166137695
    6. '[int' → logprob: -18.500017166137695
    7. '[
' → logprob: -18.625017166137695
    8. '=str' → logprob: -19.250017166137695
    9. '(str' → logprob: -19.375017166137695
    10. '   ' → logprob: -19.375017166137695

Token 231: ']]:
' (ID: 183340)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.05050291866064072
    2. ']' → logprob: -3.4255030155181885
    3. ']]:
' → logprob: -5.175502777099609
    4. ']):
' → logprob: -5.300502777099609
    5. ')]' → logprob: -6.300502777099609
    6. ']]' → logprob: -6.425502777099609
    7. ']:' → logprob: -6.925502777099609
    8. ')' → logprob: -7.550502777099609
    9. '])' → logprob: -8.17550277709961
    10. '])]' → logprob: -8.30050277709961

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015391870401799679
    2. '   ' → logprob: -4.765391826629639
    3. 'def' → logprob: -5.640391826629639
    4. ' def' → logprob: -6.765391826629639
    5. '(self' → logprob: -7.015391826629639
    6. '(' → logprob: -7.640391826629639
    7. ' self' → logprob: -8.265392303466797
    8. 'self' → logprob: -8.390392303466797
    9. '<|end|>' → logprob: -10.140392303466797
    10. '(n' → logprob: -10.640392303466797

Token 233: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.17105703055858612
    2. ' return' → logprob: -1.9210569858551025
    3. '       ' → logprob: -4.546057224273682
    4. '	return' → logprob: -9.421056747436523
    5. '   ' → logprob: -9.546056747436523
    6. 'def' → logprob: -12.171056747436523
    7. '=' → logprob: -12.671056747436523
    8. '        ' → logprob: -13.296056747436523
    9. '    ' → logprob: -14.421056747436523
    10. '     ' → logprob: -14.921056747436523

Token 234: ' [' (ID: 723)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -5.538490950129926e-05
    2. ' [' → logprob: -10.125055313110352
    3. '[' → logprob: -11.125055313110352
    4. 'self' → logprob: -15.000055313110352
    5. '[S' → logprob: -15.750055313110352
    6. '[String' → logprob: -19.12505531311035
    7. '[this' → logprob: -19.12505531311035
    8. '   ' → logprob: -19.75005531311035
    9. '[[' → logprob: -19.75005531311035
    10. '[list' → logprob: -20.00005531311035

Token 235: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.981667537620524e-06
    2. ' self' → logprob: -13.500001907348633
    3. '[self' → logprob: -14.750001907348633
    4. '[' → logprob: -17.375001907348633
    5. '(self' → logprob: -18.625001907348633
    6. '	self' → logprob: -18.625001907348633
    7. '   ' → logprob: -19.125001907348633
    8. 's' → logprob: -19.875001907348633
    9. '           ' → logprob: -19.875001907348633
    10. '
' → logprob: -20.250001907348633

Token 236: '.S' (ID: 1242)
  Prédit: '.input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.13006262481212616
    2. '.S' → logprob: -2.1300625801086426
    3. 'input' → logprob: -5.880062580108643
    4. 'S' → logprob: -8.1300630569458
    5. '.' → logprob: -10.3800630569458
    6. '.INPUT' → logprob: -13.3800630569458
    7. ' .' → logprob: -13.7550630569458
    8. '<input' → logprob: -13.7550630569458
    9. '(input' → logprob: -14.0050630569458
    10. '[input' → logprob: -14.3800630569458

Token 237: 'L' (ID: 43)
  Prédit: 'LS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LS' → logprob: -0.03810781240463257
    2. 'L' → logprob: -3.2881078720092773
    3. 'S' → logprob: -9.788107872009277
    4. '(' → logprob: -12.788107872009277
    5. 'SL' → logprob: -13.288107872009277
    6. 'PL' → logprob: -13.413107872009277
    7. 'LL' → logprob: -14.163107872009277
    8. 'LP' → logprob: -14.413107872009277
    9. '```' → logprob: -14.663107872009277
    10. 'Ls' → logprob: -14.913107872009277

Token 238: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01841435767710209
    2. '(n' → logprob: -4.018414497375488
    3. '(' → logprob: -8.393414497375488
    4. ' ()' → logprob: -10.643414497375488
    5. '()]' → logprob: -11.393414497375488
    6. '()
' → logprob: -13.893414497375488
    7. ' (' → logprob: -14.393414497375488
    8. 'for' → logprob: -14.518414497375488
    9. '(),' → logprob: -15.393414497375488
    10. '()(' → logprob: -15.643414497375488

Token 239: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.33549925684928894
    2. '(n' → logprob: -1.8354992866516113
    3. 'for' → logprob: -2.0854992866516113
    4. '(' → logprob: -7.085499286651611
    5. '()' → logprob: -8.585498809814453
    6. ' (' → logprob: -8.710498809814453
    7. ')' → logprob: -10.585498809814453
    8. '       ' → logprob: -11.960498809814453
    9. '(for' → logprob: -12.085498809814453
    10. '   ' → logprob: -12.210498809814453

Token 240: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1718716025352478
    2. ' range' → logprob: -2.1718716621398926
    3. ' _' → logprob: -3.1718716621398926
    4. 'range' → logprob: -6.296871662139893
    5. '_range' → logprob: -8.671871185302734
    6. ' in' → logprob: -12.046871185302734
    7. '(range' → logprob: -12.671871185302734
    8. ' n' → logprob: -14.921871185302734
    9. ' ' → logprob: -16.046871185302734
    10. ' _
' → logprob: -16.296871185302734

Token 241: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6948897838592529
    2. 'range' → logprob: -0.6948897838592529
    3. '_' → logprob: -6.819890022277832
    4. '_range' → logprob: -7.444890022277832
    5. '(range' → logprob: -9.944890022277832
    6. ' in' → logprob: -11.569890022277832
    7. ' _' → logprob: -12.069890022277832
    8. 'in' → logprob: -14.069890022277832
    9. 'n' → logprob: -14.819890022277832
    10. '	range' → logprob: -15.944890022277832

Token 242: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.062053948640823364
    2. ' range' → logprob: -2.812053918838501
    3. '(range' → logprob: -9.437053680419922
    4. 'n' → logprob: -12.687053680419922
    5. '_range' → logprob: -12.812053680419922
    6. ' n' → logprob: -15.312053680419922
    7. '(n' → logprob: -15.562053680419922
    8. '_' → logprob: -15.812053680419922
    9. '	range' → logprob: -16.437053680419922
    10. '(' → logprob: -16.812053680419922

Token 243: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07928576320409775
    2. 'n' → logprob: -2.5792858600616455
    3. ' n' → logprob: -8.579285621643066
    4. '(' → logprob: -8.704285621643066
    5. ' (' → logprob: -10.079285621643066
    6. '	n' → logprob: -16.579286575317383
    7. ')n' → logprob: -17.079286575317383
    8. '(
' → logprob: -17.704286575317383
    9. '_n' → logprob: -18.329286575317383
    10. '   ' → logprob: -18.579286575317383

Token 244: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00048310417332686484
    2. ')' → logprob: -7.75048303604126
    3. ']' → logprob: -11.000483512878418
    4. '()]' → logprob: -11.250483512878418
    5. ')])' → logprob: -12.000483512878418
    6. '')]' → logprob: -12.625483512878418
    7. '   ' → logprob: -13.000483512878418
    8. '       ' → logprob: -13.125483512878418
    9. '()' → logprob: -13.125483512878418
    10. '())' → logprob: -13.875483512878418

Token 245: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3705640435218811
    2. '<|end|>' → logprob: -1.7455639839172363
    3. '   ' → logprob: -2.8705639839172363
    4. '\n' → logprob: -4.120563983917236
    5. '#' → logprob: -4.245563983917236
    6. '```' → logprob: -4.745563983917236
    7. 'def' → logprob: -4.870563983917236
    8. '    
' → logprob: -5.370563983917236
    9. '<|end|>' → logprob: -5.370563983917236
    10. ')' → logprob: -5.620563983917236

Token 246: ' Idea' (ID: 74190)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -1.1603515148162842
    2. ' Union' → logprob: -2.035351514816284
    3. ' Solver' → logprob: -2.035351514816284
    4. ' IP' → logprob: -2.285351514816284
    5. ' Counter' → logprob: -3.285351514816284
    6. ' Segment' → logprob: -3.285351514816284
    7. 'Solution' → logprob: -3.410351514816284
    8. ' DP' → logprob: -4.035351753234863
    9. ' defaultdict' → logprob: -4.160351753234863
    10. ' Bit' → logprob: -4.160351753234863

Token 247: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01977197267115116
    2. '():' → logprob: -4.019772052764893
    3. '(' → logprob: -7.269772052764893
    4. ':
' → logprob: -8.769771575927734
    5. 'Generator' → logprob: -9.019771575927734
    6. ' :' → logprob: -9.144771575927734
    7. '{' → logprob: -9.644771575927734
    8. 'Space' → logprob: -9.644771575927734
    9. 'Processor' → logprob: -10.394771575927734
    10. 'Solver' → logprob: -10.644771575927734

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007274442468769848
    2. '<|end|>' → logprob: -8.000727653503418
    3. '    
' → logprob: -9.000727653503418
    4. 'def' → logprob: -9.250727653503418
    5. '    ' → logprob: -9.500727653503418
    6. ' def' → logprob: -9.750727653503418
    7. '<|end|>' → logprob: -11.625727653503418
    8. '__' → logprob: -11.750727653503418
    9. '	def' → logprob: -12.250727653503418
    10. ':' → logprob: -12.750727653503418

Token 249: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.7745494842529297
    2. ' __' → logprob: -0.7745494842529297
    3. '__' (adapté à ' __') → logprob: -3.1495494842529297
    4. 'def' → logprob: -3.5245494842529297
    5. '   ' → logprob: -5.27454948425293
    6. ' _' → logprob: -8.77454948425293
    7. 'class' → logprob: -9.64954948425293
    8. '_' → logprob: -9.77454948425293
    9. ' ' → logprob: -9.89954948425293
    10. ' ___' → logprob: -10.21204948425293

Token 250: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -4.2987729102605954e-05
    2. '_slots' → logprob: -10.250042915344238
    3. 'init' → logprob: -12.000042915344238
    4. 'slot' → logprob: -14.250042915344238
    5. ' slots' → logprob: -15.000042915344238
    6. 'tabs' → logprob: -15.500042915344238
    7. '   ' → logprob: -16.125043869018555
    8. 'spaces' → logprob: -16.750043869018555
    9. 'Slots' → logprob: -17.500043869018555
    10. 'tokens' → logprob: -17.500043869018555

Token 251: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04391275718808174
    2. '=' → logprob: -3.168912649154663
    3. ' =' → logprob: -7.043912887573242
    4. '=('' → logprob: -10.668912887573242
    5. '__('' → logprob: -12.543912887573242
    6. '____' → logprob: -12.668912887573242
    7. '__:' → logprob: -12.918912887573242
    8. '___' → logprob: -13.168912887573242
    9. '=['' → logprob: -13.293912887573242
    10. '   ' → logprob: -13.918912887573242

Token 252: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47594746947288513
    2. '=' → logprob: -0.9759474992752075
    3. '=('' → logprob: -6.350947380065918
    4. '__' → logprob: -9.225947380065918
    5. '=['' → logprob: -11.725947380065918
    6. '('' → logprob: -12.350947380065918
    7. ':' → logprob: -12.475947380065918
    8. '=("' → logprob: -12.850947380065918
    9. '   ' → logprob: -13.475947380065918
    10. ' ' → logprob: -13.850947380065918

Token 253: ' ()
' (ID: 29456)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.08483618497848511
    2. ' ('' → logprob: -2.83483624458313
    3. '('__' → logprob: -4.209836006164551
    4. '('_' → logprob: -4.959836006164551
    5. '()' → logprob: -7.834836006164551
    6. ''s' → logprob: -8.83483600616455
    7. ' ()' → logprob: -9.45983600616455
    8. '['' → logprob: -10.45983600616455
    9. '(' → logprob: -11.08483600616455
    10. ' ' → logprob: -11.20983600616455

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03576353192329407
    2. '
' → logprob: -3.5357635021209717
    3. '    
' → logprob: -6.035763740539551
    4. 'def' → logprob: -6.160763740539551
    5. ' def' → logprob: -7.535763740539551
    6. ':' → logprob: -8.03576374053955
    7. '<|end|>' → logprob: -8.28576374053955
    8. 'class' → logprob: -9.28576374053955
    9. '```' → logprob: -10.53576374053955
    10. '\n' → logprob: -10.53576374053955

Token 255: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47720617055892944
    2. 'def' → logprob: -1.2272062301635742
    3. ' def' → logprob: -2.602206230163574
    4. ' pass' → logprob: -5.477206230163574
    5. 'pass' → logprob: -5.727206230163574
    6. 'class' → logprob: -5.977206230163574
    7. '    ' → logprob: -7.227206230163574
    8. '@' (adapté à ' @') → logprob: -7.227206230163574
    9. '	def' → logprob: -7.852206230163574
    10. '    
' → logprob: -9.352206230163574

Token 256: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0057551683858036995
    2. 'l' → logprob: -6.0057549476623535
    3. 'property' → logprob: -6.0057549476623535
    4. 'classmethod' → logprob: -7.6307549476623535
    5. 'dat' → logprob: -8.755755424499512
    6. 'partial' → logprob: -9.005755424499512
    7. 'static' → logprob: -10.255755424499512
    8. 'cache' → logprob: -12.380755424499512
    9. 'cached' → logprob: -12.380755424499512
    10. 'abstract' → logprob: -15.755755424499512

Token 257: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2472451627254486
    2. ' def' → logprob: -1.622245192527771
    3. '
' → logprob: -3.9972450733184814
    4. '   ' → logprob: -6.6222453117370605
    5. '(' → logprob: -7.1222453117370605
    6. '()' → logprob: -8.247244834899902
    7. '(
' → logprob: -8.372244834899902
    8. '(def' → logprob: -8.622244834899902
    9. ' (' → logprob: -9.247244834899902
    10. '('' → logprob: -9.497244834899902

Token 258: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.20433686673641205
    2. '   ' → logprob: -1.7043368816375732
    3. ' def' → logprob: -6.204336643218994
    4. '
' → logprob: -7.079336643218994
    5. '    
' → logprob: -10.704337120056152
    6. '	def' → logprob: -11.454337120056152
    7. 'class' → logprob: -11.704337120056152
    8. 'de' → logprob: -13.829337120056152
    9. '  ' → logprob: -13.954337120056152
    10. ':' → logprob: -13.954337120056152

Token 259: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.1787601113319397
    2. 'g' → logprob: -2.928760051727295
    3. 'l' → logprob: -3.303760051727295
    4. 'cache' → logprob: -3.553760051727295
    5. 'partial' → logprob: -4.053760051727295
    6. 'staticmethod' → logprob: -4.928760051727295
    7. 'cached' → logprob: -5.428760051727295
    8. 'reduce' → logprob: -5.678760051727295
    9. ' def' → logprob: -7.053760051727295
    10. 'cmp' → logprob: -7.053760051727295

Token 260: ' HF' (ID: 87046)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.792553186416626
    2. ' main' → logprob: -1.542553186416626
    3. 'g' → logprob: -1.667553186416626
    4. 'main' → logprob: -3.542553186416626
    5. ' l' → logprob: -3.792553186416626
    6. 'solve' → logprob: -4.167552947998047
    7. 'l' → logprob: -4.292552947998047
    8. ' solve' → logprob: -4.542552947998047
    9. 'ceil' → logprob: -4.792552947998047
    10. ' ceil' → logprob: -4.917552947998047

Token 261: '(p' (ID: 2407)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.240480661392212
    2. '():' → logprob: -1.615480661392212
    3. '(' → logprob: -2.115480661392212
    4. '()' → logprob: -2.740480661392212
    5. '():
' → logprob: -2.865480661392212
    6. 'old' → logprob: -3.240480661392212
    7. 'L' → logprob: -4.365480422973633
    8. '(arr' → logprob: -4.365480422973633
    9. 'I' → logprob: -4.615480422973633
    10. '(old' → logprob: -4.740480422973633

Token 262: '):
' (ID: 1883)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -1.2026153802871704
    2. 'art' → logprob: -1.2026153802871704
    3. 'r' → logprob: -2.327615261077881
    4. 'aram' → logprob: -2.452615261077881
    5. '):' → logprob: -2.827615261077881
    6. ':' → logprob: -3.077615261077881
    7. 'ow' → logprob: -3.952615261077881
    8. 'ro' → logprob: -4.327615261077881
    9. ')' → logprob: -4.452615261077881
    10. 'ath' → logprob: -5.077615261077881

Token 263: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03447054699063301
    2. ':' → logprob: -4.534470558166504
    3. '   ' → logprob: -5.534470558166504
    4. '):' → logprob: -5.784470558166504
    5. 'def' → logprob: -5.909470558166504
    6. ' p' → logprob: -6.034470558166504
    7. '(p' → logprob: -6.159470558166504
    8. '():' → logprob: -6.409470558166504
    9. 'return' → logprob: -7.034470558166504
    10. 'p' → logprob: -7.534470558166504

Token 264: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.487630009651184
    2. 'return' → logprob: -1.987630009651184
    3. '       ' → logprob: -2.2376298904418945
    4. ' res' → logprob: -2.7376298904418945
    5. 'res' → logprob: -2.8626298904418945
    6. 's' → logprob: -3.1126298904418945
    7. ' return' → logprob: -3.1126298904418945
    8. 'if' → logprob: -3.2376298904418945
    9. 'n' → logprob: -3.4876298904418945
    10. 'from' → logprob: -3.6126298904418945

Token 265: ' 半' (ID: 165102)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.065556287765503
    2. 'pass' → logprob: -2.065556287765503
    3. 'if' → logprob: -2.190556287765503
    4. 'p' → logprob: -2.565556287765503
    5. 'def' → logprob: -2.815556287765503
    6. 'return' → logprob: -2.940556287765503
    7. 'for' → logprob: -3.065556287765503
    8. 'parts' → logprob: -3.940556287765503
    9. '#' → logprob: -4.065556526184082
    10. '       ' → logprob: -4.565556526184082

Token 266: '分' (ID: 2957)
  Prédit: '角'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '角' → logprob: -0.5897437930107117
    2. '分' → logprob: -0.9647437930107117
    3. '開' → logprob: -3.8397438526153564
    4. '端' → logprob: -4.339743614196777
    5. '月' → logprob: -5.089743614196777
    6. '径' → logprob: -5.214743614196777
    7. '精' → logprob: -5.964743614196777
    8. '面' → logprob: -6.089743614196777
    9. '終' → logprob: -6.714743614196777
    10. '透明' → logprob: -6.714743614196777

Token 267: '全' (ID: 5145)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7191190719604492
    2. 'def' → logprob: -1.9691190719604492
    3. '_split' → logprob: -1.9691190719604492
    4. '(p' → logprob: -2.219119071960449
    5. '=' → logprob: -2.594119071960449
    6. '分' → logprob: -2.844119071960449
    7. '   ' → logprob: -2.969119071960449
    8. ' =' → logprob: -3.469119071960449
    9. 'の' → logprob: -3.719119071960449
    10. '_' → logprob: -3.969119071960449

Token 268: '列' (ID: 19047)
  Prédit: '探索'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '探索' → logprob: -0.5710979104042053
    2. 'enumer' → logprob: -1.3210978507995605
    3. '列' → logprob: -2.3210978507995605
    4. 'Enumer' → logprob: -3.5710978507995605
    5. '索' → logprob: -5.0710978507995605
    6. 'search' → logprob: -5.6960978507995605
    7. '検索' → logprob: -5.9460978507995605
    8. 'expl' → logprob: -5.9460978507995605
    9. 'Enumeration' → logprob: -6.3210978507995605
    10. '枚' → logprob: -6.3210978507995605

Token 269: '�' (ID: 6695)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe6\x8c' → logprob: -0.6021484136581421
    2. 'for' → logprob: -2.1021485328674316
    3. 'p' → logprob: -2.2271485328674316
    4. '举' → logprob: -3.1021485328674316
    5. 'を' → logprob: -3.8521485328674316
    6. '[]' → logprob: -4.352148532867432
    7. '=' → logprob: -4.477148532867432
    8. ',' → logprob: -4.727148532867432
    9. 'け' → logprob: -4.852148532867432
    10. 'べ' → logprob: -4.977148532867432

Token 270: '�' (ID: 247)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe6\x8c' → logprob: -0.0047899032942950726
    2. '举' → logprob: -6.12978982925415
    3. 'enumer' → logprob: -7.37978982925415
    4. '```' → logprob: -7.75478982925415
    5. 'p' → logprob: -8.879790306091309
    6. 'list' → logprob: -9.129790306091309
    7. '``' → logprob: -9.254790306091309
    8. '\xe6\x8f' → logprob: -9.379790306091309
    9. '算' → logprob: -9.504790306091309
    10. 's' → logprob: -9.754790306091309

Token 271: ':' (ID: 25)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe6\x8c' → logprob: -0.008033974096179008
    2. '列' → logprob: -5.883033752441406
    3. '算' → logprob: -6.758033752441406
    4. '``' → logprob: -7.758033752441406
    5. 'enumer' → logprob: -8.008033752441406
    6. '举' → logprob: -8.008033752441406
    7. '探索' → logprob: -8.008033752441406
    8. '```' → logprob: -8.383033752441406
    9. '合' → logprob: -8.508033752441406
    10. '集合' → logprob: -8.883033752441406

Token 272: ' 和' (ID: 37480)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe6\x8c' → logprob: -0.010184187442064285
    2. 'p' → logprob: -5.260184288024902
    3. 'く' → logprob: -7.260184288024902
    4. '``' → logprob: -7.510184288024902
    5. '```' → logprob: -7.760184288024902
    6. '���' → logprob: -7.885184288024902
    7. '��' → logprob: -8.135184288024902
    8. '示' → logprob: -8.510184288024902
    9. 'b' → logprob: -8.635184288024902
    10. '成' → logprob: -8.760184288024902

Token 273: 'の' (ID: 3385)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe6\x8c' → logprob: -0.030840415507555008
    2. '表' → logprob: -4.7808403968811035
    3. '�' → logprob: -5.5308403968811035
    4. '```' → logprob: -6.0308403968811035
    5. '' → logprob: -6.1558403968811035
    6. '���' → logprob: -6.5308403968811035
    7. '集合' → logprob: -6.6558403968811035
    8. '��' → logprob: -6.7808403968811035
    9. '举' → logprob: -6.7808403968811035
    10. '計' → logprob: -6.7808403968811035

Token 274: '組' (ID: 62886)
  Prédit: '列'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '列' → logprob: -0.8168336153030396
    2. '合' → logprob: -1.3168336153030396
    3. 'ist' → logprob: -2.94183349609375
    4. '探索' → logprob: -3.06683349609375
    5. 'enumer' → logprob: -3.31683349609375
    6. '\xe6\x8c' → logprob: -3.44183349609375
    7. 'す' → logprob: -3.56683349609375
    8. '集合' → logprob: -3.94183349609375
    9. 'け' → logprob: -4.94183349609375
    10. 's' → logprob: -4.94183349609375

Token 275: 'み' (ID: 17897)
  Prédit: '合'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '合' → logprob: -0.2733491063117981
    2. '合わせ' → logprob: -1.6483490467071533
    3. 'み' → logprob: -3.5233490467071533
    4. '합' → logprob: -4.773349285125732
    5. 'あ' → logprob: -5.898349285125732
    6. 'わせ' → logprob: -6.398349285125732
    7. '```' → logprob: -6.398349285125732
    8. '合集' → logprob: -7.273349285125732
    9. 'べ' → logprob: -8.148348808288574
    10. '' → logprob: -8.148348808288574

Token 276: '合わせ' (ID: 92253)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\xe6\x8c' → logprob: -1.037289023399353
    2. '合わせ' → logprob: -1.287289023399353
    3. '列' → logprob: -1.662289023399353
    4. '合' → logprob: -2.4122891426086426
    5. '```' → logprob: -2.9122891426086426
    6. 'list' → logprob: -5.412289142608643
    7. '�' → logprob: -5.412289142608643
    8. '成' → logprob: -5.537289142608643
    9. 'enumer' → logprob: -5.662289142608643
    10. '{' → logprob: -6.287289142608643

Token 277: 'を' (ID: 7277)
  Prédit: '合'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '合' → logprob: -0.25132420659065247
    2. '合わせ' → logprob: -1.75132417678833
    3. '\xe6\x8c' → logprob: -3.25132417678833
    4. '```' → logprob: -5.87632417678833
    5. '成' → logprob: -6.00132417678833
    6. '表' → logprob: -7.25132417678833
    7. 'を' → logprob: -7.50132417678833
    8. 'あ' → logprob: -7.50132417678833
    9. '합' → logprob: -8.501324653625488
    10. '当' → logprob: -8.626324653625488

Token 278: '求' (ID: 16339)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe6\x8c' → logprob: -0.27526018023490906
    2. '合わせ' → logprob: -2.4002602100372314
    3. '合' → logprob: -3.2752602100372314
    4. '列' → logprob: -3.5252602100372314
    5. '生成' → logprob: -3.9002602100372314
    6. 'す' → logprob: -4.650259971618652
    7. '```' → logprob: -4.775259971618652
    8. 'enumer' → logprob: -5.275259971618652
    9. '表' → logprob: -5.525259971618652
    10. 's' → logprob: -5.525259971618652

Token 279: 'め' (ID: 17693)
  Prédit: 'め'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'め' → logprob: -0.00019245444855187088
    2. '```' → logprob: -9.500192642211914
    3. '_' → logprob: -10.750192642211914
    4. '�' → logprob: -10.875192642211914
    5. '__' → logprob: -11.250192642211914
    6. '��' → logprob: -11.375192642211914
    7. '-' → logprob: -11.875192642211914
    8. 'る' → logprob: -12.000192642211914
    9. '' → logprob: -12.250192642211914
    10. '[]' → logprob: -12.375192642211914

Token 280: 'て' (ID: 5711)
  Prédit: '合わせ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '合わせ' → logprob: -0.684826672077179
    2. '```' → logprob: -2.184826612472534
    3. 'す' → logprob: -2.434826612472534
    4. 'あ' → logprob: -2.434826612472534
    5. '列' → logprob: -3.184826612472534
    6. '合' → logprob: -3.309826612472534
    7. 'べ' → logprob: -3.684826612472534
    8. '\xe6\x8c' → logprob: -4.434826850891113
    9. 'ば' → logprob: -4.684826850891113
    10. 'て' → logprob: -4.934826850891113

Token 281: '重' (ID: 4948)
  Prédit: 'す'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.2691862881183624
    2. '\xe6\x8c' → logprob: -2.64418625831604
    3. 'あ' → logprob: -3.26918625831604
    4. '合わせ' → logprob: -3.51918625831604
    5. '```' → logprob: -3.64418625831604
    6. '合' → logprob: -4.269186496734619
    7. '生成' → logprob: -4.394186496734619
    8. '列' → logprob: -4.894186496734619
    9. '出' → logprob: -5.019186496734619
    10. 's' → logprob: -6.269186496734619

Token 282: '�' (ID: 98172)
  Prédit: 'み'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'み' → logprob: -0.2700299620628357
    2. '合' → logprob: -2.3950300216674805
    3. '\xe8\xa4' → logprob: -2.3950300216674805
    4. 'ね' → logprob: -4.3950300216674805
    5. '要' → logprob: -4.6450300216674805
    6. '列' → logprob: -5.1450300216674805
    7. '集合' → logprob: -5.2700300216674805
    8. 'べ' → logprob: -5.7700300216674805
    9. 'て' → logprob: -6.0200300216674805
    10. '```' → logprob: -6.0200300216674805

Token 283: '�' (ID: 229)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\xe6\x8c' → logprob: -0.33912983536720276
    2. '列' → logprob: -2.21412992477417
    3. '合' → logprob: -2.58912992477417
    4. '合わせ' → logprob: -2.58912992477417
    5. '�' → logprob: -5.08912992477417
    6. '集合' → logprob: -5.83912992477417
    7. '```' → logprob: -6.33912992477417
    8. 'あ' → logprob: -6.71412992477417
    9. '{' → logprob: -6.71412992477417
    10. '��' → logprob: -6.83912992477417

Token 284: 'なし' (ID: 83142)
  Prédit: '列'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '列' → logprob: -0.11237557977437973
    2. '\xe6\x8c' → logprob: -4.112375736236572
    3. 'て' → logprob: -4.362375736236572
    4. '表' → logprob: -4.612375736236572
    5. 'べ' → logprob: -4.737375736236572
    6. '{' → logprob: -4.862375736236572
    7. '合' → logprob: -4.987375736236572
    8. '��' → logprob: -5.612375736236572
    9. '成' → logprob: -5.737375736236572
    10. '合わせ' → logprob: -5.987375736236572

Token 285: '・' (ID: 4156)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe6\x8c' → logprob: -0.6111130118370056
    2. '列' → logprob: -1.4861130714416504
    3. '表' → logprob: -2.9861130714416504
    4. '合' → logprob: -2.9861130714416504
    5. '合わせ' → logprob: -4.23611307144165
    6. '{' → logprob: -4.48611307144165
    7. '��' → logprob: -4.61111307144165
    8. '�' → logprob: -4.98611307144165
    9. '置' → logprob: -5.11111307144165
    10. 'べ' → logprob: -5.36111307144165

Token 286: 'ソ' (ID: 41675)
  Prédit: '列'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '列' → logprob: -0.5606980919837952
    2. '合' → logprob: -2.3106980323791504
    3. '\xe8\xa4' → logprob: -2.8106980323791504
    4. '\xe6\x8c' → logprob: -3.0606980323791504
    5. 's' → logprob: -3.3106980323791504
    6. '集合' → logprob: -3.8106980323791504
    7. '合わせ' → logprob: -4.31069803237915
    8. 'べ' → logprob: -4.56069803237915
    9. '```' → logprob: -4.68569803237915
    10. 'げ' → logprob: -4.68569803237915

Token 287: 'ート' (ID: 34471)
  Prédit: 'ット'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ット' → logprob: -0.4787307381629944
    2. 'ート' → logprob: -1.2287306785583496
    3. 'ト' → logprob: -4.47873067855835
    4. 'ース' → logprob: -4.47873067855835
    5. '   ' → logprob: -4.97873067855835
    6. '�' → logprob: -5.10373067855835
    7. '��' → logprob: -5.22873067855835
    8. 'メ' → logprob: -5.47873067855835
    9. 'ント' → logprob: -5.72873067855835
    10. '```' → logprob: -5.85373067855835

Token 288: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe6\x8c' → logprob: -0.026494547724723816
    2. '�' → logprob: -4.90149450302124
    3. '列' → logprob: -5.15149450302124
    4. '��' → logprob: -5.27649450302124
    5. '���' → logprob: -6.27649450302124
    6. '' → logprob: -7.02649450302124
    7. '```' → logprob: -7.02649450302124
    8. '合' → logprob: -7.52649450302124
    9. '合わせ' → logprob: -7.52649450302124
    10. '����' → logprob: -8.151494979858398

Token 289: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\xe6\x8c' → logprob: -0.020395660772919655
    2. '列' → logprob: -4.770395755767822
    3. '��' → logprob: -5.645395755767822
    4. '�' → logprob: -5.770395755767822
    5. '���' → logprob: -6.770395755767822
    6. '```' → logprob: -7.145395755767822
    7. '合わせ' → logprob: -7.645395755767822
    8. '合' → logprob: -7.770395755767822
    9. '' → logprob: -8.145395278930664
    10. '置' → logprob: -8.520395278930664

Token 290: ' from' (ID: 591)
  Prédit: 'ーション'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ーション' → logprob: -1.1017407178878784
    2. '列' → logprob: -1.2267407178878784
    3. '全' → logprob: -2.351740837097168
    4. '\xe6\x8c' → logprob: -3.101740837097168
    5. 'enumer' → logprob: -3.226740837097168
    6. 'ション' → logprob: -3.726740837097168
    7. '��' → logprob: -3.851740837097168
    8. 'ータ' → logprob: -4.101740837097168
    9. 'べ' → logprob: -4.476740837097168
    10. '探索' → logprob: -4.851740837097168

Token 291: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.23178638517856598
    2. 'it' → logprob: -1.6067863702774048
    3. 'collections' → logprob: -5.606786251068115
    4. 'bis' → logprob: -6.106786251068115
    5. 'heap' → logprob: -9.106786727905273
    6. ' functools' → logprob: -9.356786727905273
    7. ' collections' → logprob: -9.356786727905273
    8. ' bis' → logprob: -10.231786727905273
    9. '_it' → logprob: -10.606786727905273
    10. 'copy' → logprob: -10.856786727905273

Token 292: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.47503525018692017
    2. ' import' → logprob: -0.9750352501869202
    3. '	import' → logprob: -7.600035190582275
    4. '.com' → logprob: -7.975035190582275
    5. 'com' → logprob: -10.225035667419434
    6. 'ertools' → logprob: -10.475035667419434
    7. '<|end|>' → logprob: -10.850035667419434
    8. 'from' → logprob: -12.350035667419434
    9. '.groupby' → logprob: -12.475035667419434
    10. '_import' → logprob: -12.725035667419434

Token 293: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.08459872752428055
    2. 'chain' → logprob: -2.8345987796783447
    3. ' combinations' → logprob: -4.209598541259766
    4. ' chain' → logprob: -5.459598541259766
    5. 'product' → logprob: -5.959598541259766
    6. 'acc' → logprob: -7.584598541259766
    7. ' product' → logprob: -9.209598541259766
    8. 'compress' → logprob: -10.334598541259766
    9. '	com' → logprob: -10.834598541259766
    10. ' accumulate' → logprob: -11.584598541259766

Token 294: '_with' (ID: 14161)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ns' → logprob: -1.1914552450180054
    2. 'ations' → logprob: -1.3164552450180054
    3. 'n' → logprob: -2.191455364227295
    4. 'binations' → logprob: -2.316455364227295
    5. 'import' → logprob: -3.066455364227295
    6. 'from' → logprob: -3.441455364227295
    7. 's' → logprob: -3.566455364227295
    8. 'lations' → logprob: -3.691455364227295
    9. 'on' → logprob: -3.941455364227295
    10. 'ons' → logprob: -4.691455364227295

Token 295: '_re' (ID: 3067)
  Prédit: 'replacement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'replacement' → logprob: -0.44304779171943665
    2. 'com' → logprob: -1.5680477619171143
    3. 'r' → logprob: -2.9430477619171143
    4. 'comb' → logprob: -3.0680477619171143
    5. 'repeat' → logprob: -4.818048000335693
    6. 's' → logprob: -4.943048000335693
    7. 'replace' → logprob: -4.943048000335693
    8. 'sum' → logprob: -5.318048000335693
    9. 're' → logprob: -5.693048000335693
    10. 'out' → logprob: -5.818048000335693

Token 296: 'placement' (ID: 17947)
  Prédit: 'placement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -0.0894491896033287
    2. 'p' → logprob: -2.839449167251587
    3. 'peat' → logprob: -3.714449167251587
    4. 'place' → logprob: -6.964449405670166
    5. 'pe' → logprob: -7.589449405670166
    6. 'petition' → logprob: -7.589449405670166
    7. 'st' → logprob: -8.464448928833008
    8. 'pit' → logprob: -8.714448928833008
    9. 'placements' → logprob: -8.714448928833008
    10. 'r' → logprob: -9.714448928833008

Token 297: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8720861077308655
    2. 'import' → logprob: -1.8720860481262207
    3. 's' → logprob: -2.7470860481262207
    4. 't' → logprob: -2.8720860481262207
    5. 'x' → logprob: -3.1220860481262207
    6. 'c' → logprob: -3.6220860481262207
    7. 'u' → logprob: -3.7470860481262207
    8. '_' → logprob: -3.9970860481262207
    9. 'n' → logprob: -4.122086048126221
    10. '(' → logprob: -4.247086048126221

Token 298: '       ' (ID: 309)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3241628408432007
    2. 'x' → logprob: -1.5741628408432007
    3. 't' → logprob: -2.1991629600524902
    4. 'from' → logprob: -2.9491629600524902
    5. 'm' → logprob: -3.3241629600524902
    6. 'n' → logprob: -3.4491629600524902
    7. 'c' → logprob: -3.4491629600524902
    8. 'for' → logprob: -3.4491629600524902
    9. 's' → logprob: -3.9491629600524902
    10. ',' → logprob: -4.19916296005249

Token 299: ' return' (ID: 622)
  Prédit: 'ーション'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ーション' → logprob: -1.211300015449524
    2. 'ション' → logprob: -1.961300015449524
    3. 'enumer' → logprob: -2.2112998962402344
    4. '列' → logprob: -2.5862998962402344
    5. 'n' → logprob: -3.7112998962402344
    6. 'ations' → logprob: -3.8362998962402344
    7. '全' → logprob: -4.086299896240234
    8. '2' → logprob: -4.086299896240234
    9. 'ン' → logprob: -4.211299896240234
    10. 'た' → logprob: -4.336299896240234

Token 300: ' sorted' (ID: 20099)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1531832218170166
    2. ' sorted' → logprob: -1.6531832218170166
    3. 'sorted' → logprob: -1.6531832218170166
    4. 'set' → logprob: -2.4031832218170166
    5. ' []' → logprob: -2.5281832218170166
    6. '[' → logprob: -3.5281832218170166
    7. ' [' → logprob: -3.7781832218170166
    8. 'list' → logprob: -3.7781832218170166
    9. ' set' → logprob: -4.0281829833984375
    10. ' list' → logprob: -4.4031829833984375

Token 301: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.15057913959026337
    2. '({' → logprob: -2.6505792140960693
    3. '(p' → logprob: -2.9005792140960693
    4. '(list' → logprob: -5.15057897567749
    5. '(com' → logprob: -5.27557897567749
    6. '(' → logprob: -6.40057897567749
    7. '(sum' → logprob: -7.02557897567749
    8. '([' → logprob: -8.150579452514648
    9. '((' → logprob: -8.525579452514648
    10. '(map' → logprob: -10.025579452514648

Token 302: '(sum' (ID: 45528)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.06431262195110321
    2. '(sum' → logprob: -2.939312696456909
    3. '(' → logprob: -5.43931245803833
    4. '(p' → logprob: -5.68931245803833
    5. '(map' → logprob: -7.56431245803833
    6. '([' → logprob: -7.93931245803833
    7. '(s' → logprob: -8.189312934875488
    8. '(chain' → logprob: -9.064312934875488
    9. '(
' → logprob: -9.439312934875488
    10. '())' → logprob: -9.689312934875488

Token 303: '(x' (ID: 4061)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.06674490123987198
    2. '(p' → logprob: -2.941744804382324
    3. '(x' → logprob: -4.816744804382324
    4. '(c' → logprob: -6.691744804382324
    5. '(' → logprob: -7.066744804382324
    6. '(combo' → logprob: -7.316744804382324
    7. 'com' → logprob: -8.066744804382324
    8. '(sum' → logprob: -8.441744804382324
    9. '(s' → logprob: -9.066744804382324
    10. '(map' → logprob: -9.191744804382324

Token 304: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3366468846797943
    2. 'for' → logprob: -1.3366469144821167
    3. ' for' → logprob: -4.211647033691406
    4. 'comb' → logprob: -5.711647033691406
    5. 'combo' → logprob: -6.836647033691406
    6. 'com' → logprob: -6.836647033691406
    7. '(x' → logprob: -7.586647033691406
    8. 'c' → logprob: -7.586647033691406
    9. 'r' → logprob: -8.086647033691406
    10. ' comb' → logprob: -8.086647033691406

Token 305: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.057423099875450134
    2. ' for' → logprob: -3.3074231147766113
    3. 's' → logprob: -4.682423114776611
    4. 'comb' → logprob: -5.807423114776611
    5. 'r' → logprob: -6.182423114776611
    6. 'com' → logprob: -6.807423114776611
    7. '   ' → logprob: -7.182423114776611
    8. '(x' → logprob: -7.307423114776611
    9. 'm' → logprob: -7.432423114776611
    10. 'combo' → logprob: -7.682423114776611

Token 306: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.4356071949005127
    2. ' i' → logprob: -1.6856071949005127
    3. ' r' → logprob: -1.9356071949005127
    4. 'r' → logprob: -2.0606071949005127
    5. 'x' → logprob: -2.6856071949005127
    6. ' x' → logprob: -2.9356071949005127
    7. ' range' → logprob: -3.0606071949005127
    8. 'com' → logprob: -3.5606071949005127
    9. ' p' → logprob: -3.5606071949005127
    10. ' ' → logprob: -4.060606956481934

Token 307: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03374309465289116
    2. 'in' → logprob: -3.408743143081665
    3. 'x' → logprob: -10.783742904663086
    4. 'com' → logprob: -10.908742904663086
    5. ' ' → logprob: -11.033742904663086
    6. ')' → logprob: -11.783742904663086
    7. 's' → logprob: -11.783742904663086
    8. 'length' → logprob: -12.033742904663086
    9. 'range' → logprob: -12.908742904663086
    10. ' x' → logprob: -13.283742904663086

Token 308: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.0006452414090745151
    2. ' combinations' → logprob: -7.500645160675049
    3. 'range' → logprob: -9.875645637512207
    4. '(com' → logprob: -11.875645637512207
    5. '	com' → logprob: -11.875645637512207
    6. 'comb' → logprob: -12.000645637512207
    7. ' range' → logprob: -12.375645637512207
    8. '   ' → logprob: -12.375645637512207
    9. 'powers' → logprob: -12.500645637512207
    10. 'p' → logprob: -13.125645637512207

Token 309: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.02201547846198082
    2. '(p' → logprob: -4.022015571594238
    3. 'with' → logprob: -5.647015571594238
    4. '_' → logprob: -8.522015571594238
    5. ')' → logprob: -10.772015571594238
    6. 'With' → logprob: -10.897015571594238
    7. '(range' → logprob: -10.897015571594238
    8. '_without' → logprob: -10.897015571594238
    9. '_(' → logprob: -11.522015571594238
    10. '(' → logprob: -11.772015571594238

Token 310: '_re' (ID: 3067)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.027985218912363052
    2. 'replacement' → logprob: -4.652985095977783
    3. 'placement' → logprob: -5.152985095977783
    4. 'r' → logprob: -5.277985095977783
    5. 'range' → logprob: -5.402985095977783
    6. ' p' → logprob: -6.652985095977783
    7. '(p' → logprob: -7.277985095977783
    8. 'e' → logprob: -8.152985572814941
    9. 're' → logprob: -10.152985572814941
    10. 'et' → logprob: -10.277985572814941

Token 311: 'placement' (ID: 17947)
  Prédit: 'placement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placement' → logprob: -0.0014573780354112387
    2. 'p' → logprob: -7.251457214355469
    3. 'pl' → logprob: -7.876457214355469
    4. 'replacement' → logprob: -8.501457214355469
    5. 'e' → logprob: -9.626457214355469
    6. 'peat' → logprob: -11.126457214355469
    7. 'plac' → logprob: -11.501457214355469
    8. 'place' → logprob: -11.751457214355469
    9. 'ep' → logprob: -11.876457214355469
    10. 'r' → logprob: -11.876457214355469

Token 312: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -5.872261317563243e-05
    2. '(' → logprob: -10.750059127807617
    3. ')' → logprob: -11.250059127807617
    4. ' (' → logprob: -11.625059127807617
    5. 'p' → logprob: -11.875059127807617
    6. ',p' → logprob: -13.000059127807617
    7. ' p' → logprob: -13.000059127807617
    8. '(range' → logprob: -13.125059127807617
    9. ')p' → logprob: -14.250059127807617
    10. ',' → logprob: -15.375059127807617

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035498205106705427
    2. ',len' → logprob: -5.878550052642822
    3. ')' → logprob: -8.503549575805664
    4. ' ,' → logprob: -8.753549575805664
    5. ',)' → logprob: -9.503549575805664
    6. ',length' → logprob: -9.628549575805664
    7. ',k' → logprob: -9.628549575805664
    8. ')))' → logprob: -10.128549575805664
    9. ',p' → logprob: -10.378549575805664
    10. ',n' → logprob: -10.378549575805664

Token 314: ' ' (ID: 220)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3937620520591736
    2. 'range' → logprob: -1.8937621116638184
    3. 'r' → logprob: -2.0187621116638184
    4. '2' → logprob: -3.8937621116638184
    5. 'k' → logprob: -5.268762111663818
    6. '0' → logprob: -5.643762111663818
    7. ')' → logprob: -5.643762111663818
    8. 'i' → logprob: -5.768762111663818
    9. '1' → logprob: -6.268762111663818
    10. ' len' → logprob: -6.393762111663818

Token 315: '2' (ID: 17)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.534505307674408
    2. '2' → logprob: -1.4095053672790527
    3. 'range' → logprob: -2.1595053672790527
    4. 'r' → logprob: -3.4095053672790527
    5. '1' → logprob: -4.159505367279053
    6. '0' → logprob: -6.034505367279053
    7. 'i' → logprob: -6.909505367279053
    8. 'k' → logprob: -7.284505367279053
    9. ')' → logprob: -7.409505367279053
    10. '3' → logprob: -8.534504890441895

Token 316: ')))

' (ID: 46526)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0001766040368238464
    2. ')' → logprob: -9.375176429748535
    3. ')))' → logprob: -9.625176429748535
    4. ' ))' → logprob: -11.750176429748535
    5. '()))' → logprob: -11.875176429748535
    6. '))
' → logprob: -11.875176429748535
    7. '   ' → logprob: -13.625176429748535
    8. '),' → logprob: -14.625176429748535
    9. ' ' → logprob: -14.875176429748535
    10. ')),' → logprob: -15.000176429748535

Token 317: '   ' (ID: 271)
  Prédit: '�'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '�' → logprob: -1.7538540363311768
    2. 'ン' → logprob: -1.7538540363311768
    3. 'ん' → logprob: -2.8163540363311768
    4. 'n' → logprob: -3.1288540363311768
    5. 'ー' → logprob: -3.1913540363311768
    6. 'ーション' → logprob: -3.6288540363311768
    7. '��' → logprob: -3.8163540363311768
    8. ' ' → logprob: -4.003853797912598
    9. ')' → logprob: -4.066353797912598
    10. ',' → logprob: -4.066353797912598

Token 318: ' @' (ID: 759)
  Prédit: '列'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '列' → logprob: -1.9918771982192993
    2. '解' → logprob: -2.3668770790100098
    3. '�' → logprob: -2.8668770790100098
    4. '\xe8\xa4' → logprob: -3.2418770790100098
    5. '重' → logprob: -3.3668770790100098
    6. 'ん' → logprob: -3.3668770790100098
    7. '字' → logprob: -3.4918770790100098
    8. '全' → logprob: -3.6168770790100098
    9. '除' → logprob: -3.6168770790100098
    10. '合' → logprob: -3.6168770790100098

Token 319: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0006958735757507384
    2. 'classmethod' → logprob: -7.500695705413818
    3. 'static' → logprob: -9.750696182250977
    4. 'partial' → logprob: -10.625696182250977
    5. 'l' → logprob: -10.750696182250977
    6. 'property' → logprob: -10.875696182250977
    7. 'dat' → logprob: -11.000696182250977
    8. 'fun' → logprob: -14.000696182250977
    9. 'cache' → logprob: -14.000696182250977
    10. '@' → logprob: -14.250696182250977

Token 320: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4662177562713623
    2. ' def' → logprob: -1.4662177562713623
    3. 'def' → logprob: -1.9662177562713623
    4. '
' → logprob: -6.841217994689941
    5. '	def' → logprob: -8.716217994689941
    6. ' ' → logprob: -8.841217994689941
    7. '('' → logprob: -9.216217994689941
    8. '[' → logprob: -9.591217994689941
    9. '  ' → logprob: -10.091217994689941
    10. '    
' → logprob: -10.216217994689941

Token 321: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32422739267349243
    2. ' def' → logprob: -1.4492273330688477
    3. '   ' → logprob: -3.3242273330688477
    4. '
' → logprob: -5.324227333068848
    5. ' ' → logprob: -7.824227333068848
    6. '('' → logprob: -7.949227333068848
    7. '	def' → logprob: -9.199227333068848
    8. ':' → logprob: -9.449227333068848
    9. '[' → logprob: -9.824227333068848
    10. '(' → logprob: -10.199227333068848

Token 322: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10721419006586075
    2. ' def' → logprob: -3.3572142124176025
    3. 'HF' → logprob: -3.8572142124176025
    4. 'from' → logprob: -4.607213973999023
    5. 'l' → logprob: -4.732213973999023
    6. 'g' → logprob: -4.982213973999023
    7. 'S' → logprob: -6.107213973999023
    8. 'LF' → logprob: -6.357213973999023
    9. 'reduce' → logprob: -6.482213973999023
    10. 'lf' → logprob: -6.607213973999023

Token 323: ' B' (ID: 418)
  Prédit: 'HF'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'HF' → logprob: -1.031947135925293
    2. 'G' → logprob: -2.281947135925293
    3. 'g' → logprob: -2.406947135925293
    4. ' gcd' → logprob: -2.531947135925293
    5. ' HF' → logprob: -2.781947135925293
    6. 'H' → logprob: -4.156947135925293
    7. 'main' → logprob: -4.156947135925293
    8. 'HS' → logprob: -4.344447135925293
    9. ' G' → logprob: -4.531947135925293
    10. 'LC' → logprob: -4.844447135925293

Token 324: 'fs' (ID: 6469)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.18535028398036957
    2. 'SF' → logprob: -3.435350179672241
    3. 'inary' → logprob: -3.560350179672241
    4. 'F' → logprob: -3.685350179672241
    5. 'FS' → logprob: -3.935350179672241
    6. 'I' → logprob: -3.935350179672241
    7. 'E' → logprob: -4.06035041809082
    8. 'Search' → logprob: -5.68535041809082
    9. 'search' → logprob: -5.81035041809082
    10. 'ST' → logprob: -6.18535041809082

Token 325: '2' (ID: 17)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.08996617048978806
    2. '(queue' → logprob: -3.214966058731079
    3. '(' → logprob: -3.714966058731079
    4. '(q' → logprob: -4.839966297149658
    5. '():' → logprob: -5.464966297149658
    6. ':' → logprob: -5.964966297149658
    7. '(start' → logprob: -6.339966297149658
    8. '):' → logprob: -6.839966297149658
    9. '(P' → logprob: -7.339966297149658
    10. '(graph' → logprob: -7.714966297149658

Token 326: '(a' (ID: 6271)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.044416751712560654
    2. '(queue' → logprob: -4.169416904449463
    3. '(q' → logprob: -4.669416904449463
    4. '():' → logprob: -4.669416904449463
    5. '(' → logprob: -5.669416904449463
    6. '(a' → logprob: -7.294416904449463
    7. '(x' → logprob: -7.419416904449463
    8. '(s' → logprob: -7.419416904449463
    9. '(graph' → logprob: -8.044416427612305
    10. '(Q' → logprob: -8.169416427612305

Token 327: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.661419153213501
    2. ',' → logprob: -0.786419153213501
    3. '):
' → logprob: -4.161418914794922
    4. ' ):' → logprob: -5.286418914794922
    5. ',a' → logprob: -5.786418914794922
    6. ' ,' → logprob: -6.536418914794922
    7. ')' → logprob: -6.786418914794922
    8. '   ' → logprob: -7.661418914794922
    9. ',p' → logprob: -8.036418914794922
    10. '  ' → logprob: -8.786418914794922

Token 328: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014808421023190022
    2. '   ' → logprob: -5.014808654785156
    3. '    ' → logprob: -5.639808654785156
    4. '(' → logprob: -7.264808654785156
    5. ' ' → logprob: -7.514808654785156
    6. '     ' → logprob: -8.014808654785156
    7. '	' → logprob: -8.014808654785156
    8. ',' → logprob: -8.139808654785156
    9. ':' → logprob: -8.139808654785156
    10. ' pass' → logprob: -8.389808654785156

Token 329: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6862969994544983
    2. ' from' → logprob: -0.9362969994544983
    3. ' pass' → logprob: -3.1862969398498535
    4. 'n' → logprob: -3.4362969398498535
    5. '...' → logprob: -4.4362969398498535
    6. 'pass' → logprob: -4.6862969398498535
    7. ' n' → logprob: -5.8112969398498535
    8. '   ' → logprob: -6.3112969398498535
    9. '       ' → logprob: -6.4362969398498535
    10. 'import' → logprob: -7.0612969398498535

Token 330: ' bit' (ID: 3546)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.050055358558893204
    2. 'deque' → logprob: -4.425055503845215
    3. '   ' → logprob: -4.675055503845215
    4. 'import' → logprob: -5.050055503845215
    5. 'pass' → logprob: -5.300055503845215
    6. 'def' → logprob: -5.550055503845215
    7. ' from' → logprob: -5.675055503845215
    8. 'queue' → logprob: -6.550055503845215
    9. '...' → logprob: -6.550055503845215
    10. '"""' → logprob: -6.675055503845215

Token 331: '全' (ID: 5145)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.372883677482605
    2. 'mask' → logprob: -1.747883677482605
    3. ')' → logprob: -2.7478837966918945
    4. 'array' → logprob: -3.4978837966918945
    5. 'count' → logprob: -3.9978837966918945
    6. 's' → logprob: -4.8728837966918945
    7. '操作' → logprob: -5.7478837966918945
    8. 'wise' → logprob: -6.7478837966918945
    9. '_' → logprob: -7.1228837966918945
    10. '```' → logprob: -7.2478837966918945

Token 332: '探索' (ID: 191406)
  Prédit: '探索'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '探索' → logprob: -0.2909378707408905
    2. '列' → logprob: -1.415937900543213
    3. '幅' → logprob: -6.415937900543213
    4. '集合' → logprob: -6.540937900543213
    5. '全' → logprob: -6.665937900543213
    6. '数' → logprob: -7.165937900543213
    7. '探' → logprob: -7.915937900543213
    8. '選' → logprob: -8.040937423706055
    9. '成' → logprob: -8.165937423706055
    10. '検索' → logprob: -8.290937423706055

Token 333: '：' (ID: 1817)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9858299493789673
    2. '(' → logprob: -1.2358299493789673
    3. ':' → logprob: -2.2358298301696777
    4. '(a' → logprob: -2.4858298301696777
    5. '(n' → logprob: -2.6108298301696777
    6. '(p' → logprob: -3.3608298301696777
    7. '       ' → logprob: -4.110829830169678
    8. '(
' → logprob: -5.485829830169678
    9. ':
' → logprob: -5.985829830169678
    10. 'def' → logprob: -6.235829830169678

Token 334: 'bit' (ID: 6516)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2074415683746338
    2. 'from' → logprob: -1.5824415683746338
    3. ' a' → logprob: -1.9574415683746338
    4. 'def' → logprob: -2.332441568374634
    5. '   ' → logprob: -2.582441568374634
    6. ' from' → logprob: -3.207441568374634
    7. '       ' → logprob: -4.082441329956055
    8. ' def' → logprob: -4.332441329956055
    9. 'deque' → logprob: -4.582441329956055
    10. ' queue' → logprob: -5.082441329956055

Token 335: '列' (ID: 19047)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.3751556873321533
    2. '   ' → logprob: -1.7501556873321533
    3. '数' → logprob: -2.5001556873321533
    4. '全' → logprob: -3.0001556873321533
    5. '  ' → logprob: -3.1251556873321533
    6. 'の' → logprob: -3.3751556873321533
    7. '<|end|>' → logprob: -3.3751556873321533
    8. ')' → logprob: -3.5001556873321533
    9. '_count' → logprob: -3.5001556873321533
    10. 'を' → logprob: -3.6251556873321533

Token 336: '(' (ID: 7)
  Prédit: 'の'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'の' → logprob: -0.7550758123397827
    2. '(n' → logprob: -2.2550759315490723
    3. '(' → logprob: -2.5050759315490723
    4. 'を' → logprob: -2.5050759315490723
    5. 'として' → logprob: -2.5050759315490723
    6. 'で' → logprob: -2.7550759315490723
    7. ' (' → logprob: -4.130075931549072
    8. ')' → logprob: -4.130075931549072
    9. ' の' → logprob: -4.380075931549072
    10. ' =' → logprob: -5.130075931549072

Token 337: '16' (ID: 1125)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1933753341436386
    2. ' a' → logprob: -3.1933753490448
    3. ')' → logprob: -3.4433753490448
    4. 'n' → logprob: -3.5683753490448
    5. 's' → logprob: -4.068375110626221
    6. 'range' → logprob: -4.193375110626221
    7. ' range' → logprob: -4.568375110626221
    8. ',' → logprob: -5.068375110626221
    9. 'x' → logprob: -6.068375110626221
    10. 'len' → logprob: -6.193375110626221

Token 338: '�' (ID: 11959)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05246913433074951
    2. 'bit' → logprob: -3.552469253540039
    3. '-bit' → logprob: -4.677469253540039
    4. ')-' → logprob: -5.677469253540039
    5. 'bits' → logprob: -6.177469253540039
    6. ',' → logprob: -6.302469253540039
    7. ',)' → logprob: -6.552469253540039
    8. ' )' → logprob: -7.052469253540039
    9. ')#' → logprob: -7.177469253540039
    10. 'ビ' → logprob: -8.552469253540039

Token 339: '�' (ID: 223)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08374253660440445
    2. 'bit' → logprob: -2.958742618560791
    3. ',' → logprob: -4.708742618560791
    4. 'bits' → logprob: -5.833742618560791
    5. 'まで' → logprob: -5.958742618560791
    6. '0' → logprob: -6.708742618560791
    7. '-bit' → logprob: -6.833742618560791
    8. '1' → logprob: -7.083742618560791
    9. '=' → logprob: -7.333742618560791
    10. 'b' → logprob: -7.333742618560791

Token 340: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0262261051684618
    2. 'bit' → logprob: -4.026226043701172
    3. ',' → logprob: -7.151226043701172
    4. 'bits' → logprob: -7.401226043701172
    5. '=' → logprob: -7.526226043701172
    6. 'まで' → logprob: -7.526226043701172
    7. 'b' → logprob: -7.651226043701172
    8. ' )' → logprob: -8.026226043701172
    9. '-bit' → logprob: -8.026226043701172
    10. 'ビ' → logprob: -8.401226043701172

Token 341: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3396378755569458
    2. ')' → logprob: -1.4646378755569458
    3. '#' → logprob: -2.0896377563476562
    4. ' n' → logprob: -2.5896377563476562
    5. ' def' → logprob: -2.8396377563476562
    6. 'n' → logprob: -2.9646377563476562
    7. ' #' → logprob: -3.2146377563476562
    8. '   ' → logprob: -3.8396377563476562
    9. ' ' → logprob: -4.464637756347656
    10. 'a' → logprob: -5.027137756347656

Token 342: 'その' (ID: 32894)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40054619312286377
    2. 'def' → logprob: -2.525546073913574
    3. '#' → logprob: -2.900546073913574
    4. '16' → logprob: -3.525546073913574
    5. '1' → logprob: -3.775546073913574
    6. '   ' → logprob: -4.525546073913574
    7. 'n' → logprob: -4.650546073913574
    8. '=' → logprob: -4.775546073913574
    9. 'for' → logprob: -4.775546073913574
    10. 'return' → logprob: -4.900546073913574

Token 343: '総' (ID: 109704)
  Prédit: '長'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '長' → logprob: -1.9118372201919556
    2. '集合' → logprob: -2.411837100982666
    3. '状態' → logprob: -2.536837100982666
    4. 'def' → logprob: -2.786837100982666
    5. '数' → logprob: -3.036837100982666
    6. '要' → logprob: -3.161837100982666
    7. '中' → logprob: -3.286837100982666
    8. 'a' → logprob: -3.286837100982666
    9. '```' → logprob: -3.411837100982666
    10. '1' → logprob: -3.661837100982666

Token 344: '和' (ID: 5884)
  Prédit: '和'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '和' → logprob: -0.12757636606693268
    2. '数' → logprob: -2.3775763511657715
    3. '当' → logprob: -4.1275763511657715
    4. '計' → logprob: -6.1275763511657715
    5. '和值' → logprob: -6.3775763511657715
    6. '量' → logprob: -7.0025763511657715
    7. '```' → logprob: -7.0025763511657715
    8. 'sum' → logprob: -7.2525763511657715
    9. '{' → logprob: -8.00257682800293
    10. '�' → logprob: -8.12757682800293

Token 345: 'を' (ID: 7277)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7599796056747437
    2. '):' → logprob: -1.7599796056747437
    3. 'の' → logprob: -2.134979724884033
    4. ':' → logprob: -2.134979724884033
    5. '16' → logprob: -2.634979724884033
    6. ',' → logprob: -2.759979724884033
    7. '#' → logprob: -3.634979724884033
    8. '=' → logprob: -3.884979724884033
    9. 'を' → logprob: -4.134979724884033
    10. 'で' → logprob: -4.259979724884033

Token 346: 'リ' (ID: 9007)
  Prédit: 'dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dict' → logprob: -1.0931566953659058
    2. '求' → logprob: -1.7181566953659058
    3. 'sum' → logprob: -2.0931568145751953
    4. 'dp' → logprob: -2.8431568145751953
    5. 'range' → logprob: -2.9681568145751953
    6. 'a' → logprob: -3.2181568145751953
    7. 'enumer' → logprob: -3.2181568145751953
    8. 'd' → logprob: -3.8431568145751953
    9. '返' → logprob: -3.9681568145751953
    10. 'return' → logprob: -3.9681568145751953

Token 347: 'スト' (ID: 38236)
  Prédit: 'スト'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'スト' → logprob: -0.12459639459848404
    2. 'ス' → logprob: -2.999596357345581
    3. 'す' → logprob: -3.249596357345581
    4. 'ター' → logprob: -4.87459659576416
    5. '턴' → logprob: -5.74959659576416
    6. '
' → logprob: -6.12459659576416
    7. 'turn' → logprob: -6.12459659576416
    8. 'ト' → logprob: -6.49959659576416
    9. '```' → logprob: -6.49959659576416
    10. '��' → logprob: -6.74959659576416

Token 348: 'で' (ID: 4344)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.6470013856887817
    2. ':
' → logprob: -1.6470013856887817
    3. ':' → logprob: -1.8970013856887817
    4. '[]' → logprob: -2.397001266479492
    5. '[' → logprob: -2.522001266479492
    6. 'として' → logprob: -2.522001266479492
    7. 'def' → logprob: -2.897001266479492
    8. '#' → logprob: -3.272001266479492
    9. '
' → logprob: -4.397001266479492
    10. '       ' → logprob: -4.522001266479492

Token 349: '返' (ID: 16181)
  Prédit: '返'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '返' → logprob: -0.13311465084552765
    2. 'return' → logprob: -2.3831145763397217
    3. 'def' → logprob: -3.6331145763397217
    4. '   ' → logprob: -6.258114814758301
    5. '#' → logprob: -6.883114814758301
    6. ' return' → logprob: -7.508114814758301
    7. '
' → logprob: -7.883114814758301
    8. '渡' → logprob: -8.5081148147583
    9. '戻' → logprob: -8.6331148147583
    10. '       ' → logprob: -8.6331148147583

Token 350: 'す' (ID: 4868)
  Prédit: 'す'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'す' → logprob: -0.0019261365523561835
    2. ')' → logprob: -7.501925945281982
    3. 'します' → logprob: -7.626925945281982
    4. '```' → logprob: -8.25192642211914
    5. '   ' → logprob: -8.62692642211914
    6. '却' → logprob: -9.62692642211914
    7. '       ' → logprob: -9.87692642211914
    8. '）' → logprob: -9.87692642211914
    9. 'し' → logprob: -10.00192642211914
    10. 'def' → logprob: -10.25192642211914

Token 351: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9669216871261597
    2. '   ' → logprob: -1.0919216871261597
    3. ':' → logprob: -2.216921806335449
    4. '       ' → logprob: -2.841921806335449
    5. '
' → logprob: -3.091921806335449
    6. '(' → logprob: -3.341921806335449
    7. '(n' → logprob: -4.841921806335449
    8. '):
' → logprob: -4.841921806335449
    9. 'def' → logprob: -5.966921806335449
    10. '[' → logprob: -6.091921806335449

Token 352: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014608610421419144
    2. '       ' → logprob: -4.639608383178711
    3. ':' → logprob: -6.139608383178711
    4. 'def' → logprob: -7.389608383178711
    5. ':
' → logprob: -7.639608383178711
    6. '(' → logprob: -8.014608383178711
    7. ' def' → logprob: -8.514608383178711
    8. '):
' → logprob: -8.639608383178711
    9. '    ' → logprob: -9.014608383178711
    10. ' (' → logprob: -9.264608383178711

Token 353: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2005414366722107
    2. ' n' → logprob: -3.3255414962768555
    3. '   ' → logprob: -3.3255414962768555
    4. 'dp' → logprob: -3.5755414962768555
    5. 'res' → logprob: -3.8255414962768555
    6. 'l' → logprob: -4.5755414962768555
    7. 'ans' → logprob: -4.8255414962768555
    8. ' res' → logprob: -5.0755414962768555
    9. 'ret' → logprob: -5.2005414962768555
    10. 'def' → logprob: -5.4505414962768555

Token 354: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04326407611370087
    2. ' =' → logprob: -3.168264150619507
    3. '=len' → logprob: -8.543264389038086
    4. ',' → logprob: -10.293264389038086
    5. '   ' → logprob: -10.793264389038086
    6. '=int' → logprob: -11.793264389038086
    7. ')' → logprob: -13.168264389038086
    8. '=max' → logprob: -13.543264389038086
    9. '=a' → logprob: -13.668264389038086
    10. ':' → logprob: -14.168264389038086

Token 355: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.28162747621536255
    2. '16' → logprob: -1.4066274166107178
    3. ' len' → logprob: -8.156627655029297
    4. '1' → logprob: -8.781627655029297
    5. ' ' → logprob: -11.531627655029297
    6. '(len' → logprob: -11.531627655029297
    7. '15' → logprob: -12.281627655029297
    8. 'a' → logprob: -13.156627655029297
    9. '0' → logprob: -13.531627655029297
    10. 'sum' → logprob: -13.656627655029297

Token 356: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.750000953674316
    3. 'a' → logprob: -15.875000953674316
    4. '(A' → logprob: -19.375
    5. '(p' → logprob: -20.25
    6. '(
' → logprob: -21.25
    7. '((' → logprob: -21.375
    8. '(array' → logprob: -21.75
    9. '```' → logprob: -21.75
    10. '(arr' → logprob: -21.875

Token 357: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07009848952293396
    2. ')
' → logprob: -2.695098400115967
    3. ' )' → logprob: -9.695098876953125
    4. ')
' → logprob: -9.820098876953125
    5. '   ' → logprob: -10.695098876953125
    6. ' )
' → logprob: -11.945098876953125
    7. ')a' → logprob: -12.195098876953125
    8. '       ' → logprob: -12.445098876953125
    9. ' ' → logprob: -13.070098876953125
    10. ')+' → logprob: -13.570098876953125

Token 358: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1383814811706543
    2. 's' → logprob: -3.0133814811706543
    3. '       ' → logprob: -3.2633814811706543
    4. 'dp' → logprob: -4.013381481170654
    5. 'res' → logprob: -5.013381481170654
    6. ' res' → logprob: -5.513381481170654
    7. ' dp' → logprob: -5.513381481170654
    8. ' s' → logprob: -5.638381481170654
    9. 'sum' → logprob: -6.638381481170654
    10. ' sums' → logprob: -6.888381481170654

Token 359: ' fmt' (ID: 18237)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3085194528102875
    2. 'dp' → logprob: -2.0585193634033203
    3. 'ret' → logprob: -2.9335193634033203
    4. 'ans' → logprob: -3.3085193634033203
    5. 's' → logprob: -3.8085193634033203
    6. 'r' → logprob: -5.30851936340332
    7. 'result' → logprob: -5.30851936340332
    8. 'b' → logprob: -5.93351936340332
    9. 'sum' → logprob: -6.55851936340332
    10. 'bit' → logprob: -6.68351936340332

Token 360: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14072772860527039
    2. 'string' → logprob: -2.7657277584075928
    3. 'str' → logprob: -4.015727519989014
    4. '_string' → logprob: -4.265727519989014
    5. '=' → logprob: -4.515727519989014
    6. '_str' → logprob: -4.515727519989014
    7. 'or' → logprob: -5.890727519989014
    8. '_' → logprob: -6.015727519989014
    9. 'size' → logprob: -6.890727519989014
    10. 'a' → logprob: -7.015727519989014

Token 361: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5160799026489258
    2. ''{' → logprob: -1.7660799026489258
    3. ''' → logprob: -2.391079902648926
    4. ' f' → logprob: -2.891079902648926
    5. '"{' → logprob: -2.891079902648926
    6. '"' → logprob: -3.891079902648926
    7. ''f' → logprob: -5.391079902648926
    8. ''#' → logprob: -7.266079902648926
    9. ' '{' → logprob: -7.391079902648926
    10. '0' → logprob: -7.891079902648926

Token 362: ''' (ID: 6)
  Prédit: ''{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''{' → logprob: -0.5750857591629028
    2. '"{' → logprob: -1.0750857591629028
    3. ''' → logprob: -2.7000856399536133
    4. '"' → logprob: -3.7000856399536133
    5. 'f' → logprob: -5.575085639953613
    6. ''f' → logprob: -8.575085639953613
    7. ' f' → logprob: -9.825085639953613
    8. '(f' → logprob: -10.950085639953613
    9. '{' → logprob: -11.075085639953613
    10. '   ' → logprob: -11.200085639953613

Token 363: '0' (ID: 15)
  Prédit: ''{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''{' → logprob: -1.1387076377868652
    2. '{' → logprob: -1.3887076377868652
    3. '0' → logprob: -1.7637076377868652
    4. '{{' → logprob: -2.1387076377868652
    5. ''' → logprob: -2.5137076377868652
    6. '016' → logprob: -3.6387076377868652
    7. '"{' → logprob: -3.7637076377868652
    8. '"' → logprob: -6.263707637786865
    9. '{:' → logprob: -6.263707637786865
    10. 'f' → logprob: -6.388707637786865

Token 364: '{' (ID: 90)
  Prédit: '{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.00021176543668843806
    2. '16' → logprob: -9.000211715698242
    3. 'b' → logprob: -9.875211715698242
    4. '0' → logprob: -11.250211715698242
    5. '016' → logprob: -12.125211715698242
    6. '{x' → logprob: -12.375211715698242
    7. '{{' → logprob: -12.625211715698242
    8. '{i' → logprob: -12.750211715698242
    9. '>{' → logprob: -13.250211715698242
    10. '{}' → logprob: -13.875211715698242

Token 365: 'max' (ID: 3228)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0410495325922966
    2. '{' → logprob: -3.7910494804382324
    3. '16' → logprob: -4.041049480438232
    4. ' N' → logprob: -10.41604995727539
    5. 'str' → logprob: -11.54104995727539
    6. '   ' → logprob: -12.29104995727539
    7. ' ' → logprob: -12.66604995727539
    8. '{}' → logprob: -13.04104995727539
    9. 'len' → logprob: -13.41604995727539
    10. '
' → logprob: -13.54104995727539

Token 366: '(' (ID: 7)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.5974398851394653
    2. '(N' → logprob: -1.2224398851394653
    3. 'N' → logprob: -2.097439765930176
    4. '(' → logprob: -3.972439765930176
    5. 'len' → logprob: -4.972439765930176
    6. '{' → logprob: -5.597439765930176
    7. '(len' → logprob: -6.472439765930176
    8. '4' → logprob: -7.472439765930176
    9. '2' → logprob: -9.222439765930176
    10. '1' → logprob: -9.347439765930176

Token 367: '16' (ID: 1125)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.19635401666164398
    2. '16' → logprob: -1.8213540315628052
    3. 'len' → logprob: -4.571353912353516
    4. '4' → logprob: -5.196353912353516
    5. ' N' → logprob: -8.446353912353516
    6. '2' → logprob: -9.321353912353516
    7. '1' → logprob: -9.321353912353516
    8. '8' → logprob: -9.946353912353516
    9. ' ' → logprob: -10.196353912353516
    10. '
' → logprob: -11.196353912353516

Token 368: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5777913928031921
    2. 'a' → logprob: -1.577791452407837
    3. ')}' → logprob: -2.202791452407837
    4. 'd' → logprob: -3.702791452407837
    5. '}' → logprob: -3.702791452407837
    6. ')d' → logprob: -3.952791452407837
    7. ',a' → logprob: -4.452791213989258
    8. ',d' → logprob: -4.827791213989258
    9. ',len' → logprob: -4.952791213989258
    10. ' ,' → logprob: -5.452791213989258

Token 369: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00013131031300872564
    2. ' N' → logprob: -9.625131607055664
    3. '16' → logprob: -10.625131607055664
    4. 'len' → logprob: -11.125131607055664
    5. '4' → logprob: -12.125131607055664
    6. '2' → logprob: -12.375131607055664
    7. ' ' → logprob: -12.750131607055664
    8. '
' → logprob: -12.875131607055664
    9. 'str' → logprob: -13.625131607055664
    10. '   ' → logprob: -13.750131607055664

Token 370: ')}' (ID: 15468)
  Prédit: ')}'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.006795893888920546
    2. ')d' → logprob: -5.131795883178711
    3. ')' → logprob: -8.506795883178711
    4. ')s' → logprob: -8.756795883178711
    5. 'd' → logprob: -8.756795883178711
    6. ' )' → logprob: -9.006795883178711
    7. ')b' → logprob: -9.381795883178711
    8. 's' → logprob: -9.381795883178711
    9. ')}}' → logprob: -10.881795883178711
    10. ')m' → logprob: -12.381795883178711

Token 371: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00023691373644396663
    2. '}' → logprob: -8.500236511230469
    3. '}'' → logprob: -11.125236511230469
    4. 'd' → logprob: -11.250236511230469
    5. '{' → logprob: -12.375236511230469
    6. ')b' → logprob: -14.500236511230469
    7. ''b' → logprob: -14.750236511230469
    8. ' b' → logprob: -14.875236511230469
    9. ''' → logprob: -17.00023651123047
    10. '"' → logprob: -17.12523651123047

Token 372: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04347171634435654
    2. '')' → logprob: -3.5434718132019043
    3. ''
' → logprob: -4.418471813201904
    4. ''
' → logprob: -7.543471813201904
    5. '}'' → logprob: -7.668471813201904
    6. ')'' → logprob: -8.543471336364746
    7. '')
' → logprob: -8.793471336364746
    8. ''}' → logprob: -9.918471336364746
    9. '{' → logprob: -10.418471336364746
    10. ''{' → logprob: -10.668471336364746

Token 373: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13817186653614044
    2. ')' → logprob: -2.638171911239624
    3. '   ' → logprob: -3.888171911239624
    4. ''' → logprob: -4.638171672821045
    5. '
' → logprob: -4.638171672821045
    6. '')' → logprob: -5.013171672821045
    7. '\n' → logprob: -5.513171672821045
    8. 'def' → logprob: -6.763171672821045
    9. '        
' → logprob: -7.263171672821045
    10. ' for' → logprob: -7.513171672821045

Token 374: ' results' (ID: 4376)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0222820043563843
    2. 'res' → logprob: -1.3972820043563843
    3. 'r' → logprob: -1.7722820043563843
    4. ' res' → logprob: -2.272282123565674
    5. ' sums' → logprob: -3.897282123565674
    6. '   ' → logprob: -4.397282123565674
    7. 'dp' → logprob: -4.647282123565674
    8. 'result' → logprob: -4.772282123565674
    9. 'ans' → logprob: -4.772282123565674
    10. ' s' → logprob: -4.772282123565674

Token 375: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133388161659241
    2. '=' → logprob: -1.3133387565612793
    3. '=[]' → logprob: -9.688339233398438
    4. ',' → logprob: -11.813339233398438
    5. ' ' → logprob: -12.813339233398438
    6. '=[]
' → logprob: -13.313339233398438
    7. ' =[' → logprob: -14.188339233398438
    8. '   ' → logprob: -14.313339233398438
    9. ':' → logprob: -14.938339233398438
    10. '=[' → logprob: -15.188339233398438

Token 376: ' [(' (ID: 43900)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.001872474793344736
    2. '[' → logprob: -6.501872539520264
    3. '[]
' → logprob: -8.001872062683105
    4. ' []' → logprob: -10.376872062683105
    5. '[]}' → logprob: -13.876872062683105
    6. '[]

' → logprob: -13.876872062683105
    7. 'set' → logprob: -14.126872062683105
    8. '{}' → logprob: -15.001872062683105
    9. '[a' → logprob: -15.751872062683105
    10. '[
' → logprob: -15.751872062683105

Token 377: 'format' (ID: 4078)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3520638644695282
    2. 'sum' → logprob: -1.7270638942718506
    3. 'i' → logprob: -3.2270638942718506
    4. 'int' → logprob: -3.8520638942718506
    5. 'a' → logprob: -4.1020636558532715
    6. '(' → logprob: -4.9770636558532715
    7. ')]' → logprob: -4.9770636558532715
    8. 'x' → logprob: -5.1020636558532715
    9. ')' → logprob: -5.3520636558532715
    10. '(sum' → logprob: -5.4770636558532715

Token 378: '(mask' (ID: 80748)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00806294847279787
    2. '(' → logprob: -5.508062839508057
    3. 'i' → logprob: -6.883062839508057
    4. '(x' → logprob: -7.008062839508057
    5. ')' → logprob: -7.383062839508057
    6. '(s' → logprob: -7.758062839508057
    7. '(k' → logprob: -8.008063316345215
    8. '(b' → logprob: -8.383063316345215
    9. '(n' → logprob: -9.758063316345215
    10. '((' → logprob: -10.133063316345215

Token 379: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012477317359298468
    2. ' ,' → logprob: -7.251247882843018
    3. ',N' → logprob: -8.00124740600586
    4. ',n' → logprob: -10.00124740600586
    5. ')' → logprob: -10.12624740600586
    6. ',m' → logprob: -10.62624740600586
    7. '),' → logprob: -10.87624740600586
    8. ',len' → logprob: -11.37624740600586
    9. '))' → logprob: -11.62624740600586
    10. 'a' → logprob: -11.87624740600586

Token 380: ' fmt' (ID: 18237)
  Prédit: 'fmt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fmt' → logprob: -0.10027578473091125
    2. ' fmt' → logprob: -2.350275754928589
    3. '16' → logprob: -10.600275993347168
    4. ' ' → logprob: -11.100275993347168
    5. '(fmt' → logprob: -11.350275993347168
    6. ')' → logprob: -12.475275993347168
    7. 'f' → logprob: -12.975275993347168
    8. '"fmt' → logprob: -13.350275993347168
    9. '_fmt' → logprob: -13.475275993347168
    10. '  ' → logprob: -13.475275993347168

Token 381: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6511857509613037
    2. '))' → logprob: -0.7761857509613037
    3. ')' → logprob: -4.026185989379883
    4. ''),' → logprob: -8.651185989379883
    5. ' ),' → logprob: -9.526185989379883
    6. ''))' → logprob: -9.901185989379883
    7. ')]' → logprob: -10.151185989379883
    8. ')),' → logprob: -10.276185989379883
    9. ' ))' → logprob: -10.526185989379883
    10. ')[' → logprob: -10.651185989379883

Token 382: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.12178747355937958
    2. ' sum' → logprob: -2.2467875480651855
    3. '0' → logprob: -4.8717875480651855
    4. ')' → logprob: -7.4967875480651855
    5. 'a' → logprob: -8.496787071228027
    6. ' ' → logprob: -8.871787071228027
    7. '(sum' → logprob: -8.996787071228027
    8. '[' → logprob: -9.496787071228027
    9. ']' → logprob: -11.309287071228027
    10. ' a' → logprob: -11.434287071228027

Token 383: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.008851866237819195
    2. '(' → logprob: -5.258852005004883
    3. '([' → logprob: -6.508852005004883
    4. 'a' → logprob: -7.258852005004883
    5. '(
' → logprob: -7.633852005004883
    6. '((' → logprob: -7.633852005004883
    7. '(x' → logprob: -8.133852005004883
    8. '[a' → logprob: -9.508852005004883
    9. ')' → logprob: -10.883852005004883
    10. '(mask' → logprob: -11.133852005004883

Token 384: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.007155772764235735
    2. '[' → logprob: -5.132155895233154
    3. '[j' → logprob: -6.757155895233154
    4. '[idx' → logprob: -10.507155418395996
    5. '[k' → logprob: -10.882155418395996
    6. '[:' → logprob: -12.507155418395996
    7. 'i' → logprob: -12.882155418395996
    8. '[m' → logprob: -13.132155418395996
    9. '))' → logprob: -13.382155418395996
    10. '[index' → logprob: -13.382155418395996

Token 385: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003327787620946765
    2. ']*' → logprob: -5.7533278465271
    3. ' ]' → logprob: -10.128327369689941
    4. ']*(' → logprob: -10.378327369689941
    5. 'for' → logprob: -10.628327369689941
    6. '])' → logprob: -11.253327369689941
    7. ']
' → logprob: -11.253327369689941
    8. ']<<' → logprob: -11.753327369689941
    9. 'j' → logprob: -12.378327369689941
    10. '*' → logprob: -13.128327369689941

Token 386: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08969113975763321
    2. ' for' → logprob: -2.464691162109375
    3. ' ' → logprob: -8.214691162109375
    4. ')' → logprob: -8.464691162109375
    5. '   ' → logprob: -8.964691162109375
    6. 'if' → logprob: -9.964691162109375
    7. '
' → logprob: -11.089691162109375
    8. '  ' → logprob: -11.589691162109375
    9. '    ' → logprob: -11.589691162109375
    10. ']' → logprob: -11.589691162109375

Token 387: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.39400768280029297
    2. 'j' → logprob: -2.144007682800293
    3. ' j' → logprob: -2.144007682800293
    4. 'range' → logprob: -2.394007682800293
    5. '[j' → logprob: -11.769007682800293
    6. '(range' → logprob: -13.144007682800293
    7. ',j' → logprob: -13.394007682800293
    8. ' ' → logprob: -13.394007682800293
    9. ' in' → logprob: -13.644007682800293
    10. '	j' → logprob: -14.269007682800293

Token 388: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17987298965454102
    2. 'in' → logprob: -1.804872989654541
    3. 'range' → logprob: -9.679872512817383
    4. ' ' → logprob: -9.929872512817383
    5. ' range' → logprob: -11.804872512817383
    6. ',' → logprob: -12.179872512817383
    7. 'j' → logprob: -13.804872512817383
    8. ' j' → logprob: -14.804872512817383
    9. 'if' → logprob: -14.929872512817383
    10. ' ' → logprob: -15.054872512817383

Token 389: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2519320547580719
    2. ' range' → logprob: -1.5019320249557495
    3. '[' → logprob: -13.501932144165039
    4. '(range' → logprob: -13.876932144165039
    5. '	range' → logprob: -15.001932144165039
    6. '.range' → logprob: -16.62693214416504
    7. ')' → logprob: -16.62693214416504
    8. ' ' → logprob: -17.00193214416504
    9. '[j' → logprob: -17.00193214416504
    10. ' [' → logprob: -17.25193214416504

Token 390: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.13832344114780426
    2. '16' → logprob: -2.7633235454559326
    3. '(N' → logprob: -2.8883235454559326
    4. '(' → logprob: -5.0133233070373535
    5. 'len' → logprob: -6.3883233070373535
    6. '(len' → logprob: -6.7633233070373535
    7. ' N' → logprob: -7.2633233070373535
    8. ')' → logprob: -9.013323783874512
    9. ' ' → logprob: -10.763323783874512
    10. '   ' → logprob: -11.013323783874512

Token 391: ')' (ID: 8)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5832574367523193
    2. ' if' → logprob: -0.8332574367523193
    3. ')' → logprob: -4.958257675170898
    4. '))' → logprob: -9.333257675170898
    5. ' ' → logprob: -9.583257675170898
    6. '   ' → logprob: -9.708257675170898
    7. '       ' → logprob: -11.083257675170898
    8. ')))' → logprob: -11.458257675170898
    9. ' )' → logprob: -11.708257675170898
    10. '	if' → logprob: -12.708257675170898

Token 392: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25196921825408936
    2. ' if' → logprob: -1.5019692182540894
    3. ')' → logprob: -11.001969337463379
    4. ' ' → logprob: -12.001969337463379
    5. '   ' → logprob: -12.001969337463379
    6. '))' → logprob: -12.001969337463379
    7. '       ' → logprob: -13.501969337463379
    8. '           ' → logprob: -14.126969337463379
    9. '     ' → logprob: -14.376969337463379
    10. '               ' → logprob: -14.626969337463379

Token 393: ' (' (ID: 350)
  Prédit: '(mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mask' → logprob: -0.2951177656650543
    2. 'mask' → logprob: -2.2951178550720215
    3. ' mask' → logprob: -2.2951178550720215
    4. ' (' → logprob: -2.9201178550720215
    5. '((' → logprob: -10.295117378234863
    6. '(' → logprob: -10.420117378234863
    7. ' ' → logprob: -11.170117378234863
    8. '(m' → logprob: -11.545117378234863
    9. '	mask' → logprob: -11.545117378234863
    10. '   ' → logprob: -11.795117378234863

Token 394: 'mask' (ID: 22527)
  Prédit: 'mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.04349978640675545
    2. '(mask' → logprob: -3.793499708175659
    3. ' mask' → logprob: -3.918499708175659
    4. ' (' → logprob: -9.043499946594238
    5. '(' → logprob: -10.043499946594238
    6. '	mask' → logprob: -11.543499946594238
    7. '_mask' → logprob: -13.293499946594238
    8. '1' → logprob: -13.543499946594238
    9. 'masked' → logprob: -13.918499946594238
    10. ')' → logprob: -13.918499946594238

Token 395: '>>' (ID: 3920)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.46507078409194946
    2. '>>' → logprob: -1.3400707244873047
    3. ' &' → logprob: -2.2150707244873047
    4. ' >>' → logprob: -7.465070724487305
    5. '&r' → logprob: -9.715070724487305
    6. '&(' → logprob: -9.965070724487305
    7. '&amp' → logprob: -10.090070724487305
    8. '   ' → logprob: -10.340070724487305
    9. '>>&' → logprob: -10.340070724487305
    10. '&gt' → logprob: -10.965070724487305

Token 396: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.107425062713446e-06
    2. ' j' → logprob: -11.875006675720215
    3. '```' → logprob: -17.37500762939453
    4. '
' → logprob: -17.50000762939453
    5. ' ' → logprob: -18.00000762939453
    6. '   ' → logprob: -18.00000762939453
    7. '	j' → logprob: -18.12500762939453
    8. ')' → logprob: -18.12500762939453
    9. '16' → logprob: -18.25000762939453
    10. '_j' → logprob: -19.37500762939453

Token 397: ')&' (ID: 34370)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3136364817619324
    2. ')&' → logprob: -1.3136365413665771
    3. ' )' → logprob: -8.438636779785156
    4. '&' → logprob: -8.813636779785156
    5. '&)' → logprob: -13.313636779785156
    6. ')
' → logprob: -13.438636779785156
    7. '))' → logprob: -13.438636779785156
    8. '&amp' → logprob: -13.688636779785156
    9. ' &' → logprob: -13.938636779785156
    10. '1' → logprob: -14.188636779785156

Token 398: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015030752401798964
    2. ' ' → logprob: -6.501502990722656
    3. '   ' → logprob: -14.501502990722656
    4. '
' → logprob: -16.376502990722656
    5. '' → logprob: -17.251502990722656
    6. '  ' → logprob: -17.314002990722656
    7. ' ' → logprob: -17.501502990722656
    8. '0' → logprob: -17.939002990722656
    9. '{' → logprob: -17.939002990722656
    10. '(' → logprob: -17.939002990722656

Token 399: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004744941368699074
    2. ')]' → logprob: -6.254745006561279
    3. ')' → logprob: -6.504745006561279
    4. '))]
' → logprob: -7.004745006561279
    5. '))
' → logprob: -8.879744529724121
    6. ' ))' → logprob: -9.004744529724121
    7. ')))' → logprob: -10.129744529724121
    8. ')
' → logprob: -11.254744529724121
    9. ')]
' → logprob: -11.379744529724121
    10. '1' → logprob: -11.629744529724121

Token 400: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04072648286819458
    2. 'for' → logprob: -3.66572642326355
    3. '       ' → logprob: -4.290726661682129
    4. ')' → logprob: -8.165726661682129
    5. '   ' → logprob: -9.040726661682129
    6. '           ' → logprob: -9.790726661682129
    7. '
' → logprob: -10.040726661682129
    8. '        ' → logprob: -10.290726661682129
    9. ' ' → logprob: -10.665726661682129
    10. ']' → logprob: -10.915726661682129

Token 401: ' mask' (ID: 10910)
  Prédit: ' mask'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.062041740864515305
    2. 'mask' → logprob: -2.812041759490967
    3. '	mask' → logprob: -10.562041282653809
    4. ' range' → logprob: -10.937041282653809
    5. '_mask' → logprob: -11.062041282653809
    6. '(mask' → logprob: -12.312041282653809
    7. ' ' → logprob: -13.062041282653809
    8. 'range' → logprob: -13.437041282653809
    9. ' masked' → logprob: -14.437041282653809
    10. '```' → logprob: -14.562041282653809

Token 402: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019404153572395444
    2. 'in' → logprob: -6.2519402503967285
    3. 'range' → logprob: -11.626940727233887
    4. ' range' → logprob: -13.251940727233887
    5. ' ' → logprob: -14.376940727233887
    6. ')' → logprob: -15.126940727233887
    7. 'import' → logprob: -16.25193977355957
    8. ',' → logprob: -16.50193977355957
    9. ' )' → logprob: -17.93943977355957
    10. '```' → logprob: -18.06443977355957

Token 403: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3868717551231384
    2. ' range' → logprob: -1.1368718147277832
    3. '(range' → logprob: -15.511871337890625
    4. '	range' → logprob: -15.761871337890625
    5. ' ' → logprob: -16.011871337890625
    6. ')' → logprob: -16.636871337890625
    7. '   ' → logprob: -17.386871337890625
    8. 'Range' → logprob: -17.636871337890625
    9. '.range' → logprob: -18.011871337890625
    10. '_range' → logprob: -18.261871337890625

Token 404: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25327402353286743
    2. '(' → logprob: -1.5032739639282227
    3. '2' → logprob: -6.628273963928223
    4. ' ' → logprob: -11.253273963928223
    5. '   ' → logprob: -12.003273963928223
    6. ' (' → logprob: -13.628273963928223
    7. '16' → logprob: -15.628273963928223
    8. '[' → logprob: -15.628273963928223
    9. '{' → logprob: -16.00327491760254
    10. '```' → logprob: -16.25327491760254

Token 405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008331705816090107
    2. '2' → logprob: -4.883331775665283
    3. '(' → logprob: -7.258331775665283
    4. ' ' → logprob: -11.008331298828125
    5. '   ' → logprob: -12.633331298828125
    6. '16' → logprob: -15.633331298828125
    7. '
' → logprob: -15.633331298828125
    8. ' (' → logprob: -15.883331298828125
    9. '`' → logprob: -16.258331298828125
    10. ')' → logprob: -16.258331298828125

Token 406: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.006023718509823084
    2. ' <<' → logprob: -5.50602388381958
    3. '<<(' → logprob: -6.25602388381958
    4. '1' → logprob: -11.381023406982422
    5. ',' → logprob: -11.881023406982422
    6. '<<<' → logprob: -13.256023406982422
    7. '2' → logprob: -13.256023406982422
    8. '   ' → logprob: -14.006023406982422
    9. '<<"' → logprob: -15.256023406982422
    10. '<<<<' → logprob: -15.256023406982422

Token 407: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.4849443838757e-06
    2. ' N' → logprob: -13.000004768371582
    3. '16' → logprob: -13.125004768371582
    4. '
' → logprob: -16.375003814697266
    5. 'n' → logprob: -17.375003814697266
    6. '(N' → logprob: -17.625003814697266
    7. '	N' → logprob: -17.750003814697266
    8. 'len' → logprob: -17.875003814697266
    9. 'max' → logprob: -18.625003814697266
    10. '```' → logprob: -18.750003814697266

Token 408: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0001307142956648022
    2. ']' → logprob: -9.625130653381348
    3. ')' → logprob: -9.875130653381348
    4. ' )' → logprob: -12.250130653381348
    5. ')])' → logprob: -13.375130653381348
    6. ')],' → logprob: -13.500130653381348
    7. '])]' → logprob: -13.625130653381348
    8. ')]
' → logprob: -13.750130653381348
    9. '')]' → logprob: -14.500130653381348
    10. '])' → logprob: -14.625130653381348

Token 409: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4360634982585907
    2. '
' → logprob: -1.186063528060913
    3. '       ' → logprob: -4.061063289642334
    4. '   ' → logprob: -4.186063289642334
    5. ')
' → logprob: -5.061063289642334
    6. ',' → logprob: -5.686063289642334
    7. ',
' → logprob: -6.311063289642334
    8. ']' → logprob: -6.811063289642334
    9. '
' → logprob: -6.936063289642334
    10. '    
' → logprob: -7.936063289642334

Token 410: ' results' (ID: 4376)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45430150628089905
    2. 'return' → logprob: -1.2043014764785767
    3. ' return' → logprob: -2.954301595687866
    4. ')' → logprob: -4.954301357269287
    5. '<|end|>' → logprob: -6.079301357269287
    6. '   ' → logprob: -6.704301357269287
    7. '
' → logprob: -7.079301357269287
    8. ',' → logprob: -8.204301834106445
    9. ')return' → logprob: -8.329301834106445
    10. ' ' → logprob: -8.454301834106445

Token 411: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0005875834613107145
    2. 'sort' → logprob: -8.625587463378906
    3. ',' → logprob: -8.750587463378906
    4. '=' → logprob: -9.250587463378906
    5. '.' → logprob: -9.625587463378906
    6. ' =' → logprob: -10.875587463378906
    7. ')' → logprob: -11.375587463378906
    8. 'return' → logprob: -11.625587463378906
    9. '<|end|>' → logprob: -11.625587463378906
    10. '.reverse' → logprob: -11.875587463378906

Token 412: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -5.967624019831419e-05
    2. '()' → logprob: -9.750060081481934
    3. '(reverse' → logprob: -14.500060081481934
    4. '(' → logprob: -14.750060081481934
    5. '(
' → logprob: -15.625060081481934
    6. '()
' → logprob: -15.875060081481934
    7. 'key' → logprob: -16.375059127807617
    8. ',key' → logprob: -17.500059127807617
    9. ' key' → logprob: -19.125059127807617
    10. ' (' → logprob: -19.750059127807617

Token 413: '=item' (ID: 76091)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.007058830466121435
    2. '=' → logprob: -5.007058620452881
    3. '=item' → logprob: -8.007059097290039
    4. 'lambda' → logprob: -11.507059097290039
    5. 'item' → logprob: -16.13205909729004
    6. '(lambda' → logprob: -16.63205909729004
    7. 'operator' → logprob: -17.00705909729004
    8. '=len' → logprob: -17.00705909729004
    9. ' lambda' → logprob: -17.63205909729004
    10. '=
' → logprob: -18.75705909729004

Token 414: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: 0.0
    2. 'get' → logprob: -17.0
    3. 'getitem' → logprob: -18.625
    4. 'setter' → logprob: -19.0
    5. 'generator' → logprob: -20.125
    6. 'Getter' → logprob: -20.5
    7. '[' → logprob: -21.0
    8. 'giver' → logprob: -21.0
    9. 'selector' → logprob: -21.25
    10. ' getter' → logprob: -21.5

Token 415: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.007317567011341e-05
    2. '(' → logprob: -10.250089645385742
    3. ' ' → logprob: -10.875089645385742
    4. '0' → logprob: -11.250089645385742
    5. '   ' → logprob: -12.125089645385742
    6. '#' → logprob: -12.250089645385742
    7. '
' → logprob: -12.625089645385742
    8. '```' → logprob: -12.625089645385742
    9. 'lambda' → logprob: -12.750089645385742
    10. '[' → logprob: -14.000089645385742

Token 416: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015217094914987683
    2. ' ' → logprob: -9.625152587890625
    3. '0' → logprob: -9.750152587890625
    4. '   ' → logprob: -10.750152587890625
    5. '
' → logprob: -13.375152587890625
    6. '    ' → logprob: -13.437652587890625
    7. '  ' → logprob: -14.250152587890625
    8. '```' → logprob: -14.437652587890625
    9. '[' → logprob: -15.500152587890625
    10. ',' → logprob: -15.625152587890625

Token 417: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2853400409221649
    2. '))' → logprob: -1.4103400707244873
    3. ',' → logprob: -6.035339832305908
    4. '))
' → logprob: -6.660339832305908
    5. ')
' → logprob: -8.285340309143066
    6. '])' → logprob: -9.035340309143066
    7. '),' → logprob: -10.410340309143066
    8. ',)' → logprob: -10.785340309143066
    9. ' )' → logprob: -11.035340309143066
    10. ')])' → logprob: -11.285340309143066

Token 418: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038626138120889664
    2. '
' → logprob: -3.788626194000244
    3. ')' → logprob: -4.663626194000244
    4. '   ' → logprob: -6.038626194000244
    5. '<|end|>' → logprob: -6.288626194000244
    6. ',' → logprob: -7.288626194000244
    7. ')
' → logprob: -8.413625717163086
    8. '        
' → logprob: -8.538625717163086
    9. ',
' → logprob: -9.038625717163086
    10. '    
' → logprob: -9.663625717163086

Token 419: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5431375503540039
    2. 'return' (adapté à ' return') → logprob: -0.9181375503540039
    3. ' return' → logprob: -4.043137550354004
    4. '   ' → logprob: -6.668137550354004
    5. ')' → logprob: -7.918137550354004
    6. '
' → logprob: -8.043137550354004
    7. ')
' → logprob: -9.668137550354004
    8. ',' → logprob: -9.793137550354004
    9. '	return' → logprob: -9.793137550354004
    10. ')return' → logprob: -10.543137550354004

Token 420: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06483251601457596
    2. 'results' → logprob: -2.8148324489593506
    3. ' [' → logprob: -6.06483268737793
    4. '[result' → logprob: -8.31483268737793
    5. ' results' → logprob: -9.18983268737793
    6. '[(' → logprob: -9.93983268737793
    7. '[list' → logprob: -10.43983268737793
    8. '(results' → logprob: -10.56483268737793
    9. '[a' → logprob: -11.43983268737793
    10. '[int' → logprob: -11.93983268737793

Token 421: 'b' (ID: 65)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.322017639875412
    2. 'r' → logprob: -2.0720176696777344
    3. 'res' → logprob: -3.0720176696777344
    4. 'y' → logprob: -3.3220176696777344
    5. 'b' → logprob: -3.6970176696777344
    6. 'mask' → logprob: -4.447017669677734
    7. 'v' → logprob: -4.697017669677734
    8. 't' → logprob: -5.072017669677734
    9. 's' → logprob: -5.197017669677734
    10. 'result' → logprob: -5.697017669677734

Token 422: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9796540141105652
    2. '[' → logprob: -1.10465407371521
    3. 'for' → logprob: -1.35465407371521
    4. 'it' → logprob: -3.47965407371521
    5. 'in' → logprob: -6.854653835296631
    6. 'y' → logprob: -7.104653835296631
    7. 'inary' → logprob: -7.229653835296631
    8. 's' → logprob: -7.604653835296631
    9. 'its' → logprob: -7.729653835296631
    10. 'r' → logprob: -8.104654312133789

Token 423: ' b' (ID: 287)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.06589548289775848
    2. 'b' → logprob: -2.8158955574035645
    3. '_' → logprob: -5.9408955574035645
    4. 'mask' → logprob: -7.5658955574035645
    5. 's' → logprob: -8.690895080566406
    6. 'bit' → logprob: -9.065895080566406
    7. '_b' → logprob: -9.065895080566406
    8. 'x' → logprob: -9.315895080566406
    9. '__,' → logprob: -9.315895080566406
    10. ' _,' → logprob: -10.065895080566406

Token 424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06644030660390854
    2. ',b' → logprob: -2.8164403438568115
    3. ',_' → logprob: -5.816440105438232
    4. ' in' → logprob: -7.691440105438232
    5. '_,' → logprob: -7.941440105438232
    6. 'b' → logprob: -7.941440105438232
    7. 'in' → logprob: -9.94144058227539
    8. ',t' → logprob: -10.31644058227539
    9. ',f' → logprob: -10.44144058227539
    10. ',c' → logprob: -10.44144058227539

Token 425: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3572065830230713
    2. 's' → logprob: -1.2322065830230713
    3. 'v' → logprob: -5.607206344604492
    4. '_s' → logprob: -6.357206344604492
    5. ' s' → logprob: -6.482206344604492
    6. ' _' → logprob: -6.482206344604492
    7. 'c' → logprob: -9.732206344604492
    8. '_v' → logprob: -10.482206344604492
    9. ' v' → logprob: -10.482206344604492
    10. '_]' → logprob: -10.732206344604492

Token 426: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47868284583091736
    2. ' in' → logprob: -0.9786828756332397
    3. ',' → logprob: -5.853682994842529
    4. ',b' → logprob: -6.478682994842529
    5. 'b' → logprob: -8.728682518005371
    6. ' ,' → logprob: -11.353682518005371
    7. ',_' → logprob: -11.603682518005371
    8. ' ' → logprob: -12.603682518005371
    9. ',in' → logprob: -13.478682518005371
    10. ' b' → logprob: -14.478682518005371

Token 427: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0009118211455643177
    2. ' results' → logprob: -7.000911712646484
    3. '(results' → logprob: -16.000911712646484
    4. '	results' → logprob: -16.625911712646484
    5. ' ' → logprob: -17.000911712646484
    6. 'result' → logprob: -17.500911712646484
    7. '
' → logprob: -18.250911712646484
    8. '.results' → logprob: -18.875911712646484
    9. '_results' → logprob: -19.500911712646484
    10. 'Results' → logprob: -19.500911712646484

Token 428: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0038462711963802576
    2. ' ]' → logprob: -5.628846168518066
    3. '<|end|>' → logprob: -9.003846168518066
    4. '()]' → logprob: -9.503846168518066
    5. '   ' → logprob: -11.128846168518066
    6. ']
' → logprob: -11.628846168518066
    7. ')]' → logprob: -11.878846168518066
    8. ']()' → logprob: -12.628846168518066
    9. ',' → logprob: -12.753846168518066
    10. '       ' → logprob: -13.128846168518066

Token 429: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5683050155639648
    2. '[item' → logprob: -1.1933050155639648
    3. '[b' → logprob: -2.568305015563965
    4. ' [' → logprob: -3.568305015563965
    5. '[result' → logprob: -4.318305015563965
    6. '[key' → logprob: -5.318305015563965
    7. '[a' → logprob: -6.443305015563965
    8. '[next' → logprob: -6.693305015563965
    9. '[list' → logprob: -7.943305015563965
    10. '[token' → logprob: -7.943305015563965

Token 430: 'v' (ID: 85)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5837539434432983
    2. 'v' → logprob: -1.4587539434432983
    3. 'b' → logprob: -2.208754062652588
    4. 'x' → logprob: -2.833754062652588
    5. '_' → logprob: -4.583754062652588
    6. 'sum' → logprob: -4.958754062652588
    7. 'a' → logprob: -5.208754062652588
    8. 'y' → logprob: -5.208754062652588
    9. 'r' → logprob: -5.333754062652588
    10. '_[' → logprob: -6.083754062652588

Token 431: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.474092036485672
    2. 'for' → logprob: -0.9740920066833496
    3. '[' → logprob: -12.099092483520508
    4. '	for' → logprob: -12.724092483520508
    5. 'v' → logprob: -13.099092483520508
    6. ' ' → logprob: -13.474092483520508
    7. '   ' → logprob: -14.099092483520508
    8. '_' → logprob: -14.724092483520508
    9. 'or' → logprob: -15.224092483520508
    10. 'value' → logprob: -15.224092483520508

Token 432: ' _,' (ID: 18042)
  Prédit: '_,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_,' → logprob: -0.06255137920379639
    2. 'b' → logprob: -2.812551498413086
    3. '_' → logprob: -7.812551498413086
    4. '__,' → logprob: -9.437551498413086
    5. ' _,' → logprob: -9.437551498413086
    6. ' b' → logprob: -11.312551498413086
    7. '_b' → logprob: -12.937551498413086
    8. '   ' → logprob: -13.312551498413086
    9. '__' → logprob: -14.687551498413086
    10. '_
' → logprob: -14.812551498413086

Token 433: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.25469908118247986
    2. 'results' → logprob: -1.5046991109848022
    3. ' results' → logprob: -6.004699230194092
    4. ' v' → logprob: -8.379698753356934
    5. 'b' → logprob: -9.629698753356934
    6. '_results' → logprob: -14.129698753356934
    7. 'values' → logprob: -14.129698753356934
    8. '(results' → logprob: -14.379698753356934
    9. '	results' → logprob: -14.379698753356934
    10. '	v' → logprob: -15.379698753356934

Token 434: ' in' (ID: 306)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12142761051654816
    2. ' in' → logprob: -2.246427536010742
    3. 'in' → logprob: -5.246427536010742
    4. 'results' → logprob: -5.871427536010742
    5. ' ]' → logprob: -8.121427536010742
    6. ' results' → logprob: -9.246427536010742
    7. '<|end|>' → logprob: -10.371427536010742
    8. '(results' → logprob: -10.621427536010742
    9. ']
' → logprob: -10.996427536010742
    10. ']]' → logprob: -12.996427536010742

Token 435: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0232466422021389
    2. ' results' → logprob: -3.7732465267181396
    3. '(results' → logprob: -14.273246765136719
    4. '	results' → logprob: -15.148246765136719
    5. '.results' → logprob: -16.27324676513672
    6. '_results' → logprob: -17.14824676513672
    7. 'result' → logprob: -17.14824676513672
    8. '
' → logprob: -17.27324676513672
    9. ' ' → logprob: -17.52324676513672
    10. 'Results' → logprob: -18.27324676513672

Token 436: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011786778923124075
    2. '<|end|>' → logprob: -7.251178741455078
    3. ')' → logprob: -8.126178741455078
    4. ')]' → logprob: -9.376178741455078
    5. ' ]' → logprob: -10.501178741455078
    6. '   ' → logprob: -10.501178741455078
    7. ']
' → logprob: -11.501178741455078
    8. '()]' → logprob: -11.876178741455078
    9. '<|end|>' → logprob: -12.376178741455078
    10. ']()' → logprob: -12.626178741455078

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09254445880651474
    2. '<|end|>' → logprob: -2.4675445556640625
    3. ' ' → logprob: -7.5925445556640625
    4. ')' → logprob: -7.5925445556640625
    5. ',' → logprob: -7.7175445556640625
    6. '
' → logprob: -7.7175445556640625
    7. '<|end|>' → logprob: -7.9675445556640625
    8. 'def' → logprob: -8.342544555664062
    9. 'class' → logprob: -8.967544555664062
    10. '  ' → logprob: -9.092544555664062

Token 438: ' @' (ID: 759)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03062465414404869
    2. '<|end|>' → logprob: -4.655624866485596
    3. 'def' → logprob: -4.905624866485596
    4. '@' (adapté à ' @') → logprob: -5.405624866485596
    5. ')' → logprob: -6.405624866485596
    6. '#' → logprob: -6.655624866485596
    7. 'class' → logprob: -7.030624866485596
    8. '
' → logprob: -7.030624866485596
    9. ' def' → logprob: -7.530624866485596
    10. '    
' → logprob: -7.655624866485596

Token 439: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0009733980987221003
    2. 'classmethod' → logprob: -7.250973224639893
    3. 'static' → logprob: -9.12597370147705
    4. 'dat' → logprob: -9.62597370147705
    5. 'partial' → logprob: -10.25097370147705
    6. 'cache' → logprob: -10.62597370147705
    7. 'l' → logprob: -11.00097370147705
    8. 'property' → logprob: -12.25097370147705
    9. '@' → logprob: -12.50097370147705
    10. 'cached' → logprob: -13.12597370147705

Token 440: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11979394406080246
    2. ' def' → logprob: -2.6197938919067383
    3. 'def' → logprob: -3.2447938919067383
    4. '
' → logprob: -7.619793891906738
    5. ':' → logprob: -7.994793891906738
    6. '_' → logprob: -10.119793891906738
    7. ' (' → logprob: -10.244793891906738
    8. '('' → logprob: -10.619793891906738
    9. '    
' → logprob: -10.744793891906738
    10. '(' → logprob: -10.869793891906738

Token 441: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1047358587384224
    2. ' def' → logprob: -2.604735851287842
    3. '   ' → logprob: -4.104735851287842
    4. '
' → logprob: -4.729735851287842
    5. '    
' → logprob: -9.604736328125
    6. '	def' → logprob: -11.479736328125
    7. '(' → logprob: -11.479736328125
    8. ' ' → logprob: -11.854736328125
    9. '()
' → logprob: -11.979736328125
    10. '('' → logprob: -11.979736328125

Token 442: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3022657334804535
    2. 'B' → logprob: -3.3022656440734863
    3. 'l' → logprob: -3.3022656440734863
    4. 'H' → logprob: -3.6772656440734863
    5. 'partial' → logprob: -3.8022656440734863
    6. 'L' → logprob: -3.9272656440734863
    7. 'HF' → logprob: -4.052265644073486
    8. 'S' → logprob: -4.302265644073486
    9. 'T' → logprob: -4.802265644073486
    10. 'G' → logprob: -4.927265644073486

Token 443: ' S' (ID: 336)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -2.529475688934326
    2. ' B' → logprob: -2.966975688934326
    3. 'HF' → logprob: -3.216975688934326
    4. ' HF' → logprob: -3.404475688934326
    5. 'Bit' → logprob: -3.529475688934326
    6. 'BS' → logprob: -3.966975688934326
    7. 'G' → logprob: -4.029475688934326
    8. 'bit' → logprob: -4.029475688934326
    9. 'H' → logprob: -4.216975688934326
    10. ' main' → logprob: -4.279475688934326

Token 444: '(s' (ID: 1858)
  Prédit: 'ub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ub' → logprob: -0.8004781603813171
    2. 'um' → logprob: -1.550478219985962
    3. 'plit' → logprob: -1.550478219985962
    4. 'et' → logprob: -3.550478219985962
    5. 'olve' → logprob: -3.550478219985962
    6. 'ort' → logprob: -4.550477981567383
    7. 'qrt' → logprob: -4.800477981567383
    8. 'earch' → logprob: -4.800477981567383
    9. 'ubs' → logprob: -5.300477981567383
    10. 't' → logprob: -5.675477981567383

Token 445: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07135190814733505
    2. '):' → logprob: -2.696352005004883
    3. '):
' → logprob: -7.071352005004883
    4. ',' → logprob: -8.321352005004883
    5. '   ' → logprob: -9.196352005004883
    6. ':' → logprob: -9.696352005004883
    7. ')' → logprob: -9.821352005004883
    8. '):

' → logprob: -10.571352005004883
    9. ':str' → logprob: -11.696352005004883
    10. '=' → logprob: -11.821352005004883

Token 446: ' r' (ID: 428)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.788887619972229
    2. ' p' → logprob: -1.913887619972229
    3. ' t' → logprob: -2.0388875007629395
    4. 't' → logprob: -2.4138875007629395
    5. 'a' → logprob: -2.7888875007629395
    6. 'k' → logprob: -2.9138875007629395
    7. ' n' → logprob: -3.1638875007629395
    8. 'n' → logprob: -3.2888875007629395
    9. ' k' → logprob: -3.2888875007629395
    10. ' a' → logprob: -3.2888875007629395

Token 447: '=' (ID: 28)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5289617776870728
    2. '):' → logprob: -0.9039617776870728
    3. ',' → logprob: -5.653961658477783
    4. '):
' → logprob: -6.403961658477783
    5. ')' → logprob: -8.778962135314941
    6. 'e' → logprob: -9.153962135314941
    7. 'r' → logprob: -9.653962135314941
    8. '):

' → logprob: -9.653962135314941
    9. ' ):' → logprob: -10.028962135314941
    10. '=' → logprob: -10.153962135314941

Token 448: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8785196542739868
    2. '1' → logprob: -1.6285196542739868
    3. 'None' → logprob: -1.6285196542739868
    4. ''' → logprob: -2.8785195350646973
    5. 'False' → logprob: -3.8785195350646973
    6. '"' → logprob: -4.628519535064697
    7. '2' → logprob: -4.753519535064697
    8. '[]' → logprob: -4.878519535064697
    9. '100' → logprob: -5.003519535064697
    10. 's' → logprob: -5.003519535064697

Token 449: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.22619891166687012
    2. '):
' → logprob: -1.6011989116668701
    3. ',' → logprob: -7.601199150085449
    4. '):
' → logprob: -8.97619915008545
    5. ')' → logprob: -9.22619915008545
    6. '=' → logprob: -10.97619915008545
    7. '):

' → logprob: -11.22619915008545
    8. ' ):' → logprob: -11.35119915008545
    9. ':' → logprob: -11.97619915008545
    10. '   ' → logprob: -12.35119915008545

Token 450: ' m' (ID: 284)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.4206280708312988
    2. ' e' → logprob: -2.045628070831299
    3. 'i' → logprob: -2.420628070831299
    4. 'l' → logprob: -2.545628070831299
    5. 'p' → logprob: -2.920628070831299
    6. 'n' → logprob: -3.045628070831299
    7. ' l' → logprob: -3.420628070831299
    8. 'd' → logprob: -3.545628070831299
    9. ' i' → logprob: -3.545628070831299
    10. ' p' → logprob: -3.670628070831299

Token 451: '=-' (ID: 21714)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6960173845291138
    2. '=' → logprob: -1.0710173845291138
    3. '):
' → logprob: -2.071017265319824
    4. 'ax' → logprob: -4.571017265319824
    5. '=None' → logprob: -4.696017265319824
    6. ',' → logprob: -4.946017265319824
    7. 'ask' → logprob: -6.446017265319824
    8. '):
' → logprob: -6.821017265319824
    9. 'ap' → logprob: -7.696017265319824
    10. '=s' → logprob: -8.196017265319824

Token 452: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043591417488642037
    2. '(' → logprob: -8.250435829162598
    3. '2' → logprob: -9.625435829162598
    4. 'r' → logprob: -9.750435829162598
    5. 's' → logprob: -11.125435829162598
    6. 'float' → logprob: -11.500435829162598
    7. '-' → logprob: -12.125435829162598
    8. 'sys' → logprob: -12.875435829162598
    9. '10' → logprob: -13.250435829162598
    10. '(-' → logprob: -13.500435829162598

Token 453: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.19032371044158936
    2. '):' → logprob: -1.9403237104415894
    3. ',' → logprob: -3.565323829650879
    4. '):
' → logprob: -7.065323829650879
    5. ')' → logprob: -8.065323829650879
    6. '   ' → logprob: -9.440323829650879
    7. '):

' → logprob: -10.690323829650879
    8. ',r' → logprob: -10.815323829650879
    9. ' ):
' → logprob: -11.565323829650879
    10. ',s' → logprob: -11.690323829650879

Token 454: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16277670860290527
    2. '       ' → logprob: -1.9127767086029053
    3. ' if' → logprob: -6.412776947021484
    4. '    ' → logprob: -7.662776947021484
    5. '<|end|>' → logprob: -9.037776947021484
    6. ')' → logprob: -9.537776947021484
    7. '	if' → logprob: -9.787776947021484
    8. 'def' → logprob: -10.287776947021484
    9. 'if' → logprob: -10.287776947021484
    10. ',' → logprob: -10.912776947021484

Token 455: ' s' (ID: 265)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4112633466720581
    2. 'if' → logprob: -1.161263346672058
    3. '       ' → logprob: -4.286263465881348
    4. '   ' → logprob: -5.536263465881348
    5. ' for' → logprob: -7.036263465881348
    6. ' s' → logprob: -7.036263465881348
    7. ' while' → logprob: -7.036263465881348
    8. 's' (adapté à ' s') → logprob: -7.286263465881348
    9. '    ' → logprob: -7.411263465881348
    10. 'for' → logprob: -7.911263465881348

Token 456: '.sort' (ID: 19551)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6985026001930237
    2. ':' → logprob: -1.573502540588379
    3. '=' → logprob: -1.823502540588379
    4. ' =' → logprob: -2.323502540588379
    5. '):' → logprob: -4.323502540588379
    6. ' :' → logprob: -5.198502540588379
    7. ' ,' → logprob: -5.448502540588379
    8. '   ' → logprob: -5.823502540588379
    9. ')' → logprob: -6.198502540588379
    10. '[' → logprob: -7.198502540588379

Token 457: '(reverse' (ID: 110806)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.068445585668087
    2. '()
' → logprob: -3.0684456825256348
    3. '(reverse' → logprob: -4.318445682525635
    4. '(key' → logprob: -5.943445682525635
    5. '(r' → logprob: -6.318445682525635
    6. '(lambda' → logprob: -7.193445682525635
    7. 'def' → logprob: -7.818445682525635
    8. '();' → logprob: -8.068445205688477
    9. 'reverse' → logprob: -8.443445205688477
    10. 'key' → logprob: -9.318445205688477

Token 458: '=' (ID: 28)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2525385916233063
    2. '=True' → logprob: -1.7525385618209839
    3. ')' → logprob: -3.6275386810302734
    4. '(s' → logprob: -4.752538681030273
    5. '())
' → logprob: -4.752538681030273
    6. '()' → logprob: -5.627538681030273
    7. '(),' → logprob: -7.377538681030273
    8. '=s' → logprob: -7.752538681030273
    9. '=' → logprob: -8.127538681030273
    10. ')
' → logprob: -8.252538681030273

Token 459: 'bool' (ID: 9037)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0006509594968520105
    2. ' True' → logprob: -7.375650882720947
    3. '1' → logprob: -11.375651359558105
    4. '=True' → logprob: -11.875651359558105
    5. '(True' → logprob: -12.625651359558105
    6. 's' → logprob: -13.375651359558105
    7. ')' → logprob: -14.875651359558105
    8. 'r' → logprob: -15.500651359558105
    9. 'False' → logprob: -15.750651359558105
    10. '
' → logprob: -16.12565040588379

Token 460: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.033796459436416626
    2. '(m' → logprob: -3.408796548843384
    3. '(' → logprob: -9.408796310424805
    4. 'r' → logprob: -10.658796310424805
    5. '((' → logprob: -10.908796310424805
    6. 'm' → logprob: -11.658796310424805
    7. '(s' → logprob: -11.783796310424805
    8. ')' → logprob: -13.283796310424805
    9. ' (' → logprob: -13.408796310424805
    10. '(~' → logprob: -13.408796310424805

Token 461: '),' (ID: 936)
  Prédit: '))
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.16078275442123413
    2. '))' → logprob: -1.910782814025879
    3. ' ))
' → logprob: -8.285782814025879
    4. '),' → logprob: -9.160782814025879
    5. ')' → logprob: -9.785782814025879
    6. '))
' → logprob: -10.535782814025879
    7. ')
' → logprob: -10.535782814025879
    8. ',' → logprob: -10.535782814025879
    9. ' ))' → logprob: -10.535782814025879
    10. '))

' → logprob: -11.410782814025879

Token 462: ' key' (ID: 2140)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6471393704414368
    2. ' m' → logprob: -0.8971393704414368
    3. ' key' → logprob: -3.147139310836792
    4. 'key' → logprob: -4.147139549255371
    5. ' reverse' → logprob: -5.647139549255371
    6. 'reverse' → logprob: -5.647139549255371
    7. ' start' → logprob: -7.147139549255371
    8. 'start' → logprob: -7.147139549255371
    9. ')' → logprob: -8.647139549255371
    10. '   ' → logprob: -9.022139549255371

Token 463: '=None' (ID: 12783)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.2615908086299896
    2. '=' → logprob: -2.0115907192230225
    3. '=m' → logprob: -2.8865907192230225
    4. '=None' → logprob: -4.011590957641602
    5. '=item' → logprob: -4.511590957641602
    6. '=s' → logprob: -5.261590957641602
    7. '=len' → logprob: -5.261590957641602
    8. '=p' → logprob: -8.386590957641602
    9. '=(' → logprob: -8.511590957641602
    10. 'partial' → logprob: -8.511590957641602

Token 464: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007356545538641512
    2. ')
' → logprob: -7.250735759735107
    3. ',' → logprob: -11.00073528289795
    4. '   ' → logprob: -12.75073528289795
    5. ')

' → logprob: -14.12573528289795
    6. ' if' → logprob: -14.12573528289795
    7. ')return' → logprob: -14.12573528289795
    8. ' )' → logprob: -14.25073528289795
    9. '       ' → logprob: -14.50073528289795
    10. 'if' → logprob: -14.50073528289795

Token 465: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.05572566017508507
    2. ' m' → logprob: -2.930725574493408
    3. 'r' → logprob: -7.680725574493408
    4. ' not' → logprob: -8.805726051330566
    5. ' r' → logprob: -9.555726051330566
    6. 's' → logprob: -9.680726051330566
    7. ' callable' → logprob: -10.180726051330566
    8. ' s' → logprob: -11.180726051330566
    9. 'lambda' → logprob: -11.180726051330566
    10. 'not' → logprob: -11.305726051330566

Token 466: ' ==' (ID: 951)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.43020308017730713
    2. ' is' → logprob: -1.0552030801773071
    3. '==' → logprob: -6.930202960968018
    4. 'else' → logprob: -8.305203437805176
    5. 'in' → logprob: -8.555203437805176
    6. ' ' → logprob: -11.430203437805176
    7. ')' → logprob: -11.680203437805176
    8. ' in' → logprob: -11.805203437805176
    9. ' else' → logprob: -11.805203437805176
    10. '==-' → logprob: -11.805203437805176

Token 467: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001720742875477299
    2. ' -' → logprob: -9.125171661376953
    3. '1' → logprob: -10.000171661376953
    4. '0' → logprob: -11.375171661376953
    5. '-s' → logprob: -13.250171661376953
    6. ' ' → logprob: -13.375171661376953
    7. '   ' → logprob: -13.750171661376953
    8. 'None' → logprob: -13.875171661376953
    9. 'False' → logprob: -15.875171661376953
    10. '-m' → logprob: -16.250171661376953

Token 468: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006160548073239625
    2. '-' → logprob: -8.375616073608398
    3. 'None' → logprob: -8.875616073608398
    4. 'r' → logprob: -9.375616073608398
    5. ' ' → logprob: -10.188116073608398
    6. 'm' → logprob: -10.500616073608398
    7. 's' → logprob: -10.563116073608398
    8. '   ' → logprob: -11.500616073608398
    9. '2' → logprob: -11.563116073608398
    10. '0' → logprob: -12.313116073608398

Token 469: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06198135390877724
    2. 'else' → logprob: -2.811981439590454
    3. ' or' → logprob: -11.936981201171875
    4. ')' → logprob: -12.811981201171875
    5. ' ' → logprob: -13.311981201171875
    6. '	else' → logprob: -14.311981201171875
    7. '```' → logprob: -14.436981201171875
    8. '        ' → logprob: -15.061981201171875
    9. ' ' → logprob: -15.811981201171875
    10. ' )' → logprob: -15.999481201171875

Token 470: ' item' (ID: 2169)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.851647138595581
    2. 'lambda' → logprob: -0.976647138595581
    3. 'm' → logprob: -2.601647138595581
    4. 'abs' → logprob: -3.476647138595581
    5. 'item' → logprob: -3.601647138595581
    6. '(lambda' → logprob: -3.601647138595581
    7. 's' → logprob: -3.601647138595581
    8. 'len' → logprob: -5.47664737701416
    9. 'operator' → logprob: -6.72664737701416
    10. '   ' → logprob: -6.97664737701416

Token 471: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -1.9361264946837764e-07
    2. 'get' → logprob: -15.875
    3. 'setter' → logprob: -18.625
    4. 'giver' → logprob: -19.0
    5. 'getitem' → logprob: -19.0
    6. 'g' → logprob: -19.125
    7. 'Getter' → logprob: -19.875
    8. 'finder' → logprob: -20.0
    9. ' getter' → logprob: -20.125
    10. 'picker' → logprob: -20.125

Token 472: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.759734732331708e-05
    2. '(' → logprob: -11.000017166137695
    3. 'm' → logprob: -14.375017166137695
    4. '((' → logprob: -16.500017166137695
    5. '   ' → logprob: -17.375017166137695
    6. '(s' → logprob: -17.375017166137695
    7. '(r' → logprob: -17.875017166137695
    8. '(n' → logprob: -17.875017166137695
    9. ' (' → logprob: -18.000017166137695
    10. '```' → logprob: -18.500017166137695

Token 473: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5765642523765564
    2. '))' → logprob: -0.8265642523765564
    3. '))
' → logprob: -8.451563835144043
    4. ')
' → logprob: -8.576563835144043
    5. ')))' → logprob: -9.326563835144043
    6. '[' → logprob: -9.951563835144043
    7. '   ' → logprob: -11.076563835144043
    8. '),' → logprob: -11.326563835144043
    9. ' )' → logprob: -11.826563835144043
    10. ',' → logprob: -11.951563835144043

Token 474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6788967251777649
    2. ':' → logprob: -1.4288966655731201
    3. ')' → logprob: -1.9288966655731201
    4. '):' → logprob: -2.55389666557312
    5. '       ' → logprob: -4.428896903991699
    6. 'def' → logprob: -5.178896903991699
    7. '():' → logprob: -6.178896903991699
    8. ',' → logprob: -6.428896903991699
    9. ':return' → logprob: -6.428896903991699
    10. '(s' → logprob: -6.678896903991699

Token 475: ' @' (ID: 759)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 476: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.00018732868193183094
    2. 'classmethod' → logprob: -8.625186920166016
    3. 'static' → logprob: -12.500186920166016
    4. 'property' → logprob: -12.875186920166016
    5. '@' → logprob: -14.000186920166016
    6. '```' → logprob: -16.875186920166016
    7. '...' → logprob: -17.000186920166016
    8. 'S' → logprob: -17.125186920166016
    9. ':' → logprob: -17.250186920166016
    10. '.' → logprob: -17.375186920166016

Token 477: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6456805467605591
    2. ' def' → logprob: -0.7706805467605591
    3. '(' → logprob: -4.8956804275512695
    4. ' (' → logprob: -5.7706804275512695
    5. '(
' → logprob: -6.7706804275512695
    6. '   ' → logprob: -7.6456804275512695
    7. ':' → logprob: -8.14568042755127
    8. '(def' → logprob: -8.39568042755127
    9. ':def' → logprob: -10.02068042755127
    10. ':
' → logprob: -10.14568042755127

Token 478: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00887797586619854
    2. ' def' → logprob: -5.133877754211426
    3. '   ' → logprob: -6.508877754211426
    4. '
' → logprob: -7.008877754211426
    5. ':' → logprob: -8.633877754211426
    6. '(' → logprob: -8.883877754211426
    7. ':def' → logprob: -9.758877754211426
    8. '(def' → logprob: -10.883877754211426
    9. '(
' → logprob: -11.008877754211426
    10. '=' → logprob: -11.258877754211426

Token 479: ' def' (ID: 1056)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.401242733001709
    2. 'B' → logprob: -3.276242733001709
    3. 'M' → logprob: -3.276242733001709
    4. 'g' → logprob: -3.713742733001709
    5. 'D' → logprob: -3.776242733001709
    6. 'main' → logprob: -3.776242733001709
    7. 'L' → logprob: -3.838742733001709
    8. 'S' → logprob: -4.026242733001709
    9. 'F' → logprob: -4.088742733001709
    10. 'C' → logprob: -4.151242733001709

Token 480: ' bit' (ID: 3546)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.7999783754348755
    2. 'main' → logprob: -2.737478256225586
    3. 'B' → logprob: -3.112478256225586
    4. 'L' → logprob: -3.362478256225586
    5. 'g' → logprob: -3.362478256225586
    6. 'max' → logprob: -3.487478256225586
    7. 'M' → logprob: -3.549978256225586
    8. 'C' → logprob: -3.799978256225586
    9. 'BS' → logprob: -3.862478256225586
    10. 'I' → logprob: -3.924978256225586

Token 481: '_n' (ID: 2170)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.23866446316242218
    2. 'count' → logprob: -1.6136645078659058
    3. 'cnt' → logprob: -5.863664627075195
    4. 'set' → logprob: -5.988664627075195
    5. '_length' → logprob: -6.113664627075195
    6. '_set' → logprob: -7.238664627075195
    7. '_cnt' → logprob: -7.238664627075195
    8. '_search' → logprob: -7.238664627075195
    9. 'Count' → logprob: -7.738664627075195
    10. 'pop' → logprob: -7.988664627075195

Token 482: '(a' (ID: 6271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8313208818435669
    2. 'um' → logprob: -1.831320881843567
    3. 'ot' → logprob: -2.3313207626342773
    4. 'umber' → logprob: -2.5813207626342773
    5. 'th' → logprob: -2.8313207626342773
    6. 'bit' → logprob: -3.2063207626342773
    7. '_count' → logprob: -3.5813207626342773
    8. 'ext' → logprob: -3.9563207626342773
    9. '(' → logprob: -4.331320762634277
    10. '(bit' → logprob: -4.831320762634277

Token 483: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4772599935531616
    2. '):' → logprob: -0.9772599935531616
    3. '):
' → logprob: -7.102260112762451
    4. ')' → logprob: -7.352260112762451
    5. 'um' → logprob: -8.102259635925293
    6. 'a' → logprob: -8.227259635925293
    7. ',a' → logprob: -8.477259635925293
    8. '   ' → logprob: -9.227259635925293
    9. 'umer' → logprob: -9.352259635925293
    10. '[' → logprob: -9.602259635925293

Token 484: ' b' (ID: 287)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2649800181388855
    2. 'i' → logprob: -2.2649800777435303
    3. 'b' → logprob: -2.6399800777435303
    4. 'k' → logprob: -3.6399800777435303
    5. ' n' → logprob: -4.514979839324951
    6. 'x' → logprob: -5.014979839324951
    7. 'j' → logprob: -5.889979839324951
    8. ' i' → logprob: -6.264979839324951
    9. 'p' → logprob: -6.389979839324951
    10. ' b' → logprob: -6.639979839324951

Token 485: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00850418210029602
    2. '):
' → logprob: -5.133504390716553
    3. ',' → logprob: -6.633504390716553
    4. ')' → logprob: -7.258504390716553
    5. '):
' → logprob: -8.008503913879395
    6. ':' → logprob: -8.758503913879395
    7. '   ' → logprob: -10.883503913879395
    8. '=' → logprob: -11.133503913879395
    9. ' ):' → logprob: -11.383503913879395
    10. '  ' → logprob: -13.133503913879395

Token 486: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012115427292883396
    2. '       ' → logprob: -4.512115478515625
    3. ' return' → logprob: -7.387115478515625
    4. 'return' → logprob: -8.137115478515625
    5. '	return' → logprob: -9.762115478515625
    6. ' for' → logprob: -10.887115478515625
    7. ' if' → logprob: -11.137115478515625
    8. '    ' → logprob: -11.387115478515625
    9. '[]' → logprob: -12.012115478515625
    10. 'if' → logprob: -12.012115478515625

Token 487: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9188494682312012
    2. '   ' → logprob: -1.0438494682312012
    3. ' return' → logprob: -2.043849468231201
    4. 'a' → logprob: -2.293849468231201
    5. ' a' → logprob: -4.668849468231201
    6. 'while' → logprob: -5.918849468231201
    7. '       ' → logprob: -6.168849468231201
    8. ' while' → logprob: -6.918849468231201
    9. 'c' → logprob: -7.793849468231201
    10. 'if' → logprob: -7.793849468231201

Token 488: ' (' (ID: 350)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005712865851819515
    2. '(a' → logprob: -6.130712985992432
    3. ' a' → logprob: -6.255712985992432
    4. 'bin' → logprob: -6.755712985992432
    5. '[a' → logprob: -9.380712509155273
    6. 'int' → logprob: -9.630712509155273
    7. '(' → logprob: -9.755712509155273
    8. '((' → logprob: -9.880712509155273
    9. 'abs' → logprob: -10.380712509155273
    10. ' (' → logprob: -10.505712509155273

Token 489: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0006969464011490345
    2. '(a' → logprob: -7.750697135925293
    3. '1' → logprob: -8.875697135925293
    4. '(' → logprob: -10.000697135925293
    5. 'bin' → logprob: -10.250697135925293
    6. ' a' → logprob: -11.000697135925293
    7. 'abs' → logprob: -11.750697135925293
    8. '((' → logprob: -11.875697135925293
    9. 'b' → logprob: -12.625697135925293
    10. 'int' → logprob: -12.875697135925293

Token 490: ' >>' (ID: 6832)
  Prédit: ' &'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.713056206703186
    2. '&' → logprob: -0.963056206703186
    3. '>>' → logprob: -2.7130560874938965
    4. ' >>' → logprob: -3.3380560874938965
    5. ' ^' → logprob: -4.4630560874938965
    6. '^' → logprob: -4.5880560874938965
    7. '|' → logprob: -5.9630560874938965
    8. '<<' → logprob: -6.8380560874938965
    9. ' |' → logprob: -7.9630560874938965
    10. 'b' → logprob: -8.838056564331055

Token 491: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002613358374219388
    2. ' b' → logprob: -8.250261306762695
    3. '   ' → logprob: -16.875261306762695
    4. ' ' → logprob: -18.375261306762695
    5. '31' → logprob: -18.875261306762695
    6. '  ' → logprob: -18.875261306762695
    7. ')b' → logprob: -18.875261306762695
    8. '	b' → logprob: -19.125261306762695
    9. '1' → logprob: -19.375261306762695
    10. ' (' → logprob: -19.500261306762695

Token 492: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017133781220763922
    2. ')&' → logprob: -6.376713275909424
    3. ' )' → logprob: -11.501713752746582
    4. '&' → logprob: -14.501713752746582
    5. ')%' → logprob: -15.251713752746582
    6. ' &' → logprob: -15.626713752746582
    7. ')
' → logprob: -16.251712799072266
    8. ')>>' → logprob: -16.876712799072266
    9. '),' → logprob: -17.001712799072266
    10. '[' → logprob: -18.001712799072266

Token 493: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.16095498204231262
    2. ' &' → logprob: -1.9109549522399902
    3. ')&' → logprob: -7.78595495223999
    4. ')' → logprob: -8.785955429077148
    5. '&amp' → logprob: -9.410955429077148
    6. '1' → logprob: -9.660955429077148
    7. '&a' → logprob: -11.660955429077148
    8. '&nbsp' → logprob: -12.910955429077148
    9. '&p' → logprob: -14.285955429077148
    10. '&r' → logprob: -14.660955429077148

Token 494: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020377879263833165
    2. ' ' → logprob: -8.500204086303711
    3. '0' → logprob: -15.500204086303711
    4. '(' → logprob: -16.87520408630371
    5. '   ' → logprob: -17.56270408630371
    6. '' → logprob: -17.75020408630371
    7. '１' → logprob: -18.31270408630371
    8. '`' → logprob: -18.50020408630371
    9. '01' → logprob: -18.56270408630371
    10. '```' → logprob: -18.75020408630371

Token 495: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '0' → logprob: -15.25001049041748
    4. '(' → logprob: -17.500009536743164
    5. 'a' → logprob: -18.250009536743164
    6. '   ' → logprob: -18.625009536743164
    7. '01' → logprob: -19.125009536743164
    8. '１' → logprob: -19.250009536743164
    9. '' → logprob: -19.312509536743164
    10. 'b' → logprob: -19.437509536743164

Token 496: ' >' (ID: 1424)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 497: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0021853535436093807
    2. ' ' → logprob: -6.127185344696045
    3. '=' → logprob: -15.627185821533203
    4. '>' → logprob: -17.002185821533203
    5. '[' → logprob: -18.627185821533203
    6. '  ' → logprob: -18.752185821533203
    7. '1' → logprob: -19.002185821533203
    8. '<|end|>' → logprob: -19.252185821533203
    9. '```' → logprob: -19.377185821533203
    10. '(' → logprob: -19.502185821533203

Token 498: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.1689596148207784e-05
    2. ' ' → logprob: -9.875051498413086
    3. '=' → logprob: -15.625051498413086
    4. '1' → logprob: -19.500051498413086
    5. '۰' → logprob: -19.750051498413086
    6. 'a' → logprob: -19.875051498413086
    7. '   ' → logprob: -20.500051498413086
    8. '  ' → logprob: -20.625051498413086
    9. '```' → logprob: -20.875051498413086
    10. '０' → logprob: -21.437551498413086

Token 499: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 501: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.000170882252859883
    2. '   ' → logprob: -9.125170707702637
    3. 'def' → logprob: -10.500170707702637
    4. ' @' → logprob: -11.625170707702637
    5. 'class' → logprob: -12.125170707702637
    6. '@dat' → logprob: -12.500170707702637
    7. '@g' → logprob: -12.875170707702637
    8. '@n' → logprob: -13.125170707702637
    9. '@property' → logprob: -13.375170707702637
    10. 'staticmethod' → logprob: -13.500170707702637

Token 502: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -4.191489642835222e-05
    2. 'classmethod' → logprob: -10.750041961669922
    3. 'static' → logprob: -11.125041961669922
    4. 'property' → logprob: -12.250041961669922
    5. 'partial' → logprob: -14.750041961669922
    6. 'dat' → logprob: -15.875041961669922
    7. ' static' → logprob: -16.750041961669922
    8. '@' → logprob: -17.500041961669922
    9. 'cache' → logprob: -17.500041961669922
    10. 'Static' → logprob: -17.750041961669922

Token 503: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.286030650138855
    2. 'def' → logprob: -1.536030650138855
    3. ' def' → logprob: -3.4110307693481445
    4. '
' → logprob: -7.9110307693481445
    5. ':' → logprob: -9.411030769348145
    6. '	def' → logprob: -11.036030769348145
    7. ':def' → logprob: -11.411030769348145
    8. '(' → logprob: -11.411030769348145
    9. '  ' → logprob: -11.911030769348145
    10. '```' → logprob: -12.536030769348145

Token 504: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01832798309624195
    2. '   ' → logprob: -4.6433281898498535
    3. ' def' → logprob: -4.8933281898498535
    4. '
' → logprob: -6.8933281898498535
    5. '('' → logprob: -12.143327713012695
    6. '	def' → logprob: -12.143327713012695
    7. '(def' → logprob: -12.893327713012695
    8. '()
' → logprob: -13.018327713012695
    9. '(' → logprob: -13.143327713012695
    10. ':' → logprob: -13.393327713012695

Token 505: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10709969699382782
    2. 'g' → logprob: -3.482099771499634
    3. ' def' → logprob: -3.732099771499634
    4. 'bit' → logprob: -3.857099771499634
    5. 'G' → logprob: -5.482099533081055
    6. 'l' → logprob: -5.732099533081055
    7. 'b' → logprob: -6.607099533081055
    8. 'T' → logprob: -6.607099533081055
    9. 'from' → logprob: -6.732099533081055
    10. ' gcd' → logprob: -6.919599533081055

Token 506: ' bit' (ID: 3546)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.1337722539901733
    2. 'bit' → logprob: -1.3837722539901733
    3. 'pop' → logprob: -1.8837722539901733
    4. 'l' → logprob: -3.383772373199463
    5. ' gcd' → logprob: -3.758772373199463
    6. 'ceil' → logprob: -4.008772373199463
    7. 'G' → logprob: -4.383772373199463
    8. 'pow' → logprob: -4.508772373199463
    9. 'count' → logprob: -4.508772373199463
    10. 'b' → logprob: -5.008772373199463

Token 507: '_o' (ID: 28960)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.23192138969898224
    2. '_n' → logprob: -3.106921434402466
    3. '_set' → logprob: -3.106921434402466
    4. 'count' → logprob: -3.106921434402466
    5. '_' → logprob: -4.606921195983887
    6. '_pop' → logprob: -4.606921195983887
    7. '_length' → logprob: -4.731921195983887
    8. '_not' → logprob: -4.981921195983887
    9. '_mask' → logprob: -4.981921195983887
    10. '_s' → logprob: -5.606921195983887

Token 508: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.016909122467041016
    2. 'r' → logprob: -4.391909122467041
    3. '(' → logprob: -6.016909122467041
    4. '(r' → logprob: -7.016909122467041
    5. '(b' → logprob: -8.266908645629883
    6. '(n' → logprob: -9.016908645629883
    7. 'n' → logprob: -9.141908645629883
    8. '((' → logprob: -9.266908645629883
    9. 'a' → logprob: -9.516908645629883
    10. ' (' → logprob: -9.766908645629883

Token 509: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003874062094837427
    2. ',b' → logprob: -5.878873825073242
    3. ',a' → logprob: -8.003873825073242
    4. ' ,' → logprob: -8.253873825073242
    5. '(' → logprob: -8.753873825073242
    6. '<|end|>' → logprob: -9.628873825073242
    7. ')' → logprob: -9.753873825073242
    8. '|' → logprob: -9.878873825073242
    9. '   ' → logprob: -10.253873825073242
    10. '(a' → logprob: -10.503873825073242

Token 510: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0017067246371880174
    2. ' b' → logprob: -6.376706600189209
    3. ' ' → logprob: -13.126707077026367
    4. '1' → logprob: -14.751707077026367
    5. '   ' → logprob: -14.751707077026367
    6. '  ' → logprob: -15.376707077026367
    7. '<|end|>' → logprob: -15.376707077026367
    8. '...' → logprob: -15.626707077026367
    9. '0' → logprob: -15.751707077026367
    10. 'a' → logprob: -15.751707077026367

Token 511: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4742099940776825
    2. '):' → logprob: -0.9742100238800049
    3. '):
' → logprob: -9.349209785461426
    4. ')' → logprob: -10.474209785461426
    5. '):

' → logprob: -12.224209785461426
    6. 'def' → logprob: -12.224209785461426
    7. '   ' → logprob: -13.224209785461426
    8. ' ):' → logprob: -13.474209785461426
    9. ':' → logprob: -13.849209785461426
    10. ',' → logprob: -13.974209785461426

Token 512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028218192979693413
    2. 'return' → logprob: -3.7782182693481445
    3. '   ' → logprob: -5.5282182693481445
    4. '=' → logprob: -7.4032182693481445
    5. ' return' → logprob: -8.403218269348145
    6. 'def' → logprob: -9.653218269348145
    7. '	return' → logprob: -10.528218269348145
    8. '     ' → logprob: -11.653218269348145
    9. '      ' → logprob: -11.653218269348145
    10. '(' → logprob: -11.653218269348145

Token 513: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.025607194751501083
    2. ' return' → logprob: -3.775607109069824
    3. '       ' → logprob: -6.525607109069824
    4. '   ' → logprob: -7.150607109069824
    5. '(a' → logprob: -10.150607109069824
    6. '	return' → logprob: -10.775607109069824
    7. 'def' → logprob: -10.900607109069824
    8. 'a' → logprob: -11.650607109069824
    9. ' ' → logprob: -11.775607109069824
    10. '((' → logprob: -12.025607109069824

Token 514: ' ((' (ID: 3536)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3202691674232483
    2. ' (' → logprob: -1.3202691078186035
    3. '((' → logprob: -5.6952691078186035
    4. 'a' → logprob: -6.6952691078186035
    5. ' ((' → logprob: -7.0702691078186035
    6. 'bool' → logprob: -7.3202691078186035
    7. ' a' → logprob: -8.070269584655762
    8. ' bool' → logprob: -8.195269584655762
    9. ' not' → logprob: -8.820269584655762
    10. 'not' → logprob: -10.195269584655762

Token 515: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.266944157890975e-05
    2. '1' → logprob: -10.250072479248047
    3. ' a' → logprob: -11.000072479248047
    4. '(a' → logprob: -11.125072479248047
    5. '~' → logprob: -12.750072479248047
    6. '(' → logprob: -13.500072479248047
    7. '(~' → logprob: -14.750072479248047
    8. '((' → logprob: -15.250072479248047
    9. ' (' → logprob: -16.000072479248047
    10. '>>>' → logprob: -16.125072479248047

Token 516: ' >>' (ID: 6832)
  Prédit: '>>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.31359872221946716
    2. '|' → logprob: -1.4385987520217896
    3. ' >>' → logprob: -4.0635986328125
    4. ' |' → logprob: -5.3135986328125
    5. '^' → logprob: -5.3135986328125
    6. '&' → logprob: -5.5635986328125
    7. ' &' → logprob: -8.0635986328125
    8. ' ^' → logprob: -8.4385986328125
    9. ')' → logprob: -8.6885986328125
    10. ' ' → logprob: -9.3135986328125

Token 517: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005530327325686812
    2. ' b' → logprob: -7.500553131103516
    3. ')b' → logprob: -16.875553131103516
    4. ' ' → logprob: -17.500553131103516
    5. '1' → logprob: -17.875553131103516
    6. '<|end|>' → logprob: -18.625553131103516
    7. '(b' → logprob: -18.750553131103516
    8. ')' → logprob: -18.875553131103516
    9. '	b' → logprob: -19.125553131103516
    10. ' (' → logprob: -19.125553131103516

Token 518: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004150580149143934
    2. ')&' → logprob: -5.504150390625
    3. ' )' → logprob: -9.754150390625
    4. '1' → logprob: -11.754150390625
    5. '&' → logprob: -13.254150390625
    6. ')^' → logprob: -13.879150390625
    7. ')
' → logprob: -14.129150390625
    8. '))' → logprob: -14.379150390625
    9. ' ' → logprob: -14.629150390625
    10. ')|' → logprob: -14.754150390625

Token 519: ' &' (ID: 827)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08385731279850006
    2. '&' → logprob: -2.708857297897339
    3. ')&' → logprob: -4.458857536315918
    4. '1' → logprob: -6.208857536315918
    5. '|' → logprob: -9.208857536315918
    6. ' &' → logprob: -9.583857536315918
    7. ' )' → logprob: -10.208857536315918
    8. '0' → logprob: -11.458857536315918
    9. ' ' → logprob: -12.333857536315918
    10. 'and' → logprob: -12.833857536315918

Token 520: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004883344518020749
    2. ' ' → logprob: -7.62548828125
    3. '(' → logprob: -16.00048828125
    4. 'a' → logprob: -16.37548828125
    5. '0' → logprob: -16.50048828125
    6. 'b' → logprob: -17.12548828125
    7. '   ' → logprob: -17.62548828125
    8. '3' → logprob: -18.37548828125
    9. '01' → logprob: -18.50048828125
    10. '
' → logprob: -19.00048828125

Token 521: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6047699318733066e-05
    2. ' ' → logprob: -11.125016212463379
    3. '3' → logprob: -14.250016212463379
    4. '0' → logprob: -15.125016212463379
    5. '(' → logprob: -15.250016212463379
    6. '
' → logprob: -16.875015258789062
    7. '01' → logprob: -17.625015258789062
    8. 'a' → logprob: -17.750015258789062
    9. '
' → logprob: -17.875015258789062
    10. 'b' → logprob: -17.875015258789062

Token 522: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0060496702790260315
    2. ')==' → logprob: -5.631049633026123
    3. ')!=' → logprob: -6.131049633026123
    4. '1' → logprob: -8.381050109863281
    5. '==' → logprob: -11.131050109863281
    6. ')>' → logprob: -11.756050109863281
    7. ' )' → logprob: -12.131050109863281
    8. '!=' → logprob: -12.131050109863281
    9. '|' → logprob: -12.381050109863281
    10. '0' → logprob: -13.381050109863281

Token 523: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5730229616165161
    2. '^' → logprob: -0.9480229616165161
    3. '1' → logprob: -3.6980228424072266
    4. ' ^' → logprob: -4.573022842407227
    5. '!=' → logprob: -5.198022842407227
    6. ' ==' → logprob: -5.198022842407227
    7. '|' → logprob: -6.448022842407227
    8. ' !=' → logprob: -8.573022842407227
    9. ')' → logprob: -8.948022842407227
    10. 'or' → logprob: -9.198022842407227

Token 524: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.641841820150148e-05
    2. ' ' → logprob: -10.62502670288086
    3. '0' → logprob: -13.12502670288086
    4. '１' → logprob: -19.37502670288086
    5. '(' → logprob: -20.00002670288086
    6. '01' → logprob: -20.50002670288086
    7. '' → logprob: -20.50002670288086
    8. '=' → logprob: -20.62502670288086
    9. '۱' → logprob: -20.62502670288086
    10. '   ' → logprob: -20.75002670288086

Token 525: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. '0' → logprob: -13.12500286102295
    3. ' ' → logprob: -13.62500286102295
    4. '１' → logprob: -19.500003814697266
    5. '' → logprob: -20.375003814697266
    6. '۱' → logprob: -20.875003814697266
    7. '=' → logprob: -21.000003814697266
    8. '01' → logprob: -21.750003814697266
    9. '(' → logprob: -21.875003814697266
    10. '   ' → logprob: -22.125003814697266

Token 526: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 527: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03408660739660263
    2. '<|end|>' → logprob: -3.4090867042541504
    3. 'class' → logprob: -9.784086227416992
    4. '  ' → logprob: -9.909086227416992
    5. '
' → logprob: -10.034086227416992
    6. ')' → logprob: -10.034086227416992
    7. '@' → logprob: -10.409086227416992
    8. 'def' → logprob: -10.409086227416992
    9. '<|end|>' → logprob: -10.659086227416992
    10. ' ' → logprob: -10.659086227416992

Token 528: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.055031344294548035
    2. '   ' → logprob: -2.9300312995910645
    3. '#' → logprob: -9.930031776428223
    4. 'class' → logprob: -10.430031776428223
    5. ' @' → logprob: -11.055031776428223
    6. '@g' → logprob: -11.555031776428223
    7. '...' → logprob: -11.805031776428223
    8. 'def' → logprob: -11.805031776428223
    9. '@dat' → logprob: -11.805031776428223
    10. '@property' → logprob: -12.680031776428223

Token 529: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -2.339278580620885e-06
    2. 'classmethod' → logprob: -13.125001907348633
    3. 'property' → logprob: -15.250001907348633
    4. 'static' → logprob: -16.500001907348633
    5. 'dat' → logprob: -18.500001907348633
    6. '@' → logprob: -20.875001907348633
    7. '
' → logprob: -22.250001907348633
    8. '0' → logprob: -22.875001907348633
    9. 'stat' → logprob: -23.250001907348633
    10. '2' → logprob: -23.250001907348633

Token 530: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1309509575366974
    2. 'def' → logprob: -2.130950927734375
    3. '
' → logprob: -6.005950927734375
    4. ' def' → logprob: -6.505950927734375
    5. ':' → logprob: -11.255950927734375
    6. '	def' → logprob: -11.505950927734375
    7. '('' → logprob: -12.255950927734375
    8. ' ' → logprob: -12.380950927734375
    9. '()' → logprob: -12.505950927734375
    10. '(' → logprob: -12.630950927734375

Token 531: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004927158355712891
    2. '   ' → logprob: -5.504927158355713
    3. ' def' → logprob: -7.129927158355713
    4. '
' → logprob: -10.004926681518555
    5. '	def' → logprob: -14.379926681518555
    6. ':' → logprob: -14.629926681518555
    7. '_def' → logprob: -15.004926681518555
    8. '('' → logprob: -15.254926681518555
    9. 'Def' → logprob: -15.629926681518555
    10. ':def' → logprob: -15.754926681518555

Token 532: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.32912060618400574
    2. 'bit' → logprob: -1.4541206359863281
    3. 'g' → logprob: -4.079120635986328
    4. 'pop' → logprob: -4.829120635986328
    5. 'l' → logprob: -5.954120635986328
    6. 'G' → logprob: -6.079120635986328
    7. 'pow' → logprob: -6.079120635986328
    8. 'L' → logprob: -6.704120635986328
    9. 'bin' → logprob: -6.829120635986328
    10. 'B' → logprob: -7.329120635986328

Token 533: ' ceil' (ID: 35964)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.12720085680484772
    2. 'pop' → logprob: -2.7522008419036865
    3. 'g' → logprob: -5.377201080322266
    4. 'count' → logprob: -5.377201080322266
    5. 'bits' → logprob: -5.627201080322266
    6. ' bit' → logprob: -5.752201080322266
    7. 'pow' → logprob: -5.814701080322266
    8. 'b' → logprob: -5.814701080322266
    9. 'B' → logprob: -6.002201080322266
    10. 'l' → logprob: -6.127201080322266

Token 534: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.06615514308214188
    2. '(math' → logprob: -3.066155195236206
    3. '(' → logprob: -4.441154956817627
    4. '(x' → logprob: -5.566154956817627
    5. '(*' → logprob: -7.191154956817627
    6. '(n' → logprob: -8.816155433654785
    7. '(value' → logprob: -9.066155433654785
    8. '(s' → logprob: -9.066155433654785
    9. '(Math' → logprob: -9.441155433654785
    10. '((' → logprob: -9.691155433654785

Token 535: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005458459258079529
    2. '):' → logprob: -5.755458354949951
    3. ',x' → logprob: -6.505458354949951
    4. '):
' → logprob: -7.380458354949951
    5. ',y' → logprob: -9.88045883178711
    6. ' ,' → logprob: -10.38045883178711
    7. '(x' → logprob: -10.75545883178711
    8. '   ' → logprob: -10.75545883178711
    9. ')' → logprob: -12.25545883178711
    10. ':' → logprob: -12.50545883178711

Token 536: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.005456678103655577
    2. ' y' → logprob: -5.505456447601318
    3. 'd' → logprob: -6.755456447601318
    4. 'n' → logprob: -9.880456924438477
    5. ' ' → logprob: -10.630456924438477
    6. 'k' → logprob: -10.630456924438477
    7. 'm' → logprob: -10.880456924438477
    8. 'a' → logprob: -11.005456924438477
    9. 'div' → logprob: -11.005456924438477
    10. '   ' → logprob: -11.130456924438477

Token 537: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01260512787848711
    2. '):
' → logprob: -4.3876051902771
    3. ')' → logprob: -9.512604713439941
    4. '):
' → logprob: -11.887604713439941
    5. ':' → logprob: -12.137604713439941
    6. '=' → logprob: -12.387604713439941
    7. '   ' → logprob: -13.512604713439941
    8. ' ):' → logprob: -13.637604713439941
    9. '=None' → logprob: -13.637604713439941
    10. ')：' → logprob: -14.637604713439941

Token 538: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03463982790708542
    2. '(x' → logprob: -3.534639835357666
    3. ':' → logprob: -5.534639835357666
    4. ':
' → logprob: -8.159639358520508
    5. '(' → logprob: -8.409639358520508
    6. ' return' → logprob: -9.534639358520508
    7. ' x' → logprob: -9.784639358520508
    8. ':return' → logprob: -9.909639358520508
    9. ' (' → logprob: -10.034639358520508
    10. ',' → logprob: -10.159639358520508

Token 539: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3172614574432373
    2. '       ' → logprob: -1.3172614574432373
    3. ' return' → logprob: -5.567261695861816
    4. '   ' → logprob: -8.817261695861816
    5. '	return' → logprob: -11.817261695861816
    6. '(x' → logprob: -11.817261695861816
    7. '(return' → logprob: -13.067261695861816
    8. ' (' → logprob: -13.192261695861816
    9. ' ' → logprob: -13.692261695861816
    10. ':return' → logprob: -14.317261695861816

Token 540: ' math' (ID: 13324)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.02690240554511547
    2. 'math' → logprob: -4.276902198791504
    3. ' (' → logprob: -5.026902198791504
    4. '-' → logprob: -5.776902198791504
    5. '-(' → logprob: -6.526902198791504
    6. '(math' → logprob: -6.776902198791504
    7. ' -' → logprob: -8.526902198791504
    8. ' math' → logprob: -9.651902198791504
    9. '-x' → logprob: -10.401902198791504
    10. ' ' → logprob: -10.401902198791504

Token 541: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.320199877838604e-07
    2. '.ceil' → logprob: -15.0
    3. 'ceil' → logprob: -16.75
    4. '_ce' → logprob: -16.875
    5. '_floor' → logprob: -19.625
    6. ' _' → logprob: -20.25
    7. '_g' → logprob: -20.625
    8. ' ceil' → logprob: -21.0
    9. '_x' → logprob: -21.375
    10. '_c' → logprob: -21.375

Token 542: 'ceil' (ID: 43552)
  Prédit: 'ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -2.8325677703833207e-05
    2. '_' → logprob: -10.500028610229492
    3. '.ceil' → logprob: -14.750028610229492
    4. ' ceil' → logprob: -15.000028610229492
    5. 'cel' → logprob: -19.625028610229492
    6. 'ce' → logprob: -20.625028610229492
    7. '(' → logprob: -21.750028610229492
    8. '__' → logprob: -21.875028610229492
    9. 'floor' → logprob: -22.000028610229492
    10. '```' → logprob: -22.375028610229492

Token 543: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.5332478142227046e-05
    2. '(' → logprob: -11.250015258789062
    3. '((' → logprob: -13.625015258789062
    4. 'x' → logprob: -13.750015258789062
    5. 'div' → logprob: -17.500015258789062
    6. '(
' → logprob: -17.750015258789062
    7. ' (' → logprob: -18.500015258789062
    8. '(div' → logprob: -19.750015258789062
    9. '(-' → logprob: -20.375015258789062
    10. ' x' → logprob: -21.000015258789062

Token 544: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.5610774755477905
    2. ',' → logprob: -1.4360774755477905
    3. ' /' → logprob: -1.6860774755477905
    4. '/y' → logprob: -5.68607759475708
    5. ',y' → logprob: -6.06107759475708
    6. 'y' → logprob: -8.561077117919922
    7. ')' → logprob: -8.811077117919922
    8. ' ,' → logprob: -9.686077117919922
    9. ' y' → logprob: -9.936077117919922
    10. '   ' → logprob: -10.311077117919922

Token 545: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.9027791495318525e-05
    2. ' y' → logprob: -10.875019073486328
    3. '   ' → logprob: -17.125019073486328
    4. ' ' → logprob: -18.375019073486328
    5. '	y' → logprob: -19.250019073486328
    6. '  ' → logprob: -19.875019073486328
    7. '       ' → logprob: -20.500019073486328
    8. ')y' → logprob: -20.875019073486328
    9. '(y' → logprob: -21.500019073486328
    10. ')' → logprob: -22.125019073486328

Token 546: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. ')
' → logprob: -12.375004768371582
    3. '<|end|>' → logprob: -15.000004768371582
    4. ' )' → logprob: -15.375004768371582
    5. '   ' → logprob: -16.2500057220459
    6. ')return' → logprob: -16.7500057220459
    7. ')

' → logprob: -16.8750057220459
    8. '),' → logprob: -17.7500057220459
    9. ')#' → logprob: -18.0000057220459
    10. ')}' → logprob: -18.2500057220459

Token 547: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 548: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.002699305070564151
    2. '   ' → logprob: -6.127699375152588
    3. '#' → logprob: -8.25269889831543
    4. '<|end|>' → logprob: -9.37769889831543
    5. '...' → logprob: -9.87769889831543
    6. '@property' → logprob: -10.87769889831543
    7. 'def' → logprob: -11.00269889831543
    8. 'staticmethod' → logprob: -11.37769889831543
    9. '@dat' → logprob: -11.62769889831543
    10. ' @' → logprob: -11.62769889831543

Token 549: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -4.127333340875339e-06
    2. 'classmethod' → logprob: -12.750003814697266
    3. 'static' → logprob: -14.000003814697266
    4. 'property' → logprob: -15.750003814697266
    5. 'dat' → logprob: -16.000003814697266
    6. '@' → logprob: -19.500003814697266
    7. 'partial' → logprob: -19.500003814697266
    8. 'cache' → logprob: -20.000003814697266
    9. '_static' → logprob: -20.000003814697266
    10. 'l' → logprob: -20.750003814697266

Token 550: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1973184049129486
    2. '   ' → logprob: -1.822318434715271
    3. ' def' → logprob: -4.0723185539245605
    4. ':' → logprob: -8.697318077087402
    5. '
' → logprob: -8.822318077087402
    6. ':def' → logprob: -11.072318077087402
    7. '	def' → logprob: -11.197318077087402
    8. ' ' → logprob: -11.322318077087402
    9. '(' → logprob: -11.572318077087402
    10. '  ' → logprob: -12.947318077087402

Token 551: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010700895451009274
    2. '   ' → logprob: -4.885700702667236
    3. ' def' → logprob: -5.885700702667236
    4. '
' → logprob: -8.260701179504395
    5. '	def' → logprob: -10.510701179504395
    6. '('' → logprob: -11.260701179504395
    7. ' ' → logprob: -12.510701179504395
    8. '(' → logprob: -13.135701179504395
    9. '_def' → logprob: -13.885701179504395
    10. ':' → logprob: -14.010701179504395

Token 552: ' def' (ID: 1056)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.022857442498207092
    2. 'def' (adapté à ' def') → logprob: -4.147857666015625
    3. 'l' → logprob: -6.272857666015625
    4. 'floor' → logprob: -6.647857666015625
    5. '_g' → logprob: -6.897857666015625
    6. 'ceil' → logprob: -7.772857666015625
    7. '   ' → logprob: -7.772857666015625
    8. 'math' → logprob: -8.147857666015625
    9. ' gcd' → logprob: -8.897857666015625
    10. 'abs' → logprob: -9.272857666015625

Token 553: ' ave' (ID: 22175)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.011878437362611294
    2. ' gcd' → logprob: -5.761878490447998
    3. 'G' → logprob: -6.136878490447998
    4. 'l' → logprob: -6.261878490447998
    5. 'floor' → logprob: -6.261878490447998
    6. '_g' → logprob: -7.386878490447998
    7. 'math' → logprob: -8.38687801361084
    8. 'pow' → logprob: -8.76187801361084
    9. 'max' → logprob: -8.94937801361084
    10. 'ceil' → logprob: -9.01187801361084

Token 554: '(a' (ID: 6271)
  Prédit: 'rage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rage' → logprob: -0.03714709356427193
    2. '(x' → logprob: -3.412147045135498
    3. '(a' → logprob: -6.537147045135498
    4. '(p' → logprob: -6.787147045135498
    5. '(r' → logprob: -7.287147045135498
    6. '(age' → logprob: -10.162147521972656
    7. '(n' → logprob: -10.412147521972656
    8. 'r' → logprob: -10.412147521972656
    9. 'range' → logprob: -10.787147521972656
    10. '(range' → logprob: -11.162147521972656

Token 555: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7787904143333435
    2. '):
' → logprob: -0.9037904143333435
    3. '):' → logprob: -2.0287904739379883
    4. ',a' → logprob: -6.278790473937988
    5. '(a' → logprob: -6.653790473937988
    6. '   ' → logprob: -7.653790473937988
    7. ')' → logprob: -8.028790473937988
    8. 'a' → logprob: -8.528790473937988
    9. '):
' → logprob: -8.778790473937988
    10. ':' → logprob: -9.653790473937988

Token 556: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2404266744852066
    2. '   ' → logprob: -1.7404266595840454
    3. ' return' → logprob: -3.490426778793335
    4. '       ' → logprob: -4.865426540374756
    5. ' ' → logprob: -10.615427017211914
    6. '	return' → logprob: -10.865427017211914
    7. 'mean' → logprob: -11.740427017211914
    8. '  ' → logprob: -12.740427017211914
    9. 'def' → logprob: -12.865427017211914
    10. ' ' → logprob: -13.365427017211914

Token 557: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0004049322451464832
    2. ' return' → logprob: -8.250405311584473
    3. '   ' → logprob: -9.125405311584473
    4. '       ' → logprob: -10.500405311584473
    5. 'def' → logprob: -12.125405311584473
    6. 'if' → logprob: -13.875405311584473
    7. 'try' → logprob: -15.250405311584473
    8. '	return' → logprob: -15.375405311584473
    9. 'from' → logprob: -15.875405311584473
    10. ' ' → logprob: -16.375404357910156

Token 558: ' mean' (ID: 4774)
  Prédit: 'mean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mean' → logprob: -0.00022892709239386022
    2. ' mean' → logprob: -8.500228881835938
    3. 'int' → logprob: -10.750228881835938
    4. 'round' → logprob: -13.375228881835938
    5. 'sum' → logprob: -13.375228881835938
    6. '(mean' → logprob: -14.250228881835938
    7. 'average' → logprob: -16.875228881835938
    8. 'float' → logprob: -17.250228881835938
    9. '   ' → logprob: -17.500228881835938
    10. ' int' → logprob: -17.625228881835938

Token 559: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.375000953674316
    3. 'a' → logprob: -16.5
    4. '(list' → logprob: -17.125
    5. '((' → logprob: -17.875
    6. '(
' → logprob: -18.875
    7. '<|end|>' → logprob: -18.875
    8. '(array' → logprob: -19.0
    9. ' (' → logprob: -19.125
    10. '([' → logprob: -19.625

Token 560: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ')
' → logprob: -13.12500286102295
    3. ' )' → logprob: -15.00000286102295
    4. '())' → logprob: -16.000001907348633
    5. '   ' → logprob: -16.250001907348633
    6. ')return' → logprob: -17.125001907348633
    7. ')a' → logprob: -17.375001907348633
    8. ')

' → logprob: -17.375001907348633
    9. '))' → logprob: -17.625001907348633
    10. '()' → logprob: -17.875001907348633

Token 561: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 562: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.001170460251159966
    2. '@g' → logprob: -6.876170635223389
    3. 'def' → logprob: -9.00117015838623
    4. '   ' → logprob: -11.37617015838623
    5. 'g' → logprob: -13.62617015838623
    6. ' @' → logprob: -14.00117015838623
    7. '#' → logprob: -15.75117015838623
    8. '@property' → logprob: -16.001171112060547
    9. '@dat' → logprob: -16.126171112060547
    10. 'from' → logprob: -16.251171112060547

Token 563: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -4.008129963040119e-06
    2. 'classmethod' → logprob: -13.250003814697266
    3. 'static' → logprob: -13.500003814697266
    4. 'property' → logprob: -14.625003814697266
    5. 'dat' → logprob: -15.000003814697266
    6. 'cache' → logprob: -18.500003814697266
    7. '@' → logprob: -19.750003814697266
    8. 'l' → logprob: -19.875003814697266
    9. 'partial' → logprob: -20.250003814697266
    10. 'math' → logprob: -20.500003814697266

Token 564: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1569679230451584
    2. 'def' → logprob: -2.156967878341675
    3. '
' → logprob: -3.531967878341675
    4. ' def' → logprob: -8.906968116760254
    5. ' ' → logprob: -9.781968116760254
    6. '('' → logprob: -9.906968116760254
    7. '#' → logprob: -11.156968116760254
    8. '```' → logprob: -11.156968116760254
    9. '	def' → logprob: -11.156968116760254
    10. '  ' → logprob: -11.781968116760254

Token 565: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10097269713878632
    2. '   ' → logprob: -2.3509726524353027
    3. '
' → logprob: -7.475972652435303
    4. ' def' → logprob: -8.725973129272461
    5. '	def' → logprob: -11.350973129272461
    6. ' ' → logprob: -11.975973129272461
    7. ':' → logprob: -12.225973129272461
    8. '@' → logprob: -12.850973129272461
    9. '('' → logprob: -13.225973129272461
    10. '#' → logprob: -13.350973129272461

Token 566: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00011641718447208405
    2. '
' → logprob: -9.250116348266602
    3. '   ' → logprob: -11.375116348266602
    4. ' def' → logprob: -12.250116348266602
    5. 'from' → logprob: -12.750116348266602
    6. 'g' → logprob: -15.125116348266602
    7. '    
' → logprob: -15.750116348266602
    8. '@g' → logprob: -15.750116348266602
    9. '	def' → logprob: -16.1251163482666
    10. 'import' → logprob: -16.5001163482666

Token 567: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00954876933246851
    2. 'cache' → logprob: -4.759548664093018
    3. 'staticmethod' → logprob: -7.384548664093018
    4. 'property' → logprob: -8.884549140930176
    5. 'cached' → logprob: -9.259549140930176
    6. 'classmethod' → logprob: -10.134549140930176
    7. 'dat' → logprob: -10.509549140930176
    8. 'wrap' → logprob: -12.384549140930176
    9. 'partial' → logprob: -12.384549140930176
    10. 'fun' → logprob: -14.009549140930176

Token 568: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0007649566978216171
    2. 'r' → logprob: -7.375764846801758
    3. 'cache' → logprob: -9.000764846801758
    4. '```' → logprob: -13.000764846801758
    5. 'RU' → logprob: -13.250764846801758
    6. 'rust' → logprob: -13.500764846801758
    7. 'cached' → logprob: -13.625764846801758
    8. '@' → logprob: -13.875764846801758
    9. 'l' → logprob: -14.375764846801758
    10. 'rw' → logprob: -14.625764846801758

Token 569: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.25207334756851196
    2. 'cache' → logprob: -1.5020732879638672
    3. 'cached' → logprob: -9.252073287963867
    4. '_cached' → logprob: -10.002073287963867
    5. '```' → logprob: -14.127073287963867
    6. '(cache' → logprob: -14.377073287963867
    7. ' cache' → logprob: -14.627073287963867
    8. '.cache' → logprob: -14.752073287963867
    9. '	cache' → logprob: -15.252073287963867
    10. 'Cache' → logprob: -15.502073287963867

Token 570: '(max' (ID: 17178)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14418986439704895
    2. '()
' → logprob: -2.5191898345947266
    3. '()' → logprob: -3.0191898345947266
    4. '
' → logprob: -5.894189834594727
    5. '(None' → logprob: -6.769189834594727
    6. '(max' → logprob: -7.769189834594727
    7. '   ' → logprob: -8.769189834594727
    8. '(False' → logprob: -9.144189834594727
    9. '(True' → logprob: -9.644189834594727
    10. '(def' → logprob: -9.644189834594727

Token 571: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.04773704707622528
    2. '=None' → logprob: -3.4227371215820312
    3. '=' → logprob: -4.547737121582031
    4. '_size' → logprob: -6.172737121582031
    5. '(None' → logprob: -7.422737121582031
    6. 'SIZE' → logprob: -9.047737121582031
    7. 'None' → logprob: -9.047737121582031
    8. '(size' → logprob: -9.547737121582031
    9. '```' → logprob: -9.672737121582031
    10. '_cache' → logprob: -9.797737121582031

Token 572: '=None' (ID: 12783)
  Prédit: '=None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=None' → logprob: -0.038059163838624954
    2. '=' → logprob: -3.2880592346191406
    3. 'None' → logprob: -11.78805923461914
    4. '=True' → logprob: -11.91305923461914
    5. '(None' → logprob: -13.53805923461914
    6. '=
' → logprob: -13.91305923461914
    7. 'size' → logprob: -15.53805923461914
    8. '=N' → logprob: -15.78805923461914
    9. '=int' → logprob: -16.16305923461914
    10. '=(' → logprob: -16.28805923461914

Token 573: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06392980366945267
    2. ')' → logprob: -3.438929796218872
    3. 'def' → logprob: -3.563929796218872
    4. '())
' → logprob: -7.313930034637451
    5. '()
' → logprob: -8.063929557800293
    6. '   ' → logprob: -8.438929557800293
    7. '
' → logprob: -8.813929557800293
    8. '()' → logprob: -9.688929557800293
    9. ' def' → logprob: -11.188929557800293
    10. '#' → logprob: -11.563929557800293

Token 574: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0028265081346035004
    2. '   ' → logprob: -5.877826690673828
    3. '
' → logprob: -11.627826690673828
    4. '	def' → logprob: -12.002826690673828
    5. ' def' → logprob: -12.627826690673828
    6. '(' → logprob: -14.002826690673828
    7. '('' → logprob: -14.502826690673828
    8. '#' → logprob: -14.627826690673828
    9. '(def' → logprob: -14.752826690673828
    10. '```' → logprob: -15.127826690673828

Token 575: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.9862216504407115e-05
    2. '
' → logprob: -11.250020027160645
    3. '   ' → logprob: -12.375020027160645
    4. ' def' → logprob: -13.500020027160645
    5. 'g' → logprob: -15.000020027160645
    6. '    
' → logprob: -15.500020027160645
    7. '  ' → logprob: -15.875020027160645
    8. '@' → logprob: -16.250019073486328
    9. ' ' → logprob: -16.750019073486328
    10. '@g' → logprob: -17.000019073486328

Token 576: ' gcd' (ID: 106918)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.17972451448440552
    2. ' gcd' → logprob: -2.6797244548797607
    3. 'math' → logprob: -3.1797244548797607
    4. 'G' → logprob: -3.8047244548797607
    5. 'f' → logprob: -5.30472469329834
    6. ' math' → logprob: -5.67972469329834
    7. 'pow' → logprob: -6.05472469329834
    8. 'fib' → logprob: -6.30472469329834
    9. '_g' → logprob: -6.49222469329834
    10. 'comb' → logprob: -6.74222469329834

Token 577: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.002188449027016759
    2. '(x' → logprob: -6.127188682556152
    3. '(math' → logprob: -13.877188682556152
    4. 'def' → logprob: -14.127188682556152
    5. '(n' → logprob: -15.127188682556152
    6. '(' → logprob: -15.377188682556152
    7. 'a' → logprob: -15.377188682556152
    8. '(b' → logprob: -15.752188682556152
    9. '(p' → logprob: -16.002187728881836
    10. '(A' → logprob: -16.127187728881836

Token 578: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010164948180317879
    2. ',y' → logprob: -7.001016616821289
    3. ',b' → logprob: -9.876016616821289
    4. ' ,' → logprob: -10.626016616821289
    5. ',x' → logprob: -11.876016616821289
    6. '<|end|>' → logprob: -12.376016616821289
    7. '   ' → logprob: -12.626016616821289
    8. ':' → logprob: -12.751016616821289
    9. ',int' → logprob: -13.001016616821289
    10. ',n' → logprob: -13.126016616821289

Token 579: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.632542913896032e-05
    2. ' y' → logprob: -10.000046730041504
    3. '   ' → logprob: -14.500046730041504
    4. 'x' → logprob: -15.500046730041504
    5. '  ' → logprob: -17.125045776367188
    6. ')' → logprob: -17.375045776367188
    7. '    ' → logprob: -18.125045776367188
    8. ' ' → logprob: -18.250045776367188
    9. '    
' → logprob: -18.375045776367188
    10. '
' → logprob: -18.500045776367188

Token 580: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5759856700897217
    2. '):' → logprob: -0.8259856700897217
    3. ')' → logprob: -10.2009859085083
    4. '):
' → logprob: -12.5759859085083
    5. '   ' → logprob: -12.8259859085083
    6. ':' → logprob: -13.0759859085083
    7. '):

' → logprob: -15.4509859085083
    8. '():
' → logprob: -15.4509859085083
    9. ')->' → logprob: -16.200984954833984
    10. ',' → logprob: -16.200984954833984

Token 581: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003095243126153946
    2. '   ' → logprob: -6.1280951499938965
    3. 'return' → logprob: -7.3780951499938965
    4. ' return' → logprob: -8.753095626831055
    5. 'if' → logprob: -9.753095626831055
    6. ' if' → logprob: -10.253095626831055
    7. ':return' → logprob: -11.003095626831055
    8. '	return' → logprob: -12.003095626831055
    9. ':' → logprob: -13.128095626831055
    10. '           ' → logprob: -13.503095626831055

Token 582: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.8189951777458191
    2. '   ' → logprob: -1.5689952373504639
    3. '       ' → logprob: -1.5689952373504639
    4. 'if' → logprob: -2.568995237350464
    5. 'while' → logprob: -3.318995237350464
    6. ' return' → logprob: -3.568995237350464
    7. ' if' → logprob: -6.943994998931885
    8. ' while' → logprob: -7.693994998931885
    9. '	return' → logprob: -9.568995475769043
    10. '    ' → logprob: -10.318995475769043

Token 583: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.6113603711128235
    2. ' math' → logprob: -1.1113603115081787
    3. 'x' → logprob: -2.2363603115081787
    4. ' x' → logprob: -3.8613603115081787
    5. 'y' → logprob: -8.736360549926758
    6. ' ' → logprob: -9.611360549926758
    7. 'a' → logprob: -9.861360549926758
    8. 'g' → logprob: -10.361360549926758
    9. ' y' → logprob: -10.361360549926758
    10. '(math' → logprob: -10.986360549926758

Token 584: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -6.704273118884885e-07
    2. 'g' → logprob: -14.375000953674316
    3. '_' → logprob: -18.125
    4. 'import' → logprob: -19.125
    5. 'def' → logprob: -19.25
    6. '_c' → logprob: -19.25
    7. ' gcd' → logprob: -19.875
    8. '_gc' → logprob: -21.125
    9. '_h' → logprob: -21.25
    10. ' _' → logprob: -21.5

Token 585: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -4.008129963040119e-06
    2. '_cd' → logprob: -12.625003814697266
    3. 'cdn' → logprob: -15.500003814697266
    4. 'c' → logprob: -15.875003814697266
    5. 'cdf' → logprob: -15.875003814697266
    6. '_c' → logprob: -16.875003814697266
    7. 'CD' → logprob: -16.875003814697266
    8. '```' → logprob: -17.250003814697266
    9. 'd' → logprob: -17.875003814697266
    10. '	cd' → logprob: -18.250003814697266

Token 586: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -13.750000953674316
    3. 'x' → logprob: -17.750001907348633
    4. '(
' → logprob: -18.875001907348633
    5. '(abs' → logprob: -20.500001907348633
    6. '(max' → logprob: -20.875001907348633
    7. '((' → logprob: -21.500001907348633
    8. ' (' → logprob: -21.750001907348633
    9. '(a' → logprob: -21.875001907348633
    10. '(y' → logprob: -22.000001907348633

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005404045223258436
    2. ',y' → logprob: -7.750540256500244
    3. ' ,' → logprob: -9.125540733337402
    4. 'y' → logprob: -14.750540733337402
    5. ',x' → logprob: -15.375540733337402
    6. ',
' → logprob: -15.875540733337402
    7. ' y' → logprob: -16.750539779663086
    8. ' ' → logprob: -17.750539779663086
    9. '%' → logprob: -17.750539779663086
    10. '   ' → logprob: -18.875539779663086

Token 588: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0003704933915287256
    2. 'x' → logprob: -8.250370025634766
    3. ' y' → logprob: -9.125370025634766
    4. '(y' → logprob: -16.375370025634766
    5. '   ' → logprob: -16.375370025634766
    6. ')' → logprob: -16.500370025634766
    7. ')y' → logprob: -17.750370025634766
    8. '	y' → logprob: -18.250370025634766
    9. '
' → logprob: -18.500370025634766
    10. ' ' → logprob: -18.875370025634766

Token 589: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.961759259458631e-06
    2. ')
' → logprob: -13.000004768371582
    3. ')return' → logprob: -14.500004768371582
    4. ' )' → logprob: -14.625004768371582
    5. ')}' → logprob: -15.000004768371582
    6. ')}}' → logprob: -15.000004768371582
    7. ' if' → logprob: -15.250004768371582
    8. '),' → logprob: -15.375004768371582
    9. ',' → logprob: -15.625004768371582
    10. '   ' → logprob: -16.1250057220459

Token 590: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 591: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.028705289587378502
    2. 'main' → logprob: -5.15370512008667
    3. ' solve' → logprob: -5.40370512008667
    4. ' IP' → logprob: -6.15370512008667
    5. ' partial' → logprob: -6.52870512008667
    6. ' max' → logprob: -6.52870512008667
    7. ' ' → logprob: -7.02870512008667
    8. ' S' → logprob: -7.15370512008667
    9. ' parse' → logprob: -7.21620512008667
    10. '_' → logprob: -7.27870512008667

Token 592: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.6696149840718135e-05
    2. '():
' → logprob: -10.500056266784668
    3. ' ():' → logprob: -11.375056266784668
    4. '(' → logprob: -11.625056266784668
    5. '()' → logprob: -11.750056266784668
    6. '():
' → logprob: -15.875056266784668
    7. ':' → logprob: -16.000057220458984
    8. '(":' → logprob: -16.625057220458984
    9. '(:' → logprob: -16.625057220458984
    10. '().' → logprob: -16.875057220458984

Token 593: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021508578211069107
    2. '    ' → logprob: -7.252151012420654
    3. ' ip' → logprob: -7.377151012420654
    4. '	ip' → logprob: -8.377150535583496
    5. ' pass' → logprob: -8.502150535583496
    6. 'ip' → logprob: -8.877150535583496
    7. '   ' → logprob: -9.502150535583496
    8. 'n' → logprob: -10.502150535583496
    9. '(ip' → logprob: -10.877150535583496
    10. ' input' → logprob: -11.377150535583496

Token 594: ' r' (ID: 428)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.006580723915249109
    2. '   ' → logprob: -5.131580829620361
    3. ' ip' → logprob: -7.756580829620361
    4. 'ips' → logprob: -9.381580352783203
    5. 'IP' → logprob: -9.631580352783203
    6. 'I' → logprob: -10.881580352783203
    7. 'pass' → logprob: -11.631580352783203
    8. 'ipy' → logprob: -11.756580352783203
    9. '	ip' → logprob: -12.006580352783203
    10. 'import' → logprob: -12.006580352783203

Token 595: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.656095564365387
    2. 'e' → logprob: -1.7810955047607422
    3. 'aw' → logprob: -2.406095504760742
    4. '=' → logprob: -2.406095504760742
    5. 'ange' → logprob: -2.656095504760742
    6. 'ead' → logprob: -3.656095504760742
    7. 'eturn' → logprob: -4.406095504760742
    8. ',' → logprob: -5.031095504760742
    9. 'ef' → logprob: -5.531095504760742
    10. 'es' → logprob: -5.781095504760742

Token 596: ' e' (ID: 319)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.054830826818943024
    2. 'k' → logprob: -3.80483078956604
    3. 'g' → logprob: -4.179831027984619
    4. ' c' → logprob: -5.054831027984619
    5. 's' → logprob: -5.929831027984619
    6. 'n' → logprob: -6.304831027984619
    7. 'l' → logprob: -6.679831027984619
    8. 'b' → logprob: -7.429831027984619
    9. 'q' → logprob: -7.429831027984619
    10. 'd' → logprob: -7.554831027984619

Token 597: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1163157969713211
    2. ',' → logprob: -2.4913158416748047
    3. ' =' → logprob: -3.6163158416748047
    4. 'q' → logprob: -10.116315841674805
    5. 'r' → logprob: -10.991315841674805
    6. ',r' → logprob: -11.241315841674805
    7. 'n' → logprob: -11.991315841674805
    8. 'x' → logprob: -12.116315841674805
    9. '   ' → logprob: -12.366315841674805
    10. 'v' → logprob: -12.616315841674805

Token 598: ' p' (ID: 275)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7058224081993103
    2. 's' → logprob: -0.8308224081993103
    3. 'd' → logprob: -3.580822467803955
    4. 'c' → logprob: -4.205822467803955
    5. 'i' → logprob: -5.080822467803955
    6. '```' → logprob: -5.580822467803955
    7. 'b' → logprob: -5.705822467803955
    8. 'l' → logprob: -5.830822467803955
    9. 'q' → logprob: -5.955822467803955
    10. 'p' → logprob: -5.955822467803955

Token 599: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04872305691242218
    2. ' =' → logprob: -3.048722982406616
    3. ',' → logprob: -9.048723220825195
    4. 'r' → logprob: -11.673723220825195
    5. 'p' → logprob: -12.298723220825195
    6. ' ' → logprob: -13.923723220825195
    7. '=sys' → logprob: -13.923723220825195
    8. ')' → logprob: -14.048723220825195
    9. 'm' → logprob: -14.673723220825195
    10. '=input' → logprob: -15.298723220825195

Token 600: ' range' (ID: 3352)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.10827317088842392
    2. ' map' → logprob: -2.4832732677459717
    3. 'IP' → logprob: -3.9832732677459717
    4. ' IP' → logprob: -8.73327350616455
    5. 'ip' → logprob: -9.23327350616455
    6. 'list' → logprob: -9.48327350616455
    7. '[' → logprob: -10.10827350616455
    8. 'IL' → logprob: -10.35827350616455
    9. 'Idea' → logprob: -10.60827350616455
    10. 'S' → logprob: -10.85827350616455

Token 601: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1472419600977446e-06
    2. '(r' → logprob: -14.500000953674316
    3. '3' → logprob: -14.875000953674316
    4. '(-' → logprob: -16.000001907348633
    5. '((' → logprob: -17.125001907348633
    6. '=' → logprob: -17.500001907348633
    7. '(
' → logprob: -17.500001907348633
    8. ' (' → logprob: -18.000001907348633
    9. 's' → logprob: -18.125001907348633
    10. '(len' → logprob: -18.375001907348633

Token 602: ' enumerate' (ID: 29671)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.05473794788122177
    2. '10' → logprob: -4.1797380447387695
    3. '1' → logprob: -4.5547380447387695
    4. 'p' → logprob: -4.6797380447387695
    5. 'len' → logprob: -6.1797380447387695
    6. '256' → logprob: -6.1797380447387695
    7. '2' → logprob: -6.3047380447387695
    8. '100' → logprob: -6.5547380447387695
    9. '4' → logprob: -6.9297380447387695
    10. '5' → logprob: -7.1797380447387695

Token 603: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12217408418655396
    2. '(' → logprob: -2.747174024581909
    3. 'def' → logprob: -4.122174263000488
    4. '(len' → logprob: -4.497174263000488
    5. '<|end|>' → logprob: -4.872174263000488
    6. '(range' → logprob: -5.372174263000488
    7. 'range' → logprob: -6.372174263000488
    8. '(p' → logprob: -7.247174263000488
    9. ',p' → logprob: -7.372174263000488
    10. 'len' → logprob: -7.372174263000488

Token 604: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4350258409976959
    2. 'partial' → logprob: -1.5600258111953735
    3. 'pow' → logprob: -2.935025930404663
    4. 'map' → logprob: -3.185025930404663
    5. 'zip' → logprob: -3.310025930404663
    6. 'len' → logprob: -5.185025691986084
    7. 'product' → logprob: -6.810025691986084
    8. 'input' → logprob: -6.935025691986084
    9. 'sorted' → logprob: -7.310025691986084
    10. ' partial' → logprob: -8.060026168823242

Token 605: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9733782410621643
    2. '()' → logprob: -1.0983781814575195
    3. '(' → logprob: -2.0983781814575195
    4. '
' → logprob: -2.9733781814575195
    5. '()
' → logprob: -3.0983781814575195
    6. '    
' → logprob: -3.9733781814575195
    7. 'r' → logprob: -4.0983781814575195
    8. 'def' → logprob: -4.7233781814575195
    9. '(
' → logprob: -4.7233781814575195
    10. '(r' → logprob: -5.2233781814575195

Token 606: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011655522510409355
    2. '    
' → logprob: -5.511655330657959
    3. 'for' → logprob: -6.011655330657959
    4. 'n' → logprob: -7.011655330657959
    5. 'r' → logprob: -7.011655330657959
    6. 'ip' → logprob: -7.511655330657959
    7. '
' → logprob: -7.886655330657959
    8. 'def' → logprob: -7.886655330657959
    9. 'i' → logprob: -8.261655807495117
    10. ' for' → logprob: -8.386655807495117

Token 607: ' ip' (ID: 7993)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' (adapté à ' ip') → logprob: -0.009965727105736732
    2. '   ' → logprob: -4.759965896606445
    3. 'ips' → logprob: -7.634965896606445
    4. 'i' → logprob: -7.884965896606445
    5. 'IP' → logprob: -8.634965896606445
    6. 'input' → logprob: -9.509965896606445
    7. ' ip' → logprob: -9.759965896606445
    8. 'I' → logprob: -10.134965896606445
    9. 'inp' → logprob: -10.634965896606445
    10. 'in' → logprob: -11.134965896606445

Token 608: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142406225204468
    2. ' =' → logprob: -1.7014241218566895
    3. '   ' → logprob: -11.951423645019531
    4. 'u' → logprob: -13.826423645019531
    5. '_=' → logprob: -14.076423645019531
    6. ' ' → logprob: -14.201423645019531
    7. 'er' → logprob: -14.701423645019531
    8. 't' → logprob: -15.451423645019531
    9. '  ' → logprob: -15.701423645019531
    10. '＝' → logprob: -15.951423645019531

Token 609: ' IP' (ID: 10108)
  Prédit: 'IP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IP' → logprob: -2.935296834039036e-06
    2. ' IP' → logprob: -12.75000286102295
    3. '(IP' → logprob: -18.500003814697266
    4. '_IP' → logprob: -21.875003814697266
    5. 'Ip' → logprob: -22.375003814697266
    6. 'IPAddress' → logprob: -23.125003814697266
    7. '.IP' → logprob: -24.000003814697266
    8. ' ' → logprob: -24.875003814697266
    9. 'ip' → logprob: -24.875003814697266
    10. 'IPs' → logprob: -25.000003814697266

Token 610: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0052492949180305
    2. '()
' → logprob: -5.255249500274658
    3. '()

' → logprob: -12.0052490234375
    4. '()
' → logprob: -13.6302490234375
    5. '   ' → logprob: -13.7552490234375
    6. ')' → logprob: -13.7552490234375
    7. '(' → logprob: -13.8802490234375
    8. '.' → logprob: -14.2552490234375
    9. ' ()' → logprob: -14.3802490234375
    10. 'def' → logprob: -14.3802490234375

Token 611: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046176206320524216
    2. 'n' → logprob: -3.1711761951446533
    3. ' n' → logprob: -5.921176433563232
    4. '	n' → logprob: -8.671175956726074
    5. 't' → logprob: -9.671175956726074
    6. '(n' → logprob: -9.796175956726074
    7. 'a' → logprob: -9.921175956726074
    8. '    
' → logprob: -10.046175956726074
    9. ',n' → logprob: -10.796175956726074
    10. 'd' → logprob: -10.921175956726074

Token 612: ' id' (ID: 1211)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.033714745193719864
    2. 'a' → logprob: -4.158714771270752
    3. 'N' → logprob: -5.533714771270752
    4. 'h' → logprob: -6.283714771270752
    5. '   ' → logprob: -6.533714771270752
    6. 't' → logprob: -6.533714771270752
    7. 'd' → logprob: -6.533714771270752
    8. 'x' → logprob: -6.658714771270752
    9. 'q' → logprob: -6.658714771270752
    10. ' n' → logprob: -6.783714771270752

Token 613: ' =' (ID: 314)
  Prédit: 'ea'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ea' → logprob: -0.0001463299704482779
    2. 'e' → logprob: -9.50014591217041
    3. '=' → logprob: -9.62514591217041
    4. ' ea' → logprob: -13.37514591217041
    5. 'a' → logprob: -13.50014591217041
    6. ' =' → logprob: -13.62514591217041
    7. 'EA' → logprob: -13.87514591217041
    8. 'ae' → logprob: -16.375146865844727
    9. 'aea' → logprob: -16.750146865844727
    10. 'eo' → logprob: -16.875146865844727

Token 614: ' Idea' (ID: 74190)
  Prédit: 'Idea'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Idea' → logprob: -0.05129791051149368
    2. ' Idea' → logprob: -3.426297903060913
    3. 'dea' → logprob: -4.051298141479492
    4. 'de' → logprob: -9.676298141479492
    5. 'I' → logprob: -11.551298141479492
    6. 'Ide' → logprob: -12.176298141479492
    7. '  ' → logprob: -12.426298141479492
    8. ' ' → logprob: -12.676298141479492
    9. 'IDE' → logprob: -12.926298141479492
    10. '   ' → logprob: -12.926298141479492

Token 615: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0011599812423810363
    2. '()
' → logprob: -6.876160144805908
    3. '.' → logprob: -9.37615966796875
    4. '().' → logprob: -11.75115966796875
    5. '(' → logprob: -11.87615966796875
    6. '()

' → logprob: -11.87615966796875
    7. ' ()' → logprob: -11.87615966796875
    8. '();' → logprob: -12.87615966796875
    9. '.IP' → logprob: -13.37615966796875
    10. '()<' → logprob: -13.37615966796875

Token 616: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008633950725197792
    2. '    
' → logprob: -5.258634090423584
    3. 'n' → logprob: -6.633634090423584
    4. '
' → logprob: -6.633634090423584
    5. 'data' → logprob: -9.258633613586426
    6. 'input' → logprob: -9.383633613586426
    7. '	n' → logprob: -9.383633613586426
    8. 't' → logprob: -9.883633613586426
    9. 'r' → logprob: -9.883633613586426
    10. 'a' → logprob: -10.008633613586426

Token 617: ' mod' (ID: 1812)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1333112269639969
    2. '   ' → logprob: -2.1333112716674805
    3. ' n' → logprob: -6.2583112716674805
    4. 't' → logprob: -6.7583112716674805
    5. 'x' → logprob: -7.3833112716674805
    6. 'a' → logprob: -7.3833112716674805
    7. '	n' → logprob: -7.8833112716674805
    8. '#' → logprob: -8.00831127166748
    9. 's' → logprob: -8.63331127166748
    10. 'l' → logprob: -8.63331127166748

Token 618: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08901231735944748
    2. '=' → logprob: -2.464012384414673
    3. ',' → logprob: -10.339012145996094
    4. '   ' → logprob: -10.589012145996094
    5. ' ' → logprob: -11.839012145996094
    6. '  ' → logprob: -12.589012145996094
    7. '    ' → logprob: -13.839012145996094
    8. '_' → logprob: -14.714012145996094
    9. ' =
' → logprob: -14.714012145996094
    10. ':' → logprob: -14.839012145996094

Token 619: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0016075820894911885
    2. '998' → logprob: -6.751607418060303
    3. '100' → logprob: -7.751607418060303
    4. 'int' → logprob: -12.251607894897461
    5. '1' → logprob: -13.251607894897461
    6. ' ' → logprob: -15.001607894897461
    7. '(' → logprob: -15.126607894897461
    8. 'pow' → logprob: -17.62660789489746
    9. '999' → logprob: -17.87660789489746
    10. '0' → logprob: -18.00160789489746

Token 620: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0005297990282997489
    2. '100' → logprob: -8.250530242919922
    3. '998' → logprob: -8.250530242919922
    4. 'int' → logprob: -12.375530242919922
    5. '1' → logprob: -12.750530242919922
    6. '(' → logprob: -15.875530242919922
    7. ' ' → logprob: -17.625530242919922
    8. '0' → logprob: -17.875530242919922
    9. '999' → logprob: -17.875530242919922
    10. '2' → logprob: -17.875530242919922

Token 621: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0015330705791711807
    2. '9' → logprob: -6.501533031463623
    3. '000' → logprob: -11.126533508300781
    4. '09' → logprob: -12.126533508300781
    5. ' **' → logprob: -12.251533508300781
    6. '_' → logprob: -13.126533508300781
    7. '```' → logprob: -14.126533508300781
    8. '7' → logprob: -14.251533508300781
    9. '00' → logprob: -14.876533508300781
    10. '*' → logprob: -14.876533508300781

Token 622: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -3.128163257315464e-07
    2. '09' → logprob: -16.375
    3. '18' → logprob: -16.75
    4. '+' → logprob: -17.0
    5. '
' → logprob: -17.75
    6. '10' → logprob: -18.0
    7. '8' → logprob: -18.25
    8. '15' → logprob: -18.5
    9. '```' → logprob: -18.625
    10. '９' → logprob: -18.625

Token 623: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00045617512660101056
    2. ' +' → logprob: -7.8754563331604
    3. '7' → logprob: -9.500455856323242
    4. '+
' → logprob: -14.500455856323242
    5. '   ' → logprob: -15.000455856323242
    6. '＋' → logprob: -15.875455856323242
    7. '```' → logprob: -16.250455856323242
    8. ' ' → logprob: -16.375455856323242
    9. 'plus' → logprob: -17.125455856323242
    10. ' ' → logprob: -18.000455856323242

Token 624: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -17.875
    3. ' ' → logprob: -18.5
    4. '```' → logprob: -18.75
    5. '   ' → logprob: -19.5
    6. '07' → logprob: -19.75
    7. '

' → logprob: -20.625
    8. '
' → logprob: -21.25
    9. '9' → logprob: -21.25
    10. '``' → logprob: -21.875

Token 625: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -19.0
    3. ' ' → logprob: -19.5
    4. '```' → logprob: -19.875
    5. '   ' → logprob: -20.375
    6. '

' → logprob: -20.5
    7. '9' → logprob: -20.75
    8. '
' → logprob: -20.875
    9. '７' → logprob: -21.625
    10. '07' → logprob: -21.875

Token 626: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1654772311449051
    2. '<|end|>' → logprob: -2.0404772758483887
    3. '    
' → logprob: -4.165477275848389
    4. '
' → logprob: -5.290477275848389
    5. '<|end|>' → logprob: -6.790477275848389
    6. ')' → logprob: -8.79047679901123
    7. 'tokens' → logprob: -9.41547679901123
    8. 'n' → logprob: -9.54047679901123
    9. 'def' → logprob: -9.79047679901123
    10. '#' → logprob: -9.79047679901123

Token 627: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005725301802158356
    2. 'n' → logprob: -5.880725383758545
    3. '    
' → logprob: -6.255725383758545
    4. 'def' → logprob: -8.630724906921387
    5. 'a' → logprob: -8.880724906921387
    6. '    ' → logprob: -9.130724906921387
    7. '
' → logprob: -9.380724906921387
    8. 'x' → logprob: -9.380724906921387
    9. '(n' → logprob: -9.505724906921387
    10. '#' → logprob: -10.005724906921387

Token 628: ' a' (ID: 261)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007407969795167446
    2. 'N' → logprob: -5.882408142089844
    3. 'a' (adapté à ' a') → logprob: -6.007408142089844
    4. '   ' → logprob: -6.632408142089844
    5. '#' → logprob: -8.507408142089844
    6. 'arr' → logprob: -8.882408142089844
    7. 'A' → logprob: -9.632408142089844
    8. 'def' → logprob: -9.632408142089844
    9. 'x' → logprob: -9.757408142089844
    10. ' n' → logprob: -10.257408142089844

Token 629: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3176884353160858
    2. '=' → logprob: -1.3176884651184082
    3. ',' → logprob: -5.442688465118408
    4. ' ' → logprob: -10.31768798828125
    5. '   ' → logprob: -10.44268798828125
    6. ',b' → logprob: -11.56768798828125
    7. ' ,' → logprob: -13.06768798828125
    8. '  ' → logprob: -13.06768798828125
    9. 'b' → logprob: -13.19268798828125
    10. '=[]' → logprob: -13.56768798828125

Token 630: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011059137992560863
    2. ' b' → logprob: -4.511059284210205
    3. ' =' → logprob: -12.511058807373047
    4. '=' → logprob: -13.386058807373047
    5. 'ip' → logprob: -13.761058807373047
    6. 'e' → logprob: -13.886058807373047
    7. 'p' → logprob: -14.011058807373047
    8. ' ' → logprob: -14.386058807373047
    9. 'k' → logprob: -15.136058807373047
    10. 'a' → logprob: -15.136058807373047

Token 631: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023574575781822205
    2. ' =' → logprob: -3.7735745906829834
    3. ',' → logprob: -8.023574829101562
    4. '=a' → logprob: -14.898574829101562
    5. 'a' → logprob: -15.273574829101562
    6. ' ' → logprob: -15.773574829101562
    7. ')' → logprob: -16.023574829101562
    8. '＝' → logprob: -16.398574829101562
    9. '<|end|>' → logprob: -16.523574829101562
    10. ')=' → logprob: -16.648574829101562

Token 632: ' ip' (ID: 7993)
  Prédit: 'ip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.06219656392931938
    2. ' ip' → logprob: -2.8121964931488037
    3. 'map' → logprob: -8.812196731567383
    4. ' map' → logprob: -9.937196731567383
    5. ' ' → logprob: -11.687196731567383
    6. '   ' → logprob: -11.687196731567383
    7. '	ip' → logprob: -11.687196731567383
    8. 'IP' → logprob: -12.937196731567383
    9. '  ' → logprob: -13.687196731567383
    10. '(ip' → logprob: -14.187196731567383

Token 633: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18560419976711273
    2. '().' → logprob: -2.0606040954589844
    3. '()' → logprob: -3.3106040954589844
    4. '.S' → logprob: -6.060604095458984
    5. '.I' → logprob: -6.185604095458984
    6. 'IL' → logprob: -7.435604095458984
    7. '.IP' → logprob: -9.060604095458984
    8. ' .' → logprob: -9.560604095458984
    9. 'ILS' → logprob: -9.935604095458984
    10. '	IL' → logprob: -10.060604095458984

Token 634: 'IL' (ID: 2654)
  Prédit: 'IL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.0022846683859825134
    2. 'ILS' → logprob: -6.127284526824951
    3. 'I' → logprob: -9.37728500366211
    4. 'S' → logprob: -12.00228500366211
    5. '	IL' → logprob: -12.75228500366211
    6. 'ILL' → logprob: -13.50228500366211
    7. '_IL' → logprob: -13.87728500366211
    8. 'ILI' → logprob: -14.25228500366211
    9. 'ILT' → logprob: -14.25228500366211
    10. ' IL' → logprob: -14.37728500366211

Token 635: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.8889261304575484e-06
    2. '()
' → logprob: -12.750003814697266
    3. '()]' → logprob: -15.250003814697266
    4. ' ()' → logprob: -15.375003814697266
    5. '().' → logprob: -15.875003814697266
    6. '(' → logprob: -16.250003814697266
    7. '()

' → logprob: -16.875003814697266
    8. '())' → logprob: -16.875003814697266
    9. '(),' → logprob: -17.000003814697266
    10. '()[' → logprob: -17.875003814697266

Token 636: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016529252752661705
    2. '    
' → logprob: -7.001652717590332
    3. 'p' → logprob: -7.876652717590332
    4. '
' → logprob: -8.751652717590332
    5. 'c' → logprob: -9.751652717590332
    6. '<|end|>' → logprob: -10.001652717590332
    7. ' p' → logprob: -10.376652717590332
    8. 's' → logprob: -10.876652717590332
    9. 'if' → logprob: -11.876652717590332
    10. 'for' → logprob: -11.876652717590332

Token 637: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7716104984283447
    2. 'p' → logprob: -1.3966104984283447
    3. 'if' → logprob: -2.3966104984283447
    4. 'for' → logprob: -2.5216104984283447
    5. 's' → logprob: -2.8966104984283447
    6. 'res' → logprob: -3.8966104984283447
    7. '   ' → logprob: -4.396610260009766
    8. 'print' → logprob: -4.896610260009766
    9. 'r' → logprob: -5.146610260009766
    10. 'result' → logprob: -5.271610260009766

Token 638: ' ' (ID: 220)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9236837029457092
    2. ' if' → logprob: -1.4236836433410645
    3. 'p' → logprob: -2.2986836433410645
    4. ' for' → logprob: -2.6736836433410645
    5. 'for' → logprob: -2.7986836433410645
    6. ' res' → logprob: -3.6736836433410645
    7. ' p' → logprob: -4.1736836433410645
    8. '   ' → logprob: -4.4236836433410645
    9. 'c' → logprob: -4.4236836433410645
    10. 'res' → logprob: -4.6736836433410645

Token 639: '2' (ID: 17)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09023480862379074
    2. 'p' → logprob: -3.3402347564697266
    3. 'c' → logprob: -4.215234756469727
    4. 's' → logprob: -4.465234756469727
    5. 'for' → logprob: -4.715234756469727
    6. 'res' → logprob: -5.215234756469727
    7. 'result' → logprob: -5.840234756469727
    8. 'diff' → logprob: -6.465234756469727
    9. 'print' → logprob: -6.590234756469727
    10. 'dp' → logprob: -6.965234756469727

Token 640: '回' (ID: 10154)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3222363591194153
    2. 'a' → logprob: -3.0722362995147705
    3. '**' → logprob: -3.0722362995147705
    4. '*a' → logprob: -3.1972362995147705
    5. ' *' → logprob: -3.3222362995147705
    6. '   ' → logprob: -3.9472362995147705
    7. ' ' → logprob: -4.32223653793335
    8. '
' → logprob: -4.57223653793335
    9. ' a' → logprob: -4.94723653793335
    10. 'p' → logprob: -4.94723653793335

Token 641: '取り' (ID: 129758)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7681171894073486
    2. 'a' → logprob: -1.3931171894073486
    3. 'for' → logprob: -2.1431171894073486
    4. 'の' → logprob: -3.1431171894073486
    5. '目' → logprob: -3.8931171894073486
    6. ' for' → logprob: -4.0181169509887695
    7. 'p' → logprob: -4.3931169509887695
    8. 'b' → logprob: -4.7681169509887695
    9. '分' → logprob: -4.8931169509887695
    10. 'e' → logprob: -5.3931169509887695

Token 642: '出' (ID: 6390)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.310836911201477
    2. '合' → logprob: -1.435836911201477
    3. '分' → logprob: -2.1858367919921875
    4. 'あ' → logprob: -2.5608367919921875
    5. '出' → logprob: -2.9358367919921875
    6. '消' → logprob: -3.0608367919921875
    7. '込み' → logprob: -3.3108367919921875
    8. '戻' → logprob: -3.4358367919921875
    9. 'p' → logprob: -3.8108367919921875
    10. 'う' → logprob: -4.0608367919921875

Token 643: 'す' (ID: 4868)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8666754364967346
    2. 'す' → logprob: -1.1166753768920898
    3. 'し' → logprob: -1.6166753768920898
    4. 'して' → logprob: -3.74167537689209
    5. 's' → logprob: -4.49167537689209
    6. 'した' → logprob: -4.61667537689209
    7. 'p' → logprob: -6.49167537689209
    8. 'て' → logprob: -6.74167537689209
    9. 'た' → logprob: -6.86667537689209
    10. '```' → logprob: -7.61667537689209

Token 644: '最大' (ID: 44721)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5307372212409973
    2. ' a' → logprob: -1.7807371616363525
    3. ' for' → logprob: -2.9057371616363525
    4. 'for' → logprob: -3.2807371616363525
    5. 'c' → logprob: -3.6557371616363525
    6. 'p' → logprob: -4.405737400054932
    7. ' c' → logprob: -4.530737400054932
    8. '#' → logprob: -4.655737400054932
    9. ' p' → logprob: -4.655737400054932
    10. 's' → logprob: -4.780737400054932

Token 645: '値' (ID: 69555)
  Prédit: '値'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '値' → logprob: -0.6887037754058838
    2. '和' → logprob: -1.8137037754058838
    3. 'の' → logprob: -2.313703775405884
    4. 'a' → logprob: -2.688703775405884
    5. '数' → logprob: -3.438703775405884
    6. 'and' → logprob: -4.063703536987305
    7. 'sum' → logprob: -4.188703536987305
    8. '得' → logprob: -4.313703536987305
    9. 'value' → logprob: -4.563703536987305
    10. '回' → logprob: -4.688703536987305

Token 646: '計' (ID: 37662)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2742064893245697
    2. '   ' → logprob: -2.0242063999176025
    3. ',' → logprob: -3.5242063999176025
    4. 'a' → logprob: -3.5242063999176025
    5. 'max' → logprob: -4.149206638336182
    6. ' a' → logprob: -4.399206638336182
    7. ' max' → logprob: -4.649206638336182
    8. '=' → logprob: -5.774206638336182
    9. ' ,' → logprob: -6.524206638336182
    10. 'c' → logprob: -7.274206638336182

Token 647: '算' (ID: 16727)
  Prédit: '算'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '算' → logprob: -0.0076309931464493275
    2. '```' → logprob: -6.257630825042725
    3. 'を' → logprob: -6.882630825042725
    4. 'a' → logprob: -6.882630825042725
    5. '測' → logprob: -7.382630825042725
    6. 'は' → logprob: -7.382630825042725
    7. 'def' → logprob: -7.632630825042725
    8. 'め' → logprob: -8.882631301879883
    9. '得' → logprob: -8.882631301879883
    10. '算法' → logprob: -9.007631301879883

Token 648: 'の' (ID: 3385)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002991847461089492
    2. 's' → logprob: -7.627991676330566
    3. 'c' → logprob: -7.752991676330566
    4. 'max' → logprob: -7.877991676330566
    5. ',' → logprob: -8.377991676330566
    6. '#' → logprob: -8.502991676330566
    7. ' =' → logprob: -8.627991676330566
    8. '
' → logprob: -8.627991676330566
    9. '    
' → logprob: -9.002991676330566
    10. ' max' → logprob: -9.252991676330566

Token 649: '最' (ID: 5889)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9093891978263855
    2. '#' → logprob: -2.0343892574310303
    3. 'res' → logprob: -2.6593892574310303
    4. 'dp' → logprob: -2.7843892574310303
    5. 'ans' → logprob: -3.5343892574310303
    6. 'c' → logprob: -3.5343892574310303
    7. 'print' → logprob: -3.6593892574310303
    8. 'max' → logprob: -3.7843892574310303
    9. '...' → logprob: -4.159389019012451
    10. 'result' → logprob: -4.159389019012451

Token 650: '短' (ID: 40730)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4580365419387817
    2. '```' → logprob: -2.083036422729492
    3. '   ' → logprob: -2.458036422729492
    4. 'value' → logprob: -2.708036422729492
    5. '案' → logprob: -3.083036422729492
    6. '計' → logprob: -3.208036422729492
    7. '値' → logprob: -3.208036422729492
    8. '算' → logprob: -3.458036422729492
    9. '#' → logprob: -3.458036422729492
    10. 'def' → logprob: -3.708036422729492

Token 651: '化' (ID: 11415)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -1.4838167428970337
    2. 'a' → logprob: -2.108816623687744
    3. 'dist' → logprob: -2.483816623687744
    4. ' =' → logprob: -2.483816623687744
    5. 'def' → logprob: -2.858816623687744
    6. 'for' → logprob: -2.983816623687744
    7. 'dp' → logprob: -2.983816623687744
    8. '   ' → logprob: -3.108816623687744
    9. 'steps' → logprob: -3.108816623687744
    10. 's' → logprob: -3.358816623687744

Token 652: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011845153057947755
    2. '    
' → logprob: -7.626184463500977
    3. '
' → logprob: -8.376184463500977
    4. '<|end|>' → logprob: -8.626184463500977
    5. 's' → logprob: -9.751184463500977
    6. 'def' → logprob: -9.876184463500977
    7. '<|end|>' → logprob: -10.251184463500977
    8. ',' → logprob: -10.251184463500977
    9. ')' → logprob: -10.376184463500977
    10. 'a' → logprob: -11.376184463500977

Token 653: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013329879380762577
    2. '<|end|>' → logprob: -4.638329982757568
    3. '    ' → logprob: -6.513329982757568
    4. '    
' → logprob: -6.888329982757568
    5. '
' → logprob: -8.13832950592041
    6. ')' → logprob: -8.88832950592041
    7. '<|end|>' → logprob: -9.01332950592041
    8. '...' → logprob: -9.26332950592041
    9. '#' → logprob: -9.26332950592041
    10. '```' → logprob: -9.51332950592041

Token 654: ' ans' (ID: 3345)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.6888600587844849
    2. 'c' → logprob: -1.6888600587844849
    3. '   ' → logprob: -2.3138599395751953
    4. ' dp' → logprob: -2.6888599395751953
    5. 'a' → logprob: -3.5638599395751953
    6. 'def' → logprob: -4.313859939575195
    7. 'm' → logprob: -4.438859939575195
    8. 'for' → logprob: -4.563859939575195
    9. 's' → logprob: -4.563859939575195
    10. 'max' → logprob: -4.813859939575195

Token 655: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0233137309551239
    2. '=' → logprob: -3.7733137607574463
    3. ',' → logprob: -10.273313522338867
    4. ' ' → logprob: -11.148313522338867
    5. '   ' → logprob: -12.148313522338867
    6. 'a' → logprob: -12.523313522338867
    7. '_' → logprob: -13.273313522338867
    8. '1' → logprob: -13.648313522338867
    9. '＝' → logprob: -13.648313522338867
    10. 'max' → logprob: -14.523313522338867

Token 656: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.037655703723430634
    2. '0' → logprob: -4.162655830383301
    3. 'a' → logprob: -4.787655830383301
    4. ' max' → logprob: -5.037655830383301
    5. '(max' → logprob: -5.412655830383301
    6. '-' → logprob: -7.537655830383301
    7. 'b' → logprob: -7.912655830383301
    8. 'float' → logprob: -8.1626558303833
    9. 'Idea' → logprob: -8.9126558303833
    10. 'id' → logprob: -9.0376558303833

Token 657: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.005705161485821009
    2. '(' → logprob: -6.1307053565979
    3. '([' → logprob: -6.3807053565979
    4. 'a' → logprob: -6.8807053565979
    5. '((' → logprob: -8.005704879760742
    6. '(
' → logprob: -8.505704879760742
    7. '(ans' → logprob: -8.880704879760742
    8. '(max' → logprob: -9.505704879760742
    9. '(b' → logprob: -11.255704879760742
    10. '[a' → logprob: -11.755704879760742

Token 658: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.039687637239694595
    2. ',b' → logprob: -3.7896876335144043
    3. ' ,' → logprob: -4.664687633514404
    4. ' +' → logprob: -6.289687633514404
    5. '+' → logprob: -6.539687633514404
    6. '+b' → logprob: -6.539687633514404
    7. ' -' → logprob: -7.164687633514404
    8. '-' → logprob: -7.914687633514404
    9. 'a' → logprob: -8.539688110351562
    10. ',a' → logprob: -8.789688110351562

Token 659: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.027489423751831055
    2. ' b' → logprob: -3.777489423751831
    3. 'a' → logprob: -5.52748966217041
    4. ' a' → logprob: -8.77748966217041
    5. 'p' → logprob: -10.65248966217041
    6. ' ' → logprob: -10.77748966217041
    7. 'max' → logprob: -12.02748966217041
    8. '   ' → logprob: -12.02748966217041
    9. '(a' → logprob: -12.27748966217041
    10. '(b' → logprob: -12.40248966217041

Token 660: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.036750856786966324
    2. ',' → logprob: -3.9117507934570312
    3. ' )' → logprob: -4.786750793457031
    4. ' +' → logprob: -5.411750793457031
    5. '+' → logprob: -6.286750793457031
    6. ' ,' → logprob: -7.161750793457031
    7. '))' → logprob: -8.661750793457031
    8. ')+' → logprob: -9.036750793457031
    9. ')
' → logprob: -9.411750793457031
    10. '   ' → logprob: -9.536750793457031

Token 661: '   ' (ID: 271)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5593437552452087
    2. '   ' → logprob: -0.9343437552452087
    3. ',' → logprob: -4.3093438148498535
    4. '
' → logprob: -4.9343438148498535
    5. ' p' → logprob: -5.1843438148498535
    6. '<|end|>' → logprob: -6.0593438148498535
    7. ',p' → logprob: -6.3093438148498535
    8. 'print' → logprob: -6.5593438148498535
    9. ',
' → logprob: -6.6843438148498535
    10. '    
' → logprob: -8.184343338012695

Token 662: ' ans' (ID: 3345)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 663: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -1.1570271253585815
    2. '+=' → logprob: -1.1570271253585815
    3. '=' → logprob: -2.282027244567871
    4. '<|end|>' → logprob: -2.782027244567871
    5. '%=' → logprob: -3.032027244567871
    6. ',' → logprob: -3.157027244567871
    7. ' <<=' → logprob: -3.657027244567871
    8. ' =' → logprob: -3.907027244567871
    9. ' %=' → logprob: -3.907027244567871
    10. '.' → logprob: -4.407027244567871

Token 664: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.606760561466217
    2. 'a' → logprob: -1.1067605018615723
    3. ' max' → logprob: -2.4817605018615723
    4. 'p' → logprob: -4.356760501861572
    5. 'b' → logprob: -4.981760501861572
    6. ' a' → logprob: -5.106760501861572
    7. 'min' → logprob: -5.731760501861572
    8. 'ip' → logprob: -6.106760501861572
    9. 'id' → logprob: -6.106760501861572
    10. 'mod' → logprob: -6.481760501861572

Token 665: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0002467966405674815
    2. '(' → logprob: -9.25024700164795
    3. '([' → logprob: -9.50024700164795
    4. 'a' → logprob: -10.00024700164795
    5. '((' → logprob: -10.87524700164795
    6. '(max' → logprob: -12.62524700164795
    7. '(ans' → logprob: -12.75024700164795
    8. '(b' → logprob: -13.12524700164795
    9. '(p' → logprob: -14.75024700164795
    10. '(ip' → logprob: -15.25024700164795

Token 666: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011474057100713253
    2. ' ,' → logprob: -4.511474132537842
    3. ',b' → logprob: -7.886474132537842
    4. 'b' → logprob: -11.261473655700684
    5. ' +' → logprob: -11.761473655700684
    6. ',
' → logprob: -12.261473655700684
    7. '+' → logprob: -12.386473655700684
    8. ',p' → logprob: -12.511473655700684
    9. '   ' → logprob: -13.261473655700684
    10. ' ' → logprob: -13.261473655700684

Token 667: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10835114866495132
    2. 'p' → logprob: -2.858351230621338
    3. 'b' → logprob: -3.733351230621338
    4. ' ' → logprob: -4.858351230621338
    5. ' p' → logprob: -5.108351230621338
    6. ' b' → logprob: -6.233351230621338
    7. '2' → logprob: -6.358351230621338
    8. 'e' → logprob: -6.358351230621338
    9. '0' → logprob: -7.358351230621338
    10. ' e' → logprob: -7.733351230621338

Token 668: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008915711659938097
    2. ' ,' → logprob: -7.25089168548584
    3. ',b' → logprob: -8.75089168548584
    4. ')' → logprob: -11.62589168548584
    5. ',
' → logprob: -11.87589168548584
    6. 'b' → logprob: -12.62589168548584
    7. '),' → logprob: -14.25089168548584
    8. '0' → logprob: -14.37589168548584
    9. ',p' → logprob: -14.37589168548584
    10. '+' → logprob: -14.50089168548584

Token 669: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4912150204181671
    2. ' b' → logprob: -0.9912149906158447
    3. '0' → logprob: -4.241215229034424
    4. ' ' → logprob: -5.991215229034424
    5. '1' → logprob: -10.116214752197266
    6. 'p' → logprob: -11.616214752197266
    7. ')b' → logprob: -11.741214752197266
    8. 'a' → logprob: -11.991214752197266
    9. ' p' → logprob: -12.116214752197266
    10. ',' → logprob: -12.366214752197266

Token 670: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0032870364375412464
    2. ' -' → logprob: -5.753286838531494
    3. ',' → logprob: -9.253287315368652
    4. ')' → logprob: -11.753287315368652
    5. '1' → logprob: -13.378287315368652
    6. '0' → logprob: -13.628287315368652
    7. '<|end|>' → logprob: -13.878287315368652
    8. ' ' → logprob: -14.378287315368652
    9. '<|end|>' → logprob: -14.753287315368652
    10. ' ,' → logprob: -15.253287315368652

Token 671: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009976790752261877
    2. '0' → logprob: -7.000997543334961
    3. ' ' → logprob: -9.375997543334961
    4. '2' → logprob: -14.500997543334961
    5. '```' → logprob: -14.750997543334961
    6. '-' → logprob: -15.625997543334961
    7. '<|end|>' → logprob: -16.12599754333496
    8. ')' → logprob: -16.31349754333496
    9. '   ' → logprob: -16.68849754333496
    10. '!' → logprob: -17.68849754333496

Token 672: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005331589840352535
    2. ')
' → logprob: -5.255331516265869
    3. '   ' → logprob: -9.505331993103027
    4. ' )' → logprob: -11.630331993103027
    5. ',' → logprob: -12.255331993103027
    6. ')
' → logprob: -12.755331993103027
    7. ')

' → logprob: -14.005331993103027
    8. '))' → logprob: -14.130331993103027
    9. ')+' → logprob: -14.380331993103027
    10. '),' → logprob: -14.505331993103027

Token 673: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5094784498214722
    2. '
' → logprob: -1.3844784498214722
    3. '<|end|>' → logprob: -2.6344785690307617
    4. 'p' → logprob: -3.1344785690307617
    5. ')' → logprob: -3.6344785690307617
    6. ' p' → logprob: -6.009478569030762
    7. ',' → logprob: -6.884478569030762
    8. ',p' → logprob: -7.134478569030762
    9. ')
' → logprob: -7.509478569030762
    10. '```' → logprob: -7.634478569030762

Token 674: ' p' (ID: 275)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3978780508041382
    2. '   ' → logprob: -1.5228780508041382
    3. '<|end|>' → logprob: -2.2728781700134277
    4. 'p' (adapté à ' p') → logprob: -6.022878170013428
    5. ')' → logprob: -6.272878170013428
    6. ' p' → logprob: -6.522878170013428
    7. '```' → logprob: -7.397878170013428
    8. '    
' → logprob: -8.64787769317627
    9. '<|end|>' → logprob: -9.14787769317627
    10. ' ' → logprob: -9.27287769317627

Token 675: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00015383612480945885
    2. '(' → logprob: -8.875153541564941
    3. 'ans' → logprob: -11.750153541564941
    4. '(f' → logprob: -12.250153541564941
    5. '(a' → logprob: -15.625153541564941
    6. '(int' → logprob: -15.750153541564941
    7. '(an' → logprob: -15.750153541564941
    8. '(args' → logprob: -16.000154495239258
    9. '()' → logprob: -16.000154495239258
    10. ' (' → logprob: -16.375154495239258

Token 676: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023679454170633107
    2. '())' → logprob: -9.000236511230469
    3. '()' → logprob: -9.125236511230469
    4. '(' → logprob: -13.125236511230469
    5. ' )' → logprob: -14.250236511230469
    6. '))' → logprob: -14.250236511230469
    7. '   ' → logprob: -14.625236511230469
    8. ')`' → logprob: -14.625236511230469
    9. ')
' → logprob: -16.37523651123047
    10. '')' → logprob: -17.62523651123047

Token 677: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13219450414180756
    2. '<|end|>' → logprob: -2.5071945190429688
    3. '#' → logprob: -3.5071945190429688
    4. ')' → logprob: -5.382194519042969
    5. '.' → logprob: -5.757194519042969
    6. 'main' → logprob: -6.507194519042969
    7. '```' → logprob: -7.507194519042969
    8. ' if' → logprob: -7.882194519042969
    9. '
' → logprob: -7.882194519042969
    10. '...' → logprob: -8.007194519042969

Token 678: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 676
Tokens correctement prédits (1ère position, stricte): 236
Tokens correctement prédits (1ère position, avec adaptation): 267
Tokens correctement prédits (top 10): 521
Précision stricte (1ère position): 34.91%
Précision adaptée (1ère position): 39.50%
Précision (top 10): 77.07%
================================================================================
