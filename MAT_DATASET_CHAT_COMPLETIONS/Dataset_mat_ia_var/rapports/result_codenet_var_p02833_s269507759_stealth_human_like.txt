================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# On va demander un entier à l'utilisateur, tout simplement.
n = int(input())
ans = 0

if n == 0:
    ans = 0  # Bon on fait rien si c'est zéro
elif n % 2 != 0:  # Je crois bien que si c'est impair y a un souci
    ans = 0
else:
    power = 10
    while power <= n:
        ans = ans + (n // power) # On monte la puissance à chaque fois (par 5 ou plutôt par 10 ?)
        # power *= 10  # attendez non, c'était 5 dans l'autre code...
        power = power * 5

print(ans)  # voilà le résultat, normalement
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' On' (ID: 2160)
  → Token d'amorce (pas de prédiction)

Token 2: ' va' (ID: 3423)
  → Token d'amorce (pas de prédiction)

Token 3: ' demander' (ID: 60771)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21541373431682587
    2. ' créer' → logprob: -2.590413808822632
    3. ' faire' → logprob: -3.465413808822632
    4. ' continuer' → logprob: -4.590413570404053
    5. 'l' → logprob: -4.840413570404053
    6. '```' → logprob: -4.965413570404053
    7. 'faire' → logprob: -5.340413570404053
    8. '  ' → logprob: -5.340413570404053
    9. ' ajouter' → logprob: -5.590413570404053
    10. ' écrire' → logprob: -5.590413570404053

Token 4: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33067312836647034
    2. '_' → logprob: -2.2056732177734375
    3. ' à' → logprob: -2.4556732177734375
    4. ' au' → logprob: -4.3306732177734375
    5. 'à' → logprob: -4.4556732177734375
    6. 'au' → logprob: -4.8306732177734375
    7. ':' → logprob: -4.8306732177734375
    8. ' #' → logprob: -5.4556732177734375
    9. ' :' → logprob: -5.4556732177734375
    10. '```' → logprob: -5.5806732177734375

Token 5: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.086042881011963
    2. 'util' → logprob: -1.961042881011963
    3. 'e' → logprob: -2.211042881011963
    4. 'nom' → logprob: -2.461042881011963
    5. 's' → logprob: -3.211042881011963
    6. 'f' → logprob: -3.211042881011963
    7. 'input' → logprob: -3.461042881011963
    8. 'nombre' → logprob: -3.461042881011963
    9. 'n' → logprob: -3.836042881011963
    10. 'é' → logprob: -3.961042881011963

Token 6: ' à' (ID: 1221)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9880372881889343
    2. 'x' → logprob: -1.238037347793579
    3. 'i' → logprob: -2.238037347793579
    4. 'e' → logprob: -2.738037347793579
    5. 'ent' → logprob: -2.863037347793579
    6. '=' → logprob: -3.363037347793579
    7. '#' → logprob: -3.863037347793579
    8. '`' → logprob: -4.738037109375
    9. 'entr' → logprob: -4.988037109375
    10. '_' → logprob: -5.238037109375

Token 7: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.006559174973517656
    2. ' l' → logprob: -5.131559371948242
    3. '	l' → logprob: -7.756559371948242
    4. ' ' → logprob: -10.381559371948242
    5. 'util' → logprob: -10.506559371948242
    6. '```' → logprob: -11.006559371948242
    7. ''utilisateur' → logprob: -11.131559371948242
    8. '#' → logprob: -11.381559371948242
    9. 'user' → logprob: -11.506559371948242
    10. 'la' → logprob: -11.506559371948242

Token 8: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.027470635250210762
    2. '’utilisateur' → logprob: -4.652470588684082
    3. ''' → logprob: -4.777470588684082
    4. 'u' → logprob: -5.152470588684082
    5. ''us' → logprob: -7.027470588684082
    6. 'a' → logprob: -7.277470588684082
    7. 'e' → logprob: -7.652470588684082
    8. ' utilisateur' → logprob: -8.152470588684082
    9. ''util' → logprob: -8.402470588684082
    10. '')' → logprob: -8.652470588684082

Token 9: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06769688427448273
    2. 'i' → logprob: -3.5676968097686768
    3. 'x' → logprob: -4.317697048187256
    4. 'e' → logprob: -4.692697048187256
    5. '`' → logprob: -5.567697048187256
    6. 'ent' → logprob: -5.692697048187256
    7. '```' → logprob: -6.067697048187256
    8. '\n' → logprob: -6.567697048187256
    9. '#' → logprob: -7.567697048187256
    10. '_' → logprob: -8.067696571350098

Token 10: ' tout' (ID: 5501)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2839539647102356
    2. ' n' → logprob: -1.7839539051055908
    3. 'r' → logprob: -4.40895414352417
    4. 'ent' → logprob: -4.53395414352417
    5. ' ' → logprob: -4.78395414352417
    6. 'input' → logprob: -4.78395414352417
    7. ' input' → logprob: -5.28395414352417
    8. 's' → logprob: -5.28395414352417
    9. 'x' → logprob: -5.53395414352417
    10. ' `' → logprob: -5.78395414352417

Token 11: ' simplement' (ID: 45065)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9783329963684082
    2. 's' → logprob: -1.6033329963684082
    3. '```' → logprob: -2.228332996368408
    4. 'es' → logprob: -2.728332996368408
    5. ' simplement' → logprob: -3.728332996368408
    6. 'space' → logprob: -3.853332996368408
    7. '  ' → logprob: -3.978332996368408
    8. 'd' → logprob: -3.978332996368408
    9. ' à' → logprob: -3.978332996368408
    10. '#' → logprob: -4.228332996368408

Token 12: '.
' (ID: 558)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3919152617454529
    2. 'i' → logprob: -1.8919153213500977
    3. 'e' → logprob: -2.3919153213500977
    4. 'x' → logprob: -3.2669153213500977
    5. 'ent' → logprob: -3.7669153213500977
    6. ' ' → logprob: -5.641915321350098
    7. '#' → logprob: -5.641915321350098
    8. '```' → logprob: -5.766915321350098
    9. 'entr' → logprob: -6.016915321350098
    10. '`' → logprob: -6.766915321350098

Token 13: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012716127559542656
    2. 'ent' → logprob: -5.012716293334961
    3. 'x' → logprob: -5.762716293334961
    4. 'nombre' → logprob: -6.387716293334961
    5. '```' → logprob: -7.762716293334961
    6. '#' → logprob: -9.012716293334961
    7. 'i' → logprob: -9.137716293334961
    8. 'num' → logprob: -9.637716293334961
    9. '\n' → logprob: -9.637716293334961
    10. '`' → logprob: -9.637716293334961

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08976589888334274
    2. '=' → logprob: -3.089765787124634
    3. ' ' → logprob: -3.214765787124634
    4. '  ' → logprob: -10.214765548706055
    5. 'u' → logprob: -10.714765548706055
    6. '_' → logprob: -11.089765548706055
    7. ',' → logprob: -11.214765548706055
    8. '=int' → logprob: -11.214765548706055
    9. '=input' → logprob: -11.589765548706055
    10. 'e' → logprob: -11.714765548706055

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.030962815508246422
    2. 'int' → logprob: -3.5309627056121826
    3. ' input' → logprob: -6.780962944030762
    4. 'input' → logprob: -9.655962944030762
    5. ' ' → logprob: -11.655962944030762
    6. '=int' → logprob: -13.155962944030762
    7. ' ' → logprob: -13.530962944030762
    8. '	int' → logprob: -16.405961990356445
    9. '(int' → logprob: -16.655961990356445
    10. '  ' → logprob: -16.905961990356445

Token 16: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.2519476115703583
    2. '(' → logprob: -1.5019476413726807
    3. 'input' → logprob: -11.876947402954102
    4. '(
' → logprob: -12.376947402954102
    5. ' (' → logprob: -12.751947402954102
    6. '()' → logprob: -13.376947402954102
    7. '(

' → logprob: -13.626947402954102
    8. '('' → logprob: -14.126947402954102
    9. '(raw' → logprob: -14.876947402954102
    10. '(user' → logprob: -16.1269474029541

Token 17: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011441408656537533
    2. '('' → logprob: -4.886441230773926
    3. '()' → logprob: -5.761441230773926
    4. '("("' → logprob: -8.386441230773926
    5. '(""))' → logprob: -9.136441230773926
    6. '("")' → logprob: -9.511441230773926
    7. '("' → logprob: -9.511441230773926
    8. '())' → logprob: -9.636441230773926
    9. ')' → logprob: -9.761441230773926
    10. '(
' → logprob: -10.511441230773926

Token 18: 'ans' (ID: 616)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6630650162696838
    2. '+' → logprob: -1.413064956665039
    3. 'if' → logprob: -2.038064956665039
    4. ')' → logprob: -3.538064956665039
    5. ' if' → logprob: -3.913064956665039
    6. '*' → logprob: -4.038064956665039
    7. '#' → logprob: -4.538064956665039
    8. '<|end|>' → logprob: -5.038064956665039
    9. 'n' → logprob: -5.788064956665039
    10. 'i' → logprob: -5.913064956665039

Token 19: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14872072637081146
    2. '+' → logprob: -2.6487207412719727
    3. '[' → logprob: -3.6487207412719727
    4. ' +' → logprob: -4.398720741271973
    5. ' =' → logprob: -4.398720741271973
    6. ')' → logprob: -5.398720741271973
    7. '=' → logprob: -5.648720741271973
    8. '_' → logprob: -6.273720741271973
    9. ' +=' → logprob: -6.398720741271973
    10. ' (' → logprob: -7.148720741271973

Token 20: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8244252800941467
    2. ' n' → logprob: -1.324425220489502
    3. ' ' → logprob: -1.949425220489502
    4. 'n' → logprob: -2.074425220489502
    5. '"' → logprob: -4.574425220489502
    6. '1' → logprob: -5.199425220489502
    7. ''' → logprob: -5.199425220489502
    8. ' "' → logprob: -6.574425220489502
    9. ' '' → logprob: -6.699425220489502
    10. ' input' → logprob: -7.074425220489502

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7416894435882568
    2. 'n' → logprob: -0.7416894435882568
    3. '1' → logprob: -3.241689443588257
    4. 'input' → logprob: -6.366689682006836
    5. 'abs' → logprob: -7.116689682006836
    6. '(n' → logprob: -7.366689682006836
    7. '"' → logprob: -7.366689682006836
    8. ' n' → logprob: -7.616689682006836
    9. 'str' → logprob: -7.616689682006836
    10. '""' → logprob: -7.741689682006836

Token 22: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0632755756378174
    2. ' for' → logprob: -1.3132755756378174
    3. ' ' → logprob: -1.8132755756378174
    4. '+' → logprob: -1.8132755756378174
    5. '<|end|>' → logprob: -3.9382755756378174
    6. ' 
' → logprob: -3.9382755756378174
    7. '
' → logprob: -5.563275337219238
    8. 'n' → logprob: -5.688275337219238
    9. '*' → logprob: -5.813275337219238
    10. 'if' → logprob: -6.563275337219238

Token 23: 'if' (ID: 366)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48647642135620117
    2. 'for' → logprob: -1.7364764213562012
    3. ' ' → logprob: -2.111476421356201
    4. '+' → logprob: -2.861476421356201
    5. '
' → logprob: -4.861476421356201
    6. ' 
' → logprob: -5.486476421356201
    7. '```' → logprob: -5.861476421356201
    8. '<|end|>' → logprob: -5.861476421356201
    9. '\n' → logprob: -6.111476421356201
    10. '*' → logprob: -6.486476421356201

Token 24: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1441204994916916
    2. ' ' → logprob: -2.019120454788208
    3. 'n' → logprob: -6.644120693206787
    4. ' ' → logprob: -8.894120216369629
    5. ' (' → logprob: -13.519120216369629
    6. '  ' → logprob: -13.644120216369629
    7. ' not' → logprob: -14.394120216369629
    8. ' )' → logprob: -14.519120216369629
    9. ' ‌' → logprob: -15.269120216369629
    10. '	n' → logprob: -15.519120216369629

Token 25: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.0615234412252903
    2. ' ' → logprob: -3.9365234375
    3. ' %' → logprob: -3.9365234375
    4. ' ==' → logprob: -5.0615234375
    5. ' <=' → logprob: -5.6865234375
    6. '%' → logprob: -5.8115234375
    7. '>' → logprob: -5.8115234375
    8. ' <' → logprob: -6.0615234375
    9. ' >=' → logprob: -6.0615234375
    10. '==' → logprob: -9.5615234375

Token 26: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34129461646080017
    2. '0' → logprob: -1.3412946462631226
    3. '1' → logprob: -3.591294527053833
    4. '2' → logprob: -10.216294288635254
    5. '4' → logprob: -11.966294288635254
    6. '5' → logprob: -11.966294288635254
    7. '3' → logprob: -12.091294288635254
    8. '10' → logprob: -12.341294288635254
    9. ' n' → logprob: -12.591294288635254
    10. '  ' → logprob: -12.841294288635254

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3311804234981537
    2. ' ' → logprob: -1.581180453300476
    3. '1' → logprob: -2.5811803340911865
    4. '2' → logprob: -8.081180572509766
    5. '5' → logprob: -10.206180572509766
    6. '3' → logprob: -10.206180572509766
    7. '4' → logprob: -10.331180572509766
    8. '7' → logprob: -10.956180572509766
    9. '42' → logprob: -10.956180572509766
    10. '10' → logprob: -11.206180572509766

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00043710620957426727
    2. ' :' → logprob: -7.750437259674072
    3. ':
' → logprob: -12.000436782836914
    4. ':**' → logprob: -15.750436782836914
    5. ' :
' → logprob: -16.750436782836914
    6. '):' → logprob: -16.875436782836914
    7. ':return' → logprob: -17.250436782836914
    8. '+:' → logprob: -17.875436782836914
    9. ' or' → logprob: -18.625436782836914
    10. '：' → logprob: -18.625436782836914

Token 29: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4517208933830261
    2. '    ' → logprob: -2.076720952987671
    3. '\n' → logprob: -2.826720952987671
    4. ' 
' → logprob: -3.076720952987671
    5. '\' → logprob: -3.451720952987671
    6. '   ' → logprob: -3.826720952987671
    7. ' :' → logprob: -4.201720714569092
    8. ' \' → logprob: -4.701720714569092
    9. ':' → logprob: -4.826720714569092
    10. ' pass' → logprob: -5.076720714569092

Token 30: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5293213725090027
    2. ' pass' → logprob: -1.1543214321136475
    3. ' ' → logprob: -2.7793214321136475
    4. ' print' → logprob: -4.154321193695068
    5. 'pass' → logprob: -5.404321193695068
    6. '0' → logprob: -5.654321193695068
    7. '    ' → logprob: -6.029321193695068
    8. 'print' → logprob: -6.279321193695068
    9. ' n' → logprob: -6.529321193695068
    10. '   ' → logprob: -7.029321193695068

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09473637491464615
    2. ' +=' → logprob: -2.844736337661743
    3. '=' → logprob: -3.469736337661743
    4. '+=' → logprob: -6.844736576080322
    5. ' ' → logprob: -10.469736099243164
    6. ' ==' → logprob: -12.219736099243164
    7. '<|end|>' → logprob: -12.719736099243164
    8. ' |=' → logprob: -12.969736099243164
    9. '+' → logprob: -13.094736099243164
    10. '  ' → logprob: -13.969736099243164

Token 32: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.298563688993454
    2. '0' → logprob: -2.0485637187957764
    3. ' ' → logprob: -2.0485637187957764
    4. 'n' → logprob: -9.298563957214355
    5. ' n' → logprob: -9.423563957214355
    6. '"' → logprob: -10.548563957214355
    7. '   ' → logprob: -10.673563957214355
    8. '10' → logprob: -11.923563957214355
    9. '2' → logprob: -12.236063957214355
    10. ' True' → logprob: -12.236063957214355

Token 33: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25263723731040955
    2. '0' → logprob: -1.502637267112732
    3. ' ' → logprob: -7.7526373863220215
    4. 'n' → logprob: -9.002636909484863
    5. '"' → logprob: -9.252636909484863
    6. ''' → logprob: -11.127636909484863
    7. '2' → logprob: -11.752636909484863
    8. '-' → logprob: -12.002636909484863
    9. 'a' → logprob: -12.690136909484863
    10. '   ' → logprob: -12.752636909484863

Token 34: ' ' (ID: 220)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.8238109946250916
    2. 'elif' → logprob: -1.3238110542297363
    3. '
' → logprob: -1.6988110542297363
    4. ' else' → logprob: -2.8238110542297363
    5. '<|end|>' → logprob: -3.1988110542297363
    6. '\n' → logprob: -5.323811054229736
    7. ' elif' → logprob: -5.448811054229736
    8. ' 
' → logprob: -7.573811054229736
    9. '<|end|>' → logprob: -7.948811054229736
    10. 'n' → logprob: -8.198810577392578

Token 35: ' #' (ID: 1069)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.6725521087646484
    2. 'else' → logprob: -0.9225521087646484
    3. '\n' → logprob: -3.4225521087646484
    4. '
' → logprob: -3.5475521087646484
    5. ' else' → logprob: -4.047552108764648
    6. '<|end|>' → logprob: -5.172552108764648
    7. ' elif' → logprob: -5.422552108764648
    8. ';' → logprob: -7.422552108764648
    9. 'n' → logprob: -7.672552108764648
    10. '0' → logprob: -8.172552108764648

Token 36: ' Bon' (ID: 12658)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pass' → logprob: -1.3086867332458496
    2. 'pass' → logprob: -1.3086867332458496
    3. '#' → logprob: -1.9336867332458496
    4. ' ' → logprob: -2.6836867332458496
    5. 'elif' → logprob: -2.9336867332458496
    6. ' else' → logprob: -3.0586867332458496
    7. ' #' → logprob: -3.3086867332458496
    8. 'else' → logprob: -3.8086867332458496
    9. '\n' → logprob: -3.9336867332458496
    10. 'print' → logprob: -4.05868673324585

Token 37: ' on' (ID: 402)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' fait' (ID: 7473)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.636141300201416
    2. 'a' → logprob: -1.761141300201416
    3. 'arr' → logprob: -1.886141300201416
    4. 'continue' → logprob: -2.636141300201416
    5. ' n' → logprob: -3.011141300201416
    6. ' peut' → logprob: -3.136141300201416
    7. 'n' → logprob: -3.386141300201416
    8. 'ne' → logprob: -3.386141300201416
    9. ' a' → logprob: -3.511141300201416
    10. 'pe' → logprob: -3.636141300201416

Token 39: ' rien' (ID: 23082)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4901287257671356
    2. ' rien' → logprob: -0.990128755569458
    3. ' quoi' → logprob: -5.490128517150879
    4. ' ' → logprob: -5.490128517150879
    5. 'quoi' → logprob: -6.990128517150879
    6. ' une' → logprob: -7.115128517150879
    7. 'contin' → logprob: -7.115128517150879
    8. ' r' → logprob: -7.490128517150879
    9. '  ' → logprob: -7.740128517150879
    10. ' nothing' → logprob: -8.115128517150879

Token 40: ' si' (ID: 1784)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.21563898026943207
    2. 'else' → logprob: -1.9656389951705933
    3. ' else' → logprob: -4.090639114379883
    4. ' elif' → logprob: -4.215639114379883
    5. '<|end|>' → logprob: -4.215639114379883
    6. '
' → logprob: -5.590639114379883
    7. '\n' → logprob: -5.965639114379883
    8. 'n' → logprob: -8.215639114379883
    9. '<|end|>' → logprob: -8.215639114379883
    10. 'e' → logprob: -8.715639114379883

Token 41: ' c' (ID: 274)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.13836714625358582
    2. 'n' → logprob: -2.388367176055908
    3. ' l' → logprob: -4.513367176055908
    4. ' on' → logprob: -4.763367176055908
    5. ' c' → logprob: -5.138367176055908
    6. ' ' → logprob: -5.638367176055908
    7. 'l' → logprob: -6.138367176055908
    8. '0' → logprob: -6.388367176055908
    9. 'on' → logprob: -6.763367176055908
    10. 'c' → logprob: -7.138367176055908

Token 42: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.14313292503356934
    2. 'est' → logprob: -2.1431329250335693
    3. ''' → logprob: -5.643133163452148
    4. 'n' → logprob: -5.643133163452148
    5. 'e' → logprob: -5.643133163452148
    6. ''n' → logprob: -6.143133163452148
    7. ' n' → logprob: -6.893133163452148
    8. '0' → logprob: -7.518133163452148
    9. ''s' → logprob: -7.893133163452148
    10. 'a' → logprob: -9.018133163452148

Token 43: ' zéro' (ID: 182040)
  Prédit: ' zéro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zéro' → logprob: -0.3656555712223053
    2. '0' → logprob: -1.615655541419983
    3. ' zero' → logprob: -3.1156556606292725
    4. 'zero' → logprob: -3.7406556606292725
    5. ' ' → logprob: -3.8656556606292725
    6. ' nul' → logprob: -5.615655422210693
    7. 'z' → logprob: -5.740655422210693
    8. ' déjà' → logprob: -6.240655422210693
    9. 'dé' → logprob: -6.365655422210693
    10. 'égal' → logprob: -6.615655422210693

Token 44: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.44265836477279663
    2. 'else' → logprob: -1.1926584243774414
    3. ' else' → logprob: -3.6926584243774414
    4. ' elif' → logprob: -4.692658424377441
    5. '
' → logprob: -4.692658424377441
    6. '<|end|>' → logprob: -4.817658424377441
    7. '\n' → logprob: -6.567658424377441
    8. '.' → logprob: -7.442658424377441
    9. ':' → logprob: -9.067658424377441
    10. ';' → logprob: -9.317658424377441

Token 45: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.3130030035972595
    2. 'else' → logprob: -1.8130030632019043
    3. '
' → logprob: -3.4380030632019043
    4. ' else' → logprob: -3.4380030632019043
    5. '<|end|>' → logprob: -3.8130030632019043
    6. ' elif' → logprob: -4.063003063201904
    7. '\n' → logprob: -6.688003063201904
    8. '<|end|>' → logprob: -8.063002586364746
    9. ' 
' → logprob: -9.438002586364746
    10. 'n' → logprob: -9.563002586364746

Token 46: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.024313542991876602
    2. 'n' → logprob: -3.774313449859619
    3. ' ' → logprob: -6.899313449859619
    4. ' ' → logprob: -10.024313926696777
    5. '  ' → logprob: -12.774313926696777
    6. '   ' → logprob: -12.961813926696777
    7. '	n' → logprob: -13.149313926696777
    8. ' not' → logprob: -14.024313926696777
    9. '0' → logprob: -14.086813926696777
    10. ' (' → logprob: -14.461813926696777

Token 47: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1268603801727295
    2. ' <' → logprob: -2.6268603801727295
    3. '>' → logprob: -3.7518603801727295
    4. '%' → logprob: -4.876860618591309
    5. ' ' → logprob: -4.876860618591309
    6. ' %' → logprob: -5.501860618591309
    7. '<' → logprob: -5.626860618591309
    8. ' ==' → logprob: -8.376860618591309
    9. '==' → logprob: -10.126860618591309
    10. ' ' → logprob: -10.689360618591309

Token 48: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3486255705356598
    2. ' ' → logprob: -1.2236255407333374
    3. '3' → logprob: -9.473625183105469
    4. '1' → logprob: -10.223625183105469
    5. '10' → logprob: -10.848625183105469
    6. '4' → logprob: -11.098625183105469
    7. '==' → logprob: -12.098625183105469
    8. '5' → logprob: -12.223625183105469
    9. '```' → logprob: -12.598625183105469
    10. '6' → logprob: -12.911125183105469

Token 49: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003503264859318733
    2. ' ' → logprob: -6.003503322601318
    3. '3' → logprob: -7.378503322601318
    4. '5' → logprob: -8.87850284576416
    5. '10' → logprob: -9.12850284576416
    6. '4' → logprob: -9.87850284576416
    7. '7' → logprob: -10.12850284576416
    8. '1' → logprob: -10.50350284576416
    9. '6' → logprob: -11.00350284576416
    10. '9' → logprob: -12.50350284576416

Token 50: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.07943782210350037
    2. '==' → logprob: -2.579437732696533
    3. ' ' → logprob: -8.079438209533691
    4. '=' → logprob: -9.329438209533691
    5. ' !=' → logprob: -9.329438209533691
    6. '0' → logprob: -10.829438209533691
    7. ' =' → logprob: -10.954438209533691
    8. ':' → logprob: -11.954438209533691
    9. ' ' → logprob: -12.079438209533691
    10. '!=' → logprob: -12.579438209533691

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6326049566268921
    2. ' ' → logprob: -0.7576049566268921
    3. '=' → logprob: -12.757604598999023
    4. ' ' → logprob: -13.007604598999023
    5. '  ' → logprob: -14.882604598999023
    6. '1' → logprob: -15.757604598999023
    7. '```' → logprob: -16.632604598999023
    8. '   ' → logprob: -16.820104598999023
    9. ')' → logprob: -16.882604598999023
    10. '2' → logprob: -17.257604598999023

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026303201913833618
    2. ' ' → logprob: -3.651303291320801
    3. '1' → logprob: -13.6513032913208
    4. ' ' → logprob: -14.7138032913208
    5. '=' → logprob: -14.9638032913208
    6. '  ' → logprob: -15.4013032913208
    7. '2' → logprob: -15.5263032913208
    8. ')' → logprob: -16.213802337646484
    9. '   ' → logprob: -16.276302337646484
    10. '```' → logprob: -16.463802337646484

Token 53: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002790935104712844
    2. ' :' → logprob: -8.500279426574707
    3. ':
' → logprob: -9.500279426574707
    4. ' and' → logprob: -15.750279426574707
    5. ' :
' → logprob: -15.750279426574707
    6. '   ' → logprob: -15.875279426574707
    7. '):' → logprob: -15.875279426574707
    8. ':

' → logprob: -16.75027847290039
    9. ':**' → logprob: -17.37527847290039
    10. ':
' → logprob: -17.62527847290039

Token 54: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1019158884882927
    2. '
' → logprob: -3.1019158363342285
    3. ' ans' → logprob: -3.7269158363342285
    4. ' 
' → logprob: -4.3519158363342285
    5. ' ' → logprob: -5.3519158363342285
    6. '<|end|>' → logprob: -5.8519158363342285
    7. '    
' → logprob: -6.2269158363342285
    8. '  
' → logprob: -7.1019158363342285
    9. '    ' → logprob: -7.1019158363342285
    10. ' n' → logprob: -7.2269158363342285

Token 55: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7255548238754272
    2. '
' → logprob: -0.8505548238754272
    3. ':
' → logprob: -3.600554943084717
    4. ':' → logprob: -3.975554943084717
    5. ' ans' → logprob: -4.225554943084717
    6. 'ans' → logprob: -4.225554943084717
    7. ' 
' → logprob: -5.100554943084717
    8. '    
' → logprob: -6.350554943084717
    9. '  
' → logprob: -6.975554943084717
    10. 'n' → logprob: -7.225554943084717

Token 56: ' Je' (ID: 4678)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.034856174141168594
    2. ' ' → logprob: -4.28485631942749
    3. ' #' → logprob: -5.15985631942749
    4. '    ' → logprob: -5.40985631942749
    5. '   ' → logprob: -5.40985631942749
    6. 'ans' → logprob: -5.65985631942749
    7. ' ' → logprob: -7.03485631942749
    8. ' n' → logprob: -8.284855842590332
    9. '#' → logprob: -8.409855842590332
    10. ' 
' → logprob: -8.534855842590332

Token 57: ' crois' (ID: 65485)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6259394884109497
    2. 'n' → logprob: -2.00093936920166
    3. 's' → logprob: -2.50093936920166
    4. ' veux' → logprob: -3.00093936920166
    5. ' n' → logprob: -3.25093936920166
    6. 'ans' → logprob: -3.25093936920166
    7. 'f' → logprob: -3.75093936920166
    8. '   ' → logprob: -3.75093936920166
    9. '  ' → logprob: -4.75093936920166
    10. 't' → logprob: -5.00093936920166

Token 58: ' bien' (ID: 5340)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19704025983810425
    2. ':' → logprob: -2.072040319442749
    3. ' ' → logprob: -3.822040319442749
    4. ' :' → logprob: -4.94704008102417
    5. '  ' → logprob: -5.19704008102417
    6. '    ' → logprob: -5.19704008102417
    7. ' que' → logprob: -5.19704008102417
    8. ',' → logprob: -5.94704008102417
    9. ':
' → logprob: -7.32204008102417
    10. '
' → logprob: -7.57204008102417

Token 59: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8844860792160034
    2. ':' → logprob: -1.2594860792160034
    3. ' que' → logprob: -1.6344860792160034
    4. ' ' → logprob: -2.509486198425293
    5. '    ' → logprob: -4.634486198425293
    6. ' :' → logprob: -5.384486198425293
    7. ' that' → logprob: -5.634486198425293
    8. ' ans' → logprob: -5.884486198425293
    9. '  ' → logprob: -6.134486198425293
    10. ',' → logprob: -7.384486198425293

Token 60: ' si' (ID: 1784)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.03826743736863136
    2. ' ' → logprob: -3.7882673740386963
    3. 'n' → logprob: -5.038267612457275
    4. ' ans' → logprob: -5.288267612457275
    5. '  ' → logprob: -7.038267612457275
    6. '   ' → logprob: -7.288267612457275
    7. ' c' → logprob: -7.538267612457275
    8. 'ans' → logprob: -8.538267135620117
    9. ' on' → logprob: -8.663267135620117
    10. ' la' → logprob: -8.663267135620117

Token 61: ' c' (ID: 274)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6666528582572937
    2. '   ' → logprob: -1.4166529178619385
    3. ' ans' → logprob: -1.9166529178619385
    4. ' n' → logprob: -3.0416529178619385
    5. 'ans' → logprob: -4.291652679443359
    6. ':
' → logprob: -4.541652679443359
    7. ' ' → logprob: -4.791652679443359
    8. ' :' → logprob: -5.666652679443359
    9. '    ' → logprob: -5.916652679443359
    10. 'n' → logprob: -6.291652679443359

Token 62: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.07184439152479172
    2. ''' → logprob: -3.4468443393707275
    3. 'est' → logprob: -3.8218443393707275
    4. ' n' → logprob: -5.071844577789307
    5. ''était' → logprob: -6.321844577789307
    6. ''s' → logprob: -6.696844577789307
    7. 'e' → logprob: -6.946844577789307
    8. '’est' → logprob: -7.196844577789307
    9. ' ' → logprob: -7.321844577789307
    10. 'n' → logprob: -7.821844577789307

Token 63: ' impair' (ID: 64113)
  Prédit: ' impair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' impair' → logprob: -0.13270865380764008
    2. ' pair' → logprob: -2.6327085494995117
    3. 'pair' → logprob: -4.007708549499512
    4. 'im' → logprob: -4.257708549499512
    5. ' imp' → logprob: -5.382708549499512
    6. 'imp' → logprob: -5.382708549499512
    7. ' ' → logprob: -5.382708549499512
    8. ' un' → logprob: -6.507708549499512
    9. ' odd' → logprob: -7.757708549499512
    10. '  ' → logprob: -7.882708549499512

Token 64: ' y' (ID: 342)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2368001639842987
    2. '   ' → logprob: -1.861800193786621
    3. ':
' → logprob: -3.236800193786621
    4. ' :' → logprob: -4.861800193786621
    5. ',' → logprob: -5.111800193786621
    6. ' :
' → logprob: -6.361800193786621
    7. ' ,' → logprob: -8.986800193786621
    8. ' ' → logprob: -9.236800193786621
    9. 'ans' → logprob: -9.611800193786621
    10. ' ans' → logprob: -9.736800193786621

Token 65: ' a' (ID: 261)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.49967318773269653
    2. '=' → logprob: -1.8746731281280518
    3. 's' → logprob: -2.9996731281280518
    4. ' =' → logprob: -3.4996731281280518
    5. ' ' → logprob: -3.6246731281280518
    6. '  ' → logprob: -3.9996731281280518
    7. ' a' → logprob: -4.124673366546631
    8. ' +=' → logprob: -4.374673366546631
    9. 'es' → logprob: -4.499673366546631
    10. 'a' → logprob: -4.999673366546631

Token 66: ' un' (ID: 537)
  Prédit: ' rien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rien' → logprob: -0.12207629531621933
    2. ' ' → logprob: -2.9970762729644775
    3. ' pas' → logprob: -3.4970762729644775
    4. 'r' → logprob: -4.122076511383057
    5. ' plus' → logprob: -5.247076511383057
    6. ' un' → logprob: -5.622076511383057
    7. ' aucun' → logprob: -6.247076511383057
    8. ' une' → logprob: -6.622076511383057
    9. ' r' → logprob: -6.747076511383057
    10. ' nothing' → logprob: -6.872076511383057

Token 67: ' souci' (ID: 126951)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.7160674333572388
    2. ' problème' → logprob: -1.8410674333572388
    3. ' espace' → logprob: -2.466067314147949
    4. 'e' → logprob: -2.841067314147949
    5. '  ' → logprob: -2.841067314147949
    6. ' peu' → logprob: -2.966067314147949
    7. ' +' → logprob: -2.966067314147949
    8. ' plus' → logprob: -3.466067314147949
    9. 'plus' → logprob: -3.903567314147949
    10. '1' → logprob: -3.903567314147949

Token 68: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27377113699913025
    2. ':' → logprob: -1.5237711668014526
    3. ',' → logprob: -4.773771286010742
    4. ':
' → logprob: -4.898771286010742
    5. ' :' → logprob: -5.898771286010742
    6. '.' → logprob: -7.273771286010742
    7. '    
' → logprob: -7.773771286010742
    8. ' :
' → logprob: -7.773771286010742
    9. ',
' → logprob: -8.398771286010742
    10. '  ' → logprob: -8.523771286010742

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07319077849388123
    2. ':' → logprob: -2.948190689086914
    3. ':
' → logprob: -4.573190689086914
    4. ' ans' → logprob: -6.198190689086914
    5. 'ans' → logprob: -6.573190689086914
    6. '
' → logprob: -6.823190689086914
    7. '    
' → logprob: -6.948190689086914
    8. ' :
' → logprob: -7.448190689086914
    9. ' :' → logprob: -7.823190689086914
    10. ' ' → logprob: -8.448190689086914

Token 70: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.08069247752428055
    2. 'ans' (adapté à ' ans') → logprob: -3.2056925296783447
    3. '   ' → logprob: -3.7056925296783447
    4. ' print' → logprob: -5.580692291259766
    5. ' pass' → logprob: -5.705692291259766
    6. 'print' → logprob: -6.580692291259766
    7. ' ' → logprob: -6.830692291259766
    8. ' n' → logprob: -7.330692291259766
    9. ' raise' → logprob: -7.455692291259766
    10. '	ans' → logprob: -7.580692291259766

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20574991405010223
    2. ' +=' → logprob: -1.7057498693466187
    3. '=' → logprob: -5.705749988555908
    4. '+=' → logprob: -7.330749988555908
    5. ' ' → logprob: -8.58074951171875
    6. '+' → logprob: -9.45574951171875
    7. ' +' → logprob: -9.70574951171875
    8. ' -=' → logprob: -11.58074951171875
    9. ')' → logprob: -13.08074951171875
    10. ' *=' → logprob: -13.20574951171875

Token 72: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.46906590461730957
    2. ' n' → logprob: -1.2190659046173096
    3. '1' → logprob: -2.9690659046173096
    4. 'n' → logprob: -4.3440656661987305
    5. '0' → logprob: -5.3440656661987305
    6. ' (' → logprob: -5.4690656661987305
    7. ' -' → logprob: -5.5940656661987305
    8. '-' → logprob: -6.9690656661987305
    9. ' None' → logprob: -8.34406566619873
    10. '(' → logprob: -8.71906566619873

Token 73: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8955807089805603
    2. 'n' → logprob: -1.020580768585205
    3. '1' → logprob: -1.645580768585205
    4. '0' → logprob: -4.145580768585205
    5. '(n' → logprob: -4.270580768585205
    6. '(' → logprob: -5.645580768585205
    7. '"' → logprob: -6.770580768585205
    8. ' -' → logprob: -7.270580768585205
    9. '-n' → logprob: -7.395580768585205
    10. ' n' → logprob: -7.520580768585205

Token 74: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.24023780226707458
    2. ' else' → logprob: -1.740237832069397
    3. '<|end|>' → logprob: -3.9902377128601074
    4. 'elif' → logprob: -4.240237712860107
    5. '
' → logprob: -5.740237712860107
    6. ' elif' → logprob: -6.740237712860107
    7. '<|end|>' → logprob: -8.490238189697266
    8. '    
' → logprob: -8.740238189697266
    9. ' 
' → logprob: -9.240238189697266
    10. ')' → logprob: -9.865238189697266

Token 75: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.023755153641104698
    2. ' else' → logprob: -3.8987550735473633
    3. 'elif' → logprob: -6.023755073547363
    4. '<|end|>' → logprob: -7.273755073547363
    5. '
' → logprob: -9.898755073547363
    6. ' elif' → logprob: -11.523755073547363
    7. ':' → logprob: -12.023755073547363
    8. '<|end|>' → logprob: -12.273755073547363
    9. '    
' → logprob: -12.648755073547363
    10. ')' → logprob: -12.648755073547363

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.300083648762666e-05
    2. ' :' → logprob: -10.375053405761719
    3. ':
' → logprob: -10.750053405761719
    4. ':

' → logprob: -16.25005340576172
    5. '   ' → logprob: -17.25005340576172
    6. '<|end|>' → logprob: -17.75005340576172
    7. ':def' → logprob: -17.75005340576172
    8. ',' → logprob: -17.87505340576172
    9. ' :
' → logprob: -17.87505340576172
    10. ':
' → logprob: -18.12505340576172

Token 77: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004017137107439339
    2. '    
' → logprob: -8.750401496887207
    3. ' ans' → logprob: -9.500401496887207
    4. '
' → logprob: -9.500401496887207
    5. '    ' → logprob: -10.000401496887207
    6. 'n' → logprob: -11.500401496887207
    7. ' 
' → logprob: -11.625401496887207
    8. ' n' → logprob: -12.375401496887207
    9. 'ans' → logprob: -12.500401496887207
    10. '       ' → logprob: -12.875401496887207

Token 78: ' power' (ID: 3470)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.8878700733184814
    2. 'ans' → logprob: -1.1378700733184814
    3. ' for' → logprob: -2.1378700733184814
    4. 'for' → logprob: -2.2628700733184814
    5. 'while' → logprob: -4.387869834899902
    6. ' while' → logprob: -4.512869834899902
    7. '   ' → logprob: -4.637869834899902
    8. 'factor' → logprob: -5.637869834899902
    9. ' i' → logprob: -6.012869834899902
    10. 'i' → logprob: -6.137869834899902

Token 79: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3281400203704834
    2. ' =' → logprob: -1.3281400203704834
    3. '_' → logprob: -4.4531402587890625
    4. '   ' → logprob: -6.0781402587890625
    5. '2' → logprob: -8.453140258789062
    6. '_=' → logprob: -8.703140258789062
    7. 'er' → logprob: -8.828140258789062
    8. 's' → logprob: -9.578140258789062
    9. ' ' → logprob: -9.578140258789062
    10. '(' → logprob: -10.453140258789062

Token 80: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.30403798818588257
    2. '2' → logprob: -1.8040380477905273
    3. ' n' → logprob: -3.1790380477905273
    4. ' ' → logprob: -3.4290380477905273
    5. 'n' → logprob: -3.9290380477905273
    6. '0' → logprob: -5.804038047790527
    7. '   ' → logprob: -7.304038047790527
    8. '10' → logprob: -9.429038047790527
    9. '  ' → logprob: -10.929038047790527
    10. '4' → logprob: -11.304038047790527

Token 81: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4811440110206604
    2. '2' → logprob: -1.2311439514160156
    3. 'n' → logprob: -2.7311439514160156
    4. '0' → logprob: -3.7311439514160156
    5. ' n' → logprob: -7.981143951416016
    6. ' ' → logprob: -8.106143951416016
    7. '10' → logprob: -9.356143951416016
    8. '   ' → logprob: -9.856143951416016
    9. '4' → logprob: -10.981143951416016
    10. 'int' → logprob: -11.606143951416016

Token 82: '
' (ID: 198)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.4909466803073883
    2. ' **' → logprob: -1.240946650505066
    3. '*' → logprob: -3.6159467697143555
    4. ' *' → logprob: -3.6159467697143555
    5. '0' → logprob: -4.2409467697143555
    6. ' -' → logprob: -4.6159467697143555
    7. ' ' → logprob: -4.7409467697143555
    8. '-' → logprob: -5.3659467697143555
    9. '*n' → logprob: -5.7409467697143555
    10. ' n' → logprob: -6.8659467697143555

Token 83: '   ' (ID: 271)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.26563969254493713
    2. ' **' → logprob: -1.7656396627426147
    3. '   ' → logprob: -3.1406397819519043
    4. '*' → logprob: -4.515639781951904
    5. ' *' → logprob: -6.140639781951904
    6. ' ' → logprob: -6.265639781951904
    7. '0' → logprob: -6.640639781951904
    8. '-' → logprob: -7.265639781951904
    9. '
' → logprob: -8.140639305114746
    10. '  ' → logprob: -8.140639305114746

Token 84: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.092599630355835
    2. '**' → logprob: -1.217599630355835
    3. 'while' (adapté à ' while') → logprob: -1.217599630355835
    4. ' while' → logprob: -3.592599630355835
    5. '*' → logprob: -4.342599868774414
    6. '//' → logprob: -4.467599868774414
    7. ' **' → logprob: -4.967599868774414
    8. '  ' → logprob: -6.217599868774414
    9. 'n' → logprob: -6.217599868774414
    10. ' //' → logprob: -6.342599868774414

Token 85: ' power' (ID: 3470)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10608911514282227
    2. ' power' → logprob: -2.4810891151428223
    3. 'n' → logprob: -4.356089115142822
    4. ' ' → logprob: -6.731089115142822
    5. ' abs' → logprob: -6.856089115142822
    6. 'power' → logprob: -6.981089115142822
    7. ' (' → logprob: -7.856089115142822
    8. ' ans' → logprob: -8.606088638305664
    9. ' pow' → logprob: -9.106088638305664
    10. '(power' → logprob: -9.106088638305664

Token 86: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3179815709590912
    2. '<=' → logprob: -1.3179816007614136
    3. ' <' → logprob: -6.067981719970703
    4. '**' → logprob: -6.442981719970703
    5. '<' → logprob: -7.317981719970703
    6. '*' → logprob: -9.567981719970703
    7. ' **' → logprob: -10.442981719970703
    8. ' ' → logprob: -11.317981719970703
    9. ' *' → logprob: -11.942981719970703
    10. '<n' → logprob: -12.317981719970703

Token 87: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5759723782539368
    2. 'n' → logprob: -0.8259723782539368
    3. '	n' → logprob: -11.325972557067871
    4. 'abs' → logprob: -11.825972557067871
    5. ' abs' → logprob: -11.950972557067871
    6. ' ' → logprob: -12.325972557067871
    7. '(n' → logprob: -14.575972557067871
    8. '   ' → logprob: -14.700972557067871
    9. '_n' → logprob: -14.950972557067871
    10. ' ' → logprob: -15.200972557067871

Token 88: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04154105484485626
    2. ':
' → logprob: -3.91654109954834
    3. ' and' → logprob: -4.04154109954834
    4. ' :' → logprob: -6.91654109954834
    5. '*' → logprob: -7.04154109954834
    6. 'and' → logprob: -7.66654109954834
    7. ' *' → logprob: -7.91654109954834
    8. '   ' → logprob: -8.04154109954834
    9. ' :
' → logprob: -9.66654109954834
    10. ' ' → logprob: -10.54154109954834

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030478285625576973
    2. '   ' → logprob: -3.9054782390594482
    3. ':' → logprob: -4.905478477478027
    4. '    ' → logprob: -7.280478477478027
    5. 'power' → logprob: -7.655478477478027
    6. '        
' → logprob: -8.780478477478027
    7. ':
' → logprob: -8.905478477478027
    8. '    
' → logprob: -9.030478477478027
    9. ' power' → logprob: -9.280478477478027
    10. ' ' → logprob: -9.280478477478027

Token 90: ' ans' (ID: 3345)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.11328361928462982
    2. 'if' → logprob: -3.363283634185791
    3. '   ' → logprob: -3.613283634185791
    4. 'ans' (adapté à ' ans') → logprob: -3.738283634185791
    5. ' power' → logprob: -4.238283634185791
    6. ' if' → logprob: -5.738283634185791
    7. '       ' → logprob: -6.238283634185791
    8. 'n' → logprob: -7.988283634185791
    9. ' ans' → logprob: -7.988283634185791
    10. '
' → logprob: -7.988283634185791

Token 91: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.03457130491733551
    2. '+=' → logprob: -3.409571409225464
    3. ' =' → logprob: -7.284571170806885
    4. '=' → logprob: -8.659571647644043
    5. '   ' → logprob: -10.284571647644043
    6. ' ' → logprob: -11.534571647644043
    7. '+' → logprob: -12.284571647644043
    8. '+=(' → logprob: -12.409571647644043
    9. '	' → logprob: -12.659571647644043
    10. ' ' → logprob: -13.534571647644043

Token 92: ' ans' (ID: 3345)
  Prédit: ' power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' power' → logprob: -0.3133900761604309
    2. ' n' → logprob: -2.313390016555786
    3. ' ans' → logprob: -2.813390016555786
    4. ' ' → logprob: -3.188390016555786
    5. 'power' → logprob: -3.313390016555786
    6. 'n' → logprob: -4.563390254974365
    7. ' (' → logprob: -4.688390254974365
    8. ' max' → logprob: -5.813390254974365
    9. '+' → logprob: -6.063390254974365
    10. 'ans' → logprob: -6.188390254974365

Token 93: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14271369576454163
    2. '+' → logprob: -2.017713785171509
    3. ' ' → logprob: -10.76771354675293
    4. ' *' → logprob: -12.64271354675293
    5. '1' → logprob: -13.26771354675293
    6. '*' → logprob: -13.51771354675293
    7. ' +=' → logprob: -13.76771354675293
    8. ' -' → logprob: -13.76771354675293
    9. '+n' → logprob: -13.89271354675293
    10. ' plus' → logprob: -14.01771354675293

Token 94: ' (' (ID: 350)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.18249785900115967
    2. '1' → logprob: -2.557497978210449
    3. ' power' → logprob: -2.932497978210449
    4. 'n' → logprob: -4.182497978210449
    5. '(power' → logprob: -5.182497978210449
    6. ' n' → logprob: -5.432497978210449
    7. '10' → logprob: -5.557497978210449
    8. ' ' → logprob: -5.807497978210449
    9. 'pow' → logprob: -6.682497978210449
    10. ' (' → logprob: -7.182497978210449

Token 95: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.605353057384491
    2. ' n' → logprob: -0.980353057384491
    3. '1' → logprob: -3.6053531169891357
    4. ' (' → logprob: -4.230352878570557
    5. 'power' → logprob: -4.230352878570557
    6. ' ' → logprob: -4.605352878570557
    7. '(n' → logprob: -5.230352878570557
    8. ' power' → logprob: -6.230352878570557
    9. '(power' → logprob: -6.730352878570557
    10. '   ' → logprob: -6.730352878570557

Token 96: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.2259141355752945
    2. ' %' → logprob: -1.7259141206741333
    3. '%' → logprob: -4.225914001464844
    4. '//' → logprob: -4.975914001464844
    5. ' ' → logprob: -5.975914001464844
    6. ' /' → logprob: -9.350914001464844
    7. ' ' → logprob: -11.350914001464844
    8. '-' → logprob: -11.475914001464844
    9. ' >=' → logprob: -11.975914001464844
    10. ' -' → logprob: -12.038414001464844

Token 97: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.048634715378284454
    2. ' power' → logprob: -3.0486347675323486
    3. 'pow' → logprob: -10.04863452911377
    4. '(power' → logprob: -13.42363452911377
    5. ' ' → logprob: -13.54863452911377
    6. '   ' → logprob: -15.04863452911377
    7. '  ' → logprob: -15.17363452911377
    8. ' pow' → logprob: -15.42363452911377
    9. '_power' → logprob: -15.42363452911377
    10. 'powers' → logprob: -15.67363452911377

Token 98: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01969950832426548
    2. ' %' → logprob: -4.644699573516846
    3. '%' → logprob: -5.644699573516846
    4. ')
' → logprob: -5.769699573516846
    5. ' )' → logprob: -6.144699573516846
    6. ')%' → logprob: -7.019699573516846
    7. '   ' → logprob: -10.144699096679688
    8. ' )
' → logprob: -10.394699096679688
    9. '*' → logprob: -10.894699096679688
    10. ' *' → logprob: -11.019699096679688

Token 99: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9546876549720764
    2. '*' → logprob: -1.0796875953674316
    3. ' *' → logprob: -1.4546875953674316
    4. '   ' → logprob: -3.4546875953674316
    5. ' ' → logprob: -5.579687595367432
    6. '//' → logprob: -6.954687595367432
    7. '
' → logprob: -7.329687595367432
    8. ' //' → logprob: -7.329687595367432
    9. '  ' → logprob: -7.704687595367432
    10. '<|end|>' → logprob: -7.829687595367432

Token 100: ' On' (ID: 2160)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.13958550989627838
    2. '*' → logprob: -3.139585494995117
    3. '10' → logprob: -3.264585494995117
    4. ' ' → logprob: -4.139585494995117
    5. ')' → logprob: -5.014585494995117
    6. ' *' → logprob: -5.264585494995117
    7. 'power' → logprob: -5.514585494995117
    8. '   ' → logprob: -5.764585494995117
    9. '//' → logprob: -5.764585494995117
    10. '       ' → logprob: -5.889585494995117

Token 101: ' monte' (ID: 65348)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.208645299077034
    2. ' //' → logprob: -2.4586453437805176
    3. '   ' → logprob: -4.208645343780518
    4. ' ' → logprob: -4.208645343780518
    5. '  ' → logprob: -4.708645343780518
    6. ' n' → logprob: -4.833645343780518
    7. '<|end|>' → logprob: -5.083645343780518
    8. '    ' → logprob: -5.208645343780518
    9. '//' → logprob: -5.208645343780518
    10. ')' → logprob: -5.208645343780518

Token 102: ' la' (ID: 557)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.9238903522491455
    2. 'power' → logprob: -1.1738903522491455
    3. ' power' → logprob: -1.7988903522491455
    4. '   ' → logprob: -3.0488903522491455
    5. 'de' → logprob: -3.2988903522491455
    6. '       ' → logprob: -3.7988903522491455
    7. '*' → logprob: -5.423890113830566
    8. ' *' → logprob: -5.673890113830566
    9. ' ' → logprob: -5.798890113830566
    10. '           ' → logprob: -5.923890113830566

Token 103: ' puissance' (ID: 63494)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -1.0895971059799194
    2. ' power' → logprob: -1.7145971059799194
    3. ' ' → logprob: -1.8395971059799194
    4. '1' → logprob: -1.9645971059799194
    5. '10' → logprob: -2.089597225189209
    6. '2' → logprob: -4.214597225189209
    7. '   ' → logprob: -4.214597225189209
    8. '  ' → logprob: -4.714597225189209
    9. ' puissance' → logprob: -6.089597225189209
    10. ')' → logprob: -6.214597225189209

Token 104: ' à' (ID: 1221)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -1.0470807552337646
    2. '*' → logprob: -1.1720807552337646
    3. '       ' → logprob: -1.1720807552337646
    4. '   ' → logprob: -4.422080993652344
    5. '
' → logprob: -4.797080993652344
    6. '10' → logprob: -5.297080993652344
    7. '           ' → logprob: -6.922080993652344
    8. ' ' → logprob: -7.047080993652344
    9. ')' → logprob: -7.797080993652344
    10. '        
' → logprob: -8.172080993652344

Token 105: ' chaque' (ID: 21194)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.29349616169929504
    2. ' power' → logprob: -1.6684961318969727
    3. '10' → logprob: -2.7934961318969727
    4. ' ' → logprob: -6.043496131896973
    5. '   ' → logprob: -7.918496131896973
    6. 'pow' → logprob: -8.293496131896973
    7. '*' → logprob: -8.293496131896973
    8. '100' → logprob: -8.293496131896973
    9. ' puissance' → logprob: -8.418496131896973
    10. 'powers' → logprob: -8.668496131896973

Token 106: ' fois' (ID: 14697)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.22430360317230225
    2. ' ' → logprob: -2.724303722381592
    3. '*' → logprob: -3.224303722381592
    4. 'fois' → logprob: -3.349303722381592
    5. '   ' → logprob: -4.099303722381592
    6. 'iteration' → logprob: -4.474303722381592
    7. ' fois' → logprob: -4.599303722381592
    8. ' *' → logprob: -4.724303722381592
    9. 'multip' → logprob: -6.224303722381592
    10. '1' → logprob: -6.224303722381592

Token 107: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07960803806781769
    2. '
' → logprob: -2.5796079635620117
    3. '        
' → logprob: -8.204607963562012
    4. '
' → logprob: -8.704607963562012
    5. '   ' → logprob: -9.704607963562012
    6. '    
' → logprob: -9.829607963562012
    7. ' 
' → logprob: -10.204607963562012
    8. 'power' → logprob: -10.454607963562012
    9. '*' → logprob: -10.704607963562012
    10. '  
' → logprob: -11.329607963562012

Token 108: 'par' (ID: 796)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.35306280851364136
    2. ' *' → logprob: -2.228062868118286
    3. '       ' → logprob: -2.228062868118286
    4. 'power' → logprob: -3.478062868118286
    5. '   ' → logprob: -3.853062868118286
    6. ')' → logprob: -3.978062868118286
    7. ' power' → logprob: -4.853062629699707
    8. ' ' → logprob: -6.728062629699707
    9. ')
' → logprob: -7.978062629699707
    10. ')*' → logprob: -8.103062629699707

Token 109: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.018076777458190918
    2. ' ' → logprob: -4.2680768966674805
    3. '1' → logprob: -6.2680768966674805
    4. '   ' → logprob: -6.5180768966674805
    5. '100' → logprob: -9.01807689666748
    6. '11' → logprob: -9.76807689666748
    7. ')' → logprob: -10.01807689666748
    8. '2' → logprob: -10.14307689666748
    9. '0' → logprob: -10.39307689666748
    10. '```' → logprob: -10.39307689666748

Token 110: '5' (ID: 20)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0019335162360221148
    2. '1' → logprob: -7.126933574676514
    3. '0' → logprob: -7.626933574676514
    4. '   ' → logprob: -7.876933574676514
    5. ' ' → logprob: -8.626933097839355
    6. 'power' → logprob: -10.876933097839355
    7. '100' → logprob: -11.376933097839355
    8. 'a' → logprob: -11.876933097839355
    9. '*' → logprob: -12.001933097839355
    10. '```' → logprob: -12.001933097839355

Token 111: ' ou' (ID: 2031)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03338747099041939
    2. '*' → logprob: -3.5333874225616455
    3. ' *' → logprob: -5.658387660980225
    4. ')' → logprob: -9.658387184143066
    5. '   ' → logprob: -10.283387184143066
    6. '       ' → logprob: -11.033387184143066
    7. ')
' → logprob: -11.783387184143066
    8. '00' → logprob: -12.533387184143066
    9. ' ' → logprob: -12.783387184143066
    10. '    ' → logprob: -13.408387184143066

Token 112: ' plutôt' (ID: 40017)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10629492998123169
    2. ' ' → logprob: -2.481294870376587
    3. '1' → logprob: -4.481295108795166
    4. '5' → logprob: -6.356295108795166
    5. '2' → logprob: -6.481295108795166
    6. '0' → logprob: -6.856295108795166
    7. '   ' → logprob: -6.981295108795166
    8. 'multip' → logprob: -9.606294631958008
    9. '  ' → logprob: -9.981294631958008
    10. '6' → logprob: -9.981294631958008

Token 113: ' par' (ID: 686)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.050144366919994354
    2. ' ' → logprob: -3.0501444339752197
    3. '2' → logprob: -7.300144195556641
    4. '   ' → logprob: -8.30014419555664
    5. '1' → logprob: -8.67514419555664
    6. '5' → logprob: -8.67514419555664
    7. '*' → logprob: -9.55014419555664
    8. ' *' → logprob: -10.17514419555664
    9. 'par' → logprob: -10.17514419555664
    10. '0' → logprob: -10.42514419555664

Token 114: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.17354710400104523
    2. ' ' → logprob: -2.5485470294952393
    3. '2' → logprob: -3.1735470294952393
    4. '5' → logprob: -3.2985470294952393
    5. '1' → logprob: -6.548547267913818
    6. '   ' → logprob: -7.548547267913818
    7. 'power' → logprob: -9.54854679107666
    8. '50' → logprob: -9.79854679107666
    9. '0' → logprob: -9.92354679107666
    10. '100' → logprob: -10.04854679107666

Token 115: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.07403398305177689
    2. '2' → logprob: -2.6990339756011963
    3. ' ' → logprob: -5.949034214019775
    4. '1' → logprob: -7.074034214019775
    5. '5' → logprob: -7.824034214019775
    6. '0' → logprob: -9.324033737182617
    7. '   ' → logprob: -9.449033737182617
    8. '  ' → logprob: -11.199033737182617
    9. 'power' → logprob: -11.699033737182617
    10. 'pow' → logprob: -11.824033737182617

Token 116: ' ?' (ID: 1423)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20514515042304993
    2. '0' → logprob: -2.0801451206207275
    3. ')
' → logprob: -3.2051451206207275
    4. '*' → logprob: -4.455145359039307
    5. ')' → logprob: -5.205145359039307
    6. '   ' → logprob: -7.330145359039307
    7. '
' → logprob: -7.330145359039307
    8. ' *' → logprob: -7.705145359039307
    9. '10' → logprob: -7.830145359039307
    10. '000' → logprob: -8.080144882202148

Token 117: ')
' (ID: 446)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7504323720932007
    2. '*' → logprob: -1.3754323720932007
    3. ')
' → logprob: -2.1254324913024902
    4. '   ' → logprob: -2.2504324913024902
    5. ')' → logprob: -4.00043249130249
    6. '       ' → logprob: -4.37543249130249
    7. ' *' → logprob: -5.37543249130249
    8. '10' → logprob: -5.50043249130249
    9. '    
' → logprob: -5.75043249130249
    10. '*
' → logprob: -5.87543249130249

Token 118: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04259601607918739
    2. '
' → logprob: -4.667595863342285
    3. '   ' → logprob: -4.792595863342285
    4. '        
' → logprob: -4.792595863342285
    5. 'power' → logprob: -5.042595863342285
    6. '    
' → logprob: -5.542595863342285
    7. '*' → logprob: -5.542595863342285
    8. '10' → logprob: -7.792595863342285
    9. ' 
' → logprob: -8.292595863342285
    10. '0' → logprob: -9.167595863342285

Token 119: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002189160557463765
    2. 'power' → logprob: -6.3771891593933105
    3. '
' → logprob: -8.252189636230469
    4. '   ' → logprob: -9.252189636230469
    5. '        
' → logprob: -9.252189636230469
    6. ' power' → logprob: -11.502189636230469
    7. '```' → logprob: -12.002189636230469
    8. '10' → logprob: -13.002189636230469
    9. 'pow' → logprob: -13.127189636230469
    10. '    
' → logprob: -13.127189636230469

Token 120: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.3934195637702942
    2. '       ' → logprob: -1.1434195041656494
    3. '   ' → logprob: -5.3934197425842285
    4. ' power' → logprob: -6.2684197425842285
    5. '        
' → logprob: -11.01841926574707
    6. '      ' → logprob: -11.14341926574707
    7. '    ' → logprob: -11.39341926574707
    8. 'pow' → logprob: -11.64341926574707
    9. ' ' → logprob: -11.76841926574707
    10. '  ' → logprob: -12.39341926574707

Token 121: ' *=' (ID: 25253)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.7021892666816711
    2. ' *=' → logprob: -0.9521892666816711
    3. '=' → logprob: -2.2021892070770264
    4. ' =' → logprob: -4.8271894454956055
    5. '   ' → logprob: -11.452189445495605
    6. '*' → logprob: -11.452189445495605
    7. ' ' → logprob: -11.952189445495605
    8. ' ' → logprob: -13.077189445495605
    9. '//=' → logprob: -13.327189445495605
    10. ' <<=' → logprob: -13.827189445495605

Token 122: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0010510309366509318
    2. ' ' → logprob: -6.87605094909668
    3. '   ' → logprob: -11.87605094909668
    4. '1' → logprob: -13.00105094909668
    5. '2' → logprob: -13.12605094909668
    6. '```' → logprob: -13.25105094909668
    7. '5' → logprob: -13.37605094909668
    8. 'power' → logprob: -13.37605094909668
    9. 'pow' → logprob: -15.12605094909668
    10. ' ' → logprob: -15.31355094909668

Token 123: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00011534435179783031
    2. '5' → logprob: -9.250115394592285
    3. ' ' → logprob: -11.375115394592285
    4. '1' → logprob: -12.250115394592285
    5. '2' → logprob: -13.125115394592285
    6. '```' → logprob: -15.250115394592285
    7. '   ' → logprob: -15.875115394592285
    8. '100' → logprob: -16.56261444091797
    9. 'power' → logprob: -16.56261444091797
    10. 'pow' → logprob: -16.62511444091797

Token 124: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0368395633995533
    2. '   ' → logprob: -4.161839485168457
    3. '*' → logprob: -4.411839485168457
    4. ' *' → logprob: -6.036839485168457
    5. '10' → logprob: -6.661839485168457
    6. '0' → logprob: -6.786839485168457
    7. '
' → logprob: -6.911839485168457
    8. '<|end|>' → logprob: -7.036839485168457
    9. ' ' → logprob: -7.661839485168457
    10. '    ' → logprob: -8.036839485168457

Token 125: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6037800908088684
    2. '   ' → logprob: -1.3537800312042236
    3. '       ' → logprob: -1.8537800312042236
    4. ' *' → logprob: -4.228780269622803
    5. '<|end|>' → logprob: -5.103780269622803
    6. '10' → logprob: -5.228780269622803
    7. '
' → logprob: -5.853780269622803
    8. ' ' → logprob: -6.103780269622803
    9. 'power' → logprob: -6.228780269622803
    10. '0' → logprob: -7.228780269622803

Token 126: ' att' (ID: 1927)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.02530178427696228
    2. ' power' → logprob: -4.025301933288574
    3. '10' → logprob: -5.775301933288574
    4. 'pow' → logprob: -6.400301933288574
    5. '*' → logprob: -7.275301933288574
    6. ' ' → logprob: -7.275301933288574
    7. '0' → logprob: -7.525301933288574
    8. '(power' → logprob: -8.525301933288574
    9. '<|end|>' → logprob: -9.775301933288574
    10. ' pow' → logprob: -10.275301933288574

Token 127: 'endez' (ID: 32870)
  Prédit: 'ention'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ention' → logprob: -1.1665846109390259
    2. 'power' → logprob: -1.6665846109390259
    3. 'endre' → logprob: -1.9165846109390259
    4. 'r' → logprob: -2.7915844917297363
    5. 'empts' → logprob: -3.0415844917297363
    6. 'emp' → logprob: -3.1665844917297363
    7. '=' → logprob: -3.5415844917297363
    8. '#' → logprob: -3.9165844917297363
    9. 'u' → logprob: -3.9165844917297363
    10. 'ente' → logprob: -4.041584491729736

Token 128: ' non' (ID: 2893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.4705970287322998
    2. '    ' → logprob: -1.5955970287322998
    3. 'power' → logprob: -1.7205970287322998
    4. '5' → logprob: -1.9705970287322998
    5. '       ' → logprob: -2.7205970287323
    6. ' power' → logprob: -3.2205970287323
    7. '        ' → logprob: -3.2205970287323
    8. '10' → logprob: -3.7205970287323
    9. '*' → logprob: -4.220597267150879
    10. '0' → logprob: -4.720597267150879

Token 129: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4771375060081482
    2. 'power' → logprob: -1.477137565612793
    3. '    ' → logprob: -2.727137565612793
    4. '   ' → logprob: -3.477137565612793
    5. ' power' → logprob: -3.977137565612793
    6. '        ' → logprob: -4.102137565612793
    7. '
' → logprob: -5.227137565612793
    8. 'pow' → logprob: -5.352137565612793
    9. ' ' → logprob: -5.477137565612793
    10. '      ' → logprob: -7.102137565612793

Token 130: ' c' (ID: 274)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.2571108937263489
    2. ' power' → logprob: -1.507110834121704
    3. '       ' → logprob: -6.382111072540283
    4. 'pow' → logprob: -6.882111072540283
    5. '5' → logprob: -7.132111072540283
    6. '   ' → logprob: -7.757111072540283
    7. '    ' → logprob: -8.632110595703125
    8. ' ' → logprob: -8.757110595703125
    9. '
' → logprob: -8.882110595703125
    10. ' puissance' → logprob: -9.007110595703125

Token 131: ''était' (ID: 40609)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.795916736125946
    2. ''est' → logprob: -0.920916736125946
    3. 'a' → logprob: -2.920916795730591
    4. 'est' → logprob: -3.545916795730591
    5. ''' → logprob: -4.045916557312012
    6. 'ar' → logprob: -4.670916557312012
    7. ''a' → logprob: -5.420916557312012
    8. '   ' → logprob: -5.545916557312012
    9. ''''' → logprob: -5.795916557312012
    10. 'pow' → logprob: -5.920916557312012

Token 132: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.02340061217546463
    2. 'power' → logprob: -4.398400783538818
    3. ' ' → logprob: -5.398400783538818
    4. '2' → logprob: -6.023400783538818
    5. '   ' → logprob: -6.523400783538818
    6. '```' → logprob: -6.773400783538818
    7. 'pow' → logprob: -7.523400783538818
    8. '*' → logprob: -7.898400783538818
    9. '    ' → logprob: -9.02340030670166
    10. ' power' → logprob: -10.27340030670166

Token 133: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.005463078618049622
    2. '2' → logprob: -5.755463123321533
    3. 'power' → logprob: -6.380463123321533
    4. ' ' → logprob: -8.130462646484375
    5. '```' → logprob: -9.005462646484375
    6. 'pow' → logprob: -10.005462646484375
    7. '*' → logprob: -10.005462646484375
    8. '   ' → logprob: -10.380462646484375
    9. 'factor' → logprob: -12.567962646484375
    10. '    ' → logprob: -12.567962646484375

Token 134: ' dans' (ID: 2671)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20203164219856262
    2. 'power' → logprob: -1.9520316123962402
    3. '   ' → logprob: -4.07703161239624
    4. '
' → logprob: -4.20203161239624
    5. ' power' → logprob: -4.95203161239624
    6. '*' → logprob: -7.07703161239624
    7. 'pow' → logprob: -8.827032089233398
    8. ' *' → logprob: -9.202032089233398
    9. '5' → logprob: -9.327032089233398
    10. '        
' → logprob: -9.327032089233398

Token 135: ' l' (ID: 305)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.7201001048088074
    2. '5' → logprob: -1.2201001644134521
    3. ' ' → logprob: -1.9701001644134521
    4. ' power' → logprob: -3.220100164413452
    5. 'pow' → logprob: -4.845099925994873
    6. 'the' → logprob: -5.095099925994873
    7. 'le' → logprob: -5.595099925994873
    8. '*' → logprob: -5.845099925994873
    9. '#' → logprob: -5.970099925994873
    10. ' la' → logprob: -6.220099925994873

Token 136: ''autre' (ID: 52145)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.7887969613075256
    2. 'elif' → logprob: -1.2887969017028809
    3. 'if' → logprob: -2.163796901702881
    4. 'e' → logprob: -2.413796901702881
    5. 'code' → logprob: -4.288796901702881
    6. 'range' → logprob: -4.413796901702881
    7. ''' → logprob: -4.913796901702881
    8. 'while' → logprob: -5.413796901702881
    9. 'a' → logprob: -5.913796901702881
    10. 'n' → logprob: -6.038796901702881

Token 137: ' code' (ID: 3490)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.6732072234153748
    2. '       ' → logprob: -1.6732072830200195
    3. '*' → logprob: -1.9232072830200195
    4. ' *' → logprob: -2.9232072830200195
    5. '   ' → logprob: -3.2982072830200195
    6. ' power' → logprob: -3.7982072830200195
    7. '5' → logprob: -4.4232072830200195
    8. ' ' → logprob: -4.5482072830200195
    9. '    ' → logprob: -5.0482072830200195
    10. 'pow' → logprob: -5.1732072830200195

Token 138: '...
' (ID: 4908)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.959339439868927
    2. '
' → logprob: -1.2093393802642822
    3. '       ' → logprob: -2.3343393802642822
    4. ' *' → logprob: -2.9593393802642822
    5. '   ' → logprob: -3.3343393802642822
    6. '5' → logprob: -3.4593393802642822
    7. '    ' → logprob: -3.5843393802642822
    8. ' 
' → logprob: -3.8343393802642822
    9. ' ' → logprob: -4.584339618682861
    10. 'power' → logprob: -4.584339618682861

Token 139: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.46081259846687317
    2. '5' → logprob: -2.085812568664551
    3. '   ' → logprob: -2.460812568664551
    4. '*' → logprob: -2.585812568664551
    5. 'power' → logprob: -3.460812568664551
    6. '    ' → logprob: -3.835812568664551
    7. ' ' → logprob: -4.710812568664551
    8. ' *' → logprob: -4.835812568664551
    9. '
' → logprob: -5.710812568664551
    10. ' 
' → logprob: -5.960812568664551

Token 140: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' (adapté à ' power') → logprob: -0.5448141098022461
    2. '       ' → logprob: -1.294814109802246
    3. '5' → logprob: -2.419814109802246
    4. ' power' → logprob: -3.669814109802246
    5. ' ' → logprob: -4.419814109802246
    6. '   ' → logprob: -4.794814109802246
    7. '    ' → logprob: -5.044814109802246
    8. 'pow' → logprob: -6.669814109802246
    9. '*' → logprob: -7.044814109802246
    10. '        ' → logprob: -7.169814109802246

Token 141: ' =' (ID: 314)
  Prédit: ' *='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.5964598059654236
    2. '*=' → logprob: -0.8464598059654236
    3. '=' → logprob: -3.9714598655700684
    4. ' =' → logprob: -6.596459865570068
    5. '*' → logprob: -9.72145938873291
    6. ' ' → logprob: -10.59645938873291
    7. '   ' → logprob: -12.97145938873291
    8. ' ' → logprob: -13.09645938873291
    9. '//=' → logprob: -13.09645938873291
    10. '+=' → logprob: -13.34645938873291

Token 142: ' power' (ID: 3470)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -0.5929039716720581
    2. '5' → logprob: -0.8429039716720581
    3. ' power' → logprob: -4.467904090881348
    4. ' ' → logprob: -5.342904090881348
    5. '20' → logprob: -8.717904090881348
    6. '10' → logprob: -9.217904090881348
    7. 'pow' → logprob: -9.342904090881348
    8. '  ' → logprob: -9.967904090881348
    9. '50' → logprob: -9.967904090881348
    10. '   ' → logprob: -10.592904090881348

Token 143: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.018649686127901077
    2. ' *' → logprob: -4.018649578094482
    3. 'power' → logprob: -8.01865005493164
    4. '5' → logprob: -8.76865005493164
    5. ' power' → logprob: -12.01865005493164
    6. ' ' → logprob: -12.64365005493164
    7. '*=' → logprob: -13.39365005493164
    8. '**' → logprob: -14.51865005493164
    9. '*p' → logprob: -14.64365005493164
    10. '```' → logprob: -15.01865005493164

Token 144: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0005871102912351489
    2. ' ' → logprob: -8.000587463378906
    3. '10' → logprob: -8.375587463378906
    4. '2' → logprob: -11.125587463378906
    5. '   ' → logprob: -13.375587463378906
    6. '  ' → logprob: -13.438087463378906
    7. '1' → logprob: -14.313087463378906
    8. '05' → logprob: -14.938087463378906
    9. '    ' → logprob: -15.375587463378906
    10. '50' → logprob: -15.438087463378906

Token 145: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00022249009634833783
    2. '10' → logprob: -8.625222206115723
    3. ' ' → logprob: -10.250222206115723
    4. '2' → logprob: -12.375222206115723
    5. '  ' → logprob: -14.125222206115723
    6. '1' → logprob: -14.375222206115723
    7. '   ' → logprob: -14.625222206115723
    8. '05' → logprob: -14.812722206115723
    9. '５' → logprob: -15.875222206115723
    10. '```' → logprob: -16.12522315979004

Token 146: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016718693950679153
    2. '
' → logprob: -9.000166893005371
    3. '<|end|>' → logprob: -10.750166893005371
    4. ' print' → logprob: -11.125166893005371
    5. '```' → logprob: -12.375166893005371
    6. ')' → logprob: -14.125166893005371
    7. '#' → logprob: -14.375166893005371
    8. '#print' → logprob: -14.375166893005371
    9. 'if' → logprob: -15.125166893005371
    10. 'return' → logprob: -15.250166893005371

Token 148: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0789778083562851
    2. '(ans' → logprob: -2.5789778232574463
    3. '('' → logprob: -10.328977584838867
    4. '((' → logprob: -11.328977584838867
    5. '()' → logprob: -11.453977584838867
    6. '("("' → logprob: -11.578977584838867
    7. '(f' → logprob: -12.078977584838867
    8. ' (' → logprob: -12.078977584838867
    9. '(
' → logprob: -12.203977584838867
    10. '(

' → logprob: -13.078977584838867

Token 149: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. ' )' → logprob: -13.875000953674316
    3. '))' → logprob: -16.000001907348633
    4. ')`' → logprob: -17.000001907348633
    5. '+' → logprob: -17.375001907348633
    6. '())' → logprob: -18.375001907348633
    7. ')
' → logprob: -18.500001907348633
    8. '')' → logprob: -18.750001907348633
    9. '()' → logprob: -18.875001907348633
    10. '`)' → logprob: -19.375001907348633

Token 150: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 152: ' voilà' (ID: 77612)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 153: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: ' résultat' (ID: 62556)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.21529117226600647
    2. 'rés' → logprob: -2.8402912616729736
    3. ' nombre' → logprob: -2.9652912616729736
    4. 'result' → logprob: -3.8402912616729736
    5. 'code' → logprob: -3.9652912616729736
    6. ' résultat' → logprob: -3.9652912616729736
    7. 'factor' → logprob: -5.4652910232543945
    8. 'fact' → logprob: -5.7152910232543945
    9. ' code' → logprob: -5.7152910232543945
    10. 'total' → logprob: -5.9652910232543945

Token 155: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: ' normalement' (ID: 164432)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 154
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 42
Tokens correctement prédits (top 10): 93
Précision stricte (1ère position): 26.62%
Précision adaptée (1ère position): 27.27%
Précision (top 10): 60.39%
================================================================================
