================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def set_input_and_recursion_limit():
    reader = (s.rstrip() for s in sys.stdin)
    input_func = reader.__next__
    sys.setrecursionlimit(10**9)
    return input_func

def read_n(input_func):
    return int(input_func())

def init_graph(n):
    return [[] for _ in range(n)]

def read_edge(input_func):
    a, b = map(int, input_func().split())
    return a - 1, b - 1

def build_graph(n, G, input_func):
    for _ in range(n - 1):
        a, b = read_edge(input_func)
        G[a].append(b)
        G[b].append(a)
    return G

def init_flag(n):
    return [0] * n

def set_flag(flag, idx, value):
    flag[idx] = value

def get_neighbors(G, node):
    return G[node]

def dfs_visit(G, flag, cur, par, f):
    set_flag(flag, cur, f)
    for to in get_neighbors(G, cur):
        if to != par:
            dfs_visit(G, flag, to, cur, f ^ 1)

def run_dfs(G, flag):
    dfs_visit(G, flag, 0, -1, 0)

def count_flag(flag):
    return sum(flag)

def count_complement(n, a):
    return n - a

def init_mod_classes():
    return [], [], []

def append_mod_class(i, one, two, three):
    if i % 3 == 0:
        three.append(i)
    elif i % 3 == 1:
        one.append(i)
    else:
        two.append(i)

def mod_classify(n):
    one, two, three = init_mod_classes()
    for i in range(1, n + 1):
        append_mod_class(i, one, two, three)
    return one, two, three

def calc_k(n):
    return n // 3

def init_answer_array(n):
    return [0] * n

def pop_from(lst):
    return lst.pop() if lst else None

def assign_ans_case1(n, flag, one, two, three, ans):
    for i in range(n):
        if flag[i]:
            v = pop_from(one)
            if v is not None:
                ans[i] = v
            else:
                ans[i] = pop_from(three)
        else:
            v = pop_from(two)
            if v is not None:
                ans[i] = v
            else:
                ans[i] = pop_from(three)
    return ans

def concat_classes(one, two, three):
    return one + two + three

def assign_ans_case2a(n, flag, three, one, two, ans):
    for i in range(n):
        if flag[i]:
            ans[i] = pop_from(three)
    res = concat_classes(one, two, three)
    for i in range(n):
        if not flag[i]:
            ans[i] = res.pop()
    return ans

def assign_ans_case2b(n, flag, three, one, two, ans):
    for i in range(n):
        if not flag[i]:
            ans[i] = pop_from(three)
    res = concat_classes(one, two, three)
    for i in range(n):
        if flag[i]:
            ans[i] = res.pop()
    return ans

def main():
    input_func = set_input_and_recursion_limit()
    n = read_n(input_func)
    G = init_graph(n)
    G = build_graph(n, G, input_func)
    flag = init_flag(n)
    run_dfs(G, flag)
    a = count_flag(flag)
    b = count_complement(n, a)
    one, two, three = mod_classify(n)
    k = calc_k(n)
    ans = init_answer_array(n)
    if k < a and k < b:
        ans = assign_ans_case1(n, flag, one, two, three, ans)
    else:
        if k >= a:
            ans = assign_ans_case2a(n, flag, three, one, two, ans)
        else:
            ans = assign_ans_case2b(n, flag, three, one, two, ans)
    print_output(ans)

def print_output(ans):
    print(*ans)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.025130433961749077
    2. '\n' → logprob: -4.400130271911621
    3. 'import' → logprob: -5.275130271911621
    4. '<|end|>' → logprob: -5.900130271911621
    5. '\' → logprob: -6.150130271911621
    6. 'newline' → logprob: -7.900130271911621
    7. '' → logprob: -8.025130271911621
    8. '
' → logprob: -8.400130271911621
    9. ';' → logprob: -8.525130271911621
    10. ',' → logprob: -8.525130271911621

Token 4: ' set' (ID: 920)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013927715830504894
    2. ' space' → logprob: -6.388927936553955
    3. ' main' → logprob: -6.388927936553955
    4. ' ' → logprob: -6.888927936553955
    5. '<|end|>' → logprob: -6.888927936553955
    6. ' process' → logprob: -7.013927936553955
    7. '  ' → logprob: -7.013927936553955
    8. ' a' → logprob: -7.263927936553955
    9. ' sys' → logprob: -7.513927936553955
    10. '_' → logprob: -7.763927936553955

Token 5: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.021810093894600868
    2. ' _' → logprob: -4.521810054779053
    3. '_up' → logprob: -6.521810054779053
    4. 'attr' → logprob: -6.646810054779053
    5. '_name' → logprob: -6.771810054779053
    6. '_param' → logprob: -7.271810054779053
    7. '_user' → logprob: -7.771810054779053
    8. '_space' → logprob: -7.771810054779053
    9. '_target' → logprob: -7.771810054779053
    10. '```' → logprob: -7.896810054779053

Token 6: '_and' (ID: 18645)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12304925173521042
    2. '_' → logprob: -2.248049259185791
    3. '(_' → logprob: -4.998049259185791
    4. '_text' → logprob: -6.873049259185791
    5. '_parent' → logprob: -6.998049259185791
    6. '(_:' → logprob: -8.248048782348633
    7. '_(' → logprob: -8.623048782348633
    8. '_value' → logprob: -9.498048782348633
    9. '_source' → logprob: -9.498048782348633
    10. '_data' → logprob: -9.748048782348633

Token 7: '_rec' (ID: 35314)
  Prédit: '_output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_output' → logprob: -0.06016182899475098
    2. 'output' → logprob: -3.060161828994751
    3. ' output' → logprob: -4.810161590576172
    4. '_' → logprob: -6.935161590576172
    5. '_print' → logprob: -7.685161590576172
    6. '_redirect' → logprob: -8.435161590576172
    7. 'print' → logprob: -8.685161590576172
    8. '_execute' → logprob: -8.685161590576172
    9. '```' → logprob: -9.310161590576172
    10. '_get' → logprob: -9.310161590576172

Token 8: 'ursion' (ID: 41658)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.29475918412208557
    2. 'ursion' → logprob: -2.0447592735290527
    3. 'ursive' → logprob: -2.6697592735290527
    4. 'ord' → logprob: -3.2947592735290527
    5. 'ords' → logprob: -4.919759273529053
    6. 'all' → logprob: -5.669759273529053
    7. 'ieve' → logprob: -6.169759273529053
    8. '_' → logprob: -6.669759273529053
    9. 'ursor' → logprob: -7.044759273529053
    10. 'v' → logprob: -7.294759273529053

Token 9: '_limit' (ID: 34361)
  Prédit: '_limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.13838624954223633
    2. '_depth' → logprob: -2.1383862495422363
    3. '_' → logprob: -4.513386249542236
    4. '_limits' → logprob: -8.263385772705078
    5. '_stack' → logprob: -9.638385772705078
    6. '(' → logprob: -11.013385772705078
    7. '_level' → logprob: -11.138385772705078
    8. '(_' → logprob: -11.388385772705078
    9. '_lim' → logprob: -11.388385772705078
    10. '_max' → logprob: -11.513385772705078

Token 10: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014327395474538207
    2. ' (' → logprob: -7.6264328956604
    3. '():' → logprob: -8.126432418823242
    4. '(:' → logprob: -9.126432418823242
    5. '(_' → logprob: -9.626432418823242
    6. '```' → logprob: -9.876432418823242
    7. '_' → logprob: -10.251432418823242
    8. '('' → logprob: -10.376432418823242
    9. '("("' → logprob: -10.376432418823242
    10. ':' → logprob: -10.501432418823242

Token 11: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6216301918029785
    2. ':' → logprob: -1.4966301918029785
    3. '(' → logprob: -2.1216301918029785
    4. '\' → logprob: -3.2466301918029785
    5. '```' → logprob: -3.4966301918029785
    6. '\n' → logprob: -3.9966301918029785
    7. '():' → logprob: -4.7466301918029785
    8. '    
' → logprob: -5.3716301918029785
    9. '(
' → logprob: -5.8716301918029785
    10. '    ' → logprob: -5.9966301918029785

Token 12: ' reader' (ID: 10958)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25121670961380005
    2. 'sys' → logprob: -2.2512166500091553
    3. ' sys' → logprob: -2.2512166500091553
    4. 'import' → logprob: -5.001216888427734
    5. '```' → logprob: -6.126216888427734
    6. ' ' → logprob: -7.126216888427734
    7. '(sys' → logprob: -7.251216888427734
    8. '    ' → logprob: -8.376216888427734
    9. '  ' → logprob: -8.501216888427734
    10. '	sys' → logprob: -8.876216888427734

Token 13: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.06396714597940445
    2. '=' → logprob: -3.313967227935791
    3. ' =' → logprob: -3.938967227935791
    4. '(' → logprob: -5.438967227935791
    5. '_' → logprob: -7.938967227935791
    6. 's' → logprob: -7.938967227935791
    7. ')' → logprob: -8.063966751098633
    8. '.readline' → logprob: -8.563966751098633
    9. '.Reader' → logprob: -9.063966751098633
    10. ' ' → logprob: -10.063966751098633

Token 14: ' (' (ID: 350)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.003953374922275543
    2. 'open' → logprob: -6.128953456878662
    3. ' sys' → logprob: -6.378953456878662
    4. 'input' → logprob: -11.003952980041504
    5. '=sys' → logprob: -11.003952980041504
    6. ' open' → logprob: -11.378952980041504
    7. 'iter' → logprob: -11.503952980041504
    8. '(sys' → logprob: -12.128952980041504
    9. '	sys' → logprob: -12.253952980041504
    10. 'lambda' → logprob: -13.253952980041504

Token 15: 's' (ID: 82)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2319338619709015
    2. 'lambda' → logprob: -1.981933832168579
    3. 'line' → logprob: -2.731933832168579
    4. 'iter' → logprob: -6.981934070587158
    5. 'open' → logprob: -6.981934070587158
    6. 'input' → logprob: -7.231934070587158
    7. 'int' → logprob: -7.606934070587158
    8. 'x' → logprob: -7.731934070587158
    9. ' sys' → logprob: -8.48193359375
    10. '(sys' → logprob: -9.10693359375

Token 16: '.rstrip' (ID: 161629)
  Prédit: 'ys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.0009899380384013057
    2. '.rstrip' → logprob: -7.75098991394043
    3. '.readline' → logprob: -9.00098991394043
    4. '=sys' → logprob: -9.00098991394043
    5. 'tr' → logprob: -9.12598991394043
    6. 'td' → logprob: -9.62598991394043
    7. '.strip' → logprob: -9.87598991394043
    8. '=' → logprob: -10.75098991394043
    9. ' for' → logprob: -11.50098991394043
    10. '.split' → logprob: -11.62598991394043

Token 17: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.36611589789390564
    2. '('\' → logprob: -1.866115927696228
    3. 'for' → logprob: -2.4911158084869385
    4. ' for' → logprob: -2.8661158084869385
    5. ''\' → logprob: -4.991116046905518
    6. ')' → logprob: -6.491116046905518
    7. 'line' → logprob: -6.741116046905518
    8. '("\' → logprob: -7.116116046905518
    9. '())' → logprob: -8.11611557006836
    10. '"\' → logprob: -8.36611557006836

Token 18: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35701560974121094
    2. ' for' → logprob: -1.732015609741211
    3. '()' → logprob: -2.107015609741211
    4. '   ' → logprob: -7.732015609741211
    5. '  ' → logprob: -7.857015609741211
    6. ' ' → logprob: -8.232015609741211
    7. '	for' → logprob: -8.732015609741211
    8. ')' → logprob: -8.857015609741211
    9. '    ' → logprob: -9.482015609741211
    10. '       ' → logprob: -9.732015609741211

Token 19: ' s' (ID: 265)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.08237984776496887
    2. ' line' → logprob: -2.5823798179626465
    3. 'sys' → logprob: -5.9573798179626465
    4. 'line' → logprob: -7.5823798179626465
    5. ' s' → logprob: -8.332380294799805
    6. ' ' → logprob: -10.082380294799805
    7. '(sys' → logprob: -10.582380294799805
    8. '=sys' → logprob: -10.832380294799805
    9. '	sys' → logprob: -10.957380294799805
    10. '_' → logprob: -11.582380294799805

Token 20: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021066246554255486
    2. 'in' → logprob: -4.146066188812256
    3. ' sys' → logprob: -5.396066188812256
    4. 'sys' → logprob: -8.021066665649414
    5. ' ' → logprob: -9.646066665649414
    6. ' line' → logprob: -10.146066665649414
    7. '=sys' → logprob: -10.896066665649414
    8. 'import' → logprob: -11.771066665649414
    9. 'line' → logprob: -11.896066665649414
    10. ' _' → logprob: -12.646066665649414

Token 21: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.20142221450805664
    2. ' sys' → logprob: -1.7014222145080566
    3. '	sys' → logprob: -12.076421737670898
    4. '=sys' → logprob: -13.326421737670898
    5. '(sys' → logprob: -13.576421737670898
    6. ' ' → logprob: -15.451421737670898
    7. 'stdin' → logprob: -16.9514217376709
    8. 'iter' → logprob: -17.7014217376709
    9. '   ' → logprob: -17.9514217376709
    10. 'open' → logprob: -17.9514217376709

Token 22: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.666993507067673e-05
    2. 'stdin' → logprob: -10.500036239624023
    3. '.' → logprob: -12.875036239624023
    4. ' stdin' → logprob: -12.875036239624023
    5. '.std' → logprob: -13.500036239624023
    6. '.argv' → logprob: -13.625036239624023
    7. '.stdout' → logprob: -14.000036239624023
    8. '.__' → logprob: -15.625036239624023
    9. ' .' → logprob: -16.000036239624023
    10. '(stdin' → logprob: -16.125036239624023

Token 23: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031486041843891144
    2. ' )' → logprob: -6.503148555755615
    3. '.readline' → logprob: -6.503148555755615
    4. ')
' → logprob: -9.128149032592773
    5. 'if' → logprob: -11.253149032592773
    6. '   ' → logprob: -12.753149032592773
    7. '())' → logprob: -12.878149032592773
    8. '.readlines' → logprob: -13.128149032592773
    9. ')`' → logprob: -13.253149032592773
    10. 'input' → logprob: -13.378149032592773

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009415930137038231
    2. '    ' → logprob: -6.009416103363037
    3. '    
' → logprob: -6.259416103363037
    4. ')' → logprob: -6.759416103363037
    5. 'for' → logprob: -7.509416103363037
    6. ' ' → logprob: -7.509416103363037
    7. '  ' → logprob: -7.759416103363037
    8. '.' → logprob: -8.134415626525879
    9. 'input' → logprob: -8.134415626525879
    10. 'try' → logprob: -8.759415626525879

Token 25: ' input' (ID: 3422)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32406336069107056
    2. 'input' (adapté à ' input') → logprob: -2.449063301086426
    3. 'for' → logprob: -2.699063301086426
    4. 'sys' → logprob: -3.074063301086426
    5. 'try' → logprob: -4.199063301086426
    6. 'line' → logprob: -4.449063301086426
    7. ' for' → logprob: -4.449063301086426
    8. 'next' → logprob: -5.074063301086426
    9. 'reader' → logprob: -5.074063301086426
    10. ' sys' → logprob: -5.199063301086426

Token 26: '_func' (ID: 22252)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07343271374702454
    2. '=' → logprob: -3.448432683944702
    3. '_' → logprob: -3.573432683944702
    4. '_line' → logprob: -4.823432922363281
    5. '_func' → logprob: -7.823432922363281
    6. '_data' → logprob: -8.073432922363281
    7. ' ' → logprob: -8.073432922363281
    8. '_iter' → logprob: -8.198432922363281
    9. '(' → logprob: -8.323432922363281
    10. '_=' → logprob: -8.573432922363281

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868762254714966
    2. '=' → logprob: -1.1368762254714966
    3. ' ' → logprob: -13.136876106262207
    4. '=sys' → logprob: -13.511876106262207
    5. '=lambda' → logprob: -14.511876106262207
    6. '   ' → logprob: -14.761876106262207
    7. '=input' → logprob: -15.011876106262207
    8. '＝' → logprob: -15.136876106262207
    9. '  ' → logprob: -15.511876106262207
    10. '	' → logprob: -16.636877059936523

Token 28: ' reader' (ID: 10958)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.5825732350349426
    2. 'lambda' → logprob: -1.2075731754302979
    3. 'reader' → logprob: -2.457573175430298
    4. 'input' → logprob: -3.832573175430298
    5. ' reader' → logprob: -4.457573413848877
    6. ' sys' → logprob: -4.832573413848877
    7. ' input' → logprob: -4.832573413848877
    8. 'next' → logprob: -5.832573413848877
    9. ' next' → logprob: -5.957573413848877
    10. 'sys' → logprob: -6.457573413848877

Token 29: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.04470907896757126
    2. '__' → logprob: -3.1697089672088623
    3. '.' → logprob: -7.669709205627441
    4. ' =' → logprob: -8.294709205627441
    5. '

' → logprob: -8.669709205627441
    6. '=' → logprob: -9.044709205627441
    7. '.next' → logprob: -9.294709205627441
    8. '.readline' → logprob: -9.294709205627441
    9. '  ' → logprob: -9.419709205627441
    10. '
' → logprob: -9.669709205627441

Token 30: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0002694416616577655
    2. 'iter' → logprob: -8.250269889831543
    3. 'an' → logprob: -12.000269889831543
    4. ' next' → logprob: -13.250269889831543
    5. 'ait' → logprob: -16.375268936157227
    6. 'it' → logprob: -17.250268936157227
    7. '_next' → logprob: -17.375268936157227
    8. '.next' → logprob: -17.625268936157227
    9. 'Next' → logprob: -18.250268936157227
    10. '-next' → logprob: -18.250268936157227

Token 31: '__
' (ID: 26336)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.20225651562213898
    2. '__
' → logprob: -1.7022565603256226
    3. '__
' → logprob: -7.577256679534912
    4. '__

' → logprob: -8.327256202697754
    5. '__)' → logprob: -9.952256202697754
    6. '__()
' → logprob: -10.702256202697754
    7. '__)
' → logprob: -11.202256202697754
    8. '__,
' → logprob: -13.702256202697754
    9. '__(
' → logprob: -13.702256202697754
    10. '__.__' → logprob: -14.202256202697754

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2898924946784973
    2. '
' → logprob: -2.1648924350738525
    3. '()' → logprob: -2.4148924350738525
    4. '    
' → logprob: -3.5398924350738525
    5. '()
' → logprob: -4.789892673492432
    6. ')' → logprob: -5.289892673492432
    7. '\n' → logprob: -7.164892673492432
    8. '  
' → logprob: -7.664892673492432
    9. 'sys' → logprob: -7.664892673492432
    10. '
' → logprob: -7.789892673492432

Token 33: ' sys' (ID: 12228)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45135918259620667
    2. '
' → logprob: -1.2013591527938843
    3. '    
' → logprob: -3.951359272003174
    4. 'sys' (adapté à ' sys') → logprob: -4.076359272003174
    5. '\n' → logprob: -4.826359272003174
    6. 'import' → logprob: -5.576359272003174
    7. '()' → logprob: -5.701359272003174
    8. '
' → logprob: -6.576359272003174
    9. '\' → logprob: -6.701359272003174
    10. '  ' → logprob: -6.701359272003174

Token 34: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.0005062076961621642
    2. '.setdefault' → logprob: -7.625506401062012
    3. '.' → logprob: -11.750506401062012
    4. '.stdin' → logprob: -12.125506401062012
    5. ' .' → logprob: -13.625506401062012
    6. '   ' → logprob: -13.750506401062012
    7. '#set' → logprob: -13.875506401062012
    8. ':set' → logprob: -14.125506401062012
    9. 'set' → logprob: -15.125506401062012
    10. '.Set' → logprob: -15.375506401062012

Token 35: 'rec' (ID: 9285)
  Prédit: 'ursion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.618780791759491
    2. 'rec' → logprob: -0.868780791759491
    3. '_' → logprob: -3.8687808513641357
    4. '_rec' → logprob: -3.9937808513641357
    5. '_limit' → logprob: -6.868780612945557
    6. 'limit' → logprob: -8.243781089782715
    7. ' recursion' → logprob: -8.493781089782715
    8. 're' → logprob: -8.993781089782715
    9. '_int' → logprob: -9.618781089782715
    10. 'ension' → logprob: -9.618781089782715

Token 36: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.003260654164478183
    2. 'limit' → logprob: -6.753260612487793
    3. '_limit' → logprob: -6.878260612487793
    4. 'ur' → logprob: -7.753260612487793
    5. 'urs' → logprob: -8.253260612487793
    6. 't' → logprob: -8.753260612487793
    7. 'ursive' → logprob: -9.378260612487793
    8. 'it' → logprob: -10.378260612487793
    9. 'ut' → logprob: -10.503260612487793
    10. 'urse' → logprob: -11.128260612487793

Token 37: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.3871139883995056
    2. '_limit' → logprob: -1.1371140480041504
    3. 'lim' → logprob: -8.637113571166992
    4. '_depth' → logprob: -10.262113571166992
    5. '_li' → logprob: -12.012113571166992
    6. '_' → logprob: -12.262113571166992
    7. ' limit' → logprob: -12.512113571166992
    8. '(limit' → logprob: -12.637113571166992
    9. 'li' → logprob: -12.887113571166992
    10. 'l' → logprob: -12.887113571166992

Token 38: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.816093228830141e-06
    2. '((' → logprob: -13.62500286102295
    3. ' (' → logprob: -14.12500286102295
    4. '()' → logprob: -14.87500286102295
    5. '("("' → logprob: -15.87500286102295
    6. '(

' → logprob: -16.250001907348633
    7. ')(' → logprob: -17.000001907348633
    8. '(
' → logprob: -17.125001907348633
    9. '(`' → logprob: -17.250001907348633
    10. '(sys' → logprob: -17.500001907348633

Token 39: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00043221889063715935
    2. '100' → logprob: -7.750432014465332
    3. 'int' → logprob: -14.250432014465332
    4. '300' → logprob: -15.750432014465332
    5. '250' → logprob: -15.875432014465332
    6. 'pow' → logprob: -16.00043296813965
    7. '200' → logprob: -16.12543296813965
    8. '500' → logprob: -16.25043296813965
    9. ' ' → logprob: -16.25043296813965
    10. '150' → logprob: -17.00043296813965

Token 40: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.4324868619441986
    2. '**' → logprob: -1.182486891746521
    3. '0' → logprob: -3.3074867725372314
    4. '00' → logprob: -5.3074870109558105
    5. '6' → logprob: -6.1824870109558105
    6. '5' → logprob: -7.6824870109558105
    7. '7' → logprob: -8.682486534118652
    8. ' **' → logprob: -9.307486534118652
    9. '****' → logprob: -9.557486534118652
    10. '```' → logprob: -9.682486534118652

Token 41: '9' (ID: 24)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.10030317306518555
    2. '9' → logprob: -2.3503031730651855
    3. '8' → logprob: -9.725303649902344
    4. '6' → logprob: -10.225303649902344
    5. '**' → logprob: -14.725303649902344
    6. '```' → logprob: -16.850303649902344
    7. '

' → logprob: -17.350303649902344
    8. '``' → logprob: -18.350303649902344
    9. '"' → logprob: -18.725303649902344
    10. '  ' → logprob: -18.975303649902344

Token 42: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8590300139039755e-05
    2. ' )' → logprob: -10.375048637390137
    3. ')
' → logprob: -11.125048637390137
    4. '   ' → logprob: -13.750048637390137
    5. '))' → logprob: -14.125048637390137
    6. ' ' → logprob: -15.375048637390137
    7. ')
' → logprob: -15.750048637390137
    8. ')`' → logprob: -16.37504768371582
    9. ')

' → logprob: -16.75004768371582
    10. '
' → logprob: -17.00004768371582

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05764255300164223
    2. '    
' → logprob: -3.5576424598693848
    3. '<|end|>' → logprob: -3.9326424598693848
    4. '
' → logprob: -5.057642459869385
    5. '    ' → logprob: -7.432642459869385
    6. ')' → logprob: -8.432642936706543
    7. '<|end|>' → logprob: -8.432642936706543
    8. '```' → logprob: -9.057642936706543
    9. '\n' → logprob: -9.682642936706543
    10. 'newline' → logprob: -9.807642936706543

Token 44: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15541356801986694
    2. '<|end|>' → logprob: -2.4054136276245117
    3. '    
' → logprob: -3.4054136276245117
    4. '    ' → logprob: -4.530413627624512
    5. '
' → logprob: -5.530413627624512
    6. ')' → logprob: -6.155413627624512
    7. '  ' → logprob: -7.030413627624512
    8. '<|end|>' → logprob: -7.280413627624512
    9. '\n' → logprob: -7.530413627624512
    10. ' ' → logprob: -8.030413627624512

Token 45: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5759485960006714
    2. ' input' → logprob: -0.8259485960006714
    3. '(input' → logprob: -12.575948715209961
    4. '_input' → logprob: -12.825948715209961
    5. 'reader' → logprob: -14.325948715209961
    6. ',input' → logprob: -14.575948715209961
    7. ' reader' → logprob: -15.200948715209961
    8. '<input' → logprob: -15.325948715209961
    9. '	input' → logprob: -15.325948715209961
    10. '   ' → logprob: -15.325948715209961

Token 46: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.0003995680599473417
    2. '_' → logprob: -7.875399589538574
    3. ' _' → logprob: -11.250399589538574
    4. '_fun' → logprob: -12.875399589538574
    5. '_function' → logprob: -13.750399589538574
    6. '_input' → logprob: -13.875399589538574
    7. '_f' → logprob: -15.125399589538574
    8. '_fu' → logprob: -15.250399589538574
    9. '_put' → logprob: -15.250399589538574
    10. 'func' → logprob: -15.375399589538574

Token 47: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.20789997279644012
    2. ' solve' → logprob: -1.7078999280929565
    3. ' factorial' → logprob: -6.457900047302246
    4. ' process' → logprob: -6.707900047302246
    5. ' solution' → logprob: -6.832900047302246
    6. ' dfs' → logprob: -7.582900047302246
    7. ' calculate' → logprob: -8.207900047302246
    8. ' read' → logprob: -8.207900047302246
    9. ' parse' → logprob: -8.457900047302246
    10. ' ' → logprob: -8.457900047302246

Token 50: '_n' (ID: 2170)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.21092219650745392
    2. '_input' → logprob: -1.9609222412109375
    3. '_' → logprob: -3.5859222412109375
    4. '()' → logprob: -3.9609222412109375
    5. 'line' → logprob: -7.2109222412109375
    6. '():' → logprob: -8.210922241210938
    7. '_data' → logprob: -8.460922241210938
    8. '_int' → logprob: -8.585922241210938
    9. '(' → logprob: -8.960922241210938
    10. '_token' → logprob: -9.085922241210938

Token 51: '(input' (ID: 10054)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6176756024360657
    2. 'umber' → logprob: -1.242675542831421
    3. 'um' → logprob: -2.367675542831421
    4. '_' → logprob: -3.242675542831421
    5. 'umbers' → logprob: -3.492675542831421
    6. 'ame' → logprob: -5.86767578125
    7. 'ext' → logprob: -6.61767578125
    8. 'ames' → logprob: -6.86767578125
    9. '(' → logprob: -7.11767578125
    10. '_numbers' → logprob: -7.11767578125

Token 52: '_func' (ID: 22252)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05221334099769592
    2. '_func' → logprob: -3.177213430404663
    3. '(' → logprob: -5.802213191986084
    4. '_' → logprob: -6.302213191986084
    5. ')_' → logprob: -6.677213191986084
    6. '()' → logprob: -6.927213191986084
    7. '())' → logprob: -7.052213191986084
    8. ' )' → logprob: -8.302213668823242
    9. '_)' → logprob: -8.302213668823242
    10. 'func' → logprob: -8.677213668823242

Token 53: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04414248839020729
    2. '():' → logprob: -3.919142484664917
    3. ')' → logprob: -4.419142723083496
    4. ',' → logprob: -5.294142723083496
    5. '()' → logprob: -5.544142723083496
    6. '(' → logprob: -6.544142723083496
    7. '(n' → logprob: -7.794142723083496
    8. ' ):' → logprob: -7.919142723083496
    9. ':' → logprob: -10.919142723083496
    10. ' ():' → logprob: -10.919142723083496

Token 54: '   ' (ID: 271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.8094227313995361
    2. '   ' → logprob: -0.9344227313995361
    3. '(' → logprob: -1.9344227313995361
    4. '()' → logprob: -5.559422492980957
    5. ' n' → logprob: -5.559422492980957
    6. ' (' → logprob: -5.559422492980957
    7. '_' → logprob: -6.434422492980957
    8. 'n' → logprob: -6.934422492980957
    9. '    ' → logprob: -7.059422492980957
    10. '  ' → logprob: -7.309422492980957

Token 55: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7486511468887329
    2. ' n' → logprob: -1.373651146888733
    3. '    ' → logprob: -1.873651146888733
    4. ' int' → logprob: -3.1236510276794434
    5. ' ' → logprob: -3.7486510276794434
    6. 'int' → logprob: -4.248651027679443
    7. 'n' → logprob: -4.498651027679443
    8. '(' → logprob: -4.623651027679443
    9. '(n' → logprob: -5.873651027679443
    10. '(int' → logprob: -5.873651027679443

Token 56: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.011069637723267078
    2. 'int' → logprob: -4.5110697746276855
    3. ' in' → logprob: -11.636069297790527
    4. '(int' → logprob: -11.761069297790527
    5. '   ' → logprob: -12.636069297790527
    6. '	int' → logprob: -14.636069297790527
    7. ' (' → logprob: -15.511069297790527
    8. ' ints' → logprob: -15.511069297790527
    9. '    ' → logprob: -15.761069297790527
    10. '[int' → logprob: -15.886069297790527

Token 57: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.029831942170858383
    2. '(input' → logprob: -3.529831886291504
    3. '(next' → logprob: -10.154831886291504
    4. '((' → logprob: -10.529831886291504
    5. '(
' → logprob: -12.404831886291504
    6. '('' → logprob: -12.529831886291504
    7. '(

' → logprob: -13.404831886291504
    8. ' (' → logprob: -13.904831886291504
    9. '(open' → logprob: -14.154831886291504
    10. '()' → logprob: -14.154831886291504

Token 58: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -6.704273118884885e-07
    2. 'func' → logprob: -15.125000953674316
    3. '_FUNC' → logprob: -16.0
    4. '_fun' → logprob: -16.625
    5. '_' → logprob: -16.75
    6. 'Func' → logprob: -17.125
    7. '_funcs' → logprob: -17.5
    8. '(func' → logprob: -17.75
    9. '(_' → logprob: -18.5
    10. '(' → logprob: -19.125

Token 59: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011078237555921078
    2. '()' → logprob: -4.511078357696533
    3. ')' → logprob: -10.511077880859375
    4. '())
' → logprob: -13.511077880859375
    5. ' ())' → logprob: -14.386077880859375
    6. '()))' → logprob: -14.761077880859375
    7. '().' → logprob: -15.261077880859375
    8. '();)' → logprob: -15.636077880859375
    9. '()]' → logprob: -15.886077880859375
    10. '()
' → logprob: -16.136077880859375

Token 60: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.575563020305708e-05
    2. '\' → logprob: -10.875065803527832
    3. '
' → logprob: -11.000065803527832
    4. '#' → logprob: -11.750065803527832
    5. '```' → logprob: -11.875065803527832
    6. 'ndef' → logprob: -12.500065803527832
    7. '<|end|>' → logprob: -13.125065803527832
    8. 'd' → logprob: -13.375065803527832
    9. ' def' → logprob: -13.375065803527832
    10. ')' → logprob: -14.000065803527832

Token 61: ' init' (ID: 6327)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.013363509438931942
    2. '_' → logprob: -4.763363361358643
    3. ' def' → logprob: -6.513363361358643
    4. ' main' → logprob: -6.888363361358643
    5. 'read' → logprob: -7.013363361358643
    6. ' write' → logprob: -7.513363361358643
    7. ' process' → logprob: -8.2633638381958
    8. ' _' → logprob: -8.6383638381958
    9. ' solve' → logprob: -9.2633638381958
    10. ' parse' → logprob: -9.7633638381958

Token 62: '_graph' (ID: 33441)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.15337218344211578
    2. '_data' → logprob: -2.653372287750244
    3. '_map' → logprob: -4.153372287750244
    4. '()' → logprob: -4.403372287750244
    5. '_' → logprob: -4.653372287750244
    6. '_stack' → logprob: -4.903372287750244
    7. '_list' → logprob: -5.153372287750244
    8. '_tree' → logprob: -5.278372287750244
    9. '_arrays' → logprob: -5.528372287750244
    10. '_input' → logprob: -6.278372287750244

Token 63: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1592247039079666
    2. '(' → logprob: -2.28422474861145
    3. '(size' → logprob: -3.65922474861145
    4. '(num' → logprob: -5.284224510192871
    5. '(node' → logprob: -5.534224510192871
    6. ' (' → logprob: -5.784224510192871
    7. '_(' → logprob: -6.034224510192871
    8. '_' → logprob: -6.409224510192871
    9. '(input' → logprob: -7.534224510192871
    10. '(_' → logprob: -7.534224510192871

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10410024225711823
    2. ',' → logprob: -2.354100227355957
    3. ')' → logprob: -5.604100227355957
    4. ' ):' → logprob: -9.354100227355957
    5. '):
' → logprob: -9.729100227355957
    6. ',n' → logprob: -10.729100227355957
    7. ' ,' → logprob: -11.604100227355957
    8. ':' → logprob: -11.979100227355957
    9. '   ' → logprob: -12.104100227355957
    10. '),' → logprob: -12.979100227355957

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018749780720099807
    2. 'graph' → logprob: -7.376874923706055
    3. ' graph' → logprob: -7.626874923706055
    4. ' return' → logprob: -7.626874923706055
    5. '	graph' → logprob: -9.001874923706055
    6. 'return' → logprob: -9.376874923706055
    7. '   ' → logprob: -11.001874923706055
    8. '_graph' → logprob: -11.251874923706055
    9. '	return' → logprob: -11.376874923706055
    10. '    ' → logprob: -11.501874923706055

Token 66: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5907193422317505
    2. 'return' (adapté à ' return') → logprob: -1.4657193422317505
    3. 'graph' → logprob: -2.090719223022461
    4. '   ' → logprob: -2.965719223022461
    5. ' graph' → logprob: -3.340719223022461
    6. '{
' → logprob: -7.090719223022461
    7. '{' → logprob: -7.090719223022461
    8. '[' → logprob: -7.215719223022461
    9. ' [' → logprob: -7.840719223022461
    10. '[]' → logprob: -7.840719223022461

Token 67: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03756488859653473
    2. '{' → logprob: -3.787564992904663
    3. ' [[]' → logprob: -4.287564754486084
    4. '[]' → logprob: -8.662565231323242
    5. '{}' → logprob: -9.162565231323242
    6. '[[' → logprob: -9.537565231323242
    7. '[{' → logprob: -10.162565231323242
    8. ' {' → logprob: -10.662565231323242
    9. 'default' → logprob: -10.787565231323242
    10. ' [' → logprob: -10.912565231323242

Token 68: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2014302909374237
    2. 'for' → logprob: -1.701430320739746
    3. ' ' → logprob: -12.076430320739746
    4. ')' → logprob: -12.201430320739746
    5. '   ' → logprob: -12.951430320739746
    6. ',' → logprob: -13.451430320739746
    7. '	for' → logprob: -13.701430320739746
    8. ']' → logprob: -13.951430320739746
    9. 'n' → logprob: -16.32642936706543
    10. ' ' → logprob: -16.45142936706543

Token 69: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002757568145170808
    2. ' _' → logprob: -6.127757549285889
    3. ' range' → logprob: -7.627757549285889
    4. 'range' → logprob: -9.502758026123047
    5. '_range' → logprob: -12.002758026123047
    6. ' ' → logprob: -13.627758026123047
    7. ' i' → logprob: -13.877758026123047
    8. '(range' → logprob: -13.877758026123047
    9. 'i' → logprob: -14.127758026123047
    10. '_i' → logprob: -14.252758026123047

Token 70: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.04551171511411667
    2. 'range' → logprob: -3.5455117225646973
    3. ' in' → logprob: -4.170511722564697
    4. 'n' → logprob: -9.170511245727539
    5. ' range' → logprob: -9.920511245727539
    6. 'ange' → logprob: -11.045511245727539
    7. '_' → logprob: -11.795511245727539
    8. ' ' → logprob: -12.170511245727539
    9. '0' → logprob: -12.670511245727539
    10. '(range' → logprob: -12.920511245727539

Token 71: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0052342405542731285
    2. ' range' → logprob: -5.255234241485596
    3. '(range' → logprob: -15.380233764648438
    4. '	range' → logprob: -15.880233764648438
    5. 'n' → logprob: -17.630233764648438
    6. ' ' → logprob: -18.005233764648438
    7. ')' → logprob: -18.255233764648438
    8. '   ' → logprob: -18.755233764648438
    9. ' xrange' → logprob: -19.005233764648438
    10. 'rang' → logprob: -19.005233764648438

Token 72: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00020389800192788243
    2. '(' → logprob: -8.500204086303711
    3. 'n' → logprob: -15.250204086303711
    4. ' (' → logprob: -15.750204086303711
    5. '(
' → logprob: -18.12520408630371
    6. ')n' → logprob: -19.50020408630371
    7. '((' → logprob: -20.50020408630371
    8. ' n' → logprob: -20.50020408630371
    9. ')' → logprob: -20.87520408630371
    10. '	n' → logprob: -21.12520408630371

Token 73: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.1875571544806007e-05
    2. ')' → logprob: -12.000011444091797
    3. ']' → logprob: -12.250011444091797
    4. ' )' → logprob: -14.625011444091797
    5. ')]
' → logprob: -15.125011444091797
    6. '])' → logprob: -16.625011444091797
    7. ')}' → logprob: -17.375011444091797
    8. '))' → logprob: -17.500011444091797
    9. '   ' → logprob: -17.750011444091797
    10. ')],' → logprob: -17.875011444091797

Token 74: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001011015148833394
    2. '<|end|>' → logprob: -7.251010894775391
    3. '
' → logprob: -9.12601089477539
    4. '```' → logprob: -9.37601089477539
    5. '<|end|>' → logprob: -9.37601089477539
    6. ' def' → logprob: -12.37601089477539
    7. 'ndef' → logprob: -12.50101089477539
    8. 'import' → logprob: -13.12601089477539
    9. '

' → logprob: -13.37601089477539
    10. 'de' → logprob: -13.62601089477539

Token 75: ' read' (ID: 1729)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.11263230443000793
    2. ' add' → logprob: -2.3626322746276855
    3. 'read' → logprob: -4.7376322746276855
    4. 'build' → logprob: -6.7376322746276855
    5. ' read' → logprob: -7.1126322746276855
    6. 'main' → logprob: -7.4876322746276855
    7. 'dfs' → logprob: -7.8626322746276855
    8. 'input' → logprob: -8.362632751464844
    9. ' main' → logprob: -8.987632751464844
    10. ' build' → logprob: -9.487632751464844

Token 76: '_edge' (ID: 43226)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.027906395494937897
    2. '_edge' → logprob: -4.65290641784668
    3. '_graph' → logprob: -4.77790641784668
    4. '_' → logprob: -6.40290641784668
    5. '_list' → logprob: -7.02790641784668
    6. '_nodes' → logprob: -7.15290641784668
    7. '_a' → logprob: -7.27790641784668
    8. '_n' → logprob: -7.40290641784668
    9. '_e' → logprob: -7.52790641784668
    10. '_data' → logprob: -7.77790641784668

Token 77: '(input' (ID: 10054)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.012896427884697914
    2. '_s' → logprob: -4.512896537780762
    3. '(input' → logprob: -6.887896537780762
    4. '(s' → logprob: -7.637896537780762
    5. '(' → logprob: -8.512896537780762
    6. '```' → logprob: -9.762896537780762
    7. '_input' → logprob: -10.887896537780762
    8. '(n' → logprob: -11.137896537780762
    9. '_(' → logprob: -11.387896537780762
    10. '_' → logprob: -11.637896537780762

Token 78: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -1.1994775377388578e-05
    2. '_' → logprob: -12.125012397766113
    3. 'func' → logprob: -13.000012397766113
    4. ')' → logprob: -14.000012397766113
    5. '_fun' → logprob: -14.250012397766113
    6. ')_' → logprob: -14.375012397766113
    7. '_funcs' → logprob: -14.375012397766113
    8. '_function' → logprob: -14.750012397766113
    9. '_FUNC' → logprob: -14.875012397766113
    10. '_f' → logprob: -14.875012397766113

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1749686598777771
    2. '()' → logprob: -2.174968719482422
    3. '():' → logprob: -3.424968719482422
    4. ')' → logprob: -4.549968719482422
    5. '(' → logprob: -6.924968719482422
    6. '(n' → logprob: -7.174968719482422
    7. '):
' → logprob: -7.299968719482422
    8. '():
' → logprob: -8.299968719482422
    9. ',' → logprob: -8.424968719482422
    10. '   ' → logprob: -8.424968719482422

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022478213533759117
    2. '()' → logprob: -4.022478103637695
    3. '():' → logprob: -6.147478103637695
    4. 'def' → logprob: -7.522478103637695
    5. 'return' → logprob: -8.022478103637695
    6. 'line' → logprob: -8.272478103637695
    7. '=' → logprob: -8.397478103637695
    8. ' line' → logprob: -8.897478103637695
    9. 'u' → logprob: -9.022478103637695
    10. '(u' → logprob: -9.272478103637695

Token 81: ' a' (ID: 261)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.016147566959261894
    2. 'a' (adapté à ' a') → logprob: -4.391147613525391
    3. '   ' → logprob: -5.891147613525391
    4. ' u' → logprob: -7.891147613525391
    5. 'return' → logprob: -8.76614761352539
    6. 'line' → logprob: -9.14114761352539
    7. 'def' → logprob: -9.26614761352539
    8. '```' → logprob: -10.26614761352539
    9. 'data' → logprob: -10.89114761352539
    10. '_u' → logprob: -10.89114761352539

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07169072329998016
    2. ' ,' → logprob: -3.071690797805786
    3. ',b' → logprob: -3.821690797805786
    4. '_,' → logprob: -7.696690559387207
    5. ',_' → logprob: -8.321690559387207
    6. '_' → logprob: -9.196690559387207
    7. ',a' → logprob: -10.321690559387207
    8. '_str' → logprob: -10.821690559387207
    9. 'b' → logprob: -11.196690559387207
    10. ' ' → logprob: -11.571690559387207

Token 83: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.28118544816970825
    2. ' b' → logprob: -1.4061853885650635
    3. ' ' → logprob: -10.406185150146484
    4. ',b' → logprob: -14.031185150146484
    5. 's' → logprob: -14.156185150146484
    6. 'm' → logprob: -14.281185150146484
    7. '  ' → logprob: -14.656185150146484
    8. ',' → logprob: -14.781185150146484
    9. '    ' → logprob: -15.031185150146484
    10. ' s' → logprob: -15.531185150146484

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868916928768158
    2. '=' → logprob: -1.1368917226791382
    3. ',' → logprob: -10.88689136505127
    4. '=input' → logprob: -14.51189136505127
    5. ' ' → logprob: -14.76189136505127
    6. ')' → logprob: -15.51189136505127
    7. '＝' → logprob: -15.88689136505127
    8. '=int' → logprob: -16.636892318725586
    9. ' =
' → logprob: -16.761892318725586
    10. '   ' → logprob: -16.761892318725586

Token 85: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.01611425168812275
    2. 'map' → logprob: -4.141114234924316
    3. ' input' → logprob: -9.891114234924316
    4. ' ' → logprob: -11.016114234924316
    5. '  ' → logprob: -12.641114234924316
    6. '   ' → logprob: -12.891114234924316
    7. '	map' → logprob: -13.141114234924316
    8. ' list' → logprob: -13.516114234924316
    9. '(map' → logprob: -13.516114234924316
    10. 'input' → logprob: -13.516114234924316

Token 86: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.02995770052075386
    2. '(' → logprob: -3.6549577713012695
    3. '(lambda' → logprob: -5.9049577713012695
    4. '<|end|>' → logprob: -7.2799577713012695
    5. '<int' → logprob: -9.02995777130127
    6. '(str' → logprob: -10.15495777130127
    7. '(input' → logprob: -10.77995777130127
    8. '(eval' → logprob: -11.52995777130127
    9. '[int' → logprob: -11.65495777130127
    10. 'int' → logprob: -12.15495777130127

Token 87: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.3885965943336487
    2. ',' → logprob: -1.388596534729004
    3. '(input' → logprob: -2.638596534729004
    4. '(' → logprob: -8.013596534729004
    5. 'input' → logprob: -8.263596534729004
    6. ' ,' → logprob: -8.263596534729004
    7. ')' → logprob: -8.763596534729004
    8. '(),' → logprob: -10.888596534729004
    9. ',(' → logprob: -11.263596534729004
    10. '=input' → logprob: -11.388596534729004

Token 88: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.16024291515350342
    2. 'input' → logprob: -1.9102429151535034
    3. ')' → logprob: -11.285243034362793
    4. '(input' → logprob: -12.535243034362793
    5. ',input' → logprob: -13.910243034362793
    6. '	input' → logprob: -14.285243034362793
    7. '=input' → logprob: -15.035243034362793
    8. '[input' → logprob: -15.160243034362793
    9. ' ' → logprob: -15.660243034362793
    10. ' )' → logprob: -16.160242080688477

Token 89: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.00011307948443572968
    2. 'func' → logprob: -9.250113487243652
    3. ')' → logprob: -12.500113487243652
    4. '_FUNC' → logprob: -12.750113487243652
    5. '(func' → logprob: -12.750113487243652
    6. '(' → logprob: -12.875113487243652
    7. '```' → logprob: -13.250113487243652
    8. 'Func' → logprob: -14.500113487243652
    9. '_fun' → logprob: -14.625113487243652
    10. '_' → logprob: -14.875113487243652

Token 90: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.06729471683502197
    2. ')' → logprob: -2.8172945976257324
    3. '())' → logprob: -5.817294597625732
    4. '()' → logprob: -6.192294597625732
    5. '))' → logprob: -9.19229507446289
    6. ' )' → logprob: -9.44229507446289
    7. ' ' → logprob: -10.31729507446289
    8. ').' → logprob: -10.56729507446289
    9. '()))' → logprob: -11.44229507446289
    10. '(' → logprob: -11.81729507446289

Token 91: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005719788023270667
    2. 'strip' → logprob: -7.500572204589844
    3. 'rstrip' → logprob: -11.000572204589844
    4. ' split' → logprob: -13.375572204589844
    5. 'spl' → logprob: -14.875572204589844
    6. '(split' → logprob: -15.125572204589844
    7. ')' → logprob: -16.500572204589844
    8. 's' → logprob: -17.500572204589844
    9. 'plit' → logprob: -18.625572204589844
    10. '.split' → logprob: -19.375572204589844

Token 92: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.12165437638759613
    2. ')' → logprob: -2.2466542720794678
    3. '()' → logprob: -4.746654510498047
    4. '(' → logprob: -10.121654510498047
    5. '())
' → logprob: -10.871654510498047
    6. '))' → logprob: -10.996654510498047
    7. '(),' → logprob: -11.371654510498047
    8. '()))' → logprob: -11.371654510498047
    9. ' )' → logprob: -12.121654510498047
    10. ' ())' → logprob: -13.871654510498047

Token 93: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 94: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 95: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14880557358264923
    2. '(a' → logprob: -2.398805618286133
    3. ' a' → logprob: -3.148805618286133
    4. ' (' → logprob: -5.398805618286133
    5. '(' → logprob: -12.023805618286133
    6. '[a' → logprob: -12.773805618286133
    7. '	a' → logprob: -13.523805618286133
    8. ' ' → logprob: -14.148805618286133
    9. '   ' → logprob: -14.898805618286133
    10. ' ' → logprob: -15.898805618286133

Token 96: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5250741839408875
    2. '-' → logprob: -0.9000741839408875
    3. ',' → logprob: -7.025074005126953
    4. ' ' → logprob: -7.400074005126953
    5. ' ,' → logprob: -8.025074005126953
    6. ' -,' → logprob: -10.025074005126953
    7. '-,' → logprob: -10.150074005126953
    8. '1' → logprob: -11.650074005126953
    9. '<|end|>' → logprob: -11.775074005126953
    10. ' ' → logprob: -11.900074005126953

Token 97: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.746380237629637e-05
    2. ' ' → logprob: -9.250097274780273
    3. '<|end|>' → logprob: -13.625097274780273
    4. '```' → logprob: -16.250097274780273
    5. '   ' → logprob: -17.750097274780273
    6. '１' → logprob: -18.125097274780273
    7. '<|end|>' → logprob: -18.500097274780273
    8. ',' → logprob: -18.625097274780273
    9. '=' → logprob: -18.750097274780273
    10. '[' → logprob: -18.875097274780273

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '<|end|>' → logprob: -15.375001907348633
    4. '１' → logprob: -17.125001907348633
    5. '```' → logprob: -18.875001907348633
    6. '১' → logprob: -19.250001907348633
    7. '۱' → logprob: -19.500001907348633
    8. '{' → logprob: -19.750001907348633
    9. '१' → logprob: -19.750001907348633
    10. '<|end|>' → logprob: -20.000001907348633

Token 99: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03394315764307976
    2. ',b' → logprob: -4.033943176269531
    3. ' ,' → logprob: -4.158943176269531
    4. '<|end|>' → logprob: -10.533943176269531
    5. ' ' → logprob: -11.408943176269531
    6. ',
' → logprob: -12.658943176269531
    7. 'b' → logprob: -13.908943176269531
    8. ' ,
' → logprob: -14.158943176269531
    9. ' b' → logprob: -14.408943176269531
    10. ',a' → logprob: -14.783943176269531

Token 100: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5759396553039551
    2. 'b' → logprob: -0.8259396553039551
    3. '	b' → logprob: -16.200939178466797
    4. '<|end|>' → logprob: -16.575939178466797
    5. ' ' → logprob: -16.950939178466797
    6. ' ' → logprob: -18.075939178466797
    7. ')b' → logprob: -19.200939178466797
    8. '(b' → logprob: -19.200939178466797
    9. '   ' → logprob: -19.325939178466797
    10. '    ' → logprob: -19.825939178466797

Token 101: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0028374455869197845
    2. '-' → logprob: -5.877837657928467
    3. '<|end|>' → logprob: -11.002837181091309
    4. ' ' → logprob: -11.127837181091309
    5. '<|end|>' → logprob: -14.377837181091309
    6. ' ' → logprob: -16.002838134765625
    7. '1' → logprob: -16.377838134765625
    8. ' -
' → logprob: -16.627838134765625
    9. ' –' → logprob: -17.252838134765625
    10. ',' → logprob: -17.252838134765625

Token 102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00676107918843627
    2. ' ' → logprob: -5.006761074066162
    3. '<|end|>' → logprob: -10.00676155090332
    4. '```' → logprob: -15.25676155090332
    5. '<|end|>' → logprob: -15.88176155090332
    6. '2' → logprob: -16.50676155090332
    7. ' ' → logprob: -16.63176155090332
    8. ' one' → logprob: -18.13176155090332
    9. '   ' → logprob: -18.13176155090332
    10. '`' → logprob: -18.19426155090332

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.625000953674316
    3. '<|end|>' → logprob: -15.125000953674316
    4. '```' → logprob: -17.875
    5. '１' → logprob: -19.875
    6. '۱' → logprob: -19.875
    7. '   ' → logprob: -19.9375
    8. '<|end|>' → logprob: -20.75
    9. '`' → logprob: -20.8125
    10. '2' → logprob: -21.0

Token 104: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4046459197998047
    2. '
' → logprob: -1.4046459197998047
    3. '<|end|>' → logprob: -2.6546459197998047
    4. ':' → logprob: -5.279645919799805
    5. '```' → logprob: -5.404645919799805
    6. '\n' → logprob: -6.779645919799805
    7. '\' → logprob: -6.904645919799805
    8. '<|end|>' → logprob: -6.904645919799805
    9. '#' → logprob: -7.029645919799805
    10. '

' → logprob: -7.529645919799805

Token 106: ' build' (ID: 3024)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.08931662887334824
    2. 'dfs' → logprob: -2.9643166065216064
    3. ' main' → logprob: -3.4643166065216064
    4. ' solve' → logprob: -6.7143168449401855
    5. ' bfs' → logprob: -8.089316368103027
    6. ' add' → logprob: -8.214316368103027
    7. ' build' → logprob: -8.589316368103027
    8. 'main' → logprob: -8.964316368103027
    9. ' find' → logprob: -8.964316368103027
    10. ' read' → logprob: -9.214316368103027

Token 107: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.00039051592466421425
    2. '_' → logprob: -8.25039005279541
    3. 'graph' → logprob: -10.00039005279541
    4. '(graph' → logprob: -10.50039005279541
    5. '_tree' → logprob: -11.50039005279541
    6. '(' → logprob: -11.62539005279541
    7. '```' → logprob: -11.87539005279541
    8. '_edges' → logprob: -12.00039005279541
    9. '<|end|>' → logprob: -12.12539005279541
    10. '_GRAPH' → logprob: -12.87539005279541

Token 108: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.031023599207401276
    2. '(input' → logprob: -3.5310235023498535
    3. '(' → logprob: -7.0310235023498535
    4. ' (' → logprob: -7.9060235023498535
    5. '(graph' → logprob: -11.906023979187012
    6. '(edges' → logprob: -12.781023979187012
    7. '(
' → logprob: -12.906023979187012
    8. '(num' → logprob: -13.406023979187012
    9. '(nodes' → logprob: -13.656023979187012
    10. '```' → logprob: -14.281023979187012

Token 109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012503541074693203
    2. ',input' → logprob: -6.876250267028809
    3. '):' → logprob: -8.751250267028809
    4. ' ,' → logprob: -10.501250267028809
    5. ',n' → logprob: -10.626250267028809
    6. ')' → logprob: -13.501250267028809
    7. '):
' → logprob: -14.001250267028809
    8. '   ' → logprob: -14.251250267028809
    9. ',
' → logprob: -14.376250267028809
    10. ',a' → logprob: -14.376250267028809

Token 110: ' G' (ID: 499)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7185987234115601
    2. 'input' → logprob: -0.9685987234115601
    3. 'edges' → logprob: -2.8435988426208496
    4. ' input' → logprob: -3.2185988426208496
    5. ' m' → logprob: -4.09359884262085
    6. ' edges' → logprob: -4.21859884262085
    7. 'edge' → logprob: -6.09359884262085
    8. 'read' → logprob: -8.218598365783691
    9. '   ' → logprob: -8.343598365783691
    10. ' edge' → logprob: -8.968598365783691

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008882584050297737
    2. '):' → logprob: -4.758882522583008
    3. '):
' → logprob: -8.758882522583008
    4. ' ,' → logprob: -10.008882522583008
    5. ',n' → logprob: -10.633882522583008
    6. ')' → logprob: -11.133882522583008
    7. ',input' → logprob: -12.258882522583008
    8. ',G' → logprob: -12.508882522583008
    9. ',
' → logprob: -12.758882522583008
    10. ',a' → logprob: -13.133882522583008

Token 112: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7200008034706116
    2. 'm' → logprob: -0.9700008034706116
    3. ' input' → logprob: -2.220000743865967
    4. ' m' → logprob: -3.845000743865967
    5. ' edges' → logprob: -6.720000743865967
    6. 'edges' → logprob: -6.970000743865967
    7. 'M' → logprob: -7.470000743865967
    8. 'edge' → logprob: -7.720000743865967
    9. ' ' → logprob: -8.595001220703125
    10. ')' → logprob: -8.720001220703125

Token 113: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -5.438573680294212e-06
    2. 'func' → logprob: -12.375005722045898
    3. '_' → logprob: -14.375005722045898
    4. '_f' → logprob: -14.625005722045898
    5. '_fun' → logprob: -16.2500057220459
    6. '_FUNC' → logprob: -16.5000057220459
    7. '_function' → logprob: -17.3750057220459
    8. ')' → logprob: -17.6250057220459
    9. ')_' → logprob: -17.8750057220459
    10. '_funcs' → logprob: -18.6250057220459

Token 114: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00034356804098933935
    2. '):
' → logprob: -8.000343322753906
    3. ')' → logprob: -12.625343322753906
    4. ' ):' → logprob: -12.625343322753906
    5. ':' → logprob: -14.125343322753906
    6. '):
' → logprob: -15.125343322753906
    7. ',' → logprob: -15.375343322753906
    8. '():' → logprob: -16.000343322753906
    9. '   ' → logprob: -16.375343322753906
    10. '=' → logprob: -17.250343322753906

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011088619939982891
    2. ' for' → logprob: -4.636088848114014
    3. 'for' → logprob: -6.636088848114014
    4. '	for' → logprob: -12.011088371276855
    5. '
' → logprob: -12.886088371276855
    6. '    
' → logprob: -12.886088371276855
    7. ' ' → logprob: -13.136088371276855
    8. ')' → logprob: -13.136088371276855
    9. '<|end|>' → logprob: -13.136088371276855
    10. '  ' → logprob: -14.261088371276855

Token 116: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6210599541664124
    2. 'for' (adapté à ' for') → logprob: -0.8710599541664124
    3. ' for' → logprob: -3.1210598945617676
    4. '	for' → logprob: -12.996060371398926
    5. '    
' → logprob: -12.996060371398926
    6. '```' → logprob: -13.746060371398926
    7. '
' → logprob: -14.371060371398926
    8. 'm' → logprob: -14.621060371398926
    9. 'edges' → logprob: -15.621060371398926
    10. ' ' → logprob: -15.746060371398926

Token 117: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3868755102157593
    2. '_' → logprob: -1.1368755102157593
    3. ' ' → logprob: -13.01187515258789
    4. '_range' → logprob: -14.13687515258789
    5. ' in' → logprob: -14.51187515258789
    6. '_i' → logprob: -15.38687515258789
    7. 'range' → logprob: -15.38687515258789
    8. ' range' → logprob: -15.38687515258789
    9. ' ' → logprob: -15.63687515258789
    10. '_in' → logprob: -16.63687515258789

Token 118: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2824660539627075
    2. 'in' → logprob: -1.5324660539627075
    3. 'range' → logprob: -3.532465934753418
    4. ' range' → logprob: -7.157465934753418
    5. ' ' → logprob: -10.282465934753418
    6. '(range' → logprob: -11.782465934753418
    7. 'n' → logprob: -12.282465934753418
    8. 'import' → logprob: -12.532465934753418
    9. '(' → logprob: -12.907465934753418
    10. '  ' → logprob: -13.157465934753418

Token 119: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0002273774443892762
    2. ' range' → logprob: -8.875226974487305
    3. '(range' → logprob: -9.375226974487305
    4. 'ange' → logprob: -13.125226974487305
    5. '	range' → logprob: -14.750226974487305
    6. ')' → logprob: -16.875226974487305
    7. 'n' → logprob: -16.875226974487305
    8. '```' → logprob: -17.125226974487305
    9. ' ' → logprob: -17.250226974487305
    10. '[' → logprob: -17.500226974487305

Token 120: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.465036105713807e-06
    2. 'n' → logprob: -12.375007629394531
    3. '(' → logprob: -12.875007629394531
    4. ' n' → logprob: -14.875007629394531
    5. ' (' → logprob: -15.375007629394531
    6. '	n' → logprob: -18.87500762939453
    7. ' ' → logprob: -20.12500762939453
    8. '   ' → logprob: -20.62500762939453
    9. '((' → logprob: -20.62500762939453
    10. '(
' → logprob: -21.37500762939453

Token 121: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38899990916252136
    2. '-' → logprob: -1.1389999389648438
    3. '):' → logprob: -6.388999938964844
    4. '   ' → logprob: -8.513999938964844
    5. '):
' → logprob: -8.763999938964844
    6. ' ' → logprob: -10.263999938964844
    7. ' ):' → logprob: -11.388999938964844
    8. '  ' → logprob: -11.513999938964844
    9. ')' → logprob: -11.638999938964844
    10. ' ' → logprob: -11.888999938964844

Token 122: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007119550718925893
    2. ' ' → logprob: -7.250711917877197
    3. '-' → logprob: -14.875712394714355
    4. ')' → logprob: -14.875712394714355
    5. '
' → logprob: -15.625712394714355
    6. '۱' → logprob: -15.625712394714355
    7. '<|end|>' → logprob: -15.625712394714355
    8. '１' → logprob: -15.750712394714355
    9. ' ' → logprob: -16.00071144104004
    10. '```' → logprob: -16.31321144104004

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.8961017202818766e-05
    2. ' ' → logprob: -9.750059127807617
    3. '<|end|>' → logprob: -15.375059127807617
    4. '2' → logprob: -15.500059127807617
    5. ')' → logprob: -15.750059127807617
    6. '   ' → logprob: -17.875059127807617
    7. '```' → logprob: -17.875059127807617
    8. '  ' → logprob: -18.125059127807617
    9. '１' → logprob: -18.312559127807617
    10. '۱' → logprob: -18.500059127807617

Token 124: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009981546550989151
    2. '):
' → logprob: -5.009981632232666
    3. ':' → logprob: -5.759981632232666
    4. ' ):' → logprob: -9.884981155395508
    5. ')' → logprob: -10.134981155395508
    6. '   ' → logprob: -11.509981155395508
    7. '):
' → logprob: -12.509981155395508
    8. ' :' → logprob: -13.759981155395508
    9. ':
' → logprob: -13.759981155395508
    10. '():' → logprob: -14.009981155395508

Token 125: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004264777526259422
    2. '   ' → logprob: -6.379264831542969
    3. '<|end|>' → logprob: -6.504264831542969
    4. ',' → logprob: -7.254264831542969
    5. 'a' → logprob: -8.629264831542969
    6. ' a' → logprob: -9.629264831542969
    7. ',a' → logprob: -10.754264831542969
    8. ' ' → logprob: -10.879264831542969
    9. '<|end|>' → logprob: -10.879264831542969
    10. '    ' → logprob: -11.629264831542969

Token 126: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.027360105887055397
    2. ' a' → logprob: -3.652360200881958
    3. '   ' → logprob: -7.152359962463379
    4. 'u' → logprob: -8.277359962463379
    5. ' u' → logprob: -11.152359962463379
    6. '	a' → logprob: -12.777359962463379
    7. ',a' → logprob: -13.402359962463379
    8. ',' → logprob: -14.027359962463379
    9. '       ' → logprob: -14.402359962463379
    10. 'x' → logprob: -15.402359962463379

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017672323156148195
    2. ',b' → logprob: -8.750176429748535
    3. ' ,' → logprob: -11.000176429748535
    4. 'b' → logprob: -14.000176429748535
    5. ',a' → logprob: -15.125176429748535
    6. '‌,' → logprob: -15.875176429748535
    7. ',
' → logprob: -16.00017738342285
    8. '<|end|>' → logprob: -16.37517738342285
    9. 'a' → logprob: -17.00017738342285
    10. '_,' → logprob: -17.12517738342285

Token 128: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019288709154352546
    2. ' b' → logprob: -6.251928806304932
    3. '<|end|>' → logprob: -15.12692928314209
    4. ' ' → logprob: -17.751928329467773
    5. '_b' → logprob: -19.876928329467773
    6. '    ' → logprob: -20.626928329467773
    7. '  ' → logprob: -20.876928329467773
    8. '	b' → logprob: -21.126928329467773
    9. ')b' → logprob: -21.376928329467773
    10. '<|end|>' → logprob: -21.501928329467773

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193464756011963
    2. '=' → logprob: -1.5019346475601196
    3. ',' → logprob: -12.876935005187988
    4. ')' → logprob: -13.001935005187988
    5. ' =)' → logprob: -15.876935005187988
    6. '<|end|>' → logprob: -15.876935005187988
    7. ' =
' → logprob: -16.001934051513672
    8. ')=' → logprob: -16.126934051513672
    9. ' ' → logprob: -16.626934051513672
    10. '=
' → logprob: -16.876934051513672

Token 130: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.004620710853487253
    2. 'read' → logprob: -5.379620552062988
    3. '	read' → logprob: -14.754620552062988
    4. ' ' → logprob: -17.129621505737305
    5. '_read' → logprob: -17.754621505737305
    6. '(read' → logprob: -17.879621505737305
    7. '    ' → logprob: -18.504621505737305
    8. '.read' → logprob: -19.004621505737305
    9. ' ' → logprob: -19.004621505737305
    10. ' write' → logprob: -19.504621505737305

Token 131: '_edge' (ID: 43226)
  Prédit: '_edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -7.612634362885728e-05
    2. '_' → logprob: -9.625076293945312
    3. 'edge' → logprob: -12.000076293945312
    4. '_edges' → logprob: -12.750076293945312
    5. '_EDGE' → logprob: -15.125076293945312
    6. '_ed' → logprob: -15.875076293945312
    7. '_
' → logprob: -16.250076293945312
    8. 'Edge' → logprob: -16.375076293945312
    9. ' edge' → logprob: -16.500076293945312
    10. '_line' → logprob: -16.875076293945312

Token 132: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -8.65707261255011e-06
    2. '(' → logprob: -12.375008583068848
    3. 'input' → logprob: -12.625008583068848
    4. ',input' → logprob: -14.250008583068848
    5. '=input' → logprob: -15.125008583068848
    6. ' input' → logprob: -17.000009536743164
    7. ' (' → logprob: -17.000009536743164
    8. '[input' → logprob: -17.500009536743164
    9. '(output' → logprob: -17.625009536743164
    10. '(
' → logprob: -18.625009536743164

Token 133: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.000553151941858232
    2. 'func' → logprob: -7.500553131103516
    3. '_FUNC' → logprob: -17.125553131103516
    4. '	func' → logprob: -17.375553131103516
    5. ' func' → logprob: -17.750553131103516
    6. 'Func' → logprob: -17.875553131103516
    7. '```' → logprob: -18.750553131103516
    8. '_funcs' → logprob: -19.000553131103516
    9. '.func' → logprob: -19.625553131103516
    10. ')' → logprob: -19.625553131103516

Token 134: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.558399319241289e-05
    2. ')
' → logprob: -11.125025749206543
    3. ' )' → logprob: -11.625025749206543
    4. '())' → logprob: -13.875025749206543
    5. '))' → logprob: -14.625025749206543
    6. '()' → logprob: -16.125024795532227
    7. ')`' → logprob: -16.125024795532227
    8. ')

' → logprob: -17.250024795532227
    9. ')
' → logprob: -17.250024795532227
    10. '),' → logprob: -17.250024795532227

Token 135: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015332124195992947
    2. '   ' → logprob: -4.390332221984863
    3. '
' → logprob: -6.015332221984863
    4. 'G' → logprob: -8.515332221984863
    5. ' G' → logprob: -9.765332221984863
    6. ',' → logprob: -10.515332221984863
    7. '        
' → logprob: -11.015332221984863
    8. '<|end|>' → logprob: -11.515332221984863
    9. '           ' → logprob: -11.765332221984863
    10. '	G' → logprob: -11.890332221984863

Token 136: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.015719346702098846
    2. ' G' → logprob: -4.390719413757324
    3. '   ' → logprob: -5.765719413757324
    4. '       ' → logprob: -9.890719413757324
    5. '	G' → logprob: -11.765719413757324
    6. '
' → logprob: -12.265719413757324
    7. ' ' → logprob: -12.265719413757324
    8. '  ' → logprob: -12.765719413757324
    9. '    ' → logprob: -15.515719413757324
    10. '_G' → logprob: -15.640719413757324

Token 137: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -7.910643762443215e-05
    2. '[b' → logprob: -9.500079154968262
    3. '[' → logprob: -12.625079154968262
    4. 'a' → logprob: -14.125079154968262
    5. ' [' → logprob: -16.125078201293945
    6. '```' → logprob: -17.500078201293945
    7. '[A' → logprob: -18.000078201293945
    8. '[
' → logprob: -18.250078201293945
    9. ')[' → logprob: -19.000078201293945
    10. '[s' → logprob: -19.375078201293945

Token 138: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00015276329941116273
    2. ']' → logprob: -9.125152587890625
    3. '.append' → logprob: -10.375152587890625
    4. ' ].' → logprob: -11.500152587890625
    5. '.' → logprob: -13.750152587890625
    6. ').' → logprob: -14.250152587890625
    7. '   ' → logprob: -14.750152587890625
    8. 'append' → logprob: -16.000152587890625
    9. '[' → logprob: -16.625152587890625
    10. ''].' → logprob: -16.875152587890625

Token 139: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -4.320199877838604e-07
    2. ' append' → logprob: -15.25
    3. '.append' → logprob: -16.125
    4. 'appen' → logprob: -18.25
    5. 'app' → logprob: -20.125
    6. '_append' → logprob: -20.25
    7. '	append' → logprob: -20.375
    8. 'Append' → logprob: -20.625
    9. 'add' → logprob: -21.0
    10. ' ' → logprob: -22.875

Token 140: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00020354038861114532
    2. 'b' → logprob: -8.500203132629395
    3. '(' → logprob: -16.37520408630371
    4. '(
' → logprob: -18.37520408630371
    5. '	b' → logprob: -19.37520408630371
    6. ')b' → logprob: -19.62520408630371
    7. ' b' → logprob: -19.75020408630371
    8. ' (' → logprob: -20.62520408630371
    9. ',b' → logprob: -23.25020408630371
    10. '_b' → logprob: -23.50020408630371

Token 141: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011755822924897075
    2. ')
' → logprob: -6.751175403594971
    3. ' )' → logprob: -12.251175880432129
    4. ')

' → logprob: -15.751175880432129
    5. ')
' → logprob: -15.751175880432129
    6. ')#' → logprob: -16.251174926757812
    7. '   ' → logprob: -16.251174926757812
    8. '),' → logprob: -17.126174926757812
    9. ' )
' → logprob: -17.376174926757812
    10. '<|end|>' → logprob: -17.626174926757812

Token 142: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29621681571006775
    2. '       ' → logprob: -1.5462168455123901
    3. '<|end|>' → logprob: -3.4212167263031006
    4. '
' → logprob: -5.29621696472168
    5. '	G' → logprob: -6.17121696472168
    6. 'G' → logprob: -6.42121696472168
    7. ' G' → logprob: -7.17121696472168
    8. ' ' → logprob: -8.17121696472168
    9. ')' → logprob: -8.79621696472168
    10. '<|end|>' → logprob: -9.04621696472168

Token 143: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.0015111699467524886
    2. ' G' → logprob: -6.501511096954346
    3. '   ' → logprob: -11.751511573791504
    4. '       ' → logprob: -14.001511573791504
    5. '	G' → logprob: -16.501510620117188
    6. ' ' → logprob: -18.001510620117188
    7. '  ' → logprob: -18.376510620117188
    8. '    ' → logprob: -19.251510620117188
    9. '           ' → logprob: -19.751510620117188
    10. '<|end|>' → logprob: -19.751510620117188

Token 144: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -8.625866030342877e-05
    2. 'b' → logprob: -9.875085830688477
    3. '[' → logprob: -10.750085830688477
    4. '][' → logprob: -11.625085830688477
    5. '[a' → logprob: -12.750085830688477
    6. '```' → logprob: -14.750085830688477
    7. ']' → logprob: -14.875085830688477
    8. ' [' → logprob: -15.500085830688477
    9. ')[' → logprob: -16.000085830688477
    10. '[s' → logprob: -16.625085830688477

Token 145: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00029506313148885965
    2. ']' → logprob: -8.25029468536377
    3. ').' → logprob: -11.12529468536377
    4. ' ].' → logprob: -11.37529468536377
    5. '.' → logprob: -12.12529468536377
    6. '   ' → logprob: -14.37529468536377
    7. '])' → logprob: -14.75029468536377
    8. '.append' → logprob: -15.00029468536377
    9. ')' → logprob: -15.37529468536377
    10. '[' → logprob: -16.000295639038086

Token 146: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.7432603272027336e-06
    2. ' append' → logprob: -13.375001907348633
    3. 'app' → logprob: -17.250001907348633
    4. '	append' → logprob: -17.250001907348633
    5. '.append' → logprob: -17.375001907348633
    6. 'appen' → logprob: -17.500001907348633
    7. '_append' → logprob: -17.625001907348633
    8. 'Append' → logprob: -18.000001907348633
    9. 'add' → logprob: -18.625001907348633
    10. 'prepend' → logprob: -19.500001907348633

Token 147: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -4.68022444692906e-05
    2. '(' → logprob: -10.000046730041504
    3. 'a' → logprob: -14.000046730041504
    4. '(
' → logprob: -14.500046730041504
    5. ' (' → logprob: -18.87504768371582
    6. '(A' → logprob: -19.25004768371582
    7. '(

' → logprob: -20.25004768371582
    8. ')' → logprob: -20.37504768371582
    9. '((' → logprob: -20.37504768371582
    10. '(s' → logprob: -20.50004768371582

Token 148: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020377879263833165
    2. ')
' → logprob: -8.500204086303711
    3. ' )' → logprob: -15.875204086303711
    4. ')return' → logprob: -15.875204086303711
    5. ')

' → logprob: -16.87520408630371
    6. '   ' → logprob: -17.37520408630371
    7. '<|end|>' → logprob: -17.75020408630371
    8. '
' → logprob: -18.87520408630371
    9. ')
' → logprob: -19.12520408630371
    10. '))' → logprob: -19.25020408630371

Token 149: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20972909033298492
    2. '<|end|>' → logprob: -1.7097290754318237
    3. '\n' → logprob: -5.709729194641113
    4. 'def' → logprob: -6.834729194641113
    5. '    
' → logprob: -7.084729194641113
    6. '   ' → logprob: -7.084729194641113
    7. '```' → logprob: -7.209729194641113
    8. '

' → logprob: -7.834729194641113
    9. '<|end|>' → logprob: -8.084729194641113
    10. 'newline' → logprob: -8.584729194641113

Token 150: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 151: ' G' (ID: 499)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.24062153697013855
    2. ' None' → logprob: -1.615621566772461
    3. 'G' → logprob: -4.365621566772461
    4. ' G' → logprob: -6.240621566772461
    5. '<|end|>' → logprob: -8.115621566772461
    6. ' ' → logprob: -9.865621566772461
    7. 'def' → logprob: -10.740621566772461
    8. '
' → logprob: -10.740621566772461
    9. ' 
' → logprob: -11.740621566772461
    10. '(None' → logprob: -12.490621566772461

Token 152: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39975684881210327
    2. '<|end|>' → logprob: -1.774756908416748
    3. 'def' → logprob: -1.899756908416748
    4. '

' → logprob: -4.649756908416748
    5. '<|end|>' → logprob: -7.899756908416748
    6. '
' → logprob: -8.52475643157959
    7. '```' → logprob: -9.39975643157959
    8. 'from' → logprob: -10.77475643157959
    9. '#' → logprob: -10.89975643157959
    10. 'newline' → logprob: -11.02475643157959

Token 153: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00015312091272789985
    2. 'from' → logprob: -9.375153541564941
    3. 'import' → logprob: -9.875153541564941
    4. 'visited' → logprob: -11.500153541564941
    5. 'depth' → logprob: -12.750153541564941
    6. 'dfs' → logprob: -13.250153541564941
    7. '#' → logprob: -14.875153541564941
    8. 'class' → logprob: -15.000153541564941
    9. '
' → logprob: -15.750153541564941
    10. '```' → logprob: -15.750153541564941

Token 154: ' init' (ID: 6327)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.027032485231757164
    2. ' main' → logprob: -4.152032375335693
    3. 'dfs' → logprob: -4.652032375335693
    4. ' bfs' → logprob: -6.902032375335693
    5. ' solve' → logprob: -9.152032852172852
    6. ' find' → logprob: -9.277032852172852
    7. 'main' → logprob: -9.777032852172852
    8. ' ' → logprob: -10.527032852172852
    9. ' depth' → logprob: -10.777032852172852
    10. 'b' → logprob: -11.652032852172852

Token 155: '_flag' (ID: 25269)
  Prédit: '_stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_stack' → logprob: -0.690949022769928
    2. '_' → logprob: -0.815949022769928
    3. '_depth' → logprob: -4.315948963165283
    4. '_queue' → logprob: -4.440948963165283
    5. '_dist' → logprob: -4.815948963165283
    6. '_d' → logprob: -5.440948963165283
    7. '_dp' → logprob: -5.440948963165283
    8. '_parent' → logprob: -6.190948963165283
    9. '_color' → logprob: -6.190948963165283
    10. '_visit' → logprob: -6.315948963165283

Token 156: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1325400471687317
    2. 's' → logprob: -2.132539987564087
    3. '_list' → logprob: -6.257540225982666
    4. '_array' → logprob: -6.382540225982666
    5. '(' → logprob: -7.132540225982666
    6. '():' → logprob: -7.882540225982666
    7. 'array' → logprob: -8.632539749145508
    8. ' (' → logprob: -9.257539749145508
    9. 'es' → logprob: -9.507539749145508
    10. '_' → logprob: -9.632539749145508

Token 157: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08903729170560837
    2. '):
' → logprob: -2.4640371799468994
    3. '):
' → logprob: -10.33903694152832
    4. ')' → logprob: -10.46403694152832
    5. ' ):' → logprob: -11.33903694152832
    6. '=' → logprob: -11.83903694152832
    7. '   ' → logprob: -12.21403694152832
    8. ',' → logprob: -12.71403694152832
    9. '():' → logprob: -12.96403694152832
    10. '():
' → logprob: -13.58903694152832

Token 158: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040961313992738724
    2. 'return' → logprob: -3.290961265563965
    3. ' return' → logprob: -6.040961265563965
    4. '[' → logprob: -7.540961265563965
    5. ' ' → logprob: -13.165961265563965
    6. ' [' → logprob: -13.665961265563965
    7. '	return' → logprob: -13.915961265563965
    8. '  ' → logprob: -14.415961265563965
    9. '```' → logprob: -14.665961265563965
    10. '
' → logprob: -16.04096221923828

Token 159: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.23563142120838165
    2. 'return' (adapté à ' return') → logprob: -1.6106314659118652
    3. '   ' → logprob: -5.235631465911865
    4. '[' → logprob: -5.860631465911865
    5. ' [' → logprob: -6.235631465911865
    6. ' ' → logprob: -10.610630989074707
    7. '	return' → logprob: -12.610630989074707
    8. '  ' → logprob: -13.360630989074707
    9. 'eturn' → logprob: -13.985630989074707
    10. '0' → logprob: -14.235630989074707

Token 160: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008647724171169102
    2. ' [' → logprob: -7.7508649826049805
    3. '[n' → logprob: -7.7508649826049805
    4. '   ' → logprob: -13.50086498260498
    5. '[node' → logprob: -14.37586498260498
    6. '[-' → logprob: -14.50086498260498
    7. '[a' → logprob: -15.12586498260498
    8. '[name' → logprob: -15.50086498260498
    9. '[int' → logprob: -16.250864028930664
    10. '[N' → logprob: -16.875864028930664

Token 161: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0002456046058796346
    2. '0' → logprob: -8.500246047973633
    3. 'True' → logprob: -10.875246047973633
    4. ' False' → logprob: -11.125246047973633
    5. '-' → logprob: -12.000246047973633
    6. '-F' → logprob: -13.125246047973633
    7. '[' → logprob: -15.375246047973633
    8. '(False' → logprob: -16.875246047973633
    9. '-f' → logprob: -17.500246047973633
    10. 'None' → logprob: -18.000246047973633

Token 162: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2142736166715622
    2. ']*' → logprob: -1.9642735719680786
    3. ' for' → logprob: -2.964273691177368
    4. 'for' → logprob: -6.964273452758789
    5. ']*(' → logprob: -10.089273452758789
    6. ' ]' → logprob: -10.464273452758789
    7. '	for' → logprob: -13.839273452758789
    8. '   ' → logprob: -15.214273452758789
    9. ']+' → logprob: -15.589273452758789
    10. ')' → logprob: -15.839273452758789

Token 163: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0046860878355801105
    2. ' *' → logprob: -5.754685878753662
    3. '*n' → logprob: -6.504685878753662
    4. ' for' → logprob: -13.00468635559082
    5. '   ' → logprob: -13.50468635559082
    6. '(n' → logprob: -13.75468635559082
    7. ' ' → logprob: -14.00468635559082
    8. 'n' → logprob: -14.00468635559082
    9. '[n' → logprob: -14.12968635559082
    10. 'for' → logprob: -14.62968635559082

Token 164: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0040785204619169235
    2. ' n' → logprob: -5.504078388214111
    3. '(n' → logprob: -16.629077911376953
    4. '	n' → logprob: -18.129077911376953
    5. '   ' → logprob: -21.129077911376953
    6. ')n' → logprob: -21.254077911376953
    7. ' (' → logprob: -21.629077911376953
    8. '(' → logprob: -22.004077911376953
    9. ' ' → logprob: -22.129077911376953
    10. '```' → logprob: -22.254077911376953

Token 165: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3291953206062317
    2. '<|end|>' → logprob: -1.704195261001587
    3. 'def' → logprob: -2.579195261001587
    4. '

' → logprob: -3.829195261001587
    5. '<|end|>' → logprob: -7.454195499420166
    6. '
' → logprob: -8.454195022583008
    7. '```' → logprob: -8.954195022583008
    8. '  
' → logprob: -10.829195022583008
    9. ' def' → logprob: -10.954195022583008
    10. '\n' → logprob: -11.329195022583008

Token 166: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.76628842484206e-05
    2. '<|end|>' → logprob: -10.125067710876465
    3. 'import' → logprob: -12.250067710876465
    4. '
' → logprob: -12.750067710876465
    5. 'from' → logprob: -12.750067710876465
    6. 'visited' → logprob: -12.750067710876465
    7. '<|end|>' → logprob: -12.875067710876465
    8. '#' → logprob: -13.000067710876465
    9. 'ndef' → logprob: -13.250067710876465
    10. 'dfs' → logprob: -13.500067710876465

Token 167: ' set' (ID: 920)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.5312450528144836
    2. 'dfs' → logprob: -0.9062450528144836
    3. ' main' → logprob: -5.781245231628418
    4. ' bfs' → logprob: -6.031245231628418
    5. 'b' → logprob: -7.656245231628418
    6. ' solve' → logprob: -7.656245231628418
    7. 'main' → logprob: -7.781245231628418
    8. 'solve' → logprob: -8.531245231628418
    9. 'def' → logprob: -8.781245231628418
    10. ' is' → logprob: -8.906245231628418

Token 168: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.10162592679262161
    2. '_depth' → logprob: -4.101625919342041
    3. 'flag' → logprob: -4.226625919342041
    4. '_' → logprob: -4.226625919342041
    5. '_parent' → logprob: -4.476625919342041
    6. '_flags' → logprob: -4.601625919342041
    7. '_color' → logprob: -4.601625919342041
    8. '_stack' → logprob: -4.976625919342041
    9. '_par' → logprob: -5.726625919342041
    10. '_rec' → logprob: -5.976625919342041

Token 169: '(flag' (ID: 69186)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.40634211897850037
    2. '(flag' → logprob: -1.1563421487808228
    3. '_flag' → logprob: -5.281342029571533
    4. '(' → logprob: -5.406342029571533
    5. ' (' → logprob: -6.281342029571533
    6. '(index' → logprob: -6.531342029571533
    7. 'flag' → logprob: -6.656342029571533
    8. '(node' → logprob: -6.906342029571533
    9. '(value' → logprob: -6.906342029571533
    10. '(i' → logprob: -7.031342029571533

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001289163250476122
    2. ',n' → logprob: -7.251289367675781
    3. '):' → logprob: -8.251289367675781
    4. '[n' → logprob: -9.751289367675781
    5. ',node' → logprob: -9.751289367675781
    6. ',index' → logprob: -10.251289367675781
    7. '[' → logprob: -10.501289367675781
    8. '[node' → logprob: -10.626289367675781
    9. ' ,' → logprob: -10.876289367675781
    10. ')' → logprob: -11.126289367675781

Token 171: ' idx' (ID: 14016)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.1385397911071777
    2. ' v' → logprob: -1.5135397911071777
    3. ' node' → logprob: -2.0135397911071777
    4. 'index' → logprob: -2.2635397911071777
    5. ' index' → logprob: -2.6385397911071777
    6. 'node' → logprob: -3.0135397911071777
    7. 'pos' → logprob: -3.5135397911071777
    8. ' idx' → logprob: -3.7635397911071777
    9. ' pos' → logprob: -4.013539791107178
    10. 'idx' → logprob: -4.388539791107178

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006097654812037945
    2. '):' → logprob: -5.256097793579102
    3. ' ,' → logprob: -7.756097793579102
    4. '):
' → logprob: -8.131097793579102
    5. ')' → logprob: -9.256097793579102
    6. ',value' → logprob: -10.381097793579102
    7. '=' → logprob: -13.256097793579102
    8. ']:' → logprob: -13.381097793579102
    9. ' ):' → logprob: -13.381097793579102
    10. ']' → logprob: -13.506097793579102

Token 173: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.8073919415473938
    2. 'value' → logprob: -1.057391881942749
    3. ' val' → logprob: -2.307391881942749
    4. '1' → logprob: -2.807391881942749
    5. 'val' → logprob: -3.307391881942749
    6. ' ' → logprob: -4.682392120361328
    7. 'v' → logprob: -7.807392120361328
    8. ' v' → logprob: -8.432392120361328
    9. '   ' → logprob: -9.682392120361328
    10. '0' → logprob: -10.432392120361328

Token 174: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00042388198198750615
    2. ')' → logprob: -7.875423908233643
    3. '):
' → logprob: -10.125423431396484
    4. ' ):' → logprob: -13.375423431396484
    5. ':' → logprob: -13.500423431396484
    6. '=' → logprob: -14.500423431396484
    7. '):
' → logprob: -16.750423431396484
    8. '():' → logprob: -17.000423431396484
    9. ',' → logprob: -17.125423431396484
    10. ' ' → logprob: -17.375423431396484

Token 175: '   ' (ID: 271)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5882390141487122
    2. ' =' → logprob: -0.8382390141487122
    3. '=value' → logprob: -4.7132391929626465
    4. '   ' → logprob: -6.9632391929626465
    5. ' flag' → logprob: -7.0882391929626465
    6. 'flag' → logprob: -7.7132391929626465
    7. ' value' → logprob: -7.8382391929626465
    8. 'value' → logprob: -8.088238716125488
    9. ' =
' → logprob: -9.838238716125488
    10. '=True' → logprob: -10.088238716125488

Token 176: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.33774128556251526
    2. ' flag' → logprob: -1.5877412557601929
    3. 'value' → logprob: -2.5877413749694824
    4. ' value' → logprob: -4.962741374969482
    5. '   ' → logprob: -10.962740898132324
    6. '=value' → logprob: -10.962740898132324
    7. ' =' → logprob: -12.087740898132324
    8. '	flag' → logprob: -12.837740898132324
    9. '=' → logprob: -13.462740898132324
    10. '_flag' → logprob: -13.712740898132324

Token 177: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0003373694489710033
    2. '[' → logprob: -8.000337600708008
    3. '[index' → logprob: -14.250337600708008
    4. 'idx' → logprob: -14.625337600708008
    5. '[int' → logprob: -15.625337600708008
    6. '[i' → logprob: -15.750337600708008
    7. ' idx' → logprob: -16.000337600708008
    8. '[id' → logprob: -16.500337600708008
    9. ' [' → logprob: -16.625337600708008
    10. '_idx' → logprob: -17.125337600708008

Token 178: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00021474185632541776
    2. ']=' → logprob: -8.750214576721191
    3. ' ]' → logprob: -10.500214576721191
    4. ')' → logprob: -10.500214576721191
    5. '])' → logprob: -14.625214576721191
    6. '=' → logprob: -14.750214576721191
    7. ')]' → logprob: -14.875214576721191
    8. ' )' → logprob: -18.250215530395508
    9. ')=' → logprob: -18.375215530395508
    10. ' ' → logprob: -18.625215530395508

Token 179: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020678490400314
    2. ' =' → logprob: -2.3502068519592285
    3. '=value' → logprob: -16.10020637512207
    4. ' ' → logprob: -16.85020637512207
    5. '＝' → logprob: -17.60020637512207
    6. '=
' → logprob: -18.35020637512207
    7. '=int' → logprob: -18.35020637512207
    8. ')=' → logprob: -18.47520637512207
    9. ')' → logprob: -18.60020637512207
    10. ' =
' → logprob: -18.97520637512207

Token 180: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.008619419299066067
    2. ' value' → logprob: -4.75861930847168
    3. '1' → logprob: -12.25861930847168
    4. ' ' → logprob: -16.88361930847168
    5. '	value' → logprob: -17.25861930847168
    6. '(value' → logprob: -17.75861930847168
    7. '"value' → logprob: -17.88361930847168
    8. ')value' → logprob: -18.13361930847168
    9. '$value' → logprob: -18.25861930847168
    10. '=value' → logprob: -18.75861930847168

Token 181: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6336278319358826
    2. '<|end|>' → logprob: -0.7586278319358826
    3. 'def' → logprob: -7.883627891540527
    4. '

' → logprob: -8.008627891540527
    5. '\n' → logprob: -8.883627891540527
    6. '<|end|>' → logprob: -9.008627891540527
    7. '```' → logprob: -11.258627891540527
    8. '    
' → logprob: -11.758627891540527
    9. '   ' → logprob: -11.758627891540527
    10. 'return' → logprob: -11.883627891540527

Token 182: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005768565461039543
    2. '<|end|>' → logprob: -5.255768775939941
    3. '
' → logprob: -7.755768775939941
    4. '#' → logprob: -10.255768775939941
    5. '<|end|>' → logprob: -11.130768775939941
    6. 'import' → logprob: -11.380768775939941
    7. ' def' → logprob: -11.505768775939941
    8. '0' → logprob: -12.255768775939941
    9. ')' → logprob: -12.380768775939941
    10. '```' → logprob: -12.755768775939941

Token 183: ' get' (ID: 717)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.5306432843208313
    2. ' dfs' → logprob: -0.9056432843208313
    3. ' main' → logprob: -6.405643463134766
    4. ' bfs' → logprob: -6.405643463134766
    5. 'def' → logprob: -6.655643463134766
    6. 'main' → logprob: -7.280643463134766
    7. 'b' → logprob: -7.280643463134766
    8. 'depth' → logprob: -7.530643463134766
    9. ' depth' → logprob: -8.280643463134766
    10. 'is' → logprob: -8.405643463134766

Token 184: '_neighbors' (ID: 142549)
  Prédit: '_flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.00017815368482843041
    2. 'flag' → logprob: -8.750178337097168
    3. '_' → logprob: -11.750178337097168
    4. '(flag' → logprob: -12.125178337097168
    5. '_value' → logprob: -12.250178337097168
    6. ' flag' → logprob: -14.500178337097168
    7. 'Flag' → logprob: -14.875178337097168
    8. '_FLAG' → logprob: -15.625178337097168
    9. '_f' → logprob: -15.875178337097168
    10. '_flags' → logprob: -16.00017738342285

Token 185: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.530942976474762
    2. '(' → logprob: -0.905942976474762
    3. ' (' → logprob: -5.280942916870117
    4. '(flag' → logprob: -6.405942916870117
    5. '(node' → logprob: -8.155942916870117
    6. '(graph' → logprob: -8.655942916870117
    7. 'def' → logprob: -9.155942916870117
    8. '<|end|>' → logprob: -9.155942916870117
    9. '(
' → logprob: -9.655942916870117
    10. '(index' → logprob: -10.030942916870117

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.023293538717553e-05
    2. ' ,' → logprob: -10.875030517578125
    3. '[' → logprob: -12.375030517578125
    4. ',node' → logprob: -13.125030517578125
    5. ',index' → logprob: -13.750030517578125
    6. ',
' → logprob: -14.375030517578125
    7. ',[' → logprob: -14.500030517578125
    8. '[],' → logprob: -14.625030517578125
    9. '[node' → logprob: -15.000030517578125
    10. ')' → logprob: -15.250030517578125

Token 187: ' node' (ID: 4596)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.4561057686805725
    2. 'node' → logprob: -1.4561057090759277
    3. ' idx' → logprob: -2.4561057090759277
    4. ' node' → logprob: -3.2061057090759277
    5. 'index' → logprob: -5.706105709075928
    6. 'u' → logprob: -6.206105709075928
    7. 'v' → logprob: -6.956105709075928
    8. 'i' → logprob: -8.581106185913086
    9. ' u' → logprob: -9.331106185913086
    10. ' index' → logprob: -9.581106185913086

Token 188: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0035900946240872145
    2. '):
' → logprob: -5.753590106964111
    3. ')' → logprob: -8.003589630126953
    4. '[node' → logprob: -9.753589630126953
    5. '[' → logprob: -12.378589630126953
    6. ',' → logprob: -12.378589630126953
    7. '[]):' → logprob: -12.628589630126953
    8. ' ):' → logprob: -13.128589630126953
    9. ']:' → logprob: -13.628589630126953
    10. '):
' → logprob: -13.628589630126953

Token 189: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.32477298378944397
    2. 'return' → logprob: -1.3247729539871216
    3. '   ' → logprob: -4.699772834777832
    4. 'G' → logprob: -6.699772834777832
    5. ' G' → logprob: -6.824772834777832
    6. '	return' → logprob: -10.949772834777832
    7. ' ' → logprob: -11.949772834777832
    8. '
' → logprob: -13.199772834777832
    9. ':return' → logprob: -13.949772834777832
    10. '	G' → logprob: -14.074772834777832

Token 190: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3141883611679077
    2. ' return' → logprob: -1.3141883611679077
    3. 'G' → logprob: -7.439188480377197
    4. '   ' → logprob: -8.314188003540039
    5. ' G' → logprob: -9.314188003540039
    6. ' ' → logprob: -13.689188003540039
    7. '	return' → logprob: -13.814188003540039
    8. ':return' → logprob: -14.814188003540039
    9. '
' → logprob: -15.814188003540039
    10. 'eturn' → logprob: -16.18918800354004

Token 191: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.07889022678136826
    2. ' G' → logprob: -2.578890323638916
    3. '	G' → logprob: -14.953889846801758
    4. '   ' → logprob: -15.953889846801758
    5. ' ' → logprob: -16.953889846801758
    6. ' ' → logprob: -17.328889846801758
    7. '_G' → logprob: -18.078889846801758
    8. 'Ｇ' → logprob: -18.203889846801758
    9. '[G' → logprob: -18.328889846801758
    10. '(G' → logprob: -19.203889846801758

Token 192: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -5.1689596148207784e-05
    2. '[' → logprob: -9.875051498413086
    3. ' [' → logprob: -16.750051498413086
    4. '[n' → logprob: -16.875051498413086
    5. '[user' → logprob: -16.875051498413086
    6. 'node' → logprob: -17.500051498413086
    7. '[
' → logprob: -17.500051498413086
    8. '[token' → logprob: -17.875051498413086
    9. '```' → logprob: -18.000051498413086
    10. '[int' → logprob: -18.250051498413086

Token 193: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12920230627059937
    2. ')' → logprob: -2.129202365875244
    3. '<|end|>' → logprob: -6.754202365875244
    4. '}' → logprob: -6.879202365875244
    5. ' ]' → logprob: -10.754201889038086
    6. ')]' → logprob: -11.004201889038086
    7. ' ' → logprob: -11.504201889038086
    8. '<|end|>' → logprob: -11.629201889038086
    9. '']' → logprob: -12.504201889038086
    10. '])' → logprob: -12.879201889038086

Token 194: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.6166903151315637e-05
    2. '<|end|>' → logprob: -12.250016212463379
    3. '```' → logprob: -12.625016212463379
    4. 'dfs' → logprob: -13.000016212463379
    5. ':def' → logprob: -13.500016212463379
    6. 'from' → logprob: -13.750016212463379
    7. '#' → logprob: -14.125016212463379
    8. 'import' → logprob: -14.750016212463379
    9. 'DFS' → logprob: -15.000016212463379
    10. ' def' → logprob: -15.250016212463379

Token 195: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.3385978043079376
    2. 'dfs' → logprob: -1.4635977745056152
    3. 'def' → logprob: -3.7135977745056152
    4. ' bfs' → logprob: -3.9635977745056152
    5. ' def' → logprob: -4.713597774505615
    6. 'b' → logprob: -6.338597774505615
    7. ' main' → logprob: -7.213597774505615
    8. ' find' → logprob: -8.713598251342773
    9. ' is' → logprob: -8.963598251342773
    10. 'main' → logprob: -9.463598251342773

Token 196: '_visit' (ID: 130996)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.2673746943473816
    2. '(' → logprob: -1.7673747539520264
    3. '(G' → logprob: -2.7673747539520264
    4. '(graph' → logprob: -7.767374515533447
    5. '(root' → logprob: -9.267374992370605
    6. '(flag' → logprob: -9.392374992370605
    7. ' (' → logprob: -9.517374992370605
    8. '_recursive' → logprob: -9.642374992370605
    9. '(n' → logprob: -9.767374992370605
    10. '_flag' → logprob: -10.767374992370605

Token 197: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.07703982293605804
    2. '(node' → logprob: -3.0770397186279297
    3. '(' → logprob: -3.5770397186279297
    4. '(graph' → logprob: -10.20203971862793
    5. '(
' → logprob: -10.95203971862793
    6. ' (' → logprob: -10.95203971862793
    7. '(flag' → logprob: -12.95203971862793
    8. '(D' → logprob: -13.07703971862793
    9. '(n' → logprob: -13.07703971862793
    10. '(parent' → logprob: -13.32703971862793

Token 198: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6286106983898208e-05
    2. ',node' → logprob: -11.375016212463379
    3. ' ,' → logprob: -12.375016212463379
    4. '<|end|>' → logprob: -15.625016212463379
    5. ',
' → logprob: -15.750016212463379
    6. ',n' → logprob: -16.875017166137695
    7. '‌,' → logprob: -17.250017166137695
    8. ',user' → logprob: -18.125017166137695
    9. ')' → logprob: -18.250017166137695
    10. ',

' → logprob: -19.125017166137695

Token 199: ' flag' (ID: 9641)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.265073299407959
    2. ' node' → logprob: -1.515073299407959
    3. 'flag' → logprob: -4.640073299407959
    4. 'u' → logprob: -6.640073299407959
    5. 'v' → logprob: -7.265073299407959
    6. ' flag' → logprob: -7.515073299407959
    7. 'visited' → logprob: -8.140073776245117
    8. ' u' → logprob: -9.140073776245117
    9. ' v' → logprob: -9.265073776245117
    10. 'current' → logprob: -9.390073776245117

Token 200: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.251091377227567e-05
    2. ',node' → logprob: -10.625042915344238
    3. ' ,' → logprob: -11.000042915344238
    4. '[node' → logprob: -14.750042915344238
    5. '),' → logprob: -15.250042915344238
    6. '‌,' → logprob: -15.625042915344238
    7. '[],' → logprob: -15.875042915344238
    8. ')' → logprob: -16.125041961669922
    9. ',n' → logprob: -16.375041961669922
    10. ',
' → logprob: -16.750041961669922

Token 201: ' cur' (ID: 4396)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.3502446115016937
    2. ' node' → logprob: -1.2252446413040161
    3. 'u' → logprob: -6.850244522094727
    4. 'v' → logprob: -8.975244522094727
    5. 'current' → logprob: -9.225244522094727
    6. 'start' → logprob: -9.225244522094727
    7. ' u' → logprob: -9.350244522094727
    8. 'stack' → logprob: -9.350244522094727
    9. ' current' → logprob: -9.600244522094727
    10. ' stack' → logprob: -10.100244522094727

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1866053193807602
    2. 'ent' → logprob: -2.561605215072632
    3. '_node' → logprob: -2.561605215072632
    4. ',node' → logprob: -5.061605453491211
    5. 'node' → logprob: -5.186605453491211
    6. ')' → logprob: -6.061605453491211
    7. 'nt' → logprob: -7.936605453491211
    8. ' ,' → logprob: -7.936605453491211
    9. ',_' → logprob: -8.811605453491211
    10. ' node' → logprob: -8.936605453491211

Token 203: ' par' (ID: 686)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.4596917927265167
    2. ' parent' → logprob: -1.0846917629241943
    3. 'prev' → logprob: -4.709692001342773
    4. 'par' → logprob: -5.084692001342773
    5. 'target' → logprob: -5.834692001342773
    6. 'depth' → logprob: -6.084692001342773
    7. ' par' → logprob: -6.459692001342773
    8. ' target' → logprob: -6.584692001342773
    9. ' prev' → logprob: -6.709692001342773
    10. 'val' → logprob: -6.959692001342773

Token 204: ',' (ID: 11)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3959183692932129
    2. 'ent' → logprob: -1.145918369293213
    3. ',' → logprob: -5.395918369293213
    4. '):
' → logprob: -5.770918369293213
    5. ')' → logprob: -6.770918369293213
    6. '=None' → logprob: -9.395917892456055
    7. '):' → logprob: -10.145917892456055
    8. 'nt' → logprob: -10.270917892456055
    9. 'rent' → logprob: -10.770917892456055
    10. ')t' → logprob: -11.895917892456055

Token 205: ' f' (ID: 285)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -1.315429449081421
    2. ' res' → logprob: -1.940429449081421
    3. 'ans' → logprob: -2.065429449081421
    4. 'res' → logprob: -2.565429449081421
    5. ' depth' → logprob: -2.565429449081421
    6. 'result' → logprob: -2.565429449081421
    7. 'color' → logprob: -3.565429449081421
    8. ' ans' → logprob: -3.565429449081421
    9. 'answer' → logprob: -3.690429449081421
    10. ' result' → logprob: -3.815429449081421

Token 206: '):
' (ID: 1883)
  Prédit: 'lag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lag' → logprob: -0.02223305217921734
    2. 'unc' → logprob: -5.147233009338379
    3. ')' → logprob: -5.397233009338379
    4. 'lags' → logprob: -5.522233009338379
    5. 'unction' → logprob: -6.022233009338379
    6. 'l' → logprob: -6.522233009338379
    7. 'lg' → logprob: -7.147233009338379
    8. '):
' → logprob: -7.397233009338379
    9. 'rom' → logprob: -7.897233009338379
    10. '):' → logprob: -8.272233009338379

Token 207: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7343754768371582
    2. '   ' → logprob: -0.7343754768371582
    3. ':
' → logprob: -3.859375476837158
    4. ',' → logprob: -5.734375476837158
    5. '):' → logprob: -5.734375476837158
    6. '<|end|>' → logprob: -5.859375476837158
    7. '):
' → logprob: -5.984375476837158
    8. '[' → logprob: -6.859375476837158
    9. ':set' → logprob: -6.859375476837158
    10. ' if' → logprob: -6.984375476837158

Token 208: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.15448181331157684
    2. ' set' → logprob: -2.404481887817383
    3. '   ' → logprob: -4.029481887817383
    4. 'if' → logprob: -4.154481887817383
    5. 'flag' → logprob: -4.529481887817383
    6. 'for' → logprob: -5.779481887817383
    7. ' if' → logprob: -6.029481887817383
    8. ' flag' → logprob: -7.154481887817383
    9. 'f' → logprob: -7.279481887817383
    10. ' for' → logprob: -7.529481887817383

Token 209: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -6.2729995988775045e-06
    2. 'flag' → logprob: -12.000006675720215
    3. '(flag' → logprob: -17.8750057220459
    4. ' flag' → logprob: -18.1250057220459
    5. '_f' → logprob: -18.5000057220459
    6. '_FLAG' → logprob: -18.6250057220459
    7. '_' → logprob: -18.7500057220459
    8. '_flags' → logprob: -19.3750057220459
    9. 'f' → logprob: -19.5000057220459
    10. 'Flag' → logprob: -19.6250057220459

Token 210: '(flag' (ID: 69186)
  Prédit: '(flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(flag' → logprob: -0.0004903609515167773
    2. 'flag' → logprob: -7.625490188598633
    3. ' flag' → logprob: -13.250490188598633
    4. '	flag' → logprob: -14.625490188598633
    5. '```' → logprob: -16.875490188598633
    6. '_flag' → logprob: -17.250490188598633
    7. '(flags' → logprob: -17.375490188598633
    8. 'Flag' → logprob: -17.625490188598633
    9. '.flag' → logprob: -17.750490188598633
    10. ')' → logprob: -18.375490188598633

Token 211: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00023691373644396663
    2. ' ,' → logprob: -8.375236511230469
    3. '[cur' → logprob: -13.500236511230469
    4. ',current' → logprob: -13.750236511230469
    5. ',
' → logprob: -13.875236511230469
    6. ',f' → logprob: -14.125236511230469
    7. ')' → logprob: -15.250236511230469
    8. '),' → logprob: -15.500236511230469
    9. '(cur' → logprob: -15.500236511230469
    10. '```' → logprob: -15.500236511230469

Token 212: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -9.627176768844947e-05
    2. ' cur' → logprob: -9.250096321105957
    3. '_cur' → logprob: -18.12509536743164
    4. '[cur' → logprob: -18.12509536743164
    5. '	cur' → logprob: -18.25009536743164
    6. '(cur' → logprob: -19.37509536743164
    7. ' ' → logprob: -20.50009536743164
    8. 'Cur' → logprob: -20.62509536743164
    9. 'current' → logprob: -21.62509536743164
    10. '-cur' → logprob: -21.62509536743164

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4987974029500037e-05
    2. ' ,' → logprob: -10.625024795532227
    3. '1' → logprob: -15.500024795532227
    4. ' ' → logprob: -16.375024795532227
    5. ')' → logprob: -16.500024795532227
    6. '0' → logprob: -16.750024795532227
    7. '),' → logprob: -16.750024795532227
    8. ',
' → logprob: -17.500024795532227
    9. '=' → logprob: -17.625024795532227
    10. '‌,' → logprob: -17.625024795532227

Token 214: ' f' (ID: 285)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009202735964208841
    2. 'f' → logprob: -7.750920295715332
    3. '2' → logprob: -8.375920295715332
    4. ' ' → logprob: -8.500920295715332
    5. 'True' → logprob: -10.250920295715332
    6. '-' → logprob: -11.375920295715332
    7. 'par' → logprob: -12.750920295715332
    8. ' f' → logprob: -13.250920295715332
    9. 'cur' → logprob: -13.625920295715332
    10. '3' → logprob: -14.000920295715332

Token 215: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017304863780736923
    2. '+' → logprob: -4.51730489730835
    3. '[cur' → logprob: -5.51730489730835
    4. ')
' → logprob: -6.89230489730835
    5. ' +' → logprob: -7.01730489730835
    6. '(cur' → logprob: -8.267304420471191
    7. '-' → logprob: -11.767304420471191
    8. 'cur' → logprob: -11.892304420471191
    9. '1' → logprob: -12.017304420471191
    10. '[' → logprob: -12.267304420471191

Token 216: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5115694403648376
    2. 'for' → logprob: -1.5115694999694824
    3. ' for' → logprob: -2.0115694999694824
    4. '
' → logprob: -3.6365694999694824
    5. '    
' → logprob: -4.636569499969482
    6. '<|end|>' → logprob: -5.261569499969482
    7. 'neighbors' → logprob: -6.261569499969482
    8. '	for' → logprob: -7.136569499969482
    9. ',' → logprob: -8.136569023132324
    10. ' neighbors' → logprob: -8.261569023132324

Token 217: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0009206312242895365
    2. ' for' → logprob: -7.00092077255249
    3. '   ' → logprob: -11.750920295715332
    4. 'neighbors' → logprob: -13.875920295715332
    5. '	for' → logprob: -16.25092124938965
    6. 'stack' → logprob: -17.00092124938965
    7. ' neighbors' → logprob: -17.50092124938965
    8. '    
' → logprob: -18.25092124938965
    9. '```' → logprob: -18.50092124938965
    10. ' ' → logprob: -20.00092124938965

Token 218: ' to' (ID: 316)
  Prédit: ' nxt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -0.5714915990829468
    2. ' neighbor' → logprob: -1.6964915990829468
    3. 'neighbor' → logprob: -2.3214917182922363
    4. ' nei' → logprob: -2.3214917182922363
    5. ' next' → logprob: -4.196491718292236
    6. 'nei' → logprob: -4.196491718292236
    7. 'ne' → logprob: -5.071491718292236
    8. ' neigh' → logprob: -5.446491718292236
    9. ' nex' → logprob: -5.571491718292236
    10. 'next' → logprob: -5.946491718292236

Token 219: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0789644792675972
    2. 'in' → logprob: -2.5789644718170166
    3. ' ' → logprob: -10.203964233398438
    4. ',' → logprob: -10.703964233398438
    5. 's' → logprob: -12.328964233398438
    6. 'n' → logprob: -12.703964233398438
    7. '	in' → logprob: -13.078964233398438
    8. '_in' → logprob: -13.203964233398438
    9. '[' → logprob: -14.828964233398438
    10. '  ' → logprob: -14.953964233398438

Token 220: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.062301523983478546
    2. ' get' → logprob: -2.8123016357421875
    3. 'G' → logprob: -8.187301635742188
    4. ' G' → logprob: -10.062301635742188
    5. '(get' → logprob: -11.562301635742188
    6. '   ' → logprob: -13.562301635742188
    7. '	get' → logprob: -14.437301635742188
    8. ' ' → logprob: -15.062301635742188
    9. '_get' → logprob: -15.062301635742188
    10. '.get' → logprob: -15.687301635742188

Token 221: '_neighbors' (ID: 142549)
  Prédit: '_neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -0.03906061500310898
    2. '(G' → logprob: -3.289060592651367
    3. 'neighbors' → logprob: -7.039060592651367
    4. 'Neighbors' → logprob: -9.414060592651367
    5. '_ne' → logprob: -10.539060592651367
    6. '(' → logprob: -10.789060592651367
    7. ' neighbors' → logprob: -11.914060592651367
    8. '_' → logprob: -13.039060592651367
    9. '```' → logprob: -14.039060592651367
    10. '_(' → logprob: -14.664060592651367

Token 222: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.0013304755557328463
    2. '(' → logprob: -6.626330375671387
    3. ' (' → logprob: -12.751330375671387
    4. '(
' → logprob: -14.501330375671387
    5. ')' → logprob: -14.501330375671387
    6. ',' → logprob: -15.751330375671387
    7. '```' → logprob: -16.126331329345703
    8. ',G' → logprob: -16.501331329345703
    9. '<|end|>' → logprob: -17.251331329345703
    10. '\(' → logprob: -17.251331329345703

Token 223: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014025058771949261
    2. ' ,' → logprob: -8.875140190124512
    3. '   ' → logprob: -16.000141143798828
    4. ',current' → logprob: -16.250141143798828
    5. '[cur' → logprob: -16.875141143798828
    6. ',
' → logprob: -16.875141143798828
    7. '‌,' → logprob: -17.750141143798828
    8. '),' → logprob: -18.125141143798828
    9. ' ' → logprob: -18.250141143798828
    10. '`,' → logprob: -18.375141143798828

Token 224: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.0009117019944824278
    2. ' cur' → logprob: -7.000911712646484
    3. '[cur' → logprob: -16.000911712646484
    4. '(cur' → logprob: -17.750911712646484
    5. '	cur' → logprob: -17.875911712646484
    6. '
' → logprob: -18.250911712646484
    7. ' ' → logprob: -18.875911712646484
    8. '_cur' → logprob: -19.000911712646484
    9. '   ' → logprob: -20.125911712646484
    10. '-cur' → logprob: -20.250911712646484

Token 225: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2519649565219879
    2. '):
' → logprob: -1.5019649267196655
    3. '   ' → logprob: -10.876964569091797
    4. '):
' → logprob: -11.751964569091797
    5. ':' → logprob: -12.501964569091797
    6. ')' → logprob: -13.001964569091797
    7. ' ):' → logprob: -13.251964569091797
    8. ' ):
' → logprob: -14.626964569091797
    9. '       ' → logprob: -15.001964569091797
    10. '):

' → logprob: -16.001964569091797

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0039411443285644054
    2. ' if' → logprob: -5.628941059112549
    3. 'if' → logprob: -8.753941535949707
    4. '<|end|>' → logprob: -9.503941535949707
    5. '```' → logprob: -9.628941535949707
    6. '        
' → logprob: -11.503941535949707
    7. ',' → logprob: -12.128941535949707
    8. '	' → logprob: -12.253941535949707
    9. '   ' → logprob: -12.253941535949707
    10. '    ' → logprob: -12.628941535949707

Token 227: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.32297438383102417
    2. 'if' (adapté à ' if') → logprob: -1.322974443435669
    3. '       ' → logprob: -4.69797420501709
    4. '           ' → logprob: -7.57297420501709
    5. '```' → logprob: -10.32297420501709
    6. '	if' → logprob: -13.19797420501709
    7. '   ' → logprob: -14.57297420501709
    8. '        ' → logprob: -14.69797420501709
    9. ',' → logprob: -14.69797420501709
    10. 'If' → logprob: -14.82297420501709

Token 228: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4783177077770233
    2. 'flag' → logprob: -1.6033177375793457
    3. ' to' → logprob: -2.2283177375793457
    4. ' flag' → logprob: -2.7283177375793457
    5. ' get' → logprob: -6.228317737579346
    6. ' not' → logprob: -6.478317737579346
    7. 'get' → logprob: -6.478317737579346
    8. 'not' → logprob: -7.728317737579346
    9. '   ' → logprob: -8.228317260742188
    10. ' ' → logprob: -9.853317260742188

Token 229: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.16188333928585052
    2. '!=' → logprob: -1.9118833541870117
    3. ' ==' → logprob: -7.036883354187012
    4. '==' → logprob: -7.536883354187012
    5. ' not' → logprob: -9.286883354187012
    6. ' ' → logprob: -10.036883354187012
    7. ')!=' → logprob: -10.161883354187012
    8. ')' → logprob: -10.286883354187012
    9. '()!=' → logprob: -11.286883354187012
    10. ']!=' → logprob: -11.911883354187012

Token 230: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.0033370524179190397
    2. 'cur' → logprob: -5.7533369064331055
    3. ' par' → logprob: -8.753336906433105
    4. ' cur' → logprob: -13.878336906433105
    5. '	par' → logprob: -15.128336906433105
    6. '   ' → logprob: -15.878336906433105
    7. ' ' → logprob: -17.128337860107422
    8. '(par' → logprob: -18.003337860107422
    9. 'paren' → logprob: -18.253337860107422
    10. 'пар' → logprob: -18.378337860107422

Token 231: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0028309114277362823
    2. 'and' → logprob: -5.877830982208252
    3. ':' → logprob: -11.752830505371094
    4. ' ' → logprob: -11.752830505371094
    5. ':
' → logprob: -12.877830505371094
    6. '           ' → logprob: -13.002830505371094
    7. '       ' → logprob: -13.377830505371094
    8. '<|end|>' → logprob: -13.877830505371094
    9. '        ' → logprob: -14.002830505371094
    10. '	and' → logprob: -14.752830505371094

Token 232: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03030933067202568
    2. '           ' → logprob: -3.6553094387054443
    3. 'and' → logprob: -5.530309200286865
    4. '```' → logprob: -11.280309677124023
    5. ':
' → logprob: -11.905309677124023
    6. ':' → logprob: -11.905309677124023
    7. ',' → logprob: -13.280309677124023
    8. '            
' → logprob: -13.405309677124023
    9. '       ' → logprob: -13.530309677124023
    10. '          ' → logprob: -14.030309677124023

Token 233: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.4485922157764435
    2. 'if' → logprob: -1.198592185974121
    3. ' if' → logprob: -3.323592185974121
    4. ' dfs' → logprob: -4.198592185974121
    5. '               ' → logprob: -5.198592185974121
    6. '           ' → logprob: -5.823592185974121
    7. 'df' → logprob: -9.573592185974121
    8. '   ' → logprob: -9.948592185974121
    9. '```' → logprob: -10.198592185974121
    10. '       ' → logprob: -10.573592185974121

Token 234: '_visit' (ID: 130996)
  Prédit: '_visit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_visit' → logprob: -4.723352049040841e-06
    2. '_' → logprob: -13.125004768371582
    3. '_vis' → logprob: -14.250004768371582
    4. 'visit' → logprob: -14.750004768371582
    5. '```' → logprob: -14.750004768371582
    6. '_write' → logprob: -15.750004768371582
    7. 'Visit' → logprob: -15.875004768371582
    8. ' _' → logprob: -15.875004768371582
    9. '(' → logprob: -16.000003814697266
    10. '_d' → logprob: -16.125003814697266

Token 235: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.0002622894535306841
    2. '(' → logprob: -8.250262260437012
    3. '(
' → logprob: -14.125262260437012
    4. ' (' → logprob: -15.750262260437012
    5. '```' → logprob: -17.000263214111328
    6. '\(' → logprob: -17.875263214111328
    7. ')' → logprob: -18.375263214111328
    8. '(

' → logprob: -18.625263214111328
    9. ',' → logprob: -18.750263214111328
    10. '(GPIO' → logprob: -19.250263214111328

Token 236: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000145137935760431
    2. ',G' → logprob: -9.375144958496094
    3. ' ,' → logprob: -9.750144958496094
    4. ',
' → logprob: -13.875144958496094
    5. '[' → logprob: -15.000144958496094
    6. '   ' → logprob: -15.750144958496094
    7. ')' → logprob: -16.375144958496094
    8. '           ' → logprob: -17.125144958496094
    9. '[G' → logprob: -17.125144958496094
    10. ',[' → logprob: -17.250144958496094

Token 237: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.09804630279541016
    2. 'to' → logprob: -2.59804630279541
    3. ' flag' → logprob: -4.09804630279541
    4. ' to' → logprob: -6.22304630279541
    5. 'G' → logprob: -8.34804630279541
    6. ' ' → logprob: -9.72304630279541
    7. ' G' → logprob: -10.34804630279541
    8. '   ' → logprob: -10.59804630279541
    9. 'f' → logprob: -11.84804630279541
    10. 'Flag' → logprob: -12.22304630279541

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008585774339735508
    2. ',to' → logprob: -7.500858783721924
    3. ' ,' → logprob: -8.500858306884766
    4. 'to' → logprob: -9.375858306884766
    5. '           ' → logprob: -12.250858306884766
    6. '```' → logprob: -12.875858306884766
    7. '   ' → logprob: -13.125858306884766
    8. '               ' → logprob: -13.750858306884766
    9. ',
' → logprob: -13.750858306884766
    10. ')' → logprob: -13.875858306884766

Token 239: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.002476016292348504
    2. ' to' → logprob: -6.002476215362549
    3. '   ' → logprob: -16.25247573852539
    4. '```' → logprob: -16.62747573852539
    5. '[to' → logprob: -16.87747573852539
    6. ' ' → logprob: -16.87747573852539
    7. '	to' → logprob: -17.12747573852539
    8. '(to' → logprob: -17.25247573852539
    9. '
' → logprob: -17.50247573852539
    10. '           ' → logprob: -18.37747573852539

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027420982951298356
    2. ' ,' → logprob: -8.250274658203125
    3. 'cur' → logprob: -11.500274658203125
    4. '[cur' → logprob: -14.250274658203125
    5. '   ' → logprob: -14.875274658203125
    6. ')' → logprob: -15.125274658203125
    7. ' ' → logprob: -15.625274658203125
    8. ',
' → logprob: -15.750274658203125
    9. '```' → logprob: -15.750274658203125
    10. '),' → logprob: -15.750274658203125

Token 241: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -7.493430894101039e-05
    2. ' cur' → logprob: -9.500075340270996
    3. '   ' → logprob: -18.25007438659668
    4. '	cur' → logprob: -18.50007438659668
    5. ' ' → logprob: -19.50007438659668
    6. '
' → logprob: -19.62507438659668
    7. '[cur' → logprob: -20.12507438659668
    8. '```' → logprob: -20.50007438659668
    9. '(cur' → logprob: -21.00007438659668
    10. 'curr' → logprob: -21.75007438659668

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022451656695920974
    2. ' ,' → logprob: -8.625224113464355
    3. ',f' → logprob: -10.250224113464355
    4. 'f' → logprob: -12.375224113464355
    5. ',
' → logprob: -13.500224113464355
    6. ')' → logprob: -14.000224113464355
    7. '```' → logprob: -14.500224113464355
    8. ' f' → logprob: -14.750224113464355
    9. '1' → logprob: -14.875224113464355
    10. 's' → logprob: -15.000224113464355

Token 243: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.08207778632640839
    2. '1' → logprob: -2.707077741622925
    3. ' f' → logprob: -5.332077980041504
    4. '0' → logprob: -5.957077980041504
    5. '-' → logprob: -6.457077980041504
    6. '3' → logprob: -7.207077980041504
    7. 'not' → logprob: -7.832077980041504
    8. ' ' → logprob: -7.957077980041504
    9. '-f' → logprob: -7.957077980041504
    10. ' -' → logprob: -8.207077980041504

Token 244: ' ^' (ID: 7602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.65707261255011e-06
    2. ' )' → logprob: -12.500008583068848
    3. ')
' → logprob: -12.625008583068848
    4. '+' → logprob: -13.750008583068848
    5. ')

' → logprob: -15.875008583068848
    6. '))' → logprob: -16.500009536743164
    7. ')add' → logprob: -16.875009536743164
    8. ')return' → logprob: -17.000009536743164
    9. ')set' → logprob: -17.250009536743164
    10. '   ' → logprob: -17.500009536743164

Token 245: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006273718317970634
    2. ' ' → logprob: -7.375627517700195
    3. '3' → logprob: -14.750627517700195
    4. '   ' → logprob: -15.750627517700195
    5. '0' → logprob: -17.500627517700195
    6. '255' → logprob: -17.750627517700195
    7. 'f' → logprob: -18.000627517700195
    8. '  ' → logprob: -18.125627517700195
    9. '111' → logprob: -18.625627517700195
    10. 'flag' → logprob: -18.750627517700195

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.264322317088954e-05
    2. ' ' → logprob: -9.875052452087402
    3. '3' → logprob: -14.250052452087402
    4. '0' → logprob: -16.62505340576172
    5. '   ' → logprob: -16.62505340576172
    6. '255' → logprob: -16.62505340576172
    7. '2' → logprob: -17.68755340576172
    8. '15' → logprob: -17.68755340576172
    9. '１' → logprob: -17.68755340576172
    10. '           ' → logprob: -17.75005340576172

Token 247: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.3451433409936726e-05
    2. ')
' → logprob: -10.375033378601074
    3. ' )' → logprob: -13.125033378601074
    4. '<|end|>' → logprob: -16.87503433227539
    5. '))' → logprob: -17.25003433227539
    6. ')

' → logprob: -17.25003433227539
    7. '   ' → logprob: -17.37503433227539
    8. ')}}' → logprob: -18.12503433227539
    9. '       ' → logprob: -18.37503433227539
    10. '),' → logprob: -18.37503433227539

Token 248: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2747126519680023
    2. ')' → logprob: -1.7747126817703247
    3. '#' → logprob: -2.899712562561035
    4. '<|end|>' → logprob: -4.274712562561035
    5. '```' → logprob: -7.274712562561035
    6. '.' → logprob: -7.524712562561035
    7. '...' → logprob: -9.024712562561035
    8. 'None' → logprob: -10.024712562561035
    9. '<|end|>' → logprob: -10.024712562561035
    10. 'from' → logprob: -10.274712562561035

Token 249: ' run' (ID: 2461)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.07534767687320709
    2. ' main' → logprob: -2.700347661972046
    3. 'def' → logprob: -5.825347900390625
    4. 'solve' → logprob: -6.825347900390625
    5. 'dfs' → logprob: -6.950347900390625
    6. ' solve' → logprob: -8.700347900390625
    7. ' dfs' → logprob: -9.075347900390625
    8. ' def' → logprob: -9.950347900390625
    9. 'find' → logprob: -10.700347900390625
    10. 'count' → logprob: -12.075347900390625

Token 250: '_d' (ID: 1565)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.10206432640552521
    2. '_' → logprob: -2.727064371109009
    3. '(' → logprob: -3.602064371109009
    4. '()' → logprob: -5.72706413269043
    5. '():
' → logprob: -8.22706413269043
    6. '_:' → logprob: -8.85206413269043
    7. 'def' → logprob: -9.10206413269043
    8. '(_' → logprob: -9.47706413269043
    9. '_(' → logprob: -9.60206413269043
    10. '(input' → logprob: -9.72706413269043

Token 251: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -8.458980300929397e-05
    2. 'FS' → logprob: -9.87508487701416
    3. '_fs' → logprob: -11.00008487701416
    4. 'e' → logprob: -12.25008487701416
    5. 'f' → logprob: -12.75008487701416
    6. 'eep' → logprob: -12.87508487701416
    7. 'efs' → logprob: -13.12508487701416
    8. 'ef' → logprob: -13.37508487701416
    9. 'ep' → logprob: -14.12508487701416
    10. ' fs' → logprob: -14.25008487701416

Token 252: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.05304393544793129
    2. '(' → logprob: -3.053043842315674
    3. '():' → logprob: -5.428043842315674
    4. '(:' → logprob: -10.928044319152832
    5. '()' → logprob: -11.678044319152832
    6. '(
' → logprob: -11.803044319152832
    7. '()(' → logprob: -12.553044319152832
    8. '((' → logprob: -12.678044319152832
    9. '(def' → logprob: -13.053044319152832
    10. ' (' → logprob: -13.428044319152832

Token 253: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.081584716506768e-05
    2. ' ,' → logprob: -11.000020980834961
    3. ',
' → logprob: -12.500020980834961
    4. '‌,' → logprob: -16.25002098083496
    5. ')' → logprob: -17.00002098083496
    6. 'def' → logprob: -17.25002098083496
    7. '   ' → logprob: -17.50002098083496
    8. ',

' → logprob: -17.75002098083496
    9. '),' → logprob: -17.75002098083496
    10. '):' → logprob: -17.87502098083496

Token 254: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.012623949907720089
    2. ' flag' → logprob: -4.3876237869262695
    3. 'n' → logprob: -9.51262378692627
    4. 'f' → logprob: -10.76262378692627
    5. ' n' → logprob: -11.63762378692627
    6. '0' → logprob: -12.38762378692627
    7. ')' → logprob: -13.63762378692627
    8. 'flags' → logprob: -14.01262378692627
    9. '	flag' → logprob: -14.26262378692627
    10. '(flag' → logprob: -14.26262378692627

Token 255: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.703443770878948e-06
    2. ' ,' → logprob: -12.000007629394531
    3. '):' → logprob: -13.750007629394531
    4. ',n' → logprob: -15.750007629394531
    5. '):
' → logprob: -16.50000762939453
    6. ',
' → logprob: -16.62500762939453
    7. ')' → logprob: -17.50000762939453
    8. ',size' → logprob: -17.62500762939453
    9. '   ' → logprob: -18.00000762939453
    10. '‌,' → logprob: -18.00000762939453

Token 256: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18934908509254456
    2. ' for' → logprob: -2.4393491744995117
    3. ' n' → logprob: -3.4393491744995117
    4. 'n' → logprob: -3.5643491744995117
    5. 'for' → logprob: -3.9393491744995117
    6. 'def' → logprob: -5.564349174499512
    7. ' return' → logprob: -7.439349174499512
    8. ' def' → logprob: -8.064349174499512
    9. 'flag' → logprob: -8.689349174499512
    10. '```' → logprob: -9.064349174499512

Token 257: ' dfs' (ID: 51252)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.5992134213447571
    2. 'flag' → logprob: -1.5992133617401123
    3. 'set' → logprob: -1.9742133617401123
    4. 'dfs' (adapté à ' dfs') → logprob: -2.5992133617401123
    5. 'n' → logprob: -3.5992133617401123
    6. 'return' → logprob: -5.349213600158691
    7. 'def' → logprob: -6.599213600158691
    8. 'for' → logprob: -7.474213600158691
    9. '   ' → logprob: -7.974213600158691
    10. 'f' → logprob: -8.099213600158691

Token 258: '_visit' (ID: 130996)
  Prédit: '_visit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_visit' → logprob: -2.8087270038668066e-05
    2. '_' → logprob: -10.875027656555176
    3. '_vis' → logprob: -12.000027656555176
    4. ' _' → logprob: -13.500027656555176
    5. '_run' → logprob: -14.500027656555176
    6. '(_' → logprob: -16.250028610229492
    7. '```' → logprob: -16.500028610229492
    8. '_write' → logprob: -16.625028610229492
    9. 'Visit' → logprob: -16.875028610229492
    10. '_walk' → logprob: -16.875028610229492

Token 259: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -7.107425062713446e-06
    2. '(' → logprob: -11.875006675720215
    3. '(
' → logprob: -16.50000762939453
    4. ',G' → logprob: -19.00000762939453
    5. ' (' → logprob: -19.12500762939453
    6. '(Game' → logprob: -19.50000762939453
    7. '
' → logprob: -19.50000762939453
    8. '(GPIO' → logprob: -19.75000762939453
    9. '(Graph' → logprob: -19.75000762939453
    10. 'G' → logprob: -20.25000762939453

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008520370349287987
    2. ',G' → logprob: -5.258520603179932
    3. '(G' → logprob: -5.758520603179932
    4. '(' → logprob: -9.758520126342773
    5. ' ,' → logprob: -10.758520126342773
    6. ',
' → logprob: -10.758520126342773
    7. 'G' → logprob: -11.633520126342773
    8. ')' → logprob: -11.758520126342773
    9. '
' → logprob: -13.008520126342773
    10. ' G' → logprob: -13.133520126342773

Token 261: ' flag' (ID: 9641)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.03805365785956383
    2. ' G' → logprob: -3.2880537509918213
    3. ',G' → logprob: -12.163053512573242
    4. '0' → logprob: -13.038053512573242
    5. ' ' → logprob: -13.913053512573242
    6. ',' → logprob: -13.913053512573242
    7. '(G' → logprob: -14.163053512573242
    8. 'flag' → logprob: -14.413053512573242
    9. ')' → logprob: -14.538053512573242
    10. '   ' → logprob: -15.163053512573242

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.351697033504024e-05
    2. ' ,' → logprob: -10.250083923339844
    3. ',G' → logprob: -10.250083923339844
    4. '0' → logprob: -11.500083923339844
    5. 'G' → logprob: -14.250083923339844
    6. ',
' → logprob: -15.000083923339844
    7. ')' → logprob: -15.125083923339844
    8. ' ' → logprob: -15.375083923339844
    9. '```' → logprob: -15.375083923339844
    10. '   ' → logprob: -15.375083923339844

Token 263: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.00002098083496
    4. '۰' → logprob: -19.75002098083496
    5. '０' → logprob: -20.00002098083496
    6. '  ' → logprob: -20.00002098083496
    7. '
' → logprob: -20.37502098083496
    8. ',' → logprob: -21.00002098083496
    9. '```' → logprob: -21.00002098083496
    10. '    ' → logprob: -22.00002098083496

Token 264: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -18.500001907348633
    4. '۰' → logprob: -20.250001907348633
    5. '00' → logprob: -20.500001907348633
    6. '000' → logprob: -20.500001907348633
    7. '０' → logprob: -20.750001907348633
    8. '
' → logprob: -21.500001907348633
    9. '  ' → logprob: -21.562501907348633
    10. ',' → logprob: -21.687501907348633

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00035083942930214107
    2. ',-' → logprob: -8.625350952148438
    3. ' ,' → logprob: -9.875350952148438
    4. ',None' → logprob: -10.000350952148438
    5. '-' → logprob: -10.625350952148438
    6. '0' → logprob: -10.875350952148438
    7. 'None' → logprob: -11.000350952148438
    8. ',
' → logprob: -12.000350952148438
    9. '   ' → logprob: -12.625350952148438
    10. ' -' → logprob: -12.750350952148438

Token 266: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001170225441455841
    2. ' -' → logprob: -6.7511701583862305
    3. ' ' → logprob: -17.501171112060547
    4. '   ' → logprob: -17.876171112060547
    5. 'None' → logprob: -19.376171112060547
    6. '  ' → logprob: -20.126171112060547
    7. ' None' → logprob: -21.001171112060547
    8. '−' → logprob: -21.751171112060547
    9. '0' → logprob: -22.001171112060547
    10. '-n' → logprob: -22.876171112060547

Token 267: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '１' → logprob: -18.50000762939453
    4. '-' → logprob: -18.62500762939453
    5. '   ' → logprob: -20.00000762939453
    6. ' -' → logprob: -20.06250762939453
    7. '```' → logprob: -20.68750762939453
    8. '2' → logprob: -21.00000762939453
    9. '
' → logprob: -21.00000762939453
    10. '  ' → logprob: -21.18750762939453

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.791440293658525e-05
    2. ')' → logprob: -9.875078201293945
    3. ' ,' → logprob: -11.000078201293945
    4. '   ' → logprob: -12.625078201293945
    5. ',None' → logprob: -12.875078201293945
    6. '0' → logprob: -14.000078201293945
    7. ',)' → logprob: -14.125078201293945
    8. ',
' → logprob: -14.250078201293945
    9. '1' → logprob: -14.875078201293945
    10. '```' → logprob: -15.250078201293945

Token 269: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '1' → logprob: -16.37537956237793
    4. '   ' → logprob: -18.00037956237793
    5. '  ' → logprob: -20.37537956237793
    6. '۰' → logprob: -20.37537956237793
    7. '000' → logprob: -20.75037956237793
    8. '00' → logprob: -21.43787956237793
    9. ')' → logprob: -21.62537956237793
    10. '０' → logprob: -21.75037956237793

Token 270: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011439072113716975
    2. ' ' → logprob: -9.125114440917969
    3. '1' → logprob: -12.125114440917969
    4. '   ' → logprob: -17.37511444091797
    5. '2' → logprob: -19.18761444091797
    6. '000' → logprob: -19.62511444091797
    7. '```' → logprob: -19.81261444091797
    8. '۰' → logprob: -19.93761444091797
    9. '  ' → logprob: -20.31261444091797
    10. '０' → logprob: -20.43761444091797

Token 271: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1888679839321412e-05
    2. ')
' → logprob: -10.750021934509277
    3. ' )' → logprob: -15.000021934509277
    4. ')

' → logprob: -18.50002098083496
    5. ')return' → logprob: -18.62502098083496
    6. ')
' → logprob: -19.25002098083496
    7. '   ' → logprob: -19.50002098083496
    8. '<|end|>' → logprob: -19.50002098083496
    9. '),' → logprob: -19.62502098083496
    10. ')#' → logprob: -20.25002098083496

Token 272: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0018448634073138237
    2. 'if' → logprob: -6.376844882965088
    3. '#' → logprob: -9.87684440612793
    4. '<|end|>' → logprob: -10.12684440612793
    5. 'n' → logprob: -10.25184440612793
    6. 'print' → logprob: -12.00184440612793
    7. '```' → logprob: -13.00184440612793
    8. 'from' → logprob: -13.12684440612793
    9. 'import' → logprob: -13.75184440612793
    10. '.' → logprob: -14.00184440612793

Token 273: ' count' (ID: 3605)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03071621060371399
    2. ' main' → logprob: -3.5307161808013916
    3. 'def' → logprob: -7.030716419219971
    4. 'solve' → logprob: -9.905715942382812
    5. ' def' → logprob: -11.405715942382812
    6. 'read' → logprob: -12.155715942382812
    7. ' solve' → logprob: -12.780715942382812
    8. 'process' → logprob: -12.905715942382812
    9. 'run' → logprob: -12.905715942382812
    10. 'print' → logprob: -13.405715942382812

Token 274: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.6294230818748474
    2. '_' → logprob: -1.2544231414794922
    3. '_white' → logprob: -2.504423141479492
    4. '_nodes' → logprob: -3.129423141479492
    5. '_set' → logprob: -4.004423141479492
    6. '_flags' → logprob: -4.504423141479492
    7. '_one' → logprob: -5.004423141479492
    8. '_black' → logprob: -5.129423141479492
    9. '_zero' → logprob: -5.254423141479492
    10. '(flag' → logprob: -6.504423141479492

Token 275: '(flag' (ID: 69186)
  Prédit: '(flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(flag' → logprob: -0.0606975294649601
    2. 's' → logprob: -3.060697555541992
    3. '(' → logprob: -4.435697555541992
    4. '(s' → logprob: -8.935697555541992
    5. ' (' → logprob: -10.685697555541992
    6. '```' → logprob: -11.435697555541992
    7. '(flags' → logprob: -11.435697555541992
    8. '(`' → logprob: -12.810697555541992
    9. 'flag' → logprob: -13.185697555541992
    10. '_s' → logprob: -13.435697555541992

Token 276: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15150797367095947
    2. '):' → logprob: -2.27650785446167
    3. '):
' → logprob: -3.27650785446167
    4. ' ,' → logprob: -9.151508331298828
    5. ' ):' → logprob: -10.651508331298828
    6. '):
' → logprob: -10.776508331298828
    7. ')' → logprob: -10.776508331298828
    8. ',f' → logprob: -12.651508331298828
    9. '   ' → logprob: -13.151508331298828
    10. '):

' → logprob: -13.276508331298828

Token 277: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.003669317811727524
    2. ' return' → logprob: -6.003669261932373
    3. '   ' → logprob: -7.378669261932373
    4. 'flag' → logprob: -7.753669261932373
    5. 'def' → logprob: -9.253669738769531
    6. 'sum' → logprob: -10.128669738769531
    7. '```' → logprob: -13.128669738769531
    8. ' flag' → logprob: -14.128669738769531
    9. '
' → logprob: -14.753669738769531
    10. '	return' → logprob: -15.878669738769531

Token 278: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00038658222183585167
    2. ' return' → logprob: -8.000386238098145
    3. 'flag' → logprob: -10.250386238098145
    4. 'sum' → logprob: -11.250386238098145
    5. 'def' → logprob: -13.750386238098145
    6. 'from' → logprob: -13.875386238098145
    7. '   ' → logprob: -14.500386238098145
    8. '```' → logprob: -16.25038719177246
    9. '
' → logprob: -16.37538719177246
    10. '	return' → logprob: -17.62538719177246

Token 279: ' sum' (ID: 4215)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.2523486614227295
    2. 'sum' → logprob: -1.5023486614227295
    3. ' flag' → logprob: -8.127348899841309
    4. ' sum' → logprob: -9.127348899841309
    5. 'len' → logprob: -11.752348899841309
    6. 'flags' → logprob: -12.002348899841309
    7. '	flag' → logprob: -15.502348899841309
    8. '(flag' → logprob: -15.502348899841309
    9. '   ' → logprob: -15.752348899841309
    10. '```' → logprob: -16.002347946166992

Token 280: '(flag' (ID: 69186)
  Prédit: '(flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(flag' → logprob: -0.011245520785450935
    2. 'flag' → logprob: -4.5112457275390625
    3. '(' → logprob: -8.636245727539062
    4. '(f' → logprob: -11.261245727539062
    5. ' flag' → logprob: -12.886245727539062
    6. '(x' → logprob: -13.761245727539062
    7. '(fl' → logprob: -13.761245727539062
    8. '((' → logprob: -14.386245727539062
    9. '_flag' → logprob: -14.511245727539062
    10. '([' → logprob: -14.511245727539062

Token 281: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00019889144459739327
    2. '==' → logprob: -8.625199317932129
    3. ')==' → logprob: -11.375199317932129
    4. ' )' → logprob: -12.375199317932129
    5. ' ==' → logprob: -13.000199317932129
    6. '())' → logprob: -14.500199317932129
    7. ')
' → logprob: -14.625199317932129
    8. '()' → logprob: -15.875199317932129
    9. '))' → logprob: -16.750198364257812
    10. '(' → logprob: -16.750198364257812

Token 282: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0025967035908252
    2. '<|end|>' → logprob: -6.127596855163574
    3. '```' → logprob: -8.002596855163574
    4. 'print' → logprob: -10.627596855163574
    5. '#' → logprob: -10.877596855163574
    6. 'if' → logprob: -10.877596855163574
    7. 'import' → logprob: -12.252596855163574
    8. '<|end|>' → logprob: -12.627596855163574
    9. 'from' → logprob: -13.127596855163574
    10. ' def' → logprob: -13.502596855163574

Token 283: ' count' (ID: 3605)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.017778199166059494
    2. ' main' → logprob: -4.142778396606445
    3. 'def' → logprob: -6.392778396606445
    4. 'run' → logprob: -10.392778396606445
    5. 'solve' → logprob: -11.142778396606445
    6. ' def' → logprob: -11.767778396606445
    7. 'process' → logprob: -12.517778396606445
    8. 'read' → logprob: -12.892778396606445
    9. 'set' → logprob: -13.392778396606445
    10. '__' → logprob: -13.392778396606445

Token 284: '_com' (ID: 10828)
  Prédit: '_flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.021020367741584778
    2. 'flag' → logprob: -5.146020412445068
    3. '_not' → logprob: -5.521020412445068
    4. '_' → logprob: -6.396020412445068
    5. '(flag' → logprob: -6.396020412445068
    6. '_diff' → logprob: -6.521020412445068
    7. '_zero' → logprob: -6.646020412445068
    8. '_non' → logprob: -6.771020412445068
    9. '(' → logprob: -6.896020412445068
    10. '_equal' → logprob: -8.02101993560791

Token 285: 'plement' (ID: 13429)
  Prédit: 'plement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plement' → logprob: -1.5985345840454102
    2. '_flag' → logprob: -1.5985345840454102
    3. 'plete' → logprob: -1.7235345840454102
    4. 'plet' → logprob: -2.47353458404541
    5. 'pose' → logprob: -2.97353458404541
    6. 'mon' → logprob: -2.97353458404541
    7. 'flag' → logprob: -3.09853458404541
    8. 'pleted' → logprob: -3.34853458404541
    9. 'p' → logprob: -3.47353458404541
    10. 'pl' → logprob: -3.72353458404541

Token 286: '(n' (ID: 2406)
  Prédit: '(flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(flag' → logprob: -0.00025752498186193407
    2. '(' → logprob: -8.75025749206543
    3. 'flag' → logprob: -10.00025749206543
    4. '_flag' → logprob: -10.00025749206543
    5. 'def' → logprob: -12.25025749206543
    6. '(flags' → logprob: -13.37525749206543
    7. ' (' → logprob: -14.25025749206543
    8. '```' → logprob: -14.75025749206543
    9. '(def' → logprob: -15.12525749206543
    10. ' flag' → logprob: -15.37525749206543

Token 287: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002682496269699186
    2. ' ,' → logprob: -8.25026798248291
    3. ',
' → logprob: -12.62526798248291
    4. 'flag' → logprob: -13.00026798248291
    5. '(flag' → logprob: -14.62526798248291
    6. ' -' → logprob: -15.75026798248291
    7. '，' → logprob: -15.87526798248291
    8. ' flag' → logprob: -16.125268936157227
    9. ',n' → logprob: -16.250268936157227
    10. ',

' → logprob: -16.250268936157227

Token 288: ' a' (ID: 261)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.010783689096570015
    2. 'count' → logprob: -5.010783672332764
    3. ' flag' → logprob: -5.510783672332764
    4. ' count' → logprob: -11.260784149169922
    5. 'sum' → logprob: -13.010784149169922
    6. '	flag' → logprob: -14.010784149169922
    7. '   ' → logprob: -14.760784149169922
    8. '(flag' → logprob: -15.885784149169922
    9. ')' → logprob: -16.260784149169922
    10. 'flags' → logprob: -16.385784149169922

Token 289: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16679956018924713
    2. '):
' → logprob: -1.916799545288086
    3. ',' → logprob: -6.041799545288086
    4. 'rr' → logprob: -6.291799545288086
    5. '):

' → logprob: -7.666799545288086
    6. 'rray' → logprob: -8.041799545288086
    7. ')' → logprob: -8.291799545288086
    8. '_flag' → logprob: -8.291799545288086
    9. 'b' → logprob: -8.416799545288086
    10. ' -' → logprob: -8.666799545288086

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7079753279685974
    2. 'return' → logprob: -0.7079753279685974
    3. ' return' → logprob: -4.457975387573242
    4. 'n' → logprob: -5.832975387573242
    5. '
' → logprob: -8.832975387573242
    6. '	return' → logprob: -10.832975387573242
    7. '    
' → logprob: -10.957975387573242
    8. ' n' → logprob: -11.082975387573242
    9. '    ' → logprob: -13.582975387573242
    10. '```' → logprob: -13.582975387573242

Token 291: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.06204196438193321
    2. 'n' → logprob: -2.812041997909546
    3. ' return' → logprob: -9.562042236328125
    4. '   ' → logprob: -12.937042236328125
    5. '
' → logprob: -14.187042236328125
    6. ' n' → logprob: -14.937042236328125
    7. '```' → logprob: -14.937042236328125
    8. '`' → logprob: -15.937042236328125
    9. '\
' → logprob: -17.687042236328125
    10. '(n' → logprob: -17.812042236328125

Token 292: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -4.5491004129871726e-05
    2. ' n' → logprob: -10.000045776367188
    3. '(n' → logprob: -18.000045776367188
    4. '	n' → logprob: -20.125045776367188
    5. '[n' → logprob: -20.250045776367188
    6. '
' → logprob: -21.500045776367188
    7. ' ' → logprob: -22.375045776367188
    8. '   ' → logprob: -22.500045776367188
    9. '_n' → logprob: -22.875045776367188
    10. ' ' → logprob: -23.000045776367188

Token 293: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1269315630197525
    2. ' -' → logprob: -2.126931667327881
    3. ' ' → logprob: -13.251931190490723
    4. '-a' → logprob: -14.001931190490723
    5. ' ' → logprob: -14.501931190490723
    6. 'a' → logprob: -15.626931190490723
    7. '   ' → logprob: -16.62693214416504
    8. '−' → logprob: -17.62693214416504
    9. '-
' → logprob: -17.87693214416504
    10. '  ' → logprob: -18.25193214416504

Token 294: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.547789674485102e-05
    2. ' a' → logprob: -10.250035285949707
    3. 'count' → logprob: -19.875036239624023
    4. '	a' → logprob: -21.375036239624023
    5. '   ' → logprob: -22.125036239624023
    6. 'а' → logprob: -22.625036239624023
    7. ' ' → logprob: -23.125036239624023
    8. '  ' → logprob: -23.750036239624023
    9. '_a' → logprob: -24.875036239624023
    10. ' count' → logprob: -25.000036239624023

Token 295: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005791273433715105
    2. 'if' → logprob: -7.500579357147217
    3. '<|end|>' → logprob: -10.875578880310059
    4. '#' → logprob: -12.625578880310059
    5. '```' → logprob: -12.875578880310059
    6. ' def' → logprob: -14.875578880310059
    7. 'import' → logprob: -15.000578880310059
    8. '<|end|>' → logprob: -15.500578880310059
    9. 'print' → logprob: -15.875578880310059
    10. 'from' → logprob: -16.500579833984375

Token 296: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003332299180328846
    2. 'if' → logprob: -5.753332138061523
    3. '```' → logprob: -9.628332138061523
    4. 'import' → logprob: -9.753332138061523
    5. 'n' → logprob: -10.878332138061523
    6. ' def' → logprob: -12.628332138061523
    7. '<|end|>' → logprob: -12.628332138061523
    8. '#' → logprob: -13.253332138061523
    9. 'print' → logprob: -13.628332138061523
    10. ' if' → logprob: -14.253332138061523

Token 297: ' init' (ID: 6327)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.039916183799505234
    2. 'def' → logprob: -3.2899162769317627
    3. ' main' → logprob: -6.289916038513184
    4. ' def' → logprob: -11.914916038513184
    5. 'if' → logprob: -12.039916038513184
    6. 'solve' → logprob: -12.664916038513184
    7. '__' → logprob: -14.039916038513184
    8. 'process' → logprob: -14.414916038513184
    9. 'run' → logprob: -15.539916038513184
    10. 'parse' → logprob: -16.0399169921875

Token 298: '_mod' (ID: 15325)
  Prédit: '_flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.41235193610191345
    2. '(n' → logprob: -1.6623519659042358
    3. '_n' → logprob: -2.7873518466949463
    4. 'def' → logprob: -4.162352085113525
    5. 'flag' → logprob: -4.412352085113525
    6. '_counter' → logprob: -4.537352085113525
    7. '_flags' → logprob: -5.037352085113525
    8. '_queue' → logprob: -5.162352085113525
    9. '_stack' → logprob: -5.412352085113525
    10. '_' → logprob: -5.787352085113525

Token 299: '_classes' (ID: 37969)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0028803572058677673
    2. 'ulus' → logprob: -7.002880573272705
    3. '(n' → logprob: -7.502880573272705
    4. '(' → logprob: -8.377880096435547
    5. ' =' → logprob: -8.377880096435547
    6. '():
' → logprob: -8.502880096435547
    7. ':' → logprob: -9.002880096435547
    8. 'ulo' → logprob: -9.002880096435547
    9. 'ULO' → logprob: -9.002880096435547
    10. '()' → logprob: -9.252880096435547

Token 300: '():
' (ID: 8595)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.007776394486427307
    2. '(' → logprob: -4.882776260375977
    3. '():' → logprob: -9.007776260375977
    4. '(size' → logprob: -10.882776260375977
    5. 'def' → logprob: -11.007776260375977
    6. ':' → logprob: -12.757776260375977
    7. ' (' → logprob: -13.132776260375977
    8. '(
' → logprob: -13.257776260375977
    9. '(N' → logprob: -13.882776260375977
    10. '(s' → logprob: -14.007776260375977

Token 301: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3958261013031006
    2. '[' → logprob: -1.5208261013031006
    3. 'return' → logprob: -2.5208261013031006
    4. '[]' → logprob: -4.52082633972168
    5. ' return' → logprob: -4.77082633972168
    6. '{
' → logprob: -6.39582633972168
    7. '([' → logprob: -7.02082633972168
    8. '{' → logprob: -7.14582633972168
    9. 'def' → logprob: -7.14582633972168
    10. '[]
' → logprob: -7.39582633972168

Token 302: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02015630714595318
    2. 'return' (adapté à ' return') → logprob: -4.020156383514404
    3. '[[' → logprob: -7.020156383514404
    4. '{' → logprob: -7.770156383514404
    5. '[]' → logprob: -8.645155906677246
    6. ' [' → logprob: -9.520155906677246
    7. 'default' → logprob: -9.645155906677246
    8. ' return' → logprob: -9.895155906677246
    9. '   ' → logprob: -10.020155906677246
    10. '0' → logprob: -10.020155906677246

Token 303: ' [],' (ID: 22188)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00120475422590971
    2. '[[' → logprob: -7.251204967498779
    3. '{' → logprob: -8.626204490661621
    4. '[{' → logprob: -9.376204490661621
    5. '([' → logprob: -9.626204490661621
    6. '{}' → logprob: -9.626204490661621
    7. '[]' → logprob: -9.626204490661621
    8. '(' → logprob: -11.376204490661621
    9. ' [' → logprob: -11.751204490661621
    10. '({' → logprob: -12.751204490661621

Token 304: ' [],' (ID: 22188)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.05537235736846924
    2. '[],' → logprob: -3.6803722381591797
    3. ' []' → logprob: -4.30537223815918
    4. '0' → logprob: -4.68037223815918
    5. '[' → logprob: -5.68037223815918
    6. '{}' → logprob: -7.68037223815918
    7. '()' → logprob: -7.93037223815918
    8. ' [],' → logprob: -7.93037223815918
    9. '[]}' → logprob: -8.43037223815918
    10. '[]
' → logprob: -8.68037223815918

Token 305: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.003492327407002449
    2. '[],' → logprob: -5.75349235534668
    3. '[]
' → logprob: -9.12849235534668
    4. ' []' → logprob: -9.12849235534668
    5. '0' → logprob: -9.62849235534668
    6. '[]

' → logprob: -11.37849235534668
    7. '[' → logprob: -11.62849235534668
    8. '[]}' → logprob: -12.25349235534668
    9. '[])' → logprob: -13.25349235534668
    10. '{}' → logprob: -13.62849235534668

Token 306: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013969800435006618
    2. '<|end|>' → logprob: -4.638969898223877
    3. '```' → logprob: -5.638969898223877
    4. 'flag' → logprob: -8.513969421386719
    5. 'mod' → logprob: -9.388969421386719
    6. '<|end|>' → logprob: -9.388969421386719
    7. '#' → logprob: -9.763969421386719
    8. '[]' → logprob: -10.513969421386719
    9. 'flags' → logprob: -10.638969421386719
    10. 'a' → logprob: -10.763969421386719

Token 307: ' append' (ID: 17147)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47990790009498596
    2. 'init' → logprob: -1.6049078702926636
    3. 'read' → logprob: -2.729907989501953
    4. 'main' → logprob: -3.104907989501953
    5. 'import' → logprob: -3.979907989501953
    6. 'set' → logprob: -4.729907989501953
    7. 'process' → logprob: -5.229907989501953
    8. 'mod' → logprob: -5.354907989501953
    9. ' init' → logprob: -5.479907989501953
    10. 'input' → logprob: -5.604907989501953

Token 308: '_mod' (ID: 15325)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.4381093978881836
    2. '(mod' → logprob: -1.6881093978881836
    3. '(classes' → logprob: -1.8131093978881836
    4. '(' → logprob: -2.8131093978881836
    5. '<|end|>' → logprob: -3.0631093978881836
    6. '_mod' → logprob: -3.4381093978881836
    7. '(s' → logprob: -3.4381093978881836
    8. '(class' → logprob: -3.5631093978881836
    9. '(first' → logprob: -3.8131093978881836
    10. '(m' → logprob: -4.188109397888184

Token 309: '_class' (ID: 10602)
  Prédit: '_class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_class' → logprob: -0.34568843245506287
    2. '_classes' → logprob: -1.9706884622573853
    3. '(_' → logprob: -2.7206883430480957
    4. '_mod' → logprob: -3.7206883430480957
    5. 'class' → logprob: -4.220688343048096
    6. '(' → logprob: -4.720688343048096
    7. '_' → logprob: -5.345688343048096
    8. 'a' → logprob: -5.470688343048096
    9. '(mod' → logprob: -5.845688343048096
    10. '(classes' → logprob: -5.845688343048096

Token 310: '(i' (ID: 3649)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.6425197720527649
    2. '(mod' → logprob: -1.3925197124481201
    3. '(class' → logprob: -2.89251971244812
    4. '(lst' → logprob: -3.01751971244812
    5. '(l' → logprob: -3.39251971244812
    6. '(classes' → logprob: -3.51751971244812
    7. '(m' → logprob: -4.017519950866699
    8. '(arr' → logprob: -4.142519950866699
    9. '(cls' → logprob: -5.267519950866699
    10. '(' → logprob: -5.267519950866699

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01235282700508833
    2. '(mod' → logprob: -5.51235294342041
    3. '_,' → logprob: -6.26235294342041
    4. ' ,' → logprob: -6.63735294342041
    5. '(' → logprob: -7.01235294342041
    6. ',(' → logprob: -7.76235294342041
    7. '(lst' → logprob: -7.88735294342041
    8. ')' → logprob: -8.01235294342041
    9. '(arr' → logprob: -8.13735294342041
    10. ' (' → logprob: -8.13735294342041

Token 312: ' one' (ID: 1001)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.47435271739959717
    2. 'a' → logprob: -1.9743527173995972
    3. 'x' → logprob: -2.7243528366088867
    4. 'c' → logprob: -3.4743528366088867
    5. 'm' → logprob: -3.5993528366088867
    6. 'val' → logprob: -4.349352836608887
    7. 'zero' → logprob: -4.349352836608887
    8. 'class' → logprob: -4.599352836608887
    9. 'classes' → logprob: -4.849352836608887
    10. 'v' → logprob: -4.849352836608887

Token 313: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.44820258021354675
    2. ',' → logprob: -1.3232026100158691
    3. '_mod' → logprob: -2.948202610015869
    4. 'mod' → logprob: -3.698202610015869
    5. '0' → logprob: -5.698202610015869
    6. '_list' → logprob: -5.948202610015869
    7. '_classes' → logprob: -6.573202610015869
    8. 'class' → logprob: -6.823202610015869
    9. '_class' → logprob: -6.823202610015869
    10. 'mods' → logprob: -7.198202610015869

Token 314: ' two' (ID: 1920)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.6396445035934448
    2. 'two' → logprob: -0.7646445035934448
    3. ' zero' → logprob: -6.264644622802734
    4. 'even' → logprob: -6.639644622802734
    5. 'three' → logprob: -6.639644622802734
    6. ' two' → logprob: -6.764644622802734
    7. 'zer' → logprob: -7.389644622802734
    8. 'tw' → logprob: -9.139644622802734
    9. 'odd' → logprob: -9.514644622802734
    10. 'z' → logprob: -10.014644622802734

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007418495370075107
    2. ' ,' → logprob: -7.875741958618164
    3. '):
' → logprob: -9.125741958618164
    4. '0' → logprob: -9.250741958618164
    5. '):' → logprob: -10.625741958618164
    6. '1' → logprob: -10.875741958618164
    7. 'one' → logprob: -11.625741958618164
    8. 's' → logprob: -11.625741958618164
    9. '_one' → logprob: -11.750741958618164
    10. '_,' → logprob: -12.000741958618164

Token 316: ' three' (ID: 3407)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.36957505345344543
    2. 'three' → logprob: -1.244575023651123
    3. ' zero' → logprob: -4.369575023651123
    4. ' three' → logprob: -5.119575023651123
    5. 'mod' → logprob: -7.494575023651123
    6. 'zer' → logprob: -7.744575023651123
    7. 'none' → logprob: -8.119575500488281
    8. 'tree' → logprob: -8.744575500488281
    9. 'thr' → logprob: -8.744575500488281
    10. '   ' → logprob: -9.244575500488281

Token 317: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031096292659640312
    2. '):' → logprob: -4.156096458435059
    3. '):
' → logprob: -4.531096458435059
    4. ' ,' → logprob: -6.031096458435059
    5. ',i' → logprob: -6.656096458435059
    6. 'def' → logprob: -9.906096458435059
    7. '):

' → logprob: -10.031096458435059
    8. ')' → logprob: -10.031096458435059
    9. '):
' → logprob: -10.281096458435059
    10. '   ' → logprob: -10.281096458435059

Token 318: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.42129966616630554
    2. '   ' → logprob: -1.296299695968628
    3. ' if' → logprob: -2.921299695968628
    4. 'one' → logprob: -4.921299457550049
    5. ':' → logprob: -5.796299457550049
    6. 'i' → logprob: -6.921299457550049
    7. ' one' → logprob: -6.921299457550049
    8. 'three' → logprob: -7.046299457550049
    9. '[i' → logprob: -7.171299457550049
    10. 'def' → logprob: -7.296299457550049

Token 319: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.21509556472301483
    2. ' if' → logprob: -1.8400955200195312
    3. '   ' → logprob: -3.4650955200195312
    4. 'one' → logprob: -6.965095520019531
    5. '[i' → logprob: -7.215095520019531
    6. 'three' → logprob: -7.840095520019531
    7. ' one' → logprob: -8.340095520019531
    8. '
' → logprob: -8.465095520019531
    9. '(one' → logprob: -8.590095520019531
    10. 'i' → logprob: -8.965095520019531

Token 320: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3868964612483978
    2. 'i' → logprob: -1.1368964910507202
    3. '  ' → logprob: -11.636896133422852
    4. '   ' → logprob: -11.761896133422852
    5. ' ' → logprob: -12.386896133422852
    6. '	i' → logprob: -12.761896133422852
    7. '(i' → logprob: -13.886896133422852
    8. ' ' → logprob: -14.386896133422852
    9. '[i' → logprob: -16.13689613342285
    10. ' (' → logprob: -16.76189613342285

Token 321: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1436975598335266
    2. '%' → logprob: -2.018697500228882
    3. '==' → logprob: -7.768697738647461
    4. ' ' → logprob: -8.018697738647461
    5. ' ==' → logprob: -8.268697738647461
    6. ' ' → logprob: -12.518697738647461
    7. '[' → logprob: -12.768697738647461
    8. ')' → logprob: -13.643697738647461
    9. '0' → logprob: -13.643697738647461
    10. '1' → logprob: -13.643697738647461

Token 322: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.4418171455617994e-05
    2. ' ' → logprob: -10.125044822692871
    3. '4' → logprob: -12.375044822692871
    4. '```' → logprob: -16.500043869018555
    5. '   ' → logprob: -17.375043869018555
    6. '0' → logprob: -17.625043869018555
    7. '1' → logprob: -17.750043869018555
    8. '  ' → logprob: -17.750043869018555
    9. '=' → logprob: -18.125043869018555
    10. '
' → logprob: -19.000043869018555

Token 323: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.259079363080673e-05
    2. ' ' → logprob: -11.750012397766113
    3. '4' → logprob: -12.625012397766113
    4. '0' → logprob: -14.625012397766113
    5. '   ' → logprob: -14.875012397766113
    6. '```' → logprob: -15.875012397766113
    7. '  ' → logprob: -16.50001335144043
    8. '1' → logprob: -16.56251335144043
    9. '2' → logprob: -16.56251335144043
    10. '
' → logprob: -17.37501335144043

Token 324: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10021346807479858
    2. ' ==' → logprob: -2.3502135276794434
    3. '=' → logprob: -12.975213050842285
    4. '==
' → logprob: -13.100213050842285
    5. ')==' → logprob: -13.600213050842285
    6. '===' → logprob: -14.975213050842285
    7. '```' → logprob: -15.225213050842285
    8. '()==' → logprob: -15.475213050842285
    9. ')' → logprob: -15.975213050842285
    10. ']==' → logprob: -16.1002140045166

Token 325: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026205103495158255
    2. ' ' → logprob: -8.250262260437012
    3. '1' → logprob: -14.125262260437012
    4. '   ' → logprob: -17.125261306762695
    5. '
' → logprob: -19.125261306762695
    6. '  ' → logprob: -19.250261306762695
    7. '```' → logprob: -19.375261306762695
    8. '2' → logprob: -20.125261306762695
    9. '=' → logprob: -20.250261306762695
    10. '۰' → logprob: -20.500261306762695

Token 326: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.77627644513268e-06
    2. '1' → logprob: -11.875008583068848
    3. ' ' → logprob: -13.250008583068848
    4. '2' → logprob: -18.375009536743164
    5. '```' → logprob: -18.750009536743164
    6. '۰' → logprob: -19.312509536743164
    7. '

' → logprob: -19.937509536743164
    8. '０' → logprob: -20.125009536743164
    9. '   ' → logprob: -20.125009536743164
    10. '3' → logprob: -20.250009536743164

Token 327: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2520096004009247
    2. ':' → logprob: -1.502009630203247
    3. '   ' → logprob: -10.377009391784668
    4. ',' → logprob: -10.502009391784668
    5. ' one' → logprob: -12.127009391784668
    6. '):
' → logprob: -12.127009391784668
    7. 'one' → logprob: -12.502009391784668
    8. '(one' → logprob: -13.627009391784668
    9. '_one' → logprob: -13.627009391784668
    10. '       ' → logprob: -13.877009391784668

Token 328: '       ' (ID: 309)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.4348944425582886
    2. 'one' → logprob: -1.3098944425582886
    3. '       ' → logprob: -2.559894561767578
    4. 'three' → logprob: -6.434894561767578
    5. '   ' → logprob: -6.684894561767578
    6. ' three' → logprob: -6.809894561767578
    7. ':' → logprob: -7.684894561767578
    8. ':
' → logprob: -7.934894561767578
    9. '(one' → logprob: -8.059894561767578
    10. 'two' → logprob: -8.934894561767578

Token 329: ' three' (ID: 3407)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.011052416637539864
    2. ' one' → logprob: -4.51105260848999
    3. 'three' (adapté à ' three') → logprob: -12.886052131652832
    4. 'zero' → logprob: -13.886052131652832
    5. '   ' → logprob: -14.761052131652832
    6. '_one' → logprob: -14.886052131652832
    7. 'One' → logprob: -15.261052131652832
    8. '       ' → logprob: -16.63605308532715
    9. '.one' → logprob: -16.76105308532715
    10. '(one' → logprob: -17.01105308532715

Token 330: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001936485292389989
    2. '.' → logprob: -6.251936435699463
    3. 'append' → logprob: -12.126936912536621
    4. ' .' → logprob: -13.626936912536621
    5. '.app' → logprob: -14.251936912536621
    6. ').' → logprob: -15.626936912536621
    7. '.Append' → logprob: -16.001935958862305
    8. '.setdefault' → logprob: -16.501935958862305
    9. '.ap' → logprob: -16.876935958862305
    10. '.extend' → logprob: -17.001935958862305

Token 331: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -4.36574100604048e-06
    2. 'i' → logprob: -12.375004768371582
    3. '(' → logprob: -16.625003814697266
    4. ' i' → logprob: -20.375003814697266
    5. ',i' → logprob: -20.500003814697266
    6. ' (' → logprob: -20.750003814697266
    7. '((' → logprob: -20.750003814697266
    8. '(
' → logprob: -21.250003814697266
    9. '   ' → logprob: -21.625003814697266
    10. '	i' → logprob: -21.750003814697266

Token 332: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049271538853645325
    2. ')
' → logprob: -3.049271583557129
    3. '   ' → logprob: -7.299271583557129
    4. ' )' → logprob: -12.549271583557129
    5. '<|end|>' → logprob: -13.924271583557129
    6. ')

' → logprob: -14.049271583557129
    7. ')
' → logprob: -14.174271583557129
    8. ' )
' → logprob: -14.674271583557129
    9. '       ' → logprob: -15.049271583557129
    10. '),' → logprob: -15.174271583557129

Token 333: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.025919020175933838
    2. '   ' → logprob: -3.900918960571289
    3. ' elif' → logprob: -5.275918960571289
    4. '	elif' → logprob: -8.400918960571289
    5. '<|end|>' → logprob: -11.025918960571289
    6. 'el' → logprob: -12.150918960571289
    7. '  ' → logprob: -13.400918960571289
    8. ' ' → logprob: -15.025918960571289
    9. ',' → logprob: -15.025918960571289
    10. '```' → logprob: -15.650918960571289

Token 334: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.018161997199058533
    2. ' elif' → logprob: -4.018161773681641
    3. '   ' → logprob: -12.39316177368164
    4. '	elif' → logprob: -12.39316177368164
    5. 'el' → logprob: -12.51816177368164
    6. 'else' → logprob: -16.76816177368164
    7. ' ' → logprob: -17.14316177368164
    8. '  ' → logprob: -17.89316177368164
    9. '<|end|>' → logprob: -18.01816177368164
    10. 'El' → logprob: -18.26816177368164

Token 335: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08898734301328659
    2. 'i' → logprob: -2.463987350463867
    3. '(i' → logprob: -10.713987350463867
    4. ' (' → logprob: -11.463987350463867
    5. ' ' → logprob: -11.713987350463867
    6. '   ' → logprob: -12.338987350463867
    7. '	i' → logprob: -13.588987350463867
    8. '(' → logprob: -14.963987350463867
    9. ' ' → logprob: -15.088987350463867
    10. '  ' → logprob: -15.526487350463867

Token 336: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.11284956336021423
    2. '%' → logprob: -2.237849473953247
    3. ' ' → logprob: -10.612849235534668
    4. ' ' → logprob: -12.987849235534668
    5. 's' → logprob: -16.862850189208984
    6. '[' → logprob: -17.237850189208984
    7. '```' → logprob: -17.237850189208984
    8. '1' → logprob: -17.675350189208984
    9. 'import' → logprob: -17.925350189208984
    10. ')' → logprob: -17.925350189208984

Token 337: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004633876495063305
    2. ' ' → logprob: -5.379633903503418
    3. '2' → logprob: -11.379633903503418
    4. '1' → logprob: -13.879633903503418
    5. '   ' → logprob: -14.504633903503418
    6. '```' → logprob: -15.504633903503418
    7. '  ' → logprob: -16.8796329498291
    8. '(' → logprob: -17.0671329498291
    9. '==' → logprob: -17.1296329498291
    10. 'to' → logprob: -17.4421329498291

Token 338: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.319370302458992e-06
    2. ' ' → logprob: -12.250005722045898
    3. '2' → logprob: -14.625005722045898
    4. '   ' → logprob: -17.7500057220459
    5. '1' → logprob: -18.0000057220459
    6. '```' → logprob: -18.8750057220459
    7. 'three' → logprob: -20.5625057220459
    8. '３' → logprob: -20.6875057220459
    9. '۳' → logprob: -20.7500057220459
    10. '  ' → logprob: -20.8125057220459

Token 339: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.17976613342761993
    2. ' ==' → logprob: -1.8047661781311035
    3. '=' → logprob: -12.179765701293945
    4. ' ' → logprob: -12.429765701293945
    5. '()==' → logprob: -12.554765701293945
    6. '===' → logprob: -12.929765701293945
    7. '==
' → logprob: -13.179765701293945
    8. ')==' → logprob: -13.304765701293945
    9. ']==' → logprob: -14.054765701293945
    10. ')' → logprob: -14.679765701293945

Token 340: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007626973092556
    2. ' ' → logprob: -4.882627010345459
    3. '0' → logprob: -11.0076265335083
    4. '2' → logprob: -12.7576265335083
    5. '   ' → logprob: -13.7576265335083
    6. '```' → logprob: -15.8826265335083
    7. '  ' → logprob: -17.007627487182617
    8. '==' → logprob: -17.257627487182617
    9. ' ' → logprob: -17.507627487182617
    10. '
' → logprob: -17.632627487182617

Token 341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.566264295950532e-05
    2. ' ' → logprob: -9.500085830688477
    3. '0' → logprob: -11.500085830688477
    4. '2' → logprob: -15.125085830688477
    5. '   ' → logprob: -15.750085830688477
    6. '==' → logprob: -16.625085830688477
    7. '```' → logprob: -16.750085830688477
    8. '
' → logprob: -18.187585830688477
    9. ' ' → logprob: -18.312585830688477
    10. '{' → logprob: -18.437585830688477

Token 342: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.38711923360824585
    2. ':
' → logprob: -1.1371192932128906
    3. '       ' → logprob: -8.51211929321289
    4. '   ' → logprob: -10.51211929321289
    5. '):
' → logprob: -12.13711929321289
    6. ',' → logprob: -12.51211929321289
    7. ':
' → logprob: -12.63711929321289
    8. 'else' → logprob: -13.13711929321289
    9. ':

' → logprob: -13.26211929321289
    10. ' :' → logprob: -13.51211929321289

Token 343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03423072770237923
    2. 'one' → logprob: -4.284230709075928
    3. ':' → logprob: -4.909230709075928
    4. 'two' → logprob: -5.159230709075928
    5. ' one' → logprob: -5.909230709075928
    6. ':
' → logprob: -6.159230709075928
    7. ' two' → logprob: -6.784230709075928
    8. '   ' → logprob: -7.284230709075928
    9. 'three' → logprob: -10.784231185913086
    10. '(one' → logprob: -10.784231185913086

Token 344: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' (adapté à ' one') → logprob: -0.023245826363563538
    2. ' one' → logprob: -3.7732458114624023
    3. 'two' → logprob: -15.398245811462402
    4. '   ' → logprob: -16.14824676513672
    5. 'One' → logprob: -17.02324676513672
    6. '(one' → logprob: -17.39824676513672
    7. '_one' → logprob: -18.39824676513672
    8. '  ' → logprob: -19.77324676513672
    9. 'ones' → logprob: -20.52324676513672
    10. ' two' → logprob: -20.52324676513672

Token 345: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007206532754935324
    2. '.' → logprob: -7.250720500946045
    3. 'append' → logprob: -11.875720977783203
    4. '.app' → logprob: -13.125720977783203
    5. '.add' → logprob: -14.250720977783203
    6. ' .' → logprob: -14.625720977783203
    7. '.Append' → logprob: -15.125720977783203
    8. '.py' → logprob: -15.750720977783203
    9. '.push' → logprob: -16.375720977783203
    10. '.ap' → logprob: -17.125720977783203

Token 346: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.500000953674316
    3. ' (' → logprob: -18.5
    4. 'i' → logprob: -19.75
    5. '(ii' → logprob: -20.75
    6. '```' → logprob: -21.75
    7. '(id' → logprob: -21.875
    8. '(
' → logprob: -21.875
    9. '(int' → logprob: -22.25
    10. '(I' → logprob: -22.75

Token 347: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0709342360496521
    2. ')
' → logprob: -2.695934295654297
    3. '   ' → logprob: -6.945934295654297
    4. '<|end|>' → logprob: -10.820934295654297
    5. 'else' → logprob: -12.945934295654297
    6. 'elif' → logprob: -12.945934295654297
    7. ')

' → logprob: -13.195934295654297
    8. ')
' → logprob: -13.445934295654297
    9. ' )' → logprob: -13.820934295654297
    10. ' )
' → logprob: -14.195934295654297

Token 348: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5850672125816345
    2. 'else' → logprob: -0.8350672125816345
    3. ' else' → logprob: -4.960067272186279
    4. 'elif' → logprob: -6.210067272186279
    5. '	else' → logprob: -10.085066795349121
    6. ' elif' → logprob: -11.085066795349121
    7. '	elif' → logprob: -12.585066795349121
    8. '    
' → logprob: -13.210066795349121
    9. '    ' → logprob: -14.335066795349121
    10. '_else' → logprob: -14.710066795349121

Token 349: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10595723986625671
    2. ' else' → logprob: -2.605957269668579
    3. 'elif' → logprob: -3.855957269668579
    4. '   ' → logprob: -5.35595703125
    5. ' elif' → logprob: -7.10595703125
    6. '	else' → logprob: -11.85595703125
    7. '	elif' → logprob: -13.23095703125
    8. '    
' → logprob: -14.23095703125
    9. '  ' → logprob: -14.60595703125
    10. '    ' → logprob: -14.85595703125

Token 350: ':
' (ID: 734)
  Prédit: ' two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.6880094408988953
    2. '       ' → logprob: -1.06300950050354
    3. 'two' → logprob: -2.18800950050354
    4. ':' → logprob: -3.31300950050354
    5. '(two' → logprob: -6.563009262084961
    6. ':
' → logprob: -6.563009262084961
    7. '   ' → logprob: -7.813009262084961
    8. '.two' → logprob: -9.063009262084961
    9. '_two' → logprob: -9.688009262084961
    10. '      ' → logprob: -11.063009262084961

Token 351: '       ' (ID: 309)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.3138788938522339
    2. ' two' → logprob: -1.5638788938522339
    3. '       ' → logprob: -2.8138790130615234
    4. '   ' → logprob: -9.938879013061523
    5. 'tw' → logprob: -11.063879013061523
    6. '	' → logprob: -11.438879013061523
    7. '(two' → logprob: -12.063879013061523
    8. '.two' → logprob: -12.438879013061523
    9. '_two' → logprob: -12.688879013061523
    10. '      ' → logprob: -12.813879013061523

Token 352: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' (adapté à ' two') → logprob: -0.003178071230649948
    2. ' two' → logprob: -5.753178119659424
    3. 'tw' → logprob: -15.253177642822266
    4. '   ' → logprob: -17.003177642822266
    5. '(two' → logprob: -18.003177642822266
    6. '_two' → logprob: -18.253177642822266
    7. 'Two' → logprob: -18.628177642822266
    8. '.two' → logprob: -19.378177642822266
    9. 'three' → logprob: -19.753177642822266
    10. '	t' → logprob: -20.378177642822266

Token 353: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0017174237873405218
    2. '.' → logprob: -6.376717567443848
    3. '.app' → logprob: -12.001717567443848
    4. 'append' → logprob: -12.001717567443848
    5. '.add' → logprob: -13.751717567443848
    6. '.Append' → logprob: -14.126717567443848
    7. ' .' → logprob: -14.751717567443848
    8. '<|end|>' → logprob: -15.751717567443848
    9. '_append' → logprob: -16.25171661376953
    10. '.setdefault' → logprob: -16.25171661376953

Token 354: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: 0.0
    2. '(' → logprob: -18.875
    3. ' (' → logprob: -20.375
    4. 'i' → logprob: -21.75
    5. '(ii' → logprob: -23.125
    6. '(I' → logprob: -23.625
    7. '(int' → logprob: -23.75
    8. '[i' → logprob: -24.625
    9. '((' → logprob: -24.875
    10. '(x' → logprob: -25.25

Token 355: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -13.000003814697266
    3. '<|end|>' → logprob: -14.250003814697266
    4. ' )' → logprob: -16.250003814697266
    5. ')

' → logprob: -17.375003814697266
    6. '   ' → logprob: -17.375003814697266
    7. '),' → logprob: -17.375003814697266
    8. ')}' → logprob: -17.500003814697266
    9. ')`' → logprob: -17.500003814697266
    10. ')return' → logprob: -17.500003814697266

Token 356: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0032149034086614847
    2. '<|end|>' → logprob: -5.7532148361206055
    3. '```' → logprob: -11.128214836120605
    4. '<|end|>' → logprob: -11.878214836120605
    5. ' def' → logprob: -12.003214836120605
    6. '[' → logprob: -13.378214836120605
    7. '
' → logprob: -13.503214836120605
    8. '[]' → logprob: -13.878214836120605
    9. 'from' → logprob: -13.878214836120605
    10. '#' → logprob: -14.003214836120605

Token 357: ' mod' (ID: 1812)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.46710264682769775
    2. ' main' → logprob: -1.0921026468276978
    3. 'solve' → logprob: -4.217102527618408
    4. ' solve' → logprob: -4.842102527618408
    5. 'choose' → logprob: -5.467102527618408
    6. 'select' → logprob: -6.342102527618408
    7. 'dis' → logprob: -6.592102527618408
    8. 'partition' → logprob: -6.967102527618408
    9. 'assign' → logprob: -7.217102527618408
    10. 'color' → logprob: -7.342102527618408

Token 358: '_class' (ID: 10602)
  Prédit: '_classes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_classes' → logprob: -0.16144898533821106
    2. '_class' → logprob: -1.9114489555358887
    3. '_choose' → logprob: -8.536449432373047
    4. 'class' → logprob: -9.036449432373047
    5. '_three' → logprob: -9.161449432373047
    6. '_append' → logprob: -9.536449432373047
    7. 'def' → logprob: -9.786449432373047
    8. '_count' → logprob: -9.911449432373047
    9. '_indices' → logprob: -10.036449432373047
    10. '_assign' → logprob: -10.161449432373047

Token 359: 'ify' (ID: 1985)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.46495291590690613
    2. 'es' → logprob: -1.2149529457092285
    3. '_indices' → logprob: -3.8399529457092285
    4. '(' → logprob: -4.9649529457092285
    5. '(_' → logprob: -4.9649529457092285
    6. '(s' → logprob: -5.2149529457092285
    7. '_counts' → logprob: -5.4649529457092285
    8. 's' → logprob: -5.4649529457092285
    9. 'indices' → logprob: -5.9649529457092285
    10. 'ify' → logprob: -5.9649529457092285

Token 360: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04006004333496094
    2. '(i' → logprob: -3.540060043334961
    3. '(' → logprob: -4.790060043334961
    4. '():' → logprob: -6.415060043334961
    5. '(indices' → logprob: -9.415060043334961
    6. '(index' → logprob: -9.540060043334961
    7. '(s' → logprob: -11.040060043334961
    8. ' (' → logprob: -11.165060043334961
    9. '(N' → logprob: -11.165060043334961
    10. '(a' → logprob: -11.540060043334961

Token 361: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02279696799814701
    2. ',' → logprob: -4.022797107696533
    3. '):
' → logprob: -5.397797107696533
    4. ')' → logprob: -9.647796630859375
    5. ' ):' → logprob: -10.397796630859375
    6. ':' → logprob: -12.397796630859375
    7. '):
' → logprob: -12.397796630859375
    8. '   ' → logprob: -13.897796630859375
    9. ' ,' → logprob: -14.022796630859375
    10. ',n' → logprob: -14.272796630859375

Token 362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.045935772359371185
    2. 'one' → logprob: -3.170935869216919
    3. ' one' → logprob: -5.92093563079834
    4. '(one' → logprob: -8.42093563079834
    5. '(' → logprob: -12.29593563079834
    6. 'def' → logprob: -12.54593563079834
    7. '
' → logprob: -12.54593563079834
    8. '1' → logprob: -12.54593563079834
    9. '_one' → logprob: -12.79593563079834
    10. '   ' → logprob: -12.79593563079834

Token 363: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' (adapté à ' one') → logprob: -0.006736095994710922
    2. ' one' → logprob: -5.1317362785339355
    3. '   ' → logprob: -7.1317362785339355
    4. '_one' → logprob: -13.256735801696777
    5. 'ones' → logprob: -13.506735801696777
    6. 'One' → logprob: -13.631735801696777
    7. '1' → logprob: -14.006735801696777
    8. '(one' → logprob: -14.256735801696777
    9. 'three' → logprob: -14.381735801696777
    10. 'o' → logprob: -15.131735801696777

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005654894281178713
    2. ' ,' → logprob: -5.880654811859131
    3. ' =' → logprob: -6.130654811859131
    4. '=' → logprob: -7.380654811859131
    5. '=[]' → logprob: -10.255655288696289
    6. '=[],' → logprob: -12.380655288696289
    7. '=[]
' → logprob: -13.130655288696289
    8. ',n' → logprob: -13.630655288696289
    9. '   ' → logprob: -13.755655288696289
    10. 'def' → logprob: -14.130655288696289

Token 365: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.029750604182481766
    2. ' two' → logprob: -3.5297505855560303
    3. 'Two' → logprob: -16.52975082397461
    4. '_two' → logprob: -16.77975082397461
    5. '[]' → logprob: -17.77975082397461
    6. '[],' → logprob: -19.27975082397461
    7. '   ' → logprob: -19.27975082397461
    8. '(two' → logprob: -19.52975082397461
    9. '.two' → logprob: -19.52975082397461
    10. '2' → logprob: -20.02975082397461

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004702338483184576
    2. '=' → logprob: -8.000470161437988
    3. ' ,' → logprob: -9.500470161437988
    4. ' =' → logprob: -9.750470161437988
    5. 'three' → logprob: -13.875470161437988
    6. '=[],' → logprob: -15.750470161437988
    7. ' ' → logprob: -16.375471115112305
    8. '[],' → logprob: -16.500471115112305
    9. '_three' → logprob: -16.625471115112305
    10. 'Three' → logprob: -16.875471115112305

Token 367: ' three' (ID: 3407)
  Prédit: ' three'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' three' → logprob: -0.31326475739479065
    2. 'three' → logprob: -1.3132647275924683
    3. '_three' → logprob: -13.563264846801758
    4. 'Three' → logprob: -13.938264846801758
    5. '   ' → logprob: -14.563264846801758
    6. ' and' → logprob: -16.063264846801758
    7. ' thre' → logprob: -16.438264846801758
    8. '三' → logprob: -16.813264846801758
    9. '3' → logprob: -16.813264846801758
    10. ' trois' → logprob: -17.688264846801758

Token 368: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023032367229462
    2. ' =' → logprob: -1.910230278968811
    3. '()' → logprob: -12.41023063659668
    4. '(' → logprob: -14.41023063659668
    5. '   ' → logprob: -14.53523063659668
    6. ',' → logprob: -14.78523063659668
    7. ')' → logprob: -15.66023063659668
    8. ' ' → logprob: -16.28523063659668
    9. '=n' → logprob: -16.53523063659668
    10. '=[]' → logprob: -16.66023063659668

Token 369: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.20538419485092163
    2. '[],' → logprob: -1.7053842544555664
    3. ' [],' → logprob: -6.455384254455566
    4. ' init' → logprob: -6.955384254455566
    5. '([],' → logprob: -7.205384254455566
    6. '[]' → logprob: -7.455384254455566
    7. '   ' → logprob: -9.830384254455566
    8. '[]
' → logprob: -10.455384254455566
    9. '[' → logprob: -11.205384254455566
    10. '[],
' → logprob: -12.330384254455566

Token 370: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.0004905993700958788
    2. 'mod' → logprob: -7.625490665435791
    3. 'one' → logprob: -14.125490188598633
    4. '(n' → logprob: -14.750490188598633
    5. '```' → logprob: -15.000490188598633
    6. '_classes' → logprob: -15.125490188598633
    7. 'n' → logprob: -15.375490188598633
    8. '_one' → logprob: -16.125490188598633
    9. '	mod' → logprob: -16.375490188598633
    10. '[n' → logprob: -16.500490188598633

Token 371: '_classes' (ID: 37969)
  Prédit: '_classes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_classes' → logprob: -0.00010962257510982454
    2. 'classes' → logprob: -9.250109672546387
    3. 'class' → logprob: -12.000109672546387
    4. '_class' → logprob: -12.500109672546387
    5. 'Classes' → logprob: -13.000109672546387
    6. '_CLASSES' → logprob: -14.750109672546387
    7. 'def' → logprob: -15.500109672546387
    8. 'one' → logprob: -15.875109672546387
    9. ' classes' → logprob: -16.12510871887207
    10. '(n' → logprob: -16.25010871887207

Token 372: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43394190073013306
    2. '()
' → logprob: -1.0589418411254883
    3. '
' → logprob: -5.558941841125488
    4. '(n' → logprob: -7.308941841125488
    5. '   ' → logprob: -7.808941841125488
    6. '<|end|>' → logprob: -9.308941841125488
    7. 'for' → logprob: -9.933941841125488
    8. '()\' → logprob: -10.058941841125488
    9. '    
' → logprob: -10.808941841125488
    10. ' for' → logprob: -11.058941841125488

Token 373: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5012261867523193
    2. 'for' → logprob: -1.0012261867523193
    3. ' for' → logprob: -3.6262261867523193
    4. '
' → logprob: -9.001226425170898
    5. '	for' → logprob: -11.251226425170898
    6. '    
' → logprob: -11.376226425170898
    7. '```' → logprob: -11.751226425170898
    8. ' ' → logprob: -12.626226425170898
    9. '<|end|>' → logprob: -12.626226425170898
    10. '  ' → logprob: -13.126226425170898

Token 374: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0016256680246442556
    2. '   ' → logprob: -6.5016255378723145
    3. ' for' → logprob: -9.001626014709473
    4. '
' → logprob: -16.126625061035156
    5. '	for' → logprob: -17.251625061035156
    6. '```' → logprob: -17.501625061035156
    7. ' ' → logprob: -18.001625061035156
    8. '    
' → logprob: -19.376625061035156
    9. '  ' → logprob: -19.376625061035156
    10. '``' → logprob: -21.751625061035156

Token 375: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931580901145935
    2. ' i' → logprob: -0.6931580901145935
    3. '   ' → logprob: -12.318158149719238
    4. '	i' → logprob: -12.318158149719238
    5. '_i' → logprob: -14.193158149719238
    6. ' ' → logprob: -14.318158149719238
    7. '`' → logprob: -16.193157196044922
    8. ' ' → logprob: -16.318157196044922
    9. '    ' → logprob: -16.443157196044922
    10. '(i' → logprob: -16.693157196044922

Token 376: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026312371715903282
    2. 'in' → logprob: -3.6513123512268066
    3. ' ' → logprob: -11.651312828063965
    4. '   ' → logprob: -14.276312828063965
    5. '	in' → logprob: -14.526312828063965
    6. '  ' → logprob: -14.776312828063965
    7. 'range' → logprob: -14.776312828063965
    8. 'n' → logprob: -15.401312828063965
    9. ' range' → logprob: -15.526312828063965
    10. '_' → logprob: -15.901312828063965

Token 377: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04858884960412979
    2. ' range' → logprob: -3.048588752746582
    3. '(range' → logprob: -14.173588752746582
    4. '	range' → logprob: -14.923588752746582
    5. '   ' → logprob: -15.423588752746582
    6. ' ' → logprob: -15.548588752746582
    7. '
' → logprob: -16.9235897064209
    8. '  ' → logprob: -17.1735897064209
    9. ' xrange' → logprob: -17.7985897064209
    10. 'n' → logprob: -18.1735897064209

Token 378: '(' (ID: 7)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.008655584417283535
    2. '(' → logprob: -4.758655548095703
    3. 'n' → logprob: -10.258655548095703
    4. ' (' → logprob: -12.508655548095703
    5. ' n' → logprob: -13.758655548095703
    6. '1' → logprob: -14.133655548095703
    7. '(
' → logprob: -15.008655548095703
    8. '   ' → logprob: -16.758655548095703
    9. ')n' → logprob: -17.633655548095703
    10. '	n' → logprob: -17.758655548095703

Token 379: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004154185007791966
    2. '1' → logprob: -7.875415325164795
    3. ' n' → logprob: -10.500415802001953
    4. '(n' → logprob: -12.000415802001953
    5. ')n' → logprob: -14.625415802001953
    6. '0' → logprob: -15.000415802001953
    7. '	n' → logprob: -15.250415802001953
    8. '   ' → logprob: -15.750415802001953
    9. '_n' → logprob: -16.000415802001953
    10. '2' → logprob: -16.000415802001953

Token 380: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003408582415431738
    2. ',n' → logprob: -6.378408432006836
    3. ' ,' → logprob: -6.378408432006836
    4. 'n' → logprob: -12.753408432006836
    5. ',
' → logprob: -13.128408432006836
    6. '(n' → logprob: -13.628408432006836
    7. ' n' → logprob: -15.253408432006836
    8. ' ' → logprob: -15.503408432006836
    9. '   ' → logprob: -15.753408432006836
    10. '1' → logprob: -15.878408432006836

Token 381: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.660315895918757e-05
    2. ' n' → logprob: -9.500076293945312
    3. '   ' → logprob: -13.625076293945312
    4. '	n' → logprob: -15.375076293945312
    5. '1' → logprob: -16.625076293945312
    6. ')n' → logprob: -17.125076293945312
    7. '(n' → logprob: -17.500076293945312
    8. '  ' → logprob: -17.625076293945312
    9. '    ' → logprob: -17.625076293945312
    10. ' ' → logprob: -17.625076293945312

Token 382: ' +' (ID: 659)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04948734864592552
    2. '):
' → logprob: -3.424487352371216
    3. '+' → logprob: -4.174487113952637
    4. ' +' → logprob: -8.424487113952637
    5. ' ):' → logprob: -9.924487113952637
    6. '   ' → logprob: -10.424487113952637
    7. ':' → logprob: -11.049487113952637
    8. ')' → logprob: -11.424487113952637
    9. ' ):
' → logprob: -13.799487113952637
    10. '):
' → logprob: -13.924487113952637

Token 383: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010329303331673145
    2. ' ' → logprob: -6.876032829284668
    3. '   ' → logprob: -16.626033782958984
    4. ')' → logprob: -18.001033782958984
    5. '  ' → logprob: -18.376033782958984
    6. '```' → logprob: -18.876033782958984
    7. '2' → logprob: -19.501033782958984
    8. '0' → logprob: -20.501033782958984
    9. '۱' → logprob: -20.751033782958984
    10. '+' → logprob: -21.063533782958984

Token 384: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.375004768371582
    3. '2' → logprob: -14.875004768371582
    4. '   ' → logprob: -17.250003814697266
    5. '```' → logprob: -18.000003814697266
    6. '１' → logprob: -18.312503814697266
    7. '0' → logprob: -18.500003814697266
    8. '۱' → logprob: -19.187503814697266
    9. '  ' → logprob: -19.312503814697266
    10. ')' → logprob: -19.500003814697266

Token 385: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04983910173177719
    2. '):' → logprob: -3.0498390197753906
    3. ':' → logprob: -6.799839019775391
    4. ':
' → logprob: -9.42483901977539
    5. '):
' → logprob: -10.04983901977539
    6. '   ' → logprob: -11.54983901977539
    7. ')' → logprob: -13.29983901977539
    8. '():
' → logprob: -13.79983901977539
    9. ' ):
' → logprob: -14.79983901977539
    10. '):

' → logprob: -15.67483901977539

Token 386: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002279553795233369
    2. 'append' → logprob: -6.252279758453369
    3. ' append' → logprob: -8.377279281616211
    4. '   ' → logprob: -9.627279281616211
    5. '.append' → logprob: -11.127279281616211
    6. ':
' → logprob: -11.752279281616211
    7. '	append' → logprob: -11.752279281616211
    8. ':' → logprob: -12.002279281616211
    9. '        
' → logprob: -12.252279281616211
    10. '_append' → logprob: -12.877279281616211

Token 387: ' append' (ID: 17147)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' (adapté à ' append') → logprob: -0.14983797073364258
    2. ' append' → logprob: -2.0248379707336426
    3. '       ' → logprob: -5.399837970733643
    4. '   ' → logprob: -6.149837970733643
    5. '.append' → logprob: -8.524837493896484
    6. '	append' → logprob: -8.649837493896484
    7. '           ' → logprob: -9.399837493896484
    8. ' ' → logprob: -11.774837493896484
    9. '_append' → logprob: -11.774837493896484
    10. 'Append' → logprob: -12.024837493896484

Token 388: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.026651833206415176
    2. '(i' → logprob: -3.7766518592834473
    3. 'mod' → logprob: -5.776651859283447
    4. 'i' → logprob: -8.901651382446289
    5. '(' → logprob: -9.901651382446289
    6. 'one' → logprob: -10.276651382446289
    7. '```' → logprob: -10.276651382446289
    8. '_' → logprob: -11.276651382446289
    9. '[i' → logprob: -12.276651382446289
    10. '_(' → logprob: -12.401651382446289

Token 389: '_class' (ID: 10602)
  Prédit: '_class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_class' → logprob: -0.0011901067337021232
    2. 'class' → logprob: -6.751190185546875
    3. '_mod' → logprob: -11.501190185546875
    4. 'i' → logprob: -13.001190185546875
    5. '```' → logprob: -13.376190185546875
    6. 'Class' → logprob: -13.501190185546875
    7. '(i' → logprob: -13.501190185546875
    8. 'one' → logprob: -14.126190185546875
    9. '_classes' → logprob: -15.376190185546875
    10. '_' → logprob: -15.626190185546875

Token 390: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.392202976712724e-06
    2. '(' → logprob: -12.000006675720215
    3. ' (' → logprob: -16.5000057220459
    4. 'i' → logprob: -18.1250057220459
    5. '(
' → logprob: -18.2500057220459
    6. '((' → logprob: -22.5000057220459
    7. '(in' → logprob: -22.6250057220459
    8. '(I' → logprob: -22.6250057220459
    9. '   ' → logprob: -22.7500057220459
    10. ' i' → logprob: -22.8750057220459

Token 391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011265253415331244
    2. ')' → logprob: -7.251126289367676
    3. ' ,' → logprob: -7.876126289367676
    4. ',
' → logprob: -11.376126289367676
    5. ',i' → logprob: -12.001126289367676
    6. ',)' → logprob: -12.126126289367676
    7. '(one' → logprob: -12.751126289367676
    8. '   ' → logprob: -13.126126289367676
    9. 'one' → logprob: -13.251126289367676
    10. ' one' → logprob: -13.251126289367676

Token 392: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.005233763717114925
    2. ' one' → logprob: -5.2552337646484375
    3. '(one' → logprob: -21.005233764648438
    4. 'One' → logprob: -21.880233764648438
    5. '_one' → logprob: -22.255233764648438
    6. '.one' → logprob: -22.630233764648438
    7. '   ' → logprob: -23.755233764648438
    8. ' ' → logprob: -24.005233764648438
    9. '1' → logprob: -25.005233764648438
    10. '
' → logprob: -25.255233764648438

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.374227425316349e-05
    2. ' ,' → logprob: -10.000073432922363
    3. ',t' → logprob: -10.500073432922363
    4. ',
' → logprob: -14.375073432922363
    5. '       ' → logprob: -16.75007438659668
    6. '   ' → logprob: -17.25007438659668
    7. 'two' → logprob: -17.50007438659668
    8. ')' → logprob: -17.75007438659668
    9. '
' → logprob: -18.87507438659668
    10. ' two' → logprob: -19.12507438659668

Token 394: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.01416350994259119
    2. ' two' → logprob: -4.264163494110107
    3. 'Two' → logprob: -19.889163970947266
    4. '(two' → logprob: -19.889163970947266
    5. '.two' → logprob: -21.264163970947266
    6. 'tw' → logprob: -21.389163970947266
    7. '_two' → logprob: -22.389163970947266
    8. '   ' → logprob: -22.764163970947266
    9. ' ' → logprob: -23.764163970947266
    10. 't' → logprob: -23.889163970947266

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7697225252486533e-06
    2. ' ,' → logprob: -12.500003814697266
    3. ',
' → logprob: -18.125003814697266
    4. ')' → logprob: -18.125003814697266
    5. 'three' → logprob: -18.250003814697266
    6. '3' → logprob: -19.125003814697266
    7. ' three' → logprob: -20.625003814697266
    8. '```' → logprob: -21.125003814697266
    9. '   ' → logprob: -21.750003814697266
    10. '_,' → logprob: -22.250003814697266

Token 396: ' three' (ID: 3407)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.0019286326132714748
    2. ' three' → logprob: -6.251928806304932
    3. '_three' → logprob: -17.501928329467773
    4. 'Three' → logprob: -18.626928329467773
    5. 'third' → logprob: -18.751928329467773
    6. ' ' → logprob: -18.751928329467773
    7. 'th' → logprob: -18.876928329467773
    8. 'thr' → logprob: -18.876928329467773
    9. '   ' → logprob: -19.001928329467773
    10. '3' → logprob: -19.501928329467773

Token 397: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519730031490326
    2. ')
' → logprob: -1.501973032951355
    3. '   ' → logprob: -10.626973152160645
    4. ')

' → logprob: -12.001973152160645
    5. ')return' → logprob: -12.001973152160645
    6. ')
' → logprob: -12.126973152160645
    7. 'return' → logprob: -13.626973152160645
    8. ' )' → logprob: -15.376973152160645
    9. ' )
' → logprob: -15.501973152160645
    10. 'def' → logprob: -16.626972198486328

Token 398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -8.494741632603109e-05
    2. '<|end|>' → logprob: -10.37508487701416
    3. 'return' → logprob: -10.50008487701416
    4. ' return' → logprob: -10.75008487701416
    5. ',' → logprob: -14.00008487701416
    6. '    
' → logprob: -14.25008487701416
    7. '	return' → logprob: -14.25008487701416
    8. '
' → logprob: -14.37508487701416
    9. '```' → logprob: -15.00008487701416
    10. '[' → logprob: -15.12508487701416

Token 399: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3143669366836548
    2. '   ' → logprob: -1.3143669366836548
    3. ' return' → logprob: -6.814366817474365
    4. '	return' → logprob: -13.189367294311523
    5. '
' → logprob: -13.314367294311523
    6. ' ' → logprob: -14.064367294311523
    7. '<|end|>' → logprob: -14.689367294311523
    8. '{return' → logprob: -14.814367294311523
    9. 'def' → logprob: -15.064367294311523
    10. ':return' → logprob: -15.189367294311523

Token 400: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.004232966806739569
    2. ' one' → logprob: -5.629232883453369
    3. '(one' → logprob: -7.379232883453369
    4. '(' → logprob: -12.504233360290527
    5. '   ' → logprob: -12.504233360290527
    6. ' (' → logprob: -13.879233360290527
    7. 'three' → logprob: -16.75423240661621
    8. ' ' → logprob: -17.00423240661621
    9. '  ' → logprob: -17.37923240661621
    10. '[' → logprob: -17.87923240661621

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008830712176859379
    2. '<|end|>' → logprob: -4.883830547332764
    3. ',t' → logprob: -6.758830547332764
    4. ',
' → logprob: -10.383831024169922
    5. ' ,' → logprob: -10.758831024169922
    6. '<|end|>' → logprob: -12.758831024169922
    7. '```' → logprob: -14.008831024169922
    8. 'def' → logprob: -14.133831024169922
    9. '(two' → logprob: -14.133831024169922
    10. ',user' → logprob: -14.258831024169922

Token 402: ' two' (ID: 1920)
  Prédit: ' two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' two' → logprob: -0.16022463142871857
    2. 'two' → logprob: -1.9102246761322021
    3. '(two' → logprob: -14.785224914550781
    4. 'Two' → logprob: -16.91022491455078
    5. '_two' → logprob: -17.91022491455078
    6. '.two' → logprob: -18.16022491455078
    7. '2' → logprob: -20.16022491455078
    8. ' ' → logprob: -20.53522491455078
    9. ' zwei' → logprob: -20.91022491455078
    10. ' ' → logprob: -21.16022491455078

Token 403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2842308680992573e-05
    2. ' ,' → logprob: -10.875022888183594
    3. 'three' → logprob: -13.250022888183594
    4. ' three' → logprob: -13.375022888183594
    5. ',
' → logprob: -15.750022888183594
    6. ' ' → logprob: -15.750022888183594
    7. '<|end|>' → logprob: -16.375022888183594
    8. '   ' → logprob: -16.625022888183594
    9. '3' → logprob: -17.000022888183594
    10. '```' → logprob: -17.625022888183594

Token 404: ' three' (ID: 3407)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.04858759790658951
    2. ' three' → logprob: -3.0485875606536865
    3. '_three' → logprob: -15.423587799072266
    4. 'Three' → logprob: -17.548587799072266
    5. 'th' → logprob: -17.923587799072266
    6. '三' → logprob: -19.173587799072266
    7. ' thre' → logprob: -19.173587799072266
    8. 'third' → logprob: -19.298587799072266
    9. '3' → logprob: -19.298587799072266
    10. '   ' → logprob: -20.048587799072266

Token 405: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16087277233600616
    2. '<|end|>' → logprob: -1.9108728170394897
    3. '```' → logprob: -7.785872936248779
    4. '<|end|>' → logprob: -8.910872459411621
    5. '
' → logprob: -10.160872459411621
    6. '[' → logprob: -11.285872459411621
    7. ' def' → logprob: -11.785872459411621
    8. ')' → logprob: -11.910872459411621
    9. '#' → logprob: -12.035872459411621
    10. ':def' → logprob: -12.535872459411621

Token 406: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003123439964838326
    2. '<|end|>' → logprob: -8.125312805175781
    3. '```' → logprob: -12.125312805175781
    4. '[' → logprob: -12.375312805175781
    5. '[]' → logprob: -12.750312805175781
    6. '<|end|>' → logprob: -13.750312805175781
    7. ' def' → logprob: -14.250312805175781
    8. '#' → logprob: -14.250312805175781
    9. ')' → logprob: -15.125312805175781
    10. '.' → logprob: -15.500312805175781

Token 407: ' calc' (ID: 25691)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0482143834233284
    2. 'main' → logprob: -3.4232144355773926
    3. ' solve' → logprob: -4.798214435577393
    4. ' choose' → logprob: -6.298214435577393
    5. ' find' → logprob: -6.923214435577393
    6. 'solve' → logprob: -7.048214435577393
    7. ' select' → logprob: -7.673214435577393
    8. 'choose' → logprob: -8.048213958740234
    9. ' mod' → logprob: -8.673213958740234
    10. ' def' → logprob: -8.673213958740234

Token 408: '_k' (ID: 11637)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -1.1177523136138916
    2. '_min' → logprob: -1.2427523136138916
    3. '_flag' → logprob: -2.6177523136138916
    4. '_answer' → logprob: -3.1177523136138916
    5. '_' → logprob: -3.9927523136138916
    6. '_subset' → logprob: -3.9927523136138916
    7. '_counts' → logprob: -4.3677520751953125
    8. '_sum' → logprob: -4.4927520751953125
    9. '_set' → logprob: -4.4927520751953125
    10. '_opt' → logprob: -4.6177520751953125

Token 409: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.298541396856308
    2. '()' → logprob: -2.048541307449341
    3. '(' → logprob: -2.298541307449341
    4. '(k' → logprob: -4.29854154586792
    5. '():' → logprob: -5.04854154586792
    6. '():
' → logprob: -7.67354154586792
    7. '_' → logprob: -7.79854154586792
    8. '(
' → logprob: -7.79854154586792
    9. '(i' → logprob: -7.92354154586792
    10. 'a' → logprob: -8.048541069030762

Token 410: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20448456704616547
    2. ',' → logprob: -1.7044845819473267
    3. '):
' → logprob: -5.829484462738037
    4. ')' → logprob: -9.829484939575195
    5. ',
' → logprob: -10.579484939575195
    6. ' ):' → logprob: -11.579484939575195
    7. ':' → logprob: -12.079484939575195
    8. ',k' → logprob: -12.204484939575195
    9. ',n' → logprob: -12.329484939575195
    10. '   ' → logprob: -12.329484939575195

Token 411: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.590981662273407
    2. '   ' → logprob: -0.965981662273407
    3. ' return' → logprob: -3.3409817218780518
    4. 'n' → logprob: -3.9659817218780518
    5. '=' → logprob: -5.215981483459473
    6. '(n' → logprob: -5.965981483459473
    7. ' =' → logprob: -6.965981483459473
    8. ' (' → logprob: -7.840981483459473
    9. ' n' → logprob: -8.090981483459473
    10. '
' → logprob: -8.090981483459473

Token 412: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07795911282300949
    2. '(n' → logprob: -2.9529590606689453
    3. 'n' → logprob: -4.077959060668945
    4. '   ' → logprob: -5.952959060668945
    5. ' return' → logprob: -6.077959060668945
    6. '3' → logprob: -8.702959060668945
    7. 'k' → logprob: -8.702959060668945
    8. '(k' → logprob: -8.702959060668945
    9. ' (' → logprob: -9.452959060668945
    10. '
' → logprob: -9.452959060668945

Token 413: ' n' (ID: 297)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.4459058344364166
    2. 'n' → logprob: -1.0709058046340942
    3. '(' → logprob: -4.820905685424805
    4. 'max' → logprob: -5.695905685424805
    5. '2' → logprob: -6.820905685424805
    6. ' (' → logprob: -7.195905685424805
    7. '3' → logprob: -7.320905685424805
    8. 'min' → logprob: -7.320905685424805
    9. '(max' → logprob: -7.445905685424805
    10. ' n' → logprob: -7.820905685424805

Token 414: ' //' (ID: 602)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3152006268501282
    2. '
' → logprob: -2.3152005672454834
    3. '<|end|>' → logprob: -2.3152005672454834
    4. '+' → logprob: -3.1902005672454834
    5. '

' → logprob: -4.1902008056640625
    6. '*' → logprob: -4.6902008056640625
    7. '<|end|>' → logprob: -6.5652008056640625
    8. '**' → logprob: -6.5652008056640625
    9. '()' → logprob: -6.8152008056640625
    10. ' def' → logprob: -7.1902008056640625

Token 415: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0005873450427316129
    2. '2' → logprob: -7.500587463378906
    3. ' ' → logprob: -10.625587463378906
    4. '7' → logprob: -12.000587463378906
    5. '6' → logprob: -14.125587463378906
    6. '

' → logprob: -14.250587463378906
    7. '4' → logprob: -14.500587463378906
    8. '1' → logprob: -14.750587463378906
    9. '   ' → logprob: -15.000587463378906
    10. '
' → logprob: -15.125587463378906

Token 416: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00020449401927180588
    2. ' ' → logprob: -9.000204086303711
    3. '2' → logprob: -9.875204086303711
    4. '7' → logprob: -10.750204086303711
    5. '

' → logprob: -13.250204086303711
    6. '
' → logprob: -13.875204086303711
    7. '6' → logprob: -14.000204086303711
    8. '1' → logprob: -14.000204086303711
    9. '4' → logprob: -14.125204086303711
    10. '   ' → logprob: -14.250204086303711

Token 417: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10070488601922989
    2. '<|end|>' → logprob: -2.3507049083709717
    3. '
' → logprob: -8.10070514678955
    4. '```' → logprob: -9.35070514678955
    5. '<|end|>' → logprob: -9.47570514678955
    6. ' def' → logprob: -12.35070514678955
    7. '

' → logprob: -12.60070514678955
    8. '\' → logprob: -12.72570514678955
    9. '\n' → logprob: -13.10070514678955
    10. '  
' → logprob: -13.22570514678955

Token 418: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1133447214961052
    2. '<|end|>' → logprob: -2.238344669342041
    3. '<|end|>' → logprob: -8.1133451461792
    4. '```' → logprob: -9.6133451461792
    5. ')' → logprob: -10.1133451461792
    6. '#' → logprob: -10.1133451461792
    7. '
' → logprob: -10.2383451461792
    8. ' def' → logprob: -11.2383451461792
    9. '[' → logprob: -12.3633451461792
    10. 'n' → logprob: -13.3633451461792

Token 419: ' init' (ID: 6327)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.08289524912834167
    2. ' main' → logprob: -2.707895278930664
    3. 'mod' → logprob: -5.457895278930664
    4. 'solve' → logprob: -5.707895278930664
    5. 'def' → logprob: -6.082895278930664
    6. 'calc' → logprob: -7.082895278930664
    7. 'choose' → logprob: -7.707895278930664
    8. 'max' → logprob: -8.207895278930664
    9. ' solve' → logprob: -8.582895278930664
    10. 'find' → logprob: -8.582895278930664

Token 420: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -1.7601854801177979
    2. '_result' → logprob: -2.135185480117798
    3. '_k' → logprob: -2.385185480117798
    4. 'def' → logprob: -2.385185480117798
    5. 'result' → logprob: -2.385185480117798
    6. '_ans' → logprob: -2.760185480117798
    7. 'answer' → logprob: -2.885185480117798
    8. '_one' → logprob: -3.385185480117798
    9. '_flag' → logprob: -3.635185480117798
    10. 'flag' → logprob: -3.885185480117798

Token 421: '_array' (ID: 8766)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9335595965385437
    2. '():' → logprob: -1.4335596561431885
    3. '(n' → logprob: -1.5585596561431885
    4. '()' → logprob: -2.8085596561431885
    5. '(' → logprob: -3.0585596561431885
    6. '=[]' → logprob: -3.4335596561431885
    7. '():
' → logprob: -5.308559417724609
    8. 'def' → logprob: -5.683559417724609
    9. '[]' → logprob: -6.058559417724609
    10. 's' → logprob: -6.433559417724609

Token 422: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009962485637515783
    2. '(' → logprob: -7.625996112823486
    3. ' =' → logprob: -8.375996589660645
    4. ' (' → logprob: -9.125996589660645
    5. 'def' → logprob: -9.500996589660645
    6. '(size' → logprob: -10.750996589660645
    7. '(
' → logprob: -11.000996589660645
    8. 'n' → logprob: -11.125996589660645
    9. '=' → logprob: -11.250996589660645
    10. '=(' → logprob: -11.250996589660645

Token 423: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10044550150632858
    2. '):
' → logprob: -2.350445508956909
    3. '):
' → logprob: -8.475445747375488
    4. ')' → logprob: -11.350445747375488
    5. ',' → logprob: -11.975445747375488
    6. '):

' → logprob: -12.100445747375488
    7. ' ):' → logprob: -13.225445747375488
    8. ':' → logprob: -13.725445747375488
    9. '():' → logprob: -14.100445747375488
    10. '():
' → logprob: -14.350445747375488

Token 424: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6706603765487671
    2. '[' → logprob: -1.420660376548767
    3. 'return' → logprob: -1.420660376548767
    4. ' return' → logprob: -5.670660495758057
    5. '[-' → logprob: -6.295660495758057
    6. '[]' → logprob: -9.295660018920898
    7. ' [' → logprob: -9.545660018920898
    8. '[]
' → logprob: -10.920660018920898
    9. '[n' → logprob: -11.170660018920898
    10. '['' → logprob: -12.420660018920898

Token 425: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6989640593528748
    2. 'return' (adapté à ' return') → logprob: -0.6989640593528748
    3. '[-' → logprob: -5.1989641189575195
    4. ' return' → logprob: -8.69896411895752
    5. '[]' → logprob: -10.32396411895752
    6. ' [' → logprob: -10.44896411895752
    7. '[a' → logprob: -11.32396411895752
    8. '['' → logprob: -11.57396411895752
    9. '   ' → logprob: -11.94896411895752
    10. '[n' → logprob: -12.07396411895752

Token 426: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002848386764526367
    2. '[-' → logprob: -5.8778486251831055
    3. '['' → logprob: -10.752848625183105
    4. '[n' → logprob: -11.877848625183105
    5. '[]' → logprob: -12.002848625183105
    6. ' [' → logprob: -12.252848625183105
    7. '["' → logprob: -12.877848625183105
    8. '[a' → logprob: -14.377848625183105
    9. ' [-' → logprob: -15.627848625183105
    10. '[len' → logprob: -15.627848625183105

Token 427: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.056300729513168335
    2. '-' → logprob: -2.931300640106201
    3. 'None' → logprob: -7.056300640106201
    4. ' ' → logprob: -8.55630111694336
    5. '[]' → logprob: -9.30630111694336
    6. ' -' → logprob: -9.80630111694336
    7. '(' → logprob: -9.93130111694336
    8. '[' → logprob: -10.18130111694336
    9. ']' → logprob: -10.68130111694336
    10. 'False' → logprob: -11.18130111694336

Token 428: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003284305799752474
    2. ']*' → logprob: -5.753284454345703
    3. ' ]' → logprob: -9.253284454345703
    4. ' for' → logprob: -12.003284454345703
    5. 'for' → logprob: -13.128284454345703
    6. ')' → logprob: -14.628284454345703
    7. '+' → logprob: -14.628284454345703
    8. ']*(' → logprob: -14.628284454345703
    9. '*' → logprob: -14.753284454345703
    10. ',' → logprob: -15.003284454345703

Token 429: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08670098334550858
    2. ' *' → logprob: -2.586700916290283
    3. '*n' → logprob: -5.336700916290283
    4. 'n' → logprob: -6.836700916290283
    5. '(n' → logprob: -7.836700916290283
    6. '[n' → logprob: -7.961700916290283
    7. ' for' → logprob: -8.461701393127441
    8. ' n' → logprob: -8.586701393127441
    9. 'for' → logprob: -9.211701393127441
    10. ')' → logprob: -9.461701393127441

Token 430: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01924823224544525
    2. '(n' → logprob: -4.144248008728027
    3. '(' → logprob: -5.769248008728027
    4. '3' → logprob: -10.144248008728027
    5. ' n' → logprob: -10.519248008728027
    6. ' (' → logprob: -11.394248008728027
    7. '   ' → logprob: -13.019248008728027
    8. '2' → logprob: -13.769248008728027
    9. '((' → logprob: -13.769248008728027
    10. '```' → logprob: -14.269248008728027

Token 431: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.47451484203338623
    2. '<|end|>' → logprob: -0.9745148420333862
    3. '<|end|>' → logprob: -8.099514961242676
    4. '```' → logprob: -9.724514961242676
    5. '
' → logprob: -10.349514961242676
    6. ')' → logprob: -10.849514961242676
    7. ' def' → logprob: -11.849514961242676
    8. '[' → logprob: -11.849514961242676
    9. '[
' → logprob: -13.349514961242676
    10. '#' → logprob: -13.474514961242676

Token 432: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00020818933262489736
    2. '<|end|>' → logprob: -8.500207901000977
    3. '```' → logprob: -13.750207901000977
    4. '
' → logprob: -14.250207901000977
    5. ' def' → logprob: -14.375207901000977
    6. '<|end|>' → logprob: -14.500207901000977
    7. ')' → logprob: -14.750207901000977
    8. '[' → logprob: -14.875207901000977
    9. '#' → logprob: -15.250207901000977
    10. '\' → logprob: -15.375207901000977

Token 433: ' pop' (ID: 2735)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3252803683280945
    2. ' main' → logprob: -2.3252804279327393
    3. 'assign' → logprob: -2.7002804279327393
    4. 'solve' → logprob: -3.0752804279327393
    5. ' solve' → logprob: -4.82528018951416
    6. ' assign' → logprob: -5.07528018951416
    7. 'fill' → logprob: -5.07528018951416
    8. 'find' → logprob: -5.20028018951416
    9. 'calc' → logprob: -5.45028018951416
    10. 'construct' → logprob: -5.45028018951416

Token 434: '_from' (ID: 12526)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.14548709988594055
    2. '(' → logprob: -2.020487070083618
    3. '<|end|>' → logprob: -6.895487308502197
    4. '```' → logprob: -8.270486831665039
    5. '(
' → logprob: -8.520486831665039
    6. 'def' → logprob: -8.770486831665039
    7. ' ()' → logprob: -9.395486831665039
    8. ')' → logprob: -9.520486831665039
    9. '()]' → logprob: -9.645486831665039
    10. ' (' → logprob: -9.645486831665039

Token 435: '(lst' (ID: 95688)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.9053774476051331
    2. '(one' → logprob: -1.6553773880004883
    3. 'one' → logprob: -1.7803773880004883
    4. '(' → logprob: -1.7803773880004883
    5. '<|end|>' → logprob: -3.7803773880004883
    6. '_three' → logprob: -4.405377388000488
    7. 'two' → logprob: -5.280377388000488
    8. '(two' → logprob: -5.405377388000488
    9. 'list' → logprob: -5.905377388000488
    10. ' three' → logprob: -5.905377388000488

Token 436: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04292507842183113
    2. '()' → logprob: -3.4179251194000244
    3. '(lst' → logprob: -5.542924880981445
    4. '):' → logprob: -5.667924880981445
    5. '(' → logprob: -7.292924880981445
    6. '():' → logprob: -8.167924880981445
    7. '())' → logprob: -8.292924880981445
    8. ',' → logprob: -8.542924880981445
    9. '<|end|>' → logprob: -9.167924880981445
    10. '):

' → logprob: -9.667924880981445

Token 437: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.06381551176309586
    2. 'lst' → logprob: -2.8138155937194824
    3. ' return' → logprob: -6.688815593719482
    4. 'def' → logprob: -8.188815116882324
    5. ' lst' → logprob: -8.688815116882324
    6. '(lst' → logprob: -8.938815116882324
    7. '   ' → logprob: -10.813815116882324
    8. '    
' → logprob: -14.063815116882324
    9. '_lst' → logprob: -14.063815116882324
    10. ')' → logprob: -14.813815116882324

Token 438: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0034400573931634426
    2. 'lst' → logprob: -6.253439903259277
    3. ' return' → logprob: -6.503439903259277
    4. ' lst' → logprob: -11.503439903259277
    5. '   ' → logprob: -13.253439903259277
    6. 'pop' → logprob: -16.628440856933594
    7. '    
' → logprob: -16.878440856933594
    8. '(lst' → logprob: -16.878440856933594
    9. '```' → logprob: -17.128440856933594
    10. '	return' → logprob: -17.128440856933594

Token 439: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.011047935113310814
    2. ' lst' → logprob: -4.511047840118408
    3. '(lst' → logprob: -16.26104736328125
    4. '.lst' → logprob: -19.13604736328125
    5. '_lst' → logprob: -19.38604736328125
    6. 'list' → logprob: -20.63604736328125
    7. 'Lst' → logprob: -20.88604736328125
    8. 'ls' → logprob: -21.01104736328125
    9. 'pop' → logprob: -21.51104736328125
    10. '0' → logprob: -21.63604736328125

Token 440: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -9.610702363715973e-06
    2. 'pop' → logprob: -12.000009536743164
    3. ' .' → logprob: -13.250009536743164
    4. '.' → logprob: -13.375009536743164
    5. '[-' → logprob: -17.250009536743164
    6. '	pop' → logprob: -17.250009536743164
    7. '.Pop' → logprob: -18.375009536743164
    8. '(pop' → logprob: -19.125009536743164
    9. '_pop' → logprob: -19.500009536743164
    10. ' pop' → logprob: -19.625009536743164

Token 441: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2268768697977066
    2. '(' → logprob: -1.6018768548965454
    3. '<|end|>' → logprob: -7.351876735687256
    4. 'def' → logprob: -7.726876735687256
    5. '(
' → logprob: -8.351877212524414
    6. '(

' → logprob: -9.851877212524414
    7. '()

' → logprob: -11.101877212524414
    8. '()
' → logprob: -11.226877212524414
    9. '();' → logprob: -11.601877212524414
    10. '(),' → logprob: -11.976877212524414

Token 442: ' if' (ID: 538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08911427110433578
    2. '<|end|>' → logprob: -2.464114189147949
    3. '<|end|>' → logprob: -9.21411418914795
    4. ' def' → logprob: -10.46411418914795
    5. '```' → logprob: -11.46411418914795
    6. ')' → logprob: -11.58911418914795
    7. '
' → logprob: -11.58911418914795
    8. '[' → logprob: -11.71411418914795
    9. '_def' → logprob: -13.83911418914795
    10. '\' → logprob: -13.96411418914795

Token 443: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.006723183207213879
    2. ' lst' → logprob: -5.006723403930664
    3. 'len' → logprob: -11.756723403930664
    4. '(lst' → logprob: -17.506723403930664
    5. ' len' → logprob: -17.881723403930664
    6. 'ls' → logprob: -19.381723403930664
    7. ' ' → logprob: -19.756723403930664
    8. '   ' → logprob: -20.006723403930664
    9. '_lst' → logprob: -20.506723403930664
    10. 'lis' → logprob: -20.506723403930664

Token 444: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5236619114875793
    2. 'else' → logprob: -0.8986619114875793
    3. '<|end|>' → logprob: -7.648662090301514
    4. '[]' → logprob: -10.648661613464355
    5. ')' → logprob: -11.898661613464355
    6. '_else' → logprob: -12.523661613464355
    7. '[:]' → logprob: -12.523661613464355
    8. '<|end|>' → logprob: -12.523661613464355
    9. '!=' → logprob: -13.148661613464355
    10. '[' → logprob: -13.148661613464355

Token 445: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.000519312743563205
    2. ' None' → logprob: -8.375519752502441
    3. '0' → logprob: -8.500519752502441
    4. '-' → logprob: -9.375519752502441
    5. ' -' → logprob: -15.875519752502441
    6. '_None' → logprob: -15.875519752502441
    7. '   ' → logprob: -16.125518798828125
    8. '(None' → logprob: -16.625518798828125
    9. ' ' → logprob: -16.750518798828125
    10. 'False' → logprob: -17.375518798828125

Token 446: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2816508412361145
    2. '<|end|>' → logprob: -1.4066507816314697
    3. '<|end|>' → logprob: -8.15665054321289
    4. '```' → logprob: -8.78165054321289
    5. '
' → logprob: -10.90665054321289
    6. ' def' → logprob: -11.40665054321289
    7. ')' → logprob: -11.53165054321289
    8. '[' → logprob: -12.40665054321289
    9. '

' → logprob: -12.53165054321289
    10. '\' → logprob: -13.40665054321289

Token 447: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0025638877414166927
    2. '<|end|>' → logprob: -6.002563953399658
    3. '.' → logprob: -10.8775634765625
    4. ')' → logprob: -11.2525634765625
    5. ' def' → logprob: -11.2525634765625
    6. '```' → logprob: -11.3775634765625
    7. '<|end|>' → logprob: -11.7525634765625
    8. '[' → logprob: -12.0025634765625
    9. '[]' → logprob: -12.1275634765625
    10. '#' → logprob: -12.7525634765625

Token 448: ' assign' (ID: 14975)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pop' → logprob: -1.254137396812439
    2. ' main' → logprob: -1.504137396812439
    3. 'main' → logprob: -1.629137396812439
    4. ' pop' → logprob: -2.2541375160217285
    5. 'def' → logprob: -3.0041375160217285
    6. 'set' → logprob: -4.0041375160217285
    7. 'calc' → logprob: -4.3791375160217285
    8. ' set' → logprob: -4.6291375160217285
    9. ' run' → logprob: -4.7541375160217285
    10. ' def' → logprob: -4.8791375160217285

Token 449: '_ans' (ID: 146254)
  Prédit: '(answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(answer' → logprob: -1.0202308893203735
    2. '(' → logprob: -1.1452308893203735
    3. '_' → logprob: -1.6452308893203735
    4. '_answer' → logprob: -2.520230770111084
    5. 'answer' → logprob: -3.520230770111084
    6. ' (' → logprob: -4.645230770111084
    7. '_answers' → logprob: -6.020230770111084
    8. '(ans' → logprob: -6.395230770111084
    9. '<|end|>' → logprob: -7.020230770111084
    10. 'answers' → logprob: -7.770230770111084

Token 450: '_case' (ID: 43667)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10032431781291962
    2. 'wer' → logprob: -2.9753243923187256
    3. '(ans' → logprob: -3.9753243923187256
    4. '(' → logprob: -4.8503241539001465
    5. 'er' → logprob: -5.2253241539001465
    6. 'swer' → logprob: -6.2253241539001465
    7. '[]' → logprob: -6.4753241539001465
    8. '[
' → logprob: -6.6003241539001465
    9. 'ers' → logprob: -6.6003241539001465
    10. 'wers' → logprob: -6.9753241539001465

Token 451: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3358798623085022
    2. '1' → logprob: -2.0858798027038574
    3. '(ans' → logprob: -3.0858798027038574
    4. '_' → logprob: -3.3358798027038574
    5. 's' → logprob: -3.4608798027038574
    6. '[' → logprob: -4.210879802703857
    7. '0' → logprob: -4.585879802703857
    8. ':' → logprob: -5.335879802703857
    9. '(
' → logprob: -5.585879802703857
    10. '(case' → logprob: -5.585879802703857

Token 452: '(n' (ID: 2406)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.008798571303486824
    2. '(' → logprob: -5.383798599243164
    3. '(answer' → logprob: -5.633798599243164
    4. '(n' → logprob: -8.133798599243164
    5. ' (' → logprob: -9.383798599243164
    6. '(a' → logprob: -10.133798599243164
    7. '(k' → logprob: -10.258798599243164
    8. '(flag' → logprob: -10.258798599243164
    9. '(arr' → logprob: -10.758798599243164
    10. '(i' → logprob: -11.258798599243164

Token 453: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5825273990631104
    2. ',' → logprob: -0.8325273990631104
    3. '):
' → logprob: -5.082527160644531
    4. ')' → logprob: -8.332527160644531
    5. '   ' → logprob: -10.082527160644531
    6. ' ,' → logprob: -10.957527160644531
    7. ',
' → logprob: -11.332527160644531
    8. ',n' → logprob: -11.457527160644531
    9. '):

' → logprob: -11.832527160644531
    10. ':' → logprob: -11.832527160644531

Token 454: ' flag' (ID: 9641)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.5068361759185791
    2. 'flag' → logprob: -1.506836175918579
    3. ' one' → logprob: -2.381836175918579
    4. ' flag' → logprob: -3.756836175918579
    5. 'G' → logprob: -4.3818359375
    6. 'k' → logprob: -4.6318359375
    7. 'three' → logprob: -4.6318359375
    8. 'ans' → logprob: -5.2568359375
    9. ' G' → logprob: -5.5068359375
    10. 'answer' → logprob: -5.5068359375

Token 455: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003001469885930419
    2. '):' → logprob: -5.878001689910889
    3. ',
' → logprob: -9.75300121307373
    4. '):
' → logprob: -9.87800121307373
    5. '[' → logprob: -10.25300121307373
    6. '   ' → logprob: -10.75300121307373
    7. ' ,' → logprob: -11.12800121307373
    8. ')' → logprob: -12.00300121307373
    9. 'def' → logprob: -13.87800121307373
    10. '):

' → logprob: -14.00300121307373

Token 456: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.17588941752910614
    2. ' one' → logprob: -1.9258893728256226
    3. 'three' → logprob: -4.800889492034912
    4. ' three' → logprob: -6.050889492034912
    5. 'G' → logprob: -6.800889492034912
    6. 'mod' → logprob: -7.300889492034912
    7. 'pop' → logprob: -7.425889492034912
    8. 'answer' → logprob: -7.550889492034912
    9. ')' → logprob: -7.675889492034912
    10. 'ans' → logprob: -8.050889015197754

Token 457: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00040099851321429014
    2. ')' → logprob: -8.87540054321289
    3. '):' → logprob: -8.87540054321289
    4. ' ,' → logprob: -9.50040054321289
    5. '   ' → logprob: -11.25040054321289
    6. ',
' → logprob: -11.75040054321289
    7. '<|end|>' → logprob: -11.87540054321289
    8. '‌,' → logprob: -12.87540054321289
    9. ',list' → logprob: -13.25040054321289
    10. ',)' → logprob: -13.37540054321289

Token 458: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.1801784783601761
    2. ' two' → logprob: -1.8051785230636597
    3. 'three' → logprob: -8.05517864227295
    4. ' three' → logprob: -10.30517864227295
    5. 'pop' → logprob: -10.80517864227295
    6. '   ' → logprob: -11.18017864227295
    7. ')' → logprob: -11.68017864227295
    8. 'one' → logprob: -11.93017864227295
    9. ' ' → logprob: -12.18017864227295
    10. ' pop' → logprob: -12.55517864227295

Token 459: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015717383939772844
    2. ' ,' → logprob: -9.625157356262207
    3. '):' → logprob: -9.750157356262207
    4. '):
' → logprob: -11.250157356262207
    5. ',
' → logprob: -11.875157356262207
    6. ')' → logprob: -12.250157356262207
    7. '<|end|>' → logprob: -12.625157356262207
    8. '   ' → logprob: -14.250157356262207
    9. '‌,' → logprob: -14.625157356262207
    10. 'def' → logprob: -14.625157356262207

Token 460: ' three' (ID: 3407)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.23518666625022888
    2. ' three' → logprob: -1.7351866960525513
    3. 'answer' → logprob: -3.9851865768432617
    4. 'ans' → logprob: -4.860186576843262
    5. ' ans' → logprob: -5.485186576843262
    6. ' answer' → logprob: -6.235186576843262
    7. '   ' → logprob: -8.485186576843262
    8. 'one' → logprob: -8.735186576843262
    9. ')' → logprob: -9.485186576843262
    10. 'k' → logprob: -10.360186576843262

Token 461: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03556187450885773
    2. ',' → logprob: -3.4105618000030518
    3. '):
' → logprob: -6.285562038421631
    4. ')' → logprob: -10.410561561584473
    5. '):
' → logprob: -12.035561561584473
    6. ':' → logprob: -12.160561561584473
    7. '   ' → logprob: -12.410561561584473
    8. ' ):' → logprob: -13.035561561584473
    9. ',n' → logprob: -13.535561561584473
    10. '):

' → logprob: -14.785561561584473

Token 462: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.33385810256004333
    2. 'answer' → logprob: -1.4588581323623657
    3. ' ans' → logprob: -3.458858013153076
    4. 'k' → logprob: -4.333858013153076
    5. ' answer' → logprob: -6.333858013153076
    6. 'append' → logprob: -6.833858013153076
    7. 'pop' → logprob: -7.083858013153076
    8. '   ' → logprob: -7.708858013153076
    9. ' k' → logprob: -7.958858013153076
    10. 'count' → logprob: -8.208858489990234

Token 463: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13389582931995392
    2. '):
' → logprob: -2.5088958740234375
    3. ',' → logprob: -3.1338958740234375
    4. '):
' → logprob: -8.758895874023438
    5. ')' → logprob: -9.508895874023438
    6. '   ' → logprob: -9.758895874023438
    7. ' ):' → logprob: -10.383895874023438
    8. '[' → logprob: -10.633895874023438
    9. '[]):' → logprob: -11.633895874023438
    10. ' ,' → logprob: -11.758895874023438

Token 464: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004857266612816602
    2. ':' → logprob: -8.50048542022705
    3. '```' → logprob: -9.00048542022705
    4. '       ' → logprob: -10.62548542022705
    5. '):
' → logprob: -11.00048542022705
    6. ':
' → logprob: -11.12548542022705
    7. 'if' → logprob: -11.25048542022705
    8. ' for' → logprob: -11.37548542022705
    9. ')' → logprob: -11.50048542022705
    10. ',' → logprob: -11.50048542022705

Token 465: ' for' (ID: 395)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1004586219787598
    2. 'if' → logprob: -1.8504586219787598
    3. 'for' (adapté à ' for') → logprob: -1.9754586219787598
    4. 'count' → logprob: -2.1004586219787598
    5. 'cnt' → logprob: -2.2254586219787598
    6. 'idx' → logprob: -2.3504586219787598
    7. 'x' → logprob: -5.10045862197876
    8. 'need' → logprob: -5.35045862197876
    9. 'j' → logprob: -5.60045862197876
    10. 'target' → logprob: -5.85045862197876

Token 466: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.061797138303518295
    2. ' _' → logprob: -3.3117971420288086
    3. 'i' → logprob: -4.311797142028809
    4. '_' → logprob: -4.936797142028809
    5. ' idx' → logprob: -6.311797142028809
    6. '_i' → logprob: -8.561797142028809
    7. 'idx' → logprob: -9.186797142028809
    8. ' v' → logprob: -9.311797142028809
    9. ' node' → logprob: -9.436797142028809
    10. ' ' → logprob: -9.686797142028809

Token 467: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16085471212863922
    2. 'in' → logprob: -1.910854697227478
    3. ',' → logprob: -7.785854816436768
    4. ' ' → logprob: -9.03585433959961
    5. 'n' → logprob: -9.78585433959961
    6. ')' → logprob: -12.03585433959961
    7. '  ' → logprob: -12.28585433959961
    8. '[' → logprob: -12.66085433959961
    9. '   ' → logprob: -12.66085433959961
    10. '_' → logprob: -12.78585433959961

Token 468: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20458006858825684
    2. ' range' → logprob: -2.704580068588257
    3. 'three' → logprob: -2.829580068588257
    4. 'one' → logprob: -2.954580068588257
    5. 'pop' → logprob: -5.454580307006836
    6. ' three' → logprob: -6.704580307006836
    7. ' one' → logprob: -7.204580307006836
    8. 'two' → logprob: -8.704580307006836
    9. 'flag' → logprob: -8.829580307006836
    10. '[' → logprob: -9.079580307006836

Token 469: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.15855321288108826
    2. '(calc' → logprob: -2.158553123474121
    3. '(' → logprob: -4.283553123474121
    4. '(len' → logprob: -4.908553123474121
    5. 'n' → logprob: -5.783553123474121
    6. '(ans' → logprob: -5.908553123474121
    7. '(pop' → logprob: -6.408553123474121
    8. 'calc' → logprob: -7.033553123474121
    9. '(flag' → logprob: -7.658553123474121
    10. 'ans' → logprob: -8.033553123474121

Token 470: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3888978660106659
    2. '):' → logprob: -1.1388978958129883
    3. '   ' → logprob: -6.263897895812988
    4. ')' → logprob: -10.138897895812988
    5. '//' → logprob: -10.888897895812988
    6. '       ' → logprob: -11.763897895812988
    7. ' ):' → logprob: -11.763897895812988
    8. ' ):
' → logprob: -11.888897895812988
    9. ',' → logprob: -12.013897895812988
    10. '):

' → logprob: -12.263897895812988

Token 471: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014111855998635292
    2. '   ' → logprob: -7.376410961151123
    3. ' if' → logprob: -7.751410961151123
    4. '<|end|>' → logprob: -8.376411437988281
    5. 'if' → logprob: -10.126411437988281
    6. ',' → logprob: -10.251411437988281
    7. ':' → logprob: -12.126411437988281
    8. ' ' → logprob: -12.126411437988281
    9. '```' → logprob: -12.501411437988281
    10. '[' → logprob: -12.501411437988281

Token 472: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004036845173686743
    2. 'ans' → logprob: -6.254036903381348
    3. '       ' → logprob: -6.754036903381348
    4. '   ' → logprob: -7.754036903381348
    5. ' if' → logprob: -8.129036903381348
    6. '           ' → logprob: -8.754036903381348
    7. 'flag' → logprob: -9.879036903381348
    8. ' ans' → logprob: -12.754036903381348
    9. 'idx' → logprob: -14.379036903381348
    10. '	if' → logprob: -14.504036903381348

Token 473: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.04324660822749138
    2. ' flag' → logprob: -3.1682465076446533
    3. ' not' → logprob: -9.543246269226074
    4. 'ans' → logprob: -9.543246269226074
    5. 'not' → logprob: -10.043246269226074
    6. ' ans' → logprob: -10.418246269226074
    7. '	flag' → logprob: -11.543246269226074
    8. '(flag' → logprob: -11.668246269226074
    9. '   ' → logprob: -12.168246269226074
    10. ' i' → logprob: -13.418246269226074

Token 474: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005084725562483072
    2. '[' → logprob: -7.6255083084106445
    3. ' [' → logprob: -11.000508308410645
    4. '[
' → logprob: -13.750508308410645
    5. 'i' → logprob: -14.125508308410645
    6. '==' → logprob: -14.500508308410645
    7. ' i' → logprob: -14.875508308410645
    8. '[I' → logprob: -15.375508308410645
    9. '```' → logprob: -15.875508308410645
    10. ')' → logprob: -16.00050926208496

Token 475: ']:
' (ID: 22152)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5616976618766785
    2. ']==' → logprob: -0.9366976618766785
    3. '==' → logprob: -3.4366977214813232
    4. ']:' → logprob: -6.061697483062744
    5. ' ==' → logprob: -6.186697483062744
    6. ']:
' → logprob: -7.561697483062744
    7. ' ]' → logprob: -8.436697959899902
    8. ')==' → logprob: -8.686697959899902
    9. ')' → logprob: -8.811697959899902
    10. ':' → logprob: -9.936697959899902

Token 476: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.2760071754455566
    2. ':
' → logprob: -1.4010071754455566
    3. ':' → logprob: -1.6510071754455566
    4. '           ' → logprob: -1.7760071754455566
    5. '==' → logprob: -3.0260071754455566
    6. 'and' → logprob: -3.5260071754455566
    7. ' ==' → logprob: -3.6510071754455566
    8. '       ' → logprob: -5.276007175445557
    9. ' =' → logprob: -7.401007175445557
    10. '=' → logprob: -7.401007175445557

Token 477: ' v' (ID: 323)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.005424907896667719
    2. '           ' → logprob: -5.630424976348877
    3. ' ans' → logprob: -6.755424976348877
    4. 'if' → logprob: -7.380424976348877
    5. '	ans' → logprob: -11.130424499511719
    6. 'x' → logprob: -12.880424499511719
    7. '(ans' → logprob: -12.880424499511719
    8. 'idx' → logprob: -12.880424499511719
    9. '               ' → logprob: -13.130424499511719
    10. 'v' (adapté à ' v') → logprob: -13.255424499511719

Token 478: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43602514266967773
    2. '=' → logprob: -1.1860251426696777
    3. 'al' → logprob: -3.0610251426696777
    4. 'alue' → logprob: -8.686025619506836
    5. 'alid' → logprob: -8.936025619506836
    6. 'als' → logprob: -9.061025619506836
    7. '   ' → logprob: -9.186025619506836
    8. ',' → logprob: -9.311025619506836
    9. '=int' → logprob: -9.311025619506836
    10. '=v' → logprob: -9.811025619506836

Token 479: ' pop' (ID: 2735)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.027478059753775597
    2. ' pop' → logprob: -3.777477979660034
    3. 'three' → logprob: -6.027478218078613
    4. 'one' → logprob: -6.902478218078613
    5. ' three' → logprob: -7.777478218078613
    6. ' one' → logprob: -8.277478218078613
    7. 'two' → logprob: -9.527478218078613
    8. '	pop' → logprob: -10.527478218078613
    9. ' two' → logprob: -11.277478218078613
    10. '   ' → logprob: -11.527478218078613

Token 480: '_from' (ID: 12526)
  Prédit: '(one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.012003650888800621
    2. '(' → logprob: -5.012003421783447
    3. '(two' → logprob: -5.262003421783447
    4. '(from' → logprob: -10.137003898620605
    5. 'from' → logprob: -10.262003898620605
    6. '(th' → logprob: -11.387003898620605
    7. '(t' → logprob: -13.512003898620605
    8. 'one' → logprob: -14.512003898620605
    9. 'From' → logprob: -14.887003898620605
    10. '_from' → logprob: -15.387003898620605

Token 481: '(one' (ID: 92717)
  Prédit: '(one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.06965383887290955
    2. '(' → logprob: -2.8196537494659424
    3. '(two' → logprob: -4.9446539878845215
    4. 'three' → logprob: -7.6946539878845215
    5. 'one' → logprob: -9.694653511047363
    6. '(th' → logprob: -11.319653511047363
    7. 'two' → logprob: -12.569653511047363
    8. '(t' → logprob: -13.444653511047363
    9. ' three' → logprob: -14.569653511047363
    10. ' one' → logprob: -15.444653511047363

Token 482: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00885422807186842
    2. ')
' → logprob: -4.758854389190674
    3. '())' → logprob: -8.883853912353516
    4. '()' → logprob: -9.383853912353516
    5. '())
' → logprob: -11.383853912353516
    6. ')

' → logprob: -13.008853912353516
    7. ' )' → logprob: -14.008853912353516
    8. ')
' → logprob: -14.508853912353516
    9. '()
' → logprob: -14.633853912353516
    10. '   ' → logprob: -15.508853912353516

Token 483: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009794592624530196
    2. '       ' → logprob: -8.00097942352295
    3. '
' → logprob: -8.37597942352295
    4. '<|end|>' → logprob: -8.50097942352295
    5. '()
' → logprob: -9.50097942352295
    6. '            
' → logprob: -10.62597942352295
    7. '()' → logprob: -10.75097942352295
    8. '               ' → logprob: -11.00097942352295
    9. 'else' → logprob: -11.37597942352295
    10. '   ' → logprob: -11.37597942352295

Token 484: ' if' (ID: 538)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.651555061340332
    2. '           ' → logprob: -0.901555061340332
    3. ' ans' → logprob: -2.776555061340332
    4. 'if' (adapté à ' if') → logprob: -4.776555061340332
    5. ' if' → logprob: -6.776555061340332
    6. '       ' → logprob: -7.526555061340332
    7. '   ' → logprob: -8.651555061340332
    8. '	ans' → logprob: -8.776555061340332
    9. 'answer' → logprob: -9.526555061340332
    10. '(ans' → logprob: -10.401555061340332

Token 485: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2254209965467453
    2. ' v' → logprob: -1.6004209518432617
    3. ' ' → logprob: -12.725420951843262
    4. '   ' → logprob: -13.350420951843262
    5. '	v' → logprob: -13.475420951843262
    6. ' ' → logprob: -14.600420951843262
    7. '    ' → logprob: -14.725420951843262
    8. 'not' → logprob: -14.725420951843262
    9. '  ' → logprob: -15.600420951843262
    10. '<v' → logprob: -15.600420951843262

Token 486: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.012522367760539055
    2. 'is' → logprob: -4.387522220611572
    3. ')' → logprob: -11.63752269744873
    4. '==' → logprob: -13.88752269744873
    5. '[' → logprob: -14.26252269744873
    6. ':' → logprob: -14.76252269744873
    7. '<|end|>' → logprob: -15.01252269744873
    8. ' )' → logprob: -15.26252269744873
    9. ' ' → logprob: -15.51252269744873
    10. ' ==' → logprob: -15.63752269744873

Token 487: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4483274519443512
    2. 'None' → logprob: -1.6983274221420288
    3. 'not' → logprob: -2.1983275413513184
    4. ' None' → logprob: -2.6983275413513184
    5. '	not' → logprob: -12.69832706451416
    6. 'none' → logprob: -12.94832706451416
    7. 'Not' → logprob: -14.19832706451416
    8. ' ' → logprob: -14.44832706451416
    9. ' none' → logprob: -14.44832706451416
    10. '=None' → logprob: -14.82332706451416

Token 488: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -7.941850526549388e-06
    2. ' None' → logprob: -11.750007629394531
    3. 'none' → logprob: -17.87500762939453
    4. '   ' → logprob: -19.25000762939453
    5. '_None' → logprob: -19.87500762939453
    6. '0' → logprob: -20.75000762939453
    7. '(None' → logprob: -21.37500762939453
    8. '
' → logprob: -21.50000762939453
    9. '=None' → logprob: -21.50000762939453
    10. 'not' → logprob: -21.62500762939453

Token 489: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4334363639354706
    2. ':' → logprob: -1.183436393737793
    3. '           ' → logprob: -3.308436393737793
    4. '               ' → logprob: -5.308436393737793
    5. ')' → logprob: -6.183436393737793
    6. '):
' → logprob: -7.308436393737793
    7. ' is' → logprob: -7.683436393737793
    8. '():
' → logprob: -8.433436393737793
    9. '):' → logprob: -9.058436393737793
    10. ' !=' → logprob: -9.808436393737793

Token 490: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023353327065706253
    2. '           ' → logprob: -4.023353099822998
    3. ' ans' → logprob: -5.398353099822998
    4. 'ans' → logprob: -7.773353099822998
    5. ':
' → logprob: -9.398353576660156
    6. '   ' → logprob: -9.773353576660156
    7. ':' → logprob: -10.023353576660156
    8. '	ans' → logprob: -11.398353576660156
    9. '       ' → logprob: -11.898353576660156
    10. '                   ' → logprob: -12.023353576660156

Token 491: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.5817947387695312
    2. ' ans' → logprob: -0.8317947387695312
    3. '           ' → logprob: -5.331794738769531
    4. '	ans' → logprob: -7.706794738769531
    5. '               ' → logprob: -8.581794738769531
    6. '   ' → logprob: -8.581794738769531
    7. '                   ' → logprob: -8.956794738769531
    8. '(ans' → logprob: -10.456794738769531
    9. '       ' → logprob: -11.831794738769531
    10. 'answer' → logprob: -11.956794738769531

Token 492: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005286172963678837
    2. '[v' → logprob: -5.25528621673584
    3. '[' → logprob: -9.88028621673584
    4. '```' → logprob: -15.00528621673584
    5. 'v' → logprob: -15.63028621673584
    6. ' [' → logprob: -15.63028621673584
    7. '[u' → logprob: -16.505285263061523
    8. '[n' → logprob: -16.755285263061523
    9. '[idx' → logprob: -17.005285263061523
    10. '[s' → logprob: -17.005285263061523

Token 493: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0027165452484041452
    2. ']=' → logprob: -6.252716541290283
    3. '=' → logprob: -7.252716541290283
    4. ' ]' → logprob: -9.877717018127441
    5. ' =' → logprob: -10.502717018127441
    6. ')' → logprob: -15.752717018127441
    7. '[' → logprob: -16.377716064453125
    8. ']
' → logprob: -16.752716064453125
    9. '   ' → logprob: -17.002716064453125
    10. '    ' → logprob: -17.002716064453125

Token 494: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889749854803085
    2. ' =' → logprob: -2.578897476196289
    3. '=v' → logprob: -11.828897476196289
    4. ' ' → logprob: -16.32889747619629
    5. ']' → logprob: -16.45389747619629
    6. 'v' → logprob: -16.57889747619629
    7. ']=' → logprob: -16.95389747619629
    8. ')' → logprob: -17.07889747619629
    9. ',' → logprob: -18.20389747619629
    10. '   ' → logprob: -18.32889747619629

Token 495: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -7.493430894101039e-05
    2. ' v' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.37507438659668
    4. '	v' → logprob: -17.87507438659668
    5. '(v' → logprob: -18.25007438659668
    6. '1' → logprob: -18.75007438659668
    7. '3' → logprob: -19.62507438659668
    8. 'str' → logprob: -19.87507438659668
    9. '  ' → logprob: -20.00007438659668
    10. '[v' → logprob: -20.50007438659668

Token 496: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48250633478164673
    2. '<|end|>' → logprob: -0.9825063347816467
    3. '       ' → logprob: -5.107506275177002
    4. '               ' → logprob: -6.732506275177002
    5. '<|end|>' → logprob: -8.10750675201416
    6. '   ' → logprob: -8.23250675201416
    7. 'else' → logprob: -9.23250675201416
    8. '            ' → logprob: -9.23250675201416
    9. ' else' → logprob: -9.60750675201416
    10. '          ' → logprob: -9.60750675201416

Token 497: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18885552883148193
    2. '       ' → logprob: -2.1888556480407715
    3. '<|end|>' → logprob: -2.9388556480407715
    4. '               ' → logprob: -5.8138556480407715
    5. 'else' → logprob: -6.4388556480407715
    6. ' else' → logprob: -7.0638556480407715
    7. '   ' → logprob: -7.8138556480407715
    8. '	       ' → logprob: -7.9388556480407715
    9. '<|end|>' → logprob: -8.688855171203613
    10. '	else' → logprob: -8.938855171203613

Token 498: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0660921111702919
    2. 'else' (adapté à ' else') → logprob: -3.066092014312744
    3. ' else' → logprob: -4.566092014312744
    4. 'elif' → logprob: -5.691092014312744
    5. '           ' → logprob: -5.816092014312744
    6. '   ' → logprob: -8.566092491149902
    7. ' elif' → logprob: -8.691092491149902
    8. '<|end|>' → logprob: -8.691092491149902
    9. '        ' → logprob: -10.941092491149902
    10. 'return' → logprob: -11.441092491149902

Token 499: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10115081071853638
    2. ':
' → logprob: -2.3511507511138916
    3. '               ' → logprob: -7.226150989532471
    4. ',' → logprob: -9.101150512695312
    5. '           ' → logprob: -10.101150512695312
    6. '       ' → logprob: -10.726150512695312
    7. '):
' → logprob: -11.726150512695312
    8. ' :' → logprob: -12.101150512695312
    9. ':
' → logprob: -12.226150512695312
    10. ':

' → logprob: -12.726150512695312

Token 500: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018589545041322708
    2. 'v' → logprob: -4.518589496612549
    3. ' v' → logprob: -5.018589496612549
    4. '           ' → logprob: -8.268589973449707
    5. ' for' → logprob: -9.018589973449707
    6. '                   ' → logprob: -9.268589973449707
    7. '   ' → logprob: -9.643589973449707
    8. '       ' → logprob: -9.768589973449707
    9. '                ' → logprob: -10.268589973449707
    10. ' ans' → logprob: -10.393589973449707

Token 501: ' ans' (ID: 3345)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.049645375460386276
    2. ' v' → logprob: -3.92464542388916
    3. 'ans' (adapté à ' ans') → logprob: -4.54964542388916
    4. '               ' → logprob: -4.79964542388916
    5. ' ans' → logprob: -5.54964542388916
    6. '           ' → logprob: -5.67464542388916
    7. '                   ' → logprob: -6.79964542388916
    8. 'w' → logprob: -7.29964542388916
    9. 'break' → logprob: -9.04964542388916
    10. '   ' → logprob: -9.29964542388916

Token 502: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.0259150157216936e-05
    2. '[' → logprob: -10.62505054473877
    3. ' =' → logprob: -11.75005054473877
    4. '=' → logprob: -12.00005054473877
    5. '[:]' → logprob: -13.25005054473877
    6. '[
' → logprob: -13.50005054473877
    7. 'from' → logprob: -13.50005054473877
    8. 'i' → logprob: -14.25005054473877
    9. ')' → logprob: -14.50005054473877
    10. 'import' → logprob: -14.62505054473877

Token 503: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3198970556259155
    2. '[i' → logprob: -1.3198970556259155
    3. ']=' → logprob: -5.694897174835205
    4. '=' → logprob: -6.569897174835205
    5. ' =' → logprob: -6.944897174835205
    6. '[' → logprob: -7.944897174835205
    7. '   ' → logprob: -8.069896697998047
    8. '       ' → logprob: -8.819896697998047
    9. '=i' → logprob: -11.069896697998047
    10. ')' → logprob: -11.319896697998047

Token 504: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16089914739131927
    2. ' =' → logprob: -1.9108991622924805
    3. '[i' → logprob: -7.7858991622924805
    4. '[' → logprob: -8.41089916229248
    5. '   ' → logprob: -11.28589916229248
    6. ']' → logprob: -11.91089916229248
    7. ' ' → logprob: -12.28589916229248
    8. '       ' → logprob: -12.78589916229248
    9. '=i' → logprob: -13.66089916229248
    10. '           ' → logprob: -13.91089916229248

Token 505: ' pop' (ID: 2735)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.030128566548228264
    2. ' pop' → logprob: -3.5301284790039062
    3. '0' → logprob: -8.530128479003906
    4. 'three' → logprob: -10.030128479003906
    5. '	pop' → logprob: -10.405128479003906
    6. 'None' → logprob: -10.655128479003906
    7. '   ' → logprob: -11.405128479003906
    8. 'two' → logprob: -11.530128479003906
    9. '(pop' → logprob: -11.655128479003906
    10. '           ' → logprob: -11.655128479003906

Token 506: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -6.718606891809031e-05
    2. '(two' → logprob: -10.250066757202148
    3. 'from' → logprob: -10.500066757202148
    4. '(' → logprob: -13.125066757202148
    5. 'From' → logprob: -13.375066757202148
    6. '(t' → logprob: -14.750066757202148
    7. '_two' → logprob: -15.750066757202148
    8. '(from' → logprob: -17.37506675720215
    9. '_three' → logprob: -17.50006675720215
    10. '从' → logprob: -18.00006675720215

Token 507: '(' (ID: 7)
  Prédit: '(two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(two' → logprob: -0.2014581710100174
    2. '(' → logprob: -1.701458215713501
    3. 'two' → logprob: -10.826457977294922
    4. 'three' → logprob: -10.951457977294922
    5. '(th' → logprob: -12.826457977294922
    6. ' (' → logprob: -13.951457977294922
    7. '((' → logprob: -13.951457977294922
    8. '(t' → logprob: -14.826457977294922
    9. '   ' → logprob: -15.076457977294922
    10. '(the' → logprob: -15.076457977294922

Token 508: 'three' (ID: 47660)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.0662408396601677
    2. 'three' → logprob: -2.8162407875061035
    3. ' two' → logprob: -5.5662407875061035
    4. '(two' → logprob: -8.316241264343262
    5. ' three' → logprob: -8.941241264343262
    6. '   ' → logprob: -9.941241264343262
    7. 'tw' → logprob: -12.566241264343262
    8. 't' → logprob: -12.691241264343262
    9. ')' → logprob: -13.066241264343262
    10. '	t' → logprob: -13.441241264343262

Token 509: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0016622049733996391
    2. ')
' → logprob: -6.626662254333496
    3. '())' → logprob: -8.251662254333496
    4. '()' → logprob: -10.251662254333496
    5. ' )' → logprob: -10.876662254333496
    6. '           ' → logprob: -12.376662254333496
    7. '       ' → logprob: -12.501662254333496
    8. '())
' → logprob: -12.876662254333496
    9. '<|end|>' → logprob: -13.251662254333496
    10. '))' → logprob: -13.376662254333496

Token 510: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03829140588641167
    2. '<|end|>' → logprob: -3.2882914543151855
    3. ' else' → logprob: -9.413290977478027
    4. 'else' → logprob: -9.538290977478027
    5. '<|end|>' → logprob: -10.538290977478027
    6. '	' → logprob: -11.163290977478027
    7. '   ' → logprob: -11.288290977478027
    8. '           ' → logprob: -12.038290977478027
    9. ' ' → logprob: -12.163290977478027
    10. '```' → logprob: -12.163290977478027

Token 511: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16447614133358002
    2. 'else' (adapté à ' else') → logprob: -2.414476156234741
    3. '   ' → logprob: -3.414476156234741
    4. ' else' → logprob: -3.539476156234741
    5. '<|end|>' → logprob: -8.78947639465332
    6. '	else' → logprob: -9.53947639465332
    7. 'elif' → logprob: -9.91447639465332
    8. ' for' → logprob: -11.66447639465332
    9. '	' → logprob: -12.03947639465332
    10. '           ' → logprob: -12.03947639465332

Token 512: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5902912616729736
    2. ':
' → logprob: -1.0902912616729736
    3. '           ' → logprob: -2.2152912616729736
    4. ' :' → logprob: -8.840291023254395
    5. '       ' → logprob: -9.090291023254395
    6. ' :
' → logprob: -9.090291023254395
    7. ' =' → logprob: -9.340291023254395
    8. '=' → logprob: -10.340291023254395
    9. '          ' → logprob: -10.965291023254395
    10. '{' → logprob: -11.215291023254395

Token 513: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004707799293100834
    2. 'v' → logprob: -5.7547078132629395
    3. ' v' → logprob: -7.0047078132629395
    4. '       ' → logprob: -8.254707336425781
    5. ' for' → logprob: -9.004707336425781
    6. '               ' → logprob: -9.129707336425781
    7. '   ' → logprob: -9.504707336425781
    8. 'for' → logprob: -10.504707336425781
    9. '
' → logprob: -11.754707336425781
    10. '```' → logprob: -12.504707336425781

Token 514: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.0020536701194941998
    2. '           ' → logprob: -6.877053737640381
    3. ' v' → logprob: -7.002053737640381
    4. 'ans' → logprob: -9.752053260803223
    5. '               ' → logprob: -10.627053260803223
    6. '       ' → logprob: -11.377053260803223
    7. '   ' → logprob: -12.252053260803223
    8. '
' → logprob: -13.377053260803223
    9. 'w' → logprob: -13.377053260803223
    10. ' ans' → logprob: -13.377053260803223

Token 515: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048587486147880554
    2. ' =' → logprob: -3.0485875606536865
    3. '   ' → logprob: -16.423587799072266
    4. ' ' → logprob: -17.548587799072266
    5. '    ' → logprob: -18.923587799072266
    6. '  ' → logprob: -19.548587799072266
    7. '       ' → logprob: -20.048587799072266
    8. '	' → logprob: -20.298587799072266
    9. ')' → logprob: -20.298587799072266
    10. 'v' → logprob: -20.423587799072266

Token 516: ' pop' (ID: 2735)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.0010343570029363036
    2. ' pop' → logprob: -6.876034259796143
    3. '	pop' → logprob: -14.1260347366333
    4. '.pop' → logprob: -14.6260347366333
    5. '           ' → logprob: -16.001033782958984
    6. '(pop' → logprob: -16.251033782958984
    7. '
' → logprob: -17.501033782958984
    8. 'two' → logprob: -17.876033782958984
    9. ' ' → logprob: -18.001033782958984
    10. '   ' → logprob: -18.126033782958984

Token 517: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -4.723352049040841e-06
    2. 'from' → logprob: -12.375004768371582
    3. '(pop' → logprob: -15.500004768371582
    4. 'From' → logprob: -15.625004768371582
    5. '_FROM' → logprob: -17.125003814697266
    6. '(' → logprob: -17.500003814697266
    7. 'pop' → logprob: -17.625003814697266
    8. '_for' → logprob: -18.500003814697266
    9. '(two' → logprob: -18.750003814697266
    10. '_From' → logprob: -19.125003814697266

Token 518: '(two' (ID: 186841)
  Prédit: '(two'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(two' → logprob: -0.0002738522016443312
    2. '(' → logprob: -8.375273704528809
    3. 'two' → logprob: -10.125273704528809
    4. '(one' → logprob: -13.500273704528809
    5. '(t' → logprob: -13.750273704528809
    6. 'three' → logprob: -15.000273704528809
    7. '
' → logprob: -16.000274658203125
    8. '(T' → logprob: -16.375274658203125
    9. ' (' → logprob: -16.875274658203125
    10. '(the' → logprob: -17.125274658203125

Token 519: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018183890730142593
    2. ')
' → logprob: -4.018183708190918
    3. '())' → logprob: -10.893183708190918
    4. '()' → logprob: -12.018183708190918
    5. ')

' → logprob: -12.893183708190918
    6. '())
' → logprob: -13.018183708190918
    7. ' )' → logprob: -13.768183708190918
    8. ')v' → logprob: -13.893183708190918
    9. ')
' → logprob: -14.143183708190918
    10. '(' → logprob: -15.393183708190918

Token 520: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011933216592296958
    2. '()
' → logprob: -7.501193523406982
    3. 'if' → logprob: -8.626193046569824
    4. '()' → logprob: -9.126193046569824
    5. '```' → logprob: -9.126193046569824
    6. '
' → logprob: -9.876193046569824
    7. ' if' → logprob: -10.126193046569824
    8. ')
' → logprob: -10.126193046569824
    9. '<|end|>' → logprob: -10.751193046569824
    10. 'def' → logprob: -10.876193046569824

Token 521: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40875864028930664
    2. 'if' (adapté à ' if') → logprob: -1.1587586402893066
    3. ' if' → logprob: -3.9087586402893066
    4. 'ans' → logprob: -6.533758640289307
    5. ' ans' → logprob: -9.908758163452148
    6. '```' → logprob: -10.658758163452148
    7. 'def' → logprob: -11.283758163452148
    8. '   ' → logprob: -11.533758163452148
    9. '<|end|>' → logprob: -11.533758163452148
    10. '(ans' → logprob: -11.783758163452148

Token 522: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16022484004497528
    2. ' v' → logprob: -1.9102247953414917
    3. ' ' → logprob: -15.160224914550781
    4. '	v' → logprob: -15.660224914550781
    5. '   ' → logprob: -16.28522491455078
    6. 'None' → logprob: -16.41022491455078
    7. 'not' → logprob: -17.41022491455078
    8. '(v' → logprob: -17.78522491455078
    9. ' ' → logprob: -18.16022491455078
    10. ')v' → logprob: -18.28522491455078

Token 523: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.04858873412013054
    2. 'is' → logprob: -3.048588752746582
    3. ')' → logprob: -14.048588752746582
    4. '	is' → logprob: -16.048587799072266
    5. ')is' → logprob: -16.298587799072266
    6. '           ' → logprob: -16.423587799072266
    7. '<|end|>' → logprob: -16.548587799072266
    8. '            ' → logprob: -17.423587799072266
    9. '<|end|>' → logprob: -17.423587799072266
    10. '[' → logprob: -17.673587799072266

Token 524: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6945904493331909
    2. 'not' → logprob: -0.6945904493331909
    3. 'None' → logprob: -6.5695905685424805
    4. ' None' → logprob: -10.19459056854248
    5. 'Not' → logprob: -13.69459056854248
    6. 'none' → logprob: -14.81959056854248
    7. '_not' → logprob: -15.44459056854248
    8. '   ' → logprob: -15.69459056854248
    9. '...' → logprob: -16.069589614868164
    10. '	not' → logprob: -16.194589614868164

Token 525: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0001601539261173457
    2. ' None' → logprob: -8.750160217285156
    3. 'not' → logprob: -13.625160217285156
    4. 'none' → logprob: -15.125160217285156
    5. '_None' → logprob: -16.500160217285156
    6. '   ' → logprob: -17.625160217285156
    7. '_none' → logprob: -17.750160217285156
    8. '(None' → logprob: -17.875160217285156
    9. 'Not' → logprob: -18.250160217285156
    10. '```' → logprob: -18.500160217285156

Token 526: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.30754557251930237
    2. '():
' → logprob: -1.93254554271698
    3. '               ' → logprob: -2.4325456619262695
    4. ':' → logprob: -3.5575456619262695
    5. '():' → logprob: -6.1825456619262695
    6. '):
' → logprob: -7.3075456619262695
    7. '           ' → logprob: -7.5575456619262695
    8. '()' → logprob: -8.55754566192627
    9. '{
' → logprob: -9.55754566192627
    10. '```' → logprob: -9.68254566192627

Token 527: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0038870114367455244
    2. ':
' → logprob: -5.753887176513672
    3. ':' → logprob: -7.878887176513672
    4. '           ' → logprob: -9.128887176513672
    5. '              ' → logprob: -9.753887176513672
    6. '):
' → logprob: -10.003887176513672
    7. '```' → logprob: -10.003887176513672
    8. '                   ' → logprob: -10.878887176513672
    9. '<|end|>' → logprob: -11.378887176513672
    10. '():
' → logprob: -11.753887176513672

Token 528: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.5760810375213623
    2. 'ans' (adapté à ' ans') → logprob: -0.8260810375213623
    3. '           ' → logprob: -9.076081275939941
    4. '               ' → logprob: -11.451081275939941
    5. '	ans' → logprob: -12.076081275939941
    6. '   ' → logprob: -12.451081275939941
    7. '(ans' → logprob: -12.451081275939941
    8. 'answer' → logprob: -13.951081275939941
    9. '_ans' → logprob: -14.576081275939941
    10. ' ' → logprob: -14.701081275939941

Token 529: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. ' [' → logprob: -14.500000953674316
    3. '[' → logprob: -14.875000953674316
    4. '   ' → logprob: -16.625001907348633
    5. '```' → logprob: -17.625001907348633
    6. '[
' → logprob: -18.375001907348633
    7. '[I' → logprob: -18.375001907348633
    8. '=' → logprob: -19.250001907348633
    9. '[index' → logprob: -19.625001907348633
    10. '=i' → logprob: -19.875001907348633

Token 530: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04653378576040268
    2. '=' → logprob: -3.2965338230133057
    3. ']=' → logprob: -5.171533584594727
    4. ' =' → logprob: -5.921533584594727
    5. ' ]' → logprob: -9.546533584594727
    6. ')' → logprob: -10.921533584594727
    7. '   ' → logprob: -11.921533584594727
    8. '[' → logprob: -13.546533584594727
    9. ')=' → logprob: -14.046533584594727
    10. '[i' → logprob: -14.921533584594727

Token 531: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751067981123924
    2. ' =' → logprob: -3.5297510623931885
    3. '   ' → logprob: -14.52975082397461
    4. '=
' → logprob: -16.90475082397461
    5. ')' → logprob: -17.40475082397461
    6. ' ' → logprob: -18.52975082397461
    7. '=

' → logprob: -18.77975082397461
    8. ' =
' → logprob: -19.15475082397461
    9. '=v' → logprob: -19.15475082397461
    10. ']' → logprob: -19.15475082397461

Token 532: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.2519293427467346
    2. ' v' → logprob: -1.5019292831420898
    3. '(v' → logprob: -15.37692928314209
    4. '	v' → logprob: -16.626930236816406
    5. ' ' → logprob: -18.001930236816406
    6. 'pop' → logprob: -18.501930236816406
    7. '   ' → logprob: -18.751930236816406
    8. ')v' → logprob: -19.376930236816406
    9. '[v' → logprob: -19.501930236816406
    10. ' ' → logprob: -19.751930236816406

Token 533: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002383441897109151
    2. 'else' → logprob: -8.500238418579102
    3. ' else' → logprob: -11.000238418579102
    4. '		' → logprob: -11.375238418579102
    5. '               ' → logprob: -12.875238418579102
    6. '       ' → logprob: -13.625238418579102
    7. '<|end|>' → logprob: -13.750238418579102
    8. '   ' → logprob: -14.375238418579102
    9. '	       ' → logprob: -14.750238418579102
    10. '          ' → logprob: -15.000238418579102

Token 534: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003148472751490772
    2. 'else' → logprob: -8.250314712524414
    3. ' else' → logprob: -10.250314712524414
    4. '		' → logprob: -11.875314712524414
    5. '               ' → logprob: -11.875314712524414
    6. '       ' → logprob: -12.875314712524414
    7. '   ' → logprob: -14.750314712524414
    8. '	       ' → logprob: -14.875314712524414
    9. '<|end|>' → logprob: -14.875314712524414
    10. '          ' → logprob: -15.250314712524414

Token 535: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06301666051149368
    2. 'else' (adapté à ' else') → logprob: -2.813016653060913
    3. ' else' → logprob: -7.063016891479492
    4. '               ' → logprob: -8.688016891479492
    5. '       ' → logprob: -11.688016891479492
    6. '		' → logprob: -12.438016891479492
    7. '          ' → logprob: -12.563016891479492
    8. '   ' → logprob: -13.063016891479492
    9. 'elif' → logprob: -13.563016891479492
    10. '	else' → logprob: -13.813016891479492

Token 536: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0960828885436058
    2. ':
' → logprob: -2.471082925796509
    3. ':' → logprob: -5.34608268737793
    4. '           ' → logprob: -6.47108268737793
    5. '                   ' → logprob: -8.09608268737793
    6. '   ' → logprob: -9.09608268737793
    7. '{
' → logprob: -9.09608268737793
    8. '              ' → logprob: -9.22108268737793
    9. '):
' → logprob: -10.34608268737793
    10. ' =' → logprob: -10.34608268737793

Token 537: '               ' (ID: 506)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.014237902127206326
    2. ' ans' → logprob: -4.264237880706787
    3. '           ' → logprob: -9.764238357543945
    4. '               ' → logprob: -11.389238357543945
    5. '	ans' → logprob: -12.389238357543945
    6. '   ' → logprob: -14.264238357543945
    7. '(ans' → logprob: -14.889238357543945
    8. '                   ' → logprob: -15.889238357543945
    9. 'pop' → logprob: -16.639238357543945
    10. '_ans' → logprob: -17.014238357543945

Token 538: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.006986622232943773
    2. ' ans' → logprob: -5.006986618041992
    3. 'pop' → logprob: -8.256986618041992
    4. '           ' → logprob: -12.006986618041992
    5. '	ans' → logprob: -13.131986618041992
    6. 'v' → logprob: -13.381986618041992
    7. '(ans' → logprob: -14.381986618041992
    8. '               ' → logprob: -14.881986618041992
    9. 'assign' → logprob: -15.381986618041992
    10. 'answer' → logprob: -15.506986618041992

Token 539: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.703443770878948e-06
    2. '[' → logprob: -12.625007629394531
    3. '=' → logprob: -13.500007629394531
    4. ' =' → logprob: -14.250007629394531
    5. 'from' → logprob: -14.250007629394531
    6. '   ' → logprob: -14.875007629394531
    7. '_from' → logprob: -15.000007629394531
    8. '[]' → logprob: -15.875007629394531
    9. '=i' → logprob: -15.875007629394531
    10. '[
' → logprob: -16.00000762939453

Token 540: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048574771732091904
    2. ' =' → logprob: -3.298574686050415
    3. ')' → logprob: -4.673574924468994
    4. ']' → logprob: -6.923574924468994
    5. 'pop' → logprob: -10.173574447631836
    6. ']=' → logprob: -10.423574447631836
    7. '()' → logprob: -10.548574447631836
    8. ')=' → logprob: -10.673574447631836
    9. '.pop' → logprob: -11.048574447631836
    10. '   ' → logprob: -11.173574447631836

Token 541: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0002614550176076591
    2. ' =' → logprob: -8.250261306762695
    3. '=
' → logprob: -15.875261306762695
    4. ')' → logprob: -18.000261306762695
    5. '   ' → logprob: -18.125261306762695
    6. ')=' → logprob: -18.750261306762695
    7. 'assign' → logprob: -18.875261306762695
    8. '           ' → logprob: -19.625261306762695
    9. '=

' → logprob: -19.750261306762695
    10. '```' → logprob: -19.750261306762695

Token 542: ' pop' (ID: 2735)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.0001246348983841017
    2. ' pop' → logprob: -9.12512493133545
    3. '(pop' → logprob: -11.37512493133545
    4. 'three' → logprob: -12.50012493133545
    5. '.pop' → logprob: -14.87512493133545
    6. '	pop' → logprob: -16.375123977661133
    7. '3' → logprob: -18.000123977661133
    8. ' three' → logprob: -18.500123977661133
    9. 'p' → logprob: -18.625123977661133
    10. 'th' → logprob: -18.875123977661133

Token 543: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.750000953674316
    3. 'From' → logprob: -15.500000953674316
    4. '()' → logprob: -16.375001907348633
    5. '_FROM' → logprob: -16.375001907348633
    6. 'from' → logprob: -16.625001907348633
    7. ')' → logprob: -16.750001907348633
    8. '_to' → logprob: -17.500001907348633
    9. '_From' → logprob: -18.125001907348633
    10. '_for' → logprob: -18.125001907348633

Token 544: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04872339591383934
    2. '(one' → logprob: -3.0487234592437744
    3. '(two' → logprob: -9.173723220825195
    4. 'three' → logprob: -10.923723220825195
    5. '(th' → logprob: -11.798723220825195
    6. 'one' → logprob: -13.173723220825195
    7. '(t' → logprob: -14.173723220825195
    8. '(
' → logprob: -14.298723220825195
    9. '(the' → logprob: -14.673723220825195
    10. '(s' → logprob: -14.798723220825195

Token 545: 'three' (ID: 47660)
  Prédit: 'three'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.6117393374443054
    2. '(' → logprob: -0.9867393374443054
    3. '(one' → logprob: -3.11173939704895
    4. 'one' → logprob: -3.23673939704895
    5. ' three' → logprob: -7.236739158630371
    6. ' one' → logprob: -9.486739158630371
    7. '(two' → logprob: -9.986739158630371
    8. '_three' → logprob: -10.236739158630371
    9. 'two' → logprob: -10.361739158630371
    10. '(th' → logprob: -11.236739158630371

Token 546: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.374227425316349e-05
    2. ')
' → logprob: -9.625073432922363
    3. ')return' → logprob: -12.875073432922363
    4. '<|end|>' → logprob: -13.625073432922363
    5. ' )' → logprob: -13.875073432922363
    6. '())' → logprob: -14.000073432922363
    7. ')

' → logprob: -14.750073432922363
    8. '   ' → logprob: -15.250073432922363
    9. ')}}' → logprob: -15.500073432922363
    10. '       ' → logprob: -15.500073432922363

Token 547: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02998628094792366
    2. '<|end|>' → logprob: -3.5299863815307617
    3. '```' → logprob: -9.154986381530762
    4. '
' → logprob: -9.279986381530762
    5. 'elif' → logprob: -11.654986381530762
    6. '<|end|>' → logprob: -11.654986381530762
    7. ')' → logprob: -11.654986381530762
    8. '   ' → logprob: -12.404986381530762
    9. '    
' → logprob: -13.779986381530762
    10. ' def' → logprob: -14.029986381530762

Token 548: ' return' (ID: 622)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016176775097846985
    2. '<|end|>' → logprob: -4.141176700592041
    3. '```' → logprob: -9.6411771774292
    4. '
' → logprob: -9.8911771774292
    5. '<|end|>' → logprob: -11.3911771774292
    6. ' def' → logprob: -12.1411771774292
    7. ')' → logprob: -12.8911771774292
    8. '    
' → logprob: -13.5161771774292
    9. 'elif' → logprob: -13.7661771774292
    10. '#' → logprob: -13.8911771774292

Token 549: ' ans' (ID: 3345)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10424932092428207
    2. '
' → logprob: -2.4792492389678955
    3. 'ans' → logprob: -4.479249477386475
    4. 'None' → logprob: -6.354249477386475
    5. '\n' → logprob: -7.104249477386475
    6. '

' → logprob: -7.854249477386475
    7. 'n' → logprob: -8.104249000549316
    8. 'ndef' → logprob: -8.729249000549316
    9. '  
' → logprob: -9.104249000549316
    10. '    
' → logprob: -9.104249000549316

Token 550: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1398757123970427e-05
    2. '
' → logprob: -12.000011444091797
    3. '<|end|>' → logprob: -12.625011444091797
    4. '```' → logprob: -13.500011444091797
    5. ' def' → logprob: -15.750011444091797
    6. ':def' → logprob: -16.875011444091797
    7. ')' → logprob: -17.125011444091797
    8. '    
' → logprob: -17.250011444091797
    9. '  
' → logprob: -17.500011444091797
    10. '\' → logprob: -17.500011444091797

Token 551: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.3458322731312364e-06
    2. '
' → logprob: -12.250007629394531
    3. '<|end|>' → logprob: -13.750007629394531
    4. '```' → logprob: -13.875007629394531
    5. ' def' → logprob: -15.250007629394531
    6. '

' → logprob: -15.875007629394531
    7. ':def' → logprob: -17.62500762939453
    8. '-def' → logprob: -17.75000762939453
    9. 'ndef' → logprob: -17.87500762939453
    10. '[' → logprob: -18.37500762939453

Token 552: ' concat' (ID: 73950)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assign' → logprob: -7.219262624857947e-05
    2. ' assign' → logprob: -9.750072479248047
    3. 'main' → logprob: -11.375072479248047
    4. 'solve' → logprob: -14.125072479248047
    5. 'def' → logprob: -15.125072479248047
    6. '(assign' → logprob: -16.000072479248047
    7. 'run' → logprob: -16.000072479248047
    8. 'assemble' → logprob: -16.375072479248047
    9. 'apply' → logprob: -16.500072479248047
    10. 'choose' → logprob: -16.500072479248047

Token 553: '_classes' (ID: 37969)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0955264568328857
    2. '(*' → logprob: -1.3455264568328857
    3. 'def' → logprob: -1.8455264568328857
    4. '(one' → logprob: -3.3455264568328857
    5. '_lists' → logprob: -3.3455264568328857
    6. '([' → logprob: -3.8455264568328857
    7. '(ans' → logprob: -4.220526695251465
    8. '('_' → logprob: -4.470526695251465
    9. '_' → logprob: -4.595526695251465
    10. ' =' → logprob: -4.595526695251465

Token 554: '(one' (ID: 92717)
  Prédit: '(one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.008346127346158028
    2. '(' → logprob: -4.883346080780029
    3. '(_' → logprob: -8.508346557617188
    4. '(a' → logprob: -8.633346557617188
    5. 'def' → logprob: -9.633346557617188
    6. ' (' → logprob: -9.758346557617188
    7. '(*' → logprob: -10.133346557617188
    8. '(_,' → logprob: -10.133346557617188
    9. '(two' → logprob: -10.883346557617188
    10. '((' → logprob: -11.258346557617188

Token 555: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003003081073984504
    2. ',t' → logprob: -8.625300407409668
    3. ' ,' → logprob: -9.500300407409668
    4. '+' → logprob: -10.250300407409668
    5. ' +' → logprob: -12.125300407409668
    6. '+,' → logprob: -13.750300407409668
    7. ',
' → logprob: -13.875300407409668
    8. ')' → logprob: -14.125300407409668
    9. '   ' → logprob: -14.500300407409668
    10. ',s' → logprob: -15.625300407409668

Token 556: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.0024756586644798517
    2. ' two' → logprob: -6.002475738525391
    3. 'Two' → logprob: -17.62747573852539
    4. '_two' → logprob: -18.37747573852539
    5. '(two' → logprob: -18.37747573852539
    6. '.two' → logprob: -19.62747573852539
    7. 'tw' → logprob: -22.25247573852539
    8. '   ' → logprob: -23.00247573852539
    9. ' deux' → logprob: -23.62747573852539
    10. '2' → logprob: -23.75247573852539

Token 557: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.755678961984813e-05
    2. ' ,' → logprob: -9.750077247619629
    3. '):
' → logprob: -12.375077247619629
    4. ',
' → logprob: -12.375077247619629
    5. ')' → logprob: -13.000077247619629
    6. '):' → logprob: -13.000077247619629
    7. '```' → logprob: -14.625077247619629
    8. ',s' → logprob: -14.750077247619629
    9. ',list' → logprob: -14.875077247619629
    10. '+,' → logprob: -14.875077247619629

Token 558: ' three' (ID: 3407)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.008616108447313309
    2. ' three' → logprob: -4.758615970611572
    3. '_three' → logprob: -13.88361644744873
    4. '   ' → logprob: -15.75861644744873
    5. '...' → logprob: -16.383615493774414
    6. ')' → logprob: -16.383615493774414
    7. 'Three' → logprob: -16.758615493774414
    8. 'third' → logprob: -17.008615493774414
    9. ',' → logprob: -17.258615493774414
    10. 'and' → logprob: -17.383615493774414

Token 559: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03819170594215393
    2. '):
' → logprob: -3.288191795349121
    3. ',' → logprob: -9.663191795349121
    4. '):
' → logprob: -10.163191795349121
    5. ')' → logprob: -10.288191795349121
    6. '   ' → logprob: -11.788191795349121
    7. ' ):' → logprob: -13.288191795349121
    8. '):

' → logprob: -13.538191795349121
    9. ':' → logprob: -13.913191795349121
    10. 'def' → logprob: -14.913191795349121

Token 560: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.024485720321536064
    2. '   ' → logprob: -3.7744858264923096
    3. ' return' → logprob: -7.0244855880737305
    4. 'one' → logprob: -8.02448558807373
    5. 'three' → logprob: -11.52448558807373
    6. '[]' → logprob: -12.89948558807373
    7. '
' → logprob: -13.02448558807373
    8. 'def' → logprob: -13.14948558807373
    9. '	return' → logprob: -13.27448558807373
    10. 'result' → logprob: -13.52448558807373

Token 561: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.14067013561725616
    2. 'one' → logprob: -2.14067006111145
    3. 'three' → logprob: -4.640670299530029
    4. ' return' → logprob: -5.640670299530029
    5. ' one' → logprob: -8.390669822692871
    6. '   ' → logprob: -8.765669822692871
    7. ' three' → logprob: -9.765669822692871
    8. '
' → logprob: -12.765669822692871
    9. 'ones' → logprob: -14.015669822692871
    10. 'two' → logprob: -14.515669822692871

Token 562: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.010341230779886246
    2. ' one' → logprob: -5.010341167449951
    3. 'three' → logprob: -5.635341167449951
    4. ' three' → logprob: -10.76034164428711
    5. 'two' → logprob: -11.01034164428711
    6. '[' → logprob: -11.63534164428711
    7. '(one' → logprob: -12.88534164428711
    8. 'ones' → logprob: -15.63534164428711
    9. '   ' → logprob: -16.13534164428711
    10. '(' → logprob: -16.51034164428711

Token 563: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38687145709991455
    2. ' +' → logprob: -1.1368714570999146
    3. '+self' → logprob: -16.761871337890625
    4. ' ' → logprob: -16.886871337890625
    5. '.extend' → logprob: -16.886871337890625
    6. '+t' → logprob: -17.136871337890625
    7. '＋' → logprob: -17.261871337890625
    8. ',' → logprob: -17.761871337890625
    9. '+r' → logprob: -17.761871337890625
    10. '+
' → logprob: -17.886871337890625

Token 564: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.008616108447313309
    2. ' two' → logprob: -4.758615970611572
    3. 'three' → logprob: -13.38361644744873
    4. '(two' → logprob: -17.508615493774414
    5. ' three' → logprob: -19.258615493774414
    6. 'tw' → logprob: -19.383615493774414
    7. '_two' → logprob: -19.508615493774414
    8. 'Two' → logprob: -19.883615493774414
    9. '.two' → logprob: -20.258615493774414
    10. ' tw' → logprob: -22.508615493774414

Token 565: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759395360946655
    2. '+' → logprob: -0.8259395360946655
    3. '＋' → logprob: -17.325939178466797
    4. '+++' → logprob: -17.825939178466797
    5. '+c' → logprob: -18.450939178466797
    6. '+
' → logprob: -18.825939178466797
    7. ' +
' → logprob: -19.825939178466797
    8. ' ' → logprob: -19.825939178466797
    9. '```' → logprob: -19.950939178466797
    10. '+[' → logprob: -20.075939178466797

Token 566: ' three' (ID: 3407)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.02324547804892063
    2. ' three' → logprob: -3.7732455730438232
    3. '三' → logprob: -17.773244857788086
    4. '_three' → logprob: -17.773244857788086
    5. '[' → logprob: -18.273244857788086
    6. '3' → logprob: -19.398244857788086
    7. 'third' → logprob: -19.898244857788086
    8. 'Three' → logprob: -20.148244857788086
    9. '   ' → logprob: -21.148244857788086
    10. ' ' → logprob: -21.773244857788086

Token 567: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00036834771162830293
    2. '
' → logprob: -8.500368118286133
    3. '<|end|>' → logprob: -9.000368118286133
    4. '```' → logprob: -10.625368118286133
    5. '  
' → logprob: -12.875368118286133
    6. '

' → logprob: -12.875368118286133
    7. ' def' → logprob: -13.125368118286133
    8. '<|end|>' → logprob: -13.125368118286133
    9. '\' → logprob: -13.500368118286133
    10. '    
' → logprob: -13.625368118286133

Token 568: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.981667537620524e-06
    2. 'if' → logprob: -13.375001907348633
    3. '```' → logprob: -15.875001907348633
    4. ' def' → logprob: -16.250001907348633
    5. 'import' → logprob: -16.375001907348633
    6. '#' → logprob: -17.375001907348633
    7. 'from' → logprob: -17.750001907348633
    8. 'n' → logprob: -18.250001907348633
    9. '<|end|>' → logprob: -18.500001907348633
    10. 'print' → logprob: -18.875001907348633

Token 569: ' assign' (ID: 14975)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3895115852355957
    2. ' main' → logprob: -1.1395115852355957
    3. 'solve' → logprob: -7.139511585235596
    4. ' solve' → logprob: -7.264511585235596
    5. 'def' → logprob: -7.764511585235596
    6. 'assign' → logprob: -8.514511108398438
    7. ' assign' → logprob: -9.014511108398438
    8. 'calc' → logprob: -9.264511108398438
    9. 'mod' → logprob: -9.889511108398438
    10. ' def' → logprob: -10.014511108398438

Token 570: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.00713352020829916
    2. '_case' → logprob: -5.257133483886719
    3. '_answer' → logprob: -6.632133483886719
    4. '_' → logprob: -8.007133483886719
    5. '_cases' → logprob: -9.757133483886719
    6. '_answers' → logprob: -9.882133483886719
    7. '(ans' → logprob: -10.007133483886719
    8. '```' → logprob: -10.882133483886719
    9. 'case' → logprob: -11.757133483886719
    10. 'ans' → logprob: -11.882133483886719

Token 571: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -0.0018154787831008434
    2. '(' → logprob: -7.001815319061279
    3. '(n' → logprob: -7.626815319061279
    4. '(case' → logprob: -8.626815795898438
    5. '_' → logprob: -8.751815795898438
    6. 'case' → logprob: -9.751815795898438
    7. '```' → logprob: -12.501815795898438
    8. '(_' → logprob: -12.751815795898438
    9. 'def' → logprob: -12.751815795898438
    10. '_cases' → logprob: -13.126815795898438

Token 572: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017562180291861296
    2. '1' → logprob: -6.501756191253662
    3. '3' → logprob: -9.00175666809082
    4. 'def' → logprob: -10.37675666809082
    5. '123' → logprob: -10.50175666809082
    6. '0' → logprob: -10.50175666809082
    7. '234' → logprob: -11.25175666809082
    8. '23' → logprob: -11.37675666809082
    9. '_' → logprob: -11.62675666809082
    10. '4' → logprob: -12.87675666809082

Token 573: 'a' (ID: 64)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.9728669738397e-05
    2. '(' → logprob: -9.375100135803223
    3. ' (' → logprob: -11.125100135803223
    4. '(flag' → logprob: -17.000099182128906
    5. 'def' → logprob: -17.375099182128906
    6. '(
' → logprob: -17.500099182128906
    7. '(k' → logprob: -18.000099182128906
    8. '(def' → logprob: -18.750099182128906
    9. '(no' → logprob: -18.875099182128906
    10. '(N' → logprob: -19.000099182128906

Token 574: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.007647445425391197
    2. '(' → logprob: -4.882647514343262
    3. ' (' → logprob: -11.132647514343262
    4. 'def' → logprob: -11.507647514343262
    5. '(ans' → logprob: -12.507647514343262
    6. '(def' → logprob: -12.757647514343262
    7. '(
' → logprob: -13.007647514343262
    8. ':' → logprob: -13.632647514343262
    9. '(s' → logprob: -14.132647514343262
    10. '():' → logprob: -14.507647514343262

Token 575: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.2729995988775045e-06
    2. ',
' → logprob: -13.000006675720215
    3. ' ,' → logprob: -13.125006675720215
    4. ',n' → logprob: -14.375006675720215
    5. '):' → logprob: -14.625006675720215
    6. 'flag' → logprob: -15.375006675720215
    7. 'def' → logprob: -15.750006675720215
    8. '‌,' → logprob: -15.875006675720215
    9. '(flag' → logprob: -16.5000057220459
    10. ',

' → logprob: -16.6250057220459

Token 576: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.012710707262158394
    2. ' flag' → logprob: -4.3877105712890625
    3. 'ans' → logprob: -9.512710571289062
    4. 'three' → logprob: -10.387710571289062
    5. 'one' → logprob: -10.512710571289062
    6. 'n' → logprob: -10.762710571289062
    7. 'def' → logprob: -12.137710571289062
    8. 'assign' → logprob: -12.137710571289062
    9. 'pop' → logprob: -12.387710571289062
    10. 'f' → logprob: -12.637710571289062

Token 577: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.650518920039758e-06
    2. ' ,' → logprob: -13.250003814697266
    3. '):' → logprob: -13.625003814697266
    4. '   ' → logprob: -15.125003814697266
    5. ',
' → logprob: -15.750003814697266
    6. 'def' → logprob: -16.625003814697266
    7. ',n' → logprob: -17.125003814697266
    8. '‌,' → logprob: -17.375003814697266
    9. ')' → logprob: -17.625003814697266
    10. '):
' → logprob: -18.000003814697266

Token 578: ' three' (ID: 3407)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.8355079293251038
    2. 'three' → logprob: -1.210507869720459
    3. ' one' → logprob: -1.960507869720459
    4. ' three' → logprob: -2.335507869720459
    5. 'two' → logprob: -3.710507869720459
    6. ' two' → logprob: -5.210507869720459
    7. 'ans' → logprob: -7.460507869720459
    8. ' ans' → logprob: -8.710508346557617
    9. '   ' → logprob: -10.960508346557617
    10. ' ' → logprob: -11.335508346557617

Token 579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0206720617134124e-05
    2. ' ,' → logprob: -12.00001049041748
    3. ')' → logprob: -13.75001049041748
    4. ',n' → logprob: -13.87501049041748
    5. '<|end|>' → logprob: -14.00001049041748
    6. '):' → logprob: -14.62501049041748
    7. ',
' → logprob: -16.125009536743164
    8. 'def' → logprob: -16.125009536743164
    9. '‌,' → logprob: -16.750009536743164
    10. '):
' → logprob: -16.875009536743164

Token 580: ' one' (ID: 1001)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12902502715587616
    2. 'two' → logprob: -2.2540249824523926
    3. ' ans' → logprob: -4.754024982452393
    4. 'one' → logprob: -5.879024982452393
    5. 'flag' → logprob: -6.129024982452393
    6. ' two' → logprob: -6.504024982452393
    7. 'three' → logprob: -7.129024982452393
    8. '   ' → logprob: -10.25402545928955
    9. 'tw' → logprob: -10.62902545928955
    10. ' flag' → logprob: -10.75402545928955

Token 581: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006279678200371563
    2. '):' → logprob: -7.5006279945373535
    3. ')' → logprob: -10.500627517700195
    4. ' ,' → logprob: -10.875627517700195
    5. '):
' → logprob: -10.875627517700195
    6. 'def' → logprob: -13.250627517700195
    7. '   ' → logprob: -13.375627517700195
    8. ',t' → logprob: -13.375627517700195
    9. ',n' → logprob: -13.750627517700195
    10. ',
' → logprob: -14.750627517700195

Token 582: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.07108691334724426
    2. ' two' → logprob: -2.696086883544922
    3. 'three' → logprob: -6.946086883544922
    4. 'flag' → logprob: -9.696086883544922
    5. ' three' → logprob: -10.196086883544922
    6. 'ans' → logprob: -10.446086883544922
    7. ' ans' → logprob: -11.321086883544922
    8. 'n' → logprob: -11.446086883544922
    9. '   ' → logprob: -11.446086883544922
    10. 'tw' → logprob: -11.821086883544922

Token 583: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4391956685576588e-05
    2. '):' → logprob: -11.500024795532227
    3. ' ,' → logprob: -11.875024795532227
    4. '):
' → logprob: -12.250024795532227
    5. ',n' → logprob: -14.125024795532227
    6. '   ' → logprob: -14.250024795532227
    7. 'def' → logprob: -14.375024795532227
    8. ')' → logprob: -16.000024795532227
    9. '):
' → logprob: -16.375024795532227
    10. ',
' → logprob: -16.625024795532227

Token 584: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.027052680030465126
    2. ' ans' → logprob: -3.777052640914917
    3. 'flag' → logprob: -6.152052879333496
    4. 'three' → logprob: -6.527052879333496
    5. ' three' → logprob: -9.527052879333496
    6. ' flag' → logprob: -9.777052879333496
    7. 'answer' → logprob: -10.902052879333496
    8. '	ans' → logprob: -11.152052879333496
    9. '   ' → logprob: -11.277052879333496
    10. 'two' → logprob: -11.777052879333496

Token 585: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5766393542289734
    2. '):' → logprob: -0.8266393542289734
    3. ',' → logprob: -7.951639175415039
    4. '   ' → logprob: -8.701639175415039
    5. '):
' → logprob: -9.076639175415039
    6. ':' → logprob: -10.326639175415039
    7. 'def' → logprob: -10.826639175415039
    8. ')' → logprob: -11.576639175415039
    9. '):

' → logprob: -13.076639175415039
    10. ':
' → logprob: -14.201639175415039

Token 586: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39151835441589355
    2. 'for' → logprob: -1.1415183544158936
    3. ' for' → logprob: -5.641518592834473
    4. '```' → logprob: -7.141518592834473
    5. 'def' → logprob: -8.266518592834473
    6. 'idx' → logprob: -11.516518592834473
    7. '	for' → logprob: -11.516518592834473
    8. '``' → logprob: -11.891518592834473
    9. 'i' → logprob: -12.891518592834473
    10. 'index' → logprob: -13.141518592834473

Token 587: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.048250164836645126
    2. 'k' → logprob: -3.798250198364258
    3. 'def' → logprob: -4.798250198364258
    4. 'if' → logprob: -4.923250198364258
    5. 'idx' → logprob: -5.423250198364258
    6. 'j' → logprob: -6.673250198364258
    7. 'count' → logprob: -7.548250198364258
    8. 'cnt' → logprob: -7.673250198364258
    9. 'used' → logprob: -7.798250198364258
    10. 'index' → logprob: -8.173250198364258

Token 588: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007124318508431315
    2. ' i' → logprob: -7.2507123947143555
    3. 'v' → logprob: -13.875712394714355
    4. '_i' → logprob: -14.625712394714355
    5. '_' → logprob: -14.750712394714355
    6. 'idx' → logprob: -15.375712394714355
    7. '	i' → logprob: -15.875712394714355
    8. '[i' → logprob: -16.125713348388672
    9. '   ' → logprob: -16.250713348388672
    10. '(i' → logprob: -16.750713348388672

Token 589: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02054375410079956
    2. 'in' → logprob: -3.8955438137054443
    3. ' ' → logprob: -14.645544052124023
    4. '   ' → logprob: -14.895544052124023
    5. ',' → logprob: -15.395544052124023
    6. '(n' → logprob: -15.770544052124023
    7. 'n' → logprob: -15.770544052124023
    8. '	in' → logprob: -15.895544052124023
    9. 'import' → logprob: -16.520544052124023
    10. '<|end|>' → logprob: -16.645544052124023

Token 590: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023245712742209435
    2. ' range' → logprob: -3.7732458114624023
    3. '(range' → logprob: -15.648245811462402
    4. '	range' → logprob: -17.023244857788086
    5. 'n' → logprob: -18.023244857788086
    6. '
' → logprob: -18.648244857788086
    7. '0' → logprob: -18.773244857788086
    8. ' ' → logprob: -18.898244857788086
    9. '   ' → logprob: -19.273244857788086
    10. '[' → logprob: -19.273244857788086

Token 591: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0010660359403118491
    2. 'n' → logprob: -6.876066207885742
    3. '(' → logprob: -10.501066207885742
    4. '(len' → logprob: -12.501066207885742
    5. '   ' → logprob: -14.751066207885742
    6. 'len' → logprob: -15.251066207885742
    7. 'def' → logprob: -15.376066207885742
    8. '
' → logprob: -15.376066207885742
    9. '(
' → logprob: -15.376066207885742
    10. ' (' → logprob: -15.626066207885742

Token 592: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04306598752737045
    2. '):' → logprob: -3.1680660247802734
    3. '):
' → logprob: -10.793066024780273
    4. ':' → logprob: -10.918066024780273
    5. '   ' → logprob: -11.043066024780273
    6. ':
' → logprob: -11.668066024780273
    7. ')' → logprob: -13.793066024780273
    8. '):

' → logprob: -14.043066024780273
    9. '():
' → logprob: -14.168066024780273
    10. '       ' → logprob: -15.168066024780273

Token 593: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011181884910911322
    2. ' if' → logprob: -7.501118183135986
    3. '   ' → logprob: -7.876118183135986
    4. 'if' → logprob: -8.626118659973145
    5. '           ' → logprob: -13.876118659973145
    6. ':' → logprob: -14.376118659973145
    7. '	if' → logprob: -14.376118659973145
    8. '```' → logprob: -14.376118659973145
    9. ',' → logprob: -14.626118659973145
    10. '<|end|>' → logprob: -15.001118659973145

Token 594: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0018119137967005372
    2. ' if' → logprob: -6.501811981201172
    3. '       ' → logprob: -8.126811981201172
    4. '   ' → logprob: -11.251811981201172
    5. '           ' → logprob: -14.251811981201172
    6. '	if' → logprob: -15.626811981201172
    7. '```' → logprob: -15.626811981201172
    8. 'v' → logprob: -16.376811981201172
    9. 'If' → logprob: -17.001811981201172
    10. '
' → logprob: -17.376811981201172

Token 595: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.16610927879810333
    2. ' flag' → logprob: -1.916109323501587
    3. ' not' → logprob: -5.791109085083008
    4. 'not' → logprob: -5.916109085083008
    5. '   ' → logprob: -9.666109085083008
    6. '(flag' → logprob: -11.041109085083008
    7. '	flag' → logprob: -11.416109085083008
    8. '           ' → logprob: -11.416109085083008
    9. '       ' → logprob: -12.291109085083008
    10. ' ' → logprob: -13.416109085083008

Token 596: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.45848218582978e-06
    2. '[' → logprob: -13.37500286102295
    3. ' [' → logprob: -15.62500286102295
    4. 'i' → logprob: -15.62500286102295
    5. '   ' → logprob: -16.250001907348633
    6. '```' → logprob: -16.375001907348633
    7. '[I' → logprob: -17.000001907348633
    8. '==' → logprob: -17.000001907348633
    9. '[
' → logprob: -17.125001907348633
    10. '(i' → logprob: -17.250001907348633

Token 597: ']:
' (ID: 22152)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5482540726661682
    2. ':' → logprob: -1.1732540130615234
    3. ':
' → logprob: -2.9232540130615234
    4. ']:' → logprob: -3.2982540130615234
    5. ']:
' → logprob: -4.298254013061523
    6. ' ==' → logprob: -5.423254013061523
    7. ']==' → logprob: -5.923254013061523
    8. ']' → logprob: -7.423254013061523
    9. '):
' → logprob: -8.423254013061523
    10. '=' → logprob: -8.923254013061523

Token 598: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3388102054595947
    2. ':
' → logprob: -1.4638102054595947
    3. ':' → logprob: -3.0888102054595947
    4. '       ' → logprob: -5.088809967041016
    5. '==' → logprob: -6.713809967041016
    6. ' =' → logprob: -6.963809967041016
    7. '=' → logprob: -6.963809967041016
    8. ' ==' → logprob: -7.963809967041016
    9. '               ' → logprob: -8.713809967041016
    10. '):
' → logprob: -8.838809967041016

Token 599: ' ans' (ID: 3345)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.08265865594148636
    2. '           ' → logprob: -2.7076587677001953
    3. 'ans' (adapté à ' ans') → logprob: -5.207658767700195
    4. ' v' → logprob: -5.707658767700195
    5. '               ' → logprob: -6.082658767700195
    6. ' ans' → logprob: -7.082658767700195
    7. '       ' → logprob: -7.582658767700195
    8. '   ' → logprob: -9.207658767700195
    9. '
' → logprob: -10.582658767700195
    10. '                   ' → logprob: -10.832658767700195

Token 600: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -14.500000953674316
    3. '[' → logprob: -14.625000953674316
    4. '   ' → logprob: -16.250001907348633
    5. ' [' → logprob: -17.125001907348633
    6. '       ' → logprob: -17.375001907348633
    7. '[I' → logprob: -18.250001907348633
    8. '           ' → logprob: -18.250001907348633
    9. '.append' → logprob: -18.625001907348633
    10. ' =' → logprob: -18.875001907348633

Token 601: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.547679603099823
    2. ']' → logprob: -1.0476796627044678
    3. ' =' → logprob: -2.6726796627044678
    4. ']=' → logprob: -6.297679424285889
    5. ' ]' → logprob: -10.672679901123047
    6. ')' → logprob: -11.047679901123047
    7. '   ' → logprob: -11.547679901123047
    8. '    ' → logprob: -14.047679901123047
    9. ')=' → logprob: -14.797679901123047
    10. '[' → logprob: -15.172679901123047

Token 602: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326204538345337
    2. ' =' → logprob: -1.3132619857788086
    3. ' ' → logprob: -16.188262939453125
    4. ',' → logprob: -16.313262939453125
    5. ')' → logprob: -16.688262939453125
    6. '   ' → logprob: -17.063262939453125
    7. ']' → logprob: -17.438262939453125
    8. '=
' → logprob: -17.813262939453125
    9. '=

' → logprob: -18.313262939453125
    10. '=v' → logprob: -18.438262939453125

Token 603: ' pop' (ID: 2735)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.3953225612640381
    2. ' pop' → logprob: -1.770322561264038
    3. 'three' → logprob: -2.020322561264038
    4. ' three' → logprob: -3.770322561264038
    5. 'one' → logprob: -8.145322799682617
    6. '   ' → logprob: -9.145322799682617
    7. ' one' → logprob: -9.520322799682617
    8. '	pop' → logprob: -10.270322799682617
    9. 'two' → logprob: -10.395322799682617
    10. ' ' → logprob: -11.270322799682617

Token 604: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -0.22395271062850952
    2. '(' → logprob: -1.7239527702331543
    3. '(one' → logprob: -4.348952770233154
    4. '(two' → logprob: -4.973952770233154
    5. 'from' → logprob: -6.973952770233154
    6. '()' → logprob: -7.348952770233154
    7. '(_' → logprob: -8.348952293395996
    8. '(th' → logprob: -8.848952293395996
    9. '(from' → logprob: -8.848952293395996
    10. '_three' → logprob: -8.973952293395996

Token 605: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.021129975095391273
    2. '(one' → logprob: -4.521130084991455
    3. 'three' → logprob: -4.896130084991455
    4. '(two' → logprob: -6.021130084991455
    5. 'one' → logprob: -10.146129608154297
    6. '   ' → logprob: -10.646129608154297
    7. 'two' → logprob: -10.896129608154297
    8. '(th' → logprob: -11.271129608154297
    9. ' ' → logprob: -11.521129608154297
    10. ' three' → logprob: -11.896129608154297

Token 606: 'three' (ID: 47660)
  Prédit: 'three'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.021665915846824646
    2. 'one' → logprob: -4.396666049957275
    3. 'two' → logprob: -5.146666049957275
    4. ' three' → logprob: -6.021666049957275
    5. '   ' → logprob: -7.396666049957275
    6. ' one' → logprob: -9.396665573120117
    7. ' ' → logprob: -10.146665573120117
    8. 'th' → logprob: -11.021665573120117
    9. '  ' → logprob: -11.146665573120117
    10. ' two' → logprob: -11.396665573120117

Token 607: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3886931836605072
    2. ')
' → logprob: -1.1386932134628296
    3. '())
' → logprob: -6.763693332672119
    4. '()' → logprob: -7.763693332672119
    5. '())' → logprob: -8.513692855834961
    6. '()
' → logprob: -10.888692855834961
    7. '   ' → logprob: -11.138692855834961
    8. '       ' → logprob: -12.888692855834961
    9. ')
' → logprob: -13.638692855834961
    10. ')

' → logprob: -14.138692855834961

Token 608: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014463067054748535
    2. 'else' → logprob: -7.00144624710083
    3. '<|end|>' → logprob: -8.001446723937988
    4. ' else' → logprob: -8.626446723937988
    5. '	' → logprob: -12.001446723937988
    6. '   ' → logprob: -12.126446723937988
    7. 'elif' → logprob: -12.876446723937988
    8. ')' → logprob: -13.376446723937988
    9. '<|end|>' → logprob: -14.126446723937988
    10. '	else' → logprob: -14.126446723937988

Token 609: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009421474300324917
    2. '       ' → logprob: -4.759421348571777
    3. ' else' → logprob: -8.134421348571777
    4. '<|end|>' → logprob: -8.134421348571777
    5. 'else' → logprob: -8.759421348571777
    6. '
' → logprob: -11.634421348571777
    7. ' ' → logprob: -11.634421348571777
    8. ')' → logprob: -12.134421348571777
    9. '    ' → logprob: -12.134421348571777
    10. '	else' → logprob: -12.259421348571777

Token 610: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.051030609756708145
    2. 'ult' → logprob: -3.1760306358337402
    3. ' =' → logprob: -5.17603063583374
    4. '=' → logprob: -7.42603063583374
    5. 'ults' → logprob: -7.80103063583374
    6. '[:]' → logprob: -8.176030158996582
    7. '.append' → logprob: -8.801030158996582
    8. 'u' → logprob: -8.926030158996582
    9. '[' → logprob: -9.426030158996582
    10. 'erve' → logprob: -9.801030158996582

Token 611: ' concat' (ID: 73950)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.17975099384784698
    2. '[' → logprob: -2.179750919342041
    3. 'ans' → logprob: -4.804750919342041
    4. '[]
' → logprob: -5.179750919342041
    5. 'res' → logprob: -5.429750919342041
    6. '[count' → logprob: -5.554750919342041
    7. ' [' → logprob: -5.679750919342041
    8. '0' → logprob: -5.679750919342041
    9. 'all' → logprob: -5.804750919342041
    10. '[]' → logprob: -5.929750919342041

Token 612: '_classes' (ID: 37969)
  Prédit: '_classes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_classes' → logprob: -0.0018611650448292494
    2. 'Classes' → logprob: -6.626861095428467
    3. '(one' → logprob: -8.251861572265625
    4. '(' → logprob: -9.251861572265625
    5. '(two' → logprob: -9.626861572265625
    6. 'classes' → logprob: -10.626861572265625
    7. 'class' → logprob: -11.251861572265625
    8. 'two' → logprob: -11.376861572265625
    9. 'one' → logprob: -11.501861572265625
    10. '_lists' → logprob: -11.876861572265625

Token 613: '(one' (ID: 92717)
  Prédit: '(one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.0009702988318167627
    2. '(two' → logprob: -7.000970363616943
    3. '(' → logprob: -9.750969886779785
    4. '(other' → logprob: -16.1259708404541
    5. 'one' → logprob: -16.2509708404541
    6. '(the' → logprob: -17.0009708404541
    7. '(t' → logprob: -17.1259708404541
    8. '((' → logprob: -17.2509708404541
    9. '([' → logprob: -17.3759708404541
    10. '(on' → logprob: -17.7509708404541

Token 614: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001026258571073413
    2. ' ,' → logprob: -7.126026153564453
    3. ',t' → logprob: -9.251026153564453
    4. ')' → logprob: -9.501026153564453
    5. '+' → logprob: -10.376026153564453
    6. ' +' → logprob: -11.126026153564453
    7. ',
' → logprob: -13.126026153564453
    8. ' ' → logprob: -14.876026153564453
    9. '   ' → logprob: -15.001026153564453
    10. 'two' → logprob: -15.126026153564453

Token 615: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.0036205046344548464
    2. ' two' → logprob: -5.628620624542236
    3. 'three' → logprob: -10.878620147705078
    4. '(two' → logprob: -14.253620147705078
    5. '   ' → logprob: -14.878620147705078
    6. '_two' → logprob: -16.253620147705078
    7. '
' → logprob: -16.753620147705078
    8. '[t' → logprob: -16.878620147705078
    9. 'Two' → logprob: -16.878620147705078
    10. ' ' → logprob: -17.128620147705078

Token 616: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002265636110678315
    2. ')' → logprob: -6.127265453338623
    3. ' ,' → logprob: -9.502265930175781
    4. '+' → logprob: -13.252265930175781
    5. ')
' → logprob: -14.002265930175781
    6. ',
' → logprob: -14.502265930175781
    7. ' +' → logprob: -14.877265930175781
    8. '   ' → logprob: -15.002265930175781
    9. '<|end|>' → logprob: -15.002265930175781
    10. ',)' → logprob: -15.127265930175781

Token 617: ' three' (ID: 3407)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.023330148309469223
    2. ' three' → logprob: -3.7733302116394043
    3. '[' → logprob: -9.648329734802246
    4. '[]' → logprob: -11.398329734802246
    5. '[])' → logprob: -11.898329734802246
    6. '_three' → logprob: -14.648329734802246
    7. ' ' → logprob: -15.148329734802246
    8. 'Three' → logprob: -15.398329734802246
    9. '[])
' → logprob: -15.398329734802246
    10. '3' → logprob: -15.398329734802246

Token 618: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31372278928756714
    2. ')
' → logprob: -1.313722848892212
    3. '   ' → logprob: -7.813722610473633
    4. '<|end|>' → logprob: -10.563722610473633
    5. ')
' → logprob: -11.438722610473633
    6. '()' → logprob: -12.938722610473633
    7. '
' → logprob: -13.313722610473633
    8. ')

' → logprob: -13.438722610473633
    9. '[::-' → logprob: -13.438722610473633
    10. '```' → logprob: -13.438722610473633

Token 619: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026067106053233147
    2. '
' → logprob: -4.02606725692749
    3. ' for' → logprob: -5.15106725692749
    4. '    
' → logprob: -6.65106725692749
    5. 'for' → logprob: -8.026066780090332
    6. '<|end|>' → logprob: -8.901066780090332
    7. '```' → logprob: -8.901066780090332
    8. 'def' → logprob: -9.776066780090332
    9. ')' → logprob: -10.526066780090332
    10. ',' → logprob: -10.776066780090332

Token 620: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.199107363820076
    2. 'for' (adapté à ' for') → logprob: -2.1991074085235596
    3. ' for' → logprob: -2.6991074085235596
    4. 'idx' → logprob: -6.8241071701049805
    5. 'return' → logprob: -7.4491071701049805
    6. 'i' → logprob: -9.07410717010498
    7. ' idx' → logprob: -9.07410717010498
    8. 'index' → logprob: -9.32410717010498
    9. ' return' → logprob: -9.32410717010498
    10. '  ' → logprob: -9.44910717010498

Token 621: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0053605143912136555
    2. ' i' → logprob: -5.2553606033325195
    3. 'v' → logprob: -10.00536060333252
    4. 'idx' → logprob: -10.13036060333252
    5. '   ' → logprob: -11.25536060333252
    6. 'j' → logprob: -11.25536060333252
    7. ' ' → logprob: -12.75536060333252
    8. '(i' → logprob: -13.25536060333252
    9. ' idx' → logprob: -13.38036060333252
    10. '`' → logprob: -13.38036060333252

Token 622: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12693965435028076
    2. 'in' → logprob: -2.1269397735595703
    3. ',' → logprob: -12.00193977355957
    4. '   ' → logprob: -12.50193977355957
    5. ' ' → logprob: -14.50193977355957
    6. 'range' → logprob: -14.50193977355957
    7. 'n' → logprob: -15.37693977355957
    8. '  ' → logprob: -15.87693977355957
    9. '    ' → logprob: -16.37693977355957
    10. ' range' → logprob: -17.00193977355957

Token 623: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5231775641441345
    2. ' range' → logprob: -0.8981775641441345
    3. '[' → logprob: -10.648177146911621
    4. 'res' → logprob: -10.773177146911621
    5. '(range' → logprob: -13.148177146911621
    6. ' [' → logprob: -13.273177146911621
    7. ' ' → logprob: -14.148177146911621
    8. 'r' → logprob: -14.273177146911621
    9. '	range' → logprob: -14.398177146911621
    10. 'ran' → logprob: -14.648177146911621

Token 624: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.004836888052523136
    2. 'n' → logprob: -5.3798370361328125
    3. '(' → logprob: -9.504837036132812
    4. 'range' → logprob: -9.879837036132812
    5. '(len' → logprob: -10.254837036132812
    6. '   ' → logprob: -11.254837036132812
    7. 'len' → logprob: -11.254837036132812
    8. '
' → logprob: -12.504837036132812
    9. '[n' → logprob: -12.629837036132812
    10. 'res' → logprob: -12.629837036132812

Token 625: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0032723029144108295
    2. '):' → logprob: -5.753272533416748
    3. ':
' → logprob: -10.00327205657959
    4. ':' → logprob: -10.87827205657959
    5. '   ' → logprob: -11.12827205657959
    6. '():
' → logprob: -11.75327205657959
    7. '):
' → logprob: -12.37827205657959
    8. '       ' → logprob: -13.62827205657959
    9. 'def' → logprob: -14.00327205657959
    10. ',' → logprob: -14.87827205657959

Token 626: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.65707261255011e-06
    2. '   ' → logprob: -12.625008583068848
    3. ':' → logprob: -13.500008583068848
    4. '<|end|>' → logprob: -14.125008583068848
    5. '```' → logprob: -14.375008583068848
    6. ',' → logprob: -14.500008583068848
    7. '           ' → logprob: -14.750008583068848
    8. ' if' → logprob: -14.750008583068848
    9. '[' → logprob: -15.250008583068848
    10. '     ' → logprob: -15.750008583068848

Token 627: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5576323866844177
    2. 'if' (adapté à ' if') → logprob: -0.9326323866844177
    3. ' if' → logprob: -3.5576324462890625
    4. '   ' → logprob: -6.0576324462890625
    5. ':' → logprob: -7.0576324462890625
    6. '           ' → logprob: -7.6826324462890625
    7. '	if' → logprob: -8.057632446289062
    8. ' ' → logprob: -8.432632446289062
    9. ':
' → logprob: -8.557632446289062
    10. '```' → logprob: -8.682632446289062

Token 628: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.47477248311042786
    2. ' not' → logprob: -0.9747724533081055
    3. 'flag' → logprob: -7.4747724533081055
    4. ' flag' → logprob: -9.349772453308105
    5. ' ans' → logprob: -10.724772453308105
    6. 'ans' → logprob: -11.099772453308105
    7. '(not' → logprob: -13.474772453308105
    8. '   ' → logprob: -14.599772453308105
    9. '
' → logprob: -14.849772453308105
    10. '!' → logprob: -14.849772453308105

Token 629: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.16022604703903198
    2. ' flag' → logprob: -1.9102261066436768
    3. '(flag' → logprob: -13.285225868225098
    4. '	flag' → logprob: -15.910225868225098
    5. 'Flag' → logprob: -16.785226821899414
    6. '_flag' → logprob: -17.410226821899414
    7. '   ' → logprob: -17.535226821899414
    8. 'flags' → logprob: -18.910226821899414
    9. ' ' → logprob: -19.035226821899414
    10. '.flag' → logprob: -19.660226821899414

Token 630: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.125001907348633
    3. ' [' → logprob: -15.500001907348633
    4. '[
' → logprob: -15.750001907348633
    5. '```' → logprob: -16.625001907348633
    6. '[I' → logprob: -16.875001907348633
    7. 'i' → logprob: -17.125001907348633
    8. '   ' → logprob: -17.250001907348633
    9. ')[' → logprob: -17.375001907348633
    10. '(i' → logprob: -17.500001907348633

Token 631: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.16933690011501312
    2. ']:' → logprob: -2.2943367958068848
    3. '):
' → logprob: -3.0443367958068848
    4. '[i' → logprob: -5.919336795806885
    5. '):' → logprob: -6.044336795806885
    6. ']' → logprob: -6.669336795806885
    7. ':' → logprob: -7.669336795806885
    8. ':
' → logprob: -8.919337272644043
    9. '   ' → logprob: -9.294337272644043
    10. '       ' → logprob: -9.669337272644043

Token 632: '           ' (ID: 352)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6119370460510254
    2. ':' → logprob: -1.3619370460510254
    3. '           ' → logprob: -1.7369370460510254
    4. '=' → logprob: -4.736937046051025
    5. '       ' → logprob: -4.861937046051025
    6. '==' → logprob: -5.111937046051025
    7. ' and' → logprob: -6.986937046051025
    8. ' ==' → logprob: -7.736937046051025
    9. ' ans' → logprob: -8.111936569213867
    10. 'and' → logprob: -8.236936569213867

Token 633: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.2267250418663025
    2. 'ans' (adapté à ' ans') → logprob: -1.6017251014709473
    3. '	ans' → logprob: -7.601725101470947
    4. '           ' → logprob: -8.101724624633789
    5. '               ' → logprob: -8.351724624633789
    6. '(ans' → logprob: -8.726724624633789
    7. 'v' → logprob: -9.726724624633789
    8. '_ans' → logprob: -10.851724624633789
    9. '   ' → logprob: -12.226724624633789
    10. '                   ' → logprob: -12.476724624633789

Token 634: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. '   ' → logprob: -15.000000953674316
    3. '```' → logprob: -15.250000953674316
    4. ' [' → logprob: -16.0
    5. '[' → logprob: -16.25
    6. '=' → logprob: -18.0
    7. '[
' → logprob: -18.0
    8. '[I' → logprob: -18.5
    9. 'i' → logprob: -19.0
    10. '\[' → logprob: -19.125

Token 635: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01731962151825428
    2. '=' → logprob: -4.267319679260254
    3. ']=' → logprob: -5.892319679260254
    4. ' =' → logprob: -8.642319679260254
    5. ' ]' → logprob: -8.767319679260254
    6. '   ' → logprob: -9.767319679260254
    7. '    ' → logprob: -15.392319679260254
    8. ')' → logprob: -15.517319679260254
    9. '       ' → logprob: -15.517319679260254
    10. '  ' → logprob: -16.142318725585938

Token 636: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008615635335445404
    2. ' =' → logprob: -4.758615493774414
    3. '   ' → logprob: -13.758615493774414
    4. ' ' → logprob: -17.008615493774414
    5. '    ' → logprob: -17.383615493774414
    6. '=
' → logprob: -17.758615493774414
    7. '=

' → logprob: -17.883615493774414
    8. ']' → logprob: -18.008615493774414
    9. ')' → logprob: -18.008615493774414
    10. '  ' → logprob: -18.383615493774414

Token 637: ' res' (ID: 694)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.316316157579422
    2. 'res' → logprob: -1.3163161277770996
    3. ' res' → logprob: -6.4413161277771
    4. ' pop' → logprob: -6.5663161277771
    5. '   ' → logprob: -10.816316604614258
    6. '	pop' → logprob: -12.191316604614258
    7. '	res' → logprob: -12.316316604614258
    8. ' ' → logprob: -12.691316604614258
    9. '.pop' → logprob: -13.066316604614258
    10. '  ' → logprob: -13.191316604614258

Token 638: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.005372133571654558
    2. '[i' → logprob: -5.255372047424316
    3. 'pop' → logprob: -9.130372047424316
    4. '   ' → logprob: -10.880372047424316
    5. '[' → logprob: -12.630372047424316
    6. '.' → logprob: -12.755372047424316
    7. ' .' → logprob: -12.880372047424316
    8. '```' → logprob: -13.755372047424316
    9. 'i' → logprob: -15.380372047424316
    10. '.append' → logprob: -15.505372047424316

Token 639: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003955224819947034
    2. '(' → logprob: -8.000395774841309
    3. '()
' → logprob: -10.375395774841309
    4. '()]' → logprob: -11.375395774841309
    5. '0' → logprob: -12.250395774841309
    6. '())' → logprob: -12.750395774841309
    7. '()`' → logprob: -13.000395774841309
    8. '()

' → logprob: -13.625395774841309
    9. '()>' → logprob: -13.750395774841309
    10. '()%' → logprob: -13.750395774841309

Token 640: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03950682282447815
    2. '<|end|>' → logprob: -3.2895069122314453
    3. '
' → logprob: -7.664506912231445
    4. 'return' → logprob: -7.789506912231445
    5. '<|end|>' → logprob: -8.664506912231445
    6. ' return' → logprob: -9.039506912231445
    7. '	return' → logprob: -9.164506912231445
    8. '    
' → logprob: -10.164506912231445
    9. '```' → logprob: -10.414506912231445
    10. ')' → logprob: -10.664506912231445

Token 641: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4776614308357239
    2. 'return' (adapté à ' return') → logprob: -0.9776614308357239
    3. ' return' → logprob: -5.727661609649658
    4. '<|end|>' → logprob: -9.1026611328125
    5. '	return' → logprob: -9.4776611328125
    6. 'def' → logprob: -10.1026611328125
    7. '
' → logprob: -10.1026611328125
    8. '    
' → logprob: -11.4776611328125
    9. ' ' → logprob: -11.4776611328125
    10. '```' → logprob: -11.7276611328125

Token 642: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0002036595979006961
    2. ' ans' → logprob: -8.500204086303711
    3. '(ans' → logprob: -16.25020408630371
    4. '	ans' → logprob: -18.25020408630371
    5. 'answer' → logprob: -21.12520408630371
    6. '   ' → logprob: -21.62520408630371
    7. '[' → logprob: -22.12520408630371
    8. '```' → logprob: -22.37520408630371
    9. '_ans' → logprob: -22.62520408630371
    10. '`' → logprob: -23.12520408630371

Token 643: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00010473522706888616
    2. '<|end|>' → logprob: -9.375104904174805
    3. '
' → logprob: -10.875104904174805
    4. '```' → logprob: -15.375104904174805
    5. ' def' → logprob: -15.875104904174805
    6. '<|end|>' → logprob: -16.000104904174805
    7. '\' → logprob: -16.250104904174805
    8. '  
' → logprob: -16.500104904174805
    9. '    
' → logprob: -17.000104904174805
    10. ':def' → logprob: -17.125104904174805

Token 644: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.8444881536415778e-05
    2. '<|end|>' → logprob: -10.625028610229492
    3. '\' → logprob: -13.750028610229492
    4. '```' → logprob: -14.000028610229492
    5. '
' → logprob: -14.125028610229492
    6. 'ndef' → logprob: -15.000028610229492
    7. ' def' → logprob: -15.125028610229492
    8. ':def' → logprob: -15.375028610229492
    9. ')' → logprob: -15.875028610229492
    10. '#' → logprob: -16.125028610229492

Token 645: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.00041184606379829347
    2. 'main' → logprob: -8.750411987304688
    3. ' assign' → logprob: -9.250411987304688
    4. 'def' → logprob: -10.250411987304688
    5. 'calc' → logprob: -10.500411987304688
    6. 'count' → logprob: -10.625411987304688
    7. 'run' → logprob: -11.000411987304688
    8. '(assign' → logprob: -11.375411987304688
    9. 'choose' → logprob: -11.500411987304688
    10. 'get' → logprob: -12.250411987304688

Token 646: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.0003277176001574844
    2. '_answer' → logprob: -8.750328063964844
    3. '_case' → logprob: -9.125328063964844
    4. '_' → logprob: -10.500328063964844
    5. '_answers' → logprob: -12.125328063964844
    6. '```' → logprob: -12.125328063964844
    7. 'def' → logprob: -12.750328063964844
    8. 'case' → logprob: -12.875328063964844
    9. '_cases' → logprob: -13.000328063964844
    10. '##_' → logprob: -13.250328063964844

Token 647: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -1.7432603272027336e-06
    2. 'case' → logprob: -14.000001907348633
    3. '(case' → logprob: -15.125001907348633
    4. '_cases' → logprob: -15.500001907348633
    5. '(n' → logprob: -16.625001907348633
    6. '```' → logprob: -16.875001907348633
    7. '_def' → logprob: -17.875001907348633
    8. '_' → logprob: -17.875001907348633
    9. '_CASE' → logprob: -18.000001907348633
    10. '(_' → logprob: -18.000001907348633

Token 648: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003348698082845658
    2. '3' → logprob: -8.125334739685059
    3. '1' → logprob: -11.250334739685059
    4. 'case' → logprob: -12.000334739685059
    5. '_' → logprob: -12.125334739685059
    6. '_case' → logprob: -12.250334739685059
    7. '
' → logprob: -12.625334739685059
    8. ' ' → logprob: -13.500334739685059
    9. 'def' → logprob: -14.000334739685059
    10. '```' → logprob: -14.375334739685059

Token 649: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.029177194461226463
    2. 'a' → logprob: -4.029177188873291
    3. '_b' → logprob: -4.779177188873291
    4. '(n' → logprob: -6.529177188873291
    5. '2' → logprob: -7.529177188873291
    6. '_a' → logprob: -7.904177188873291
    7. '_' → logprob: -9.65417766571045
    8. '```' → logprob: -10.40417766571045
    9. '(' → logprob: -11.27917766571045
    10. '_case' → logprob: -11.27917766571045

Token 650: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002614550176076591
    2. '(' → logprob: -8.250261306762695
    3. ' (' → logprob: -15.625261306762695
    4. 'def' → logprob: -16.875261306762695
    5. '(def' → logprob: -18.000261306762695
    6. '(
' → logprob: -19.125261306762695
    7. '(N' → logprob: -19.375261306762695
    8. 'n' → logprob: -19.500261306762695
    9. ':' → logprob: -19.750261306762695
    10. ',' → logprob: -19.875261306762695

Token 651: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.723352049040841e-06
    2. ' ,' → logprob: -12.375004768371582
    3. ',
' → logprob: -15.500004768371582
    4. '‌,' → logprob: -16.625003814697266
    5. '(flag' → logprob: -17.250003814697266
    6. ',n' → logprob: -17.875003814697266
    7. '،' → logprob: -18.000003814697266
    8. ',

' → logprob: -18.375003814697266
    9. '_flag' → logprob: -18.375003814697266
    10. 'flag' → logprob: -18.500003814697266

Token 652: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.0015042672166600823
    2. ' flag' → logprob: -6.501504421234131
    3. 'f' → logprob: -13.751503944396973
    4. 'fl' → logprob: -15.626503944396973
    5. '	flag' → logprob: -15.751503944396973
    6. 'three' → logprob: -16.00150489807129
    7. '(flag' → logprob: -16.00150489807129
    8. 'ans' → logprob: -16.62650489807129
    9. '
' → logprob: -16.75150489807129
    10. 'def' → logprob: -17.00150489807129

Token 653: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.080963092041202e-06
    2. ' ,' → logprob: -12.375004768371582
    3. 'def' → logprob: -14.875004768371582
    4. ',
' → logprob: -15.500004768371582
    5. ',n' → logprob: -16.7500057220459
    6. ')' → logprob: -16.8750057220459
    7. '[' → logprob: -17.2500057220459
    8. '   ' → logprob: -17.6250057220459
    9. '<|end|>' → logprob: -18.0000057220459
    10. 'flag' → logprob: -18.2500057220459

Token 654: ' three' (ID: 3407)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.27118536829948425
    2. 'one' → logprob: -1.8961853981018066
    3. 'flag' → logprob: -3.2711853981018066
    4. ' three' → logprob: -3.7711853981018066
    5. 'two' → logprob: -3.8961853981018066
    6. ' one' → logprob: -5.396185398101807
    7. ' flag' → logprob: -7.146185398101807
    8. ' two' → logprob: -7.896185398101807
    9. 'zero' → logprob: -9.271184921264648
    10. 'ans' → logprob: -9.396184921264648

Token 655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.246537173457909e-06
    2. ' ,' → logprob: -12.625003814697266
    3. ',n' → logprob: -15.125003814697266
    4. 'def' → logprob: -15.250003814697266
    5. ')' → logprob: -16.125003814697266
    6. '   ' → logprob: -16.375003814697266
    7. '):
' → logprob: -16.750003814697266
    8. '_,' → logprob: -17.250003814697266
    9. ',
' → logprob: -17.625003814697266
    10. '[' → logprob: -17.875003814697266

Token 656: ' one' (ID: 1001)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.6599944829940796
    2. 'one' → logprob: -0.9099944829940796
    3. ' one' → logprob: -3.159994602203369
    4. ' two' → logprob: -3.284994602203369
    5. 'three' → logprob: -7.409994602203369
    6. 'flag' → logprob: -9.909994125366211
    7. ' three' → logprob: -10.284994125366211
    8. '   ' → logprob: -11.409994125366211
    9. '
' → logprob: -11.784994125366211
    10. 'zero' → logprob: -11.909994125366211

Token 657: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.822646693966817e-06
    2. ' ,' → logprob: -12.000007629394531
    3. ',n' → logprob: -13.500007629394531
    4. ',
' → logprob: -16.37500762939453
    5. ')' → logprob: -17.12500762939453
    6. 'def' → logprob: -17.50000762939453
    7. '_,' → logprob: -18.00000762939453
    8. ',b' → logprob: -18.25000762939453
    9. '   ' → logprob: -18.37500762939453
    10. ',t' → logprob: -18.75000762939453

Token 658: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.10021162778139114
    2. ' two' → logprob: -2.3502116203308105
    3. '(two' → logprob: -12.850212097167969
    4. '.two' → logprob: -13.600212097167969
    5. '_two' → logprob: -14.225212097167969
    6. 'Two' → logprob: -15.725212097167969
    7. '   ' → logprob: -16.35021209716797
    8. 'def' → logprob: -16.97521209716797
    9. '       ' → logprob: -17.60021209716797
    10. '           ' → logprob: -17.60021209716797

Token 659: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.652451464906335e-05
    2. ' ,' → logprob: -11.125016212463379
    3. ',
' → logprob: -14.000016212463379
    4. ',n' → logprob: -14.875016212463379
    5. 'def' → logprob: -16.000017166137695
    6. '   ' → logprob: -16.375017166137695
    7. '```' → logprob: -16.750017166137695
    8. 'n' → logprob: -17.125017166137695
    9. ')' → logprob: -17.125017166137695
    10. '):
' → logprob: -17.250017166137695

Token 660: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.313285231590271
    2. ' ans' → logprob: -1.313285231590271
    3. '   ' → logprob: -11.813284873962402
    4. '	ans' → logprob: -12.063284873962402
    5. ' ' → logprob: -12.563284873962402
    6. 'flag' → logprob: -13.438284873962402
    7. '    ' → logprob: -13.938284873962402
    8. ',' → logprob: -14.188284873962402
    9. '(ans' → logprob: -14.188284873962402
    10. '
' → logprob: -14.313284873962402

Token 661: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1010378822684288
    2. '):' → logprob: -2.3510379791259766
    3. '   ' → logprob: -7.476037979125977
    4. '):
' → logprob: -9.101037979125977
    5. ')' → logprob: -9.226037979125977
    6. ':' → logprob: -10.226037979125977
    7. ':
' → logprob: -11.476037979125977
    8. 'for' → logprob: -13.101037979125977
    9. '):

' → logprob: -13.351037979125977
    10. 'def' → logprob: -13.476037979125977

Token 662: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03603575378656387
    2. '   ' → logprob: -4.036035537719727
    3. ' for' → logprob: -4.036035537719727
    4. '```' → logprob: -9.911035537719727
    5. '	for' → logprob: -12.161035537719727
    6. 'def' → logprob: -12.536035537719727
    7. '
' → logprob: -14.536035537719727
    8. '``' → logprob: -15.161035537719727
    9. '_for' → logprob: -17.036035537719727
    10. '[' → logprob: -17.036035537719727

Token 663: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.318681188422488e-05
    2. 'def' → logprob: -11.75001335144043
    3. ' for' → logprob: -12.87501335144043
    4. 'idx' → logprob: -13.87501335144043
    5. '   ' → logprob: -14.12501335144043
    6. 'index' → logprob: -15.62501335144043
    7. 'j' → logprob: -16.12501335144043
    8. '```' → logprob: -16.62501335144043
    9. 'from' → logprob: -16.75001335144043
    10. 'a' → logprob: -16.87501335144043

Token 664: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04302465170621872
    2. ' i' → logprob: -3.1680245399475098
    3. '   ' → logprob: -12.168025016784668
    4. '	i' → logprob: -12.418025016784668
    5. ' ' → logprob: -12.668025016784668
    6. '(i' → logprob: -12.793025016784668
    7. '  ' → logprob: -13.480525016784668
    8. '[i' → logprob: -13.668025016784668
    9. '`' → logprob: -13.793025016784668
    10. '_i' → logprob: -14.105525016784668

Token 665: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3868817985057831
    2. 'in' → logprob: -1.1368818283081055
    3. ' ' → logprob: -12.136881828308105
    4. 'range' → logprob: -13.636881828308105
    5. '<|end|>' → logprob: -14.136881828308105
    6. '[' → logprob: -14.386881828308105
    7. '  ' → logprob: -14.636881828308105
    8. 'n' → logprob: -14.636881828308105
    9. '   ' → logprob: -15.011881828308105
    10. '	in' → logprob: -15.011881828308105

Token 666: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00026419671485200524
    2. ' range' → logprob: -8.250264167785645
    3. '(range' → logprob: -13.000264167785645
    4. 'n' → logprob: -14.875264167785645
    5. '(n' → logprob: -16.37526512145996
    6. '[n' → logprob: -16.87526512145996
    7. '(' → logprob: -17.62526512145996
    8. 'def' → logprob: -17.75026512145996
    9. '
' → logprob: -18.25026512145996
    10. '[' → logprob: -18.62526512145996

Token 667: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006870360113680363
    2. 'n' → logprob: -5.006870269775391
    3. 'range' → logprob: -8.88187026977539
    4. 'def' → logprob: -12.25687026977539
    5. '(' → logprob: -12.50687026977539
    6. '(range' → logprob: -12.63187026977539
    7. '(len' → logprob: -13.13187026977539
    8. '[n' → logprob: -14.38187026977539
    9. 'len' → logprob: -15.13187026977539
    10. ' range' → logprob: -15.25687026977539

Token 668: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0017386015970259905
    2. '):' → logprob: -6.376738548278809
    3. '   ' → logprob: -11.501738548278809
    4. '):
' → logprob: -11.501738548278809
    5. ':
' → logprob: -11.876738548278809
    6. 'def' → logprob: -12.501738548278809
    7. ':' → logprob: -13.001738548278809
    8. '():
' → logprob: -14.126738548278809
    9. 'n' → logprob: -14.501738548278809
    10. ')' → logprob: -14.501738548278809

Token 669: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00035536551149562
    2. '   ' → logprob: -8.00035572052002
    3. 'if' → logprob: -11.50035572052002
    4. ' if' → logprob: -11.87535572052002
    5. '```' → logprob: -13.00035572052002
    6. 'def' → logprob: -15.62535572052002
    7. '[' → logprob: -15.62535572052002
    8. '           ' → logprob: -16.875354766845703
    9. '	   ' → logprob: -17.750354766845703
    10. '``' → logprob: -17.750354766845703

Token 670: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005081149865873158
    2. ' if' → logprob: -8.125508308410645
    3. '       ' → logprob: -8.750508308410645
    4. '           ' → logprob: -10.125508308410645
    5. '   ' → logprob: -11.625508308410645
    6. 'not' → logprob: -13.000508308410645
    7. 'If' → logprob: -14.375508308410645
    8. '```' → logprob: -14.750508308410645
    9. ' ' → logprob: -15.000508308410645
    10. '               ' → logprob: -15.375508308410645

Token 671: ' not' (ID: 625)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.3757287263870239
    2. ' flag' → logprob: -1.875728726387024
    3. 'not' → logprob: -2.0007286071777344
    4. ' not' → logprob: -3.7507286071777344
    5. '   ' → logprob: -6.875728607177734
    6. '           ' → logprob: -10.375728607177734
    7. '       ' → logprob: -10.500728607177734
    8. '	flag' → logprob: -10.625728607177734
    9. '    ' → logprob: -10.688228607177734
    10. '(flag' → logprob: -10.813228607177734

Token 672: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.5759576559066772
    2. 'flag' → logprob: -0.8259576559066772
    3. '(flag' → logprob: -10.950957298278809
    4. '_flag' → logprob: -14.825957298278809
    5. '	flag' → logprob: -15.325957298278809
    6. 'Flag' → logprob: -17.075958251953125
    7. '.flag' → logprob: -17.325958251953125
    8. 'flags' → logprob: -18.700958251953125
    9. 'not' → logprob: -18.700958251953125
    10. ' ' → logprob: -19.075958251953125

Token 673: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -13.875000953674316
    3. 'i' → logprob: -16.375001907348633
    4. '[
' → logprob: -16.500001907348633
    5. '(i' → logprob: -17.000001907348633
    6. '```' → logprob: -17.000001907348633
    7. '[I' → logprob: -17.125001907348633
    8. '<|end|>' → logprob: -17.750001907348633
    9. ' [' → logprob: -18.250001907348633
    10. '\[' → logprob: -19.250001907348633

Token 674: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.312572717666626
    2. ':
' → logprob: -1.562572717666626
    3. ':' → logprob: -3.562572717666626
    4. ']:' → logprob: -3.687572717666626
    5. '):
' → logprob: -5.937572479248047
    6. '           ' → logprob: -6.812572479248047
    7. '       ' → logprob: -7.437572479248047
    8. '():
' → logprob: -7.562572479248047
    9. '   ' → logprob: -9.812572479248047
    10. '=' → logprob: -9.812572479248047

Token 675: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05586850643157959
    2. 'ans' → logprob: -3.055868625640869
    3. ' ans' → logprob: -5.055868625640869
    4. '       ' → logprob: -7.555868625640869
    5. '   ' → logprob: -9.305868148803711
    6. 'flag' → logprob: -9.430868148803711
    7. '	ans' → logprob: -9.555868148803711
    8. '(ans' → logprob: -9.680868148803711
    9. '          ' → logprob: -10.930868148803711
    10. '               ' → logprob: -12.430868148803711

Token 676: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.1284078061580658
    2. ' ans' → logprob: -2.1284077167510986
    3. '           ' → logprob: -6.628407955169678
    4. '	ans' → logprob: -9.25340747833252
    5. '       ' → logprob: -10.75340747833252
    6. '(ans' → logprob: -11.00340747833252
    7. '   ' → logprob: -11.25340747833252
    8. '               ' → logprob: -12.50340747833252
    9. 'answer' → logprob: -13.50340747833252
    10. '          ' → logprob: -14.25340747833252

Token 677: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.610702363715973e-06
    2. '=' → logprob: -11.625009536743164
    3. '[' → logprob: -15.625009536743164
    4. ' [' → logprob: -15.875009536743164
    5. '```' → logprob: -16.250009536743164
    6. ' =' → logprob: -16.500009536743164
    7. '   ' → logprob: -16.625009536743164
    8. '[I' → logprob: -17.000009536743164
    9. 'i' → logprob: -17.125009536743164
    10. '=i' → logprob: -17.125009536743164

Token 678: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1553187519311905
    2. '=' → logprob: -2.0303187370300293
    3. ' =' → logprob: -4.655318737030029
    4. ']=' → logprob: -5.905318737030029
    5. '[i' → logprob: -8.905319213867188
    6. '   ' → logprob: -9.030319213867188
    7. '[' → logprob: -10.655319213867188
    8. ' ]' → logprob: -11.280319213867188
    9. ')' → logprob: -11.280319213867188
    10. '       ' → logprob: -11.780319213867188

Token 679: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245712742209435
    2. ' =' → logprob: -3.7732458114624023
    3. '   ' → logprob: -15.648245811462402
    4. ' ' → logprob: -18.773244857788086
    5. '=
' → logprob: -19.648244857788086
    6. '    ' → logprob: -19.898244857788086
    7. '  ' → logprob: -20.773244857788086
    8. '＝' → logprob: -20.773244857788086
    9. ']=' → logprob: -21.023244857788086
    10. '=

' → logprob: -21.148244857788086

Token 680: ' pop' (ID: 2735)
  Prédit: 'pop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pop' → logprob: -0.0031989887356758118
    2. ' pop' → logprob: -5.753199100494385
    3. '   ' → logprob: -11.003198623657227
    4. '	pop' → logprob: -13.753198623657227
    5. 'three' → logprob: -14.253198623657227
    6. '       ' → logprob: -14.753198623657227
    7. '  ' → logprob: -14.878198623657227
    8. '.pop' → logprob: -15.253198623657227
    9. ' ' → logprob: -15.253198623657227
    10. '           ' → logprob: -15.253198623657227

Token 681: '_from' (ID: 12526)
  Prédit: '_from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_from' → logprob: -5.438573680294212e-06
    2. 'From' → logprob: -12.375005722045898
    3. 'from' → logprob: -14.125005722045898
    4. '_From' → logprob: -15.750005722045898
    5. '(' → logprob: -16.3750057220459
    6. '_for' → logprob: -16.6250057220459
    7. '_FROM' → logprob: -17.3750057220459
    8. '_of' → logprob: -19.0000057220459
    9. '```' → logprob: -19.0000057220459
    10. '(from' → logprob: -19.2500057220459

Token 682: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10814842581748962
    2. '(one' → logprob: -2.4831483364105225
    3. '(two' → logprob: -4.233148574829102
    4. 'three' → logprob: -5.483148574829102
    5. 'one' → logprob: -8.358148574829102
    6. 'two' → logprob: -9.858148574829102
    7. '(th' → logprob: -9.983148574829102
    8. '(flag' → logprob: -11.233148574829102
    9. '(t' → logprob: -12.733148574829102
    10. ' three' → logprob: -13.483148574829102

Token 683: 'three' (ID: 47660)
  Prédit: 'three'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.46448299288749695
    2. 'one' → logprob: -1.4644830226898193
    3. 'two' → logprob: -1.9644830226898193
    4. '(one' → logprob: -10.339483261108398
    5. ' three' → logprob: -10.714483261108398
    6. '(two' → logprob: -10.964483261108398
    7. '(' → logprob: -11.589483261108398
    8. ' one' → logprob: -11.839483261108398
    9. 'third' → logprob: -12.964483261108398
    10. ' two' → logprob: -13.214483261108398

Token 684: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0040818434208631516
    2. ')
' → logprob: -5.504081726074219
    3. '   ' → logprob: -12.879081726074219
    4. ')

' → logprob: -15.254081726074219
    5. '       ' → logprob: -15.754081726074219
    6. ')
' → logprob: -16.12908172607422
    7. ' )' → logprob: -16.50408172607422
    8. ')}' → logprob: -16.50408172607422
    9. '()' → logprob: -17.00408172607422
    10. '))' → logprob: -18.00408172607422

Token 685: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003322473494336009
    2. ' for' → logprob: -8.12533187866211
    3. 'for' → logprob: -11.00033187866211
    4. '
' → logprob: -12.00033187866211
    5. '```' → logprob: -12.37533187866211
    6. '       ' → logprob: -12.50033187866211
    7. '<|end|>' → logprob: -12.50033187866211
    8. ')' → logprob: -14.87533187866211
    9. '[' → logprob: -15.50033187866211
    10. '	for' → logprob: -15.50033187866211

Token 686: ' res' (ID: 694)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0025245302822440863
    2. '   ' → logprob: -6.002524375915527
    3. ' for' → logprob: -10.127524375915527
    4. 'res' (adapté à ' res') → logprob: -12.002524375915527
    5. '
' → logprob: -13.252524375915527
    6. '```' → logprob: -13.877524375915527
    7. 'return' → logprob: -16.377525329589844
    8. 'def' → logprob: -17.127525329589844
    9. '	for' → logprob: -17.752525329589844
    10. 'from' → logprob: -18.877525329589844

Token 687: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692831456661224
    2. '=' → logprob: -2.1269283294677734
    3. '=
' → logprob: -16.751928329467773
    4. 'for' → logprob: -17.501928329467773
    5. '```' → logprob: -17.501928329467773
    6. '(' → logprob: -17.626928329467773
    7. 'def' → logprob: -17.751928329467773
    8. '<|end|>' → logprob: -18.001928329467773
    9. 's' → logprob: -18.251928329467773
    10. ',' → logprob: -18.376928329467773

Token 688: ' concat' (ID: 73950)
  Prédit: 'concat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'concat' → logprob: -0.01088451873511076
    2. 'one' → logprob: -4.8858842849731445
    3. ' concat' → logprob: -5.8858842849731445
    4. 'three' → logprob: -8.510884284973145
    5. ' one' → logprob: -8.635884284973145
    6. 'conc' → logprob: -9.760884284973145
    7. 'two' → logprob: -10.010884284973145
    8. ' three' → logprob: -12.385884284973145
    9. 'con' → logprob: -12.510884284973145
    10. '.concat' → logprob: -13.510884284973145

Token 689: '_classes' (ID: 37969)
  Prédit: '_classes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_classes' → logprob: -0.00029244067263789475
    2. '(one' → logprob: -8.625292778015137
    3. 'Classes' → logprob: -10.250292778015137
    4. '(two' → logprob: -10.375292778015137
    5. 'classes' → logprob: -11.625292778015137
    6. '_class' → logprob: -11.625292778015137
    7. '(' → logprob: -11.625292778015137
    8. 'class' → logprob: -12.250292778015137
    9. '_CLASSES' → logprob: -12.500292778015137
    10. 'one' → logprob: -12.750292778015137

Token 690: '(one' (ID: 92717)
  Prédit: '(one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(one' → logprob: -0.000721487682312727
    2. '(two' → logprob: -7.250721454620361
    3. '(' → logprob: -11.62572193145752
    4. 'one' → logprob: -13.12572193145752
    5. '(other' → logprob: -15.50072193145752
    6. '(the' → logprob: -16.750720977783203
    7. '([' → logprob: -17.125720977783203
    8. '(on' → logprob: -17.250720977783203
    9. '((' → logprob: -17.250720977783203
    10. 'two' → logprob: -17.250720977783203

Token 691: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018029935017693788
    2. ',t' → logprob: -8.6251802444458
    3. ' ,' → logprob: -14.3751802444458
    4. 'two' → logprob: -16.375181198120117
    5. ',s' → logprob: -18.250181198120117
    6. 'three' → logprob: -18.250181198120117
    7. '(two' → logprob: -18.500181198120117
    8. ',
' → logprob: -18.500181198120117
    9. ',b' → logprob: -19.500181198120117
    10. ',T' → logprob: -19.625181198120117

Token 692: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.002806417876854539
    2. ' two' → logprob: -5.877806186676025
    3. 'three' → logprob: -14.377806663513184
    4. '(two' → logprob: -14.752806663513184
    5. 'one' → logprob: -15.002806663513184
    6. '[' → logprob: -15.627806663513184
    7. '[t' → logprob: -17.002805709838867
    8. 'Two' → logprob: -17.252805709838867
    9. '   ' → logprob: -17.502805709838867
    10. 'tw' → logprob: -18.002805709838867

Token 693: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0445127372804563e-05
    2. ' ,' → logprob: -11.75001049041748
    3. '[' → logprob: -14.25001049041748
    4. ')' → logprob: -14.62501049041748
    5. ',
' → logprob: -14.62501049041748
    6. '```' → logprob: -15.62501049041748
    7. '   ' → logprob: -15.87501049041748
    8. 'three' → logprob: -16.000009536743164
    9. 'def' → logprob: -16.125009536743164
    10. ')
' → logprob: -16.625009536743164

Token 694: ' three' (ID: 3407)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.006874621845781803
    2. ' three' → logprob: -5.0068745613098145
    3. 'one' → logprob: -8.756875038146973
    4. ' one' → logprob: -13.381875038146973
    5. '[' → logprob: -15.881875038146973
    6. ' ' → logprob: -17.381874084472656
    7. 'two' → logprob: -17.381874084472656
    8. '_three' → logprob: -17.381874084472656
    9. '   ' → logprob: -17.506874084472656
    10. 'Three' → logprob: -18.006874084472656

Token 695: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22267061471939087
    2. ')
' → logprob: -1.972670555114746
    3. ')' → logprob: -3.472670555114746
    4. 'for' → logprob: -3.597670555114746
    5. ' for' → logprob: -6.222670555114746
    6. '
' → logprob: -9.222670555114746
    7. ' ' → logprob: -12.097670555114746
    8. 'def' → logprob: -12.097670555114746
    9. ',' → logprob: -12.722670555114746
    10. '```' → logprob: -12.847670555114746

Token 696: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2519826591014862
    2. '   ' → logprob: -1.5019826889038086
    3. ' for' → logprob: -9.876982688903809
    4. '```' → logprob: -13.751982688903809
    5. '	for' → logprob: -14.376982688903809
    6. '
' → logprob: -14.876982688903809
    7. 'def' → logprob: -15.626982688903809
    8. '       ' → logprob: -18.001981735229492
    9. 'For' → logprob: -18.876981735229492
    10. '    
' → logprob: -19.376981735229492

Token 697: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00016325322212651372
    2. ' for' → logprob: -8.750163078308105
    3. '   ' → logprob: -12.250163078308105
    4. '	for' → logprob: -17.750164031982422
    5. '
' → logprob: -19.000164031982422
    6. '```' → logprob: -19.500164031982422
    7. '       ' → logprob: -21.625164031982422
    8. ' ' → logprob: -21.625164031982422
    9. '    
' → logprob: -22.875164031982422
    10. '  ' → logprob: -23.000164031982422

Token 698: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.033653419464826584
    2. ' i' → logprob: -3.408653497695923
    3. '   ' → logprob: -12.033653259277344
    4. '(i' → logprob: -14.658653259277344
    5. '[i' → logprob: -15.158653259277344
    6. '	i' → logprob: -15.158653259277344
    7. '```' → logprob: -15.783653259277344
    8. ' ' → logprob: -15.908653259277344
    9. '  ' → logprob: -16.783653259277344
    10. ' in' → logprob: -16.908653259277344

Token 699: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018152397125959396
    2. 'in' → logprob: -4.018152236938477
    3. ' ' → logprob: -14.143152236938477
    4. 'range' → logprob: -14.268152236938477
    5. 'n' → logprob: -14.643152236938477
    6. '   ' → logprob: -16.268152236938477
    7. '	in' → logprob: -16.268152236938477
    8. '```' → logprob: -16.268152236938477
    9. 'def' → logprob: -16.393152236938477
    10. 'i' → logprob: -17.143152236938477

Token 700: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.6934557505883276e-05
    2. ' range' → logprob: -10.250057220458984
    3. '(range' → logprob: -10.750057220458984
    4. '```' → logprob: -19.625057220458984
    5. 'for' → logprob: -20.250057220458984
    6. '
' → logprob: -20.375057220458984
    7. '	range' → logprob: -21.000057220458984
    8. '`' → logprob: -21.250057220458984
    9. ' ' → logprob: -21.500057220458984
    10. '(' → logprob: -21.625057220458984

Token 701: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002141458389814943
    2. 'range' → logprob: -8.875214576721191
    3. 'n' → logprob: -9.625214576721191
    4. '(range' → logprob: -11.750214576721191
    5. ' range' → logprob: -15.875214576721191
    6. '(' → logprob: -16.000213623046875
    7. '[n' → logprob: -16.750213623046875
    8. 'def' → logprob: -17.625213623046875
    9. ' (' → logprob: -19.000213623046875
    10. '(
' → logprob: -19.250213623046875

Token 702: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.005064633209258318
    2. ':
' → logprob: -5.880064487457275
    3. '):' → logprob: -7.005064487457275
    4. '():
' → logprob: -7.005064487457275
    5. '   ' → logprob: -8.255064964294434
    6. ':' → logprob: -9.505064964294434
    7. 'def' → logprob: -10.255064964294434
    8. '       ' → logprob: -10.380064964294434
    9. '):
' → logprob: -11.505064964294434
    10. '[' → logprob: -12.505064964294434

Token 703: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16557128727436066
    2. 'if' → logprob: -2.1655712127685547
    3. '   ' → logprob: -3.7905712127685547
    4. 'in' → logprob: -4.415571212768555
    5. 'def' → logprob: -7.165571212768555
    6. ' if' → logprob: -7.165571212768555
    7. 'for' → logprob: -7.790571212768555
    8. ' in' → logprob: -7.790571212768555
    9. 'range' → logprob: -7.915571212768555
    10. '
' → logprob: -8.915571212768555

Token 704: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09479211270809174
    2. 'if' (adapté à ' if') → logprob: -2.469792127609253
    3. ' if' → logprob: -6.094791889190674
    4. 'def' → logprob: -6.219791889190674
    5. '           ' → logprob: -7.844791889190674
    6. '#' → logprob: -8.094792366027832
    7. '
' → logprob: -8.469792366027832
    8. '   ' → logprob: -8.969792366027832
    9. '[' → logprob: -9.094792366027832
    10. 'If' → logprob: -9.094792366027832

Token 705: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.08938585966825485
    2. ' flag' → logprob: -2.464385747909546
    3. '   ' → logprob: -7.964385986328125
    4. 'not' → logprob: -9.839385986328125
    5. '           ' → logprob: -11.214385986328125
    6. ' not' → logprob: -11.339385986328125
    7. '       ' → logprob: -11.464385986328125
    8. '    ' → logprob: -12.464385986328125
    9. ' ' → logprob: -13.464385986328125
    10. '	flag' → logprob: -13.839385986328125

Token 706: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.2729995988775045e-06
    2. 'not' → logprob: -13.000006675720215
    3. '[' → logprob: -13.125006675720215
    4. 'i' → logprob: -14.250006675720215
    5. '```' → logprob: -14.625006675720215
    6. '[
' → logprob: -15.500006675720215
    7. '[n' → logprob: -16.0000057220459
    8. '(i' → logprob: -16.2500057220459
    9. '[j' → logprob: -16.5000057220459
    10. 's' → logprob: -17.0000057220459

Token 707: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.898630678653717
    2. ':
' → logprob: -1.5236306190490723
    3. '[i' → logprob: -1.6486306190490723
    4. '):
' → logprob: -2.1486306190490723
    5. ']:
' → logprob: -3.2736306190490723
    6. '       ' → logprob: -4.523630619049072
    7. ']:' → logprob: -5.523630619049072
    8. '):' → logprob: -5.648630619049072
    9. '           ' → logprob: -6.023630619049072
    10. '==' → logprob: -6.148630619049072

Token 708: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0033412138000130653
    2. '=' → logprob: -6.628341197967529
    3. ' ans' → logprob: -6.878341197967529
    4. 'ans' → logprob: -7.753341197967529
    5. '          ' → logprob: -8.628341674804688
    6. ' =' → logprob: -9.003341674804688
    7. '       ' → logprob: -9.628341674804688
    8. ':' → logprob: -9.878341674804688
    9. ':
' → logprob: -10.128341674804688
    10. '==' → logprob: -10.878341674804688

Token 709: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.3132985532283783
    2. ' ans' → logprob: -1.3132985830307007
    3. '	ans' → logprob: -10.813298225402832
    4. '(ans' → logprob: -11.938298225402832
    5. '           ' → logprob: -12.063298225402832
    6. '   ' → logprob: -12.813298225402832
    7. '       ' → logprob: -13.938298225402832
    8. '_ans' → logprob: -15.563298225402832
    9. '
' → logprob: -15.688298225402832
    10. 'answer' → logprob: -15.688298225402832

Token 710: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.512236498361744e-07
    2. '=' → logprob: -15.125000953674316
    3. '   ' → logprob: -16.25
    4. '[' → logprob: -16.875
    5. '```' → logprob: -17.125
    6. '=i' → logprob: -17.25
    7. 'i' → logprob: -18.875
    8. ' [' → logprob: -18.875
    9. '=[' → logprob: -18.875
    10. '[I' → logprob: -18.875

Token 711: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.434142529964447
    2. ' =' → logprob: -1.4341425895690918
    3. ']' → logprob: -2.184142589569092
    4. ']=' → logprob: -6.684142589569092
    5. ' ]' → logprob: -11.184142112731934
    6. ')' → logprob: -11.434142112731934
    7. '   ' → logprob: -11.684142112731934
    8. '[' → logprob: -14.184142112731934
    9. '    ' → logprob: -14.684142112731934
    10. ')=' → logprob: -14.684142112731934

Token 712: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324547804892063
    2. ' =' → logprob: -3.7732455730438232
    3. '   ' → logprob: -18.273244857788086
    4. '=
' → logprob: -19.148244857788086
    5. ' ' → logprob: -19.773244857788086
    6. '=

' → logprob: -20.398244857788086
    7. ')' → logprob: -21.023244857788086
    8. ']=' → logprob: -21.023244857788086
    9. '＝' → logprob: -21.023244857788086
    10. '==' → logprob: -21.148244857788086

Token 713: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6931993961334229
    2. ' res' → logprob: -0.6931993961334229
    3. 'pop' → logprob: -10.068199157714844
    4. ' pop' → logprob: -11.568199157714844
    5. '(res' → logprob: -15.693199157714844
    6. ' ' → logprob: -16.318199157714844
    7. '	res' → logprob: -16.943199157714844
    8. 'p' → logprob: -18.193199157714844
    9. 'r' → logprob: -18.318199157714844
    10. '   ' → logprob: -18.443199157714844

Token 714: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -0.00014406509581021965
    2. '.' → logprob: -9.250144004821777
    3. 'pop' → logprob: -10.000144004821777
    4. ' .' → logprob: -13.375144004821777
    5. '.append' → logprob: -14.125144004821777
    6. '.p' → logprob: -16.000144958496094
    7. 'Pop' → logprob: -17.875144958496094
    8. '	pop' → logprob: -18.125144958496094
    9. ' pop' → logprob: -18.500144958496094
    10. '_pop' → logprob: -18.625144958496094

Token 715: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003380846756044775
    2. '()
' → logprob: -8.000338554382324
    3. '()`' → logprob: -14.375338554382324
    4. '()]' → logprob: -14.500338554382324
    5. '()
' → logprob: -14.625338554382324
    6. '()

' → logprob: -14.750338554382324
    7. '()>' → logprob: -15.625338554382324
    8. '()}' → logprob: -15.750338554382324
    9. '(' → logprob: -16.375337600708008
    10. '()">' → logprob: -16.375337600708008

Token 716: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001188445370644331
    2. 'return' → logprob: -6.751188278198242
    3. ' return' → logprob: -11.001188278198242
    4. '
' → logprob: -14.876188278198242
    5. '       ' → logprob: -14.876188278198242
    6. '	return' → logprob: -15.251188278198242
    7. '```' → logprob: -15.751188278198242
    8. 'eturn' → logprob: -16.376188278198242
    9. ':return' → logprob: -16.751188278198242
    10. ',' → logprob: -17.001188278198242

Token 717: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034043293446302414
    2. 'return' (adapté à ' return') → logprob: -3.409043312072754
    3. ' return' → logprob: -7.909043312072754
    4. '	return' → logprob: -10.909043312072754
    5. '<|end|>' → logprob: -13.034043312072754
    6. '       ' → logprob: -13.284043312072754
    7. ':return' → logprob: -13.534043312072754
    8. 'eturn' → logprob: -13.534043312072754
    9. '
' → logprob: -13.909043312072754
    10. ')return' → logprob: -14.284043312072754

Token 718: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0005536287208087742
    2. ' ans' → logprob: -7.500553607940674
    3. '(ans' → logprob: -14.250554084777832
    4. '	ans' → logprob: -18.750553131103516
    5. '[' → logprob: -20.750553131103516
    6. 'answer' → logprob: -22.500553131103516
    7. '
' → logprob: -23.000553131103516
    8. 'ins' → logprob: -23.125553131103516
    9. 'ass' → logprob: -23.125553131103516
    10. '_ans' → logprob: -23.125553131103516

Token 719: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1160349458805285e-05
    2. '```' → logprob: -11.500011444091797
    3. '#' → logprob: -15.375011444091797
    4. '<|end|>' → logprob: -15.875011444091797
    5. 'import' → logprob: -16.125011444091797
    6. ' def' → logprob: -16.125011444091797
    7. 'if' → logprob: -16.500011444091797
    8. ':def' → logprob: -16.625011444091797
    9. 'ndef' → logprob: -16.750011444091797
    10. 'n' → logprob: -17.375011444091797

Token 720: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.5776860184123507e-06
    2. 'if' → logprob: -13.62500286102295
    3. 'import' → logprob: -13.75000286102295
    4. 'n' → logprob: -16.000001907348633
    5. ' def' → logprob: -17.000001907348633
    6. '```' → logprob: -17.000001907348633
    7. 'from' → logprob: -18.000001907348633
    8. 'ndef' → logprob: -18.750001907348633
    9. 'for' → logprob: -19.625001907348633
    10. '#' → logprob: -19.875001907348633

Token 721: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.04279259964823723
    2. ' main' → logprob: -3.292792558670044
    3. 'solve' → logprob: -5.417792797088623
    4. ' solve' → logprob: -8.542792320251465
    5. 'process' → logprob: -10.042792320251465
    6. 'assign' → logprob: -11.042792320251465
    7. 'choose' → logprob: -11.542792320251465
    8. 'def' → logprob: -12.042792320251465
    9. 'try' → logprob: -12.542792320251465
    10. 'run' → logprob: -12.667792320251465

Token 722: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.2729995988775045e-06
    2. '():
' → logprob: -12.125006675720215
    3. ' ():' → logprob: -14.250006675720215
    4. '()' → logprob: -16.6250057220459
    5. '():
' → logprob: -17.7500057220459
    6. '(' → logprob: -18.5000057220459
    7. '():

' → logprob: -19.8750057220459
    8. '_' → logprob: -20.3750057220459
    9. ':' → logprob: -20.5000057220459
    10. '(":' → logprob: -20.6250057220459

Token 723: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0022071164567023516
    2. 'input' → logprob: -6.377207279205322
    3. 'n' → logprob: -7.877207279205322
    4. ' input' → logprob: -9.377206802368164
    5. 'import' → logprob: -10.252206802368164
    6. ' n' → logprob: -13.127206802368164
    7. '	input' → logprob: -13.752206802368164
    8. '(input' → logprob: -14.127206802368164
    9. '_input' → logprob: -14.752206802368164
    10. '```' → logprob: -14.752206802368164

Token 724: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.12888787686824799
    2. ' input' → logprob: -2.128887891769409
    3. '   ' → logprob: -6.25388765335083
    4. 'n' → logprob: -10.753888130187988
    5. 'import' → logprob: -11.753888130187988
    6. ' n' → logprob: -12.628888130187988
    7. '	input' → logprob: -14.128888130187988
    8. ' ' → logprob: -14.503888130187988
    9. '(input' → logprob: -15.378888130187988
    10. '_input' → logprob: -15.503888130187988

Token 725: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.19679100811481476
    2. '_' → logprob: -2.321790933609009
    3. '()' → logprob: -2.571790933609009
    4. '(' → logprob: -5.696791172027588
    5. 'func' → logprob: -8.07179069519043
    6. '_=' → logprob: -8.44679069519043
    7. '=' → logprob: -9.94679069519043
    8. '_FUNC' → logprob: -10.32179069519043
    9. '_function' → logprob: -10.94679069519043
    10. ' _' → logprob: -11.32179069519043

Token 726: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47490984201431274
    2. '=' → logprob: -0.9749098420143127
    3. '()' → logprob: -7.099909782409668
    4. '   ' → logprob: -13.099909782409668
    5. ' ' → logprob: -13.349909782409668
    6. ' ()' → logprob: -13.724909782409668
    7. '(' → logprob: -13.974909782409668
    8. '  ' → logprob: -14.849909782409668
    9. '＝' → logprob: -15.099909782409668
    10. ',' → logprob: -15.599909782409668

Token 727: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0002613358374219388
    2. ' set' → logprob: -8.250261306762695
    3. '   ' → logprob: -22.750261306762695
    4. ' ' → logprob: -23.000261306762695
    5. '	set' → logprob: -23.500261306762695
    6. '(set' → logprob: -23.625261306762695
    7. '  ' → logprob: -25.000261306762695
    8. '=set' → logprob: -25.125261306762695
    9. ':set' → logprob: -26.250261306762695
    10. ')set' → logprob: -26.250261306762695

Token 728: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00011450992315076292
    2. '_' → logprob: -9.625114440917969
    3. '```' → logprob: -11.625114440917969
    4. '_inputs' → logprob: -11.750114440917969
    5. 'input' → logprob: -11.875114440917969
    6. '_code' → logprob: -12.125114440917969
    7. '_import' → logprob: -12.375114440917969
    8. '_output' → logprob: -12.750114440917969
    9. ' _' → logprob: -13.250114440917969
    10. '_user' → logprob: -14.000114440917969

Token 729: '_and' (ID: 18645)
  Prédit: '_and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_and' → logprob: -0.10038188844919205
    2. '_func' → logprob: -2.350381851196289
    3. 'and' → logprob: -9.100381851196289
    4. 'func' → logprob: -10.475381851196289
    5. '```' → logprob: -11.100381851196289
    6. '   ' → logprob: -12.350381851196289
    7. ' and' → logprob: -12.350381851196289
    8. '()' → logprob: -12.850381851196289
    9. '_' → logprob: -13.100381851196289
    10. '_line' → logprob: -13.225381851196289

Token 730: '_rec' (ID: 35314)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.00038479414070025086
    2. '_rec' → logprob: -8.750384330749512
    3. 'func' → logprob: -9.500384330749512
    4. 'input' → logprob: -10.250384330749512
    5. 'sys' → logprob: -10.250384330749512
    6. 'read' → logprob: -10.500384330749512
    7. 'stdin' → logprob: -10.625384330749512
    8. ' recursion' → logprob: -12.625384330749512
    9. 'next' → logprob: -12.750384330749512
    10. 'recursive' → logprob: -12.750384330749512

Token 731: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -3.8889261304575484e-06
    2. 'urs' → logprob: -12.875003814697266
    3. 'limit' → logprob: -15.125003814697266
    4. 'ur' → logprob: -15.375003814697266
    5. '```' → logprob: -15.875003814697266
    6. 'usion' → logprob: -16.250003814697266
    7. '_limit' → logprob: -16.500003814697266
    8. 'ersion' → logprob: -16.500003814697266
    9. 'c' → logprob: -16.500003814697266
    10. 'ursive' → logprob: -17.000003814697266

Token 732: '_limit' (ID: 34361)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0031804447062313557
    2. '_limit' → logprob: -5.753180503845215
    3. 'Limit' → logprob: -12.878180503845215
    4. ' limit' → logprob: -16.0031795501709
    5. 'limits' → logprob: -19.1281795501709
    6. 'LIMIT' → logprob: -19.8781795501709
    7. 'lim' → logprob: -20.0031795501709
    8. '_LIMIT' → logprob: -20.1281795501709
    9. ' Limit' → logprob: -20.2531795501709
    10. '(limit' → logprob: -20.5031795501709

Token 733: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012916464766021818
    2. '()
' → logprob: -9.000128746032715
    3. '();' → logprob: -13.875128746032715
    4. '()`' → logprob: -14.500128746032715
    5. '()<' → logprob: -14.500128746032715
    6. '()\' → logprob: -14.500128746032715
    7. '())' → logprob: -14.875128746032715
    8. '(' → logprob: -15.250128746032715
    9. '```' → logprob: -15.250128746032715
    10. '   ' → logprob: -15.375128746032715

Token 734: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4756574332714081
    2. 'n' → logprob: -0.9756574630737305
    3. ' n' → logprob: -6.4756574630737305
    4. '```' → logprob: -10.35065746307373
    5. '	n' → logprob: -12.22565746307373
    6. ',n' → logprob: -14.60065746307373
    7. '    
' → logprob: -14.97565746307373
    8. ',' → logprob: -15.22565746307373
    9. '   ' → logprob: -15.47565746307373
    10. '(n' → logprob: -15.60065746307373

Token 735: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -3.531315314830863e-06
    2. '   ' → logprob: -12.625003814697266
    3. ' n' → logprob: -16.250003814697266
    4. '```' → logprob: -16.875003814697266
    5. 'N' → logprob: -17.375003814697266
    6. 't' → logprob: -18.125003814697266
    7. '    
' → logprob: -18.875003814697266
    8. '
' → logprob: -19.375003814697266
    9. '	n' → logprob: -20.500003814697266
    10. '``' → logprob: -21.375003814697266

Token 736: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194910168647766
    2. '=' → logprob: -1.5019490718841553
    3. '=int' → logprob: -11.626949310302734
    4. ',' → logprob: -11.626949310302734
    5. '   ' → logprob: -14.251949310302734
    6. ' ' → logprob: -14.501949310302734
    7. ')' → logprob: -14.751949310302734
    8. ' =
' → logprob: -15.876949310302734
    9. '    ' → logprob: -15.876949310302734
    10. '=input' → logprob: -16.501949310302734

Token 737: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.3417195677757263
    2. ' read' → logprob: -1.591719627380371
    3. 'int' → logprob: -2.841719627380371
    4. ' int' → logprob: -3.591719627380371
    5. '   ' → logprob: -14.091719627380371
    6. '  ' → logprob: -15.966719627380371
    7. '	read' → logprob: -16.341718673706055
    8. ' ' → logprob: -16.716718673706055
    9. '(int' → logprob: -17.091718673706055
    10. '(read' → logprob: -17.466718673706055

Token 738: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.08542749285697937
    2. '(n' → logprob: -3.0854275226593018
    3. '_func' → logprob: -3.8354275226593018
    4. '(' → logprob: -4.710427284240723
    5. '(int' → logprob: -6.335427284240723
    6. '_int' → logprob: -7.085427284240723
    7. 'n' → logprob: -7.210427284240723
    8. '(func' → logprob: -7.585427284240723
    9. '_' → logprob: -8.085427284240723
    10. '```' → logprob: -8.210427284240723

Token 739: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0234896931797266
    2. '()' → logprob: -3.7734897136688232
    3. '(' → logprob: -8.523489952087402
    4. 'input' → logprob: -10.273489952087402
    5. '=input' → logprob: -12.648489952087402
    6. '()
' → logprob: -13.148489952087402
    7. '();' → logprob: -13.523489952087402
    8. '(sys' → logprob: -13.898489952087402
    9. '())' → logprob: -14.273489952087402
    10. ',input' → logprob: -14.523489952087402

Token 740: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -0.0001462107611587271
    2. ')_' → logprob: -9.62514591217041
    3. ')' → logprob: -10.25014591217041
    4. 'func' → logprob: -10.87514591217041
    5. '()' → logprob: -11.62514591217041
    6. '(' → logprob: -12.25014591217041
    7. '_' → logprob: -12.62514591217041
    8. '())' → logprob: -13.62514591217041
    9. 'Func' → logprob: -13.75014591217041
    10. '(func' → logprob: -13.87514591217041

Token 741: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011249176226556301
    2. '())' → logprob: -4.63624906539917
    3. '()' → logprob: -6.51124906539917
    4. ')
' → logprob: -12.636249542236328
    5. ' )' → logprob: -14.136249542236328
    6. '())
' → logprob: -14.636249542236328
    7. '()
' → logprob: -15.761249542236328
    8. '();)' → logprob: -15.761249542236328
    9. '   ' → logprob: -15.886249542236328
    10. '(' → logprob: -16.261249542236328

Token 742: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006591858807951212
    2. 'G' → logprob: -5.131591796875
    3. ' G' → logprob: -7.881591796875
    4. '```' → logprob: -8.881591796875
    5. '
' → logprob: -9.381591796875
    6. 'n' → logprob: -10.631591796875
    7. '    
' → logprob: -11.131591796875
    8. '	G' → logprob: -11.506591796875
    9. ',' → logprob: -13.131591796875
    10. 'g' → logprob: -13.256591796875

Token 743: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -5.621933451038785e-05
    2. '   ' → logprob: -9.875056266784668
    3. ' G' → logprob: -13.000056266784668
    4. '```' → logprob: -13.000056266784668
    5. 'n' → logprob: -16.62505531311035
    6. '	G' → logprob: -17.62505531311035
    7. '  ' → logprob: -17.75005531311035
    8. ' ' → logprob: -17.75005531311035
    9. '`' → logprob: -17.87505531311035
    10. 'if' → logprob: -18.12505531311035

Token 744: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25210845470428467
    2. ' =' → logprob: -1.5021084547042847
    3. ',' → logprob: -8.627108573913574
    4. ' ,' → logprob: -17.127107620239258
    5. ' ' → logprob: -17.252107620239258
    6. '   ' → logprob: -17.377107620239258
    7. '```' → logprob: -17.627107620239258
    8. ')' → logprob: -17.877107620239258
    9. '＝' → logprob: -18.002107620239258
    10. '=
' → logprob: -18.127107620239258

Token 745: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.061967913061380386
    2. ' init' → logprob: -2.8119678497314453
    3. '(init' → logprob: -15.436967849731445
    4. '_init' → logprob: -16.561967849731445
    5. '	init' → logprob: -18.686967849731445
    6. '.init' → logprob: -18.811967849731445
    7. '/init' → logprob: -19.061967849731445
    8. 'initialize' → logprob: -19.436967849731445
    9. ')init' → logprob: -19.936967849731445
    10. ':init' → logprob: -20.186967849731445

Token 746: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -4.961759259458631e-06
    2. 'Graph' → logprob: -13.125004768371582
    3. 'graph' → logprob: -14.000004768371582
    4. '(Graph' → logprob: -14.000004768371582
    5. '(graph' → logprob: -14.625004768371582
    6. '_G' → logprob: -14.875004768371582
    7. '_GRAPH' → logprob: -15.875004768371582
    8. '(G' → logprob: -15.875004768371582
    9. '```' → logprob: -17.0000057220459
    10. '_g' → logprob: -17.5000057220459

Token 747: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.320199877838604e-07
    2. 'n' → logprob: -15.25
    3. '(' → logprob: -16.0
    4. ' (' → logprob: -18.125
    5. '(
' → logprob: -21.125
    6. '```' → logprob: -21.375
    7. '
' → logprob: -21.875
    8. '<n' → logprob: -22.25
    9. '[n' → logprob: -22.75
    10. '_n' → logprob: -22.875

Token 748: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00409775460138917
    2. ')
' → logprob: -5.504097938537598
    3. '   ' → logprob: -10.879097938537598
    4. ' )' → logprob: -16.00409698486328
    5. ')
' → logprob: -16.12909698486328
    6. ')

' → logprob: -16.50409698486328
    7. '),' → logprob: -17.12909698486328
    8. ')n' → logprob: -17.25409698486328
    9. ')#' → logprob: -17.50409698486328
    10. '())' → logprob: -17.75409698486328

Token 749: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08298148959875107
    2. 'G' → logprob: -2.582981586456299
    3. ' G' → logprob: -5.707981586456299
    4. 'build' → logprob: -7.332981586456299
    5. ' build' → logprob: -10.08298110961914
    6. '```' → logprob: -10.58298110961914
    7. '  ' → logprob: -11.08298110961914
    8. ' ' → logprob: -11.58298110961914
    9. '
' → logprob: -12.08298110961914
    10. '	G' → logprob: -13.08298110961914

Token 750: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' (adapté à ' G') → logprob: -0.002928018569946289
    2. 'build' → logprob: -5.877927780151367
    3. ' G' → logprob: -9.127927780151367
    4. '   ' → logprob: -11.502927780151367
    5. ' build' → logprob: -13.127927780151367
    6. '```' → logprob: -14.127927780151367
    7. 'input' → logprob: -14.502927780151367
    8. 'n' → logprob: -15.377927780151367
    9. '  ' → logprob: -16.252927780151367
    10. 'read' → logprob: -16.252927780151367

Token 751: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01416398212313652
    2. ' =' → logprob: -4.264163970947266
    3. ',' → logprob: -14.514163970947266
    4. '＝' → logprob: -18.139163970947266
    5. '=
' → logprob: -18.139163970947266
    6. '```' → logprob: -19.139163970947266
    7. '=create' → logprob: -19.389163970947266
    8. '=}' → logprob: -19.639163970947266
    9. '=b' → logprob: -19.764163970947266
    10. '=

' → logprob: -19.889163970947266

Token 752: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.00861468818038702
    2. ' build' → logprob: -4.758614540100098
    3. '(build' → logprob: -15.883614540100098
    4. '	build' → logprob: -17.883615493774414
    5. '_build' → logprob: -19.133615493774414
    6. '.build' → logprob: -19.383615493774414
    7. 'building' → logprob: -19.508615493774414
    8. '   ' → logprob: -20.008615493774414
    9. ' ' → logprob: -20.508615493774414
    10. 'Build' → logprob: -20.758615493774414

Token 753: '_graph' (ID: 33441)
  Prédit: '_graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_graph' → logprob: -1.7432603272027336e-06
    2. '(G' → logprob: -13.750001907348633
    3. 'graph' → logprob: -15.250001907348633
    4. '(graph' → logprob: -15.375001907348633
    5. '_G' → logprob: -16.875001907348633
    6. 'Graph' → logprob: -17.000001907348633
    7. '(n' → logprob: -17.125001907348633
    8. '(Graph' → logprob: -18.000001907348633
    9. '_gr' → logprob: -18.250001907348633
    10. '_GRAPH' → logprob: -18.875001907348633

Token 754: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.128163257315464e-07
    2. ' (' → logprob: -15.75
    3. '(' → logprob: -16.875
    4. '(G' → logprob: -17.0
    5. '(len' → logprob: -18.375
    6. 'n' → logprob: -18.5
    7. '(
' → logprob: -19.125
    8. '```' → logprob: -19.5
    9. '
' → logprob: -20.625
    10. '   ' → logprob: -20.75

Token 755: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00034952821442857385
    2. ',G' → logprob: -8.000349998474121
    3. '(G' → logprob: -11.875349998474121
    4. ' ,' → logprob: -12.250349998474121
    5. ',
' → logprob: -13.625349998474121
    6. ')' → logprob: -14.875349998474121
    7. 'G' → logprob: -15.000349998474121
    8. ',n' → logprob: -15.875349998474121
    9. '(' → logprob: -16.250349044799805
    10. '   ' → logprob: -16.750349044799805

Token 756: ' G' (ID: 499)
  Prédit: 'G'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.011048054322600365
    2. ' G' → logprob: -4.511047840118408
    3. ')' → logprob: -16.38604736328125
    4. '   ' → logprob: -16.51104736328125
    5. '	G' → logprob: -17.76104736328125
    6. ',G' → logprob: -18.01104736328125
    7. '(G' → logprob: -18.26104736328125
    8. '    ' → logprob: -19.13604736328125
    9. ' ' → logprob: -19.38604736328125
    10. '<G' → logprob: -19.76104736328125

Token 757: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038467496051453054
    2. ',input' → logprob: -7.87538480758667
    3. ' ,' → logprob: -12.500384330749512
    4. ',
' → logprob: -14.500384330749512
    5. '(input' → logprob: -16.000385284423828
    6. 'input' → logprob: -16.625385284423828
    7. ',n' → logprob: -17.000385284423828
    8. '=input' → logprob: -18.000385284423828
    9. '```' → logprob: -18.125385284423828
    10. '
' → logprob: -18.750385284423828

Token 758: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005233882926404476
    2. ' input' → logprob: -5.2552337646484375
    3. '(input' → logprob: -17.880233764648438
    4. ',input' → logprob: -20.130233764648438
    5. '=input' → logprob: -20.255233764648438
    6. '_input' → logprob: -20.255233764648438
    7. '[input' → logprob: -20.505233764648438
    8. '<input' → logprob: -21.130233764648438
    9. 'Input' → logprob: -21.755233764648438
    10. '	input' → logprob: -22.255233764648438

Token 759: '_func' (ID: 22252)
  Prédit: '_func'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_func' → logprob: -1.2664456789934775e-06
    2. 'func' → logprob: -13.625000953674316
    3. '_FUNC' → logprob: -18.875001907348633
    4. 'Func' → logprob: -19.250001907348633
    5. '```' → logprob: -19.375001907348633
    6. '(func' → logprob: -20.000001907348633
    7. '_' → logprob: -20.125001907348633
    8. '_function' → logprob: -20.375001907348633
    9. '_fun' → logprob: -20.875001907348633
    10. ')' → logprob: -21.250001907348633

Token 760: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010008628305513412
    2. '   ' → logprob: -9.375100135803223
    3. ')
' → logprob: -11.125100135803223
    4. ' )' → logprob: -15.875100135803223
    5. ')n' → logprob: -16.375099182128906
    6. ')`' → logprob: -16.625099182128906
    7. '()' → logprob: -16.750099182128906
    8. '))' → logprob: -16.875099182128906
    9. '())' → logprob: -17.250099182128906
    10. ' ' → logprob: -17.375099182128906

Token 761: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41330471634864807
    2. 'flag' → logprob: -1.1633046865463257
    3. ' flag' → logprob: -3.6633048057556152
    4. 'one' → logprob: -8.663304328918457
    5. '```' → logprob: -9.163304328918457
    6. '	flag' → logprob: -9.538304328918457
    7. ' one' → logprob: -10.038304328918457
    8. '(flag' → logprob: -11.538304328918457
    9. '   ' → logprob: -11.913304328918457
    10. '
' → logprob: -12.038304328918457

Token 762: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -4.127333340875339e-06
    2. '   ' → logprob: -12.875003814697266
    3. 'k' → logprob: -13.875003814697266
    4. ' flag' → logprob: -15.000003814697266
    5. '```' → logprob: -16.500003814697266
    6. 'one' → logprob: -17.875003814697266
    7. 'flags' → logprob: -18.125003814697266
    8. 'f' → logprob: -18.375003814697266
    9. '	flag' → logprob: -18.750003814697266
    10. '    
' → logprob: -19.000003814697266

Token 763: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.040156811475753784
    2. '=' → logprob: -3.415156841278076
    3. ',' → logprob: -5.040156841278076
    4. 's' → logprob: -12.790156364440918
    5. ' ,' → logprob: -12.915156364440918
    6. '=create' → logprob: -12.915156364440918
    7. ')' → logprob: -13.040156364440918
    8. '=set' → logprob: -13.540156364440918
    9. '   ' → logprob: -13.915156364440918
    10. '```' → logprob: -14.040156364440918

Token 764: ' init' (ID: 6327)
  Prédit: ' init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' init' → logprob: -0.6321746110916138
    2. 'init' → logprob: -0.8821746110916138
    3. '[' → logprob: -3.132174491882324
    4. ' [' → logprob: -4.507174491882324
    5. '_init' → logprob: -11.257174491882324
    6. '(init' → logprob: -11.382174491882324
    7. '	init' → logprob: -13.007174491882324
    8. '.init' → logprob: -13.757174491882324
    9. '/init' → logprob: -14.007174491882324
    10. ':init' → logprob: -14.757174491882324

Token 765: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -4.930552313453518e-05
    2. 'flag' → logprob: -10.000049591064453
    3. '(flag' → logprob: -12.625049591064453
    4. ' flag' → logprob: -15.875049591064453
    5. '(n' → logprob: -16.000049591064453
    6. 'Flag' → logprob: -16.750049591064453
    7. '_FLAG' → logprob: -17.000049591064453
    8. '_' → logprob: -17.250049591064453
    9. '```' → logprob: -17.750049591064453
    10. '_flags' → logprob: -19.875049591064453

Token 766: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.310693111619912e-05
    2. 'n' → logprob: -10.250042915344238
    3. '(' → logprob: -12.125042915344238
    4. '(len' → logprob: -14.375042915344238
    5. ' (' → logprob: -14.500042915344238
    6. '(
' → logprob: -15.000042915344238
    7. '<|end|>' → logprob: -15.375042915344238
    8. '[n' → logprob: -16.125043869018555
    9. 'def' → logprob: -16.125043869018555
    10. '```' → logprob: -16.250043869018555

Token 767: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011617878044489771
    2. ')
' → logprob: -9.250116348266602
    3. '   ' → logprob: -10.875116348266602
    4. '())' → logprob: -15.000116348266602
    5. ' )' → logprob: -15.000116348266602
    6. '()' → logprob: -16.1251163482666
    7. ' ' → logprob: -16.8751163482666
    8. '<|end|>' → logprob: -16.8751163482666
    9. '),' → logprob: -17.0001163482666
    10. ')

' → logprob: -17.5001163482666

Token 768: '   ' (ID: 271)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.6206003427505493
    2. ' run' → logprob: -1.2456003427505493
    3. '   ' → logprob: -1.7456003427505493
    4. '	run' → logprob: -10.495600700378418
    5. '(run' → logprob: -11.370600700378418
    6. 'set' → logprob: -11.370600700378418
    7. '```' → logprob: -11.745600700378418
    8. '
' → logprob: -12.995600700378418
    9. '.run' → logprob: -13.245600700378418
    10. '_run' → logprob: -13.495600700378418

Token 769: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' (adapté à ' run') → logprob: -0.0004648696631193161
    2. ' run' → logprob: -8.25046443939209
    3. '   ' → logprob: -8.50046443939209
    4. '	run' → logprob: -16.625465393066406
    5. '```' → logprob: -16.875465393066406
    6. '
' → logprob: -17.125465393066406
    7. '(run' → logprob: -18.000465393066406
    8. ' ' → logprob: -18.750465393066406
    9. '.run' → logprob: -19.000465393066406
    10. 'set' → logprob: -19.125465393066406

Token 770: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -1.9361264946837764e-07
    2. 'dfs' → logprob: -16.375
    3. '_' → logprob: -20.0
    4. ' dfs' → logprob: -20.375
    5. '\' → logprob: -20.375
    6. 'DFS' → logprob: -20.875
    7. '_df' → logprob: -21.25
    8. '(d' → logprob: -21.5
    9. 'd' → logprob: -21.75
    10. '_f' → logprob: -21.75

Token 771: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -6.704273118884885e-07
    2. '_fs' → logprob: -15.250000953674316
    3. '(fs' → logprob: -15.625000953674316
    4. 'f' → logprob: -15.750000953674316
    5. 'FS' → logprob: -17.25
    6. 'sf' → logprob: -18.0
    7. ' fs' → logprob: -18.125
    8. 'dfs' → logprob: -18.125
    9. 's' → logprob: -18.25
    10. 'efs' → logprob: -18.875

Token 772: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -9.968312951968983e-06
    2. '(' → logprob: -12.000009536743164
    3. '(GPIO' → logprob: -13.750009536743164
    4. '<|end|>' → logprob: -13.875009536743164
    5. ' (' → logprob: -14.500009536743164
    6. '(Graph' → logprob: -15.250009536743164
    7. '```' → logprob: -15.750009536743164
    8. '(
' → logprob: -15.750009536743164
    9. '(Gtk' → logprob: -15.875009536743164
    10. '(Game' → logprob: -16.250009536743164

Token 773: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.961759259458631e-06
    2. ' ,' → logprob: -12.625004768371582
    3. '(flag' → logprob: -13.750004768371582
    4. ',
' → logprob: -15.125004768371582
    5. ')' → logprob: -16.5000057220459
    6. 'flag' → logprob: -16.8750057220459
    7. ' flag' → logprob: -17.5000057220459
    8. '‌,' → logprob: -17.8750057220459
    9. ',

' → logprob: -18.3750057220459
    10. '   ' → logprob: -18.3750057220459

Token 774: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.0019286326132714748
    2. ' flag' → logprob: -6.251928806304932
    3. '(flag' → logprob: -17.626928329467773
    4. '	flag' → logprob: -18.001928329467773
    5. '_flag' → logprob: -20.376928329467773
    6. '.flag' → logprob: -20.751928329467773
    7. ')' → logprob: -20.876928329467773
    8. 'flags' → logprob: -20.876928329467773
    9. 'Flag' → logprob: -22.001928329467773
    10. '   ' → logprob: -22.376928329467773

Token 775: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000444850797066465
    2. ')
' → logprob: -7.7504448890686035
    3. '   ' → logprob: -11.375444412231445
    4. ',' → logprob: -13.250444412231445
    5. ' )' → logprob: -14.500444412231445
    6. '))' → logprob: -16.500444412231445
    7. '<|end|>' → logprob: -16.500444412231445
    8. '
' → logprob: -16.750444412231445
    9. ',)' → logprob: -16.750444412231445
    10. ')
' → logprob: -16.875444412231445

Token 776: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020841402933001518
    2. 'one' → logprob: -4.145841598510742
    3. 'k' → logprob: -5.645841598510742
    4. ' one' → logprob: -6.895841598510742
    5. ' k' → logprob: -9.020841598510742
    6. '```' → logprob: -9.270841598510742
    7. 'ans' → logprob: -11.020841598510742
    8. 'mod' → logprob: -12.645841598510742
    9. '(one' → logprob: -13.020841598510742
    10. '   ' → logprob: -13.020841598510742

Token 777: ' a' (ID: 261)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.3546326160430908
    2. 'one' → logprob: -1.8546326160430908
    3. 'a' (adapté à ' a') → logprob: -2.479632616043091
    4. 'ans' → logprob: -3.729632616043091
    5. 'count' → logprob: -4.229632377624512
    6. 'cnt' → logprob: -4.229632377624512
    7. '   ' → logprob: -6.729632377624512
    8. 'answer' → logprob: -7.479632377624512
    9. 'mod' → logprob: -7.479632377624512
    10. 'ones' → logprob: -7.479632377624512

Token 778: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006717147771269083
    2. '=' → logprob: -5.006717205047607
    3. '   ' → logprob: -14.50671672821045
    4. ',' → logprob: -14.88171672821045
    5. '_flag' → logprob: -15.25671672821045
    6. ' ' → logprob: -15.50671672821045
    7. '_count' → logprob: -15.75671672821045
    8. 'flag' → logprob: -16.381717681884766
    9. '=count' → logprob: -16.381717681884766
    10. '=a' → logprob: -16.756717681884766

Token 779: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.014165159314870834
    2. ' count' → logprob: -4.264164924621582
    3. '   ' → logprob: -13.389164924621582
    4. '	count' → logprob: -16.7641658782959
    5. ' ' → logprob: -18.0141658782959
    6. '  ' → logprob: -18.2641658782959
    7. '(count' → logprob: -18.2641658782959
    8. '.count' → logprob: -18.7641658782959
    9. '[count' → logprob: -19.0141658782959
    10. '_count' → logprob: -19.1391658782959

Token 780: '_flag' (ID: 25269)
  Prédit: '_flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -2.6895233531831764e-05
    2. 'flag' → logprob: -10.62502670288086
    3. '(flag' → logprob: -13.00002670288086
    4. ' flag' → logprob: -16.00002670288086
    5. 'Flag' → logprob: -16.62502670288086
    6. 'a' → logprob: -16.87502670288086
    7. '_FLAG' → logprob: -17.25002670288086
    8. '_' → logprob: -17.50002670288086
    9. '_flags' → logprob: -18.25002670288086
    10. '(' → logprob: -18.37502670288086

Token 781: '(flag' (ID: 69186)
  Prédit: '(flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(flag' → logprob: -3.054500666621607e-06
    2. 'flag' → logprob: -12.75000286102295
    3. ' flag' → logprob: -16.250003814697266
    4. '(' → logprob: -17.875003814697266
    5. '(flags' → logprob: -18.000003814697266
    6. '	flag' → logprob: -18.250003814697266
    7. ' (' → logprob: -18.875003814697266
    8. '_flag' → logprob: -19.000003814697266
    9. '```' → logprob: -19.625003814697266
    10. '.flag' → logprob: -20.125003814697266

Token 782: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018518301658332348
    2. ')
' → logprob: -8.625185012817383
    3. '())' → logprob: -13.000185012817383
    4. '()' → logprob: -13.125185012817383
    5. ')

' → logprob: -15.000185012817383
    6. '),' → logprob: -15.500185012817383
    7. '   ' → logprob: -15.875185012817383
    8. '<|end|>' → logprob: -15.875185012817383
    9. '))' → logprob: -16.125185012817383
    10. '+' → logprob: -16.750185012817383

Token 783: '   ' (ID: 271)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.13838604092597961
    2. 'k' → logprob: -2.6383860111236572
    3. '   ' → logprob: -3.2633860111236572
    4. 'c' → logprob: -5.138386249542236
    5. '```' → logprob: -5.263386249542236
    6. 'if' → logprob: -5.513386249542236
    7. 'com' → logprob: -5.513386249542236
    8. 'n' → logprob: -9.263385772705078
    9. 'rest' → logprob: -9.888385772705078
    10. ' b' → logprob: -10.013385772705078

Token 784: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.5243322849273682
    2. 'k' → logprob: -1.1493322849273682
    3. 'if' → logprob: -2.899332284927368
    4. 'c' → logprob: -3.774332284927368
    5. 'com' → logprob: -4.774332046508789
    6. 'comp' → logprob: -6.274332046508789
    7. '   ' → logprob: -7.399332046508789
    8. 'mod' → logprob: -7.649332046508789
    9. 'three' → logprob: -8.024332046508789
    10. 'compl' → logprob: -8.149332046508789

Token 785: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006716555915772915
    2. '=' → logprob: -5.006716728210449
    3. ',' → logprob: -14.00671672821045
    4. ' ' → logprob: -15.50671672821045
    5. ' =
' → logprob: -17.131715774536133
    6. '   ' → logprob: -17.381715774536133
    7. 'a' → logprob: -17.381715774536133
    8. '<|end|>' → logprob: -17.756715774536133
    9. '＝' → logprob: -17.881715774536133
    10. ' ' → logprob: -18.256715774536133

Token 786: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.20146489143371582
    2. ' count' → logprob: -1.7014648914337158
    3. ' n' → logprob: -10.201464653015137
    4. 'n' → logprob: -11.701464653015137
    5. '   ' → logprob: -12.076464653015137
    6. ' ' → logprob: -15.076464653015137
    7. '	count' → logprob: -16.201465606689453
    8. '  ' → logprob: -16.451465606689453
    9. '(count' → logprob: -18.201465606689453
    10. '    ' → logprob: -18.326465606689453

Token 787: '_com' (ID: 10828)
  Prédit: '_flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_flag' → logprob: -0.5581795573234558
    2. '_com' → logprob: -1.1831796169281006
    3. ' =' → logprob: -2.6831796169281006
    4. '(n' → logprob: -4.0581793785095215
    5. '(flag' → logprob: -4.3081793785095215
    6. '=' → logprob: -4.4331793785095215
    7. 'flag' → logprob: -5.0581793785095215
    8. 'com' → logprob: -6.6831793785095215
    9. 'Complement' → logprob: -7.6831793785095215
    10. '(com' → logprob: -7.6831793785095215

Token 788: 'plement' (ID: 13429)
  Prédit: 'plement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plement' → logprob: -0.0004071971052326262
    2. 'plet' → logprob: -8.250407218933105
    3. 'ple' → logprob: -10.250407218933105
    4. 'lement' → logprob: -10.375407218933105
    5. 'pl' → logprob: -10.375407218933105
    6. 'ent' → logprob: -11.750407218933105
    7. 'ponent' → logprob: -11.875407218933105
    8. 'plete' → logprob: -11.875407218933105
    9. 'plt' → logprob: -12.000407218933105
    10. '```' → logprob: -12.375407218933105

Token 789: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.448370838072151e-05
    2. '(' → logprob: -9.375094413757324
    3. ' (' → logprob: -12.000094413757324
    4. '(len' → logprob: -13.375094413757324
    5. 'n' → logprob: -13.625094413757324
    6. '<|end|>' → logprob: -15.000094413757324
    7. '(
' → logprob: -15.500094413757324
    8. '```' → logprob: -16.25009536743164
    9. ',' → logprob: -18.25009536743164
    10. ')' → logprob: -18.50009536743164

Token 790: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009225384565070271
    2. ',a' → logprob: -7.125922679901123
    3. ',
' → logprob: -10.375922203063965
    4. ' ,' → logprob: -10.625922203063965
    5. '(a' → logprob: -10.750922203063965
    6. 'a' → logprob: -11.125922203063965
    7. ',n' → logprob: -11.375922203063965
    8. '(n' → logprob: -12.125922203063965
    9. '(' → logprob: -12.750922203063965
    10. ')' → logprob: -13.000922203063965

Token 791: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019287518225610256
    2. ' a' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.876928329467773
    4. ')' → logprob: -17.501928329467773
    5. 'flag' → logprob: -17.501928329467773
    6. ' ' → logprob: -18.126928329467773
    7. '	a' → logprob: -18.251928329467773
    8. 'n' → logprob: -18.251928329467773
    9. ')a' → logprob: -18.376928329467773
    10. '10' → logprob: -19.126928329467773

Token 792: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010350722586736083
    2. ')
' → logprob: -6.876035213470459
    3. ')
' → logprob: -14.1260347366333
    4. '   ' → logprob: -14.5010347366333
    5. ')

' → logprob: -15.5010347366333
    6. ')`' → logprob: -15.5010347366333
    7. '))' → logprob: -15.6260347366333
    8. ' )' → logprob: -16.251035690307617
    9. ')a' → logprob: -16.501035690307617
    10. ')`
' → logprob: -16.626035690307617

Token 793: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21397174894809723
    2. 'one' → logprob: -1.963971734046936
    3. 'k' → logprob: -3.5889718532562256
    4. ' one' → logprob: -3.8389718532562256
    5. '```' → logprob: -6.7139716148376465
    6. 'if' → logprob: -7.3389716148376465
    7. ' k' → logprob: -7.4639716148376465
    8. '
' → logprob: -8.463972091674805
    9. ' if' → logprob: -8.588972091674805
    10. '(one' → logprob: -8.963972091674805

Token 794: ' one' (ID: 1001)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6998339891433716
    2. 'one' (adapté à ' one') → logprob: -0.6998339891433716
    3. 'if' → logprob: -5.199833869934082
    4. 'ans' → logprob: -6.949833869934082
    5. 'mod' → logprob: -9.699833869934082
    6. 'three' → logprob: -10.574833869934082
    7. 'def' → logprob: -10.949833869934082
    8. 'print' → logprob: -11.074833869934082
    9. 'answer' → logprob: -11.324833869934082
    10. '```' → logprob: -11.824833869934082

Token 795: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015800826076883823
    2. ' ,' → logprob: -8.875158309936523
    3. ',t' → logprob: -11.000158309936523
    4. '<|end|>' → logprob: -14.250158309936523
    5. '‌,' → logprob: -15.750158309936523
    6. ',
' → logprob: -16.500158309936523
    7. ',user' → logprob: -16.500158309936523
    8. ',b' → logprob: -16.750158309936523
    9. '=' → logprob: -17.000158309936523
    10. ',n' → logprob: -17.375158309936523

Token 796: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.12692831456661224
    2. ' two' → logprob: -2.1269283294677734
    3. '(two' → logprob: -16.376928329467773
    4. '_two' → logprob: -17.001928329467773
    5. 'Two' → logprob: -17.501928329467773
    6. '.two' → logprob: -18.001928329467773
    7. 'three' → logprob: -19.501928329467773
    8. '   ' → logprob: -19.876928329467773
    9. ' ' → logprob: -20.251928329467773
    10. 't' → logprob: -20.751928329467773

Token 797: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0034236586652696133
    2. ' =' → logprob: -6.128423690795898
    3. '=' → logprob: -7.128423690795898
    4. ' ,' → logprob: -7.753423690795898
    5. '<|end|>' → logprob: -12.503423690795898
    6. 'three' → logprob: -13.628423690795898
    7. ',t' → logprob: -14.503423690795898
    8. ' three' → logprob: -15.128423690795898
    9. '_three' → logprob: -15.503423690795898
    10. '```' → logprob: -16.1284236907959

Token 798: ' three' (ID: 3407)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.014163628220558167
    2. ' three' → logprob: -4.264163494110107
    3. '_three' → logprob: -15.764163970947266
    4. 'Three' → logprob: -17.264163970947266
    5. ' thre' → logprob: -18.639163970947266
    6. '   ' → logprob: -19.389163970947266
    7. '三' → logprob: -19.389163970947266
    8. 'th' → logprob: -20.014163970947266
    9. 'and' → logprob: -20.389163970947266
    10. '3' → logprob: -20.389163970947266

Token 799: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869159519672394
    2. '=' → logprob: -1.136915922164917
    3. ',' → logprob: -10.011916160583496
    4. ' ' → logprob: -17.38691520690918
    5. '<|end|>' → logprob: -17.51191520690918
    6. ')' → logprob: -18.01191520690918
    7. '＝' → logprob: -18.01191520690918
    8. '=model' → logprob: -18.26191520690918
    9. '=
' → logprob: -18.38691520690918
    10. ' =
' → logprob: -18.38691520690918

Token 800: ' mod' (ID: 1812)
  Prédit: ' mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.6931476593017578
    2. 'mod' → logprob: -0.6931476593017578
    3. '(mod' → logprob: -15.193147659301758
    4. '	mod' → logprob: -15.693147659301758
    5. '_mod' → logprob: -19.193147659301758
    6. ' ' → logprob: -19.693147659301758
    7. ' мод' → logprob: -20.193147659301758
    8. ' modul' → logprob: -20.568147659301758
    9. '   ' → logprob: -20.568147659301758
    10. '.mod' → logprob: -20.693147659301758

Token 801: '_class' (ID: 10602)
  Prédit: '_class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_class' → logprob: -0.00026181264547631145
    2. 'class' → logprob: -8.250262260437012
    3. 'Class' → logprob: -15.000262260437012
    4. '_CLASS' → logprob: -16.750261306762695
    5. 'aclass' → logprob: -17.500261306762695
    6. 'def' → logprob: -17.625261306762695
    7. '_classes' → logprob: -18.250261306762695
    8. '"class' → logprob: -18.500261306762695
    9. '_classifier' → logprob: -18.500261306762695
    10. '(class' → logprob: -19.000261306762695

Token 802: 'ify' (ID: 1985)
  Prédit: 'ify'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.0027425887528806925
    2. 'ass' → logprob: -6.252742767333984
    3. 'def' → logprob: -8.002742767333984
    4. 'class' → logprob: -8.377742767333984
    5. '_class' → logprob: -9.127742767333984
    6. 'ize' → logprob: -9.752742767333984
    7. 'fy' → logprob: -9.752742767333984
    8. '_classes' → logprob: -12.127742767333984
    9. 'ss' → logprob: -12.252742767333984
    10. 'ess' → logprob: -12.502742767333984

Token 803: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.375000953674316
    3. ' (' → logprob: -14.875000953674316
    4. 'n' → logprob: -15.625000953674316
    5. '(
' → logprob: -18.375001907348633
    6. '<n' → logprob: -18.500001907348633
    7. '```' → logprob: -18.625001907348633
    8. '<|end|>' → logprob: -19.250001907348633
    9. ',n' → logprob: -20.000001907348633
    10. ')n' → logprob: -20.125001907348633

Token 804: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018863992590922862
    2. '()' → logprob: -9.250188827514648
    3. ')
' → logprob: -9.875188827514648
    4. '())' → logprob: -10.375188827514648
    5. '   ' → logprob: -11.750188827514648
    6. '<|end|>' → logprob: -14.375188827514648
    7. ' )' → logprob: -14.750188827514648
    8. '()
' → logprob: -15.750188827514648
    9. ' ' → logprob: -16.12518882751465
    10. ')

' → logprob: -16.75018882751465

Token 805: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6357236504554749
    2. 'k' → logprob: -0.7607236504554749
    3. 'if' → logprob: -6.63572359085083
    4. ' k' → logprob: -6.88572359085083
    5. '```' → logprob: -7.26072359085083
    6. ' if' → logprob: -10.135724067687988
    7. 'ans' → logprob: -11.885724067687988
    8. '	k' → logprob: -12.135724067687988
    9. '``' → logprob: -12.510724067687988
    10. '    
' → logprob: -13.010724067687988

Token 806: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' (adapté à ' k') → logprob: -0.0009926761267706752
    2. 'ans' → logprob: -7.000992774963379
    3. 'if' → logprob: -9.500992774963379
    4. '```' → logprob: -13.000992774963379
    5. 'K' → logprob: -13.875992774963379
    6. ' k' → logprob: -14.250992774963379
    7. '   ' → logprob: -14.625992774963379
    8. 'def' → logprob: -15.000992774963379
    9. 'for' → logprob: -15.000992774963379
    10. 'print' → logprob: -15.250992774963379

Token 807: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028053484857082367
    2. '=' → logprob: -5.877805233001709
    3. ',' → logprob: -15.502805709838867
    4. '  ' → logprob: -15.877805709838867
    5. ' ' → logprob: -16.002805709838867
    6. ' =
' → logprob: -17.002805709838867
    7. '=k' → logprob: -18.252805709838867
    8. ' =)' → logprob: -18.377805709838867
    9. '.' → logprob: -18.752805709838867
    10. ' ,' → logprob: -18.752805709838867

Token 808: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' → logprob: -0.02913018688559532
    2. ' calc' → logprob: -3.654130220413208
    3. 'n' → logprob: -6.154129981994629
    4. ' n' → logprob: -7.279129981994629
    5. 'k' → logprob: -12.279129981994629
    6. '(calc' → logprob: -12.654129981994629
    7. ' ' → logprob: -13.404129981994629
    8. '   ' → logprob: -14.404129981994629
    9. 'cal' → logprob: -14.779129981994629
    10. ' k' → logprob: -14.904129981994629

Token 809: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.8550976164988242e-05
    2. 'k' → logprob: -11.625018119812012
    3. '(n' → logprob: -11.875018119812012
    4. '(k' → logprob: -13.125018119812012
    5. '(' → logprob: -14.750018119812012
    6. '_' → logprob: -17.500019073486328
    7. '_n' → logprob: -17.750019073486328
    8. '_key' → logprob: -17.750019073486328
    9. 'K' → logprob: -18.000019073486328
    10. '```' → logprob: -18.500019073486328

Token 810: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.081584716506768e-05
    2. 'n' → logprob: -10.875020980834961
    3. 'k' → logprob: -13.750020980834961
    4. '(' → logprob: -14.625020980834961
    5. 'def' → logprob: -15.750020980834961
    6. '```' → logprob: -16.50002098083496
    7. '=' → logprob: -17.00002098083496
    8. '(k' → logprob: -17.25002098083496
    9. ' (' → logprob: -18.12502098083496
    10. '   ' → logprob: -18.25002098083496

Token 811: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00037132782745175064
    2. ')
' → logprob: -8.125370979309082
    3. '()' → logprob: -9.750370979309082
    4. '())' → logprob: -11.375370979309082
    5. '<|end|>' → logprob: -14.000370979309082
    6. ')#' → logprob: -14.375370979309082
    7. ')n' → logprob: -14.375370979309082
    8. ')

' → logprob: -14.375370979309082
    9. ' )' → logprob: -14.625370979309082
    10. '<|end|>' → logprob: -14.750370979309082

Token 812: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11819598078727722
    2. 'if' → logprob: -2.3681960105895996
    3. ' if' → logprob: -4.2431960105896
    4. '```' → logprob: -5.7431960105896
    5. '<|end|>' → logprob: -8.868195533752441
    6. 'ans' → logprob: -9.993195533752441
    7. ' ans' → logprob: -11.118195533752441
    8. '[' → logprob: -11.868195533752441
    9. '    
' → logprob: -11.993195533752441
    10. '``' → logprob: -11.993195533752441

Token 813: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.023431584239006042
    2. 'if' → logprob: -3.7734315395355225
    3. 'answer' → logprob: -9.273431777954102
    4. 'flag' → logprob: -10.398431777954102
    5. '```' → logprob: -10.398431777954102
    6. '   ' → logprob: -11.398431777954102
    7. ' ans' → logprob: -11.773431777954102
    8. 'print' → logprob: -11.898431777954102
    9. '(ans' → logprob: -13.398431777954102
    10. '	ans' → logprob: -13.898431777954102

Token 814: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038044244050979614
    2. '=' → logprob: -3.2880442142486572
    3. ',' → logprob: -14.413043975830078
    4. ' =[' → logprob: -14.538043975830078
    5. ' ' → logprob: -14.788043975830078
    6. '[' → logprob: -15.038043975830078
    7. '   ' → logprob: -15.538043975830078
    8. '=[]' → logprob: -15.913043975830078
    9. '  ' → logprob: -16.163043975830078
    10. '_' → logprob: -16.163043975830078

Token 815: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.03862510249018669
    2. ' init' → logprob: -3.2886250019073486
    3. '[' → logprob: -7.538625240325928
    4. ' [' → logprob: -9.91362476348877
    5. '_init' → logprob: -13.91362476348877
    6. '   ' → logprob: -14.91362476348877
    7. '	init' → logprob: -15.03862476348877
    8. '(init' → logprob: -16.163625717163086
    9. '.init' → logprob: -16.288625717163086
    10. '/init' → logprob: -16.538625717163086

Token 816: '_answer' (ID: 65702)
  Prédit: '_answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_answer' → logprob: -1.688212614681106e-05
    2. 'answer' → logprob: -11.750017166137695
    3. '_ans' → logprob: -12.750017166137695
    4. '_' → logprob: -13.250017166137695
    5. '_array' → logprob: -13.250017166137695
    6. 'Answer' → logprob: -13.625017166137695
    7. '[' → logprob: -15.000017166137695
    8. '```' → logprob: -15.375017166137695
    9. '(_' → logprob: -15.750017166137695
    10. '_answers' → logprob: -16.000017166137695

Token 817: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.00015383612480945885
    2. 'array' → logprob: -9.250153541564941
    3. '(n' → logprob: -10.500153541564941
    4. '_arr' → logprob: -11.625153541564941
    5. '```' → logprob: -12.125153541564941
    6. '_' → logprob: -12.500153541564941
    7. '[' → logprob: -12.625153541564941
    8. '_arrays' → logprob: -13.000153541564941
    9. '[n' → logprob: -13.250153541564941
    10. 'Array' → logprob: -13.250153541564941

Token 818: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.988221684878226e-06
    2. '(' → logprob: -12.250006675720215
    3. ' (' → logprob: -13.500006675720215
    4. 'n' → logprob: -14.250006675720215
    5. '```' → logprob: -17.00000762939453
    6. '(k' → logprob: -18.12500762939453
    7. '(
' → logprob: -18.12500762939453
    8. ',' → logprob: -18.62500762939453
    9. '(len' → logprob: -19.37500762939453
    10. ',n' → logprob: -19.50000762939453

Token 819: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.53050296427682e-05
    2. ')
' → logprob: -9.37508487701416
    3. ')

' → logprob: -15.12508487701416
    4. '   ' → logprob: -16.000085830688477
    5. ' )' → logprob: -16.750085830688477
    6. ')
' → logprob: -17.250085830688477
    7. ')`' → logprob: -17.375085830688477
    8. '),' → logprob: -18.500085830688477
    9. ')n' → logprob: -18.750085830688477
    10. ')#' → logprob: -19.250085830688477

Token 820: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023870861157774925
    2. 'if' → logprob: -4.023870944976807
    3. ' if' → logprob: -5.773870944976807
    4. '```' → logprob: -6.023870944976807
    5. '<|end|>' → logprob: -9.398870468139648
    6. '	if' → logprob: -10.398870468139648
    7. '    
' → logprob: -10.523870468139648
    8. '``' → logprob: -12.148870468139648
    9. '
' → logprob: -12.398870468139648
    10. '{' → logprob: -12.523870468139648

Token 821: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004572292324155569
    2. ' if' → logprob: -5.62957239151001
    3. '   ' → logprob: -7.25457239151001
    4. '```' → logprob: -8.879571914672852
    5. 'i' → logprob: -9.504571914672852
    6. 'for' → logprob: -10.004571914672852
    7. 'flag' → logprob: -13.754571914672852
    8. '	if' → logprob: -13.879571914672852
    9. ' for' → logprob: -14.254571914672852
    10. ' i' → logprob: -15.129571914672852

Token 822: ' k' (ID: 372)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05143651366233826
    2. ' a' → logprob: -3.551436424255371
    3. 'k' → logprob: -3.926436424255371
    4. 'b' → logprob: -7.301436424255371
    5. ' k' → logprob: -7.426436424255371
    6. '(a' → logprob: -8.676436424255371
    7. '   ' → logprob: -9.301436424255371
    8. ' b' → logprob: -9.676436424255371
    9. 'flag' → logprob: -10.301436424255371
    10. ' ' → logprob: -10.801436424255371

Token 823: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03930339962244034
    2. ' <=' → logprob: -3.6643033027648926
    3. '==' → logprob: -4.414303302764893
    4. ':' → logprob: -8.28930377960205
    5. ' *' → logprob: -8.66430377960205
    6. '<=' → logprob: -8.78930377960205
    7. ' >=' → logprob: -9.66430377960205
    8. ' <' → logprob: -9.78930377960205
    9. ' >' → logprob: -10.66430377960205
    10. ' %' → logprob: -10.91430377960205

Token 824: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.021451245993375778
    2. ' a' → logprob: -4.146451473236084
    3. '=' → logprob: -6.396451473236084
    4. 'b' → logprob: -6.646451473236084
    5. '3' → logprob: -7.521451473236084
    6. '2' → logprob: -7.521451473236084
    7. 'min' → logprob: -7.896451473236084
    8. ' ' → logprob: -8.646450996398926
    9. '1' → logprob: -8.771450996398926
    10. '=a' → logprob: -8.771450996398926

Token 825: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010124455438926816
    2. ':
' → logprob: -7.376012325286865
    3. ' and' → logprob: -8.001012802124023
    4. ' :' → logprob: -11.126012802124023
    5. ' or' → logprob: -11.376012802124023
    6. '   ' → logprob: -11.876012802124023
    7. 'and' → logprob: -11.876012802124023
    8. '<|end|>' → logprob: -12.876012802124023
    9. '[' → logprob: -13.501012802124023
    10. '):' → logprob: -13.626012802124023

Token 826: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.005002243909984827
    2. ' k' → logprob: -5.380002021789551
    3. 'b' → logprob: -8.13000202178955
    4. 'n' → logprob: -11.00500202178955
    5. 'a' → logprob: -11.25500202178955
    6. ' b' → logprob: -11.38000202178955
    7. '   ' → logprob: -11.63000202178955
    8. '(k' → logprob: -12.13000202178955
    9. '(' → logprob: -12.25500202178955
    10. '```' → logprob: -12.63000202178955

Token 827: ' <' (ID: 464)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9477288722991943
    2. ' <=' → logprob: -1.6977288722991943
    3. ' ==' → logprob: -1.8227288722991943
    4. '<=' → logprob: -2.4477288722991943
    5. '>' → logprob: -2.5727288722991943
    6. ' >' → logprob: -2.9477288722991943
    7. ':' → logprob: -4.572729110717773
    8. '=' → logprob: -4.572729110717773
    9. ' >=' → logprob: -4.822729110717773
    10. ' <' → logprob: -5.072729110717773

Token 828: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0036208622623234987
    2. ' b' → logprob: -5.628620624542236
    3. '=' → logprob: -11.628621101379395
    4. 'k' → logprob: -13.003621101379395
    5. '```' → logprob: -13.253621101379395
    6. 'a' → logprob: -13.628621101379395
    7. ' ' → logprob: -13.753621101379395
    8. '   ' → logprob: -14.128621101379395
    9. '=b' → logprob: -14.253621101379395
    10. '3' → logprob: -14.253621101379395

Token 829: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002480412134900689
    2. ':
' → logprob: -6.002480506896973
    3. '   ' → logprob: -13.752480506896973
    4. ' and' → logprob: -13.752480506896973
    5. ':return' → logprob: -14.002480506896973
    6. '):' → logprob: -14.627480506896973
    7. ':
' → logprob: -15.252480506896973
    8. ' :' → logprob: -15.627480506896973
    9. ',' → logprob: -15.752480506896973
    10. '       ' → logprob: -15.877480506896973

Token 830: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12963539361953735
    2. '       ' → logprob: -2.2546353340148926
    3. 'if' → logprob: -4.129635334014893
    4. ' if' → logprob: -8.25463581085205
    5. 'ans' → logprob: -9.00463581085205
    6. 'pass' → logprob: -10.00463581085205
    7. 'for' → logprob: -10.50463581085205
    8. '
' → logprob: -10.50463581085205
    9. '```' → logprob: -10.87963581085205
    10. ' ans' → logprob: -10.87963581085205

Token 831: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.7675824761390686
    2. '   ' → logprob: -1.3925824165344238
    3. 'for' → logprob: -1.7675824165344238
    4. 'if' → logprob: -2.267582416534424
    5. 'return' → logprob: -5.017582416534424
    6. 'pass' → logprob: -6.017582416534424
    7. ' ans' → logprob: -6.517582416534424
    8. ' for' → logprob: -6.892582416534424
    9. 'print' → logprob: -7.767582416534424
    10. '```' → logprob: -7.892582416534424

Token 832: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029752222821116447
    2. '=' → logprob: -3.529752254486084
    3. '   ' → logprob: -13.779751777648926
    4. ',' → logprob: -16.029752731323242
    5. ' ' → logprob: -16.154752731323242
    6. 'case' → logprob: -16.154752731323242
    7. '.' → logprob: -17.029752731323242
    8. '[:]' → logprob: -17.029752731323242
    9. '＝' → logprob: -17.029752731323242
    10. '```' → logprob: -17.154752731323242

Token 833: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.0004950098809786141
    2. ' assign' → logprob: -7.625494956970215
    3. 'init' → logprob: -13.250494956970215
    4. 'concat' → logprob: -13.250494956970215
    5. '(assign' → logprob: -13.500494956970215
    6. '	assign' → logprob: -14.375494956970215
    7. 'ans' → logprob: -15.000494956970215
    8. '   ' → logprob: -15.500494956970215
    9. 'assigned' → logprob: -15.625494956970215
    10. 'append' → logprob: -15.875494956970215

Token 834: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -1.8624639324116288e-06
    2. '_answer' → logprob: -13.750001907348633
    3. 'ans' → logprob: -14.875001907348633
    4. '```' → logprob: -16.125001907348633
    5. '_answers' → logprob: -16.500001907348633
    6. '\' → logprob: -16.500001907348633
    7. '_an' → logprob: -17.125001907348633
    8. '_' → logprob: -17.500001907348633
    9. '(ans' → logprob: -17.625001907348633
    10. '_ann' → logprob: -17.750001907348633

Token 835: '_case' (ID: 43667)
  Prédit: '_ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -0.04865617677569389
    2. '_case' → logprob: -3.0486562252044678
    3. '_answer' → logprob: -9.923656463623047
    4. 'case' → logprob: -11.798656463623047
    5. 'ans' → logprob: -12.298656463623047
    6. '```' → logprob: -12.923656463623047
    7. '_' → logprob: -13.798656463623047
    8. '`' → logprob: -13.923656463623047
    9. '_code' → logprob: -13.923656463623047
    10. '\' → logprob: -15.298656463623047

Token 836: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25903451442718506
    2. '_case' → logprob: -1.509034514427185
    3. 'case' → logprob: -5.384034633636475
    4. '_ans' → logprob: -6.509034633636475
    5. '2' → logprob: -7.009034633636475
    6. 'Case' → logprob: -10.134034156799316
    7. 'ans' → logprob: -10.259034156799316
    8. '`' → logprob: -12.259034156799316
    9. '[' → logprob: -12.509034156799316
    10. '_' → logprob: -12.759034156799316

Token 837: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.0339031834737398e-05
    2. '(' → logprob: -11.000020027160645
    3. ' (' → logprob: -12.875020027160645
    4. '```' → logprob: -13.875020027160645
    5. '(
' → logprob: -16.50002098083496
    6. '(len' → logprob: -18.00002098083496
    7. '(k' → logprob: -18.87502098083496
    8. '((' → logprob: -19.75002098083496
    9. '(
' → logprob: -19.75002098083496
    10. '(None' → logprob: -19.87502098083496

Token 838: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.703443770878948e-06
    2. ' ,' → logprob: -12.500007629394531
    3. ',
' → logprob: -13.625007629394531
    4. '(flag' → logprob: -13.750007629394531
    5. '‌,' → logprob: -14.625007629394531
    6. ')' → logprob: -14.875007629394531
    7. '   ' → logprob: -14.875007629394531
    8. ',

' → logprob: -16.87500762939453
    9. ',n' → logprob: -17.00000762939453
    10. ',\
' → logprob: -17.00000762939453

Token 839: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.0005530327325686812
    2. ' flag' → logprob: -7.500553131103516
    3. '	flag' → logprob: -18.125553131103516
    4. '(flag' → logprob: -19.375553131103516
    5. 'flags' → logprob: -20.000553131103516
    6. '_flag' → logprob: -20.375553131103516
    7. 'Flag' → logprob: -20.875553131103516
    8. '
' → logprob: -20.875553131103516
    9. '.flag' → logprob: -21.625553131103516
    10. 'f' → logprob: -22.125553131103516

Token 840: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3306015716807451e-05
    2. ' ,' → logprob: -11.37501335144043
    3. ',
' → logprob: -13.50001335144043
    4. ')' → logprob: -15.62501335144043
    5. ' one' → logprob: -16.00001335144043
    6. '‌,' → logprob: -16.50001335144043
    7. '<|end|>' → logprob: -16.87501335144043
    8. ',user' → logprob: -18.37501335144043
    9. 'one' → logprob: -18.37501335144043
    10. ',\
' → logprob: -18.50001335144043

Token 841: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.0067161982879042625
    2. ' one' → logprob: -5.006716251373291
    3. 'two' → logprob: -14.131715774536133
    4. 'three' → logprob: -15.756715774536133
    5. '(one' → logprob: -18.006715774536133
    6. '
' → logprob: -18.131715774536133
    7. '   ' → logprob: -19.256715774536133
    8. '_one' → logprob: -19.756715774536133
    9. ' two' → logprob: -20.006715774536133
    10. '1' → logprob: -20.006715774536133

Token 842: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.5252596464706585e-05
    2. ',t' → logprob: -10.375044822692871
    3. ' ,' → logprob: -11.250044822692871
    4. ',
' → logprob: -14.625044822692871
    5. '   ' → logprob: -15.500044822692871
    6. '[' → logprob: -16.000045776367188
    7. ')' → logprob: -16.875045776367188
    8. '‌,' → logprob: -17.625045776367188
    9. '       ' → logprob: -17.750045776367188
    10. ',\
' → logprob: -17.875045776367188

Token 843: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.038042064756155014
    2. ' two' → logprob: -3.2880420684814453
    3. 'three' → logprob: -15.413042068481445
    4. '(two' → logprob: -15.663042068481445
    5. 'Two' → logprob: -17.413042068481445
    6. '   ' → logprob: -17.538042068481445
    7. '_two' → logprob: -17.788042068481445
    8. '.two' → logprob: -17.913042068481445
    9. ' ' → logprob: -18.163042068481445
    10. '
' → logprob: -18.538042068481445

Token 844: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0564331205387134e-05
    2. ' ,' → logprob: -11.50001049041748
    3. ',
' → logprob: -15.25001049041748
    4. '```' → logprob: -17.250011444091797
    5. '[' → logprob: -18.125011444091797
    6. '3' → logprob: -18.250011444091797
    7. 'three' → logprob: -18.375011444091797
    8. ',

' → logprob: -18.500011444091797
    9. ')' → logprob: -19.000011444091797
    10. '   ' → logprob: -19.250011444091797

Token 845: ' three' (ID: 3407)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.03806283324956894
    2. ' three' → logprob: -3.288062810897827
    3. '   ' → logprob: -11.288063049316406
    4. ' ' → logprob: -12.163063049316406
    5. '       ' → logprob: -12.913063049316406
    6. '
' → logprob: -15.413063049316406
    7. '  ' → logprob: -15.788063049316406
    8. 'Three' → logprob: -15.913063049316406
    9. 'th' → logprob: -15.913063049316406
    10. '_three' → logprob: -16.038063049316406

Token 846: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0068147084675729275
    2. ')
' → logprob: -5.006814479827881
    3. '   ' → logprob: -9.256814956665039
    4. ',' → logprob: -13.131814956665039
    5. ')
' → logprob: -14.131814956665039
    6. ' )' → logprob: -14.881814956665039
    7. ',)' → logprob: -15.506814956665039
    8. ')return' → logprob: -15.631814956665039
    9. ' ' → logprob: -15.756814956665039
    10. ')

' → logprob: -16.25681495666504

Token 847: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -4.842555426876061e-06
    2. ' ans' → logprob: -12.250004768371582
    3. '	ans' → logprob: -20.8750057220459
    4. '(ans' → logprob: -21.2500057220459
    5. 'answer' → logprob: -22.3750057220459
    6. '_ans' → logprob: -24.2500057220459
    7. '   ' → logprob: -24.5000057220459
    8. '
' → logprob: -26.0000057220459
    9. 'Ans' → logprob: -26.1250057220459
    10. '```' → logprob: -26.5000057220459

Token 848: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014650672674179077
    2. '   ' → logprob: -4.264650821685791
    3. ')
' → logprob: -7.639650821685791
    4. ')return' → logprob: -13.764650344848633
    5. '<|end|>' → logprob: -14.014650344848633
    6. ' )' → logprob: -14.139650344848633
    7. '       ' → logprob: -14.139650344848633
    8. ')
' → logprob: -15.139650344848633
    9. ')#' → logprob: -15.389650344848633
    10. '.' → logprob: -15.389650344848633

Token 849: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011504109017550945
    2. 'elif' → logprob: -5.136504173278809
    3. 'else' → logprob: -5.261504173278809
    4. ' else' → logprob: -8.886504173278809
    5. ' elif' → logprob: -9.511504173278809
    6. '```' → logprob: -9.511504173278809
    7. '    
' → logprob: -10.011504173278809
    8. '
' → logprob: -11.636504173278809
    9. '<|end|>' → logprob: -11.636504173278809
    10. '	elif' → logprob: -12.011504173278809

Token 850: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5231323838233948
    2. '   ' → logprob: -1.77313232421875
    3. ' elif' → logprob: -2.14813232421875
    4. 'else' (adapté à ' else') → logprob: -2.39813232421875
    5. ' else' → logprob: -3.52313232421875
    6. '	elif' → logprob: -8.27313232421875
    7. '```' → logprob: -9.52313232421875
    8. '    
' → logprob: -10.64813232421875
    9. ' ' → logprob: -10.77313232421875
    10. '[' → logprob: -11.02313232421875

Token 851: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06202997639775276
    2. ':
' → logprob: -2.812030076980591
    3. ' if' → logprob: -10.937029838562012
    4. '   ' → logprob: -11.687029838562012
    5. ' :' → logprob: -11.812029838562012
    6. ' :
' → logprob: -11.812029838562012
    7. ':
' → logprob: -12.187029838562012
    8. 'if' → logprob: -12.312029838562012
    9. ':

' → logprob: -12.562029838562012
    10. '{' → logprob: -12.812029838562012

Token 852: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2090502381324768
    2. '   ' → logprob: -1.709050178527832
    3. 'if' → logprob: -4.959050178527832
    4. 'elif' → logprob: -7.959050178527832
    5. '```' → logprob: -8.459050178527832
    6. ' if' → logprob: -10.709050178527832
    7. 'else' → logprob: -13.834050178527832
    8. '           ' → logprob: -14.209050178527832
    9. '
' → logprob: -14.709050178527832
    10. 'from' → logprob: -14.709050178527832

Token 853: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.000837384897749871
    2. '   ' → logprob: -7.250837326049805
    3. 'ans' → logprob: -9.250837326049805
    4. '       ' → logprob: -11.375837326049805
    5. ' if' → logprob: -11.375837326049805
    6. 'from' → logprob: -12.750837326049805
    7. '```' → logprob: -13.750837326049805
    8. 'k' → logprob: -14.125837326049805
    9. 'v' → logprob: -14.250837326049805
    10. 'res' → logprob: -14.625837326049805

Token 854: ' k' (ID: 372)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8019034266471863
    2. ' k' → logprob: -1.301903486251831
    3. 'a' → logprob: -1.801903486251831
    4. 'k' → logprob: -2.301903486251831
    5. ' b' → logprob: -4.801903247833252
    6. 'b' → logprob: -6.176903247833252
    7. '   ' → logprob: -7.051903247833252
    8. ' one' → logprob: -7.051903247833252
    9. ' ' → logprob: -7.426903247833252
    10. ' flag' → logprob: -7.551903247833252

Token 855: ' >=' (ID: 5064)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5998778343200684
    2. ' >=' → logprob: -1.5998778343200684
    3. ' ==' → logprob: -1.8498778343200684
    4. '==' → logprob: -3.3498778343200684
    5. '<=' → logprob: -3.4748778343200684
    6. '>=' → logprob: -4.474877834320068
    7. ' >' → logprob: -5.474877834320068
    8. ' <' → logprob: -5.849877834320068
    9. ' *' → logprob: -6.099877834320068
    10. '*' → logprob: -6.099877834320068

Token 856: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.003672756254673004
    2. ' a' → logprob: -6.0036725997924805
    3. 'b' → logprob: -6.8786725997924805
    4. 'count' → logprob: -10.12867259979248
    5. ' b' → logprob: -10.50367259979248
    6. 'len' → logprob: -10.50367259979248
    7. ' ' → logprob: -10.87867259979248
    8. '0' → logprob: -10.87867259979248
    9. 'one' → logprob: -11.25367259979248
    10. 'max' → logprob: -12.37867259979248

Token 857: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17751631140708923
    2. ':
' → logprob: -2.302516222000122
    3. ' and' → logprob: -2.802516222000122
    4. 'and' → logprob: -6.802516460418701
    5. '       ' → logprob: -7.177516460418701
    6. '   ' → logprob: -9.677515983581543
    7. '<|end|>' → logprob: -11.427515983581543
    8. ',' → logprob: -11.552515983581543
    9. ':

' → logprob: -12.052515983581543
    10. '           ' → logprob: -12.427515983581543

Token 858: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3223838806152344
    2. '       ' → logprob: -1.3223838806152344
    3. ':' → logprob: -4.947383880615234
    4. ':
' → logprob: -6.322383880615234
    5. '```' → logprob: -10.197383880615234
    6. '   ' → logprob: -10.572383880615234
    7. ' ans' → logprob: -10.697383880615234
    8. 'ans' → logprob: -10.822383880615234
    9. ' and' → logprob: -11.322383880615234
    10. '               ' → logprob: -11.447383880615234

Token 859: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.013552164658904076
    2. ' ans' → logprob: -4.513552188873291
    3. '           ' → logprob: -6.013552188873291
    4. '	ans' → logprob: -10.638551712036133
    5. '(ans' → logprob: -11.513551712036133
    6. '       ' → logprob: -11.513551712036133
    7. '   ' → logprob: -12.388551712036133
    8. 'if' → logprob: -13.013551712036133
    9. 'answer' → logprob: -13.138551712036133
    10. 'for' → logprob: -13.513551712036133

Token 860: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196846812963486
    2. '=' → logprob: -2.8119685649871826
    3. '   ' → logprob: -14.186968803405762
    4. ' ' → logprob: -16.811967849731445
    5. '[' → logprob: -17.811967849731445
    6. ',' → logprob: -17.811967849731445
    7. '    ' → logprob: -18.061967849731445
    8. ' =
' → logprob: -18.186967849731445
    9. '[:]' → logprob: -18.311967849731445
    10. '       ' → logprob: -18.561967849731445

Token 861: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.011048408225178719
    2. ' assign' → logprob: -4.511048316955566
    3. '(assign' → logprob: -15.261048316955566
    4. '	assign' → logprob: -16.011049270629883
    5. 'ass' → logprob: -16.386049270629883
    6. 'assing' → logprob: -17.636049270629883
    7. '   ' → logprob: -17.761049270629883
    8. 'assigned' → logprob: -17.886049270629883
    9. 'append' → logprob: -18.136049270629883
    10. '.assign' → logprob: -18.261049270629883

Token 862: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -9.150362166110426e-05
    2. 'ans' → logprob: -9.375091552734375
    3. '_answer' → logprob: -12.125091552734375
    4. '(ans' → logprob: -14.750091552734375
    5. 'Ans' → logprob: -15.250091552734375
    6. '_case' → logprob: -15.625091552734375
    7. '_assign' → logprob: -15.875091552734375
    8. '_ass' → logprob: -16.375091552734375
    9. '	ans' → logprob: -17.125091552734375
    10. '_ann' → logprob: -17.375091552734375

Token 863: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -2.1008713702030946e-06
    2. 'case' → logprob: -13.250001907348633
    3. '_ans' → logprob: -16.375001907348633
    4. 'Case' → logprob: -16.500001907348633
    5. '_answer' → logprob: -16.875001907348633
    6. '(case' → logprob: -17.000001907348633
    7. '_array' → logprob: -19.000001907348633
    8. '_from' → logprob: -19.125001907348633
    9. '```' → logprob: -19.125001907348633
    10. ' case' → logprob: -19.250001907348633

Token 864: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019148342544212937
    2. '1' → logprob: -6.376914978027344
    3. '(n' → logprob: -9.126914978027344
    4. '_case' → logprob: -9.876914978027344
    5. '_func' → logprob: -11.126914978027344
    6. '```' → logprob: -11.501914978027344
    7. 'case' → logprob: -11.876914978027344
    8. '(' → logprob: -12.001914978027344
    9. 'func' → logprob: -13.126914978027344
    10. '[n' → logprob: -13.626914978027344

Token 865: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.04893875867128372
    2. '2' → logprob: -3.173938751220703
    3. 'b' → logprob: -5.423938751220703
    4. 'case' → logprob: -7.173938751220703
    5. '_case' → logprob: -7.423938751220703
    6. '_a' → logprob: -9.798938751220703
    7. '1' → logprob: -10.798938751220703
    8. '```' → logprob: -10.923938751220703
    9. '(' → logprob: -11.048938751220703
    10. '(a' → logprob: -11.298938751220703

Token 866: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.93710636976175e-05
    2. '(' → logprob: -9.875099182128906
    3. ' (' → logprob: -10.000099182128906
    4. '(
' → logprob: -13.250099182128906
    5. '```' → logprob: -14.500099182128906
    6. '   ' → logprob: -16.625099182128906
    7. '(None' → logprob: -17.625099182128906
    8. ' ' → logprob: -17.875099182128906
    9. '       ' → logprob: -18.500099182128906
    10. '(len' → logprob: -18.625099182128906

Token 867: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.04892173409461975
    2. ',' → logprob: -3.048921823501587
    3. ',n' → logprob: -8.548921585083008
    4. ' (' → logprob: -9.673921585083008
    5. '(' → logprob: -10.798921585083008
    6. ')' → logprob: -11.048921585083008
    7. ' ,' → logprob: -11.173921585083008
    8. '       ' → logprob: -11.673921585083008
    9. ')(' → logprob: -12.548921585083008
    10. 'n' → logprob: -12.548921585083008

Token 868: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.23685181140899658
    2. 'n' → logprob: -1.6118518114089966
    3. ' flag' → logprob: -4.736851692199707
    4. ' n' → logprob: -6.111851692199707
    5. 'k' → logprob: -8.986851692199707
    6. 'b' → logprob: -9.111851692199707
    7. 'a' → logprob: -9.611851692199707
    8. '   ' → logprob: -10.361851692199707
    9. '           ' → logprob: -11.486851692199707
    10. '(flag' → logprob: -11.486851692199707

Token 869: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002469158498570323
    2. ',n' → logprob: -8.62524700164795
    3. ' ,' → logprob: -9.75024700164795
    4. '           ' → logprob: -12.50024700164795
    5. '(n' → logprob: -13.00024700164795
    6. ',k' → logprob: -13.50024700164795
    7. '               ' → logprob: -14.75024700164795
    8. '```' → logprob: -14.75024700164795
    9. ')' → logprob: -15.50024700164795
    10. ',
' → logprob: -15.62524700164795

Token 870: ' three' (ID: 3407)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.005233882926404476
    2. ' three' → logprob: -5.2552337646484375
    3. '_three' → logprob: -17.255233764648438
    4. 'Three' → logprob: -18.755233764648438
    5. '
' → logprob: -19.380233764648438
    6. '3' → logprob: -19.755233764648438
    7. '   ' → logprob: -20.255233764648438
    8. '三' → logprob: -20.505233764648438
    9. 'k' → logprob: -20.630233764648438
    10. '```' → logprob: -21.630233764648438

Token 871: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0683535037969705e-05
    2. ' ,' → logprob: -11.50001049041748
    3. ' one' → logprob: -15.25001049041748
    4. 'one' → logprob: -16.750011444091797
    5. ',
' → logprob: -16.875011444091797
    6. ',user' → logprob: -17.250011444091797
    7. ')' → logprob: -18.125011444091797
    8. '‌,' → logprob: -18.750011444091797
    9. '(one' → logprob: -18.750011444091797
    10. '```' → logprob: -18.750011444091797

Token 872: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.10021670162677765
    2. ' one' → logprob: -2.3502166271209717
    3. 'two' → logprob: -11.60021686553955
    4. ' two' → logprob: -14.60021686553955
    5. 'One' → logprob: -15.72521686553955
    6. '_one' → logprob: -15.97521686553955
    7. '   ' → logprob: -16.850215911865234
    8. '(one' → logprob: -16.850215911865234
    9. '1' → logprob: -17.225215911865234
    10. '
' → logprob: -17.475215911865234

Token 873: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016754455282352865
    2. ',t' → logprob: -8.750167846679688
    3. ' ,' → logprob: -11.625167846679688
    4. ',
' → logprob: -17.125167846679688
    5. ')' → logprob: -18.000167846679688
    6. '   ' → logprob: -18.125167846679688
    7. '```' → logprob: -19.375167846679688
    8. 'two' → logprob: -19.500167846679688
    9. '2' → logprob: -19.750167846679688
    10. '(two' → logprob: -19.875167846679688

Token 874: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.023245712742209435
    2. ' two' → logprob: -3.7732458114624023
    3. '(two' → logprob: -15.898245811462402
    4. '.two' → logprob: -16.648244857788086
    5. '_two' → logprob: -18.023244857788086
    6. 'Two' → logprob: -18.273244857788086
    7. '   ' → logprob: -18.523244857788086
    8. 'tw' → logprob: -19.898244857788086
    9. 'three' → logprob: -19.898244857788086
    10. '           ' → logprob: -19.898244857788086

Token 875: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3306015716807451e-05
    2. ' ,' → logprob: -11.25001335144043
    3. ')' → logprob: -16.62501335144043
    4. '```' → logprob: -17.75001335144043
    5. ' ans' → logprob: -18.50001335144043
    6. '   ' → logprob: -18.75001335144043
    7. ',
' → logprob: -18.75001335144043
    8. '(ans' → logprob: -19.25001335144043
    9. '[' → logprob: -19.37501335144043
    10. '           ' → logprob: -19.62501335144043

Token 876: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0015024791937321424
    2. ' ans' → logprob: -6.501502513885498
    3. '	ans' → logprob: -16.376502990722656
    4. '(ans' → logprob: -17.126502990722656
    5. '   ' → logprob: -19.126502990722656
    6. 'Ans' → logprob: -19.501502990722656
    7. '           ' → logprob: -19.626502990722656
    8. ' ' → logprob: -19.876502990722656
    9. 'answer' → logprob: -20.001502990722656
    10. '_ans' → logprob: -20.001502990722656

Token 877: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6804139614105225
    2. ')
' → logprob: -1.1804139614105225
    3. ')' → logprob: -1.6804139614105225
    4. '   ' → logprob: -9.055414199829102
    5. 'else' → logprob: -11.680414199829102
    6. '
' → logprob: -12.180414199829102
    7. ')
' → logprob: -12.305414199829102
    8. ' else' → logprob: -13.305414199829102
    9. '           ' → logprob: -13.555414199829102
    10. ' )
' → logprob: -13.680414199829102

Token 878: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05189274251461029
    2. 'else' → logprob: -3.1768927574157715
    3. ' else' → logprob: -5.0518927574157715
    4. '   ' → logprob: -6.5518927574157715
    5. '```' → logprob: -7.1768927574157715
    6. 'elif' → logprob: -8.926892280578613
    7. '
' → logprob: -10.051892280578613
    8. '<|end|>' → logprob: -10.426892280578613
    9. '	else' → logprob: -10.801892280578613
    10. '           ' → logprob: -11.176892280578613

Token 879: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3196747303009033
    2. '       ' → logprob: -1.3196747303009033
    3. ' else' → logprob: -5.069674491882324
    4. '   ' → logprob: -9.694674491882324
    5. 'elif' → logprob: -10.319674491882324
    6. '```' → logprob: -11.569674491882324
    7. '	else' → logprob: -13.194674491882324
    8. '
' → logprob: -13.694674491882324
    9. '           ' → logprob: -15.069674491882324
    10. '	' → logprob: -15.694674491882324

Token 880: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.01596398465335369
    2. ':' → logprob: -4.515964031219482
    3. '       ' → logprob: -5.640964031219482
    4. '           ' → logprob: -6.640964031219482
    5. '   ' → logprob: -10.765963554382324
    6. '{
' → logprob: -11.515963554382324
    7. '():
' → logprob: -12.515963554382324
    8. ':

' → logprob: -12.640963554382324
    9. '{' → logprob: -13.390963554382324
    10. '```' → logprob: -13.640963554382324

Token 881: '           ' (ID: 352)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.8231062293052673
    2. 'ans' → logprob: -1.198106288909912
    3. '       ' → logprob: -1.448106288909912
    4. '           ' → logprob: -3.948106288909912
    5. '(ans' → logprob: -5.573106288909912
    6. '```' → logprob: -7.698106288909912
    7. '	ans' → logprob: -7.823106288909912
    8. '   ' → logprob: -9.073105812072754
    9. 'answer' → logprob: -10.448105812072754
    10. '               ' → logprob: -11.073105812072754

Token 882: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.029964420944452286
    2. ' ans' → logprob: -3.5299644470214844
    3. '           ' → logprob: -8.529964447021484
    4. '	ans' → logprob: -12.029964447021484
    5. '(ans' → logprob: -12.279964447021484
    6. 'answer' → logprob: -12.404964447021484
    7. '       ' → logprob: -14.404964447021484
    8. '_ans' → logprob: -14.779964447021484
    9. '```' → logprob: -14.904964447021484
    10. '
' → logprob: -15.279964447021484

Token 883: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692810595035553
    2. ' =' → logprob: -2.1269280910491943
    3. '＝' → logprob: -18.126928329467773
    4. '=sys' → logprob: -19.251928329467773
    5. '=
' → logprob: -19.376928329467773
    6. '=n' → logprob: -19.376928329467773
    7. '=line' → logprob: -19.751928329467773
    8. '=}' → logprob: -20.001928329467773
    9. '=True' → logprob: -20.376928329467773
    10. '.=' → logprob: -20.501928329467773

Token 884: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -2.935296834039036e-06
    2. '           ' → logprob: -13.25000286102295
    3. ' assign' → logprob: -13.87500286102295
    4. '(assign' → logprob: -16.125003814697266
    5. '   ' → logprob: -18.625003814697266
    6. '          ' → logprob: -19.500003814697266
    7. '	assign' → logprob: -19.750003814697266
    8. '       ' → logprob: -19.750003814697266
    9. '.assign' → logprob: -20.125003814697266
    10. '               ' → logprob: -20.625003814697266

Token 885: '_ans' (ID: 146254)
  Prédit: '_ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ans' → logprob: -1.1994775377388578e-05
    2. 'ans' → logprob: -11.750012397766113
    3. 'Ans' → logprob: -13.875012397766113
    4. '_assign' → logprob: -14.000012397766113
    5. '_answer' → logprob: -14.500012397766113
    6. '_from' → logprob: -14.625012397766113
    7. '_ass' → logprob: -14.750012397766113
    8. 'assign' → logprob: -15.000012397766113
    9. '_as' → logprob: -16.250011444091797
    10. '_pos' → logprob: -16.250011444091797

Token 886: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -4.1318875446449965e-05
    2. 'case' → logprob: -10.125041007995605
    3. '2' → logprob: -14.000041007995605
    4. 'Case' → logprob: -15.750041007995605
    5. '-case' → logprob: -17.000041961669922
    6. ' case' → logprob: -17.375041961669922
    7. 'c' → logprob: -17.500041961669922
    8. 'ase' → logprob: -17.625041961669922
    9. '_c' → logprob: -17.875041961669922
    10. '_CASE' → logprob: -18.250041961669922

Token 887: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. 'case' → logprob: -14.375000953674316
    3. '_case' → logprob: -17.0
    4. ' ' → logprob: -17.25
    5. 'assign' → logprob: -17.5
    6. 'def' → logprob: -17.5
    7. '   ' → logprob: -18.25
    8. 'Case' → logprob: -18.375
    9. '1' → logprob: -18.75
    10. 'b' → logprob: -18.875

Token 888: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.522638169466518e-05
    2. 'a' → logprob: -10.625024795532227
    3. '1' → logprob: -14.750024795532227
    4. '2' → logprob: -14.875024795532227
    5. 'case' → logprob: -16.500024795532227
    6. 'б' → logprob: -17.000024795532227
    7. '6' → logprob: -17.750024795532227
    8. '
' → logprob: -18.375024795532227
    9. '```' → logprob: -18.625024795532227
    10. 'ab' → logprob: -18.625024795532227

Token 889: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -3.650518920039758e-06
    2. '(' → logprob: -12.750003814697266
    3. '(
' → logprob: -15.000003814697266
    4. '```' → logprob: -15.125003814697266
    5. ' (' → logprob: -16.125003814697266
    6. 'n' → logprob: -16.750003814697266
    7. '﻿' → logprob: -20.000003814697266
    8. '   ' → logprob: -20.375003814697266
    9. '(int' → logprob: -20.875003814697266
    10. '(None' → logprob: -20.875003814697266

Token 890: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.908022285439074e-05
    2. ',n' → logprob: -9.750059127807617
    3. ' ,' → logprob: -14.375059127807617
    4. '(n' → logprob: -16.875059127807617
    5. 'n' → logprob: -17.125059127807617
    6. 'flag' → logprob: -17.250059127807617
    7. '```' → logprob: -17.375059127807617
    8. ',
' → logprob: -17.500059127807617
    9. '   ' → logprob: -17.750059127807617
    10. ' n' → logprob: -19.125059127807617

Token 891: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.00599219324067235
    2. ' flag' → logprob: -5.130992412567139
    3. 'n' → logprob: -9.75599193572998
    4. ' n' → logprob: -12.75599193572998
    5. '	flag' → logprob: -13.75599193572998
    6. '   ' → logprob: -14.88099193572998
    7. '(flag' → logprob: -14.88099193572998
    8. 'one' → logprob: -15.25599193572998
    9. ' ' → logprob: -15.75599193572998
    10. '
' → logprob: -16.005992889404297

Token 892: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.967624019831419e-05
    2. ' ,' → logprob: -9.750060081481934
    3. '   ' → logprob: -14.750060081481934
    4. ',
' → logprob: -15.625060081481934
    5. ',n' → logprob: -16.125059127807617
    6. 'three' → logprob: -16.250059127807617
    7. ')' → logprob: -16.375059127807617
    8. '```' → logprob: -16.500059127807617
    9. '3' → logprob: -16.625059127807617
    10. ' three' → logprob: -16.750059127807617

Token 893: ' three' (ID: 3407)
  Prédit: 'three'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'three' → logprob: -0.005250949412584305
    2. ' three' → logprob: -5.255250930786133
    3. '   ' → logprob: -12.005250930786133
    4. 'one' → logprob: -12.130250930786133
    5. 'flag' → logprob: -12.380250930786133
    6. '3' → logprob: -15.380250930786133
    7. ' ' → logprob: -15.505250930786133
    8. '_three' → logprob: -15.630250930786133
    9. 'third' → logprob: -15.755250930786133
    10. ' flag' → logprob: -16.130250930786133

Token 894: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.931863051955588e-05
    2. ' ,' → logprob: -9.750059127807617
    3. ' one' → logprob: -14.500059127807617
    4. 'one' → logprob: -15.500059127807617
    5. ',
' → logprob: -16.375059127807617
    6. '   ' → logprob: -18.250059127807617
    7. '(one' → logprob: -18.250059127807617
    8. ' ' → logprob: -18.375059127807617
    9. '),' → logprob: -18.375059127807617
    10. '```' → logprob: -18.625059127807617

Token 895: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.3132629096508026
    2. 'one' → logprob: -1.313262939453125
    3. 'two' → logprob: -14.688262939453125
    4. ' two' → logprob: -14.938262939453125
    5. '1' → logprob: -15.813262939453125
    6. ' ' → logprob: -16.563262939453125
    7. 'One' → logprob: -16.563262939453125
    8. '_one' → logprob: -17.063262939453125
    9. '(one' → logprob: -17.313262939453125
    10. '   ' → logprob: -18.563262939453125

Token 896: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.310693111619912e-05
    2. ',t' → logprob: -10.750042915344238
    3. ' ,' → logprob: -10.750042915344238
    4. ',
' → logprob: -16.375043869018555
    5. '```' → logprob: -18.250043869018555
    6. '2' → logprob: -18.625043869018555
    7. '[' → logprob: -19.000043869018555
    8. ',s' → logprob: -19.375043869018555
    9. ')' → logprob: -19.625043869018555
    10. '，' → logprob: -19.875043869018555

Token 897: ' two' (ID: 1920)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.10020667314529419
    2. ' two' → logprob: -2.3502066135406494
    3. '(two' → logprob: -16.97520637512207
    4. '_two' → logprob: -17.60020637512207
    5. '.two' → logprob: -18.60020637512207
    6. 'Two' → logprob: -18.60020637512207
    7. 'tw' → logprob: -18.85020637512207
    8. 'three' → logprob: -21.10020637512207
    9. '
' → logprob: -22.35020637512207
    10. '-two' → logprob: -22.35020637512207

Token 898: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ' ,' → logprob: -13.00000286102295
    3. ')' → logprob: -16.500001907348633
    4. '```' → logprob: -17.625001907348633
    5. ',
' → logprob: -18.125001907348633
    6. '   ' → logprob: -18.625001907348633
    7. '),' → logprob: -18.625001907348633
    8. '           ' → logprob: -19.875001907348633
    9. 'def' → logprob: -20.125001907348633
    10. ' ans' → logprob: -20.125001907348633

Token 899: ' ans' (ID: 3345)
  Prédit: 'two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'two' → logprob: -0.08287989348173141
    2. 'ans' → logprob: -2.5828797817230225
    3. ' two' → logprob: -5.582880020141602
    4. ' ans' → logprob: -8.457880020141602
    5. 'tw' → logprob: -12.457880020141602
    6. 'Two' → logprob: -12.957880020141602
    7. '
' → logprob: -13.957880020141602
    8. 't' → logprob: -15.332880020141602
    9. '_two' → logprob: -15.832880020141602
    10. 'answer' → logprob: -16.0828800201416

Token 900: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012763085775077343
    2. ')
' → logprob: -4.637763023376465
    3. '   ' → logprob: -6.512763023376465
    4. ',' → logprob: -6.512763023376465
    5. ' )' → logprob: -11.137763023376465
    6. ' ' → logprob: -12.137763023376465
    7. ')

' → logprob: -12.262763023376465
    8. ')
' → logprob: -12.762763023376465
    9. ')`
' → logprob: -13.387763023376465
    10. '  ' → logprob: -13.887763023376465

Token 901: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00037681119283661246
    2. '
' → logprob: -8.37537670135498
    3. 'print' → logprob: -9.00037670135498
    4. '    
' → logprob: -11.62537670135498
    5. '```' → logprob: -11.87537670135498
    6. ' print' → logprob: -12.25037670135498
    7. 'for' → logprob: -13.87537670135498
    8. '
' → logprob: -14.75037670135498
    9. '<|end|>' → logprob: -15.37537670135498
    10. ' for' → logprob: -15.62537670135498

Token 902: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06053721532225609
    2. '   ' → logprob: -3.060537099838257
    3. ' print' → logprob: -4.560537338256836
    4. 'for' → logprob: -6.810537338256836
    5. ' for' → logprob: -8.060537338256836
    6. '```' → logprob: -12.810537338256836
    7. 'return' → logprob: -13.935537338256836
    8. '
' → logprob: -14.685537338256836
    9. '	print' → logprob: -15.435537338256836
    10. ' return' → logprob: -16.435537338256836

Token 903: '_output' (ID: 16732)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.005913388915359974
    2. '('' → logprob: -5.255913257598877
    3. '("' → logprob: -7.505913257598877
    4. '(' → logprob: -9.005913734436035
    5. '(*)' → logprob: -12.630913734436035
    6. '(*(' → logprob: -12.630913734436035
    7. '('\' → logprob: -15.505913734436035
    8. ' (*' → logprob: -16.63091278076172
    9. '(
' → logprob: -17.13091278076172
    10. '()' → logprob: -17.75591278076172

Token 904: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09409129619598389
    2. '("("' → logprob: -3.3440914154052734
    3. '('' → logprob: -4.094091415405273
    4. '(ans' → logprob: -4.219091415405273
    5. '(*' → logprob: -4.344091415405273
    6. '(
' → logprob: -5.719091415405273
    7. '()' → logprob: -6.094091415405273
    8. '("' → logprob: -6.594091415405273
    9. '=' → logprob: -7.219091415405273
    10. ' =' → logprob: -7.469091415405273

Token 905: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.575563020305708e-05
    2. '()' → logprob: -10.375065803527832
    3. '())' → logprob: -10.500065803527832
    4. ' )' → logprob: -12.625065803527832
    5. ')
' → logprob: -13.375065803527832
    6. '[])' → logprob: -14.125065803527832
    7. '))' → logprob: -14.500065803527832
    8. ')`' → logprob: -15.250065803527832
    9. '`)' → logprob: -16.250064849853516
    10. '[' → logprob: -16.250064849853516

Token 906: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011069164611399174
    2. '
' → logprob: -4.511069297790527
    3. '

' → logprob: -11.511069297790527
    4. ' def' → logprob: -12.511069297790527
    5. 'ndef' → logprob: -13.011069297790527
    6. ':def' → logprob: -13.261069297790527
    7. '```' → logprob: -13.386069297790527
    8. '_def' → logprob: -14.761069297790527
    9. '(' → logprob: -15.011069297790527
    10. '(
' → logprob: -15.261069297790527

Token 907: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.25203582644462585
    2. ' print' → logprob: -1.5020358562469482
    3. '_print' → logprob: -9.252036094665527
    4. '(print' → logprob: -12.377036094665527
    5. '_' → logprob: -13.002036094665527
    6. ' ' → logprob: -13.252036094665527
    7. '	print' → logprob: -14.002036094665527
    8. 'def' → logprob: -15.127036094665527
    9. '__' → logprob: -15.627036094665527
    10. '.print' → logprob: -15.627036094665527

Token 908: '_output' (ID: 16732)
  Prédit: '_output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_output' → logprob: -0.003381961490958929
    2. '("_' → logprob: -6.753381729125977
    3. '(' → logprob: -6.878381729125977
    4. '_answer' → logprob: -7.878381729125977
    5. '_' → logprob: -8.128381729125977
    6. '('_' → logprob: -8.253381729125977
    7. 'output' → logprob: -9.753381729125977
    8. '_ans' → logprob: -9.878381729125977
    9. '("' → logprob: -10.753381729125977
    10. '_out' → logprob: -10.878381729125977

Token 909: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -6.372916686814278e-05
    2. '(' → logprob: -10.6250638961792
    3. '(arr' → logprob: -10.7500638961792
    4. '(answer' → logprob: -11.3750638961792
    5. '(lst' → logprob: -12.6250638961792
    6. ' (' → logprob: -13.5000638961792
    7. '(def' → logprob: -14.5000638961792
    8. 'def' → logprob: -15.3750638961792
    9. '(
' → logprob: -15.5000638961792
    10. 'ans' → logprob: -15.5000638961792

Token 910: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08087467402219772
    2. '):
' → logprob: -2.5808746814727783
    3. '():' → logprob: -6.705874443054199
    4. '():
' → logprob: -8.3308744430542
    5. ')' → logprob: -8.4558744430542
    6. '()' → logprob: -8.4558744430542
    7. '):
' → logprob: -9.4558744430542
    8. ' ):' → logprob: -12.2058744430542
    9. ':' → logprob: -12.5808744430542
    10. '()):
' → logprob: -13.0808744430542

Token 911: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004637673031538725
    2. '   ' → logprob: -5.504637718200684
    3. ' print' → logprob: -7.504637718200684
    4. 'for' → logprob: -11.754637718200684
    5. '```' → logprob: -14.254637718200684
    6. ' for' → logprob: -17.004636764526367
    7. '	print' → logprob: -17.754636764526367
    8. '`' → logprob: -18.879636764526367
    9. '
' → logprob: -20.254636764526367
    10. '    
' → logprob: -21.379636764526367

Token 912: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.650518920039758e-06
    2. ' print' → logprob: -13.000003814697266
    3. 'for' → logprob: -13.750003814697266
    4. '   ' → logprob: -15.375003814697266
    5. '
' → logprob: -18.750003814697266
    6. '```' → logprob: -21.250003814697266
    7. '    
' → logprob: -21.625003814697266
    8. ' for' → logprob: -22.625003814697266
    9. 'p' → logprob: -23.125003814697266
    10. '`' → logprob: -23.500003814697266

Token 913: '(*' (ID: 9000)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.4038655161857605
    2. '(*' → logprob: -1.1538655757904053
    3. '("' → logprob: -4.153865337371826
    4. '(' → logprob: -6.778865337371826
    5. '*' → logprob: -12.528865814208984
    6. '(*(' → logprob: -12.528865814208984
    7. ''' → logprob: -13.778865814208984
    8. '"' → logprob: -14.403865814208984
    9. '(*)' → logprob: -14.903865814208984
    10. '()' → logprob: -15.903865814208984

Token 914: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.9361264946837764e-07
    2. '(ans' → logprob: -16.25
    3. ' ans' → logprob: -16.75
    4. '[' → logprob: -19.5
    5. '	ans' → logprob: -20.5
    6. 'ann' → logprob: -22.75
    7. 'map' → logprob: -23.5
    8. 'answer' → logprob: -23.625
    9. '
' → logprob: -23.625
    10. '_ans' → logprob: -23.875

Token 915: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. '<|end|>' → logprob: -13.75000286102295
    3. ')
' → logprob: -14.00000286102295
    4. '+' → logprob: -14.25000286102295
    5. ' )' → logprob: -15.62500286102295
    6. ',' → logprob: -16.500003814697266
    7. ')return' → logprob: -16.750003814697266
    8. '),' → logprob: -16.875003814697266
    9. ')#' → logprob: -17.500003814697266
    10. ')add' → logprob: -17.500003814697266

Token 916: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00025561772054061294
    2. '```' → logprob: -9.125255584716797
    3. '<|end|>' → logprob: -9.250255584716797
    4. ' if' → logprob: -10.125255584716797
    5. '#' → logprob: -12.250255584716797
    6. '...' → logprob: -13.375255584716797
    7. '
' → logprob: -13.750255584716797
    8. '<|end|>' → logprob: -14.375255584716797
    9. 'main' → logprob: -14.500255584716797
    10. '\' → logprob: -15.250255584716797

Token 917: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 915
Tokens correctement prédits (1ère position, stricte): 413
Tokens correctement prédits (1ère position, avec adaptation): 463
Tokens correctement prédits (top 10): 827
Précision stricte (1ère position): 45.14%
Précision adaptée (1ère position): 50.60%
Précision (top 10): 90.38%
================================================================================
