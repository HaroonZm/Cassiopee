================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from numpy import zeros, roll

def get_inputs():
    n, M = map(int, input().split())
    return n, M

def compute_l(n):
    return n * 3 + 1

def initialize_d(l, n):
    d = zeros((l, n * 5), dtype='int64')
    d[0][0] = 1
    return d

def get_indices(i):
    j = i - 1
    k = i - 2
    return j, k

def compute_term1(d, i, k, j):
    if i < 3:
        return zeros_like_row(d)
    return d[i-3] * k * j

def compute_term2(d, k, j):
    if k < 0:
        return zeros_like_row(d)
    return roll(d[k], -1) * j

def compute_term3(d, j):
    if j < 0:
        return zeros_like_row(d)
    return roll(d[j], 1)

def zeros_like_row(d):
    return zeros(d.shape[1], dtype='int64')

def update_row(d, i, M):
    j, k = get_indices(i)
    term1 = compute_term1(d, i, k, j)
    term2 = compute_term2(d, k, j)
    term3 = compute_term3(d, j)
    d[i] = (term1 + term2 + term3) % M

def process(d, l, M):
    for i in range(1, l):
        update_row(d, i, M)

def final_sum(d, l, M):
    return int(sum(d[-1][:l]) % M)

def main():
    n, M = get_inputs()
    l = compute_l(n)
    d = initialize_d(l, n)
    process(d, l, M)
    result = final_sum(d, l, M)
    print(result)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' zeros' (ID: 42274)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.6354337930679321
    2. ' array' → logprob: -0.7604337930679321
    3. ' as' → logprob: -7.010433673858643
    4. 'random' → logprob: -7.010433673858643
    5. ' random' → logprob: -7.385433673858643
    6. ' ndarray' → logprob: -8.7604341506958
    7. 'empty' → logprob: -10.0104341506958
    8. '```' → logprob: -10.3854341506958
    9. ' np' → logprob: -10.6354341506958
    10. 'as' → logprob: -10.6354341506958

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011927806917810813
    2. '.' → logprob: -9.50011920928955
    3. '(
' → logprob: -10.87511920928955
    4. '\(' → logprob: -11.25011920928955
    5. ' (' → logprob: -12.25011920928955
    6. '((' → logprob: -13.00011920928955
    7. '(

' → logprob: -13.87511920928955
    8. '()' → logprob: -14.12511920928955
    9. '```' → logprob: -14.12511920928955
    10. '('' → logprob: -14.62511920928955

Token 5: ' roll' (ID: 8465)
  Prédit: ' ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ones' → logprob: -0.5483189821243286
    2. 'ones' → logprob: -0.9233189821243286
    3. 'empty' → logprob: -3.923318862915039
    4. 'array' → logprob: -5.673318862915039
    5. ' empty' → logprob: -7.548318862915039
    6. ' array' → logprob: -7.673318862915039
    7. 'dot' → logprob: -8.423318862915039
    8. 'shape' → logprob: -8.798318862915039
    9. 'full' → logprob: -9.548318862915039
    10. '```' → logprob: -9.798318862915039

Token 6: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005135946557857096
    2. '(
' → logprob: -8.500514030456543
    3. '\(' → logprob: -8.875514030456543
    4. '.' → logprob: -9.875514030456543
    5. '#' → logprob: -10.875514030456543
    6. ',' → logprob: -11.125514030456543
    7. ' (' → logprob: -11.625514030456543
    8. '\' → logprob: -11.625514030456543
    9. '`' → logprob: -11.750514030456543
    10. '[' → logprob: -11.875514030456543

Token 7: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021783350966870785
    2. '(
' → logprob: -6.502178192138672
    3. '\(' → logprob: -8.002178192138672
    4. '```' → logprob: -9.627178192138672
    5. '#' → logprob: -9.752178192138672
    6. '\' → logprob: -10.127178192138672
    7. '.' → logprob: -10.627178192138672
    8. '`' → logprob: -10.752178192138672
    9. 'import' → logprob: -11.002178192138672
    10. 'a' → logprob: -11.002178192138672

Token 8: ' get' (ID: 717)
  Prédit: ' initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initialize' → logprob: -1.0545710325241089
    2. ' array' → logprob: -1.8045710325241089
    3. ' shift' → logprob: -1.9295710325241089
    4. ' matrix' → logprob: -2.4295711517333984
    5. ' create' → logprob: -2.6795711517333984
    6. ' my' → logprob: -2.9295711517333984
    7. ' calculate' → logprob: -3.1795711517333984
    8. ' zeros' → logprob: -4.554571151733398
    9. ' compute' → logprob: -4.679571151733398
    10. ' ' → logprob: -5.179571151733398

Token 9: '_inputs' (ID: 67304)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.5406073927879333
    2. '_' → logprob: -1.6656074523925781
    3. '_state' → logprob: -3.540607452392578
    4. '_shift' → logprob: -3.790607452392578
    5. '_next' → logprob: -4.040607452392578
    6. '_max' → logprob: -4.040607452392578
    7. '_shape' → logprob: -4.165607452392578
    8. '_block' → logprob: -4.415607452392578
    9. '_velocity' → logprob: -4.665607452392578
    10. '_size' → logprob: -4.915607452392578

Token 10: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01195346936583519
    2. '_' → logprob: -5.136953353881836
    3. '():' → logprob: -5.386953353881836
    4. '(_' → logprob: -8.636953353881836
    5. '):' → logprob: -9.011953353881836
    6. '```' → logprob: -9.136953353881836
    7. ' (' → logprob: -9.511953353881836
    8. '(:' → logprob: -9.636953353881836
    9. ':' → logprob: -9.636953353881836
    10. 's' → logprob: -9.761953353881836

Token 11: '   ' (ID: 271)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.25647473335266113
    2. '   ' → logprob: -2.131474733352661
    3. '(' → logprob: -2.381474733352661
    4. '```' → logprob: -5.006474494934082
    5. '()' → logprob: -5.756474494934082
    6. ':' → logprob: -6.256474494934082
    7. '[' → logprob: -6.881474494934082
    8. ''' → logprob: -7.881474494934082
    9. ' ():' → logprob: -8.131474494934082
    10. '[:]' → logprob: -8.506474494934082

Token 12: ' n' (ID: 297)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.079423189163208
    2. ' inputs' → logprob: -1.579423189163208
    3. 'inputs' → logprob: -2.079423189163208
    4. '   ' → logprob: -2.204423189163208
    5. 'return' → logprob: -2.454423189163208
    6. ' ' → logprob: -2.954423189163208
    7. '[' → logprob: -3.579423189163208
    8. ' x' → logprob: -4.704422950744629
    9. ' [' → logprob: -5.079422950744629
    10. 'x' → logprob: -5.079422950744629

Token 13: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24545323848724365
    2. ' =' → logprob: -2.495453357696533
    3. 'um' → logprob: -3.370453357696533
    4. '_inputs' → logprob: -3.495453357696533
    5. '=' → logprob: -3.620453357696533
    6. 'p' → logprob: -3.745453357696533
    7. 'umber' → logprob: -5.120453357696533
    8. ' _' → logprob: -5.370453357696533
    9. '   ' → logprob: -5.870453357696533
    10. '_samples' → logprob: -6.495453357696533

Token 14: ' M' (ID: 391)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.33687832951545715
    2. ' p' → logprob: -2.3368782997131348
    3. 'm' → logprob: -3.0868782997131348
    4. ' k' → logprob: -3.0868782997131348
    5. ' t' → logprob: -3.5868782997131348
    6. ' d' → logprob: -3.7118782997131348
    7. 'k' → logprob: -5.086878299713135
    8. 'p' → logprob: -5.336878299713135
    9. ' T' → logprob: -5.336878299713135
    10. ' x' → logprob: -5.961878299713135

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1610059291124344
    2. '=' → logprob: -1.911005973815918
    3. ',' → logprob: -7.286005973815918
    4. ' ' → logprob: -10.286005973815918
    5. ')' → logprob: -10.411005973815918
    6. '  ' → logprob: -11.286005973815918
    7. '_' → logprob: -12.536005973815918
    8. '.' → logprob: -12.536005973815918
    9. '   ' → logprob: -12.911005973815918
    10. ' =
' → logprob: -13.036005973815918

Token 16: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9081709384918213
    2. ' map' → logprob: -1.0331709384918213
    3. 'map' → logprob: -2.4081709384918213
    4. '10' → logprob: -2.9081709384918213
    5. '5' → logprob: -3.5331709384918213
    6. '0' → logprob: -4.658170700073242
    7. '20' → logprob: -5.033170700073242
    8. '4' → logprob: -5.283170700073242
    9. '3' → logprob: -5.408170700073242
    10. 'input' → logprob: -5.533170700073242

Token 17: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.2971387803554535
    2. '(' → logprob: -1.4221388101577759
    3. '(input' → logprob: -4.422138690948486
    4. '(lambda' → logprob: -6.047138690948486
    5. '(str' → logprob: -6.797138690948486
    6. 'int' → logprob: -8.797139167785645
    7. 'input' → logprob: -9.672139167785645
    8. '(eval' → logprob: -9.922139167785645
    9. '[int' → logprob: -10.547139167785645
    10. '(
' → logprob: -10.797139167785645

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4698346257209778
    2. ')' → logprob: -1.344834566116333
    3. 'input' → logprob: -2.219834566116333
    4. '(' → logprob: -5.844834804534912
    5. ',input' → logprob: -6.344834804534912
    6. ' input' → logprob: -7.219834804534912
    7. '=input' → logprob: -9.094834327697754
    8. ',' → logprob: -9.219834327697754
    9. '),' → logprob: -10.594834327697754
    10. ')(' → logprob: -11.094834327697754

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25194039940834045
    2. ' input' → logprob: -1.501940369606018
    3. ')' → logprob: -11.626940727233887
    4. '(input' → logprob: -13.876940727233887
    5. '	input' → logprob: -14.876940727233887
    6. '=input' → logprob: -15.001940727233887
    7. ',input' → logprob: -15.251940727233887
    8. ' )' → logprob: -15.501940727233887
    9. ' ' → logprob: -16.12693977355957
    10. '<input' → logprob: -16.25193977355957

Token 20: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.024959182366728783
    2. '()' → logprob: -3.899959087371826
    3. '())' → logprob: -5.524959087371826
    4. ')' → logprob: -8.524959564208984
    5. '());' → logprob: -9.774959564208984
    6. '()))' → logprob: -10.649959564208984
    7. '(' → logprob: -10.899959564208984
    8. '('' → logprob: -10.899959564208984
    9. '('').' → logprob: -10.899959564208984
    10. '();)' → logprob: -10.899959564208984

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.2166411478538066e-05
    2. 'strip' → logprob: -9.875052452087402
    3. ' split' → logprob: -14.750052452087402
    4. '(split' → logprob: -16.125051498413086
    5. 'rstrip' → logprob: -16.375051498413086
    6. 'spl' → logprob: -16.500051498413086
    7. 'sp' → logprob: -18.875051498413086
    8. 's' → logprob: -19.250051498413086
    9. ')' → logprob: -19.375051498413086
    10. '```' → logprob: -20.125051498413086

Token 22: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26525598764419556
    2. '))' → logprob: -1.5152559280395508
    3. '())' → logprob: -4.390255928039551
    4. '()))' → logprob: -7.515255928039551
    5. '()' → logprob: -8.39025592803955
    6. '),' → logprob: -11.14025592803955
    7. ')))' → logprob: -11.26525592803955
    8. '('' → logprob: -12.01525592803955
    9. '))
' → logprob: -12.39025592803955
    10. '(' → logprob: -12.39025592803955

Token 23: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6824451088905334
    2. '<|end|>' → logprob: -1.3074450492858887
    3. ')' → logprob: -2.5574450492858887
    4. '
' → logprob: -2.8074450492858887
    5. '    
' → logprob: -3.6824450492858887
    6. '<|end|>' → logprob: -4.182445049285889
    7. '\n' → logprob: -4.807445049285889
    8. 'newline' → logprob: -4.932445049285889
    9. 'return' → logprob: -5.682445049285889
    10. '  
' → logprob: -5.807445049285889

Token 24: ' return' (ID: 622)
  Prédit: ' inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inputs' → logprob: -0.3114483058452606
    2. 'inputs' → logprob: -1.936448335647583
    3. ' x' → logprob: -3.186448335647583
    4. '   ' → logprob: -4.061448097229004
    5. 'x' → logprob: -4.686448097229004
    6. '    
' → logprob: -5.186448097229004
    7. ' 
' → logprob: -5.436448097229004
    8. ' states' → logprob: -5.686448097229004
    9. ' data' → logprob: -5.686448097229004
    10. ' arrays' → logprob: -5.811448097229004

Token 25: ' n' (ID: 297)
  Prédit: ' zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.6065683960914612
    2. 'zeros' → logprob: -0.8565683960914612
    3. ' n' → logprob: -4.606568336486816
    4. '[' → logprob: -5.106568336486816
    5. '[n' → logprob: -5.356568336486816
    6. 'n' → logprob: -5.981568336486816
    7. '(' → logprob: -6.231568336486816
    8. ' [' → logprob: -6.231568336486816
    9. ' (' → logprob: -6.481568336486816
    10. '(n' → logprob: -7.106568336486816

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002297397702932358
    2. '<|end|>' → logprob: -7.002297401428223
    3. ' ,' → logprob: -7.252297401428223
    4. ',n' → logprob: -8.127297401428223
    5. ',
' → logprob: -8.877297401428223
    6. ' ' → logprob: -9.127297401428223
    7. ')' → logprob: -9.627297401428223
    8. '<|end|>' → logprob: -11.502297401428223
    9. '```' → logprob: -12.127297401428223
    10. '  ' → logprob: -12.377297401428223

Token 27: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.38718798756599426
    2. 'M' → logprob: -1.1371879577636719
    3. ' zeros' → logprob: -8.512187957763672
    4. 'zeros' → logprob: -9.512187957763672
    5. '0' → logprob: -10.512187957763672
    6. ' ' → logprob: -11.762187957763672
    7. '[' → logprob: -13.762187957763672
    8. ' ' → logprob: -14.262187957763672
    9. 'Zeros' → logprob: -14.262187957763672
    10. ' [' → logprob: -14.949687957763672

Token 28: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3952658772468567
    2. '
' → logprob: -1.895265817642212
    3. '\' → logprob: -2.270265817642212
    4. '<|end|>' → logprob: -3.645265817642212
    5. ',' → logprob: -4.395266056060791
    6. 'newline' → logprob: -4.770266056060791
    7. '```' → logprob: -5.520266056060791
    8. '    
' → logprob: -5.520266056060791
    9. 'n' → logprob: -5.770266056060791
    10. '' → logprob: -6.145266056060791

Token 29: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2511356770992279
    2. 'n' → logprob: -2.5011355876922607
    3. '
' → logprob: -2.7511355876922607
    4. 'x' → logprob: -3.7511355876922607
    5. '

' → logprob: -4.37613582611084
    6. '\' → logprob: -4.37613582611084
    7. '\n' → logprob: -5.25113582611084
    8. '```' → logprob: -5.50113582611084
    9. 'data' → logprob: -5.87613582611084
    10. 'a' → logprob: -6.12613582611084

Token 30: ' compute' (ID: 23864)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.5315144062042236
    2. ' calculate' → logprob: -2.1565144062042236
    3. ' build' → logprob: -2.6565144062042236
    4. ' compute' → logprob: -3.2815144062042236
    5. ' generate' → logprob: -3.4065144062042236
    6. ' main' → logprob: -3.5315144062042236
    7. ' process' → logprob: -3.9065144062042236
    8. ' initialize' → logprob: -4.1565141677856445
    9. ' predict' → logprob: -4.2815141677856445
    10. ' create' → logprob: -4.2815141677856445

Token 31: '_l' (ID: 1478)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7140666842460632
    2. '(' → logprob: -2.089066743850708
    3. '_con' → logprob: -2.089066743850708
    4. '_states' → logprob: -3.089066743850708
    5. '_outputs' → logprob: -3.964066743850708
    6. '_inputs' → logprob: -3.964066743850708
    7. '_sum' → logprob: -4.214066505432129
    8. '_matrix' → logprob: -4.214066505432129
    9. '_output' → logprob: -4.464066505432129
    10. '_array' → logprob: -4.464066505432129

Token 32: '(n' (ID: 2406)
  Prédit: 'og'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'og' → logprob: -1.2312320470809937
    2. 'abel' → logprob: -1.9812320470809937
    3. 'ist' → logprob: -2.356232166290283
    4. 'ocal' → logprob: -2.856232166290283
    5. 'ength' → logprob: -2.981232166290283
    6. 'en' → logprob: -3.481232166290283
    7. 'attice' → logprob: -3.481232166290283
    8. 'ast' → logprob: -3.856232166290283
    9. 'oop' → logprob: -3.981232166290283
    10. 'inear' → logprob: -3.981232166290283

Token 33: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02878613770008087
    2. ')' → logprob: -4.0287861824035645
    3. ' ,' → logprob: -5.1537861824035645
    4. '):' → logprob: -6.0287861824035645
    5. ' )' → logprob: -7.4037861824035645
    6. '+' → logprob: -7.9037861824035645
    7. '-' → logprob: -8.153785705566406
    8. ',n' → logprob: -8.528785705566406
    9. '_,' → logprob: -8.903785705566406
    10. '**' → logprob: -9.403785705566406

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4763721525669098
    2. ' zeros' → logprob: -1.2263721227645874
    3. ' return' → logprob: -3.226372241973877
    4. 'zeros' → logprob: -4.601372241973877
    5. '    ' → logprob: -4.851372241973877
    6. ' result' → logprob: -5.226372241973877
    7. ' l' → logprob: -5.601372241973877
    8. '```' → logprob: -5.726372241973877
    9. ' ' → logprob: -5.976372241973877
    10. 'return' → logprob: -6.226372241973877

Token 35: ' return' (ID: 622)
  Prédit: ' zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.8829676508903503
    2. ' l' → logprob: -1.5079677104949951
    3. 'l' → logprob: -1.8829677104949951
    4. 'zeros' → logprob: -2.132967710494995
    5. ' return' → logprob: -3.007967710494995
    6. 'return' (adapté à ' return') → logprob: -3.507967710494995
    7. '   ' → logprob: -5.007967472076416
    8. '[' → logprob: -5.632967472076416
    9. ' [' → logprob: -6.257967472076416
    10. ' n' → logprob: -7.757967472076416

Token 36: ' n' (ID: 297)
  Prédit: ' zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.4892764091491699
    2. ' n' → logprob: -1.36427640914917
    3. ' ' → logprob: -2.61427640914917
    4. 'zeros' → logprob: -3.86427640914917
    5. 'n' → logprob: -4.36427640914917
    6. ' [' → logprob: -4.61427640914917
    7. '0' → logprob: -5.11427640914917
    8. ' (' → logprob: -6.48927640914917
    9. ' int' → logprob: -6.73927640914917
    10. ' roll' → logprob: -6.73927640914917

Token 37: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21552202105522156
    2. '*' → logprob: -3.090522050857544
    3. 'def' → logprob: -3.215522050857544
    4. '_' → logprob: -4.215521812438965
    5. ' +' → logprob: -4.215521812438965
    6. '**' → logprob: -4.340521812438965
    7. ' ' → logprob: -4.340521812438965
    8. ',' → logprob: -4.715521812438965
    9. '<|end|>' → logprob: -4.715521812438965
    10. '-' → logprob: -4.840521812438965

Token 38: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5669296979904175
    2. ' ' → logprob: -1.4419296979904175
    3. 'n' → logprob: -2.316929817199707
    4. ' n' → logprob: -3.691929817199707
    5. '4' → logprob: -4.191929817199707
    6. '(n' → logprob: -4.191929817199707
    7. ' (' → logprob: -4.691929817199707
    8. '3' → logprob: -4.816929817199707
    9. '0' → logprob: -4.941929817199707
    10. '10' → logprob: -5.441929817199707

Token 39: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.45298507809638977
    2. 'n' → logprob: -1.2029850482940674
    3. '(n' → logprob: -3.4529850482940674
    4. '3' → logprob: -4.5779852867126465
    5. '0' → logprob: -5.2029852867126465
    6. '4' → logprob: -5.7029852867126465
    7. '1' → logprob: -5.7029852867126465
    8. '(' → logprob: -5.7029852867126465
    9. '10' → logprob: -5.8279852867126465
    10. '5' → logprob: -6.8279852867126465

Token 40: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4614330530166626
    2. 'def' → logprob: -1.9614330530166626
    3. '\n' → logprob: -2.461432933807373
    4. '

' → logprob: -2.836432933807373
    5. '<|end|>' → logprob: -3.211432933807373
    6. 'n' → logprob: -4.211432933807373
    7. '\' → logprob: -4.586432933807373
    8. '*' → logprob: -5.211432933807373
    9. '```' → logprob: -5.586432933807373
    10. 'newline' → logprob: -6.586432933807373

Token 41: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4634605646133423
    2. '1' → logprob: -1.4634605646133423
    3. '2' → logprob: -2.2134604454040527
    4. '7' → logprob: -4.213460445404053
    5. '4' → logprob: -4.963460445404053
    6. '5' → logprob: -5.588460445404053
    7. '3' → logprob: -6.088460445404053
    8. '6' → logprob: -6.963460445404053
    9. ' n' → logprob: -7.463460445404053
    10. '9' → logprob: -8.463460922241211

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5549191832542419
    2. '2' → logprob: -1.0549192428588867
    3. '7' → logprob: -3.3049192428588867
    4. '5' → logprob: -3.6799192428588867
    5. '4' → logprob: -4.554919242858887
    6. ' ' → logprob: -5.429919242858887
    7. '6' → logprob: -8.179919242858887
    8. '3' → logprob: -8.554919242858887
    9. '10' → logprob: -8.804919242858887
    10. '8' → logprob: -9.804919242858887

Token 43: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4108450412750244
    2. 'def' → logprob: -1.6608450412750244
    3. '
' → logprob: -2.4108450412750244
    4. '\n' → logprob: -3.7858450412750244
    5. '```' → logprob: -4.410844802856445
    6. '<|end|>' → logprob: -4.410844802856445
    7. 'newline' → logprob: -5.785844802856445
    8. '\' → logprob: -6.035844802856445
    9. ' def' → logprob: -6.660844802856445
    10. ' 

' → logprob: -7.285844802856445

Token 44: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18839094042778015
    2. '

' → logprob: -1.8133909702301025
    3. '
' → logprob: -5.313390731811523
    4. '\' → logprob: -6.438390731811523
    5. '\n' → logprob: -7.438390731811523
    6. ' def' → logprob: -7.813390731811523
    7. '```' → logprob: -7.938390731811523
    8. '_

' → logprob: -8.188390731811523
    9. ' 

' → logprob: -9.438390731811523
    10. 'n' → logprob: -9.438390731811523

Token 45: ' initialize' (ID: 18400)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.02387644723057747
    2. ' get' → logprob: -4.648876667022705
    3. ' calculate' → logprob: -5.773876667022705
    4. ' _' → logprob: -5.898876667022705
    5. '_compute' → logprob: -5.898876667022705
    6. '_' → logprob: -6.148876667022705
    7. ' ' → logprob: -7.148876667022705
    8. ' main' → logprob: -7.648876667022705
    9. ' generate' → logprob: -7.898876667022705
    10. ' def' → logprob: -8.273876190185547

Token 46: '_d' (ID: 1565)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.8259897828102112
    2. '(' → logprob: -1.7009897232055664
    3. '_' → logprob: -1.8259897232055664
    4. '_arrays' → logprob: -2.0759897232055664
    5. '_matrix' → logprob: -3.5759897232055664
    6. '_states' → logprob: -4.700989723205566
    7. '(n' → logprob: -4.950989723205566
    8. '_inputs' → logprob: -4.950989723205566
    9. '_l' → logprob: -4.950989723205566
    10. '_data' → logprob: -5.325989723205566

Token 47: '(l' (ID: 4179)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.41882026195526123
    2. '_array' → logprob: -1.6688202619552612
    3. 'array' → logprob: -2.918820381164551
    4. '(' → logprob: -3.293820381164551
    5. '(N' → logprob: -3.668820381164551
    6. 'ata' → logprob: -4.793820381164551
    7. 'ims' → logprob: -6.043820381164551
    8. '(shape' → logprob: -6.043820381164551
    9. '(size' → logprob: -6.168820381164551
    10. '_' → logprob: -6.418820381164551

Token 48: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3629339635372162
    2. ')' → logprob: -1.8629339933395386
    3. ',' → logprob: -1.9879339933395386
    4. '):
' → logprob: -4.487934112548828
    5. '=' → logprob: -7.862934112548828
    6. '):
' → logprob: -9.237934112548828
    7. ' ):' → logprob: -9.237934112548828
    8. '   ' → logprob: -9.737934112548828
    9. ':' → logprob: -9.737934112548828
    10. ' )' → logprob: -9.987934112548828

Token 49: ' n' (ID: 297)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.5246996283531189
    2. ' M' → logprob: -1.0246996879577637
    3. 'n' → logprob: -4.774699687957764
    4. ' n' → logprob: -5.149699687957764
    5. '):
' → logprob: -5.149699687957764
    6. ')' → logprob: -5.649699687957764
    7. 'l' → logprob: -5.649699687957764
    8. '0' → logprob: -6.024699687957764
    9. ' ' → logprob: -6.024699687957764
    10. '1' → logprob: -6.274699687957764

Token 50: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13365180790424347
    2. '):' → logprob: -2.1336517333984375
    3. '):
' → logprob: -5.1336517333984375
    4. ')' → logprob: -8.258651733398438
    5. ' ,' → logprob: -8.383651733398438
    6. '):
' → logprob: -9.008651733398438
    7. ',n' → logprob: -10.008651733398438
    8. ' ):' → logprob: -10.133651733398438
    9. '   ' → logprob: -10.508651733398438
    10. ',d' → logprob: -11.383651733398438

Token 51: '   ' (ID: 271)
  Prédit: ' zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.38278400897979736
    2. ' return' → logprob: -1.3827840089797974
    3. '   ' → logprob: -3.382783889770508
    4. 'zeros' → logprob: -3.882783889770508
    5. 'return' → logprob: -5.007783889770508
    6. ' d' → logprob: -5.382783889770508
    7. 'd' → logprob: -7.382783889770508
    8. '```' → logprob: -8.632783889770508
    9. ' ' → logprob: -8.757783889770508
    10. '.zeros' → logprob: -10.132783889770508

Token 52: ' d' (ID: 272)
  Prédit: 'zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -0.7462331652641296
    2. 'return' → logprob: -1.4962332248687744
    3. ' zeros' → logprob: -1.8712332248687744
    4. ' return' → logprob: -2.1212332248687744
    5. 'd' (adapté à ' d') → logprob: -3.8712332248687744
    6. ' d' → logprob: -5.246232986450195
    7. '   ' → logprob: -6.996232986450195
    8. 'z' → logprob: -8.746232986450195
    9. ' ' → logprob: -8.871232986450195
    10. '```' → logprob: -9.371232986450195

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3485814034938812
    2. '=' → logprob: -1.2235814332962036
    3. ' ' → logprob: -9.723581314086914
    4. '   ' → logprob: -10.598581314086914
    5. '[' → logprob: -11.473581314086914
    6. ',' → logprob: -11.848581314086914
    7. 'ata' → logprob: -11.973581314086914
    8. '=zeros' → logprob: -12.098581314086914
    9. 'f' → logprob: -12.973581314086914
    10. '  ' → logprob: -13.223581314086914

Token 54: ' zeros' (ID: 42274)
  Prédit: ' zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.31341785192489624
    2. 'zeros' → logprob: -1.313417911529541
    3. '.zeros' → logprob: -10.313417434692383
    4. ' ' → logprob: -10.438417434692383
    5. '   ' → logprob: -11.250917434692383
    6. 'zero' → logprob: -11.438417434692383
    7. ' zero' → logprob: -11.875917434692383
    8. '=zeros' → logprob: -11.938417434692383
    9. 'zer' → logprob: -12.000917434692383
    10. '0' → logprob: -12.063417434692383

Token 55: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.01341832522302866
    2. '(' → logprob: -5.013418197631836
    3. '(l' → logprob: -5.013418197631836
    4. ' (' → logprob: -11.138418197631836
    5. '(d' → logprob: -12.388418197631836
    6. ' ((' → logprob: -12.638418197631836
    7. '([' → logprob: -12.638418197631836
    8. ' ' → logprob: -12.763418197631836
    9. '(
' → logprob: -13.763418197631836
    10. '(n' → logprob: -14.263418197631836

Token 56: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02829873189330101
    2. ' l' → logprob: -3.9032986164093018
    3. '(l' → logprob: -5.778298854827881
    4. ',' → logprob: -6.153298854827881
    5. '(' → logprob: -7.278298854827881
    6. ' (' → logprob: -7.903298854827881
    7. ',l' → logprob: -8.278298377990723
    8. 'n' → logprob: -8.278298377990723
    9. ')' → logprob: -8.403298377990723
    10. '2' → logprob: -8.653298377990723

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007992653991095722
    2. ' ,' → logprob: -7.625799179077148
    3. '))' → logprob: -9.000799179077148
    4. ',n' → logprob: -10.000799179077148
    5. '+' → logprob: -10.375799179077148
    6. ' ' → logprob: -10.500799179077148
    7. ')' → logprob: -10.625799179077148
    8. '),' → logprob: -11.375799179077148
    9. '-' → logprob: -11.625799179077148
    10. ',),' → logprob: -12.250799179077148

Token 58: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.23064464330673218
    2. 'n' → logprob: -2.230644702911377
    3. ' ' → logprob: -2.605644702911377
    4. '3' → logprob: -4.730644702911377
    5. ' l' → logprob: -5.230644702911377
    6. '2' → logprob: -5.855644702911377
    7. ')' → logprob: -6.855644702911377
    8. '1' → logprob: -6.855644702911377
    9. 'l' → logprob: -6.855644702911377
    10. '4' → logprob: -7.105644702911377

Token 59: ' *' (ID: 425)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08685443550348282
    2. '),' → logprob: -2.5868544578552246
    3. ',' → logprob: -4.961854457855225
    4. ')' → logprob: -7.586854457855225
    5. ' ))' → logprob: -8.461853981018066
    6. ' ' → logprob: -9.836853981018066
    7. '))
' → logprob: -10.086853981018066
    8. '+' → logprob: -10.211853981018066
    9. ' ),' → logprob: -10.586853981018066
    10. '-' → logprob: -11.711853981018066

Token 60: ' ' (ID: 220)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.38965582847595215
    2. ' ))' → logprob: -2.264655828475952
    3. ',' → logprob: -2.514655828475952
    4. ' ,' → logprob: -3.139655828475952
    5. ' ' → logprob: -3.889655828475952
    6. ' +' → logprob: -4.014656066894531
    7. '+' → logprob: -4.264656066894531
    8. '3' → logprob: -4.389656066894531
    9. '),' → logprob: -4.764656066894531
    10. '2' → logprob: -5.139656066894531

Token 61: '5' (ID: 20)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.23687946796417236
    2. '2' → logprob: -1.8618794679641724
    3. '4' → logprob: -3.986879348754883
    4. '6' → logprob: -4.486879348754883
    5. ' ' → logprob: -4.861879348754883
    6. '7' → logprob: -5.236879348754883
    7. 'n' → logprob: -5.611879348754883
    8. '5' → logprob: -5.736879348754883
    9. 'l' → logprob: -6.236879348754883
    10. '9' → logprob: -7.111879348754883

Token 62: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.032196592539548874
    2. '),' → logprob: -3.532196521759033
    3. ' ))' → logprob: -7.157196521759033
    4. '+' → logprob: -7.407196521759033
    5. ',' → logprob: -7.782196521759033
    6. ')' → logprob: -8.657196998596191
    7. ' +' → logprob: -9.157196998596191
    8. '))
' → logprob: -9.657196998596191
    9. ' ),' → logprob: -9.907196998596191
    10. ' ' → logprob: -10.032196998596191

Token 63: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.6140313148498535
    2. 'float' → logprob: -1.4890313148498535
    3. ' dtype' → logprob: -1.8640313148498535
    4. ')' → logprob: -3.4890313148498535
    5. ' float' → logprob: -3.6140313148498535
    6. 'int' → logprob: -3.9890313148498535
    7. ' int' → logprob: -6.8640313148498535
    8. ' ' → logprob: -7.7390313148498535
    9. 'bool' → logprob: -8.989030838012695
    10. '))' → logprob: -8.989030838012695

Token 64: '='' (ID: 2053)
  Prédit: '=int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.47426480054855347
    2. '=' → logprob: -0.9742648005485535
    3. '=np' → logprob: -9.349265098571777
    4. '=
' → logprob: -10.599265098571777
    5. '=float' → logprob: -10.849265098571777
    6. '='' → logprob: -10.974265098571777
    7. '=

' → logprob: -11.224265098571777
    8. '=`' → logprob: -12.099265098571777
    9. ')' → logprob: -12.724265098571777
    10. ')=' → logprob: -12.849265098571777

Token 65: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.36898693442344666
    2. 'bool' → logprob: -1.743986964225769
    3. 'float' → logprob: -2.4939868450164795
    4. 'uint' → logprob: -3.2439868450164795
    5. 'i' → logprob: -5.118987083435059
    6. 'u' → logprob: -5.743987083435059
    7. 'b' → logprob: -6.493987083435059
    8. 'f' → logprob: -7.118987083435059
    9. 'complex' → logprob: -8.243987083435059
    10. 'byte' → logprob: -9.618987083435059

Token 66: '64' (ID: 2220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.03873497620224953
    2. '32' → logprob: -3.2887349128723145
    3. '64' → logprob: -8.163735389709473
    4. '')' → logprob: -8.288735389709473
    5. ''))' → logprob: -9.038735389709473
    6. ')' → logprob: -11.038735389709473
    7. '16' → logprob: -11.413735389709473
    8. '4' → logprob: -12.288735389709473
    9. ''' → logprob: -12.538735389709473
    10. '6' → logprob: -13.288735389709473

Token 67: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5233993530273438
    2. '')' → logprob: -0.8983993530273438
    3. ')'' → logprob: -9.148399353027344
    4. ''))' → logprob: -9.523399353027344
    5. ''' → logprob: -9.773399353027344
    6. '))' → logprob: -11.148399353027344
    7. ')")' → logprob: -12.273399353027344
    8. ')')
' → logprob: -12.398399353027344
    9. ' ')' → logprob: -12.773399353027344
    10. '')
' → logprob: -13.023399353027344

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1497466266155243
    2. ')' → logprob: -2.0247466564178467
    3. ' ' → logprob: -6.149746417999268
    4. '<|end|>' → logprob: -6.399746417999268
    5. ' return' → logprob: -7.274746417999268
    6. 'return' → logprob: -7.274746417999268
    7. '    
' → logprob: -7.524746417999268
    8. '  
' → logprob: -8.524746894836426
    9. ' )' → logprob: -8.649746894836426
    10. '  ' → logprob: -8.774746894836426

Token 69: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010755031369626522
    2. 'return' → logprob: -5.2607550621032715
    3. ' return' → logprob: -5.6357550621032715
    4. '    
' → logprob: -7.1357550621032715
    5. '	return' → logprob: -7.3857550621032715
    6. ')' → logprob: -9.010754585266113
    7. 'd' (adapté à ' d') → logprob: -9.010754585266113
    8. '<|end|>' → logprob: -9.385754585266113
    9. ' ' → logprob: -9.635754585266113
    10. ' 
' → logprob: -10.510754585266113

Token 70: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03935841843485832
    2. ' ' → logprob: -3.914358377456665
    3. ',' → logprob: -4.414358615875244
    4. '[' → logprob: -5.414358615875244
    5. ' ,' → logprob: -7.664358615875244
    6. '1' → logprob: -7.914358615875244
    7. '-' → logprob: -8.164358139038086
    8. ':' → logprob: -8.414358139038086
    9. ']' → logprob: -8.914358139038086
    10. ')' → logprob: -9.164358139038086

Token 72: '][' (ID: 2696)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014788337983191013
    2. ']' → logprob: -5.5147881507873535
    3. '][' → logprob: -5.5147881507873535
    4. '[' → logprob: -6.0147881507873535
    5. ')' → logprob: -6.1397881507873535
    6. ' ,' → logprob: -7.2647881507873535
    7. ')]' → logprob: -8.014788627624512
    8. ',[' → logprob: -8.514788627624512
    9. ',:)' → logprob: -8.514788627624512
    10. ',)' → logprob: -8.514788627624512

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022849070373922586
    2. '-' → logprob: -7.502285003662109
    3. ' ' → logprob: -7.502285003662109
    4. ':' → logprob: -7.627285003662109
    5. 'n' → logprob: -7.627285003662109
    6. '1' → logprob: -10.25228500366211
    7. '   ' → logprob: -10.62728500366211
    8. ' :' → logprob: -10.75228500366211
    9. ']' → logprob: -11.12728500366211
    10. ':n' → logprob: -11.12728500366211

Token 74: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004240804351866245
    2. ' ]' → logprob: -6.379240989685059
    3. ']=' → logprob: -6.504240989685059
    4. ')' → logprob: -7.254240989685059
    5. ')]' → logprob: -9.004240989685059
    6. '=' → logprob: -9.254240989685059
    7. '+' → logprob: -10.504240989685059
    8. ',' → logprob: -11.004240989685059
    9. '-' → logprob: -11.629240989685059
    10. '[' → logprob: -11.629240989685059

Token 75: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02349132113158703
    2. ' =' → logprob: -4.023491382598877
    3. ']' → logprob: -5.523491382598877
    4. ']=' → logprob: -6.648491382598877
    5. '+=' → logprob: -11.398490905761719
    6. ']+=' → logprob: -12.023490905761719
    7. ',' → logprob: -12.523490905761719
    8. '=

' → logprob: -13.023490905761719
    9. ' ]' → logprob: -13.273490905761719
    10. ' +=' → logprob: -13.273490905761719

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003779051126912236
    2. ' ' → logprob: -5.87877893447876
    3. '0' → logprob: -7.00377893447876
    4. '-' → logprob: -11.128779411315918
    5. '2' → logprob: -11.378779411315918
    6. '   ' → logprob: -11.753779411315918
    7. '  ' → logprob: -12.003779411315918
    8. '3' → logprob: -12.191279411315918
    9. '5' → logprob: -12.753779411315918
    10. 'n' → logprob: -12.941279411315918

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00744394026696682
    2. '0' → logprob: -5.007443904876709
    3. '-' → logprob: -8.132444381713867
    4. '2' → logprob: -8.882444381713867
    5. '3' → logprob: -9.632444381713867
    6. ' ' → logprob: -9.882444381713867
    7. 'n' → logprob: -10.382444381713867
    8. '5' → logprob: -10.632444381713867
    9. 'int' → logprob: -10.632444381713867
    10. '100' → logprob: -11.007444381713867

Token 78: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2786812484264374
    2. '\n' → logprob: -2.0286812782287598
    3. ' ' → logprob: -3.6536812782287598
    4. '<|end|>' → logprob: -4.15368127822876
    5. '	return' → logprob: -4.40368127822876
    6. '' → logprob: -4.77868127822876
    7. '    ' → logprob: -4.90368127822876
    8. ' 
' → logprob: -5.02868127822876
    9. '    
' → logprob: -5.15368127822876
    10. '\' → logprob: -5.15368127822876

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014102356508374214
    2. '    
' → logprob: -7.376410007476807
    3. '	return' → logprob: -8.126410484313965
    4. '    ' → logprob: -9.126410484313965
    5. '\n' → logprob: -9.251410484313965
    6. '<|end|>' → logprob: -9.751410484313965
    7. 'return' → logprob: -10.126410484313965
    8. ' return' → logprob: -10.376410484313965
    9. '
' → logprob: -10.501410484313965
    10. '\t' → logprob: -10.876410484313965

Token 80: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07334155589342117
    2. 'return' (adapté à ' return') → logprob: -3.3233416080474854
    3. ' return' → logprob: -3.8233416080474854
    4. ' ' → logprob: -4.948341369628906
    5. '    
' → logprob: -6.323341369628906
    6. '	return' → logprob: -6.448341369628906
    7. '
' → logprob: -7.823341369628906
    8. ' 
' → logprob: -7.823341369628906
    9. '  ' → logprob: -8.323341369628906
    10. 'd' → logprob: -8.448341369628906

Token 81: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.048587486147880554
    2. ' d' → logprob: -3.0485875606536865
    3. '	d' → logprob: -16.673587799072266
    4. '(d' → logprob: -18.423587799072266
    5. ')d' → logprob: -18.423587799072266
    6. 's' → logprob: -18.673587799072266
    7. ' д' → logprob: -19.173587799072266
    8. ' ' → logprob: -19.298587799072266
    9. '‌' → logprob: -20.048587799072266
    10. '_d' → logprob: -20.423587799072266

Token 82: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007107836194336414
    2. '<|end|>' → logprob: -5.757107734680176
    3. '```' → logprob: -5.882107734680176
    4. '
' → logprob: -7.757107734680176
    5. '\' → logprob: -8.882107734680176
    6. ' def' → logprob: -9.007107734680176
    7. '[' → logprob: -9.382107734680176
    8. '<|end|>' → logprob: -9.382107734680176
    9. '

' → logprob: -9.632107734680176
    10. '\n' → logprob: -10.132107734680176

Token 83: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0007372042746283114
    2. '```' → logprob: -8.000737190246582
    3. '<|end|>' → logprob: -9.125737190246582
    4. ' def' → logprob: -9.250737190246582
    5. '\' → logprob: -9.375737190246582
    6. '
' → logprob: -10.125737190246582
    7. '<|end|>' → logprob: -11.000737190246582
    8. '#' → logprob: -11.000737190246582
    9. '\n' → logprob: -11.500737190246582
    10. '[' → logprob: -12.500737190246582

Token 84: ' get' (ID: 717)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.5506172776222229
    2. ' get' → logprob: -1.0506172180175781
    3. ' solve' → logprob: -3.925617218017578
    4. ' calculate' → logprob: -4.425617218017578
    5. ' update' → logprob: -4.925617218017578
    6. ' process' → logprob: -4.925617218017578
    7. 'compute' → logprob: -4.925617218017578
    8. ' main' → logprob: -5.550617218017578
    9. ' simulate' → logprob: -6.050617218017578
    10. 'get' → logprob: -6.300617218017578

Token 85: '_indices' (ID: 43508)
  Prédit: '_inputs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inputs' → logprob: -1.2631422281265259
    2. '_input' → logprob: -1.5131422281265259
    3. '_max' → logprob: -2.3881421089172363
    4. '_roll' → logprob: -2.5131421089172363
    5. '_m' → logprob: -3.1381421089172363
    6. '_' → logprob: -3.6381421089172363
    7. '_l' → logprob: -3.6381421089172363
    8. '_states' → logprob: -3.8881421089172363
    9. '_s' → logprob: -3.8881421089172363
    10. '_next' → logprob: -4.638142108917236

Token 86: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47918882966041565
    2. '(n' → logprob: -1.3541887998580933
    3. '():' → logprob: -2.229188919067383
    4. '(l' → logprob: -4.479188919067383
    5. '()' → logprob: -6.854188919067383
    6. '(s' → logprob: -7.604188919067383
    7. '((' → logprob: -8.354188919067383
    8. '(k' → logprob: -8.479188919067383
    9. ' (' → logprob: -8.729188919067383
    10. '(size' → logprob: -9.104188919067383

Token 87: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04533253610134125
    2. '):' → logprob: -3.170332431793213
    3. ' ,' → logprob: -6.420332431793213
    4. ')' → logprob: -8.045332908630371
    5. ' ):' → logprob: -8.545332908630371
    6. ',n' → logprob: -9.170332908630371
    7. '):
' → logprob: -10.795332908630371
    8. ' ' → logprob: -11.795332908630371
    9. ',i' → logprob: -12.045332908630371
    10. ',j' → logprob: -12.607832908630371

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5612290501594543
    2. ' return' → logprob: -1.3112289905548096
    3. 'return' → logprob: -2.0612289905548096
    4. '(' → logprob: -5.311229228973389
    5. ':' → logprob: -5.311229228973389
    6. '(i' → logprob: -5.686229228973389
    7. ' (' → logprob: -5.686229228973389
    8. ' i' → logprob: -6.061229228973389
    9. '(n' → logprob: -6.186229228973389
    10. ',' → logprob: -6.311229228973389

Token 89: ' j' (ID: 441)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16666384041309357
    2. 'return' → logprob: -1.9166638851165771
    3. '   ' → logprob: -5.291663646697998
    4. ' i' → logprob: -7.666663646697998
    5. '[' → logprob: -8.541664123535156
    6. ' indices' → logprob: -8.916664123535156
    7. ' ' → logprob: -9.666664123535156
    8. '```' → logprob: -9.791664123535156
    9. ' if' → logprob: -9.916664123535156
    10. ' (' → logprob: -10.041664123535156

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7169081568717957
    2. '=' → logprob: -0.8419081568717957
    3. ',' → logprob: -2.5919082164764404
    4. 's' → logprob: -5.341907978057861
    5. ' ' → logprob: -7.716907978057861
    6. ',j' → logprob: -9.21690845489502
    7. ' ,' → logprob: -9.46690845489502
    8. 'ex' → logprob: -9.46690845489502
    9. 'x' → logprob: -9.59190845489502
    10. '=int' → logprob: -9.84190845489502

Token 91: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8037616014480591
    2. 'i' → logprob: -1.928761601448059
    3. '(i' → logprob: -2.0537614822387695
    4. ' (' → logprob: -2.1787614822387695
    5. '0' → logprob: -2.4287614822387695
    6. ' ' → logprob: -3.3037614822387695
    7. '(' → logprob: -3.9287614822387695
    8. ' roll' → logprob: -5.1787614822387695
    9. 'roll' → logprob: -5.5537614822387695
    10. '1' → logprob: -5.8037614822387695

Token 92: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7239468097686768
    2. ' -' → logprob: -0.9739468097686768
    3. '+' → logprob: -2.2239468097686768
    4. ' +' → logprob: -3.5989468097686768
    5. ' ' → logprob: -6.723946571350098
    6. '%' → logprob: -7.848946571350098
    7. ' %' → logprob: -9.223946571350098
    8. '1' → logprob: -9.223946571350098
    9. '   ' → logprob: -9.473946571350098
    10. '0' → logprob: -10.098946571350098

Token 93: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01463151816278696
    2. '2' → logprob: -4.889631748199463
    3. '3' → logprob: -5.264631748199463
    4. ' ' → logprob: -6.514631748199463
    5. '4' → logprob: -9.389631271362305
    6. '5' → logprob: -10.014631271362305
    7. '6' → logprob: -10.014631271362305
    8. '(' → logprob: -10.389631271362305
    9. 'compute' → logprob: -10.639631271362305
    10. '10' → logprob: -11.139631271362305

Token 94: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0156740490347147
    2. '2' → logprob: -4.765674114227295
    3. '3' → logprob: -5.640674114227295
    4. 'compute' → logprob: -7.015674114227295
    5. '(' → logprob: -7.515674114227295
    6. ' ' → logprob: -8.015673637390137
    7. 'get' → logprob: -8.265673637390137
    8. '4' → logprob: -8.265673637390137
    9. 'i' → logprob: -8.640673637390137
    10. '5' → logprob: -8.890673637390137

Token 95: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10845126956701279
    2. 'return' → logprob: -3.2334513664245605
    3. ' return' → logprob: -3.4834513664245605
    4. ',' → logprob: -4.6084513664245605
    5. '
' → logprob: -4.7334513664245605
    6. ' ' → logprob: -5.6084513664245605
    7. 'def' → logprob: -5.8584513664245605
    8. '<|end|>' → logprob: -6.4834513664245605
    9. ' if' → logprob: -6.7334513664245605
    10. 'j' → logprob: -7.1084513664245605

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06201518699526787
    2. ' return' → logprob: -3.3120152950286865
    3. ' k' → logprob: -4.812015056610107
    4. 'k' → logprob: -5.062015056610107
    5. 'return' → logprob: -5.187015056610107
    6. ',' → logprob: -6.562015056610107
    7. ',k' → logprob: -7.812015056610107
    8. 'def' → logprob: -8.999515533447266
    9. '    
' → logprob: -8.999515533447266
    10. ' i' → logprob: -9.062015533447266

Token 97: ' k' (ID: 372)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7332361936569214
    2. ' return' → logprob: -1.6082361936569214
    3. 'k' (adapté à ' k') → logprob: -1.9832361936569214
    4. 'return' → logprob: -2.108236312866211
    5. ' k' → logprob: -3.608236312866211
    6. 'i' → logprob: -5.358236312866211
    7. ' if' → logprob: -5.983236312866211
    8. 'x' → logprob: -6.108236312866211
    9. ' i' → logprob: -6.108236312866211
    10. ' ' → logprob: -6.483236312866211

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04866696521639824
    2. '=' → logprob: -3.0486669540405273
    3. ',' → logprob: -9.673666954040527
    4. ' ' → logprob: -11.798666954040527
    5. '=j' → logprob: -13.048666954040527
    6. ')' → logprob: -14.048666954040527
    7. ' =
' → logprob: -14.173666954040527
    8. '+' → logprob: -14.298666954040527
    9. 's' → logprob: -14.423666954040527
    10. '   ' → logprob: -14.798666954040527

Token 99: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2711719572544098
    2. ' j' → logprob: -2.146172046661377
    3. 'i' → logprob: -2.521172046661377
    4. 'j' → logprob: -3.646172046661377
    5. ' (' → logprob: -5.271172046661377
    6. ' ' → logprob: -5.646172046661377
    7. '0' → logprob: -6.646172046661377
    8. '(' → logprob: -7.271172046661377
    9. ' max' → logprob: -7.396172046661377
    10. ' roll' → logprob: -7.396172046661377

Token 100: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.7664483785629272
    2. ' -' → logprob: -1.2664483785629272
    3. '+' → logprob: -1.8914483785629272
    4. '-' → logprob: -2.391448497772217
    5. ' ' → logprob: -4.766448497772217
    6. '   ' → logprob: -6.141448497772217
    7. '  ' → logprob: -9.141448020935059
    8. '    ' → logprob: -9.266448020935059
    9. '1' → logprob: -9.766448020935059
    10. ' if' → logprob: -10.016448020935059

Token 101: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14959955215454102
    2. ' ' → logprob: -2.024599552154541
    3. '1' → logprob: -5.649599552154541
    4. '3' → logprob: -5.774599552154541
    5. '0' → logprob: -10.024599075317383
    6. '   ' → logprob: -10.399599075317383
    7. '4' → logprob: -10.649599075317383
    8. 'j' → logprob: -10.712099075317383
    9. '5' → logprob: -10.774599075317383
    10. '6' → logprob: -11.087099075317383

Token 102: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03581942990422249
    2. '3' → logprob: -3.6608195304870605
    3. '1' → logprob: -4.7858195304870605
    4. '4' → logprob: -8.160819053649902
    5. ' ' → logprob: -8.660819053649902
    6. '0' → logprob: -8.785819053649902
    7. 'j' → logprob: -9.160819053649902
    8. '5' → logprob: -9.285819053649902
    9. '6' → logprob: -9.410819053649902
    10. 'n' → logprob: -9.660819053649902

Token 103: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036346759647130966
    2. ' return' → logprob: -3.661346673965454
    3. '<|end|>' → logprob: -5.286346912384033
    4. 'return' → logprob: -6.661346912384033
    5. '
' → logprob: -6.661346912384033
    6. ' ' → logprob: -6.786346912384033
    7. '	return' → logprob: -7.161346912384033
    8. ',' → logprob: -9.036346435546875
    9. '    
' → logprob: -9.411346435546875
    10. ' 
' → logprob: -9.661346435546875

Token 104: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3335146903991699
    2. ' l' → logprob: -2.45851469039917
    3. 'return' (adapté à ' return') → logprob: -2.45851469039917
    4. '   ' → logprob: -2.70851469039917
    5. ' m' → logprob: -3.70851469039917
    6. 'l' → logprob: -4.83351469039917
    7. 'm' → logprob: -5.33351469039917
    8. ' ' → logprob: -5.45851469039917
    9. ' i' → logprob: -6.83351469039917
    10. ' if' → logprob: -7.95851469039917

Token 106: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.45138803124427795
    2. ' j' → logprob: -1.0763880014419556
    3. 'i' → logprob: -4.576387882232666
    4. ' i' → logprob: -4.701387882232666
    5. ' (' → logprob: -6.951387882232666
    6. '[j' → logprob: -7.201387882232666
    7. '(j' → logprob: -7.826387882232666
    8. ' [' → logprob: -8.201388359069824
    9. ' ' → logprob: -8.826388359069824
    10. 'k' → logprob: -8.826388359069824

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.032077688723802567
    2. ' ,' → logprob: -3.5320777893066406
    3. ',k' → logprob: -6.657077789306641
    4. '<|end|>' → logprob: -7.157077789306641
    5. ' ' → logprob: -9.03207778930664
    6. ',j' → logprob: -9.28207778930664
    7. ',
' → logprob: -11.28207778930664
    8. ',n' → logprob: -11.90707778930664
    9. '<|end|>' → logprob: -11.90707778930664
    10. 'def' → logprob: -12.28207778930664

Token 108: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.015088744461536407
    2. 'k' → logprob: -4.2650885581970215
    3. ' ' → logprob: -7.5150885581970215
    4. ' ' → logprob: -8.51508903503418
    5. ' i' → logprob: -9.14008903503418
    6. 'i' → logprob: -11.14008903503418
    7. ''' → logprob: -11.64008903503418
    8. '`' → logprob: -12.01508903503418
    9. ' None' → logprob: -12.14008903503418
    10. '"' → logprob: -12.26508903503418

Token 109: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5421077609062195
    2. '<|end|>' → logprob: -0.9171077609062195
    3. ',' → logprob: -4.667107582092285
    4. '<|end|>' → logprob: -6.042107582092285
    5. '
' → logprob: -6.417107582092285
    6. '```' → logprob: -6.542107582092285
    7. ')' → logprob: -6.792107582092285
    8. ' def' → logprob: -6.917107582092285
    9. '_' → logprob: -8.042107582092285
    10. '[' → logprob: -8.167107582092285

Token 110: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1051919013261795
    2. '<|end|>' → logprob: -2.480191946029663
    3. '#' → logprob: -5.480191707611084
    4. ')' → logprob: -5.730191707611084
    5. '_' → logprob: -6.355191707611084
    6. '<|end|>' → logprob: -6.605191707611084
    7. 'i' → logprob: -7.230191707611084
    8. '```' → logprob: -7.355191707611084
    9. '[' → logprob: -7.480191707611084
    10. 'j' → logprob: -7.480191707611084

Token 111: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.7777129411697388
    2. ' main' → logprob: -1.9027129411697388
    3. ' solve' → logprob: -2.152712821960449
    4. ' calculate' → logprob: -3.152712821960449
    5. ' process' → logprob: -3.277712821960449
    6. 'compute' → logprob: -3.777712821960449
    7. ' max' → logprob: -3.777712821960449
    8. ' get' → logprob: -4.152712821960449
    9. ' dp' → logprob: -4.527712821960449
    10. ' count' → logprob: -4.652712821960449

Token 112: '_term' (ID: 41867)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.15300427377223969
    2. '_' → logprob: -2.1530041694641113
    3. 'l' → logprob: -5.653004169464111
    4. '(' → logprob: -5.778004169464111
    5. '_i' → logprob: -6.028004169464111
    6. '_a' → logprob: -6.028004169464111
    7. '_m' → logprob: -6.153004169464111
    8. '_d' → logprob: -6.278004169464111
    9. '_n' → logprob: -6.528004169464111
    10. ' _' → logprob: -7.028004169464111

Token 113: '1' (ID: 16)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7405285835266113
    2. '(n' → logprob: -1.3655285835266113
    3. '(l' → logprob: -1.8655285835266113
    4. '(' → logprob: -2.9905285835266113
    5. '(s' → logprob: -3.7405285835266113
    6. 's' → logprob: -3.7405285835266113
    7. '_s' → logprob: -5.990528583526611
    8. '_(' → logprob: -6.115528583526611
    9. '_l' → logprob: -6.240528583526611
    10. '(a' → logprob: -6.490528583526611

Token 114: '(d' (ID: 2572)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.1459505707025528
    2. '(' → logprob: -2.5209505558013916
    3. '(n' → logprob: -3.5209505558013916
    4. '(l' → logprob: -4.645950794219971
    5. '(j' → logprob: -5.270950794219971
    6. ' (' → logprob: -5.645950794219971
    7. '(d' → logprob: -5.770950794219971
    8. '(s' → logprob: -6.020950794219971
    9. '(a' → logprob: -6.895950794219971
    10. '((' → logprob: -8.145950317382812

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05741160735487938
    2. '[i' → logprob: -3.8074116706848145
    3. '[' → logprob: -4.5574116706848145
    4. ' ,' → logprob: -4.5574116706848145
    5. ',i' → logprob: -4.8074116706848145
    6. '[j' → logprob: -6.1824116706848145
    7. ',j' → logprob: -6.9324116706848145
    8. '):' → logprob: -8.057411193847656
    9. '   ' → logprob: -8.307411193847656
    10. ')' → logprob: -8.432411193847656

Token 116: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5448430180549622
    2. 'i' → logprob: -1.2948429584503174
    3. ' j' → logprob: -3.1698429584503174
    4. ' n' → logprob: -3.2948429584503174
    5. ' d' → logprob: -3.7948429584503174
    6. 'j' → logprob: -4.2948431968688965
    7. ' l' → logprob: -4.4198431968688965
    8. 'n' → logprob: -4.6698431968688965
    9. 'd' → logprob: -5.2948431968688965
    10. 'l' → logprob: -5.9198431968688965

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025328563060611486
    2. '):' → logprob: -7.252532958984375
    3. ' ,' → logprob: -7.252532958984375
    4. ',j' → logprob: -7.377532958984375
    5. '):
' → logprob: -8.377532958984375
    6. '   ' → logprob: -8.877532958984375
    7. ' ' → logprob: -10.752532958984375
    8. '  ' → logprob: -10.752532958984375
    9. ')' → logprob: -11.377532958984375
    10. 'j' → logprob: -11.502532958984375

Token 118: ' k' (ID: 372)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6519366502761841
    2. ' j' → logprob: -0.7769366502761841
    3. ' n' → logprob: -4.9019365310668945
    4. 'n' → logprob: -5.2769365310668945
    5. ' M' → logprob: -6.1519365310668945
    6. 'M' → logprob: -6.9019365310668945
    7. 'k' → logprob: -7.6519365310668945
    8. ' l' → logprob: -7.6519365310668945
    9. ' k' → logprob: -7.6519365310668945
    10. 'l' → logprob: -8.151936531066895

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19055569171905518
    2. '):' → logprob: -1.8155556917190552
    3. ' ,' → logprob: -5.565555572509766
    4. ')' → logprob: -5.940555572509766
    5. ' ):' → logprob: -6.065555572509766
    6. '):
' → logprob: -6.940555572509766
    7. '   ' → logprob: -7.565555572509766
    8. ',j' → logprob: -8.815555572509766
    9. ' ' → logprob: -9.190555572509766
    10. ' )' → logprob: -9.815555572509766

Token 120: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5410838723182678
    2. ' j' → logprob: -1.291083812713623
    3. 'n' → logprob: -2.791083812713623
    4. ' n' → logprob: -3.041083812713623
    5. 'M' → logprob: -4.416083812713623
    6. ' M' → logprob: -4.416083812713623
    7. 'l' → logprob: -5.541083812713623
    8. ' l' → logprob: -5.791083812713623
    9. 'k' → logprob: -7.791083812713623
    10. ' ' → logprob: -8.041084289550781

Token 121: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4103509485721588
    2. '):' → logprob: -1.1603509187698364
    3. '):
' → logprob: -3.910351037979126
    4. ' ,' → logprob: -6.535350799560547
    5. ')' → logprob: -7.285350799560547
    6. ' ):' → logprob: -7.535350799560547
    7. '   ' → logprob: -8.535350799560547
    8. ' ' → logprob: -9.910350799560547
    9. '):
' → logprob: -10.035350799560547
    10. '  ' → logprob: -10.285350799560547

Token 122: '   ' (ID: 271)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.4564548134803772
    2. 'd' → logprob: -1.7064547538757324
    3. ' return' → logprob: -2.2064547538757324
    4. 'return' → logprob: -3.5814547538757324
    5. '(' → logprob: -4.456454753875732
    6. ' (' → logprob: -4.581454753875732
    7. ' roll' → logprob: -4.706454753875732
    8. '   ' → logprob: -5.081454753875732
    9. '(d' → logprob: -5.206454753875732
    10. 'roll' → logprob: -7.081454753875732

Token 123: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1453978270292282
    2. ' return' → logprob: -2.395397901535034
    3. 'd' → logprob: -3.395397901535034
    4. ' d' → logprob: -4.895397663116455
    5. 'roll' → logprob: -7.395397663116455
    6. '(' → logprob: -7.645397663116455
    7. 'term' → logprob: -7.645397663116455
    8. '(d' → logprob: -7.770397663116455
    9. ' term' → logprob: -8.145398139953613
    10. ' roll' → logprob: -8.145398139953613

Token 124: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9008679389953613
    2. ' k' → logprob: -1.1508679389953613
    3. 'k' → logprob: -2.2758679389953613
    4. 'i' → logprob: -2.5258679389953613
    5. ' d' → logprob: -3.0258679389953613
    6. ' j' → logprob: -3.6508679389953613
    7. 'd' → logprob: -4.400867938995361
    8. 'j' → logprob: -5.275867938995361
    9. ' ' → logprob: -6.900867938995361
    10. '   ' → logprob: -7.525867938995361

Token 125: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.32101935148239136
    2. ' >' → logprob: -1.9460194110870361
    3. ' ==' → logprob: -3.071019411087036
    4. ' <' → logprob: -3.571019411087036
    5. '[' → logprob: -4.196019172668457
    6. '<=' → logprob: -4.196019172668457
    7. '>' → logprob: -4.571019172668457
    8. ' >=' → logprob: -4.946019172668457
    9. '==' → logprob: -5.946019172668457
    10. ' ' → logprob: -6.071019172668457

Token 126: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.46383580565452576
    2. '3' → logprob: -1.5888358354568481
    3. ' ' → logprob: -2.4638357162475586
    4. '1' → logprob: -3.2138357162475586
    5. 'len' → logprob: -4.213835716247559
    6. 'k' → logprob: -4.713835716247559
    7. '0' → logprob: -4.838835716247559
    8. 'l' → logprob: -5.088835716247559
    9. 'd' → logprob: -6.338835716247559
    10. '4' → logprob: -7.213835716247559

Token 127: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5970889329910278
    2. '3' → logprob: -0.9720889329910278
    3. 'l' → logprob: -3.5970888137817383
    4. '1' → logprob: -3.9720888137817383
    5. '0' → logprob: -4.722088813781738
    6. 'k' → logprob: -5.347088813781738
    7. 'len' → logprob: -5.347088813781738
    8. '4' → logprob: -6.222088813781738
    9. 'd' → logprob: -6.597088813781738
    10. ' ' → logprob: -6.597088813781738

Token 128: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2904571294784546
    2. ':
' → logprob: -1.4154571294784546
    3. '       ' → logprob: -5.415457248687744
    4. ':return' → logprob: -6.040457248687744
    5. '   ' → logprob: -6.290457248687744
    6. ' and' → logprob: -8.040456771850586
    7. ',' → logprob: -10.165456771850586
    8. ' :
' → logprob: -10.290456771850586
    9. ' :' → logprob: -10.790456771850586
    10. '):
' → logprob: -11.040456771850586

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011776409111917019
    2. ' return' → logprob: -4.636776447296143
    3. 'return' → logprob: -6.636776447296143
    4. '0' → logprob: -8.886775970458984
    5. '        
' → logprob: -9.511775970458984
    6. '
' → logprob: -9.636775970458984
    7. '   ' → logprob: -9.761775970458984
    8. 'd' → logprob: -10.011775970458984
    9. ' 
' → logprob: -10.011775970458984
    10. '           ' → logprob: -10.636775970458984

Token 130: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5121040344238281
    2. 'return' (adapté à ' return') → logprob: -1.1371040344238281
    3. '       ' → logprob: -2.887104034423828
    4. '0' → logprob: -4.137104034423828
    5. ' ' → logprob: -5.512104034423828
    6. '   ' → logprob: -5.762104034423828
    7. 'd' → logprob: -7.887104034423828
    8. ' d' → logprob: -8.012104034423828
    9. '           ' → logprob: -9.137104034423828
    10. '1' → logprob: -10.012104034423828

Token 131: ' zeros' (ID: 42274)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.49075618386268616
    2. ' ' → logprob: -0.9907561540603638
    3. '1' → logprob: -4.365756034851074
    4. 'd' → logprob: -6.240756034851074
    5. ' d' → logprob: -7.240756034851074
    6. ' zeros' → logprob: -7.490756034851074
    7. 'zeros' → logprob: -8.240756034851074
    8. ' i' → logprob: -9.990756034851074
    9. ' [' → logprob: -10.240756034851074
    10. '   ' → logprob: -10.240756034851074

Token 132: '_like' (ID: 59737)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.09493685513734818
    2. '(' → logprob: -2.4699368476867676
    3. '(d' → logprob: -5.844936847686768
    4. '_like' → logprob: -5.969936847686768
    5. '(l' → logprob: -8.469937324523926
    6. '(n' → logprob: -9.469937324523926
    7. '(i' → logprob: -10.094937324523926
    8. '(len' → logprob: -10.219937324523926
    9. '(()' → logprob: -10.219937324523926
    10. '(
' → logprob: -10.344937324523926

Token 133: '_row' (ID: 19157)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.11371473222970963
    2. '(' → logprob: -2.2387146949768066
    3. '(
' → logprob: -7.863714694976807
    4. ' (' → logprob: -8.113715171813965
    5. 'd' → logprob: -9.488715171813965
    6. '(s' → logprob: -10.613715171813965
    7. '((' → logprob: -10.988715171813965
    8. '<|end|>' → logprob: -10.988715171813965
    9. '(

' → logprob: -11.113715171813965
    10. ' d' → logprob: -11.238715171813965

Token 134: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.04793500527739525
    2. 's' → logprob: -3.2979350090026855
    3. '(' → logprob: -4.6729350090026855
    4. ' (' → logprob: -8.797934532165527
    5. 'd' → logprob: -9.297934532165527
    6. '(s' → logprob: -9.297934532165527
    7. '[' → logprob: -10.047934532165527
    8. '(row' → logprob: -10.797934532165527
    9. ')' → logprob: -11.297934532165527
    10. '[d' → logprob: -11.422934532165527

Token 135: ')
' (ID: 446)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.898837685585022
    2. '[i' → logprob: -1.398837685585022
    3. '(' → logprob: -2.0238375663757324
    4. '(i' → logprob: -2.5238375663757324
    5. '(d' → logprob: -2.6488375663757324
    6. ')' → logprob: -3.6488375663757324
    7. '[d' → logprob: -3.6488375663757324
    8. '[k' → logprob: -6.148837566375732
    9. '(k' → logprob: -6.773837566375732
    10. ',' → logprob: -6.898837566375732

Token 136: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05242230370640755
    2. '   ' → logprob: -3.427422285079956
    3. '[' → logprob: -5.177422523498535
    4. '()' → logprob: -5.802422523498535
    5. '(n' → logprob: -6.052422523498535
    6. '(
' → logprob: -6.427422523498535
    7. ')' → logprob: -6.927422523498535
    8. '(d' → logprob: -7.052422523498535
    9. '(i' → logprob: -7.302422523498535
    10. 'def' → logprob: -7.552422523498535

Token 137: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21081462502479553
    2. ' else' → logprob: -2.2108147144317627
    3. 'else' → logprob: -2.7108147144317627
    4. 'def' → logprob: -5.210814476013184
    5. '
' → logprob: -6.085814476013184
    6. ' ' → logprob: -6.210814476013184
    7. '[' → logprob: -7.835814476013184
    8. ' elif' → logprob: -7.835814476013184
    9. ' return' → logprob: -7.960814476013184
    10. ' def' → logprob: -7.960814476013184

Token 138: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.1436547189950943
    2. 'd' → logprob: -2.0186548233032227
    3. ' roll' → logprob: -7.893654823303223
    4. '(d' → logprob: -8.893654823303223
    5. '(' → logprob: -9.018654823303223
    6. ' ' → logprob: -9.393654823303223
    7. 'roll' → logprob: -9.393654823303223
    8. '   ' → logprob: -9.643654823303223
    9. ' (' → logprob: -9.643654823303223
    10. '	d' → logprob: -12.206154823303223

Token 139: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0043617598712444305
    2. '[k' → logprob: -5.629361629486084
    3. '[' → logprob: -7.379361629486084
    4. 'i' → logprob: -10.504362106323242
    5. '[j' → logprob: -10.504362106323242
    6. '[
' → logprob: -10.879362106323242
    7. '(i' → logprob: -11.629362106323242
    8. ' [' → logprob: -11.754362106323242
    9. ' i' → logprob: -12.129362106323242
    10. '[d' → logprob: -12.504362106323242

Token 140: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09637393057346344
    2. ' -' → logprob: -2.846374034881592
    3. '][' → logprob: -3.596374034881592
    4. ']' → logprob: -5.971374034881592
    5. '-k' → logprob: -5.971374034881592
    6. ',' → logprob: -8.096373558044434
    7. ',k' → logprob: -8.471373558044434
    8. '[k' → logprob: -8.971373558044434
    9. ' ][' → logprob: -9.346373558044434
    10. ' ' → logprob: -9.346373558044434

Token 141: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.024244774132966995
    2. '2' → logprob: -4.024244785308838
    3. '3' → logprob: -5.274244785308838
    4. ' ' → logprob: -7.524244785308838
    5. 'k' → logprob: -8.64924430847168
    6. 'j' → logprob: -8.89924430847168
    7. '```' → logprob: -10.83674430847168
    8. '   ' → logprob: -11.02424430847168
    9. '5' → logprob: -11.52424430847168
    10. '-' → logprob: -11.77424430847168

Token 142: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3508116900920868
    2. ']' → logprob: -1.8508117198944092
    3. ',' → logprob: -2.225811719894409
    4. ',k' → logprob: -4.35081148147583
    5. '])' → logprob: -5.10081148147583
    6. '][:' → logprob: -5.22581148147583
    7. ',j' → logprob: -5.60081148147583
    8. ' ,' → logprob: -7.85081148147583
    9. ' ][' → logprob: -8.100811958312988
    10. ',:,' → logprob: -8.350811958312988

Token 143: ' *' (ID: 425)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6872000098228455
    2. '[k' → logprob: -1.0622000694274902
    3. '[j' → logprob: -2.6872000694274902
    4. '[:,' → logprob: -3.6872000694274902
    5. '*' → logprob: -4.81220006942749
    6. '[:]' → logprob: -5.18720006942749
    7. '[i' → logprob: -5.31220006942749
    8. ',' → logprob: -5.43720006942749
    9. ',k' → logprob: -5.68720006942749
    10. ' [' → logprob: -5.68720006942749

Token 144: ' k' (ID: 372)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3964385986328125
    2. ' d' → logprob: -1.3964385986328125
    3. '2' → logprob: -1.7714385986328125
    4. 'd' → logprob: -2.1464385986328125
    5. ' roll' → logprob: -2.5214385986328125
    6. 'roll' → logprob: -3.0214385986328125
    7. '3' → logprob: -3.6464385986328125
    8. '(' → logprob: -3.8964385986328125
    9. ' (' → logprob: -4.1464385986328125
    10. '(d' → logprob: -5.0214385986328125

Token 145: ' *' (ID: 425)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.40177977085113525
    2. '[' → logprob: -1.4017797708511353
    3. '<|end|>' → logprob: -3.0267796516418457
    4. '[k' → logprob: -4.651779651641846
    5. '[i' → logprob: -5.276779651641846
    6. ',' → logprob: -5.401779651641846
    7. '*' → logprob: -6.276779651641846
    8. '[
' → logprob: -6.276779651641846
    9. '[:,' → logprob: -6.401779651641846
    10. ',j' → logprob: -6.526779651641846

Token 146: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.176806092262268
    2. 'j' → logprob: -1.676806092262268
    3. ' d' → logprob: -1.676806092262268
    4. ' ' → logprob: -1.926806092262268
    5. 'd' → logprob: -2.4268059730529785
    6. '2' → logprob: -3.4268059730529785
    7. '3' → logprob: -4.5518059730529785
    8. ' k' → logprob: -4.6768059730529785
    9. '1' → logprob: -5.4268059730529785
    10. 'k' → logprob: -5.4268059730529785

Token 147: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 148: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5880205631256104
    2. '_' → logprob: -1.5880205631256104
    3. '[' → logprob: -1.9630205631256104
    4. '(
' → logprob: -3.8380205631256104
    5. 'def' → logprob: -4.088020324707031
    6. ' ' → logprob: -4.088020324707031
    7. ')' → logprob: -4.588020324707031
    8. '()' → logprob: -4.838020324707031
    9. '   ' → logprob: -4.838020324707031
    10. '<|end|>' → logprob: -5.713020324707031

Token 149: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.354038268327713
    2. ' compute' → logprob: -1.2290382385253906
    3. ' zeros' → logprob: -5.979038238525391
    4. 'zeros' → logprob: -6.229038238525391
    5. 'get' → logprob: -7.979038238525391
    6. ' get' → logprob: -9.22903823852539
    7. ' roll' → logprob: -9.22903823852539
    8. 'roll' → logprob: -9.47903823852539
    9. 'def' → logprob: -9.72903823852539
    10. 'initialize' → logprob: -9.85403823852539

Token 150: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.0008309515542350709
    2. '_terms' → logprob: -8.37583065032959
    3. '_sum' → logprob: -8.87583065032959
    4. '_' → logprob: -9.37583065032959
    5. '_factor' → logprob: -10.37583065032959
    6. '_d' → logprob: -10.62583065032959
    7. '_max' → logprob: -10.75083065032959
    8. '_diff' → logprob: -10.87583065032959
    9. '_row' → logprob: -10.87583065032959
    10. '_value' → logprob: -11.00083065032959

Token 151: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004977574571967125
    2. '2' → logprob: -5.379977703094482
    3. '(' → logprob: -8.129977226257324
    4. '_' → logprob: -10.129977226257324
    5. '3' → logprob: -12.129977226257324
    6. '```' → logprob: -12.254977226257324
    7. '(d' → logprob: -12.629977226257324
    8. '0' → logprob: -12.754977226257324
    9. ' ' → logprob: -13.254977226257324
    10. ' (' → logprob: -13.504977226257324

Token 152: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.002508239820599556
    2. '(' → logprob: -6.002508163452148
    3. ' (' → logprob: -11.002508163452148
    4. ':' → logprob: -11.377508163452148
    5. '(def' → logprob: -13.377508163452148
    6. '(
' → logprob: -14.502508163452148
    7. ',' → logprob: -15.252508163452148
    8. '(s' → logprob: -15.377508163452148
    9. '[' → logprob: -15.502508163452148
    10. '(D' → logprob: -15.752508163452148

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.551721889991313e-05
    2. ' ,' → logprob: -10.000065803527832
    3. ',i' → logprob: -11.875065803527832
    4. '[' → logprob: -12.375065803527832
    5. '[i' → logprob: -13.000065803527832
    6. '   ' → logprob: -13.250065803527832
    7. ',d' → logprob: -13.875065803527832
    8. 'def' → logprob: -14.250065803527832
    9. ',
' → logprob: -14.875065803527832
    10. '[],' → logprob: -15.000065803527832

Token 154: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.44760745763778687
    2. 'i' → logprob: -1.0726075172424316
    3. ' j' → logprob: -4.572607517242432
    4. 'j' → logprob: -5.447607517242432
    5. ' k' → logprob: -6.197607517242432
    6. 'k' → logprob: -7.072607517242432
    7. ' d' → logprob: -8.322607040405273
    8. ' ' → logprob: -8.572607040405273
    9. 'd' → logprob: -8.947607040405273
    10. ',' → logprob: -9.197607040405273

Token 155: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016415320336818695
    2. ')' → logprob: -4.391415119171143
    3. ',j' → logprob: -7.016415119171143
    4. '   ' → logprob: -7.391415119171143
    5. ',i' → logprob: -7.641415119171143
    6. '[' → logprob: -7.766415119171143
    7. ' ,' → logprob: -8.2664155960083
    8. '[i' → logprob: -8.2664155960083
    9. '[j' → logprob: -8.2664155960083
    10. ',k' → logprob: -8.2664155960083

Token 156: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7107794284820557
    2. ' j' → logprob: -1.7107794284820557
    3. 'i' → logprob: -1.8357794284820557
    4. ' i' → logprob: -2.5857794284820557
    5. 'k' → logprob: -2.9607794284820557
    6. ')' → logprob: -3.9607794284820557
    7. ' k' → logprob: -4.210779190063477
    8. ',' → logprob: -5.835779190063477
    9. ' ' → logprob: -7.210779190063477
    10. 'n' → logprob: -7.648279190063477

Token 157: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5316805243492126
    2. ',' → logprob: -1.0316805839538574
    3. '):
' → logprob: -2.9066805839538574
    4. ')' → logprob: -7.156680583953857
    5. ',i' → logprob: -9.1566801071167
    6. '   ' → logprob: -9.5316801071167
    7. '):

' → logprob: -9.6566801071167
    8. '[' → logprob: -9.7816801071167
    9. '[i' → logprob: -10.2816801071167
    10. ',
' → logprob: -10.4066801071167

Token 158: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.30741652846336365
    2. ' d' → logprob: -2.0574164390563965
    3. 'return' → logprob: -2.3074164390563965
    4. '   ' → logprob: -4.1824164390563965
    5. 'd' → logprob: -4.4324164390563965
    6. ' roll' → logprob: -5.3074164390563965
    7. ' zeros' → logprob: -6.3074164390563965
    8. ' if' → logprob: -6.3074164390563965
    9. 'roll' → logprob: -8.182416915893555
    10. ' def' → logprob: -8.182416915893555

Token 159: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.4345215857028961
    2. ' return' → logprob: -1.1845215559005737
    3. ' d' → logprob: -4.309521675109863
    4. 'd' → logprob: -4.434521675109863
    5. ' roll' → logprob: -4.809521675109863
    6. ' zeros' → logprob: -5.684521675109863
    7. 'roll' → logprob: -5.809521675109863
    8. 'zeros' → logprob: -6.059521675109863
    9. ' if' → logprob: -6.559521675109863
    10. 'if' (adapté à ' if') → logprob: -6.809521675109863

Token 160: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.8747545480728149
    2. ' j' → logprob: -0.9997545480728149
    3. 'k' → logprob: -1.874754548072815
    4. 'j' → logprob: -2.8747544288635254
    5. ' d' → logprob: -6.249754428863525
    6. ' not' → logprob: -7.374754428863525
    7. ' i' → logprob: -7.624754428863525
    8. ' ' → logprob: -7.749754428863525
    9. 'd' → logprob: -8.249754905700684
    10. ' (' → logprob: -8.374754905700684

Token 161: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.47498875856399536
    2. '<' → logprob: -0.9749887585639954
    3. ' ' → logprob: -7.59998893737793
    4. '[' → logprob: -8.59998893737793
    5. '>' → logprob: -9.97498893737793
    6. ' >' → logprob: -10.09998893737793
    7. '<|end|>' → logprob: -10.59998893737793
    8. '<int' → logprob: -11.72498893737793
    9. 's' → logprob: -11.72498893737793
    10. ' >=' → logprob: -11.91248893737793

Token 162: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04512699693441391
    2. '3' → logprob: -3.6701269149780273
    3. '1' → logprob: -4.795126914978027
    4. '2' → logprob: -5.045126914978027
    5. ' ' → logprob: -5.545126914978027
    6. '4' → logprob: -11.107626914978027
    7. '   ' → logprob: -12.857626914978027
    8. '  ' → logprob: -13.045126914978027
    9. 'k' → logprob: -13.045126914978027
    10. '5' → logprob: -13.107626914978027

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021754804998636246
    2. '3' → logprob: -4.396754741668701
    3. '1' → logprob: -5.021754741668701
    4. '2' → logprob: -6.021754741668701
    5. ' ' → logprob: -8.77175521850586
    6. '4' → logprob: -11.20925521850586
    7. '5' → logprob: -13.08425521850586
    8. 'k' → logprob: -13.58425521850586
    9. '```' → logprob: -13.58425521850586
    10. '-' → logprob: -13.64675521850586

Token 164: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5331815481185913
    2. ':' → logprob: -0.9081815481185913
    3. '   ' → logprob: -5.408181667327881
    4. ':return' → logprob: -5.783181667327881
    5. '       ' → logprob: -6.283181667327881
    6. ' or' → logprob: -7.908181667327881
    7. '):
' → logprob: -9.658181190490723
    8. ',' → logprob: -10.658181190490723
    9. ' :
' → logprob: -10.908181190490723
    10. ':

' → logprob: -11.033181190490723

Token 165: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03772091120481491
    2. '   ' → logprob: -4.162720680236816
    3. 'return' → logprob: -4.412720680236816
    4. ' return' → logprob: -4.787720680236816
    5. ':return' → logprob: -7.662720680236816
    6. ' ' → logprob: -8.912720680236816
    7. '0' → logprob: -9.162720680236816
    8. ',' → logprob: -9.912720680236816
    9. '	return' → logprob: -10.037720680236816
    10. '     ' → logprob: -10.662720680236816

Token 166: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.21493779122829437
    2. 'return' (adapté à ' return') → logprob: -1.8399378061294556
    3. ' zeros' → logprob: -3.964937686920166
    4. '   ' → logprob: -4.464937686920166
    5. '       ' → logprob: -6.464937686920166
    6. 'zeros' → logprob: -7.089937686920166
    7. ' ' → logprob: -7.214937686920166
    8. '0' → logprob: -7.589937686920166
    9. ':return' → logprob: -8.839938163757324
    10. '	return' → logprob: -9.589938163757324

Token 167: ' zeros' (ID: 42274)
  Prédit: ' zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.3730207681655884
    2. 'zeros' → logprob: -1.3730207681655884
    3. '0' → logprob: -2.873020648956299
    4. ' ' → logprob: -6.748020648956299
    5. '.zeros' → logprob: -9.498021125793457
    6. '   ' → logprob: -9.998021125793457
    7. 'zero' → logprob: -10.123021125793457
    8. ' zero' → logprob: -10.623021125793457
    9. 'Zeros' → logprob: -10.810521125793457
    10. '1' → logprob: -11.123021125793457

Token 168: '_like' (ID: 59737)
  Prédit: '_like'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_like' → logprob: -0.13737280666828156
    2. '((' → logprob: -2.2623727321624756
    3. '(d' → logprob: -4.387372970581055
    4. '(' → logprob: -4.512372970581055
    5. 'like' → logprob: -7.637372970581055
    6. '(k' → logprob: -9.512372970581055
    7. ')' → logprob: -9.887372970581055
    8. '(n' → logprob: -10.387372970581055
    9. '(len' → logprob: -10.637372970581055
    10. '(()' → logprob: -10.762372970581055

Token 169: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0628618523478508
    2. '(d' → logprob: -3.062861919403076
    3. 'row' → logprob: -4.562861919403076
    4. 'd' → logprob: -5.937861919403076
    5. '_d' → logprob: -8.437861442565918
    6. ' row' → logprob: -8.562861442565918
    7. ' d' → logprob: -8.562861442565918
    8. '(row' → logprob: -9.437861442565918
    9. '(' → logprob: -9.562861442565918
    10. 'Row' → logprob: -10.187861442565918

Token 170: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -1.652451464906335e-05
    2. '(' → logprob: -11.375016212463379
    3. ' (' → logprob: -12.750016212463379
    4. 'd' → logprob: -13.500016212463379
    5. '   ' → logprob: -15.500016212463379
    6. ' d' → logprob: -16.500017166137695
    7. ')' → logprob: -16.500017166137695
    8. 's' → logprob: -16.750017166137695
    9. ',' → logprob: -16.875017166137695
    10. '<|end|>' → logprob: -17.000017166137695

Token 171: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04357260465621948
    2. ')
' → logprob: -3.1685726642608643
    3. '   ' → logprob: -7.543572425842285
    4. '[' → logprob: -10.918572425842285
    5. ')
' → logprob: -11.793572425842285
    6. ')

' → logprob: -12.043572425842285
    7. ' )' → logprob: -12.418572425842285
    8. ')d' → logprob: -13.668572425842285
    9. '):
' → logprob: -13.918572425842285
    10. ' ' → logprob: -14.168572425842285

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005564447958022356
    2. ' return' → logprob: -6.880564212799072
    3. '[' → logprob: -7.005564212799072
    4. ' ' → logprob: -7.130564212799072
    5. '	return' → logprob: -7.255564212799072
    6. 'return' → logprob: -7.755564212799072
    7. ')' → logprob: -7.755564212799072
    8. '
' → logprob: -8.25556468963623
    9. '    
' → logprob: -8.25556468963623
    10. '+' → logprob: -9.38056468963623

Token 173: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4772290587425232
    2. 'return' (adapté à ' return') → logprob: -1.602229118347168
    3. '   ' → logprob: -1.727229118347168
    4. '	return' → logprob: -8.727229118347168
    5. 'def' → logprob: -10.477229118347168
    6. ' ' → logprob: -10.852229118347168
    7. 'import' → logprob: -11.727229118347168
    8. ':return' → logprob: -11.852229118347168
    9. '```' → logprob: -12.102229118347168
    10. ' def' → logprob: -12.102229118347168

Token 174: ' roll' (ID: 8465)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2074621021747589
    2. 'd' → logprob: -1.7074620723724365
    3. ' roll' → logprob: -5.957462310791016
    4. 'roll' → logprob: -6.832462310791016
    5. '(' → logprob: -7.332462310791016
    6. '(d' → logprob: -7.582462310791016
    7. ' (' → logprob: -7.832462310791016
    8. '   ' → logprob: -8.582462310791016
    9. ' ' → logprob: -8.707462310791016
    10. ' zeros' → logprob: -9.832462310791016

Token 175: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.001176416757516563
    2. '(' → logprob: -6.751176357269287
    3. ' (' → logprob: -12.751176834106445
    4. '(
' → logprob: -13.501176834106445
    5. 'd' → logprob: -14.376176834106445
    6. '((' → logprob: -14.376176834106445
    7. ',d' → logprob: -15.751176834106445
    8. ' ' → logprob: -15.876176834106445
    9. ')' → logprob: -16.501176834106445
    10. ',' → logprob: -16.626176834106445

Token 176: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0011210456723347306
    2. '[' → logprob: -7.8761210441589355
    3. ',k' → logprob: -8.376121520996094
    4. ',' → logprob: -8.751121520996094
    5. '[-' → logprob: -9.751121520996094
    6. '[d' → logprob: -9.876121520996094
    7. '[i' → logprob: -10.001121520996094
    8. '(k' → logprob: -10.501121520996094
    9. ' [' → logprob: -10.501121520996094
    10. '[:,' → logprob: -10.501121520996094

Token 177: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0070819067768752575
    2. ',' → logprob: -5.507081985473633
    3. '],[' → logprob: -6.257081985473633
    4. ']' → logprob: -7.632081985473633
    5. '][' → logprob: -9.132081985473633
    6. ',k' → logprob: -9.132081985473633
    7. ',j' → logprob: -9.507081985473633
    8. '])' → logprob: -9.757081985473633
    9. ',+' → logprob: -10.507081985473633
    10. ',-' → logprob: -10.507081985473633

Token 178: ' -' (ID: 533)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13837088644504547
    2. 'j' → logprob: -2.888370990753174
    3. '-' → logprob: -3.513370990753174
    4. ' ' → logprob: -3.888370990753174
    5. '-j' → logprob: -4.638370990753174
    6. ' j' → logprob: -4.763370990753174
    7. ' -' → logprob: -6.013370990753174
    8. '2' → logprob: -7.138370990753174
    9. '+' → logprob: -8.263370513916016
    10. '3' → logprob: -8.388370513916016

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011221944354474545
    2. 'j' → logprob: -5.011221885681152
    3. '5' → logprob: -6.386221885681152
    4. '2' → logprob: -6.386221885681152
    5. '3' → logprob: -7.511221885681152
    6. '(' → logprob: -9.011221885681152
    7. '4' → logprob: -9.011221885681152
    8. 'k' → logprob: -9.511221885681152
    9. ' ' → logprob: -10.011221885681152
    10. '10' → logprob: -10.386221885681152

Token 180: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004331253003329039
    2. ',' → logprob: -5.504331111907959
    3. ' )' → logprob: -8.754331588745117
    4. '   ' → logprob: -10.254331588745117
    5. ')*' → logprob: -11.129331588745117
    6. ' ,' → logprob: -11.129331588745117
    7. ')
' → logprob: -11.504331588745117
    8. '),' → logprob: -11.879331588745117
    9. '))' → logprob: -13.004331588745117
    10. '  ' → logprob: -13.129331588745117

Token 181: ' *' (ID: 425)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5782005190849304
    2. '<|end|>' → logprob: -0.8282005190849304
    3. ')' → logprob: -6.453200340270996
    4. '
' → logprob: -8.703200340270996
    5. '```' → logprob: -8.828200340270996
    6. ' def' → logprob: -8.953200340270996
    7. '<|end|>' → logprob: -9.453200340270996
    8. '[' → logprob: -10.078200340270996
    9. ',' → logprob: -11.078200340270996
    10. '  
' → logprob: -11.578200340270996

Token 182: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.13739202916622162
    2. 'k' → logprob: -2.637392044067383
    3. ' j' → logprob: -3.137392044067383
    4. '(' → logprob: -5.262392044067383
    5. ' k' → logprob: -6.262392044067383
    6. '(k' → logprob: -6.637392044067383
    7. ' (' → logprob: -6.887392044067383
    8. ' ' → logprob: -7.137392044067383
    9. '(j' → logprob: -7.262392044067383
    10. 'i' → logprob: -7.262392044067383

Token 183: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.18127763271331787
    2. '<|end|>' → logprob: -1.8062776327133179
    3. '
' → logprob: -7.056277751922607
    4. ' def' → logprob: -8.18127727508545
    5. '```' → logprob: -9.43127727508545
    6. '<|end|>' → logprob: -9.80627727508545
    7. ')' → logprob: -9.93127727508545
    8. '

' → logprob: -9.93127727508545
    9. '\' → logprob: -10.30627727508545
    10. '  
' → logprob: -10.30627727508545

Token 184: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0020041766110807657
    2. '<|end|>' → logprob: -6.377004146575928
    3. ' def' → logprob: -8.502004623413086
    4. ')' → logprob: -10.627004623413086
    5. '[' → logprob: -10.752004623413086
    6. '```' → logprob: -11.002004623413086
    7. '
' → logprob: -11.252004623413086
    8. '  
' → logprob: -12.627004623413086
    9. '<|end|>' → logprob: -12.877004623413086
    10. '[
' → logprob: -13.002004623413086

Token 185: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.004402344115078449
    2. ' compute' → logprob: -5.504402160644531
    3. 'get' → logprob: -8.379402160644531
    4. 'def' → logprob: -9.754402160644531
    5. 'zeros' → logprob: -11.504402160644531
    6. 'calculate' → logprob: -12.504402160644531
    7. 'define' → logprob: -12.879402160644531
    8. 'com' → logprob: -13.254402160644531
    9. 'initialize' → logprob: -13.379402160644531
    10. 'roll' → logprob: -13.504402160644531

Token 186: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.0005218160222284496
    2. 'term' → logprob: -7.875521659851074
    3. 'def' → logprob: -10.000521659851074
    4. '_terms' → logprob: -10.000521659851074
    5. '_' → logprob: -10.875521659851074
    6. '_sum' → logprob: -12.625521659851074
    7. '(term' → logprob: -13.125521659851074
    8. 'd' → logprob: -13.500521659851074
    9. 'Term' → logprob: -13.625521659851074
    10. '_factor' → logprob: -13.750521659851074

Token 187: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2552672028541565
    2. '2' → logprob: -1.7552671432495117
    3. '1' → logprob: -3.1302671432495117
    4. '(d' → logprob: -4.880267143249512
    5. '(' → logprob: -7.255267143249512
    6. '```' → logprob: -8.505267143249512
    7. '_' → logprob: -9.630267143249512
    8. 'def' → logprob: -10.880267143249512
    9. ' (' → logprob: -10.880267143249512
    10. ' ' → logprob: -11.130267143249512

Token 188: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0005780545179732144
    2. '(' → logprob: -7.500577926635742
    3. '(def' → logprob: -11.125577926635742
    4. ' (' → logprob: -11.750577926635742
    5. 'def' → logprob: -13.375577926635742
    6. '```' → logprob: -15.125577926635742
    7. '(
' → logprob: -15.250577926635742
    8. '(defun' → logprob: -16.250577926635742
    9. 'd' → logprob: -16.875577926635742
    10. ',' → logprob: -17.500577926635742

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019221604452468455
    2. ' ,' → logprob: -9.375192642211914
    3. ',d' → logprob: -9.375192642211914
    4. 'd' → logprob: -11.375192642211914
    5. ' d' → logprob: -12.875192642211914
    6. '   ' → logprob: -13.500192642211914
    7. ',i' → logprob: -13.500192642211914
    8. 'def' → logprob: -13.625192642211914
    9. ',k' → logprob: -14.375192642211914
    10. '```' → logprob: -14.625192642211914

Token 190: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.531675398349762
    2. 'j' → logprob: -1.5316753387451172
    3. ' k' → logprob: -2.656675338745117
    4. ' i' → logprob: -2.656675338745117
    5. 'k' → logprob: -3.531675338745117
    6. 'i' → logprob: -3.781675338745117
    7. ' d' → logprob: -6.156675338745117
    8. 'd' → logprob: -7.531675338745117
    9. ' ' → logprob: -8.031675338745117
    10. ' n' → logprob: -8.281675338745117

Token 191: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042567000491544604
    2. ' ,' → logprob: -9.000425338745117
    3. '):
' → logprob: -9.375425338745117
    4. '):' → logprob: -9.375425338745117
    5. ',k' → logprob: -9.500425338745117
    6. '   ' → logprob: -11.125425338745117
    7. ',j' → logprob: -11.375425338745117
    8. ',i' → logprob: -11.375425338745117
    9. 'def' → logprob: -11.875425338745117
    10. ',
' → logprob: -13.125425338745117

Token 192: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2927805483341217
    2. '   ' → logprob: -1.7927805185317993
    3. ' if' → logprob: -2.542780637741089
    4. 'return' → logprob: -4.79278039932251
    5. ' return' → logprob: -8.292780876159668
    6. 'def' → logprob: -9.542780876159668
    7. '```' → logprob: -10.417780876159668
    8. '	if' → logprob: -10.917780876159668
    9. ' ' → logprob: -12.417780876159668
    10. '
' → logprob: -13.417780876159668

Token 193: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13788121938705444
    2. 'return' → logprob: -2.137881278991699
    3. ' if' → logprob: -4.637881278991699
    4. ' return' → logprob: -6.887881278991699
    5. '   ' → logprob: -9.0128812789917
    6. 'import' → logprob: -10.2628812789917
    7. 'def' → logprob: -11.6378812789917
    8. '```' → logprob: -12.2628812789917
    9. 'result' → logprob: -12.2628812789917
    10. '
' → logprob: -12.5128812789917

Token 194: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.3136865496635437
    2. 'j' → logprob: -1.3136866092681885
    3. '0' → logprob: -9.18868637084961
    4. '   ' → logprob: -9.56368637084961
    5. ' ' → logprob: -9.68868637084961
    6. 'k' → logprob: -9.68868637084961
    7. ' k' → logprob: -9.81368637084961
    8. '  ' → logprob: -11.31368637084961
    9. '	j' → logprob: -11.93868637084961
    10. '    ' → logprob: -12.18868637084961

Token 195: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3873767852783203
    2. '<' → logprob: -1.1373767852783203
    3. ' >=' → logprob: -8.51237678527832
    4. ' ' → logprob: -9.88737678527832
    5. ')' → logprob: -10.01237678527832
    6. '[' → logprob: -10.38737678527832
    7. '>=' → logprob: -10.38737678527832
    8. '>' → logprob: -10.51237678527832
    9. '<int' → logprob: -11.01237678527832
    10. ' >' → logprob: -11.13737678527832

Token 196: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006613265140913427
    2. ' ' → logprob: -7.375661373138428
    3. '1' → logprob: -10.62566089630127
    4. '2' → logprob: -13.00066089630127
    5. '-' → logprob: -13.37566089630127
    6. '3' → logprob: -13.62566089630127
    7. '   ' → logprob: -13.62566089630127
    8. '<|end|>' → logprob: -13.75066089630127
    9. '=' → logprob: -13.87566089630127
    10. '  ' → logprob: -14.25066089630127

Token 197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001977764768525958
    2. ' ' → logprob: -6.251977920532227
    3. '1' → logprob: -10.376977920532227
    4. '
' → logprob: -12.501977920532227
    5. '   ' → logprob: -12.626977920532227
    6. '3' → logprob: -12.876977920532227
    7. 'def' → logprob: -13.501977920532227
    8. '2' → logprob: -13.564477920532227
    9. '-' → logprob: -14.001977920532227
    10. '```' → logprob: -14.126977920532227

Token 198: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12468965351581573
    2. ':' → logprob: -2.3746895790100098
    3. '       ' → logprob: -3.8746895790100098
    4. '   ' → logprob: -6.37468957901001
    5. '):
' → logprob: -7.12468957901001
    6. ':return' → logprob: -7.24968957901001
    7. ',' → logprob: -9.374690055847168
    8. ':

' → logprob: -10.499690055847168
    9. 'return' → logprob: -10.874690055847168
    10. '<|end|>' → logprob: -10.999690055847168

Token 199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019687581807374954
    2. 'return' → logprob: -4.519687652587891
    3. ' return' → logprob: -5.394687652587891
    4. '   ' → logprob: -5.519687652587891
    5. 'def' → logprob: -11.01968765258789
    6. ':return' → logprob: -11.51968765258789
    7. ' ' → logprob: -11.89468765258789
    8. '	return' → logprob: -11.89468765258789
    9. '           ' → logprob: -12.39468765258789
    10. '     ' → logprob: -12.89468765258789

Token 200: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16044041514396667
    2. ' return' → logprob: -1.910440444946289
    3. '       ' → logprob: -9.035440444946289
    4. '   ' → logprob: -9.410440444946289
    5. '	return' → logprob: -11.910440444946289
    6. ' ' → logprob: -12.785440444946289
    7. 'eturn' → logprob: -13.285440444946289
    8. '<|end|>' → logprob: -13.660440444946289
    9. ':return' → logprob: -13.785440444946289
    10. '```' → logprob: -15.160440444946289

Token 201: ' zeros' (ID: 42274)
  Prédit: 'zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -0.029763920232653618
    2. ' zeros' → logprob: -3.52976393699646
    3. '0' → logprob: -12.279764175415039
    4. 'zero' → logprob: -12.654764175415039
    5. '.zeros' → logprob: -13.154764175415039
    6. '=zeros' → logprob: -13.904764175415039
    7. 'd' → logprob: -14.154764175415039
    8. '```' → logprob: -15.154764175415039
    9. 'Zeros' → logprob: -15.279764175415039
    10. '   ' → logprob: -15.404764175415039

Token 202: '_like' (ID: 59737)
  Prédit: '_like'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_like' → logprob: -0.00018375257786829025
    2. 'like' → logprob: -8.625184059143066
    3. '(d' → logprob: -13.875184059143066
    4. '-like' → logprob: -14.500184059143066
    5. '_' → logprob: -14.750184059143066
    6. '(' → logprob: -14.875184059143066
    7. 'd' → logprob: -15.125184059143066
    8. 'elike' → logprob: -15.500184059143066
    9. '```' → logprob: -15.750184059143066
    10. '_here' → logprob: -15.875184059143066

Token 203: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.004841273184865713
    2. 'row' → logprob: -5.379841327667236
    3. 'd' → logprob: -8.504840850830078
    4. '(d' → logprob: -11.629840850830078
    5. '_rows' → logprob: -13.379840850830078
    6. 'rown' → logprob: -13.504840850830078
    7. 'Row' → logprob: -13.504840850830078
    8. ' row' → logprob: -14.004840850830078
    9. '(row' → logprob: -14.254840850830078
    10. 'def' → logprob: -14.379840850830078

Token 204: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -4.36574100604048e-06
    2. 'd' → logprob: -12.625004768371582
    3. '(' → logprob: -15.250004768371582
    4. ',d' → logprob: -15.500004768371582
    5. 'def' → logprob: -15.500004768371582
    6. '```' → logprob: -15.750004768371582
    7. ' (' → logprob: -17.375003814697266
    8. ')d' → logprob: -17.500003814697266
    9. '(def' → logprob: -17.875003814697266
    10. '<|end|>' → logprob: -18.000003814697266

Token 205: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16163043677806854
    2. ')
' → logprob: -1.911630392074585
    3. '(d' → logprob: -6.911630630493164
    4. ')d' → logprob: -8.411630630493164
    5. '   ' → logprob: -9.411630630493164
    6. 'd' → logprob: -9.536630630493164
    7. ')
' → logprob: -11.411630630493164
    8. ')

' → logprob: -12.161630630493164
    9. ')`
' → logprob: -12.161630630493164
    10. '(' → logprob: -13.411630630493164

Token 206: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0271617379039526
    2. 'return' → logprob: -4.152161598205566
    3. ' return' → logprob: -4.527161598205566
    4. '	return' → logprob: -9.152161598205566
    5. '
' → logprob: -9.277161598205566
    6. '[' → logprob: -11.152161598205566
    7. 'def' → logprob: -11.777161598205566
    8. '    
' → logprob: -12.027161598205566
    9. '```' → logprob: -12.277161598205566
    10. ':return' → logprob: -12.277161598205566

Token 207: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.003512168535962701
    2. '   ' → logprob: -6.003512382507324
    3. ' return' → logprob: -6.878512382507324
    4. '```' → logprob: -12.628512382507324
    5. '	return' → logprob: -13.378512382507324
    6. 'def' → logprob: -14.878512382507324
    7. 'import' → logprob: -15.503512382507324
    8. ' ' → logprob: -15.878512382507324
    9. '``' → logprob: -15.878512382507324
    10. '
' → logprob: -16.003511428833008

Token 208: ' roll' (ID: 8465)
  Prédit: ' roll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' roll' → logprob: -0.1948239505290985
    2. 'roll' → logprob: -1.944823980331421
    3. ' d' → logprob: -3.819823980331421
    4. 'd' → logprob: -4.444823741912842
    5. ' zeros' → logprob: -9.31982421875
    6. 'zeros' → logprob: -10.19482421875
    7. '-roll' → logprob: -10.19482421875
    8. ' ' → logprob: -10.44482421875
    9. '(' → logprob: -11.31982421875
    10. '   ' → logprob: -11.38232421875

Token 209: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00016277639952022582
    2. '(' → logprob: -8.750163078308105
    3. 'd' → logprob: -12.625163078308105
    4. '(
' → logprob: -14.625163078308105
    5. '[d' → logprob: -15.875163078308105
    6. ' (' → logprob: -16.37516212463379
    7. '```' → logprob: -16.37516212463379
    8. '[' → logprob: -17.25016212463379
    9. '(

' → logprob: -17.75016212463379
    10. ',d' → logprob: -17.75016212463379

Token 210: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.759734732331708e-05
    2. '[' → logprob: -11.375017166137695
    3. 'j' → logprob: -12.625017166137695
    4. '[k' → logprob: -13.875017166137695
    5. '[
' → logprob: -14.125017166137695
    6. ',j' → logprob: -15.250017166137695
    7. '[i' → logprob: -15.500017166137695
    8. '(j' → logprob: -16.125017166137695
    9. ')' → logprob: -16.625017166137695
    10. ',' → logprob: -16.625017166137695

Token 211: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.3161628544330597
    2. ',' → logprob: -1.3161628246307373
    3. '),' → logprob: -6.316163063049316
    4. ']' → logprob: -7.816163063049316
    5. ' ,' → logprob: -8.816163063049316
    6. ',j' → logprob: -8.816163063049316
    7. ']+' → logprob: -9.816163063049316
    8. 'j' → logprob: -10.066163063049316
    9. '   ' → logprob: -10.191163063049316
    10. '},' → logprob: -10.441163063049316

Token 212: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.546710729598999
    2. '-' → logprob: -1.296710729598999
    3. ' ' → logprob: -2.046710729598999
    4. '0' → logprob: -4.796710968017578
    5. ' -' → logprob: -4.921710968017578
    6. '2' → logprob: -6.421710968017578
    7. ')' → logprob: -7.296710968017578
    8. '+' → logprob: -7.546710968017578
    9. '  ' → logprob: -10.546710968017578
    10. '   ' → logprob: -10.609210968017578

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18041090667247772
    2. '-' → logprob: -1.8054108619689941
    3. '0' → logprob: -7.930410861968994
    4. '+' → logprob: -9.180411338806152
    5. ' ' → logprob: -9.180411338806152
    6. ')' → logprob: -9.930411338806152
    7. '2' → logprob: -10.555411338806152
    8. ' -' → logprob: -11.680411338806152
    9. '   ' → logprob: -13.242911338806152
    10. '(' → logprob: -13.555411338806152

Token 214: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8789383830153383e-05
    2. ')
' → logprob: -12.000019073486328
    3. ' )' → logprob: -12.000019073486328
    4. '   ' → logprob: -12.750019073486328
    5. 'def' → logprob: -14.375019073486328
    6. '))' → logprob: -14.375019073486328
    7. '()' → logprob: -14.750019073486328
    8. ')*' → logprob: -14.875019073486328
    9. ')

' → logprob: -14.875019073486328
    10. ')}' → logprob: -15.125019073486328

Token 215: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013713110238313675
    2. ')' → logprob: -7.876371383666992
    3. '(' → logprob: -8.001371383666992
    4. '<|end|>' → logprob: -8.376371383666992
    5. '[' → logprob: -8.626371383666992
    6. ' def' → logprob: -9.126371383666992
    7. '_' → logprob: -10.251371383666992
    8. '\' → logprob: -10.626371383666992
    9. '   ' → logprob: -11.001371383666992
    10. ' ' → logprob: -11.501371383666992

Token 216: ' zeros' (ID: 42274)
  Prédit: ' zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.1136389747262001
    2. 'zeros' → logprob: -2.4886388778686523
    3. 'def' → logprob: -4.238638877868652
    4. ' compute' → logprob: -5.113638877868652
    5. 'compute' → logprob: -6.238638877868652
    6. 'n' → logprob: -7.863638877868652
    7. ' get' → logprob: -8.238638877868652
    8. 'get' → logprob: -8.488638877868652
    9. 'r' → logprob: -9.113638877868652
    10. 'x' → logprob: -9.113638877868652

Token 217: '_like' (ID: 59737)
  Prédit: '_like'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_like' → logprob: -3.249780638725497e-05
    2. '_' → logprob: -10.500032424926758
    3. '_l' → logprob: -13.500032424926758
    4. 'like' → logprob: -13.750032424926758
    5. '(' → logprob: -13.875032424926758
    6. '(_' → logprob: -14.000032424926758
    7. '_li' → logprob: -15.125032424926758
    8. '_line' → logprob: -17.125032424926758
    9. ' _' → logprob: -17.250032424926758
    10. '_else' → logprob: -17.250032424926758

Token 218: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.002692532492801547
    2. '(d' → logprob: -6.377692699432373
    3. '_d' → logprob: -8.252692222595215
    4. 'row' → logprob: -8.502692222595215
    5. 'def' → logprob: -8.627692222595215
    6. '_' → logprob: -9.002692222595215
    7. 'd' → logprob: -9.252692222595215
    8. '(row' → logprob: -10.127692222595215
    9. '_rows' → logprob: -10.252692222595215
    10. '_line' → logprob: -10.627692222595215

Token 219: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0233469158411026
    2. '(row' → logprob: -3.7733469009399414
    3. '(' → logprob: -9.773346900939941
    4. '(arr' → logprob: -10.648346900939941
    5. '(array' → logprob: -11.898346900939941
    6. ' (' → logprob: -12.023346900939941
    7. '(a' → logprob: -12.898346900939941
    8. 'row' → logprob: -13.023346900939941
    9. '(line' → logprob: -14.023346900939941
    10. '(
' → logprob: -14.398346900939941

Token 220: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4521941840648651
    2. '):
' → logprob: -1.0771942138671875
    3. '(d' → logprob: -4.0771942138671875
    4. ',' → logprob: -5.4521942138671875
    5. '(row' → logprob: -7.7021942138671875
    6. ')' → logprob: -8.077194213867188
    7. '):

' → logprob: -8.202194213867188
    8. '   ' → logprob: -8.202194213867188
    9. 'd' → logprob: -8.702194213867188
    10. '):
' → logprob: -8.702194213867188

Token 221: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.35207033157348633
    2. '   ' → logprob: -1.3520703315734863
    3. ' zeros' → logprob: -3.7270703315734863
    4. 'return' → logprob: -4.352070331573486
    5. 'zeros' → logprob: -6.852070331573486
    6. 'import' → logprob: -10.602069854736328
    7. '.zeros' → logprob: -11.352069854736328
    8. '	return' → logprob: -11.977069854736328
    9. '```' → logprob: -12.102069854736328
    10. ' import' → logprob: -12.977069854736328

Token 222: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7448821663856506
    2. ' return' → logprob: -0.9948821663856506
    3. ' zeros' → logprob: -2.494882106781006
    4. 'zeros' → logprob: -2.619882106781006
    5. 'import' → logprob: -9.994882583618164
    6. '   ' → logprob: -10.744882583618164
    7. 'from' → logprob: -10.744882583618164
    8. 'zero' → logprob: -12.494882583618164
    9. '.zeros' → logprob: -12.494882583618164
    10. ' d' → logprob: -12.494882583618164

Token 223: ' zeros' (ID: 42274)
  Prédit: 'zeros'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zeros' → logprob: -0.43094533681869507
    2. ' zeros' → logprob: -1.0559453964233398
    3. ' d' → logprob: -6.55594539642334
    4. 'd' → logprob: -7.18094539642334
    5. '0' → logprob: -10.68094539642334
    6. '.zeros' → logprob: -11.18094539642334
    7. 'zero' → logprob: -12.18094539642334
    8. 'Zeros' → logprob: -12.43094539642334
    9. ' ' → logprob: -12.68094539642334
    10. '=zeros' → logprob: -13.18094539642334

Token 224: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.1692596971988678
    2. '((' → logprob: -1.9192596673965454
    3. '_like' → logprob: -4.919259548187256
    4. '(' → logprob: -6.419259548187256
    5. '(len' → logprob: -10.294260025024414
    6. '(shape' → logprob: -12.044260025024414
    7. ' (' → logprob: -12.169260025024414
    8. 'like' → logprob: -12.294260025024414
    9. '```' → logprob: -13.044260025024414
    10. 'Like' → logprob: -13.544260025024414

Token 225: '.shape' (ID: 14833)
  Prédit: '.shape'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.shape' → logprob: -0.00043233807082287967
    2. 'shape' → logprob: -8.250432014465332
    3. '[' → logprob: -8.750432014465332
    4. '.' → logprob: -11.375432014465332
    5. 'd' → logprob: -15.500432014465332
    6. ''s' → logprob: -15.500432014465332
    7. 's' → logprob: -15.500432014465332
    8. ',' → logprob: -15.750432014465332
    9. ' .' → logprob: -16.12543296813965
    10. ').' → logprob: -16.25043296813965

Token 226: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.6457742175552994e-05
    2. '(' → logprob: -10.125056266784668
    3. ')[' → logprob: -12.000056266784668
    4. ')' → logprob: -12.625056266784668
    5. '()[' → logprob: -13.375056266784668
    6. ',' → logprob: -13.500056266784668
    7. ' (' → logprob: -13.750056266784668
    8. ' [' → logprob: -13.750056266784668
    9. '1' → logprob: -14.500056266784668
    10. '[-' → logprob: -14.625056266784668

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005959614180028439
    2. '[' → logprob: -5.130959510803223
    3. '(' → logprob: -10.755959510803223
    4. '-' → logprob: -12.255959510803223
    5. '{' → logprob: -14.005959510803223
    6. '```' → logprob: -14.130959510803223
    7. '2' → logprob: -14.505959510803223
    8. '
' → logprob: -14.505959510803223
    9. ']' → logprob: -15.130959510803223
    10. '[-' → logprob: -15.255959510803223

Token 228: '],' (ID: 2155)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6892199516296387
    2. '])' → logprob: -1.0642199516296387
    3. '],' → logprob: -2.5642199516296387
    4. ',' → logprob: -3.0642199516296387
    5. '),' → logprob: -4.064219951629639
    6. ']' → logprob: -5.814219951629639
    7. ',)' → logprob: -5.939219951629639
    8. ')])' → logprob: -6.064219951629639
    9. ')]' → logprob: -7.064219951629639
    10. ')[' → logprob: -7.189219951629639

Token 229: ' dtype' (ID: 29770)
  Prédit: 'dtype'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dtype' → logprob: -0.002482553943991661
    2. ' dtype' → logprob: -6.0024824142456055
    3. 'int' → logprob: -12.627482414245605
    4. ')' → logprob: -12.752482414245605
    5. ''d' → logprob: -14.877482414245605
    6. 'd' → logprob: -15.627482414245605
    7. '(dtype' → logprob: -17.002483367919922
    8. ''' → logprob: -17.627483367919922
    9. ''s' → logprob: -18.377483367919922
    10. '.dtype' → logprob: -18.627483367919922

Token 230: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.040264107286930084
    2. '=' → logprob: -3.665264129638672
    3. '=int' → logprob: -4.290264129638672
    4. 'int' → logprob: -9.540264129638672
    5. '=('' → logprob: -10.040264129638672
    6. '=d' → logprob: -11.290264129638672
    7. ')' → logprob: -11.415264129638672
    8. '('' → logprob: -11.915264129638672
    9. '=
' → logprob: -12.040264129638672
    10. '=np' → logprob: -12.415264129638672

Token 231: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0027771780733019114
    2. ''int' → logprob: -6.002777099609375
    3. ''d' → logprob: -9.002777099609375
    4. ''' → logprob: -9.252777099609375
    5. 'd' → logprob: -9.502777099609375
    6. ' int' → logprob: -13.127777099609375
    7. 'dtype' → logprob: -13.252777099609375
    8. '[int' → logprob: -14.127777099609375
    9. 'uint' → logprob: -14.502777099609375
    10. '=int' → logprob: -14.627777099609375

Token 232: '64' (ID: 2220)
  Prédit: '64'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '64' → logprob: -1.8624639324116288e-06
    2. 'int' → logprob: -13.375001907348633
    3. 'd' → logprob: -16.000001907348633
    4. ''' → logprob: -16.500001907348633
    5. '32' → logprob: -18.000001907348633
    6. '')' → logprob: -18.375001907348633
    7. '8' → logprob: -18.750001907348633
    8. ')' → logprob: -18.875001907348633
    9. 'dtype' → logprob: -19.000001907348633
    10. '[' → logprob: -19.375001907348633

Token 233: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007538817590102553
    2. '')' → logprob: -7.250753879547119
    3. ' )' → logprob: -11.000754356384277
    4. '())' → logprob: -11.375754356384277
    5. '))' → logprob: -12.125754356384277
    6. '`)' → logprob: -12.375754356384277
    7. '()' → logprob: -13.250754356384277
    8. '")' → logprob: -13.875754356384277
    9. '),' → logprob: -14.500754356384277
    10. ')`' → logprob: -14.625754356384277

Token 234: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07003435492515564
    2. '[' → logprob: -4.070034503936768
    3. '<|end|>' → logprob: -4.445034503936768
    4. '(' → logprob: -4.820034503936768
    5. '+' → logprob: -4.945034503936768
    6. ':' → logprob: -5.445034503936768
    7. '```' → logprob: -5.695034503936768
    8. ')' → logprob: -5.695034503936768
    9. '(
' → logprob: -5.820034503936768
    10. ' def' → logprob: -5.820034503936768

Token 235: ' update' (ID: 4027)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2862483263015747
    2. 'main' → logprob: -1.4112483263015747
    3. ' compute' → logprob: -6.786248207092285
    4. ' process' → logprob: -6.911248207092285
    5. 'process' → logprob: -7.161248207092285
    6. 'compute' → logprob: -7.286248207092285
    7. ' solve' → logprob: -7.911248207092285
    8. 'multiply' → logprob: -8.411248207092285
    9. ' multiply' → logprob: -8.411248207092285
    10. 'solve' → logprob: -8.786248207092285

Token 236: '_row' (ID: 19157)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.512818455696106
    2. '(' → logprob: -1.887818455696106
    3. '_' → logprob: -2.0128183364868164
    4. '_d' → logprob: -2.2628183364868164
    5. '_(' → logprob: -4.762818336486816
    6. 'd' → logprob: -6.262818336486816
    7. '```' → logprob: -7.262818336486816
    8. '(_' → logprob: -8.012818336486816
    9. 'def' → logprob: -8.762818336486816
    10. '(
' → logprob: -9.262818336486816

Token 237: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00466093048453331
    2. '(' → logprob: -5.3796610832214355
    3. '(i' → logprob: -10.379660606384277
    4. ' (' → logprob: -12.129660606384277
    5. '(
' → logprob: -13.629660606384277
    6. '(def' → logprob: -13.754660606384277
    7. 'def' → logprob: -14.754660606384277
    8. '((' → logprob: -15.504660606384277
    9. '```' → logprob: -15.504660606384277
    10. '_(' → logprob: -15.629660606384277

Token 238: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.64708495605737e-05
    2. ',d' → logprob: -10.000066757202148
    3. ' ,' → logprob: -11.375066757202148
    4. '   ' → logprob: -11.875066757202148
    5. ',i' → logprob: -14.000066757202148
    6. 'd' → logprob: -14.625066757202148
    7. ',
' → logprob: -15.250066757202148
    8. '[' → logprob: -15.500066757202148
    9. '[d' → logprob: -16.25006675720215
    10. '```' → logprob: -16.25006675720215

Token 239: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18086297810077667
    2. ' i' → logprob: -1.8058630228042603
    3. 'd' → logprob: -7.305862903594971
    4. ' d' → logprob: -7.930862903594971
    5. ')' → logprob: -10.305863380432129
    6. '   ' → logprob: -10.305863380432129
    7. '```' → logprob: -12.805863380432129
    8. '):' → logprob: -12.930863380432129
    9. ' ' → logprob: -12.930863380432129
    10. '):
' → logprob: -13.180863380432129

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.081584716506768e-05
    2. '):' → logprob: -11.375020980834961
    3. '   ' → logprob: -12.875020980834961
    4. '):
' → logprob: -13.125020980834961
    5. ' ,' → logprob: -13.125020980834961
    6. ',d' → logprob: -13.250020980834961
    7. ',i' → logprob: -14.875020980834961
    8. ',
' → logprob: -15.500020980834961
    9. ')' → logprob: -16.37502098083496
    10. '‌,' → logprob: -16.50002098083496

Token 241: ' M' (ID: 391)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.2233881950378418
    2. 'n' → logprob: -1.3483881950378418
    3. ' d' → logprob: -2.223388195037842
    4. ' n' → logprob: -2.723388195037842
    5. 'i' → logprob: -2.848388195037842
    6. ' zeros' → logprob: -2.973388195037842
    7. 'zeros' → logprob: -3.473388195037842
    8. ' i' → logprob: -3.473388195037842
    9. 'term' → logprob: -4.348388195037842
    10. 'j' → logprob: -4.473388195037842

Token 242: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004740195348858833
    2. '):' → logprob: -5.504740238189697
    3. '):
' → logprob: -7.379740238189697
    4. '   ' → logprob: -10.879739761352539
    5. ' ,' → logprob: -11.504739761352539
    6. ')' → logprob: -12.879739761352539
    7. '):
' → logprob: -13.129739761352539
    8. ',d' → logprob: -13.379739761352539
    9. ',
' → logprob: -14.254739761352539
    10. '):

' → logprob: -14.379739761352539

Token 243: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.046731192618608475
    2. '[' → logprob: -4.546730995178223
    3. 'd' → logprob: -4.546730995178223
    4. ':' → logprob: -4.796730995178223
    5. '```' → logprob: -5.421730995178223
    6. ' d' → logprob: -5.546730995178223
    7. '(d' → logprob: -6.171730995178223
    8. ' =' → logprob: -7.171730995178223
    9. '=' → logprob: -7.296730995178223
    10. ',' → logprob: -7.421730995178223

Token 244: ' j' (ID: 441)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4021083414554596
    2. ' term' → logprob: -1.5271083116531372
    3. ' row' → logprob: -3.5271084308624268
    4. 'term' → logprob: -3.7771084308624268
    5. ' t' → logprob: -4.277108192443848
    6. 't' → logprob: -4.902108192443848
    7. ' d' → logprob: -5.027108192443848
    8. ' if' → logprob: -5.402108192443848
    9. ' prev' → logprob: -5.402108192443848
    10. ' s' → logprob: -6.027108192443848

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9055720567703247
    2. '=' → logprob: -0.9055720567703247
    3. ' =' → logprob: -1.6555720567703247
    4. ',j' → logprob: -8.405571937561035
    5. ',i' → logprob: -10.155571937561035
    6. ',k' → logprob: -10.405571937561035
    7. '=j' → logprob: -10.405571937561035
    8. '=i' → logprob: -10.530571937561035
    9. ' ,' → logprob: -11.155571937561035
    10. ')' → logprob: -12.405571937561035

Token 246: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.020604368299245834
    2. ' k' → logprob: -3.895604372024536
    3. ' =' → logprob: -10.645604133605957
    4. '=' → logprob: -11.145604133605957
    5. 'get' → logprob: -11.270604133605957
    6. ' get' → logprob: -12.645604133605957
    7. '=k' → logprob: -13.020604133605957
    8. '=get' → logprob: -13.395604133605957
    9. 'j' → logprob: -14.145604133605957
    10. ' ' → logprob: -14.395604133605957

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029753148555755615
    2. ' =' → logprob: -3.5297532081604004
    3. '=get' → logprob: -13.279752731323242
    4. ',' → logprob: -14.904752731323242
    5. '=j' → logprob: -15.154752731323242
    6. '=i' → logprob: -16.404752731323242
    7. '=k' → logprob: -16.404752731323242
    8. '=create' → logprob: -16.529752731323242
    9. ')' → logprob: -17.029752731323242
    10. '=user' → logprob: -17.654752731323242

Token 248: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.029752686619758606
    2. ' get' → logprob: -3.529752731323242
    3. 'i' → logprob: -13.154752731323242
    4. ' i' → logprob: -15.904752731323242
    5. '	get' → logprob: -17.154752731323242
    6. '   ' → logprob: -17.529752731323242
    7. '(get' → logprob: -18.154752731323242
    8. ' geti' → logprob: -18.279752731323242
    9. '=get' → logprob: -19.154752731323242
    10. ' ' → logprob: -19.904752731323242

Token 249: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0182790607213974
    2. 'indices' → logprob: -4.268279075622559
    3. '(i' → logprob: -5.768279075622559
    4. ' indices' → logprob: -7.893279075622559
    5. 'i' → logprob: -8.643279075622559
    6. 'Indices' → logprob: -9.643279075622559
    7. '(j' → logprob: -9.643279075622559
    8. '_i' → logprob: -9.768279075622559
    9. '[i' → logprob: -10.018279075622559
    10. ' i' → logprob: -10.018279075622559

Token 250: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -16.0
    4. 'i' → logprob: -16.5
    5. 'd' → logprob: -19.375
    6. ',i' → logprob: -19.625
    7. '[i' → logprob: -19.75
    8. ' ' → logprob: -20.125
    9. '(
' → logprob: -20.375
    10. ' i' → logprob: -20.375

Token 251: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007612305693328381
    2. ')
' → logprob: -4.882612228393555
    3. ')
' → logprob: -12.382612228393555
    4. ')

' → logprob: -13.882612228393555
    5. ' )' → logprob: -14.632612228393555
    6. '   ' → logprob: -15.132612228393555
    7. 'def' → logprob: -16.757612228393555
    8. '))' → logprob: -17.007612228393555
    9. ')`' → logprob: -17.007612228393555
    10. ')`
' → logprob: -17.132612228393555

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0171076487749815
    2. '
' → logprob: -5.7671074867248535
    3. 'd' → logprob: -5.8921074867248535
    4. 'term' → logprob: -6.3921074867248535
    5. '+' → logprob: -6.7671074867248535
    6. 'def' → logprob: -6.8921074867248535
    7. ',' → logprob: -7.2671074867248535
    8. ' term' → logprob: -7.3921074867248535
    9. ' d' → logprob: -7.5171074867248535
    10. '```' → logprob: -7.5171074867248535

Token 253: ' term' (ID: 2914)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' (adapté à ' term') → logprob: -0.015085102990269661
    2. 't' → logprob: -4.390085220336914
    3. ' term' → logprob: -6.140085220336914
    4. '   ' → logprob: -8.140085220336914
    5. 'd' → logprob: -10.265085220336914
    6. 'return' → logprob: -10.640085220336914
    7. ' t' → logprob: -10.640085220336914
    8. '
' → logprob: -10.890085220336914
    9. '```' → logprob: -12.265085220336914
    10. 'tmp' → logprob: -12.515085220336914

Token 254: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.384836888173595e-05
    2. '_' → logprob: -10.0000638961792
    3. '=' → logprob: -11.6250638961792
    4. ' =' → logprob: -12.3750638961792
    5. 's' → logprob: -12.5000638961792
    6. ' ' → logprob: -15.0000638961792
    7. '   ' → logprob: -15.2500638961792
    8. '```' → logprob: -15.8750638961792
    9. '_term' → logprob: -16.125062942504883
    10. '
' → logprob: -16.250062942504883

Token 255: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269388198852539
    2. '=' → logprob: -2.126938819885254
    3. ',' → logprob: -12.251938819885254
    4. ' ' → logprob: -12.751938819885254
    5. '(' → logprob: -13.126938819885254
    6. '_' → logprob: -15.001938819885254
    7. '   ' → logprob: -15.501938819885254
    8. '=d' → logprob: -15.626938819885254
    9. ' =
' → logprob: -15.751938819885254
    10. '(d' → logprob: -15.876938819885254

Token 256: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.2519300878047943
    2. ' compute' → logprob: -1.5019301176071167
    3. '
' → logprob: -15.126930236816406
    4. '.compute' → logprob: -15.501930236816406
    5. 'd' → logprob: -15.751930236816406
    6. ' ' → logprob: -16.626930236816406
    7. '_compute' → logprob: -16.626930236816406
    8. 'computer' → logprob: -16.876930236816406
    9. '   ' → logprob: -17.376930236816406
    10. 'np' → logprob: -17.876930236816406

Token 257: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -1.1472419600977446e-06
    2. 'term' → logprob: -14.500000953674316
    3. '_' → logprob: -14.875000953674316
    4. '_terms' → logprob: -16.875001907348633
    5. ' _' → logprob: -17.125001907348633
    6. '_l' → logprob: -17.500001907348633
    7. 'Term' → logprob: -18.000001907348633
    8. '_t' → logprob: -18.125001907348633
    9. '_line' → logprob: -18.375001907348633
    10. '_type' → logprob: -18.625001907348633

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. '(' → logprob: -12.875006675720215
    3. '_' → logprob: -13.375006675720215
    4. '3' → logprob: -14.375006675720215
    5. '```' → logprob: -14.375006675720215
    6. '(d' → logprob: -15.125006675720215
    7. 's' → logprob: -15.250006675720215
    8. ' ' → logprob: -15.625006675720215
    9. '2' → logprob: -15.875006675720215
    10. '
' → logprob: -16.6250057220459

Token 259: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0017220689915120602
    2. '(' → logprob: -6.3767218589782715
    3. '(
' → logprob: -10.87672233581543
    4. ' (' → logprob: -14.25172233581543
    5. '(

' → logprob: -16.62672233581543
    6. ',' → logprob: -17.00172233581543
    7. '```' → logprob: -17.12672233581543
    8. 'd' → logprob: -17.12672233581543
    9. ',d' → logprob: -17.25172233581543
    10. '
' → logprob: -17.87672233581543

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028688274323940277
    2. ',d' → logprob: -5.87786865234375
    3. '(d' → logprob: -10.62786865234375
    4. ' ,' → logprob: -11.25286865234375
    5. ',
' → logprob: -11.50286865234375
    6. 'd' → logprob: -12.25286865234375
    7. ',i' → logprob: -12.50286865234375
    8. '(' → logprob: -12.62786865234375
    9. ' d' → logprob: -13.62786865234375
    10. ')' → logprob: -13.62786865234375

Token 261: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.056269288063049316
    2. ' i' → logprob: -2.9312691688537598
    3. 'd' → logprob: -6.68126916885376
    4. ' d' → logprob: -9.056269645690918
    5. '   ' → logprob: -11.806269645690918
    6. '	i' → logprob: -12.806269645690918
    7. ' ' → logprob: -13.306269645690918
    8. '  ' → logprob: -13.556269645690918
    9. '    ' → logprob: -14.681269645690918
    10. ',i' → logprob: -15.056269645690918

Token 262: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014191943046171218
    2. ',k' → logprob: -9.375142097473145
    3. ' ,' → logprob: -10.250142097473145
    4. ',j' → logprob: -10.750142097473145
    5. ')' → logprob: -16.250141143798828
    6. '   ' → logprob: -17.125141143798828
    7. 'k' → logprob: -17.250141143798828
    8. '‌,' → logprob: -17.375141143798828
    9. ',n' → logprob: -17.750141143798828
    10. ',
' → logprob: -18.000141143798828

Token 263: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.029750604182481766
    2. ' k' → logprob: -3.5297505855560303
    3. '	k' → logprob: -15.77975082397461
    4. '<|end|>' → logprob: -18.02975082397461
    5. '{k' → logprob: -18.27975082397461
    6. ',k' → logprob: -18.65475082397461
    7. ' ' → logprob: -18.77975082397461
    8. 'kx' → logprob: -18.90475082397461
    9. ' к' → logprob: -19.15475082397461
    10. '"k' → logprob: -19.90475082397461

Token 264: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001314295077463612
    2. ' ,' → logprob: -9.375131607055664
    3. ',j' → logprob: -10.000131607055664
    4. ')' → logprob: -15.000131607055664
    5. 'j' → logprob: -15.375131607055664
    6. '[' → logprob: -15.750131607055664
    7. '   ' → logprob: -16.125131607055664
    8. ',
' → logprob: -16.125131607055664
    9. '‌,' → logprob: -16.625131607055664
    10. ',k' → logprob: -16.875131607055664

Token 265: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.3868749439716339
    2. ' j' → logprob: -1.1368749141693115
    3. '	j' → logprob: -13.63687515258789
    4. ' ' → logprob: -13.88687515258789
    5. '    ' → logprob: -14.76187515258789
    6. '   ' → logprob: -15.01187515258789
    7. ',j' → logprob: -15.38687515258789
    8. '$j' → logprob: -15.51187515258789
    9. '<|end|>' → logprob: -15.88687515258789
    10. ')' → logprob: -16.26187515258789

Token 266: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12719319760799408
    2. ')
' → logprob: -2.1271932125091553
    3. '   ' → logprob: -8.502193450927734
    4. ')
' → logprob: -10.002193450927734
    5. ')

' → logprob: -12.377193450927734
    6. ' )' → logprob: -12.627193450927734
    7. ' )
' → logprob: -13.002193450927734
    8. ',' → logprob: -13.002193450927734
    9. '[' → logprob: -14.377193450927734
    10. '),' → logprob: -14.502193450927734

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11629350483417511
    2. 'term' → logprob: -2.241293430328369
    3. ' term' → logprob: -6.116293430328369
    4. '
' → logprob: -7.616293430328369
    5. '+' → logprob: -8.116293907165527
    6. '    
' → logprob: -9.116293907165527
    7. '(term' → logprob: -9.116293907165527
    8. '```' → logprob: -9.366293907165527
    9. '<|end|>' → logprob: -10.741293907165527
    10. ',' → logprob: -10.991293907165527

Token 268: ' term' (ID: 2914)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' (adapté à ' term') → logprob: -0.01719834841787815
    2. ' term' → logprob: -4.51719856262207
    3. '   ' → logprob: -5.26719856262207
    4. '+' → logprob: -7.14219856262207
    5. '
' → logprob: -9.89219856262207
    6. ' +' → logprob: -10.26719856262207
    7. 'sum' → logprob: -11.39219856262207
    8. '(term' → logprob: -11.39219856262207
    9. '+
' → logprob: -11.76719856262207
    10. '```' → logprob: -11.89219856262207

Token 269: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00018387178715784103
    2. '_' → logprob: -9.000184059143066
    3. '1' → logprob: -10.625184059143066
    4. '=' → logprob: -10.750184059143066
    5. ' =' → logprob: -12.500184059143066
    6. '3' → logprob: -13.375184059143066
    7. '_=' → logprob: -13.500184059143066
    8. 's' → logprob: -13.625184059143066
    9. ' ' → logprob: -13.875184059143066
    10. ')' → logprob: -14.000184059143066

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326937675476074
    2. '=' → logprob: -1.3132693767547607
    3. ',' → logprob: -11.93826961517334
    4. ' ' → logprob: -14.56326961517334
    5. ')' → logprob: -15.18826961517334
    6. ' =
' → logprob: -15.68826961517334
    7. ' ' → logprob: -16.313268661499023
    8. 's' → logprob: -17.063268661499023
    9. '=
' → logprob: -17.438268661499023
    10. '=

' → logprob: -17.813268661499023

Token 271: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.4740801155567169
    2. ' compute' → logprob: -0.9740800857543945
    3. '_compute' → logprob: -13.599080085754395
    4. '.compute' → logprob: -14.099080085754395
    5. ' ' → logprob: -15.224080085754395
    6. '+' → logprob: -15.224080085754395
    7. '   ' → logprob: -15.724080085754395
    8. '
' → logprob: -16.22408103942871
    9. '```' → logprob: -17.47408103942871
    10. ' roll' → logprob: -17.47408103942871

Token 272: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.005739410407841206
    2. 'term' → logprob: -5.255739212036133
    3. '(d' → logprob: -7.630739212036133
    4. '_row' → logprob: -12.505739212036133
    5. '(term' → logprob: -12.630739212036133
    6. '_terms' → logprob: -12.880739212036133
    7. 'd' → logprob: -13.255739212036133
    8. ' term' → logprob: -13.630739212036133
    9. ' ' → logprob: -13.755739212036133
    10. '(' → logprob: -13.755739212036133

Token 273: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06282658874988556
    2. '(d' → logprob: -2.812826633453369
    3. '_' → logprob: -7.812826633453369
    4. '```' → logprob: -8.312826156616211
    5. '   ' → logprob: -9.812826156616211
    6. ')' → logprob: -10.312826156616211
    7. '[d' → logprob: -10.687826156616211
    8. '(' → logprob: -11.187826156616211
    9. '...' → logprob: -11.312826156616211
    10. 'd' → logprob: -11.812826156616211

Token 274: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -2.7729658540920354e-05
    2. '(' → logprob: -10.625027656555176
    3. ',d' → logprob: -13.625027656555176
    4. '(
' → logprob: -14.125027656555176
    5. 'd' → logprob: -14.250027656555176
    6. ' (' → logprob: -14.500027656555176
    7. ',' → logprob: -16.250028610229492
    8. '```' → logprob: -17.250028610229492
    9. ' ' → logprob: -17.500028610229492
    10. ')' → logprob: -17.875028610229492

Token 275: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2298462688922882
    2. ',d' → logprob: -1.9798462390899658
    3. '(d' → logprob: -2.729846239089966
    4. 'd' → logprob: -6.604846477508545
    5. ' ,' → logprob: -7.979846477508545
    6. ')' → logprob: -9.229846000671387
    7. ' d' → logprob: -9.354846000671387
    8. ')d' → logprob: -10.479846000671387
    9. '[d' → logprob: -10.479846000671387
    10. '   ' → logprob: -10.729846000671387

Token 276: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.048617567867040634
    2. 'd' → logprob: -3.2986176013946533
    3. ' k' → logprob: -4.673617362976074
    4. ' d' → logprob: -7.173617362976074
    5. 'j' → logprob: -7.923617362976074
    6. 'i' → logprob: -11.173617362976074
    7. ' j' → logprob: -11.298617362976074
    8. ' ' → logprob: -11.423617362976074
    9. ')' → logprob: -12.673617362976074
    10. '   ' → logprob: -13.048617362976074

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011150928912684321
    2. ',j' → logprob: -6.876115322113037
    3. ' ,' → logprob: -9.501114845275879
    4. 'j' → logprob: -12.251114845275879
    5. ')' → logprob: -13.626114845275879
    6. '),' → logprob: -14.751114845275879
    7. '[' → logprob: -15.501114845275879
    8. '<|end|>' → logprob: -15.626114845275879
    9. '```' → logprob: -15.751114845275879
    10. '‌,' → logprob: -16.376115798950195

Token 278: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.01416798122227192
    2. ' j' → logprob: -4.264167785644531
    3. '	j' → logprob: -13.889167785644531
    4. ' ' → logprob: -14.264167785644531
    5. '<|end|>' → logprob: -14.389167785644531
    6. '```' → logprob: -15.014167785644531
    7. '    ' → logprob: -15.389167785644531
    8. '$j' → logprob: -15.389167785644531
    9. '   ' → logprob: -15.514167785644531
    10. '[j' → logprob: -15.514167785644531

Token 279: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2520221173763275
    2. ')
' → logprob: -1.50202214717865
    3. '   ' → logprob: -10.002021789550781
    4. ')
' → logprob: -10.127021789550781
    5. ')

' → logprob: -13.127021789550781
    6. ' )
' → logprob: -13.377021789550781
    7. ')`
' → logprob: -13.877021789550781
    8. ' )' → logprob: -14.127021789550781
    9. ',' → logprob: -14.627021789550781
    10. 'def' → logprob: -14.877021789550781

Token 280: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15934687852859497
    2. 'term' → logprob: -2.03434681892395
    3. ' term' → logprob: -4.159347057342529
    4. '```' → logprob: -7.909347057342529
    5. '(term' → logprob: -8.284346580505371
    6. '+' → logprob: -9.534346580505371
    7. '    
' → logprob: -10.284346580505371
    8. '
' → logprob: -10.534346580505371
    9. ')' → logprob: -10.784346580505371
    10. ',' → logprob: -11.034346580505371

Token 281: ' term' (ID: 2914)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' (adapté à ' term') → logprob: -0.25349071621894836
    2. ' term' → logprob: -1.503490686416626
    3. '   ' → logprob: -6.503490924835205
    4. '```' → logprob: -10.878490447998047
    5. '+' → logprob: -11.503490447998047
    6. ' ' → logprob: -11.878490447998047
    7. '(term' → logprob: -12.253490447998047
    8. '
' → logprob: -12.503490447998047
    9. '_term' → logprob: -12.628490447998047
    10. '.term' → logprob: -12.878490447998047

Token 282: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5890979170799255
    2. '3' → logprob: -1.0890979766845703
    3. '=' → logprob: -2.4640979766845703
    4. '1' → logprob: -4.21409797668457
    5. ' =' → logprob: -5.33909797668457
    6. 'term' → logprob: -6.83909797668457
    7. '_' → logprob: -6.96409797668457
    8. '+' → logprob: -7.33909797668457
    9. '   ' → logprob: -7.58909797668457
    10. '+=' → logprob: -8.71409797668457

Token 283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197093799710274
    2. ' =' → logprob: -2.8119709491729736
    3. '(' → logprob: -13.561970710754395
    4. '=d' → logprob: -13.811970710754395
    5. '(d' → logprob: -14.561970710754395
    6. ')' → logprob: -15.186970710754395
    7. ',' → logprob: -16.18697166442871
    8. '   ' → logprob: -17.06197166442871
    9. 'd' → logprob: -17.18697166442871
    10. '=
' → logprob: -17.43697166442871

Token 284: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0011709370883181691
    2. ' compute' → logprob: -6.751171112060547
    3. '_compute' → logprob: -15.251171112060547
    4. '(com' → logprob: -15.376171112060547
    5. '.compute' → logprob: -16.001171112060547
    6. 'def' → logprob: -16.251171112060547
    7. '```' → logprob: -16.751171112060547
    8. '   ' → logprob: -18.126171112060547
    9. 'calculate' → logprob: -18.501171112060547
    10. '(' → logprob: -18.501171112060547

Token 285: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -0.5664102435112
    2. '(d' → logprob: -1.5664103031158447
    3. 'term' → logprob: -1.8164103031158447
    4. '_row' → logprob: -3.0664103031158447
    5. '3' → logprob: -4.566410064697266
    6. 'd' → logprob: -6.441410064697266
    7. 'row' → logprob: -6.441410064697266
    8. 'terms' → logprob: -7.816410064697266
    9. '_terms' → logprob: -8.941410064697266
    10. 'def' → logprob: -9.441410064697266

Token 286: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0036962779704481363
    2. '(d' → logprob: -5.628696441650391
    3. 'd' → logprob: -9.37869644165039
    4. '```' → logprob: -13.12869644165039
    5. 'row' → logprob: -13.25369644165039
    6. 'def' → logprob: -13.37869644165039
    7. '2' → logprob: -13.62869644165039
    8. '[d' → logprob: -13.62869644165039
    9. 's' → logprob: -14.00369644165039
    10. '(' → logprob: -14.25369644165039

Token 287: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00010402000043541193
    2. 'd' → logprob: -9.250103950500488
    3. 'def' → logprob: -12.875103950500488
    4. '(' → logprob: -13.250103950500488
    5. ',d' → logprob: -14.250103950500488
    6. '   ' → logprob: -14.500103950500488
    7. '```' → logprob: -14.750103950500488
    8. '[d' → logprob: -14.875103950500488
    9. ')d' → logprob: -14.875103950500488
    10. '(def' → logprob: -15.250103950500488

Token 288: ',' (ID: 11)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014386557042598724
    2. ',' → logprob: -4.7643866539001465
    3. ' j' → logprob: -6.2643866539001465
    4. '(j' → logprob: -6.2643866539001465
    5. ',j' → logprob: -6.2643866539001465
    6. '   ' → logprob: -11.264386177062988
    7. ' ,' → logprob: -11.389386177062988
    8. '(' → logprob: -12.139386177062988
    9. '	j' → logprob: -12.139386177062988
    10. ')' → logprob: -12.264386177062988

Token 289: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002490522339940071
    2. ' j' → logprob: -6.002490520477295
    3. 'i' → logprob: -12.502490997314453
    4. 'd' → logprob: -12.502490997314453
    5. '   ' → logprob: -12.877490997314453
    6. ' ' → logprob: -13.127490997314453
    7. 'k' → logprob: -13.877490997314453
    8. '	j' → logprob: -14.502490997314453
    9. '    ' → logprob: -14.877490997314453
    10. '  ' → logprob: -15.377490997314453

Token 290: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012544499710202217
    2. ')
' → logprob: -4.387544631958008
    3. '   ' → logprob: -10.512544631958008
    4. ')
' → logprob: -12.887544631958008
    5. ' )' → logprob: -13.012544631958008
    6. ')

' → logprob: -14.262544631958008
    7. ')`
' → logprob: -14.387544631958008
    8. ')`' → logprob: -14.387544631958008
    9. ' ' → logprob: -15.262544631958008
    10. ' )
' → logprob: -16.012544631958008

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.711409330368042
    2. 'd' → logprob: -0.836409330368042
    3. ' d' → logprob: -2.961409330368042
    4. '
' → logprob: -4.961409568786621
    5. '+' → logprob: -5.336409568786621
    6. 'sum' → logprob: -5.961409568786621
    7. ')' → logprob: -6.336409568786621
    8. '```' → logprob: -7.086409568786621
    9. '	d' → logprob: -7.211409568786621
    10. '    
' → logprob: -7.461409568786621

Token 292: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0048878928646445274
    2. '   ' → logprob: -5.75488805770874
    3. 'total' → logprob: -8.129887580871582
    4. 'sum' → logprob: -8.129887580871582
    5. ' d' → logprob: -8.379887580871582
    6. 'return' → logprob: -8.629887580871582
    7. 'row' → logprob: -8.754887580871582
    8. '
' → logprob: -8.754887580871582
    9. 'result' → logprob: -9.379887580871582
    10. '```' → logprob: -9.504887580871582

Token 293: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0683535037969705e-05
    2. '[' → logprob: -12.25001049041748
    3. '[d' → logprob: -12.25001049041748
    4. '[I' → logprob: -14.87501049041748
    5. '[
' → logprob: -15.50001049041748
    6. '```' → logprob: -15.87501049041748
    7. ' [' → logprob: -16.750011444091797
    8. ')[' → logprob: -16.750011444091797
    9. 'd' → logprob: -16.875011444091797
    10. '   ' → logprob: -17.375011444091797

Token 294: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007065945537760854
    2. ']+=' → logprob: -8.375706672668457
    3. '][' → logprob: -8.625706672668457
    4. ']=' → logprob: -8.625706672668457
    5. '][:' → logprob: -10.000706672668457
    6. ',' → logprob: -10.125706672668457
    7. ' ]' → logprob: -11.750706672668457
    8. '])' → logprob: -12.625706672668457
    9. '[' → logprob: -12.875706672668457
    10. '```' → logprob: -13.000706672668457

Token 295: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.009250689297914505
    2. ' =' → logprob: -4.884250640869141
    3. '[:]' → logprob: -6.759250640869141
    4. ']' → logprob: -8.75925064086914
    5. '%=' → logprob: -8.75925064086914
    6. '+=' → logprob: -9.75925064086914
    7. ']=' → logprob: -9.88425064086914
    8. '[' → logprob: -10.63425064086914
    9. '%' → logprob: -11.50925064086914
    10. '[:' → logprob: -11.63425064086914

Token 296: ' (' (ID: 350)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.4267541170120239
    2. ' term' → logprob: -1.551754117012024
    3. '(term' → logprob: -2.1767539978027344
    4. ' (' → logprob: -3.9267539978027344
    5. '(' → logprob: -6.301753997802734
    6. 'd' → logprob: -8.926753997802734
    7. '   ' → logprob: -9.051753997802734
    8. '((' → logprob: -9.926753997802734
    9. 'np' → logprob: -10.301753997802734
    10. '(d' → logprob: -10.426753997802734

Token 297: 'term' (ID: 8044)
  Prédit: 'term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.04838646203279495
    2. ' term' → logprob: -3.173386573791504
    3. '(term' → logprob: -5.298386573791504
    4. ' (' → logprob: -8.548386573791504
    5. '   ' → logprob: -9.298386573791504
    6. 'd' → logprob: -9.923386573791504
    7. '(' → logprob: -11.673386573791504
    8. ')' → logprob: -12.048386573791504
    9. ' d' → logprob: -12.298386573791504
    10. '(d' → logprob: -12.735886573791504

Token 298: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.870950215263292e-05
    2. '3' → logprob: -10.000048637390137
    3. '2' → logprob: -13.250048637390137
    4. ' ' → logprob: -14.375048637390137
    5. 'term' → logprob: -15.750048637390137
    6. 's' → logprob: -16.375049591064453
    7. '```' → logprob: -16.437549591064453
    8. '+' → logprob: -16.625049591064453
    9. ')' → logprob: -16.625049591064453
    10. '_' → logprob: -17.375049591064453

Token 299: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2812057137489319
    2. '+' → logprob: -1.406205654144287
    3. ' -' → logprob: -10.906206130981445
    4. '-' → logprob: -11.406206130981445
    5. ' +
' → logprob: -11.906206130981445
    6. '+
' → logprob: -12.281206130981445
    7. ' ' → logprob: -12.281206130981445
    8. '+d' → logprob: -12.656206130981445
    9. ' ' → logprob: -13.281206130981445
    10. ' +
' → logprob: -13.906206130981445

Token 300: ' term' (ID: 2914)
  Prédit: 'term'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'term' → logprob: -0.31332942843437195
    2. ' term' → logprob: -1.3133294582366943
    3. '   ' → logprob: -10.813329696655273
    4. '(term' → logprob: -11.563329696655273
    5. ')' → logprob: -11.688329696655273
    6. ' ' → logprob: -11.813329696655273
    7. '    ' → logprob: -11.938329696655273
    8. '       ' → logprob: -13.313329696655273
    9. 'Term' → logprob: -13.688329696655273
    10. '     ' → logprob: -13.688329696655273

Token 301: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4741625189781189
    2. '3' → logprob: -0.9741625189781189
    3. 'term' → logprob: -10.099162101745605
    4. '1' → logprob: -10.224162101745605
    5. ' ' → logprob: -13.349162101745605
    6. 'sum' → logprob: -13.599162101745605
    7. '   ' → logprob: -13.974162101745605
    8. '+' → logprob: -14.099162101745605
    9. '```' → logprob: -14.099162101745605
    10. 'token' → logprob: -14.474162101745605

Token 302: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03366713970899582
    2. '+' → logprob: -3.4086670875549316
    3. ')' → logprob: -10.90866756439209
    4. ' +
' → logprob: -13.65866756439209
    5. ')+' → logprob: -14.78366756439209
    6. ' )' → logprob: -14.90866756439209
    7. ' ' → logprob: -15.15866756439209
    8. ' -' → logprob: -15.65866756439209
    9. ' ' → logprob: -15.90866756439209
    10. ' plus' → logprob: -16.158666610717773

Token 303: ' term' (ID: 2914)
  Prédit: ' term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' term' → logprob: -0.5759504437446594
    2. 'term' → logprob: -0.8259504437446594
    3. '    ' → logprob: -12.825950622558594
    4. '   ' → logprob: -13.075950622558594
    5. '(term' → logprob: -13.075950622558594
    6. ' ' → logprob: -13.325950622558594
    7. 'Term' → logprob: -14.825950622558594
    8. ' +' → logprob: -14.825950622558594
    9. '-term' → logprob: -15.075950622558594
    10. '.term' → logprob: -15.200950622558594

Token 304: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.088346359931165e-07
    2. 'term' → logprob: -14.000000953674316
    3. ' ' → logprob: -17.25
    4. '```' → logprob: -18.375
    5. 's' → logprob: -18.875
    6. '[' → logprob: -18.875
    7. '   ' → logprob: -20.0
    8. '(' → logprob: -20.25
    9. 'token' → logprob: -20.375
    10. '``' → logprob: -20.5

Token 305: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001584850688232109
    2. ')%' → logprob: -9.375158309936523
    3. ' )' → logprob: -9.625158309936523
    4. '   ' → logprob: -12.125158309936523
    5. ')[' → logprob: -14.125158309936523
    6. '`)' → logprob: -15.250158309936523
    7. '）' → logprob: -15.500158309936523
    8. '```' → logprob: -16.250158309936523
    9. ' ' → logprob: -16.500158309936523
    10. '    ' → logprob: -16.750158309936523

Token 306: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.028639713302254677
    2. ' %' → logprob: -3.653639793395996
    3. '%d' → logprob: -6.403639793395996
    4. '%i' → logprob: -7.653639793395996
    5. ')' → logprob: -9.403639793395996
    6. '
' → logprob: -10.528639793395996
    7. ')%' → logprob: -10.903639793395996
    8. '[' → logprob: -10.903639793395996
    9. '%
' → logprob: -11.028639793395996
    10. '[:' → logprob: -12.028639793395996

Token 307: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.004078639671206474
    2. ' M' → logprob: -5.5040788650512695
    3. '   ' → logprob: -16.754077911376953
    4. '`' → logprob: -17.254077911376953
    5. '(M' → logprob: -17.254077911376953
    6. '```' → logprob: -17.254077911376953
    7. ' ' → logprob: -17.379077911376953
    8. '[M' → logprob: -18.129077911376953
    9. '  ' → logprob: -18.879077911376953
    10. '(' → logprob: -18.879077911376953

Token 308: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26383545994758606
    2. '<|end|>' → logprob: -1.5138354301452637
    3. '\n' → logprob: -4.638835430145264
    4. ')' → logprob: -7.138835430145264
    5. '  
' → logprob: -7.888835430145264
    6. '    
' → logprob: -8.888835906982422
    7. 'newline' → logprob: -9.013835906982422
    8. '   ' → logprob: -9.138835906982422
    9. ' 
' → logprob: -9.263835906982422
    10. '<|end|>' → logprob: -9.388835906982422

Token 309: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: ' process' (ID: 2273)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11742410808801651
    2. ' def' → logprob: -2.2424240112304688
    3. ' main' → logprob: -5.867424011230469
    4. 'main' → logprob: -7.617424011230469
    5. '
' → logprob: -7.867424011230469
    6. '```' → logprob: -7.992424011230469
    7. 'get' → logprob: -8.742424011230469
    8. 'python' → logprob: -9.242424011230469
    9. '_' → logprob: -9.492424011230469
    10. 'if' → logprob: -9.867424011230469

Token 311: '(d' (ID: 2572)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10417875647544861
    2. '(d' → logprob: -2.9791786670684814
    3. '(' → logprob: -3.3541786670684814
    4. 'def' → logprob: -4.9791789054870605
    5. '_inputs' → logprob: -5.6041789054870605
    6. '(inputs' → logprob: -7.1041789054870605
    7. '(l' → logprob: -7.6041789054870605
    8. '(def' → logprob: -8.229178428649902
    9. 'inputs' → logprob: -8.354178428649902
    10. '(i' → logprob: -9.229178428649902

Token 312: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6240566083070007e-06
    2. ',n' → logprob: -14.500001907348633
    3. ',d' → logprob: -14.875001907348633
    4. ' ,' → logprob: -15.000001907348633
    5. ',i' → logprob: -15.000001907348633
    6. '):' → logprob: -16.750001907348633
    7. 'd' → logprob: -17.750001907348633
    8. '‌,' → logprob: -18.125001907348633
    9. '):
' → logprob: -18.250001907348633
    10. ',
' → logprob: -18.250001907348633

Token 313: ' l' (ID: 305)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10728475451469421
    2. 'M' → logprob: -2.9822847843170166
    3. ' n' → logprob: -3.6072847843170166
    4. 'l' → logprob: -4.1072845458984375
    5. ' M' → logprob: -5.3572845458984375
    6. 'd' → logprob: -6.8572845458984375
    7. ' l' → logprob: -7.2322845458984375
    8. 'i' → logprob: -7.3572845458984375
    9. ' d' → logprob: -9.482284545898438
    10. ' i' → logprob: -9.857284545898438

Token 314: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6240566083070007e-06
    2. ' ,' → logprob: -14.125001907348633
    3. '):
' → logprob: -15.250001907348633
    4. '):' → logprob: -15.500001907348633
    5. ',
' → logprob: -15.625001907348633
    6. ',n' → logprob: -16.000001907348633
    7. ',d' → logprob: -17.125001907348633
    8. '   ' → logprob: -18.000001907348633
    9. 'def' → logprob: -18.375001907348633
    10. '‌,' → logprob: -19.250001907348633

Token 315: ' M' (ID: 391)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03610578551888466
    2. 'M' → logprob: -3.4111058712005615
    3. ' n' → logprob: -6.161105632781982
    4. ' M' → logprob: -8.03610610961914
    5. 'N' → logprob: -11.78610610961914
    6. ')' → logprob: -12.16110610961914
    7. 'l' → logprob: -13.41110610961914
    8. 'd' → logprob: -13.66110610961914
    9. '   ' → logprob: -13.91110610961914
    10. 'i' → logprob: -14.09860610961914

Token 316: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.35222750902175903
    2. '):' → logprob: -1.2272274494171143
    3. '):
' → logprob: -5.602227687835693
    4. ')' → logprob: -9.727227210998535
    5. '   ' → logprob: -12.102227210998535
    6. 'def' → logprob: -12.477227210998535
    7. ',i' → logprob: -12.602227210998535
    8. ',n' → logprob: -12.602227210998535
    9. ' ,' → logprob: -12.727227210998535
    10. '):
' → logprob: -13.227227210998535

Token 317: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2542344629764557
    2. 'for' → logprob: -1.5042344331741333
    3. '   ' → logprob: -6.129234313964844
    4. '```' → logprob: -9.254234313964844
    5. 'def' → logprob: -10.879234313964844
    6. '	for' → logprob: -12.004234313964844
    7. ' def' → logprob: -13.754234313964844
    8. ' ' → logprob: -13.879234313964844
    9. '
' → logprob: -14.004234313964844
    10. '``' → logprob: -14.879234313964844

Token 318: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005601812736131251
    2. ' for' → logprob: -7.500560283660889
    3. '   ' → logprob: -12.00055980682373
    4. '
' → logprob: -14.00055980682373
    5. '```' → logprob: -15.50055980682373
    6. 'def' → logprob: -17.750560760498047
    7. '	for' → logprob: -18.250560760498047
    8. '    
' → logprob: -19.125560760498047
    9. '``' → logprob: -19.250560760498047
    10. 'from' → logprob: -19.500560760498047

Token 319: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38687241077423096
    2. 'i' → logprob: -1.136872410774231
    3. '	i' → logprob: -14.011872291564941
    4. '   ' → logprob: -15.261872291564941
    5. ' ' → logprob: -15.761872291564941
    6. '_i' → logprob: -17.011873245239258
    7. ' in' → logprob: -17.886873245239258
    8. '(i' → logprob: -18.136873245239258
    9. ' ' → logprob: -18.761873245239258
    10. '[i' → logprob: -18.761873245239258

Token 320: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014171971939504147
    2. 'in' → logprob: -4.264172077178955
    3. ' ' → logprob: -13.139171600341797
    4. '   ' → logprob: -13.389171600341797
    5. 'range' → logprob: -13.639171600341797
    6. 'import' → logprob: -14.389171600341797
    7. 'd' → logprob: -14.639171600341797
    8. '	in' → logprob: -14.764171600341797
    9. ',' → logprob: -15.014171600341797
    10. 'n' → logprob: -15.139171600341797

Token 321: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170225441455841
    2. ' range' → logprob: -6.7511701583862305
    3. '1' → logprob: -17.251171112060547
    4. '(range' → logprob: -18.501171112060547
    5. '	range' → logprob: -19.251171112060547
    6. '[' → logprob: -21.001171112060547
    7. ' xrange' → logprob: -21.126171112060547
    8. ' ' → logprob: -21.376171112060547
    9. '   ' → logprob: -21.376171112060547
    10. '2' → logprob: -21.501171112060547

Token 322: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061968810856342316
    2. '(' → logprob: -2.8119688034057617
    3. ' ' → logprob: -14.436968803405762
    4. '2' → logprob: -15.061968803405762
    5. '   ' → logprob: -16.061969757080078
    6. '3' → logprob: -16.186969757080078
    7. 'l' → logprob: -18.061969757080078
    8. '```' → logprob: -18.436969757080078
    9. '
' → logprob: -19.186969757080078
    10. '[' → logprob: -19.186969757080078

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. 'l' → logprob: -14.875000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '2' → logprob: -17.125
    5. '(' → logprob: -17.375
    6. '3' → logprob: -17.625
    7. '   ' → logprob: -18.625
    8. ' l' → logprob: -20.25
    9. '```' → logprob: -20.25
    10. '１' → logprob: -20.75

Token 324: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.0020742492051795e-05
    2. ',l' → logprob: -10.500049591064453
    3. ' ,' → logprob: -10.750049591064453
    4. '1' → logprob: -14.375049591064453
    5. 'l' → logprob: -15.125049591064453
    6. ',
' → logprob: -16.000049591064453
    7. '2' → logprob: -17.625049591064453
    8. '0' → logprob: -17.625049591064453
    9. '(l' → logprob: -18.000049591064453
    10. ' l' → logprob: -18.000049591064453

Token 325: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -2.7729658540920354e-05
    2. ' l' → logprob: -10.500027656555176
    3. '	l' → logprob: -16.000028610229492
    4. '   ' → logprob: -18.250028610229492
    5. 'len' → logprob: -19.750028610229492
    6. ',l' → logprob: -20.750028610229492
    7. '```' → logprob: -21.250028610229492
    8. '_l' → logprob: -21.375028610229492
    9. 'length' → logprob: -21.500028610229492
    10. 'll' → logprob: -23.000028610229492

Token 326: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3133281171321869
    2. '):
' → logprob: -1.3133281469345093
    3. ':' → logprob: -10.31332778930664
    4. '):
' → logprob: -11.06332778930664
    5. '   ' → logprob: -12.18832778930664
    6. ')' → logprob: -12.56332778930664
    7. ',' → logprob: -12.81332778930664
    8. ' ):' → logprob: -13.06332778930664
    9. ':
' → logprob: -14.18832778930664
    10. '):

' → logprob: -14.31332778930664

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008824095129966736
    2. 'update' → logprob: -5.258823871612549
    3. ' update' → logprob: -6.133823871612549
    4. '   ' → logprob: -7.133823871612549
    5. '```' → logprob: -7.758823871612549
    6. '(update' → logprob: -9.633824348449707
    7. '        
' → logprob: -10.633824348449707
    8. '	update' → logprob: -10.633824348449707
    9. '[' → logprob: -10.758824348449707
    10. '_update' → logprob: -11.133824348449707

Token 328: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' (adapté à ' update') → logprob: -0.06241587549448013
    2. ' update' → logprob: -2.812415838241577
    3. '       ' → logprob: -7.937416076660156
    4. '   ' → logprob: -9.937416076660156
    5. '	update' → logprob: -10.312416076660156
    6. '
' → logprob: -13.062416076660156
    7. '.update' → logprob: -13.187416076660156
    8. '```' → logprob: -13.312416076660156
    9. '(update' → logprob: -13.312416076660156
    10. '_update' → logprob: -14.187416076660156

Token 329: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -8.172891830326989e-05
    2. '(d' → logprob: -9.625082015991211
    3. 'row' → logprob: -11.750082015991211
    4. 'd' → logprob: -12.125082015991211
    5. '_rows' → logprob: -14.750082015991211
    6. 'Row' → logprob: -14.750082015991211
    7. '(row' → logprob: -15.000082015991211
    8. '_Row' → logprob: -15.000082015991211
    9. '_line' → logprob: -15.375082015991211
    10. '_' → logprob: -15.500082015991211

Token 330: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -6.2729995988775045e-06
    2. '(' → logprob: -12.000006675720215
    3. 'd' → logprob: -16.7500057220459
    4. ' (' → logprob: -17.6250057220459
    5. '```' → logprob: -17.8750057220459
    6. '(
' → logprob: -18.2500057220459
    7. ')d' → logprob: -19.7500057220459
    8. ',d' → logprob: -20.2500057220459
    9. ')' → logprob: -20.7500057220459
    10. '	d' → logprob: -21.1250057220459

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006458373973146081
    2. ',d' → logprob: -7.375645637512207
    3. ' ,' → logprob: -11.375645637512207
    4. '(d' → logprob: -12.125645637512207
    5. ',i' → logprob: -13.625645637512207
    6. '   ' → logprob: -14.750645637512207
    7. ' d' → logprob: -15.125645637512207
    8. 'd' → logprob: -15.375645637512207
    9. ')' → logprob: -16.500646591186523
    10. '```' → logprob: -16.750646591186523

Token 332: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015024791937321424
    2. ' i' → logprob: -6.501502513885498
    3. '	i' → logprob: -15.87650203704834
    4. '   ' → logprob: -17.251502990722656
    5. ')i' → logprob: -17.751502990722656
    6. '```' → logprob: -18.751502990722656
    7. ')' → logprob: -19.251502990722656
    8. ',i' → logprob: -19.626502990722656
    9. '(i' → logprob: -19.876502990722656
    10. '[i' → logprob: -20.001502990722656

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8624639324116288e-06
    2. ' ,' → logprob: -13.250001907348633
    3. ',M' → logprob: -16.875001907348633
    4. ',
' → logprob: -19.500001907348633
    5. '   ' → logprob: -20.375001907348633
    6. '‌,' → logprob: -21.375001907348633
    7. ',d' → logprob: -21.750001907348633
    8. ')' → logprob: -21.750001907348633
    9. '=' → logprob: -22.375001907348633
    10. '```' → logprob: -22.875001907348633

Token 334: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.061969365924596786
    2. ' M' → logprob: -2.81196928024292
    3. ')' → logprob: -13.811969757080078
    4. ' ' → logprob: -15.061969757080078
    5. '   ' → logprob: -15.311969757080078
    6. '```' → logprob: -16.311969757080078
    7. '    ' → logprob: -17.686969757080078
    8. '
' → logprob: -17.811969757080078
    9. '  ' → logprob: -17.811969757080078
    10. ' ' → logprob: -18.186969757080078

Token 335: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010926496179308742
    2. ')
' → logprob: -9.125109672546387
    3. ' )' → logprob: -15.625109672546387
    4. ')

' → logprob: -15.750109672546387
    5. '   ' → logprob: -17.50010871887207
    6. ')return' → logprob: -17.62510871887207
    7. ')d' → logprob: -18.12510871887207
    8. ')
' → logprob: -18.25010871887207
    9. ')#' → logprob: -18.50010871887207
    10. '<|end|>' → logprob: -18.75010871887207

Token 336: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.02306983433663845
    2. '<|end|>' → logprob: -3.8980698585510254
    3. '```' → logprob: -6.523069858551025
    4. 'n' → logprob: -7.023069858551025
    5. 'from' → logprob: -9.398069381713867
    6. 'return' → logprob: -10.273069381713867
    7. '
' → logprob: -11.398069381713867
    8. '#' → logprob: -11.398069381713867
    9. ' def' → logprob: -11.648069381713867
    10. '<|end|>' → logprob: -12.523069381713867

Token 337: ' final' (ID: 1721)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.13244712352752686
    2. 'main' → logprob: -2.5074472427368164
    3. '__' → logprob: -4.007447242736816
    4. ' __' → logprob: -4.382447242736816
    5. 'def' → logprob: -5.257447242736816
    6. ' def' → logprob: -5.632447242736816
    7. 'get' → logprob: -6.632447242736816
    8. ' get' → logprob: -7.007447242736816
    9. ' ' → logprob: -8.007447242736816
    10. '```' → logprob: -8.882447242736816

Token 338: '_sum' (ID: 29859)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.7267137765884399
    2. '_result' → logprob: -0.7267137765884399
    3. '_answer' → logprob: -4.10171365737915
    4. 'def' → logprob: -4.47671365737915
    5. '_output' → logprob: -6.10171365737915
    6. '_value' → logprob: -6.72671365737915
    7. '_sum' → logprob: -8.101714134216309
    8. '_results' → logprob: -8.601714134216309
    9. '_return' → logprob: -8.976714134216309
    10. '_def' → logprob: -9.101714134216309

Token 339: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0005949704209342599
    2. '(' → logprob: -8.000595092773438
    3. '(def' → logprob: -8.375595092773438
    4. 'def' → logprob: -10.500595092773438
    5. ' (' → logprob: -13.750595092773438
    6. '(
' → logprob: -16.500595092773438
    7. '((' → logprob: -16.750595092773438
    8. '(s' → logprob: -16.750595092773438
    9. '```' → logprob: -17.000595092773438
    10. '(defun' → logprob: -17.125595092773438

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1918637603521347
    2. '):
' → logprob: -2.191863775253296
    3. '):' → logprob: -2.816863775253296
    4. ',d' → logprob: -6.066863536834717
    5. '):
' → logprob: -8.441864013671875
    6. ')' → logprob: -8.566864013671875
    7. ' ,' → logprob: -9.441864013671875
    8. '):

' → logprob: -9.441864013671875
    9. '   ' → logprob: -9.941864013671875
    10. 'd' → logprob: -9.941864013671875

Token 341: ' l' (ID: 305)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09012196213006973
    2. '0' → logprob: -3.3401219844818115
    3. ' -' → logprob: -3.3401219844818115
    4. 'd' → logprob: -4.590121746063232
    5. 'l' → logprob: -6.840121746063232
    6. ')' → logprob: -7.215121746063232
    7. ' ' → logprob: -7.215121746063232
    8. 'M' → logprob: -7.465121746063232
    9. '-l' → logprob: -7.590121746063232
    10. '-M' → logprob: -7.840121746063232

Token 342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3791118264198303
    2. '):' → logprob: -1.5041117668151855
    3. '):
' → logprob: -2.3791117668151855
    4. ',d' → logprob: -8.004112243652344
    5. ')' → logprob: -8.879112243652344
    6. '   ' → logprob: -9.504112243652344
    7. '):
' → logprob: -9.504112243652344
    8. ' ,' → logprob: -10.629112243652344
    9. '):

' → logprob: -11.504112243652344
    10. ' ' → logprob: -12.379112243652344

Token 343: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.14298218488693237
    2. ' M' → logprob: -2.017982244491577
    3. 'n' → logprob: -8.642982482910156
    4. 'd' → logprob: -9.892982482910156
    5. ' n' → logprob: -10.767982482910156
    6. '   ' → logprob: -11.142982482910156
    7. ' ' → logprob: -11.267982482910156
    8. '0' → logprob: -11.892982482910156
    9. '  ' → logprob: -12.267982482910156
    10. ')' → logprob: -12.267982482910156

Token 344: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20162180066108704
    2. '):' → logprob: -1.7016217708587646
    3. '):
' → logprob: -8.576622009277344
    4. '   ' → logprob: -11.826622009277344
    5. ')' → logprob: -12.326622009277344
    6. ',' → logprob: -12.576622009277344
    7. '):

' → logprob: -12.826622009277344
    8. 'def' → logprob: -13.451622009277344
    9. ' ' → logprob: -15.326622009277344
    10. ' ):
' → logprob: -16.076622009277344

Token 345: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1670941263437271
    2. '   ' → logprob: -1.917094111442566
    3. 'def' → logprob: -5.4170942306518555
    4. ' return' → logprob: -6.5420942306518555
    5. '```' → logprob: -7.7920942306518555
    6. '
' → logprob: -8.667094230651855
    7. 'sum' → logprob: -8.792094230651855
    8. 'total' → logprob: -9.542094230651855
    9. '	return' → logprob: -9.667094230651855
    10. 'result' → logprob: -10.042094230651855

Token 346: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00018268341955263168
    2. 'result' → logprob: -9.25018310546875
    3. '   ' → logprob: -10.50018310546875
    4. 's' → logprob: -10.75018310546875
    5. 'total' → logprob: -10.87518310546875
    6. ' return' → logprob: -11.25018310546875
    7. 'res' → logprob: -12.62518310546875
    8. 'sum' → logprob: -13.87518310546875
    9. 'ans' → logprob: -14.37518310546875
    10. 'def' → logprob: -15.12518310546875

Token 347: ' int' (ID: 677)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.11583443731069565
    2. 'int' → logprob: -2.8658344745635986
    3. 'sum' → logprob: -2.9908344745635986
    4. ' d' → logprob: -6.6158342361450195
    5. '(d' → logprob: -7.4908342361450195
    6. ' int' → logprob: -9.24083423614502
    7. ' sum' → logprob: -9.24083423614502
    8. '(sum' → logprob: -9.99083423614502
    9. '(int' → logprob: -10.74083423614502
    10. 'np' → logprob: -11.36583423614502

Token 348: '(sum' (ID: 45528)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.002271820092573762
    2. '((' → logprob: -6.62727165222168
    3. '(sum' → logprob: -7.87727165222168
    4. '(' → logprob: -8.25227165222168
    5. 'd' → logprob: -8.50227165222168
    6. '(np' → logprob: -9.50227165222168
    7. 'sum' → logprob: -11.37727165222168
    8. '(s' → logprob: -11.37727165222168
    9. '(
' → logprob: -13.62727165222168
    10. ')d' → logprob: -14.25227165222168

Token 349: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00020306356600485742
    2. '(' → logprob: -8.750203132629395
    3. '((' → logprob: -10.500203132629395
    4. '(
' → logprob: -11.875203132629395
    5. 'd' → logprob: -12.250203132629395
    6. ')' → logprob: -13.125203132629395
    7. ' (' → logprob: -13.250203132629395
    8. ')d' → logprob: -14.375203132629395
    9. '(np' → logprob: -15.500203132629395
    10. '([' → logprob: -15.625203132629395

Token 350: '[-' (ID: 17503)
  Prédit: '[l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[l' → logprob: -0.004122803919017315
    2. '[-' → logprob: -5.504122734069824
    3. '[d' → logprob: -10.504122734069824
    4. '[' → logprob: -11.379122734069824
    5. '[
' → logprob: -13.004122734069824
    6. '[(' → logprob: -13.754122734069824
    7. ')[' → logprob: -14.754122734069824
    8. '[:' → logprob: -14.754122734069824
    9. '(l' → logprob: -15.379122734069824
    10. '[L' → logprob: -15.629122734069824

Token 351: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.165027217415627e-05
    2. '])' → logprob: -11.500021934509277
    3. '-' → logprob: -12.500021934509277
    4. ']' → logprob: -13.500021934509277
    5. 'l' → logprob: -13.625021934509277
    6. ' ' → logprob: -13.625021934509277
    7. ',' → logprob: -13.750021934509277
    8. '[' → logprob: -14.625021934509277
    9. 'd' → logprob: -14.750021934509277
    10. 'i' → logprob: -15.500021934509277

Token 352: '][:' (ID: 63357)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3927536606788635
    2. '])' → logprob: -1.1427536010742188
    3. ']' → logprob: -5.392753601074219
    4. '%)' → logprob: -7.267753601074219
    5. '%' → logprob: -8.517753601074219
    6. '[])' → logprob: -9.017753601074219
    7. '))' → logprob: -9.142753601074219
    8. '())' → logprob: -9.767753601074219
    9. '`)' → logprob: -10.517753601074219
    10. ')%' → logprob: -10.642753601074219

Token 353: 'l' (ID: 75)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.09117197245359421
    2. ']' → logprob: -3.091171979904175
    3. ']))' → logprob: -3.716171979904175
    4. 'M' → logprob: -4.341171741485596
    5. ']%' → logprob: -6.591171741485596
    6. '-' → logprob: -7.091171741485596
    7. 'l' → logprob: -7.341171741485596
    8. 'd' → logprob: -8.216172218322754
    9. ']))
' → logprob: -8.966172218322754
    10. '])*' → logprob: -9.091172218322754

Token 354: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0012527309590950608
    2. ']' → logprob: -6.8762526512146
    3. ']))' → logprob: -8.751253128051758
    4. ' ])' → logprob: -10.626253128051758
    5. ')' → logprob: -11.251253128051758
    6. ']%' → logprob: -11.751253128051758
    7. '%' → logprob: -12.251253128051758
    8. '   ' → logprob: -12.501253128051758
    9. ']))
' → logprob: -12.876253128051758
    10. '  ' → logprob: -14.251253128051758

Token 355: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4922601282596588
    2. '%' → logprob: -0.9922600984573364
    3. ' %' → logprob: -4.242259979248047
    4. ')%' → logprob: -5.867259979248047
    5. '))' → logprob: -7.242259979248047
    6. '%)' → logprob: -9.742259979248047
    7. ' )' → logprob: -11.492259979248047
    8. ')
' → logprob: -11.992259979248047
    9. ' ' → logprob: -12.617259979248047
    10. '%B' → logprob: -12.617259979248047

Token 356: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0015023599844425917
    2. ' M' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.751502990722656
    4. ' ' → logprob: -17.126502990722656
    5. '  ' → logprob: -19.251502990722656
    6. '<M' → logprob: -19.751502990722656
    7. '	M' → logprob: -20.001502990722656
    8. '(M' → logprob: -20.126502990722656
    9. ')' → logprob: -21.126502990722656
    10. '>M' → logprob: -21.251502990722656

Token 357: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.88418151892256e-05
    2. '))' → logprob: -9.750059127807617
    3. ')
' → logprob: -15.000059127807617
    4. ')))' → logprob: -16.125059127807617
    5. ' )' → logprob: -17.250059127807617
    6. ')`' → logprob: -17.625059127807617
    7. '`)' → logprob: -17.750059127807617
    8. '')' → logprob: -18.375059127807617
    9. ')}' → logprob: -19.250059127807617
    10. '})' → logprob: -19.500059127807617

Token 358: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 359: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.061990320682525635
    2. ' main' → logprob: -2.811990261077881
    3. 'get' → logprob: -11.436990737915039
    4. 'process' → logprob: -12.311990737915039
    5. 'def' → logprob: -12.686990737915039
    6. 'run' → logprob: -13.311990737915039
    7. 'n' → logprob: -14.186990737915039
    8. 'solve' → logprob: -14.311990737915039
    9. ' get' → logprob: -14.811990737915039
    10. ' process' → logprob: -15.186990737915039

Token 360: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.747814349073451e-05
    2. '():
' → logprob: -11.125017166137695
    3. ' ():' → logprob: -12.875017166137695
    4. '()' → logprob: -17.000017166137695
    5. '():
' → logprob: -18.000017166137695
    6. '(' → logprob: -19.500017166137695
    7. '():

' → logprob: -20.125017166137695
    8. '(":' → logprob: -21.625017166137695
    9. ':' → logprob: -22.125017166137695
    10. '()>' → logprob: -22.625017166137695

Token 361: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3589519262313843
    2. 'n' → logprob: -1.3589519262313843
    3. ' n' → logprob: -3.108952045440674
    4. '	n' → logprob: -11.483951568603516
    5. '```' → logprob: -13.358951568603516
    6. ',n' → logprob: -14.608951568603516
    7. '
' → logprob: -14.858951568603516
    8. ' ' → logprob: -14.858951568603516
    9. '(n' → logprob: -14.983951568603516
    10. 'def' → logprob: -14.983951568603516

Token 362: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -7.517272024415433e-05
    2. ' n' → logprob: -9.750075340270996
    3. '   ' → logprob: -11.000075340270996
    4. '```' → logprob: -17.12507438659668
    5. '	n' → logprob: -17.50007438659668
    6. '
' → logprob: -19.37507438659668
    7. '(n' → logprob: -21.62507438659668
    8. '  ' → logprob: -21.62507438659668
    9. ',n' → logprob: -21.75007438659668
    10. '_n' → logprob: -22.00007438659668

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0325924449716695e-05
    2. ',M' → logprob: -12.00001049041748
    3. ' ,' → logprob: -12.62501049041748
    4. ',
' → logprob: -15.25001049041748
    5. 'import' → logprob: -16.375009536743164
    6. '<|end|>' → logprob: -16.375009536743164
    7. 'M' → logprob: -16.625009536743164
    8. '‌,' → logprob: -16.875009536743164
    9. '=' → logprob: -17.000009536743164
    10. 'def' → logprob: -17.125009536743164

Token 364: ' M' (ID: 391)
  Prédit: ' M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -0.31338056921958923
    2. 'M' → logprob: -1.3133805990219116
    3. ' ' → logprob: -9.188380241394043
    4. '<|end|>' → logprob: -11.813380241394043
    5. '  ' → logprob: -12.438380241394043
    6. '    ' → logprob: -13.438380241394043
    7. '=' → logprob: -14.438380241394043
    8. ' ' → logprob: -14.563380241394043
    9. '   ' → logprob: -14.813380241394043
    10. ' =' → logprob: -15.063380241394043

Token 365: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692978978157043
    2. '=' → logprob: -2.126929759979248
    3. '=n' → logprob: -14.501930236816406
    4. '   ' → logprob: -15.001930236816406
    5. '=get' → logprob: -15.251930236816406
    6. '=input' → logprob: -15.376930236816406
    7. ',' → logprob: -16.001930236816406
    8. ' ' → logprob: -16.626930236816406
    9. '=create' → logprob: -17.001930236816406
    10. '＝' → logprob: -17.126930236816406

Token 366: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.2014133334159851
    2. ' get' → logprob: -1.7014133930206299
    3. '=get' → logprob: -19.951414108276367
    4. '	get' → logprob: -20.201414108276367
    5. '(get' → logprob: -20.826414108276367
    6. ' ' → logprob: -22.201414108276367
    7. '[get' → logprob: -22.201414108276367
    8. '_get' → logprob: -22.451414108276367
    9. ',get' → logprob: -22.826414108276367
    10. '.get' → logprob: -23.076414108276367

Token 367: '_inputs' (ID: 67304)
  Prédit: '_inputs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inputs' → logprob: -0.0006477446295320988
    2. 'inputs' → logprob: -7.37564754486084
    3. '_' → logprob: -11.37564754486084
    4. '_input' → logprob: -12.12564754486084
    5. ' inputs' → logprob: -13.25064754486084
    6. '()' → logprob: -14.37564754486084
    7. 'Inputs' → logprob: -14.37564754486084
    8. '(' → logprob: -14.75064754486084
    9. '_outputs' → logprob: -15.37564754486084
    10. '_values' → logprob: -15.87564754486084

Token 368: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0019637243822216988
    2. '   ' → logprob: -7.1269636154174805
    3. '<|end|>' → logprob: -7.2519636154174805
    4. 'n' → logprob: -8.50196361541748
    5. 'def' → logprob: -10.12696361541748
    6. '    
' → logprob: -10.12696361541748
    7. '```' → logprob: -10.37696361541748
    8. '<|end|>' → logprob: -10.75196361541748
    9. '
' → logprob: -10.87696361541748
    10. '()
' → logprob: -11.12696361541748

Token 369: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1475270539522171
    2. 'l' → logprob: -2.147526979446411
    3. ' l' → logprob: -3.897526979446411
    4. '	l' → logprob: -10.272526741027832
    5. '```' → logprob: -10.272526741027832
    6. '
' → logprob: -11.022526741027832
    7. ',l' → logprob: -12.522526741027832
    8. 'n' → logprob: -12.897526741027832
    9. '<|end|>' → logprob: -13.522526741027832
    10. '    
' → logprob: -14.022526741027832

Token 370: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.00026407750556245446
    2. ' l' → logprob: -8.250264167785645
    3. '   ' → logprob: -12.875264167785645
    4. '```' → logprob: -15.750264167785645
    5. '	l' → logprob: -16.375263214111328
    6. '
' → logprob: -17.125263214111328
    7. '_l' → logprob: -19.500263214111328
    8. 'L' → logprob: -19.625263214111328
    9. ' ' → logprob: -19.875263214111328
    10. '`' → logprob: -19.875263214111328

Token 371: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12692810595035553
    2. '=' → logprob: -2.1269280910491943
    3. ',' → logprob: -17.126928329467773
    4. '   ' → logprob: -18.626928329467773
    5. '=create' → logprob: -18.751928329467773
    6. ' ' → logprob: -19.001928329467773
    7. '＝' → logprob: -19.251928329467773
    8. '=get' → logprob: -19.376928329467773
    9. ')' → logprob: -19.376928329467773
    10. '()' → logprob: -19.501928329467773

Token 372: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.029750604182481766
    2. ' compute' → logprob: -3.5297505855560303
    3. '   ' → logprob: -15.90475082397461
    4. 'calculate' → logprob: -17.02975082397461
    5. '.compute' → logprob: -19.02975082397461
    6. ' ' → logprob: -19.52975082397461
    7. 'get' → logprob: -19.77975082397461
    8. '_compute' → logprob: -20.27975082397461
    9. 'computer' → logprob: -20.90475082397461
    10. '  ' → logprob: -21.02975082397461

Token 373: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.9361264946837764e-07
    2. 'l' → logprob: -15.875
    3. '_length' → logprob: -20.25
    4. '(l' → logprob: -20.25
    5. '_' → logprob: -20.75
    6. '_len' → logprob: -21.25
    7. '(' → logprob: -21.5
    8. '_L' → logprob: -21.875
    9. '(n' → logprob: -22.75
    10. ' l' → logprob: -23.0

Token 374: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.625000953674316
    3. 'n' → logprob: -17.0
    4. ' (' → logprob: -18.25
    5. '(
' → logprob: -22.0
    6. '	n' → logprob: -22.875
    7. '```' → logprob: -23.375
    8. '<n' → logprob: -23.5
    9. '   ' → logprob: -23.625
    10. 'def' → logprob: -23.625

Token 375: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3132736384868622
    2. ')
' → logprob: -1.3132736682891846
    3. ')
' → logprob: -11.813273429870605
    4. ')

' → logprob: -13.188273429870605
    5. '   ' → logprob: -13.688273429870605
    6. ')n' → logprob: -14.813273429870605
    7. ')`
' → logprob: -15.063273429870605
    8. ')`' → logprob: -15.688273429870605
    9. '),' → logprob: -15.938273429870605
    10. ' )' → logprob: -16.563274383544922

Token 376: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06253480166196823
    2. 'd' → logprob: -2.812534809112549
    3. ' d' → logprob: -7.687534809112549
    4. '
' → logprob: -9.68753433227539
    5. '```' → logprob: -10.93753433227539
    6. '	d' → logprob: -11.06253433227539
    7. '    
' → logprob: -12.18753433227539
    8. '  ' → logprob: -12.43753433227539
    9. ' ' → logprob: -12.93753433227539
    10. '   ' → logprob: -14.56253433227539

Token 377: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0014677229337394238
    2. '   ' → logprob: -6.751467704772949
    3. ' d' → logprob: -8.12646770477295
    4. '```' → logprob: -13.25146770477295
    5. '	d' → logprob: -16.251468658447266
    6. '
' → logprob: -16.876468658447266
    7. ' ' → logprob: -17.001468658447266
    8. '  ' → logprob: -17.126468658447266
    9. '``' → logprob: -17.626468658447266
    10. '    
' → logprob: -17.876468658447266

Token 378: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858873412013054
    2. '=' → logprob: -3.048588752746582
    3. ',' → logprob: -13.548588752746582
    4. '[' → logprob: -17.798587799072266
    5. ' ' → logprob: -17.923587799072266
    6. '=create' → logprob: -17.923587799072266
    7. '```' → logprob: -18.548587799072266
    8. '＝' → logprob: -18.923587799072266
    9. 'd' → logprob: -19.298587799072266
    10. ')' → logprob: -19.673587799072266

Token 379: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.02975083328783512
    2. ' initialize' → logprob: -3.5297508239746094
    3. '	initialize' → logprob: -15.02975082397461
    4. '_initialize' → logprob: -16.65475082397461
    5. '.initialize' → logprob: -17.40475082397461
    6. 'initial' → logprob: -17.65475082397461
    7. '   ' → logprob: -19.15475082397461
    8. 'itialize' → logprob: -19.27975082397461
    9. 'Initialize' → logprob: -20.15475082397461
    10. 'initializer' → logprob: -20.40475082397461

Token 380: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.15017224848270416
    2. 'd' → logprob: -2.025172233581543
    3. '(d' → logprob: -4.900172233581543
    4. '```' → logprob: -11.775172233581543
    5. '(' → logprob: -12.150172233581543
    6. ' d' → logprob: -12.775172233581543
    7. '_' → logprob: -12.900172233581543
    8. '	d' → logprob: -13.275172233581543
    9. '_(' → logprob: -13.650172233581543
    10. ',d' → logprob: -15.025172233581543

Token 381: '(l' (ID: 4179)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0012121411273255944
    2. 'd' → logprob: -7.001212120056152
    3. '(l' → logprob: -8.126212120056152
    4. '(' → logprob: -12.501212120056152
    5. ' d' → logprob: -14.501212120056152
    6. '_d' → logprob: -15.126212120056152
    7. '```' → logprob: -15.626212120056152
    8. ' (' → logprob: -16.12621307373047
    9. ',d' → logprob: -16.25121307373047
    10. '	d' → logprob: -17.50121307373047

Token 382: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.816093228830141e-06
    2. ',n' → logprob: -13.00000286102295
    3. ' ,' → logprob: -14.50000286102295
    4. 'n' → logprob: -17.000001907348633
    5. ',
' → logprob: -18.125001907348633
    6. ',l' → logprob: -18.625001907348633
    7. 'd' → logprob: -19.125001907348633
    8. ')' → logprob: -19.625001907348633
    9. '‌,' → logprob: -19.625001907348633
    10. 's' → logprob: -19.750001907348633

Token 383: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00014478032244369388
    2. '5' → logprob: -9.125144958496094
    3. ' n' → logprob: -10.375144958496094
    4. '2' → logprob: -14.000144958496094
    5. '(n' → logprob: -14.125144958496094
    6. '   ' → logprob: -14.125144958496094
    7. '3' → logprob: -14.125144958496094
    8. '```' → logprob: -15.125144958496094
    9. ')n' → logprob: -15.250144958496094
    10. '(' → logprob: -15.500144958496094

Token 384: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5790016651153564
    2. '*' → logprob: -0.9540016651153564
    3. ' *' → logprob: -2.9540016651153564
    4. ')
' → logprob: -6.204001426696777
    5. '   ' → logprob: -9.079001426696777
    6. ',' → logprob: -10.454001426696777
    7. '5' → logprob: -11.579001426696777
    8. '*d' → logprob: -12.329001426696777
    9. '```' → logprob: -12.454001426696777
    10. ')

' → logprob: -12.454001426696777

Token 385: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9053812623023987
    2. 'process' → logprob: -0.9053812623023987
    3. ' process' → logprob: -1.655381202697754
    4. '	process' → logprob: -9.155381202697754
    5. '```' → logprob: -9.905381202697754
    6. '
' → logprob: -10.280381202697754
    7. '(process' → logprob: -12.280381202697754
    8. '    
' → logprob: -13.530381202697754
    9. '_process' → logprob: -13.530381202697754
    10. 'd' → logprob: -13.530381202697754

Token 386: ' process' (ID: 2273)
  Prédit: 'process'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'process' (adapté à ' process') → logprob: -0.003180094063282013
    2. ' process' → logprob: -5.753180027008057
    3. '   ' → logprob: -13.003180503845215
    4. '	process' → logprob: -16.3781795501709
    5. '(process' → logprob: -18.5031795501709
    6. 'd' → logprob: -18.7531795501709
    7. 'for' → logprob: -18.8781795501709
    8. '.process' → logprob: -18.8781795501709
    9. '
' → logprob: -19.3781795501709
    10. '```' → logprob: -20.2531795501709

Token 387: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.500003814697266
    3. ' (' → logprob: -18.500003814697266
    4. '(def' → logprob: -19.750003814697266
    5. '(
' → logprob: -20.375003814697266
    6. '```' → logprob: -20.500003814697266
    7. 'd' → logprob: -21.125003814697266
    8. '(de' → logprob: -21.625003814697266
    9. '\(' → logprob: -21.875003814697266
    10. ',d' → logprob: -22.375003814697266

Token 388: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.034592388459714e-06
    2. ',l' → logprob: -12.500005722045898
    3. ' ,' → logprob: -13.375005722045898
    4. ',d' → logprob: -14.125005722045898
    5. '(' → logprob: -16.8750057220459
    6. ')' → logprob: -17.3750057220459
    7. ',
' → logprob: -17.3750057220459
    8. 'd' → logprob: -18.1250057220459
    9. 'l' → logprob: -18.8750057220459
    10. '```' → logprob: -19.3750057220459

Token 389: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.02975199744105339
    2. ' l' → logprob: -3.529752016067505
    3. '   ' → logprob: -13.654751777648926
    4. '    ' → logprob: -16.404752731323242
    5. '	l' → logprob: -16.529752731323242
    6. ' ' → logprob: -16.904752731323242
    7. ')' → logprob: -18.154752731323242
    8. 'd' → logprob: -18.279752731323242
    9. '```' → logprob: -18.654752731323242
    10. '  ' → logprob: -18.654752731323242

Token 390: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.796184723294573e-06
    2. ' ,' → logprob: -12.125005722045898
    3. ',M' → logprob: -15.375005722045898
    4. ',
' → logprob: -17.2500057220459
    5. '   ' → logprob: -17.3750057220459
    6. '```' → logprob: -18.2500057220459
    7. '‌,' → logprob: -18.8750057220459
    8. ')' → logprob: -19.0000057220459
    9. '=' → logprob: -20.0000057220459
    10. '，' → logprob: -20.5000057220459

Token 391: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.1269291490316391
    2. ' M' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.87692928314209
    4. '   ' → logprob: -15.12692928314209
    5. ')' → logprob: -15.37692928314209
    6. ' ' → logprob: -16.001928329467773
    7. '
' → logprob: -16.126928329467773
    8. '```' → logprob: -16.626928329467773
    9. ',' → logprob: -17.251928329467773
    10. '  ' → logprob: -17.751928329467773

Token 392: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.25195789337158203
    2. ')' → logprob: -1.501957893371582
    3. '   ' → logprob: -11.126957893371582
    4. ')
' → logprob: -11.251957893371582
    5. ' )
' → logprob: -14.251957893371582
    6. ')

' → logprob: -15.626957893371582
    7. ' )' → logprob: -16.126956939697266
    8. ')`
' → logprob: -16.626956939697266
    9. '
' → logprob: -17.126956939697266
    10. ' ' → logprob: -17.626956939697266

Token 393: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007069601211696863
    2. '   ' → logprob: -5.3820695877075195
    3. ' print' → logprob: -6.5070695877075195
    4. 'result' → logprob: -7.0070695877075195
    5. 'return' → logprob: -10.50706958770752
    6. ' result' → logprob: -12.25706958770752
    7. '
' → logprob: -12.63206958770752
    8. 'res' → logprob: -12.75706958770752
    9. 's' → logprob: -13.00706958770752
    10. '```' → logprob: -13.00706958770752

Token 394: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000464035285403952
    2. 'result' (adapté à ' result') → logprob: -7.750463962554932
    3. 'res' → logprob: -11.00046443939209
    4. 'pr' → logprob: -12.37546443939209
    5. 'return' → logprob: -12.62546443939209
    6. 'r' → logprob: -12.75046443939209
    7. ' print' → logprob: -13.00046443939209
    8. '   ' → logprob: -13.37546443939209
    9. 's' → logprob: -13.50046443939209
    10. 'p' → logprob: -14.12546443939209

Token 395: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740840494632721
    2. ' =' → logprob: -0.9740840196609497
    3. '_' → logprob: -13.09908390045166
    4. ',' → logprob: -13.84908390045166
    5. ' ' → logprob: -13.84908390045166
    6. ' ' → logprob: -14.09908390045166
    7. ')' → logprob: -14.47408390045166
    8. ' =
' → logprob: -14.72408390045166
    9. ':' → logprob: -14.97408390045166
    10. 's' → logprob: -15.34908390045166

Token 396: ' final' (ID: 1721)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.006715370807796717
    2. ' final' → logprob: -5.006715297698975
    3. '(final' → logprob: -18.631715774536133
    4. '
' → logprob: -20.381715774536133
    5. '	final' → logprob: -21.006715774536133
    6. '_final' → logprob: -22.131715774536133
    7. '   ' → logprob: -22.631715774536133
    8. 'int' → logprob: -23.006715774536133
    9. 'Final' → logprob: -23.256715774536133
    10. ' ' → logprob: -24.131715774536133

Token 397: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.2664456789934775e-06
    2. 'sum' → logprob: -13.750000953674316
    3. '_' → logprob: -16.250001907348633
    4. '_s' → logprob: -18.000001907348633
    5. '_result' → logprob: -18.000001907348633
    6. 'd' → logprob: -18.250001907348633
    7. ' _' → logprob: -18.375001907348633
    8. '```' → logprob: -18.375001907348633
    9. 'result' → logprob: -18.875001907348633
    10. 'Sum' → logprob: -19.625001907348633

Token 398: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -6.64708495605737e-05
    2. '(' → logprob: -9.625066757202148
    3. ' (' → logprob: -15.500066757202148
    4. '(
' → logprob: -16.37506675720215
    5. 'd' → logprob: -19.25006675720215
    6. ',d' → logprob: -20.12506675720215
    7. '(

' → logprob: -20.25006675720215
    8. '(def' → logprob: -20.50006675720215
    9. '(data' → logprob: -20.62506675720215
    10. '```' → logprob: -20.87506675720215

Token 399: ',' (ID: 11)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0012899977155029774
    2. ',' → logprob: -7.6262898445129395
    3. ',d' → logprob: -7.7512898445129395
    4. ')' → logprob: -8.376290321350098
    5. '(' → logprob: -9.251290321350098
    6. 'd' → logprob: -11.001290321350098
    7. ' (' → logprob: -11.126290321350098
    8. ')
' → logprob: -12.376290321350098
    9. '   ' → logprob: -13.126290321350098
    10. ' d' → logprob: -13.501290321350098

Token 400: ' l' (ID: 305)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00040123690268956125
    2. ' d' → logprob: -7.875401020050049
    3. 'l' → logprob: -11.000401496887207
    4. 'M' → logprob: -13.500401496887207
    5. ')' → logprob: -13.750401496887207
    6. '   ' → logprob: -14.500401496887207
    7. ')d' → logprob: -14.500401496887207
    8. 'n' → logprob: -15.375401496887207
    9. '(d' → logprob: -15.625401496887207
    10. ' ' → logprob: -15.625401496887207

Token 401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7954958821064793e-05
    2. ',d' → logprob: -11.125018119812012
    3. ' ,' → logprob: -13.125018119812012
    4. 'd' → logprob: -13.875018119812012
    5. '   ' → logprob: -16.250017166137695
    6. ')' → logprob: -17.500017166137695
    7. ',
' → logprob: -17.875017166137695
    8. '```' → logprob: -18.250017166137695
    9. ' d' → logprob: -19.250017166137695
    10. '(d' → logprob: -19.250017166137695

Token 402: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.4855663721391466e-05
    2. ' M' → logprob: -11.125015258789062
    3. ')' → logprob: -18.000015258789062
    4. '   ' → logprob: -18.125015258789062
    5. '
' → logprob: -19.625015258789062
    6. ' ' → logprob: -20.000015258789062
    7. 'М' → logprob: -20.125015258789062
    8. '```' → logprob: -20.250015258789062
    9. ' ' → logprob: -20.500015258789062
    10. '	M' → logprob: -21.125015258789062

Token 403: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5759879350662231
    2. ')
' → logprob: -0.8259879350662231
    3. ')
' → logprob: -9.950987815856934
    4. ')`
' → logprob: -14.825987815856934
    5. ')

' → logprob: -15.450987815856934
    6. ' )
' → logprob: -16.20098876953125
    7. ')`' → logprob: -16.82598876953125
    8. '   ' → logprob: -17.20098876953125
    9. ' )' → logprob: -17.82598876953125
    10. '))' → logprob: -17.82598876953125

Token 404: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012189284898340702
    2. 'print' → logprob: -7.001218795776367
    3. 'return' → logprob: -8.626218795776367
    4. '    
' → logprob: -9.626218795776367
    5. '
' → logprob: -10.126218795776367
    6. ' return' → logprob: -11.126218795776367
    7. ' print' → logprob: -13.126218795776367
    8. '```' → logprob: -13.376218795776367
    9. '<|end|>' → logprob: -13.501218795776367
    10. '	return' → logprob: -14.001218795776367

Token 405: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.847109812544659e-05
    2. '   ' → logprob: -10.000048637390137
    3. ' print' → logprob: -12.750048637390137
    4. '```' → logprob: -16.25004768371582
    5. 'return' → logprob: -19.75004768371582
    6. '	print' → logprob: -20.50004768371582
    7. '``' → logprob: -22.25004768371582
    8. '
' → logprob: -22.75004768371582
    9. '`' → logprob: -23.62504768371582
    10. '_print' → logprob: -24.12504768371582

Token 406: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0005561320576816797
    2. '(' → logprob: -7.500555992126465
    3. 'result' → logprob: -12.875555992126465
    4. ' (' → logprob: -14.375555992126465
    5. '(results' → logprob: -18.12555694580078
    6. '(res' → logprob: -18.25055694580078
    7. '()' → logprob: -18.25055694580078
    8. '(
' → logprob: -18.25055694580078
    9. '=result' → logprob: -18.25055694580078
    10. ',result' → logprob: -19.50055694580078

Token 407: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -14.500001907348633
    3. ')`' → logprob: -15.000001907348633
    4. '))' → logprob: -15.375001907348633
    5. ' )' → logprob: -15.500001907348633
    6. '()' → logprob: -16.375001907348633
    7. '())' → logprob: -17.625001907348633
    8. '(' → logprob: -18.375001907348633
    9. '`)' → logprob: -18.375001907348633
    10. '#' → logprob: -18.500001907348633

Token 408: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.007294012699276209
    2. '()' → logprob: -5.257294178009033
    3. '
' → logprob: -6.757294178009033
    4. ' if' → logprob: -8.257293701171875
    5. '<|end|>' → logprob: -8.757293701171875
    6. 'main' → logprob: -9.007293701171875
    7. '()
' → logprob: -9.257293701171875
    8. '(
' → logprob: -9.382293701171875
    9. '_' → logprob: -10.257293701171875
    10. '(' → logprob: -10.507293701171875

Token 409: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36297473311424255
    2. '[' → logprob: -1.362974762916565
    3. '(' → logprob: -3.3629746437072754
    4. ',' → logprob: -5.612974643707275
    5. '<|end|>' → logprob: -5.737974643707275
    6. '#' → logprob: -6.487974643707275
    7. '[]' → logprob: -6.612974643707275
    8. ']' → logprob: -6.612974643707275
    9. '()' → logprob: -7.612974643707275
    10. '```' → logprob: -8.237975120544434


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 407
Tokens correctement prédits (1ère position, stricte): 187
Tokens correctement prédits (1ère position, avec adaptation): 203
Tokens correctement prédits (top 10): 352
Précision stricte (1ère position): 45.95%
Précision adaptée (1ère position): 49.88%
Précision (top 10): 86.49%
================================================================================
