================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import combinations, chain, repeat
from operator import mul
from functools import reduce as rdc, partial

extract = lambda l: (tuple(l.count(x) for x in set(l)), set(l))
def triangular(n): return n*(n+1)//2
def pick_overkill(seq, k): return list(combinations(seq, k))
def g(x): return rdc(__import__('math').gcd, x)
def weighted_sum(k, s):
    return sum(g(comb)*w for comb, w in zip(pick_overkill(range(1, k+1), s), repeat({3:6,2:6,1:1}[s])))

k = int(input())

ans = sum(weighted_sum(k, s) for s in [3,2,1])
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' combinations' (ID: 43835)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -1.178370475769043
    2. 'com' → logprob: -1.428370475769043
    3. 'count' → logprob: -1.553370475769043
    4. 'per' → logprob: -2.428370475769043
    5. 'cycle' → logprob: -2.678370475769043
    6. ' permutations' → logprob: -3.678370475769043
    7. 'group' → logprob: -4.053370475769043
    8. ' product' → logprob: -4.303370475769043
    9. 'chain' → logprob: -4.303370475769043
    10. ' cycle' → logprob: -5.053370475769043

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.618001053633634e-05
    2. '(
' → logprob: -11.500025749206543
    3. '\(' → logprob: -11.625025749206543
    4. '()' → logprob: -13.625025749206543
    5. ' (' → logprob: -13.875025749206543
    6. '```' → logprob: -14.250025749206543
    7. ',' → logprob: -14.750025749206543
    8. '((' → logprob: -14.875025749206543
    9. '.' → logprob: -14.875025749206543
    10. 'def' → logprob: -14.875025749206543

Token 5: ' chain' (ID: 13464)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.2167392373085022
    2. ' permutations' → logprob: -1.7167391777038574
    3. 'product' → logprob: -4.466739177703857
    4. ' product' → logprob: -6.466739177703857
    5. 'chain' → logprob: -6.966739177703857
    6. ' chain' → logprob: -7.716739177703857
    7. '```' → logprob: -7.966739177703857
    8. 'com' → logprob: -8.716739654541016
    9. ' ' → logprob: -9.716739654541016
    10. 'group' → logprob: -9.716739654541016

Token 6: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06413521617650986
    2. '(
' → logprob: -3.0641353130340576
    3. '.' → logprob: -4.8141350746154785
    4. '\n' → logprob: -5.8141350746154785
    5. '\' → logprob: -6.3141350746154785
    6. '`' → logprob: -7.5641350746154785
    7. '(
' → logprob: -7.9391350746154785
    8. '```' → logprob: -7.9391350746154785
    9. '(

' → logprob: -7.9391350746154785
    10. '\(' → logprob: -8.439135551452637

Token 7: ' repeat' (ID: 22962)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.6278157234191895
    2. ' product' → logprob: -0.8778157234191895
    3. ' permutations' → logprob: -3.3778157234191895
    4. 'per' → logprob: -4.5028157234191895
    5. 'com' → logprob: -6.1278157234191895
    6. 'filter' → logprob: -7.3778157234191895
    7. 'group' → logprob: -7.3778157234191895
    8. ' group' → logprob: -7.7528157234191895
    9. '```' → logprob: -8.252815246582031
    10. 'compress' → logprob: -8.377815246582031

Token 8: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08232836425304413
    2. '(
' → logprob: -2.5823283195495605
    3. '.' → logprob: -6.8323283195495605
    4. '(

' → logprob: -7.2073283195495605
    5. 'def' → logprob: -7.2073283195495605
    6. ',' → logprob: -8.707328796386719
    7. '`' → logprob: -8.957328796386719
    8. '\n' → logprob: -9.207328796386719
    9. '(
' → logprob: -9.457328796386719
    10. '```' → logprob: -9.457328796386719

Token 9: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007950245402753353
    2. '(
' → logprob: -5.257950305938721
    3. '.' → logprob: -6.882950305938721
    4. '#' → logprob: -7.507950305938721
    5. 'def' → logprob: -7.632950305938721
    6. ',' → logprob: -8.507949829101562
    7. '```' → logprob: -9.257949829101562
    8. '`' → logprob: -9.382949829101562
    9. '(

' → logprob: -9.757949829101562
    10. '\' → logprob: -10.132949829101562

Token 10: ' operator' (ID: 11019)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -1.1477712392807007
    2. ' functools' → logprob: -1.1477712392807007
    3. ' math' → logprob: -1.5227712392807007
    4. ' operator' → logprob: -2.6477713584899902
    5. ' random' → logprob: -3.6477713584899902
    6. ' typing' → logprob: -4.39777135848999
    7. 'collections' → logprob: -4.89777135848999
    8. ' sys' → logprob: -4.89777135848999
    9. ' ' → logprob: -5.27277135848999
    10. ' copy' → logprob: -5.39777135848999

Token 11: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2257741242647171
    2. 'import' → logprob: -1.6007741689682007
    3. '.' → logprob: -8.725773811340332
    4. '	import' → logprob: -9.975773811340332
    5. '<|end|>' → logprob: -10.100773811340332
    6. ' ' → logprob: -10.225773811340332
    7. '_import' → logprob: -10.475773811340332
    8. ',' → logprob: -10.725773811340332
    9. '.import' → logprob: -12.100773811340332
    10. ' ,' → logprob: -12.975773811340332

Token 12: ' mul' (ID: 9975)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.5511838793754578
    2. 'item' → logprob: -1.0511839389801025
    3. ' import' → logprob: -3.9261839389801025
    4. ' mul' → logprob: -4.426183700561523
    5. ' method' → logprob: -4.926183700561523
    6. 'mul' → logprob: -4.926183700561523
    7. 'import' → logprob: -5.301183700561523
    8. 'add' → logprob: -5.676183700561523
    9. 'method' → logprob: -5.676183700561523
    10. ' add' → logprob: -5.676183700561523

Token 13: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9884490370750427
    2. '(
' → logprob: -1.1134490966796875
    3. '(' → logprob: -1.9884490966796875
    4. ',
' → logprob: -2.8634490966796875
    5. 'from' → logprob: -2.8634490966796875
    6. '`' → logprob: -4.4884490966796875
    7. '\' → logprob: -5.1134490966796875
    8. '\n' → logprob: -5.2384490966796875
    9. '(

' → logprob: -5.3634490966796875
    10. '```' → logprob: -5.6134490966796875

Token 14: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.31775394082069397
    2. ',' → logprob: -1.6927539110183716
    3. 'def' → logprob: -3.567754030227661
    4. ',
' → logprob: -3.942754030227661
    5. '

' → logprob: -4.442753791809082
    6. ',

' → logprob: -4.567753791809082
    7. '
' → logprob: -5.192753791809082
    8. 'import' → logprob: -5.567753791809082
    9. '```' → logprob: -6.192753791809082
    10. ' 

' → logprob: -6.567753791809082

Token 15: ' functools' (ID: 142636)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.3145362436771393
    2. ' functools' → logprob: -1.314536213874817
    3. 'math' → logprob: -6.814536094665527
    4. 'operator' → logprob: -9.189536094665527
    5. ' itertools' → logprob: -10.064536094665527
    6. ' math' → logprob: -11.064536094665527
    7. '_fun' → logprob: -12.689536094665527
    8. ' ' → logprob: -12.814536094665527
    9. 'it' → logprob: -13.314536094665527
    10. 'func' → logprob: -13.314536094665527

Token 16: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.5249846577644348
    2. 'import' → logprob: -0.8999846577644348
    3. '_import' → logprob: -6.524984836578369
    4. '_' → logprob: -8.274984359741211
    5. '	import' → logprob: -9.899984359741211
    6. ' ' → logprob: -10.774984359741211
    7. ' _' → logprob: -10.774984359741211
    8. '.' → logprob: -11.149984359741211
    9. '<|end|>' → logprob: -11.774984359741211
    10. '.import' → logprob: -12.274984359741211

Token 17: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.08945116400718689
    2. ' reduce' → logprob: -2.4644510746002197
    3. 'partial' → logprob: -7.839451313018799
    4. ' partial' → logprob: -10.08945083618164
    5. 'redu' → logprob: -10.08945083618164
    6. 'import' → logprob: -11.71445083618164
    7. 'l' → logprob: -11.96445083618164
    8. '.reduce' → logprob: -12.08945083618164
    9. '_reduce' → logprob: -12.08945083618164
    10. 'wrap' → logprob: -13.46445083618164

Token 18: ' as' (ID: 472)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4421197175979614
    2. ',' → logprob: -1.8171197175979614
    3. '\' → logprob: -2.692119598388672
    4. '(' → logprob: -2.817119598388672
    5. '(
' → logprob: -3.817119598388672
    6. '\n' → logprob: -4.692119598388672
    7. ',
' → logprob: -4.817119598388672
    8. 'import' → logprob: -5.317119598388672
    9. '```' → logprob: -5.442119598388672
    10. '#' → logprob: -5.942119598388672

Token 19: ' r' (ID: 428)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.0030702834483236074
    2. 'redu' → logprob: -6.75307035446167
    3. 'partial' → logprob: -7.25307035446167
    4. '_reduce' → logprob: -7.75307035446167
    5. ' reduce' → logprob: -7.87807035446167
    6. 'red' → logprob: -9.003069877624512
    7. 'fun' → logprob: -9.628069877624512
    8. 'f' → logprob: -9.753069877624512
    9. 'r' → logprob: -10.628069877624512
    10. 'import' → logprob: -10.753069877624512

Token 20: 'dc' (ID: 13964)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.041358064860105515
    2. 'educt' → logprob: -3.41635799407959
    3. 'e' → logprob: -5.29135799407959
    4. 'educ' → logprob: -6.16635799407959
    5. 'duce' → logprob: -8.29135799407959
    6. 'd' → logprob: -9.41635799407959
    7. 'reduce' → logprob: -9.91635799407959
    8. 'edict' → logprob: -10.16635799407959
    9. 'edu' → logprob: -10.29135799407959
    10. '```' → logprob: -10.91635799407959

Token 21: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28742969036102295
    2. '(
' → logprob: -2.0374298095703125
    3. 'def' → logprob: -3.4124298095703125
    4. '\' → logprob: -3.5374298095703125
    5. ',' → logprob: -4.0374298095703125
    6. '\n' → logprob: -4.4124298095703125
    7. '(

' → logprob: -5.0374298095703125
    8. '`' → logprob: -6.0374298095703125
    9. '
' → logprob: -6.0374298095703125
    10. ' 

' → logprob: -6.2874298095703125

Token 22: ' partial' (ID: 13664)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.02545461617410183
    2. ' partial' → logprob: -4.650454521179199
    3. 'acc' → logprob: -4.900454521179199
    4. 'import' → logprob: -5.900454521179199
    5. 'cache' → logprob: -6.650454521179199
    6. 'reduce' → logprob: -6.900454521179199
    7. 'wrap' → logprob: -6.900454521179199
    8. 'product' → logprob: -7.025454521179199
    9. 'l' → logprob: -7.900454521179199
    10. 'cached' → logprob: -8.9004545211792

Token 23: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04853467643260956
    2. '(
' → logprob: -3.673534631729126
    3. ',' → logprob: -4.548534870147705
    4. '(

' → logprob: -5.923534870147705
    5. 'def' → logprob: -6.423534870147705
    6. '\' → logprob: -6.548534870147705
    7. '\n' → logprob: -6.548534870147705
    8. '
' → logprob: -7.048534870147705
    9. ',
' → logprob: -7.798534870147705
    10. '

' → logprob: -8.048534393310547

Token 24: 'extract' (ID: 53466)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2306615710258484
    2. '(
' → logprob: -2.605661630630493
    3. ',' → logprob: -3.230661630630493
    4. 'def' → logprob: -3.355661630630493
    5. 'd' → logprob: -4.480661392211914
    6. '\' → logprob: -4.480661392211914
    7. '_' → logprob: -4.855661392211914
    8. '*' → logprob: -5.605661392211914
    9. '(

' → logprob: -5.605661392211914
    10. '#' → logprob: -5.605661392211914

Token 25: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.025067783892154694
    2. 'or' → logprob: -4.1500678062438965
    3. 'ed' → logprob: -6.0250678062438965
    4. '(' → logprob: -6.5250678062438965
    5. '_chain' → logprob: -6.9000678062438965
    6. '_items' → logprob: -8.025067329406738
    7. '_values' → logprob: -8.275067329406738
    8. '_item' → logprob: -8.525067329406738
    9. ' =' → logprob: -8.650067329406738
    10. '_value' → logprob: -8.650067329406738

Token 26: ' lambda' (ID: 27871)
  Prédit: ' partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partial' → logprob: -0.3898026645183563
    2. ' chain' → logprob: -2.2648026943206787
    3. ' lambda' → logprob: -2.2648026943206787
    4. 'partial' → logprob: -2.2648026943206787
    5. 'lambda' → logprob: -5.0148024559021
    6. 'chain' → logprob: -5.7648024559021
    7. ' list' → logprob: -7.3898024559021
    8. '(part' → logprob: -8.264802932739258
    9. ' ' → logprob: -8.514802932739258
    10. ' r' → logprob: -9.264802932739258

Token 27: ' l' (ID: 305)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.8954248428344727
    2. ' lambda' → logprob: -1.1454248428344727
    3. ' lst' → logprob: -1.7704248428344727
    4. ' x' → logprob: -3.0204248428344727
    5. ' iterable' → logprob: -4.020424842834473
    6. ' chain' → logprob: -5.020424842834473
    7. ' f' → logprob: -5.145424842834473
    8. 's' → logprob: -5.145424842834473
    9. ' list' → logprob: -5.645424842834473
    10. 'lambda' → logprob: -5.645424842834473

Token 28: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3814655542373657
    2. ',' → logprob: -1.5064655542373657
    3. '[:' → logprob: -2.631465435028076
    4. '[i' → logprob: -4.506465435028076
    5. '[' → logprob: -4.881465435028076
    6. ' :' → logprob: -6.881465435028076
    7. '[:-' → logprob: -7.006465435028076
    8. '[n' → logprob: -7.506465435028076
    9. '[-' → logprob: -7.881465435028076
    10. '[l' → logprob: -7.881465435028076

Token 29: ' (' (ID: 350)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.716117799282074
    2. ' l' → logprob: -2.0911178588867188
    3. 'chain' → logprob: -2.5911178588867188
    4. 'list' → logprob: -2.7161178588867188
    5. ' list' → logprob: -2.9661178588867188
    6. ' chain' → logprob: -3.3411178588867188
    7. '[' → logprob: -3.4661178588867188
    8. '[l' → logprob: -3.7161178588867188
    9. ' [' → logprob: -3.9661178588867188
    10. ' next' → logprob: -4.091117858886719

Token 30: 'tuple' (ID: 52834)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.4622010588645935
    2. 'x' → logprob: -1.8372011184692383
    3. 'i' → logprob: -3.2122011184692383
    4. 'chain' → logprob: -3.3372011184692383
    5. 'c' → logprob: -3.9622011184692383
    6. ' l' → logprob: -4.212201118469238
    7. 'item' → logprob: -4.712201118469238
    8. 'e' → logprob: -4.962201118469238
    9. '(x' → logprob: -5.087201118469238
    10. 'elem' → logprob: -5.087201118469238

Token 31: '(l' (ID: 4179)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.5964860320091248
    2. '(l' → logprob: -0.9714860320091248
    3. '(map' → logprob: -3.4714860916137695
    4. '(i' → logprob: -4.4714860916137695
    5. '(filter' → logprob: -4.7214860916137695
    6. ')' → logprob: -5.7214860916137695
    7. '(ld' → logprob: -5.8464860916137695
    8. '(' → logprob: -5.9714860916137695
    9. '(sorted' → logprob: -6.2214860916137695
    10. '(rd' → logprob: -6.4714860916137695

Token 32: '.count' (ID: 14019)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.6138801574707031
    2. '),' → logprob: -0.8638801574707031
    3. '))' → logprob: -4.238880157470703
    4. ')' → logprob: -4.738880157470703
    5. '[:-' → logprob: -4.863880157470703
    6. '[' → logprob: -5.863880157470703
    7. '[i' → logprob: -5.988880157470703
    8. '[-' → logprob: -8.113880157470703
    9. ')+' → logprob: -9.863880157470703
    10. '   ' → logprob: -9.863880157470703

Token 33: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.341287761926651
    2. '(i' → logprob: -1.3412877321243286
    3. '(s' → logprob: -5.341287612915039
    4. '(a' → logprob: -5.716287612915039
    5. '(c' → logprob: -5.841287612915039
    6. '(' → logprob: -5.966287612915039
    7. '(e' → logprob: -5.966287612915039
    8. '(k' → logprob: -6.091287612915039
    9. '(n' → logprob: -6.216287612915039
    10. ')' → logprob: -6.716287612915039

Token 34: ')' (ID: 8)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.09255543351173401
    2. '(i' → logprob: -3.217555522918701
    3. '(c' → logprob: -3.467555522918701
    4. '(y' → logprob: -5.467555522918701
    5. '(k' → logprob: -5.717555522918701
    6. '(e' → logprob: -5.967555522918701
    7. '(a' → logprob: -6.592555522918701
    8. '(l' → logprob: -6.717555522918701
    9. '(' → logprob: -6.842555522918701
    10. '(s' → logprob: -6.967555522918701

Token 35: ' for' (ID: 395)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.002075432799756527
    2. '(i' → logprob: -7.0020751953125
    3. '(' → logprob: -7.2520751953125
    4. '(c' → logprob: -8.6270751953125
    5. '(l' → logprob: -9.0020751953125
    6. 'for' → logprob: -10.8770751953125
    7. ' for' → logprob: -11.0020751953125
    8. '((' → logprob: -11.0020751953125
    9. '(a' → logprob: -11.1270751953125
    10. '(s' → logprob: -11.2520751953125

Token 36: ' x' (ID: 1215)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.0322558879852295
    2. 'l' → logprob: -1.1572558879852295
    3. ' set' → logprob: -2.4072558879852295
    4. 'set' → logprob: -2.9072558879852295
    5. '{' → logprob: -3.1572558879852295
    6. 'x' → logprob: -3.5322558879852295
    7. ' chain' → logprob: -3.9072558879852295
    8. ' range' → logprob: -4.032256126403809
    9. ' x' → logprob: -4.157256126403809
    10. 'range' → logprob: -4.407256126403809

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6698256731033325
    2. ' set' → logprob: -1.0448256731033325
    3. ' l' → logprob: -2.294825553894043
    4. 'set' → logprob: -3.919825553894043
    5. 'l' → logprob: -4.919825553894043
    6. 'in' → logprob: -4.919825553894043
    7. 's' → logprob: -8.482325553894043
    8. ' ' → logprob: -8.794825553894043
    9. '=set' → logprob: -9.107325553894043
    10. '<|end|>' → logprob: -9.232325553894043

Token 38: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.7406762838363647
    2. ' set' → logprob: -0.9906762838363647
    3. ' l' → logprob: -2.8656764030456543
    4. 'l' → logprob: -3.1156764030456543
    5. '{' → logprob: -3.2406764030456543
    6. ' {' → logprob: -5.865676403045654
    7. 'x' → logprob: -7.053176403045654
    8. 'dict' → logprob: -7.115676403045654
    9. 'sorted' → logprob: -7.178176403045654
    10. '{x' → logprob: -7.240676403045654

Token 39: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0011171156074851751
    2. '(' → logprob: -7.62611722946167
    3. 'l' → logprob: -7.87611722946167
    4. ' l' → logprob: -8.751116752624512
    5. ' (' → logprob: -10.251116752624512
    6. '	l' → logprob: -11.001116752624512
    7. ')' → logprob: -11.126116752624512
    8. '(s' → logprob: -11.626116752624512
    9. ' )' → logprob: -12.751116752624512
    10. ',l' → logprob: -13.251116752624512

Token 40: ')),' (ID: 12098)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.17376235127449036
    2. ')))' → logprob: -2.173762321472168
    3. ')' → logprob: -3.923762321472168
    4. '),' → logprob: -4.298762321472168
    5. ')),' → logprob: -4.548762321472168
    6. ' ' → logprob: -7.048762321472168
    7. '))),' → logprob: -8.048762321472168
    8. ' ))' → logprob: -8.173762321472168
    9. '))))' → logprob: -9.673762321472168
    10. '   ' → logprob: -9.923762321472168

Token 41: ' set' (ID: 920)
  Prédit: ' tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tuple' → logprob: -0.3521241545677185
    2. 'tuple' → logprob: -1.4771242141723633
    3. ' l' → logprob: -4.102124214172363
    4. 'set' → logprob: -4.352124214172363
    5. ' set' → logprob: -4.352124214172363
    6. 'len' → logprob: -5.352124214172363
    7. 'l' → logprob: -5.602124214172363
    8. ' len' → logprob: -6.102124214172363
    9. ' [' → logprob: -6.227124214172363
    10. '[' → logprob: -6.602124214172363

Token 42: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -4.0484450437361374e-05
    2. '(' → logprob: -10.125040054321289
    3. '(s' → logprob: -15.250040054321289
    4. '(ll' → logprob: -17.12504005432129
    5. ')' → logprob: -17.50004005432129
    6. ' (' → logprob: -18.00004005432129
    7. ')(' → logprob: -18.62504005432129
    8. '(
' → logprob: -18.75004005432129
    9. '/l' → logprob: -19.00004005432129
    10. '(list' → logprob: -19.12504005432129

Token 43: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.016586506739258766
    2. ')' → logprob: -4.2665863037109375
    3. ')))' → logprob: -6.3915863037109375
    4. ' ))' → logprob: -8.141586303710938
    5. '),' → logprob: -9.141586303710938
    6. '))
' → logprob: -9.141586303710938
    7. '()))' → logprob: -9.391586303710938
    8. '(l' → logprob: -9.641586303710938
    9. ' ' → logprob: -10.891586303710938
    10. 'l' → logprob: -11.766586303710938

Token 44: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.809243381023407
    2. '(' → logprob: -1.3092434406280518
    3. ',' → logprob: -1.8092434406280518
    4. '(
' → logprob: -3.0592434406280518
    5. '
' → logprob: -3.5592434406280518
    6. 'def' → logprob: -4.559243202209473
    7. ',
' → logprob: -4.684243202209473
    8. '[' → logprob: -5.559243202209473
    9. '<|end|>' → logprob: -5.934243202209473
    10. '_' → logprob: -6.309243202209473

Token 45: ' triangular' (ID: 124454)
  Prédit: ' partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' partial' → logprob: -1.2743794918060303
    2. ' factorial' → logprob: -2.0243794918060303
    3. ' get' → logprob: -2.5243794918060303
    4. ' extract' → logprob: -2.6493794918060303
    5. ' _' → logprob: -3.1493794918060303
    6. ' product' → logprob: -3.1493794918060303
    7. ' combine' → logprob: -3.1493794918060303
    8. ' count' → logprob: -3.3993794918060303
    9. ' find' → logprob: -3.7743794918060303
    10. ' factor' → logprob: -3.8993794918060303

Token 46: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.015593660064041615
    2. '(' → logprob: -4.515593528747559
    3. '_number' → logprob: -5.640593528747559
    4. '_numbers' → logprob: -7.765593528747559
    5. '(x' → logprob: -8.890593528747559
    6. '(number' → logprob: -9.015593528747559
    7. ' (' → logprob: -9.515593528747559
    8. '(num' → logprob: -9.765593528747559
    9. '_matrix' → logprob: -9.890593528747559
    10. '(k' → logprob: -10.765593528747559

Token 47: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0002627662615850568
    2. '):
' → logprob: -9.375263214111328
    3. ')' → logprob: -9.625263214111328
    4. '(n' → logprob: -10.125263214111328
    5. '=' → logprob: -10.375263214111328
    6. ' ):' → logprob: -10.750263214111328
    7. '):
' → logprob: -11.625263214111328
    8. ':' → logprob: -12.500263214111328
    9. ')=' → logprob: -13.375263214111328
    10. ' ' → logprob: -14.500263214111328

Token 48: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2274761199951172
    2. '   ' → logprob: -1.7274761199951172
    3. 'return' → logprob: -3.852476119995117
    4. '
' → logprob: -6.352476119995117
    5. '	return' → logprob: -6.727476119995117
    6. '```' → logprob: -7.227476119995117
    7. '    ' → logprob: -8.102476119995117
    8. ' ' → logprob: -9.102476119995117
    9. ' 
' → logprob: -9.477476119995117
    10. '    
' → logprob: -9.477476119995117

Token 49: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.7259992957115173
    2. 'n' → logprob: -0.8509992957115173
    3. '(n' → logprob: -2.600999355316162
    4. ' (' → logprob: -4.350999355316162
    5. '(' → logprob: -7.225999355316162
    6. 'int' → logprob: -7.725999355316162
    7. ' int' → logprob: -8.100998878479004
    8. ' ' → logprob: -8.725998878479004
    9. '(int' → logprob: -8.850998878479004
    10. '((' → logprob: -9.100998878479004

Token 50: '*(' (ID: 14793)
  Prédit: '*('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.2817635238170624
    2. '*' → logprob: -1.5317635536193848
    3. ' *' → logprob: -3.5317635536193848
    4. '+' → logprob: -10.156763076782227
    5. '-' → logprob: -10.406763076782227
    6. ' if' → logprob: -10.656763076782227
    7. '*n' → logprob: -11.531763076782227
    8. '(n' → logprob: -11.656763076782227
    9. 'if' → logprob: -11.656763076782227
    10. ' *(' → logprob: -12.031763076782227

Token 51: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0031562112271785736
    2. '1' → logprob: -6.5031561851501465
    3. ' n' → logprob: -7.1281561851501465
    4. '+' → logprob: -7.3781561851501465
    5. '(n' → logprob: -8.628156661987305
    6. ' ' → logprob: -10.878156661987305
    7. ' +' → logprob: -11.378156661987305
    8. '-' → logprob: -11.503156661987305
    9. ')n' → logprob: -13.628156661987305
    10. '	n' → logprob: -13.753156661987305

Token 52: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0027024007868021727
    2. ' +' → logprob: -6.002702236175537
    3. '-' → logprob: -8.502702713012695
    4. '1' → logprob: -11.002702713012695
    5. ' -' → logprob: -13.002702713012695
    6. '+)' → logprob: -13.252702713012695
    7. ' plus' → logprob: -14.252702713012695
    8. ' ' → logprob: -14.752702713012695
    9. 'plus' → logprob: -15.315202713012695
    10. ')' → logprob: -15.502702713012695

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006721059791743755
    2. ' ' → logprob: -5.006721019744873
    3. ')' → logprob: -12.131721496582031
    4. ' )' → logprob: -15.381721496582031
    5. '  ' → logprob: -17.50672149658203
    6. '2' → logprob: -17.69422149658203
    7. '<|end|>' → logprob: -18.13172149658203
    8. '```' → logprob: -18.25672149658203
    9. ' ' → logprob: -18.69422149658203
    10. '１' → logprob: -19.38172149658203

Token 54: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.08077483624219894
    2. ')' → logprob: -2.5807747840881348
    3. '//' → logprob: -6.705774784088135
    4. ' )' → logprob: -7.455774784088135
    5. ')>>' → logprob: -9.830775260925293
    6. ' //' → logprob: -10.830775260925293
    7. ')/' → logprob: -12.705775260925293
    8. ')return' → logprob: -13.080775260925293
    9. '')' → logprob: -14.205775260925293
    10. ')#' → logprob: -14.705775260925293

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.50001049041748
    3. '1' → logprob: -15.87501049041748
    4. '```' → logprob: -16.187511444091797
    5. '۲' → logprob: -16.812511444091797
    6. '22' → logprob: -18.062511444091797
    7. '  ' → logprob: -18.125011444091797
    8. '   ' → logprob: -18.187511444091797
    9. '२' → logprob: -18.187511444091797
    10. '২' → logprob: -18.375011444091797

Token 56: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16616228222846985
    2. '
' → logprob: -2.7911622524261475
    3. ' def' → logprob: -3.2911622524261475
    4. '<|end|>' → logprob: -4.041162490844727
    5. '*' → logprob: -4.291162490844727
    6. '#' → logprob: -5.166162490844727
    7. ')' → logprob: -5.291162490844727
    8. '

' → logprob: -5.791162490844727
    9. ',' → logprob: -6.416162490844727
    10. '\' → logprob: -6.791162490844727

Token 57: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.24679066240787506
    2. '*' → logprob: -2.496790647506714
    3. '(' → logprob: -3.246790647506714
    4. ')' → logprob: -3.871790647506714
    5. '
' → logprob: -4.121790885925293
    6. '+' → logprob: -5.121790885925293
    7. '\' → logprob: -5.121790885925293
    8. '#' → logprob: -5.121790885925293
    9. '_' → logprob: -5.121790885925293
    10. '<|end|>' → logprob: -5.246790885925293

Token 58: ' pick' (ID: 5230)
  Prédit: ' factorial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.6150558590888977
    2. ' bin' → logprob: -1.990055799484253
    3. ' cube' → logprob: -3.240055799484253
    4. ' partial' → logprob: -3.490055799484253
    5. ' factor' → logprob: -3.990055799484253
    6. ' is' → logprob: -4.240056037902832
    7. ' pas' → logprob: -4.240056037902832
    8. ' combinations' → logprob: -4.365056037902832
    9. ' triangular' → logprob: -4.365056037902832
    10. ' product' → logprob: -4.865056037902832

Token 59: '_over' (ID: 34788)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.030428558588027954
    2. '(' → logprob: -4.155428409576416
    3. '(k' → logprob: -4.405428409576416
    4. ' (' → logprob: -7.405428409576416
    5. '(s' → logprob: -7.905428409576416
    6. '(a' → logprob: -9.280428886413574
    7. '_' → logprob: -9.530428886413574
    8. '(i' → logprob: -9.655428886413574
    9. '(N' → logprob: -9.780428886413574
    10. '(number' → logprob: -9.780428886413574

Token 60: 'kill' (ID: 25752)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6181021928787231
    2. '(l' → logprob: -1.4931021928787231
    3. 'lap' → logprob: -2.6181020736694336
    4. 'lapping' → logprob: -3.1181020736694336
    5. '(' → logprob: -3.3681020736694336
    6. '(s' → logprob: -4.118102073669434
    7. '(*' → logprob: -4.618102073669434
    8. '(k' → logprob: -4.868102073669434
    9. 'laps' → logprob: -4.993102073669434
    10. '(lst' → logprob: -5.118102073669434

Token 61: '(seq' (ID: 78669)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07068578898906708
    2. '(' → logprob: -3.820685863494873
    3. '(k' → logprob: -3.945685863494873
    4. '(l' → logprob: -4.195685863494873
    5. '(lst' → logprob: -5.695685863494873
    6. '(s' → logprob: -5.945685863494873
    7. '(p' → logprob: -7.195685863494873
    8. '(r' → logprob: -7.445685863494873
    9. '(arr' → logprob: -7.695685863494873
    10. '(a' → logprob: -7.820685863494873

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005701907211914659
    2. ',n' → logprob: -8.000570297241211
    3. '):' → logprob: -9.500570297241211
    4. ' ,' → logprob: -9.750570297241211
    5. ',k' → logprob: -10.125570297241211
    6. 's' → logprob: -11.125570297241211
    7. ',length' → logprob: -11.750570297241211
    8. '(n' → logprob: -12.125570297241211
    9. ' ' → logprob: -12.625570297241211
    10. ',size' → logprob: -12.750570297241211

Token 63: ' k' (ID: 372)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.9625137448310852
    2. ' k' → logprob: -1.3375136852264404
    3. 'r' → logprob: -1.5875136852264404
    4. 'k' → logprob: -2.2125136852264404
    5. ' n' → logprob: -3.7125136852264404
    6. 'n' → logprob: -4.7125139236450195
    7. ' length' → logprob: -6.5875139236450195
    8. ' ' → logprob: -6.7125139236450195
    9. ' m' → logprob: -7.4625139236450195
    10. '   ' → logprob: -7.5875139236450195

Token 64: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007149741053581238
    2. ',' → logprob: -5.007149696350098
    3. ')' → logprob: -8.382149696350098
    4. ' ):' → logprob: -9.382149696350098
    5. '=' → logprob: -9.882149696350098
    6. '):
' → logprob: -10.382149696350098
    7. ':' → logprob: -11.507149696350098
    8. '=None' → logprob: -12.757149696350098
    9. '   ' → logprob: -13.007149696350098
    10. ' ' → logprob: -13.132149696350098

Token 65: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6728600859642029
    2. ' return' → logprob: -0.7978600859642029
    3. ' for' → logprob: -3.7978601455688477
    4. ' chain' → logprob: -5.422860145568848
    5. '    
' → logprob: -5.797860145568848
    6. ' 
' → logprob: -6.547860145568848
    7. ' yield' → logprob: -7.172860145568848
    8. ' from' → logprob: -7.422860145568848
    9. ' n' → logprob: -7.547860145568848
    10. ' if' → logprob: -7.547860145568848

Token 66: ' list' (ID: 1562)
  Prédit: ' chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chain' → logprob: -1.0699965953826904
    2. ' next' → logprob: -1.1949965953826904
    3. ' list' → logprob: -1.8199965953826904
    4. ' tuple' → logprob: -2.6949965953826904
    5. ' max' → logprob: -3.8199965953826904
    6. 'chain' → logprob: -3.8199965953826904
    7. ' (' → logprob: -4.3199968338012695
    8. 'next' → logprob: -4.3199968338012695
    9. 'list' → logprob: -4.9449968338012695
    10. ' [' → logprob: -4.9449968338012695

Token 67: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.004461212549358606
    2. '(chain' → logprob: -5.504461288452148
    3. '(' → logprob: -8.004461288452148
    4. 'com' → logprob: -10.129461288452148
    5. '(ch' → logprob: -13.129461288452148
    6. '```' → logprob: -13.504461288452148
    7. '(filter' → logprob: -13.754461288452148
    8. '((' → logprob: -14.129461288452148
    9. '(part' → logprob: -14.379461288452148
    10. 'chain' → logprob: -14.629461288452148

Token 68: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.0014352317666634917
    2. 'b' → logprob: -6.626435279846191
    3. 'inations' → logprob: -9.251435279846191
    4. 'positions' → logprob: -12.251435279846191
    5. 'bin' → logprob: -12.876435279846191
    6. ' combinations' → logprob: -14.126435279846191
    7. '[' → logprob: -14.251435279846191
    8. '```' → logprob: -14.376435279846191
    9. '[b' → logprob: -14.751435279846191
    10. 'p' → logprob: -14.876435279846191

Token 69: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.000986604136414826
    2. '(' → logprob: -7.000986576080322
    3. '(sequence' → logprob: -9.62598705291748
    4. ')' → logprob: -12.12598705291748
    5. '(
' → logprob: -13.87598705291748
    6. '(chain' → logprob: -14.00098705291748
    7. '<|end|>' → logprob: -14.00098705291748
    8. ' (' → logprob: -14.87598705291748
    9. ')(' → logprob: -15.50098705291748
    10. ' seq' → logprob: -16.750986099243164

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004105354193598032
    2. ',k' → logprob: -5.504105567932129
    3. ' ,' → logprob: -10.879105567932129
    4. ',n' → logprob: -13.629105567932129
    5. ')' → logprob: -13.879105567932129
    6. ' ' → logprob: -14.254105567932129
    7. ' k' → logprob: -14.254105567932129
    8. '),' → logprob: -14.379105567932129
    9. '```' → logprob: -14.379105567932129
    10. '‌,' → logprob: -14.879105567932129

Token 71: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.026303784921765327
    2. 'k' → logprob: -3.651303768157959
    3. ' ' → logprob: -13.151304244995117
    4. '	k' → logprob: -14.526304244995117
    5. ')' → logprob: -14.651304244995117
    6. ' )' → logprob: -14.901304244995117
    7. ' ' → logprob: -15.026304244995117
    8. '    ' → logprob: -17.276304244995117
    9. '{k' → logprob: -17.526304244995117
    10. '<|end|>' → logprob: -17.776304244995117

Token 72: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -8.315936429426074e-05
    2. ')' → logprob: -9.625082969665527
    3. '))
' → logprob: -11.625082969665527
    4. ' ))' → logprob: -12.500082969665527
    5. ')))' → logprob: -12.750082969665527
    6. ' ' → logprob: -14.375082969665527
    7. '))

' → logprob: -15.125082969665527
    8. '),' → logprob: -15.250082969665527
    9. '()))' → logprob: -15.750082969665527
    10. '+' → logprob: -17.125083923339844

Token 73: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10936609655618668
    2. '
' → logprob: -2.7343661785125732
    3. ' def' → logprob: -4.109365940093994
    4. '<|end|>' → logprob: -4.234365940093994
    5. ')' → logprob: -5.484365940093994
    6. '_' → logprob: -6.359365940093994
    7. '

' → logprob: -8.109366416931152
    8. '<|end|>' → logprob: -8.234366416931152
    9. '[' → logprob: -8.609366416931152
    10. '#' → logprob: -8.609366416931152

Token 74: ' g' (ID: 329)
  Prédit: ' pick'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pick' → logprob: -0.018239261582493782
    2. ' partial' → logprob: -5.643239498138428
    3. ' chain' → logprob: -6.143239498138428
    4. ' extract' → logprob: -6.768239498138428
    5. ' select' → logprob: -6.768239498138428
    6. 'pick' → logprob: -6.893239498138428
    7. ' choose' → logprob: -7.205739498138428
    8. ' _' → logprob: -7.268239498138428
    9. ' get' → logprob: -7.330739498138428
    10. ' find' → logprob: -7.955739498138428

Token 75: '(x' (ID: 4061)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.1912140846252441
    2. 'enerate' → logprob: -1.5662140846252441
    3. 'roup' → logprob: -2.066214084625244
    4. 'en' → logprob: -2.316214084625244
    5. 'eneral' → logprob: -3.441214084625244
    6. 'ather' → logprob: -3.816214084625244
    7. 'enerator' → logprob: -3.941214084625244
    8. 'et' → logprob: -3.941214084625244
    9. 'u' → logprob: -4.066214084625244
    10. 'raph' → logprob: -4.066214084625244

Token 76: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008439636789262295
    2. ',' → logprob: -5.008439540863037
    3. ' ):' → logprob: -7.758439540863037
    4. ':' → logprob: -8.133440017700195
    5. ')' → logprob: -8.133440017700195
    6. '=' → logprob: -8.383440017700195
    7. '):
' → logprob: -9.258440017700195
    8. ',k' → logprob: -9.508440017700195
    9. '[' → logprob: -9.883440017700195
    10. '**' → logprob: -10.383440017700195

Token 77: ' return' (ID: 622)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5387012362480164
    2. ' ' → logprob: -1.0387012958526611
    3. ' return' → logprob: -3.413701295852661
    4. 'x' → logprob: -4.413701057434082
    5. 'return' → logprob: -5.538701057434082
    6. ' r' → logprob: -6.288701057434082
    7. '0' → logprob: -6.538701057434082
    8. '    ' → logprob: -6.538701057434082
    9. ' (' → logprob: -6.538701057434082
    10. ' ' → logprob: -6.663701057434082

Token 78: ' r' (ID: 428)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25225546956062317
    2. 'x' → logprob: -2.377255439758301
    3. ' ' → logprob: -3.627255439758301
    4. ' r' → logprob: -4.127255439758301
    5. ' reduce' → logprob: -4.127255439758301
    6. ' triangular' → logprob: -4.377255439758301
    7. ' tuple' → logprob: -4.627255439758301
    8. ' (' → logprob: -5.252255439758301
    9. ' sum' → logprob: -5.252255439758301
    10. 'reduce' → logprob: -5.252255439758301

Token 79: 'dc' (ID: 13964)
  Prédit: 'dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.03255678340792656
    2. 'd' → logprob: -3.5325567722320557
    3. '(dc' → logprob: -6.157557010650635
    4. 'xdc' → logprob: -8.532556533813477
    5. ' dc' → logprob: -8.657556533813477
    6. 'c' → logprob: -8.657556533813477
    7. 'dcc' → logprob: -9.907556533813477
    8. '_dc' → logprob: -10.282556533813477
    9. '.dc' → logprob: -11.032556533813477
    10. '[' → logprob: -11.282556533813477

Token 80: '(__' (ID: 11782)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.3897011876106262
    2. '(' → logprob: -1.1397011280059814
    3. '(operator' → logprob: -6.2647013664245605
    4. '(lambda' → logprob: -7.7647013664245605
    5. ' (' → logprob: -8.639700889587402
    6. '<|end|>' → logprob: -8.639700889587402
    7. '(mult' → logprob: -10.389700889587402
    8. ' ' → logprob: -11.014700889587402
    9. '(
' → logprob: -11.264700889587402
    10. '(mu' → logprob: -11.514700889587402

Token 81: 'import' (ID: 561)
  Prédit: 'mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mul' → logprob: -0.0006297559011727571
    2. ' mul' → logprob: -8.000629425048828
    3. 'm' → logprob: -9.250629425048828
    4. '(m' → logprob: -10.000629425048828
    5. 'operator' → logprob: -10.250629425048828
    6. '[' → logprob: -10.500629425048828
    7. ' ' → logprob: -11.250629425048828
    8. ',' → logprob: -11.375629425048828
    9. ',m' → logprob: -11.375629425048828
    10. '.mul' → logprob: -11.375629425048828

Token 82: '__('' (ID: 54460)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.04373487830162048
    2. ' operator' → logprob: -4.668735027313232
    3. '('' → logprob: -4.668735027313232
    4. '(operator' → logprob: -4.793735027313232
    5. '<|end|>' → logprob: -4.793735027313232
    6. '_operator' → logprob: -5.918735027313232
    7. ')' → logprob: -6.543735027313232
    8. '	operator' → logprob: -7.168735027313232
    9. '(' → logprob: -7.293735027313232
    10. '.operator' → logprob: -7.293735027313232

Token 83: 'math' (ID: 20310)
  Prédit: 'operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'operator' → logprob: -0.0006917051505297422
    2. 'fun' → logprob: -7.375691890716553
    3. '	operator' → logprob: -10.625691413879395
    4. 'math' → logprob: -10.875691413879395
    5. ' operator' → logprob: -11.500691413879395
    6. '.operator' → logprob: -12.750691413879395
    7. 'cmath' → logprob: -13.125691413879395
    8. '(operator' → logprob: -13.250691413879395
    9. ' functools' → logprob: -13.250691413879395
    10. 'mul' → logprob: -13.750691413879395

Token 84: '').' (ID: 3426)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03346956521272659
    2. ',' → logprob: -4.4084696769714355
    3. ').' → logprob: -4.6584696769714355
    4. '<|end|>' → logprob: -5.4084696769714355
    5. '.sqrt' → logprob: -6.1584696769714355
    6. ')' → logprob: -6.2834696769714355
    7. '.mul' → logprob: -8.033469200134277
    8. ''.' → logprob: -8.283469200134277
    9. '),' → logprob: -8.658469200134277
    10. '<|end|>' → logprob: -8.658469200134277

Token 85: 'g' (ID: 70)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.2283143401145935
    2. 'factor' → logprob: -1.7283143997192383
    3. 'pow' → logprob: -4.228314399719238
    4. 'mul' → logprob: -5.478314399719238
    5. 'g' → logprob: -5.853314399719238
    6. 'sqrt' → logprob: -6.228314399719238
    7. 'comb' → logprob: -6.978314399719238
    8. 'fact' → logprob: -7.603314399719238
    9. 'log' → logprob: -7.853314399719238
    10. 'gamma' → logprob: -8.603314399719238

Token 86: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00029160623671486974
    2. 'amma' → logprob: -8.75029182434082
    3. 'amm' → logprob: -9.75029182434082
    4. 'f' → logprob: -11.12529182434082
    5. 'e' → logprob: -11.62529182434082
    6. 'cm' → logprob: -11.87529182434082
    7. 'a' → logprob: -12.00029182434082
    8. 'mp' → logprob: -12.12529182434082
    9. '```' → logprob: -12.12529182434082
    10. 'am' → logprob: -12.37529182434082

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006704481318593025
    2. ',[' → logprob: -5.631704330444336
    3. ',x' → logprob: -6.256704330444336
    4. ',(' → logprob: -8.006704330444336
    5. '<|end|>' → logprob: -8.381704330444336
    6. '(' → logprob: -9.006704330444336
    7. ',
' → logprob: -9.256704330444336
    8. ' ,' → logprob: -9.381704330444336
    9. ')' → logprob: -10.131704330444336
    10. '[' → logprob: -10.381704330444336

Token 88: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.1269768327474594
    2. 'x' → logprob: -2.126976728439331
    3. '(x' → logprob: -11.25197696685791
    4. ')x' → logprob: -11.25197696685791
    5. ')' → logprob: -11.62697696685791
    6. ',x' → logprob: -12.87697696685791
    7. '[' → logprob: -13.12697696685791
    8. '	x' → logprob: -13.12697696685791
    9. ',' → logprob: -13.37697696685791
    10. '(' → logprob: -14.12697696685791

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002638676203787327
    2. '))' → logprob: -6.377638816833496
    3. ',' → logprob: -7.377638816833496
    4. ' )' → logprob: -9.877638816833496
    5. ')))' → logprob: -10.002638816833496
    6. ')>' → logprob: -10.127638816833496
    7. '(' → logprob: -10.377638816833496
    8. '[' → logprob: -10.752638816833496
    9. '),' → logprob: -10.877638816833496
    10. ')}' → logprob: -11.377638816833496

Token 90: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04288488253951073
    2. '(x' → logprob: -4.542884826660156
    3. ',' → logprob: -4.667884826660156
    4. ')' → logprob: -4.667884826660156
    5. '<|end|>' → logprob: -5.167884826660156
    6. '(lambda' → logprob: -6.417884826660156
    7. '(chain' → logprob: -7.042884826660156
    8. '(
' → logprob: -7.292884826660156
    9. '(range' → logprob: -7.417884826660156
    10. '('' → logprob: -7.792884826660156

Token 91: ' weighted' (ID: 70288)
  Prédit: ' g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.8303810358047485
    2. ' partial' → logprob: -1.4553810358047485
    3. ' l' → logprob: -2.830380916595459
    4. ' pick' → logprob: -3.455380916595459
    5. ' gcd' → logprob: -3.580380916595459
    6. ' factorial' → logprob: -4.080380916595459
    7. ' x' → logprob: -4.205380916595459
    8. ' mul' → logprob: -4.205380916595459
    9. ' f' → logprob: -4.205380916595459
    10. ' map' → logprob: -4.455380916595459

Token 92: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6664113402366638
    2. '_mul' → logprob: -1.1664113998413086
    3. '_sum' → logprob: -2.7914113998413086
    4. '_m' → logprob: -3.0414113998413086
    5. '_mult' → logprob: -4.291411399841309
    6. '_p' → logprob: -4.791411399841309
    7. '_average' → logprob: -4.916411399841309
    8. ' =' → logprob: -5.541411399841309
    9. '_factor' → logprob: -5.666411399841309
    10. '(' → logprob: -5.791411399841309

Token 93: '(k' (ID: 12125)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2569689154624939
    2. '=lambda' → logprob: -2.2569689750671387
    3. '(' → logprob: -2.8819689750671387
    4. '(lambda' → logprob: -3.1319689750671387
    5. '=' → logprob: -3.8819689750671387
    6. '<|end|>' → logprob: -7.006968975067139
    7. ' (' → logprob: -8.13196849822998
    8. ':' → logprob: -8.75696849822998
    9. '<|end|>' → logprob: -9.50696849822998
    10. ',' → logprob: -9.75696849822998

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018584381323307753
    2. ')' → logprob: -6.876858234405518
    3. 's' → logprob: -7.876858234405518
    4. ' ,' → logprob: -9.501858711242676
    5. ',k' → logprob: -9.626858711242676
    6. '):' → logprob: -9.876858711242676
    7. '),' → logprob: -10.126858711242676
    8. ',s' → logprob: -11.126858711242676
    9. ',x' → logprob: -11.376858711242676
    10. '=' → logprob: -11.501858711242676

Token 95: ' s' (ID: 265)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -1.3665610551834106
    2. ' weights' → logprob: -1.3665610551834106
    3. ' ws' → logprob: -2.616560935974121
    4. 'w' → logprob: -3.241560935974121
    5. ' seq' → logprob: -3.241560935974121
    6. 'weights' → logprob: -3.241560935974121
    7. ' f' → logprob: -3.366560935974121
    8. 'ws' → logprob: -3.866560935974121
    9. ' xs' → logprob: -3.991560935974121
    10. ' s' → logprob: -4.241560935974121

Token 96: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6825799942016602
    2. '):' → logprob: -0.8075799942016602
    3. 'eq' → logprob: -4.43257999420166
    4. 'ums' → logprob: -5.05757999420166
    5. 'um' → logprob: -5.05757999420166
    6. 'e' → logprob: -5.55757999420166
    7. 's' → logprob: -5.80757999420166
    8. 'cores' → logprob: -5.93257999420166
    9. 'q' → logprob: -6.05757999420166
    10. 'quence' → logprob: -6.55757999420166

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32538747787475586
    2. ' return' → logprob: -2.075387477874756
    3. ':' → logprob: -2.450387477874756
    4. ' =' → logprob: -3.200387477874756
    5. ',' → logprob: -4.825387477874756
    6. '=' → logprob: -4.950387477874756
    7. ' s' → logprob: -5.950387477874756
    8. ' :' → logprob: -6.075387477874756
    9. ' ' → logprob: -6.575387477874756
    10. '    ' → logprob: -6.950387477874756

Token 98: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3432998061180115
    2. 'return' (adapté à ' return') → logprob: -1.4682998657226562
    3. '   ' → logprob: -3.2182998657226562
    4. ' ' → logprob: -5.593299865722656
    5. ' w' → logprob: -6.218299865722656
    6. ' s' → logprob: -6.343299865722656
    7. ' ws' → logprob: -6.468299865722656
    8. 'ws' → logprob: -6.718299865722656
    9. 'def' → logprob: -6.843299865722656
    10. '    ' → logprob: -6.843299865722656

Token 99: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.7636357545852661
    2. 'sum' → logprob: -0.7636357545852661
    3. 'rd' → logprob: -2.8886356353759766
    4. ' k' → logprob: -5.013635635375977
    5. ' r' → logprob: -5.638635635375977
    6. '   ' → logprob: -7.388635635375977
    7. ' ' → logprob: -8.263635635375977
    8. ' rd' → logprob: -8.263635635375977
    9. 'reduce' → logprob: -8.638635635375977
    10. 'k' → logprob: -8.638635635375977

Token 100: '(g' (ID: 7791)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.9984193444252014
    2. '(m' → logprob: -1.6234192848205566
    3. '(x' → logprob: -1.6234192848205566
    4. '(k' → logprob: -2.1234192848205566
    5. '(i' → logprob: -3.3734192848205566
    6. '(' → logprob: -3.3734192848205566
    7. '(map' → logprob: -3.7484192848205566
    8. '(a' → logprob: -4.998419284820557
    9. '((' → logprob: -5.373419284820557
    10. '(v' → logprob: -5.873419284820557

Token 101: '(com' (ID: 27868)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5331463813781738
    2. '((' → logprob: -2.033146381378174
    3. '(s' → logprob: -2.283146381378174
    4. '(' → logprob: -3.283146381378174
    5. '(i' → logprob: -3.658146381378174
    6. '(k' → logprob: -3.908146381378174
    7. '(y' → logprob: -4.158146381378174
    8. '(c' → logprob: -4.533146381378174
    9. '(w' → logprob: -4.533146381378174
    10. '([' → logprob: -4.658146381378174

Token 102: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01993243210017681
    2. 'p' → logprob: -4.894932270050049
    3. '(b' → logprob: -5.144932270050049
    4. '(x' → logprob: -6.644932270050049
    5. 'binations' → logprob: -6.769932270050049
    6. 'bs' → logprob: -7.019932270050049
    7. 'bi' → logprob: -7.269932270050049
    8. '(p' → logprob: -8.144932746887207
    9. '(s' → logprob: -8.144932746887207
    10. '(' → logprob: -8.644932746887207

Token 103: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08779335021972656
    2. ')*' → logprob: -2.9627933502197266
    3. ')+' → logprob: -3.4627933502197266
    4. ')*(' → logprob: -8.837793350219727
    5. ')-' → logprob: -8.837793350219727
    6. '[' → logprob: -9.087793350219727
    7. ')**' → logprob: -9.087793350219727
    8. 's' → logprob: -9.587793350219727
    9. '+' → logprob: -10.212793350219727
    10. ' )' → logprob: -10.337793350219727

Token 104: 'w' (ID: 86)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4453737437725067
    2. 'w' → logprob: -1.945373773574829
    3. 'mul' → logprob: -2.070373773574829
    4. 'comb' → logprob: -4.19537353515625
    5. 's' → logprob: -4.44537353515625
    6. ' mul' → logprob: -4.94537353515625
    7. ' k' → logprob: -4.94537353515625
    8. 'weight' → logprob: -5.19537353515625
    9. 'len' → logprob: -5.69537353515625
    10. 'g' → logprob: -5.82037353515625

Token 105: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6197825074195862
    2. 'eight' → logprob: -0.8697825074195862
    3. 'e' → logprob: -3.9947824478149414
    4. 'for' → logprob: -4.119782447814941
    5. ' ' → logprob: -5.994782447814941
    6. '**' → logprob: -6.494782447814941
    7. 'ight' → logprob: -6.994782447814941
    8. 'eig' → logprob: -7.494782447814941
    9. '   ' → logprob: -7.619782447814941
    10. ' eight' → logprob: -7.744782447814941

Token 106: ' comb' (ID: 4134)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.6020301580429077
    2. 'comb' → logprob: -0.9770301580429077
    3. ' comb' → logprob: -2.9770302772521973
    4. ' w' → logprob: -4.352030277252197
    5. '(com' → logprob: -5.227030277252197
    6. '(w' → logprob: -6.227030277252197
    7. '   ' → logprob: -6.852030277252197
    8. '_,' → logprob: -6.977030277252197
    9. 'com' → logprob: -7.477030277252197
    10. 'k' → logprob: -7.477030277252197

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08068829774856567
    2. ',w' → logprob: -2.580688238143921
    3. ' in' → logprob: -6.7056884765625
    4. ' ,' → logprob: -7.5806884765625
    5. 'w' → logprob: -10.9556884765625
    6. 'in' → logprob: -11.0806884765625
    7. ',n' → logprob: -11.8306884765625
    8. 's' → logprob: -12.3306884765625
    9. ',s' → logprob: -12.8306884765625
    10. ',count' → logprob: -13.2056884765625

Token 108: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.04317297413945198
    2. ' w' → logprob: -3.16817307472229
    3. '   ' → logprob: -9.668172836303711
    4. ' ' → logprob: -10.543172836303711
    5. ' ' → logprob: -10.918172836303711
    6. '    ' → logprob: -11.168172836303711
    7. '  ' → logprob: -11.418172836303711
    8. '	w' → logprob: -11.918172836303711
    9. 's' → logprob: -12.168172836303711
    10. '(w' → logprob: -12.293172836303711

Token 109: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08914230018854141
    2. 'in' → logprob: -2.464142322540283
    3. ')' → logprob: -8.714141845703125
    4. ',' → logprob: -11.464141845703125
    5. ' )' → logprob: -12.089141845703125
    6. 's' → logprob: -12.589141845703125
    7. '),' → logprob: -12.589141845703125
    8. ' ' → logprob: -12.714141845703125
    9. '	in' → logprob: -13.089141845703125
    10. 'enumer' → logprob: -13.839141845703125

Token 110: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.36710280179977417
    2. 'zip' → logprob: -1.242102861404419
    3. 'chain' → logprob: -4.99210262298584
    4. ' chain' → logprob: -4.99210262298584
    5. 'pick' → logprob: -6.49210262298584
    6. ' pick' → logprob: -6.61710262298584
    7. '(zip' → logprob: -7.61710262298584
    8. 'map' → logprob: -8.74210262298584
    9. 'dict' → logprob: -8.86710262298584
    10. 's' → logprob: -9.11710262298584

Token 111: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0753302127122879
    2. '(' → logprob: -3.5753302574157715
    3. '(com' → logprob: -3.8253302574157715
    4. '(chain' → logprob: -4.0753302574157715
    5. '(zip' → logprob: -5.4503302574157715
    6. '(re' → logprob: -7.9503302574157715
    7. '(*' → logprob: -7.9503302574157715
    8. 'pick' → logprob: -8.450329780578613
    9. '(
' → logprob: -9.075329780578613
    10. '((' → logprob: -9.325329780578613

Token 112: 'ick' (ID: 1003)
  Prédit: 'ick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ick' → logprob: -0.023366373032331467
    2. 'pick' → logprob: -3.8983664512634277
    3. 'chain' → logprob: -7.523366451263428
    4. 'art' → logprob: -7.898366451263428
    5. 'ack' → logprob: -8.14836597442627
    6. 'com' → logprob: -8.39836597442627
    7. ' combinations' → logprob: -8.89836597442627
    8. 'comb' → logprob: -9.02336597442627
    9. '(' → logprob: -9.14836597442627
    10. '```' → logprob: -9.27336597442627

Token 113: '_over' (ID: 34788)
  Prédit: '_over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_over' → logprob: -9.088346359931165e-07
    2. 'over' → logprob: -15.125000953674316
    3. '_OVER' → logprob: -16.125
    4. '_' → logprob: -16.125
    5. 'Over' → logprob: -16.375
    6. '_under' → logprob: -16.75
    7. ')_' → logprob: -17.0
    8. '__' → logprob: -17.5
    9. ')' → logprob: -17.75
    10. ' over' → logprob: -18.375

Token 114: 'kill' (ID: 25752)
  Prédit: 'kill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kill' → logprob: -5.490809417096898e-05
    2. 'kil' → logprob: -11.250055313110352
    3. 'k' → logprob: -11.375055313110352
    4. 'ck' → logprob: -11.750055313110352
    5. '(k' → logprob: -11.750055313110352
    6. 'roll' → logprob: -12.375055313110352
    7. 'killer' → logprob: -12.750055313110352
    8. 'ick' → logprob: -13.125055313110352
    9. 'ckill' → logprob: -13.250055313110352
    10. 'lock' → logprob: -14.375055313110352

Token 115: '(range' (ID: 50017)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0006739511154592037
    2. '(' → logprob: -7.375673770904541
    3. '(k' → logprob: -11.0006742477417
    4. '(seq' → logprob: -11.3756742477417
    5. ' (' → logprob: -12.1256742477417
    6. '((' → logprob: -12.6256742477417
    7. '(chain' → logprob: -13.0006742477417
    8. '(
' → logprob: -13.5006742477417
    9. '(sequence' → logprob: -13.5006742477417
    10. 's' → logprob: -13.6256742477417

Token 116: '(' (ID: 7)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.20218630135059357
    2. '(' → logprob: -1.7021863460540771
    3. '(len' → logprob: -7.452186107635498
    4. '(n' → logprob: -9.452186584472656
    5. '1' → logprob: -10.202186584472656
    6. '(s' → logprob: -10.952186584472656
    7. 'k' → logprob: -11.452186584472656
    8. '((' → logprob: -11.952186584472656
    9. '(max' → logprob: -12.327186584472656
    10. '(-' → logprob: -12.452186584472656

Token 117: '1' (ID: 16)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.40325063467025757
    2. 'k' → logprob: -1.2782506942749023
    3. '(' → logprob: -3.5282506942749023
    4. '1' → logprob: -3.9032506942749023
    5. '(len' → logprob: -6.403250694274902
    6. 'len' → logprob: -6.778250694274902
    7. '10' → logprob: -9.153250694274902
    8. '2' → logprob: -9.278250694274902
    9. '   ' → logprob: -9.528250694274902
    10. ' k' → logprob: -9.653250694274902

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025270165875554085
    2. ',k' → logprob: -3.7752702236175537
    3. 'k' → logprob: -7.025269985198975
    4. '(k' → logprob: -7.400269985198975
    5. ' ,' → logprob: -7.900269985198975
    6. '   ' → logprob: -10.525270462036133
    7. '(' → logprob: -10.525270462036133
    8. '1' → logprob: -10.900270462036133
    9. ',n' → logprob: -10.900270462036133
    10. 'def' → logprob: -11.775270462036133

Token 119: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.003382080467417836
    2. ' k' → logprob: -5.753382205963135
    3. 'len' → logprob: -8.753381729125977
    4. '1' → logprob: -11.378381729125977
    5. '11' → logprob: -11.628381729125977
    6. '10' → logprob: -11.753381729125977
    7. ' len' → logprob: -12.378381729125977
    8. '   ' → logprob: -12.878381729125977
    9. '9' → logprob: -13.128381729125977
    10. ' ' → logprob: -13.128381729125977

Token 120: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0046326881274580956
    2. ' +' → logprob: -5.379632472991943
    3. '),' → logprob: -12.504632949829102
    4. '   ' → logprob: -13.004632949829102
    5. ' ' → logprob: -13.129632949829102
    6. 's' → logprob: -13.754632949829102
    7. '()+' → logprob: -14.379632949829102
    8. '```' → logprob: -14.504632949829102
    9. ',' → logprob: -14.754632949829102
    10. '-' → logprob: -14.879632949829102

Token 121: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.723352049040841e-06
    2. ' ' → logprob: -12.500004768371582
    3. '```' → logprob: -15.250004768371582
    4. '
' → logprob: -15.625004768371582
    5. '   ' → logprob: -16.000003814697266
    6. '2' → logprob: -16.375003814697266
    7. '`' → logprob: -17.187503814697266
    8. '(' → logprob: -17.625003814697266
    9. '``' → logprob: -17.625003814697266
    10. '  ' → logprob: -17.875003814697266

Token 122: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.00020866614067927003
    2. ',' → logprob: -9.625208854675293
    3. 's' → logprob: -10.125208854675293
    4. '+' → logprob: -11.000208854675293
    5. ' ),' → logprob: -11.250208854675293
    6. '```' → logprob: -11.250208854675293
    7. '   ' → logprob: -11.375208854675293
    8. ' ' → logprob: -11.625208854675293
    9. '1' → logprob: -12.125208854675293
    10. '  ' → logprob: -12.625208854675293

Token 123: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05910111963748932
    2. 'len' → logprob: -3.309101104736328
    3. ' s' → logprob: -4.684101104736328
    4. 'k' → logprob: -4.809101104736328
    5. ' len' → logprob: -6.934101104736328
    6. '2' → logprob: -7.184101104736328
    7. '   ' → logprob: -7.809101104736328
    8. ' ' → logprob: -8.934101104736328
    9. 'i' → logprob: -8.934101104736328
    10. '  ' → logprob: -9.059101104736328

Token 124: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0005570820067077875
    2. ' ),' → logprob: -8.750556945800781
    3. ')))' → logprob: -9.125556945800781
    4. ')' → logprob: -9.625556945800781
    5. '+' → logprob: -9.625556945800781
    6. '   ' → logprob: -10.750556945800781
    7. '-' → logprob: -11.000556945800781
    8. '[' → logprob: -11.000556945800781
    9. '  ' → logprob: -11.125556945800781
    10. 's' → logprob: -11.125556945800781

Token 125: ' repeat' (ID: 22962)
  Prédit: 'repeat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repeat' → logprob: -0.04442530497908592
    2. 'range' → logprob: -3.2944252490997314
    3. 'chain' → logprob: -6.7944254875183105
    4. 're' → logprob: -6.7944254875183105
    5. 'map' → logprob: -6.7944254875183105
    6. '[' → logprob: -7.0444254875183105
    7. ' repeat' → logprob: -7.2944254875183105
    8. '   ' → logprob: -7.7944254875183105
    9. 'rd' → logprob: -8.669425010681152
    10. ' range' → logprob: -8.794425010681152

Token 126: '({' (ID: 3972)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.40727606415748596
    2. '(' → logprob: -1.7822760343551636
    3. '(k' → logprob: -2.532276153564453
    4. '(tr' → logprob: -2.782276153564453
    5. '(t' → logprob: -4.282276153564453
    6. '((' → logprob: -6.032276153564453
    7. '(weight' → logprob: -6.032276153564453
    8. '(weights' → logprob: -6.157276153564453
    9. '(w' → logprob: -6.282276153564453
    10. '(len' → logprob: -7.532276153564453

Token 127: '3' (ID: 18)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9850091934204102
    2. 'tri' → logprob: -0.9850091934204102
    3. '1' → logprob: -2.11000919342041
    4. 's' → logprob: -2.48500919342041
    5. 'weighted' → logprob: -4.98500919342041
    6. ' k' → logprob: -5.11000919342041
    7. '0' → logprob: -5.11000919342041
    8. 'w' → logprob: -5.73500919342041
    9. 'lambda' → logprob: -5.86000919342041
    10. ' ' → logprob: -5.98500919342041

Token 128: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.694061815738678
    2. '1' → logprob: -1.5690617561340332
    3. '2' → logprob: -3.194061756134033
    4. '0' → logprob: -3.444061756134033
    5. 'k' → logprob: -3.569061756134033
    6. ' ' → logprob: -3.819061756134033
    7. '}))' → logprob: -3.819061756134033
    8. 's' → logprob: -3.944061756134033
    9. '}),' → logprob: -3.944061756134033
    10. '(' → logprob: -4.194061756134033

Token 129: '6' (ID: 21)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8479691743850708
    2. '2' → logprob: -1.0979691743850708
    3. '3' → logprob: -2.7229690551757812
    4. '0' → logprob: -3.0979690551757812
    5. ' ' → logprob: -3.5979690551757812
    6. 's' → logprob: -3.7229690551757812
    7. '4' → logprob: -3.9729690551757812
    8. '5' → logprob: -4.347969055175781
    9. '6' → logprob: -4.722969055175781
    10. '7' → logprob: -5.097969055175781

Token 130: ',' (ID: 11)
  Prédit: '}['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}[' → logprob: -1.1722159385681152
    2. '},' → logprob: -1.6722159385681152
    3. '3' → logprob: -1.9222159385681152
    4. '}.' → logprob: -2.4222159385681152
    5. '[' → logprob: -2.7972159385681152
    6. ',' → logprob: -2.7972159385681152
    7. '}' → logprob: -2.9222159385681152
    8. '}))' → logprob: -3.0472159385681152
    9. '.get' → logprob: -4.797215938568115
    10. '[s' → logprob: -5.672215938568115

Token 131: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.1910514533519745
    2. '2' → logprob: -2.691051483154297
    3. ' ' → logprob: -2.691051483154297
    4. '5' → logprob: -3.316051483154297
    5. '6' → logprob: -8.066051483154297
    6. '7' → logprob: -8.066051483154297
    7. '  ' → logprob: -8.191051483154297
    8. '   ' → logprob: -8.316051483154297
    9. '3' → logprob: -8.816051483154297
    10. '1' → logprob: -8.941051483154297

Token 132: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.931863051955588e-05
    2. ' :' → logprob: -10.750059127807617
    3. '```' → logprob: -12.125059127807617
    4. '3' → logprob: -12.250059127807617
    5. '[' → logprob: -12.375059127807617
    6. '4' → logprob: -12.750059127807617
    7. '6' → logprob: -13.000059127807617
    8. '1' → logprob: -13.125059127807617
    9. '2' → logprob: -13.375059127807617
    10. '})' → logprob: -13.500059127807617

Token 133: '6' (ID: 21)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.16391591727733612
    2. '4' → logprob: -3.0389158725738525
    3. '1' → logprob: -3.2889158725738525
    4. '2' → logprob: -3.4139158725738525
    5. '5' → logprob: -4.163916110992432
    6. '7' → logprob: -5.163916110992432
    7. '9' → logprob: -5.413916110992432
    8. '8' → logprob: -6.038916110992432
    9. '10' → logprob: -6.788916110992432
    10. ' ' → logprob: -6.788916110992432

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017441803589463234
    2. '}))' → logprob: -4.892441749572754
    3. '3' → logprob: -5.892441749572754
    4. '}[' → logprob: -6.267441749572754
    5. '{' → logprob: -7.017441749572754
    6. '}' → logprob: -7.017441749572754
    7. '[' → logprob: -7.142441749572754
    8. '}).' → logprob: -7.642441749572754
    9. '}),' → logprob: -7.767441749572754
    10. '})' → logprob: -7.892441749572754

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1128401905298233
    2. '4' → logprob: -2.612840175628662
    3. '{' → logprob: -4.237840175628662
    4. ' ' → logprob: -4.612840175628662
    5. '3' → logprob: -4.987840175628662
    6. '5' → logprob: -6.862840175628662
    7. '0' → logprob: -7.862840175628662
    8. ' {' → logprob: -7.987840175628662
    9. '7' → logprob: -9.61284065246582
    10. '2' → logprob: -9.73784065246582

Token 136: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00029041420202702284
    2. '2' → logprob: -9.500290870666504
    3. '3' → logprob: -9.625290870666504
    4. '4' → logprob: -10.625290870666504
    5. '1' → logprob: -10.625290870666504
    6. '6' → logprob: -10.875290870666504
    7. '0' → logprob: -11.125290870666504
    8. '```' → logprob: -11.375290870666504
    9. '5' → logprob: -11.875290870666504
    10. ' :' → logprob: -12.125290870666504

Token 137: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.4933469891548157
    2. '1' → logprob: -1.243346929550171
    3. '2' → logprob: -3.243346929550171
    4. '4' → logprob: -3.493346929550171
    5. '0' → logprob: -4.86834716796875
    6. '6' → logprob: -4.99334716796875
    7. '5' → logprob: -5.11834716796875
    8. '9' → logprob: -5.99334716796875
    9. '12' → logprob: -6.24334716796875
    10. '10' → logprob: -6.36834716796875

Token 138: '}[' (ID: 85396)
  Prédit: '}['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}[' → logprob: -0.45143771171569824
    2. '}.' → logprob: -1.2014377117156982
    3. '}' → logprob: -3.2014377117156982
    4. '}))' → logprob: -4.451437950134277
    5. '})' → logprob: -5.451437950134277
    6. '[' → logprob: -5.951437950134277
    7. '},' → logprob: -7.076437950134277
    8. ',' → logprob: -7.201437950134277
    9. '}),' → logprob: -8.326437950134277
    10. '}).' → logprob: -8.326437950134277

Token 139: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4091237187385559
    2. 'len' → logprob: -1.4091236591339111
    3. 'tri' → logprob: -3.034123659133911
    4. 'g' → logprob: -3.659123659133911
    5. 'k' → logprob: -4.65912389755249
    6. 'rd' → logprob: -6.65912389755249
    7. 'sd' → logprob: -6.78412389755249
    8. '(s' → logprob: -7.03412389755249
    9. '3' → logprob: -7.03412389755249
    10. '(len' → logprob: -7.28412389755249

Token 140: ']))' (ID: 20259)
  Prédit: '])))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])))' → logprob: -0.12035427242517471
    2. '))))' → logprob: -3.120354175567627
    3. ']))' → logprob: -3.620354175567627
    4. ')))' → logprob: -3.745354175567627
    5. '),' → logprob: -4.870354175567627
    6. '],' → logprob: -5.120354175567627
    7. ')' → logprob: -6.370354175567627
    8. ']' → logprob: -6.495354175567627
    9. ')]' → logprob: -6.870354175567627
    10. '])' → logprob: -8.120354652404785

Token 141: ')

' (ID: 1029)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.013214122503995895
    2. ')' → logprob: -4.388214111328125
    3. ')))' → logprob: -7.763214111328125
    4. ',' → logprob: -9.388214111328125
    5. '[' → logprob: -9.388214111328125
    6. ' ))' → logprob: -10.888214111328125
    7. ' ' → logprob: -11.263214111328125
    8. '))
' → logprob: -11.263214111328125
    9. '   ' → logprob: -11.638214111328125
    10. '.' → logprob: -11.888214111328125

Token 142: 'k' (ID: 74)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07955662161111832
    2. '<|end|>' → logprob: -3.329556703567505
    3. '(' → logprob: -4.454556465148926
    4. 'def' → logprob: -4.829556465148926
    5. '[' → logprob: -6.204556465148926
    6. '+' → logprob: -6.204556465148926
    7. '(s' → logprob: -6.454556465148926
    8. '
' → logprob: -6.579556465148926
    9. '#' → logprob: -6.829556465148926
    10. ',' → logprob: -6.829556465148926

Token 143: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14085270464420319
    2. '+' → logprob: -3.015852689743042
    3. ' ,' → logprob: -3.265852689743042
    4. ')' → logprob: -4.515852928161621
    5. ' ' → logprob: -4.890852928161621
    6. '<|end|>' → logprob: -5.015852928161621
    7. '=' → logprob: -5.515852928161621
    8. 's' → logprob: -5.515852928161621
    9. ' +' → logprob: -6.140852928161621
    10. ',k' → logprob: -6.640852928161621

Token 144: ' int' (ID: 677)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '6' → logprob: -1.0954113006591797
    2. ' ' → logprob: -1.5954113006591797
    3. '5' → logprob: -1.7204113006591797
    4. '3' → logprob: -2.2204113006591797
    5. '4' → logprob: -2.4704113006591797
    6. '7' → logprob: -2.8454113006591797
    7. '10' → logprob: -3.9704113006591797
    8. '9' → logprob: -5.34541130065918
    9. '8' → logprob: -5.59541130065918
    10. 'int' → logprob: -6.47041130065918

Token 145: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01851745881140232
    2. '(' → logprob: -4.26851749420166
    3. '()' → logprob: -6.39351749420166
    4. 'input' → logprob: -6.51851749420166
    5. '('' → logprob: -6.76851749420166
    6. '("' → logprob: -10.89351749420166
    7. '(k' → logprob: -11.89351749420166
    8. '(
' → logprob: -12.26851749420166
    9. '(raw' → logprob: -12.39351749420166
    10. '=input' → logprob: -12.51851749420166

Token 146: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002527268137782812
    2. '()' → logprob: -6.002527236938477
    3. '())
' → logprob: -10.877527236938477
    4. '("' → logprob: -11.627527236938477
    5. '(' → logprob: -12.002527236938477
    6. '()))' → logprob: -12.502527236938477
    7. '()>' → logprob: -12.627527236938477
    8. '();)' → logprob: -12.752527236938477
    9. '('' → logprob: -13.377527236938477
    10. ')' → logprob: -13.502527236938477

Token 147: 'ans' (ID: 616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11353799700737
    2. 's' → logprob: -3.2385380268096924
    3. 'result' → logprob: -3.2385380268096924
    4. 'res' → logprob: -4.738537788391113
    5. 'for' → logprob: -4.863537788391113
    6. 'total' → logprob: -4.988537788391113
    7. 'ans' → logprob: -6.488537788391113
    8. 'r' → logprob: -6.988537788391113
    9. 'w' → logprob: -7.113537788391113
    10. 'answer' → logprob: -7.738537788391113

Token 148: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931615471839905
    2. ' =' → logprob: -0.6931615471839905
    3. '_' → logprob: -12.193161964416504
    4. 's' → logprob: -12.818161964416504
    5. ')' → logprob: -13.818161964416504
    6. ',' → logprob: -14.068161964416504
    7. ' ' → logprob: -14.068161964416504
    8. '=

' → logprob: -14.193161964416504
    9. ' ' → logprob: -14.568161964416504
    10. ' =
' → logprob: -14.568161964416504

Token 149: ' sum' (ID: 4215)
  Prédit: ' weighted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weighted' → logprob: -0.8441944122314453
    2. '0' → logprob: -1.7191944122314453
    3. 'weighted' → logprob: -1.7191944122314453
    4. ' sum' → logprob: -2.0941944122314453
    5. 'sum' → logprob: -3.7191944122314453
    6. ' ' → logprob: -3.7191944122314453
    7. ' max' → logprob: -3.7191944122314453
    8. 'max' → logprob: -4.969194412231445
    9. 'tri' → logprob: -6.219194412231445
    10. '[' → logprob: -6.594194412231445

Token 150: '(weight' (ID: 121456)
  Prédit: '(weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weight' → logprob: -0.005908415652811527
    2. '(' → logprob: -5.255908489227295
    3. 'weighted' → logprob: -8.630908012390137
    4. '((' → logprob: -9.130908012390137
    5. '(g' → logprob: -9.505908012390137
    6. '(part' → logprob: -9.505908012390137
    7. '(range' → logprob: -9.630908012390137
    8. '(k' → logprob: -9.755908012390137
    9. '(
' → logprob: -10.005908012390137
    10. '(weights' → logprob: -11.130908012390137

Token 151: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.8908587662735954e-05
    2. 'edt' → logprob: -11.500019073486328
    3. 'edd' → logprob: -13.125019073486328
    4. 's' → logprob: -13.625019073486328
    5. 'e' → logprob: -13.625019073486328
    6. 'eded' → logprob: -14.125019073486328
    7. 'ted' → logprob: -14.375019073486328
    8. '_ed' → logprob: -14.750019073486328
    9. 'd' → logprob: -14.875019073486328
    10. 'ED' → logprob: -15.125019073486328

Token 152: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.630610641877865e-06
    2. 'sum' → logprob: -12.000006675720215
    3. '_' → logprob: -15.750006675720215
    4. '_s' → logprob: -17.0000057220459
    5. '(sum' → logprob: -17.1250057220459
    6. '_weight' → logprob: -17.7500057220459
    7. ' _' → logprob: -17.8750057220459
    8. ')' → logprob: -18.2500057220459
    9. '(k' → logprob: -18.2500057220459
    10. 'Sum' → logprob: -18.2500057220459

Token 153: '(k' (ID: 12125)
  Prédit: '(k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.002898189937695861
    2. '(i' → logprob: -6.002898216247559
    3. '(' → logprob: -8.127898216247559
    4. ')' → logprob: -9.877898216247559
    5. ')(' → logprob: -10.127898216247559
    6. '(n' → logprob: -11.002898216247559
    7. ' (' → logprob: -11.752898216247559
    8. '(x' → logprob: -12.752898216247559
    9. '
' → logprob: -13.377898216247559
    10. '(j' → logprob: -13.502898216247559

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005431781522929668
    2. ' ,' → logprob: -6.130431652069092
    3. ',s' → logprob: -6.505431652069092
    4. 's' → logprob: -6.880431652069092
    5. '(s' → logprob: -8.00543212890625
    6. ',i' → logprob: -8.88043212890625
    7. '(i' → logprob: -9.38043212890625
    8. 'i' → logprob: -10.25543212890625
    9. '(' → logprob: -10.38043212890625
    10. '```' → logprob: -11.38043212890625

Token 155: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18001866340637207
    2. 'i' → logprob: -2.180018663406372
    3. 'r' → logprob: -3.430018663406372
    4. '3' → logprob: -4.680018424987793
    5. '2' → logprob: -6.555018424987793
    6. '1' → logprob: -6.680018424987793
    7. ' s' → logprob: -6.805018424987793
    8. 'k' → logprob: -7.055018424987793
    9. 'size' → logprob: -7.055018424987793
    10. 't' → logprob: -7.305018424987793

Token 156: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.88418151892256e-05
    2. 'for' → logprob: -10.250059127807617
    3. ' )' → logprob: -11.375059127807617
    4. ' for' → logprob: -12.000059127807617
    5. '))' → logprob: -13.375059127807617
    6. ',' → logprob: -13.625059127807617
    7. '}' → logprob: -14.000059127807617
    8. '+' → logprob: -14.375059127807617
    9. '```' → logprob: -14.625059127807617
    10. ')
' → logprob: -15.375059127807617

Token 157: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2520771324634552
    2. 'for' → logprob: -1.5020771026611328
    3. ')' → logprob: -9.002077102661133
    4. ',' → logprob: -11.502077102661133
    5. ' ' → logprob: -11.877077102661133
    6. 's' → logprob: -13.377077102661133
    7. ' s' → logprob: -13.502077102661133
    8. '   ' → logprob: -13.877077102661133
    9. '	for' → logprob: -14.002077102661133
    10. '+' → logprob: -14.252077102661133

Token 158: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7008844614028931
    2. ' range' → logprob: -1.575884461402893
    3. 'range' → logprob: -1.700884461402893
    4. ' s' → logprob: -2.2008843421936035
    5. '[' → logprob: -5.7008843421936035
    6. ' [' → logprob: -8.075884819030762
    7. ' ' → logprob: -9.700884819030762
    8. '(' → logprob: -10.700884819030762
    9. ' ' → logprob: -11.075884819030762
    10. '[s' → logprob: -11.325884819030762

Token 159: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029902052134275436
    2. 'in' → logprob: -3.5299019813537598
    3. 'range' → logprob: -8.904902458190918
    4. ' range' → logprob: -12.404902458190918
    5. '(range' → logprob: -12.404902458190918
    6. 's' → logprob: -13.029902458190918
    7. ' ' → logprob: -13.404902458190918
    8. ')' → logprob: -13.404902458190918
    9. '(' → logprob: -13.779902458190918
    10. '	in' → logprob: -15.279902458190918

Token 160: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.025736626237630844
    2. ' range' → logprob: -4.1507368087768555
    3. '[' → logprob: -4.6507368087768555
    4. '(' → logprob: -9.650736808776855
    5. '{' → logprob: -10.650736808776855
    6. ' [' → logprob: -11.900736808776855
    7. '(range' → logprob: -12.525736808776855
    8. 'tri' → logprob: -14.525736808776855
    9. ' ' → logprob: -14.900736808776855
    10. '1' → logprob: -14.900736808776855

Token 161: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023447072133421898
    2. '3' → logprob: -3.773447036743164
    3. ' ' → logprob: -9.023447036743164
    4. '2' → logprob: -9.648447036743164
    5. 'k' → logprob: -12.398447036743164
    6. '   ' → logprob: -12.773447036743164
    7. '4' → logprob: -12.773447036743164
    8. '0' → logprob: -12.773447036743164
    9. '
' → logprob: -13.898447036743164
    10. '  ' → logprob: -14.648447036743164

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027206414961256087
    2. ' ,' → logprob: -8.625271797180176
    3. '])' → logprob: -9.375271797180176
    4. ',
' → logprob: -12.375271797180176
    5. '1' → logprob: -13.375271797180176
    6. ']' → logprob: -14.750271797180176
    7. ' ' → logprob: -15.500271797180176
    8. ')' → logprob: -15.500271797180176
    9. ')])' → logprob: -15.500271797180176
    10. ' ])' → logprob: -15.625271797180176

Token 163: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.012525185011327267
    2. ' ' → logprob: -4.3875250816345215
    3. '1' → logprob: -11.13752555847168
    4. '  ' → logprob: -14.63752555847168
    5. '   ' → logprob: -15.63752555847168
    6. ' ' → logprob: -16.45002555847168
    7. '
' → logprob: -17.26252555847168
    8. '	' → logprob: -17.88752555847168
    9. '0' → logprob: -18.20002555847168
    10. ',' → logprob: -18.38752555847168

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009089602972380817
    2. ' ,' → logprob: -7.750908851623535
    3. '1' → logprob: -8.125908851623535
    4. '])' → logprob: -8.625908851623535
    5. ' ])' → logprob: -14.250908851623535
    6. ']' → logprob: -14.500908851623535
    7. ',
' → logprob: -14.625908851623535
    8. ']))' → logprob: -15.000908851623535
    9. ' ' → logprob: -15.375908851623535
    10. '3' → logprob: -16.00090980529785

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.506661833962426e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -16.625085830688477
    4. '  ' → logprob: -17.000085830688477
    5. '
' → logprob: -17.250085830688477
    6. ']' → logprob: -17.750085830688477
    7. '```' → logprob: -18.000085830688477
    8. ',' → logprob: -18.250085830688477
    9. '<|end|>' → logprob: -18.750085830688477
    10. '])' → logprob: -19.250085830688477

Token 166: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -7.946405094116926e-05
    2. ']))' → logprob: -10.250079154968262
    3. ')])' → logprob: -11.375079154968262
    4. '])
' → logprob: -11.500079154968262
    5. ']' → logprob: -12.000079154968262
    6. ',' → logprob: -12.250079154968262
    7. ' ])' → logprob: -12.500079154968262
    8. ')' → logprob: -12.750079154968262
    9. '))' → logprob: -14.000079154968262
    10. ']])' → logprob: -14.125079154968262

Token 167: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014535309746861458
    2. '<|end|>' → logprob: -4.514535427093506
    3. '
' → logprob: -6.514535427093506
    4. '#' → logprob: -7.514535427093506
    5. ':' → logprob: -8.014534950256348
    6. '```' → logprob: -8.139534950256348
    7. '+' → logprob: -8.514534950256348
    8. '(' → logprob: -8.764534950256348
    9. '()' → logprob: -9.389534950256348
    10. '\n' → logprob: -9.764534950256348

Token 168: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.719917630311102e-05
    2. '(' → logprob: -9.500077247619629
    3. ' (' → logprob: -13.750077247619629
    4. '(f' → logprob: -15.000077247619629
    5. '(abs' → logprob: -15.250077247619629
    6. '(answer' → logprob: -15.500077247619629
    7. 'ans' → logprob: -15.500077247619629
    8. '((' → logprob: -16.375076293945312
    9. '(len' → logprob: -16.500076293945312
    10. '()' → logprob: -17.000076293945312

Token 169: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. '))' → logprob: -12.375007629394531
    3. ' )' → logprob: -14.125007629394531
    4. '+' → logprob: -14.250007629394531
    5. ')`' → logprob: -14.750007629394531
    6. '`)' → logprob: -15.250007629394531
    7. ')
' → logprob: -15.375007629394531
    8. '+)' → logprob: -15.625007629394531
    9. '')' → logprob: -15.625007629394531
    10. '())' → logprob: -16.87500762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 167
Tokens correctement prédits (1ère position, stricte): 72
Tokens correctement prédits (1ère position, avec adaptation): 72
Tokens correctement prédits (top 10): 124
Précision stricte (1ère position): 43.11%
Précision adaptée (1ère position): 43.11%
Précision (top 10): 74.25%
================================================================================
