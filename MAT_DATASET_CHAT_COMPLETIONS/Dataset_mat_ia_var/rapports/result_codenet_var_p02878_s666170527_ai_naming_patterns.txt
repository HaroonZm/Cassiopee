================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_n, input_a, input_b = map(int, input().split())
modulo = 998244353
seq_len = input_n + 1
factorial_acc = 1
factorial_list = [1] * seq_len
inverse_list = [1] * seq_len
result_sum = 0
range_seq = range

for cur_index in range_seq(1, seq_len):
    factorial_list[cur_index] = factorial_acc = factorial_acc * cur_index % modulo

inverse_list[input_n] = inverse_acc = pow(factorial_acc, modulo - 2, modulo)
for cur_index in range_seq(input_n, 1, -1):
    inverse_list[cur_index - 1] = inverse_acc = inverse_acc * cur_index % modulo

if input_n - input_b - input_a:
    loop_range = min(input_a + 1, input_n - input_b)
else:
    loop_range = input_a + 1

for cur_k in range_seq(loop_range):
    param_q = input_n - input_b - cur_k - 1
    add_term = (input_b - cur_k) \
        * factorial_list[input_b + cur_k - 1] \
        * inverse_list[input_b] \
        * inverse_list[cur_k] \
        * factorial_list[param_q + input_a - cur_k] \
        * inverse_list[param_q] \
        * inverse_list[input_a - cur_k]
    result_sum = (result_sum + add_term) % modulo

print(result_sum if input_b else 1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_n' (ID: 2170)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27686697244644165
    2. '_' → logprob: -2.401866912841797
    3. 'output' → logprob: -2.526866912841797
    4. 'input' → logprob: -3.901866912841797
    5. ')' → logprob: -4.151866912841797
    6. ',' → logprob: -5.276866912841797
    7. ' ' → logprob: -5.401866912841797
    8. '_output' → logprob: -5.526866912841797
    9. '```' → logprob: -5.651866912841797
    10. ' =' → logprob: -5.776866912841797

Token 4: '_a' (ID: 10852)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5660549402236938
    2. '_' → logprob: -1.5660549402236938
    3. ' =' → logprob: -2.3160548210144043
    4. '.' → logprob: -2.6910548210144043
    5. ',' → logprob: -3.8160548210144043
    6. '[' → logprob: -3.9410548210144043
    7. ')' → logprob: -4.941054821014404
    8. '```' → logprob: -5.691054821014404
    9. ':' → logprob: -6.441054821014404
    10. '(' → logprob: -6.441054821014404

Token 5: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4621449410915375
    2. ',' → logprob: -1.8371449708938599
    3. ' =' → logprob: -2.4621448516845703
    4. '_' → logprob: -2.7121448516845703
    5. '.' → logprob: -3.3371448516845703
    6. '[' → logprob: -4.08714485168457
    7. ':' → logprob: -6.33714485168457
    8. ')' → logprob: -6.46214485168457
    9. '+' → logprob: -6.83714485168457
    10. '```' → logprob: -6.83714485168457

Token 6: ' input' (ID: 3422)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23922693729400635
    2. '=' → logprob: -1.6142269372940063
    3. '_' → logprob: -4.989226818084717
    4. '.' → logprob: -6.364226818084717
    5. 'input' → logprob: -6.614226818084717
    6. ' =' → logprob: -6.739226818084717
    7. '+' → logprob: -7.739226818084717
    8. '*' → logprob: -7.864226818084717
    9. '```' → logprob: -8.239227294921875
    10. ':' → logprob: -8.364227294921875

Token 7: '_b' (ID: 1535)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0958832502365112
    2. '.' → logprob: -1.3458832502365112
    3. '_' → logprob: -1.4708832502365112
    4. '[' → logprob: -2.345883369445801
    5. ')' → logprob: -3.720883369445801
    6. '(' → logprob: -4.095883369445801
    7. ' =' → logprob: -4.095883369445801
    8. ',' → logprob: -4.220883369445801
    9. ':' → logprob: -5.845883369445801
    10. '```' → logprob: -6.720883369445801

Token 8: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5767534375190735
    2. '_' → logprob: -1.4517533779144287
    3. '.' → logprob: -2.4517533779144287
    4. ',' → logprob: -2.8267533779144287
    5. ' =' → logprob: -3.7017533779144287
    6. ')' → logprob: -4.326753616333008
    7. '```' → logprob: -4.701753616333008
    8. '[' → logprob: -5.076753616333008
    9. '(' → logprob: -6.826753616333008
    10. ':' → logprob: -7.076753616333008

Token 9: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.35255494713783264
    2. ' input' → logprob: -1.8525549173355103
    3. 'map' → logprob: -2.3525550365448
    4. ' map' → logprob: -3.1025550365448
    5. 'int' → logprob: -10.102555274963379
    6. 'list' → logprob: -10.227555274963379
    7. ' ' → logprob: -10.352555274963379
    8. '0' → logprob: -10.852555274963379
    9. ' list' → logprob: -10.977555274963379
    10. '[input' → logprob: -10.977555274963379

Token 10: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4969367980957031
    2. '<|end|>' → logprob: -1.2469367980957031
    3. '(lambda' → logprob: -2.496936798095703
    4. '<|end|>' → logprob: -5.121936798095703
    5. '```' → logprob: -5.496936798095703
    6. '(int' → logprob: -6.121936798095703
    7. '(token' → logprob: -6.496936798095703
    8. ')' → logprob: -7.496936798095703
    9. '(str' → logprob: -7.621936798095703
    10. '(input' → logprob: -7.621936798095703

Token 11: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7301582098007202
    2. '(input' → logprob: -0.7301582098007202
    3. 'input' → logprob: -3.9801583290100098
    4. '<|end|>' → logprob: -4.48015832901001
    5. '```' → logprob: -6.48015832901001
    6. '(' → logprob: -6.73015832901001
    7. ' input' → logprob: -7.10515832901001
    8. ')(' → logprob: -7.23015832901001
    9. ',input' → logprob: -8.105157852172852
    10. '[input' → logprob: -8.105157852172852

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07893286645412445
    2. ' input' → logprob: -2.578932762145996
    3. ')' → logprob: -10.328932762145996
    4. '(input' → logprob: -11.578932762145996
    5. ',input' → logprob: -14.703932762145996
    6. '<input' → logprob: -15.578932762145996
    7. '=input' → logprob: -16.078933715820312
    8. ' ' → logprob: -16.078933715820312
    9. '	input' → logprob: -16.453933715820312
    10. '[input' → logprob: -16.703933715820312

Token 13: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.24879221618175507
    2. ')' → logprob: -2.2487921714782715
    3. '()' → logprob: -2.4987921714782715
    4. '(' → logprob: -4.6237921714782715
    5. '```' → logprob: -4.9987921714782715
    6. '().' → logprob: -5.6237921714782715
    7. '`)' → logprob: -5.9987921714782715
    8. '`()' → logprob: -6.6237921714782715
    9. '(()' → logprob: -6.8737921714782715
    10. '(""))' → logprob: -7.1237921714782715

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00018685187387745827
    2. 'strip' → logprob: -8.625186920166016
    3. 'rstrip' → logprob: -12.375186920166016
    4. ' split' → logprob: -13.500186920166016
    5. 'spl' → logprob: -13.500186920166016
    6. '(split' → logprob: -15.500186920166016
    7. ')' → logprob: -17.125186920166016
    8. 's' → logprob: -17.125186920166016
    9. 'startswith' → logprob: -17.500186920166016
    10. '```' → logprob: -17.500186920166016

Token 15: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.469534307718277
    2. ')' → logprob: -1.0945342779159546
    3. '(' → logprob: -3.969534397125244
    4. '('' → logprob: -4.219534397125244
    5. '()' → logprob: -5.844534397125244
    6. '))' → logprob: -6.094534397125244
    7. '()))' → logprob: -7.719534397125244
    8. '`)' → logprob: -8.469533920288086
    9. '(
' → logprob: -9.094533920288086
    10. '(""))' → logprob: -9.344533920288086

Token 16: 'mod' (ID: 4847)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.1337653398513794
    2. 'if' → logprob: -1.1337653398513794
    3. '+
' → logprob: -2.38376522064209
    4. '#' → logprob: -2.88376522064209
    5. '\n' → logprob: -3.13376522064209
    6. '*' → logprob: -3.50876522064209
    7. ',' → logprob: -3.63376522064209
    8. '```' → logprob: -3.88376522064209
    9. '
' → logprob: -4.13376522064209
    10. 'x' → logprob: -4.63376522064209

Token 17: 'ulo' (ID: 5953)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.04568176344037056
    2. '=' → logprob: -3.7956817150115967
    3. ' =' → logprob: -4.795681953430176
    4. ')' → logprob: -5.045681953430176
    5. '_space' → logprob: -6.295681953430176
    6. ',' → logprob: -6.545681953430176
    7. ' _' → logprob: -7.045681953430176
    8. ' )' → logprob: -7.545681953430176
    9. '(' → logprob: -7.670681953430176
    10. ' ' → logprob: -7.795681953430176

Token 18: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09908685833215714
    2. '(' → logprob: -3.0990867614746094
    3. '=' → logprob: -3.3490867614746094
    4. ' =' → logprob: -4.974086761474609
    5. ')' → logprob: -5.974086761474609
    6. ' ' → logprob: -6.099086761474609
    7. ',' → logprob: -6.849086761474609
    8. ' (' → logprob: -8.59908676147461
    9. '_space' → logprob: -8.84908676147461
    10. '_mod' → logprob: -8.97408676147461

Token 19: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5808806419372559
    2. '10' → logprob: -0.8308806419372559
    3. '100' → logprob: -5.330880641937256
    4. '1' → logprob: -9.455881118774414
    5. '998' → logprob: -11.580881118774414
    6. 'int' → logprob: -15.080881118774414
    7. ' ' → logprob: -15.080881118774414
    8. ' (' → logprob: -15.205881118774414
    9. '(' → logprob: -15.455881118774414
    10. '0' → logprob: -15.955881118774414

Token 20: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.16076436638832092
    2. '100' → logprob: -1.9107643365859985
    3. '998' → logprob: -8.035764694213867
    4. '1' → logprob: -8.535764694213867
    5. ' ' → logprob: -11.410764694213867
    6. '(' → logprob: -12.285764694213867
    7. 'int' → logprob: -13.535764694213867
    8. '2' → logprob: -13.785764694213867
    9. 'pow' → logprob: -14.035764694213867
    10. '101' → logprob: -15.660764694213867

Token 21: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -0.0001450187264708802
    2. '247' → logprob: -9.000144958496094
    3. '```' → logprob: -12.000144958496094
    4. '243' → logprob: -12.125144958496094
    5. '447' → logprob: -13.250144958496094
    6. '245' → logprob: -13.500144958496094
    7. '_' → logprob: -14.250144958496094
    8. '457' → logprob: -14.250144958496094
    9. '259' → logprob: -14.375144958496094
    10. '242' → logprob: -14.625144958496094

Token 22: '353' (ID: 32996)
  Prédit: '257'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '257' → logprob: -0.057709623128175735
    2. '853' → logprob: -3.3077096939086914
    3. '857' → logprob: -4.557709693908691
    4. '353' → logprob: -6.182709693908691
    5. '253' → logprob: -6.307709693908691
    6. '247' → logprob: -6.932709693908691
    7. '259' → logprob: -6.932709693908691
    8. '258' → logprob: -7.432709693908691
    9. '457' → logprob: -7.682709693908691
    10. '273' → logprob: -7.932709693908691

Token 23: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8499044179916382
    2. '\' → logprob: -1.5999044179916382
    3. '\n' → logprob: -2.2249045372009277
    4. '' → logprob: -3.0999045372009277
    5. ' ' → logprob: -3.3499045372009277
    6. 'n' → logprob: -3.3499045372009277
    7. ',' → logprob: -3.5999045372009277
    8. '*' → logprob: -3.8499045372009277
    9. '#' → logprob: -3.9749045372009277
    10. ' 
' → logprob: -4.224904537200928

Token 24: 'seq' (ID: 27794)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.147376149892807
    2. 'dp' → logprob: -2.89737606048584
    3. '
' → logprob: -3.02237606048584
    4. '```' → logprob: -5.52237606048584
    5. 'res' → logprob: -5.64737606048584
    6. 'def' → logprob: -5.64737606048584
    7. 'a' → logprob: -5.64737606048584
    8. 'factor' → logprob: -6.14737606048584
    9. 'max' → logprob: -6.27237606048584
    10. 'pow' → logprob: -6.39737606048584

Token 25: '_len' (ID: 13683)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5026043057441711
    2. '[' → logprob: -1.2526042461395264
    3. 'u' → logprob: -2.8776042461395264
    4. '_len' → logprob: -3.5026042461395264
    5. '[u' → logprob: -5.5026044845581055
    6. ' =' → logprob: -5.7526044845581055
    7. '[]' → logprob: -6.3776044845581055
    8. '=' → logprob: -6.3776044845581055
    9. '_length' → logprob: -6.5026044845581055
    10. 'ence' → logprob: -6.7526044845581055

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4803382158279419
    2. '=' → logprob: -0.9803382158279419
    3. '_' → logprob: -5.355338096618652
    4. ' ' → logprob: -6.980338096618652
    5. 't' → logprob: -8.105338096618652
    6. ',' → logprob: -9.230338096618652
    7. 'th' → logprob: -10.230338096618652
    8. ')' → logprob: -10.605338096618652
    9. '_t' → logprob: -10.605338096618652
    10. '  ' → logprob: -10.855338096618652

Token 27: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.14352263510227203
    2. 'input' → logprob: -2.0185227394104004
    3. ' n' → logprob: -8.018522262573242
    4. 'n' → logprob: -8.143522262573242
    5. ' ' → logprob: -9.518522262573242
    6. '1' → logprob: -10.143522262573242
    7. '0' → logprob: -10.518522262573242
    8. '10' → logprob: -11.143522262573242
    9. '[input' → logprob: -11.518522262573242
    10. '(input' → logprob: -11.643522262573242

Token 28: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.003610163228586316
    2. '_' → logprob: -5.628610134124756
    3. '_a' → logprob: -12.253610610961914
    4. '_len' → logprob: -12.878610610961914
    5. ' _' → logprob: -14.253610610961914
    6. '```' → logprob: -15.378610610961914
    7. '_length' → logprob: -15.503610610961914
    8. '_)' → logprob: -15.503610610961914
    9. '_
' → logprob: -15.628610610961914
    10. '_s' → logprob: -16.003610610961914

Token 29: ' +' (ID: 659)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9004958868026733
    2. ')' → logprob: -2.400496006011963
    3. '+' → logprob: -2.525496006011963
    4. ' ' → logprob: -2.525496006011963
    5. '#' → logprob: -2.650496006011963
    6. ',' → logprob: -2.900496006011963
    7. '**' → logprob: -2.900496006011963
    8. '*' → logprob: -3.275496006011963
    9. '[' → logprob: -4.025496006011963
    10. '
' → logprob: -4.150496006011963

Token 30: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4989204406738281
    2. ' ' → logprob: -1.4989204406738281
    3. ' input' → logprob: -2.248920440673828
    4. 'input' → logprob: -2.873920440673828
    5. '2' → logprob: -5.498920440673828
    6. '3' → logprob: -6.998920440673828
    7. '0' → logprob: -7.748920440673828
    8. '4' → logprob: -7.873920440673828
    9. '10' → logprob: -7.998920440673828
    10. '5' → logprob: -8.623920440673828

Token 31: '1' (ID: 16)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.18893112242221832
    2. '1' → logprob: -1.8139311075210571
    3. '2' → logprob: -4.938930988311768
    4. '3' → logprob: -7.188930988311768
    5. ' input' → logprob: -7.813930988311768
    6. ' ' → logprob: -8.188931465148926
    7. '4' → logprob: -8.688931465148926
    8. '5' → logprob: -9.938931465148926
    9. '10' → logprob: -10.188931465148926
    10. '(input' → logprob: -10.313931465148926

Token 32: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012036044150590897
    2. '\n' → logprob: -5.387035846710205
    3. '
' → logprob: -6.512035846710205
    4. '<|end|>' → logprob: -7.012035846710205
    5. 'result' → logprob: -7.137035846710205
    6. ' 
' → logprob: -7.262035846710205
    7. '*' → logprob: -7.512035846710205
    8. ')' → logprob: -7.637035846710205
    9. 'a' → logprob: -7.762035846710205
    10. '' → logprob: -8.262036323547363

Token 33: 'factor' (ID: 73174)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33135274052619934
    2. 'result' → logprob: -2.206352710723877
    3. '\n' → logprob: -2.456352710723877
    4. '\' → logprob: -3.456352710723877
    5. 'dp' → logprob: -4.081352710723877
    6. '
' → logprob: -4.831352710723877
    7. 'a' → logprob: -5.581352710723877
    8. '```' → logprob: -5.706352710723877
    9. 'res' → logprob: -6.081352710723877
    10. '

' → logprob: -6.206352710723877

Token 34: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.019284944981336594
    2. 'ials' → logprob: -4.269284725189209
    3. 'al' → logprob: -6.269284725189209
    4. '_' → logprob: -6.894284725189209
    5. 'ialize' → logprob: -6.894284725189209
    6. 's' → logprob: -7.269284725189209
    7. '_factor' → logprob: -8.144285202026367
    8. ' ial' → logprob: -9.769285202026367
    9. ' =' → logprob: -10.269285202026367
    10. '=' → logprob: -11.019285202026367

Token 35: '_acc' (ID: 35551)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1511729955673218
    2. 's' → logprob: -1.1511729955673218
    3. '_' → logprob: -1.1511729955673218
    4. '=' → logprob: -3.6511731147766113
    5. ' =' → logprob: -4.651173114776611
    6. '(' → logprob: -5.026173114776611
    7. '_factor' → logprob: -5.526173114776611
    8. '_s' → logprob: -5.901173114776611
    9. ' ' → logprob: -7.526173114776611
    10. '```' → logprob: -7.776173114776611

Token 36: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.19977502524852753
    2. 'umulator' → logprob: -2.824774980545044
    3. ' =' → logprob: -2.949774980545044
    4. 'umulate' → logprob: -3.074774980545044
    5. '=' → logprob: -4.949775218963623
    6. 'umul' → logprob: -5.199775218963623
    7. 'ul' → logprob: -5.449775218963623
    8. '_' → logprob: -6.949775218963623
    9. 'm' → logprob: -7.074775218963623
    10. 's' → logprob: -7.074775218963623

Token 37: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02325153350830078
    2. ' [' → logprob: -3.773251533508301
    3. '1' → logprob: -12.6482515335083
    4. ' ' → logprob: -13.6482515335083
    5. '[int' → logprob: -14.1482515335083
    6. '[n' → logprob: -15.8982515335083
    7. '(' → logprob: -16.023250579833984
    8. '[len' → logprob: -16.148250579833984
    9. '{' → logprob: -16.273250579833984
    10. '[token' → logprob: -16.898250579833984

Token 38: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.967624019831419e-05
    2. '1' → logprob: -9.875060081481934
    3. ' [' → logprob: -12.375060081481934
    4. '[int' → logprob: -13.000060081481934
    5. '[n' → logprob: -14.625060081481934
    6. '{' → logprob: -14.875060081481934
    7. '[len' → logprob: -15.500060081481934
    8. '[i' → logprob: -15.625060081481934
    9. '[a' → logprob: -16.250059127807617
    10. '[input' → logprob: -16.375059127807617

Token 39: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.16368062794208527
    2. '\' → logprob: -3.4136805534362793
    3. '\n' → logprob: -3.7886805534362793
    4. '<|end|>' → logprob: -4.038680553436279
    5. '#' → logprob: -4.163680553436279
    6. ',' → logprob: -4.538680553436279
    7. '```' → logprob: -5.038680553436279
    8. '.' → logprob: -5.038680553436279
    9. 'newline' → logprob: -5.038680553436279
    10. 'for' → logprob: -5.163680553436279

Token 40: 'factor' (ID: 73174)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8010232448577881
    2. 'for' → logprob: -0.9260232448577881
    3. ' for' → logprob: -2.926023244857788
    4. '\n' → logprob: -3.426023244857788
    5. 'factor' → logprob: -4.301023483276367
    6. '' → logprob: -4.801023483276367
    7. '<|end|>' → logprob: -4.801023483276367
    8. '\' → logprob: -5.051023483276367
    9. '*' → logprob: -5.301023483276367
    10. '```' → logprob: -5.676023483276367

Token 41: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.07722755521535873
    2. 'al' → logprob: -3.2022275924682617
    3. '_' → logprob: -4.202227592468262
    4. 's' → logprob: -4.452227592468262
    5. 'ialize' → logprob: -6.077227592468262
    6. '_acc' → logprob: -7.577227592468262
    7. '_al' → logprob: -7.702227592468262
    8. '_counter' → logprob: -7.702227592468262
    9. '_count' → logprob: -8.077227592468262
    10. 'ials' → logprob: -8.577227592468262

Token 42: '_list' (ID: 4162)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.4572348892688751
    2. 's' → logprob: -1.0822348594665527
    3. '_acc' → logprob: -4.207234859466553
    4. '_' → logprob: -4.332234859466553
    5. ' s' → logprob: -10.707235336303711
    6. '```' → logprob: -11.457235336303711
    7. '_arr' → logprob: -12.082235336303711
    8. '_list' → logprob: -12.207235336303711
    9. '_ans' → logprob: -12.332235336303711
    10. ' ' → logprob: -12.457235336303711

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25237730145454407
    2. '=' → logprob: -1.5023772716522217
    3. '[' → logprob: -8.1273775100708
    4. '=[]' → logprob: -9.3773775100708
    5. 's' → logprob: -11.0023775100708
    6. '[]' → logprob: -11.1273775100708
    7. '.append' → logprob: -11.6273775100708
    8. '_' → logprob: -12.1273775100708
    9. '=[' → logprob: -12.1273775100708
    10. ',' → logprob: -12.2523775100708

Token 44: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6936111450195312
    2. ' [' → logprob: -0.6936111450195312
    3. '[]' → logprob: -8.193611145019531
    4. ' []' → logprob: -8.693611145019531
    5. '[int' → logprob: -12.318611145019531
    6. ' ' → logprob: -12.568611145019531
    7. '[n' → logprob: -13.193611145019531
    8. '[num' → logprob: -13.693611145019531
    9. '[len' → logprob: -14.193611145019531
    10. '[start' → logprob: -14.318611145019531

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00024965754710137844
    2. 'factor' → logprob: -8.750249862670898
    3. '0' → logprob: -9.625249862670898
    4. ']' → logprob: -11.250249862670898
    5. ' ' → logprob: -11.750249862670898
    6. ')' → logprob: -13.375249862670898
    7. '[' → logprob: -14.000249862670898
    8. 'fact' → logprob: -14.375249862670898
    9. ' factorial' → logprob: -15.625249862670898
    10. '```' → logprob: -15.875249862670898

Token 46: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011292786337435246
    2. ',' → logprob: -4.511292934417725
    3. ' ]' → logprob: -8.386292457580566
    4. '<|end|>' → logprob: -12.636292457580566
    5. ')' → logprob: -12.886292457580566
    6. '<|end|>' → logprob: -13.261292457580566
    7. ' for' → logprob: -13.386292457580566
    8. ']
' → logprob: -13.511292457580566
    9. ']

' → logprob: -13.636292457580566
    10. ' ' → logprob: -13.886292457580566

Token 47: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5126800537109375
    2. 'for' → logprob: -1.3876800537109375
    3. '<|end|>' → logprob: -3.2626800537109375
    4. ' for' → logprob: -3.5126800537109375
    5. '\n' → logprob: -3.6376800537109375
    6. ',' → logprob: -3.7626800537109375
    7. '[' → logprob: -4.6376800537109375
    8. '```' → logprob: -5.2626800537109375
    9. ')' → logprob: -5.7626800537109375
    10. '*' → logprob: -6.0126800537109375

Token 48: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.5775465965270996
    2. '(seq' → logprob: -0.8275465965270996
    3. '(' → logprob: -7.4525465965271
    4. ' seq' → logprob: -7.4525465965271
    5. '100' → logprob: -9.202547073364258
    6. ' (' → logprob: -9.827547073364258
    7. '31' → logprob: -10.077547073364258
    8. '30' → logprob: -10.827547073364258
    9. '10' → logprob: -11.327547073364258
    10. ' ' → logprob: -11.327547073364258

Token 49: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.00012976066500414163
    2. '_' → logprob: -9.625129699707031
    3. '_l' → logprob: -9.750129699707031
    4. '_le' → logprob: -13.000129699707031
    5. ' _' → logprob: -14.250129699707031
    6. '__' → logprob: -14.375129699707031
    7. 'len' → logprob: -15.125129699707031
    8. '_e' → logprob: -15.500129699707031
    9. '_val' → logprob: -15.625129699707031
    10. '_ent' → logprob: -15.750129699707031

Token 50: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34850624203681946
    2. 'for' → logprob: -1.348506212234497
    3. ' for' → logprob: -3.723506212234497
    4. '
' → logprob: -5.598506450653076
    5. '\n' → logprob: -6.098506450653076
    6. '[' → logprob: -6.348506450653076
    7. ' 
' → logprob: -7.223506450653076
    8. '```' → logprob: -7.473506450653076
    9. '' → logprob: -8.098505973815918
    10. '

' → logprob: -8.348505973815918

Token 51: 'inverse' (ID: 153422)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5214324593544006
    2. 'for' → logprob: -1.1464323997497559
    3. ' for' → logprob: -2.521432399749756
    4. '\n' → logprob: -5.896432399749756
    5. '```' → logprob: -6.146432399749756
    6. '<|end|>' → logprob: -6.146432399749756
    7. '
' → logprob: -7.271432399749756
    8. ' 
' → logprob: -8.896432876586914
    9. '' → logprob: -9.396432876586914
    10. '

' → logprob: -9.646432876586914

Token 52: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.5205579996109009
    2. '_acc' → logprob: -1.3955579996109009
    3. '_factor' → logprob: -2.0205578804016113
    4. 's' → logprob: -4.395557880401611
    5. '_' → logprob: -4.895557880401611
    6. '_f' → logprob: -6.020557880401611
    7. '_fact' → logprob: -6.270557880401611
    8. '_lst' → logprob: -8.02055835723877
    9. '_s' → logprob: -8.64555835723877
    10. '_n' → logprob: -8.77055835723877

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975662797689438
    2. '=' → logprob: -3.529756546020508
    3. '[' → logprob: -12.779756546020508
    4. ',' → logprob: -13.529756546020508
    5. ' ' → logprob: -14.404756546020508
    6. ' =[' → logprob: -14.779756546020508
    7. '_' → logprob: -15.154756546020508
    8. '=[]' → logprob: -15.904756546020508
    9. '  ' → logprob: -16.029756546020508
    10. 's' → logprob: -16.154756546020508

Token 54: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026301810517907143
    2. ' [' → logprob: -3.651301860809326
    3. '[-' → logprob: -14.276301383972168
    4. ' ' → logprob: -15.026301383972168
    5. '1' → logprob: -15.651301383972168
    6. '   ' → logprob: -16.276302337646484
    7. '[]' → logprob: -16.776302337646484
    8. '[len' → logprob: -16.776302337646484
    9. '[n' → logprob: -18.151302337646484
    10. '  ' → logprob: -18.151302337646484

Token 55: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014490410685539246
    2. '0' → logprob: -6.626449108123779
    3. '-' → logprob: -10.251448631286621
    4. 'None' → logprob: -10.751448631286621
    5. ' ' → logprob: -10.751448631286621
    6. ']' → logprob: -11.126448631286621
    7. 'seq' → logprob: -11.376448631286621
    8. '[' → logprob: -11.501448631286621
    9. 'factor' → logprob: -12.751448631286621
    10. '(' → logprob: -14.126448631286621

Token 56: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.012810870073735714
    2. ' ]' → logprob: -4.387810707092285
    3. ')' → logprob: -8.762810707092285
    4. ',' → logprob: -9.012810707092285
    5. ')]' → logprob: -12.012810707092285
    6. '<|end|>' → logprob: -12.137810707092285
    7. ' for' → logprob: -13.262810707092285
    8. ']*' → logprob: -13.637810707092285
    9. '<|end|>' → logprob: -13.762810707092285
    10. ' )' → logprob: -13.762810707092285

Token 57: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2868974208831787
    2. ' ' → logprob: -2.6618974208831787
    3. '<|end|>' → logprob: -2.7868974208831787
    4. '[' → logprob: -3.4118974208831787
    5. '0' → logprob: -3.4118974208831787
    6. ' ,' → logprob: -3.9118974208831787
    7. '```' → logprob: -5.036897659301758
    8. ')' → logprob: -5.161897659301758
    9. ',
' → logprob: -5.786897659301758
    10. '<|end|>' → logprob: -6.036897659301758

Token 58: ' seq' (ID: 26775)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.0028194934129714966
    2. ' seq' → logprob: -5.877819538116455
    3. '(seq' → logprob: -11.252819061279297
    4. ' ' → logprob: -14.627819061279297
    5. '   ' → logprob: -14.877819061279297
    6. 'input' → logprob: -14.877819061279297
    7. '(' → logprob: -16.252819061279297
    8. 'sq' → logprob: -16.627819061279297
    9. 'sequ' → logprob: -16.752819061279297
    10. '  ' → logprob: -16.877819061279297

Token 59: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.0010350722586736083
    2. 'len' → logprob: -6.876035213470459
    3. '_LEN' → logprob: -14.8760347366333
    4. 'Len' → logprob: -14.8760347366333
    5. '[len' → logprob: -15.0010347366333
    6. 'n' → logprob: -15.2510347366333
    7. '<len' → logprob: -15.8760347366333
    8. '```' → logprob: -15.8760347366333
    9. '_' → logprob: -16.001035690307617
    10. '	len' → logprob: -16.126035690307617

Token 60: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: 'result' (ID: 2521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07112732529640198
    2. ' for' → logprob: -2.946127414703369
    3. 'factor' → logprob: -4.571127414703369
    4. '<|end|>' → logprob: -5.571127414703369
    5. '```' → logprob: -6.946127414703369
    6. '
' → logprob: -8.196126937866211
    7. '_factor' → logprob: -8.321126937866211
    8. ')' → logprob: -8.946126937866211
    9. ' factor' → logprob: -9.946126937866211
    10. 'i' → logprob: -10.196126937866211

Token 62: '_sum' (ID: 29859)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04444822296500206
    2. '=' → logprob: -3.169448137283325
    3. '_' → logprob: -6.669448375701904
    4. ' ' → logprob: -8.794447898864746
    5. 's' → logprob: -11.544447898864746
    6. '_=' → logprob: -11.669447898864746
    7. ' _' → logprob: -13.044447898864746
    8. '_space' → logprob: -13.919447898864746
    9. ' =
' → logprob: -13.919447898864746
    10. ' ' → logprob: -14.419447898864746

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07015439122915268
    2. '=' → logprob: -2.6951544284820557
    3. ' ' → logprob: -8.445154190063477
    4. '_' → logprob: -13.820154190063477
    5. ',' → logprob: -14.570154190063477
    6. ' =
' → logprob: -15.195154190063477
    7. ' ,' → logprob: -15.320154190063477
    8. '  ' → logprob: -15.445154190063477
    9. ' =)' → logprob: -15.445154190063477
    10. ' ' → logprob: -15.570154190063477

Token 64: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28115925192832947
    2. ' ' → logprob: -1.4061592817306519
    3. ' ' → logprob: -12.281159400939941
    4. '1' → logprob: -13.031159400939941
    5. '`' → logprob: -14.906159400939941
    6. ' `' → logprob: -15.343659400939941
    7. ' 
' → logprob: -15.531159400939941
    8. ' int' → logprob: -15.531159400939941
    9. 'int' → logprob: -15.781159400939941
    10. ',' → logprob: -16.156158447265625

Token 65: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.203409844194539e-05
    2. ' ' → logprob: -10.125041961669922
    3. '1' → logprob: -13.625041961669922
    4. '(' → logprob: -16.062541961669922
    5. 'int' → logprob: -16.375041961669922
    6. '[' → logprob: -16.687541961669922
    7. '-' → logprob: -17.437541961669922
    8. '   ' → logprob: -17.500041961669922
    9. '2' → logprob: -17.625041961669922
    10. '`' → logprob: -17.625041961669922

Token 66: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: 'range' (ID: 20967)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003345017321407795
    2. ' for' → logprob: -6.003345012664795
    3. '```' → logprob: -7.628345012664795
    4. '
' → logprob: -8.628345489501953
    5. 'i' → logprob: -9.253345489501953
    6. 'n' → logprob: -10.253345489501953
    7. 'f' → logprob: -10.753345489501953
    8. '\n' → logprob: -11.503345489501953
    9. '=' → logprob: -12.503345489501953
    10. 'a' → logprob: -12.503345489501953

Token 68: '_seq' (ID: 34260)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09575656056404114
    2. '_' → logprob: -2.5957565307617188
    3. '(seq' → logprob: -4.595756530761719
    4. '_seq' → logprob: -6.345756530761719
    5. '_range' → logprob: -6.720756530761719
    6. 's' → logprob: -7.345756530761719
    7. '(n' → logprob: -7.595756530761719
    8. '(s' → logprob: -7.595756530761719
    9. '_s' → logprob: -8.095756530761719
    10. '(range' → logprob: -8.095756530761719

Token 69: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.46619871258735657
    2. ' =' → logprob: -1.5911986827850342
    3. '=' → logprob: -1.9661986827850342
    4. '(' → logprob: -4.341198921203613
    5. '_len' → logprob: -5.216198921203613
    6. '_=' → logprob: -5.216198921203613
    7. '_range' → logprob: -6.466198921203613
    8. '_for' → logprob: -7.591198921203613
    9. 's' → logprob: -8.091198921203613
    10. '_seq' → logprob: -8.341198921203613

Token 70: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.25853461027145386
    2. 'range' → logprob: -1.5085346698760986
    3. ' seq' → logprob: -5.3835344314575195
    4. 'seq' → logprob: -6.7585344314575195
    5. '(range' → logprob: -7.6335344314575195
    6. '(seq' → logprob: -8.88353443145752
    7. ' ' → logprob: -9.38353443145752
    8. ' list' → logprob: -9.88353443145752
    9. '(' → logprob: -11.25853443145752
    10. ' sequence' → logprob: -11.63353443145752

Token 71: '

' (ID: 279)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.6216709017753601
    2. '(' → logprob: -0.9966709017753601
    3. '(input' → logprob: -2.371670961380005
    4. 'input' → logprob: -8.871670722961426
    5. '(sequence' → logprob: -8.996670722961426
    6. 'seq' → logprob: -9.621670722961426
    7. '(len' → logprob: -9.996670722961426
    8. ' (' → logprob: -9.996670722961426
    9. '(
' → logprob: -10.621670722961426
    10. '(n' → logprob: -10.871670722961426

Token 72: 'for' (ID: 1938)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20805636048316956
    2. '1' → logprob: -1.7080563306808472
    3. 'for' → logprob: -5.833056449890137
    4. '2' → logprob: -6.333056449890137
    5. 'i' → logprob: -7.458056449890137
    6. '(seq' → logprob: -7.833056449890137
    7. 'input' → logprob: -8.583056449890137
    8. '0' → logprob: -8.583056449890137
    9. '_' → logprob: -8.958056449890137
    10. 'seq' → logprob: -9.583056449890137

Token 73: ' cur' (ID: 4396)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.021910281851887703
    2. ' _' → logprob: -4.146910190582275
    3. ' ' → logprob: -5.396910190582275
    4. '_' → logprob: -6.896910190582275
    5. ' input' → logprob: -8.896910667419434
    6. ' seq' → logprob: -9.771910667419434
    7. 'i' → logprob: -10.646910667419434
    8. ' range' → logprob: -11.021910667419434
    9. ' idx' → logprob: -11.146910667419434
    10. ' index' → logprob: -11.146910667419434

Token 74: '_index' (ID: 7748)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6510544419288635
    2. '_' → logprob: -1.4010543823242188
    3. '_i' → logprob: -1.7760543823242188
    4. '_in' → logprob: -3.7760543823242188
    5. '_n' → logprob: -4.401054382324219
    6. '_num' → logprob: -4.526054382324219
    7. '_idx' → logprob: -5.526054382324219
    8. '_index' → logprob: -6.026054382324219
    9. ' ' → logprob: -6.526054382324219
    10. 'in' → logprob: -6.776054382324219

Token 75: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02989731915295124
    2. 'in' → logprob: -3.5298972129821777
    3. ' ' → logprob: -8.904897689819336
    4. ',' → logprob: -11.654897689819336
    5. '	in' → logprob: -14.404897689819336
    6. '1' → logprob: -14.779897689819336
    7. ' ,' → logprob: -15.154897689819336
    8. '  ' → logprob: -15.779897689819336
    9. 'range' → logprob: -16.029897689819336
    10. ')' → logprob: -16.029897689819336

Token 76: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.17989639937877655
    2. 'range' → logprob: -1.804896354675293
    3. ' ' → logprob: -10.054896354675293
    4. ' seq' → logprob: -10.304896354675293
    5. '(range' → logprob: -10.429896354675293
    6. 'seq' → logprob: -10.804896354675293
    7. ' sequence' → logprob: -11.929896354675293
    8. '	range' → logprob: -12.054896354675293
    9. '  ' → logprob: -12.929896354675293
    10. '1' → logprob: -13.304896354675293

Token 77: '_seq' (ID: 34260)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.048685476183891296
    2. '(' → logprob: -3.0486855506896973
    3. ' (' → logprob: -10.173685073852539
    4. '(len' → logprob: -10.548685073852539
    5. '(input' → logprob: -10.923685073852539
    6. '(sequence' → logprob: -12.048685073852539
    7. '(cur' → logprob: -12.548685073852539
    8. '(range' → logprob: -13.298685073852539
    9. '(n' → logprob: -13.548685073852539
    10. '_seq' → logprob: -13.673685073852539

Token 78: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011056310497224331
    2. '(seq' → logprob: -4.511056423187256
    3. ' (' → logprob: -12.136055946350098
    4. '(input' → logprob: -13.261055946350098
    5. 'seq' → logprob: -14.511055946350098
    6. '1' → logprob: -15.136055946350098
    7. '(cur' → logprob: -15.886055946350098
    8. ' ' → logprob: -16.136056900024414
    9. '(sequence' → logprob: -16.136056900024414
    10. '(len' → logprob: -16.261056900024414

Token 79: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.042989376932382584
    2. '2' → logprob: -3.542989492416382
    3. 'seq' → logprob: -4.417989253997803
    4. ' ' → logprob: -7.042989253997803
    5. '   ' → logprob: -9.417989730834961
    6. ' seq' → logprob: -9.417989730834961
    7. '(seq' → logprob: -10.542989730834961
    8. '(' → logprob: -11.917989730834961
    9. '0' → logprob: -12.042989730834961
    10. '_seq' → logprob: -12.667989730834961

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027444821898825467
    2. ' ,' → logprob: -8.250274658203125
    3. ',input' → logprob: -11.375274658203125
    4. ',n' → logprob: -13.625274658203125
    5. ',len' → logprob: -15.750274658203125
    6. ',
' → logprob: -15.750274658203125
    7. ',num' → logprob: -16.250274658203125
    8. ',int' → logprob: -16.625274658203125
    9. ' ' → logprob: -17.250274658203125
    10. '，' → logprob: -17.625274658203125

Token 81: ' seq' (ID: 26775)
  Prédit: ' seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seq' → logprob: -0.3868976831436157
    2. 'seq' → logprob: -1.1368976831436157
    3. '(seq' → logprob: -11.511898040771484
    4. ' ' → logprob: -12.261898040771484
    5. '_seq' → logprob: -12.511898040771484
    6. ' input' → logprob: -13.261898040771484
    7. 'Seq' → logprob: -13.511898040771484
    8. '    ' → logprob: -13.761898040771484
    9. 'input' → logprob: -13.886898040771484
    10. '.seq' → logprob: -14.261898040771484

Token 82: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.9361264946837764e-07
    2. 'len' → logprob: -16.875
    3. '_' → logprob: -18.125
    4. '_l' → logprob: -20.375
    5. '_LEN' → logprob: -20.5
    6. '_n' → logprob: -20.875
    7. '__' → logprob: -21.25
    8. 'Len' → logprob: -21.25
    9. '_le' → logprob: -21.625
    10. 'n' → logprob: -21.625

Token 83: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016168326139450073
    2. '):
' → logprob: -4.141168117523193
    3. ' ):' → logprob: -10.141168594360352
    4. ')' → logprob: -10.141168594360352
    5. '):
' → logprob: -10.266168594360352
    6. ':' → logprob: -10.891168594360352
    7. ' ):
' → logprob: -14.016168594360352
    8. '):

' → logprob: -15.266168594360352
    9. ',' → logprob: -16.14116859436035
    10. '```' → logprob: -16.14116859436035

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018099725246429443
    2. ' factorial' → logprob: -4.643099784851074
    3. '```' → logprob: -5.643099784851074
    4. 'factor' → logprob: -6.518099784851074
    5. '    
' → logprob: -7.018099784851074
    6. ' factor' → logprob: -7.518099784851074
    7. ',' → logprob: -7.643099784851074
    8. '<|end|>' → logprob: -7.643099784851074
    9. ':' → logprob: -8.393099784851074
    10. '_factor' → logprob: -8.518099784851074

Token 85: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.7066994309425354
    2. ' factorial' → logprob: -0.7066994309425354
    3. '   ' → logprob: -4.706699371337891
    4. ' factor' → logprob: -5.456699371337891
    5. '```' → logprob: -9.58169937133789
    6. '_factor' → logprob: -10.45669937133789
    7. 'fact' → logprob: -11.08169937133789
    8. '-factor' → logprob: -11.58169937133789
    9. '.factor' → logprob: -11.70669937133789
    10. ' ' → logprob: -12.33169937133789

Token 86: '_list' (ID: 4162)
  Prédit: '_acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -0.00761005561798811
    2. '_list' → logprob: -4.882609844207764
    3. 'acc' → logprob: -14.007610321044922
    4. '_' → logprob: -14.257610321044922
    5. '_factor' → logprob: -14.632610321044922
    6. '_ac' → logprob: -15.007610321044922
    7. ' _' → logprob: -15.007610321044922
    8. '```' → logprob: -15.132610321044922
    9. '*_' → logprob: -15.507610321044922
    10. '_lst' → logprob: -15.882610321044922

Token 87: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -2.093505099765025e-05
    2. '[' → logprob: -10.875020980834961
    3. ' [' → logprob: -13.500020980834961
    4. '[curr' → logprob: -15.500020980834961
    5. '[current' → logprob: -16.25002098083496
    6. '```' → logprob: -16.37502098083496
    7. '   ' → logprob: -17.12502098083496
    8. '[col' → logprob: -17.12502098083496
    9. '[i' → logprob: -17.37502098083496
    10. ' ' → logprob: -17.50002098083496

Token 88: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.3902033970225602e-05
    2. '_factor' → logprob: -11.625014305114746
    3. '_idx' → logprob: -13.500014305114746
    4. '_' → logprob: -14.000014305114746
    5. 'index' → logprob: -14.375014305114746
    6. 'dex' → logprob: -15.250014305114746
    7. 'al' → logprob: -15.375014305114746
    8. '_INDEX' → logprob: -15.500014305114746
    9. 'ral' → logprob: -15.750014305114746
    10. 'x' → logprob: -16.25001335144043

Token 89: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17965419590473175
    2. '=' → logprob: -1.9296542406082153
    3. ')' → logprob: -4.304654121398926
    4. ']' → logprob: -5.554654121398926
    5. ' ' → logprob: -7.054654121398926
    6. ' )' → logprob: -7.429654121398926
    7. ' *=' → logprob: -8.804654121398926
    8. ' ]' → logprob: -9.304654121398926
    9. ')=' → logprob: -9.554654121398926
    10. ']=' → logprob: -10.429654121398926

Token 90: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0003187810070812702
    2. ' =' → logprob: -8.75031852722168
    3. '*=' → logprob: -8.75031852722168
    4. ' *=' → logprob: -14.25031852722168
    5. '=

' → logprob: -14.62531852722168
    6. '=f' → logprob: -15.37531852722168
    7. '=int' → logprob: -15.75031852722168
    8. '=*' → logprob: -16.00031852722168
    9. '=i' → logprob: -16.87531852722168
    10. '＝' → logprob: -17.25031852722168

Token 91: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.5254159569740295
    2. ' factorial' → logprob: -0.9004159569740295
    3. 'cur' → logprob: -6.775415897369385
    4. ' factor' → logprob: -7.900415897369385
    5. ' (' → logprob: -8.025416374206543
    6. 'fact' → logprob: -8.400416374206543
    7. '(f' → logprob: -9.525416374206543
    8. '(' → logprob: -10.275416374206543
    9. '(cur' → logprob: -10.650416374206543
    10. ' cur' → logprob: -10.775416374206543

Token 92: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -0.01830855756998062
    2. '_list' → logprob: -4.018308639526367
    3. '_' → logprob: -8.893308639526367
    4. '_factor' → logprob: -11.393308639526367
    5. '*_' → logprob: -13.018308639526367
    6. ' _' → logprob: -13.268308639526367
    7. '```' → logprob: -13.393308639526367
    8. '*' → logprob: -13.393308639526367
    9. '`' → logprob: -14.893308639526367
    10. 'acc' → logprob: -15.018308639526367

Token 93: ' =' (ID: 314)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.07893098890781403
    2. '*' → logprob: -2.5789310932159424
    3. ' ' → logprob: -10.703930854797363
    4. ' ' → logprob: -11.078930854797363
    5. ' **' → logprob: -14.078930854797363
    6. '**' → logprob: -14.328930854797363
    7. '*object' → logprob: -14.703930854797363
    8. '`' → logprob: -14.953930854797363
    9. '*(' → logprob: -15.453930854797363
    10. '	' → logprob: -15.703930854797363

Token 94: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.1817760318517685
    2. ' factorial' → logprob: -1.8067760467529297
    3. 'cur' → logprob: -6.80677604675293
    4. 'fact' → logprob: -7.55677604675293
    5. ' factor' → logprob: -8.05677604675293
    6. '_factor' → logprob: -10.55677604675293
    7. '.factor' → logprob: -11.68177604675293
    8. '*' → logprob: -11.80677604675293
    9. ' cur' → logprob: -11.80677604675293
    10. ' fact' → logprob: -12.05677604675293

Token 95: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -1.9385402993066236e-05
    2. '_list' → logprob: -11.125019073486328
    3. '*' → logprob: -12.875019073486328
    4. 'acc' → logprob: -14.125019073486328
    5. 'Acc' → logprob: -14.500019073486328
    6. '_' → logprob: -14.875019073486328
    7. '_ac' → logprob: -15.375019073486328
    8. '_ACC' → logprob: -17.625019073486328
    9. '	acc' → logprob: -17.625019073486328
    10. '```' → logprob: -18.000019073486328

Token 96: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.014167149551212788
    2. ' *' → logprob: -4.264167308807373
    3. ' ' → logprob: -13.139166831970215
    4. ' ' → logprob: -13.764166831970215
    5. '**' → logprob: -14.764166831970215
    6. '*object' → logprob: -15.764166831970215
    7. '`' → logprob: -17.26416778564453
    8. '	' → logprob: -17.63916778564453
    9. '```' → logprob: -17.76416778564453
    10. '‌' → logprob: -17.76416778564453

Token 97: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -7.493430894101039e-05
    2. ' cur' → logprob: -9.500075340270996
    3. '	cur' → logprob: -18.12507438659668
    4. '(cur' → logprob: -19.50007438659668
    5. '   ' → logprob: -19.87507438659668
    6. ' ' → logprob: -21.50007438659668
    7. '[cur' → logprob: -21.62507438659668
    8. '_cur' → logprob: -22.00007438659668
    9. '.cur' → logprob: -22.37507438659668
    10. '-cur' → logprob: -22.87507438659668

Token 98: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -2.696889623621246e-06
    2. 'index' → logprob: -13.37500286102295
    3. '_' → logprob: -14.25000286102295
    4. '_input' → logprob: -16.375001907348633
    5. '_idx' → logprob: -16.625001907348633
    6. '_factor' → logprob: -17.000001907348633
    7. '_i' → logprob: -17.250001907348633
    8. 'r' → logprob: -17.250001907348633
    9. 'Index' → logprob: -17.375001907348633
    10. '_token' → logprob: -18.000001907348633

Token 99: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.02325642853975296
    2. ' %' → logprob: -3.773256540298462
    3. '<|end|>' → logprob: -12.523256301879883
    4. '%n' → logprob: -12.773256301879883
    5. ')' → logprob: -13.898256301879883
    6. '%c' → logprob: -14.523256301879883
    7. '%i' → logprob: -14.523256301879883
    8. '%A' → logprob: -14.773256301879883
    9. '%
' → logprob: -15.148256301879883
    10. '%\' → logprob: -15.148256301879883

Token 100: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.03808612748980522
    2. ' modulo' → logprob: -3.288086175918579
    3. '998' → logprob: -10.7880859375
    4. 'Modulo' → logprob: -11.6630859375
    5. 'module' → logprob: -11.7880859375
    6. '(mod' → logprob: -13.0380859375
    7. '	mod' → logprob: -13.2880859375
    8. 'moder' → logprob: -13.7880859375
    9. ' ' → logprob: -14.4130859375
    10. 'MOD' → logprob: -14.4130859375

Token 101: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6341853737831116
    2. 'inverse' → logprob: -0.8841853737831116
    3. 'for' → logprob: -4.009185314178467
    4. ' inverse' → logprob: -4.259185314178467
    5. ' for' → logprob: -4.759185314178467
    6. '_inverse' → logprob: -5.384185314178467
    7. ' ' → logprob: -5.759185314178467
    8. '<|end|>' → logprob: -5.884185314178467
    9. 'factor' → logprob: -6.509185314178467
    10. ')' → logprob: -6.509185314178467

Token 102: 'inverse' (ID: 153422)
  Prédit: 'inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.164293572306633
    2. 'for' → logprob: -2.4142935276031494
    3. 'factor' → logprob: -3.7892935276031494
    4. ')' → logprob: -4.5392937660217285
    5. ' for' → logprob: -4.7892937660217285
    6. '<|end|>' → logprob: -5.5392937660217285
    7. '_inverse' → logprob: -5.7892937660217285
    8. '#' → logprob: -5.7892937660217285
    9. ' inverse' → logprob: -5.9142937660217285
    10. 'inv' → logprob: -6.4142937660217285

Token 103: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.5729312896728516
    2. '_' → logprob: -0.9479312896728516
    3. '_acc' → logprob: -3.6979312896728516
    4. '_factor' → logprob: -3.8229312896728516
    5. 's' → logprob: -7.447931289672852
    6. '_base' → logprob: -8.447931289672852
    7. '_input' → logprob: -8.947931289672852
    8. '_val' → logprob: -8.947931289672852
    9. '_lst' → logprob: -9.072931289672852
    10. '_n' → logprob: -9.322931289672852

Token 104: '[input' (ID: 157156)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08029772341251373
    2. '[cur' → logprob: -3.4552977085113525
    3. '[-' → logprob: -3.5802977085113525
    4. '=' → logprob: -4.705297946929932
    5. '_cur' → logprob: -5.455297946929932
    6. '_' → logprob: -6.080297946929932
    7. ' =' → logprob: -6.955297946929932
    8. '[:]' → logprob: -8.580297470092773
    9. '[_' → logprob: -9.080297470092773
    10. '_idx' → logprob: -9.080297470092773

Token 105: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -1.9623810658231378e-05
    2. '_a' → logprob: -11.250020027160645
    3. '_b' → logprob: -12.625020027160645
    4. '_' → logprob: -13.250020027160645
    5. '-_' → logprob: -14.625020027160645
    6. '-' → logprob: -14.875020027160645
    7. 'n' → logprob: -15.625020027160645
    8. ' _' → logprob: -16.875019073486328
    9. '```' → logprob: -17.000019073486328
    10. 'a' → logprob: -17.250019073486328

Token 106: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005352786974981427
    2. ']=' → logprob: -8.125535011291504
    3. ' ]' → logprob: -8.625535011291504
    4. ']==' → logprob: -11.500535011291504
    5. ')]' → logprob: -11.500535011291504
    6. '],' → logprob: -12.250535011291504
    7. ')' → logprob: -12.375535011291504
    8. '])' → logprob: -12.875535011291504
    9. '`]' → logprob: -12.875535011291504
    10. '<|end|>' → logprob: -13.000535011291504

Token 107: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.048615068197250366
    2. ' =' → logprob: -3.048614978790283
    3. '<|end|>' → logprob: -11.548615455627441
    4. ',' → logprob: -11.673615455627441
    5. '=
' → logprob: -12.798615455627441
    6. '=

' → logprob: -12.798615455627441
    7. ' ' → logprob: -14.173615455627441
    8. '*' → logprob: -14.548615455627441
    9. ')' → logprob: -14.923615455627441
    10. ' =
' → logprob: -15.048615455627441

Token 108: ' inverse' (ID: 53743)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -6.885492621222511e-05
    2. ' pow' → logprob: -9.625068664550781
    3. '1' → logprob: -13.375068664550781
    4. '(pow' → logprob: -13.750068664550781
    5. '3' → logprob: -16.62506866455078
    6. '2' → logprob: -17.50006866455078
    7. '_pow' → logprob: -18.25006866455078
    8. 'power' → logprob: -18.62506866455078
    9. 'Pow' → logprob: -18.75006866455078
    10. ' ' → logprob: -19.00006866455078

Token 109: '_acc' (ID: 35551)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.42878755927085876
    2. '_pow' → logprob: -1.9287875890731812
    3. '_list' → logprob: -2.1787874698638916
    4. '(pow' → logprob: -2.9287874698638916
    5. '<|end|>' → logprob: -3.5537874698638916
    6. '_' → logprob: -6.303787708282471
    7. '_factor' → logprob: -6.678787708282471
    8. '(' → logprob: -7.553787708282471
    9. ' pow' → logprob: -7.553787708282471
    10. '_power' → logprob: -7.928787708282471

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32446959614753723
    2. '<|end|>' → logprob: -2.074469566345215
    3. '=' → logprob: -2.449469566345215
    4. '*' → logprob: -3.449469566345215
    5. ' *' → logprob: -3.699469566345215
    6. 'pow' → logprob: -5.324469566345215
    7. '_pow' → logprob: -7.199469566345215
    8. '(pow' → logprob: -7.574469566345215
    9. '<|end|>' → logprob: -7.699469566345215
    10. ' ' → logprob: -7.824469566345215

Token 111: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.0006542971823364496
    2. '1' → logprob: -7.500654220581055
    3. ' pow' → logprob: -9.250654220581055
    4. '(pow' → logprob: -12.375654220581055
    5. '3' → logprob: -16.000654220581055
    6. ' ' → logprob: -16.250654220581055
    7. '2' → logprob: -16.250654220581055
    8. '_pow' → logprob: -16.625654220581055
    9. 'Pow' → logprob: -16.875654220581055
    10. 'power' → logprob: -17.375654220581055

Token 112: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.005293527152389288
    2. '(' → logprob: -5.255293369293213
    3. 'factor' → logprob: -9.755293846130371
    4. 'f' → logprob: -14.380293846130371
    5. '(
' → logprob: -14.755293846130371
    6. '(`' → logprob: -16.005292892456055
    7. '.factor' → logprob: -16.380292892456055
    8. ' factorial' → logprob: -16.755292892456055
    9. '_factor' → logprob: -16.755292892456055
    10. '((' → logprob: -17.005292892456055

Token 113: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.0001146291324403137
    2. 'factor' → logprob: -9.125114440917969
    3. 'act' → logprob: -12.500114440917969
    4. '(f' → logprob: -13.750114440917969
    5. '_factor' → logprob: -14.375114440917969
    6. 'ctor' → logprob: -16.25011444091797
    7. '.factor' → logprob: -16.37511444091797
    8. 'actoring' → logprob: -16.87511444091797
    9. ' factorial' → logprob: -17.25011444091797
    10. '-factor' → logprob: -17.37511444091797

Token 114: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.09902714192867279
    2. 'ial' → logprob: -2.849027156829834
    3. 'l' → logprob: -3.474027156829834
    4. '_list' → logprob: -5.349027156829834
    5. 'list' → logprob: -8.349026679992676
    6. '_acc' → logprob: -9.224026679992676
    7. 'factor' → logprob: -9.599026679992676
    8. 'acc' → logprob: -9.849026679992676
    9. '_factor' → logprob: -9.974026679992676
    10. '_l' → logprob: -10.224026679992676

Token 115: '_acc' (ID: 35551)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00030114251421764493
    2. '_acc' → logprob: -8.125301361083984
    3. 'list' → logprob: -12.875301361083984
    4. '[' → logprob: -14.375301361083984
    5. 'acc' → logprob: -14.375301361083984
    6. 'List' → logprob: -14.500301361083984
    7. '[n' → logprob: -15.250301361083984
    8. 'Acc' → logprob: -15.500301361083984
    9. '[_' → logprob: -16.250301361083984
    10. '_' → logprob: -16.625301361083984

Token 116: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008157044649124146
    2. '(mod' → logprob: -7.7508158683776855
    3. 'mod' → logprob: -9.000815391540527
    4. ',module' → logprob: -9.000815391540527
    5. ' ,' → logprob: -9.250815391540527
    6. '(' → logprob: -10.750815391540527
    7. ',
' → logprob: -12.375815391540527
    8. ',m' → logprob: -12.500815391540527
    9. ',input' → logprob: -12.750815391540527
    10. ',-' → logprob: -13.000815391540527

Token 117: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.021331410855054855
    2. '-' → logprob: -4.021331310272217
    3. ' modulo' → logprob: -6.396331310272217
    4. ' mod' → logprob: -7.646331310272217
    5. '-mod' → logprob: -8.021331787109375
    6. '	mod' → logprob: -8.271331787109375
    7. ' ' → logprob: -8.771331787109375
    8. ' -' → logprob: -8.771331787109375
    9. '998' → logprob: -9.396331787109375
    10. '(mod' → logprob: -10.521331787109375

Token 118: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0031777136027812958
    2. ' -' → logprob: -5.753177642822266
    3. ' ' → logprob: -18.003177642822266
    4. '−' → logprob: -18.628177642822266
    5. '```' → logprob: -19.003177642822266
    6. ' ' → logprob: -20.128177642822266
    7. '–' → logprob: -20.878177642822266
    8. '{-' → logprob: -21.378177642822266
    9. '-mod' → logprob: -22.128177642822266
    10. ''s' → logprob: -22.128177642822266

Token 119: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.37501335144043
    3. '-' → logprob: -14.00001335144043
    4. '```' → logprob: -15.06251335144043
    5. '۲' → logprob: -15.75001335144043
    6. '２' → logprob: -16.81251335144043
    7. '٢' → logprob: -17.06251335144043
    8. '<|end|>' → logprob: -17.25001335144043
    9. ' -' → logprob: -17.37501335144043
    10. '২' → logprob: -17.56251335144043

Token 120: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -12.750003814697266
    3. '```' → logprob: -15.687503814697266
    4. '۲' → logprob: -16.187503814697266
    5. '-' → logprob: -16.500003814697266
    6. 'two' → logprob: -17.062503814697266
    7. '２' → logprob: -17.375003814697266
    8. '২' → logprob: -17.500003814697266
    9. '٢' → logprob: -17.687503814697266
    10. '₂' → logprob: -17.937503814697266

Token 121: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020103710994590074
    2. ',' → logprob: -9.250201225280762
    3. ' )' → logprob: -9.250201225280762
    4. ')
' → logprob: -12.125201225280762
    5. '<|end|>' → logprob: -14.875201225280762
    6. ',)' → logprob: -15.000201225280762
    7. '')' → logprob: -15.125201225280762
    8. '),' → logprob: -15.250201225280762
    9. ')

' → logprob: -15.250201225280762
    10. ')`' → logprob: -15.375201225280762

Token 122: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.008617172949016094
    2. ' modulo' → logprob: -4.758617401123047
    3. '	mod' → logprob: -13.383617401123047
    4. 'module' → logprob: -14.383617401123047
    5. '(mod' → logprob: -15.633617401123047
    6. ' mod' → logprob: -16.633617401123047
    7. '```' → logprob: -16.633617401123047
    8. ')' → logprob: -16.758617401123047
    9. 'Modulo' → logprob: -17.133617401123047
    10. 'moder' → logprob: -18.008617401123047

Token 123: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00026622318546287715
    2. ')
' → logprob: -8.250266075134277
    3. ')

' → logprob: -12.875266075134277
    4. ' )' → logprob: -13.125266075134277
    5. ')
' → logprob: -16.000267028808594
    6. ')`' → logprob: -16.375267028808594
    7. '')' → logprob: -17.625267028808594
    8. '))' → logprob: -17.750267028808594
    9. ')\' → logprob: -18.000267028808594
    10. '`)' → logprob: -18.125267028808594

Token 124: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -6.659005157416686e-05
    2. ' for' → logprob: -9.625066757202148
    3. '```' → logprob: -15.625066757202148
    4. ')' → logprob: -16.12506675720215
    5. '	for' → logprob: -16.37506675720215
    6. 'For' → logprob: -17.25006675720215
    7. '<|end|>' → logprob: -17.50006675720215
    8. 'i' → logprob: -19.50006675720215
    9. '
' → logprob: -19.75006675720215
    10. '``' → logprob: -20.00006675720215

Token 125: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.1406419575214386
    2. ' cur' → logprob: -2.140641927719116
    3. ' i' → logprob: -5.390642166137695
    4. 'i' → logprob: -5.390642166137695
    5. 'rev' → logprob: -5.890642166137695
    6. 'idx' → logprob: -8.265642166137695
    7. 'index' → logprob: -8.265642166137695
    8. 'reverse' → logprob: -8.265642166137695
    9. ' rev' → logprob: -8.515642166137695
    10. ' index' → logprob: -8.765642166137695

Token 126: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -6.630610641877865e-06
    2. 'index' → logprob: -13.000006675720215
    3. '_idx' → logprob: -13.500006675720215
    4. '_range' → logprob: -14.250006675720215
    5. 'dex' → logprob: -14.375006675720215
    6. '_' → logprob: -14.500006675720215
    7. '_ind' → logprob: -15.125006675720215
    8. 'Index' → logprob: -15.750006675720215
    9. '_i' → logprob: -15.875006675720215
    10. '_token' → logprob: -16.2500057220459

Token 127: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036501993890851736
    2. 'in' → logprob: -5.628650188446045
    3. ' ' → logprob: -10.753650665283203
    4. '	in' → logprob: -11.378650665283203
    5. '_in' → logprob: -12.003650665283203
    6. 'n' → logprob: -13.503650665283203
    7. '_reverse' → logprob: -13.503650665283203
    8. '<|end|>' → logprob: -13.628650665283203
    9. '_' → logprob: -13.878650665283203
    10. 'reverse' → logprob: -14.003650665283203

Token 128: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02613052725791931
    2. ' range' → logprob: -3.776130437850952
    3. 're' → logprob: -5.901130676269531
    4. ' reversed' → logprob: -8.901130676269531
    5. '	range' → logprob: -12.651130676269531
    6. ' ' → logprob: -13.401130676269531
    7. 'reverse' → logprob: -13.526130676269531
    8. '   ' → logprob: -14.276130676269531
    9. '(range' → logprob: -14.776130676269531
    10. '  ' → logprob: -15.276130676269531

Token 129: '_seq' (ID: 34260)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.004068782553076744
    2. '(seq' → logprob: -5.754068851470947
    3. '_seq' → logprob: -7.254068851470947
    4. '(range' → logprob: -9.129068374633789
    5. '_range' → logprob: -10.379068374633789
    6. '(n' → logprob: -11.129068374633789
    7. 'range' → logprob: -11.754068374633789
    8. ' (' → logprob: -12.254068374633789
    9. '(sequence' → logprob: -12.754068374633789
    10. '_n' → logprob: -12.879068374633789

Token 130: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.125001907348633
    3. 'input' → logprob: -16.750001907348633
    4. ' (' → logprob: -16.750001907348633
    5. '(in' → logprob: -18.125001907348633
    6. ',input' → logprob: -18.375001907348633
    7. '=input' → logprob: -18.750001907348633
    8. '[input' → logprob: -19.125001907348633
    9. '(inp' → logprob: -19.250001907348633
    10. '<input' → logprob: -19.625001907348633

Token 131: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -3.054500666621607e-06
    2. '-' → logprob: -13.37500286102295
    3. 'n' → logprob: -13.75000286102295
    4. ' -' → logprob: -15.62500286102295
    5. '_' → logprob: -16.000003814697266
    6. '_b' → logprob: -16.125003814697266
    7. '
' → logprob: -18.250003814697266
    8. '```' → logprob: -18.250003814697266
    9. '[n' → logprob: -18.250003814697266
    10. '_a' → logprob: -19.250003814697266

Token 132: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.01819758489727974
    2. ' -' → logprob: -4.018197536468506
    3. ',' → logprob: -10.018198013305664
    4. '
' → logprob: -14.268198013305664
    5. '```' → logprob: -14.393198013305664
    6. ' ' → logprob: -14.893198013305664
    7. '-
' → logprob: -15.018198013305664
    8. ',-' → logprob: -15.268198013305664
    9. ' ,' → logprob: -15.268198013305664
    10. '-,' → logprob: -16.018198013305664

Token 133: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019294669618830085
    2. ' ' → logprob: -6.25192928314209
    3. '1' → logprob: -14.75192928314209
    4. '
' → logprob: -16.001930236816406
    5. 'input' → logprob: -16.251930236816406
    6. '-' → logprob: -16.626930236816406
    7. '  ' → logprob: -16.751930236816406
    8. '   ' → logprob: -17.501930236816406
    9. ' -' → logprob: -17.876930236816406
    10. ' ' → logprob: -18.001930236816406

Token 134: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.226628895296017e-06
    2. '1' → logprob: -11.875007629394531
    3. ' ' → logprob: -15.375007629394531
    4. 'input' → logprob: -17.12500762939453
    5. '-' → logprob: -17.37500762939453
    6. '```' → logprob: -19.12500762939453
    7. '   ' → logprob: -19.37500762939453
    8. '
' → logprob: -19.37500762939453
    9. '=' → logprob: -20.37500762939453
    10. '۰' → logprob: -21.43750762939453

Token 135: ',' (ID: 11)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07263033092021942
    2. ',' → logprob: -3.0726304054260254
    3. ' -' → logprob: -4.072630405426025
    4. ',-' → logprob: -5.072630405426025
    5. '  ' → logprob: -8.697629928588867
    6. ' ,' → logprob: -9.197629928588867
    7. '   ' → logprob: -9.197629928588867
    8. ' ' → logprob: -10.572629928588867
    9. '	' → logprob: -10.697629928588867
    10. '-,' → logprob: -11.197629928588867

Token 136: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0008051026379689574
    2. ' -' → logprob: -7.125804901123047
    3. '-step' → logprob: -15.375804901123047
    4. '   ' → logprob: -15.625804901123047
    5. '  ' → logprob: -15.875804901123047
    6. '```' → logprob: -16.000804901123047
    7. ',-' → logprob: -17.500804901123047
    8. '	' → logprob: -17.625804901123047
    9. '--' → logprob: -18.125804901123047
    10. ' ' → logprob: -18.250804901123047

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013344056205824018
    2. '-' → logprob: -6.876334190368652
    3. ' -' → logprob: -8.126334190368652
    4. ' ' → logprob: -12.876334190368652
    5. ',-' → logprob: -13.626334190368652
    6. ')' → logprob: -13.876334190368652
    7. '<|end|>' → logprob: -14.876334190368652
    8. '```' → logprob: -15.501334190368652
    9. '):
' → logprob: -15.626334190368652
    10. ')-' → logprob: -16.00133514404297

Token 138: '):
' (ID: 1883)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011881504207849503
    2. ' -' → logprob: -5.011881351470947
    3. '):' → logprob: -5.761881351470947
    4. ',-' → logprob: -6.761881351470947
    5. '):
' → logprob: -7.386881351470947
    6. ',' → logprob: -9.886881828308105
    7. ':-' → logprob: -9.886881828308105
    8. '):-' → logprob: -9.886881828308105
    9. ':' → logprob: -10.136881828308105
    10. '   ' → logprob: -11.386881828308105

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016125397756695747
    2. ':' → logprob: -4.266125202178955
    3. '	in' → logprob: -6.641125202178955
    4. 'inverse' → logprob: -8.391125679016113
    5. ' inverse' → logprob: -8.391125679016113
    6. ':
' → logprob: -10.141125679016113
    7. '[in' → logprob: -10.391125679016113
    8. '-in' → logprob: -10.516125679016113
    9. '```' → logprob: -10.891125679016113
    10. '_inverse' → logprob: -11.016125679016113

Token 140: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' (adapté à ' inverse') → logprob: -0.31689199805259705
    2. '   ' → logprob: -1.3168920278549194
    3. ' inverse' → logprob: -5.691892147064209
    4. '_inverse' → logprob: -9.06689167022705
    5. ' ' → logprob: -9.44189167022705
    6. '.inverse' → logprob: -11.56689167022705
    7. '  ' → logprob: -11.56689167022705
    8. '[in' → logprob: -11.81689167022705
    9. '```' → logprob: -12.06689167022705
    10. '       ' → logprob: -12.06689167022705

Token 141: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.2664456789934775e-06
    2. 'list' → logprob: -14.375000953674316
    3. '[_' → logprob: -15.125000953674316
    4. 'List' → logprob: -16.125001907348633
    5. '[' → logprob: -16.375001907348633
    6. '_lst' → logprob: -16.750001907348633
    7. '```' → logprob: -17.000001907348633
    8. 's' → logprob: -17.125001907348633
    9. '_lists' → logprob: -18.500001907348633
    10. '_' → logprob: -19.000001907348633

Token 142: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -12.000006675720215
    3. '[curr' → logprob: -14.750006675720215
    4. '[current' → logprob: -15.625006675720215
    5. '[
' → logprob: -16.00000762939453
    6. '```' → logprob: -16.87500762939453
    7. 'cur' → logprob: -17.25000762939453
    8. '[...]' → logprob: -17.25000762939453
    9. '[next' → logprob: -17.62500762939453
    10. '(cur' → logprob: -18.37500762939453

Token 143: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -5.455048449221067e-05
    2. 'index' → logprob: -9.875054359436035
    3. '_idx' → logprob: -13.875054359436035
    4. '-' → logprob: -14.375054359436035
    5. 'Index' → logprob: -14.625054359436035
    6. 'cur' → logprob: -15.000054359436035
    7. '_' → logprob: -16.00005531311035
    8. 'dex' → logprob: -16.12505531311035
    9. '```' → logprob: -16.25005531311035
    10. 'x' → logprob: -16.37505531311035

Token 144: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001432620221748948
    2. ' -' → logprob: -6.626432418823242
    3. '=' → logprob: -9.251432418823242
    4. '-=' → logprob: -11.626432418823242
    5. ']' → logprob: -14.001432418823242
    6. ')' → logprob: -15.376432418823242
    7. ' ' → logprob: -15.751432418823242
    8. ' =' → logprob: -15.876432418823242
    9. '−' → logprob: -16.126432418823242
    10. '```' → logprob: -16.376432418823242

Token 145: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.141186450899113e-05
    2. '<|end|>' → logprob: -11.375020980834961
    3. ' ' → logprob: -11.625020980834961
    4. ')' → logprob: -15.125020980834961
    5. '<|end|>' → logprob: -15.750020980834961
    6. '```' → logprob: -16.12502098083496
    7. '   ' → logprob: -16.87502098083496
    8. ']' → logprob: -17.12502098083496
    9. '۱' → logprob: -17.25002098083496
    10. '
' → logprob: -17.43752098083496

Token 146: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.250000953674316
    3. ']' → logprob: -15.375000953674316
    4. '   ' → logprob: -16.375001907348633
    5. '=' → logprob: -16.750001907348633
    6. '
' → logprob: -16.875001907348633
    7. '```' → logprob: -16.875001907348633
    8. '<|end|>' → logprob: -17.875001907348633
    9. ')' → logprob: -18.125001907348633
    10. '１' → logprob: -18.375001907348633

Token 147: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05923033133149147
    2. ']' → logprob: -2.934230327606201
    3. ']=' → logprob: -6.059230327606201
    4. ' =' → logprob: -6.309230327606201
    5. ')' → logprob: -8.93423080444336
    6. ')=' → logprob: -10.05923080444336
    7. ' ]' → logprob: -13.18423080444336
    8. ' ' → logprob: -13.93423080444336
    9. '*=' → logprob: -14.05923080444336
    10. '=

' → logprob: -14.18423080444336

Token 148: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003177952254191041
    2. ' =' → logprob: -5.753178119659424
    3. '*=' → logprob: -16.253177642822266
    4. '＝' → logprob: -16.503177642822266
    5. '=

' → logprob: -17.003177642822266
    6. '=
' → logprob: -18.003177642822266
    7. '=i' → logprob: -18.753177642822266
    8. '=int' → logprob: -19.128177642822266
    9. '=index' → logprob: -19.253177642822266
    10. '=in' → logprob: -19.253177642822266

Token 149: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.005469251424074173
    2. ' inverse' → logprob: -5.25546932220459
    3. 'in' → logprob: -8.88046932220459
    4. '(in' → logprob: -9.38046932220459
    5. ' (' → logprob: -12.75546932220459
    6. '   ' → logprob: -13.00546932220459
    7. '_inverse' → logprob: -13.38046932220459
    8. '(' → logprob: -13.63046932220459
    9. '.inverse' → logprob: -13.88046932220459
    10. ' ' → logprob: -14.38046932220459

Token 150: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -0.47432705760002136
    2. '_list' → logprob: -0.9743270874023438
    3. 'list' → logprob: -8.724327087402344
    4. 'acc' → logprob: -9.599327087402344
    5. 'List' → logprob: -11.849327087402344
    6. '*' → logprob: -12.974327087402344
    7. '_' → logprob: -13.349327087402344
    8. 'Acc' → logprob: -13.349327087402344
    9. '_ac' → logprob: -13.974327087402344
    10. '[' → logprob: -13.974327087402344

Token 151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.044421546161174774
    2. '*' → logprob: -3.169421434402466
    3. ' =' → logprob: -7.044421672821045
    4. ' *' → logprob: -7.669421672821045
    5. '*=' → logprob: -9.419421195983887
    6. ' ' → logprob: -14.794421195983887
    7. 'inverse' → logprob: -15.169421195983887
    8. ' *=' → logprob: -15.794421195983887
    9. '＝' → logprob: -16.544422149658203
    10. '```' → logprob: -16.669422149658203

Token 152: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.07361690700054169
    2. ' inverse' → logprob: -2.6986169815063477
    3. '(in' → logprob: -5.948616981506348
    4. 'in' → logprob: -7.198616981506348
    5. ' (' → logprob: -8.323616981506348
    6. '   ' → logprob: -10.823616981506348
    7. '(' → logprob: -11.198616981506348
    8. ' ' → logprob: -11.573616981506348
    9. '_inverse' → logprob: -12.073616981506348
    10. '	in' → logprob: -12.198616981506348

Token 153: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -1.1756367712223437e-05
    2. '_list' → logprob: -12.125011444091797
    3. 'acc' → logprob: -12.250011444091797
    4. '*' → logprob: -14.000011444091797
    5. '_' → logprob: -15.125011444091797
    6. '_ac' → logprob: -16.125011444091797
    7. 'Acc' → logprob: -16.375011444091797
    8. 'list' → logprob: -17.000011444091797
    9. '*_' → logprob: -17.125011444091797
    10. '_ass' → logprob: -17.250011444091797

Token 154: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.014166799373924732
    2. '*' → logprob: -4.264166831970215
    3. ' ' → logprob: -12.889166831970215
    4. ' ' → logprob: -14.889166831970215
    5. '*object' → logprob: -15.514166831970215
    6. '	' → logprob: -16.6391658782959
    7. '  ' → logprob: -16.8891658782959
    8. '**' → logprob: -17.1391658782959
    9. '   ' → logprob: -17.5141658782959
    10. '<|end|>' → logprob: -18.6391658782959

Token 155: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.688212614681106e-05
    2. ' cur' → logprob: -11.000017166137695
    3. '	cur' → logprob: -16.500017166137695
    4. '[cur' → logprob: -19.500017166137695
    5. '(cur' → logprob: -19.625017166137695
    6. '   ' → logprob: -19.625017166137695
    7. '_cur' → logprob: -20.375017166137695
    8. 'cu' → logprob: -20.875017166137695
    9. '.cur' → logprob: -21.375017166137695
    10. ' ' → logprob: -22.375017166137695

Token 156: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -1.5048530030981055e-06
    2. 'index' → logprob: -14.125001907348633
    3. '_' → logprob: -14.375001907348633
    4. '_idx' → logprob: -16.375001907348633
    5. '_factor' → logprob: -17.250001907348633
    6. 'cur' → logprob: -18.000001907348633
    7. '_input' → logprob: -18.000001907348633
    8. '_cur' → logprob: -18.125001907348633
    9. 'r' → logprob: -18.500001907348633
    10. '_INDEX' → logprob: -19.125001907348633

Token 157: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.11447612941265106
    2. '%' → logprob: -2.239476203918457
    3. '-' → logprob: -6.614476203918457
    4. ' -' → logprob: -8.364476203918457
    5. ' ' → logprob: -10.739476203918457
    6. ')%' → logprob: -11.864476203918457
    7. '```' → logprob: -11.989476203918457
    8. '<|end|>' → logprob: -12.239476203918457
    9. ')' → logprob: -12.489476203918457
    10. '%c' → logprob: -12.614476203918457

Token 158: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -2.5776860184123507e-06
    2. 'module' → logprob: -13.50000286102295
    3. ' modulo' → logprob: -14.37500286102295
    4. '	mod' → logprob: -15.62500286102295
    5. ' mod' → logprob: -16.000001907348633
    6. '(mod' → logprob: -16.625001907348633
    7. 'modal' → logprob: -16.625001907348633
    8. 'factor' → logprob: -16.875001907348633
    9. 'input' → logprob: -17.000001907348633
    10. 'modifier' → logprob: -17.125001907348633

Token 159: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 160: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35863375663757324
    2. ')' → logprob: -1.4836337566375732
    3. '+' → logprob: -3.6086337566375732
    4. 'result' → logprob: -4.483633995056152
    5. ' for' → logprob: -4.858633995056152
    6. '   ' → logprob: -5.108633995056152
    7. '(' → logprob: -5.108633995056152
    8. '<|end|>' → logprob: -5.608633995056152
    9. '```' → logprob: -5.608633995056152
    10. '(
' → logprob: -6.733633995056152

Token 161: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47760123014450073
    2. ' input' → logprob: -0.9776012301445007
    3. '(input' → logprob: -7.227601051330566
    4. 'abs' → logprob: -7.852601051330566
    5. ' not' → logprob: -7.977601051330566
    6. ' (' → logprob: -7.977601051330566
    7. ' abs' → logprob: -7.977601051330566
    8. '0' → logprob: -8.102601051330566
    9. ' ' → logprob: -8.227601051330566
    10. '1' → logprob: -8.352601051330566

Token 162: '_n' (ID: 2170)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.016943704336881638
    2. '_b' → logprob: -4.51694393157959
    3. '_n' → logprob: -5.14194393157959
    4. '_' → logprob: -10.76694393157959
    5. 'a' → logprob: -12.39194393157959
    6. ' _' → logprob: -13.64194393157959
    7. '```' → logprob: -13.64194393157959
    8. '"_' → logprob: -14.14194393157959
    9. '_c' → logprob: -15.01694393157959
    10. ''_' → logprob: -15.14194393157959

Token 163: ' -' (ID: 533)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.41757839918136597
    2. ' >' → logprob: -1.4175784587860107
    3. '>' → logprob: -3.0425784587860107
    4. '>=' → logprob: -3.5425784587860107
    5. ' <' → logprob: -4.542578220367432
    6. ' ==' → logprob: -5.292578220367432
    7. ' <=' → logprob: -6.542578220367432
    8. ' ' → logprob: -6.792578220367432
    9. ' !=' → logprob: -6.917578220367432
    10. ':' → logprob: -7.042578220367432

Token 164: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0012634482700377703
    2. ' input' → logprob: -7.626263618469238
    3. '0' → logprob: -8.251263618469238
    4. '1' → logprob: -8.376263618469238
    5. '(input' → logprob: -8.876263618469238
    6. 'max' → logprob: -9.501263618469238
    7. '2' → logprob: -10.626263618469238
    8. 'min' → logprob: -10.626263618469238
    9. '(' → logprob: -11.751263618469238
    10. ' ' → logprob: -12.876263618469238

Token 165: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.17988941073417664
    2. '_b' → logprob: -1.804889440536499
    3. 'a' → logprob: -9.304889678955078
    4. '_' → logprob: -10.679889678955078
    5. '```' → logprob: -12.054889678955078
    6. '-_' → logprob: -12.429889678955078
    7. '>=' → logprob: -13.054889678955078
    8. '>' → logprob: -13.242389678955078
    9. ' _' → logprob: -13.554889678955078
    10. '-a' → logprob: -13.617389678955078

Token 166: ' -' (ID: 533)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.4915074110031128
    2. ' >=' → logprob: -1.4915074110031128
    3. '<' → logprob: -2.4915075302124023
    4. ' <' → logprob: -2.7415075302124023
    5. '+' → logprob: -4.741507530212402
    6. '-' → logprob: -5.866507530212402
    7. ' +' → logprob: -5.991507530212402
    8. ' -' → logprob: -7.241507530212402
    9. '>' → logprob: -7.741507530212402
    10. ' ' → logprob: -7.741507530212402

Token 167: ' input' (ID: 3422)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06395787745714188
    2. 'input' → logprob: -2.813957929611206
    3. ' input' → logprob: -6.563957691192627
    4. ' ' → logprob: -7.938957691192627
    5. '<input' → logprob: -8.688958168029785
    6. '0' → logprob: -10.563958168029785
    7. '(input' → logprob: -12.313958168029785
    8. '	input' → logprob: -12.563958168029785
    9. '=input' → logprob: -12.688958168029785
    10. '>' → logprob: -12.688958168029785

Token 168: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.07571972906589508
    2. ' >' → logprob: -4.450719833374023
    3. '_' → logprob: -4.575719833374023
    4. '>' → logprob: -4.575719833374023
    5. ' ' → logprob: -4.825719833374023
    6. '-' → logprob: -4.950719833374023
    7. 'a' → logprob: -5.075719833374023
    8. ' -' → logprob: -5.325719833374023
    9. ' >=' → logprob: -5.450719833374023
    10. '+' → logprob: -5.700719833374023

Token 169: ':
' (ID: 734)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -1.404893159866333
    2. '>=' → logprob: -1.404893159866333
    3. ' >=' → logprob: -1.904893159866333
    4. ' <' → logprob: -1.904893159866333
    5. '>' → logprob: -2.654893159866333
    6. ' +' → logprob: -2.779893159866333
    7. '+' → logprob: -3.279893159866333
    8. ' >' → logprob: -3.404893159866333
    9. ' ' → logprob: -5.154892921447754
    10. '-' → logprob: -7.404892921447754

Token 170: '   ' (ID: 271)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4244513511657715
    2. ':' → logprob: -1.9244513511657715
    3. '>' → logprob: -2.1744513511657715
    4. ' >=' → logprob: -3.6744513511657715
    5. ' <' → logprob: -4.6744513511657715
    6. '-' → logprob: -4.6744513511657715
    7. ' <=' → logprob: -4.7994513511657715
    8. '+' → logprob: -5.0494513511657715
    9. ' ' → logprob: -5.1744513511657715
    10. '>=' → logprob: -5.2994513511657715

Token 171: ' loop' (ID: 11453)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4089275002479553
    2. ' result' → logprob: -1.4089274406433105
    3. ':' → logprob: -2.9089274406433105
    4. ':
' → logprob: -3.5339274406433105
    5. ' for' → logprob: -6.1589274406433105
    6. 'for' → logprob: -6.2839274406433105
    7. 'print' → logprob: -7.5339274406433105
    8. '   ' → logprob: -7.6589274406433105
    9. '=' → logprob: -8.158927917480469
    10. ' =' → logprob: -8.408927917480469

Token 172: '_range' (ID: 22022)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4114193916320801
    2. ':' → logprob: -2.03641939163208
    3. '_' → logprob: -2.78641939163208
    4. 'for' → logprob: -3.28641939163208
    5. ' _' → logprob: -3.66141939163208
    6. ' ' → logprob: -3.78641939163208
    7. '   ' → logprob: -3.78641939163208
    8. '_range' → logprob: -4.28641939163208
    9. '  ' → logprob: -5.41141939163208
    10. ':
' → logprob: -5.53641939163208

Token 173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03381766378879547
    2. '=' → logprob: -3.408817768096924
    3. ':' → logprob: -9.033817291259766
    4. ' ' → logprob: -11.158817291259766
    5. '_' → logprob: -11.408817291259766
    6. 'for' → logprob: -11.533817291259766
    7. 's' → logprob: -12.533817291259766
    8. ' for' → logprob: -12.658817291259766
    9. ' in' → logprob: -13.283817291259766
    10. 'range' → logprob: -13.283817291259766

Token 174: ' min' (ID: 1349)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.28381773829460144
    2. ' range' → logprob: -1.9088177680969238
    3. 'input' → logprob: -2.658817768096924
    4. ' input' → logprob: -3.658817768096924
    5. 'max' → logprob: -6.908817768096924
    6. 'min' → logprob: -7.158817768096924
    7. ' min' → logprob: -8.033817291259766
    8. ' max' → logprob: -8.158817291259766
    9. '(input' → logprob: -8.533817291259766
    10. '(range' → logprob: -9.158817291259766

Token 175: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0007326744962483644
    2. '(' → logprob: -7.625732898712158
    3. '(
' → logprob: -9.000732421875
    4. '((' → logprob: -9.375732421875
    5. 'input' → logprob: -10.500732421875
    6. ' (' → logprob: -13.125732421875
    7. '(range' → logprob: -13.625732421875
    8. '(in' → logprob: -14.000732421875
    9. '_input' → logprob: -14.250732421875
    10. ',input' → logprob: -14.375732421875

Token 176: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.12705178558826447
    2. '_b' → logprob: -2.127051830291748
    3. '_n' → logprob: -9.37705135345459
    4. '_' → logprob: -10.75205135345459
    5. 'a' → logprob: -12.37705135345459
    6. '(' → logprob: -12.62705135345459
    7. ')' → logprob: -13.00205135345459
    8. '_)' → logprob: -14.00205135345459
    9. '_c' → logprob: -14.12705135345459
    10. '(_' → logprob: -14.12705135345459

Token 177: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.261269211769104
    2. ',input' → logprob: -1.886269211769104
    3. ' ,' → logprob: -3.1362690925598145
    4. ' +' → logprob: -3.7612690925598145
    5. '+' → logprob: -4.5112690925598145
    6. ' -' → logprob: -8.886269569396973
    7. ')' → logprob: -9.011269569396973
    8. 'input' → logprob: -9.261269569396973
    9. '-' → logprob: -9.511269569396973
    10. ',
' → logprob: -10.636269569396973

Token 178: ' ' (ID: 220)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07511569559574127
    2. '1' → logprob: -2.70011568069458
    3. ' input' → logprob: -5.95011568069458
    4. '(input' → logprob: -6.70011568069458
    5. 'range' → logprob: -7.82511568069458
    6. ',input' → logprob: -8.325116157531738
    7. ' ' → logprob: -8.700116157531738
    8. '(' → logprob: -9.575116157531738
    9. '[input' → logprob: -9.700116157531738
    10. ')' → logprob: -9.825116157531738

Token 179: '1' (ID: 16)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.020134223625063896
    2. '1' → logprob: -4.145134449005127
    3. ' input' → logprob: -6.520134449005127
    4. '(input' → logprob: -6.520134449005127
    5. ',input' → logprob: -8.145133972167969
    6. 'range' → logprob: -8.145133972167969
    7. '[input' → logprob: -8.895133972167969
    8. ' ' → logprob: -9.395133972167969
    9. '<input' → logprob: -9.645133972167969
    10. '(' → logprob: -10.145133972167969

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.036138780415058136
    2. ' ,' → logprob: -3.5361387729644775
    3. ',input' → logprob: -5.161139011383057
    4. ' +' → logprob: -8.036138534545898
    5. '+' → logprob: -8.911138534545898
    6. ')' → logprob: -9.786138534545898
    7. ' -' → logprob: -9.911138534545898
    8. '   ' → logprob: -11.286138534545898
    9. ',n' → logprob: -11.661138534545898
    10. 'input' → logprob: -11.661138534545898

Token 181: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029800597578287125
    2. ' input' → logprob: -3.5298006534576416
    3. ' ' → logprob: -11.404800415039062
    4. 'seq' → logprob: -11.529800415039062
    5. '(input' → logprob: -11.904800415039062
    6. 'mod' → logprob: -12.404800415039062
    7. '  ' → logprob: -12.779800415039062
    8. ')' → logprob: -13.279800415039062
    9. ',input' → logprob: -13.279800415039062
    10. 'sequence' → logprob: -13.404800415039062

Token 182: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.5238528251647949
    2. '_b' → logprob: -0.8988528251647949
    3. ' -' → logprob: -7.523852825164795
    4. '_' → logprob: -9.273853302001953
    5. ')' → logprob: -10.523853302001953
    6. '-' → logprob: -11.398853302001953
    7. '_a' → logprob: -11.523853302001953
    8. ' ' → logprob: -11.898853302001953
    9. '
' → logprob: -12.023853302001953
    10. ' _' → logprob: -12.273853302001953

Token 183: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10561459511518478
    2. '-' → logprob: -2.35561466217041
    3. '-input' → logprob: -5.23061466217041
    4. '+' → logprob: -10.60561466217041
    5. ' ' → logprob: -11.98061466217041
    6. ' +' → logprob: -12.23061466217041
    7. ')' → logprob: -13.10561466217041
    8. ',' → logprob: -13.48061466217041
    9. '-output' → logprob: -13.85561466217041
    10. '-ex' → logprob: -15.23061466217041

Token 184: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.038097720593214035
    2. ' input' → logprob: -3.288097620010376
    3. '1' → logprob: -10.663097381591797
    4. '(input' → logprob: -11.163097381591797
    5. ' (' → logprob: -12.663097381591797
    6. '(' → logprob: -13.038097381591797
    7. '<input' → logprob: -13.038097381591797
    8. '	input' → logprob: -13.038097381591797
    9. ' ' → logprob: -13.163097381591797
    10. '=input' → logprob: -13.413097381591797

Token 185: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0003337969828862697
    2. '_a' → logprob: -8.250333786010742
    3. 'b' → logprob: -9.625333786010742
    4. 'a' → logprob: -13.000333786010742
    5. 'input' → logprob: -13.625333786010742
    6. '-b' → logprob: -13.750333786010742
    7. ' ' → logprob: -14.500333786010742
    8. '_' → logprob: -14.500333786010742
    9. ' _' → logprob: -15.375333786010742
    10. '	b' → logprob: -16.000333786010742

Token 186: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15683422982692719
    2. '+' → logprob: -2.531834125518799
    3. ' +' → logprob: -4.031834125518799
    4. ' )' → logprob: -4.031834125518799
    5. '-' → logprob: -4.156834125518799
    6. ' -' → logprob: -4.281834125518799
    7. ')
' → logprob: -8.656834602355957
    8. '):' → logprob: -9.031834602355957
    9. '-)' → logprob: -9.156834602355957
    10. '+)' → logprob: -9.531834602355957

Token 187: 'else' (ID: 2807)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13507398962974548
    2. 'for' → logprob: -2.3850739002227783
    3. '
' → logprob: -4.010074138641357
    4. ' for' → logprob: -4.635074138641357
    5. 'else' → logprob: -5.760074138641357
    6. '    
' → logprob: -5.885074138641357
    7. ':
' → logprob: -9.1350736618042
    8. ')' → logprob: -9.5100736618042
    9. ' 
' → logprob: -9.6350736618042
    10. '  
' → logprob: -9.7600736618042

Token 188: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003925349097698927
    2. ':
' → logprob: -6.128925323486328
    3. ' :' → logprob: -7.003925323486328
    4. '   ' → logprob: -7.128925323486328
    5. ' :
' → logprob: -11.378925323486328
    6. '[' → logprob: -12.128925323486328
    7. '  ' → logprob: -13.003925323486328
    8. ':return' → logprob: -13.253925323486328
    9. '    ' → logprob: -13.378925323486328
    10. '{' → logprob: -13.628925323486328

Token 189: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9610983729362488
    2. '1' → logprob: -1.2110984325408936
    3. '0' → logprob: -1.9610984325408936
    4. ' ' → logprob: -2.4610984325408936
    5. ' loop' → logprob: -2.7110984325408936
    6. ' input' → logprob: -4.4610981941223145
    7. 'loop' → logprob: -4.7110981941223145
    8. 'input' → logprob: -5.8360981941223145
    9. ' min' → logprob: -6.9610981941223145
    10. ' range' → logprob: -7.2110981941223145

Token 190: ' loop' (ID: 11453)
  Prédit: ' loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' loop' → logprob: -0.4789976179599762
    2. 'loop' (adapté à ' loop') → logprob: -1.1039975881576538
    3. '1' → logprob: -4.103997707366943
    4. '0' → logprob: -4.228997707366943
    5. '   ' → logprob: -4.728997707366943
    6. ' ' → logprob: -5.853997707366943
    7. 'print' → logprob: -5.978997707366943
    8. 'result' → logprob: -6.353997707366943
    9. ' result' → logprob: -6.853997707366943
    10. ' print' → logprob: -7.353997707366943

Token 191: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.015600115060806274
    2. '_' → logprob: -5.015600204467773
    3. ':' → logprob: -5.265600204467773
    4. ' _' → logprob: -5.765600204467773
    5. 'range' → logprob: -9.140600204467773
    6. '_:' → logprob: -9.265600204467773
    7. '_ranges' → logprob: -9.640600204467773
    8. ' :' → logprob: -9.890600204467773
    9. ' range' → logprob: -10.015600204467773
    10. '_continue' → logprob: -10.140600204467773

Token 192: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3675757050514221
    2. ' =' → logprob: -1.2425756454467773
    3. ':' → logprob: -3.9925756454467773
    4. '+' → logprob: -8.742575645446777
    5. ' ' → logprob: -9.242575645446777
    6. '+=' → logprob: -9.367575645446777
    7. ' +=' → logprob: -10.367575645446777
    8. '   ' → logprob: -10.492575645446777
    9. ' :' → logprob: -11.242575645446777
    10. ')' → logprob: -11.367575645446777

Token 193: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.0367323160171509
    2. '0' → logprob: -1.2867323160171509
    3. '1' → logprob: -1.6617323160171509
    4. 'min' → logprob: -2.0367321968078613
    5. ' input' → logprob: -3.7867321968078613
    6. ' min' → logprob: -4.036732196807861
    7. ' ' → logprob: -4.911732196807861
    8. 'max' → logprob: -7.286732196807861
    9. 'int' → logprob: -8.91173267364502
    10. '(input' → logprob: -9.72423267364502

Token 194: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.14359915256500244
    2. '_n' → logprob: -2.018599033355713
    3. '_b' → logprob: -7.018599033355713
    4. 'a' → logprob: -10.768599510192871
    5. '_' → logprob: -12.393599510192871
    6. 'n' → logprob: -13.768599510192871
    7. '```' → logprob: -15.018599510192871
    8. '_c' → logprob: -15.268599510192871
    9. 'A' → logprob: -15.393599510192871
    10. '_s' → logprob: -16.018598556518555

Token 195: ' +' (ID: 659)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003291544271633029
    2. ' for' → logprob: -6.128291606903076
    3. '
' → logprob: -6.878291606903076
    4. '+' → logprob: -9.753291130065918
    5. '<|end|>' → logprob: -12.128291130065918
    6. '+
' → logprob: -12.378291130065918
    7. '```' → logprob: -13.253291130065918
    8. 'range' → logprob: -13.253291130065918
    9. '\n' → logprob: -14.253291130065918
    10. '%' → logprob: -14.253291130065918

Token 196: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.587483221665025e-05
    2. ' ' → logprob: -9.750065803527832
    3. '0' → logprob: -12.375065803527832
    4. '2' → logprob: -12.875065803527832
    5. 'input' → logprob: -15.625065803527832
    6. '+' → logprob: -16.00006675720215
    7. '<|end|>' → logprob: -16.50006675720215
    8. '-' → logprob: -16.81256675720215
    9. '   ' → logprob: -16.81256675720215
    10. '...' → logprob: -17.00006675720215

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.570319702499546e-05
    2. '2' → logprob: -11.250025749206543
    3. ' ' → logprob: -11.625025749206543
    4. '0' → logprob: -12.750025749206543
    5. '   ' → logprob: -15.937525749206543
    6. 'input' → logprob: -16.125024795532227
    7. '-' → logprob: -16.312524795532227
    8. '!' → logprob: -16.375024795532227
    9. '(' → logprob: -16.937524795532227
    10. '  ' → logprob: -17.187524795532227

Token 198: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0017619287827983499
    2. ' for' → logprob: -6.3767619132995605
    3. '```' → logprob: -10.876762390136719
    4. '
' → logprob: -11.001762390136719
    5. '+' → logprob: -11.626762390136719
    6. ')' → logprob: -12.626762390136719
    7. '+
' → logprob: -13.251762390136719
    8. '	for' → logprob: -13.501762390136719
    9. '\n' → logprob: -13.751762390136719
    10. '0' → logprob: -13.876762390136719

Token 199: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.796184723294573e-06
    2. 'def' → logprob: -13.125005722045898
    3. '
' → logprob: -13.625005722045898
    4. ' for' → logprob: -13.750005722045898
    5. 'result' → logprob: -14.625005722045898
    6. '```' → logprob: -15.250005722045898
    7. 'from' → logprob: -15.500005722045898
    8. 'range' → logprob: -16.2500057220459
    9. '    
' → logprob: -16.6250057220459
    10. 'if' → logprob: -17.0000057220459

Token 200: ' cur' (ID: 4396)
  Prédit: ' cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cur' → logprob: -0.49723711609840393
    2. ' i' → logprob: -1.3722370862960815
    3. 'cur' → logprob: -2.497237205505371
    4. 'i' → logprob: -3.997237205505371
    5. ' index' → logprob: -4.622237205505371
    6. ' loop' → logprob: -4.872237205505371
    7. ' current' → logprob: -5.247237205505371
    8. ' idx' → logprob: -5.622237205505371
    9. ' iter' → logprob: -7.059737205505371
    10. 'loop' → logprob: -7.372237205505371

Token 201: '_k' (ID: 11637)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00046272401232272387
    2. '_idx' → logprob: -9.125462532043457
    3. '_' → logprob: -9.625462532043457
    4. '_range' → logprob: -9.625462532043457
    5. '_i' → logprob: -9.625462532043457
    6. 'rent' → logprob: -10.000462532043457
    7. '_loop' → logprob: -10.375462532043457
    8. 'r' → logprob: -10.750462532043457
    9. 'ent' → logprob: -11.250462532043457
    10. ' in' → logprob: -12.000462532043457

Token 202: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10027708113193512
    2. 'in' → logprob: -2.3502771854400635
    3. 'n' → logprob: -10.975276947021484
    4. ' ' → logprob: -10.975276947021484
    5. '_' → logprob: -11.225276947021484
    6. '_in' → logprob: -11.475276947021484
    7. '	in' → logprob: -12.225276947021484
    8. 'range' → logprob: -13.475276947021484
    9. '  ' → logprob: -13.850276947021484
    10. 'k' → logprob: -13.975276947021484

Token 203: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.19523315131664276
    2. 'range' → logprob: -1.9452331066131592
    3. ' loop' → logprob: -3.445233106613159
    4. 'loop' → logprob: -6.070233345031738
    5. '(range' → logprob: -9.070233345031738
    6. '	range' → logprob: -9.945233345031738
    7. '(loop' → logprob: -10.820233345031738
    8. ' ' → logprob: -12.195233345031738
    9. ' ' → logprob: -12.820233345031738
    10. '  ' → logprob: -13.820233345031738

Token 204: '_seq' (ID: 34260)
  Prédit: '(loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.0002036595979006961
    2. '(' → logprob: -8.500204086303711
    3. '(range' → logprob: -17.75020408630371
    4. '(lo' → logprob: -17.87520408630371
    5. ' (' → logprob: -18.25020408630371
    6. 'loop' → logprob: -18.37520408630371
    7. '(l' → logprob: -19.12520408630371
    8. '(len' → logprob: -19.50020408630371
    9. '1' → logprob: -19.62520408630371
    10. '(
' → logprob: -19.75020408630371

Token 205: '(loop' (ID: 146562)
  Prédit: '(loop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loop' → logprob: -1.676292231422849e-05
    2. '(' → logprob: -11.000017166137695
    3. '(lo' → logprob: -20.000017166137695
    4. '(l' → logprob: -20.750017166137695
    5. 'loop' → logprob: -21.000017166137695
    6. '(
' → logprob: -21.375017166137695
    7. '(range' → logprob: -21.875017166137695
    8. '(len' → logprob: -22.125017166137695
    9. '(line' → logprob: -22.250017166137695
    10. ' loop' → logprob: -22.500017166137695

Token 206: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -0.00022046364028938115
    2. 'ange' → logprob: -8.50022029876709
    3. 'range' → logprob: -11.37522029876709
    4. 'nge' → logprob: -12.37522029876709
    5. '(range' → logprob: -14.87522029876709
    6. '(' → logprob: -15.37522029876709
    7. '_loop' → logprob: -16.125221252441406
    8. 'ge' → logprob: -16.125221252441406
    9. '_r' → logprob: -16.500221252441406
    10. '-range' → logprob: -16.875221252441406

Token 207: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -8.208653162000701e-05
    2. '):
' → logprob: -9.875082015991211
    3. ':' → logprob: -11.125082015991211
    4. ' ):' → logprob: -11.125082015991211
    5. ')' → logprob: -14.250082015991211
    6. '):
' → logprob: -15.500082015991211
    7. '():' → logprob: -15.625082015991211
    8. ',' → logprob: -17.37508201599121
    9. '):

' → logprob: -17.37508201599121
    10. '}:' → logprob: -17.50008201599121

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006252027116715908
    2. 'result' → logprob: -5.256251811981201
    3. ' result' → logprob: -7.131251811981201
    4. '	result' → logprob: -9.63125228881836
    5. ':' → logprob: -9.75625228881836
    6. ' ' → logprob: -10.63125228881836
    7. '<|end|>' → logprob: -10.75625228881836
    8. '       ' → logprob: -11.38125228881836
    9. '  ' → logprob: -11.88125228881836
    10. ',result' → logprob: -12.00625228881836

Token 209: ' param' (ID: 3802)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.345314860343933
    2. 'num' → logprob: -2.2203149795532227
    3. 'temp' → logprob: -2.3453149795532227
    4. 'cur' → logprob: -2.3453149795532227
    5. 'n' → logprob: -2.5953149795532227
    6. 'numer' → logprob: -2.5953149795532227
    7. 'comb' → logprob: -2.7203149795532227
    8. '   ' → logprob: -2.8453149795532227
    9. 'term' → logprob: -3.3453149795532227
    10. 'val' → logprob: -3.7203149795532227

Token 210: '_q' (ID: 19384)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19335803389549255
    2. '=' → logprob: -2.0683579444885254
    3. '_factor' → logprob: -4.568357944488525
    4. '_comb' → logprob: -4.568357944488525
    5. '_' → logprob: -4.818357944488525
    6. '_result' → logprob: -5.068357944488525
    7. '_n' → logprob: -5.318357944488525
    8. '_a' → logprob: -6.443357944488525
    9. '_val' → logprob: -6.818357944488525
    10. ' ' → logprob: -7.068357944488525

Token 211: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1711716651916504
    2. '=' → logprob: -2.2961716651916504
    3. 'u' → logprob: -3.7961716651916504
    4. '_a' → logprob: -4.79617166519165
    5. 'a' → logprob: -5.29617166519165
    6. '_factor' → logprob: -5.42117166519165
    7. '1' → logprob: -6.04617166519165
    8. '_num' → logprob: -6.79617166519165
    9. '_comb' → logprob: -6.92117166519165
    10. '_' → logprob: -7.42117166519165

Token 212: ' input' (ID: 3422)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.024346008896827698
    2. ' factorial' → logprob: -3.774346113204956
    3. 'fact' → logprob: -7.774345874786377
    4. 'input' → logprob: -8.774346351623535
    5. '   ' → logprob: -9.149346351623535
    6. '(' → logprob: -9.149346351623535
    7. ' factor' → logprob: -9.899346351623535
    8. '(
' → logprob: -10.149346351623535
    9. '(input' → logprob: -10.274346351623535
    10. '(f' → logprob: -10.399346351623535

Token 213: '_n' (ID: 2170)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.08694185316562653
    2. '_b' → logprob: -3.461941957473755
    3. '_n' → logprob: -3.586941957473755
    4. 'a' → logprob: -3.836941957473755
    5. '_k' → logprob: -6.711941719055176
    6. 'n' → logprob: -7.086941719055176
    7. 'b' → logprob: -8.086941719055176
    8. 'k' → logprob: -9.211941719055176
    9. '_c' → logprob: -10.086941719055176
    10. '_' → logprob: -10.336941719055176

Token 214: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.788785457611084
    2. '-' → logprob: -1.038785457611084
    3. '-cur' → logprob: -1.663785457611084
    4. '-input' → logprob: -6.663785457611084
    5. '+' → logprob: -8.038785934448242
    6. '-k' → logprob: -8.163785934448242
    7. ' ' → logprob: -8.913785934448242
    8. '   ' → logprob: -9.538785934448242
    9. ' +' → logprob: -9.663785934448242
    10. '*' → logprob: -10.663785934448242

Token 215: ' input' (ID: 3422)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.14485785365104675
    2. 'input' → logprob: -2.019857883453369
    3. '1' → logprob: -6.644857883453369
    4. ' cur' → logprob: -7.894857883453369
    5. 'loop' → logprob: -8.144857406616211
    6. ' input' → logprob: -8.644857406616211
    7. '   ' → logprob: -11.019857406616211
    8. '(cur' → logprob: -12.269857406616211
    9. ' ' → logprob: -12.519857406616211
    10. '-cur' → logprob: -12.894857406616211

Token 216: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.16489757597446442
    2. '_a' → logprob: -1.9148975610733032
    3. 'a' → logprob: -5.539897441864014
    4. 'b' → logprob: -7.289897441864014
    5. '_k' → logprob: -10.539897918701172
    6. '_n' → logprob: -12.164897918701172
    7. '   ' → logprob: -12.914897918701172
    8. '-b' → logprob: -12.914897918701172
    9. '_' → logprob: -13.039897918701172
    10. 'k' → logprob: -13.164897918701172

Token 217: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.28168025612831116
    2. ' -' → logprob: -1.4066802263259888
    3. '-cur' → logprob: -7.656680107116699
    4. ' ' → logprob: -11.2816801071167
    5. '
' → logprob: -11.5316801071167
    6. 'cur' → logprob: -11.9066801071167
    7. '-
' → logprob: -12.0316801071167
    8. '   ' → logprob: -12.5316801071167
    9. '+' → logprob: -12.5316801071167
    10. '*' → logprob: -12.7816801071167

Token 218: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.055054809898138046
    2. '1' → logprob: -2.9300549030303955
    3. ' cur' → logprob: -9.430054664611816
    4. 'loop' → logprob: -9.805054664611816
    5. 'input' → logprob: -10.555054664611816
    6. '(cur' → logprob: -12.555054664611816
    7. ' ' → logprob: -12.930054664611816
    8. '-cur' → logprob: -13.555054664611816
    9. '(' → logprob: -14.055054664611816
    10. 'k' → logprob: -14.180054664611816

Token 219: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -7.636475493200123e-05
    2. 'k' → logprob: -9.625076293945312
    3. '_a' → logprob: -11.625076293945312
    4. 'a' → logprob: -14.125076293945312
    5. '_n' → logprob: -16.125076293945312
    6. '_q' → logprob: -16.250076293945312
    7. 'K' → logprob: -16.750076293945312
    8. '_index' → logprob: -16.750076293945312
    9. '```' → logprob: -16.750076293945312
    10. '_i' → logprob: -17.000076293945312

Token 220: ' -' (ID: 533)
  Prédit: 'param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'param' → logprob: -0.2847011387348175
    2. '+' → logprob: -2.659701108932495
    3. '
' → logprob: -2.659701108932495
    4. '   ' → logprob: -2.784701108932495
    5. 'factor' → logprob: -4.659701347351074
    6. 'input' → logprob: -5.034701347351074
    7. '-' → logprob: -5.284701347351074
    8. ' param' → logprob: -5.659701347351074
    9. 'result' → logprob: -5.909701347351074
    10. ')' → logprob: -6.034701347351074

Token 221: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.991464786347933e-05
    2. ' ' → logprob: -9.750060081481934
    3. '   ' → logprob: -14.375060081481934
    4. '-' → logprob: -14.750060081481934
    5. 'input' → logprob: -15.000060081481934
    6. '  ' → logprob: -16.250059127807617
    7. '2' → logprob: -16.750059127807617
    8. '
' → logprob: -16.750059127807617
    9. ' -' → logprob: -17.312559127807617
    10. '...' → logprob: -17.625059127807617

Token 222: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. '2' → logprob: -16.12501335144043
    4. '   ' → logprob: -16.12501335144043
    5. '
' → logprob: -16.62501335144043
    6. 'input' → logprob: -17.50001335144043
    7. ' ' → logprob: -17.75001335144043
    8. '  ' → logprob: -17.93751335144043
    9. '...' → logprob: -18.18751335144043
    10. '１' → logprob: -18.75001335144043

Token 223: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12547048926353455
    2. 'result' → logprob: -2.6254703998565674
    3. '*' → logprob: -4.0004706382751465
    4. '+' → logprob: -5.1254706382751465
    5. 'if' → logprob: -5.2504706382751465
    6. ' if' → logprob: -5.7504706382751465
    7. ' *' → logprob: -5.8754706382751465
    8. ' result' → logprob: -6.0004706382751465
    9. ':' → logprob: -6.3754706382751465
    10. 'param' → logprob: -6.5004706382751465

Token 224: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39392369985580444
    2. '   ' → logprob: -1.2689237594604492
    3. '<|end|>' → logprob: -4.268923759460449
    4. '*' → logprob: -4.643923759460449
    5. '+' → logprob: -5.393923759460449
    6. ' ' → logprob: -5.893923759460449
    7. ':' → logprob: -6.143923759460449
    8. ' *' → logprob: -6.143923759460449
    9. 'result' → logprob: -6.393923759460449
    10. ' if' → logprob: -6.393923759460449

Token 225: ' add' (ID: 1147)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0895823240280151
    2. 'comb' → logprob: -1.3395823240280151
    3. 'param' → logprob: -2.2145824432373047
    4. 'if' → logprob: -2.2145824432373047
    5. 'temp' → logprob: -3.0895824432373047
    6. 'numer' → logprob: -3.3395824432373047
    7. 'com' → logprob: -3.4645824432373047
    8. 'term' → logprob: -3.7145824432373047
    9. 'cur' → logprob: -4.339582443237305
    10. 'num' → logprob: -4.714582443237305

Token 226: '_term' (ID: 41867)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -1.4053215980529785
    2. 'on' → logprob: -1.7803215980529785
    3. 'ition' → logprob: -2.1553215980529785
    4. '_val' → logprob: -2.2803215980529785
    5. '_value' → logprob: -2.5303215980529785
    6. ' =' → logprob: -3.1553215980529785
    7. 'ed' → logprob: -3.1553215980529785
    8. '=' → logprob: -3.2803215980529785
    9. 'result' → logprob: -3.5303215980529785
    10. 'itional' → logprob: -3.5303215980529785

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023163497447968
    2. ' =' → logprob: -1.910231590270996
    3. '   ' → logprob: -12.410231590270996
    4. ' ' → logprob: -14.160231590270996
    5. ' =(' → logprob: -14.285231590270996
    6. '=(' → logprob: -14.535231590270996
    7. 'if' → logprob: -15.160231590270996
    8. '  ' → logprob: -15.535231590270996
    9. '=
' → logprob: -15.785231590270996
    10. '=((' → logprob: -16.035232543945312

Token 228: ' (' (ID: 350)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.00839187391102314
    2. ' factorial' → logprob: -5.383391857147217
    3. '(f' → logprob: -5.883391857147217
    4. 'fact' → logprob: -7.508391857147217
    5. '(' → logprob: -9.133392333984375
    6. '(
' → logprob: -9.758392333984375
    7. '((' → logprob: -9.758392333984375
    8. ' (' → logprob: -10.133392333984375
    9. ' factor' → logprob: -10.383392333984375
    10. 'comb' → logprob: -10.383392333984375

Token 229: 'input' (ID: 2586)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.012765913270413876
    2. ' factorial' → logprob: -4.387765884399414
    3. 'fact' → logprob: -9.387765884399414
    4. ' factor' → logprob: -9.762765884399414
    5. '(' → logprob: -10.137765884399414
    6. '   ' → logprob: -10.637765884399414
    7. ' (' → logprob: -11.512765884399414
    8. ' ' → logprob: -12.012765884399414
    9. '(
' → logprob: -12.137765884399414
    10. 'comb' → logprob: -12.137765884399414

Token 230: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.026208793744444847
    2. '_n' → logprob: -3.7762088775634766
    3. '_b' → logprob: -5.901208877563477
    4. 'a' → logprob: -8.651208877563477
    5. '_k' → logprob: -11.026208877563477
    6. '_c' → logprob: -11.151208877563477
    7. 'n' → logprob: -12.526208877563477
    8. '_' → logprob: -13.651208877563477
    9. '   ' → logprob: -13.651208877563477
    10. ')' → logprob: -14.026208877563477

Token 231: ' -' (ID: 533)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5450893640518188
    2. '+' → logprob: -1.0450893640518188
    3. ' *' → logprob: -3.2950892448425293
    4. '*' → logprob: -3.7950892448425293
    5. ' -' → logprob: -5.795089244842529
    6. ' ' → logprob: -6.670089244842529
    7. '+
' → logprob: -6.920089244842529
    8. ')' → logprob: -7.045089244842529
    9. '-' → logprob: -7.545089244842529
    10. ' +
' → logprob: -7.670089244842529

Token 232: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.4128008782863617
    2. '1' → logprob: -1.662800908088684
    3. 'param' → logprob: -2.6628007888793945
    4. '+' → logprob: -3.1628007888793945
    5. ' cur' → logprob: -4.9128007888793945
    6. ' +' → logprob: -5.0378007888793945
    7. 'add' → logprob: -5.4128007888793945
    8. 'input' → logprob: -5.6628007888793945
    9. 'loop' → logprob: -5.7878007888793945
    10. ' ' → logprob: -5.9128007888793945

Token 233: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -2.696889623621246e-06
    2. ')' → logprob: -13.75000286102295
    3. 'k' → logprob: -15.25000286102295
    4. '_' → logprob: -15.62500286102295
    5. '_a' → logprob: -15.75000286102295
    6. '+k' → logprob: -15.75000286102295
    7. '_index' → logprob: -16.250001907348633
    8. '_i' → logprob: -16.375001907348633
    9. '_q' → logprob: -16.375001907348633
    10. '_x' → logprob: -16.375001907348633

Token 234: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4916286766529083
    2. ' +' → logprob: -1.491628646850586
    3. '+' → logprob: -1.866628646850586
    4. ' )' → logprob: -5.116628646850586
    5. ')*' → logprob: -7.241628646850586
    6. '*' → logprob: -7.616628646850586
    7. ' *' → logprob: -7.991628646850586
    8. '   ' → logprob: -8.116628646850586
    9. ' +
' → logprob: -8.366628646850586
    10. '-' → logprob: -8.991628646850586

Token 235: ' \
' (ID: 6814)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08388011157512665
    2. '*' → logprob: -2.9588801860809326
    3. '+' → logprob: -3.9588801860809326
    4. ' +' → logprob: -5.4588799476623535
    5. ')' → logprob: -5.7088799476623535
    6. '   ' → logprob: -6.5838799476623535
    7. ' ' → logprob: -9.208880424499512
    8. ' *
' → logprob: -9.333880424499512
    9. ')*' → logprob: -9.458880424499512
    10. ',' → logprob: -10.083880424499512

Token 236: '       ' (ID: 309)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4701465964317322
    2. '*' → logprob: -1.095146656036377
    3. '+' → logprob: -3.720146656036377
    4. ')' → logprob: -5.220146656036377
    5. '   ' → logprob: -5.220146656036377
    6. ' +' → logprob: -5.470146656036377
    7. ' ' → logprob: -7.970146656036377
    8. '*
' → logprob: -8.720146179199219
    9. '    ' → logprob: -8.720146179199219
    10. ',' → logprob: -9.095146179199219

Token 237: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' (adapté à ' *') → logprob: -0.7140668630599976
    2. ' *' → logprob: -0.7140668630599976
    3. '+' → logprob: -4.339066982269287
    4. ')' → logprob: -6.089066982269287
    5. '   ' → logprob: -6.089066982269287
    6. ' +' → logprob: -6.214066982269287
    7. ' ' → logprob: -8.339066505432129
    8. '*
' → logprob: -8.714066505432129
    9. '    ' → logprob: -8.964066505432129
    10. '*(' → logprob: -9.089066505432129

Token 238: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.36865633726119995
    2. ' factorial' → logprob: -1.2436563968658447
    3. 'pow' → logprob: -4.243656158447266
    4. 'param' → logprob: -5.993656158447266
    5. 'fact' → logprob: -7.118656158447266
    6. ' (' → logprob: -7.118656158447266
    7. ' pow' → logprob: -8.118656158447266
    8. 'inverse' → logprob: -8.493656158447266
    9. ' factor' → logprob: -8.618656158447266
    10. '(' → logprob: -8.993656158447266

Token 239: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.0280383548888494e-06
    2. '_factor' → logprob: -14.250000953674316
    3. '_acc' → logprob: -16.500001907348633
    4. 'List' → logprob: -16.500001907348633
    5. '[_' → logprob: -16.875001907348633
    6. 'list' → logprob: -17.000001907348633
    7. '[' → logprob: -18.250001907348633
    8. '_lst' → logprob: -18.500001907348633
    9. '_List' → logprob: -18.500001907348633
    10. '_LIST' → logprob: -18.750001907348633

Token 240: '[input' (ID: 157156)
  Prédit: '[param'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[param' → logprob: -0.5236368775367737
    2. '[input' → logprob: -0.8986368775367737
    3. '[' → logprob: -8.023636817932129
    4. 'param' → logprob: -8.898636817932129
    5. 'input' → logprob: -10.523636817932129
    6. '[
' → logprob: -12.523636817932129
    7. '[n' → logprob: -12.648636817932129
    8. '[cur' → logprob: -12.773636817932129
    9. '[(' → logprob: -13.148636817932129
    10. '(param' → logprob: -13.523636817932129

Token 241: '_b' (ID: 1535)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.00075125927105546
    2. '_a' → logprob: -7.875751495361328
    3. '_b' → logprob: -8.000751495361328
    4. '_k' → logprob: -10.875751495361328
    5. 'n' → logprob: -11.250751495361328
    6. 'a' → logprob: -12.750751495361328
    7. 'b' → logprob: -14.250751495361328
    8. '_' → logprob: -15.750751495361328
    9. '-' → logprob: -16.750751495361328
    10. '_c' → logprob: -17.625751495361328

Token 242: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0012808336177840829
    2. ']%' → logprob: -7.626280784606934
    3. '+' → logprob: -8.376280784606934
    4. ' -' → logprob: -8.626280784606934
    5. '-' → logprob: -9.001280784606934
    6. ']
' → logprob: -9.251280784606934
    7. ']*' → logprob: -9.876280784606934
    8. ' ]' → logprob: -10.001280784606934
    9. '-cur' → logprob: -10.376280784606934
    10. ' +' → logprob: -11.876280784606934

Token 243: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.28583547472953796
    2. 'input' → logprob: -1.4108355045318604
    3. '1' → logprob: -5.785835266113281
    4. ' cur' → logprob: -7.535835266113281
    5. ' input' → logprob: -7.910835266113281
    6. 'param' → logprob: -8.160835266113281
    7. '-cur' → logprob: -8.910835266113281
    8. ' ' → logprob: -9.160835266113281
    9. '   ' → logprob: -10.285835266113281
    10. '
' → logprob: -10.410835266113281

Token 244: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0001999642699956894
    2. 'k' → logprob: -8.875200271606445
    3. '_a' → logprob: -10.000200271606445
    4. '_n' → logprob: -11.625200271606445
    5. 'a' → logprob: -13.375200271606445
    6. '-' → logprob: -14.125200271606445
    7. '```' → logprob: -14.125200271606445
    8. '-k' → logprob: -14.375200271606445
    9. '_b' → logprob: -14.625200271606445
    10. '_index' → logprob: -14.875200271606445

Token 245: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019569287076592445
    2. ']%' → logprob: -4.019569396972656
    3. '+' → logprob: -7.019569396972656
    4. ']
' → logprob: -7.769569396972656
    5. ' ]' → logprob: -10.269569396972656
    6. '%' → logprob: -10.769569396972656
    7. '-' → logprob: -10.894569396972656
    8. '   ' → logprob: -11.769569396972656
    9. ' +' → logprob: -12.144569396972656
    10. ']

' → logprob: -12.769569396972656

Token 246: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0022573103196918964
    2. ' ' → logprob: -6.252257347106934
    3. '0' → logprob: -9.127257347106934
    4. 'input' → logprob: -9.502257347106934
    5. ']' → logprob: -9.627257347106934
    6. '2' → logprob: -9.752257347106934
    7. '-' → logprob: -12.002257347106934
    8. '(' → logprob: -12.627257347106934
    9. ' input' → logprob: -13.127257347106934
    10. '   ' → logprob: -13.252257347106934

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. '2' → logprob: -13.250003814697266
    3. ' ' → logprob: -13.375003814697266
    4. 'input' → logprob: -15.500003814697266
    5. '   ' → logprob: -15.500003814697266
    6. '0' → logprob: -17.875003814697266
    7. ']' → logprob: -18.000003814697266
    8. '```' → logprob: -18.750003814697266
    9. '(' → logprob: -19.125003814697266
    10. '-' → logprob: -19.500003814697266

Token 248: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009905184619128704
    2. ']%' → logprob: -4.6349053382873535
    3. ']
' → logprob: -9.134904861450195
    4. ' ]' → logprob: -11.009904861450195
    5. '+' → logprob: -11.009904861450195
    6. '   ' → logprob: -13.009904861450195
    7. '%' → logprob: -13.759904861450195
    8. ']

' → logprob: -14.009904861450195
    9. '-' → logprob: -14.509904861450195
    10. '```' → logprob: -14.634904861450195

Token 249: ' \
' (ID: 6814)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2553066313266754
    2. ' %' → logprob: -1.505306601524353
    3. '   ' → logprob: -6.630306720733643
    4. '<|end|>' → logprob: -7.005306720733643
    5. ')' → logprob: -7.755306720733643
    6. '*' → logprob: -8.380306243896484
    7. ' *' → logprob: -8.505306243896484
    8. '       ' → logprob: -8.880306243896484
    9. ')%' → logprob: -9.630306243896484
    10. '    ' → logprob: -11.380306243896484

Token 250: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.053167618811130524
    2. ' %' → logprob: -3.5531675815582275
    3. '*' → logprob: -4.303167819976807
    4. ' *' → logprob: -4.678167819976807
    5. '   ' → logprob: -8.428167343139648
    6. '       ' → logprob: -10.178167343139648
    7. ')' → logprob: -10.178167343139648
    8. '<|end|>' → logprob: -12.178167343139648
    9. '    ' → logprob: -12.553167343139648
    10. ' ' → logprob: -12.678167343139648

Token 251: ' *' (ID: 425)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.05110480263829231
    2. '*' (adapté à ' *') → logprob: -3.176104784011841
    3. ' %' → logprob: -5.17610502243042
    4. ' *' → logprob: -6.05110502243042
    5. ')' → logprob: -10.426104545593262
    6. '   ' → logprob: -10.801104545593262
    7. ' ' → logprob: -12.801104545593262
    8. ' ' → logprob: -13.176104545593262
    9. '=' → logprob: -13.426104545593262
    10. '<|end|>' → logprob: -13.801104545593262

Token 252: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.006409700494259596
    2. ' inverse' → logprob: -5.381409645080566
    3. 'factor' → logprob: -6.631409645080566
    4. '   ' → logprob: -8.381409645080566
    5. ' factorial' → logprob: -9.006409645080566
    6. '       ' → logprob: -10.756409645080566
    7. 'in' → logprob: -10.881409645080566
    8. '(in' → logprob: -11.006409645080566
    9. 'pow' → logprob: -11.631409645080566
    10. '  ' → logprob: -11.881409645080566

Token 253: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -8.65707261255011e-06
    2. 'list' → logprob: -11.875008583068848
    3. '[_' → logprob: -14.000008583068848
    4. '[' → logprob: -15.125008583068848
    5. '[input' → logprob: -15.750008583068848
    6. '```' → logprob: -16.000009536743164
    7. 'List' → logprob: -16.125009536743164
    8. '[cur' → logprob: -16.250009536743164
    9. '[
' → logprob: -17.500009536743164
    10. '[in' → logprob: -18.000009536743164

Token 254: '[input' (ID: 157156)
  Prédit: '[cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.2573610246181488
    2. '[input' → logprob: -2.0073609352111816
    3. '[param' → logprob: -2.3823609352111816
    4. '[' → logprob: -9.38236141204834
    5. 'input' → logprob: -10.13236141204834
    6. 'cur' → logprob: -10.63236141204834
    7. '[c' → logprob: -11.25736141204834
    8. 'param' → logprob: -11.25736141204834
    9. '[prop' → logprob: -11.88236141204834
    10. '[(' → logprob: -12.13236141204834

Token 255: '_b' (ID: 1535)
  Prédit: '[cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.031173015013337135
    2. '[b' → logprob: -4.031173229217529
    3. '[input' → logprob: -5.031173229217529
    4. 'b' → logprob: -5.656173229217529
    5. 'cur' → logprob: -6.531173229217529
    6. '[k' → logprob: -7.156173229217529
    7. '[' → logprob: -8.406172752380371
    8. '_b' → logprob: -8.656172752380371
    9. '[param' → logprob: -9.281172752380371
    10. '[a' → logprob: -9.531172752380371

Token 256: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9706133008003235
    2. '-cur' → logprob: -1.0956132411956787
    3. '-' → logprob: -1.5956132411956787
    4. '[cur' → logprob: -2.5956132411956787
    5. '[-' → logprob: -5.970613479614258
    6. ' -' → logprob: -6.095613479614258
    7. '[' → logprob: -6.345613479614258
    8. ' +' → logprob: -6.720613479614258
    9. '-k' → logprob: -7.095613479614258
    10. '-input' → logprob: -9.220613479614258

Token 257: ' \
' (ID: 6814)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.14088356494903564
    2. '   ' → logprob: -3.140883445739746
    3. ' *' → logprob: -3.265883445739746
    4. '<|end|>' → logprob: -3.640883445739746
    5. '       ' → logprob: -4.515883445739746
    6. '%' → logprob: -4.515883445739746
    7. ')' → logprob: -7.390883445739746
    8. '	' → logprob: -8.015883445739746
    9. '<|end|>' → logprob: -8.265883445739746
    10. '  ' → logprob: -8.765883445739746

Token 258: '       ' (ID: 309)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5513415932655334
    2. '       ' → logprob: -0.9263415932655334
    3. ' *' → logprob: -3.9263415336608887
    4. '   ' → logprob: -4.926341533660889
    5. '	' → logprob: -8.676342010498047
    6. '%' → logprob: -9.176342010498047
    7. ' ' → logprob: -9.301342010498047
    8. '<|end|>' → logprob: -9.301342010498047
    9. '<|end|>' → logprob: -9.426342010498047
    10. '    ' → logprob: -9.926342010498047

Token 259: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' (adapté à ' *') → logprob: -0.003898988477885723
    2. '       ' → logprob: -5.878899097442627
    3. ' *' → logprob: -6.878899097442627
    4. '   ' → logprob: -9.878898620605469
    5. ' ' → logprob: -12.503898620605469
    6. '	' → logprob: -13.628898620605469
    7. '%' → logprob: -13.628898620605469
    8. '\
' → logprob: -13.753898620605469
    9. '**' → logprob: -13.878898620605469
    10. ' ' → logprob: -14.503898620605469

Token 260: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.051049407571554184
    2. 'factor' → logprob: -3.4260494709014893
    3. ' inverse' → logprob: -4.30104923248291
    4. ' factorial' → logprob: -5.80104923248291
    5. '   ' → logprob: -7.92604923248291
    6. ' ' → logprob: -10.17604923248291
    7. '  ' → logprob: -10.30104923248291
    8. 'inv' → logprob: -10.42604923248291
    9. 'in' → logprob: -10.42604923248291
    10. 'pow' → logprob: -10.42604923248291

Token 261: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.054500666621607e-06
    2. '[_' → logprob: -13.37500286102295
    3. '[input' → logprob: -14.12500286102295
    4. '[' → logprob: -15.25000286102295
    5. '[cur' → logprob: -15.75000286102295
    6. 'list' → logprob: -16.375003814697266
    7. 'List' → logprob: -16.375003814697266
    8. '```' → logprob: -17.375003814697266
    9. '[List' → logprob: -17.750003814697266
    10. '_LIST' → logprob: -17.875003814697266

Token 262: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.048712726682424545
    2. '[input' → logprob: -3.048712730407715
    3. 'input' → logprob: -9.673712730407715
    4. 'cur' → logprob: -10.298712730407715
    5. '[' → logprob: -11.173712730407715
    6. '[param' → logprob: -12.298712730407715
    7. '[k' → logprob: -13.548712730407715
    8. '[c' → logprob: -13.923712730407715
    9. '```' → logprob: -14.048712730407715
    10. '(cur' → logprob: -14.173712730407715

Token 263: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.0280383548888494e-06
    2. 'k' → logprob: -15.000000953674316
    3. '_b' → logprob: -15.500000953674316
    4. '_n' → logprob: -15.500000953674316
    5. '_a' → logprob: -15.875000953674316
    6. '_index' → logprob: -16.500001907348633
    7. '_q' → logprob: -18.375001907348633
    8. '_' → logprob: -18.625001907348633
    9. 'a' → logprob: -18.750001907348633
    10. '-k' → logprob: -19.125001907348633

Token 264: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1992948055267334
    2. '%' → logprob: -1.9492948055267334
    3. ')' → logprob: -3.6992948055267334
    4. ']%' → logprob: -4.5742950439453125
    5. '   ' → logprob: -6.1992950439453125
    6. ')%' → logprob: -7.8242950439453125
    7. ' %' → logprob: -7.9492950439453125
    8. ']
' → logprob: -8.949295043945312
    9. ' ]' → logprob: -9.074295043945312
    10. '       ' → logprob: -9.574295043945312

Token 265: ' \
' (ID: 6814)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3141363859176636
    2. '   ' → logprob: -2.064136505126953
    3. 'result' → logprob: -2.189136505126953
    4. ' %' → logprob: -4.189136505126953
    5. ')' → logprob: -4.439136505126953
    6. 'add' → logprob: -6.689136505126953
    7. ')%' → logprob: -7.189136505126953
    8. ' result' → logprob: -7.314136505126953
    9. '*' → logprob: -7.939136505126953
    10. 'mod' → logprob: -9.314136505126953

Token 266: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0021563300397247076
    2. ' %' → logprob: -6.2521562576293945
    3. '*' → logprob: -8.627156257629395
    4. '   ' → logprob: -10.627156257629395
    5. ')' → logprob: -11.127156257629395
    6. ')%' → logprob: -12.627156257629395
    7. ' *' → logprob: -13.252156257629395
    8. '       ' → logprob: -13.627156257629395
    9. '	' → logprob: -13.877156257629395
    10. '
' → logprob: -14.127156257629395

Token 267: ' *' (ID: 425)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.01084111724048853
    2. '*' (adapté à ' *') → logprob: -4.760840892791748
    3. ' %' → logprob: -6.135840892791748
    4. ' *' → logprob: -10.510841369628906
    5. '       ' → logprob: -11.135841369628906
    6. '   ' → logprob: -11.760841369628906
    7. ')' → logprob: -12.010841369628906
    8. 'input' → logprob: -13.510841369628906
    9. ')%' → logprob: -14.385841369628906
    10. '*(' → logprob: -15.385841369628906

Token 268: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.009178170002996922
    2. 'pow' → logprob: -5.384178161621094
    3. ' factorial' → logprob: -5.884178161621094
    4. '   ' → logprob: -6.634178161621094
    5. 'fact' → logprob: -8.509178161621094
    6. '       ' → logprob: -9.884178161621094
    7. '  ' → logprob: -10.384178161621094
    8. '(' → logprob: -10.509178161621094
    9. ' factor' → logprob: -10.884178161621094
    10. '    ' → logprob: -10.884178161621094

Token 269: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.002201644005253911
    2. '_acc' → logprob: -6.127201557159424
    3. 'list' → logprob: -12.502202033996582
    4. 'acc' → logprob: -12.752202033996582
    5. '_a' → logprob: -12.752202033996582
    6. 'List' → logprob: -13.252202033996582
    7. '_' → logprob: -13.752202033996582
    8. '[' → logprob: -14.752202033996582
    9. '_len' → logprob: -14.752202033996582
    10. '[_' → logprob: -14.877202033996582

Token 270: '[param' (ID: 154155)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.11406375467777252
    2. '[param' → logprob: -2.2390637397766113
    3. '[' → logprob: -7.239063739776611
    4. '[cur' → logprob: -7.739063739776611
    5. '[n' → logprob: -10.61406421661377
    6. '(input' → logprob: -11.36406421661377
    7. 'input' → logprob: -11.73906421661377
    8. 'param' → logprob: -11.86406421661377
    9. '[a' → logprob: -12.11406421661377
    10. '[(' → logprob: -12.23906421661377

Token 271: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.007881649769842625
    2. 'q' → logprob: -5.5078816413879395
    3. '_n' → logprob: -5.7578816413879395
    4. '_a' → logprob: -7.5078816413879395
    5. '_b' → logprob: -10.382882118225098
    6. 'param' → logprob: -10.757882118225098
    7. 'a' → logprob: -11.007882118225098
    8. 'n' → logprob: -12.007882118225098
    9. '_k' → logprob: -12.132882118225098
    10. '_param' → logprob: -13.507882118225098

Token 272: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005966953933238983
    2. '   ' → logprob: -6.255967140197754
    3. '-' → logprob: -6.880967140197754
    4. ')' → logprob: -7.130967140197754
    5. '<|end|>' → logprob: -7.755967140197754
    6. '       ' → logprob: -8.130967140197754
    7. ' ]' → logprob: -8.255967140197754
    8. '<|end|>' → logprob: -8.380967140197754
    9. '%' → logprob: -8.505967140197754
    10. '    ' → logprob: -8.755967140197754

Token 273: ' input' (ID: 3422)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.2933950126171112
    2. 'param' → logprob: -2.0433950424194336
    3. 'input' → logprob: -2.1683950424194336
    4. ' cur' → logprob: -5.293395042419434
    5. ' input' → logprob: -5.668395042419434
    6. ' param' → logprob: -6.543395042419434
    7. '1' → logprob: -9.293395042419434
    8. ' ' → logprob: -9.668395042419434
    9. '   ' → logprob: -10.168395042419434
    10. 'loop' → logprob: -10.168395042419434

Token 274: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.019075380638241768
    2. 'a' → logprob: -4.894075393676758
    3. '_n' → logprob: -5.394075393676758
    4. '_q' → logprob: -5.644075393676758
    5. '_b' → logprob: -5.894075393676758
    6. 'q' → logprob: -7.644075393676758
    7. 'n' → logprob: -10.644075393676758
    8. 'b' → logprob: -10.894075393676758
    9. '```' → logprob: -11.144075393676758
    10. '_k' → logprob: -11.644075393676758

Token 275: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.037223946303129196
    2. '+' → logprob: -3.537224054336548
    3. '-' → logprob: -5.537223815917969
    4. ' +' → logprob: -6.162223815917969
    5. ' -' → logprob: -7.412223815917969
    6. '   ' → logprob: -7.662223815917969
    7. ' ]' → logprob: -8.662223815917969
    8. '+k' → logprob: -11.037223815917969
    9. ']%' → logprob: -11.412223815917969
    10. ' ' → logprob: -11.662223815917969

Token 276: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.5702666640281677
    2. '1' → logprob: -1.6952667236328125
    3. 'input' → logprob: -1.6952667236328125
    4. '0' → logprob: -3.9452667236328125
    5. ' cur' → logprob: -4.0702667236328125
    6. ' input' → logprob: -4.4452667236328125
    7. ' ' → logprob: -4.9452667236328125
    8. 'param' → logprob: -5.0702667236328125
    9. '(input' → logprob: -6.4452667236328125
    10. '(cur' → logprob: -7.1952667236328125

Token 277: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.007184530608355999
    2. '_a' → logprob: -5.1321845054626465
    3. 'k' → logprob: -6.7571845054626465
    4. 'a' → logprob: -9.507184982299805
    5. '_n' → logprob: -12.757184982299805
    6. 'K' → logprob: -13.007184982299805
    7. 'term' → logprob: -13.132184982299805
    8. '_b' → logprob: -13.257184982299805
    9. '_term' → logprob: -13.257184982299805
    10. '_j' → logprob: -13.507184982299805

Token 278: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00046689616283401847
    2. '   ' → logprob: -8.250467300415039
    3. ' ]' → logprob: -9.250467300415039
    4. ']%' → logprob: -10.250467300415039
    5. ']
' → logprob: -10.625467300415039
    6. '-' → logprob: -10.875467300415039
    7. '%' → logprob: -11.375467300415039
    8. ')' → logprob: -12.375467300415039
    9. '+' → logprob: -13.125467300415039
    10. '\
' → logprob: -13.250467300415039

Token 279: ' \
' (ID: 6814)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09348446875810623
    2. '*' → logprob: -2.843484401702881
    3. '%' → logprob: -4.093484401702881
    4. 'result' → logprob: -5.343484401702881
    5. ' *' → logprob: -5.593484401702881
    6. ')' → logprob: -6.718484401702881
    7. '       ' → logprob: -6.968484401702881
    8. '\
' → logprob: -7.093484401702881
    9. '<|end|>' → logprob: -7.343484401702881
    10. 'add' → logprob: -8.093484878540039

Token 280: '       ' (ID: 309)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.03757614269852638
    2. '   ' → logprob: -3.912576198577881
    3. '       ' → logprob: -4.287576198577881
    4. ' *' → logprob: -5.912576198577881
    5. ' ' → logprob: -8.537575721740723
    6. '%' → logprob: -9.287575721740723
    7. '  ' → logprob: -10.662575721740723
    8. '<|end|>' → logprob: -10.662575721740723
    9. '    ' → logprob: -11.162575721740723
    10. '	' → logprob: -11.412575721740723

Token 281: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' (adapté à ' *') → logprob: -0.00032473751343786716
    2. ' *' → logprob: -8.250325202941895
    3. '       ' → logprob: -10.375325202941895
    4. '   ' → logprob: -10.625325202941895
    5. 'inverse' → logprob: -12.750325202941895
    6. ' ' → logprob: -13.125325202941895
    7. '\
' → logprob: -14.125325202941895
    8. '```' → logprob: -14.875325202941895
    9. '    ' → logprob: -15.250325202941895
    10. '*
' → logprob: -15.500325202941895

Token 282: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.0032137224916368723
    2. ' inverse' → logprob: -5.878213882446289
    3. '   ' → logprob: -8.253213882446289
    4. 'pow' → logprob: -9.878213882446289
    5. '    ' → logprob: -11.253213882446289
    6. '       ' → logprob: -11.253213882446289
    7. '  ' → logprob: -11.503213882446289
    8. '\
' → logprob: -11.503213882446289
    9. '.inverse' → logprob: -11.753213882446289
    10. '*' → logprob: -11.753213882446289

Token 283: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.491498531133402e-06
    2. 'list' → logprob: -11.750009536743164
    3. 'inverse' → logprob: -13.625009536743164
    4. 'List' → logprob: -14.875009536743164
    5. '_lists' → logprob: -17.750009536743164
    6. '[' → logprob: -17.875009536743164
    7. '[
' → logprob: -17.875009536743164
    8. '```' → logprob: -18.500009536743164
    9. '_LIST' → logprob: -19.000009536743164
    10. '-list' → logprob: -19.375009536743164

Token 284: '[param' (ID: 154155)
  Prédit: '[param'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[param' → logprob: -0.0013400046154856682
    2. '[input' → logprob: -6.626339912414551
    3. 'param' → logprob: -11.62633991241455
    4. 'input' → logprob: -13.00133991241455
    5. '[cur' → logprob: -13.62633991241455
    6. '[parent' → logprob: -15.12633991241455
    7. '(param' → logprob: -15.50133991241455
    8. '	param' → logprob: -15.62633991241455
    9. '@param' → logprob: -15.62633991241455
    10. '   ' → logprob: -15.75133991241455

Token 285: '_q' (ID: 19384)
  Prédit: '_q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_q' → logprob: -0.0005268189124763012
    2. '_a' → logprob: -7.6255269050598145
    3. 'q' → logprob: -10.375526428222656
    4. 'a' → logprob: -12.125526428222656
    5. '_k' → logprob: -14.375526428222656
    6. '[a' → logprob: -15.375526428222656
    7. '_b' → logprob: -15.375526428222656
    8. '[q' → logprob: -15.625526428222656
    9. ''q' → logprob: -16.000526428222656
    10. '_g' → logprob: -16.125526428222656

Token 286: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.739441454410553
    2. '-' → logprob: -1.1144413948059082
    3. '+' → logprob: -1.7394413948059082
    4. '-input' → logprob: -4.239441394805908
    5. ' -' → logprob: -5.739441394805908
    6. '-cur' → logprob: -8.239441871643066
    7. '[input' → logprob: -8.239441871643066
    8. ' +' → logprob: -8.739441871643066
    9. '+]' → logprob: -9.364441871643066
    10. '[' → logprob: -9.489441871643066

Token 287: ' \
' (ID: 6814)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8033666014671326
    2. ' *' → logprob: -1.3033666610717773
    3. '   ' → logprob: -1.5533666610717773
    4. '       ' → logprob: -2.8033666610717773
    5. '	' → logprob: -5.928366661071777
    6. '<|end|>' → logprob: -6.178366661071777
    7. '\
' → logprob: -6.678366661071777
    8. ' ' → logprob: -7.178366661071777
    9. ' ' → logprob: -7.303366661071777
    10. '```' → logprob: -8.303366661071777

Token 288: '       ' (ID: 309)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.030059630051255226
    2. '   ' → logprob: -3.905059576034546
    3. '       ' → logprob: -4.905059814453125
    4. ' *' → logprob: -6.280059814453125
    5. ' ' → logprob: -8.780059814453125
    6. '  ' → logprob: -11.155059814453125
    7. ' ' → logprob: -12.280059814453125
    8. '	' → logprob: -12.280059814453125
    9. '```' → logprob: -12.905059814453125
    10. '    ' → logprob: -13.155059814453125

Token 289: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' (adapté à ' *') → logprob: -7.465036105713807e-06
    2. ' *' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.000007629394531
    4. '\
' → logprob: -17.25000762939453
    5. ' ' → logprob: -17.50000762939453
    6. '       ' → logprob: -17.75000762939453
    7. '*
' → logprob: -18.25000762939453
    8. '**' → logprob: -18.37500762939453
    9. '*out' → logprob: -18.50000762939453
    10. '```' → logprob: -18.62500762939453

Token 290: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.0010917582549154758
    2. 'factor' → logprob: -7.501091957092285
    3. ' inverse' → logprob: -7.626091957092285
    4. '
' → logprob: -11.126091957092285
    5. ' factorial' → logprob: -11.376091957092285
    6. '   ' → logprob: -11.751091957092285
    7. '\
' → logprob: -12.501091957092285
    8. '.inverse' → logprob: -12.876091957092285
    9. '```' → logprob: -13.751091957092285
    10. '  ' → logprob: -13.876091957092285

Token 291: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0040801819413900375
    2. 'list' → logprob: -5.504080295562744
    3. 'List' → logprob: -13.504079818725586
    4. '[' → logprob: -15.754079818725586
    5. 'inverse' → logprob: -15.754079818725586
    6. '[param' → logprob: -16.879079818725586
    7. '[in' → logprob: -17.629079818725586
    8. '[input' → logprob: -17.629079818725586
    9. '```' → logprob: -18.004079818725586
    10. 'a' → logprob: -18.004079818725586

Token 292: '[input' (ID: 157156)
  Prédit: '[input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.005261510610580444
    2. '[param' → logprob: -5.255261421203613
    3. 'input' → logprob: -10.630261421203613
    4. '[' → logprob: -13.005261421203613
    5. '(input' → logprob: -14.755261421203613
    6. '[ip' → logprob: -15.505261421203613
    7. '   ' → logprob: -15.880261421203613
    8. '```' → logprob: -16.13026237487793
    9. 'param' → logprob: -16.25526237487793
    10. '<input' → logprob: -16.63026237487793

Token 293: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00026765360962599516
    2. 'a' → logprob: -8.25026798248291
    3. '_n' → logprob: -12.37526798248291
    4. '_b' → logprob: -13.62526798248291
    5. 'param' → logprob: -15.87526798248291
    6. '_k' → logprob: -16.375267028808594
    7. 'n' → logprob: -16.500267028808594
    8. '­a' → logprob: -16.625267028808594
    9. '	a' → logprob: -16.750267028808594
    10. 'A' → logprob: -17.000267028808594

Token 294: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7350831031799316
    2. '-cur' → logprob: -0.7350831031799316
    3. ' -' → logprob: -3.2350831031799316
    4. '[cur' → logprob: -6.610083103179932
    5. '-k' → logprob: -8.110082626342773
    6. ' ' → logprob: -11.360082626342773
    7. '   ' → logprob: -11.610082626342773
    8. '[' → logprob: -11.610082626342773
    9. '-input' → logprob: -11.735082626342773
    10. '  ' → logprob: -11.860082626342773

Token 295: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -2.7848862373502925e-05
    2. ' cur' → logprob: -10.500027656555176
    3. '(cur' → logprob: -15.250027656555176
    4. '-cur' → logprob: -18.375028610229492
    5. '_cur' → logprob: -18.500028610229492
    6. '[cur' → logprob: -18.750028610229492
    7. '	cur' → logprob: -19.375028610229492
    8. 'k' → logprob: -20.875028610229492
    9. '.cur' → logprob: -21.375028610229492
    10. '   ' → logprob: -21.625028610229492

Token 296: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0003444024478085339
    2. 'k' → logprob: -8.125344276428223
    3. '_a' → logprob: -10.375344276428223
    4. 'a' → logprob: -11.125344276428223
    5. 'cur' → logprob: -13.250344276428223
    6. 'K' → logprob: -15.625344276428223
    7. 'input' → logprob: -15.750344276428223
    8. '```' → logprob: -16.50034523010254
    9. '-k' → logprob: -17.00034523010254
    10. '
' → logprob: -17.12534523010254

Token 297: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026798215694725513
    2. ']' → logprob: -6.127679824829102
    3. ')
' → logprob: -8.252679824829102
    4. ' )' → logprob: -9.627679824829102
    5. '])' → logprob: -9.752679824829102
    6. '   ' → logprob: -10.127679824829102
    7. '*' → logprob: -11.252679824829102
    8. ')*' → logprob: -11.627679824829102
    9. '```' → logprob: -11.752679824829102
    10. '}' → logprob: -11.877679824829102

Token 298: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5910388231277466
    2. '   ' → logprob: -1.2160388231277466
    3. '%' → logprob: -2.716038703918457
    4. ')' → logprob: -3.341038703918457
    5. '+' → logprob: -3.591038703918457
    6. ' result' → logprob: -5.091038703918457
    7. ' %' → logprob: -5.341038703918457
    8. '<|end|>' → logprob: -6.091038703918457
    9. '```' → logprob: -6.841038703918457
    10. ' +' → logprob: -6.966038703918457

Token 299: ' result' (ID: 1534)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.17031723260879517
    2. ' %' → logprob: -2.6703171730041504
    3. 'result' (adapté à ' result') → logprob: -2.7953171730041504
    4. ')' → logprob: -4.17031717300415
    5. '   ' → logprob: -4.92031717300415
    6. '+' → logprob: -6.17031717300415
    7. ' result' → logprob: -7.29531717300415
    8. ')%' → logprob: -8.545317649841309
    9. ' ' → logprob: -8.795317649841309
    10. '%
' → logprob: -9.420317649841309

Token 300: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -9.968312951968983e-06
    2. '_' → logprob: -11.625009536743164
    3. '_add' → logprob: -14.875009536743164
    4. '_=' → logprob: -15.875009536743164
    5. '_s' → logprob: -16.000009536743164
    6. '_plus' → logprob: -16.500009536743164
    7. '+=' → logprob: -16.625009536743164
    8. '+' → logprob: -16.625009536743164
    9. '=' → logprob: -16.750009536743164
    10. '_sub' → logprob: -17.000009536743164

Token 301: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0156854297965765
    2. '=' → logprob: -4.765685558319092
    3. ' +=' → logprob: -5.390685558319092
    4. '%=' → logprob: -6.015685558319092
    5. ' =' → logprob: -11.015685081481934
    6. '+=(' → logprob: -11.265685081481934
    7. ' %=' → logprob: -12.015685081481934
    8. '+' → logprob: -12.265685081481934
    9. '%' → logprob: -12.890685081481934
    10. '   ' → logprob: -13.265685081481934

Token 302: ' (' (ID: 350)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00042221311014145613
    2. ' (' → logprob: -8.000422477722168
    3. '(' → logprob: -9.375422477722168
    4. '   ' → logprob: -13.500422477722168
    5. '[result' → logprob: -15.500422477722168
    6. '(res' → logprob: -16.12542152404785
    7. '(results' → logprob: -16.75042152404785
    8. 'result' → logprob: -17.37542152404785
    9. ' ' → logprob: -17.50042152404785
    10. '  ' → logprob: -17.75042152404785

Token 303: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -2.816093228830141e-06
    2. ' result' → logprob: -13.00000286102295
    3. '(result' → logprob: -14.50000286102295
    4. '
' → logprob: -17.875001907348633
    5. '   ' → logprob: -18.000001907348633
    6. '	result' → logprob: -20.875001907348633
    7. '[result' → logprob: -21.250001907348633
    8. '$result' → logprob: -21.750001907348633
    9. '```' → logprob: -22.500001907348633
    10. '=result' → logprob: -22.500001907348633

Token 304: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.125000953674316
    3. '_s' → logprob: -17.5
    4. '_add' → logprob: -17.625
    5. ' _' → logprob: -18.125
    6. '_SUM' → logprob: -18.25
    7. '+' → logprob: -18.375
    8. ')_' → logprob: -18.625
    9. 'Sum' → logprob: -18.75
    10. ')' → logprob: -19.0

Token 305: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.693147599697113
    2. ' +' → logprob: -0.693147599697113
    3. '+
' → logprob: -15.693147659301758
    4. ' +
' → logprob: -16.068147659301758
    5. '＋' → logprob: -16.318147659301758
    6. ' ' → logprob: -16.568147659301758
    7. ' plus' → logprob: -17.818147659301758
    8. ' +
' → logprob: -18.943147659301758
    9. '+=' → logprob: -19.318147659301758
    10. '+k' → logprob: -19.443147659301758

Token 306: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.2014182209968567
    2. 'add' → logprob: -1.701418161392212
    3. '(add' → logprob: -13.451417922973633
    4. '   ' → logprob: -13.701417922973633
    5. ' ' → logprob: -14.201417922973633
    6. 'int' → logprob: -14.576417922973633
    7. ' int' → logprob: -14.826417922973633
    8. ')add' → logprob: -15.326417922973633
    9. '	add' → logprob: -15.576417922973633
    10. '
' → logprob: -16.076417922973633

Token 307: '_term' (ID: 41867)
  Prédit: '_term'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_term' → logprob: -1.1472419600977446e-06
    2. '_' → logprob: -14.500000953674316
    3. '_token' → logprob: -14.500000953674316
    4. ' _' → logprob: -16.250001907348633
    5. '_TERM' → logprob: -18.000001907348633
    6. ')_' → logprob: -18.250001907348633
    7. '_terms' → logprob: -19.000001907348633
    8. '_terminal' → logprob: -19.125001907348633
    9. '_t' → logprob: -19.250001907348633
    10. '_
' → logprob: -19.500001907348633

Token 308: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014234843663871288
    2. ' )' → logprob: -4.264235019683838
    3. '%' → logprob: -10.63923454284668
    4. ' %' → logprob: -10.88923454284668
    5. ')%' → logprob: -10.88923454284668
    6. '   ' → logprob: -11.88923454284668
    7. ' ' → logprob: -13.88923454284668
    8. ' *' → logprob: -14.26423454284668
    9. ' ' → logprob: -14.38923454284668
    10. '*' → logprob: -14.76423454284668

Token 309: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.023254211992025375
    2. '%' → logprob: -3.773254156112671
    3. ' ' → logprob: -12.27325439453125
    4. ')' → logprob: -12.89825439453125
    5. ' ' → logprob: -14.89825439453125
    6. '%n' → logprob: -15.14825439453125
    7. '%c' → logprob: -15.39825439453125
    8. '%s' → logprob: -15.52325439453125
    9. '%d' → logprob: -16.14825439453125
    10. '   ' → logprob: -16.39825439453125

Token 310: ' modulo' (ID: 112372)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -8.661626634420827e-05
    2. ' modulo' → logprob: -9.625086784362793
    3. '998' → logprob: -11.000086784362793
    4. '(mod' → logprob: -13.250086784362793
    5. 'module' → logprob: -14.375086784362793
    6. '	mod' → logprob: -14.500086784362793
    7. 'Modulo' → logprob: -14.500086784362793
    8. 'modifier' → logprob: -15.250086784362793
    9. '```' → logprob: -16.625085830688477
    10. '
' → logprob: -17.000085830688477

Token 311: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09739729762077332
    2. ')' → logprob: -2.4723973274230957
    3. '*' → logprob: -5.597397327423096
    4. '+' → logprob: -7.222397327423096
    5. '#' → logprob: -7.222397327423096
    6. '<|end|>' → logprob: -7.222397327423096
    7. '(' → logprob: -7.597397327423096
    8. '%' → logprob: -7.972397327423096
    9. '   ' → logprob: -8.097396850585938
    10. '^' → logprob: -8.472396850585938

Token 312: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07579652965068817
    2. '<|end|>' → logprob: -3.450796604156494
    3. '+' → logprob: -4.075796604156494
    4. 'print' → logprob: -4.200796604156494
    5. ' ' → logprob: -6.325796604156494
    6. '(' → logprob: -6.700796604156494
    7. 'result' → logprob: -6.825796604156494
    8. '#' → logprob: -7.075796604156494
    9. '=' → logprob: -7.575796604156494
    10. '
' → logprob: -7.700796604156494

Token 313: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34881946444511414
    2. '(result' → logprob: -1.2238194942474365
    3. 'result' → logprob: -8.098819732666016
    4. '(
' → logprob: -10.223819732666016
    5. '('' → logprob: -11.973819732666016
    6. ' (' → logprob: -12.223819732666016
    7. '((' → logprob: -12.348819732666016
    8. '()' → logprob: -12.848819732666016
    9. '(sum' → logprob: -12.848819732666016
    10. '("("' → logprob: -12.848819732666016

Token 314: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.7697225252486533e-06
    2. '_s' → logprob: -12.750003814697266
    3. ')_' → logprob: -14.625003814697266
    4. ')' → logprob: -15.625003814697266
    5. '_)' → logprob: -16.750003814697266
    6. ' _' → logprob: -17.000003814697266
    7. '_' → logprob: -17.375003814697266
    8. '__' → logprob: -18.750003814697266
    9. 'sum' → logprob: -19.000003814697266
    10. '_score' → logprob: -19.000003814697266

Token 315: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.000763510703109e-05
    2. '+' → logprob: -11.125040054321289
    3. ' )' → logprob: -11.125040054321289
    4. '*' → logprob: -12.375040054321289
    5. '```' → logprob: -13.375040054321289
    6. ')
' → logprob: -14.250040054321289
    7. '%' → logprob: -14.500040054321289
    8. '**' → logprob: -14.625040054321289
    9. '<|end|>' → logprob: -14.750040054321289
    10. '*)' → logprob: -14.750040054321289

Token 316: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1897193193435669
    2. 'result' → logprob: -2.1897192001342773
    3. '(input' → logprob: -3.5647192001342773
    4. ' input' → logprob: -3.5647192001342773
    5. ' result' → logprob: -6.439719200134277
    6. '(result' → logprob: -6.689719200134277
    7. 'not' → logprob: -7.564719200134277
    8. 'loop' → logprob: -8.439719200134277
    9. ' (' → logprob: -8.564719200134277
    10. 'True' → logprob: -9.564719200134277

Token 317: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.18414157629013062
    2. '_n' → logprob: -1.8091416358947754
    3. '_b' → logprob: -5.434141635894775
    4. '_' → logprob: -11.434141159057617
    5. 'a' → logprob: -12.309141159057617
    6. '-_' → logprob: -13.559141159057617
    7. '_c' → logprob: -13.809141159057617
    8. 'n' → logprob: -14.684141159057617
    9. '```' → logprob: -14.684141159057617
    10. ' _' → logprob: -14.934141159057617

Token 318: ' else' (ID: 1203)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.31091296672821045
    2. '!=' → logprob: -2.0609130859375
    3. '>=' → logprob: -2.9359130859375
    4. ' >' → logprob: -3.4359130859375
    5. ' !=' → logprob: -3.6859130859375
    6. '<' → logprob: -4.8109130859375
    7. '-' → logprob: -5.1859130859375
    8. ' >=' → logprob: -5.4359130859375
    9. '+' → logprob: -5.8109130859375
    10. '<=' → logprob: -5.8109130859375

Token 319: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5182192921638489
    2. '1' → logprob: -1.393219232559204
    3. 'result' → logprob: -2.268219232559204
    4. 'input' → logprob: -3.018219232559204
    5. 'factor' → logprob: -6.268219470977783
    6. ' ' → logprob: -7.643219470977783
    7. '-' → logprob: -8.018218994140625
    8. '(' → logprob: -8.143218994140625
    9. '(input' → logprob: -8.143218994140625
    10. '(result' → logprob: -9.143218994140625

Token 320: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39926019310951233
    2. '1' → logprob: -1.39926016330719
    3. 'result' → logprob: -3.0242602825164795
    4. 'input' → logprob: -3.5242602825164795
    5. 'factor' → logprob: -5.7742600440979
    6. '(' → logprob: -7.6492600440979
    7. 'int' → logprob: -8.774260520935059
    8. ' ' → logprob: -8.899260520935059
    9. '-' → logprob: -9.024260520935059
    10. '(input' → logprob: -9.649260520935059

Token 321: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ' )' → logprob: -14.000001907348633
    3. '))' → logprob: -14.750001907348633
    4. ')
' → logprob: -15.750001907348633
    5. ')`' → logprob: -15.750001907348633
    6. '）' → logprob: -17.750001907348633
    7. '`)' → logprob: -17.750001907348633
    8. '()' → logprob: -18.500001907348633
    9. '())' → logprob: -18.500001907348633
    10. ')}' → logprob: -18.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 319
Tokens correctement prédits (1ère position, stricte): 119
Tokens correctement prédits (1ère position, avec adaptation): 124
Tokens correctement prédits (top 10): 259
Précision stricte (1ère position): 37.30%
Précision adaptée (1ère position): 38.87%
Précision (top 10): 81.19%
================================================================================
