================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:25:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
from functools import reduce
from collections import deque
import sys

# Augmenter la limite de récursion pour éviter une erreur dans certains cas extrêmes
sys.setrecursionlimit(10**7)

# Constante du modulo utilisée pour les calculs
MODULO_CONSTANT = 10**9 + 7

# Pré-calcul des factorielles modulo MODULO_CONSTANT
factorial_mod_table = [0] * 400020
factorial_mod_table[0] = 1
for factorial_index in range(1, len(factorial_mod_table)):
    factorial_mod_table[factorial_index] = (
        factorial_mod_table[factorial_index - 1] * factorial_index % MODULO_CONSTANT
    )

# Fonction pour lire une ligne d'entrée, la couper par espaces et convertir chaque élement en int
def lire_liste_entiers_depuis_ligne():
    return [int(element_chaine) for element_chaine in input().split(" ")]

# Fonction pour lire n lignes d'entrées, chacune étant convertie en int
def lire_liste_entiers_depuis_n_lignes(nombre_lignes):
    return [int(input()) for _ in range(nombre_lignes)]

# Fonction pour lire tout l'entrée (par espace ou retour à la ligne) et convertir en int (retourne un itérateur)
def lire_tous_les_entiers():
    return map(int, open(0).read().split())

# Fonction de log pour le debug, envoie vers la sortie d'erreur standard
def logger_debug(*valeurs_a_afficher):
    print("DEBUG:", *valeurs_a_afficher, file=sys.stderr)

# Fonction pour calculer l'inverse modulaire de x sous MODULO_CONSTANT
def calculer_inverse_modulaire(valeur):
    return pow(valeur, MODULO_CONSTANT - 2, MODULO_CONSTANT)

# Fonction pour calculer l'arrangement (n P k) modulo MODULO_CONSTANT
def arrangement_permutation_modulo(n_entiers, k_selectionnes):
    return factorial_mod_table[n_entiers] * calculer_inverse_modulaire(factorial_mod_table[n_entiers - k_selectionnes]) % MODULO_CONSTANT

# Fonction pour calculer la combinaison (n C k) modulo MODULO_CONSTANT
def combinaison_modulo(n_entiers, k_selectionnes):
    return arrangement_permutation_modulo(n_entiers, k_selectionnes) * calculer_inverse_modulaire(factorial_mod_table[k_selectionnes]) % MODULO_CONSTANT

# Lecture de la saisie standard : n = nombre d'éléments, k = nombre maximum autorisé
nombre_elements_total, nombre_maximum_autorise = lire_liste_entiers_depuis_ligne()

# Cas particulier : si k >= n-1, alors le résultat est une combinaison particulière
if nombre_maximum_autorise >= nombre_elements_total - 1:
    nombre_ensembles = combinaison_modulo(
        nombre_elements_total + nombre_elements_total - 1,
        nombre_elements_total
    ) % MODULO_CONSTANT
    print(nombre_ensembles)
    exit()

# Calcul du nombre total de façons de répartir les personnes dans les pièces (sous contraintes)
nombre_de_dispositions_possibles = 1

for nombre_pieces_vides in range(1, nombre_maximum_autorise + 1):
    facon_choisir_pieces_vides = combinaison_modulo(nombre_elements_total, nombre_pieces_vides)
    facon_repartir_personnes_restantes = combinaison_modulo(nombre_elements_total - 1, nombre_pieces_vides)
    nombre_de_dispositions_possibles += facon_choisir_pieces_vides * facon_repartir_personnes_restantes

resultat_final = nombre_de_dispositions_possibles % MODULO_CONSTANT
print(resultat_final)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.006110093556344509
    2. '\n' → logprob: -6.256110191345215
    3. '\' → logprob: -6.506110191345215
    4. '```' → logprob: -7.131110191345215
    5. '<|end|>' → logprob: -7.381110191345215
    6. 'import' → logprob: -7.381110191345215
    7. '
' → logprob: -9.756110191345215
    8. '.

' → logprob: -9.881110191345215
    9. '.pi' → logprob: -10.006110191345215
    10. '<|end|>' → logprob: -10.256110191345215

Token 4: ' functools' (ID: 142636)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.5645936727523804
    2. ' math' → logprob: -1.4395936727523804
    3. ' sys' → logprob: -3.06459379196167
    4. ' collections' → logprob: -3.18959379196167
    5. ' numpy' → logprob: -3.68959379196167
    6. ' statistics' → logprob: -3.93959379196167
    7. ' random' → logprob: -4.43959379196167
    8. 'os' → logprob: -4.43959379196167
    9. 'math' → logprob: -4.43959379196167
    10. 'cmath' → logprob: -5.31459379196167

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.47184744477272034
    2. 'import' → logprob: -1.096847414970398
    3. '.' → logprob: -3.2218475341796875
    4. '.import' → logprob: -6.4718475341796875
    5. '_import' → logprob: -8.221847534179688
    6. ' .' → logprob: -8.221847534179688
    7. '._' → logprob: -9.346847534179688
    8. '	import' → logprob: -9.721847534179688
    9. '```' → logprob: -10.096847534179688
    10. '_' → logprob: -10.471847534179688

Token 6: ' reduce' (ID: 10389)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.2187978029251099
    2. 'reduce' → logprob: -1.3437978029251099
    3. 'wrap' → logprob: -2.0937976837158203
    4. 'l' → logprob: -2.2187976837158203
    5. ' wraps' → logprob: -2.4687976837158203
    6. 'partial' → logprob: -2.5937976837158203
    7. ' reduce' → logprob: -3.3437976837158203
    8. ' partial' → logprob: -4.21879768371582
    9. 'cache' → logprob: -7.21879768371582
    10. 'cmp' → logprob: -7.59379768371582

Token 7: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.7876917719841003
    2. '(' → logprob: -1.0376918315887451
    3. 'def' → logprob: -2.412691831588745
    4. '\n' → logprob: -3.412691831588745
    5. ',' → logprob: -3.912691831588745
    6. '.' → logprob: -4.287691593170166
    7. 'import' → logprob: -4.537691593170166
    8. '```' → logprob: -4.912691593170166
    9. '(
' → logprob: -5.412691593170166
    10. '\(' → logprob: -5.787691593170166

Token 8: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2919309437274933
    2. '\' → logprob: -2.416930913925171
    3. '(' → logprob: -2.916930913925171
    4. ',' → logprob: -3.291930913925171
    5. 'import' → logprob: -3.541930913925171
    6. '\n' → logprob: -4.16693115234375
    7. '(
' → logprob: -4.41693115234375
    8. '```' → logprob: -5.41693115234375
    9. ',
' → logprob: -6.04193115234375
    10. ',

' → logprob: -6.79193115234375

Token 9: ' collections' (ID: 22690)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.08756238222122192
    2. 'operator' → logprob: -2.962562322616577
    3. ' itertools' → logprob: -3.462562322616577
    4. ' collections' → logprob: -8.337562561035156
    5. ' math' → logprob: -8.712562561035156
    6. ' os' → logprob: -8.712562561035156
    7. ' ' → logprob: -8.837562561035156
    8. 'collections' → logprob: -10.712562561035156
    9. 'os' → logprob: -11.087562561035156
    10. 'it' → logprob: -11.087562561035156

Token 10: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8293593525886536
    2. 'import' → logprob: -0.8293593525886536
    3. ' import' → logprob: -2.079359292984009
    4. '.import' → logprob: -6.704359531402588
    5. '.Counter' → logprob: -8.32935905456543
    6. ' .' → logprob: -8.57935905456543
    7. '<|end|>' → logprob: -8.70435905456543
    8. '```' → logprob: -8.82935905456543
    9. ' ' → logprob: -9.57935905456543
    10. 'abc' → logprob: -9.70435905456543

Token 11: ' deque' (ID: 90347)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.9057498574256897
    2. ' abc' → logprob: -1.030749797821045
    3. ' defaultdict' → logprob: -1.905749797821045
    4. 'deque' → logprob: -2.655749797821045
    5. ' deque' → logprob: -4.155749797821045
    6. 'named' → logprob: -6.655749797821045
    7. ' named' → logprob: -6.780749797821045
    8. ' Counter' → logprob: -7.155749797821045
    9. 'Counter' → logprob: -7.655749797821045
    10. 'default' → logprob: -7.905749797821045

Token 12: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9696159362792969
    2. '\' → logprob: -1.8446159362792969
    3. 'def' → logprob: -1.9696159362792969
    4. '```' → logprob: -1.9696159362792969
    5. 'import' → logprob: -2.969615936279297
    6. '
' → logprob: -3.094615936279297
    7. ',' → logprob: -3.219615936279297
    8. '#' → logprob: -4.594615936279297
    9. '<|end|>' → logprob: -5.094615936279297
    10. '

' → logprob: -5.219615936279297

Token 13: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.17189006507396698
    2. '```' → logprob: -2.9218900203704834
    3. '\' → logprob: -3.2968900203704834
    4. 'import' → logprob: -3.7968900203704834
    5. '\n' → logprob: -3.9218900203704834
    6. '#' → logprob: -4.6718902587890625
    7. '
' → logprob: -5.4218902587890625
    8. ',' → logprob: -5.6718902587890625
    9. '`' → logprob: -6.9218902587890625
    10. '(' → logprob: -7.5468902587890625

Token 14: ' sys' (ID: 12228)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.6383236050605774
    2. ' sys' → logprob: -1.5133235454559326
    3. ' heap' → logprob: -1.6383235454559326
    4. ' os' → logprob: -3.5133235454559326
    5. ' operator' → logprob: -3.8883235454559326
    6. ' re' → logprob: -6.388323783874512
    7. 'operator' → logprob: -6.513323783874512
    8. 'sys' → logprob: -6.638323783874512
    9. 'heap' → logprob: -6.763323783874512
    10. ' random' → logprob: -8.013323783874512

Token 15: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.432924747467041
    2. '\n' → logprob: -1.432924747467041
    3. 'def' → logprob: -1.932924747467041
    4. 'import' → logprob: -2.557924747467041
    5. '\' → logprob: -2.682924747467041
    6. '#' → logprob: -2.807924747467041
    7. '```' → logprob: -2.807924747467041
    8. '.' → logprob: -3.307924747467041
    9. ',' → logprob: -3.807924747467041
    10. '

' → logprob: -3.932924747467041

Token 16: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09513793885707855
    2. '```' → logprob: -2.97013783454895
    3. '\' → logprob: -4.595138072967529
    4. '.' → logprob: -4.595138072967529
    5. 'class' → logprob: -5.095138072967529
    6. '`' → logprob: -6.095138072967529
    7. '#' → logprob: -6.220138072967529
    8. 'import' → logprob: -6.345138072967529
    9. '
' → logprob: -6.345138072967529
    10. '\n' → logprob: -6.595138072967529

Token 17: ' Aug' (ID: 6025)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12479276210069656
    2. 'd' → logprob: -3.1247928142547607
    3. '#' → logprob: -3.8747928142547607
    4. ' def' → logprob: -3.8747928142547607
    5. ' ' → logprob: -4.499792575836182
    6. '\' → logprob: -5.249792575836182
    7. 'class' → logprob: -5.249792575836182
    8. ' 
' → logprob: -5.624792575836182
    9. 'de' → logprob: -5.874792575836182
    10. ' 

' → logprob: -7.374792575836182

Token 18: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.07933773100376129
    2. 'mented' → logprob: -2.5793378353118896
    3. 'mentor' → logprob: -8.454338073730469
    4. 'mentation' → logprob: -8.704338073730469
    5. 'm' → logprob: -10.579338073730469
    6. 'ument' → logprob: -11.454338073730469
    7. ' ment' → logprob: -11.829338073730469
    8. 'men' → logprob: -12.079338073730469
    9. '#' → logprob: -12.079338073730469
    10. 'ement' → logprob: -12.579338073730469

Token 19: 'er' (ID: 259)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.4589831531047821
    2. 'ation' → logprob: -1.4589831829071045
    3. 'ing' → logprob: -2.2089831829071045
    4. 'er' → logprob: -4.208982944488525
    5. '.py' → logprob: -5.208982944488525
    6. 'e' → logprob: -5.958982944488525
    7. '_' → logprob: -7.083982944488525
    8. ' ' → logprob: -8.583983421325684
    9. '.' → logprob: -8.833983421325684
    10. 's' → logprob: -8.833983421325684

Token 20: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.213970422744751
    2. '(' → logprob: -1.963970422744751
    3. 'class' → logprob: -2.463970422744751
    4. ' =' → logprob: -2.588970422744751
    5. ' class' → logprob: -2.588970422744751
    6. ':' → logprob: -2.713970422744751
    7. '.' → logprob: -2.963970422744751
    8. 's' → logprob: -3.213970422744751
    9. '_' → logprob: -3.338970422744751
    10. 'def' → logprob: -3.338970422744751

Token 21: ' limite' (ID: 48939)
  Prédit: 'performance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'performance' → logprob: -1.4903565645217896
    2. 's' → logprob: -1.6153565645217896
    3. 'def' → logprob: -1.9903565645217896
    4. 'liste' → logprob: -3.1153564453125
    5. 'd' → logprob: -3.3653564453125
    6. 'v' → logprob: -3.3653564453125
    7. 'data' → logprob: -3.4903564453125
    8. 'code' → logprob: -3.4903564453125
    9. 'c' → logprob: -3.8653564453125
    10. 'import' → logprob: -4.1153564453125

Token 22: ' de' (ID: 334)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -1.3078768253326416
    2. 'sys' → logprob: -1.4328768253326416
    3. ' d' → logprob: -2.1828768253326416
    4. '_sys' → logprob: -2.3078768253326416
    5. '=sys' → logprob: -2.4328768253326416
    6. 'import' → logprob: -2.6828768253326416
    7. ' de' → logprob: -3.0578768253326416
    8. '_' → logprob: -3.6828768253326416
    9. 's' → logprob: -4.0578765869140625
    10. 'd' → logprob: -4.8078765869140625

Token 23: ' réc' (ID: 36254)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.5860178470611572
    2. 'r' → logprob: -0.9610178470611572
    3. ' recursion' → logprob: -4.086017608642578
    4. 'la' → logprob: -4.461017608642578
    5. ' réc' → logprob: -4.461017608642578
    6. 'l' → logprob: -4.586017608642578
    7. 're' → logprob: -5.461017608642578
    8. ' la' → logprob: -6.461017608642578
    9. 'ré' → logprob: -6.711017608642578
    10. ' ' → logprob: -7.336017608642578

Token 24: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.07884681969881058
    2. 'urs' → logprob: -2.7038469314575195
    3. 'ur' → logprob: -4.8288469314575195
    4. 'u' → logprob: -7.5788469314575195
    5. 'urrence' → logprob: -9.32884693145752
    6. 'rs' → logprob: -9.82884693145752
    7. 'ursive' → logprob: -9.95384693145752
    8. 'c' → logprob: -10.57884693145752
    9. 'urse' → logprob: -10.57884693145752
    10. 'r' → logprob: -10.95384693145752

Token 25: ' pour' (ID: 1930)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.2141495794057846
    2. ' sys' → logprob: -1.7141495943069458
    3. 'import' → logprob: -5.589149475097656
    4. '(sys' → logprob: -5.589149475097656
    5. ' :' → logprob: -6.214149475097656
    6. '_sys' → logprob: -6.714149475097656
    7. ' ' → logprob: -7.464149475097656
    8. ':' → logprob: -7.839149475097656
    9. ' import' → logprob: -8.089149475097656
    10. '=sys' → logprob: -8.339149475097656

Token 26: ' éviter' (ID: 64013)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -1.1593079566955566
    2. ' permettre' → logprob: -1.7843079566955566
    3. ' ' → logprob: -1.9093079566955566
    4. '100' → logprob: -2.6593079566955566
    5. 'sys' → logprob: -2.6593079566955566
    6. ' éviter' → logprob: -3.1593079566955566
    7. ' recursion' → logprob: -3.4093079566955566
    8. '```' → logprob: -3.4093079566955566
    9. ' augmenter' → logprob: -3.9093079566955566
    10. ' pouvoir' → logprob: -4.409307956695557

Token 27: ' une' (ID: 2463)
  Prédit: ' Rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Rec' → logprob: -0.3360031545162201
    2. ' Runtime' → logprob: -2.586003065109253
    3. ' les' → logprob: -2.961003065109253
    4. ' Stack' → logprob: -3.086003065109253
    5. 'Rec' → logprob: -3.461003065109253
    6. ' l' → logprob: -3.836003065109253
    7. ' Overflow' → logprob: -3.836003065109253
    8. ' ' → logprob: -4.836003303527832
    9. 'Stack' → logprob: -4.836003303527832
    10. 'Overflow' → logprob: -5.461003303527832

Token 28: ' erreur' (ID: 102885)
  Prédit: 'Rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Rec' → logprob: -0.6964801549911499
    2. ' Rec' → logprob: -0.6964801549911499
    3. ' recursion' → logprob: -6.9464802742004395
    4. 'Stack' → logprob: -7.1964802742004395
    5. 'Trace' → logprob: -8.071479797363281
    6. 'rec' → logprob: -8.071479797363281
    7. ' Runtime' → logprob: -8.696479797363281
    8. 'Runtime' → logprob: -9.071479797363281
    9. ' ' → logprob: -9.446479797363281
    10. ' Stack' → logprob: -9.446479797363281

Token 29: ' dans' (ID: 2671)
  Prédit: ' Rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Rec' → logprob: -0.23028412461280823
    2. 'Rec' → logprob: -2.2302842140197754
    3. ' :' → logprob: -3.7302842140197754
    4. ' ' → logprob: -4.230284214019775
    5. ' de' → logprob: -4.230284214019775
    6. ' maximale' → logprob: -4.605284214019775
    7. ' d' → logprob: -4.980284214019775
    8. ' recursion' → logprob: -5.105284214019775
    9. ':' → logprob: -5.480284214019775
    10. 'Maximum' → logprob: -5.605284214019775

Token 30: ' certains' (ID: 30681)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.8028912544250488
    2. ' les' → logprob: -1.1778912544250488
    3. ' le' → logprob: -2.427891254425049
    4. ' la' → logprob: -3.302891254425049
    5. ' des' → logprob: -3.552891254425049
    6. ' certains' → logprob: -3.677891254425049
    7. 'les' → logprob: -4.177891254425049
    8. 'l' → logprob: -4.677891254425049
    9. ' certaines' → logprob: -4.677891254425049
    10. ' Python' → logprob: -5.302891254425049

Token 31: ' cas' (ID: 2108)
  Prédit: 'cas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cas' → logprob: -0.5809710025787354
    2. ' cas' → logprob: -0.8309710025787354
    3. 'cases' → logprob: -6.455970764160156
    4. 's' → logprob: -7.080970764160156
    5. 'calcul' → logprob: -7.580970764160156
    6. 'sys' → logprob: -7.830970764160156
    7. ' systèmes' → logprob: -8.330970764160156
    8. 'context' → logprob: -8.455970764160156
    9. 'import' → logprob: -8.580970764160156
    10. ' sys' → logprob: -9.080970764160156

Token 32: ' extr' (ID: 15674)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.1338682919740677
    2. ' sys' → logprob: -2.1338682174682617
    3. '(sys' → logprob: -5.758868217468262
    4. '=sys' → logprob: -7.133868217468262
    5. ':' → logprob: -7.258868217468262
    6. '  
' → logprob: -7.758868217468262
    7. ' :' → logprob: -7.883868217468262
    8. 'import' → logprob: -7.883868217468262
    9. '
' → logprob: -8.383868217468262
    10. '_sys' → logprob: -8.633868217468262

Token 33: 'êmes' (ID: 49694)
  Prédit: 'êmes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êmes' → logprob: -0.003755067242309451
    2. 'ême' → logprob: -5.87875509262085
    3. 'ê' → logprob: -7.87875509262085
    4. 'èmes' → logprob: -8.253754615783691
    5. 'êmement' → logprob: -8.503754615783691
    6. '```' → logprob: -10.503754615783691
    7. 'êm' → logprob: -10.878754615783691
    8. 'emes' → logprob: -11.378754615783691
    9. '^' → logprob: -11.753754615783691
    10. 'é' → logprob: -12.253754615783691

Token 34: '
' (ID: 198)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.04472561180591583
    2. ' sys' → logprob: -3.2947256565093994
    3. '(sys' → logprob: -5.54472541809082
    4. '\' → logprob: -6.66972541809082
    5. '=sys' → logprob: -7.29472541809082
    6. ':' → logprob: -8.41972541809082
    7. 'import' → logprob: -9.16972541809082
    8. '\n' → logprob: -9.29472541809082
    9. ' :' → logprob: -9.54472541809082
    10. '.sys' → logprob: -9.66972541809082

Token 35: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.008429231122136116
    2. ' sys' → logprob: -5.508429050445557
    3. '
' → logprob: -5.883429050445557
    4. '(sys' → logprob: -7.633429050445557
    5. '  
' → logprob: -8.008429527282715
    6. 'import' → logprob: -8.633429527282715
    7. '_sys' → logprob: -9.133429527282715
    8. '\n' → logprob: -9.383429527282715
    9. '=sys' → logprob: -9.383429527282715
    10. '\' → logprob: -9.633429527282715

Token 36: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.01543330866843462
    2. '.setdefault' → logprob: -4.765433311462402
    3. '.' → logprob: -5.015433311462402
    4. ' .' → logprob: -9.640433311462402
    5. '.stdout' → logprob: -10.515433311462402
    6. '.stdin' → logprob: -10.640433311462402
    7. '.get' → logprob: -11.390433311462402
    8. '.exit' → logprob: -11.640433311462402
    9. '.argv' → logprob: -11.640433311462402
    10. '.stderr' → logprob: -12.140433311462402

Token 37: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.5374234914779663
    2. 'ursion' → logprob: -0.9124234914779663
    3. '_rec' → logprob: -4.662423610687256
    4. '_' → logprob: -5.912423610687256
    5. ' recursion' → logprob: -7.412423610687256
    6. 'ection' → logprob: -7.537423610687256
    7. '_limit' → logprob: -8.537423133850098
    8. ' _' → logprob: -8.662423133850098
    9. 'ecution' → logprob: -9.412423133850098
    10. 'ult' → logprob: -9.662423133850098

Token 38: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -1.0087516784551553e-05
    2. 'ur' → logprob: -12.37501049041748
    3. 'urs' → logprob: -12.75001049041748
    4. 'limit' → logprob: -13.37501049041748
    5. '_limit' → logprob: -14.62501049041748
    6. '_' → logprob: -14.87501049041748
    7. 'ursive' → logprob: -15.25001049041748
    8. 'usion' → logprob: -16.125009536743164
    9. 'ursor' → logprob: -16.375009536743164
    10. 'urse' → logprob: -18.000009536743164

Token 39: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0019956084433943033
    2. 'ursion' → logprob: -6.50199556350708
    3. '_limit' → logprob: -7.75199556350708
    4. 'lim' → logprob: -11.126996040344238
    5. 'ision' → logprob: -11.376996040344238
    6. 'ault' → logprob: -11.501996040344238
    7. 'depth' → logprob: -11.626996040344238
    8. '-' → logprob: -12.001996040344238
    9. 'e' → logprob: -13.626996040344238
    10. '_' → logprob: -13.626996040344238

Token 40: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3856492842023727e-06
    2. ' (' → logprob: -14.250000953674316
    3. '(
' → logprob: -15.000000953674316
    4. '(

' → logprob: -15.375000953674316
    5. '((' → logprob: -17.250001907348633
    6. '()' → logprob: -17.375001907348633
    7. '(int' → logprob: -18.625001907348633
    8. '("("' → logprob: -18.875001907348633
    9. '('' → logprob: -19.250001907348633
    10. '(
' → logprob: -19.750001907348633

Token 41: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4742952883243561
    2. '10' → logprob: -0.9742952585220337
    3. '500' → logprob: -9.224295616149902
    4. '300' → logprob: -9.849295616149902
    5. '200' → logprob: -10.099295616149902
    6. ' ' → logprob: -11.224295616149902
    7. '150' → logprob: -11.474295616149902
    8. '250' → logprob: -13.849295616149902
    9. '999' → logprob: -14.849295616149902
    10. '400' → logprob: -15.349295616149902

Token 42: '**' (ID: 410)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.04934585466980934
    2. '00' → logprob: -3.0493459701538086
    3. '4' → logprob: -7.549345970153809
    4. '5' → logprob: -8.549345970153809
    5. '6' → logprob: -11.174345970153809
    6. '005' → logprob: -11.424345970153809
    7. '**' → logprob: -12.299345970153809
    8. '007' → logprob: -12.424345970153809
    9. '0' → logprob: -13.049345970153809
    10. '006' → logprob: -13.799345970153809

Token 43: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.018553851172327995
    2. '6' → logprob: -4.018553733825684
    3. '9' → logprob: -7.893553733825684
    4. '8' → logprob: -10.393553733825684
    5. '**' → logprob: -18.2685546875
    6. '4' → logprob: -18.5185546875
    7. '```' → logprob: -18.8935546875
    8. '5' → logprob: -19.0185546875
    9. '+' → logprob: -20.7685546875
    10. '10' → logprob: -20.8935546875

Token 44: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '))' → logprob: -14.250000953674316
    3. ' )' → logprob: -14.500000953674316
    4. ')
' → logprob: -17.125001907348633
    5. '),' → logprob: -18.000001907348633
    6. ')`' → logprob: -19.125001907348633
    7. ')))' → logprob: -19.250001907348633
    8. '}' → logprob: -20.125001907348633
    9. ')}' → logprob: -20.125001907348633
    10. '）' → logprob: -20.250001907348633

Token 45: '#' (ID: 2)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5833924412727356
    2. 'def' → logprob: -1.4583923816680908
    3. '
' → logprob: -1.5833923816680908
    4. 'class' → logprob: -6.95839262008667
    5. '#' → logprob: -7.08339262008667
    6. '\' → logprob: -7.08339262008667
    7. '
' → logprob: -7.45839262008667
    8. '```' → logprob: -7.95839262008667
    9. '\n' → logprob: -8.208392143249512
    10. '


' → logprob: -9.583392143249512

Token 46: ' Const' (ID: 19594)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27141574025154114
    2. ' def' → logprob: -1.5214157104492188
    3. '#' → logprob: -5.271415710449219
    4. 'class' → logprob: -5.771415710449219
    5. ' class' → logprob: -6.021415710449219
    6. 'Voici' → logprob: -7.396415710449219
    7. ' Voici' → logprob: -7.708915710449219
    8. 'import' → logprob: -7.708915710449219
    9. ' La' → logprob: -7.771415710449219
    10. ' On' → logprob: -8.208915710449219

Token 47: 'ante' (ID: 2116)
  Prédit: 'antes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'antes' → logprob: -1.1310876607894897
    2. 'ants' → logprob: -1.2560876607894897
    3. 'ANTS' → logprob: -1.7560876607894897
    4. 's' → logprob: -1.8810876607894897
    5. 'ANT' → logprob: -3.8810877799987793
    6. '#' → logprob: -4.631087779998779
    7. '_' → logprob: -5.006087779998779
    8. 'S' → logprob: -5.381087779998779
    9. 'PI' → logprob: -5.381087779998779
    10. 'ant' → logprob: -5.631087779998779

Token 48: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0565420389175415
    2. 'MAX' → logprob: -1.3065420389175415
    3. 'S' → logprob: -2.556541919708252
    4. 'EPS' → logprob: -2.806541919708252
    5. 'PI' → logprob: -3.056541919708252
    6. '=' → logprob: -3.056541919708252
    7. ':' → logprob: -3.431541919708252
    8. 's' → logprob: -4.056541919708252
    9. 'DEP' → logprob: -4.056541919708252
    10. 'E' → logprob: -4.181541919708252

Token 49: ' modulo' (ID: 112372)
  Prédit: ' problème'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' problème' → logprob: -0.9667987823486328
    2. '```' → logprob: -2.091798782348633
    3. 'au' → logprob: -2.466798782348633
    4. 'pi' → logprob: -2.716798782348633
    5. 'nombre' → logprob: -2.841798782348633
    6. ' nombre' → logprob: -3.341798782348633
    7. ' facteur' → logprob: -3.591798782348633
    8. ' code' → logprob: -3.716798782348633
    9. 'pro' → logprob: -3.716798782348633
    10. ' problem' → logprob: -4.216798782348633

Token 50: ' utilisée' (ID: 106548)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.8154997229576111
    2. '%' → logprob: -1.4404997825622559
    3. ' :' → logprob: -2.315499782562256
    4. ' ' → logprob: -2.315499782562256
    5. '_' → logprob: -3.565499782562256
    6. ':' → logprob: -3.690499782562256
    7. 'MOD' → logprob: -4.190499782562256
    8. ',' → logprob: -4.440499782562256
    9. ' =' → logprob: -4.565499782562256
    10. '_mod' → logprob: -5.065499782562256

Token 51: ' pour' (ID: 1930)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' :' → logprob: -1.0150295495986938
    2. ':' → logprob: -1.1400295495986938
    3. ' =' → logprob: -2.1400294303894043
    4. 'mod' → logprob: -3.1400294303894043
    5. 'MOD' → logprob: -3.2650294303894043
    6. '=' → logprob: -3.3900294303894043
    7. ',' → logprob: -3.7650294303894043
    8. ' modulo' → logprob: -4.265029430389404
    9. ' ' → logprob: -5.015029430389404
    10. '```' → logprob: -5.515029430389404

Token 52: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.25057345628738403
    2. ' le' → logprob: -1.7505733966827393
    3. ' l' → logprob: -4.750573635101318
    4. ' la' → logprob: -4.750573635101318
    5. 'les' → logprob: -4.875573635101318
    6. ' éviter' → logprob: -5.375573635101318
    7. ' ' → logprob: -5.875573635101318
    8. ' mod' → logprob: -6.000573635101318
    9. '100' → logprob: -6.750573635101318
    10. 'le' → logprob: -6.875573635101318

Token 53: ' calcul' (ID: 7559)
  Prédit: ' calcul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.3035472333431244
    2. 'calcul' → logprob: -1.4285472631454468
    3. ' calculations' → logprob: -4.428547382354736
    4. ' problèmes' → logprob: -5.428547382354736
    5. '_' → logprob: -7.178547382354736
    6. ' tests' → logprob: -7.303547382354736
    7. 'pro' → logprob: -7.553547382354736
    8. ' concours' → logprob: -7.678547382354736
    9. ' résultats' → logprob: -8.053546905517578
    10. 'nombre' → logprob: -8.053546905517578

Token 54: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14598910510540009
    2. 'es' → logprob: -2.895989179611206
    3. 'us' → logprob: -2.895989179611206
    4. 'os' → logprob: -3.770989179611206
    5. 'ations' → logprob: -6.145988941192627
    6. '#' → logprob: -10.145989418029785
    7. 'ons' → logprob: -10.520989418029785
    8. '```' → logprob: -10.520989418029785
    9. 'e' → logprob: -11.770989418029785
    10. 'mod' → logprob: -11.895989418029785

Token 55: '
' (ID: 198)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.38385462760925293
    2. ' MOD' → logprob: -1.633854627609253
    3. 'mod' → logprob: -3.758854627609253
    4. ' modulo' → logprob: -4.133854866027832
    5. '_MOD' → logprob: -4.258854866027832
    6. '_mod' → logprob: -4.258854866027832
    7. '_' → logprob: -4.258854866027832
    8. ' ' → logprob: -4.633854866027832
    9. ' mod' → logprob: -4.758854866027832
    10. '%' → logprob: -5.758854866027832

Token 56: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00024203950306400657
    2. ' MOD' → logprob: -8.500242233276367
    3. 'MD' → logprob: -11.250242233276367
    4. 'M' → logprob: -11.875242233276367
    5. '_MOD' → logprob: -12.000242233276367
    6. 'mod' → logprob: -12.625242233276367
    7. '```' → logprob: -12.750242233276367
    8. 'Modulo' → logprob: -13.750242233276367
    9. '.MOD' → logprob: -13.875242233276367
    10. 'MO' → logprob: -14.250242233276367

Token 57: 'ULO' (ID: 63916)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008615515194833279
    2. '=' → logprob: -4.758615493774414
    3. ',' → logprob: -14.508615493774414
    4. '=int' → logprob: -16.133615493774414
    5. ' ' → logprob: -16.258615493774414
    6. ':' → logprob: -16.508615493774414
    7. ' =
' → logprob: -16.508615493774414
    8. ' ' → logprob: -16.633615493774414
    9. '.' → logprob: -17.258615493774414
    10. '_' → logprob: -17.508615493774414

Token 58: '_CONSTANT' (ID: 115083)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001328095211647451
    2. '=' → logprob: -6.626327991485596
    3. ',' → logprob: -13.876328468322754
    4. ' ' → logprob: -14.126328468322754
    5. ' ,' → logprob: -15.626328468322754
    6. '_' → logprob: -16.001327514648438
    7. ' =
' → logprob: -16.126327514648438
    8. ' ' → logprob: -16.501327514648438
    9. '  ' → logprob: -17.626327514648438
    10. ':' → logprob: -17.751327514648438

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002186426194384694
    2. '=' → logprob: -6.127186298370361
    3. ' ' → logprob: -14.12718677520752
    4. ',' → logprob: -15.37718677520752
    5. ' =
' → logprob: -15.75218677520752
    6. '_' → logprob: -16.877185821533203
    7. ' ' → logprob: -17.127185821533203
    8. '1' → logprob: -17.377185821533203
    9. 'S' → logprob: -17.627185821533203
    10. ':' → logprob: -17.752185821533203

Token 60: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.13145583868026733
    2. '100' → logprob: -2.631455898284912
    3. ' ' → logprob: -3.006455898284912
    4. '998' → logprob: -6.631455898284912
    5. '1' → logprob: -7.881455898284912
    6. 'int' → logprob: -11.631455421447754
    7. '123' → logprob: -11.756455421447754
    8. '999' → logprob: -11.756455421447754
    9. '(' → logprob: -12.506455421447754
    10. '987' → logprob: -12.756455421447754

Token 61: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1820421814918518
    2. '100' → logprob: -1.807042121887207
    3. '998' → logprob: -6.307042121887207
    4. '1' → logprob: -8.057042121887207
    5. 'int' → logprob: -9.557042121887207
    6. '123' → logprob: -10.682042121887207
    7. ' ' → logprob: -11.057042121887207
    8. '(' → logprob: -11.182042121887207
    9. '999' → logprob: -12.307042121887207
    10. '109' → logprob: -12.557042121887207

Token 62: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5769204497337341
    2. '9' → logprob: -0.8269204497337341
    3. '09' → logprob: -7.326920509338379
    4. '7' → logprob: -8.451920509338379
    5. '07' → logprob: -9.826920509338379
    6. '6' → logprob: -10.826920509338379
    7. '000' → logprob: -11.201920509338379
    8. '```' → logprob: -11.576920509338379
    9. '*' → logprob: -13.076920509338379
    10. '^' → logprob: -13.451920509338379

Token 63: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -9.088346359931165e-07
    2. '09' → logprob: -14.125000953674316
    3. '7' → logprob: -16.875
    4. '```' → logprob: -17.875
    5. '10' → logprob: -18.125
    6. '8' → logprob: -18.5
    7. '6' → logprob: -19.125
    8. '+' → logprob: -19.125
    9. '18' → logprob: -19.25
    10. '4' → logprob: -19.625

Token 64: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005716211744584143
    2. ' +' → logprob: -7.7505717277526855
    3. '7' → logprob: -8.875571250915527
    4. '+
' → logprob: -15.000571250915527
    5. '9' → logprob: -15.250571250915527
    6. ' plus' → logprob: -16.000572204589844
    7. '＋' → logprob: -16.000572204589844
    8. '```' → logprob: -16.000572204589844
    9. 'plus' → logprob: -16.500572204589844
    10. '+

' → logprob: -17.000572204589844

Token 65: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -7.896309739408025e-07
    2. '+' → logprob: -15.000000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '07' → logprob: -16.125
    5. '9' → logprob: -17.625
    6. '```' → logprob: -17.875
    7. '' → logprob: -19.4375
    8. '007' → logprob: -19.625
    9. '   ' → logprob: -19.75
    10. '٧' → logprob: -20.25

Token 66: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '```' → logprob: -19.5
    3. '+' → logprob: -20.25
    4. '9' → logprob: -20.375
    5. '07' → logprob: -20.375
    6. ' ' → logprob: -21.625
    7. '۷' → logprob: -22.875
    8. '٧' → logprob: -23.0625
    9. '৭' → logprob: -23.5625
    10. '७' → logprob: -23.5625

Token 67: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.4377123713493347
    2. '
' → logprob: -1.3127124309539795
    3. 'def' → logprob: -2.5627124309539795
    4. '#' → logprob: -6.3127121925354
    5. '\' → logprob: -6.5627121925354
    6. '\n' → logprob: -6.8127121925354
    7. '<|end|>' → logprob: -6.9377121925354
    8. '
' → logprob: -7.1877121925354
    9. '' → logprob: -7.4377121925354
    10. ' 

' → logprob: -7.6877121925354

Token 68: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7338113784790039
    2. '

' → logprob: -0.8588113784790039
    3. 'def' → logprob: -2.358811378479004
    4. '
' → logprob: -6.983811378479004
    5. '#' → logprob: -8.108811378479004
    6. '\' → logprob: -8.733811378479004
    7. '\n' → logprob: -9.233811378479004
    8. '' → logprob: -9.858811378479004
    9. 'class' → logprob: -10.108811378479004
    10. '```' → logprob: -10.108811378479004

Token 69: ' Pré' (ID: 86400)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06504890322685242
    2. ' def' → logprob: -2.815048933029175
    3. 'class' → logprob: -6.065048694610596
    4. '#' → logprob: -7.690048694610596
    5. ' class' → logprob: -8.690049171447754
    6. '```' → logprob: -11.190049171447754
    7. ' #' → logprob: -11.315049171447754
    8. 'Dé' → logprob: -11.565049171447754
    9. 'import' → logprob: -11.690049171447754
    10. 'de' → logprob: -11.815049171447754

Token 70: '-cal' (ID: 84920)
  Prédit: 'fix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fix' → logprob: -0.5051068067550659
    2. 'cision' → logprob: -1.630106806755066
    3. 'c' → logprob: -2.1301069259643555
    4. 'def' → logprob: -4.1301069259643555
    5. 'paration' → logprob: -4.2551069259643555
    6. 'sent' → logprob: -4.8801069259643555
    7. '#' → logprob: -5.0051069259643555
    8. 'amb' → logprob: -5.1301069259643555
    9. 'trait' → logprob: -5.2551069259643555
    10. 'cis' → logprob: -5.3801069259643555

Token 71: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.5639144778251648
    2. 'culation' → logprob: -1.4389145374298096
    3. 'c' → logprob: -1.9389145374298096
    4. 'culated' → logprob: -3.6889145374298096
    5. 'cu' → logprob: -4.9389142990112305
    6. 'm' → logprob: -5.6889142990112305
    7. 'cule' → logprob: -5.6889142990112305
    8. '```' → logprob: -5.6889142990112305
    9. 'om' → logprob: -6.8139142990112305
    10. '#' → logprob: -7.1889142990112305

Token 72: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.34245195984840393
    2. 'des' → logprob: -1.7174519300460815
    3. 'er' → logprob: -2.967452049255371
    4. 's' → logprob: -3.092452049255371
    5. 'ation' → logprob: -5.467452049255371
    6. '_des' → logprob: -6.467452049255371
    7. 'ations' → logprob: -6.592452049255371
    8. ' de' → logprob: -6.717452049255371
    9. 'ated' → logprob: -6.717452049255371
    10. 'de' → logprob: -7.092452049255371

Token 73: ' fact' (ID: 2840)
  Prédit: ' fact'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fact' → logprob: -0.5699438452720642
    2. 'factor' → logprob: -1.319943904876709
    3. 'fact' → logprob: -2.444943904876709
    4. ' factorial' → logprob: -3.319943904876709
    5. ' facto' → logprob: -3.319943904876709
    6. ' factor' → logprob: -5.444943904876709
    7. '_factor' → logprob: -6.569943904876709
    8. '```' → logprob: -7.319943904876709
    9. ' facteurs' → logprob: -7.944943904876709
    10. 'facts' → logprob: -7.944943904876709

Token 74: 'ori' (ID: 6510)
  Prédit: 'ori'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ori' → logprob: -0.1307658553123474
    2. 'orial' → logprob: -2.630765914916992
    3. 'or' → logprob: -3.005765914916992
    4. 'o' → logprob: -7.630765914916992
    5. 'oria' → logprob: -8.630765914916992
    6. 'oires' → logprob: -9.255765914916992
    7. 'eurs' → logprob: -9.505765914916992
    8. 'os' → logprob: -9.755765914916992
    9. '```' → logprob: -10.130765914916992
    10. 'ories' → logprob: -10.880765914916992

Token 75: 'elles' (ID: 8500)
  Prédit: 'elles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elles' → logprob: -0.2297600656747818
    2. 'els' → logprob: -1.6047600507736206
    3. 'lles' → logprob: -6.85476016998291
    4. 'les' → logprob: -7.22976016998291
    5. '```' → logprob: -7.47976016998291
    6. 'als' → logprob: -7.85476016998291
    7. '``' → logprob: -8.35476016998291
    8. '#' → logprob: -8.47976016998291
    9. 'nelles' → logprob: -8.97976016998291
    10. '`' → logprob: -9.10476016998291

Token 76: ' modulo' (ID: 112372)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.9644221663475037
    2. '_fact' → logprob: -0.9644221663475037
    3. '_' → logprob: -1.7144222259521484
    4. 'fact' → logprob: -3.2144222259521484
    5. ',' → logprob: -5.214422225952148
    6. 'factor' → logprob: -5.589422225952148
    7. '_fac' → logprob: -6.464422225952148
    8. ' ' → logprob: -6.589422225952148
    9. 's' → logprob: -7.214422225952148
    10. ' factorial' → logprob: -7.339422225952148

Token 77: ' MOD' (ID: 32868)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1635221242904663
    2. ' ' → logprob: -2.913522243499756
    3. '_factor' → logprob: -3.163522243499756
    4. '(' → logprob: -4.538522243499756
    5. '_fact' → logprob: -4.538522243499756
    6. ' (' → logprob: -5.163522243499756
    7. ',' → logprob: -5.288522243499756
    8. '```' → logprob: -5.538522243499756
    9. ' _' → logprob: -5.788522243499756
    10. 'factor' → logprob: -6.538522243499756

Token 78: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.0008687060908414423
    2. 'ULE' → logprob: -8.000868797302246
    3. '_' → logprob: -8.750868797302246
    4. 'ulo' → logprob: -9.125868797302246
    5. '```' → logprob: -9.375868797302246
    6. 'O' → logprob: -9.625868797302246
    7. '=' → logprob: -10.375868797302246
    8. 'U' → logprob: -10.750868797302246
    9. '_MODULE' → logprob: -11.625868797302246
    10. 'ULAR' → logprob: -11.875868797302246

Token 79: '_CONSTANT' (ID: 115083)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13308073580265045
    2. '_CONSTANT' → logprob: -2.1330807209014893
    3. '_constant' → logprob: -6.133080959320068
    4. '_CONST' → logprob: -7.008080959320068
    5. 's' → logprob: -7.758080959320068
    6. '_FACTOR' → logprob: -8.13308048248291
    7. '```' → logprob: -8.25808048248291
    8. '_MOD' → logprob: -8.38308048248291
    9. '\' → logprob: -8.50808048248291
    10. '_constants' → logprob: -9.00808048248291

Token 80: '
' (ID: 198)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.26990243792533875
    2. '_fact' → logprob: -1.7699024677276611
    3. '_factor' → logprob: -3.769902467727661
    4. 'factor' → logprob: -3.894902467727661
    5. ':' → logprob: -5.269902229309082
    6. ',' → logprob: -5.644902229309082
    7. '
' → logprob: -5.769902229309082
    8. '\n' → logprob: -6.519902229309082
    9. 'FACT' → logprob: -7.019902229309082
    10. 'n' → logprob: -7.019902229309082

Token 81: 'factor' (ID: 73174)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.14029234647750854
    2. 'factor' → logprob: -2.3902924060821533
    3. '_fact' → logprob: -3.7652924060821533
    4. '_factor' → logprob: -5.015292167663574
    5. ' factorial' → logprob: -6.515292167663574
    6. 'max' → logprob: -6.640292167663574
    7. 'def' → logprob: -6.765292167663574
    8. '
' → logprob: -6.890292167663574
    9. ' fact' → logprob: -6.890292167663574
    10. 'n' → logprob: -7.015292167663574

Token 82: 'ial' (ID: 563)
  Prédit: 'ials'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ials' → logprob: -0.3939540684223175
    2. 'i' → logprob: -1.2689540386199951
    3. 's' → logprob: -3.518954038619995
    4. 'iales' → logprob: -5.018954277038574
    5. 'ial' → logprob: -5.268954277038574
    6. 'iel' → logprob: -7.143954277038574
    7. 'iels' → logprob: -7.268954277038574
    8. 'ielle' → logprob: -7.643954277038574
    9. ' =' → logprob: -7.768954277038574
    10. '_' → logprob: -8.393954277038574

Token 83: '_mod' (ID: 15325)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008361498825252056
    2. '_s' → logprob: -4.883361339569092
    3. '_' → logprob: -8.00836181640625
    4. '=' → logprob: -8.63336181640625
    5. ' =' → logprob: -8.63336181640625
    6. '[' → logprob: -10.75836181640625
    7. '[s' → logprob: -11.00836181640625
    8. ' s' → logprob: -11.75836181640625
    9. '_factor' → logprob: -11.88336181640625
    10. '(s' → logprob: -13.00836181640625

Token 84: '_table' (ID: 11721)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.24850395321846008
    2. '=' → logprob: -1.7485039234161377
    3. 's' → logprob: -3.6235039234161377
    4. '_' → logprob: -3.9985039234161377
    5. '[' → logprob: -7.873504161834717
    6. ' ' → logprob: -8.123503684997559
    7. 'es' → logprob: -9.873503684997559
    8. '_s' → logprob: -9.998503684997559
    9. '[:]' → logprob: -11.123503684997559
    10. 'al' → logprob: -11.248503684997559

Token 85: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05584832280874252
    2. '=' → logprob: -2.9308483600616455
    3. '[' → logprob: -7.055848121643066
    4. '=[]' → logprob: -10.055848121643066
    5. '[:]' → logprob: -11.055848121643066
    6. '=[' → logprob: -11.180848121643066
    7. '[]' → logprob: -11.680848121643066
    8. ' =[' → logprob: -11.805848121643066
    9. ' ' → logprob: -12.305848121643066
    10. 's' → logprob: -13.055848121643066

Token 86: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4742603302001953
    2. '[' → logprob: -0.9742603302001953
    3. '[]' → logprob: -8.974260330200195
    4. ' []' → logprob: -10.224260330200195
    5. ' ' → logprob: -11.474260330200195
    6. '[int' → logprob: -13.099260330200195
    7. 'deque' → logprob: -13.474260330200195
    8. '[n' → logprob: -13.974260330200195
    9. '[m' → logprob: -14.474260330200195
    10. '[f' → logprob: -14.599260330200195

Token 87: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -17.625003814697266
    4. '  ' → logprob: -17.750003814697266
    5. '```' → logprob: -19.000003814697266
    6. 'factor' → logprob: -19.875003814697266
    7. '۱' → logprob: -20.187503814697266
    8. '...' → logprob: -20.437503814697266
    9. ']' → logprob: -20.562503814697266
    10. ' ' → logprob: -20.812503814697266

Token 88: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02469637617468834
    2. ']' → logprob: -3.8996963500976562
    3. ' ,' → logprob: -5.524696350097656
    4. ' ]' → logprob: -9.274696350097656
    5. '1' → logprob: -10.899696350097656
    6. '0' → logprob: -11.274696350097656
    7. ' for' → logprob: -11.524696350097656
    8. ',
' → logprob: -12.024696350097656
    9. 'for' → logprob: -12.899696350097656
    10. ' ' → logprob: -13.024696350097656

Token 89: ' *' (ID: 425)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004304072819650173
    2. ' ,' → logprob: -6.129303932189941
    3. ']' → logprob: -6.879303932189941
    4. '0' → logprob: -8.254303932189941
    5. '1' → logprob: -8.879303932189941
    6. ' ' → logprob: -9.004303932189941
    7. ',
' → logprob: -9.004303932189941
    8. ' for' → logprob: -9.129303932189941
    9. '2' → logprob: -9.379303932189941
    10. '[' → logprob: -9.754303932189941

Token 90: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5348841547966003
    2. '(' → logprob: -0.9098841547966003
    3. '10' → logprob: -4.909883975982666
    4. '1' → logprob: -6.659883975982666
    5. '200' → logprob: -6.659883975982666
    6. ' ' → logprob: -7.409883975982666
    7. ' (' → logprob: -7.909883975982666
    8. '500' → logprob: -8.034884452819824
    9. '300' → logprob: -8.034884452819824
    10. '2' → logprob: -9.784884452819824

Token 91: '400' (ID: 4812)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.21638384461402893
    2. '(' → logprob: -2.341383934020996
    3. '10' → logprob: -2.466383934020996
    4. '200' → logprob: -5.341383934020996
    5. '500' → logprob: -5.466383934020996
    6. '300' → logprob: -6.091383934020996
    7. '1' → logprob: -6.591383934020996
    8. '400' → logprob: -7.841383934020996
    9. '2' → logprob: -8.466383934020996
    10. '250' → logprob: -9.966383934020996

Token 92: '020' (ID: 19164)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.39107048511505127
    2. '1' → logprob: -2.1410703659057617
    3. '000' → logprob: -2.3910703659057617
    4. '00' → logprob: -2.8910703659057617
    5. '001' → logprob: -3.1410703659057617
    6. '01' → logprob: -5.891070365905762
    7. '100' → logprob: -6.016070365905762
    8. '400' → logprob: -6.391070365905762
    9. '002' → logprob: -6.516070365905762
    10. '2' → logprob: -6.516070365905762

Token 93: '
' (ID: 198)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.008576162159442902
    2. '[' → logprob: -5.508576393127441
    3. '
' → logprob: -6.133576393127441
    4. '0' → logprob: -6.883576393127441
    5. ' factorial' → logprob: -8.133576393127441
    6. '.factor' → logprob: -8.258576393127441
    7. 'f' → logprob: -8.508576393127441
    8. '1' → logprob: -9.383576393127441
    9. '\n' → logprob: -9.508576393127441
    10. '_factor' → logprob: -9.633576393127441

Token 94: 'factor' (ID: 73174)
  Prédit: 'factor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.05269952490925789
    2. '
' → logprob: -3.052699565887451
    3. ' 
' → logprob: -6.427699565887451
    4. ' factorial' → logprob: -7.302699565887451
    5. '\n' → logprob: -7.677699565887451
    6. '  
' → logprob: -7.927699565887451
    7. 'f' → logprob: -8.177699089050293
    8. 'fact' → logprob: -8.802699089050293
    9. '0' → logprob: -9.552699089050293
    10. '
' → logprob: -9.552699089050293

Token 95: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.006045997142791748
    2. 'al' → logprob: -5.131045818328857
    3. ' ial' → logprob: -10.256046295166016
    4. '_' → logprob: -10.881046295166016
    5. '   ' → logprob: -11.131046295166016
    6. '_al' → logprob: -11.256046295166016
    7. '  ' → logprob: -12.006046295166016
    8. ' ' → logprob: -12.131046295166016
    9. 'ia' → logprob: -12.631046295166016
    10. 'ialize' → logprob: -12.756046295166016

Token 96: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -2.47495681833243e-05
    2. '_' → logprob: -11.000024795532227
    3. '_m' → logprob: -12.500024795532227
    4. ' _' → logprob: -12.750024795532227
    5. '_mode' → logprob: -15.000024795532227
    6. 's' → logprob: -15.625024795532227
    7. '_s' → logprob: -15.625024795532227
    8. '__' → logprob: -16.500024795532227
    9. '_factor' → logprob: -16.625024795532227
    10. '```' → logprob: -17.000024795532227

Token 97: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.0008484598365612328
    2. '_' → logprob: -7.625848293304443
    3. '_tab' → logprob: -8.750848770141602
    4. 's' → logprob: -9.750848770141602
    5. ' _' → logprob: -10.375848770141602
    6. '[' → logprob: -10.500848770141602
    7. '_s' → logprob: -11.000848770141602
    8. '_tables' → logprob: -11.125848770141602
    9. '_list' → logprob: -11.500848770141602
    10. '_value' → logprob: -12.000848770141602

Token 98: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. ' [' → logprob: -13.500001907348633
    3. '[:]' → logprob: -15.250001907348633
    4. '[
' → logprob: -15.375001907348633
    5. ' =' → logprob: -16.625001907348633
    6. '```' → logprob: -17.125001907348633
    7. '=' → logprob: -17.375001907348633
    8. 'import' → logprob: -17.750001907348633
    9. 'def' → logprob: -17.875001907348633
    10. ' ' → logprob: -18.125001907348633

Token 99: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '00' → logprob: -18.250015258789062
    4. '000' → logprob: -18.500015258789062
    5. '1' → logprob: -18.625015258789062
    6. ']' → logprob: -19.500015258789062
    7. '۰' → logprob: -19.875015258789062
    8. ')' → logprob: -20.500015258789062
    9. '
' → logprob: -20.500015258789062
    10. '012' → logprob: -20.625015258789062

Token 100: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006520323222503066
    2. ' ]' → logprob: -7.500651836395264
    3. ']=' → logprob: -9.250652313232422
    4. '=' → logprob: -13.000652313232422
    5. ' ' → logprob: -14.875652313232422
    6. ' =' → logprob: -15.750652313232422
    7. ')' → logprob: -16.500652313232422
    8. '']' → logprob: -17.000652313232422
    9. ']+=' → logprob: -17.125652313232422
    10. '1' → logprob: -17.875652313232422

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014184147119522
    2. '=' → logprob: -1.701418399810791
    3. ' ' → logprob: -12.70141887664795
    4. ' =
' → logprob: -13.57641887664795
    5. ',' → logprob: -15.57641887664795
    6. '<|end|>' → logprob: -15.95141887664795
    7. '=int' → logprob: -16.201417922973633
    8. ' =[' → logprob: -16.201417922973633
    9. ' =
' → logprob: -16.826417922973633
    10. '=
' → logprob: -17.576417922973633

Token 102: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. 'factor' → logprob: -18.12507438659668
    4. '   ' → logprob: -19.12507438659668
    5. '' → logprob: -19.12507438659668
    6. '  ' → logprob: -19.18757438659668
    7. '`' → logprob: -19.25007438659668
    8. '```' → logprob: -19.56257438659668
    9. '۱' → logprob: -19.62507438659668
    10. '১' → logprob: -19.81257438659668

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. 'factor' → logprob: -15.625001907348633
    4. '<|end|>' → logprob: -18.000001907348633
    5. '১' → logprob: -19.000001907348633
    6. '۱' → logprob: -19.125001907348633
    7. 'fact' → logprob: -19.125001907348633
    8. '<|end|>' → logprob: -19.625001907348633
    9. '१' → logprob: -19.750001907348633
    10. '```' → logprob: -19.750001907348633

Token 104: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00602348055690527
    2. 'factor' → logprob: -5.506023406982422
    3. ' 
' → logprob: -7.256023406982422
    4. '\n' → logprob: -8.131023406982422
    5. '
' → logprob: -8.381023406982422
    6. '<|end|>' → logprob: -8.381023406982422
    7. 'for' → logprob: -8.631023406982422
    8. '  
' → logprob: -9.006023406982422
    9. '' → logprob: -10.006023406982422
    10. ' factorial' → logprob: -10.381023406982422

Token 105: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09448868781328201
    2. 'for' → logprob: -2.4694886207580566
    3. ' for' → logprob: -6.094488620758057
    4. 'factor' → logprob: -6.344488620758057
    5. ' 
' → logprob: -7.469488620758057
    6. '\n' → logprob: -7.594488620758057
    7. '  
' → logprob: -8.719489097595215
    8. '' → logprob: -9.594489097595215
    9. '
' → logprob: -9.969489097595215
    10. '<|end|>' → logprob: -9.969489097595215

Token 106: ' factorial' (ID: 111204)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10503672063350677
    2. ' ' → logprob: -2.355036735534668
    3. 'i' → logprob: -5.355036735534668
    4. ' _' → logprob: -9.480036735534668
    5. '  ' → logprob: -11.855036735534668
    6. '_' → logprob: -12.480036735534668
    7. '	i' → logprob: -13.105036735534668
    8. ' ' → logprob: -13.480036735534668
    9. ' ‌' → logprob: -13.730036735534668
    10. '   ' → logprob: -14.605036735534668

Token 107: '_index' (ID: 7748)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.5031241178512573
    2. '_mod' → logprob: -1.7531241178512573
    3. '_index' → logprob: -2.128124237060547
    4. '_' → logprob: -2.503124237060547
    5. '_idx' → logprob: -4.628124237060547
    6. 'i' → logprob: -6.003124237060547
    7. 's' → logprob: -6.128124237060547
    8. '_num' → logprob: -6.503124237060547
    9. '_value' → logprob: -6.878124237060547
    10. '_factor' → logprob: -7.503124237060547

Token 108: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009902111254632473
    2. 'in' → logprob: -4.634902000427246
    3. ' ' → logprob: -8.884902000427246
    4. '1' → logprob: -13.259902000427246
    5. ' i' → logprob: -13.509902000427246
    6. ',' → logprob: -13.509902000427246
    7. '=' → logprob: -14.759902000427246
    8. ' =' → logprob: -14.884902000427246
    9. '	in' → logprob: -15.259902000427246
    10. 'i' → logprob: -15.384902000427246

Token 109: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12692904472351074
    2. 'range' → logprob: -2.1269290447235107
    3. '(range' → logprob: -14.75192928314209
    4. ' ' → logprob: -15.12692928314209
    5. '	range' → logprob: -15.12692928314209
    6. ' xrange' → logprob: -17.626928329467773
    7. '1' → logprob: -18.751928329467773
    8. ')' → logprob: -19.001928329467773
    9. '  ' → logprob: -19.251928329467773
    10. '```' → logprob: -19.251928329467773

Token 110: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00016086915275081992
    2. '1' → logprob: -8.750161170959473
    3. ' (' → logprob: -13.000161170959473
    4. ' ' → logprob: -16.750160217285156
    5. '(
' → logprob: -16.750160217285156
    6. '   ' → logprob: -19.750160217285156
    7. '[' → logprob: -20.250160217285156
    8. ',' → logprob: -20.375160217285156
    9. '(

' → logprob: -20.750160217285156
    10. 's' → logprob: -21.000160217285156

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001414426224073395
    2. ' ' → logprob: -8.875141143798828
    3. '400' → logprob: -14.125141143798828
    4. '   ' → logprob: -14.750141143798828
    5. '(' → logprob: -15.375141143798828
    6. '2' → logprob: -16.125141143798828
    7. '  ' → logprob: -16.500141143798828
    8. ')' → logprob: -18.250141143798828
    9. '    ' → logprob: -18.500141143798828
    10. '0' → logprob: -18.687641143798828

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012523665092885494
    2. ' ,' → logprob: -4.387523651123047
    3. ' ' → logprob: -11.887523651123047
    4. '<|end|>' → logprob: -13.262523651123047
    5. ',len' → logprob: -13.887523651123047
    6. '400' → logprob: -14.012523651123047
    7. ',
' → logprob: -14.012523651123047
    8. ')' → logprob: -14.387523651123047
    9. ' ,
' → logprob: -14.762523651123047
    10. '40' → logprob: -15.137523651123047

Token 113: ' len' (ID: 4631)
  Prédit: '400'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '400' → logprob: -0.003180094063282013
    2. ' ' → logprob: -5.753180027008057
    3. 'len' → logprob: -13.378180503845215
    4. '   ' → logprob: -15.128180503845215
    5. ' len' → logprob: -15.378180503845215
    6. '  ' → logprob: -16.0031795501709
    7. '4' → logprob: -16.2531795501709
    8. '40' → logprob: -17.3781795501709
    9. ' ' → logprob: -17.7531795501709
    10. '    ' → logprob: -18.1906795501709

Token 114: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.006725079845637083
    2. '(' → logprob: -5.006725311279297
    3. 'factor' → logprob: -12.506725311279297
    4. ' (' → logprob: -12.631725311279297
    5. ' factorial' → logprob: -13.131725311279297
    6. '(
' → logprob: -14.756725311279297
    7. ')' → logprob: -16.506725311279297
    8. '.factor' → logprob: -16.756725311279297
    9. '(factory' → logprob: -16.881725311279297
    10. '(

' → logprob: -16.881725311279297

Token 115: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.003186863148584962
    2. 'factor' → logprob: -5.7531867027282715
    3. '_factor' → logprob: -12.25318717956543
    4. 'act' → logprob: -12.75318717956543
    5. 'a' → logprob: -14.25318717956543
    6. ' factorial' → logprob: -15.37818717956543
    7. '```' → logprob: -15.87818717956543
    8. 'actory' → logprob: -16.12818717956543
    9. 'atorial' → logprob: -16.12818717956543
    10. '.factor' → logprob: -16.87818717956543

Token 116: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.011691815219819546
    2. 'l' → logprob: -4.636692047119141
    3. 'ial' → logprob: -6.511692047119141
    4. '_mod' → logprob: -8.13669204711914
    5. 'r' → logprob: -9.88669204711914
    6. '_factor' → logprob: -10.26169204711914
    7. 'ral' → logprob: -10.76169204711914
    8. 'rial' → logprob: -11.26169204711914
    9. 'factor' → logprob: -11.38669204711914
    10. 'or' → logprob: -12.26169204711914

Token 117: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -6.392202976712724e-06
    2. '_factor' → logprob: -12.500006675720215
    3. 'mod' → logprob: -13.250006675720215
    4. '_' → logprob: -15.000006675720215
    5. '_index' → logprob: -15.625006675720215
    6. ')' → logprob: -16.3750057220459
    7. '_table' → logprob: -16.7500057220459
    8. '_MOD' → logprob: -17.0000057220459
    9. '_m' → logprob: -17.2500057220459
    10. 'factor' → logprob: -17.3750057220459

Token 118: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.06794306635856628
    2. 'ial' → logprob: -2.8179430961608887
    3. 'table' → logprob: -5.317943096160889
    4. '_index' → logprob: -7.692943096160889
    5. 'al' → logprob: -7.817943096160889
    6. 'rial' → logprob: -9.69294261932373
    7. 'Table' → logprob: -10.44294261932373
    8. 'ary' → logprob: -10.69294261932373
    9. 'factor' → logprob: -10.69294261932373
    10. 'index' → logprob: -11.69294261932373

Token 119: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02126873843371868
    2. ')):' → logprob: -4.271268844604492
    3. ')' → logprob: -5.271268844604492
    4. ' ):' → logprob: -6.521268844604492
    5. '):
' → logprob: -8.021268844604492
    6. '))' → logprob: -9.646268844604492
    7. ')):
' → logprob: -9.771268844604492
    8. ']):' → logprob: -11.521268844604492
    9. ':' → logprob: -12.271268844604492
    10. ' ' → logprob: -12.896268844604492

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09554367512464523
    2. 'factor' → logprob: -2.595543622970581
    3. ' factorial' → logprob: -4.22054386138916
    4. ' factor' → logprob: -6.72054386138916
    5. ':' → logprob: -8.09554386138916
    6. '_factor' → logprob: -10.09554386138916
    7. ' ' → logprob: -10.22054386138916
    8. '    
' → logprob: -10.34554386138916
    9. ' :' → logprob: -10.47054386138916
    10. '.factor' → logprob: -10.47054386138916

Token 121: ' factorial' (ID: 111204)
  Prédit: ' factorial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factorial' → logprob: -0.2528931200504303
    2. 'factor' → logprob: -1.502893090248108
    3. '   ' → logprob: -7.377892971038818
    4. ' factor' → logprob: -8.252893447875977
    5. '_factor' → logprob: -10.877893447875977
    6. '    ' → logprob: -11.002893447875977
    7. ' 
' → logprob: -11.127893447875977
    8. '.factor' → logprob: -12.002893447875977
    9. 'fact' → logprob: -12.252893447875977
    10. '-factor' → logprob: -12.252893447875977

Token 122: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -13.875001907348633
    3. '_factor' → logprob: -15.250001907348633
    4. '_m' → logprob: -16.000001907348633
    5. '_index' → logprob: -16.375001907348633
    6. ')_' → logprob: -16.875001907348633
    7. ' _' → logprob: -17.125001907348633
    8. '_MOD' → logprob: -17.375001907348633
    9. '"_' → logprob: -17.375001907348633
    10. '##_' → logprob: -17.625001907348633

Token 123: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.318200021982193
    2. 'al' → logprob: -1.5681999921798706
    3. 'ial' → logprob: -2.81820011138916
    4. 'er' → logprob: -6.44320011138916
    5. 'ar' → logprob: -6.94320011138916
    6. 'table' → logprob: -7.56820011138916
    7. 'or' → logprob: -7.81820011138916
    8. 'ral' → logprob: -8.69320011138916
    9. '_mod' → logprob: -8.94320011138916
    10. '```' → logprob: -9.69320011138916

Token 124: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -0.0004598631348926574
    2. '[' → logprob: -7.750459671020508
    3. '_factor' → logprob: -10.875459671020508
    4. ' [' → logprob: -12.375459671020508
    5. 'factor' → logprob: -12.500459671020508
    6. '   ' → logprob: -14.625459671020508
    7. '=f' → logprob: -15.125459671020508
    8. ' factorial' → logprob: -15.250459671020508
    9. '[
' → logprob: -15.500459671020508
    10. '	f' → logprob: -15.500459671020508

Token 125: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -4.008129963040119e-06
    2. 'act' → logprob: -12.625003814697266
    3. 'factor' → logprob: -14.375003814697266
    4. 'atorial' → logprob: -17.125003814697266
    5. 'a' → logprob: -17.250003814697266
    6. '_factor' → logprob: -18.125003814697266
    7. '_actor' → logprob: -18.625003814697266
    8. 'actory' → logprob: -18.750003814697266
    9. 'ctor' → logprob: -18.875003814697266
    10. '[' → logprob: -18.875003814697266

Token 126: 'ial' (ID: 563)
  Prédit: 'al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'al' → logprob: -0.5570311546325684
    2. '_index' → logprob: -1.4320311546325684
    3. 'ial' → logprob: -1.6820311546325684
    4. 'index' → logprob: -7.432031154632568
    5. 'or' → logprob: -7.682031154632568
    6. 'orial' → logprob: -8.932031631469727
    7. 'rial' → logprob: -8.932031631469727
    8. 'er' → logprob: -9.057031631469727
    9. 'ar' → logprob: -9.182031631469727
    10. '_' → logprob: -9.557031631469727

Token 127: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.04955098778009415
    2. '_table' → logprob: -3.049551010131836
    3. 'index' → logprob: -7.549551010131836
    4. '_mod' → logprob: -8.424551010131836
    5. '[' → logprob: -9.549551010131836
    6. 'table' → logprob: -10.049551010131836
    7. 'Index' → logprob: -10.174551010131836
    8. '[index' → logprob: -11.799551010131836
    9. 'mod' → logprob: -12.049551010131836
    10. '*' → logprob: -12.049551010131836

Token 128: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006046947091817856
    2. ' ]' → logprob: -5.131046772003174
    3. ']=' → logprob: -9.631047248840332
    4. ')' → logprob: -11.006047248840332
    5. '=' → logprob: -11.006047248840332
    6. ' ' → logprob: -11.256047248840332
    7. ' =' → logprob: -12.131047248840332
    8. ' )' → logprob: -14.756047248840332
    9. 's' → logprob: -15.506047248840332
    10. ' ' → logprob: -16.131046295166016

Token 129: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326326727867126
    2. ' =' → logprob: -1.3132632970809937
    3. ' ' → logprob: -14.438262939453125
    4. '*=' → logprob: -15.313262939453125
    5. '=

' → logprob: -15.563262939453125
    6. ' *=' → logprob: -15.563262939453125
    7. ')=' → logprob: -16.313262939453125
    8. ')' → logprob: -16.438262939453125
    9. ']=' → logprob: -16.688262939453125
    10. '=f' → logprob: -16.688262939453125

Token 130: ' (
' (ID: 4112)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5283895134925842
    2. '(f' → logprob: -0.9033895134925842
    3. ' factorial' → logprob: -5.4033894538879395
    4. 'factor' → logprob: -7.6533894538879395
    5. ' ' → logprob: -8.778389930725098
    6. '(' → logprob: -9.653389930725098
    7. '   ' → logprob: -11.778389930725098
    8. '  ' → logprob: -11.778389930725098
    9. '(int' → logprob: -11.778389930725098
    10. '(
' → logprob: -12.528389930725098

Token 131: '       ' (ID: 309)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.011155344545841217
    2. ' factorial' → logprob: -4.511155128479004
    3. '   ' → logprob: -10.011155128479004
    4. 'fact' → logprob: -10.511155128479004
    5. ' factor' → logprob: -10.886155128479004
    6. '(f' → logprob: -12.136155128479004
    7. '_factor' → logprob: -13.136155128479004
    8. ' ' → logprob: -13.261155128479004
    9. '.factor' → logprob: -13.386155128479004
    10. '-factor' → logprob: -13.636155128479004

Token 132: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.003690335899591446
    2. ' factorial' → logprob: -5.628690242767334
    3. 'fact' → logprob: -10.253690719604492
    4. '   ' → logprob: -11.003690719604492
    5. '(f' → logprob: -11.253690719604492
    6. ' factor' → logprob: -11.503690719604492
    7. 'f' → logprob: -12.753690719604492
    8. '_factor' → logprob: -12.878690719604492
    9. '.factor' → logprob: -13.003690719604492
    10. '-factor' → logprob: -13.503690719604492

Token 133: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -4.656383680412546e-05
    2. '_index' → logprob: -10.250046730041504
    3. '_' → logprob: -11.875046730041504
    4. 'mod' → logprob: -13.375046730041504
    5. ' _' → logprob: -14.375046730041504
    6. '_factor' → logprob: -15.250046730041504
    7. '
' → logprob: -15.500046730041504
    8. '"_' → logprob: -15.625046730041504
    9. '_MOD' → logprob: -15.750046730041504
    10. '```' → logprob: -15.750046730041504

Token 134: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.006177864037454128
    2. 'table' → logprob: -5.75617790222168
    3. 'al' → logprob: -6.38117790222168
    4. 'ul' → logprob: -8.00617790222168
    5. 'Table' → logprob: -8.00617790222168
    6. 'or' → logprob: -9.25617790222168
    7. 'od' → logprob: -9.38117790222168
    8. 'le' → logprob: -9.50617790222168
    9. 'ule' → logprob: -9.63117790222168
    10. 'ulo' → logprob: -9.75617790222168

Token 135: '[f' (ID: 52330)
  Prédit: '[f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[f' → logprob: -9.088346359931165e-07
    2. '[' → logprob: -14.000000953674316
    3. ' [' → logprob: -17.625
    4. 'factor' → logprob: -18.625
    5. '[-' → logprob: -18.75
    6. '[
' → logprob: -18.875
    7. ')[' → logprob: -18.875
    8. '_factor' → logprob: -19.125
    9. '   ' → logprob: -20.125
    10. '[i' → logprob: -21.0

Token 136: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.00016277639952022582
    2. 'ctor' → logprob: -9.500163078308105
    3. 'factor' → logprob: -9.875163078308105
    4. 'act' → logprob: -10.375163078308105
    5. '   ' → logprob: -13.250163078308105
    6. '_factor' → logprob: -13.750163078308105
    7. '    ' → logprob: -14.750163078308105
    8. 'atorial' → logprob: -14.875163078308105
    9. '_actor' → logprob: -15.625163078308105
    10. '  ' → logprob: -15.625163078308105

Token 137: 'ial' (ID: 563)
  Prédit: '_index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.6363092064857483
    2. 'al' → logprob: -1.1363091468811035
    3. 'ial' → logprob: -2.0113091468811035
    4. 'or' → logprob: -4.2613091468811035
    5. 'index' → logprob: -7.0113091468811035
    6. '```' → logprob: -8.636309623718262
    7. 'ior' → logprob: -9.386309623718262
    8. 'l' → logprob: -9.761309623718262
    9. 'Index' → logprob: -9.886309623718262
    10. '   ' → logprob: -10.261309623718262

Token 138: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -3.380904672667384e-05
    2. 'index' → logprob: -11.250033378601074
    3. 'Index' → logprob: -11.875033378601074
    4. '_' → logprob: -12.125033378601074
    5. '-' → logprob: -13.000033378601074
    6. 'nd' → logprob: -13.625033378601074
    7. 's' → logprob: -14.125033378601074
    8. 'n' → logprob: -14.375033378601074
    9. 'd' → logprob: -14.375033378601074
    10. '_INDEX' → logprob: -14.625033378601074

Token 139: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11282528191804886
    2. ' -' → logprob: -2.237825393676758
    3. '   ' → logprob: -13.612825393676758
    4. ']' → logprob: -14.112825393676758
    5. ' ' → logprob: -14.612825393676758
    6. '-
' → logprob: -15.112825393676758
    7. '```' → logprob: -16.237825393676758
    8. '1' → logprob: -16.487825393676758
    9. ' -
' → logprob: -16.862825393676758
    10. '
' → logprob: -17.612825393676758

Token 140: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.625066757202148
    4. '```' → logprob: -16.12506675720215
    5. ')' → logprob: -18.12506675720215
    6. '
' → logprob: -18.25006675720215
    7. '<|end|>' → logprob: -18.43756675720215
    8. '    ' → logprob: -18.56256675720215
    9. ']' → logprob: -18.68756675720215
    10. '  ' → logprob: -19.31256675720215

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.771655115589965e-05
    2. ' ' → logprob: -11.000018119812012
    3. '
' → logprob: -14.375018119812012
    4. '```' → logprob: -16.000017166137695
    5. '   ' → logprob: -16.375017166137695
    6. '  ' → logprob: -17.250017166137695
    7. '

' → logprob: -17.500017166137695
    8. '    ' → logprob: -17.687517166137695
    9. '<|end|>' → logprob: -17.687517166137695
    10. '...' → logprob: -18.562517166137695

Token 142: ']' (ID: 60)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6933078765869141
    2. ' *' → logprob: -0.6933078765869141
    3. '   ' → logprob: -9.693307876586914
    4. ' ' → logprob: -9.818307876586914
    5. ' ' → logprob: -10.943307876586914
    6. '    ' → logprob: -11.818307876586914
    7. '       ' → logprob: -12.318307876586914
    8. ')' → logprob: -12.568307876586914
    9. '*
' → logprob: -12.693307876586914
    10. '
' → logprob: -13.443307876586914

Token 143: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3132922053337097
    2. ' *' → logprob: -1.3132922649383545
    3. ' ' → logprob: -10.813292503356934
    4. ' ' → logprob: -11.813292503356934
    5. '   ' → logprob: -13.313292503356934
    6. '*
' → logprob: -14.188292503356934
    7. ' *
' → logprob: -16.313291549682617
    8. '    ' → logprob: -16.438291549682617
    9. '*object' → logprob: -16.563291549682617
    10. '  ' → logprob: -17.063291549682617

Token 144: ' factorial' (ID: 111204)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.3485303521156311
    2. ' factorial' → logprob: -1.2235302925109863
    3. ' factor' → logprob: -10.098530769348145
    4. 'fact' → logprob: -10.473530769348145
    5. ' ' → logprob: -12.473530769348145
    6. '_factor' → logprob: -12.598530769348145
    7. '   ' → logprob: -13.223530769348145
    8. 'f' → logprob: -13.473530769348145
    9. '.factor' → logprob: -13.473530769348145
    10. 'fac' → logprob: -14.473530769348145

Token 145: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.0008079635445028543
    2. '_mod' → logprob: -7.125807762145996
    3. '_factor' → logprob: -12.875807762145996
    4. '_' → logprob: -14.500807762145996
    5. ' _' → logprob: -16.250808715820312
    6. 'index' → logprob: -16.250808715820312
    7. 'Index' → logprob: -17.625808715820312
    8. '```' → logprob: -18.000808715820312
    9. ')' → logprob: -18.250808715820312
    10. '_value' → logprob: -18.375808715820312

Token 146: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003412490012124181
    2. ' )' → logprob: -5.87841272354126
    3. '%' → logprob: -8.503412246704102
    4. ')%' → logprob: -8.503412246704102
    5. ' %' → logprob: -8.628412246704102
    6. '   ' → logprob: -10.753412246704102
    7. '```' → logprob: -15.003412246704102
    8. ')
' → logprob: -15.128412246704102
    9. ' ' → logprob: -15.378412246704102
    10. '    ' → logprob: -15.503412246704102

Token 147: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.048587486147880554
    2. ' MOD' → logprob: -3.0485875606536865
    3. '_MOD' → logprob: -16.923587799072266
    4. '.MOD' → logprob: -17.673587799072266
    5. 'MODULE' → logprob: -18.048587799072266
    6. 'MO' → logprob: -18.298587799072266
    7. ' ' → logprob: -18.423587799072266
    8. '   ' → logprob: -18.798587799072266
    9. 'M' → logprob: -20.173587799072266
    10. '(M' → logprob: -20.173587799072266

Token 148: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -9.729906196298543e-06
    2. 'O' → logprob: -11.750009536743164
    3. 'ULE' → logprob: -13.625009536743164
    4. 'UL' → logprob: -15.125009536743164
    5. '
' → logprob: -16.250009536743164
    6. 'U' → logprob: -16.375009536743164
    7. '```' → logprob: -17.500009536743164
    8. 'ulo' → logprob: -17.625009536743164
    9. '   ' → logprob: -17.750009536743164
    10. '

' → logprob: -17.750009536743164

Token 149: '_CONSTANT' (ID: 115083)
  Prédit: '_CONSTANT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONSTANT' → logprob: -2.15310683415737e-05
    2. '_CONST' → logprob: -11.625021934509277
    3. '_constant' → logprob: -12.125021934509277
    4. ')' → logprob: -12.625021934509277
    5. ')_' → logprob: -12.875021934509277
    6. 'constant' → logprob: -15.000021934509277
    7. '_' → logprob: -15.625021934509277
    8. '_CON' → logprob: -15.875021934509277
    9. 'Constant' → logprob: -16.12502098083496
    10. '```' → logprob: -16.25002098083496

Token 150: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.093505099765025e-05
    2. ')
' → logprob: -11.125020980834961
    3. ' )' → logprob: -12.125020980834961
    4. ')

' → logprob: -15.000020980834961
    5. '   ' → logprob: -15.375020980834961
    6. ')`' → logprob: -17.50002098083496
    7. ')#' → logprob: -17.75002098083496
    8. ')
' → logprob: -18.00002098083496
    9. '),' → logprob: -18.12502098083496
    10. ');' → logprob: -18.75002098083496

Token 151: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00013047587708570063
    2. ')
' → logprob: -9.000130653381348
    3. ' )' → logprob: -12.625130653381348
    4. '   ' → logprob: -12.875130653381348
    5. ')

' → logprob: -13.750130653381348
    6. ')
' → logprob: -17.37512969970703
    7. ')`' → logprob: -17.62512969970703
    8. ')#' → logprob: -17.75012969970703
    9. '),' → logprob: -18.62512969970703
    10. ' ' → logprob: -18.87512969970703

Token 152: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.162282367469743e-05
    2. ')
' → logprob: -9.375091552734375
    3. ' )' → logprob: -12.000091552734375
    4. ')

' (adapté à ' )

') → logprob: -14.625091552734375
    5. '   ' → logprob: -16.500091552734375
    6. ')#' → logprob: -17.875091552734375
    7. ')`' → logprob: -18.000091552734375
    8. ')
' → logprob: -18.500091552734375
    9. ')return' → logprob: -18.750091552734375
    10. '),' → logprob: -18.875091552734375

Token 153: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03217974677681923
    2. '
' → logprob: -4.407179832458496
    3. ')' → logprob: -4.532179832458496
    4. '#' → logprob: -5.032179832458496
    5. '```' → logprob: -7.282179832458496
    6. 'n' → logprob: -7.907179832458496
    7. '<|end|>' → logprob: -8.282179832458496
    8. '

' → logprob: -8.282179832458496
    9. '\n' → logprob: -8.782179832458496
    10. '(' → logprob: -9.157179832458496

Token 154: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.1093578804284334e-05
    2. '#' → logprob: -10.125051498413086
    3. 'from' → logprob: -12.500051498413086
    4. 'inverse' → logprob: -13.125051498413086
    5. 'import' → logprob: -13.750051498413086
    6. 'pow' → logprob: -14.250051498413086
    7. 'class' → logprob: -14.375051498413086
    8. ' def' → logprob: -14.500051498413086
    9. '
' → logprob: -14.625051498413086
    10. 'factor' → logprob: -14.875051498413086

Token 155: ' pour' (ID: 1930)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.6506321430206299
    2. 'def' → logprob: -0.7756321430206299
    3. ' factorial' → logprob: -4.400631904602051
    4. ' calculate' → logprob: -5.775631904602051
    5. '_factor' → logprob: -7.650631904602051
    6. 'factor' → logprob: -7.900631904602051
    7. ' compute' → logprob: -8.15063190460205
    8. ' de' → logprob: -8.27563190460205
    9. '_def' → logprob: -8.65063190460205
    10. ' factor' → logprob: -8.77563190460205

Token 156: ' lire' (ID: 46082)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.6359120011329651
    2. 'calcul' → logprob: -0.7609120011329651
    3. 'cal' → logprob: -6.38591194152832
    4. 'Calcul' → logprob: -7.26091194152832
    5. ' effectuer' → logprob: -8.51091194152832
    6. 'comput' → logprob: -8.88591194152832
    7. 'calc' → logprob: -9.01091194152832
    8. 'factor' → logprob: -9.63591194152832
    9. ' calc' → logprob: -10.01091194152832
    10. ' calcular' → logprob: -10.01091194152832

Token 157: ' une' (ID: 2463)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0475359782576561
    2. 'input' → logprob: -4.1725358963012695
    3. '_' → logprob: -4.7975358963012695
    4. '_input' → logprob: -4.7975358963012695
    5. '(' → logprob: -5.5475358963012695
    6. 'def' → logprob: -5.9225358963012695
    7. '():' → logprob: -6.0475358963012695
    8. 's' → logprob: -7.2975358963012695
    9. 'l' → logprob: -7.4225358963012695
    10. 'la' → logprob: -7.5475358963012695

Token 158: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.42698535323143005
    2. 'ligne' → logprob: -1.5519853830337524
    3. 'entrée' → logprob: -2.551985263824463
    4. 'int' → logprob: -4.051985263824463
    5. '_' → logprob: -4.801985263824463
    6. 'l' → logprob: -5.176985263824463
    7. ' valeur' → logprob: -5.426985263824463
    8. '_l' → logprob: -5.551985263824463
    9. 'liste' → logprob: -5.801985263824463
    10. ' liste' → logprob: -6.051985263824463

Token 159: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002021189546212554
    2. 'def' → logprob: -6.752021312713623
    3. '()
' → logprob: -8.002020835876465
    4. '()\' → logprob: -8.502020835876465
    5. ' =' → logprob: -9.127020835876465
    6. 'input' → logprob: -10.127020835876465
    7. '_input' → logprob: -10.127020835876465
    8. '()

' → logprob: -11.002020835876465
    9. '().' → logprob: -11.252020835876465
    10. '#' → logprob: -11.627020835876465

Token 160: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.4966657757759094
    2. 'entrée' → logprob: -1.3716657161712646
    3. ' input' → logprob: -2.3716657161712646
    4. 'input' → logprob: -3.4966657161712646
    5. ' code' → logprob: -5.496665954589844
    6. 'code' → logprob: -5.621665954589844
    7. '’entrée' → logprob: -6.371665954589844
    8. 'e' → logprob: -6.371665954589844
    9. ' entrée' → logprob: -6.496665954589844
    10. 'stdin' → logprob: -8.246665954589844

Token 161: ',' (ID: 11)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2274264693260193
    2. 'def' → logprob: -1.602426528930664
    3. '()
' → logprob: -6.602426528930664
    4. 'input' → logprob: -8.477426528930664
    5. '()

' → logprob: -9.102426528930664
    6. '()\' → logprob: -9.352426528930664
    7. ' def' → logprob: -9.602426528930664
    8. ' ()' → logprob: -10.102426528930664
    9. '_input' → logprob: -10.602426528930664
    10. '
' → logprob: -10.852426528930664

Token 162: ' la' (ID: 557)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.33288851380348206
    2. 'split' → logprob: -2.332888603210449
    3. ' nettoyer' → logprob: -2.707888603210449
    4. ' strip' → logprob: -2.832888603210449
    5. ' split' → logprob: -4.082888603210449
    6. 'spl' → logprob: -4.457888603210449
    7. ' splitter' → logprob: -5.332888603210449
    8. 'def' → logprob: -5.832888603210449
    9. 'vider' → logprob: -5.832888603210449
    10. 'trim' → logprob: -5.957888603210449

Token 163: ' couper' (ID: 135212)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.33228424191474915
    2. 'strip' → logprob: -1.7072842121124268
    3. ' split' → logprob: -3.7072842121124268
    4. 'div' → logprob: -4.332284450531006
    5. 'spl' → logprob: -4.332284450531006
    6. 'str' → logprob: -4.582284450531006
    7. ' nettoyer' → logprob: -4.707284450531006
    8. 'token' → logprob: -5.457284450531006
    9. 'ret' → logprob: -5.582284450531006
    10. 'parse' → logprob: -6.082284450531006

Token 164: ' par' (ID: 686)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0029793642461299896
    2. ' en' → logprob: -6.627979278564453
    3. '().' → logprob: -7.252979278564453
    4. 'en' → logprob: -8.502979278564453
    5. ')' → logprob: -9.002979278564453
    6. 'par' → logprob: -9.252979278564453
    7. 'et' → logprob: -9.377979278564453
    8. ' par' → logprob: -9.752979278564453
    9. ',' → logprob: -9.877979278564453
    10. '('' → logprob: -10.127979278564453

Token 165: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.2315324991941452
    2. ' espace' → logprob: -1.8565324544906616
    3. ' des' → logprob: -4.606532573699951
    4. 'spaces' → logprob: -4.731532573699951
    5. 'space' → logprob: -5.356532573699951
    6. 'esp' → logprob: -5.481532573699951
    7. ' spaces' → logprob: -5.481532573699951
    8. ''' → logprob: -5.731532573699951
    9. ' les' → logprob: -6.106532573699951
    10. ''espace' → logprob: -6.231532573699951

Token 166: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09515712410211563
    2. ',' → logprob: -2.4701571464538574
    3. ')' → logprob: -6.095157146453857
    4. '()' → logprob: -6.345157146453857
    5. ' def' → logprob: -6.970157146453857
    6. ' =' → logprob: -8.4701566696167
    7. 'et' → logprob: -8.5951566696167
    8. 'input' → logprob: -8.5951566696167
    9. ' ,' → logprob: -8.8451566696167
    10. ' and' → logprob: -8.8451566696167

Token 167: ' convertir' (ID: 79223)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.6613754630088806
    2. ' retourner' → logprob: -1.6613755226135254
    3. ' convertir' → logprob: -1.9113755226135254
    4. 'return' → logprob: -2.6613755226135254
    5. 'convert' → logprob: -2.7863755226135254
    6. 'ren' → logprob: -5.161375522613525
    7. ' convert' → logprob: -6.036375522613525
    8. ' return' → logprob: -6.286375522613525
    9. 'map' → logprob: -6.786375522613525
    10. 'les' → logprob: -7.661375522613525

Token 168: ' chaque' (ID: 21194)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.023087652400135994
    2. ' en' → logprob: -4.023087501525879
    3. 'la' → logprob: -5.898087501525879
    4. 'def' → logprob: -6.398087501525879
    5. 'les' → logprob: -9.148087501525879
    6. '(en' → logprob: -9.398087501525879
    7. '(int' → logprob: -9.898087501525879
    8. 'le' → logprob: -10.273087501525879
    9. 'int' → logprob: -10.273087501525879
    10. '(' → logprob: -10.398087501525879

Token 169: ' é' (ID: 1212)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -1.0675925016403198
    2. 'int' → logprob: -1.4425925016403198
    3. ' élément' → logprob: -1.9425925016403198
    4. 'element' → logprob: -2.4425926208496094
    5. ' token' → logprob: -2.6925926208496094
    6. ' element' → logprob: -2.9425926208496094
    7. 'token' → logprob: -3.0675926208496094
    8. ' int' → logprob: -5.567592620849609
    9. 'entrée' → logprob: -5.567592620849609
    10. 'elem' → logprob: -5.817592620849609

Token 170: 'lement' (ID: 1254)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2878832519054413
    2. 'lement' → logprob: -1.6628832817077637
    3. 'lé' → logprob: -2.9128832817077637
    4. 'lem' → logprob: -5.912883281707764
    5. 'nt' → logprob: -6.537883281707764
    6. 'élé' → logprob: -7.662883281707764
    7. 'ément' → logprob: -8.162882804870605
    8. 'ment' → logprob: -8.162882804870605
    9. 'lt' → logprob: -8.537882804870605
    10. 'le' → logprob: -8.537882804870605

Token 171: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.0111493319272995
    2. 'en' → logprob: -4.5111494064331055
    3. '_en' → logprob: -10.011149406433105
    4. 's' → logprob: -11.136149406433105
    5. ' into' → logprob: -11.761149406433105
    6. 'def' → logprob: -11.761149406433105
    7. ' ' → logprob: -12.136149406433105
    8. ' in' → logprob: -12.511149406433105
    9. '()' → logprob: -12.761149406433105
    10. '	en' → logprob: -13.011149406433105

Token 172: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0073125921189785
    2. 'ent' → logprob: -5.007312774658203
    3. ' int' → logprob: -7.507312774658203
    4. ' entier' → logprob: -10.007312774658203
    5. ' ent' → logprob: -13.757312774658203
    6. 'integer' → logprob: -13.882312774658203
    7. '=int' → logprob: -15.382312774658203
    8. 'inte' → logprob: -15.632312774658203
    9. '(int' → logprob: -15.757312774658203
    10. ' integer' → logprob: -15.882312774658203

Token 173: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11598285287618637
    2. '()' → logprob: -2.3659827709198
    3. '(' → logprob: -5.240983009338379
    4. ' def' → logprob: -5.990983009338379
    5. ':' → logprob: -6.365983009338379
    6. 's' → logprob: -6.490983009338379
    7. '_' → logprob: -6.615983009338379
    8. '(
' → logprob: -6.740983009338379
    9. ',' → logprob: -7.615983009338379
    10. '()
' → logprob: -8.115983009338379

Token 174: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.1008713702030946e-06
    2. ' def' → logprob: -13.750001907348633
    3. 'input' → logprob: -14.375001907348633
    4. '
' → logprob: -16.375001907348633
    5. 'de' → logprob: -16.625001907348633
    6. '```' → logprob: -16.625001907348633
    7. 'd' → logprob: -16.875001907348633
    8. '\' → logprob: -17.375001907348633
    9. '#' → logprob: -18.750001907348633
    10. ' 
' → logprob: -19.250001907348633

Token 175: ' lire' (ID: 46082)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.19181162118911743
    2. ' input' → logprob: -2.4418115615844727
    3. 'read' → logprob: -2.5668115615844727
    4. 'input' → logprob: -4.691811561584473
    5. ' parse' → logprob: -7.066811561584473
    6. ' readline' → logprob: -8.191811561584473
    7. 'parse' → logprob: -8.566811561584473
    8. ' map' → logprob: -8.566811561584473
    9. ' lire' → logprob: -10.566811561584473
    10. ' list' → logprob: -11.191811561584473

Token 176: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.05458727106451988
    2. '_ent' → logprob: -3.5545873641967773
    3. '_' → logprob: -3.9295873641967773
    4. '()' → logprob: -6.304587364196777
    5. '_la' → logprob: -7.054587364196777
    6. '_line' → logprob: -7.554587364196777
    7. 'L' → logprob: -8.054587364196777
    8. '_input' → logprob: -8.054587364196777
    9. '_int' → logprob: -8.179587364196777
    10. '():' → logprob: -8.554587364196777

Token 177: 'iste' (ID: 4872)
  Prédit: 'igne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -0.014372811652719975
    2. 'ine' → logprob: -4.639372825622559
    3. 'ig' → logprob: -6.514372825622559
    4. 'iste' → logprob: -6.639372825622559
    5. 'ignes' → logprob: -7.389372825622559
    6. 'a' → logprob: -7.514372825622559
    7. 'ignee' → logprob: -9.139372825622559
    8. '_' → logprob: -9.389372825622559
    9. 'e' → logprob: -10.014372825622559
    10. 'ign' → logprob: -10.139372825622559

Token 178: '_ent' (ID: 66249)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.03566737100481987
    2. '()' → logprob: -3.4106674194335938
    3. '_' → logprob: -7.285667419433594
    4. '():
' → logprob: -7.535667419433594
    5. '(' → logprob: -7.660667419433594
    6. ' ()' → logprob: -9.285667419433594
    7. '_de' → logprob: -9.910667419433594
    8. ' ():' → logprob: -9.910667419433594
    9. '_des' → logprob: -10.785667419433594
    10. 's' → logprob: -10.785667419433594

Token 179: 'iers' (ID: 11012)
  Prédit: 'ree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.16654223203659058
    2. 'ier' → logprob: -2.6665422916412354
    3. 'rée' → logprob: -3.5415422916412354
    4. 'iers' → logprob: -3.9165422916412354
    5. 'r' → logprob: -4.166542053222656
    6. 'rees' → logprob: -4.541542053222656
    7. 'iere' → logprob: -5.291542053222656
    8. 're' → logprob: -7.541542053222656
    9. 'er' → logprob: -7.916542053222656
    10. 'ete' → logprob: -8.041542053222656

Token 180: '_dep' (ID: 124838)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.013359392061829567
    2. '()' → logprob: -4.513359546661377
    3. '():
' → logprob: -6.513359546661377
    4. ' ():' → logprob: -7.763359546661377
    5. ' ()' → logprob: -8.513359069824219
    6. '(' → logprob: -8.888359069824219
    7. '(line' → logprob: -10.263359069824219
    8. '(input' → logprob: -12.013359069824219
    9. '(l' → logprob: -12.138359069824219
    10. '(s' → logprob: -13.138359069824219

Token 181: 'uis' (ID: 4560)
  Prédit: 'uis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uis' → logprob: -0.03501400351524353
    2. 'u' → logprob: -3.9100139141082764
    3. 'ut' → logprob: -4.9100141525268555
    4. 'ui' → logprob: -6.0350141525268555
    5. 'is' → logprob: -6.2850141525268555
    6. 'art' → logprob: -7.0350141525268555
    7. 'ois' → logprob: -7.9100141525268555
    8. 'end' → logprob: -8.785014152526855
    9. '```' → logprob: -8.910014152526855
    10. 'os' → logprob: -8.910014152526855

Token 182: '_l' (ID: 1478)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4090602993965149
    2. 'entrée' → logprob: -1.9090602397918701
    3. 'chaine' → logprob: -3.03406023979187
    4. 'une' → logprob: -3.65906023979187
    5. 'l' → logprob: -3.78406023979187
    6. 'la' → logprob: -3.90906023979187
    7. 'ligne' → logprob: -4.284060478210449
    8. 'ent' → logprob: -4.409060478210449
    9. '_input' → logprob: -4.534060478210449
    10. '_' → logprob: -4.534060478210449

Token 183: 'igne' (ID: 24120)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8255329728126526
    2. 'ine' → logprob: -1.4505329132080078
    3. 'e' → logprob: -2.075532913208008
    4. 'a' → logprob: -2.950532913208008
    5. 'ent' → logprob: -3.075532913208008
    6. 'entrée' → logprob: -3.450532913208008
    7. ''entrée' → logprob: -3.450532913208008
    8. 'igne' → logprob: -4.325532913208008
    9. 'stdin' → logprob: -5.700532913208008
    10. 'in' → logprob: -5.825532913208008

Token 184: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04354167357087135
    2. '()' → logprob: -3.168541669845581
    3. '():
' → logprob: -8.54354190826416
    4. '(' → logprob: -9.04354190826416
    5. ' ():' → logprob: -9.04354190826416
    6. ' ()' → logprob: -9.29354190826416
    7. '(line' → logprob: -12.29354190826416
    8. '()`' → logprob: -13.16854190826416
    9. '(s' → logprob: -13.54354190826416
    10. '()*' → logprob: -13.66854190826416

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0028615815099328756
    2. ' return' → logprob: -6.127861499786377
    3. '    
' → logprob: -7.627861499786377
    4. 'return' → logprob: -9.127861976623535
    5. '    ' → logprob: -10.627861976623535
    6. '	return' → logprob: -11.002861976623535
    7. '
' → logprob: -11.377861976623535
    8. '  ' → logprob: -12.002861976623535
    9. ' 
' → logprob: -12.002861976623535
    10. '   ' → logprob: -12.002861976623535

Token 186: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.038083385676145554
    2. ' return' → logprob: -3.28808331489563
    3. '   ' → logprob: -10.16308307647705
    4. 'ret' → logprob: -13.28808307647705
    5. ' ' → logprob: -14.91308307647705
    6. 'list' → logprob: -14.91308307647705
    7. '	return' → logprob: -15.66308307647705
    8. 'import' → logprob: -15.91308307647705
    9. 'int' → logprob: -16.038084030151367
    10. '    
' → logprob: -16.163084030151367

Token 187: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.014176792465150356
    2. ' list' → logprob: -4.264176845550537
    3. '[list' → logprob: -11.889176368713379
    4. 'map' → logprob: -12.639176368713379
    5. '[' → logprob: -12.764176368713379
    6. 'liste' → logprob: -15.639176368713379
    7. '	list' → logprob: -16.389177322387695
    8. ' [' → logprob: -16.764177322387695
    9. '   ' → logprob: -17.514177322387695
    10. '  ' → logprob: -18.264177322387695

Token 188: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.4121114822482923e-06
    2. ' int' → logprob: -12.625003814697266
    3. '(int' → logprob: -18.000003814697266
    4. '	int' → logprob: -18.625003814697266
    5. '*' → logprob: -19.000003814697266
    6. '```' → logprob: -19.375003814697266
    7. '
' → logprob: -19.500003814697266
    8. '   ' → logprob: -19.625003814697266
    9. '[int' → logprob: -20.000003814697266
    10. ']int' → logprob: -20.250003814697266

Token 189: '(element' (ID: 22709)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.007466420065611601
    2. '(i' → logprob: -5.0074663162231445
    3. 'x' → logprob: -8.132466316223145
    4. '(part' → logprob: -9.382466316223145
    5. '(token' → logprob: -9.757466316223145
    6. ']' → logprob: -9.882466316223145
    7. '(_)' → logprob: -10.007466316223145
    8. '(s' → logprob: -10.132466316223145
    9. '(' → logprob: -10.257466316223145
    10. '(e' → logprob: -10.507466316223145

Token 190: '_' (ID: 62)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.44463130831718445
    2. ')' → logprob: -1.4446313381195068
    3. '()' → logprob: -2.569631338119507
    4. '(i' → logprob: -3.444631338119507
    5. '(s' → logprob: -5.319631099700928
    6. '(e' → logprob: -6.319631099700928
    7. '(token' → logprob: -6.569631099700928
    8. '(part' → logprob: -6.944631099700928
    9. '(' → logprob: -7.069631099700928
    10. 'for' → logprob: -7.319631099700928

Token 191: 'chaine' (ID: 68916)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.0450729131698608
    2. ')' → logprob: -1.6700729131698608
    3. '(x' → logprob: -1.6700729131698608
    4. '()' → logprob: -2.7950730323791504
    5. 'for' → logprob: -2.7950730323791504
    6. 's' → logprob: -2.9200730323791504
    7. 'i' → logprob: -3.9200730323791504
    8. '(i' → logprob: -4.42007303237915
    9. ']' → logprob: -4.54507303237915
    10. 'part' → logprob: -4.54507303237915

Token 192: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13252021372318268
    2. '())' → logprob: -2.1325201988220215
    3. '(x' → logprob: -5.3825201988220215
    4. '()' → logprob: -8.63252067565918
    5. '(s' → logprob: -9.00752067565918
    6. 's' → logprob: -9.13252067565918
    7. '(i' → logprob: -9.25752067565918
    8. 'x' → logprob: -9.50752067565918
    9. 'part' → logprob: -9.63252067565918
    10. '(token' → logprob: -9.75752067565918

Token 193: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5800366401672363
    2. ' for' → logprob: -0.8300366401672363
    3. '()' → logprob: -5.830036640167236
    4. ')' → logprob: -6.830036640167236
    5. ' in' → logprob: -11.080036163330078
    6. 'in' → logprob: -11.580036163330078
    7. ' ' → logprob: -11.580036163330078
    8. '
' → logprob: -11.705036163330078
    9. '(x' → logprob: -11.830036163330078
    10. 'x' → logprob: -12.705036163330078

Token 194: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.4741022288799286
    2. ' element' → logprob: -0.974102258682251
    3. ' élément' → logprob: -11.224102020263672
    4. '_element' → logprob: -12.724102020263672
    5. '	element' → logprob: -12.724102020263672
    6. ' ' → logprob: -13.349102020263672
    7. 'élé' → logprob: -13.974102020263672
    8. 'lement' → logprob: -14.224102020263672
    9. '_' → logprob: -14.474102020263672
    10. 'elem' → logprob: -14.474102020263672

Token 195: '_' (ID: 62)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0025403478648513556
    2. 'in' → logprob: -6.252540111541748
    3. '_' → logprob: -7.877540111541748
    4. ' ' → logprob: -9.377540588378906
    5. 'element' → logprob: -9.377540588378906
    6. '<|end|>' → logprob: -11.752540588378906
    7. '_in' → logprob: -11.877540588378906
    8. ' ' → logprob: -12.002540588378906
    9. 'input' → logprob: -12.127540588378906
    10. 'import' → logprob: -12.377540588378906

Token 196: 'chaine' (ID: 68916)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1532382220029831
    2. ' input' → logprob: -2.028238296508789
    3. 'sys' → logprob: -4.903238296508789
    4. ' sys' → logprob: -6.028238296508789
    5. 'element' → logprob: -7.403238296508789
    6. ' element' → logprob: -11.028238296508789
    7. '(input' → logprob: -11.153238296508789
    8. 'chaine' → logprob: -11.528238296508789
    9. '_input' → logprob: -11.653238296508789
    10. '_' → logprob: -12.278238296508789

Token 197: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0031981545034796
    2. 'in' → logprob: -5.753198146820068
    3. 'input' → logprob: -11.253198623657227
    4. 'import' → logprob: -13.003198623657227
    5. '(input' → logprob: -13.628198623657227
    6. ' ' → logprob: -13.878198623657227
    7. 'sys' → logprob: -14.378198623657227
    8. '(sys' → logprob: -14.628198623657227
    9. '=sys' → logprob: -14.878198623657227
    10. ' input' → logprob: -15.253198623657227

Token 198: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.30667442083358765
    2. 'sys' → logprob: -2.0566744804382324
    3. ' input' → logprob: -2.3066744804382324
    4. ' sys' → logprob: -3.3066744804382324
    5. '=sys' → logprob: -14.181674003601074
    6. '(sys' → logprob: -14.806674003601074
    7. 'stdin' → logprob: -15.931674003601074
    8. ' ' → logprob: -16.05667495727539
    9. '(input' → logprob: -16.05667495727539
    10. '	sys' → logprob: -16.80667495727539

Token 199: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.723973582556937e-05
    2. '()' → logprob: -11.000017166137695
    3. ' ().' → logprob: -14.625017166137695
    4. '(' → logprob: -16.500017166137695
    5. '()]' → logprob: -19.875017166137695
    6. '()
' → logprob: -20.750017166137695
    7. '()].' → logprob: -21.625017166137695
    8. ' ()' → logprob: -21.750017166137695
    9. '.split' → logprob: -22.750017166137695
    10. '("").' → logprob: -22.875017166137695

Token 200: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.1602362096309662
    2. 'strip' → logprob: -1.9102362394332886
    3. 'rstrip' → logprob: -11.410236358642578
    4. ' split' → logprob: -14.035236358642578
    5. ' strip' → logprob: -15.160236358642578
    6. 'spl' → logprob: -18.035236358642578
    7. '(split' → logprob: -18.160236358642578
    8. '.split' → logprob: -19.285236358642578
    9. '.strip' → logprob: -19.410236358642578
    10. '(strip' → logprob: -20.285236358642578

Token 201: '("' (ID: 568)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -6.44443862256594e-05
    2. '()' → logprob: -9.875064849853516
    3. '())' → logprob: -11.875064849853516
    4. '(' → logprob: -12.125064849853516
    5. ']' → logprob: -15.125064849853516
    6. ']()' → logprob: -16.375064849853516
    7. '()]
' → logprob: -16.375064849853516
    8. '()],' → logprob: -17.125064849853516
    9. '('' → logprob: -17.250064849853516
    10. '(),' → logprob: -17.250064849853516

Token 202: ' ")' (ID: 25221)
  Prédit: '")]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")]' → logprob: -0.353639155626297
    2. ' "' → logprob: -1.8536391258239746
    3. ')]' → logprob: -1.9786391258239746
    4. ' )' → logprob: -6.978639125823975
    5. ')' → logprob: -7.103639125823975
    6. '")' → logprob: -7.853639125823975
    7. '')]' → logprob: -8.228639602661133
    8. ' ")' → logprob: -8.603639602661133
    9. ']' → logprob: -8.978639602661133
    10. ' ]' → logprob: -9.228639602661133

Token 203: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03900111839175224
    2. ')]' → logprob: -3.289001226425171
    3. ')' → logprob: -7.039000988006592
    4. ' ]' → logprob: -9.91400146484375
    5. '])' → logprob: -11.16400146484375
    6. '()]' → logprob: -11.41400146484375
    7. ']
' → logprob: -12.91400146484375
    8. '])]' → logprob: -13.53900146484375
    9. '   ' → logprob: -13.78900146484375
    10. '']' → logprob: -14.28900146484375

Token 204: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05644417181611061
    2. '<|end|>' → logprob: -3.8064441680908203
    3. '
' → logprob: -4.05644416809082
    4. '#' → logprob: -4.30644416809082
    5. '<|end|>' → logprob: -6.93144416809082
    6. '

' → logprob: -7.68144416809082
    7. '```' → logprob: -8.55644416809082
    8. '\' → logprob: -10.05644416809082
    9. '\n' → logprob: -10.43144416809082
    10. '  
' → logprob: -10.43144416809082

Token 205: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.88418151892256e-05
    2. '#' → logprob: -9.750059127807617
    3. ' def' → logprob: -15.875059127807617
    4. 'class' → logprob: -16.500059127807617
    5. 'd' → logprob: -16.625059127807617
    6. 'from' → logprob: -16.750059127807617
    7. 'de' → logprob: -17.000059127807617
    8. 'import' → logprob: -17.125059127807617
    9. 'dé' → logprob: -17.750059127807617
    10. '\' → logprob: -18.500059127807617

Token 206: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0067124092020094395
    2. ' def' → logprob: -6.131712436676025
    3. 'pour' → logprob: -6.256712436676025
    4. '#' → logprob: -7.131712436676025
    5. ' pour' → logprob: -7.631712436676025
    6. '_de' → logprob: -7.631712436676025
    7. 'de' → logprob: -7.881712436676025
    8. '_def' → logprob: -9.006711959838867
    9. 'for' → logprob: -9.506711959838867
    10. '_p' → logprob: -9.631711959838867

Token 207: ' lire' (ID: 46082)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.013448549434542656
    2. ' calcul' → logprob: -5.388448715209961
    3. 'factor' → logprob: -6.138448715209961
    4. 'cal' → logprob: -6.263448715209961
    5. 'in' → logprob: -7.013448715209961
    6. 'l' → logprob: -7.013448715209961
    7. 'comb' → logprob: -7.763448715209961
    8. 'inverse' → logprob: -7.888448715209961
    9. 'def' → logprob: -8.013448715209961
    10. 'calc' → logprob: -8.638448715209961

Token 208: ' n' (ID: 297)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.2960217297077179
    2. '<|end|>' → logprob: -2.4210216999053955
    3. 'un' → logprob: -2.7960216999053955
    4. 'ent' → logprob: -3.9210216999053955
    5. ' une' → logprob: -4.171021938323975
    6. 'la' → logprob: -4.296021938323975
    7. '()' → logprob: -4.421021938323975
    8. 'int' → logprob: -4.671021938323975
    9. '_un' → logprob: -5.171021938323975
    10. 'le' → logprob: -5.171021938323975

Token 209: ' lignes' (ID: 81687)
  Prédit: '_ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.1501893848180771
    2. '_l' → logprob: -2.9001893997192383
    3. '_' → logprob: -3.2751893997192383
    4. 'ent' → logprob: -3.7751893997192383
    5. '<|end|>' → logprob: -5.400189399719238
    6. 'umer' → logprob: -5.900189399719238
    7. '(ent' → logprob: -5.900189399719238
    8. '()' → logprob: -6.150189399719238
    9. 'ombres' → logprob: -6.400189399719238
    10. '_des' → logprob: -6.775189399719238

Token 210: ' d' (ID: 272)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5279864072799683
    2. '(n' → logprob: -0.9029864072799683
    3. '(' → logprob: -5.777986526489258
    4. 'de' → logprob: -7.402986526489258
    5. 'dep' → logprob: -8.152986526489258
    6. '(dep' → logprob: -8.652986526489258
    7. '(de' → logprob: -9.527986526489258
    8. '(
' → logprob: -9.652986526489258
    9. '_dep' → logprob: -9.777986526489258
    10. ',' → logprob: -9.902986526489258

Token 211: ''' (ID: 6)
  Prédit: ''entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.4039563238620758
    2. 'entrée' → logprob: -1.1539562940597534
    3. 'input' → logprob: -4.778956413269043
    4. 'entr' → logprob: -6.028956413269043
    5. ''ent' → logprob: -6.153956413269043
    6. 'ent' → logprob: -6.653956413269043
    7. '<|end|>' → logprob: -6.903956413269043
    8. '’entrée' → logprob: -7.903956413269043
    9. 'import' → logprob: -8.528956413269043
    10. '_input' → logprob: -8.528956413269043

Token 212: 'entr' (ID: 12792)
  Prédit: 'entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entrée' → logprob: -0.03636135905981064
    2. 'ent' → logprob: -4.036361217498779
    3. 'entr' → logprob: -4.911361217498779
    4. 'input' → logprob: -5.161361217498779
    5. ''entrée' → logprob: -5.536361217498779
    6. 'int' → logprob: -7.411361217498779
    7. ''ent' → logprob: -9.161361694335938
    8. 'import' → logprob: -9.661361694335938
    9. 'entrant' → logprob: -10.411361694335938
    10. 'entries' → logprob: -10.536361694335938

Token 213: 'ées' (ID: 5161)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.00021224225929472595
    2. 'ee' → logprob: -9.000212669372559
    3. 'ées' → logprob: -9.500212669372559
    4. 'é' → logprob: -11.375212669372559
    5. 'e' → logprob: -13.250212669372559
    6. '#' → logprob: -15.500212669372559
    7. 'ees' → logprob: -15.875212669372559
    8. '```' → logprob: -16.000211715698242
    9. 'rée' → logprob: -17.250211715698242
    10. '"' → logprob: -17.875211715698242

Token 214: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2526385188102722
    2. '(n' → logprob: -1.502638578414917
    3. '(' → logprob: -7.377638339996338
    4. '(
' → logprob: -10.252638816833496
    5. '
' → logprob: -11.127638816833496
    6. '(def' → logprob: -11.252638816833496
    7. ' def' → logprob: -12.377638816833496
    8. '_def' → logprob: -12.502638816833496
    9. 'n' → logprob: -12.752638816833496
    10. '(num' → logprob: -13.627638816833496

Token 215: ' chacune' (ID: 127465)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07240860164165497
    2. '#' → logprob: -3.072408676147461
    3. ' def' → logprob: -4.447408676147461
    4. 'n' → logprob: -4.822408676147461
    5. ' n' → logprob: -6.572408676147461
    6. 'et' → logprob: -6.947408676147461
    7. ' et' → logprob: -8.072408676147461
    8. '   ' → logprob: -8.697408676147461
    9. ' #' → logprob: -8.697408676147461
    10. ' stock' → logprob: -9.197408676147461

Token 216: ' étant' (ID: 47869)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.2241045236587524
    2. 'de' → logprob: -1.9741045236587524
    3. 'cont' → logprob: -1.9741045236587524
    4. ' contenant' → logprob: -2.099104404449463
    5. 'con' → logprob: -2.724104404449463
    6. '   ' → logprob: -2.724104404449463
    7. 'conten' → logprob: -3.099104404449463
    8. 's' → logprob: -4.099104404449463
    9. ' étant' → logprob: -4.599104404449463
    10. 'est' → logprob: -4.724104404449463

Token 217: ' convert' (ID: 8452)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.21297883987426758
    2. 'une' → logprob: -1.7129788398742676
    3. '[l' → logprob: -5.212978839874268
    4. ' une' → logprob: -5.837978839874268
    5. 'un' → logprob: -6.837978839874268
    6. '[]' → logprob: -7.462978839874268
    7. 'des' → logprob: -7.587978839874268
    8. '[' → logprob: -7.837978839874268
    9. 'liste' → logprob: -9.33797836303711
    10. 'def' → logprob: -9.46297836303711

Token 218: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.05873226746916771
    2. 'i' → logprob: -3.308732271194458
    3. 'ies' → logprob: -3.933732271194458
    4. 'is' → logprob: -8.183732032775879
    5. 'ir' → logprob: -8.558732032775879
    6. 'e' → logprob: -8.933732032775879
    7. 'issant' → logprob: -9.183732032775879
    8. ' en' → logprob: -9.308732032775879
    9. 'it' → logprob: -9.683732032775879
    10. 'en' → logprob: -11.058732032775879

Token 219: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.0005029928870499134
    2. ' en' → logprob: -7.750503063201904
    3. 'ent' → logprob: -10.750502586364746
    4. 'def' → logprob: -11.125502586364746
    5. ' ' → logprob: -11.875502586364746
    6. '_en' → logprob: -12.250502586364746
    7. '(en' → logprob: -12.250502586364746
    8. '```' → logprob: -12.500502586364746
    9. '   ' → logprob: -12.625502586364746
    10. 'int' → logprob: -12.625502586364746

Token 220: ' int' (ID: 677)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.0673963651061058
    2. 'une' → logprob: -3.567396402359009
    3. ' liste' → logprob: -3.942396402359009
    4. 'list' → logprob: -4.69239616394043
    5. ' une' → logprob: -5.31739616394043
    6. 'int' → logprob: -6.69239616394043
    7. 'l' → logprob: -7.56739616394043
    8. '[' → logprob: -7.69239616394043
    9. '```' → logprob: -8.56739616394043
    10. 'lists' → logprob: -8.81739616394043

Token 221: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0028486251831054688
    2. '
' → logprob: -6.0028486251831055
    3. '(n' → logprob: -8.002848625183105
    4. '(' → logprob: -11.127848625183105
    5. ' def' → logprob: -11.252848625183105
    6. '(def' → logprob: -12.127848625183105
    7. '_def' → logprob: -13.127848625183105
    8. '(
' → logprob: -14.252848625183105
    9. 's' → logprob: -15.002848625183105
    10. '

' → logprob: -15.127848625183105

Token 222: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.896309739408025e-07
    2. ' def' → logprob: -14.375000953674316
    3. '
' → logprob: -15.500000953674316
    4. '#' → logprob: -21.75
    5. 'de' → logprob: -22.125
    6. '```' → logprob: -22.75
    7. 'from' → logprob: -23.0
    8. '

' → logprob: -23.125
    9. '	def' → logprob: -23.125
    10. '(def' → logprob: -23.375

Token 223: ' lire' (ID: 46082)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.38790255784988403
    2. ' lire' → logprob: -1.1379024982452393
    3. 'def' → logprob: -7.512902736663818
    4. 'read' → logprob: -9.38790225982666
    5. '   ' → logprob: -9.38790225982666
    6. ' ' → logprob: -9.88790225982666
    7. ' read' → logprob: -10.13790225982666
    8. '  ' → logprob: -10.26290225982666
    9. ' l' → logprob: -10.38790225982666
    10. ' def' → logprob: -10.51290225982666

Token 224: '_l' (ID: 1478)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.4882963299751282
    2. '_ent' → logprob: -1.2382962703704834
    3. '_l' → logprob: -2.9882962703704834
    4. '_nombre' → logprob: -3.3632962703704834
    5. '_int' → logprob: -5.7382965087890625
    6. '_' → logprob: -5.8632965087890625
    7. 'n' → logprob: -6.7382965087890625
    8. '(n' → logprob: -6.8632965087890625
    9. '_un' → logprob: -7.2382965087890625
    10. '_lines' → logprob: -7.7382965087890625

Token 225: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -0.07509469240903854
    2. 'ignes' → logprob: -3.200094699859619
    3. 'igne' → logprob: -3.950094699859619
    4. 'istes' → logprob: -5.200094699859619
    5. '_' → logprob: -6.700094699859619
    6. 'ist' → logprob: -7.075094699859619
    7. 'ste' → logprob: -7.325094699859619
    8. 'liste' → logprob: -7.450094699859619
    9. 'n' → logprob: -7.575094699859619
    10. 'site' → logprob: -8.450094223022461

Token 226: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.08214860409498215
    2. '_n' → logprob: -2.707148551940918
    3. '_de' → logprob: -5.457148551940918
    4. '_l' → logprob: -6.082148551940918
    5. 'ent' → logprob: -6.332148551940918
    6. '_des' → logprob: -6.832148551940918
    7. 'n' → logprob: -7.082148551940918
    8. '_d' → logprob: -7.707148551940918
    9. '_' → logprob: -7.957148551940918
    10. '_int' → logprob: -8.207148551940918

Token 227: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00017636561824474484
    2. 'ers' → logprob: -9.375176429748535
    3. 'ieres' → logprob: -10.375176429748535
    4. 'ier' → logprob: -10.500176429748535
    5. 'tiers' → logprob: -12.000176429748535
    6. 'eurs' → logprob: -12.375176429748535
    7. 'gers' → logprob: -12.500176429748535
    8. 'ets' → logprob: -12.750176429748535
    9. 'etes' → logprob: -12.750176429748535
    10. 'ters' → logprob: -13.375176429748535

Token 228: '_dep' (ID: 124838)
  Prédit: '_dep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dep' → logprob: -0.05137152597308159
    2. '(n' → logprob: -3.3013715744018555
    3. '_n' → logprob: -4.9263715744018555
    4. 'dep' → logprob: -5.8013715744018555
    5. 's' → logprob: -6.6763715744018555
    6. '_de' → logprob: -7.5513715744018555
    7. '_par' → logprob: -8.176371574401855
    8. '_' → logprob: -9.051371574401855
    9. '_a' → logprob: -9.301371574401855
    10. '(dep' → logprob: -9.426371574401855

Token 229: 'uis' (ID: 4560)
  Prédit: 'uis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uis' → logprob: -0.0003472633252386004
    2. 'u' → logprob: -8.000347137451172
    3. 'ui' → logprob: -12.875347137451172
    4. 'ois' → logprob: -13.375347137451172
    5. 'us' → logprob: -13.625347137451172
    6. '_' → logprob: -13.875347137451172
    7. 'is' → logprob: -14.500347137451172
    8. '```' → logprob: -14.625347137451172
    9. '...' → logprob: -14.750347137451172
    10. '#' → logprob: -14.750347137451172

Token 230: '_n' (ID: 2170)
  Prédit: '_l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.40358906984329224
    2. '_n' → logprob: -1.5285890102386475
    3. '_' → logprob: -3.1535890102386475
    4. '_ent' → logprob: -4.278589248657227
    5. '_f' → logprob: -4.403589248657227
    6. '_input' → logprob: -4.653589248657227
    7. '_nombre' → logprob: -4.653589248657227
    8. 'n' → logprob: -5.278589248657227
    9. 'l' → logprob: -5.653589248657227
    10. 'liste' → logprob: -6.028589248657227

Token 231: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.026664145290851593
    2. 'l' → logprob: -3.7766642570495605
    3. '_' → logprob: -6.1516642570495605
    4. 'L' → logprob: -7.7766642570495605
    5. '():
' → logprob: -9.151663780212402
    6. '():' → logprob: -9.526663780212402
    7. '(_' → logprob: -9.526663780212402
    8. '```' → logprob: -9.651663780212402
    9. '_ent' → logprob: -9.776663780212402
    10. '_lines' → logprob: -9.776663780212402

Token 232: 'ignes' (ID: 53389)
  Prédit: 'ignes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ignes' → logprob: -0.018659859895706177
    2. 'igne' → logprob: -4.143660068511963
    3. 'ig' → logprob: -6.393660068511963
    4. 'ign' → logprob: -8.143659591674805
    5. 'ines' → logprob: -9.268659591674805
    6. 'g' → logprob: -9.518659591674805
    7. '_' → logprob: -9.893659591674805
    8. '#' → logprob: -10.018659591674805
    9. '```' → logprob: -10.393659591674805
    10. 'l' → logprob: -10.643659591674805

Token 233: '(nombre' (ID: 124319)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -6.682846287731081e-05
    2. '(nombre' → logprob: -10.500066757202148
    3. '(nb' → logprob: -10.750066757202148
    4. '(' → logprob: -11.250066757202148
    5. ' (' → logprob: -13.250066757202148
    6. '(num' → logprob: -14.250066757202148
    7. '():
' → logprob: -14.375066757202148
    8. 'def' → logprob: -14.750066757202148
    9. 'n' → logprob: -14.875066757202148
    10. '(
' → logprob: -15.125066757202148

Token 234: '_l' (ID: 1478)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7210254669189453
    2. '_l' → logprob: -0.8460254669189453
    3. '_de' → logprob: -3.4710254669189453
    4. '):
' → logprob: -4.596025466918945
    5. '_ent' → logprob: -4.596025466918945
    6. ')' → logprob: -4.721025466918945
    7. 'l' → logprob: -5.346025466918945
    8. 'de' → logprob: -5.721025466918945
    9. '_des' → logprob: -5.721025466918945
    10. '_' → logprob: -5.846025466918945

Token 235: 'ignes' (ID: 53389)
  Prédit: 'ignes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ignes' → logprob: -0.001660662586800754
    2. 'igne' → logprob: -7.0016608238220215
    3. 'ig' → logprob: -7.6266608238220215
    4. 'ines' → logprob: -9.626660346984863
    5. 'ign' → logprob: -10.251660346984863
    6. '```' → logprob: -10.251660346984863
    7. 'e' → logprob: -10.751660346984863
    8. '_' → logprob: -11.001660346984863
    9. '#' → logprob: -11.501660346984863
    10. 'es' → logprob: -12.251660346984863

Token 236: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4041018784046173
    2. '):
' → logprob: -1.654101848602295
    3. '()' → logprob: -2.779101848602295
    4. '(n' → logprob: -3.529101848602295
    5. '():' → logprob: -3.779101848602295
    6. '()):
' → logprob: -3.904101848602295
    7. '():
' → logprob: -5.404101848602295
    8. ')' → logprob: -6.904101848602295
    9. '):
' → logprob: -7.779101848602295
    10. ' ):' → logprob: -8.154102325439453

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0280383548888494e-06
    2. '	return' → logprob: -15.000000953674316
    3. '   ' → logprob: -15.125000953674316
    4. ' return' → logprob: -15.750000953674316
    5. 'return' → logprob: -16.750001907348633
    6. '	result' → logprob: -16.875001907348633
    7. ' ' → logprob: -16.875001907348633
    8. 'result' → logprob: -16.875001907348633
    9. '	l' → logprob: -17.000001907348633
    10. '  ' → logprob: -17.250001907348633

Token 238: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05996403098106384
    2. 'result' → logprob: -3.5599639415740967
    3. 'return' (adapté à ' return') → logprob: -3.6849639415740967
    4. 'liste' → logprob: -5.684964179992676
    5. ' result' → logprob: -7.934964179992676
    6. ' return' → logprob: -8.184964179992676
    7. 'l' → logprob: -8.184964179992676
    8. 'ent' → logprob: -8.684964179992676
    9. 'res' → logprob: -10.309964179992676
    10. ' ' → logprob: -10.559964179992676

Token 239: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00026264708139933646
    2. '[' → logprob: -8.500262260437012
    3. '[l' → logprob: -10.375262260437012
    4. '[Int' → logprob: -11.125262260437012
    5. ' [' → logprob: -11.625262260437012
    6. '[list' → logprob: -14.000262260437012
    7. '[
' → logprob: -14.250262260437012
    8. '[in' → logprob: -14.375262260437012
    9. '[n' → logprob: -14.500262260437012
    10. '[element' → logprob: -14.750262260437012

Token 240: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -5.8961017202818766e-05
    2. ' int' → logprob: -10.250059127807617
    3. 'l' → logprob: -10.875059127807617
    4. '   ' → logprob: -12.875059127807617
    5. '[int' → logprob: -14.125059127807617
    6. '(int' → logprob: -14.875059127807617
    7. '	int' → logprob: -15.500059127807617
    8. '<int' → logprob: -15.750059127807617
    9. '  ' → logprob: -15.750059127807617
    10. '
' → logprob: -16.375059127807617

Token 241: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -9.996708104154095e-05
    2. 'input' → logprob: -9.375100135803223
    3. '(l' → logprob: -12.000100135803223
    4. '()' → logprob: -12.125100135803223
    5. '(' → logprob: -13.375100135803223
    6. 'l' → logprob: -14.000100135803223
    7. '()]' → logprob: -14.625100135803223
    8. '(sys' → logprob: -15.500100135803223
    9. '=input' → logprob: -16.250099182128906
    10. ' input' → logprob: -16.750099182128906

Token 242: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.048611659556627274
    2. '().' → logprob: -3.048611640930176
    3. '()' → logprob: -11.048611640930176
    4. '())
' → logprob: -12.548611640930176
    5. ' ())' → logprob: -12.923611640930176
    6. '(' → logprob: -13.423611640930176
    7. '()
' → logprob: -14.548611640930176
    8. ')' → logprob: -15.673611640930176
    9. '()]' → logprob: -16.173612594604492
    10. '()))' → logprob: -16.423612594604492

Token 243: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0033643851056694984
    2. 'for' → logprob: -6.128364562988281
    3. ' for' → logprob: -6.753364562988281
    4. ')' → logprob: -12.378364562988281
    5. ' ()' → logprob: -12.378364562988281
    6. '()]' → logprob: -13.628364562988281
    7. '	for' → logprob: -14.128364562988281
    8. '()
' → logprob: -14.253364562988281
    9. '(' → logprob: -14.878364562988281
    10. '().' → logprob: -16.62836456298828

Token 244: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004636961035430431
    2. ' _' → logprob: -5.379636764526367
    3. '_i' → logprob: -11.379636764526367
    4. '_j' → logprob: -13.754636764526367
    5. '_n' → logprob: -14.379636764526367
    6. '_range' → logprob: -14.504636764526367
    7. '_l' → logprob: -14.504636764526367
    8. '_in' → logprob: -14.504636764526367
    9. ' ' → logprob: -15.129636764526367
    10. '_=' → logprob: -15.254636764526367

Token 245: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10613681375980377
    2. 'range' → logprob: -2.3561367988586426
    3. ' range' → logprob: -5.231136798858643
    4. 'in' → logprob: -7.481136798858643
    5. ' ' → logprob: -14.3561372756958
    6. '	range' → logprob: -15.2311372756958
    7. '_range' → logprob: -15.8561372756958
    8. ' _' → logprob: -16.606136322021484
    9. 'rang' → logprob: -16.731136322021484
    10. '(range' → logprob: -16.981136322021484

Token 246: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. 'rang' → logprob: -17.500123977661133
    4. '	range' → logprob: -18.500123977661133
    5. '(range' → logprob: -18.625123977661133
    6. '_range' → logprob: -19.000123977661133
    7. '_' → logprob: -19.750123977661133
    8. '
' → logprob: -19.875123977661133
    9. ' ' → logprob: -20.625123977661133
    10. '   ' → logprob: -21.750123977661133

Token 247: '(nombre' (ID: 124319)
  Prédit: '(nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nombre' → logprob: -0.00012296605564188212
    2. 'nombre' → logprob: -9.500123023986816
    3. '(' → logprob: -10.000123023986816
    4. ' (' → logprob: -13.000123023986816
    5. '(nb' → logprob: -16.3751220703125
    6. '(quantity' → logprob: -16.5001220703125
    7. '(n' → logprob: -16.6251220703125
    8. '_nombre' → logprob: -16.6251220703125
    9. '(named' → logprob: -17.0001220703125
    10. ' nombre' → logprob: -17.2501220703125

Token 248: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -1.9504606825648807e-05
    2. 'l' → logprob: -11.375019073486328
    3. '
' → logprob: -13.500019073486328
    4. '_lines' → logprob: -13.625019073486328
    5. '(l' → logprob: -13.750019073486328
    6. ')' → logprob: -13.875019073486328
    7. '_' → logprob: -14.250019073486328
    8. '__' → logprob: -14.750019073486328
    9. '_n' → logprob: -15.125019073486328
    10. '(' → logprob: -15.250019073486328

Token 249: 'ignes' (ID: 53389)
  Prédit: 'ignes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ignes' → logprob: -0.0008433376788161695
    2. 'ines' → logprob: -7.750843524932861
    3. 'ig' → logprob: -8.625843048095703
    4. 'l' → logprob: -9.500843048095703
    5. '_l' → logprob: -10.125843048095703
    6. 'igne' → logprob: -10.125843048095703
    7. 'lines' → logprob: -11.000843048095703
    8. '_' → logprob: -11.625843048095703
    9. 'i' → logprob: -11.875843048095703
    10. 'ign' → logprob: -12.250843048095703

Token 250: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005065653240308166
    2. ')' → logprob: -7.625506401062012
    3. ']' → logprob: -11.000506401062012
    4. ' )' → logprob: -14.375506401062012
    5. ')]
' → logprob: -14.875506401062012
    6. ')],' → logprob: -15.500506401062012
    7. '   ' → logprob: -15.875506401062012
    8. ')])' → logprob: -16.625507354736328
    9. '')]' → logprob: -16.625507354736328
    10. ')].' → logprob: -16.750507354736328

Token 251: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28787761926651
    2. '
' → logprob: -1.9128775596618652
    3. '#' → logprob: -2.4128775596618652
    4. '<|end|>' → logprob: -4.787877559661865
    5. '

' → logprob: -5.662877559661865
    6. '<|end|>' → logprob: -7.412877559661865
    7. '  
' → logprob: -8.662878036499023
    8. 'class' → logprob: -9.162878036499023
    9. '
' → logprob: -10.037878036499023
    10. '```' → logprob: -10.037878036499023

Token 252: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.019237768370658e-05
    2. '#' → logprob: -9.375090599060059
    3. 'class' → logprob: -13.125090599060059
    4. 'from' → logprob: -13.375090599060059
    5. ' def' → logprob: -14.125090599060059
    6. 'import' → logprob: -14.500090599060059
    7. 'Code' → logprob: -15.750090599060059
    8. '```' → logprob: -15.875090599060059
    9. 'de' → logprob: -16.125089645385742
    10. '
' → logprob: -17.375089645385742

Token 253: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003424850758165121
    2. ' def' → logprob: -5.753424644470215
    3. 'de' → logprob: -9.503424644470215
    4. '#' → logprob: -10.253424644470215
    5. ' pour' → logprob: -10.253424644470215
    6. ' de' → logprob: -10.753424644470215
    7. 'pour' → logprob: -10.878424644470215
    8. '_def' → logprob: -11.128424644470215
    9. ' for' → logprob: -11.378424644470215
    10. '_de' → logprob: -12.378424644470215

Token 254: ' lire' (ID: 46082)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.025098232552409172
    2. ' calcul' → logprob: -3.9000983238220215
    3. 'cal' → logprob: -5.9000983238220215
    4. 'factor' → logprob: -7.9000983238220215
    5. 'comput' → logprob: -8.025097846984863
    6. 'Calcul' → logprob: -8.525097846984863
    7. 'comb' → logprob: -8.775097846984863
    8. 'l' → logprob: -8.900097846984863
    9. 'calc' → logprob: -9.400097846984863
    10. 'def' → logprob: -9.400097846984863

Token 255: ' tout' (ID: 5501)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.03868508338928223
    2. 'un' → logprob: -3.5386850833892822
    3. 'n' → logprob: -5.663684844970703
    4. 'la' → logprob: -6.663684844970703
    5. 'ent' → logprob: -6.913684844970703
    6. ' une' → logprob: -7.288684844970703
    7. 'l' → logprob: -7.663684844970703
    8. 'le' → logprob: -7.788684844970703
    9. '_' → logprob: -8.288684844970703
    10. 'nombre' → logprob: -8.288684844970703

Token 256: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.29134896397590637
    2. '():' → logprob: -1.666348934173584
    3. 'ent' → logprob: -4.041348934173584
    4. 'l' → logprob: -4.416348934173584
    5. 'le' → logprob: -4.916348934173584
    6. '():
' → logprob: -5.041348934173584
    7. 'input' → logprob: -5.416348934173584
    8. '_' → logprob: -5.666348934173584
    9. '_input' → logprob: -5.666348934173584
    10. ' le' → logprob: -6.166348934173584

Token 257: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.2118940353393555
    2. 'e' → logprob: -1.3368940353393555
    3. '_' → logprob: -1.7118940353393555
    4. '_input' → logprob: -1.9618940353393555
    5. 'es' → logprob: -2.5868940353393555
    6. 'entrée' → logprob: -4.2118940353393555
    7. ''entrée' → logprob: -4.5868940353393555
    8. ' input' → logprob: -4.9618940353393555
    9. 'import' → logprob: -5.5868940353393555
    10. 'texte' → logprob: -5.9618940353393555

Token 258: ' (' (ID: 350)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.26804447174072266
    2. '():' → logprob: -1.6430444717407227
    3. 'def' → logprob: -3.7680444717407227
    4. '():
' → logprob: -4.018044471740723
    5. '()
' → logprob: -9.268044471740723
    6. 'de' → logprob: -9.268044471740723
    7. '_ent' → logprob: -9.893044471740723
    8. 'data' → logprob: -10.268044471740723
    9. 'ent' → logprob: -10.268044471740723
    10. 's' → logprob: -10.268044471740723

Token 259: 'par' (ID: 796)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2677408754825592
    2. '):' → logprob: -1.5177408456802368
    3. '):
' → logprob: -4.267740726470947
    4. ')n' → logprob: -7.892740726470947
    5. '):

' → logprob: -8.267741203308105
    6. ')...' → logprob: -9.017741203308105
    7. '
' → logprob: -9.267741203308105
    8. ')#' → logprob: -9.267741203308105
    9. 'ent' → logprob: -9.392741203308105
    10. '()' → logprob: -9.642741203308105

Token 260: ' espace' (ID: 66004)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.6225749254226685
    2. 'input' → logprob: -2.372574806213379
    3. 'import' → logprob: -2.622574806213379
    4. 'sys' → logprob: -2.747574806213379
    5. 'ent' → logprob: -3.247574806213379
    6. 'l' → logprob: -3.372574806213379
    7. 'ligne' → logprob: -3.747574806213379
    8. 'def' → logprob: -3.997574806213379
    9. ' exemple' → logprob: -4.372574806213379
    10. ' sys' → logprob: -4.497574806213379

Token 261: ' ou' (ID: 2031)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009996889159083366
    2. 's' → logprob: -5.1349968910217285
    3. ' ou' → logprob: -6.2599968910217285
    4. '")' → logprob: -7.1349968910217285
    5. '),' → logprob: -7.7599968910217285
    6. 'et' → logprob: -7.8849968910217285
    7. ' )' → logprob: -8.50999641418457
    8. ' et' → logprob: -9.25999641418457
    9. 'ou' → logprob: -9.88499641418457
    10. 'es' → logprob: -9.88499641418457

Token 262: ' retour' (ID: 30714)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.417396605014801
    2. 'newline' → logprob: -1.6673965454101562
    3. 'ligne' → logprob: -2.7923965454101562
    4. 's' → logprob: -3.1673965454101562
    5. '\' → logprob: -3.6673965454101562
    6. 'nou' → logprob: -4.792396545410156
    7. ' newline' → logprob: -5.167396545410156
    8. 'new' → logprob: -5.917396545410156
    9. 'n' → logprob: -6.417396545410156
    10. 'fin' → logprob: -7.042396545410156

Token 263: ' à' (ID: 1221)
  Prédit: 'char'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'char' → logprob: -0.7367895841598511
    2. 'ligne' → logprob: -0.9867895841598511
    3. 'à' → logprob: -2.9867897033691406
    4. ' à' → logprob: -3.2367897033691406
    5. 'ch' → logprob: -3.7367897033691406
    6. ' ' → logprob: -4.236789703369141
    7. ' ligne' → logprob: -5.861789703369141
    8. 'a' → logprob: -5.986789703369141
    9. '   ' → logprob: -6.361789703369141
    10. '\n' → logprob: -6.486789703369141

Token 264: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.02317826636135578
    2. 'ligne' → logprob: -3.8981783390045166
    3. 'l' → logprob: -6.0231781005859375
    4. 'line' → logprob: -10.023178100585938
    5. '\' → logprob: -10.023178100585938
    6. ' ' → logprob: -10.523178100585938
    7. '
' → logprob: -10.648178100585938
    8. '\n' → logprob: -11.023178100585938
    9. '   ' → logprob: -11.398178100585938
    10. 'lig' → logprob: -11.523178100585938

Token 265: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.0067070783115923405
    2. 'l' → logprob: -5.131707191467285
    3. 'line' → logprob: -8.006707191467285
    4. '\n' → logprob: -8.756707191467285
    5. ' ligne' → logprob: -9.256707191467285
    6. 'la' → logprob: -9.631707191467285
    7. 'lig' → logprob: -10.006707191467285
    8. 'lin' → logprob: -10.381707191467285
    9. '```' → logprob: -11.006707191467285
    10. 'newline' → logprob: -12.006707191467285

Token 266: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006158438976854086
    2. ')
' → logprob: -5.381158351898193
    3. '())' → logprob: -8.006158828735352
    4. '),' → logprob: -8.256158828735352
    5. ' )' → logprob: -8.256158828735352
    6. 'def' → logprob: -8.756158828735352
    7. '):' → logprob: -9.256158828735352
    8. '):
' → logprob: -9.256158828735352
    9. 'et' → logprob: -9.381158828735352
    10. '()' → logprob: -9.506158828735352

Token 267: ' et' (ID: 859)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014945034636184573
    2. '():' → logprob: -7.376494407653809
    3. '():
' → logprob: -7.501494407653809
    4. '()' → logprob: -8.376494407653809
    5. '()
' → logprob: -10.251494407653809
    6. ' def' → logprob: -10.376494407653809
    7. '
' → logprob: -11.376494407653809
    8. 'de' → logprob: -13.501494407653809
    9. ':' → logprob: -13.876494407653809
    10. '

' → logprob: -14.501494407653809

Token 268: ' convertir' (ID: 79223)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.06620647013187408
    2. ' convertir' → logprob: -3.066206455230713
    3. 'la' → logprob: -5.566206455230713
    4. ' convert' → logprob: -5.691206455230713
    5. 'les' → logprob: -5.941206455230713
    6. 'ret' → logprob: -5.941206455230713
    7. 'def' → logprob: -6.816206455230713
    8. 'return' → logprob: -7.191206455230713
    9. 'con' → logprob: -7.316206455230713
    10. 'ren' → logprob: -7.441206455230713

Token 269: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.16225172579288483
    2. 'tout' → logprob: -2.4122517108917236
    3. ' en' → logprob: -3.6622517108917236
    4. '()' → logprob: -4.162251949310303
    5. 't' → logprob: -4.537251949310303
    6. 'la' → logprob: -5.787251949310303
    7. 'ent' → logprob: -6.412251949310303
    8. ' tout' → logprob: -6.662251949310303
    9. '_en' → logprob: -6.912251949310303
    10. ' chaque' → logprob: -8.287251472473145

Token 270: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5370590686798096
    2. 'ints' → logprob: -1.2870590686798096
    3. 'liste' → logprob: -2.5370590686798096
    4. 'ent' → logprob: -2.9120590686798096
    5. 'list' → logprob: -6.1620588302612305
    6. 'inte' → logprob: -6.5370588302612305
    7. 'une' → logprob: -6.7870588302612305
    8. '[int' → logprob: -7.9120588302612305
    9. ' int' → logprob: -8.03705883026123
    10. ' liste' → logprob: -8.16205883026123

Token 271: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. ' def' → logprob: -16.25
    3. '
' → logprob: -17.25
    4. '```' → logprob: -20.875
    5. 'de' → logprob: -21.0
    6. '#' → logprob: -21.375
    7. '_def' → logprob: -21.5
    8. ':def' → logprob: -21.625
    9. '	def' → logprob: -21.75
    10. '(def' → logprob: -22.0

Token 272: 'ret' (ID: 3431)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0041064023971558
    2. 'def' → logprob: -1.1291064023971558
    3. ')
' → logprob: -1.7541064023971558
    4. '):' → logprob: -2.6291065216064453
    5. '):
' → logprob: -2.7541065216064453
    6. ' def' → logprob: -7.754106521606445
    7. '):

' → logprob: -8.379106521606445
    8. '()' → logprob: -9.004106521606445
    9. ')

' → logprob: -9.254106521606445
    10. ' )' → logprob: -9.504106521606445

Token 273: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.3233163058757782
    2. 'urn' → logprob: -1.3233163356781006
    3. 'ourn' → logprob: -5.3233160972595215
    4. '[' → logprob: -6.3233160972595215
    5. '[]' → logprob: -7.0733160972595215
    6. 'urne' → logprob: -7.3233160972595215
    7. '[])' → logprob: -7.4483160972595215
    8. 'ur' → logprob: -8.57331657409668
    9. 'u' → logprob: -9.07331657409668
    10. ')' → logprob: -9.32331657409668

Token 274: 'ne' (ID: 611)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7828099727630615
    2. '[])' → logprob: -1.0328099727630615
    3. ')' → logprob: -2.6578099727630615
    4. ' [])' → logprob: -3.0328099727630615
    5. '[' → logprob: -3.7828099727630615
    6. 'def' → logprob: -5.032810211181641
    7. '[])
' → logprob: -5.282810211181641
    8. '[]):' → logprob: -5.282810211181641
    9. ' [' → logprob: -5.532810211181641
    10. '])' → logprob: -5.532810211181641

Token 275: ' un' (ID: 537)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.9883992075920105
    2. ' la' → logprob: -1.2383992671966553
    3. 'la' → logprob: -1.9883992671966553
    4. ' une' → logprob: -1.9883992671966553
    5. 'une' → logprob: -3.8633992671966553
    6. '[' → logprob: -4.113399028778076
    7. ' []' → logprob: -4.488399028778076
    8. '[])' → logprob: -4.863399028778076
    9. 'list' → logprob: -6.238399028778076
    10. 'liste' → logprob: -6.738399028778076

Token 276: ' it' (ID: 480)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.8942742943763733
    2. 'liste' → logprob: -1.2692742347717285
    3. 'e' → logprob: -2.5192742347717285
    4. 'generator' → logprob: -2.6442742347717285
    5. 'gener' → logprob: -3.7692742347717285
    6. 'g' → logprob: -4.0192742347717285
    7. 'iter' → logprob: -4.0192742347717285
    8. 'ent' → logprob: -4.1442742347717285
    9. 'int' → logprob: -4.5192742347717285
    10. ' generator' → logprob: -4.7692742347717285

Token 277: 'érateur' (ID: 108528)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.062091488391160965
    2. 'érateur' → logprob: -2.812091588973999
    3. 'ér' → logprob: -9.437091827392578
    4. 'eur' → logprob: -11.312091827392578
    5. 'ertools' → logprob: -11.562091827392578
    6. 'ERATOR' → logprob: -11.937091827392578
    7. 'erar' → logprob: -12.062091827392578
    8. 'erat' → logprob: -12.812091827392578
    9. 'erade' → logprob: -14.062091827392578
    10. 'err' → logprob: -14.187091827392578

Token 278: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0712892934679985
    2. '())' → logprob: -3.196289300918579
    3. ')
' → logprob: -4.0712890625
    4. 'def' → logprob: -5.5712890625
    5. '()' → logprob: -5.9462890625
    6. '())
' → logprob: -5.9462890625
    7. '()
' → logprob: -7.8212890625
    8. ' )' → logprob: -7.8212890625
    9. '()]' → logprob: -8.0712890625
    10. '):' → logprob: -9.1962890625

Token 279: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.128163257315464e-07
    2. ' def' → logprob: -15.25
    3. '
' → logprob: -17.875
    4. 'from' → logprob: -18.25
    5. 'import' → logprob: -18.375
    6. 'input' → logprob: -18.75
    7. '```' → logprob: -20.125
    8. 'data' → logprob: -20.375
    9. '	def' → logprob: -20.875
    10. 'de' → logprob: -21.25

Token 280: ' lire' (ID: 46082)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.025708740577101707
    2. ' map' → logprob: -3.9007086753845215
    3. '(map' → logprob: -5.4007086753845215
    4. 'l' → logprob: -8.40070915222168
    5. '(l' → logprob: -9.52570915222168
    6. ' (' → logprob: -10.02570915222168
    7. 'chain' → logprob: -10.02570915222168
    8. '(int' → logprob: -10.15070915222168
    9. ' lire' → logprob: -10.15070915222168
    10. 'int' → logprob: -10.40070915222168

Token 281: '_t' (ID: 838)
  Prédit: '_ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.3996623456478119
    2. '_l' → logprob: -1.2746623754501343
    3. '_int' → logprob: -3.5246622562408447
    4. '_map' → logprob: -5.399662494659424
    5. 'int' → logprob: -5.774662494659424
    6. 'ent' → logprob: -5.899662494659424
    7. '_' → logprob: -6.274662494659424
    8. '_in' → logprob: -6.774662494659424
    9. '_n' → logprob: -7.149662494659424
    10. '()' → logprob: -7.274662494659424

Token 282: 'ous' (ID: 784)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.12062574177980423
    2. 'ous' → logprob: -3.6206257343292236
    3. 'okens' → logprob: -3.6206257343292236
    4. 'outes' → logprob: -3.9956257343292236
    5. 'oute' → logprob: -4.120625972747803
    6. 'ex' → logprob: -4.245625972747803
    7. 'oken' → logprob: -4.745625972747803
    8. 'ok' → logprob: -7.120625972747803
    9. 'otal' → logprob: -7.620625972747803
    10. 'ext' → logprob: -7.745625972747803

Token 283: '_' (ID: 62)
  Prédit: '_ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.2106127291917801
    2. '()' → logprob: -2.2106127738952637
    3. 'ent' → logprob: -3.9606127738952637
    4. '_int' → logprob: -3.9606127738952637
    5. '_elements' → logprob: -4.585612773895264
    6. '_' → logprob: -4.710612773895264
    7. '_l' → logprob: -5.210612773895264
    8. '_la' → logprob: -5.335612773895264
    9. 'int' → logprob: -5.835612773895264
    10. '_lambda' → logprob: -6.085612773895264

Token 284: 'les' (ID: 1032)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.2082858830690384
    2. 'les' → logprob: -2.2082858085632324
    3. '_ent' → logprob: -3.5832858085632324
    4. 'elements' → logprob: -4.708285808563232
    5. 'ints' → logprob: -5.083285808563232
    6. 'int' → logprob: -5.083285808563232
    7. 'tokens' → logprob: -5.083285808563232
    8. 'm' → logprob: -5.208285808563232
    9. '_' → logprob: -5.583285808563232
    10. '_elements' → logprob: -5.833285808563232

Token 285: '_ent' (ID: 66249)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.708337664604187
    2. '_ent' → logprob: -0.833337664604187
    3. '_elements' → logprob: -3.2083377838134766
    4. 'elements' → logprob: -4.583337783813477
    5. '_tokens' → logprob: -4.833337783813477
    6. '_n' → logprob: -5.208337783813477
    7. 'n' → logprob: -5.458337783813477
    8. 'tokens' → logprob: -6.333337783813477
    9. '_int' → logprob: -7.208337783813477
    10. '_inputs' → logprob: -7.833337783813477

Token 286: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.004370305687189102
    2. 'rees' → logprob: -5.754370212554932
    3. 'ree' → logprob: -8.25437068939209
    4. 'ieres' → logprob: -8.87937068939209
    5. 'ires' → logprob: -9.00437068939209
    6. 'ier' → logprob: -9.00437068939209
    7. 'res' → logprob: -9.00437068939209
    8. 'er' → logprob: -9.50437068939209
    9. 'ers' → logprob: -9.50437068939209
    10. 'ries' → logprob: -9.75437068939209

Token 287: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.3880206346511841
    2. '():
' → logprob: -1.138020634651184
    3. '()' → logprob: -7.8880205154418945
    4. '_dep' → logprob: -7.8880205154418945
    5. 'dep' → logprob: -8.388020515441895
    6. 'def' → logprob: -9.888020515441895
    7. '_de' → logprob: -10.138020515441895
    8. '():
' → logprob: -10.638020515441895
    9. 'de' → logprob: -11.388020515441895
    10. '():

' → logprob: -11.638020515441895

Token 288: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3650481104850769
    2. '   ' → logprob: -1.2400481700897217
    3. 'map' → logprob: -4.740047931671143
    4. ' return' → logprob: -4.990047931671143
    5. 'import' → logprob: -8.6150484085083
    6. 'yield' → logprob: -8.6150484085083
    7. ' ' → logprob: -8.8650484085083
    8. 'from' → logprob: -9.1150484085083
    9. ' map' → logprob: -9.1150484085083
    10. '	return' → logprob: -10.3650484085083

Token 289: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4756401777267456
    2. 'map' → logprob: -0.9756401777267456
    3. '(map' → logprob: -6.975640296936035
    4. ' return' → logprob: -8.225640296936035
    5. '   ' → logprob: -8.350640296936035
    6. ' map' → logprob: -9.350640296936035
    7. 'yield' → logprob: -11.350640296936035
    8. 'import' → logprob: -11.975640296936035
    9. ' ' → logprob: -12.350640296936035
    10. 'from' → logprob: -13.350640296936035

Token 290: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.06224002689123154
    2. '(map' → logprob: -2.8122401237487793
    3. 'iter' → logprob: -8.562239646911621
    4. '(iter' → logprob: -9.562239646911621
    5. ' map' → logprob: -12.312239646911621
    6. '(int' → logprob: -12.562239646911621
    7. '(' → logprob: -14.062239646911621
    8. 'int' → logprob: -14.312239646911621
    9. '(m' → logprob: -15.187239646911621
    10. '(i' → logprob: -15.187239646911621

Token 291: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.9875325708417222e-05
    2. '(' → logprob: -11.000029563903809
    3. 'int' → logprob: -11.250029563903809
    4. '(lambda' → logprob: -16.750030517578125
    5. '<int' → logprob: -16.875030517578125
    6. '=int' → logprob: -17.875030517578125
    7. '(
' → logprob: -18.125030517578125
    8. '[int' → logprob: -18.250030517578125
    9. ',int' → logprob: -18.500030517578125
    10. ' int' → logprob: -18.625030517578125

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002140267053619027
    2. ',input' → logprob: -7.127140045166016
    3. '(sys' → logprob: -7.127140045166016
    4. 'sys' → logprob: -7.627140045166016
    5. 'input' → logprob: -11.127140045166016
    6. ' sys' → logprob: -11.627140045166016
    7. ' ,' → logprob: -11.752140045166016
    8. '(),' → logprob: -12.377140045166016
    9. '(' → logprob: -12.877140045166016
    10. '(input' → logprob: -13.002140045166016

Token 293: ' open' (ID: 2494)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0006332091288641095
    2. 'input' → logprob: -8.000633239746094
    3. ' sys' → logprob: -8.125633239746094
    4. '   ' → logprob: -14.375633239746094
    5. '(sys' → logprob: -14.375633239746094
    6. '	sys' → logprob: -15.250633239746094
    7. '=sys' → logprob: -15.750633239746094
    8. 'stdin' → logprob: -16.250633239746094
    9. ' input' → logprob: -16.500633239746094
    10. ' ' → logprob: -16.625633239746094

Token 294: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002312026685103774
    2. '(sys' → logprob: -6.502312183380127
    3. '('/' → logprob: -7.627312183380127
    4. '("/' → logprob: -9.002311706542969
    5. '0' → logprob: -9.377311706542969
    6. '('' → logprob: -9.502311706542969
    7. 'sys' → logprob: -10.377311706542969
    8. '("' → logprob: -12.127311706542969
    9. '"/' → logprob: -14.002311706542969
    10. ''/' → logprob: -14.252311706542969

Token 295: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.057719748467206955
    2. ''/' → logprob: -3.5577197074890137
    3. '"/' → logprob: -3.6827197074890137
    4. 'sys' → logprob: -6.807719707489014
    5. ''' → logprob: -7.307719707489014
    6. '"' → logprob: -7.432719707489014
    7. '(' → logprob: -10.057720184326172
    8. '(sys' → logprob: -12.682720184326172
    9. ' ' → logprob: -13.057720184326172
    10. '('/' → logprob: -13.182720184326172

Token 296: ').' (ID: 741)
  Prédit: ').'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ').' → logprob: -0.001654825289733708
    2. '().' → logprob: -7.126654624938965
    3. '()).' → logprob: -7.376654624938965
    4. ' ).' → logprob: -8.876654624938965
    5. '))' → logprob: -10.501654624938965
    6. ')' → logprob: -10.626654624938965
    7. '()' → logprob: -11.501654624938965
    8. ' ' → logprob: -12.251654624938965
    9. ',' → logprob: -12.876654624938965
    10. '  ' → logprob: -13.126654624938965

Token 297: 'read' (ID: 1293)
  Prédit: 'read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -3.128163257315464e-07
    2. ' read' → logprob: -15.75
    3. '.read' → logprob: -16.5
    4. 'buffer' → logprob: -21.125
    5. 'reading' → logprob: -21.875
    6. '_read' → logprob: -21.875
    7. '	read' → logprob: -21.875
    8. ')' → logprob: -21.875
    9. '__' → logprob: -22.375
    10. '(read' → logprob: -23.375

Token 298: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0004904801025986671
    2. '()' → logprob: -7.625490665435791
    3. '(' → logprob: -13.625490188598633
    4. '())' → logprob: -14.250490188598633
    5. ' ().' → logprob: -14.500490188598633
    6. '()
' → logprob: -17.000490188598633
    7. '()))' → logprob: -17.875490188598633
    8. 'split' → logprob: -18.125490188598633
    9. ' ()' → logprob: -18.250490188598633
    10. ')' → logprob: -18.500490188598633

Token 299: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.1756367712223437e-05
    2. 'strip' → logprob: -11.500011444091797
    3. 'replace' → logprob: -14.375011444091797
    4. 'decode' → logprob: -14.500011444091797
    5. ' split' → logprob: -15.375011444091797
    6. 'read' → logprob: -15.875011444091797
    7. '(split' → logprob: -17.625011444091797
    8. 'spl' → logprob: -18.750011444091797
    9. '().' → logprob: -19.375011444091797
    10. 'rstrip' → logprob: -20.125011444091797

Token 300: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008992121554911137
    2. '()' → logprob: -5.0089921951293945
    3. '()))' → logprob: -6.1339921951293945
    4. ')' → logprob: -10.008992195129395
    5. '(' → logprob: -10.133992195129395
    6. '("' → logprob: -11.883992195129395
    7. '())
' → logprob: -12.883992195129395
    8. ' ())' → logprob: -12.883992195129395
    9. '()]' → logprob: -13.008992195129395
    10. '))' → logprob: -13.258992195129395

Token 301: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.025127531960606575
    2. '#' → logprob: -3.775127649307251
    3. ')' → logprob: -7.025127410888672
    4. '<|end|>' → logprob: -7.525127410888672
    5. '
' → logprob: -8.150127410888672
    6. 'class' → logprob: -9.650127410888672
    7. '```' → logprob: -10.150127410888672
    8. '<|end|>' → logprob: -10.900127410888672
    9. ' def' → logprob: -11.275127410888672
    10. '\' → logprob: -11.900127410888672

Token 302: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0028212780598551035
    2. '#' → logprob: -5.877821445465088
    3. 'class' → logprob: -11.50282096862793
    4. 'from' → logprob: -13.00282096862793
    5. 'import' → logprob: -13.12782096862793
    6. ' def' → logprob: -13.37782096862793
    7. 'de' → logprob: -16.37782096862793
    8. '```' → logprob: -16.37782096862793
    9. '
' → logprob: -16.62782096862793
    10. '\' → logprob: -17.00282096862793

Token 303: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010429323883727193
    2. ' def' → logprob: -8.376043319702148
    3. 'factor' → logprob: -8.376043319702148
    4. 'de' → logprob: -9.001043319702148
    5. '#' → logprob: -9.126043319702148
    6. 'mod' → logprob: -9.251043319702148
    7. 'pow' → logprob: -9.626043319702148
    8. 'pour' → logprob: -9.876043319702148
    9. '_factor' → logprob: -10.126043319702148
    10. 'for' → logprob: -11.001043319702148

Token 304: ' log' (ID: 2142)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -1.0028547048568726
    2. 'mod' → logprob: -1.1278547048568726
    3. 'pow' → logprob: -2.502854824066162
    4. 'pu' → logprob: -2.877854824066162
    5. 'multip' → logprob: -3.127854824066162
    6. 'factor' → logprob: -3.127854824066162
    7. 'fact' → logprob: -4.002854824066162
    8. ' puissance' → logprob: -4.502854824066162
    9. 'comb' → logprob: -4.627854824066162
    10. 'def' → logprob: -4.877854824066162

Token 305: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0835105180740356
    2. '10' → logprob: -1.3335105180740356
    3. 'arith' → logprob: -1.3335105180740356
    4. 'def' → logprob: -2.583510398864746
    5. '2' → logprob: -3.208510398864746
    6. '_base' → logprob: -4.458510398864746
    7. 'ging' → logprob: -5.958510398864746
    8. '_debug' → logprob: -7.458510398864746
    9. 'import' → logprob: -7.833510398864746
    10. 'arit' → logprob: -8.083510398864746

Token 306: ' le' (ID: 505)
  Prédit: 'debug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'debug' → logprob: -0.0999801754951477
    2. ' debug' → logprob: -2.474980115890503
    3. '_debug' → logprob: -4.599980354309082
    4. ' debugging' → logprob: -7.349980354309082
    5. 'def' → logprob: -9.349980354309082
    6. ' debugger' → logprob: -9.599980354309082
    7. 'dé' → logprob: -10.724980354309082
    8. 'la' → logprob: -10.974980354309082
    9. 'DEBUG' → logprob: -10.974980354309082
    10. ' def' → logprob: -11.849980354309082

Token 307: ' debug' (ID: 15199)
  Prédit: 'debug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'debug' → logprob: -0.06525441259145737
    2. ' debug' → logprob: -2.9402544498443604
    3. 'DEBUG' → logprob: -5.690254211425781
    4. 'dé' → logprob: -6.440254211425781
    5. ' debugging' → logprob: -6.565254211425781
    6. 'def' → logprob: -6.690254211425781
    7. '_debug' → logprob: -7.065254211425781
    8. 'd' → logprob: -7.440254211425781
    9. ' DEBUG' → logprob: -7.440254211425781
    10. 'calcul' → logprob: -9.440254211425781

Token 308: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9027791495318525e-05
    2. '_' → logprob: -12.000019073486328
    3. ' def' → logprob: -12.750019073486328
    4. 'de' → logprob: -13.125019073486328
    5. '#' → logprob: -13.500019073486328
    6. 'd' → logprob: -13.500019073486328
    7. '_def' → logprob: -13.500019073486328
    8. '_debug' → logprob: -13.500019073486328
    9. '(' → logprob: -14.000019073486328
    10. '(
' → logprob: -14.500019073486328

Token 309: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016157422214746475
    2. '#' → logprob: -4.141157627105713
    3. ' def' → logprob: -9.266157150268555
    4. 'pass' → logprob: -11.516157150268555
    5. '#print' → logprob: -11.766157150268555
    6. ' #' → logprob: -11.891157150268555
    7. '
' → logprob: -14.391157150268555
    8. 'import' → logprob: -14.391157150268555
    9. '#
' → logprob: -14.391157150268555
    10. '#import' → logprob: -14.516157150268555

Token 310: 'voie' (ID: 70072)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013096357695758343
    2. 'comment' → logprob: -5.138096332550049
    3. 'pass' → logprob: -5.513096332550049
    4. '#' → logprob: -6.513096332550049
    5. 'fr' → logprob: -6.888096332550049
    6. 'python' → logprob: -9.138096809387207
    7. 'import' → logprob: -9.763096809387207
    8. ' def' → logprob: -9.888096809387207
    9. 'anglais' → logprob: -9.888096809387207
    10. '```' → logprob: -9.888096809387207

Token 311: ' vers' (ID: 3640)
  Prédit: '("")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("")' → logprob: -0.9507535696029663
    2. 'def' → logprob: -1.0757535696029663
    3. '(' → logprob: -2.200753688812256
    4. '()' → logprob: -3.075753688812256
    5. 's' → logprob: -3.450753688812256
    6. '(
' → logprob: -4.075753688812256
    7. '(sys' → logprob: -4.200753688812256
    8. '#' → logprob: -4.950753688812256
    9. 'sys' → logprob: -4.950753688812256
    10. '(lambda' → logprob: -5.075753688812256

Token 312: ' la' (ID: 557)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.12347142398357391
    2. 'stderr' → logprob: -2.62347149848938
    3. 'stdout' → logprob: -3.24847149848938
    4. 'la' → logprob: -5.623471260070801
    5. 'l' → logprob: -7.373471260070801
    6. 'le' → logprob: -8.7484712600708
    7. 'None' → logprob: -8.8734712600708
    8. 'print' → logprob: -9.2484712600708
    9. ' sys' → logprob: -10.3734712600708
    10. 'standard' → logprob: -10.7484712600708

Token 313: ' sortie' (ID: 52761)
  Prédit: 'stderr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stderr' → logprob: -0.5522598624229431
    2. 'stdout' → logprob: -1.302259922027588
    3. 'sys' → logprob: -1.927259922027588
    4. 'console' → logprob: -5.427259922027588
    5. 'print' → logprob: -6.802259922027588
    6. 'f' → logprob: -7.677259922027588
    7. '#' → logprob: -8.30225944519043
    8. 'None' → logprob: -8.80225944519043
    9. 'def' → logprob: -9.42725944519043
    10. 'os' → logprob: -9.55225944519043

Token 314: ' d' (ID: 272)
  Prédit: 'standard'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'standard' → logprob: -1.1479898691177368
    2. 'debug' → logprob: -1.7729898691177368
    3. 'def' → logprob: -1.8979898691177368
    4. 'sys' → logprob: -2.1479897499084473
    5. 'd' → logprob: -2.6479897499084473
    6. 'print' → logprob: -2.7729897499084473
    7. 'stderr' → logprob: -2.8979897499084473
    8. '_debug' → logprob: -3.2729897499084473
    9. 'std' → logprob: -5.897989749908447
    10. '#print' → logprob: -6.147989749908447

Token 315: ''er' (ID: 88929)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.522758960723877
    2. 'ebug' → logprob: -1.272758960723877
    3. 'debug' → logprob: -2.897758960723877
    4. ''er' → logprob: -3.772758960723877
    5. 'sys' → logprob: -3.772758960723877
    6. 'e' → logprob: -4.897758960723877
    7. '=sys' → logprob: -5.647758960723877
    8. 'error' → logprob: -5.772758960723877
    9. 'stderr' → logprob: -5.897758960723877
    10. 'é' → logprob: -6.147758960723877

Token 316: 'reur' (ID: 56784)
  Prédit: 'ror'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ror' → logprob: -0.40955767035484314
    2. 'reur' → logprob: -1.6595577001571655
    3. 'r' → logprob: -2.909557580947876
    4. 'or' → logprob: -3.284557580947876
    5. 'def' → logprob: -3.784557580947876
    6. 'rror' → logprob: -4.409557819366455
    7. 'print' → logprob: -4.909557819366455
    8. 'ro' → logprob: -5.659557819366455
    9. 'rr' → logprob: -5.659557819366455
    10. 'f' → logprob: -7.034557819366455

Token 317: ' standard' (ID: 7024)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9027791495318525e-05
    2. 'import' → logprob: -11.125019073486328
    3. '
' → logprob: -13.125019073486328
    4. ' def' → logprob: -14.000019073486328
    5. 'de' → logprob: -14.250019073486328
    6. '#' → logprob: -14.375019073486328
    7. '_def' → logprob: -16.625019073486328
    8. 'd' → logprob: -16.875019073486328
    9. ':def' → logprob: -18.125019073486328
    10. '_de' → logprob: -18.250019073486328

Token 318: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -9.088346359931165e-07
    2. 'import' → logprob: -14.625000953674316
    3. ' def' → logprob: -15.500000953674316
    4. '
' → logprob: -16.125
    5. '#' → logprob: -16.75
    6. '_def' → logprob: -18.125
    7. 'de' → logprob: -19.625
    8. '	def' → logprob: -21.0
    9. ':def' → logprob: -21.5
    10. '#
' → logprob: -21.625

Token 319: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. ' def' → logprob: -16.125
    3. 'import' → logprob: -17.25
    4. 'de' → logprob: -21.375
    5. '#' → logprob: -21.5
    6. 'debug' → logprob: -21.625
    7. '
' → logprob: -22.0
    8. '```' → logprob: -22.25
    9. '	def' → logprob: -22.625
    10. 'from' → logprob: -23.75

Token 320: ' logger' (ID: 10913)
  Prédit: ' debug'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' debug' → logprob: -0.09210587292909622
    2. ' log' → logprob: -3.0921058654785156
    3. 'debug' → logprob: -3.7171058654785156
    4. 'log' → logprob: -4.717105865478516
    5. ' logger' → logprob: -4.967105865478516
    6. 'logger' → logprob: -7.592105865478516
    7. ' deb' → logprob: -8.092105865478516
    8. ' afficher' → logprob: -8.092105865478516
    9. ' trace' → logprob: -8.342105865478516
    10. ' dbg' → logprob: -8.342105865478516

Token 321: '_debug' (ID: 36674)
  Prédit: '(msg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(msg' → logprob: -0.871994137763977
    2. '(*' → logprob: -1.246994137763977
    3. '(message' → logprob: -1.621994137763977
    4. '(' → logprob: -2.3719940185546875
    5. '(s' → logprob: -6.6219940185546875
    6. '(log' → logprob: -6.9969940185546875
    7. ' (' → logprob: -7.9969940185546875
    8. '(info' → logprob: -8.496994018554688
    9. '(text' → logprob: -8.996994018554688
    10. '(debug' → logprob: -8.996994018554688

Token 322: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.5058473348617554
    2. '(message' → logprob: -1.5058473348617554
    3. '(msg' → logprob: -1.7558473348617554
    4. '(' → logprob: -6.130847454071045
    5. '(s' → logprob: -8.880846977233887
    6. '(log' → logprob: -10.630846977233887
    7. '(info' → logprob: -11.005846977233887
    8. '(m' → logprob: -11.130846977233887
    9. ' (*' → logprob: -11.505846977233887
    10. '(text' → logprob: -11.880846977233887

Token 323: 'val' (ID: 1105)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.0007834223215468228
    2. 'arguments' → logprob: -7.250783443450928
    3. 'arg' → logprob: -10.87578296661377
    4. 'params' → logprob: -11.62578296661377
    5. 'obj' → logprob: -11.75078296661377
    6. 'messages' → logprob: -12.25078296661377
    7. 'objects' → logprob: -12.25078296661377
    8. 'argv' → logprob: -12.50078296661377
    9. 'a' → logprob: -12.62578296661377
    10. 'msg' → logprob: -12.62578296661377

Token 324: 'eurs' (ID: 17634)
  Prédit: 'eurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eurs' → logprob: -0.10570875555276871
    2. 'ues' → logprob: -2.3557088375091553
    3. 's' → logprob: -5.730708599090576
    4. 'args' → logprob: -6.480708599090576
    5. 'eur' → logprob: -7.980708599090576
    6. 'ees' → logprob: -9.105709075927734
    7. 'e' → logprob: -10.230709075927734
    8. 'ue' → logprob: -10.480709075927734
    9. '_args' → logprob: -10.480709075927734
    10. 'uers' → logprob: -10.605709075927734

Token 325: '_a' (ID: 10852)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6487945318222046
    2. '):
' → logprob: -0.7737945318222046
    3. ',' → logprob: -4.148794651031494
    4. '):
' → logprob: -8.898794174194336
    5. ')' → logprob: -9.648794174194336
    6. ':' → logprob: -10.148794174194336
    7. ' ,' → logprob: -11.523794174194336
    8. '   ' → logprob: -11.773794174194336
    9. '):

' → logprob: -12.023794174194336
    10. ' ):' → logprob: -12.273794174194336

Token 326: '_aff' (ID: 115829)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.30320748686790466
    2. 'debug' → logprob: -2.4282073974609375
    3. 'aff' → logprob: -2.8032073974609375
    4. 'logger' → logprob: -3.0532073974609375
    5. 'im' → logprob: -3.4282073974609375
    6. 'log' → logprob: -3.5532073974609375
    7. 'args' → logprob: -6.1782073974609375
    8. 'Afficher' → logprob: -7.5532073974609375
    9. '_debug' → logprob: -8.178207397460938
    10. ' afficher' → logprob: -8.303207397460938

Token 327: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.000662280130200088
    2. 'cher' → logprob: -7.375662326812744
    3. '#' → logprob: -11.875661849975586
    4. 'ich' → logprob: -11.875661849975586
    5. 'iche' → logprob: -11.875661849975586
    6. 'ichage' → logprob: -12.000661849975586
    7. 'ichier' → logprob: -12.250661849975586
    8. '   ' → logprob: -14.500661849975586
    9. '

' → logprob: -14.875661849975586
    10. '```' → logprob: -15.125661849975586

Token 328: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1617489904165268
    2. '):' → logprob: -1.911749005317688
    3. ',' → logprob: -6.661748886108398
    4. '):
' → logprob: -8.411748886108398
    5. '   ' → logprob: -11.911748886108398
    6. ')' → logprob: -12.161748886108398
    7. ' ):
' → logprob: -12.536748886108398
    8. ':' → logprob: -13.036748886108398
    9. '):

' → logprob: -13.536748886108398
    10. ' ' → logprob: -13.786748886108398

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005437385407276452
    2. ' print' → logprob: -8.125543594360352
    3. 'print' → logprob: -8.625543594360352
    4. ':' → logprob: -10.500543594360352
    5. 'import' → logprob: -10.750543594360352
    6. ' sys' → logprob: -12.125543594360352
    7. '   ' → logprob: -12.625543594360352
    8. ',' → logprob: -13.000543594360352
    9. '	print' → logprob: -13.375543594360352
    10. '):' → logprob: -13.750543594360352

Token 330: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.007253057789057493
    2. ' print' → logprob: -5.007253170013428
    3. '   ' → logprob: -8.00725269317627
    4. 'import' → logprob: -8.50725269317627
    5. 'pass' → logprob: -13.63225269317627
    6. 'sys' → logprob: -14.00725269317627
    7. ' import' → logprob: -16.257253646850586
    8. ' sys' → logprob: -16.382253646850586
    9. ' ' → logprob: -16.507253646850586
    10. '	print' → logprob: -16.632253646850586

Token 331: '("' (ID: 568)
  Prédit: '(*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.20144258439540863
    2. '(' → logprob: -1.7014425992965698
    3. '(
' → logprob: -10.45144271850586
    4. '(

' → logprob: -15.70144271850586
    5. ' (*' → logprob: -16.82644271850586
    6. '("",' → logprob: -17.32644271850586
    7. '("' → logprob: -17.57644271850586
    8. '("[' → logprob: -17.57644271850586
    9. '((*' → logprob: -17.70144271850586
    10. '(file' → logprob: -17.95144271850586

Token 332: 'DEBUG' (ID: 13806)
  Prédit: 'DEBUG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEBUG' → logprob: -0.015157783403992653
    2. '#' → logprob: -5.265157699584961
    3. 'val' → logprob: -5.515157699584961
    4. '*' → logprob: -6.015157699584961
    5. 'debug' → logprob: -7.140157699584961
    6. '",' → logprob: -7.140157699584961
    7. 'Debug' → logprob: -7.515157699584961
    8. '[val' → logprob: -8.515157699584961
    9. '#",' → logprob: -8.890157699584961
    10. 'DBG' → logprob: -8.890157699584961

Token 333: ':",' (ID: 25704)
  Prédit: ':",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':",' → logprob: -0.00028743778239004314
    2. ':' → logprob: -8.875287055969238
    3. ' :",' → logprob: -9.375287055969238
    4. '",' → logprob: -10.000287055969238
    5. ':"' → logprob: -11.250287055969238
    6. '>",' → logprob: -13.375287055969238
    7. ',",' → logprob: -13.750287055969238
    8. ':",
' → logprob: -14.625287055969238
    9. ';",' → logprob: -15.000287055969238
    10. '(",' → logprob: -16.125288009643555

Token 334: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -9.078839502763003e-05
    2. ' *' → logprob: -9.875090599060059
    3. '*f' → logprob: -11.125090599060059
    4. '*v' → logprob: -11.375090599060059
    5. '*t' → logprob: -13.000090599060059
    6. '*out' → logprob: -13.125090599060059
    7. '*d' → logprob: -13.500090599060059
    8. '*object' → logprob: -13.500090599060059
    9. '*l' → logprob: -13.500090599060059
    10. '*a' → logprob: -14.375090599060059

Token 335: 'val' (ID: 1105)
  Prédit: 'val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -7.703443770878948e-06
    2. ' valeurs' → logprob: -12.125007629394531
    3. 'vale' → logprob: -13.375007629394531
    4. 'values' → logprob: -15.375007629394531
    5. 'valu' → logprob: -15.375007629394531
    6. 'Vale' → logprob: -15.875007629394531
    7. 'va' → logprob: -16.87500762939453
    8. 'vals' → logprob: -17.50000762939453
    9. '[val' → logprob: -18.62500762939453
    10. '``' → logprob: -18.62500762939453

Token 336: 'eurs' (ID: 17634)
  Prédit: 'eurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eurs' → logprob: -6.76628842484206e-05
    2. 'ers' → logprob: -10.625067710876465
    3. 'e' → logprob: -11.375067710876465
    4. 'reurs' → logprob: -11.750067710876465
    5. 'leurs' → logprob: -12.000067710876465
    6. 'eur' → logprob: -12.500067710876465
    7. 'eux' → logprob: -12.875067710876465
    8. 'al' → logprob: -13.000067710876465
    9. 'uers' → logprob: -13.375067710876465
    10. 'eus' → logprob: -13.500067710876465

Token 337: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00038443657103925943
    2. 'a' → logprob: -7.875384330749512
    3. '_' → logprob: -12.625384330749512
    4. 'à' → logprob: -14.375384330749512
    5. ')' → logprob: -15.750384330749512
    6. ' a' → logprob: -16.375385284423828
    7. '	a' → logprob: -17.000385284423828
    8. '__' → logprob: -17.125385284423828
    9. ',' → logprob: -17.375385284423828
    10. ' _' → logprob: -17.625385284423828

Token 338: '_aff' (ID: 115829)
  Prédit: 'aff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aff' → logprob: -0.0019613439217209816
    2. '_aff' → logprob: -6.2519612312316895
    3. ' afficher' → logprob: -10.626961708068848
    4. 'Afficher' → logprob: -12.001961708068848
    5. '-aff' → logprob: -13.751961708068848
    6. 'affa' → logprob: -15.001961708068848
    7. 'a' → logprob: -15.126961708068848
    8. '_display' → logprob: -16.00196075439453
    9. 'affer' → logprob: -16.12696075439453
    10. 'display' → logprob: -16.12696075439453

Token 339: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.004238550551235676
    2. 'cher' → logprob: -5.504238605499268
    3. 'ich' → logprob: -9.00423812866211
    4. 'ichier' → logprob: -10.62923812866211
    5. 'ichage' → logprob: -12.12923812866211
    6. '

' → logprob: -13.50423812866211
    7. '   ' → logprob: -13.62923812866211
    8. 'acher' → logprob: -14.12923812866211
    9. 'ichert' → logprob: -14.75423812866211
    10. 'Cher' → logprob: -14.75423812866211

Token 340: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3878016173839569
    2. ')' → logprob: -1.1378016471862793
    3. ',file' → logprob: -7.012801647186279
    4. ' ,' → logprob: -11.012801170349121
    5. 'file' → logprob: -12.137801170349121
    6. ',end' → logprob: -13.137801170349121
    7. ',)' → logprob: -13.262801170349121
    8. ' )' → logprob: -13.512801170349121
    9. '),' → logprob: -13.887801170349121
    10. ' file' → logprob: -14.512801170349121

Token 341: ' file' (ID: 1974)
  Prédit: 'file'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'file' → logprob: -1.1472419600977446e-06
    2. ' file' → logprob: -13.750000953674316
    3. 'flush' → logprob: -16.875001907348633
    4. ',file' → logprob: -19.750001907348633
    5. 'fi' → logprob: -21.625001907348633
    6. '
' → logprob: -22.000001907348633
    7. '	file' → logprob: -22.000001907348633
    8. 'fil' → logprob: -22.625001907348633
    9. 'sys' → logprob: -22.625001907348633
    10. '   ' → logprob: -23.375001907348633

Token 342: '=sys' (ID: 149200)
  Prédit: '=sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sys' → logprob: -7.517272024415433e-05
    2. '=' → logprob: -9.500075340270996
    3. '=subprocess' → logprob: -16.25007438659668
    4. 'sys' → logprob: -16.37507438659668
    5. '=s' → logprob: -16.75007438659668
    6. '=os' → logprob: -19.37507438659668
    7. '=_' → logprob: -19.37507438659668
    8. '=logging' → logprob: -19.62507438659668
    9. ' =' → logprob: -19.75007438659668
    10. '=open' → logprob: -19.75007438659668

Token 343: '.stderr' (ID: 87058)
  Prédit: '.stderr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stderr' → logprob: -2.7014437364414334e-05
    2. '.stdout' → logprob: -11.00002670288086
    3. '.' → logprob: -12.00002670288086
    4. 'stderr' → logprob: -12.87502670288086
    5. ' .' → logprob: -14.50002670288086
    6. '.st' → logprob: -15.12502670288086
    7. '(stderr' → logprob: -15.25002670288086
    8. '.stdin' → logprob: -15.87502670288086
    9. '.__' → logprob: -16.00002670288086
    10. ' stderr' → logprob: -16.12502670288086

Token 344: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.0
    3. ')
' → logprob: -17.0
    4. '))' → logprob: -18.125
    5. '<|end|>' → logprob: -18.5
    6. '   ' → logprob: -18.625
    7. ')}' → logprob: -18.75
    8. '),' → logprob: -19.125
    9. ')#' → logprob: -19.625
    10. '()' → logprob: -19.75

Token 345: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0196335781365633
    2. '#' → logprob: -4.019633769989014
    3. 'class' → logprob: -6.519633769989014
    4. 'import' → logprob: -12.769633293151855
    5. '\' → logprob: -13.394633293151855
    6. ' def' → logprob: -13.644633293151855
    7. '```' → logprob: -14.019633293151855
    8. 'from' → logprob: -14.769633293151855
    9. '
' → logprob: -15.144633293151855
    10. '<|end|>' → logprob: -15.769633293151855

Token 346: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004914227407425642
    2. '#' → logprob: -5.379914283752441
    3. 'class' → logprob: -8.254914283752441
    4. 'from' → logprob: -10.504914283752441
    5. 'import' → logprob: -12.129914283752441
    6. ' def' → logprob: -15.004914283752441
    7. '@' → logprob: -15.754914283752441
    8. 'input' → logprob: -16.379913330078125
    9. '```' → logprob: -16.879913330078125
    10. '\' → logprob: -17.129913330078125

Token 347: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010035132989287376
    2. 'de' → logprob: -5.260035037994385
    3. '#' → logprob: -6.510035037994385
    4. 'pour' → logprob: -6.510035037994385
    5. 'mod' → logprob: -7.885035037994385
    6. 'factor' → logprob: -7.885035037994385
    7. ' de' → logprob: -8.010035514831543
    8. ' def' → logprob: -8.760035514831543
    9. 'pow' → logprob: -8.885035514831543
    10. ' pour' → logprob: -9.510035514831543

Token 348: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.0017269416712224483
    2. 'cal' → logprob: -7.376727104187012
    3. ' calcul' → logprob: -8.001727104187012
    4. 'factor' → logprob: -8.876727104187012
    5. 'comb' → logprob: -9.126727104187012
    6. 'Calcul' → logprob: -9.376727104187012
    7. 'le' → logprob: -9.626727104187012
    8. 'effect' → logprob: -9.626727104187012
    9. 'comput' → logprob: -10.001727104187012
    10. 'calc' → logprob: -10.376727104187012

Token 349: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.8074162653647363e-05
    2. '#' → logprob: -12.000018119812012
    3. 'ate' → logprob: -12.125018119812012
    4. 'uler' → logprob: -12.625018119812012
    5. 'ateur' → logprob: -13.500018119812012
    6. 'def' → logprob: -14.875018119812012
    7. 'atrice' → logprob: -15.250018119812012
    8. 'ler' → logprob: -15.375018119812012
    9. 'rer' → logprob: -15.375018119812012
    10. 'e' → logprob: -16.250017166137695

Token 350: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.0435197576880455
    2. 'le' → logprob: -3.2935197353363037
    3. ' la' → logprob: -6.168519973754883
    4. 'n' → logprob: -7.043519973754883
    5. 'comb' → logprob: -7.293519973754883
    6. 'factor' → logprob: -7.418519973754883
    7. 'mod' → logprob: -8.293519973754883
    8. '_la' → logprob: -8.668519973754883
    9. '(n' → logprob: -8.918519973754883
    10. ' le' → logprob: -8.918519973754883

Token 351: ''in' (ID: 17942)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7536650896072388
    2. 'e' → logprob: -1.3786650896072388
    3. 'inverse' → logprob: -1.3786650896072388
    4. ''in' → logprob: -4.378664970397949
    5. ' inverse' → logprob: -5.628664970397949
    6. '_inverse' → logprob: -6.378664970397949
    7. ''ex' → logprob: -6.753664970397949
    8. 'Inverse' → logprob: -7.128664970397949
    9. 'aire' → logprob: -7.128664970397949
    10. 'in' → logprob: -8.00366497039795

Token 352: 'verse' (ID: 7093)
  Prédit: 'verse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'verse' → logprob: -0.0038201489951461554
    2. 'vers' → logprob: -6.253819942474365
    3. '```' → logprob: -7.628819942474365
    4. 'v' → logprob: -8.253820419311523
    5. 'factor' → logprob: -8.253820419311523
    6. 'aire' → logprob: -8.253820419311523
    7. 'fact' → logprob: -8.753820419311523
    8. '_factor' → logprob: -9.253820419311523
    9. 'pu' → logprob: -10.003820419311523
    10. 'ter' → logprob: -10.503820419311523

Token 353: ' mod' (ID: 1812)
  Prédit: '_mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.10065551847219467
    2. 'mod' → logprob: -2.3506555557250977
    3. '_' → logprob: -8.350655555725098
    4. ' modulo' → logprob: -9.600655555725098
    5. '_factor' → logprob: -10.100655555725098
    6. '_m' → logprob: -10.225655555725098
    7. '_module' → logprob: -10.725655555725098
    8. 'Modulo' → logprob: -11.600655555725098
    9. '```' → logprob: -12.225655555725098
    10. ' mod' → logprob: -12.225655555725098

Token 354: 'ulaire' (ID: 48584)
  Prédit: 'ulaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulaire' → logprob: -0.14365336298942566
    2. 'ulo' → logprob: -2.018653392791748
    3. 'u' → logprob: -7.518653392791748
    4. 'ula' → logprob: -8.89365291595459
    5. 'def' → logprob: -9.26865291595459
    6. '```' → logprob: -10.01865291595459
    7. 'ular' → logprob: -10.51865291595459
    8. 'ule' → logprob: -10.51865291595459
    9. 'culaire' → logprob: -10.64365291595459
    10. ' modulo' → logprob: -10.64365291595459

Token 355: ' de' (ID: 334)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -5.621933451038785e-05
    2. ' def' → logprob: -10.375056266784668
    3. '(' → logprob: -11.750056266784668
    4. '(
' → logprob: -11.875056266784668
    5. 'de' → logprob: -12.875056266784668
    6. '(n' → logprob: -13.375056266784668
    7. '(a' → logprob: -13.500056266784668
    8. '_def' → logprob: -13.625056266784668
    9. 'a' → logprob: -14.375056266784668
    10. '_inverse' → logprob: -14.625056266784668

Token 356: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01954321749508381
    2. 'x' → logprob: -4.394543170928955
    3. 'un' → logprob: -5.644543170928955
    4. 'n' → logprob: -6.394543170928955
    5. 'def' → logprob: -7.519543170928955
    6. '(a' → logprob: -7.644543170928955
    7. ' a' → logprob: -8.644543647766113
    8. ' un' → logprob: -9.269543647766113
    9. 'nombre' → logprob: -9.269543647766113
    10. 'number' → logprob: -9.394543647766113

Token 357: ' sous' (ID: 14487)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0042162323370575905
    2. '(x' → logprob: -5.879216194152832
    3. ' def' → logprob: -6.754216194152832
    4. '(' → logprob: -9.254216194152832
    5. '(
' → logprob: -9.879216194152832
    6. ' (' → logprob: -10.879216194152832
    7. '_def' → logprob: -10.879216194152832
    8. '(n' → logprob: -11.129216194152832
    9. '_' → logprob: -11.879216194152832
    10. '(a' → logprob: -12.004216194152832

Token 358: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.11830739676952362
    2. 'mod' → logprob: -2.36830735206604
    3. 'le' → logprob: -4.618307590484619
    4. 'un' → logprob: -6.243307590484619
    5. '```' → logprob: -6.493307590484619
    6. 'm' → logprob: -6.868307590484619
    7. 'p' → logprob: -6.993307590484619
    8. 'def' → logprob: -7.243307590484619
    9. 'l' → logprob: -7.993307590484619
    10. 'Modulo' → logprob: -7.993307590484619

Token 359: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.2573400139808655
    2. '_CONSTANT' → logprob: -1.8823399543762207
    3. '_MOD' → logprob: -3.0073399543762207
    4. 'def' → logprob: -4.382339954376221
    5. 'MOD' → logprob: -6.132339954376221
    6. 'ULAR' → logprob: -6.132339954376221
    7. 'ulo' → logprob: -7.132339954376221
    8. '_MODULE' → logprob: -7.257339954376221
    9. '(' → logprob: -7.257339954376221
    10. 'ulaire' → logprob: -7.382339954376221

Token 360: '_CONSTANT' (ID: 115083)
  Prédit: '_CONSTANT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONSTANT' → logprob: -0.3361152410507202
    2. 'def' → logprob: -1.3361152410507202
    3. '_constant' → logprob: -4.21111536026001
    4. '_MOD' → logprob: -6.33611536026001
    5. 'MOD' → logprob: -6.83611536026001
    6. ' =' → logprob: -7.08611536026001
    7. 'CON' → logprob: -7.08611536026001
    8. ' def' → logprob: -7.21111536026001
    9. '_CONST' → logprob: -7.33611536026001
    10. '\' → logprob: -7.96111536026001

Token 361: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000340111117111519
    2. ' def' → logprob: -8.125340461730957
    3. '(' → logprob: -10.625340461730957
    4. '(x' → logprob: -11.750340461730957
    5. '(
' → logprob: -12.250340461730957
    6. '(def' → logprob: -12.875340461730957
    7. '_def' → logprob: -13.375340461730957
    8. ':' → logprob: -13.625340461730957
    9. ':def' → logprob: -14.000340461730957
    10. '(n' → logprob: -15.375340461730957

Token 362: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -3.547789674485102e-05
    2. ' def' → logprob: -10.250035285949707
    3. '
' → logprob: -18.625036239624023
    4. ':def' → logprob: -18.750036239624023
    5. '```' → logprob: -19.875036239624023
    6. 'de' → logprob: -21.000036239624023
    7. 'd' → logprob: -21.375036239624023
    8. 'import' → logprob: -21.375036239624023
    9. '	def' → logprob: -21.625036239624023
    10. '-def' → logprob: -21.625036239624023

Token 363: ' calcul' (ID: 7559)
  Prédit: ' mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mod' → logprob: -0.5874003171920776
    2. 'mod' → logprob: -0.8374003171920776
    3. ' modular' → logprob: -4.712400436401367
    4. 'inverse' → logprob: -6.587400436401367
    5. ' inverse' → logprob: -7.212400436401367
    6. 'pow' → logprob: -8.587400436401367
    7. ' pow' → logprob: -9.962400436401367
    8. 'inv' → logprob: -10.462400436401367
    9. ' modulo' → logprob: -11.087400436401367
    10. 'in' → logprob: -11.837400436401367

Token 364: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.03735992684960365
    2. '_inverse' → logprob: -3.5373599529266357
    3. '_mod' → logprob: -5.162359714508057
    4. '_er' → logprob: -7.037359714508057
    5. 'ateur' → logprob: -8.287360191345215
    6. '_' → logprob: -8.787360191345215
    7. 'e' → logprob: -9.037360191345215
    8. 'ate' → logprob: -9.412360191345215
    9. 'uer' → logprob: -9.537360191345215
    10. 'inverse' → logprob: -9.662360191345215

Token 365: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -0.0024225101806223392
    2. '_inv' → logprob: -6.877422332763672
    3. '_l' → logprob: -7.502422332763672
    4. '_in' → logprob: -8.127422332763672
    5. '_la' → logprob: -8.877422332763672
    6. '_mod' → logprob: -8.877422332763672
    7. '_' → logprob: -9.752422332763672
    8. '_le' → logprob: -9.752422332763672
    9. 'l' → logprob: -9.877422332763672
    10. 'inverse' → logprob: -10.377422332763672

Token 366: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.00031377444975078106
    2. 'mod' → logprob: -8.500313758850098
    3. '_' → logprob: -9.750313758850098
    4. '(x' → logprob: -10.500313758850098
    5. '```' → logprob: -12.125313758850098
    6. '_m' → logprob: -12.250313758850098
    7. '_module' → logprob: -12.375313758850098
    8. '_modal' → logprob: -12.875313758850098
    9. '(' → logprob: -13.625313758850098
    10. '_mult' → logprob: -13.750313758850098

Token 367: 'ulaire' (ID: 48584)
  Prédit: 'ulaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulaire' → logprob: -0.0041173421777784824
    2. '(x' → logprob: -5.879117488861084
    3. 'ulo' → logprob: -6.754117488861084
    4. 'ular' → logprob: -9.379117012023926
    5. 'ulare' → logprob: -10.629117012023926
    6. 'ul' → logprob: -11.879117012023926
    7. '```' → logprob: -12.254117012023926
    8. 'ule' → logprob: -12.379117012023926
    9. 'culaire' → logprob: -12.379117012023926
    10. 'u' → logprob: -12.504117012023926

Token 368: '(val' (ID: 17391)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0024953987449407578
    2. '(' → logprob: -6.002495288848877
    3. ' (' → logprob: -11.377495765686035
    4. '(
' → logprob: -11.877495765686035
    5. 'x' → logprob: -14.752495765686035
    6. 'def' → logprob: -15.002495765686035
    7. '(a' → logprob: -16.00249481201172
    8. '   ' → logprob: -16.37749481201172
    9. '(n' → logprob: -16.37749481201172
    10. '```' → logprob: -16.62749481201172

Token 369: 'eur' (ID: 8671)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.050690263509750366
    2. 'ue' → logprob: -3.300690174102783
    3. 'ule' → logprob: -5.050690174102783
    4. 'u' → logprob: -6.300690174102783
    5. 'e' → logprob: -6.675690174102783
    6. 'ulo' → logprob: -7.300690174102783
    7. '(x' → logprob: -7.425690174102783
    8. 'ex' → logprob: -7.550690174102783
    9. ' x' → logprob: -7.800690174102783
    10. 'eur' → logprob: -8.175690650939941

Token 370: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22308671474456787
    2. '):' → logprob: -1.7230867147445679
    3. '(x' → logprob: -4.848086833953857
    4. ',x' → logprob: -5.223086833953857
    5. '_mod' → logprob: -5.848086833953857
    6. 'x' → logprob: -6.348086833953857
    7. '_x' → logprob: -7.098086833953857
    8. ':' → logprob: -7.598086833953857
    9. ' ,' → logprob: -7.848086833953857
    10. '):
' → logprob: -7.848086833953857

Token 371: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015423574950546026
    2. 'return' → logprob: -7.001542568206787
    3. ' return' → logprob: -7.376542568206787
    4. '   ' → logprob: -13.001542091369629
    5. 'def' → logprob: -13.876542091369629
    6. '	return' → logprob: -14.376542091369629
    7. '```' → logprob: -15.376542091369629
    8. 'x' → logprob: -15.626542091369629
    9. 'pow' → logprob: -15.876542091369629
    10. '    
' → logprob: -16.001543045043945

Token 372: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5762629508972168
    2. '   ' → logprob: -0.8262629508972168
    3. ' return' → logprob: -8.201263427734375
    4. 'pow' → logprob: -10.076263427734375
    5. '	return' → logprob: -11.951263427734375
    6. 'def' → logprob: -15.701263427734375
    7. '  ' → logprob: -16.076263427734375
    8. '   ' → logprob: -16.576263427734375
    9. '    
' → logprob: -16.701263427734375
    10. '```' → logprob: -16.826263427734375

Token 373: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.003178071230649948
    2. ' pow' → logprob: -5.753178119659424
    3. '(pow' → logprob: -14.878177642822266
    4. '_pow' → logprob: -18.378177642822266
    5. '   ' → logprob: -19.003177642822266
    6. 'power' → logprob: -19.628177642822266
    7. ' ' → logprob: -20.003177642822266
    8. ' ' → logprob: -20.128177642822266
    9. '
' → logprob: -20.503177642822266
    10. '.pow' → logprob: -20.628177642822266

Token 374: '(val' (ID: 17391)
  Prédit: '(val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(val' → logprob: -4.429896944202483e-05
    2. '(' → logprob: -10.125043869018555
    3. '[val' → logprob: -13.375043869018555
    4. '(
' → logprob: -13.750043869018555
    5. '(valor' → logprob: -13.875043869018555
    6. ',val' → logprob: -14.875043869018555
    7. 'val' → logprob: -15.125043869018555
    8. '	val' → logprob: -19.250043869018555
    9. '(value' → logprob: -19.875043869018555
    10. '(vals' → logprob: -19.875043869018555

Token 375: 'eur' (ID: 8671)
  Prédit: 'eur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eur' → logprob: -0.8933342695236206
    2. 'ale' → logprob: -1.0183342695236206
    3. 'al' → logprob: -1.6433342695236206
    4. 'val' → logprob: -4.01833438873291
    5. 'alue' → logprob: -4.76833438873291
    6. '(val' → logprob: -5.39333438873291
    7. 'er' → logprob: -6.39333438873291
    8. 'ateur' → logprob: -6.76833438873291
    9. 'alu' → logprob: -7.39333438873291
    10. 'leur' → logprob: -8.26833438873291

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019305046589579433
    2. ' ,' → logprob: -9.375192642211914
    3. ',
' → logprob: -9.625192642211914
    4. 'MOD' → logprob: -10.500192642211914
    5. ',M' → logprob: -11.875192642211914
    6. ',val' → logprob: -12.375192642211914
    7. '   ' → logprob: -14.875192642211914
    8. '
' → logprob: -15.000192642211914
    9. '(M' → logprob: -15.250192642211914
    10. ',module' → logprob: -15.250192642211914

Token 377: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.8087270038668066e-05
    2. ' MOD' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.500027656555176
    4. '-' → logprob: -16.125028610229492
    5. '.MOD' → logprob: -16.750028610229492
    6. '_MOD' → logprob: -17.000028610229492
    7. '-M' → logprob: -17.250028610229492
    8. 'MO' → logprob: -17.250028610229492
    9. 'MODULE' → logprob: -19.125028610229492
    10. 'MODE' → logprob: -19.500028610229492

Token 378: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.2829458713531494
    2. 'O' → logprob: -1.4079458713531494
    3. 'ODO' → logprob: -7.03294563293457
    4. 'ULE' → logprob: -8.28294563293457
    5. 'OD' → logprob: -9.15794563293457
    6. 'ODULE' → logprob: -9.65794563293457
    7. 'ONTO' → logprob: -9.90794563293457
    8. '-' → logprob: -10.03294563293457
    9. 'UI' → logprob: -10.15794563293457
    10. 'U' → logprob: -10.28294563293457

Token 379: '_CONSTANT' (ID: 115083)
  Prédit: '_CONSTANT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONSTANT' → logprob: -2.856408536899835e-05
    2. '-' → logprob: -11.375028610229492
    3. 'CON' → logprob: -12.000028610229492
    4. '_CONST' → logprob: -12.000028610229492
    5. '_MOD' → logprob: -13.375028610229492
    6. '_constant' → logprob: -13.500028610229492
    7. '_CON' → logprob: -13.750028610229492
    8. 'const' → logprob: -16.000028610229492
    9. 'Constant' → logprob: -16.125028610229492
    10. 'o' → logprob: -16.750028610229492

Token 380: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.020542239770293236
    2. ' -' → logprob: -3.8955421447753906
    3. '   ' → logprob: -15.89554214477539
    4. ' ' → logprob: -16.14554214477539
    5. ' ' → logprob: -17.27054214477539
    6. '```' → logprob: -17.39554214477539
    7. '−' → logprob: -17.77054214477539
    8. '  ' → logprob: -18.02054214477539
    9. '–' → logprob: -18.70804214477539
    10. 's' → logprob: -19.20804214477539

Token 381: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.25
    3. '۲' → logprob: -16.25
    4. '
' → logprob: -17.375
    5. '```' → logprob: -17.9375
    6. '٢' → logprob: -18.0625
    7. '-' → logprob: -18.1875
    8. '3' → logprob: -18.4375
    9. '

' → logprob: -18.5625
    10. '২' → logprob: -18.625

Token 382: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.500000953674316
    3. '-' → logprob: -16.75
    4. '۲' → logprob: -17.1875
    5. '```' → logprob: -17.375
    6. '
' → logprob: -17.75
    7. '

' → logprob: -17.875
    8. '3' → logprob: -18.3125
    9. '২' → logprob: -18.9375
    10. '２' → logprob: -19.0

Token 383: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6340839266777039
    2. ')' → logprob: -0.7590839266777039
    3. ' ,' → logprob: -6.6340837478637695
    4. ' )' → logprob: -8.75908374786377
    5. '   ' → logprob: -12.13408374786377
    6. ' ' → logprob: -13.50908374786377
    7. '}' → logprob: -13.88408374786377
    8. '),' → logprob: -14.00908374786377
    9. ',
' → logprob: -14.00908374786377
    10. ')
' → logprob: -14.25908374786377

Token 384: ' MOD' (ID: 32868)
  Prédit: ' MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' MOD' → logprob: -0.38687291741371155
    2. 'MOD' → logprob: -1.1368728876113892
    3. '   ' → logprob: -13.386873245239258
    4. ' ' → logprob: -16.386873245239258
    5. '_MOD' → logprob: -16.386873245239258
    6. 'MO' → logprob: -16.386873245239258
    7. '.MOD' → logprob: -16.511873245239258
    8. ')' → logprob: -17.511873245239258
    9. ' MO' → logprob: -17.761873245239258
    10. ' ' → logprob: -18.261873245239258

Token 385: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.023272501304745674
    2. 'O' → logprob: -3.7732725143432617
    3. 'ULE' → logprob: -11.023272514343262
    4. 'LO' → logprob: -12.023272514343262
    5. 'U' → logprob: -13.023272514343262
    6. 'UL' → logprob: -13.898272514343262
    7. 'L' → logprob: -15.023272514343262
    8. 'OU' → logprob: -15.273272514343262
    9. 'LE' → logprob: -15.523272514343262
    10. 'ulo' → logprob: -15.523272514343262

Token 386: '_CONSTANT' (ID: 115083)
  Prédit: '_CONSTANT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONSTANT' → logprob: -6.749814019713085e-06
    2. '_CONST' → logprob: -12.000006675720215
    3. '_constant' → logprob: -15.250006675720215
    4. 'const' → logprob: -16.25000762939453
    5. ')' → logprob: -16.62500762939453
    6. 'constant' → logprob: -16.75000762939453
    7. 'Constant' → logprob: -16.87500762939453
    8. '```' → logprob: -17.75000762939453
    9. '_CON' → logprob: -17.87500762939453
    10. '.constant' → logprob: -18.12500762939453

Token 387: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -13.625000953674316
    3. ' )' → logprob: -16.500001907348633
    4. ')return' → logprob: -18.125001907348633
    5. '<|end|>' → logprob: -19.000001907348633
    6. '),' → logprob: -19.000001907348633
    7. ')}' → logprob: -19.250001907348633
    8. ')#' → logprob: -19.250001907348633
    9. '))' → logprob: -19.625001907348633
    10. ')

' → logprob: -19.625001907348633

Token 388: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.029775718227028847
    2. 'def' → logprob: -3.529775619506836
    3. '
' → logprob: -11.279775619506836
    4. '<|end|>' → logprob: -11.654775619506836
    5. '```' → logprob: -13.154775619506836
    6. 'class' → logprob: -13.779775619506836
    7. '<|end|>' → logprob: -14.654775619506836
    8. '  
' → logprob: -15.654775619506836
    9. '

' → logprob: -16.154775619506836
    10. ' def' → logprob: -17.279775619506836

Token 389: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005537479883059859
    2. '#' → logprob: -7.500553607940674
    3. 'class' → logprob: -14.250554084777832
    4. ' def' → logprob: -15.750554084777832
    5. 'from' → logprob: -17.625553131103516
    6. '```' → logprob: -17.875553131103516
    7. 'import' → logprob: -18.000553131103516
    8. '
' → logprob: -18.625553131103516
    9. 'dé' → logprob: -19.750553131103516
    10. '	def' → logprob: -20.000553131103516

Token 390: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0013539257925003767
    2. 'pour' → logprob: -6.876353740692139
    3. ' pour' → logprob: -9.626354217529297
    4. '#' → logprob: -10.001354217529297
    5. 'de' → logprob: -10.001354217529297
    6. 'for' → logprob: -10.501354217529297
    7. ' def' → logprob: -10.501354217529297
    8. '_factor' → logprob: -10.751354217529297
    9. 'factor' → logprob: -10.751354217529297
    10. '(' → logprob: -11.126354217529297

Token 391: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.0030784830451011658
    2. 'comb' → logprob: -5.878078460693359
    3. ' calcul' → logprob: -8.75307846069336
    4. 'com' → logprob: -9.62807846069336
    5. 'factor' → logprob: -11.87807846069336
    6. 'cho' → logprob: -11.87807846069336
    7. 'mult' → logprob: -11.87807846069336
    8. 'comput' → logprob: -12.25307846069336
    9. 'cal' → logprob: -12.50307846069336
    10. 'pre' → logprob: -12.62807846069336

Token 392: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -3.368984107510187e-05
    2. 'aler' → logprob: -10.875033378601074
    3. '#' → logprob: -12.250033378601074
    4. 'def' → logprob: -12.500033378601074
    5. 'uler' → logprob: -13.375033378601074
    6. 'rer' → logprob: -13.625033378601074
    7. '```' → logprob: -14.375033378601074
    8. 'al' → logprob: -14.500033378601074
    9. 'calcul' → logprob: -14.750033378601074
    10. 'erer' → logprob: -14.750033378601074

Token 393: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.18660295009613037
    2. 'le' → logprob: -1.8116029500961304
    3. 'comb' → logprob: -5.68660306930542
    4. 'n' → logprob: -6.56160306930542
    5. 'les' → logprob: -7.06160306930542
    6. '(n' → logprob: -7.43660306930542
    7. ' la' → logprob: -8.811602592468262
    8. 'factor' → logprob: -8.936602592468262
    9. '(com' → logprob: -9.811602592468262
    10. 'une' → logprob: -10.186602592468262

Token 394: ''arr' (ID: 49695)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.1421395540237427
    2. 'a' → logprob: -1.3921395540237427
    3. 'eur' → logprob: -1.7671395540237427
    4. '_comb' → logprob: -2.892139434814453
    5. 'inverse' → logprob: -3.517139434814453
    6. 'comb' → logprob: -4.017139434814453
    7. '_com' → logprob: -4.142139434814453
    8. 'er' → logprob: -4.267139434814453
    9. 'aire' → logprob: -4.642139434814453
    10. 'n' → logprob: -4.767139434814453

Token 395: 'angement' (ID: 58322)
  Prédit: 'angement'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angement' → logprob: -0.013694453984498978
    2. 'angements' → logprob: -4.7636942863464355
    3. 'anger' → logprob: -5.6386942863464355
    4. 'an' → logprob: -7.2636942863464355
    5. 'ange' → logprob: -8.263694763183594
    6. 'ang' → logprob: -8.388694763183594
    7. 'angent' → logprob: -8.888694763183594
    8. 'anging' → logprob: -10.263694763183594
    9. 'iver' → logprob: -10.513694763183594
    10. 'angé' → logprob: -10.763694763183594

Token 396: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.152922511100769
    2. '(n' → logprob: -1.152922511100769
    3. '_simple' → logprob: -2.6529226303100586
    4. '_des' → logprob: -2.6529226303100586
    5. '_n' → logprob: -3.1529226303100586
    6. '_possible' → logprob: -3.7779226303100586
    7. '_nombre' → logprob: -3.9029226303100586
    8. '_mod' → logprob: -4.277922630310059
    9. '_factor' → logprob: -4.402922630310059
    10. '_per' → logprob: -4.402922630310059

Token 397: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07695484906435013
    2. 'nombre' → logprob: -3.0769548416137695
    3. 'factor' → logprob: -4.2019548416137695
    4. 'def' → logprob: -4.7019548416137695
    5. 'val' → logprob: -6.3269548416137695
    6. '(n' → logprob: -7.7019548416137695
    7. 'nb' → logprob: -8.32695484161377
    8. 'fact' → logprob: -8.45195484161377
    9. '```' → logprob: -8.45195484161377
    10. ' n' → logprob: -8.57695484161377

Token 398: ' P' (ID: 398)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01888834498822689
    2. 'P' → logprob: -4.768888473510742
    3. ',P' → logprob: -5.768888473510742
    4. 'r' → logprob: -6.268888473510742
    5. ',r' → logprob: -6.393888473510742
    6. ' ,' → logprob: -6.768888473510742
    7. '_,' → logprob: -7.893888473510742
    8. '_P' → logprob: -8.018888473510742
    9. ',k' → logprob: -8.018888473510742
    10. '```' → logprob: -8.393888473510742

Token 399: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.6353126168251038
    2. 'r' → logprob: -0.7603126168251038
    3. ' r' → logprob: -6.135312557220459
    4. ' k' → logprob: -7.635312557220459
    5. ',r' → logprob: -10.260313034057617
    6. '_r' → logprob: -11.760313034057617
    7. ',k' → logprob: -12.260313034057617
    8. ' ' → logprob: -13.010313034057617
    9. '
' → logprob: -13.135313034057617
    10. ',' → logprob: -13.385313034057617

Token 400: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16433030366897583
    2. '):' → logprob: -1.914330244064331
    3. '(n' → logprob: -6.41433048248291
    4. 'def' → logprob: -6.91433048248291
    5. '):
' → logprob: -7.16433048248291
    6. ',' → logprob: -9.03933048248291
    7. '):
' → logprob: -9.16433048248291
    8. '):

' → logprob: -9.66433048248291
    9. '),' → logprob: -9.91433048248291
    10. 's' → logprob: -10.03933048248291

Token 401: ' modulo' (ID: 112372)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005479198414832354
    2. '(n' → logprob: -5.255479335784912
    3. '(' → logprob: -8.505478858947754
    4. '(
' → logprob: -11.130478858947754
    5. ' def' → logprob: -11.380478858947754
    6. '(def' → logprob: -12.005478858947754
    7. ')' → logprob: -13.005478858947754
    8. ':' → logprob: -13.130478858947754
    9. 'de' → logprob: -13.130478858947754
    10. '_def' → logprob: -14.005478858947754

Token 402: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.19158802926540375
    2. '(n' → logprob: -2.5665879249572754
    3. '_MOD' → logprob: -2.8165879249572754
    4. '(' → logprob: -4.316587924957275
    5. ' MOD' → logprob: -4.566587924957275
    6. ' (' → logprob: -5.316587924957275
    7. '_' → logprob: -5.691587924957275
    8. '```' → logprob: -6.441587924957275
    9. ')' → logprob: -6.816587924957275
    10. ' ' → logprob: -7.691587924957275

Token 403: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.00039588010986335576
    2. 'O' → logprob: -8.125395774841309
    3. 'ULE' → logprob: -10.250395774841309
    4. 'U' → logprob: -10.750395774841309
    5. '_CONSTANT' → logprob: -11.250395774841309
    6. 'OU' → logprob: -11.750395774841309
    7. '_' → logprob: -12.500395774841309
    8. 'UL' → logprob: -12.625395774841309
    9. '#' → logprob: -12.875395774841309
    10. '   ' → logprob: -13.750395774841309

Token 404: '_CONSTANT' (ID: 115083)
  Prédit: '_CONSTANT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONSTANT' → logprob: -0.01903936266899109
    2. '_constant' → logprob: -4.019039154052734
    3. 'def' → logprob: -7.769039154052734
    4. '_CONST' → logprob: -8.144039154052734
    5. '(const' → logprob: -9.894039154052734
    6. '_MOD' → logprob: -10.269039154052734
    7. '_const' → logprob: -10.519039154052734
    8. 'const' → logprob: -10.769039154052734
    9. '_' → logprob: -11.144039154052734
    10. '_CON' → logprob: -11.519039154052734

Token 405: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004429435357451439
    2. '(n' → logprob: -8.000442504882812
    3. '(def' → logprob: -10.250442504882812
    4. ' def' → logprob: -10.750442504882812
    5. ':def' → logprob: -11.000442504882812
    6. '(' → logprob: -11.000442504882812
    7. ':' → logprob: -11.625442504882812
    8. '(
' → logprob: -12.000442504882812
    9. 'de' → logprob: -14.125442504882812
    10. '_def' → logprob: -14.250442504882812

Token 406: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. ' def' → logprob: -18.5
    3. '```' → logprob: -21.0
    4. '
' → logprob: -21.375
    5. ':def' → logprob: -21.875
    6. '(def' → logprob: -22.75
    7. 'de' → logprob: -22.875
    8. '(
' → logprob: -23.375
    9. 'ndef' → logprob: -23.625
    10. 'd' → logprob: -24.375

Token 407: ' arrangement' (ID: 21868)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.26132577657699585
    2. 'arr' → logprob: -1.7613258361816406
    3. ' calcul' → logprob: -3.0113258361816406
    4. 'def' → logprob: -5.761325836181641
    5. 'factor' → logprob: -6.136325836181641
    6. 'cal' → logprob: -6.761325836181641
    7. ' arrangement' → logprob: -7.511325836181641
    8. ' arranger' → logprob: -7.636325836181641
    9. 'calc' → logprob: -8.01132583618164
    10. 'comb' → logprob: -8.38632583618164

Token 408: '_per' (ID: 10938)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0024827925954014063
    2. '_mod' → logprob: -6.502482891082764
    3. '_factor' → logprob: -8.002482414245605
    4. 'def' → logprob: -8.252482414245605
    5. '(' → logprob: -8.627482414245605
    6. ' (' → logprob: -9.377482414245605
    7. 'factor' → logprob: -10.877482414245605
    8. '_n' → logprob: -11.127482414245605
    9. '_de' → logprob: -11.252482414245605
    10. '```' → logprob: -11.377482414245605

Token 409: 'mutation' (ID: 92896)
  Prédit: 'mutation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mutation' → logprob: -0.3030310571193695
    2. 'mut' → logprob: -1.428031086921692
    3. 'm' → logprob: -4.928030967712402
    4. 'mu' → logprob: -5.053030967712402
    5. 'mute' → logprob: -5.553030967712402
    6. 'def' → logprob: -6.428030967712402
    7. '```' → logprob: -6.928030967712402
    8. 'mutable' → logprob: -7.803030967712402
    9. 'met' → logprob: -8.678030967712402
    10. '_mut' → logprob: -9.053030967712402

Token 410: '_mod' (ID: 15325)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.001021970878355205
    2. '_mod' → logprob: -7.751021862030029
    3. '_factor' → logprob: -8.126022338867188
    4. ' (' → logprob: -9.001022338867188
    5. '(' → logprob: -9.751022338867188
    6. 'def' → logprob: -10.501022338867188
    7. 's' → logprob: -10.751022338867188
    8. 'factor' → logprob: -11.001022338867188
    9. '_de' → logprob: -11.626022338867188
    10. 'n' → logprob: -12.126022338867188

Token 411: 'ulo' (ID: 5953)
  Prédit: 'ulaire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulaire' → logprob: -0.3351123332977295
    2. '(n' → logprob: -1.3351123332977295
    3. 'ulo' → logprob: -3.9601123332977295
    4. 'ule' → logprob: -6.335112571716309
    5. 'culaire' → logprob: -8.960112571716309
    6. 'uler' → logprob: -8.960112571716309
    7. '_(' → logprob: -9.335112571716309
    8. 'ul' → logprob: -9.460112571716309
    9. '(' → logprob: -10.085112571716309
    10. 'ale' → logprob: -10.585112571716309

Token 412: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.9795445849886164e-05
    2. '(' → logprob: -9.875060081481934
    3. ' (' → logprob: -12.000060081481934
    4. '(nombre' → logprob: -13.625060081481934
    5. 'n' → logprob: -15.500060081481934
    6. '(
' → logprob: -15.750060081481934
    7. '(val' → logprob: -15.875060081481934
    8. 'def' → logprob: -16.250059127807617
    9. '(N' → logprob: -16.750059127807617
    10. '(f' → logprob: -16.750059127807617

Token 413: '_ent' (ID: 66249)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004723795282188803
    2. ',k' → logprob: -8.250472068786621
    3. ' ,' → logprob: -8.500472068786621
    4. ',n' → logprob: -12.000472068786621
    5. 'k' → logprob: -14.375472068786621
    6. '_,' → logprob: -15.750472068786621
    7. ' ' → logprob: -15.750472068786621
    8. ',
' → logprob: -15.875472068786621
    9. '‌,' → logprob: -16.750473022460938
    10. ',int' → logprob: -16.875473022460938

Token 414: 'iers' (ID: 11012)
  Prédit: 'ier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ier' → logprob: -1.1625078916549683
    2. 'u' → logprob: -1.4125078916549683
    3. 'n' → logprob: -1.9125078916549683
    4. 'def' → logprob: -2.662508010864258
    5. 'utations' → logprob: -3.412508010864258
    6. 'f' → logprob: -3.787508010864258
    7. 'utation' → logprob: -4.162508010864258
    8. 're' → logprob: -4.287508010864258
    9. 'iere' → logprob: -4.662508010864258
    10. 't' → logprob: -4.662508010864258

Token 415: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00045009577297605574
    2. ' ,' → logprob: -8.000450134277344
    3. ',k' → logprob: -9.125450134277344
    4. ',n' → logprob: -12.500450134277344
    5. 'k' → logprob: -14.375450134277344
    6. 's' → logprob: -15.125450134277344
    7. ',int' → logprob: -15.125450134277344
    8. ',
' → logprob: -15.375450134277344
    9. ',val' → logprob: -16.250450134277344
    10. 'def' → logprob: -16.250450134277344

Token 416: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.012521306052803993
    2. ' k' → logprob: -4.387521266937256
    3. 'nombre' → logprob: -12.262521743774414
    4. 'r' → logprob: -13.637521743774414
    5. 'p' → logprob: -13.762521743774414
    6. '
' → logprob: -14.137521743774414
    7. ' ' → logprob: -14.262521743774414
    8. '   ' → logprob: -14.387521743774414
    9. '	k' → logprob: -14.387521743774414
    10. '```' → logprob: -15.012521743774414

Token 417: '_selection' (ID: 56289)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004659861326217651
    2. '):
' → logprob: -5.879659652709961
    3. ',' → logprob: -6.754659652709961
    4. ')' → logprob: -7.379659652709961
    5. ' ):' → logprob: -11.004659652709961
    6. '):
' → logprob: -11.254659652709961
    7. 's' → logprob: -11.754659652709961
    8. ':' → logprob: -12.379659652709961
    9. 'ent' → logprob: -12.629659652709961
    10. '_' → logprob: -12.879659652709961

Token 418: 'nes' (ID: 4382)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7367672324180603
    2. '):' → logprob: -0.9867672324180603
    3. 'er' → logprob: -1.986767292022705
    4. 'uer' → logprob: -5.611767292022705
    5. '):
' → logprob: -5.861767292022705
    6. 's' → logprob: -6.861767292022705
    7. 'es' → logprob: -7.361767292022705
    8. 'u' → logprob: -7.486767292022705
    9. 'és' → logprob: -7.736767292022705
    10. 'e' → logprob: -7.986767292022705

Token 419: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.448370838072151e-05
    2. ')' → logprob: -9.500094413757324
    3. '):
' → logprob: -11.125094413757324
    4. ',' → logprob: -13.375094413757324
    5. ' ):' → logprob: -13.500094413757324
    6. '):
' → logprob: -14.000094413757324
    7. ':' → logprob: -14.500094413757324
    8. 's' → logprob: -16.00009536743164
    9. '):

' → logprob: -16.37509536743164
    10. 'n' → logprob: -16.37509536743164

Token 420: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23451781272888184
    2. ':' → logprob: -1.6095178127288818
    3. '):' → logprob: -5.359518051147461
    4. ':
' → logprob: -6.234518051147461
    5. 'if' → logprob: -6.984518051147461
    6. ' if' → logprob: -7.109518051147461
    7. '):
' → logprob: -7.984518051147461
    8. 'def' → logprob: -9.234518051147461
    9. ')' → logprob: -9.859518051147461
    10. ' :' → logprob: -10.484518051147461

Token 421: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5783748030662537
    2. 'if' → logprob: -0.8283748030662537
    3. '   ' → logprob: -6.203374862670898
    4. 'factor' → logprob: -8.328374862670898
    5. ' if' → logprob: -9.328374862670898
    6. ' return' → logprob: -9.578374862670898
    7. 'fact' → logprob: -11.828374862670898
    8. '    
' → logprob: -14.078374862670898
    9. 'result' → logprob: -14.953374862670898
    10. '
' → logprob: -14.953374862670898

Token 422: ' factorial' (ID: 111204)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.5935682058334351
    2. 'factor' → logprob: -0.8435682058334351
    3. ' (' → logprob: -4.843568325042725
    4. ' factorial' → logprob: -4.968568325042725
    5. '(
' → logprob: -6.468568325042725
    6. 'fact' → logprob: -7.468568325042725
    7. ' factor' → logprob: -8.093567848205566
    8. '(' → logprob: -10.218567848205566
    9. '((' → logprob: -10.468567848205566
    10. 'f' → logprob: -10.593567848205566

Token 423: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: 0.0
    2. '_per' → logprob: -18.375
    3. '_MOD' → logprob: -18.5
    4. 'mod' → logprob: -19.25
    5. '_factor' → logprob: -19.375
    6. 's' → logprob: -20.375
    7. '_' → logprob: -21.0
    8. '_Mod' → logprob: -21.0
    9. '```' → logprob: -21.25
    10. '\' → logprob: -21.375

Token 424: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -4.787507714354433e-05
    2. 'ial' → logprob: -10.62504768371582
    3. 'table' → logprob: -11.12504768371582
    4. 'al' → logprob: -13.00004768371582
    5. '_mod' → logprob: -13.00004768371582
    6. 'uel' → logprob: -14.25004768371582
    7. 'ular' → logprob: -14.25004768371582
    8. 'or' → logprob: -14.37504768371582
    9. 'ier' → logprob: -14.62504768371582
    10. 'uer' → logprob: -15.25004768371582

Token 425: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.2664456789934775e-06
    2. 'n' → logprob: -14.000000953674316
    3. '[' → logprob: -15.125000953674316
    4. '[
' → logprob: -16.625001907348633
    5. ' [' → logprob: -17.375001907348633
    6. '[k' → logprob: -18.625001907348633
    7. '(n' → logprob: -19.000001907348633
    8. '
' → logprob: -20.125001907348633
    9. '[m' → logprob: -20.250001907348633
    10. '	n' → logprob: -20.375001907348633

Token 426: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -1.0802738870552275e-05
    2. 'ent' → logprob: -11.75001049041748
    3. '	ent' → logprob: -13.00001049041748
    4. '_entropy' → logprob: -15.87501049041748
    5. '_ENT' → logprob: -16.000011444091797
    6. ']' → logprob: -16.000011444091797
    7. '_' → logprob: -16.500011444091797
    8. '_inter' → logprob: -17.125011444091797
    9. '(ent' → logprob: -17.375011444091797
    10. '_cont' → logprob: -17.750011444091797

Token 427: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.1762704849243164
    2. 't' → logprob: -2.0512704849243164
    3. 'ters' → logprob: -3.9262704849243164
    4. 'tes' → logprob: -4.926270484924316
    5. 'ents' → logprob: -5.676270484924316
    6. 'tiers' → logprob: -7.176270484924316
    7. '_t' → logprob: -7.676270484924316
    8. 'ent' → logprob: -7.926270484924316
    9. '_ent' → logprob: -8.676270484924316
    10. 'ers' → logprob: -8.801270484924316

Token 428: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -3.8889261304575484e-06
    2. ']
' → logprob: -12.625003814697266
    3. '   ' → logprob: -14.875003814697266
    4. ' ]' → logprob: -16.250003814697266
    5. ']*' → logprob: -17.250003814697266
    6. ']

' → logprob: -17.375003814697266
    7. ' ' → logprob: -17.375003814697266
    8. ']/' → logprob: -18.375003814697266
    9. ']%' → logprob: -18.875003814697266
    10. '
' → logprob: -19.125003814697266

Token 429: ' *' (ID: 425)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.636779248714447
    2. '//' → logprob: -0.761779248714447
    3. '*' → logprob: -6.386779308319092
    4. '   ' → logprob: -6.761779308319092
    5. ' *' → logprob: -7.261779308319092
    6. ' ' → logprob: -8.636778831481934
    7. ' ' → logprob: -8.636778831481934
    8. '
' → logprob: -9.011778831481934
    9. '//
' → logprob: -10.136778831481934
    10. '...' → logprob: -10.511778831481934

Token 430: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.5759684443473816
    2. ' calcul' → logprob: -0.8259684443473816
    3. 'cal' → logprob: -11.325968742370605
    4. ' calcular' → logprob: -12.575968742370605
    5. '   ' → logprob: -12.700968742370605
    6. 'comput' → logprob: -12.950968742370605
    7. '  ' → logprob: -13.200968742370605
    8. 'calc' → logprob: -13.575968742370605
    9. ' calcula' → logprob: -13.700968742370605
    10. 'calculate' → logprob: -14.200968742370605

Token 431: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -3.128163257315464e-07
    2. 'uler' → logprob: -15.5
    3. 'ler' → logprob: -17.625
    4. '```' → logprob: -18.375
    5. 'erer' → logprob: -18.75
    6. '#' → logprob: -18.75
    7. '_er' → logprob: -19.375
    8. 'uer' → logprob: -19.75
    9. '   ' → logprob: -19.875
    10. '{' → logprob: -19.875

Token 432: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -8.2994620242971e-06
    2. 'inverse' → logprob: -11.750008583068848
    3. '```' → logprob: -16.25000762939453
    4. 'Inverse' → logprob: -16.87500762939453
    5. '
' → logprob: -17.25000762939453
    6. '.inverse' → logprob: -17.25000762939453
    7. '_reverse' → logprob: -17.25000762939453
    8. '_inv' → logprob: -17.37500762939453
    9. '_' → logprob: -17.37500762939453
    10. '\' → logprob: -17.37500762939453

Token 433: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -3.054500666621607e-06
    2. 'mod' → logprob: -12.75000286102295
    3. '_m' → logprob: -17.750003814697266
    4. '_MOD' → logprob: -17.875003814697266
    5. 's' → logprob: -18.875003814697266
    6. '```' → logprob: -18.875003814697266
    7. '_' → logprob: -19.375003814697266
    8. '_factor' → logprob: -19.500003814697266
    9. 'f' → logprob: -19.625003814697266
    10. 'Mod' → logprob: -19.750003814697266

Token 434: 'ulaire' (ID: 48584)
  Prédit: 'ulaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulaire' → logprob: -0.0008178464486263692
    2. 'culaire' → logprob: -7.250817775726318
    3. 'aire' → logprob: -9.875818252563477
    4. 'od' → logprob: -10.500818252563477
    5. 'ul' → logprob: -11.500818252563477
    6. 'uaire' → logprob: -13.125818252563477
    7. 'ilaire' → logprob: -13.125818252563477
    8. 'ulia' → logprob: -13.125818252563477
    9. '_mod' → logprob: -13.375818252563477
    10. 'mod' → logprob: -13.750818252563477

Token 435: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.00048107770271599293
    2. '(' → logprob: -7.875481128692627
    3. 'factor' → logprob: -9.375480651855469
    4. '(
' → logprob: -11.125480651855469
    5. '((' → logprob: -13.875480651855469
    6. ' factorial' → logprob: -16.00048065185547
    7. '(

' → logprob: -16.25048065185547
    8. ' (' → logprob: -16.37548065185547
    9. '_factor' → logprob: -16.50048065185547
    10. 'f' → logprob: -16.75048065185547

Token 436: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -1.3425219549390022e-05
    2. '(f' → logprob: -11.87501335144043
    3. 'factor' → logprob: -12.75001335144043
    4. 'act' → logprob: -12.75001335144043
    5. '(actor' → logprob: -14.87501335144043
    6. '_factor' → logprob: -16.50001335144043
    7. '(' → logprob: -17.12501335144043
    8. '[' → logprob: -17.50001335144043
    9. '.factor' → logprob: -17.75001335144043
    10. ' factorial' → logprob: -18.00001335144043

Token 437: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.25234708189964294
    2. 'al' → logprob: -1.5023471117019653
    3. 'orial' → logprob: -8.502346992492676
    4. ' factorial' → logprob: -9.877346992492676
    5. '       ' → logprob: -10.377346992492676
    6. 'or' → logprob: -10.627346992492676
    7. 'factor' → logprob: -10.627346992492676
    8. '_factor' → logprob: -10.877346992492676
    9. '   ' → logprob: -11.377346992492676
    10. '
' → logprob: -11.377346992492676

Token 438: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -5.512236498361744e-07
    2. 'mod' → logprob: -15.875000953674316
    3. '_' → logprob: -16.375
    4. '_factor' → logprob: -16.375
    5. '[' → logprob: -16.75
    6. '_MOD' → logprob: -16.875
    7. '_per' → logprob: -18.0
    8. '```' → logprob: -18.375
    9. '
' → logprob: -18.75
    10. '[_' → logprob: -19.125

Token 439: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.032119020819664
    2. '_mod' → logprob: -3.532119035720825
    3. 'table' → logprob: -6.157118797302246
    4. 'mod' → logprob: -8.657118797302246
    5. 'e' → logprob: -10.032118797302246
    6. '_tab' → logprob: -12.157118797302246
    7. '_tables' → logprob: -12.532118797302246
    8. 'Table' → logprob: -12.657118797302246
    9. '[' → logprob: -13.032118797302246
    10. 'le' → logprob: -13.532118797302246

Token 440: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -7.896309739408025e-07
    2. 'n' → logprob: -14.750000953674316
    3. '[' → logprob: -15.375000953674316
    4. '[
' → logprob: -16.875
    5. '
' → logprob: -17.875
    6. ' [' → logprob: -18.0
    7. '   ' → logprob: -18.125
    8. '```' → logprob: -20.75
    9. '[(' → logprob: -20.875
    10. '(n' → logprob: -21.0

Token 441: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -9.400689305039123e-05
    2. 'ent' → logprob: -9.375094413757324
    3. '	ent' → logprob: -11.750094413757324
    4. '_ENT' → logprob: -14.875094413757324
    5. 'Ent' → logprob: -16.000093460083008
    6. '
' → logprob: -16.000093460083008
    7. '[' → logprob: -16.250093460083008
    8. '_entropy' → logprob: -16.250093460083008
    9. '-ent' → logprob: -16.500093460083008
    10. ''ent' → logprob: -16.500093460083008

Token 442: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.3237505853176117
    2. 't' → logprob: -1.448750615119934
    3. 'ters' → logprob: -4.0737504959106445
    4. 'tes' → logprob: -4.8237504959106445
    5. 'ents' → logprob: -5.3237504959106445
    6. 'res' → logprob: -5.8237504959106445
    7. '_ent' → logprob: -5.8237504959106445
    8. 'ent' → logprob: -6.4487504959106445
    9. '_t' → logprob: -6.6987504959106445
    10. '```' → logprob: -7.4487504959106445

Token 443: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.35896924138069153
    2. ' -' → logprob: -1.3589692115783691
    3. '-k' → logprob: -3.108969211578369
    4. '   ' → logprob: -11.233969688415527
    5. '-
' → logprob: -11.233969688415527
    6. ' ' → logprob: -12.733969688415527
    7. 'k' → logprob: -13.733969688415527
    8. ' -
' → logprob: -14.983969688415527
    9. '  ' → logprob: -15.233969688415527
    10. ' ' → logprob: -15.608969688415527

Token 444: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -2.339278580620885e-06
    2. ' k' → logprob: -13.000001907348633
    3. '   ' → logprob: -19.000001907348633
    4. '	k' → logprob: -19.000001907348633
    5. '
' → logprob: -21.625001907348633
    6. '  ' → logprob: -21.750001907348633
    7. ' ' → logprob: -21.750001907348633
    8. '
' → logprob: -21.875001907348633
    9. '{k' → logprob: -22.375001907348633
    10. ' к' → logprob: -22.375001907348633

Token 445: '_selection' (ID: 56289)
  Prédit: '_selection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_selection' → logprob: -6.52788148727268e-05
    2. '_selected' → logprob: -10.250064849853516
    3. 'selection' → logprob: -10.750064849853516
    4. 's' → logprob: -13.125064849853516
    5. '_select' → logprob: -13.625064849853516
    6. '_ent' → logprob: -13.875064849853516
    7. '_SELECTION' → logprob: -14.125064849853516
    8. 'ent' → logprob: -14.125064849853516
    9. 'sé' → logprob: -14.750064849853516
    10. '_' → logprob: -15.000064849853516

Token 446: 'nes' (ID: 4382)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.016072966158390045
    2. 's' → logprob: -4.266072750091553
    3. 'ses' → logprob: -6.641072750091553
    4. 'nes' → logprob: -8.141073226928711
    5. 'res' → logprob: -8.766073226928711
    6. 'és' → logprob: -9.266073226928711
    7. 'zes' → logprob: -11.516073226928711
    8. 'ues' → logprob: -11.641073226928711
    9. 'tes' → logprob: -12.516073226928711
    10. 'uses' → logprob: -12.516073226928711

Token 447: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -2.8206473871250637e-05
    2. '])
' → logprob: -11.250028610229492
    3. ']' → logprob: -11.750028610229492
    4. ' ])' → logprob: -12.000028610229492
    5. ')' → logprob: -14.750028610229492
    6. '[' → logprob: -15.875028610229492
    7. '   ' → logprob: -16.000028610229492
    8. '])
' → logprob: -16.125028610229492
    9. ']);' → logprob: -16.750028610229492
    10. ' ' → logprob: -16.750028610229492

Token 448: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4740957021713257
    2. '%' → logprob: -0.9740957021713257
    3. ')' → logprob: -11.474095344543457
    4. ' ' → logprob: -12.349095344543457
    5. '   ' → logprob: -13.974095344543457
    6. '%n' → logprob: -14.099095344543457
    7. ' ' → logprob: -14.724095344543457
    8. '%c' → logprob: -14.724095344543457
    9. ')%' → logprob: -14.974095344543457
    10. ' %=' → logprob: -15.099095344543457

Token 449: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.03804149478673935
    2. ' MOD' → logprob: -3.288041591644287
    3. '_MOD' → logprob: -17.163042068481445
    4. 'MO' → logprob: -17.288042068481445
    5. '.MOD' → logprob: -18.163042068481445
    6. ' ' → logprob: -18.663042068481445
    7. '   ' → logprob: -19.663042068481445
    8. ' ' → logprob: -20.288042068481445
    9. 'MD' → logprob: -20.788042068481445
    10. '(M' → logprob: -20.913042068481445

Token 450: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.006764871533960104
    2. 'O' → logprob: -5.006764888763428
    3. 'UL' → logprob: -11.13176441192627
    4. 'MOD' → logprob: -11.25676441192627
    5. 'ULE' → logprob: -11.88176441192627
    6. 'U' → logprob: -12.50676441192627
    7. 'L' → logprob: -12.63176441192627
    8. 'ODO' → logprob: -13.75676441192627
    9. 'OU' → logprob: -13.88176441192627
    10. 'UDO' → logprob: -14.38176441192627

Token 451: '_CONSTANT' (ID: 115083)
  Prédit: '_CONSTANT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONSTANT' → logprob: -6.110668618930504e-05
    2. '_CONST' → logprob: -9.87506103515625
    3. '_constant' → logprob: -12.25006103515625
    4. '_CON' → logprob: -13.00006103515625
    5. '_MOD' → logprob: -13.50006103515625
    6. '\' → logprob: -14.87506103515625
    7. '```' → logprob: -15.75006103515625
    8. 'const' → logprob: -16.12506103515625
    9. 'CON' → logprob: -16.50006103515625
    10. '_C' → logprob: -17.00006103515625

Token 452: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 453: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 454: ' Fonction' (ID: 189149)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002649119414854795
    2. '#' → logprob: -8.250265121459961
    3. 'from' → logprob: -13.375265121459961
    4. '
' → logprob: -14.250265121459961
    5. 'import' → logprob: -14.875265121459961
    6. '```' → logprob: -14.875265121459961
    7. ' def' → logprob: -15.375265121459961
    8. 'factor' → logprob: -16.00026512145996
    9. 'dé' → logprob: -16.00026512145996
    10. 'class' → logprob: -16.37526512145996

Token 455: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0025610304437577724
    2. 'pour' → logprob: -6.627561092376709
    3. 'for' → logprob: -7.752561092376709
    4. ' def' → logprob: -7.752561092376709
    5. ' pour' → logprob: -8.75256061553955
    6. ' for' → logprob: -9.00256061553955
    7. '#' → logprob: -9.75256061553955
    8. '_for' → logprob: -11.37756061553955
    9. 'de' → logprob: -11.50256061553955
    10. '_def' → logprob: -11.87756061553955

Token 456: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.20271693170070648
    2. 'comb' → logprob: -1.7027169466018677
    3. 'la' → logprob: -7.327716827392578
    4. 'com' → logprob: -8.327716827392578
    5. 'factor' → logprob: -9.077716827392578
    6. 'le' → logprob: -9.702716827392578
    7. 'cho' → logprob: -10.452716827392578
    8. 'def' → logprob: -10.452716827392578
    9. 'coeff' → logprob: -10.702716827392578
    10. 'calc' → logprob: -10.702716827392578

Token 457: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -9.698698704596609e-05
    2. 'ler' → logprob: -10.125097274780273
    3. '#' → logprob: -11.125097274780273
    4. '```' → logprob: -11.875097274780273
    5. 'calcul' → logprob: -12.375097274780273
    6. 'aler' → logprob: -12.500097274780273
    7. 'uler' → logprob: -12.500097274780273
    8. 'ateur' → logprob: -12.625097274780273
    9. 'rer' → logprob: -12.750097274780273
    10. 'ate' → logprob: -13.000097274780273

Token 458: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.007604146841913462
    2. 'le' → logprob: -5.382604122161865
    3. 'comb' → logprob: -5.882604122161865
    4. 'les' → logprob: -10.132604598999023
    5. '(com' → logprob: -10.757604598999023
    6. ' la' → logprob: -10.757604598999023
    7. 'com' → logprob: -11.132604598999023
    8. 'une' → logprob: -11.257604598999023
    9. 'l' → logprob: -11.507604598999023
    10. 'def' → logprob: -11.632604598999023

Token 459: ' combinaison' (ID: 165933)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0004164913552813232
    2. 'com' → logprob: -8.00041675567627
    3. ' combinaison' → logprob: -9.87541675567627
    4. 'fonction' → logprob: -12.00041675567627
    5. 'factor' → logprob: -12.25041675567627
    6. 'co' → logprob: -12.37541675567627
    7. 'bin' → logprob: -12.87541675567627
    8. 'combine' → logprob: -13.25041675567627
    9. 'composition' → logprob: -13.37541675567627
    10. 'komb' → logprob: -13.37541675567627

Token 460: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04114917665719986
    2. '(n' → logprob: -3.291149139404297
    3. '_mod' → logprob: -6.041149139404297
    4. 'mod' → logprob: -7.541149139404297
    5. '_com' → logprob: -9.541149139404297
    6. '_comb' → logprob: -10.291149139404297
    7. 'comb' → logprob: -10.291149139404297
    8. ' def' → logprob: -11.041149139404297
    9. 'com' → logprob: -12.166149139404297
    10. 'de' → logprob: -12.291149139404297

Token 461: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007134816609323025
    2. ' n' → logprob: -5.757134914398193
    3. 'def' → logprob: -5.757134914398193
    4. '(n' → logprob: -7.257134914398193
    5. 'C' → logprob: -10.257134437561035
    6. ' def' → logprob: -11.257134437561035
    7. '```' → logprob: -11.507134437561035
    8. 'comb' → logprob: -11.882134437561035
    9. 'int' → logprob: -12.132134437561035
    10. ' C' → logprob: -12.757134437561035

Token 462: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.707053005695343
    2. 'C' → logprob: -0.957053005695343
    3. ',' → logprob: -3.4570529460906982
    4. ' choose' → logprob: -3.9570529460906982
    5. '_choose' → logprob: -3.9570529460906982
    6. ' P' → logprob: -4.332053184509277
    7. '_C' → logprob: -4.707053184509277
    8. ' ' → logprob: -5.207053184509277
    9. 'P' → logprob: -5.582053184509277
    10. '   ' → logprob: -5.707053184509277

Token 463: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0046390993520617485
    2. '(n' → logprob: -6.129639148712158
    3. 'n' → logprob: -6.879639148712158
    4. '_k' → logprob: -7.004639148712158
    5. ' k' → logprob: -8.379638671875
    6. ')' → logprob: -9.254638671875
    7. '(k' → logprob: -9.754638671875
    8. 'r' → logprob: -10.504638671875
    9. '_mod' → logprob: -10.754638671875
    10. 'm' → logprob: -11.004638671875

Token 464: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004888604395091534
    2. '(n' → logprob: -5.754888534545898
    3. 'n' → logprob: -7.754888534545898
    4. '):
' → logprob: -7.879888534545898
    5. ')
' → logprob: -8.129888534545898
    6. '):' → logprob: -9.004888534545898
    7. ')n' → logprob: -9.129888534545898
    8. 'def' → logprob: -9.754888534545898
    9. '_mod' → logprob: -10.004888534545898
    10. '):

' → logprob: -10.004888534545898

Token 465: ' modulo' (ID: 112372)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011065510101616383
    2. '(n' → logprob: -4.511065483093262
    3. ' def' → logprob: -11.636065483093262
    4. '
' → logprob: -12.261065483093262
    5. '_mod' → logprob: -13.761065483093262
    6. '_def' → logprob: -14.261065483093262
    7. '(
' → logprob: -14.386065483093262
    8. 'mod' → logprob: -14.511065483093262
    9. ' (' → logprob: -15.011065483093262
    10. '(' → logprob: -15.136065483093262

Token 466: ' MOD' (ID: 32868)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0014690342359244823
    2. ' (' → logprob: -6.751469135284424
    3. 'def' → logprob: -8.751468658447266
    4. 'MOD' → logprob: -9.876468658447266
    5. 'n' → logprob: -10.376468658447266
    6. '_mod' → logprob: -10.626468658447266
    7. '(' → logprob: -11.626468658447266
    8. '_MOD' → logprob: -12.001468658447266
    9. ' MOD' → logprob: -12.126468658447266
    10. ' n' → logprob: -12.376468658447266

Token 467: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.008224590681493282
    2. '_CONSTANT' → logprob: -4.8832244873046875
    3. 'O' → logprob: -8.133224487304688
    4. 'CON' → logprob: -9.258224487304688
    5. '_constant' → logprob: -10.258224487304688
    6. '#' → logprob: -10.633224487304688
    7. '_CONST' → logprob: -10.883224487304688
    8. 'OU' → logprob: -11.008224487304688
    9. 'ULAR' → logprob: -11.133224487304688
    10. 'ULA' → logprob: -11.383224487304688

Token 468: '_CONSTANT' (ID: 115083)
  Prédit: '_CONSTANT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONSTANT' → logprob: -1.2948405128554441e-05
    2. '_CONST' → logprob: -12.00001335144043
    3. '_constant' → logprob: -12.87501335144043
    4. '(n' → logprob: -13.25001335144043
    5. '_CON' → logprob: -14.37501335144043
    6. '_' → logprob: -14.75001335144043
    7. '#' → logprob: -15.00001335144043
    8. 'CON' → logprob: -15.00001335144043
    9. 'n' → logprob: -15.62501335144043
    10. 'def' → logprob: -16.00001335144043

Token 469: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.700132997939363e-05
    2. '(n' → logprob: -11.000017166137695
    3. ' def' → logprob: -16.125017166137695
    4. '(
' → logprob: -16.250017166137695
    5. '(' → logprob: -17.000017166137695
    6. '(def' → logprob: -17.375017166137695
    7. ':def' → logprob: -17.875017166137695
    8. '
' → logprob: -18.500017166137695
    9. '```' → logprob: -18.875017166137695
    10. ':' → logprob: -19.625017166137695

Token 470: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: 0.0
    2. '```' → logprob: -20.125
    3. ' def' → logprob: -20.5
    4. '
' → logprob: -21.875
    5. 'de' → logprob: -22.5
    6. 'd' → logprob: -22.625
    7. 'import' → logprob: -23.375
    8. 'ndef' → logprob: -23.375
    9. ':def' → logprob: -23.5
    10. 'from' → logprob: -23.625

Token 471: ' combinaison' (ID: 165933)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.0116165392100811
    2. ' combinaison' → logprob: -5.3866167068481445
    3. 'calcul' → logprob: -5.5116167068481445
    4. 'com' → logprob: -5.8866167068481445
    5. 'def' → logprob: -10.136616706848145
    6. 'co' → logprob: -10.636616706848145
    7. 'coef' → logprob: -11.261616706848145
    8. 'combo' → logprob: -11.386616706848145
    9. 'cho' → logprob: -11.386616706848145
    10. ' comb' → logprob: -11.761616706848145

Token 472: '_mod' (ID: 15325)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10046286135911942
    2. '_mod' → logprob: -2.3504629135131836
    3. '(' → logprob: -8.725462913513184
    4. ' (' → logprob: -10.100462913513184
    5. '_(' → logprob: -10.850462913513184
    6. 'mod' → logprob: -10.975462913513184
    7. '_' → logprob: -12.850462913513184
    8. '```' → logprob: -12.975462913513184
    9. '_modifier' → logprob: -13.725462913513184
    10. '_factor' → logprob: -14.100462913513184

Token 473: 'ulo' (ID: 5953)
  Prédit: 'ulaire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulaire' → logprob: -0.5801991820335388
    2. 'ulo' → logprob: -0.8301991820335388
    3. 'ule' → logprob: -5.580199241638184
    4. '(n' → logprob: -8.205199241638184
    5. 'ulare' → logprob: -10.205199241638184
    6. 'u' → logprob: -10.455199241638184
    7. 'ul' → logprob: -10.705199241638184
    8. 'culaire' → logprob: -11.080199241638184
    9. '(' → logprob: -11.205199241638184
    10. 'def' → logprob: -11.455199241638184

Token 474: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.9504606825648807e-05
    2. '(' → logprob: -10.875019073486328
    3. ' (' → logprob: -14.625019073486328
    4. '(
' → logprob: -16.750019073486328
    5. 'def' → logprob: -18.125019073486328
    6. 'n' → logprob: -18.875019073486328
    7. '(nombre' → logprob: -19.250019073486328
    8. '```' → logprob: -19.750019073486328
    9. '(num' → logprob: -19.875019073486328
    10. '(N' → logprob: -20.000019073486328

Token 475: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.014689196832478046
    2. ',' → logprob: -4.389688968658447
    3. ',_' → logprob: -6.889688968658447
    4. '_,' → logprob: -6.889688968658447
    5. 'ent' → logprob: -10.139689445495605
    6. '_int' → logprob: -10.639689445495605
    7. ' ,' → logprob: -10.639689445495605
    8. '_' → logprob: -11.389689445495605
    9. ',n' → logprob: -12.139689445495605
    10. '_ENT' → logprob: -12.139689445495605

Token 476: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.0001438266917830333
    2. 'tiers' → logprob: -10.000144004821777
    3. 't' → logprob: -10.375144004821777
    4. 'ters' → logprob: -10.750144004821777
    5. 'ires' → logprob: -11.625144004821777
    6. 'ier' → logprob: -11.750144004821777
    7. '```' → logprob: -12.125144004821777
    8. 'tes' → logprob: -12.500144004821777
    9. 'ents' → logprob: -12.500144004821777
    10. '_t' → logprob: -12.750144004821777

Token 477: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002251125843031332
    2. ',k' → logprob: -9.125225067138672
    3. ',n' → logprob: -9.250225067138672
    4. ' ,' → logprob: -10.875225067138672
    5. ',
' → logprob: -14.250225067138672
    6. 'n' → logprob: -15.875225067138672
    7. ',val' → logprob: -16.125225067138672
    8. ',
' → logprob: -16.750225067138672
    9. 'k' → logprob: -16.875225067138672
    10. ' ' → logprob: -17.125225067138672

Token 478: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02975928969681263
    2. ' k' → logprob: -3.529759407043457
    3. ' ' → logprob: -12.279759407043457
    4. '   ' → logprob: -13.779759407043457
    5. '
' → logprob: -14.279759407043457
    6. '	k' → logprob: -14.654759407043457
    7. 'def' → logprob: -14.967259407043457
    8. '  ' → logprob: -15.279759407043457
    9. ' ' → logprob: -15.342259407043457
    10. '    ' → logprob: -15.529759407043457

Token 479: '_selection' (ID: 56289)
  Prédit: '_selection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_selection' → logprob: -0.0003790760529227555
    2. 'selection' → logprob: -8.750378608703613
    3. '_selected' → logprob: -9.500378608703613
    4. '_ent' → logprob: -9.875378608703613
    5. '_sel' → logprob: -10.500378608703613
    6. '_' → logprob: -10.875378608703613
    7. 'k' → logprob: -11.750378608703613
    8. '_s' → logprob: -12.125378608703613
    9. '_SELECTION' → logprob: -12.250378608703613
    10. '_k' → logprob: -12.375378608703613

Token 480: 'nes' (ID: 4382)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.05791303887963295
    2. 'nes' → logprob: -3.307913064956665
    3. 'ines' → logprob: -4.307912826538086
    4. 's' → logprob: -6.432912826538086
    5. 'ones' → logprob: -7.057912826538086
    6. 'res' → logprob: -7.307912826538086
    7. 'onnes' → logprob: -7.557912826538086
    8. '```' → logprob: -7.932912826538086
    9. 'ses' → logprob: -8.307912826538086
    10. 'és' → logprob: -8.432912826538086

Token 481: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.029806263744831085
    2. '):
' → logprob: -3.52980637550354
    3. '):
' → logprob: -10.029806137084961
    4. ')' → logprob: -11.529806137084961
    5. ' ):' → logprob: -13.654806137084961
    6. '   ' → logprob: -15.029806137084961
    7. '):

' → logprob: -15.154806137084961
    8. ' ' → logprob: -16.65480613708496
    9. ':' → logprob: -17.40480613708496
    10. 'def' → logprob: -18.15480613708496

Token 482: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035480433143675327
    2. 'if' → logprob: -5.7535481452941895
    3. 'return' → logprob: -8.003547668457031
    4. ' if' → logprob: -10.628547668457031
    5. '```' → logprob: -11.878547668457031
    6. 'factor' → logprob: -13.378547668457031
    7. 'def' → logprob: -13.753547668457031
    8. '    
' → logprob: -14.253547668457031
    9. 'fact' → logprob: -15.253547668457031
    10. ' return' → logprob: -15.253547668457031

Token 483: ' return' (ID: 622)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04647575691342354
    2. 'factor' → logprob: -3.796475648880005
    3. '   ' → logprob: -4.546475887298584
    4. 'return' (adapté à ' return') → logprob: -5.046475887298584
    5. 'numer' → logprob: -5.671475887298584
    6. ' if' → logprob: -6.546475887298584
    7. 'fact' → logprob: -7.421475887298584
    8. 'num' → logprob: -8.546475410461426
    9. '
' → logprob: -10.046475410461426
    10. ' numerator' → logprob: -10.171475410461426

Token 484: ' arrangement' (ID: 21868)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.3414905071258545
    2. 'factor' → logprob: -1.5914905071258545
    3. '(
' → logprob: -2.5914905071258545
    4. ' (' → logprob: -5.341490745544434
    5. ' factorial' → logprob: -5.466490745544434
    6. '(' → logprob: -7.091490745544434
    7. ' (
' → logprob: -7.966490745544434
    8. 'fact' → logprob: -8.466490745544434
    9. '   ' → logprob: -8.966490745544434
    10. ' factor' → logprob: -9.591490745544434

Token 485: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -3.881560041918419e-05
    2. '_mod' → logprob: -10.625039100646973
    3. '_' → logprob: -11.750039100646973
    4. 'per' → logprob: -12.125039100646973
    5. '_ent' → logprob: -15.500039100646973
    6. '_perm' → logprob: -15.500039100646973
    7. '_p' → logprob: -15.750039100646973
    8. '_par' → logprob: -16.000038146972656
    9. '_factor' → logprob: -16.875038146972656
    10. 's' → logprob: -17.000038146972656

Token 486: 'mutation' (ID: 92896)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.9298697710037231
    2. 'utation' → logprob: -1.0548697710037231
    3. '(n' → logprob: -2.0548696517944336
    4. 'od' → logprob: -2.8048696517944336
    5. '_mod' → logprob: -3.9298696517944336
    6. 'mutation' → logprob: -4.179869651794434
    7. 'odu' → logprob: -4.804869651794434
    8. 'ermut' → logprob: -4.929869651794434
    9. 'per' → logprob: -5.304869651794434
    10. 'odule' → logprob: -5.429869651794434

Token 487: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.2352385965641588e-05
    2. 'mod' → logprob: -11.500012397766113
    3. '_per' → logprob: -14.125012397766113
    4. 's' → logprob: -14.375012397766113
    5. '(n' → logprob: -14.375012397766113
    6. '[n' → logprob: -17.000011444091797
    7. '_MOD' → logprob: -17.000011444091797
    8. '
' → logprob: -17.250011444091797
    9. 'n' → logprob: -17.500011444091797
    10. '_mode' → logprob: -18.000011444091797

Token 488: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.001182607957161963
    2. 'odu' → logprob: -7.376182556152344
    3. 'culo' → logprob: -8.501182556152344
    4. 'odule' → logprob: -9.251182556152344
    5. 'ulaire' → logprob: -10.001182556152344
    6. ' modulo' → logprob: -10.001182556152344
    7. 'odo' → logprob: -10.001182556152344
    8. 'olo' → logprob: -10.126182556152344
    9. 'od' → logprob: -10.501182556152344
    10. 'Modulo' → logprob: -11.376182556152344

Token 489: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.318681188422488e-05
    2. '(' → logprob: -11.75001335144043
    3. 'n' → logprob: -12.25001335144043
    4. ' (' → logprob: -15.37501335144043
    5. '(k' → logprob: -16.12501335144043
    6. '(
' → logprob: -17.12501335144043
    7. '[n' → logprob: -17.25001335144043
    8. ',n' → logprob: -18.25001335144043
    9. '(len' → logprob: -18.37501335144043
    10. '```' → logprob: -19.12501335144043

Token 490: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.00010115911572938785
    2. 'ent' → logprob: -9.250101089477539
    3. ',' → logprob: -13.125101089477539
    4. '	ent' → logprob: -13.500101089477539
    5. ',_' → logprob: -14.375101089477539
    6. '_,' → logprob: -14.375101089477539
    7. '(ent' → logprob: -16.12510108947754
    8. '_ENT' → logprob: -16.50010108947754
    9. ''ent' → logprob: -16.62510108947754
    10. 'Ent' → logprob: -16.87510108947754

Token 491: 'iers' (ID: 11012)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1539492905139923
    2. 'iers' → logprob: -2.90394926071167
    3. 'tes' → logprob: -3.27894926071167
    4. 'ent' → logprob: -3.65394926071167
    5. 'ents' → logprob: -4.27894926071167
    6. '_t' → logprob: -6.02894926071167
    7. 'ires' → logprob: -6.15394926071167
    8. '_ent' → logprob: -6.77894926071167
    9. 'tiers' → logprob: -6.90394926071167
    10. 'ter' → logprob: -7.02894926071167

Token 492: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014189005829393864
    2. ',k' → logprob: -4.26418924331665
    3. ' ,' → logprob: -11.014188766479492
    4. ',
' → logprob: -12.014188766479492
    5. ',n' → logprob: -13.139188766479492
    6. 'k' → logprob: -14.514188766479492
    7. ' k' → logprob: -15.514188766479492
    8. '   ' → logprob: -16.389188766479492
    9. ',
' → logprob: -16.639188766479492
    10. ',

' → logprob: -17.014188766479492

Token 493: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.56102097814437e-05
    2. ' k' → logprob: -10.000045776367188
    3. '   ' → logprob: -15.750045776367188
    4. '	k' → logprob: -18.750045776367188
    5. '
' → logprob: -19.875045776367188
    6. ' ' → logprob: -20.000045776367188
    7. '  ' → logprob: -20.750045776367188
    8. '    ' → logprob: -21.750045776367188
    9. ' к' → logprob: -22.500045776367188
    10. '       ' → logprob: -22.500045776367188

Token 494: '_selection' (ID: 56289)
  Prédit: '_selection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_selection' → logprob: -5.6100132496794686e-05
    2. 'k' → logprob: -10.625056266784668
    3. 'selection' → logprob: -11.750056266784668
    4. '_k' → logprob: -11.750056266784668
    5. '_selected' → logprob: -11.750056266784668
    6. '_sel' → logprob: -12.500056266784668
    7. '_ent' → logprob: -13.500056266784668
    8. ')' → logprob: -14.000056266784668
    9. '_SELECTION' → logprob: -14.875056266784668
    10. '_' → logprob: -15.250056266784668

Token 495: 'nes' (ID: 4382)
  Prédit: 'nes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nes' → logprob: -0.3763669729232788
    2. 'ses' → logprob: -1.7513669729232788
    3. 'es' → logprob: -2.0013670921325684
    4. 'tes' → logprob: -5.876367092132568
    5. 'res' → logprob: -7.251367092132568
    6. 'ises' → logprob: -7.626367092132568
    7. 's' → logprob: -8.00136661529541
    8. 'ues' → logprob: -8.50136661529541
    9. 'zes' → logprob: -9.62636661529541
    10. 'se' → logprob: -9.87636661529541

Token 496: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.941161776310764e-05
    2. ' )' → logprob: -10.625039100646973
    3. '   ' → logprob: -11.250039100646973
    4. ')
' → logprob: -13.875039100646973
    5. ' ' → logprob: -14.875039100646973
    6. ')*' → logprob: -15.625039100646973
    7. 'def' → logprob: -15.625039100646973
    8. ',' → logprob: -15.750039100646973
    9. ')//' → logprob: -16.12504005432129
    10. '")' → logprob: -17.25004005432129

Token 497: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.07498675584793091
    2. ' *' → logprob: -2.699986696243286
    3. '   ' → logprob: -5.324986934661865
    4. 'def' → logprob: -8.949986457824707
    5. '*object' → logprob: -11.199986457824707
    6. '```' → logprob: -12.574986457824707
    7. ' ' → logprob: -12.824986457824707
    8. '#' → logprob: -12.824986457824707
    9. '  ' → logprob: -12.824986457824707
    10. '**' → logprob: -12.949986457824707

Token 498: ' calcul' (ID: 7559)
  Prédit: 'calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calcul' → logprob: -0.000810340337920934
    2. ' calcul' → logprob: -7.250810146331787
    3. '   ' → logprob: -9.500810623168945
    4. '
' → logprob: -11.125810623168945
    5. '  ' → logprob: -12.625810623168945
    6. 'cal' → logprob: -13.000810623168945
    7. '    
' → logprob: -13.750810623168945
    8. 'comput' → logprob: -14.000810623168945
    9. 'pow' → logprob: -14.625810623168945
    10. '   
' → logprob: -14.625810623168945

Token 499: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.005607473198324442
    2. 'ateur' → logprob: -5.630607604980469
    3. 'uler' → logprob: -7.005607604980469
    4. 'factor' → logprob: -8.130607604980469
    5. '_factor' → logprob: -8.380607604980469
    6. 'uer' → logprob: -8.630607604980469
    7. '   ' → logprob: -9.505607604980469
    8. 'ater' → logprob: -9.630607604980469
    9. 'aler' → logprob: -9.630607604980469
    10. 'arer' → logprob: -10.255607604980469

Token 500: '_inverse' (ID: 188797)
  Prédit: '_inverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_inverse' → logprob: -8.566264295950532e-05
    2. 'inverse' → logprob: -9.375085830688477
    3. 'Inverse' → logprob: -15.625085830688477
    4. 'er' → logprob: -16.000085830688477
    5. '.inverse' → logprob: -16.625085830688477
    6. '_reverse' → logprob: -17.250085830688477
    7. 'val' → logprob: -17.500085830688477
    8. 'aire' → logprob: -17.500085830688477
    9. '#' → logprob: -17.750085830688477
    10. '_factor' → logprob: -17.875085830688477

Token 501: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.9361264946837764e-07
    2. 'mod' → logprob: -16.875
    3. '_m' → logprob: -17.125
    4. '_' → logprob: -17.25
    5. '_MOD' → logprob: -17.375
    6. 'Mod' → logprob: -19.75
    7. '(f' → logprob: -19.875
    8. '```' → logprob: -20.0
    9. '_mode' → logprob: -20.125
    10. '_mult' → logprob: -20.125

Token 502: 'ulaire' (ID: 48584)
  Prédit: 'ulaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulaire' → logprob: -0.05350124463438988
    2. 'ul' → logprob: -3.3035011291503906
    3. 'od' → logprob: -4.678501129150391
    4. '_mod' → logprob: -6.053501129150391
    5. 'ulia' → logprob: -6.678501129150391
    6. 'culaire' → logprob: -7.053501129150391
    7. 'mod' → logprob: -7.303501129150391
    8. 'uler' → logprob: -8.55350112915039
    9. 'ular' → logprob: -8.92850112915039
    10. '(mod' → logprob: -9.55350112915039

Token 503: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -9.233804303221405e-05
    2. 'factor' → logprob: -9.625092506408691
    3. '(' → logprob: -10.625092506408691
    4. '(
' → logprob: -13.250092506408691
    5. '((' → logprob: -16.125091552734375
    6. '(com' → logprob: -18.250091552734375
    7. ' factorial' → logprob: -18.250091552734375
    8. 'f' → logprob: -18.500091552734375
    9. '_factor' → logprob: -18.625091552734375
    10. '.factor' → logprob: -18.625091552734375

Token 504: 'actor' (ID: 8428)
  Prédit: 'actor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -6.704273118884885e-07
    2. 'factor' → logprob: -15.000000953674316
    3. 'act' → logprob: -15.250000953674316
    4. 'acteur' → logprob: -18.375
    5. '_factor' → logprob: -19.375
    6. '(actor' → logprob: -19.625
    7. '(f' → logprob: -19.75
    8. '.factor' → logprob: -20.0
    9. 'inal' → logprob: -20.5
    10. 'a' → logprob: -20.625

Token 505: 'ial' (ID: 563)
  Prédit: 'ial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ial' → logprob: -0.007791517302393913
    2. 'al' → logprob: -4.882791519165039
    3. 'orial' → logprob: -9.007791519165039
    4. 'actor' → logprob: -10.632791519165039
    5. 'atorial' → logprob: -11.632791519165039
    6. '_factor' → logprob: -12.007791519165039
    7. 'factor' → logprob: -12.007791519165039
    8. 'rial' → logprob: -12.632791519165039
    9. 'aux' → logprob: -13.132791519165039
    10. 'ior' → logprob: -13.507791519165039

Token 506: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -1.9361264946837764e-07
    2. 'mod' → logprob: -16.0
    3. '[' → logprob: -17.875
    4. '_MOD' → logprob: -18.0
    5. '_' → logprob: -18.5
    6. '_table' → logprob: -18.5
    7. '```' → logprob: -18.5
    8. '[_' → logprob: -18.75
    9. '_factor' → logprob: -19.25
    10. 's' → logprob: -19.375

Token 507: '_table' (ID: 11721)
  Prédit: '_table'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_table' → logprob: -0.00043460296001285315
    2. 'table' → logprob: -8.000434875488281
    3. '_mod' → logprob: -9.375434875488281
    4. 'mod' → logprob: -11.875434875488281
    5. 'able' → logprob: -13.250434875488281
    6. 'e' → logprob: -13.750434875488281
    7. 'etable' → logprob: -13.750434875488281
    8. 'Table' → logprob: -14.000434875488281
    9. '[k' → logprob: -14.500434875488281
    10. 'k' → logprob: -15.000434875488281

Token 508: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -14.875
    3. 'k' → logprob: -17.125
    4. '[
' → logprob: -18.75
    5. '   ' → logprob: -19.25
    6. ' [' → logprob: -19.875
    7. '(k' → logprob: -21.75
    8. '
' → logprob: -21.875
    9. '

' → logprob: -22.5
    10. '{k' → logprob: -22.5

Token 509: '_selection' (ID: 56289)
  Prédit: '_selection'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_selection' → logprob: -8.537868779967539e-06
    2. 'selection' → logprob: -11.750008583068848
    3. '_SELECTION' → logprob: -15.625008583068848
    4. '_selected' → logprob: -16.25000762939453
    5. 'Selection' → logprob: -16.50000762939453
    6. 'lection' → logprob: -17.12500762939453
    7. '_sel' → logprob: -17.25000762939453
    8. '
' → logprob: -17.50000762939453
    9. ']' → logprob: -17.50000762939453
    10. '(selection' → logprob: -17.62500762939453

Token 510: 'nes' (ID: 4382)
  Prédit: 'ses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ses' → logprob: -0.4149256646633148
    2. 'nes' → logprob: -1.5399256944656372
    3. 'es' → logprob: -2.1649255752563477
    4. 's' → logprob: -5.664925575256348
    5. 'tes' → logprob: -6.539925575256348
    6. 'res' → logprob: -6.789925575256348
    7. 'zes' → logprob: -6.789925575256348
    8. '_index' → logprob: -7.414925575256348
    9. 'sel' → logprob: -7.414925575256348
    10. 'ges' → logprob: -7.664925575256348

Token 511: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00014442270912695676
    2. ')' → logprob: -9.125144004821777
    3. ']' → logprob: -11.250144004821777
    4. ' ])' → logprob: -11.250144004821777
    5. '])
' → logprob: -11.750144004821777
    6. '   ' → logprob: -14.125144004821777
    7. ')]' → logprob: -15.500144004821777
    8. '])
' → logprob: -15.500144004821777
    9. ' )' → logprob: -16.250144958496094
    10. ' ' → logprob: -16.500144958496094

Token 512: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.012723661959171295
    2. '%' → logprob: -4.387723445892334
    3. ')' → logprob: -8.762723922729492
    4. ' ' → logprob: -11.262723922729492
    5. ')%' → logprob: -11.262723922729492
    6. ' ' → logprob: -11.887723922729492
    7. ' %=' → logprob: -12.012723922729492
    8. ' %
' → logprob: -12.387723922729492
    9. '<|end|>' → logprob: -12.387723922729492
    10. '   ' → logprob: -12.762723922729492

Token 513: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.3133258521556854
    2. ' MOD' → logprob: -1.3133258819580078
    3. '_MOD' → logprob: -9.688325881958008
    4. ' ' → logprob: -14.313325881958008
    5. ' ' → logprob: -14.313325881958008
    6. '.MOD' → logprob: -14.688325881958008
    7. 'MO' → logprob: -15.563325881958008
    8. '_' → logprob: -16.313325881958008
    9. '_mod' → logprob: -16.938325881958008
    10. '   ' → logprob: -17.063325881958008

Token 514: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -9.77022064034827e-05
    2. 'O' → logprob: -9.375097274780273
    3. 'ULE' → logprob: -11.625097274780273
    4. 'UL' → logprob: -13.125097274780273
    5. 'U' → logprob: -14.125097274780273
    6. 'OU' → logprob: -14.625097274780273
    7. 'ULAR' → logprob: -15.875097274780273
    8. 'ulo' → logprob: -16.750097274780273
    9. 'L' → logprob: -16.750097274780273
    10. 'MOD' → logprob: -17.000097274780273

Token 515: '_CONSTANT' (ID: 115083)
  Prédit: '_CONSTANT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONSTANT' → logprob: -6.988221684878226e-06
    2. '_CONST' → logprob: -12.000006675720215
    3. '_CON' → logprob: -15.250006675720215
    4. '_constant' → logprob: -15.250006675720215
    5. 'CON' → logprob: -16.37500762939453
    6. '```' → logprob: -17.12500762939453
    7. '_MOD' → logprob: -17.25000762939453
    8. '\' → logprob: -17.37500762939453
    9. '
' → logprob: -17.62500762939453
    10. 'Constant' → logprob: -17.75000762939453

Token 516: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 517: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017424124525859952
    2. '<|end|>' → logprob: -6.876742362976074
    3. '#' → logprob: -7.376742362976074
    4. '```' → logprob: -10.001742362976074
    5. '
' → logprob: -10.751742362976074
    6. '\' → logprob: -11.876742362976074
    7. ' def' → logprob: -13.251742362976074
    8. '<|end|>' → logprob: -13.501742362976074
    9. ')' → logprob: -13.751742362976074
    10. '(' → logprob: -14.626742362976074

Token 518: ' Lecture' (ID: 106534)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -8.888114098226652e-05
    2. '#' → logprob: -9.375088691711426
    3. '```' → logprob: -13.000088691711426
    4. 'import' → logprob: -14.375088691711426
    5. '<|end|>' → logprob: -14.500088691711426
    6. 'from' → logprob: -15.250088691711426
    7. 'class' → logprob: -15.500088691711426
    8. ' def' → logprob: -15.875088691711426
    9. '...' → logprob: -18.000089645385742
    10. '<|end|>' → logprob: -18.000089645385742

Token 519: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8181837797164917
    2. 'nombre' → logprob: -0.9431837797164917
    3. '()' → logprob: -2.9431838989257812
    4. 'def' → logprob: -3.8181838989257812
    5. 'ent' → logprob: -4.193183898925781
    6. '(n' → logprob: -4.318183898925781
    7. 'des' → logprob: -4.818183898925781
    8. '(' → logprob: -5.068183898925781
    9. 'nb' → logprob: -5.193183898925781
    10. '_nombre' → logprob: -5.443183898925781

Token 520: ' la' (ID: 557)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.31511589884757996
    2. 'nombre' → logprob: -1.6901159286499023
    3. 'la' → logprob: -3.1901159286499023
    4. '(n' → logprob: -3.6901159286499023
    5. 'l' → logprob: -5.190115928649902
    6. 't' → logprob: -5.815115928649902
    7. '1' → logprob: -6.315115928649902
    8. 'nb' → logprob: -6.565115928649902
    9. '()' → logprob: -6.815115928649902
    10. '(nombre' → logprob: -6.940115928649902

Token 521: ' sais' (ID: 30010)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.6371492743492126
    2. 'def' → logprob: -1.5121493339538574
    3. 'n' → logprob: -1.6371493339538574
    4. '#' → logprob: -4.012149333953857
    5. 'ligne' → logprob: -4.012149333953857
    6. 'nb' → logprob: -5.762149333953857
    7. 't' → logprob: -6.012149333953857
    8. 'val' → logprob: -6.137149333953857
    9. 'prem' → logprob: -6.262149333953857
    10. 'tail' → logprob: -6.262149333953857

Token 522: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.0013574945041909814
    2. 'sie' → logprob: -7.751357555389404
    3. 'le' → logprob: -8.126357078552246
    4. 'e' → logprob: -8.376357078552246
    5. 'ies' → logprob: -8.501357078552246
    6. 'lie' → logprob: -9.001357078552246
    7. ' ie' → logprob: -10.251357078552246
    8. 'rie' → logprob: -11.251357078552246
    9. 'i' → logprob: -12.001357078552246
    10. '#' → logprob: -12.876357078552246

Token 523: ' standard' (ID: 7024)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.6189995408058167
    2. 'n' → logprob: -0.8689995408058167
    3. '(n' → logprob: -4.118999481201172
    4. 't' → logprob: -4.493999481201172
    5. 'nb' → logprob: -4.743999481201172
    6. 'N' → logprob: -6.743999481201172
    7. 'def' → logprob: -6.868999481201172
    8. 'num' → logprob: -7.118999481201172
    9. 'ent' → logprob: -7.368999481201172
    10. 'T' → logprob: -7.493999481201172

Token 524: ' ' (ID: 5310)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25725993514060974
    2. 'nombre' → logprob: -1.6322599649429321
    3. '(n' → logprob: -5.007259845733643
    4. 't' → logprob: -5.007259845733643
    5. 'nb' → logprob: -5.257259845733643
    6. 'ent' → logprob: -5.382259845733643
    7. 'input' → logprob: -5.507259845733643
    8. 'def' → logprob: -6.632259845733643
    9. 'N' → logprob: -7.507259845733643
    10. 'num' → logprob: -7.632259845733643

Token 525: ':' (ID: 25)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1799461841583252
    2. 'nombre' → logprob: -1.9299461841583252
    3. 'def' → logprob: -5.429945945739746
    4. 'ent' → logprob: -5.429945945739746
    5. '(n' → logprob: -5.554945945739746
    6. 'nb' → logprob: -5.929945945739746
    7. 't' → logprob: -6.679945945739746
    8. 'input' → logprob: -6.804945945739746
    9. 'N' → logprob: -8.054945945739746
    10. 'ligne' → logprob: -8.179945945739746

Token 526: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15551744401454926
    2. 'nombre' → logprob: -2.155517339706421
    3. 't' → logprob: -4.030517578125
    4. 'nb' → logprob: -5.780517578125
    5. 'ent' → logprob: -6.030517578125
    6. 'N' → logprob: -6.030517578125
    7. 'T' → logprob: -7.155517578125
    8. 'def' → logprob: -7.405517578125
    9. '(n' → logprob: -8.280517578125
    10. 'val' → logprob: -8.280517578125

Token 527: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4071126878261566
    2. ' =' → logprob: -1.532112717628479
    3. '=' → logprob: -2.1571125984191895
    4. 'nombre' → logprob: -6.6571125984191895
    5. '_n' → logprob: -8.032113075256348
    6. '=n' → logprob: -8.032113075256348
    7. '=
' → logprob: -8.407113075256348
    8. '_nombre' → logprob: -9.157113075256348
    9. '```' → logprob: -9.407113075256348
    10. '
' → logprob: -9.532113075256348

Token 528: ' nombre' (ID: 9733)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03821040317416191
    2. 'n' → logprob: -3.288210391998291
    3. ' int' → logprob: -8.91321086883545
    4. ' n' → logprob: -10.78821086883545
    5. '=int' → logprob: -11.91321086883545
    6. '[int' → logprob: -12.78821086883545
    7. 'l' → logprob: -13.41321086883545
    8. '(int' → logprob: -13.66321086883545
    9. '1' → logprob: -15.53821086883545
    10. 'read' → logprob: -15.78821086883545

Token 529: ' d' (ID: 272)
  Prédit: '_ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.9640522599220276
    2. '_de' → logprob: -1.3390522003173828
    3. ' =' → logprob: -2.089052200317383
    4. '_des' → logprob: -2.464052200317383
    5. '_n' → logprob: -3.589052200317383
    6. '_elements' → logprob: -3.839052200317383
    7. '_' → logprob: -3.964052200317383
    8. '=' → logprob: -4.589052200317383
    9. ',' → logprob: -4.589052200317383
    10. 'de' → logprob: -4.714052200317383

Token 530: ''' (ID: 6)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7116841673851013
    2. '_ent' → logprob: -0.8366841673851013
    3. 'élé' → logprob: -3.586684226989746
    4. 'l' → logprob: -4.461684226989746
    5. '_elements' → logprob: -4.961684226989746
    6. '_l' → logprob: -5.336684226989746
    7. '_s' → logprob: -5.836684226989746
    8. 's' → logprob: -5.836684226989746
    9. 'ombres' → logprob: -5.961684226989746
    10. '_' → logprob: -6.086684226989746

Token 531: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.21792447566986084
    2. 'ent' → logprob: -2.4679245948791504
    3. 'obj' → logprob: -3.0929245948791504
    4. 'elements' → logprob: -3.7179245948791504
    5. 'él' → logprob: -4.34292459487915
    6. 'é' → logprob: -5.34292459487915
    7. 'ét' → logprob: -5.59292459487915
    8. 'ele' → logprob: -6.21792459487915
    9. 'el' → logprob: -6.59292459487915
    10. 'element' → logprob: -6.71792459487915

Token 532: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -1.1937037706375122
    2. 'ements' → logprob: -1.4437037706375122
    3. 'ents' → logprob: -2.0687036514282227
    4. 'lements' → logprob: -2.0687036514282227
    5. 'éments' → logprob: -3.0687036514282227
    6. 'iments' → logprob: -3.8187036514282227
    7. 'iers' → logprob: -3.9437036514282227
    8. 't' → logprob: -4.068703651428223
    9. 'ent' → logprob: -4.068703651428223
    10. 'ités' → logprob: -4.443703651428223

Token 533: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0004388942907098681
    2. '
' → logprob: -7.875438690185547
    3. 'nombre' → logprob: -10.375438690185547
    4. ' n' → logprob: -11.750438690185547
    5. '(n' → logprob: -12.500438690185547
    6. ' =' → logprob: -12.625438690185547
    7. '```' → logprob: -12.750438690185547
    8. ',n' → logprob: -13.375438690185547
    9. ',
' → logprob: -13.500438690185547
    10. ',' → logprob: -13.500438690185547

Token 534: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.42540082335472107
    2. 'q' → logprob: -1.6754008531570435
    3. 'm' → logprob: -2.050400733947754
    4. 'a' → logprob: -4.800400733947754
    5. 'n' → logprob: -5.050400733947754
    6. 'val' → logprob: -5.675400733947754
    7. 't' → logprob: -5.925400733947754
    8. 'p' → logprob: -6.175400733947754
    9. 'nombre' → logprob: -6.925400733947754
    10. 'liste' → logprob: -6.925400733947754

Token 535: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5174583792686462
    2. '=' → logprob: -1.017458438873291
    3. ' =' → logprob: -3.267458438873291
    4. 'n' → logprob: -6.142458438873291
    5. ',n' → logprob: -6.267458438873291
    6. '=n' → logprob: -9.142457962036133
    7. '_n' → logprob: -9.517457962036133
    8. '=int' → logprob: -10.517457962036133
    9. ',k' → logprob: -11.142457962036133
    10. 's' → logprob: -11.892457962036133

Token 536: ' nombre' (ID: 9733)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.05357751622796059
    2. 'l' → logprob: -3.553577423095703
    3. ' k' → logprob: -4.178577423095703
    4. 'n' → logprob: -5.553577423095703
    5. 'int' → logprob: -6.803577423095703
    6. 'nombre' → logprob: -7.053577423095703
    7. ',k' → logprob: -7.928577423095703
    8. ',' → logprob: -8.053577423095703
    9. '2' → logprob: -8.553577423095703
    10. ' n' → logprob: -8.678577423095703

Token 537: ' maximum' (ID: 10562)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11928389966487885
    2. ' =' → logprob: -2.61928391456604
    3. ',' → logprob: -3.74428391456604
    4. '_' → logprob: -5.494283676147461
    5. '_elements' → logprob: -6.119283676147461
    6. '_des' → logprob: -6.369283676147461
    7. '_de' → logprob: -6.494283676147461
    8. '_ent' → logprob: -6.494283676147461
    9. 'de' → logprob: -6.744283676147461
    10. '_d' → logprob: -7.369283676147461

Token 538: ' autor' (ID: 13432)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6699865460395813
    2. ' =' → logprob: -0.7949865460395813
    3. ',' → logprob: -3.6699864864349365
    4. 'n' → logprob: -5.419986724853516
    5. '_n' → logprob: -6.169986724853516
    6. '_elements' → logprob: -7.294986724853516
    7. '_ent' → logprob: -7.419986724853516
    8. ',n' → logprob: -7.419986724853516
    9. '(n' → logprob: -7.544986724853516
    10. '=n' → logprob: -8.044986724853516

Token 539: 'isé' (ID: 30065)
  Prédit: 'érés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'érés' → logprob: -0.09055563807487488
    2. 'ités' → logprob: -2.7155556678771973
    3. 'isés' → logprob: -5.090555667877197
    4. 'éré' → logprob: -6.090555667877197
    5. 'ité' → logprob: -6.215555667877197
    6. 'ifiés' → logprob: -6.965555667877197
    7. 'im' → logprob: -6.965555667877197
    8. 'aires' → logprob: -7.465555667877197
    9. 'étés' → logprob: -7.465555667877197
    10. 'ires' → logprob: -7.465555667877197

Token 540: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009365935111418366
    2. ',' → logprob: -7.250936508178711
    3. ',n' → logprob: -8.875936508178711
    4. '
' → logprob: -10.125936508178711
    5. ' n' → logprob: -10.500936508178711
    6. '(n' → logprob: -12.000936508178711
    7. '

' → logprob: -12.500936508178711
    8. '=' → logprob: -12.875936508178711
    9. '=n' → logprob: -13.250936508178711
    10. '_n' → logprob: -13.375936508178711

Token 541: 'nombre' (ID: 28576)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00012737659562844783
    2. '(n' → logprob: -9.125127792358398
    3. ' n' → logprob: -11.375127792358398
    4. '
' → logprob: -13.000127792358398
    5. ',n' → logprob: -13.750127792358398
    6. '```' → logprob: -14.000127792358398
    7. 'ligne' → logprob: -14.125127792358398
    8. '(
' → logprob: -14.875127792358398
    9. '

' → logprob: -14.875127792358398
    10. '[n' → logprob: -15.375127792358398

Token 542: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.14514628052711487
    2. '_' → logprob: -2.770146369934082
    3. '_n' → logprob: -3.645146369934082
    4. ',' → logprob: -4.270146369934082
    5. '_d' → logprob: -4.520146369934082
    6. '_ent' → logprob: -4.645146369934082
    7. '_des' → logprob: -5.895146369934082
    8. '_de' → logprob: -6.145146369934082
    9. '_,' → logprob: -6.770146369934082
    10. '_l' → logprob: -6.895146369934082

Token 543: '_total' (ID: 23814)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -9.925185440806672e-05
    2. ',n' → logprob: -9.375099182128906
    3. ',k' → logprob: -11.250099182128906
    4. ' ,' → logprob: -14.375099182128906
    5. ',int' → logprob: -15.500099182128906
    6. ',num' → logprob: -15.875099182128906
    7. '=' → logprob: -16.000099182128906
    8. ',j' → logprob: -16.750099182128906
    9. ' =' → logprob: -16.875099182128906
    10. ',l' → logprob: -17.625099182128906

Token 544: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011415231710998341
    2. ',n' → logprob: -9.125114440917969
    3. ' ,' → logprob: -12.625114440917969
    4. ' =' → logprob: -14.125114440917969
    5. ',k' → logprob: -14.250114440917969
    6. '=' → logprob: -15.250114440917969
    7. ',num' → logprob: -17.00011444091797
    8. ',int' → logprob: -17.00011444091797
    9. ',
' → logprob: -17.50011444091797
    10. 'nombre' → logprob: -17.50011444091797

Token 545: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.09225133061408997
    2. ' nombre' → logprob: -2.4672513008117676
    3. 'k' → logprob: -6.217251300811768
    4. 'max' → logprob: -7.717251300811768
    5. ' k' → logprob: -8.092251777648926
    6. 'maximum' → logprob: -8.467251777648926
    7. 'val' → logprob: -9.467251777648926
    8. ' max' → logprob: -9.717251777648926
    9. ' maximum' → logprob: -9.967251777648926
    10. 'n' → logprob: -10.092251777648926

Token 546: '_max' (ID: 13731)
  Prédit: '_elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.6242977976799011
    2. '_selection' → logprob: -1.499297857284546
    3. '_max' → logprob: -1.499297857284546
    4. '_se' → logprob: -4.999297618865967
    5. '_k' → logprob: -6.499297618865967
    6. '_' → logprob: -6.749297618865967
    7. '_lim' → logprob: -6.874297618865967
    8. '_de' → logprob: -7.124297618865967
    9. '_aut' → logprob: -7.124297618865967
    10. '_val' → logprob: -7.749297618865967

Token 547: 'imum' (ID: 4556)
  Prédit: '_aut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_aut' → logprob: -0.5045164227485657
    2. '_elements' → logprob: -1.879516363143921
    3. '_selection' → logprob: -2.004516363143921
    4. '_allowed' → logprob: -3.629516363143921
    5. '_' → logprob: -3.754516363143921
    6. 'imum' → logprob: -3.754516363143921
    7. '_se' → logprob: -4.6295166015625
    8. '_author' → logprob: -5.3795166015625
    9. 'autor' → logprob: -5.5045166015625
    10. '_per' → logprob: -5.7545166015625

Token 548: '_aut' (ID: 73515)
  Prédit: '_selection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_selection' → logprob: -0.9490154981613159
    2. '_aut' → logprob: -0.9490154981613159
    3. '_elements' → logprob: -1.699015498161316
    4. 'autor' → logprob: -3.9490156173706055
    5. '_se' → logprob: -5.0740156173706055
    6. '_' → logprob: -5.3240156173706055
    7. '_author' → logprob: -6.0740156173706055
    8. '_max' → logprob: -6.1990156173706055
    9. '_per' → logprob: -6.8240156173706055
    10. 'elements' → logprob: -6.9490156173706055

Token 549: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.0005355171160772443
    2. 'oris' → logprob: -8.12553596496582
    3. 'hor' → logprob: -9.00053596496582
    4. '_' → logprob: -9.75053596496582
    5. 'orique' → logprob: -10.87553596496582
    6. '```' → logprob: -11.12553596496582
    7. '_h' → logprob: -12.25053596496582
    8. '_or' → logprob: -12.62553596496582
    9. '>' → logprob: -12.75053596496582
    10. '[' → logprob: -13.12553596496582

Token 550: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.020719386637210846
    2. 'isé' → logprob: -3.895719289779663
    3. '```' → logprob: -10.145719528198242
    4. 'is' → logprob: -10.395719528198242
    5. 'isee' → logprob: -10.520719528198242
    6. 'import' → logprob: -11.020719528198242
    7. 'ised' → logprob: -11.020719528198242
    8. 'isable' → logprob: -11.645719528198242
    9. '   ' → logprob: -12.145719528198242
    10. '=' → logprob: -12.145719528198242

Token 551: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06993865221738815
    2. ' =' → logprob: -2.6949386596679688
    3. ',' → logprob: -14.694938659667969
    4. ' ' → logprob: -14.819938659667969
    5. ')' → logprob: -15.069938659667969
    6. ')=' → logprob: -15.194938659667969
    7. 's' → logprob: -15.319938659667969
    8. '=input' → logprob: -15.944938659667969
    9. '=int' → logprob: -16.06993865966797
    10. '_=' → logprob: -16.44493865966797

Token 552: ' lire' (ID: 46082)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1725725382566452
    2. 'map' → logprob: -1.9225724935531616
    3. ' map' → logprob: -4.547572612762451
    4. ' lire' → logprob: -6.422572612762451
    5. 'list' → logprob: -10.672572135925293
    6. 'Lire' → logprob: -11.422572135925293
    7. 'liste' → logprob: -11.422572135925293
    8. ' l' → logprob: -12.672572135925293
    9. 'read' → logprob: -13.547572135925293
    10. 'tuple' → logprob: -13.797572135925293

Token 553: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -4.320199877838604e-07
    2. 'liste' → logprob: -15.0
    3. 'l' → logprob: -16.5
    4. '_n' → logprob: -17.875
    5. '-l' → logprob: -18.25
    6. '_list' → logprob: -19.125
    7. '_' → logprob: -19.375
    8. '_t' → logprob: -19.75
    9. 'Liste' → logprob: -20.25
    10. '_ent' → logprob: -20.375

Token 554: 'iste' (ID: 4872)
  Prédit: 'iste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iste' → logprob: -5.264322317088954e-05
    2. 'igne' → logprob: -11.125052452087402
    3. 'liste' → logprob: -11.625052452087402
    4. '[' → logprob: -11.875052452087402
    5. 'ste' → logprob: -12.250052452087402
    6. 'site' → logprob: -12.375052452087402
    7. 'a' → logprob: -13.125052452087402
    8. '#' → logprob: -13.500052452087402
    9. 'istes' → logprob: -13.750052452087402
    10. '(' → logprob: -13.750052452087402

Token 555: '_ent' (ID: 66249)
  Prédit: '_ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ent' → logprob: -0.00861669983714819
    2. 'ent' → logprob: -4.758616924285889
    3. '_l' → logprob: -13.75861644744873
    4. '(ent' → logprob: -14.63361644744873
    5. '	ent' → logprob: -14.75861644744873
    6. '_int' → logprob: -16.883617401123047
    7. ''ent' → logprob: -16.883617401123047
    8. 'ents' → logprob: -16.883617401123047
    9. 'Ent' → logprob: -17.133617401123047
    10. '.ent' → logprob: -17.258617401123047

Token 556: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -6.988221684878226e-06
    2. 'ters' → logprob: -12.750006675720215
    3. 'tiers' → logprob: -13.000006675720215
    4. 'ers' → logprob: -14.250006675720215
    5. 'ier' → logprob: -14.625006675720215
    6. 't' → logprob: -15.500006675720215
    7. 'ieres' → logprob: -16.12500762939453
    8. 'tes' → logprob: -16.62500762939453
    9. 'gers' → logprob: -17.00000762939453
    10. '```' → logprob: -17.00000762939453

Token 557: '_dep' (ID: 124838)
  Prédit: '_dep'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dep' → logprob: -0.018177567049860954
    2. 'dep' → logprob: -4.018177509307861
    3. '()' → logprob: -11.89317798614502
    4. '_depend' → logprob: -12.01817798614502
    5. '_de' → logprob: -12.14317798614502
    6. '_d' → logprob: -13.51817798614502
    7. '_' → logprob: -13.51817798614502
    8. '_from' → logprob: -13.76817798614502
    9. '```' → logprob: -14.01817798614502
    10. '(dep' → logprob: -14.14317798614502

Token 558: 'uis' (ID: 4560)
  Prédit: 'uis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uis' → logprob: -3.7146746763028204e-05
    2. 'u' → logprob: -10.37503719329834
    3. 'ois' → logprob: -13.12503719329834
    4. 'is' → logprob: -13.75003719329834
    5. 'ui' → logprob: -14.00003719329834
    6. 'us' → logprob: -14.12503719329834
    7. '
' → logprob: -15.00003719329834
    8. '...' → logprob: -15.62503719329834
    9. '```' → logprob: -15.87503719329834
    10. 'ais' → logprob: -16.500036239624023

Token 559: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.012528955936431885
    2. 'ligne' → logprob: -4.387528896331787
    3. 'l' → logprob: -11.887529373168945
    4. 'une' → logprob: -12.762529373168945
    5. '_' → logprob: -13.012529373168945
    6. ' ligne' → logprob: -13.137529373168945
    7. 'chaine' → logprob: -13.387529373168945
    8. '```' → logprob: -13.887529373168945
    9. '__' → logprob: -15.012529373168945
    10. '
' → logprob: -15.512529373168945

Token 560: 'igne' (ID: 24120)
  Prédit: 'igne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igne' → logprob: -6.492120155598968e-05
    2. 'gne' → logprob: -11.000064849853516
    3. 'ine' → logprob: -11.750064849853516
    4. 'ligne' → logprob: -11.875064849853516
    5. 'a' → logprob: -12.000064849853516
    6. 'ignes' → logprob: -12.000064849853516
    7. 'ig' → logprob: -12.625064849853516
    8. 'ignee' → logprob: -12.875064849853516
    9. '
' → logprob: -13.250064849853516
    10. 'iste' → logprob: -13.250064849853516

Token 561: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.2113979209971149e-05
    2. '()
' → logprob: -11.625012397766113
    3. '(' → logprob: -13.500012397766113
    4. ' ()' → logprob: -14.000012397766113
    5. '();' → logprob: -15.000012397766113
    6. '()

' → logprob: -15.500012397766113
    7. '()]' → logprob: -15.750012397766113
    8. '())' → logprob: -16.875011444091797
    9. '()`' → logprob: -16.875011444091797
    10. '()\' → logprob: -16.875011444091797

Token 562: '#' (ID: 2)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.2289910465478897
    2. 'val' → logprob: -2.7289910316467285
    3. 'nombre' → logprob: -2.8539910316467285
    4. 'liste' → logprob: -2.8539910316467285
    5. 'element' → logprob: -5.3539910316467285
    6. 'ent' → logprob: -5.3539910316467285
    7. 'élé' → logprob: -5.4789910316467285
    8. 'don' → logprob: -6.2289910316467285
    9. 'table' → logprob: -6.6039910316467285
    10. 'positions' → logprob: -6.9789910316467285

Token 563: ' Cas' (ID: 8066)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.5071091651916504
    2. 'val' → logprob: -1.7571091651916504
    3. 'def' → logprob: -2.5071091651916504
    4. '#' → logprob: -3.2571091651916504
    5. 'nombre' → logprob: -3.6321091651916504
    6. 'ent' → logprob: -3.7571091651916504
    7. 'liste' → logprob: -4.25710916519165
    8. 'if' → logprob: -4.50710916519165
    9. 'n' → logprob: -4.63210916519165
    10. 'element' → logprob: -5.63210916519165

Token 564: ' particulier' (ID: 47842)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6549326777458191
    2. 's' → logprob: -1.2799327373504639
    3. ' where' → logprob: -2.779932737350464
    4. ' if' → logprob: -3.904932737350464
    5. '_' → logprob: -3.904932737350464
    6. 'où' → logprob: -3.904932737350464
    7. 'where' → logprob: -4.029932498931885
    8. 'part' → logprob: -4.779932498931885
    9. 'special' → logprob: -5.029932498931885
    10. '_special' → logprob: -5.279932498931885

Token 565: ' ' (ID: 5310)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00403043394908309
    2. ':' → logprob: -5.754030227661133
    3. ' if' → logprob: -7.129030227661133
    4. '```' → logprob: -11.504030227661133
    5. 'nombre' → logprob: -11.629030227661133
    6. 's' → logprob: -11.629030227661133
    7. 'for' → logprob: -11.879030227661133
    8. 'si' → logprob: -12.879030227661133
    9. ':
' → logprob: -13.254030227661133
    10. '_if' → logprob: -13.254030227661133

Token 566: ':' (ID: 25)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0020612843800336123
    2. ':' → logprob: -6.377061367034912
    3. ' if' → logprob: -8.002060890197754
    4. 'for' → logprob: -12.502060890197754
    5. '```' → logprob: -12.502060890197754
    6. '
' → logprob: -12.752060890197754
    7. 'nombre' → logprob: -12.877060890197754
    8. ':
' → logprob: -13.002060890197754
    9. 's' → logprob: -13.377060890197754
    10. 'si' → logprob: -13.627060890197754

Token 567: ' si' (ID: 1784)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.774276774493046e-05
    2. '```' → logprob: -10.500038146972656
    3. ' if' → logprob: -11.750038146972656
    4. '
' → logprob: -13.125038146972656
    5. 'result' → logprob: -16.000038146972656
    6. 'print' → logprob: -17.000038146972656
    7. '``' → logprob: -17.375038146972656
    8. '#' → logprob: -17.750038146972656
    9. 'for' → logprob: -17.875038146972656
    10. 'If' → logprob: -18.250038146972656

Token 568: ' k' (ID: 372)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.1269315630197525
    2. ' nombre' → logprob: -2.126931667327881
    3. 'n' → logprob: -13.251931190490723
    4. '(nombre' → logprob: -13.751931190490723
    5. 'k' → logprob: -15.501931190490723
    6. 'not' → logprob: -16.00193214416504
    7. '0' → logprob: -16.50193214416504
    8. 'Nombre' → logprob: -16.62693214416504
    9. 'number' → logprob: -16.75193214416504
    10. ' ' → logprob: -17.12693214416504

Token 569: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22880150377750397
    2. ' ==' → logprob: -1.6038014888763428
    3. '>=' → logprob: -6.228801727294922
    4. '=' → logprob: -7.478801727294922
    5. ' >=' → logprob: -7.478801727294922
    6. '>' → logprob: -8.728801727294922
    7. '<=' → logprob: -10.478801727294922
    8. ' >' → logprob: -10.728801727294922
    9. '0' → logprob: -10.853801727294922
    10. '```' → logprob: -11.728801727294922

Token 570: ' n' (ID: 297)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -2.522638169466518e-05
    2. ' nombre' → logprob: -10.625024795532227
    3. 'n' → logprob: -14.000024795532227
    4. '(nombre' → logprob: -17.875024795532227
    5. '=' → logprob: -18.250024795532227
    6. 'Nombre' → logprob: -18.750024795532227
    7. '```' → logprob: -19.375024795532227
    8. '_nombre' → logprob: -19.500024795532227
    9. 'nom' → logprob: -20.000024795532227
    10. 'nome' → logprob: -20.625024795532227

Token 571: '-' (ID: 12)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004254219587892294
    2. ':
' → logprob: -5.504254341125488
    3. ' or' → logprob: -9.629254341125488
    4. 'nombre' → logprob: -10.129254341125488
    5. ' and' → logprob: -10.879254341125488
    6. 'or' → logprob: -11.129254341125488
    7. ':
' → logprob: -11.754254341125488
    8. ' :' → logprob: -11.754254341125488
    9. 'and' → logprob: -12.004254341125488
    10. ':return' → logprob: -12.754254341125488

Token 572: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011105302110081539
    2. ' ' → logprob: -9.125110626220703
    3. '
' → logprob: -14.000110626220703
    4. ',' → logprob: -15.625110626220703
    5. 'nombre' → logprob: -15.875110626220703
    6. '   ' → logprob: -16.000110626220703
    7. '2' → logprob: -16.125110626220703
    8. '0' → logprob: -16.250110626220703
    9. 'total' → logprob: -16.250110626220703
    10. '```' → logprob: -16.625110626220703

Token 573: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.032731812447309494
    2. ':
' → logprob: -3.907731771469116
    3. ' and' → logprob: -4.532732009887695
    4. ' or' → logprob: -7.532732009887695
    5. 'if' → logprob: -7.907732009887695
    6. 'and' → logprob: -8.032732009887695
    7. ' :' → logprob: -10.157732009887695
    8. ' if' → logprob: -10.282732009887695
    9. 'or' → logprob: -10.407732009887695
    10. ',' → logprob: -11.657732009887695

Token 574: ' alors' (ID: 17971)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00286300852894783
    2. '   ' → logprob: -6.127862930297852
    3. '
' → logprob: -8.252862930297852
    4. ' print' → logprob: -8.377862930297852
    5. 'result' → logprob: -8.752862930297852
    6. '#' → logprob: -11.502862930297852
    7. '    
' → logprob: -11.627862930297852
    8. '

' → logprob: -12.877862930297852
    9. '
' → logprob: -13.252862930297852
    10. '```' → logprob: -13.627862930297852

Token 575: ' le' (ID: 505)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006382806692272425
    2. '   ' → logprob: -5.256382942199707
    3. ' print' → logprob: -6.881382942199707
    4. '
' → logprob: -9.756382942199707
    5. 'result' → logprob: -10.006382942199707
    6. '#' → logprob: -12.506382942199707
    7. '    
' → logprob: -12.631382942199707
    8. '  ' → logprob: -13.381382942199707
    9. '
' → logprob: -13.381382942199707
    10. '

' → logprob: -13.506382942199707

Token 576: ' résultat' (ID: 62556)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006644918117672205
    2. 'result' → logprob: -5.1316447257995605
    3. '#' → logprob: -7.5066447257995605
    4. 'rés' → logprob: -9.506645202636719
    5. 'nombre' → logprob: -10.006645202636719
    6. 'res' → logprob: -10.881645202636719
    7. 'prin' → logprob: -12.256645202636719
    8. 'r' → logprob: -12.381645202636719
    9. '
' → logprob: -12.631645202636719
    10. 'ré' → logprob: -12.756645202636719

Token 577: ' est' (ID: 893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007019530050456524
    2. ' =' → logprob: -5.007019519805908
    3. 'print' → logprob: -8.132019996643066
    4. '=

' → logprob: -13.257019996643066
    5. '=
' → logprob: -13.382019996643066
    6. 's' → logprob: -13.382019996643066
    7. 'est' → logprob: -13.757019996643066
    8. '   ' → logprob: -14.132019996643066
    9. ' print' → logprob: -14.757019996643066
    10. 'equals' → logprob: -15.257019996643066

Token 578: ' une' (ID: 2463)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.04080178961157799
    2. '1' → logprob: -3.415801763534546
    3. 'fact' → logprob: -5.290802001953125
    4. '   ' → logprob: -7.290802001953125
    5. '0' → logprob: -7.665802001953125
    6. 'pow' → logprob: -7.915802001953125
    7. ' factorial' → logprob: -8.165802001953125
    8. ' ' → logprob: -9.290802001953125
    9. ' factor' → logprob: -9.665802001953125
    10. 'nombre' → logprob: -10.165802001953125

Token 579: ' combinaison' (ID: 165933)
  Prédit: 'factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'factor' → logprob: -0.1915970742702484
    2. 'fact' → logprob: -2.3165969848632812
    3. 'pu' → logprob: -3.3165969848632812
    4. 'pow' → logprob: -4.066596984863281
    5. '1' → logprob: -4.566596984863281
    6. '0' → logprob: -5.691596984863281
    7. 'f' → logprob: -6.941596984863281
    8. 'comb' → logprob: -7.191596984863281
    9. 'power' → logprob: -7.566596984863281
    10. 'mod' → logprob: -8.191596984863281

Token 580: ' particulière' (ID: 123511)
  Prédit: '(nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(nombre' → logprob: -1.145824909210205
    2. 'nombre' → logprob: -1.520824909210205
    3. '(
' → logprob: -1.895824909210205
    4. '(' → logprob: -2.020824909210205
    5. 'if' → logprob: -2.895824909210205
    6. 'def' → logprob: -3.395824909210205
    7. 'mod' → logprob: -3.645824909210205
    8. 'result' → logprob: -4.020824909210205
    9. '_mod' → logprob: -4.645824909210205
    10. ' =' → logprob: -4.645824909210205

Token 581: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04095959663391113
    2. ' if' → logprob: -4.290959358215332
    3. 'result' → logprob: -4.540959358215332
    4. 'print' → logprob: -4.915959358215332
    5. ':' → logprob: -5.790959358215332
    6. '(
' → logprob: -6.790959358215332
    7. 'def' → logprob: -6.915959358215332
    8. ':
' → logprob: -7.165959358215332
    9. '
' → logprob: -7.290959358215332
    10. 'nombre' → logprob: -7.290959358215332

Token 582: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.024779755622148514
    2. ':' → logprob: -4.024779796600342
    3. 'print' → logprob: -5.649779796600342
    4. 'result' → logprob: -6.774779796600342
    5. ' if' → logprob: -7.274779796600342
    6. '```' → logprob: -7.774779796600342
    7. '(
' → logprob: -8.024779319763184
    8. ':
' → logprob: -8.274779319763184
    9. '(' → logprob: -10.149779319763184
    10. '{' → logprob: -10.274779319763184

Token 583: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.16023387014865875
    2. ' nombre' → logprob: -1.9102338552474976
    3. '(nombre' → logprob: -11.660233497619629
    4. ' ' → logprob: -14.535233497619629
    5. 'number' → logprob: -15.035233497619629
    6. ' nombres' → logprob: -16.035234451293945
    7. ' ' → logprob: -16.785234451293945
    8. 'Nombre' → logprob: -17.035234451293945
    9. '   ' → logprob: -17.535234451293945
    10. 'nom' → logprob: -17.660234451293945

Token 584: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.005970865488052368
    2. 'max' → logprob: -5.2559709548950195
    3. '_elements' → logprob: -7.2559709548950195
    4. 'maximum' → logprob: -10.88097095489502
    5. 'elements' → logprob: -11.88097095489502
    6. '_' → logprob: -13.13097095489502
    7. 's' → logprob: -13.75597095489502
    8. 'd' → logprob: -14.88097095489502
    9. 'Max' → logprob: -15.38097095489502
    10. '_MAX' → logprob: -15.63097095489502

Token 585: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.0005674490821547806
    2. 'um' → logprob: -7.500567436218262
    3. 'ium' → logprob: -12.125567436218262
    4. 'er' → logprob: -12.875567436218262
    5. 'imal' → logprob: -13.875567436218262
    6. 'umber' → logprob: -14.000567436218262
    7. 'ume' → logprob: -14.125567436218262
    8. '_' → logprob: -14.125567436218262
    9. 'ument' → logprob: -15.000567436218262
    10. 'umer' → logprob: -15.000567436218262

Token 586: '_aut' (ID: 73515)
  Prédit: '_aut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_aut' → logprob: -0.0007469753036275506
    2. '_' → logprob: -8.250746726989746
    3. '>=' → logprob: -8.375746726989746
    4. '_auto' → logprob: -9.500746726989746
    5. '_author' → logprob: -10.000746726989746
    6. '_max' → logprob: -10.625746726989746
    7. ' >=' → logprob: -10.875746726989746
    8. 'aut' → logprob: -11.000746726989746
    9. '_total' → logprob: -11.000746726989746
    10. '_ent' → logprob: -11.375746726989746

Token 587: 'or' (ID: 267)
  Prédit: 'or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -3.0590548703912646e-05
    2. 'oris' → logprob: -11.250030517578125
    3. 'orique' → logprob: -11.625030517578125
    4. 'tor' → logprob: -12.875030517578125
    5. '```' → logprob: -13.250030517578125
    6. '>' → logprob: -14.125030517578125
    7. 'ror' → logprob: -14.250030517578125
    8. '_or' → logprob: -14.500030517578125
    9. '
' → logprob: -15.125030517578125
    10. 'oride' → logprob: -15.250030517578125

Token 588: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -6.52788148727268e-05
    2. '   ' → logprob: -11.125064849853516
    3. '```' → logprob: -11.625064849853516
    4. 'is' → logprob: -11.875064849853516
    5. 'isé' → logprob: -12.125064849853516
    6. '=' → logprob: -12.500064849853516
    7. 'se' → logprob: -12.875064849853516
    8. '_' → logprob: -13.000064849853516
    9. '<' → logprob: -13.125064849853516
    10. '[' → logprob: -13.250064849853516

Token 589: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5232877731323242
    2. '>=' → logprob: -0.8982877731323242
    3. '>' → logprob: -9.398287773132324
    4. ' ' → logprob: -10.648287773132324
    5. ' >' → logprob: -10.773287773132324
    6. '   ' → logprob: -11.023287773132324
    7. '==' → logprob: -11.398287773132324
    8. ' ==' → logprob: -13.023287773132324
    9. ' ' → logprob: -13.523287773132324
    10. ']>=' → logprob: -13.773287773132324

Token 590: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.0031803252641111612
    2. ' nombre' → logprob: -5.753180503845215
    3. ' ' → logprob: -13.253180503845215
    4. '(nombre' → logprob: -14.128180503845215
    5. '   ' → logprob: -16.6281795501709
    6. 'nom' → logprob: -17.1281795501709
    7. 'Nombre' → logprob: -19.0031795501709
    8. '_nombre' → logprob: -19.1281795501709
    9. 'nome' → logprob: -19.3781795501709
    10. '  ' → logprob: -19.6281795501709

Token 591: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -1.5451681974809617e-05
    2. '_' → logprob: -11.250015258789062
    3. '_ent' → logprob: -14.750015258789062
    4. 'elements' → logprob: -14.875015258789062
    5. ' _' → logprob: -15.125015258789062
    6. 'd' → logprob: -15.375015258789062
    7. '_ELEMENTS' → logprob: -15.375015258789062
    8. '\' → logprob: -15.875015258789062
    9. '_d' → logprob: -16.125015258789062
    10. 'élé' → logprob: -16.125015258789062

Token 592: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -2.868328920158092e-05
    2. 'total' → logprob: -10.500028610229492
    3. '_' → logprob: -14.250028610229492
    4. '_TOTAL' → logprob: -15.875028610229492
    5. 'otal' → logprob: -16.375028610229492
    6. '_tot' → logprob: -17.125028610229492
    7. 'Total' → logprob: -17.250028610229492
    8. ' total' → logprob: -17.750028610229492
    9. '_Total' → logprob: -17.750028610229492
    10. '```' → logprob: -17.875028610229492

Token 593: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.28119489550590515
    2. '-' → logprob: -1.4061949253082275
    3. ':' → logprob: -11.031194686889648
    4. '   ' → logprob: -11.406194686889648
    5. ' ' → logprob: -11.531194686889648
    6. ':
' → logprob: -12.656194686889648
    7. ' ' → logprob: -13.281194686889648
    8. '
' → logprob: -13.656194686889648
    9. '  ' → logprob: -15.093694686889648
    10. '```' → logprob: -15.968694686889648

Token 594: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '2' → logprob: -16.000009536743164
    4. '<|end|>' → logprob: -16.750009536743164
    5. '   ' → logprob: -17.375009536743164
    6. '  ' → logprob: -18.375009536743164
    7. '
' → logprob: -18.500009536743164
    8. '۱' → logprob: -18.812509536743164
    9. '１' → logprob: -19.125009536743164
    10. '১' → logprob: -19.125009536743164

Token 595: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.875001907348633
    3. '2' → logprob: -14.375001907348633
    4. '
' → logprob: -16.687501907348633
    5. '   ' → logprob: -17.312501907348633
    6. '۱' → logprob: -17.312501907348633
    7. '১' → logprob: -17.375001907348633
    8. '<|end|>' → logprob: -17.625001907348633
    9. '१' → logprob: -17.875001907348633
    10. '```' → logprob: -17.875001907348633

Token 596: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1603088229894638
    2. ':
' → logprob: -1.910308837890625
    3. '   ' → logprob: -9.535308837890625
    4. ' :' → logprob: -12.285308837890625
    5. ':
' → logprob: -13.035308837890625
    6. '):' → logprob: -13.410308837890625
    7. '):
' → logprob: -13.535308837890625
    8. ':return' → logprob: -13.535308837890625
    9. ' :
' → logprob: -13.910308837890625
    10. ':

' → logprob: -15.535308837890625

Token 597: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31944844126701355
    2. 'print' → logprob: -1.319448471069336
    3. ':' → logprob: -5.444448471069336
    4. ' print' → logprob: -7.069448471069336
    5. ':
' → logprob: -7.319448471069336
    6. '```' → logprob: -8.569448471069336
    7. 'result' → logprob: -9.944448471069336
    8. '	print' → logprob: -10.319448471069336
    9. '{
' → logprob: -11.194448471069336
    10. '#' → logprob: -11.319448471069336

Token 598: ' nombre' (ID: 9733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00013488641707226634
    2. 'result' → logprob: -9.250134468078613
    3. '   ' → logprob: -10.500134468078613
    4. ' print' → logprob: -12.375134468078613
    5. '
' → logprob: -12.875134468078613
    6. 'prin' → logprob: -13.750134468078613
    7. 'pr' → logprob: -14.000134468078613
    8. '```' → logprob: -14.125134468078613
    9. '    
' → logprob: -14.250134468078613
    10. '#' → logprob: -15.375134468078613

Token 599: '_' (ID: 62)
  Prédit: '_elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.22783735394477844
    2. '_result' → logprob: -2.102837324142456
    3. '_max' → logprob: -3.227837324142456
    4. '_total' → logprob: -4.102837562561035
    5. '_de' → logprob: -5.352837562561035
    6. '_comb' → logprob: -5.602837562561035
    7. 'result' → logprob: -5.977837562561035
    8. '=' → logprob: -5.977837562561035
    9. 'max' → logprob: -6.227837562561035
    10. '_' → logprob: -6.602837562561035

Token 600: 'ense' (ID: 1603)
  Prédit: 'elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elements' → logprob: -0.5213941335678101
    2. '_elements' → logprob: -1.64639413356781
    3. 'result' → logprob: -1.89639413356781
    4. 'max' → logprob: -3.6463942527770996
    5. 'total' → logprob: -4.3963942527771
    6. '_max' → logprob: -5.2713942527771
    7. '_result' → logprob: -5.5213942527771
    8. '_' → logprob: -5.7713942527771
    9. 'maximum' → logprob: -5.8963942527771
    10. 'de' → logprob: -6.1463942527771

Token 601: 'mbles' (ID: 60383)
  Prédit: 'mbles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mbles' → logprob: -0.2140553891658783
    2. 'mble' → logprob: -1.8390554189682007
    3. 'm' → logprob: -4.08905553817749
    4. 'mb' → logprob: -4.08905553817749
    5. 'mbled' → logprob: -9.589055061340332
    6. 'mbler' → logprob: -10.339055061340332
    7. 'mbly' → logprob: -10.714055061340332
    8. 'r' → logprob: -10.839055061340332
    9. 'mme' → logprob: -10.964055061340332
    10. 'ments' → logprob: -11.214055061340332

Token 602: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.27355968952178955
    2. '=' → logprob: -2.1485595703125
    3. '_total' → logprob: -2.2735595703125
    4. '_result' → logprob: -5.5235595703125
    5. '_' → logprob: -5.7735595703125
    6. '_final' → logprob: -6.5235595703125
    7. '_possible' → logprob: -6.5235595703125
    8. '_mod' → logprob: -6.6485595703125
    9. '_unique' → logprob: -6.7735595703125
    10. '_max' → logprob: -6.8985595703125

Token 603: ' combinaison' (ID: 165933)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.96501225233078
    2. 'factor' → logprob: -1.2150123119354248
    3. '1' → logprob: -1.8400123119354248
    4. 'comb' → logprob: -2.090012311935425
    5. '(' → logprob: -3.965012311935425
    6. 'fact' → logprob: -4.090012073516846
    7. '2' → logprob: -6.340012073516846
    8. 'nombre' → logprob: -7.465012073516846
    9. 'pu' → logprob: -8.090012550354004
    10. 'com' → logprob: -8.590012550354004

Token 604: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -4.127333340875339e-06
    2. 's' → logprob: -13.250003814697266
    3. 'mod' → logprob: -13.375003814697266
    4. '(nombre' → logprob: -15.500003814697266
    5. 'nombre' → logprob: -16.125003814697266
    6. '_m' → logprob: -16.125003814697266
    7. '(n' → logprob: -16.250003814697266
    8. '_MOD' → logprob: -16.500003814697266
    9. '(' → logprob: -16.750003814697266
    10. '_mode' → logprob: -17.250003814697266

Token 605: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -6.587483221665025e-05
    2. 'olo' → logprob: -9.750065803527832
    3. 'o' → logprob: -13.000065803527832
    4. 'Modulo' → logprob: -13.500065803527832
    5. ' modulo' → logprob: -13.625065803527832
    6. 'ule' → logprob: -14.375065803527832
    7. 'alo' → logprob: -14.375065803527832
    8. 'lo' → logprob: -14.625065803527832
    9. 'culo' → logprob: -14.750065803527832
    10. 'ULO' → logprob: -14.875065803527832

Token 606: '(
' (ID: 1607)
  Prédit: '(nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nombre' → logprob: -0.001044124481268227
    2. 'nombre' → logprob: -7.001044273376465
    3. '(' → logprob: -9.001044273376465
    4. '(
' → logprob: -12.626044273376465
    5. ' nombre' → logprob: -13.376044273376465
    6. '(len' → logprob: -13.626044273376465
    7. '(n' → logprob: -14.126044273376465
    8. 'Nombre' → logprob: -14.376044273376465
    9. '_nombre' → logprob: -14.626044273376465
    10. '(quantity' → logprob: -14.876044273376465

Token 607: '       ' (ID: 309)
  Prédit: '(nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(nombre' → logprob: -0.16032922267913818
    2. 'nombre' → logprob: -1.9103292226791382
    3. '(' → logprob: -9.28532886505127
    4. '(
' → logprob: -11.91032886505127
    5. ' nombre' → logprob: -12.41032886505127
    6. '   ' → logprob: -14.66032886505127
    7. '_nombre' → logprob: -15.03532886505127
    8. '(len' → logprob: -15.28532886505127
    9. 'Nombre' → logprob: -15.66032886505127
    10. 'n' → logprob: -16.035329818725586

Token 608: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' (adapté à ' nombre') → logprob: -0.02975974604487419
    2. '(nombre' → logprob: -3.529759645462036
    3. ' nombre' → logprob: -12.279759407043457
    4. '(' → logprob: -12.529759407043457
    5. 'n' → logprob: -15.529759407043457
    6. '2' → logprob: -15.779759407043457
    7. '(
' → logprob: -15.904759407043457
    8. 'Nombre' → logprob: -15.904759407043457
    9. '_nombre' → logprob: -16.029760360717773
    10. 'nom' → logprob: -16.279760360717773

Token 609: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -8.280175097752362e-05
    2. 'elements' → logprob: -9.500082969665527
    3. '_' → logprob: -12.000082969665527
    4. 'Elements' → logprob: -14.250082969665527
    5. '_ELEMENTS' → logprob: -15.000082969665527
    6. '```' → logprob: -15.625082969665527
    7. 'élé' → logprob: -15.750082969665527
    8. 'max' → logprob: -16.37508201599121
    9. 'lements' → logprob: -16.62508201599121
    10. '_max' → logprob: -16.87508201599121

Token 610: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.002476604888215661
    2. 'total' → logprob: -6.002476692199707
    3. ' total' → logprob: -14.877476692199707
    4. 'otal' → logprob: -15.627476692199707
    5. 'Total' → logprob: -15.877476692199707
    6. '_' → logprob: -16.12747573852539
    7. ',total' → logprob: -16.75247573852539
    8. 's' → logprob: -17.00247573852539
    9. '	total' → logprob: -17.12747573852539
    10. '_TOTAL' → logprob: -17.37747573852539

Token 611: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004782661329954863
    2. ',
' → logprob: -6.254782676696777
    3. ',n' → logprob: -6.629782676696777
    4. 'nombre' → logprob: -7.379782676696777
    5. '(nombre' → logprob: -7.754782676696777
    6. '   ' → logprob: -8.129782676696777
    7. ' ,' → logprob: -9.629782676696777
    8. ')' → logprob: -10.879782676696777
    9. '2' → logprob: -11.254782676696777
    10. '-' → logprob: -11.504782676696777

Token 612: ' nombre' (ID: 9733)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.052847325801849365
    2. 'nombre' → logprob: -3.052847385406494
    3. ' ' → logprob: -6.302847385406494
    4. ' nombre' → logprob: -6.302847385406494
    5. '2' → logprob: -8.302846908569336
    6. '
' → logprob: -8.427846908569336
    7. '   ' → logprob: -10.177846908569336
    8. '0' → logprob: -11.052846908569336
    9. '3' → logprob: -11.177846908569336
    10. 'k' → logprob: -11.552846908569336

Token 613: '_elements' (ID: 53344)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.29568278789520264
    2. 'max' → logprob: -1.4206827878952026
    3. '_elements' → logprob: -4.295682907104492
    4. 'maximum' → logprob: -8.170682907104492
    5. '
' → logprob: -8.420682907104492
    6. 'elements' → logprob: -9.545682907104492
    7. '```' → logprob: -9.670682907104492
    8. '1' → logprob: -10.295682907104492
    9. ' ' → logprob: -11.295682907104492
    10. ' max' → logprob: -11.420682907104492

Token 614: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.0032358209136873484
    2. 'total' → logprob: -5.753235816955566
    3. '_max' → logprob: -10.753235816955566
    4. '-' → logprob: -10.878235816955566
    5. 'Total' → logprob: -12.628235816955566
    6. 'def' → logprob: -13.128235816955566
    7. '```' → logprob: -13.128235816955566
    8. '   ' → logprob: -13.628235816955566
    9. '...' → logprob: -13.753235816955566
    10. 'max' → logprob: -13.878235816955566

Token 615: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.15243114531040192
    2. ' -' → logprob: -2.0274312496185303
    3. ',' → logprob: -4.777431011199951
    4. '   ' → logprob: -6.902431011199951
    5. ',
' → logprob: -9.40243148803711
    6. ' ' → logprob: -9.77743148803711
    7. 'nombre' → logprob: -9.90243148803711
    8. ' ,' → logprob: -10.40243148803711
    9. '
' → logprob: -11.15243148803711
    10. ' nombre' → logprob: -11.77743148803711

Token 616: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2532089352607727
    2. '1' → logprob: -1.503208875656128
    3. '3' → logprob: -7.378209114074707
    4. ' ' → logprob: -7.378209114074707
    5. '4' → logprob: -10.628209114074707
    6. '   ' → logprob: -13.003209114074707
    7. '
' → logprob: -13.753209114074707
    8. '5' → logprob: -14.315709114074707
    9. '  ' → logprob: -14.315709114074707
    10. '

' → logprob: -16.19070816040039

Token 617: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03631135821342468
    2. '1' → logprob: -3.411311388015747
    3. '3' → logprob: -6.286311149597168
    4. '4' → logprob: -7.286311149597168
    5. ' ' → logprob: -9.286311149597168
    6. '   ' → logprob: -12.036311149597168
    7. '5' → logprob: -12.161311149597168
    8. '
' → logprob: -12.723811149597168
    9. '

' → logprob: -13.598811149597168
    10. 'k' → logprob: -13.786311149597168

Token 618: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0044384244829416275
    2. ',
' → logprob: -5.754438400268555
    3. '       ' → logprob: -7.254438400268555
    4. ',n' → logprob: -8.129438400268555
    5. '   ' → logprob: -8.879438400268555
    6. ' ,' → logprob: -9.629438400268555
    7. '-' → logprob: -11.254438400268555
    8. ',
' → logprob: -11.629438400268555
    9. 'nombre' → logprob: -12.004438400268555
    10. ',k' → logprob: -12.504438400268555

Token 619: '       ' (ID: 309)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.03878096491098404
    2. ' nombre' → logprob: -3.413780927658081
    3. '       ' → logprob: -5.53878116607666
    4. '   ' → logprob: -6.91378116607666
    5. '     ' → logprob: -10.03878116607666
    6. '        ' → logprob: -10.16378116607666
    7. '    ' → logprob: -10.53878116607666
    8. '         ' → logprob: -10.91378116607666
    9. '2' → logprob: -11.28878116607666
    10. '      ' → logprob: -11.28878116607666

Token 620: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' (adapté à ' nombre') → logprob: -0.0003454753023106605
    2. ' nombre' → logprob: -8.750345230102539
    3. '   ' → logprob: -9.375345230102539
    4. '       ' → logprob: -9.750345230102539
    5. '         ' → logprob: -11.000345230102539
    6. '           ' → logprob: -11.750345230102539
    7. '     ' → logprob: -12.125345230102539
    8. '        ' → logprob: -12.750345230102539
    9. '             ' → logprob: -12.875345230102539
    10. '               ' → logprob: -13.000345230102539

Token 621: '_elements' (ID: 53344)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.15850692987442017
    2. '_elements' → logprob: -2.2835068702697754
    3. 'max' → logprob: -3.1585068702697754
    4. 'elements' → logprob: -6.158506870269775
    5. 'maximum' → logprob: -11.033507347106934
    6. '_' → logprob: -11.908507347106934
    7. 'Elements' → logprob: -12.408507347106934
    8. 'Max' → logprob: -13.033507347106934
    9. '_MAX' → logprob: -13.283507347106934
    10. '_total' → logprob: -13.283507347106934

Token 622: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.014167269691824913
    2. 'total' → logprob: -4.264167308807373
    3. '_' → logprob: -13.889166831970215
    4. 'Total' → logprob: -14.139166831970215
    5. '_max' → logprob: -14.514166831970215
    6. ' total' → logprob: -14.514166831970215
    7. '	total' → logprob: -15.514166831970215
    8. '_TOTAL' → logprob: -15.639166831970215
    9. 'otal' → logprob: -16.01416778564453
    10. '-' → logprob: -16.51416778564453

Token 623: '
' (ID: 198)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6379241347312927
    2. ' -' → logprob: -1.3879241943359375
    3. ')' → logprob: -1.5129241943359375
    4. '   ' → logprob: -7.2629241943359375
    5. ',' → logprob: -8.512924194335938
    6. '1' → logprob: -8.637924194335938
    7. ' )' → logprob: -8.637924194335938
    8. '),' → logprob: -8.887924194335938
    9. ')
' → logprob: -9.137924194335938
    10. '       ' → logprob: -9.637924194335938

Token 624: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03773755580186844
    2. '   ' → logprob: -3.6627376079559326
    3. '-' → logprob: -4.6627373695373535
    4. ')
' → logprob: -6.6627373695373535
    5. ' )' → logprob: -8.162737846374512
    6. ' -' → logprob: -8.662737846374512
    7. '       ' → logprob: -9.537737846374512
    8. ',
' → logprob: -10.787737846374512
    9. '),' → logprob: -11.037737846374512
    10. ',' → logprob: -11.162737846374512

Token 625: ' )' (ID: 1546)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' (adapté à ' )') → logprob: -0.022703271359205246
    2. '   ' → logprob: -3.897703170776367
    3. ')
' → logprob: -6.147703170776367
    4. ' )' → logprob: -11.647703170776367
    5. ')
' → logprob: -11.772703170776367
    6. ' ' → logprob: -13.772703170776367
    7. ')

' → logprob: -14.897703170776367
    8. '```' → logprob: -15.147703170776367
    9. '  ' → logprob: -15.272703170776367
    10. ')#' → logprob: -15.397703170776367

Token 626: ' %' (ID: 1851)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3352428674697876
    2. 'print' → logprob: -1.3352428674697876
    3. '   ' → logprob: -3.960242748260498
    4. 'elif' → logprob: -6.460242748260498
    5. ')' → logprob: -7.835242748260498
    6. '
' → logprob: -8.085243225097656
    7. '    
' → logprob: -8.710243225097656
    8. ' else' → logprob: -9.460243225097656
    9. '```' → logprob: -9.710243225097656
    10. ' print' → logprob: -10.085243225097656

Token 627: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.008615161292254925
    2. ' MOD' → logprob: -4.758615016937256
    3. '_MOD' → logprob: -15.383615493774414
    4. ' ' → logprob: -15.383615493774414
    5. '   ' → logprob: -16.758615493774414
    6. '.MOD' → logprob: -17.008615493774414
    7. '
' → logprob: -17.133615493774414
    8. 'MO' → logprob: -17.133615493774414
    9. 'mod' → logprob: -17.758615493774414
    10. 'MODULE' → logprob: -18.383615493774414

Token 628: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.07008648663759232
    2. 'O' → logprob: -2.6950864791870117
    3. 'ODO' → logprob: -10.445086479187012
    4. 'ULE' → logprob: -10.820086479187012
    5. 'OU' → logprob: -10.820086479187012
    6. 'MOD' → logprob: -11.070086479187012
    7. 'U' → logprob: -11.320086479187012
    8. 'UL' → logprob: -11.695086479187012
    9. 'ODULE' → logprob: -12.070086479187012
    10. 'LO' → logprob: -12.320086479187012

Token 629: '_CONSTANT' (ID: 115083)
  Prédit: '_CONSTANT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONSTANT' → logprob: -2.236549335066229e-05
    2. '_CONST' → logprob: -10.875021934509277
    3. '_constant' → logprob: -13.750021934509277
    4. '```' → logprob: -14.875021934509277
    5. 'CON' → logprob: -15.000021934509277
    6. '\' → logprob: -15.125021934509277
    7. '_CON' → logprob: -15.500021934509277
    8. 'const' → logprob: -15.750021934509277
    9. 'Constant' → logprob: -15.750021934509277
    10. 'CONST' → logprob: -16.000022888183594

Token 630: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1010710671544075
    2. 'print' → logprob: -2.6010711193084717
    3. '   ' → logprob: -3.9760711193084717
    4. '
' → logprob: -6.851070880889893
    5. 'elif' → logprob: -6.851070880889893
    6. ')' → logprob: -7.601070880889893
    7. '    
' → logprob: -8.22607135772705
    8. ' else' → logprob: -8.97607135772705
    9. '<|end|>' → logprob: -9.60107135772705
    10. '```' → logprob: -10.22607135772705

Token 631: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1514386236667633
    2. ')' → logprob: -2.7764387130737305
    3. 'print' → logprob: -2.7764387130737305
    4. 'elif' → logprob: -4.7764387130737305
    5. '   ' → logprob: -5.0264387130737305
    6. ' else' → logprob: -8.02643871307373
    7. '```' → logprob: -8.52643871307373
    8. '<|end|>' → logprob: -9.15143871307373
    9. '#' → logprob: -9.40143871307373
    10. ' print' → logprob: -9.90143871307373

Token 632: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00027111053350381553
    2. 'else' → logprob: -8.62527084350586
    3. '   ' → logprob: -9.37527084350586
    4. ' print' → logprob: -12.12527084350586
    5. 'elif' → logprob: -14.25027084350586
    6. '```' → logprob: -14.87527084350586
    7. ')' → logprob: -16.37527084350586
    8. '	print' → logprob: -16.37527084350586
    9. '    
' → logprob: -17.62527084350586
    10. '#' → logprob: -17.87527084350586

Token 633: '(nombre' (ID: 124319)
  Prédit: '(nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nombre' → logprob: -0.0003517894074320793
    2. '(' → logprob: -8.000351905822754
    3. 'nombre' → logprob: -11.875351905822754
    4. '(n' → logprob: -11.875351905822754
    5. '(
' → logprob: -13.500351905822754
    6. '(nb' → logprob: -15.250351905822754
    7. '((' → logprob: -15.375351905822754
    8. '(nome' → logprob: -15.375351905822754
    9. '(numero' → logprob: -16.375350952148438
    10. '(number' → logprob: -17.000350952148438

Token 634: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '_sets' → logprob: -19.375
    3. '\' → logprob: -19.625
    4. '_elements' → logprob: -19.875
    5. 'ense' → logprob: -20.5
    6. '_
' → logprob: -20.625
    7. ')' → logprob: -21.0
    8. '__' → logprob: -21.375
    9. ' _' → logprob: -21.625
    10. 's' → logprob: -21.625

Token 635: 'ense' (ID: 1603)
  Prédit: 'ense'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ense' → logprob: -5.073596548754722e-05
    2. '_' → logprob: -10.12505054473877
    3. 'enseign' → logprob: -11.50005054473877
    4. 'ensemble' → logprob: -15.75005054473877
    5. 'ens' → logprob: -16.250051498413086
    6. 'enses' → logprob: -16.500051498413086
    7. '   ' → logprob: -16.625051498413086
    8. '
' → logprob: -17.500051498413086
    9. '-' → logprob: -17.500051498413086
    10. 'sets' → logprob: -17.750051498413086

Token 636: 'mbles' (ID: 60383)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.7348073720932007
    2. 'mbles' → logprob: -0.7348073720932007
    3. 'mb' → logprob: -3.6098074913024902
    4. 'nts' → logprob: -4.60980749130249
    5. 'mble' → logprob: -5.98480749130249
    6. 'mts' → logprob: -7.85980749130249
    7. 'sets' → logprob: -7.98480749130249
    8. 'ments' → logprob: -8.484807014465332
    9. 'sts' → logprob: -9.609807014465332
    10. 't' → logprob: -9.859807014465332

Token 637: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.968312951968983e-06
    2. ')
' → logprob: -11.625009536743164
    3. '   ' → logprob: -14.375009536743164
    4. ' )' → logprob: -15.000009536743164
    5. ')
' → logprob: -17.500009536743164
    6. '))' → logprob: -17.875009536743164
    7. '),' → logprob: -18.250009536743164
    8. ')`' → logprob: -18.250009536743164
    9. '```' → logprob: -19.000009536743164
    10. '")' → logprob: -19.000009536743164

Token 638: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0005007279687561095
    2. 'elif' → logprob: -7.625500679016113
    3. ' else' → logprob: -11.750500679016113
    4. '```' → logprob: -12.750500679016113
    5. '<|end|>' → logprob: -14.250500679016113
    6. ')' → logprob: -14.750500679016113
    7. '#' → logprob: -15.125500679016113
    8. '#else' → logprob: -15.625500679016113
    9. '   ' → logprob: -16.12550163269043
    10. 'elser' → logprob: -16.50050163269043

Token 639: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.03827545791864395
    2. '   ' → logprob: -3.2882754802703857
    3. 'exit' (adapté à ' exit') → logprob: -8.788275718688965
    4. 'elif' → logprob: -9.538275718688965
    5. 'sys' → logprob: -12.163275718688965
    6. '```' → logprob: -13.788275718688965
    7. ' else' → logprob: -14.038275718688965
    8. '	exit' → logprob: -14.413275718688965
    9. ')' → logprob: -15.038275718688965
    10. '#' → logprob: -15.038275718688965

Token 640: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0017101633129641414
    2. '(' → logprob: -6.376709938049316
    3. '()
' → logprob: -12.376709938049316
    4. ' ()' → logprob: -13.626709938049316
    5. '0' → logprob: -14.001709938049316
    6. '()]' → logprob: -14.876709938049316
    7. '())' → logprob: -15.001709938049316
    8. '()`' → logprob: -15.501709938049316
    9. '()\' → logprob: -15.751709938049316
    10. '(
' → logprob: -16.126710891723633

Token 641: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6727122664451599
    2. 'result' → logprob: -1.4227123260498047
    3. 'nombre' → logprob: -1.5477123260498047
    4. 'total' → logprob: -4.422712326049805
    5. 'reste' → logprob: -4.922712326049805
    6. 'def' → logprob: -5.172712326049805
    7. 'res' → logprob: -5.422712326049805
    8. 'comb' → logprob: -6.297712326049805
    9. 'rest' → logprob: -6.547712326049805
    10. 'val' → logprob: -7.547712326049805

Token 642: ' Calcul' (ID: 57243)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.18417638540267944
    2. 'dp' → logprob: -2.559176445007324
    3. 'def' → logprob: -3.309176445007324
    4. 'result' → logprob: -3.559176445007324
    5. 'nombre' → logprob: -4.434176445007324
    6. 'from' → logprob: -5.684176445007324
    7. 'memo' → logprob: -5.684176445007324
    8. 'reste' → logprob: -6.309176445007324
    9. 'comp' → logprob: -6.559176445007324
    10. 'comb' → logprob: -7.434176445007324

Token 643: ' du' (ID: 1462)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.33567100763320923
    2. 'nombre' → logprob: -1.8356709480285645
    3. '#' → logprob: -2.2106709480285645
    4. 'total' → logprob: -4.4606709480285645
    5. 'res' → logprob: -6.0856709480285645
    6. 'reste' → logprob: -7.7106709480285645
    7. 'rés' → logprob: -7.9606709480285645
    8. 'def' → logprob: -8.710671424865723
    9. 'dp' → logprob: -8.835671424865723
    10. 's' → logprob: -8.835671424865723

Token 644: ' nombre' (ID: 9733)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5722781419754028
    2. 'nombre' → logprob: -1.3222781419754028
    3. 'dp' → logprob: -1.8222781419754028
    4. '#' → logprob: -6.072278022766113
    5. 'res' → logprob: -6.572278022766113
    6. 'rés' → logprob: -6.697278022766113
    7. 'fact' → logprob: -7.072278022766113
    8. '```' → logprob: -7.947278022766113
    9. 'def' → logprob: -8.322278022766113
    10. 'total' → logprob: -8.322278022766113

Token 645: ' total' (ID: 3609)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00450832350179553
    2. '_des' → logprob: -6.7545084953308105
    3. 'd' → logprob: -7.0045084953308105
    4. '_total' → logprob: -7.3795084953308105
    5. '_elements' → logprob: -7.8795084953308105
    6. '_result' → logprob: -8.129508018493652
    7. '_de' → logprob: -8.504508018493652
    8. 'de' → logprob: -8.629508018493652
    9. 'total' → logprob: -9.004508018493652
    10. '_d' → logprob: -9.129508018493652

Token 646: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0996646136045456
    2. '_des' → logprob: -3.8496646881103516
    3. 'nombre' → logprob: -4.474664688110352
    4. 'de' → logprob: -4.474664688110352
    5. 'd' → logprob: -4.599664688110352
    6. '_elements' → logprob: -4.724664688110352
    7. 'total' → logprob: -4.974664688110352
    8. 'result' → logprob: -5.224664688110352
    9. 'des' → logprob: -5.224664688110352
    10. '_total' → logprob: -5.724664688110352

Token 647: ' façons' (ID: 165958)
  Prédit: 'man'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'man' → logprob: -0.534059464931488
    2. 'nombre' → logprob: -1.6590595245361328
    3. 'fa' → logprob: -2.534059524536133
    4. 'result' → logprob: -3.284059524536133
    5. 'ense' → logprob: -3.534059524536133
    6. 's' → logprob: -4.034059524536133
    7. 'comb' → logprob: -4.409059524536133
    8. 'com' → logprob: -4.534059524536133
    9. 'ways' → logprob: -4.784059524536133
    10. '_' → logprob: -5.409059524536133

Token 648: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8378431797027588
    2. 'nombre' → logprob: -0.9628431797027588
    3. 'result' → logprob: -2.337843179702759
    4. 'total' → logprob: -2.837843179702759
    5. '#' → logprob: -4.21284294128418
    6. 'def' → logprob: -4.83784294128418
    7. 'd' → logprob: -5.83784294128418
    8. 'for' → logprob: -6.33784294128418
    9. 'dp' → logprob: -6.71284294128418
    10. 'fact' → logprob: -8.46284294128418

Token 649: ' répart' (ID: 147636)
  Prédit: 'cho'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cho' → logprob: -0.2290821522474289
    2. 'selection' → logprob: -2.6040821075439453
    3. 'comb' → logprob: -2.7290821075439453
    4. 'former' → logprob: -3.6040821075439453
    5. 'sé' → logprob: -5.229082107543945
    6. 'placer' → logprob: -5.229082107543945
    7. 'faire' → logprob: -5.229082107543945
    8. 'select' → logprob: -5.479082107543945
    9. ' choisir' → logprob: -5.854082107543945
    10. 'composer' → logprob: -5.979082107543945

Token 650: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.00019042797794099897
    2. 'ition' → logprob: -9.250190734863281
    3. 'ager' → logprob: -10.000190734863281
    4. 'itioner' → logprob: -11.750190734863281
    5. 'irer' → logprob: -11.750190734863281
    6. 'er' → logprob: -11.875190734863281
    7. '   ' → logprob: -12.500190734863281
    8. '...' → logprob: -12.750190734863281
    9. 'tir' → logprob: -13.000190734863281
    10. 'ier' → logprob: -13.125190734863281

Token 651: ' les' (ID: 1341)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.025438688695430756
    2. 'result' → logprob: -4.5254387855529785
    3. 'total' → logprob: -5.2754387855529785
    4. '(nombre' → logprob: -5.7754387855529785
    5. 'de' → logprob: -6.9004387855529785
    6. 'pour' → logprob: -7.0254387855529785
    7. '(' → logprob: -7.1504387855529785
    8. 'for' → logprob: -7.4004387855529785
    9. ' nombre' → logprob: -7.6504387855529785
    10. 'fact' → logprob: -7.9004387855529785

Token 652: ' personnes' (ID: 20203)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.040406543761491776
    2. 'elements' → logprob: -3.9154064655303955
    3. 'k' → logprob: -5.290406703948975
    4. 'élé' → logprob: -5.290406703948975
    5. 'obj' → logprob: -6.040406703948975
    6. 'items' → logprob: -6.165406703948975
    7. 'points' → logprob: -6.665406703948975
    8. 'objet' → logprob: -7.165406703948975
    9. 'element' → logprob: -7.540406703948975
    10. 'places' → logprob: -7.665406703948975

Token 653: ' dans' (ID: 2671)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.3437552750110626
    2. '#' → logprob: -1.9687552452087402
    3. 'result' → logprob: -2.4687552452087402
    4. 'total' → logprob: -3.2187552452087402
    5. 'def' → logprob: -4.46875524520874
    6. 'dp' → logprob: -4.84375524520874
    7. '=' → logprob: -5.96875524520874
    8. 'fa' → logprob: -6.09375524520874
    9. 'res' → logprob: -7.96875524520874
    10. 'fact' → logprob: -8.468755722045898

Token 654: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5860600471496582
    2. 'nombre' → logprob: -0.9610600471496582
    3. 'k' → logprob: -3.461060047149658
    4. 'des' → logprob: -3.961060047149658
    5. 'diff' → logprob: -4.836060047149658
    6. 'la' → logprob: -7.711060047149658
    7. '```' → logprob: -7.711060047149658
    8. 'le' → logprob: -7.711060047149658
    9. 'une' → logprob: -8.2110595703125
    10. 'un' → logprob: -8.9610595703125

Token 655: ' pièces' (ID: 49165)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.15641866624355316
    2. 'nombre' → logprob: -2.781418561935425
    3. 'k' → logprob: -2.906418561935425
    4. 'groups' → logprob: -4.406418800354004
    5. 'diff' → logprob: -5.531418800354004
    6. 'g' → logprob: -5.906418800354004
    7. 'cases' → logprob: -6.281418800354004
    8. 'places' → logprob: -6.656418800354004
    9. 'n' → logprob: -6.906418800354004
    10. 'files' → logprob: -7.406418800354004

Token 656: ' (' (ID: 350)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.6002456545829773
    2. '#' → logprob: -1.350245714187622
    3. 'total' → logprob: -2.100245714187622
    4. 'result' → logprob: -2.725245714187622
    5. 'def' → logprob: -6.225245475769043
    6. 'dp' → logprob: -7.475245475769043
    7. 'res' → logprob: -8.600245475769043
    8. '=' → logprob: -8.600245475769043
    9. '```' → logprob: -8.850245475769043
    10. 'fa' → logprob: -9.100245475769043

Token 657: 's' (ID: 82)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8429439663887024
    2. 'nombre' → logprob: -0.9679439663887024
    3. 'dp' → logprob: -2.5929439067840576
    4. ')' → logprob: -2.9679439067840576
    5. 'result' → logprob: -4.467944145202637
    6. 'total' → logprob: -4.592944145202637
    7. 'def' → logprob: -4.592944145202637
    8. 'fa' → logprob: -4.842944145202637
    9. 'ways' → logprob: -5.717944145202637
    10. '...)' → logprob: -5.842944145202637

Token 658: 'ous' (ID: 784)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0043787360191345215
    2. '#' → logprob: -6.379378795623779
    3. 'ur' → logprob: -6.379378795623779
    4. '```' → logprob: -8.379378318786621
    5. '=' → logprob: -8.504378318786621
    6. 'elon' → logprob: -9.754378318786621
    7. ')' → logprob: -10.004378318786621
    8. 'um' → logprob: -10.379378318786621
    9. 'paces' → logprob: -10.379378318786621
    10. 'tout' → logprob: -10.379378318786621

Token 659: ' contraintes' (ID: 167366)
  Prédit: 'forme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forme' → logprob: -0.3137151300907135
    2. 'nombre' → logprob: -1.9387151002883911
    3. 'la' → logprob: -3.0637152194976807
    4. '```' → logprob: -4.438714981079102
    5. 'le' → logprob: -4.563714981079102
    6. 'diff' → logprob: -4.813714981079102
    7. 'form' → logprob: -4.938714981079102
    8. 'une' → logprob: -5.188714981079102
    9. '#' → logprob: -5.563714981079102
    10. ' forme' → logprob: -5.688714981079102

Token 660: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015669959830120206
    2. 'nombre' → logprob: -7.6265668869018555
    3. '#' → logprob: -8.126566886901855
    4. 'def' → logprob: -8.501566886901855
    5. ',' → logprob: -9.126566886901855
    6. '):' → logprob: -9.501566886901855
    7. ')
' → logprob: -9.751566886901855
    8. ')#' → logprob: -9.751566886901855
    9. '(nombre' → logprob: -10.376566886901855
    10. ' )' → logprob: -10.626566886901855

Token 661: 'nombre' (ID: 28576)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.23068125545978546
    2. 'nombre' → logprob: -2.4806811809539795
    3. 'result' → logprob: -3.1056811809539795
    4. '#' → logprob: -3.2306811809539795
    5. 'total' → logprob: -3.8556811809539795
    6. 'def' → logprob: -5.355681419372559
    7. 'reste' → logprob: -6.480681419372559
    8. 'ways' → logprob: -6.605681419372559
    9. '```' → logprob: -6.730681419372559
    10. 'res' → logprob: -7.230681419372559

Token 662: '_de' (ID: 5047)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.22622211277484894
    2. '_de' → logprob: -2.101222038269043
    3. '_re' → logprob: -3.976222038269043
    4. '_f' → logprob: -3.976222038269043
    5. '_person' → logprob: -3.976222038269043
    6. '_m' → logprob: -5.226222038269043
    7. '_group' → logprob: -5.351222038269043
    8. '_part' → logprob: -5.976222038269043
    9. '_p' → logprob: -6.226222038269043
    10. '_total' → logprob: -6.601222038269043

Token 663: '_dis' (ID: 15018)
  Prédit: '_f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_f' → logprob: -0.9171532392501831
    2. '_' → logprob: -1.167153239250183
    3. '_p' → logprob: -2.1671533584594727
    4. '_person' → logprob: -3.2921533584594727
    5. '_group' → logprob: -3.4171533584594727
    6. 'fa' → logprob: -3.6671533584594727
    7. '_places' → logprob: -4.292153358459473
    8. '_fac' → logprob: -4.542153358459473
    9. '_part' → logprob: -4.792153358459473
    10. '_m' → logprob: -4.917153358459473

Token 664: 'positions' (ID: 32297)
  Prédit: 'tributions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tributions' → logprob: -0.09545396268367767
    2. 'trib' → logprob: -3.345453977584839
    3. 'positions' → logprob: -3.845453977584839
    4. 't' → logprob: -3.845453977584839
    5. 'tr' → logprob: -5.47045373916626
    6. 'tri' → logprob: -6.09545373916626
    7. 'pon' → logprob: -6.47045373916626
    8. 'tribution' → logprob: -6.72045373916626
    9. 'patch' → logprob: -6.97045373916626
    10. 'ting' → logprob: -7.72045373916626

Token 665: '_pos' (ID: 14692)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688692450523376
    2. '=' → logprob: -1.1368869543075562
    3. '_total' → logprob: -11.511886596679688
    4. '_' → logprob: -13.511886596679688
    5. ',' → logprob: -14.011886596679688
    6. 'total' → logprob: -14.386886596679688
    7. '_=' → logprob: -14.761886596679688
    8. 's' → logprob: -14.886886596679688
    9. 'def' → logprob: -14.886886596679688
    10. '=int' → logprob: -15.386886596679688

Token 666: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.015485544688999653
    2. 'sible' → logprob: -4.265485763549805
    3. 't' → logprob: -7.515485763549805
    4. 'ibles' → logprob: -7.765485763549805
    5. '=' → logprob: -9.015485763549805
    6. 'itives' → logprob: -9.515485763549805
    7. 'ables' → logprob: -10.515485763549805
    8. ' =' → logprob: -10.640485763549805
    9. '```' → logprob: -10.765485763549805
    10. 'ible' → logprob: -11.265485763549805

Token 667: 'ibles' (ID: 12234)
  Prédit: 'ibles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibles' → logprob: -0.004194267094135284
    2. 'ible' → logprob: -6.004194259643555
    3. 'bles' → logprob: -7.254194259643555
    4. 'es' → logprob: -8.379194259643555
    5. 'ibil' → logprob: -8.504194259643555
    6. 'ibl' → logprob: -9.254194259643555
    7. 'ibilities' → logprob: -9.629194259643555
    8. 'i' → logprob: -9.629194259643555
    9. '```' → logprob: -9.754194259643555
    10. '=' → logprob: -9.754194259643555

Token 668: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014141082763672
    2. '=' → logprob: -1.7014141082763672
    3. ',' → logprob: -16.076414108276367
    4. 's' → logprob: -16.201414108276367
    5. 'def' → logprob: -16.201414108276367
    6. '=int' → logprob: -16.701414108276367
    7. '   ' → logprob: -16.826414108276367
    8. '_' → logprob: -17.076414108276367
    9. ' ' → logprob: -17.076414108276367
    10. '_total' → logprob: -17.326414108276367

Token 669: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11472434550523758
    2. 'comb' → logprob: -2.2397243976593018
    3. '1' → logprob: -6.864724159240723
    4. 'arr' → logprob: -7.864724159240723
    5. 'nombre' → logprob: -9.239724159240723
    6. '(' → logprob: -9.364724159240723
    7. 'com' → logprob: -9.739724159240723
    8. ' ' → logprob: -9.989724159240723
    9. 'pow' → logprob: -10.239724159240723
    10. ' combinaison' → logprob: -10.364724159240723

Token 670: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2272123098373413
    2. 'comb' → logprob: -1.6022123098373413
    3. '1' → logprob: -6.852212429046631
    4. 'arr' → logprob: -8.102211952209473
    5. 'nombre' → logprob: -8.977211952209473
    6. '(' → logprob: -9.727211952209473
    7. 'com' → logprob: -9.852211952209473
    8. 'fact' → logprob: -9.852211952209473
    9. 'pow' → logprob: -10.102211952209473
    10. 'factor' → logprob: -10.227211952209473

Token 671: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.761062502861023
    2. '<|end|>' → logprob: -0.761062502861023
    3. 'for' → logprob: -3.3860626220703125
    4. ' for' → logprob: -4.6360626220703125
    5. '#' → logprob: -4.7610626220703125
    6. ' 
' → logprob: -5.5110626220703125
    7. '*' → logprob: -5.8860626220703125
    8. '\n' → logprob: -6.2610626220703125
    9. '<|end|>' → logprob: -6.5110626220703125
    10. '  
' → logprob: -7.3860626220703125

Token 672: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11387899518013
    2. '#' → logprob: -2.3638789653778076
    3. '
' → logprob: -5.488879203796387
    4. ')' → logprob: -5.863879203796387
    5. '<|end|>' → logprob: -6.113879203796387
    6. ' for' → logprob: -6.613879203796387
    7. '```' → logprob: -6.738879203796387
    8. '(' → logprob: -7.363879203796387
    9. '*' → logprob: -8.113879203796387
    10. '[' → logprob: -8.613879203796387

Token 673: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7635232210159302
    2. ' i' → logprob: -0.7635232210159302
    3. ' taille' → logprob: -3.7635231018066406
    4. ' nombre' → logprob: -4.013523101806641
    5. ' groupe' → logprob: -5.013523101806641
    6. '_' → logprob: -5.888523101806641
    7. '_i' → logprob: -6.138523101806641
    8. 'nombre' → logprob: -6.263523101806641
    9. ' piece' → logprob: -6.263523101806641
    10. 'k' → logprob: -6.388523101806641

Token 674: '_p' (ID: 1359)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.9505537748336792
    2. '_person' → logprob: -1.0755537748336792
    3. '_piece' → logprob: -2.0755538940429688
    4. '_' → logprob: -3.5755538940429688
    5. '_part' → logprob: -3.5755538940429688
    6. '_dis' → logprob: -3.7005538940429688
    7. '_g' → logprob: -4.450553894042969
    8. '_p' → logprob: -4.700553894042969
    9. '_possible' → logprob: -5.200553894042969
    10. '_pi' → logprob: -5.200553894042969

Token 675: 'ieces' (ID: 44654)
  Prédit: 'erson'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erson' → logprob: -1.0162630081176758
    2. 'ieces' → logprob: -1.1412630081176758
    3. 'iece' → logprob: -1.3912630081176758
    4. 'i' → logprob: -2.891263008117676
    5. 'art' → logprob: -5.391263008117676
    6. 'er' → logprob: -6.516263008117676
    7. 'e' → logprob: -6.766263008117676
    8. '_' → logprob: -7.266263008117676
    9. 'laces' → logprob: -7.391263008117676
    10. 'oss' → logprob: -7.641263008117676

Token 676: '_vid' (ID: 189409)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12765443325042725
    2. 'in' → logprob: -2.127654552459717
    3. '_' → logprob: -8.002654075622559
    4. 'en' → logprob: -8.877654075622559
    5. 'dans' → logprob: -9.502654075622559
    6. ' ' → logprob: -10.252654075622559
    7. '_in' → logprob: -10.627654075622559
    8. ',' → logprob: -10.627654075622559
    9. 'de' → logprob: -10.752654075622559
    10. 'range' → logprob: -11.127654075622559

Token 677: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.00812077708542347
    2. 'ides' → logprob: -5.008121013641357
    3. 'ues' → logprob: -7.133121013641357
    4. 'e' → logprob: -8.1331205368042
    5. 'ees' → logprob: -8.6331205368042
    6. 'oes' → logprob: -10.0081205368042
    7. '=' → logprob: -11.1331205368042
    8. 'entes' → logprob: -11.2581205368042
    9. 'ide' → logprob: -11.5081205368042
    10. 'u' → logprob: -11.7581205368042

Token 678: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04314397647976875
    2. 'in' → logprob: -3.1681439876556396
    3. ',' → logprob: -10.043144226074219
    4. 'en' → logprob: -10.168144226074219
    5. 'dans' → logprob: -10.418144226074219
    6. ' ' → logprob: -11.793144226074219
    7. '_' → logprob: -12.793144226074219
    8. ' en' → logprob: -12.918144226074219
    9. 'range' → logprob: -12.918144226074219
    10. '   ' → logprob: -13.043144226074219

Token 679: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.438573680294212e-06
    2. ' range' → logprob: -12.125005722045898
    3. '   ' → logprob: -17.1250057220459
    4. 'rang' → logprob: -18.7500057220459
    5. '(range' → logprob: -19.1250057220459
    6. '	range' → logprob: -19.6250057220459
    7. ' ' → logprob: -19.8750057220459
    8. '```' → logprob: -19.8750057220459
    9. 're' → logprob: -20.1250057220459
    10. 'r' → logprob: -20.6250057220459

Token 680: '(' (ID: 7)
  Prédit: '(nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nombre' → logprob: -0.12694784998893738
    2. '(' → logprob: -2.1269478797912598
    3. 'nombre' → logprob: -11.376947402954102
    4. '0' → logprob: -12.501947402954102
    5. '(
' → logprob: -13.376947402954102
    6. '(numero' → logprob: -14.251947402954102
    7. '(nome' → logprob: -14.251947402954102
    8. '((' → logprob: -14.626947402954102
    9. '(nb' → logprob: -14.876947402954102
    10. '1' → logprob: -15.501947402954102

Token 681: '1' (ID: 16)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.00864541344344616
    2. '0' → logprob: -4.758645534515381
    3. '(nombre' → logprob: -10.883645057678223
    4. 'min' → logprob: -12.258645057678223
    5. ' nombre' → logprob: -12.383645057678223
    6. 'nom' → logprob: -13.133645057678223
    7. '1' → logprob: -14.633645057678223
    8. '(' → logprob: -16.13364601135254
    9. 'Nombre' → logprob: -16.13364601135254
    10. 'named' → logprob: -16.25864601135254

Token 682: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.576873758807778e-05
    2. ' ,' → logprob: -9.750075340270996
    3. ',n' → logprob: -11.000075340270996
    4. ',len' → logprob: -15.625075340270996
    5. 'nombre' → logprob: -15.750075340270996
    6. '1' → logprob: -16.250076293945312
    7. ',
' → logprob: -16.250076293945312
    8. '0' → logprob: -17.125076293945312
    9. '+' → logprob: -17.125076293945312
    10. '(nombre' → logprob: -17.250076293945312

Token 683: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -7.231182826217264e-05
    2. 'min' → logprob: -9.750072479248047
    3. ' nombre' → logprob: -11.250072479248047
    4. 'nom' → logprob: -14.625072479248047
    5. '(nombre' → logprob: -15.000072479248047
    6. '   ' → logprob: -16.375072479248047
    7. 'minimum' → logprob: -16.500072479248047
    8. 'nome' → logprob: -17.625072479248047
    9. 'Nombre' → logprob: -18.000072479248047
    10. ' ' → logprob: -18.375072479248047

Token 684: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.03078400529921055
    2. '_elements' → logprob: -3.5307838916778564
    3. 'max' → logprob: -6.9057841300964355
    4. '_' → logprob: -11.655783653259277
    5. '_p' → logprob: -11.905783653259277
    6. 'elements' → logprob: -12.405783653259277
    7. '_total' → logprob: -13.155783653259277
    8. 'Max' → logprob: -13.405783653259277
    9. '+' → logprob: -13.905783653259277
    10. '_points' → logprob: -14.405783653259277

Token 685: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.00012928384239785373
    2. 'um' → logprob: -9.000129699707031
    3. 'maximum' → logprob: -13.000129699707031
    4. '_' → logprob: -14.000129699707031
    5. 'IMUM' → logprob: -14.375129699707031
    6. 'aire' → logprob: -14.875129699707031
    7. 'imal' → logprob: -15.125129699707031
    8. 'im' → logprob: -15.375129699707031
    9. '_possible' → logprob: -15.750129699707031
    10. '_max' → logprob: -15.750129699707031

Token 686: '_aut' (ID: 73515)
  Prédit: '_aut'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_aut' → logprob: -1.759734732331708e-05
    2. '_max' → logprob: -12.125017166137695
    3. '_auth' → logprob: -12.500017166137695
    4. '+' → logprob: -12.750017166137695
    5. 'aut' → logprob: -13.250017166137695
    6. '_author' → logprob: -13.750017166137695
    7. 's' → logprob: -14.750017166137695
    8. ')' → logprob: -15.375017166137695
    9. '_auto' → logprob: -15.375017166137695
    10. '_' → logprob: -15.625017166137695

Token 687: 'or' (ID: 267)
  Prédit: 'ise'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.022496161982417107
    2. 't' → logprob: -4.022496223449707
    3. 'or' → logprob: -5.647496223449707
    4. 'tor' → logprob: -8.397496223449707
    5. 'oise' → logprob: -8.772496223449707
    6. 'rise' → logprob: -9.147496223449707
    7. 'aise' → logprob: -9.772496223449707
    8. 'l' → logprob: -10.147496223449707
    9. 'oris' → logprob: -10.397496223449707
    10. '
' → logprob: -11.022496223449707

Token 688: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.002493256703019142
    2. 'ises' → logprob: -6.252493381500244
    3. '_' → logprob: -8.502492904663086
    4. '```' → logprob: -10.252492904663086
    5. '   ' → logprob: -10.502492904663086
    6. 'use' → logprob: -10.502492904663086
    7. '=' → logprob: -10.627492904663086
    8. '[' → logprob: -10.877492904663086
    9. 'e' → logprob: -11.002492904663086
    10. 'ire' → logprob: -11.002492904663086

Token 689: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14270378649234772
    2. '+' → logprob: -2.0177037715911865
    3. '):
' → logprob: -11.767704010009766
    4. '   ' → logprob: -11.767704010009766
    5. '
' → logprob: -12.892704010009766
    6. ' +
' → logprob: -12.892704010009766
    7. ' ' → logprob: -13.017704010009766
    8. 's' → logprob: -13.642704010009766
    9. '+
' → logprob: -13.892704010009766
    10. '):' → logprob: -14.017704010009766

Token 690: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004238785710185766
    2. ' ' → logprob: -5.504238605499268
    3. '2' → logprob: -8.754239082336426
    4. ')' → logprob: -13.879239082336426
    5. '
' → logprob: -15.004239082336426
    6. '   ' → logprob: -15.129239082336426
    7. ' )' → logprob: -15.504239082336426
    8. '```' → logprob: -15.816739082336426
    9. '+' → logprob: -16.00423812866211
    10. ' ' → logprob: -16.56673812866211

Token 691: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001363093382678926
    2. '2' → logprob: -6.626363277435303
    3. ' ' → logprob: -10.251362800598145
    4. '
' → logprob: -14.626362800598145
    5. '   ' → logprob: -14.876362800598145
    6. '```' → logprob: -14.938862800598145
    7. ')' → logprob: -15.938862800598145
    8. '3' → logprob: -16.06386375427246
    9. 'nombre' → logprob: -17.00136375427246
    10. '

' → logprob: -17.18886375427246

Token 692: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.033123765140771866
    2. ':' → logprob: -3.533123731613159
    3. '):
' → logprob: -5.783123970031738
    4. ')' → logprob: -8.408123970031738
    5. ' :' → logprob: -10.908123970031738
    6. '+' → logprob: -11.033123970031738
    7. ',' → logprob: -11.783123970031738
    8. ':
' → logprob: -12.158123970031738
    9. '+:' → logprob: -12.283123970031738
    10. ' ):' → logprob: -12.783123970031738

Token 693: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005958307068794966
    2. '    
' → logprob: -5.380958080291748
    3. 'nombre' → logprob: -7.380958080291748
    4. ' nombre' → logprob: -8.630958557128906
    5. '    ' → logprob: -8.755958557128906
    6. '   ' → logprob: -9.880958557128906
    7. '     
' → logprob: -10.005958557128906
    8. '   
' → logprob: -10.255958557128906
    9. ' 
' → logprob: -10.380958557128906
    10. '\t' → logprob: -10.505958557128906

Token 694: ' fac' (ID: 3513)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024861395359039307
    2. 'nombre' → logprob: -4.8998613357543945
    3. ' nombre' → logprob: -4.8998613357543945
    4. '    
' → logprob: -5.0248613357543945
    5. '#' → logprob: -7.2748613357543945
    6. ' #' → logprob: -7.3998613357543945
    7. 'comb' → logprob: -8.399861335754395
    8. ' comb' → logprob: -8.399861335754395
    9. '    ' → logprob: -8.649861335754395
    10. ' total' → logprob: -9.524861335754395

Token 695: 'on' (ID: 263)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.12816548347473145
    2. 'tor' → logprob: -2.1281654834747314
    3. 'teur' → logprob: -7.378165245056152
    4. 'factor' → logprob: -8.628165245056152
    5. 'toire' → logprob: -9.128165245056152
    6. 'to' → logprob: -9.253165245056152
    7. '=' → logprob: -9.253165245056152
    8. 'tour' → logprob: -10.753165245056152
    9. 'tail' → logprob: -10.878165245056152
    10. 'tors' → logprob: -11.253165245056152

Token 696: '_' (ID: 62)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8868716359138489
    2. '_de' → logprob: -1.011871576309204
    3. '=' → logprob: -2.886871576309204
    4. '_possible' → logprob: -3.386871576309204
    5. ' =' → logprob: -3.511871576309204
    6. '_factor' → logprob: -3.636871576309204
    7. '_part' → logprob: -4.011871814727783
    8. '_' → logprob: -4.511871814727783
    9. '_p' → logprob: -4.886871814727783
    10. '_nombre' → logprob: -5.011871814727783

Token 697: 'cho' (ID: 2153)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.636581301689148
    2. 'com' → logprob: -1.761581301689148
    3. 'dis' → logprob: -1.886581301689148
    4. 'nombre' → logprob: -2.1365814208984375
    5. 'calcul' → logprob: -2.2615814208984375
    6. 'part' → logprob: -3.0115814208984375
    7. '=' → logprob: -3.6365814208984375
    8. 'comp' → logprob: -3.7615814208984375
    9. 'comb' → logprob: -3.8865814208984375
    10. 'd' → logprob: -4.2615814208984375

Token 698: 'isir' (ID: 104403)
  Prédit: 'isir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isir' → logprob: -0.09667278826236725
    2. 'is' → logprob: -2.971672773361206
    3. 'ix' → logprob: -3.596672773361206
    4. 'isie' → logprob: -4.721673011779785
    5. 'isi' → logprob: -6.096673011779785
    6. 'i' → logprob: -6.846673011779785
    7. 'isis' → logprob: -8.221673011779785
    8. 's' → logprob: -8.346673011779785
    9. 'isit' → logprob: -8.596673011779785
    10. 'isissez' → logprob: -8.721673011779785

Token 699: '_p' (ID: 1359)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.0890827178955078
    2. '_nombre' → logprob: -1.3390827178955078
    3. 'nombre' → logprob: -1.7140827178955078
    4. '=' → logprob: -1.7140827178955078
    5. '_des' → logprob: -4.214082717895508
    6. '(nombre' → logprob: -4.839082717895508
    7. '_de' → logprob: -5.214082717895508
    8. 'de' → logprob: -5.464082717895508
    9. 'des' → logprob: -6.089082717895508
    10. '_' → logprob: -6.089082717895508

Token 700: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.1264973133802414
    2. 'iece' → logprob: -3.376497268676758
    3. 'art' → logprob: -3.751497268676758
    4. 'laces' → logprob: -3.751497268676758
    5. 'erson' → logprob: -4.251497268676758
    6. 'i' → logprob: -4.626497268676758
    7. 'ie' → logprob: -5.751497268676758
    8. 'lace' → logprob: -5.751497268676758
    9. 'ar' → logprob: -6.376497268676758
    10. 'e' → logprob: -7.376497268676758

Token 701: '_vid' (ID: 189409)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13477453589439392
    2. '=' → logprob: -2.3847744464874268
    3. '_v' → logprob: -3.8847744464874268
    4. '_vid' → logprob: -5.509774684906006
    5. '_de' → logprob: -6.009774684906006
    6. 'vide' → logprob: -6.009774684906006
    7. '_des' → logprob: -6.259774684906006
    8. '   ' → logprob: -7.259774684906006
    9. '_' → logprob: -8.384774208068848
    10. '_nombre' → logprob: -8.384774208068848

Token 702: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.03881879895925522
    2. 'ues' → logprob: -3.288818836212158
    3. 'ides' → logprob: -8.288818359375
    4. 'ees' → logprob: -8.413818359375
    5. 'des' → logprob: -8.663818359375
    6. 'e' → logprob: -9.663818359375
    7. 'tes' → logprob: -10.788818359375
    8. 'er' → logprob: -11.538818359375
    9. 'u' → logprob: -12.038818359375
    10. 'ue' → logprob: -12.288818359375

Token 703: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11286319047212601
    2. '=' → logprob: -2.237863302230835
    3. '   ' → logprob: -10.237863540649414
    4. ' ' → logprob: -13.737863540649414
    5. '    ' → logprob: -14.737863540649414
    6. '  ' → logprob: -14.862863540649414
    7. ' ' → logprob: -15.112863540649414
    8. ' *=' → logprob: -15.112863540649414
    9. '＝' → logprob: -15.237863540649414
    10. '*=' → logprob: -15.362863540649414

Token 704: ' combinaison' (ID: 165933)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.00022165567497722805
    2. '   ' → logprob: -8.875221252441406
    3. ' combinaison' → logprob: -9.625221252441406
    4. 'com' → logprob: -11.625221252441406
    5. ' ' → logprob: -13.375221252441406
    6. 'arr' → logprob: -13.875221252441406
    7. '(' → logprob: -13.875221252441406
    8. 'combine' → logprob: -14.250221252441406
    9. '  ' → logprob: -14.750221252441406
    10. '    ' → logprob: -15.125221252441406

Token 705: '_mod' (ID: 15325)
  Prédit: '(nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nombre' → logprob: -0.20527595281600952
    2. 'mod' → logprob: -2.4552760124206543
    3. '_mod' → logprob: -2.4552760124206543
    4. 'nombre' → logprob: -4.580276012420654
    5. '(' → logprob: -5.830276012420654
    6. '(
' → logprob: -7.955276012420654
    7. '(numero' → logprob: -8.955275535583496
    8. '(n' → logprob: -8.955275535583496
    9. '_nombre' → logprob: -10.205275535583496
    10. '(total' → logprob: -11.580275535583496

Token 706: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.04514830932021141
    2. '(nombre' → logprob: -3.4201483726501465
    3. '(numero' → logprob: -4.9201483726501465
    4. 'odo' → logprob: -7.0451483726501465
    5. 'o' → logprob: -7.2951483726501465
    6. 'olo' → logprob: -7.5451483726501465
    7. 'Modulo' → logprob: -7.7951483726501465
    8. 'odule' → logprob: -8.670147895812988
    9. '(n' → logprob: -8.795147895812988
    10. ' modulo' → logprob: -8.795147895812988

Token 707: '(nombre' (ID: 124319)
  Prédit: '(nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nombre' → logprob: -0.01357380859553814
    2. 'nombre' → logprob: -4.76357364654541
    3. '(
' → logprob: -5.88857364654541
    4. '(' → logprob: -6.13857364654541
    5. '   ' → logprob: -11.51357364654541
    6. ' nombre' → logprob: -12.76357364654541
    7. '(
' → logprob: -13.63857364654541
    8. '(numero' → logprob: -13.76357364654541
    9. 'Nombre' → logprob: -13.88857364654541
    10. '_nombre' → logprob: -14.51357364654541

Token 708: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -6.277553620748222e-05
    2. '_p' → logprob: -10.625062942504883
    3. '_max' → logprob: -10.625062942504883
    4. 'elements' → logprob: -11.875062942504883
    5. 'max' → logprob: -12.875062942504883
    6. 'Elements' → logprob: -13.750062942504883
    7. '_total' → logprob: -14.000062942504883
    8. '_ELEMENTS' → logprob: -14.750062942504883
    9. '_' → logprob: -15.000062942504883
    10. 'p' → logprob: -15.250062942504883

Token 709: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -2.463036435074173e-05
    2. 'total' → logprob: -10.750024795532227
    3. '_' → logprob: -13.375024795532227
    4. 'otal' → logprob: -15.500024795532227
    5. 'Total' → logprob: -15.500024795532227
    6. '_t' → logprob: -15.625024795532227
    7. '```' → logprob: -15.625024795532227
    8. ' total' → logprob: -16.000024795532227
    9. '
' → logprob: -16.125024795532227
    10. ',total' → logprob: -16.250024795532227

Token 710: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025393941905349493
    2. ',n' → logprob: -6.502539157867432
    3. 'nombre' → logprob: -7.377539157867432
    4. '(nombre' → logprob: -8.37753963470459
    5. ',
' → logprob: -9.62753963470459
    6. ' ,' → logprob: -9.75253963470459
    7. '   ' → logprob: -10.75253963470459
    8. ' nombre' → logprob: -12.00253963470459
    9. ',k' → logprob: -12.50253963470459
    10. '(' → logprob: -12.87753963470459

Token 711: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.000215457082958892
    2. ' nombre' → logprob: -8.500215530395508
    3. '   ' → logprob: -11.375215530395508
    4. 'nom' → logprob: -15.625215530395508
    5. '(nombre' → logprob: -15.875215530395508
    6. '    ' → logprob: -16.375215530395508
    7. ' nombres' → logprob: -17.125215530395508
    8. 'Nombre' → logprob: -18.000215530395508
    9. '  ' → logprob: -18.125215530395508
    10. ' ' → logprob: -18.250215530395508

Token 712: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.003533201524987817
    2. 'pieces' → logprob: -6.253533363342285
    3. 'p' → logprob: -7.003533363342285
    4. '_elements' → logprob: -8.003533363342285
    5. 'de' → logprob: -8.753533363342285
    6. 'max' → logprob: -9.628533363342285
    7. 'nombre' → logprob: -9.878533363342285
    8. '_max' → logprob: -10.253533363342285
    9. 'elements' → logprob: -11.253533363342285
    10. '```' → logprob: -12.003533363342285

Token 713: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.00035786881926469505
    2. 'ices' → logprob: -8.375357627868652
    3. 'laces' → logprob: -10.375357627868652
    4. 'i' → logprob: -10.750357627868652
    5. 'ces' → logprob: -10.750357627868652
    6. 'ie' → logprob: -10.875357627868652
    7. 'iece' → logprob: -11.500357627868652
    8. 'pieces' → logprob: -12.125357627868652
    9. 'ies' → logprob: -12.625357627868652
    10. '
' → logprob: -12.875357627868652

Token 714: '_vid' (ID: 189409)
  Prédit: '_vid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vid' → logprob: -0.2542616128921509
    2. 'vid' → logprob: -1.5042616128921509
    3. 'vide' → logprob: -6.754261493682861
    4. '_v' → logprob: -7.004261493682861
    5. '_' → logprob: -9.87926197052002
    6. '```' → logprob: -10.12926197052002
    7. '_total' → logprob: -10.37926197052002
    8. 'v' → logprob: -10.37926197052002
    9. 'total' → logprob: -11.50426197052002
    10. '_tot' → logprob: -11.62926197052002

Token 715: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.3325175642967224
    2. 'ues' → logprob: -1.4575176239013672
    3. 'des' → logprob: -3.707517623901367
    4. 'ides' → logprob: -3.832517623901367
    5. 'tes' → logprob: -6.082517623901367
    6. 'oes' → logprob: -7.457517623901367
    7. 'res' → logprob: -8.832517623901367
    8. 'entes' → logprob: -9.457517623901367
    9. 'ees' → logprob: -9.582517623901367
    10. 'les' → logprob: -9.707517623901367

Token 716: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002581209992058575
    2. '   ' → logprob: -8.625258445739746
    3. ')
' → logprob: -9.875258445739746
    4. ')*' → logprob: -10.625258445739746
    5. ')
' → logprob: -14.000258445739746
    6. ' )' → logprob: -15.000258445739746
    7. ')

' → logprob: -15.250258445739746
    8. '<|end|>' → logprob: -16.00025749206543
    9. '*' → logprob: -16.25025749206543
    10. ')#' → logprob: -16.37525749206543

Token 717: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005548207554966211
    2. 'nombre' → logprob: -8.750555038452148
    3. '    
' → logprob: -8.750555038452148
    4. ')' → logprob: -9.125555038452148
    5. '<|end|>' → logprob: -9.875555038452148
    6. '+' → logprob: -10.750555038452148
    7. ' nombre' → logprob: -11.500555038452148
    8. '   ' → logprob: -11.625555038452148
    9. 'factor' → logprob: -11.750555038452148
    10. ',' → logprob: -12.375555038452148

Token 718: ' fac' (ID: 3513)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0167980194091797
    2. 'fac' (adapté à ' fac') → logprob: -1.3917980194091797
    3. 'nombre' → logprob: -1.6417980194091797
    4. 'f' → logprob: -1.8917980194091797
    5. 'fa' → logprob: -3.5167980194091797
    6. '#' → logprob: -5.64179801940918
    7. 'nb' → logprob: -5.89179801940918
    8. 'man' → logprob: -6.14179801940918
    9. 'fact' → logprob: -6.14179801940918
    10. 'calcul' → logprob: -7.51679801940918

Token 719: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.00016027313540689647
    2. 'con' → logprob: -9.375160217285156
    3. 'tion' → logprob: -10.750160217285156
    4. 'ond' → logprob: -12.000160217285156
    5. 'onnement' → logprob: -12.125160217285156
    6. 'a' → logprob: -12.375160217285156
    7. 'ons' → logprob: -12.625160217285156
    8. 'ron' → logprob: -12.625160217285156
    9. 'onner' → logprob: -12.625160217285156
    10. 'ont' → logprob: -13.000160217285156

Token 720: '_re' (ID: 3067)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05137752369046211
    2. '_de' → logprob: -3.051377534866333
    3. 'de' → logprob: -6.176377296447754
    4. '_d' → logprob: -8.551377296447754
    5. 'cho' → logprob: -10.176377296447754
    6. '_ch' → logprob: -10.676377296447754
    7. '   ' → logprob: -10.676377296447754
    8. '_part' → logprob: -10.801377296447754
    9. '_util' → logprob: -11.051377296447754
    10. '_dis' → logprob: -11.051377296447754

Token 721: 'part' (ID: 5815)
  Prédit: 'part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.001613769680261612
    2. 'partition' → logprob: -7.001613616943359
    3. 'm' → logprob: -8.87661361694336
    4. 'parer' → logprob: -9.25161361694336
    5. 'ster' → logprob: -9.62661361694336
    6. 'p' → logprob: -10.00161361694336
    7. 'g' → logprob: -10.25161361694336
    8. 'server' → logprob: -10.50161361694336
    9. 'placer' → logprob: -10.75161361694336
    10. 'plier' → logprob: -11.00161361694336

Token 722: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0002786167024169117
    2. 'ition' → logprob: -9.25027847290039
    3. 'tir' → logprob: -10.25027847290039
    4. '_ir' → logprob: -10.37527847290039
    5. '
' → logprob: -10.50027847290039
    6. '

' → logprob: -10.87527847290039
    7. '   ' → logprob: -11.50027847290039
    8. 'ion' → logprob: -11.62527847290039
    9. 'rir' → logprob: -12.00027847290039
    10. '_' → logprob: -12.25027847290039

Token 723: '_person' (ID: 53205)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32971394062042236
    2. '(nombre' → logprob: -2.079713821411133
    3. ' =' → logprob: -2.204713821411133
    4. 'nombre' → logprob: -3.329713821411133
    5. '=(' → logprob: -6.329713821411133
    6. '=n' → logprob: -6.704713821411133
    7. '(' → logprob: -6.829713821411133
    8. '_nombre' → logprob: -6.954713821411133
    9. '   ' → logprob: -7.204713821411133
    10. '_rest' → logprob: -7.454713821411133

Token 724: 'nes' (ID: 4382)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.5382024049758911
    2. 'nes' → logprob: -1.9132024049758911
    3. 'onnes' → logprob: -1.9132024049758911
    4. 'ages' → logprob: -2.6632022857666016
    5. 'sons' → logprob: -4.913202285766602
    6. 'aux' → logprob: -5.038202285766602
    7. 'ner' → logprob: -5.288202285766602
    8. 'nees' → logprob: -5.288202285766602
    9. 'son' → logprob: -5.538202285766602
    10. 'ons' → logprob: -5.663202285766602

Token 725: '_rest' (ID: 70749)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132784366607666
    2. ' =' → logprob: -1.3132784366607666
    3. '   ' → logprob: -12.063278198242188
    4. 'dans' → logprob: -13.063278198242188
    5. '=(' → logprob: -13.438278198242188
    6. '```' → logprob: -14.188278198242188
    7. '=
' → logprob: -14.438278198242188
    8. 'nombre' → logprob: -14.688278198242188
    9. '*=' → logprob: -14.813278198242188
    10. ' ' → logprob: -14.813278198242188

Token 726: 'antes' (ID: 5193)
  Prédit: 'antes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'antes' → logprob: -0.6738349795341492
    2. 'ies' → logprob: -0.7988349795341492
    3. 'ant' → logprob: -3.798835039138794
    4. 'ir' → logprob: -4.548834800720215
    5. 'ie' → logprob: -6.423834800720215
    6. 'ent' → logprob: -6.548834800720215
    7. '=' → logprob: -7.548834800720215
    8. 'ries' → logprob: -7.798834800720215
    9. 'ante' → logprob: -7.923834800720215
    10. 'r' → logprob: -8.173834800720215

Token 727: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34845462441444397
    2. '=' → logprob: -1.2234545946121216
    3. '   ' → logprob: -12.098454475402832
    4. ' ' → logprob: -14.223454475402832
    5. '*=' → logprob: -14.348454475402832
    6. '```' → logprob: -14.598454475402832
    7. ' *=' → logprob: -15.098454475402832
    8. '=
' → logprob: -15.348454475402832
    9. '=n' → logprob: -15.598454475402832
    10. ')' → logprob: -15.848454475402832

Token 728: ' combinaison' (ID: 165933)
  Prédit: 'comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comb' → logprob: -0.011314954608678818
    2. 'arr' → logprob: -4.886314868927002
    3. 'factor' → logprob: -6.511314868927002
    4. 'com' → logprob: -6.761314868927002
    5. 'pow' → logprob: -8.13631534576416
    6. 'fact' → logprob: -8.38631534576416
    7. ' combinaison' → logprob: -8.88631534576416
    8. '   ' → logprob: -9.01131534576416
    9. 'nombre' → logprob: -10.13631534576416
    10. 'fac' → logprob: -10.63631534576416

Token 729: '_mod' (ID: 15325)
  Prédit: '_mod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mod' → logprob: -0.00019209683523513377
    2. 'mod' → logprob: -8.750191688537598
    3. '(nombre' → logprob: -10.750191688537598
    4. '(n' → logprob: -11.875191688537598
    5. '(numero' → logprob: -14.000191688537598
    6. '_m' → logprob: -14.125191688537598
    7. '(' → logprob: -14.375191688537598
    8. 'nombre' → logprob: -14.500191688537598
    9. 'Modulo' → logprob: -14.625191688537598
    10. '_mode' → logprob: -15.375191688537598

Token 730: 'ulo' (ID: 5953)
  Prédit: 'ulo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulo' → logprob: -0.036897823214530945
    2. 'odule' → logprob: -4.036897659301758
    3. '(nombre' → logprob: -5.286897659301758
    4. 'od' → logprob: -5.411897659301758
    5. 'o' → logprob: -5.911897659301758
    6. 'Modulo' → logprob: -6.161897659301758
    7. '(numero' → logprob: -6.536897659301758
    8. '_mod' → logprob: -7.286897659301758
    9. ' modulo' → logprob: -7.661897659301758
    10. 'olo' → logprob: -8.161897659301758

Token 731: '(nombre' (ID: 124319)
  Prédit: '(nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nombre' → logprob: -0.48449942469596863
    2. '(
' → logprob: -0.984499454498291
    3. '(' → logprob: -4.734499454498291
    4. 'nombre' → logprob: -6.484499454498291
    5. '(
' → logprob: -10.609498977661133
    6. '   ' → logprob: -11.109498977661133
    7. ' nombre' → logprob: -12.109498977661133
    8. '(

' → logprob: -12.859498977661133
    9. '(numero' → logprob: -13.234498977661133
    10. '(nome' → logprob: -14.234498977661133

Token 732: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.0009125363430939615
    2. '_max' → logprob: -7.625912666320801
    3. '_total' → logprob: -8.0009126663208
    4. 'elements' → logprob: -9.7509126663208
    5. 'max' → logprob: -11.0009126663208
    6. '
' → logprob: -12.5009126663208
    7. 'Elements' → logprob: -12.8759126663208
    8. '(
' → logprob: -13.5009126663208
    9. '```' → logprob: -13.5009126663208
    10. 'total' → logprob: -14.0009126663208

Token 733: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.0006240377551876009
    2. 'total' → logprob: -7.625624179840088
    3. 'aux' → logprob: -9.25062370300293
    4. 'otal' → logprob: -10.37562370300293
    5. 'Total' → logprob: -13.00062370300293
    6. 'al' → logprob: -13.50062370300293
    7. ' total' → logprob: -13.75062370300293
    8. '```' → logprob: -14.25062370300293
    9. '_pos' → logprob: -14.37562370300293
    10. '_de' → logprob: -14.62562370300293

Token 734: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6052014827728271
    2. '(nombre' → logprob: -1.7302014827728271
    3. ',' → logprob: -2.230201482772827
    4. ' -' → logprob: -2.480201482772827
    5. 'nombre' → logprob: -2.855201482772827
    6. '(' → logprob: -4.605201721191406
    7. '   ' → logprob: -5.105201721191406
    8. '(
' → logprob: -5.480201721191406
    9. ',
' → logprob: -6.855201721191406
    10. ' nombre' → logprob: -6.855201721191406

Token 735: ' ' (ID: 220)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.06557778269052505
    2. '1' → logprob: -2.815577745437622
    3. '(nombre' → logprob: -6.065577983856201
    4. ' nombre' → logprob: -6.690577983856201
    5. '(' → logprob: -11.440577507019043
    6. ' ' → logprob: -11.690577507019043
    7. '   ' → logprob: -12.190577507019043
    8. '2' → logprob: -12.690577507019043
    9. ' nombres' → logprob: -13.565577507019043
    10. '```' → logprob: -13.565577507019043

Token 736: '1' (ID: 16)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.016314353793859482
    2. '1' → logprob: -4.141314506530762
    3. ' nombre' → logprob: -8.266314506530762
    4. 'pieces' → logprob: -11.391314506530762
    5. '(nombre' → logprob: -12.516314506530762
    6. ' ' → logprob: -13.016314506530762
    7. '   ' → logprob: -13.641314506530762
    8. 'piece' → logprob: -13.766314506530762
    9. 'Nombre' → logprob: -14.016314506530762
    10. 'nom' → logprob: -14.516314506530762

Token 737: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00033713103039190173
    2. ',
' → logprob: -8.875337600708008
    3. ',n' → logprob: -9.375337600708008
    4. ' ,' → logprob: -10.000337600708008
    5. '   ' → logprob: -10.125337600708008
    6. '(nombre' → logprob: -11.125337600708008
    7. 'nombre' → logprob: -12.125337600708008
    8. ',
' → logprob: -13.250337600708008
    9. '```' → logprob: -13.500337600708008
    10. ' nombre' → logprob: -14.375337600708008

Token 738: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.010391606949269772
    2. '   ' → logprob: -4.760391712188721
    3. ' nombre' → logprob: -6.385391712188721
    4. '    ' → logprob: -10.260391235351562
    5. '     ' → logprob: -11.135391235351562
    6. ' ' → logprob: -11.385391235351562
    7. '  ' → logprob: -11.385391235351562
    8. '(nombre' → logprob: -11.635391235351562
    9. '    
' → logprob: -12.885391235351562
    10. '       ' → logprob: -13.885391235351562

Token 739: '_p' (ID: 1359)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.4325413405895233
    2. 'max' → logprob: -1.3075413703918457
    3. '_p' → logprob: -2.6825413703918457
    4. 'p' → logprob: -5.057541370391846
    5. 'pieces' → logprob: -5.807541370391846
    6. '_elements' → logprob: -6.307541370391846
    7. 'elements' → logprob: -7.307541370391846
    8. 'de' → logprob: -8.932540893554688
    9. 'maximum' → logprob: -9.932540893554688
    10. '_de' → logprob: -10.057540893554688

Token 740: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.05292760580778122
    2. 'maximum' → logprob: -3.4279274940490723
    3. 'max' → logprob: -5.177927494049072
    4. 'iece' → logprob: -6.427927494049072
    5. 'ices' → logprob: -6.677927494049072
    6. 'ax' → logprob: -6.802927494049072
    7. '_max' → logprob: -6.802927494049072
    8. 'i' → logprob: -6.802927494049072
    9. 'Maximum' → logprob: -7.052927494049072
    10. 'pieces' → logprob: -7.052927494049072

Token 741: '_vid' (ID: 189409)
  Prédit: '_vid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vid' → logprob: -0.05269002914428711
    2. 'vid' → logprob: -3.052690029144287
    3. '_v' → logprob: -6.302690029144287
    4. 'vide' → logprob: -6.802690029144287
    5. '_total' → logprob: -7.802690029144287
    6. '_pos' → logprob: -8.177690505981445
    7. 'total' → logprob: -9.302690505981445
    8. '_tot' → logprob: -9.302690505981445
    9. '-' → logprob: -9.427690505981445
    10. '```' → logprob: -10.052690505981445

Token 742: 'es' (ID: 268)
  Prédit: 'ides'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ides' → logprob: -0.24351073801517487
    2. 'ues' → logprob: -1.6185107231140137
    3. 'es' → logprob: -4.368510723114014
    4. 'entes' → logprob: -6.243510723114014
    5. 'aux' → logprob: -6.493510723114014
    6. 'ux' → logprob: -7.743510723114014
    7. 'utes' → logprob: -8.868511199951172
    8. 'oes' → logprob: -8.993511199951172
    9. 'eux' → logprob: -8.993511199951172
    10. 'des' → logprob: -9.118511199951172

Token 743: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04854535683989525
    2. '-' → logprob: -3.4235453605651855
    3. ' -' → logprob: -4.4235453605651855
    4. '   ' → logprob: -6.0485453605651855
    5. ')
' → logprob: -8.048544883728027
    6. ' )' → logprob: -10.173544883728027
    7. '-n' → logprob: -11.298544883728027
    8. '-)' → logprob: -12.173544883728027
    9. '),' → logprob: -12.486044883728027
    10. ' ' → logprob: -12.548544883728027

Token 744: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003655075328424573
    2. 'nombre' → logprob: -5.878654956817627
    3. ' nombre' → logprob: -7.878654956817627
    4. '    
' → logprob: -8.378655433654785
    5. ')' → logprob: -9.628655433654785
    6. '```' → logprob: -9.753655433654785
    7. '   ' → logprob: -10.003655433654785
    8. '*' → logprob: -10.878655433654785
    9. '(nombre' → logprob: -11.003655433654785
    10. '_nombre' → logprob: -12.253655433654785

Token 745: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' (adapté à ' nombre') → logprob: -0.04867525398731232
    2. '   ' → logprob: -3.048675298690796
    3. 'fact' → logprob: -9.923675537109375
    4. ' nombre' → logprob: -11.548675537109375
    5. '    
' → logprob: -11.923675537109375
    6. '```' → logprob: -12.173675537109375
    7. '(nombre' → logprob: -12.423675537109375
    8. ' ' → logprob: -12.673675537109375
    9. 'factor' → logprob: -12.798675537109375
    10. '  ' → logprob: -13.423675537109375

Token 746: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -1.664371848164592e-05
    2. 'de' → logprob: -11.625016212463379
    3. '_' → logprob: -12.375016212463379
    4. '_total' → logprob: -13.500016212463379
    5. '_dis' → logprob: -13.625016212463379
    6. '	de' → logprob: -15.875016212463379
    7. '_per' → logprob: -16.000017166137695
    8. '=' → logprob: -16.500017166137695
    9. 'De' → logprob: -16.625017166137695
    10. '_d' → logprob: -17.125017166137695

Token 747: '_dis' (ID: 15018)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -0.4740966856479645
    2. '_dis' → logprob: -0.9740966558456421
    3. '	dis' → logprob: -10.974096298217773
    4. '(dis' → logprob: -14.724096298217773
    5. 'de' → logprob: -14.974096298217773
    6. 'import' → logprob: -15.599096298217773
    7. 'd' → logprob: -15.724096298217773
    8. '#' → logprob: -15.974096298217773
    9. '.dis' → logprob: -16.099096298217773
    10. '-dis' → logprob: -16.224096298217773

Token 748: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.00018387178715784103
    2. '_positions' → logprob: -9.625184059143066
    3. 'options' → logprob: -10.625184059143066
    4. 'os' → logprob: -10.750184059143066
    5. 'tributions' → logprob: -11.250184059143066
    6. 'post' → logprob: -11.250184059143066
    7. '#' → logprob: -11.625184059143066
    8. 'is' → logprob: -12.125184059143066
    9. 'e' → logprob: -12.375184059143066
    10. 'Positions' → logprob: -12.750184059143066

Token 749: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.0024855269584804773
    2. '_possible' → logprob: -6.002485752105713
    3. '_' → logprob: -12.377485275268555
    4. 'pos' → logprob: -13.127485275268555
    5. 'poss' → logprob: -13.377485275268555
    6. '=' → logprob: -14.752485275268555
    7. 'possible' → logprob: -14.877485275268555
    8. '```' → logprob: -15.127485275268555
    9. '_=' → logprob: -15.752485275268555
    10. '\' → logprob: -16.127485275268555

Token 750: 's' (ID: 82)
  Prédit: 'ibles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibles' → logprob: -0.2033877670764923
    2. 's' → logprob: -1.95338773727417
    3. 'sible' → logprob: -3.20338773727417
    4. 'ible' → logprob: -6.45338773727417
    5. '```' → logprob: -11.703388214111328
    6. 'b' → logprob: -12.078388214111328
    7. '1' → logprob: -12.203388214111328
    8. '
' → logprob: -12.453388214111328
    9. 'bles' → logprob: -12.703388214111328
    10. '[' → logprob: -13.078388214111328

Token 751: 'ibles' (ID: 12234)
  Prédit: 'ibles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibles' → logprob: -0.003241762751713395
    2. 'ible' → logprob: -5.753241539001465
    3. 'ibes' → logprob: -10.003241539001465
    4. 'ib' → logprob: -12.128241539001465
    5. 'bles' → logprob: -12.253241539001465
    6. 'iles' → logprob: -12.753241539001465
    7. 'iples' → logprob: -13.128241539001465
    8. '```' → logprob: -13.878241539001465
    9. 'ibl' → logprob: -14.503241539001465
    10. 'i' → logprob: -14.503241539001465

Token 752: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1949869990348816
    2. ' =' → logprob: -2.1949870586395264
    3. '*=' → logprob: -3.4449870586395264
    4. '+=' → logprob: -4.194986820220947
    5. ' *=' → logprob: -4.194986820220947
    6. ' +=' → logprob: -5.694986820220947
    7. '   ' → logprob: -8.069987297058105
    8. '=(' → logprob: -10.444987297058105
    9. '*' → logprob: -11.194987297058105
    10. ' ' → logprob: -11.819987297058105

Token 753: ' fac' (ID: 3513)
  Prédit: '(f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.4518503248691559
    2. 'f' → logprob: -1.0768502950668335
    3. 'fac' → logprob: -4.701850414276123
    4. '(
' → logprob: -4.951850414276123
    5. '(' → logprob: -6.076850414276123
    6. ' fac' → logprob: -6.451850414276123
    7. ' (' → logprob: -6.826850414276123
    8. '   ' → logprob: -7.076850414276123
    9. 'fa' → logprob: -8.201849937438965
    10. '((' → logprob: -9.326849937438965

Token 754: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -5.438573680294212e-06
    2. '
' → logprob: -13.250005722045898
    3. '```' → logprob: -14.500005722045898
    4. '#' → logprob: -14.625005722045898
    5. '``' → logprob: -15.000005722045898
    6. 'con' → logprob: -15.125005722045898
    7. '{' → logprob: -15.250005722045898
    8. '[' → logprob: -15.250005722045898
    9. '

' → logprob: -15.875005722045898
    10. 'он' → logprob: -15.875005722045898

Token 755: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.320199877838604e-07
    2. '‌' → logprob: -15.875
    3. '_de' → logprob: -16.125
    4. 'de' → logprob: -17.125
    5. 'cho' → logprob: -17.25
    6. '_CHO' → logprob: -17.25
    7. '\' → logprob: -18.0
    8. '_ch' → logprob: -18.375
    9. ' choisir' → logprob: -18.375
    10. '```' → logprob: -18.375

Token 756: 'cho' (ID: 2153)
  Prédit: 'cho'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cho' → logprob: -5.88418151892256e-05
    2. 're' → logprob: -10.750059127807617
    3. 'chooser' → logprob: -11.375059127807617
    4. '_' → logprob: -12.250059127807617
    5. 'chercher' → logprob: -12.250059127807617
    6. ' choisir' → logprob: -12.250059127807617
    7. 'chos' → logprob: -12.875059127807617
    8. 'changer' → logprob: -13.250059127807617
    9. 'Cho' → logprob: -13.875059127807617
    10. '
' → logprob: -14.000059127807617

Token 757: 'isir' (ID: 104403)
  Prédit: 'isir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isir' → logprob: -4.7994282795116305e-05
    2. 'sir' → logprob: -10.12504768371582
    3. 'is' → logprob: -13.25004768371582
    4. 'isissez' → logprob: -14.25004768371582
    5. '[' → logprob: -14.50004768371582
    6. '#' → logprob: -15.00004768371582
    7. '_' → logprob: -15.00004768371582
    8. 'ir' → logprob: -15.00004768371582
    9. 'isira' → logprob: -15.00004768371582
    10. '   ' → logprob: -15.12504768371582

Token 758: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -1.6405310816480778e-05
    2. '_' → logprob: -11.125016212463379
    3. '```' → logprob: -14.625016212463379
    4. ' _' → logprob: -15.250016212463379
    5. '...' → logprob: -15.625016212463379
    6. '_pos' → logprob: -15.750016212463379
    7. '‌' → logprob: -16.500017166137695
    8. 'p' → logprob: -16.625017166137695
    9. 'des' → logprob: -16.875017166137695
    10. '\' → logprob: -16.875017166137695

Token 759: 'ieces' (ID: 44654)
  Prédit: 'ieces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ieces' → logprob: -0.0013978567440062761
    2. 'ier' → logprob: -7.251398086547852
    3. 'ices' → logprob: -8.626398086547852
    4. 'i' → logprob: -9.001398086547852
    5. 'iece' → logprob: -9.001398086547852
    6. 'iec' → logprob: -9.626398086547852
    7. 'ie' → logprob: -10.001398086547852
    8. '
' → logprob: -10.626398086547852
    9. 'er' → logprob: -10.876398086547852
    10. 'ces' → logprob: -11.001398086547852

Token 760: '_vid' (ID: 189409)
  Prédit: '_vid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vid' → logprob: -0.0045938920229673386
    2. 'vid' → logprob: -6.004593849182129
    3. '_v' → logprob: -6.254593849182129
    4. 'vide' → logprob: -9.879593849182129
    5. '_' → logprob: -10.129593849182129
    6. 'es' → logprob: -10.254593849182129
    7. '_pos' → logprob: -10.504593849182129
    8. 's' → logprob: -10.879593849182129
    9. '```' → logprob: -11.754593849182129
    10. 'v' → logprob: -12.629593849182129

Token 761: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.12103521078824997
    2. 'ues' → logprob: -2.246035099029541
    3. 'ides' → logprob: -4.871035099029541
    4. 'u' → logprob: -8.9960355758667
    5. 'tes' → logprob: -9.3710355758667
    6. 'des' → logprob: -9.6210355758667
    7. 'ent' → logprob: -10.3710355758667
    8. 'res' → logprob: -10.3710355758667
    9. 'us' → logprob: -10.7460355758667
    10. 'id' → logprob: -10.7460355758667

Token 762: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08908069133758545
    2. '*' → logprob: -2.464080810546875
    3. '   ' → logprob: -9.214080810546875
    4. ' ' → logprob: -10.839080810546875
    5. ' *
' → logprob: -11.464080810546875
    6. ' ' → logprob: -12.339080810546875
    7. '*
' → logprob: -12.464080810546875
    8. '
' → logprob: -14.589080810546875
    9. '```' → logprob: -14.714080810546875
    10. '  ' → logprob: -14.964080810546875

Token 763: ' fac' (ID: 3513)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.041903041303157806
    2. 'fac' → logprob: -3.291903018951416
    3. 'fa' → logprob: -5.791903018951416
    4. ' fac' → logprob: -7.666903018951416
    5. '(f' → logprob: -9.041903495788574
    6. 'fact' → logprob: -10.041903495788574
    7. 'nombre' → logprob: -10.166903495788574
    8. 'factor' → logprob: -11.041903495788574
    9. '   ' → logprob: -11.291903495788574
    10. 'face' → logprob: -11.291903495788574

Token 764: 'on' (ID: 263)
  Prédit: 'on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -8.2994620242971e-06
    2. 'con' → logprob: -13.000008583068848
    3. 'ons' → logprob: -14.375008583068848
    4. '_on' → logprob: -14.375008583068848
    5. '
' → logprob: -14.500008583068848
    6. '```' → logprob: -14.500008583068848
    7. '_' → logprob: -14.625008583068848
    8. '#' → logprob: -14.750008583068848
    9. 'çon' → logprob: -15.375008583068848
    10. '[' → logprob: -15.625008583068848

Token 765: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.0031478889286518097
    2. '_' → logprob: -6.378148078918457
    3. '_de' → logprob: -6.628148078918457
    4. 're' → logprob: -9.253148078918457
    5. 'de' → logprob: -10.753148078918457
    6. '\' → logprob: -14.253148078918457
    7. '...' → logprob: -14.753148078918457
    8. '_rep' → logprob: -14.753148078918457
    9. '_r' → logprob: -14.878148078918457
    10. '_rest' → logprob: -15.003148078918457

Token 766: 'part' (ID: 5815)
  Prédit: 'part'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.0005082341376692057
    2. 'partition' → logprob: -7.8755083084106445
    3. 'pat' → logprob: -9.875508308410645
    4. 'dis' → logprob: -10.750508308410645
    5. 'par' → logprob: -12.250508308410645
    6. '
' → logprob: -12.375508308410645
    7. 'parts' → logprob: -12.375508308410645
    8. 'parer' → logprob: -12.375508308410645
    9. '

' → logprob: -12.625508308410645
    10. 'partner' → logprob: -13.375508308410645

Token 767: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.0029643885791301727
    2. 'oir' → logprob: -7.002964496612549
    3. 'rir' → logprob: -7.377964496612549
    4. 'ur' → logprob: -7.877964496612549
    5. 'tir' → logprob: -7.877964496612549
    6. '_de' → logprob: -9.62796401977539
    7. '_ir' → logprob: -9.62796401977539
    8. '
' → logprob: -9.75296401977539
    9. 'agir' → logprob: -10.12796401977539
    10. 'nir' → logprob: -10.50296401977539

Token 768: '_person' (ID: 53205)
  Prédit: '_person'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_person' → logprob: -0.0006620417116209865
    2. 'er' → logprob: -8.125661849975586
    3. '_pos' → logprob: -9.000661849975586
    4. 'person' → logprob: -9.375661849975586
    5. '_p' → logprob: -10.250661849975586
    6. '_nombre' → logprob: -10.750661849975586
    7. '...' → logprob: -11.125661849975586
    8. 'nombre' → logprob: -11.250661849975586
    9. '```' → logprob: -11.250661849975586
    10. '_' → logprob: -11.500661849975586

Token 769: 'nes' (ID: 4382)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.18116217851638794
    2. 'nes' → logprob: -1.8061621189117432
    3. 'ables' → logprob: -7.431162357330322
    4. 'possible' → logprob: -9.181161880493164
    5. 'ees' → logprob: -9.181161880493164
    6. 'les' → logprob: -9.431161880493164
    7. 's' → logprob: -9.681161880493164
    8. 'bes' → logprob: -9.681161880493164
    9. '_possible' → logprob: -9.681161880493164
    10. 'nees' → logprob: -9.806161880493164

Token 770: '_rest' (ID: 70749)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.061900340020656586
    2. '_vid' → logprob: -3.3119003772735596
    3. 'rest' → logprob: -4.8119001388549805
    4. '_rest' → logprob: -5.4369001388549805
    5. 'vid' → logprob: -5.5619001388549805
    6. 'pos' → logprob: -5.5619001388549805
    7. 'possible' → logprob: -7.0619001388549805
    8. 'poss' → logprob: -7.4369001388549805
    9. 'vide' → logprob: -7.8119001388549805
    10. '_possible' → logprob: -7.9369001388549805

Token 771: 'antes' (ID: 5193)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.030410058796405792
    2. 'antes' → logprob: -3.655410051345825
    3. 'ables' → logprob: -6.030410289764404
    4. 'ues' → logprob: -6.530410289764404
    5. 'iques' → logprob: -9.280409812927246
    6. 'tes' → logprob: -10.405409812927246
    7. 'ees' → logprob: -11.530409812927246
    8. '_es' → logprob: -11.530409812927246
    9. 'able' → logprob: -11.655409812927246
    10. 'ives' → logprob: -11.655409812927246

Token 772: '

' (ID: 279)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1666969358921051
    2. '%' → logprob: -2.1666970252990723
    3. '   ' → logprob: -4.041697025299072
    4. ')' → logprob: -4.541697025299072
    5. ' %=' → logprob: -5.791697025299072
    6. '%n' → logprob: -6.166697025299072
    7. ')%' → logprob: -6.416697025299072
    8. '<|end|>' → logprob: -6.916697025299072
    9. ' ' → logprob: -7.416697025299072
    10. ' 
' → logprob: -7.416697025299072

Token 773: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8551508188247681
    2. '%' → logprob: -0.9801508188247681
    3. '
' → logprob: -2.3551506996154785
    4. ' %' → logprob: -3.7301506996154785
    5. 'nombre' → logprob: -3.7301506996154785
    6. ')' → logprob: -4.1051506996154785
    7. '```' → logprob: -4.7301506996154785
    8. '<|end|>' → logprob: -4.8551506996154785
    9. '   ' → logprob: -4.9801506996154785
    10. 'number' → logprob: -5.3551506996154785

Token 774: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.27140966057777405
    2. '_' → logprob: -2.271409749984741
    3. ' =' → logprob: -2.771409749984741
    4. 'é' → logprob: -3.646409749984741
    5. '_nombre' → logprob: -3.646409749984741
    6. 'ats' → logprob: -5.396409511566162
    7. '_at' → logprob: -5.396409511566162
    8. '=' → logprob: -5.896409511566162
    9. '_=' → logprob: -5.896409511566162
    10. '__' → logprob: -6.896409511566162

Token 775: '_final' (ID: 46468)
  Prédit: ' %='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.5142634510993958
    2. '%' → logprob: -1.389263391494751
    3. '%=' → logprob: -2.764263391494751
    4. ' %' → logprob: -3.139263391494751
    5. '=' → logprob: -3.639263391494751
    6. ' =' → logprob: -4.13926362991333
    7. '_mod' → logprob: -6.26426362991333
    8. '_' → logprob: -6.51426362991333
    9. ')' → logprob: -8.639263153076172
    10. ' +=' → logprob: -8.889263153076172

Token 776: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6196110248565674
    2. ' %=' → logprob: -1.1196110248565674
    3. '=' → logprob: -2.2446110248565674
    4. ' +=' → logprob: -4.494610786437988
    5. '%' → logprob: -4.869610786437988
    6. '%=' → logprob: -4.994610786437988
    7. ' %' → logprob: -5.744610786437988
    8. '+=' → logprob: -8.869610786437988
    9. ' ' → logprob: -8.994610786437988
    10. ')' → logprob: -9.619610786437988

Token 777: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.0007157695363275707
    2. ' nombre' → logprob: -7.250715732574463
    3. '(nombre' → logprob: -12.250716209411621
    4. 'result' → logprob: -14.125716209411621
    5. 'nom' → logprob: -15.750716209411621
    6. 'Nombre' → logprob: -16.625715255737305
    7. 'n' → logprob: -16.625715255737305
    8. '_nombre' → logprob: -16.875715255737305
    9. ' nombres' → logprob: -17.500715255737305
    10. '   ' → logprob: -18.125715255737305

Token 778: '_de' (ID: 5047)
  Prédit: '_de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -5.5577775128767826e-06
    2. 'de' → logprob: -12.500005722045898
    3. '_' → logprob: -14.000005722045898
    4. '_elements' → logprob: -14.000005722045898
    5. '\' → logprob: -17.8750057220459
    6. '	de' → logprob: -18.1250057220459
    7. '_des' → logprob: -18.3750057220459
    8. '_DE' → logprob: -18.3750057220459
    9. ' _' → logprob: -18.3750057220459
    10. ' de' → logprob: -18.5000057220459

Token 779: '_dis' (ID: 15018)
  Prédit: 'dis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dis' → logprob: -1.723973582556937e-05
    2. '_dis' → logprob: -11.000017166137695
    3. 'de' → logprob: -14.875017166137695
    4. 'positions' → logprob: -16.125017166137695
    5. '	dis' → logprob: -18.250017166137695
    6. ' dispositions' → logprob: -18.375017166137695
    7. '-dis' → logprob: -18.500017166137695
    8. 'config' → logprob: -18.875017166137695
    9. 'd' → logprob: -19.000017166137695
    10. '
' → logprob: -19.125017166137695

Token 780: 'positions' (ID: 32297)
  Prédit: 'positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -3.5954712075181305e-05
    2. '_positions' → logprob: -10.875036239624023
    3. 'tributions' → logprob: -12.250036239624023
    4. 'post' → logprob: -12.875036239624023
    5. 'options' → logprob: -12.875036239624023
    6. '
' → logprob: -13.625036239624023
    7. 'Positions' → logprob: -13.750036239624023
    8. 't' → logprob: -14.500036239624023
    9. '{' → logprob: -14.625036239624023
    10. 'ptions' → logprob: -14.625036239624023

Token 781: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.05115498974919319
    2. '_possible' → logprob: -3.0511550903320312
    3. 'pos' → logprob: -6.426155090332031
    4. 'possible' → logprob: -7.176155090332031
    5. 'poss' → logprob: -8.676155090332031
    6. '_' → logprob: -12.926155090332031
    7. 'posit' → logprob: -13.426155090332031
    8. '```' → logprob: -13.801155090332031
    9. '_positions' → logprob: -13.926155090332031
    10. ' possibles' → logprob: -13.926155090332031

Token 782: 's' (ID: 82)
  Prédit: 'ibles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibles' → logprob: -0.0008795426110737026
    2. 's' → logprob: -7.375879764556885
    3. 'ables' → logprob: -8.750879287719727
    4. 'sible' → logprob: -10.000879287719727
    5. 'ible' → logprob: -10.375879287719727
    6. 'iles' → logprob: -12.000879287719727
    7. 'ibes' → logprob: -12.500879287719727
    8. 'bles' → logprob: -13.125879287719727
    9. 'iples' → logprob: -13.375879287719727
    10. '
' → logprob: -13.625879287719727

Token 783: 'ibles' (ID: 12234)
  Prédit: 'ibles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibles' → logprob: -0.008845245465636253
    2. 'ible' → logprob: -4.758845329284668
    3. 'bles' → logprob: -8.883845329284668
    4. 'ibes' → logprob: -9.508845329284668
    5. 'iles' → logprob: -11.758845329284668
    6. 'ib' → logprob: -12.883845329284668
    7. 'ble' → logprob: -13.383845329284668
    8. 'es' → logprob: -13.633845329284668
    9. 'b' → logprob: -13.883845329284668
    10. '
' → logprob: -14.383845329284668

Token 784: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6932111382484436
    2. ' %' → logprob: -0.6932111382484436
    3. '
' → logprob: -10.068211555480957
    4. ' ' → logprob: -12.318211555480957
    5. '```' → logprob: -12.318211555480957
    6. 'print' → logprob: -12.443211555480957
    7. ' ' → logprob: -12.943211555480957
    8. '%
' → logprob: -13.318211555480957
    9. '%A' → logprob: -13.943211555480957
    10. ')' → logprob: -14.568211555480957

Token 785: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.676292231422849e-05
    2. ' MOD' → logprob: -11.000017166137695
    3. 'MO' → logprob: -19.500017166137695
    4. '   ' → logprob: -21.000017166137695
    5. '_MOD' → logprob: -21.125017166137695
    6. '```' → logprob: -21.500017166137695
    7. '.MOD' → logprob: -22.000017166137695
    8. ' ' → logprob: -22.625017166137695
    9. '  ' → logprob: -23.875017166137695
    10. '100' → logprob: -24.125017166137695

Token 786: 'ULO' (ID: 63916)
  Prédit: 'ULO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ULO' → logprob: -0.002512166043743491
    2. 'O' → logprob: -6.002511978149414
    3. 'OU' → logprob: -10.502511978149414
    4. 'ULE' → logprob: -13.002511978149414
    5. 'U' → logprob: -13.877511978149414
    6. 'ODO' → logprob: -14.252511978149414
    7. '```' → logprob: -14.252511978149414
    8. 'OL' → logprob: -14.377511978149414
    9. ' modulo' → logprob: -14.877511978149414
    10. 'UL' → logprob: -14.877511978149414

Token 787: '_CONSTANT' (ID: 115083)
  Prédit: '_CONSTANT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CONSTANT' → logprob: -0.0007360121817328036
    2. '_CONST' → logprob: -7.250736236572266
    3. '_constant' → logprob: -11.125736236572266
    4. '_' → logprob: -11.875736236572266
    5. '_CON' → logprob: -13.000736236572266
    6. '_FINAL' → logprob: -15.000736236572266
    7. '_CO' → logprob: -15.375736236572266
    8. '```' → logprob: -15.375736236572266
    9. 'const' → logprob: -15.500736236572266
    10. ' _' → logprob: -15.625736236572266

Token 788: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00028135839966125786
    2. '```' → logprob: -8.87528133392334
    3. '
' → logprob: -9.00028133392334
    4. '<|end|>' → logprob: -11.75028133392334
    5. ' print' → logprob: -11.87528133392334
    6. '  
' → logprob: -14.00028133392334
    7. '``' → logprob: -14.37528133392334
    8. '(print' → logprob: -14.37528133392334
    9. '.print' → logprob: -15.00028133392334
    10. '[' → logprob: -15.62528133392334

Token 789: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.625866030342877e-05
    2. '```' → logprob: -9.375085830688477
    3. ' print' → logprob: -14.375085830688477
    4. '``' → logprob: -15.000085830688477
    5. '(print' → logprob: -15.125085830688477
    6. '
' → logprob: -15.750085830688477
    7. '#print' → logprob: -18.125085830688477
    8. '.print' → logprob: -18.875085830688477
    9. '<|end|>' → logprob: -19.000085830688477
    10. '\' → logprob: -19.500085830688477

Token 790: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.00012773419439326972
    2. '(' → logprob: -9.000127792358398
    3. '(res' → logprob: -12.750127792358398
    4. '(resultado' → logprob: -13.750127792358398
    5. 'result' → logprob: -15.750127792358398
    6. ' (' → logprob: -16.3751277923584
    7. '(rest' → logprob: -16.7501277923584
    8. '(ret' → logprob: -18.3751277923584
    9. '(results' → logprob: -18.5001277923584
    10. '(
' → logprob: -18.7501277923584

Token 791: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.0006874137907288969
    2. '_final' → logprob: -7.875687599182129
    3. 't' → logprob: -8.250687599182129
    4. 'a' → logprob: -11.125687599182129
    5. 'final' → logprob: -11.125687599182129
    6. '_result' → logprob: -11.875687599182129
    7. 'result' → logprob: -11.875687599182129
    8. '_at' → logprob: -14.375687599182129
    9. 'ats' → logprob: -14.625687599182129
    10. 'al' → logprob: -14.625687599182129

Token 792: '_final' (ID: 46468)
  Prédit: '_final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_final' → logprob: -0.0001049736310960725
    2. ')_' → logprob: -9.625104904174805
    3. 'final' → logprob: -10.500104904174805
    4. ')' → logprob: -11.625104904174805
    5. ' _' → logprob: -14.375104904174805
    6. '_result' → logprob: -14.875104904174805
    7. '_fin' → logprob: -15.000104904174805
    8. '```' → logprob: -15.375104904174805
    9. 'Final' → logprob: -15.500104904174805
    10. ' final' → logprob: -16.125104904174805

Token 793: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.706686690449715e-05
    2. '
' → logprob: -10.625066757202148
    3. '<|end|>' → logprob: -11.375066757202148
    4. '```' → logprob: -11.750066757202148
    5. '()' → logprob: -11.875066757202148
    6. ')
' → logprob: -12.125066757202148
    7. '())' → logprob: -12.250066757202148
    8. ' )' → logprob: -12.625066757202148
    9. '(' → logprob: -13.875066757202148
    10. '}' → logprob: -14.750066757202148


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 791
Tokens correctement prédits (1ère position, stricte): 332
Tokens correctement prédits (1ère position, avec adaptation): 342
Tokens correctement prédits (top 10): 586
Précision stricte (1ère position): 41.97%
Précision adaptée (1ère position): 43.24%
Précision (top 10): 74.08%
================================================================================
