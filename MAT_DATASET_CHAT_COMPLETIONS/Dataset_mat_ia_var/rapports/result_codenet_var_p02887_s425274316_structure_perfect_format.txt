================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
s = input()

result = 1
for i in range(1, n):
    if s[i] != s[i - 1]:
        result += 1

print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004278083215467632
    2. ''' → logprob: -8.625428199768066
    3. '('' → logprob: -9.375428199768066
    4. '(n' → logprob: -9.875428199768066
    5. '```' → logprob: -10.375428199768066
    6. '`' → logprob: -10.750428199768066
    7. '("("' → logprob: -11.125428199768066
    8. '(
' → logprob: -11.125428199768066
    9. ')' → logprob: -11.750428199768066
    10. '()' → logprob: -12.250428199768066

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5321194529533386
    2. ')' → logprob: -0.9071194529533386
    3. '()' → logprob: -5.157119274139404
    4. '())' → logprob: -6.157119274139404
    5. '(
' → logprob: -8.157119750976562
    6. '```' → logprob: -9.157119750976562
    7. '('' → logprob: -9.532119750976562
    8. '')' → logprob: -9.532119750976562
    9. '")' → logprob: -9.657119750976562
    10. '))' → logprob: -10.282119750976562

Token 5: 's' (ID: 82)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.1005412340164185
    2. 'i' → logprob: -1.6005412340164185
    3. 'for' → logprob: -1.6005412340164185
    4. 's' → logprob: -2.850541114807129
    5. '*' → logprob: -3.100541114807129
    6. 'x' → logprob: -3.600541114807129
    7. 'a' → logprob: -3.850541114807129
    8. ')' → logprob: -3.850541114807129
    9. '#' → logprob: -4.225541114807129
    10. ' ' → logprob: -4.350541114807129

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9085284471511841
    2. 'um' → logprob: -1.408528447151184
    3. '[' → logprob: -2.0335283279418945
    4. '=' → logprob: -2.2835283279418945
    5. '.' → logprob: -2.6585283279418945
    6. 'u' → logprob: -4.6585283279418945
    7. 'tr' → logprob: -4.9085283279418945
    8. ' +=' → logprob: -5.2835283279418945
    9. '[i' → logprob: -5.9085283279418945
    10. '_' → logprob: -5.9085283279418945

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.24063017964363098
    2. ' input' → logprob: -1.8656301498413086
    3. '""' → logprob: -3.2406301498413086
    4. '''' → logprob: -4.490630149841309
    5. '"' → logprob: -5.990630149841309
    6. ''' → logprob: -6.490630149841309
    7. '0' → logprob: -6.740630149841309
    8. ' ""' → logprob: -6.865630149841309
    9. ' ''' → logprob: -7.115630149841309
    10. ' ' → logprob: -7.365630149841309

Token 8: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0037087430246174335
    2. ''' → logprob: -6.628708839416504
    3. '('' → logprob: -6.878708839416504
    4. '()' → logprob: -7.753708839416504
    5. '"' → logprob: -8.378708839416504
    6. ')' → logprob: -8.628708839416504
    7. '`' → logprob: -8.878708839416504
    8. '(
' → logprob: -9.003708839416504
    9. '("("' → logprob: -9.628708839416504
    10. ' (' → logprob: -10.128708839416504

Token 9: 'result' (ID: 2521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6416611671447754
    2. 'count' → logprob: -1.3916611671447754
    3. 'if' → logprob: -2.2666611671447754
    4. 'result' → logprob: -3.1416611671447754
    5. 'c' → logprob: -3.6416611671447754
    6. 'f' → logprob: -4.516661167144775
    7. 'd' → logprob: -4.516661167144775
    8. 'i' → logprob: -4.641661167144775
    9. 'a' → logprob: -5.391661167144775
    10. 't' → logprob: -5.641661167144775

Token 10: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7721405625343323
    2. ' =' → logprob: -0.8971405625343323
    3. '_' → logprob: -2.1471405029296875
    4. '[' → logprob: -4.5221405029296875
    5. '.' → logprob: -7.2721405029296875
    6. ' ' → logprob: -7.6471405029296875
    7. 's' → logprob: -7.7721405029296875
    8. '[:]' → logprob: -8.147140502929688
    9. '```' → logprob: -9.022140502929688
    10. '.append' → logprob: -9.397140502929688

Token 11: ' ' (ID: 220)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.9563344717025757
    2. ' ' → logprob: -1.2063344717025757
    3. '0' → logprob: -1.8313344717025757
    4. ' ""' → logprob: -3.0813345909118652
    5. '[]' → logprob: -3.2063345909118652
    6. '""' → logprob: -3.4563345909118652
    7. ' ''' → logprob: -4.581334590911865
    8. 's' → logprob: -5.206334590911865
    9. ' s' → logprob: -5.206334590911865
    10. 'set' → logprob: -5.581334590911865

Token 12: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6669167280197144
    2. '""' → logprob: -1.2919167280197144
    3. '[]' → logprob: -2.166916847229004
    4. '''' → logprob: -2.541916847229004
    5. 's' → logprob: -4.916916847229004
    6. 'set' → logprob: -5.041916847229004
    7. '"' → logprob: -6.291916847229004
    8. '{}' → logprob: -6.916916847229004
    9. 'sum' → logprob: -7.666916847229004
    10. '[' → logprob: -7.791916847229004

Token 13: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8283730745315552
    2. '*' → logprob: -1.4533730745315552
    3. 'for' → logprob: -1.9533730745315552
    4. ' ' → logprob: -3.0783729553222656
    5. ' for' → logprob: -3.0783729553222656
    6. '_' → logprob: -4.078372955322266
    7. ' 
' → logprob: -4.203372955322266
    8. '<|end|>' → logprob: -4.453372955322266
    9. '0' → logprob: -4.578372955322266
    10. '
' → logprob: -4.578372955322266

Token 14: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.41031044721603394
    2. '*' → logprob: -2.1603105068206787
    3. ' for' → logprob: -2.1603105068206787
    4. '_' → logprob: -3.2853105068206787
    5. 'i' → logprob: -3.9103105068206787
    6. 'f' → logprob: -4.4103102684021
    7. ' ' → logprob: -4.5353102684021
    8. '=' → logprob: -5.0353102684021
    9. ',' → logprob: -6.0353102684021
    10. ' 
' → logprob: -6.0353102684021

Token 15: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23911496996879578
    2. ' i' → logprob: -1.6141149997711182
    3. '_' → logprob: -4.864114761352539
    4. ' _' → logprob: -5.239114761352539
    5. 'i' → logprob: -8.114114761352539
    6. '  ' → logprob: -8.489114761352539
    7. ' ' → logprob: -10.364114761352539
    8. ' s' → logprob: -11.739114761352539
    9. ' ‌' → logprob: -11.739114761352539
    10. ' n' → logprob: -12.739114761352539

Token 16: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01346972119063139
    2. 'in' → logprob: -4.513469696044922
    3. ' ' → logprob: -6.263469696044922
    4. '  ' → logprob: -8.388469696044922
    5. '[' → logprob: -8.763469696044922
    6. 'n' → logprob: -10.263469696044922
    7. '_' → logprob: -11.013469696044922
    8. ',' → logprob: -11.013469696044922
    9. ' n' → logprob: -11.263469696044922
    10. ' i' → logprob: -11.763469696044922

Token 17: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.04859747737646103
    2. 'range' → logprob: -3.048597574234009
    3. ' ' → logprob: -12.04859733581543
    4. 's' → logprob: -13.29859733581543
    5. ' s' → logprob: -13.54859733581543
    6. '	range' → logprob: -14.17359733581543
    7. '(range' → logprob: -15.79859733581543
    8. ' xrange' → logprob: -16.04859733581543
    9. ')' → logprob: -16.67359733581543
    10. '  ' → logprob: -17.04859733581543

Token 18: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023741764947772026
    2. '(n' → logprob: -3.7737417221069336
    3. ' (' → logprob: -8.148741722106934
    4. '(len' → logprob: -8.648741722106934
    5. '(range' → logprob: -11.773741722106934
    6. '(i' → logprob: -11.773741722106934
    7. '(s' → logprob: -12.148741722106934
    8. '(
' → logprob: -12.273741722106934
    9. '((' → logprob: -13.148741722106934
    10. ' ' → logprob: -13.648741722106934

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.635149359703064
    2. 'n' → logprob: -0.760149359703064
    3. ' n' → logprob: -6.5101494789123535
    4. 'len' → logprob: -7.1351494789123535
    5. ' ' → logprob: -8.885149002075195
    6. '0' → logprob: -9.885149002075195
    7. '2' → logprob: -10.885149002075195
    8. '(n' → logprob: -11.260149002075195
    9. 's' → logprob: -11.510149002075195
    10. ')' → logprob: -11.885149002075195

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7001135349273682
    2. ' n' → logprob: -1.0751135349273682
    3. ' ,' → logprob: -2.825113534927368
    4. ')' → logprob: -3.575113534927368
    5. ',n' → logprob: -3.575113534927368
    6. ' )' → logprob: -3.575113534927368
    7. 'n' → logprob: -4.325113296508789
    8. '(n' → logprob: -6.075113296508789
    9. ' ' → logprob: -6.200113296508789
    10. ')n' → logprob: -7.075113296508789

Token 21: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.47408220171928406
    2. 'n' → logprob: -0.9740822315216064
    3. ' ' → logprob: -12.974081993103027
    4. ')' → logprob: -13.974081993103027
    5. ' len' → logprob: -13.974081993103027
    6. 'len' → logprob: -14.474081993103027
    7. ')n' → logprob: -15.099081993103027
    8. '	n' → logprob: -16.224082946777344
    9. '(n' → logprob: -16.599082946777344
    10. 's' → logprob: -16.599082946777344

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004627837799489498
    2. '+' → logprob: -6.129627704620361
    3. ' ):' → logprob: -6.254627704620361
    4. ')' → logprob: -7.879627704620361
    5. '):
' → logprob: -9.75462818145752
    6. ':' → logprob: -10.00462818145752
    7. ' +' → logprob: -11.00462818145752
    8. ',' → logprob: -11.50462818145752
    9. '+:' → logprob: -13.75462818145752
    10. ' ' → logprob: -13.75462818145752

Token 23: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.027162086218595505
    2. ' if' → logprob: -3.9021620750427246
    3. ''' → logprob: -6.527162075042725
    4. ',' → logprob: -7.152162075042725
    5. ' ,' → logprob: -7.652162075042725
    6. '    ' → logprob: -7.777162075042725
    7. ':' → logprob: -7.777162075042725
    8. '   ' → logprob: -7.777162075042725
    9. 'if' → logprob: -7.902162075042725
    10. '```' → logprob: -8.402162551879883

Token 24: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7513211369514465
    2. ' if' → logprob: -0.7513211369514465
    3. ' ' → logprob: -3.7513210773468018
    4. '   ' → logprob: -4.501321315765381
    5. 's' → logprob: -5.001321315765381
    6. ':' → logprob: -5.126321315765381
    7. 'i' → logprob: -5.876321315765381
    8. '    ' → logprob: -5.876321315765381
    9. '=' → logprob: -6.876321315765381
    10. ')' → logprob: -7.376321315765381

Token 25: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.014207814820110798
    2. 's' → logprob: -4.38920783996582
    3. ' ' → logprob: -6.38920783996582
    4. ' ' → logprob: -11.26420783996582
    5. '  ' → logprob: -13.01420783996582
    6. '(s' → logprob: -14.26420783996582
    7. ' n' → logprob: -15.38920783996582
    8. '	s' → logprob: -15.63920783996582
    9. '_s' → logprob: -16.01420783996582
    10. ' not' → logprob: -16.13920783996582

Token 26: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004911953583359718
    2. '[' → logprob: -7.625491142272949
    3. '[j' → logprob: -13.62549114227295
    4. '[a' → logprob: -14.75049114227295
    5. '[n' → logprob: -15.12549114227295
    6. ' [' → logprob: -15.25049114227295
    7. '[I' → logprob: -15.25049114227295
    8. '[index' → logprob: -15.75049114227295
    9. '[e' → logprob: -16.375492095947266
    10. '[s' → logprob: -16.500492095947266

Token 27: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08677726984024048
    2. '!=' → logprob: -3.4617772102355957
    3. ']==' → logprob: -3.8367772102355957
    4. ']!=' → logprob: -4.336777210235596
    5. '==' → logprob: -4.461777210235596
    6. ' !=' → logprob: -6.461777210235596
    7. ' ]' → logprob: -6.711777210235596
    8. ' ==' → logprob: -7.336777210235596
    9. '>' → logprob: -7.461777210235596
    10. '-' → logprob: -7.711777210235596

Token 28: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.25648459792137146
    2. '==' → logprob: -1.8814846277236938
    3. ' !=' → logprob: -2.8814845085144043
    4. '>' → logprob: -4.756484508514404
    5. ' ==' → logprob: -4.756484508514404
    6. '=' → logprob: -8.506484985351562
    7. '>=' → logprob: -9.006484985351562
    8. '<' → logprob: -10.006484985351562
    9. ' ' → logprob: -10.131484985351562
    10. ' >' → logprob: -10.506484985351562

Token 29: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10021486133337021
    2. ' s' → logprob: -2.350214958190918
    3. ' ' → logprob: -11.850214958190918
    4. '	s' → logprob: -14.225214958190918
    5. '   ' → logprob: -15.475214958190918
    6. ''s' → logprob: -16.2252140045166
    7. '(s' → logprob: -17.1002140045166
    8. '    ' → logprob: -17.3502140045166
    9. ' ' → logprob: -17.3502140045166
    10. '  ' → logprob: -17.4752140045166

Token 30: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.47495681833243e-05
    2. '[' → logprob: -10.625024795532227
    3. 'i' → logprob: -15.375024795532227
    4. '[
' → logprob: -16.250024795532227
    5. '[j' → logprob: -16.750024795532227
    6. '[I' → logprob: -17.375024795532227
    7. '-' → logprob: -18.250024795532227
    8. '[s' → logprob: -18.250024795532227
    9. '[index' → logprob: -18.500024795532227
    10. '1' → logprob: -18.750024795532227

Token 31: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00033999193692579865
    2. ' -' → logprob: -8.000340461730957
    3. '1' → logprob: -12.500340461730957
    4. ']' → logprob: -15.250340461730957
    5. ' ' → logprob: -15.500340461730957
    6. '-
' → logprob: -15.750340461730957
    7. '   ' → logprob: -16.50033950805664
    8. '−' → logprob: -16.75033950805664
    9. '‌' → logprob: -17.62533950805664
    10. ''-' → logprob: -17.62533950805664

Token 32: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021971215028315783
    2. ' ' → logprob: -6.127197265625
    3. ']' → logprob: -12.002197265625
    4. '```' → logprob: -13.002197265625
    5. '   ' → logprob: -13.439697265625
    6. ')' → logprob: -14.689697265625
    7. '`' → logprob: -15.064697265625
    8. 's' → logprob: -15.752197265625
    9. '  ' → logprob: -15.752197265625
    10. '    ' → logprob: -15.939697265625

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.125017166137695
    3. '```' → logprob: -14.375017166137695
    4. ']' → logprob: -14.750017166137695
    5. '   ' → logprob: -15.125017166137695
    6. ')' → logprob: -15.375017166137695
    7. '१' → logprob: -16.562517166137695
    8. '১' → logprob: -16.562517166137695
    9. '  ' → logprob: -16.750017166137695
    10. '`' → logprob: -16.812517166137695

Token 34: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34896939992904663
    2. '):' → logprob: -1.2239694595336914
    3. ')' → logprob: -8.098969459533691
    4. '):
' → logprob: -9.348969459533691
    5. ' ):' → logprob: -9.973969459533691
    6. ':
' → logprob: -10.348969459533691
    7. ' :' → logprob: -11.348969459533691
    8. '   ' → logprob: -11.848969459533691
    9. '':' → logprob: -11.973969459533691
    10. ' and' → logprob: -12.223969459533691

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10439936071634293
    2. 'result' → logprob: -2.4793994426727295
    3. '        
' → logprob: -5.35439920425415
    4. '```' → logprob: -5.60439920425415
    5. '   ' → logprob: -5.97939920425415
    6. ' result' → logprob: -6.10439920425415
    7. '    
' → logprob: -7.35439920425415
    8. '
' → logprob: -7.47939920425415
    9. '``' → logprob: -7.85439920425415
    10. '    ' → logprob: -8.854399681091309

Token 36: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.03887499123811722
    2. ' result' → logprob: -3.288875102996826
    3. '       ' → logprob: -7.913875102996826
    4. '
' → logprob: -8.038874626159668
    5. '```' → logprob: -9.288874626159668
    6. '``' → logprob: -11.288874626159668
    7. '        
' → logprob: -11.288874626159668
    8. '           ' → logprob: -11.538874626159668
    9. ' 
' → logprob: -12.163874626159668
    10. '   ' → logprob: -12.538874626159668

Token 37: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6470330357551575
    2. '+=' → logprob: -1.2720329761505127
    3. ' *=' → logprob: -2.1470329761505127
    4. '*' → logprob: -2.8970329761505127
    5. '*=' → logprob: -4.272033214569092
    6. '=' → logprob: -5.022033214569092
    7. ' ' → logprob: -6.397033214569092
    8. '+' → logprob: -6.647033214569092
    9. ' *' → logprob: -8.272032737731934
    10. ' =' → logprob: -9.022032737731934

Token 38: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023119196703191847
    2. ' ' → logprob: -8.37523078918457
    3. '2' → logprob: -14.50023078918457
    4. '   ' → logprob: -16.37523078918457
    5. '  ' → logprob: -18.50023078918457
    6. '１' → logprob: -18.56273078918457
    7. '3' → logprob: -18.62523078918457
    8. '```' → logprob: -19.12523078918457
    9. '0' → logprob: -19.18773078918457
    10. '+' → logprob: -19.18773078918457

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5213274309644476e-05
    2. ' ' → logprob: -11.125015258789062
    3. '2' → logprob: -15.500015258789062
    4. '   ' → logprob: -17.000015258789062
    5. '+' → logprob: -17.812515258789062
    6. '```' → logprob: -18.187515258789062
    7. '3' → logprob: -18.250015258789062
    8. '１' → logprob: -18.375015258789062
    9. '0' → logprob: -18.437515258789062
    10. '  ' → logprob: -18.562515258789062

Token 40: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00039825684507377446
    2. '
' → logprob: -8.625398635864258
    3. ' print' → logprob: -8.625398635864258
    4. '```' → logprob: -11.500398635864258
    5. '<|end|>' → logprob: -11.500398635864258
    6. ')' → logprob: -11.875398635864258
    7. '\n' → logprob: -12.250398635864258
    8. '#' → logprob: -13.250398635864258
    9. ' 
' → logprob: -14.000398635864258
    10. 'result' → logprob: -14.250398635864258

Token 41: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.36574100604048e-06
    2. ' print' → logprob: -12.625004768371582
    3. '```' → logprob: -14.875004768371582
    4. 'result' → logprob: -15.500004768371582
    5. 'pr' → logprob: -16.125003814697266
    6. ')' → logprob: -16.500003814697266
    7. 'return' → logprob: -16.750003814697266
    8. '
' → logprob: -16.875003814697266
    9. 'prin' → logprob: -17.375003814697266
    10. '#' → logprob: -17.500003814697266

Token 42: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03811987116932869
    2. '(result' → logprob: -3.2881197929382324
    3. '()' → logprob: -10.16312026977539
    4. '(s' → logprob: -10.78812026977539
    5. '('' → logprob: -11.78812026977539
    6. 'result' → logprob: -13.16312026977539
    7. '("("' → logprob: -13.16312026977539
    8. '(res' → logprob: -13.28812026977539
    9. '((' → logprob: -13.53812026977539
    10. '(`' → logprob: -13.66312026977539

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -17.0
    3. '))' → logprob: -17.625
    4. ')`' → logprob: -18.0
    5. ')
' → logprob: -20.125
    6. '`)' → logprob: -20.5
    7. '),' → logprob: -20.5
    8. ')}' → logprob: -20.625
    9. '}' → logprob: -20.875
    10. '')' → logprob: -21.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 41
Tokens correctement prédits (1ère position, stricte): 18
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 35
Précision stricte (1ère position): 43.90%
Précision adaptée (1ère position): 48.78%
Précision (top 10): 85.37%
================================================================================
