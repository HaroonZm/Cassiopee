================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import permutations, combinations
import operator

import numpy as np

from decimal import Decimal, getcontext

getcontext().prec = 32

to_int = lambda x: int(x)
parse_vector = lambda line: np.array(list(map(to_int, line.strip().split())))

n = (lambda f: f(f))(lambda f: int(input()))

vectors = reduce(
    lambda acc, _: acc + [parse_vector(input())],
    range(n),
    []
)

distance_accumulator = lambda pairs: reduce(
    lambda total, pair: total + np.linalg.norm(pair[1] - pair[0]),
    pairs,
    Decimal(0)
)

all_combinations = filter(
    lambda pair: pair[0] <= pair[1],
    map(
        lambda idxs: (idxs[0], idxs[1]),
        permutations(range(n), 2)
    )
)

unique_combinations = {(min(i, j), max(i, j)) for i, j in all_combinations}

sum_distances = distance_accumulator(
    ((vectors[i], vectors[j]) for i, j in unique_combinations)
)

average_path_length = (lambda s, N: Decimal('2.0') * s / Decimal(N))(
    sum_distances, n
)

print(average_path_length)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020487118512392044
    2. '(lambda' → logprob: -4.645487308502197
    3. '.' → logprob: -5.270487308502197
    4. ',' → logprob: -5.895487308502197
    5. '\' → logprob: -7.145487308502197
    6. ' (' → logprob: -7.520487308502197
    7. '```' → logprob: -8.020486831665039
    8. 'def' → logprob: -8.645486831665039
    9. 'lambda' → logprob: -8.895486831665039
    10. '`' → logprob: -8.895486831665039

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01876937784254551
    2. '\' → logprob: -4.768769264221191
    3. 'def' → logprob: -5.768769264221191
    4. '(lambda' → logprob: -6.268769264221191
    5. ' ' → logprob: -6.393769264221191
    6. '```' → logprob: -7.393769264221191
    7. '(
' → logprob: -7.643769264221191
    8. ' (' → logprob: -8.143769264221191
    9. ',' → logprob: -8.268769264221191
    10. '\(' → logprob: -8.393769264221191

Token 6: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.2411840558052063
    2. ' itertools' → logprob: -2.1161839962005615
    3. ' math' → logprob: -2.7411839962005615
    4. ' collections' → logprob: -3.8661839962005615
    5. 'operator' → logprob: -4.991184234619141
    6. ' os' → logprob: -7.116184234619141
    7. 'math' → logprob: -7.991184234619141
    8. ' typing' → logprob: -8.49118423461914
    9. 'collections' → logprob: -8.99118423461914
    10. ' ' → logprob: -10.49118423461914

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.01667022332549095
    2. 'import' → logprob: -4.141670227050781
    3. '.' → logprob: -7.891670227050781
    4. ' ' → logprob: -9.141670227050781
    5. ' .' → logprob: -9.516670227050781
    6. '.import' → logprob: -9.891670227050781
    7. '	import' → logprob: -11.391670227050781
    8. '_import' → logprob: -12.016670227050781
    9. ' itertools' → logprob: -12.641670227050781
    10. '<|end|>' → logprob: -13.391670227050781

Token 8: ' permutations' (ID: 174595)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.4097050726413727
    2. 'group' → logprob: -2.15970516204834
    3. ' accumulate' → logprob: -2.90970516204834
    4. 'acc' → logprob: -3.40970516204834
    5. 'count' → logprob: -3.40970516204834
    6. ' cycle' → logprob: -3.53470516204834
    7. ' chain' → logprob: -3.53470516204834
    8. 'cycle' → logprob: -4.28470516204834
    9. 'chain' → logprob: -4.40970516204834
    10. ' count' → logprob: -5.03470516204834

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007756868842989206
    2. '(
' → logprob: -5.00775671005249
    3. '\' → logprob: -8.507757186889648
    4. '.' → logprob: -8.632757186889648
    5. '`' → logprob: -9.382757186889648
    6. '\n' → logprob: -9.382757186889648
    7. ',' → logprob: -9.507757186889648
    8. '#' → logprob: -9.507757186889648
    9. 'def' → logprob: -9.757757186889648
    10. ''' → logprob: -9.882757186889648

Token 10: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.33895590901374817
    2. 'product' → logprob: -1.5889558792114258
    3. ' combinations' → logprob: -3.213955879211426
    4. ' product' → logprob: -3.213955879211426
    5. 'chain' → logprob: -6.463955879211426
    6. 'group' → logprob: -8.213955879211426
    7. 'acc' → logprob: -8.213955879211426
    8. 'cycle' → logprob: -8.713955879211426
    9. ' chain' → logprob: -8.838955879211426
    10. '```' → logprob: -9.088955879211426

Token 11: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11552182585000992
    2. '(
' → logprob: -2.8655219078063965
    3. 'def' → logprob: -3.3655219078063965
    4. ',' → logprob: -5.4905219078063965
    5. '#' → logprob: -5.9905219078063965
    6. 'import' → logprob: -6.1155219078063965
    7. '\' → logprob: -6.2405219078063965
    8. '\n' → logprob: -6.9905219078063965
    9. '
' → logprob: -7.1155219078063965
    10. '<|end|>' → logprob: -7.1155219078063965

Token 12: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0498555898666382
    2. 'def' → logprob: -1.6748555898666382
    3. '\n' → logprob: -2.4248557090759277
    4. '\' → logprob: -2.5498557090759277
    5. '(
' → logprob: -2.6748557090759277
    6. 'import' → logprob: -3.0498557090759277
    7. ',' → logprob: -3.6748557090759277
    8. '
' → logprob: -3.7998557090759277
    9. '`' → logprob: -3.7998557090759277
    10. '```' → logprob: -4.049855709075928

Token 13: ' operator' (ID: 11019)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.5254594683647156
    2. ' math' → logprob: -1.0254595279693604
    3. ' os' → logprob: -3.4004595279693604
    4. ' collections' → logprob: -5.525459289550781
    5. ' random' → logprob: -5.525459289550781
    6. ' ' → logprob: -5.900459289550781
    7. ' numpy' → logprob: -6.150459289550781
    8. ' functools' → logprob: -6.525459289550781
    9. ' re' → logprob: -6.775459289550781
    10. ' pandas' → logprob: -7.275459289550781

Token 14: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0995161235332489
    2. '.' → logprob: -2.9745161533355713
    3. '\' → logprob: -4.349515914916992
    4. '(
' → logprob: -4.974515914916992
    5. 'def' → logprob: -5.224515914916992
    6. ',' → logprob: -5.474515914916992
    7. '_' → logprob: -6.224515914916992
    8. '
' → logprob: -6.349515914916992
    9. '#' → logprob: -6.599515914916992
    10. '<|end|>' → logprob: -6.599515914916992

Token 15: 'import' (ID: 561)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09594633430242538
    2. '.' → logprob: -3.4709463119506836
    3. '#' → logprob: -4.470946311950684
    4. '(
' → logprob: -4.595946311950684
    5. '[' → logprob: -4.845946311950684
    6. ',' → logprob: -5.345946311950684
    7. 'def' → logprob: -5.345946311950684
    8. '*' → logprob: -5.595946311950684
    9. '\' → logprob: -5.720946311950684
    10. 'a' → logprob: -5.970946311950684

Token 16: ' numpy' (ID: 19529)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.5593036413192749
    2. ' math' → logprob: -1.059303641319275
    3. ' sys' → logprob: -3.0593037605285645
    4. ' numpy' → logprob: -4.6843037605285645
    5. ' functools' → logprob: -4.8093037605285645
    6. ' random' → logprob: -4.9343037605285645
    7. ' collections' → logprob: -5.0593037605285645
    8. ' itertools' → logprob: -6.4343037605285645
    9. ' re' → logprob: -7.0593037605285645
    10. ' pandas' → logprob: -7.0593037605285645

Token 17: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07629268616437912
    2. ' as' → logprob: -2.9512927532196045
    3. '<|end|>' → logprob: -4.201292514801025
    4. '.ndarray' → logprob: -5.826292514801025
    5. 'as' → logprob: -6.826292514801025
    6. '<|end|>' → logprob: -7.326292514801025
    7. '.as' → logprob: -8.201292991638184
    8. '.random' → logprob: -8.201292991638184
    9. '.numpy' → logprob: -8.576292991638184
    10. '.asarray' → logprob: -8.951292991638184

Token 18: ' np' (ID: 5374)
  Prédit: ' np'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' np' → logprob: -0.0022744389716535807
    2. ' numpy' → logprob: -6.752274513244629
    3. ' ' → logprob: -7.127274513244629
    4. 'np' → logprob: -8.377274513244629
    5. ' array' → logprob: -10.252274513244629
    6. ' as' → logprob: -11.877274513244629
    7. ' ndarray' → logprob: -12.002274513244629
    8. ' n' → logprob: -12.877274513244629
    9. 'numpy' → logprob: -12.877274513244629
    10. ' nd' → logprob: -13.127274513244629

Token 19: '

' (ID: 279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.71354341506958
    2. '.' → logprob: -1.96354341506958
    3. '\' → logprob: -2.08854341506958
    4. '\n' → logprob: -2.08854341506958
    5. '
' → logprob: -2.21354341506958
    6. 'import' → logprob: -2.71354341506958
    7. '#' → logprob: -2.83854341506958
    8. '<|end|>' → logprob: -3.08854341506958
    9. 'def' → logprob: -3.46354341506958
    10. 'np' → logprob: -3.96354341506958

Token 20: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1609865427017212
    2. '#' → logprob: -2.2859864234924316
    3. 'a' → logprob: -4.160986423492432
    4. 'd' → logprob: -4.785986423492432
    5. 'n' → logprob: -5.410986423492432
    6. 'x' → logprob: -5.660986423492432
    7. '(' → logprob: -6.160986423492432
    8. '[' → logprob: -6.535986423492432
    9. '`' → logprob: -6.660986423492432
    10. 'data' → logprob: -6.660986423492432

Token 21: ' decimal' (ID: 26964)
  Prédit: ' sklearn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sklearn' → logprob: -0.3281978964805603
    2. ' scipy' → logprob: -2.078197956085205
    3. ' math' → logprob: -2.328197956085205
    4. ' collections' → logprob: -3.953197956085205
    5. 'sk' → logprob: -4.453197956085205
    6. ' functools' → logprob: -5.328197956085205
    7. ' sym' → logprob: -5.453197956085205
    8. ' numpy' → logprob: -5.703197956085205
    9. ' itertools' → logprob: -5.703197956085205
    10. ' tensorflow' → logprob: -5.828197956085205

Token 22: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.022199831902980804
    2. 'import' → logprob: -3.897199869155884
    3. ' ' → logprob: -6.647199630737305
    4. '	import' → logprob: -8.772199630737305
    5. '<|end|>' → logprob: -9.022199630737305
    6. '.' → logprob: -9.772199630737305
    7. '<|end|>' → logprob: -12.397199630737305
    8. ' ' → logprob: -12.397199630737305
    9. '_import' → logprob: -12.522199630737305
    10. '```' → logprob: -13.272199630737305

Token 23: ' Decimal' (ID: 56874)
  Prédit: ' Decimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Decimal' → logprob: -0.02984374202787876
    2. 'Decimal' → logprob: -3.529843807220459
    3. '.Decimal' → logprob: -9.5298433303833
    4. ' ' → logprob: -11.5298433303833
    5. 'decimal' → logprob: -13.0298433303833
    6. ' ' → logprob: -13.0298433303833
    7. ' decimal' → logprob: -13.1548433303833
    8. 'Context' → logprob: -14.1548433303833
    9. '`' → logprob: -14.2798433303833
    10. '```' → logprob: -14.4048433303833

Token 24: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.8102961778640747
    2. '
' → logprob: -1.8102961778640747
    3. 'def' → logprob: -1.9352961778640747
    4. ',' → logprob: -2.185296058654785
    5. '#' → logprob: -2.560296058654785
    6. 'a' → logprob: -2.810296058654785
    7. '

' → logprob: -2.935296058654785
    8. '\n' → logprob: -3.560296058654785
    9. 'x' → logprob: -3.560296058654785
    10. '```' → logprob: -3.560296058654785

Token 25: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.44068828225135803
    2. 'get' → logprob: -1.0656882524490356
    3. ' local' → logprob: -5.440688133239746
    4. 'ROUND' → logprob: -5.690688133239746
    5. ' ROUND' → logprob: -6.440688133239746
    6. 'Context' → logprob: -6.690688133239746
    7. 'local' → logprob: -7.190688133239746
    8. 'Invalid' → logprob: -8.690688133239746
    9. ' Invalid' → logprob: -8.940688133239746
    10. ' Context' → logprob: -9.065688133239746

Token 26: 'context' (ID: 3822)
  Prédit: 'context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'context' → logprob: -0.0001549089647596702
    2. 'con' → logprob: -9.125154495239258
    3. 'cont' → logprob: -10.375154495239258
    4. 'c' → logprob: -12.250154495239258
    5. '```' → logprob: -13.000154495239258
    6. 'contexts' → logprob: -13.625154495239258
    7. 'ctx' → logprob: -13.750154495239258
    8. '	context' → logprob: -13.750154495239258
    9. 'conte' → logprob: -14.125154495239258
    10. '"context' → logprob: -14.250154495239258

Token 27: '

' (ID: 279)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.5388485193252563
    2. '
' → logprob: -1.0388485193252563
    3. '

' → logprob: -3.288848400115967
    4. '<|end|>' → logprob: -4.788848400115967
    5. '
' → logprob: -5.538848400115967
    6. '' → logprob: -6.163848400115967
    7. '#' → logprob: -6.163848400115967
    8. '\n' → logprob: -6.538848400115967
    9. ' ' → logprob: -6.663848400115967
    10. ',' → logprob: -6.663848400115967

Token 28: 'get' (ID: 522)
  Prédit: 'get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.31112897396087646
    2. '
' → logprob: -1.8111289739608765
    3. ' ' → logprob: -4.061129093170166
    4. '\n' → logprob: -4.061129093170166
    5. '#' → logprob: -4.311129093170166
    6. '\' → logprob: -4.436129093170166
    7. 'g' → logprob: -5.061129093170166
    8. 'x' → logprob: -5.061129093170166
    9. 'n' → logprob: -5.311129093170166
    10. '' → logprob: -5.436129093170166

Token 29: 'context' (ID: 3822)
  Prédit: 'context'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'context' → logprob: -0.127113938331604
    2. '_context' → logprob: -2.1271138191223145
    3. '"context' → logprob: -9.627114295959473
    4. '_' → logprob: -10.252114295959473
    5. '<context' → logprob: -10.252114295959473
    6. '_con' → logprob: -11.002114295959473
    7. '_cont' → logprob: -11.752114295959473
    8. 'con' → logprob: -12.252114295959473
    9. '_Context' → logprob: -12.752114295959473
    10. '_ctx' → logprob: -12.877114295959473

Token 30: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08448326587677002
    2. '.' → logprob: -2.9594831466674805
    3. '()' → logprob: -4.2094831466674805
    4. '().' → logprob: -4.4594831466674805
    5. '('.')' → logprob: -6.8344831466674805
    6. '<|end|>' → logprob: -7.0844831466674805
    7. '(.)' → logprob: -8.20948314666748
    8. '```' → logprob: -8.95948314666748
    9. '("("' → logprob: -9.83448314666748
    10. '('' → logprob: -9.83448314666748

Token 31: 'prec' (ID: 21393)
  Prédit: 'prec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prec' → logprob: -1.6286106983898208e-05
    2. '_prec' → logprob: -12.000016212463379
    3. ' prec' → logprob: -12.125016212463379
    4. 'precision' → logprob: -13.125016212463379
    5. 'Prec' → logprob: -13.875016212463379
    6. '.prec' → logprob: -13.875016212463379
    7. '```' → logprob: -14.875016212463379
    8. 'round' → logprob: -15.625016212463379
    9. 'get' → logprob: -16.250017166137695
    10. 'PREC' → logprob: -16.375017166137695

Token 32: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3141792118549347
    2. ' =' → logprob: -1.3141791820526123
    3. '<|end|>' → logprob: -7.564179420471191
    4. ' +=' → logprob: -8.564179420471191
    5. ' ' → logprob: -9.439179420471191
    6. '+=' → logprob: -10.314179420471191
    7. '10' → logprob: -11.814179420471191
    8. '6' → logprob: -11.939179420471191
    9. ' |=' → logprob: -11.939179420471191
    10. '=
' → logprob: -12.064179420471191

Token 33: ' ' (ID: 220)
  Prédit: '28'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '28' → logprob: -0.3043791949748993
    2. '50' → logprob: -1.9293792247772217
    3. '10' → logprob: -2.8043792247772217
    4. '30' → logprob: -3.6793792247772217
    5. ' ' → logprob: -4.679378986358643
    6. '20' → logprob: -5.179378986358643
    7. '100' → logprob: -5.179378986358643
    8. '6' → logprob: -5.554378986358643
    9. '15' → logprob: -6.304378986358643
    10. '12' → logprob: -6.429378986358643

Token 34: '32' (ID: 1398)
  Prédit: '28'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '28' → logprob: -0.8241910338401794
    2. '50' → logprob: -1.1991910934448242
    3. '10' → logprob: -2.199191093444824
    4. '30' → logprob: -2.699191093444824
    5. '20' → logprob: -4.074191093444824
    6. '6' → logprob: -4.074191093444824
    7. '100' → logprob: -4.324191093444824
    8. '12' → logprob: -4.574191093444824
    9. '15' → logprob: -4.824191093444824
    10. '18' → logprob: -5.824191093444824

Token 35: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.185289740562439
    2. '
' → logprob: -1.435289740562439
    3. '#' → logprob: -2.1852898597717285
    4. '\' → logprob: -2.1852898597717285
    5. '\n' → logprob: -3.1852898597717285
    6. 'x' → logprob: -3.5602898597717285
    7. 'n' → logprob: -3.5602898597717285
    8. '

' → logprob: -3.6852898597717285
    9. 'a' → logprob: -3.8102898597717285
    10. ' ' → logprob: -3.9352898597717285

Token 36: 'to' (ID: 935)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7186843752861023
    2. 'def' → logprob: -1.468684434890747
    3. 'n' → logprob: -2.843684434890747
    4. '\' → logprob: -2.843684434890747
    5. '#' → logprob: -2.968684434890747
    6. 'd' → logprob: -3.593684434890747
    7. 'x' → logprob: -3.843684434890747
    8. '\n' → logprob: -4.218684196472168
    9. '
' → logprob: -4.343684196472168
    10. 'result' → logprob: -4.343684196472168

Token 37: '_int' (ID: 12285)
  Prédit: 'tal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tal' → logprob: -0.18299157917499542
    2. 'ken' → logprob: -2.4329915046691895
    3. 'kens' → logprob: -3.6829915046691895
    4. '_decimal' → logprob: -4.4329915046691895
    5. '_find' → logprob: -5.1829915046691895
    6. 'ol' → logprob: -5.4329915046691895
    7. 'list' → logprob: -5.5579915046691895
    8. 'p' → logprob: -5.6829915046691895
    9. 'ols' → logprob: -6.0579915046691895
    10. '_' → logprob: -6.3079915046691895

Token 38: ' =' (ID: 314)
  Prédit: 'eger'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eger' → logprob: -0.10613981634378433
    2. 'eg' → logprob: -3.731139898300171
    3. ' =' → logprob: -3.981139898300171
    4. '=' → logprob: -4.231139659881592
    5. 's' → logprob: -4.606139659881592
    6. '(' → logprob: -4.856139659881592
    7. '_val' → logprob: -5.106139659881592
    8. 'erval' → logprob: -5.231139659881592
    9. 'ect' → logprob: -5.731139659881592
    10. 'ert' → logprob: -6.231139659881592

Token 39: ' lambda' (ID: 27871)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6558371782302856
    2. 'int' → logprob: -1.5308371782302856
    3. ' lambda' → logprob: -1.5308371782302856
    4. 'lambda' → logprob: -3.405837059020996
    5. ' np' → logprob: -5.030837059020996
    6. ' ' → logprob: -6.155837059020996
    7. ' list' → logprob: -6.155837059020996
    8. 'np' → logprob: -6.280837059020996
    9. ' Decimal' → logprob: -7.405837059020996
    10. 'list' → logprob: -7.655837059020996

Token 40: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20827871561050415
    2. 'x' → logprob: -1.7082786560058594
    3. ' s' → logprob: -5.583278656005859
    4. 's' → logprob: -6.958278656005859
    5. ' a' → logprob: -7.208278656005859
    6. ' n' → logprob: -8.45827865600586
    7. 'a' → logprob: -8.58327865600586
    8. ' int' → logprob: -8.58327865600586
    9. 'int' → logprob: -8.83327865600586
    10. ' ' → logprob: -9.08327865600586

Token 41: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004792514722794294
    2. ':int' → logprob: -5.6297926902771
    3. ' :' → logprob: -6.8797926902771
    4. 'int' → logprob: -9.129792213439941
    5. ':x' → logprob: -10.254792213439941
    6. '=int' → logprob: -12.004792213439941
    7. ' int' → logprob: -12.379792213439941
    8. '=' → logprob: -13.129792213439941
    9. '[int' → logprob: -13.254792213439941
    10. 'x' → logprob: -14.004792213439941

Token 42: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.1820155382156372
    2. 'int' → logprob: -1.8070155382156372
    3. ' x' → logprob: -6.932015419006348
    4. 'x' → logprob: -8.057015419006348
    5. ' Decimal' → logprob: -8.182015419006348
    6. ' ' → logprob: -8.432015419006348
    7. 'Decimal' → logprob: -9.057015419006348
    8. '(int' → logprob: -9.557015419006348
    9. '0' → logprob: -9.807015419006348
    10. 'np' → logprob: -10.182015419006348

Token 43: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.30509325861930847
    2. '(' → logprob: -1.4300932884216309
    3. '(round' → logprob: -4.555093288421631
    4. '(str' → logprob: -5.180093288421631
    5. '(float' → logprob: -6.180093288421631
    6. '((' → logprob: -6.180093288421631
    7. '(np' → logprob: -6.305093288421631
    8. '(abs' → logprob: -6.930093288421631
    9. '('' → logprob: -8.305092811584473
    10. '(decimal' → logprob: -9.930092811584473

Token 44: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013081764802336693
    2. '.strip' → logprob: -4.6380815505981445
    3. '))' → logprob: -6.8880815505981445
    4. '[' → logprob: -7.0130815505981445
    5. '.split' → logprob: -7.2630815505981445
    6. '.replace' → logprob: -8.513081550598145
    7. ',' → logprob: -8.888081550598145
    8. '.' → logprob: -9.013081550598145
    9. '.rstrip' → logprob: -9.138081550598145
    10. '.to' → logprob: -10.888081550598145

Token 45: 'parse' (ID: 4841)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.2404043674468994
    2. 'def' → logprob: -1.2404043674468994
    3. '(' → logprob: -2.3654043674468994
    4. '#' → logprob: -2.6154043674468994
    5. ')' → logprob: -2.8654043674468994
    6. '<|end|>' → logprob: -3.3654043674468994
    7. ',' → logprob: -3.4904043674468994
    8. '\n' → logprob: -3.9904043674468994
    9. '0' → logprob: -4.11540412902832
    10. '\' → logprob: -4.49040412902832

Token 46: '_vector' (ID: 29530)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.008870773948729038
    2. '_' → logprob: -5.133870601654053
    3. ' =' → logprob: -7.258870601654053
    4. '_string' → logprob: -7.508870601654053
    5. '_input' → logprob: -7.758870601654053
    6. '_str' → logprob: -8.133871078491211
    7. '=' → logprob: -9.133871078491211
    8. '_r' → logprob: -9.133871078491211
    9. 't' → logprob: -9.258871078491211
    10. '(' → logprob: -9.883871078491211

Token 47: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002491706982254982
    2. '=' → logprob: -6.002491474151611
    3. '=lambda' → logprob: -11.50249195098877
    4. ' ' → logprob: -13.00249195098877
    5. '_' → logprob: -13.37749195098877
    6. 's' → logprob: -13.50249195098877
    7. '(' → logprob: -15.62749195098877
    8. ' =(' → logprob: -15.62749195098877
    9. ' =
' → logprob: -16.002490997314453
    10. ')' → logprob: -17.002490997314453

Token 48: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.5774341225624084
    2. 'lambda' → logprob: -0.8274341225624084
    3. '(lambda' → logprob: -6.577434062957764
    4. 'list' → logprob: -10.077434539794922
    5. 'np' → logprob: -10.702434539794922
    6. ' list' → logprob: -10.952434539794922
    7. ' np' → logprob: -11.452434539794922
    8. '=lambda' → logprob: -12.202434539794922
    9. ' ' → logprob: -14.202434539794922
    10. ' (' → logprob: -14.702434539794922

Token 49: ' line' (ID: 2543)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2997194528579712
    2. ' lambda' → logprob: -1.7997194528579712
    3. 'x' → logprob: -2.7997193336486816
    4. ' vector' → logprob: -4.674719333648682
    5. 'lambda' → logprob: -4.799719333648682
    6. ' list' → logprob: -5.299719333648682
    7. ' s' → logprob: -5.299719333648682
    8. 's' → logprob: -6.424719333648682
    9. ' line' → logprob: -6.924719333648682
    10. 'list' → logprob: -7.799719333648682

Token 50: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.034403517842292786
    2. ' :' → logprob: -3.4094035625457764
    3. ' line' → logprob: -8.409403800964355
    4. '=line' → logprob: -8.409403800964355
    5. '[line' → logprob: -8.784403800964355
    6. 'line' → logprob: -9.409403800964355
    7. ':list' → logprob: -10.909403800964355
    8. '(line' → logprob: -11.284403800964355
    9. ',' → logprob: -11.284403800964355
    10. '   ' → logprob: -11.659403800964355

Token 51: ' np' (ID: 5374)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.16878069937229156
    2. 'list' → logprob: -2.41878080368042
    3. ' [' → logprob: -3.41878080368042
    4. '[' → logprob: -4.79378080368042
    5. ' np' → logprob: -4.91878080368042
    6. '[line' → logprob: -4.91878080368042
    7. ' line' → logprob: -5.29378080368042
    8. '[list' → logprob: -6.04378080368042
    9. 'np' → logprob: -6.54378080368042
    10. 'line' → logprob: -6.91878080368042

Token 52: '.array' (ID: 14557)
  Prédit: '.array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.array' → logprob: -0.01898357644677162
    2. '.from' → logprob: -4.018983364105225
    3. '.asarray' → logprob: -7.143983364105225
    4. 'array' → logprob: -10.518983840942383
    5. '.' → logprob: -11.393983840942383
    6. 'from' → logprob: -12.643983840942383
    7. '.as' → logprob: -14.893983840942383
    8. '.strptime' → logprob: -15.268983840942383
    9. '.ar' → logprob: -15.643983840942383
    10. '_array' → logprob: -15.643983840942383

Token 53: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.05751730501651764
    2. '([' → logprob: -3.1825172901153564
    3. '(' → logprob: -4.3075175285339355
    4. '(line' → logprob: -7.0575175285339355
    5. '(np' → logprob: -10.932517051696777
    6. '(eval' → logprob: -10.932517051696777
    7. '(tuple' → logprob: -11.307517051696777
    8. '([(' → logprob: -11.682517051696777
    9. 'list' → logprob: -11.807517051696777
    10. '[list' → logprob: -12.932517051696777

Token 54: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0006807420286349952
    2. '(' → logprob: -8.000680923461914
    3. '(line' → logprob: -8.250680923461914
    4. 'map' → logprob: -9.500680923461914
    5. '(filter' → logprob: -13.250680923461914
    6. '(int' → logprob: -13.375680923461914
    7. '	map' → logprob: -13.625680923461914
    8. '(
' → logprob: -14.250680923461914
    9. ' map' → logprob: -14.500680923461914
    10. ')' → logprob: -14.500680923461914

Token 55: '(to' (ID: 24042)
  Prédit: '(to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(to' → logprob: -0.014557158574461937
    2. 'to' → logprob: -4.264557361602783
    3. '(int' → logprob: -8.139556884765625
    4. '(' → logprob: -9.514556884765625
    5. ' to' → logprob: -11.264556884765625
    6. ')' → logprob: -12.389556884765625
    7. '(float' → logprob: -12.514556884765625
    8. '(parse' → logprob: -13.139556884765625
    9. '(lambda' → logprob: -13.764556884765625
    10. 'int' → logprob: -14.139556884765625

Token 56: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -1.9743012671824545e-05
    2. 'int' → logprob: -10.875020027160645
    3. '_float' → logprob: -15.250020027160645
    4. ' int' → logprob: -15.875020027160645
    5. 'Int' → logprob: -16.125019073486328
    6. '<int' → logprob: -16.250019073486328
    7. 'nt' → logprob: -16.750019073486328
    8. '_INT' → logprob: -17.500019073486328
    9. '[int' → logprob: -17.750019073486328
    10. '=int' → logprob: -17.875019073486328

Token 57: ',' (ID: 11)
  Prédit: ',line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',line' → logprob: -0.577979326248169
    2. ',' → logprob: -0.827979326248169
    3. ',int' → logprob: -6.70297908782959
    4. '(line' → logprob: -7.70297908782959
    5. ',(' → logprob: -9.45297908782959
    6. ' ,' → logprob: -9.57797908782959
    7. ',x' → logprob: -9.95297908782959
    8. ',map' → logprob: -10.07797908782959
    9. ',input' → logprob: -10.20297908782959
    10. ',list' → logprob: -11.07797908782959

Token 58: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.01872890256345272
    2. ' line' → logprob: -4.018728733062744
    3. '(line' → logprob: -7.893728733062744
    4. 'filter' → logprob: -9.018729209899902
    5. '   ' → logprob: -10.143729209899902
    6. ' ' → logprob: -10.893729209899902
    7. '	line' → logprob: -12.393729209899902
    8. '  ' → logprob: -12.518729209899902
    9. 'str' → logprob: -12.518729209899902
    10. 'list' → logprob: -12.643729209899902

Token 59: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.4019682705402374
    2. '().' → logprob: -1.151968240737915
    3. '.split' → logprob: -4.401968479156494
    4. 'strip' → logprob: -6.901968479156494
    5. '.rstrip' → logprob: -7.276968479156494
    6. '())))' → logprob: -8.401968002319336
    7. ')))' → logprob: -8.526968002319336
    8. '()' → logprob: -8.651968002319336
    9. '()))' → logprob: -9.026968002319336
    10. '(strip' → logprob: -9.151968002319336

Token 60: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.3358446166384965e-05
    2. '()' → logprob: -10.125053405761719
    3. '('' → logprob: -12.250053405761719
    4. '.split' → logprob: -12.500053405761719
    5. ' ().' → logprob: -13.250053405761719
    6. '()))' → logprob: -13.625053405761719
    7. '())))' → logprob: -14.375053405761719
    8. '())' → logprob: -15.500053405761719
    9. '   ' → logprob: -15.750053405761719
    10. '().'' → logprob: -15.875053405761719

Token 61: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.790129555156454e-05
    2. ' split' → logprob: -9.625067710876465
    3. '(split' → logprob: -14.000067710876465
    4. 'rstrip' → logprob: -14.375067710876465
    5. ' ' → logprob: -15.000067710876465
    6. 'replace' → logprob: -17.00006866455078
    7. 'strip' → logprob: -17.12506866455078
    8. '.split' → logprob: -17.25006866455078
    9. ')' → logprob: -17.50006866455078
    10. '```' → logprob: -17.87506866455078

Token 62: '()))' (ID: 16829)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.12218011170625687
    2. '()' → logprob: -2.872180223464966
    3. '('' → logprob: -3.372180223464966
    4. '()))' → logprob: -3.872180223464966
    5. '())))
' → logprob: -5.997179985046387
    6. '())' → logprob: -8.247179985046387
    7. '(' → logprob: -8.247179985046387
    8. '("' → logprob: -8.997179985046387
    9. '(','' → logprob: -9.622179985046387
    10. ')))' → logprob: -10.122179985046387

Token 63: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6940160989761353
    2. '))' → logprob: -0.6940160989761353
    3. '),' → logprob: -7.319015979766846
    4. ')))' → logprob: -8.569016456604004
    5. ')),' → logprob: -12.819016456604004
    6. ' )' → logprob: -12.819016456604004
    7. '))
' → logprob: -12.944016456604004
    8. ')
' → logprob: -13.319016456604004
    9. ' ))' → logprob: -13.569016456604004
    10. ').' → logprob: -14.194016456604004

Token 64: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06115458160638809
    2. '
' → logprob: -4.561154365539551
    3. 'result' → logprob: -4.936154365539551
    4. 'class' → logprob: -4.936154365539551
    5. '\n' → logprob: -5.061154365539551
    6. 'n' → logprob: -5.311154365539551
    7. '#' → logprob: -5.436154365539551
    8. 'a' → logprob: -5.436154365539551
    9. '\' → logprob: -6.061154365539551
    10. 'x' → logprob: -6.311154365539551

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04604711756110191
    2. '=' → logprob: -3.4210472106933594
    3. ',' → logprob: -5.796047210693359
    4. '_' → logprob: -5.921047210693359
    5. 'um' → logprob: -6.171047210693359
    6. 'umber' → logprob: -6.546047210693359
    7. ' ' → logprob: -6.796047210693359
    8. 'umbers' → logprob: -6.921047210693359
    9. '<|end|>' → logprob: -8.29604721069336
    10. '=int' → logprob: -8.92104721069336

Token 66: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4417884051799774
    2. ' int' → logprob: -1.0667884349822998
    3. 'int' → logprob: -4.941788196563721
    4. ' parse' → logprob: -5.816788196563721
    5. '10' → logprob: -6.566788196563721
    6. '<|end|>' → logprob: -7.691788196563721
    7. '32' → logprob: -8.816788673400879
    8. '20' → logprob: -8.816788673400879
    9. 'parse' → logprob: -8.816788673400879
    10. '5' → logprob: -9.316788673400879

Token 67: 'lambda' (ID: 35280)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.8991969227790833
    2. ' int' → logprob: -1.0241968631744385
    3. 'parse' → logprob: -2.6491968631744385
    4. ' parse' → logprob: -2.6491968631744385
    5. ')' → logprob: -3.8991968631744385
    6. ' ' → logprob: -4.024197101593018
    7. '3' → logprob: -4.399197101593018
    8. 'input' → logprob: -4.399197101593018
    9. '5' → logprob: -5.274197101593018
    10. ' input' → logprob: -5.524197101593018

Token 68: ' f' (ID: 285)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7033059000968933
    2. ' x' → logprob: -1.453305959701538
    3. 'x' → logprob: -2.578305959701538
    4. ' n' → logprob: -2.953305959701538
    5. 'int' → logprob: -3.828305959701538
    6. ' int' → logprob: -4.453305721282959
    7. 'n' → logprob: -4.578305721282959
    8. ' s' → logprob: -4.578305721282959
    9. ' parse' → logprob: -4.578305721282959
    10. ' :' → logprob: -4.578305721282959

Token 69: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019621068611741066
    2. '=lambda' → logprob: -4.644620895385742
    3. ',' → logprob: -6.019620895385742
    4. '(lambda' → logprob: -6.644620895385742
    5. ')' → logprob: -6.894620895385742
    6. 'f' → logprob: -7.019620895385742
    7. 'lambda' → logprob: -7.144620895385742
    8. 'n' → logprob: -7.394620895385742
    9. '(n' → logprob: -7.394620895385742
    10. ' :' → logprob: -7.519620895385742

Token 70: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.3775350749492645
    2. 'lambda' → logprob: -2.377535104751587
    3. ' f' → logprob: -2.752535104751587
    4. ' (' → logprob: -2.877535104751587
    5. '(lambda' → logprob: -2.877535104751587
    6. ' lambda' → logprob: -3.627535104751587
    7. '(' → logprob: -4.627534866333008
    8. '(f' → logprob: -5.502534866333008
    9. '   ' → logprob: -6.752534866333008
    10. '(n' → logprob: -7.002534866333008

Token 71: '(f' (ID: 1526)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.608993649482727
    2. '(f' → logprob: -0.858993649482727
    3. ' (' → logprob: -4.4839935302734375
    4. '(n' → logprob: -5.2339935302734375
    5. 'lambda' → logprob: -5.4839935302734375
    6. 'f' → logprob: -5.7339935302734375
    7. '(' → logprob: -5.8589935302734375
    8. '=lambda' → logprob: -6.1089935302734375
    9. ')' → logprob: -6.3589935302734375
    10. ':' → logprob: -7.4839935302734375

Token 72: '))(' (ID: 72297)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.29400894045829773
    2. ')' → logprob: -2.29400897026062
    3. '))' → logprob: -3.04400897026062
    4. '(lambda' → logprob: -3.41900897026062
    5. '))(' → logprob: -3.54400897026062
    6. 'f' → logprob: -4.044008731842041
    7. ',' → logprob: -4.169008731842041
    8. 'lambda' → logprob: -5.669008731842041
    9. '=lambda' → logprob: -5.919008731842041
    10. ',f' → logprob: -6.669008731842041

Token 73: 'lambda' (ID: 35280)
  Prédit: 'lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.07908685505390167
    2. ' lambda' → logprob: -2.5790867805480957
    3. '(lambda' → logprob: -8.704087257385254
    4. '=lambda' → logprob: -11.204087257385254
    5. 'ambda' → logprob: -11.829087257385254
    6. '   ' → logprob: -12.329087257385254
    7. ' (' → logprob: -12.954087257385254
    8. ')' → logprob: -13.954087257385254
    9. ' ' → logprob: -14.579087257385254
    10. '    ' → logprob: -14.829087257385254

Token 74: ' f' (ID: 285)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.221887469291687
    2. 'f' → logprob: -1.721887469291687
    3. ' lambda' → logprob: -3.9718875885009766
    4. ' f' → logprob: -7.471887588500977
    5. 'g' → logprob: -7.971887588500977
    6. 'x' → logprob: -8.346887588500977
    7. 'n' → logprob: -8.471887588500977
    8. 'self' → logprob: -10.971887588500977
    9. ' n' → logprob: -11.346887588500977
    10. '(lambda' → logprob: -12.096887588500977

Token 75: ':' (ID: 25)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6407289505004883
    2. 'ambda' → logprob: -1.3907289505004883
    3. 'n' → logprob: -2.5157289505004883
    4. ':' → logprob: -3.0157289505004883
    5. ' lambda' → logprob: -3.0157289505004883
    6. ' n' → logprob: -3.5157289505004883
    7. '=lambda' → logprob: -5.515728950500488
    8. ' :' → logprob: -6.515728950500488
    9. 'f' → logprob: -6.515728950500488
    10. ' ' → logprob: -6.515728950500488

Token 76: ' int' (ID: 677)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.024970343336462975
    2. '(lambda' → logprob: -4.024970531463623
    3. ' lambda' → logprob: -5.024970531463623
    4. 'n' → logprob: -9.024970054626465
    5. '=lambda' → logprob: -10.899970054626465
    6. ' n' → logprob: -11.024970054626465
    7. 'int' → logprob: -11.024970054626465
    8. 'ambda' → logprob: -11.524970054626465
    9. ' ' → logprob: -11.649970054626465
    10. '(n' → logprob: -12.149970054626465

Token 77: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0021388400346040726
    2. '(' → logprob: -6.252138614654541
    3. 'input' → logprob: -8.5021390914917
    4. '(
' → logprob: -12.6271390914917
    5. ' (' → logprob: -14.1271390914917
    6. '(

' → logprob: -14.1271390914917
    7. '(parse' → logprob: -14.6271390914917
    8. ' input' → logprob: -14.7521390914917
    9. '('' → logprob: -14.8771390914917
    10. '((' → logprob: -15.2521390914917

Token 78: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.31600677967071533
    2. '())' → logprob: -1.4410067796707153
    3. '()' → logprob: -3.816006660461426
    4. '().' → logprob: -5.191006660461426
    5. '())))' → logprob: -5.316006660461426
    6. '(' → logprob: -7.191006660461426
    7. '()));' → logprob: -7.816006660461426
    8. '()))
' → logprob: -8.941006660461426
    9. '()))

' → logprob: -9.566006660461426
    10. '())
' → logprob: -9.691006660461426

Token 79: 'vectors' (ID: 184778)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3952830731868744
    2. '
' → logprob: -1.7702831029891968
    3. '\n' → logprob: -3.6452829837799072
    4. '(n' → logprob: -3.7702829837799072
    5. ' ' → logprob: -3.8952829837799072
    6. '*' → logprob: -4.020283222198486
    7. '(' → logprob: -4.145283222198486
    8. '#' → logprob: -4.270283222198486
    9. '<|end|>' → logprob: -4.270283222198486
    10. '()' → logprob: -5.395283222198486

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1383800208568573
    2. 's' → logprob: -2.8883800506591797
    3. '[' → logprob: -3.2633800506591797
    4. '=' → logprob: -3.5133800506591797
    5. '[]' → logprob: -6.76338005065918
    6. '[:]' → logprob: -6.88838005065918
    7. '_vectors' → logprob: -7.26338005065918
    8. '.' → logprob: -7.38838005065918
    9. '_' → logprob: -7.63838005065918
    10. '[n' → logprob: -8.13838005065918

Token 81: ' reduce' (ID: 10389)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.6769323945045471
    2. '[np' → logprob: -1.5519323348999023
    3. ' []' → logprob: -1.8019323348999023
    4. ' np' → logprob: -2.9269323348999023
    5. '[' → logprob: -3.4269323348999023
    6. '[]' → logprob: -3.8019323348999023
    7. 'np' → logprob: -5.426932334899902
    8. '[list' → logprob: -7.176932334899902
    9. ' ' → logprob: -7.551932334899902
    10. '[get' → logprob: -8.801932334899902

Token 82: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7954556345939636
    2. '(lambda' → logprob: -1.0454556941986084
    3. '(operator' → logprob: -1.6704556941986084
    4. '(np' → logprob: -4.795455455780029
    5. '(
' → logprob: -7.420455455780029
    6. '((' → logprob: -10.920455932617188
    7. ' (' → logprob: -11.295455932617188
    8. '(

' → logprob: -11.670455932617188
    9. '(op' → logprob: -11.920455932617188
    10. '```' → logprob: -13.170455932617188

Token 83: '   ' (ID: 271)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.5009172558784485
    2. ' lambda' → logprob: -1.3759171962738037
    3. '(lambda' → logprob: -2.3759171962738037
    4. '   ' → logprob: -3.2509171962738037
    5. 'np' → logprob: -5.875917434692383
    6. 'operator' → logprob: -6.000917434692383
    7. ' np' → logprob: -6.375917434692383
    8. ')' → logprob: -7.500917434692383
    9. ' operator' → logprob: -7.625917434692383
    10. '(operator' → logprob: -7.875917434692383

Token 84: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.13054534792900085
    2. 'np' → logprob: -3.2555453777313232
    3. ' lambda' → logprob: -3.3805453777313232
    4. '   ' → logprob: -3.6305453777313232
    5. 'operator' → logprob: -4.005545139312744
    6. '(lambda' → logprob: -5.880545139312744
    7. ' np' → logprob: -6.630545139312744
    8. ' operator' → logprob: -8.005545616149902
    9. '    ' → logprob: -9.130545616149902
    10. '       ' → logprob: -9.255545616149902

Token 85: ' acc' (ID: 1259)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.47394293546676636
    2. ' a' → logprob: -1.8489429950714111
    3. ' acc' → logprob: -2.223942995071411
    4. ' x' → logprob: -3.098942995071411
    5. ' f' → logprob: -3.723942995071411
    6. 'lambda' → logprob: -4.223942756652832
    7. 'a' → logprob: -4.848942756652832
    8. 'acc' → logprob: -5.848942756652832
    9. ' accumulator' → logprob: -6.098942756652832
    10. ' ' → logprob: -6.598942756652832

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002371521550230682
    2. ' ,' → logprob: -9.375237464904785
    3. 'lambda' → logprob: -9.750237464904785
    4. 'acc' → logprob: -10.875237464904785
    5. ',v' → logprob: -11.125237464904785
    6. '=lambda' → logprob: -11.125237464904785
    7. ',x' → logprob: -11.625237464904785
    8. ' lambda' → logprob: -11.875237464904785
    9. 's' → logprob: -12.500237464904785
    10. ',
' → logprob: -12.500237464904785

Token 87: ' _:' (ID: 133568)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -1.4283636808395386
    2. ' v' → logprob: -1.5533636808395386
    3. ' vec' → logprob: -1.6783636808395386
    4. 'v' → logprob: -2.303363800048828
    5. ' x' → logprob: -2.553363800048828
    6. 'x' → logprob: -2.928363800048828
    7. ' acc' → logprob: -3.178363800048828
    8. ' line' → logprob: -4.053363800048828
    9. 'acc' → logprob: -4.553363800048828
    10. ' arr' → logprob: -4.928363800048828

Token 88: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.7049570083618164
    2. ' acc' → logprob: -1.4549570083618164
    3. 'np' → logprob: -1.5799570083618164
    4. ' np' → logprob: -3.3299570083618164
    5. '   ' → logprob: -3.7049570083618164
    6. ' ' → logprob: -6.829957008361816
    7. '(acc' → logprob: -7.204957008361816
    8. '	acc' → logprob: -7.454957008361816
    9. 'lambda' → logprob: -7.642457008361816
    10. '  ' → logprob: -7.829957008361816

Token 89: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1274871826171875
    2. ' +' → logprob: -2.1274871826171875
    3. '+[' → logprob: -9.002487182617188
    4. '+:' → logprob: -9.627487182617188
    5. '-' → logprob: -9.627487182617188
    6. '+=' → logprob: -9.877487182617188
    7. ':' → logprob: -10.252487182617188
    8. '|' → logprob: -10.627487182617188
    9. '.append' → logprob: -10.627487182617188
    10. '+
' → logprob: -11.002487182617188

Token 90: ' [' (ID: 723)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.49832117557525635
    2. '[' → logprob: -1.3733211755752563
    3. ' parse' → logprob: -3.248321056365967
    4. ' [' → logprob: -3.998321056365967
    5. '[np' → logprob: -4.123321056365967
    6. 'list' → logprob: -4.623321056365967
    7. '[list' → logprob: -4.623321056365967
    8. '[int' → logprob: -4.623321056365967
    9. '(parse' → logprob: -4.748321056365967
    10. '1' → logprob: -5.623321056365967

Token 91: 'parse' (ID: 4841)
  Prédit: 'parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.021351246163249016
    2. ' parse' → logprob: -4.021351337432861
    3. 'np' → logprob: -6.271351337432861
    4. 'list' → logprob: -7.771351337432861
    5. '(parse' → logprob: -8.146350860595703
    6. ' np' → logprob: -8.896350860595703
    7. '   ' → logprob: -9.396350860595703
    8. ' ' → logprob: -9.396350860595703
    9. '	parse' → logprob: -10.083850860595703
    10. '[' → logprob: -10.271350860595703

Token 92: '_vector' (ID: 29530)
  Prédit: '_vector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_vector' → logprob: -0.002690748078748584
    2. '(input' → logprob: -6.62769079208374
    3. 'vector' → logprob: -6.75269079208374
    4. '_vectors' → logprob: -9.627690315246582
    5. 'input' → logprob: -10.877690315246582
    6. '_VECTOR' → logprob: -11.252690315246582
    7. 'Vector' → logprob: -11.377690315246582
    8. 've' → logprob: -11.752690315246582
    9. '_' → logprob: -12.002690315246582
    10. 'vectors' → logprob: -12.127690315246582

Token 93: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00013083349040243775
    2. '(' → logprob: -9.375130653381348
    3. 'input' → logprob: -10.125130653381348
    4. ' (' → logprob: -12.750130653381348
    5. '(
' → logprob: -14.000130653381348
    6. ' input' → logprob: -14.250130653381348
    7. '   ' → logprob: -15.250130653381348
    8. '(sys' → logprob: -15.375130653381348
    9. '((' → logprob: -15.500130653381348
    10. ' ' → logprob: -15.625130653381348

Token 94: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0012134487042203546
    2. '()' → logprob: -6.876213550567627
    3. ')],' → logprob: -9.501213073730469
    4. ')],
' → logprob: -9.751213073730469
    5. '()]' → logprob: -11.126213073730469
    6. '()
' → logprob: -12.251213073730469
    7. ' ())' → logprob: -12.251213073730469
    8. '())
' → logprob: -12.376213073730469
    9. ')' → logprob: -12.376213073730469
    10. ')]' → logprob: -12.501213073730469

Token 95: '],
' (ID: 2274)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.07767347991466522
    2. '],
' → logprob: -2.8276734352111816
    3. ',' → logprob: -5.077673435211182
    4. ']' → logprob: -5.952673435211182
    5. '   ' → logprob: -6.452673435211182
    6. ' ],' → logprob: -7.327673435211182
    7. '(n' → logprob: -7.327673435211182
    8. '(' → logprob: -7.452673435211182
    9. '()],' → logprob: -7.702673435211182
    10. ' ' → logprob: -7.827673435211182

Token 96: '   ' (ID: 271)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3528563678264618
    2. 'n' → logprob: -1.2278563976287842
    3. '   ' → logprob: -6.102856159210205
    4. ' vectors' → logprob: -7.227856159210205
    5. '    ' → logprob: -7.602856159210205
    6. ' ' → logprob: -8.477856636047363
    7. 'vectors' → logprob: -9.352856636047363
    8. '       ' → logprob: -9.602856636047363
    9. '	n' → logprob: -9.727856636047363
    10. '(n' → logprob: -9.727856636047363

Token 97: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' (adapté à ' range') → logprob: -0.0454246923327446
    2. ' range' → logprob: -3.295424699783325
    3. '   ' → logprob: -5.045424461364746
    4. '[' → logprob: -7.670424461364746
    5. ' ' → logprob: -8.420424461364746
    6. '  ' → logprob: -9.420424461364746
    7. '    ' → logprob: -9.670424461364746
    8. ' [' → logprob: -10.920424461364746
    9. '(range' → logprob: -11.045424461364746
    10. '	range' → logprob: -11.295424461364746

Token 98: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0010511501459404826
    2. '(' → logprob: -6.87605094909668
    3. 'n' → logprob: -11.00105094909668
    4. '(
' → logprob: -14.00105094909668
    5. '1' → logprob: -15.62605094909668
    6. ' n' → logprob: -15.87605094909668
    7. '((' → logprob: -16.00105094909668
    8. '   ' → logprob: -16.37605094909668
    9. ' (' → logprob: -16.62605094909668
    10. ')n' → logprob: -16.75105094909668

Token 99: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.8113964200019836
    2. '),
' → logprob: -0.9363964200019836
    3. '()),
' → logprob: -2.561396360397339
    4. '()),' → logprob: -2.811396360397339
    5. '(n' → logprob: -4.561396598815918
    6. ')' → logprob: -4.811396598815918
    7. '(' → logprob: -5.436396598815918
    8. ')
' → logprob: -7.061396598815918
    9. '()' → logprob: -7.436396598815918
    10. ')),' → logprob: -7.436396598815918

Token 100: '   ' (ID: 271)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3769702911376953
    2. '[])' → logprob: -1.3769702911376953
    3. ' [])' → logprob: -3.5019702911376953
    4. '[]
' → logprob: -4.251970291137695
    5. '   ' → logprob: -5.251970291137695
    6. ' []' → logprob: -5.376970291137695
    7. '[],' → logprob: -5.626970291137695
    8. ')' → logprob: -6.876970291137695
    9. '[],
' → logprob: -7.376970291137695
    10. '  ' → logprob: -7.626970291137695

Token 101: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.43343836069107056
    2. '[])' → logprob: -1.4334383010864258
    3. '[]
' (adapté à ' []
') → logprob: -2.183438301086426
    4. '[],' → logprob: -7.683438301086426
    5. '[]

' → logprob: -9.808438301086426
    6. '[],
' → logprob: -10.433438301086426
    7. '[])
' → logprob: -11.058438301086426
    8. '[]}' → logprob: -12.058438301086426
    9. ' [])' → logprob: -12.308438301086426
    10. ' []' → logprob: -12.558438301086426

Token 102: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ')
' → logprob: -13.12500286102295
    3. ' )' → logprob: -16.375001907348633
    4. '))' → logprob: -16.500001907348633
    5. ')

' → logprob: -16.750001907348633
    6. ')`' → logprob: -16.750001907348633
    7. '),' → logprob: -17.000001907348633
    8. ')#' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.375001907348633
    10. '```' → logprob: -18.750001907348633

Token 103: 'distance' (ID: 40614)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.7424759864807129
    2. 'for' → logprob: -2.117475986480713
    3. 'ops' → logprob: -2.867475986480713
    4. 'result' → logprob: -3.242475986480713
    5. 'def' → logprob: -3.367475986480713
    6. 'print' → logprob: -3.367475986480713
    7. 'vectors' → logprob: -3.367475986480713
    8. 'results' → logprob: -3.742475986480713
    9. 'm' → logprob: -3.992475986480713
    10. '#' → logprob: -4.367475986480713

Token 104: '_acc' (ID: 35551)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04114220291376114
    2. ' =' → logprob: -3.416142225265503
    3. '=' → logprob: -5.666141986846924
    4. '_s' → logprob: -6.166141986846924
    5. '_' → logprob: -6.916141986846924
    6. '(' → logprob: -7.791141986846924
    7. '_squared' → logprob: -8.416142463684082
    8. '_matrix' → logprob: -9.666142463684082
    9. '_vectors' → logprob: -10.291142463684082
    10. '_sum' → logprob: -10.416142463684082

Token 105: 'umulator' (ID: 90989)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8592878580093384
    2. 'umulator' → logprob: -1.2342878580093384
    3. '=' → logprob: -1.7342878580093384
    4. 'um' → logprob: -2.484287738800049
    5. 'umulate' → logprob: -4.234287738800049
    6. 'umul' → logprob: -4.734287738800049
    7. 'u' → logprob: -7.109287738800049
    8. '   ' → logprob: -7.359287738800049
    9. 's' → logprob: -8.359288215637207
    10. 'umulative' → logprob: -8.984288215637207

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012557920068502426
    2. '=' → logprob: -4.3875579833984375
    3. 's' → logprob: -10.137557983398438
    4. ',' → logprob: -13.137557983398438
    5. '=lambda' → logprob: -13.262557983398438
    6. ' ' → logprob: -13.387557983398438
    7. '_' → logprob: -13.512557983398438
    8. '   ' → logprob: -14.512557983398438
    9. 'def' → logprob: -15.012557983398438
    10. ')' → logprob: -15.012557983398438

Token 107: ' lambda' (ID: 27871)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7347220182418823
    2. 'lambda' → logprob: -1.1097220182418823
    3. ' lambda' → logprob: -2.359722137451172
    4. 'np' → logprob: -3.859722137451172
    5. '[]' → logprob: -4.109722137451172
    6. '(lambda' → logprob: -4.234722137451172
    7. 'Decimal' → logprob: -4.359722137451172
    8. ' ' → logprob: -4.734722137451172
    9. ' Decimal' → logprob: -5.109722137451172
    10. ' []' → logprob: -5.484722137451172

Token 108: ' pairs' (ID: 24702)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.12075421959161758
    2. ' a' → logprob: -2.8707542419433594
    3. ' x' → logprob: -3.7457542419433594
    4. 'acc' → logprob: -4.745754241943359
    5. ' dist' → logprob: -5.120754241943359
    6. ' arr' → logprob: -5.370754241943359
    7. ' v' → logprob: -6.120754241943359
    8. ' d' → logprob: -6.245754241943359
    9. 'a' → logprob: -6.245754241943359
    10. ' vectors' → logprob: -6.495754241943359

Token 109: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09171157330274582
    2. ',' → logprob: -2.4667115211486816
    3. ' :' → logprob: -6.341711521148682
    4. 'acc' → logprob: -8.46671199798584
    5. 'pairs' → logprob: -8.71671199798584
    6. '=' → logprob: -8.84171199798584
    7. '_pairs' → logprob: -9.34171199798584
    8. ',p' → logprob: -9.71671199798584
    9. 's' → logprob: -10.59171199798584
    10. '(acc' → logprob: -10.59171199798584

Token 110: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.2121092081069946
    2. ' reduce' → logprob: -1.3371092081069946
    3. ' sum' → logprob: -1.4621092081069946
    4. 'sum' → logprob: -1.7121092081069946
    5. ' Decimal' → logprob: -5.337109088897705
    6. 'Decimal' → logprob: -5.337109088897705
    7. 'np' → logprob: -6.212109088897705
    8. '[' → logprob: -6.462109088897705
    9. ' np' → logprob: -6.462109088897705
    10. '   ' → logprob: -6.712109088897705

Token 111: '(
' (ID: 1607)
  Prédit: '(operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(operator' → logprob: -0.123999685049057
    2. '(' → logprob: -2.62399959564209
    3. '(lambda' → logprob: -3.24899959564209
    4. '(
' → logprob: -5.24899959564209
    5. 'operator' → logprob: -11.49899959564209
    6. '   ' → logprob: -11.87399959564209
    7. '(

' → logprob: -11.99899959564209
    8. '(
' → logprob: -12.24899959564209
    9. '(op' → logprob: -12.24899959564209
    10. '(np' → logprob: -12.99899959564209

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3379996120929718
    2. 'operator' → logprob: -1.4629995822906494
    3. 'lambda' → logprob: -2.9629995822906494
    4. '(lambda' → logprob: -6.5879998207092285
    5. ' operator' → logprob: -7.0879998207092285
    6. '(operator' → logprob: -7.4629998207092285
    7. ' lambda' → logprob: -7.9629998207092285
    8. '	operator' → logprob: -8.58799934387207
    9. '    
' → logprob: -9.83799934387207
    10. '       ' → logprob: -9.83799934387207

Token 113: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.6743358373641968
    2. 'operator' → logprob: -1.0493358373641968
    3. '   ' → logprob: -2.0493359565734863
    4. ' lambda' → logprob: -5.174335956573486
    5. ' operator' → logprob: -6.174335956573486
    6. '       ' → logprob: -6.299335956573486
    7. '(lambda' → logprob: -7.049335956573486
    8. '  ' → logprob: -7.924335956573486
    9. ' ' → logprob: -8.424335479736328
    10. '(operator' → logprob: -9.299335479736328

Token 114: ' total' (ID: 3609)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.16633866727352142
    2. 'acc' → logprob: -2.0413386821746826
    3. '   ' → logprob: -4.4163384437561035
    4. ' lambda' → logprob: -5.6663384437561035
    5. ' operator' → logprob: -6.2913384437561035
    6. 'lambda' → logprob: -6.5413384437561035
    7. ' op' → logprob: -7.0413384437561035
    8. ' ' → logprob: -7.0413384437561035
    9. 'operator' → logprob: -7.1663384437561035
    10. '  ' → logprob: -7.5413384437561035

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025978617486543953
    2. ' ,' → logprob: -8.500259399414062
    3. 'acc' → logprob: -10.625259399414062
    4. '   ' → logprob: -11.500259399414062
    5. ',
' → logprob: -12.250259399414062
    6. '_,' → logprob: -13.125259399414062
    7. 's' → logprob: -13.250259399414062
    8. ',x' → logprob: -13.375259399414062
    9. '  ' → logprob: -13.625259399414062
    10. ',total' → logprob: -13.875259399414062

Token 116: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.46594566106796265
    2. ' pair' → logprob: -1.0909457206726074
    3. '   ' → logprob: -3.9659457206726074
    4. 'acc' → logprob: -5.215945720672607
    5. ' xy' → logprob: -6.090945720672607
    6. 'p' → logprob: -6.215945720672607
    7. 'xy' → logprob: -6.465945720672607
    8. ' acc' → logprob: -6.590945720672607
    9. ' ' → logprob: -7.090945720672607
    10. ' p' → logprob: -7.215945720672607

Token 117: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.180879816180095e-05
    2. ' :' → logprob: -10.250051498413086
    3. ':
' → logprob: -12.250051498413086
    4. '_:' → logprob: -12.500051498413086
    5. 's' → logprob: -12.750051498413086
    6. ',' → logprob: -13.875051498413086
    7. '1' → logprob: -15.000051498413086
    8. '   ' → logprob: -15.062551498413086
    9. ',:' → logprob: -15.062551498413086
    10. '__:' → logprob: -15.062551498413086

Token 118: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.5304949283599854
    2. ' total' → logprob: -0.9054949283599854
    3. '   ' → logprob: -5.030494689941406
    4. ' ' → logprob: -7.905494689941406
    5. 'operator' → logprob: -9.280494689941406
    6. '  ' → logprob: -9.530494689941406
    7. '	total' → logprob: -9.530494689941406
    8. ' operator' → logprob: -10.030494689941406
    9. '    ' → logprob: -10.280494689941406
    10. ' Decimal' → logprob: -10.405494689941406

Token 119: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03382780775427818
    2. ' +' → logprob: -3.408827781677246
    3. '   ' → logprob: -9.533827781677246
    4. ' ' → logprob: -10.658827781677246
    5. '+(' → logprob: -11.033827781677246
    6. ':' → logprob: -11.408827781677246
    7. '+
' → logprob: -11.658827781677246
    8. '[' → logprob: -11.658827781677246
    9. '-' → logprob: -12.158827781677246
    10. '=' → logprob: -12.533827781677246

Token 120: ' np' (ID: 5374)
  Prédit: 'np'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'np' → logprob: -0.14029619097709656
    2. ' np' → logprob: -3.140296220779419
    3. '(np' → logprob: -3.390296220779419
    4. 'Decimal' → logprob: -4.39029598236084
    5. 'operator' → logprob: -4.39029598236084
    6. '(' → logprob: -5.01529598236084
    7. '(operator' → logprob: -5.51529598236084
    8. 'abs' → logprob: -5.76529598236084
    9. '((' → logprob: -5.89029598236084
    10. 'pair' → logprob: -6.01529598236084

Token 121: '.linalg' (ID: 89912)
  Prédit: '.linalg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.linalg' → logprob: -0.009338689967989922
    2. '.dot' → logprob: -5.134338855743408
    3. '.sum' → logprob: -6.009338855743408
    4. '.sqrt' → logprob: -7.009338855743408
    5. '.abs' → logprob: -10.63433837890625
    6. '.inner' → logprob: -11.88433837890625
    7. '.square' → logprob: -12.38433837890625
    8. 'l' → logprob: -12.63433837890625
    9. '.norm' → logprob: -13.38433837890625
    10. '.matmul' → logprob: -14.00933837890625

Token 122: '.norm' (ID: 73834)
  Prédit: '.norm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.norm' → logprob: -0.00019603055261541158
    2. 'norm' → logprob: -8.75019645690918
    3. '_norm' → logprob: -10.37519645690918
    4. '```' → logprob: -12.62519645690918
    5. 'Norm' → logprob: -14.00019645690918
    6. ' norm' → logprob: -14.12519645690918
    7. '-n' → logprob: -14.25019645690918
    8. '   ' → logprob: -15.50019645690918
    9. '``' → logprob: -16.00019645690918
    10. '
' → logprob: -16.00019645690918

Token 123: '(pair' (ID: 84884)
  Prédit: '(pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pair' → logprob: -0.0009399275877512991
    2. '(' → logprob: -8.000940322875977
    3. '(np' → logprob: -8.000940322875977
    4. 'pair' → logprob: -8.375940322875977
    5. '(
' → logprob: -10.875940322875977
    6. 'np' → logprob: -12.000940322875977
    7. ' pair' → logprob: -12.250940322875977
    8. '((' → logprob: -12.625940322875977
    9. '(*' → logprob: -13.125940322875977
    10. ' (' → logprob: -13.875940322875977

Token 124: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007660943083465099
    2. ')' → logprob: -5.632660865783691
    3. '(' → logprob: -6.132660865783691
    4. '(np' → logprob: -7.257660865783691
    5. '-' → logprob: -7.632660865783691
    6. ' -' → logprob: -9.007660865783691
    7. '))' → logprob: -9.132660865783691
    8. '([' → logprob: -9.882660865783691
    9. '[-' → logprob: -10.132660865783691
    10. '   ' → logprob: -10.257660865783691

Token 125: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017070265486836433
    2. '1' → logprob: -4.142070293426514
    3. '[' → logprob: -7.267070293426514
    4. ' ' → logprob: -8.642069816589355
    5. '(' → logprob: -10.142069816589355
    6. 'np' → logprob: -10.142069816589355
    7. '   ' → logprob: -11.392069816589355
    8. ')' → logprob: -11.392069816589355
    9. '
' → logprob: -11.704569816589355
    10. ']' → logprob: -12.142069816589355

Token 126: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.3943311870098114
    2. ' -' → logprob: -1.1443312168121338
    3. ']' → logprob: -5.269330978393555
    4. '-p' → logprob: -6.644330978393555
    5. '[' → logprob: -7.269330978393555
    6. ']-' → logprob: -9.019330978393555
    7. ' ' → logprob: -9.894330978393555
    8. '   ' → logprob: -10.769330978393555
    9. '-vector' → logprob: -10.769330978393555
    10. 'pair' → logprob: -11.269330978393555

Token 127: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20209495723247528
    2. '-' → logprob: -1.7020949125289917
    3. '-p' → logprob: -7.327095031738281
    4. ' ' → logprob: -11.952095031738281
    5. '-vector' → logprob: -12.327095031738281
    6. '[' → logprob: -12.452095031738281
    7. ')' → logprob: -13.827095031738281
    8. 'pair' → logprob: -13.952095031738281
    9. '   ' → logprob: -13.952095031738281
    10. ',' → logprob: -14.077095031738281

Token 128: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.008617646060883999
    2. ' pair' → logprob: -4.758617877960205
    3. '(pair' → logprob: -13.008617401123047
    4. '   ' → logprob: -14.508617401123047
    5. ' ' → logprob: -15.633617401123047
    6. '<pair' → logprob: -16.133617401123047
    7. '  ' → logprob: -17.008617401123047
    8. '
' → logprob: -17.258617401123047
    9. 'pairs' → logprob: -18.508617401123047
    10. ')' → logprob: -19.133617401123047

Token 129: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.3954463510308415e-05
    2. '0' → logprob: -10.000054359436035
    3. 's' → logprob: -12.625054359436035
    4. 'pair' → logprob: -12.750054359436035
    5. '   ' → logprob: -14.625054359436035
    6. ' [' → logprob: -15.125054359436035
    7. '(' → logprob: -15.125054359436035
    8. '[
' → logprob: -15.250054359436035
    9. '{' → logprob: -15.500054359436035
    10. '1' → logprob: -15.937554359436035

Token 130: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0921942703134846e-05
    2. '[' → logprob: -11.50001049041748
    3. '1' → logprob: -15.12501049041748
    4. ' ' → logprob: -15.12501049041748
    5. '   ' → logprob: -16.250011444091797
    6. '-' → logprob: -18.062511444091797
    7. '(' → logprob: -18.125011444091797
    8. '۰' → logprob: -18.312511444091797
    9. ')' → logprob: -18.375011444091797
    10. 'pair' → logprob: -18.625011444091797

Token 131: ']),
' (ID: 34147)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33186712861061096
    2. '),' → logprob: -1.4568670988082886
    3. '),
' → logprob: -3.081867218017578
    4. ')**' → logprob: -6.581867218017578
    5. ')
' → logprob: -6.956867218017578
    6. '),

' → logprob: -7.331867218017578
    7. '**' → logprob: -9.206867218017578
    8. ' )' → logprob: -9.206867218017578
    9. ',' → logprob: -9.456867218017578
    10. ' ),' → logprob: -9.706867218017578

Token 132: '   ' (ID: 271)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.4997152090072632
    2. '   ' → logprob: -1.1247152090072632
    3. ' pairs' → logprob: -3.3747153282165527
    4. 'distance' → logprob: -4.249715328216553
    5. 'vectors' → logprob: -4.374715328216553
    6. ' vectors' → logprob: -5.249715328216553
    7. ' distance' → logprob: -6.999715328216553
    8. ')' → logprob: -8.249714851379395
    9. ' distances' → logprob: -8.624714851379395
    10. 'vector' → logprob: -9.124714851379395

Token 133: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' (adapté à ' pairs') → logprob: -0.00023011912708170712
    2. ' pairs' → logprob: -8.875229835510254
    3. 'pair' → logprob: -9.625229835510254
    4. 'com' → logprob: -11.625229835510254
    5. '   ' → logprob: -12.000229835510254
    6. 'zip' → logprob: -12.375229835510254
    7. 'list' → logprob: -12.500229835510254
    8. 'p' → logprob: -14.500229835510254
    9. ' combinations' → logprob: -16.12523078918457
    10. ' ' → logprob: -16.25023078918457

Token 134: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03296991065144539
    2. ')' → logprob: -3.7829699516296387
    3. '   ' → logprob: -4.657969951629639
    4. ',
' → logprob: -8.78296947479248
    5. '       ' → logprob: -11.90796947479248
    6. '),' → logprob: -12.15796947479248
    7. ' ' → logprob: -12.15796947479248
    8. '_pairs' → logprob: -12.65796947479248
    9. ' ,' → logprob: -12.90796947479248
    10. '  ' → logprob: -13.40796947479248

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2867963314056396
    2. '[]' → logprob: -1.4117963314056396
    3. 'vectors' → logprob: -1.6617963314056396
    4. '[])' → logprob: -2.2867963314056396
    5. ')' → logprob: -2.9117963314056396
    6. '0' → logprob: -3.0367963314056396
    7. '[(' → logprob: -3.5367963314056396
    8. 'pairs' → logprob: -4.161796569824219
    9. 'np' → logprob: -4.536796569824219
    10. ' vectors' → logprob: -4.661796569824219

Token 136: ' Decimal' (ID: 56874)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5240240097045898
    2. 'Decimal' (adapté à ' Decimal') → logprob: -0.8990240097045898
    3. 'np' → logprob: -7.14902400970459
    4. ' Decimal' → logprob: -9.89902400970459
    5. 'decimal' → logprob: -10.27402400970459
    6. ' ' → logprob: -11.52402400970459
    7. 'float' → logprob: -11.64902400970459
    8. '   ' → logprob: -12.89902400970459
    9. 'Decimals' → logprob: -13.02402400970459
    10. '.' → logprob: -13.64902400970459

Token 137: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.349906325340271
    2. '('' → logprob: -1.224906325340271
    3. '("' → logprob: -6.5999064445495605
    4. '0' → logprob: -9.599905967712402
    5. ''' → logprob: -11.474905967712402
    6. '()' → logprob: -11.974905967712402
    7. '(
' → logprob: -12.099905967712402
    8. '('.' → logprob: -13.099905967712402
    9. '[' → logprob: -13.224905967712402
    10. '"' → logprob: -13.224905967712402

Token 138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12744267284870148
    2. ''' → logprob: -2.1274425983428955
    3. '"' → logprob: -7.627442836761475
    4. '(' → logprob: -12.002442359924316
    5. '('' → logprob: -12.252442359924316
    6. ')' → logprob: -12.377442359924316
    7. ' ' → logprob: -12.627442359924316
    8. ' '' → logprob: -13.877442359924316
    9. '`' → logprob: -14.002442359924316
    10. ''s' → logprob: -14.252442359924316

Token 139: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7252845029579476e-05
    2. ')
' → logprob: -10.875027656555176
    3. '))' → logprob: -12.250027656555176
    4. '),' → logprob: -12.875027656555176
    5. ' )' → logprob: -16.00002670288086
    6. ' ' → logprob: -16.00002670288086
    7. '   ' → logprob: -16.12502670288086
    8. ');' → logprob: -16.50002670288086
    9. '}' → logprob: -16.75002670288086
    10. ')`' → logprob: -16.75002670288086

Token 140: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2948405128554441e-05
    2. ')
' → logprob: -11.87501335144043
    3. '),' → logprob: -13.25001335144043
    4. '   ' → logprob: -13.75001335144043
    5. '))' → logprob: -13.75001335144043
    6. ' )' → logprob: -14.25001335144043
    7. ')

' → logprob: -14.75001335144043
    8. ')`' → logprob: -15.62501335144043
    9. ').' → logprob: -15.75001335144043
    10. ');' → logprob: -16.25001335144043

Token 141: 'all' (ID: 586)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7364229559898376
    2. ')' → logprob: -0.7364229559898376
    3. ' ' → logprob: -4.736423015594482
    4. ',' → logprob: -4.861423015594482
    5. '[' → logprob: -5.111423015594482
    6. '.' → logprob: -5.611423015594482
    7. '(
' → logprob: -5.736423015594482
    8. 'pairs' → logprob: -5.986423015594482
    9. '<|end|>' → logprob: -6.111423015594482
    10. 'def' → logprob: -6.486423015594482

Token 142: '_com' (ID: 10828)
  Prédit: '_per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.19031240046024323
    2. '_pairs' → logprob: -2.440312385559082
    3. '_com' → logprob: -3.440312385559082
    4. '_' → logprob: -3.565312385559082
    5. '_vectors' → logprob: -4.190312385559082
    6. 'per' → logprob: -5.565312385559082
    7. '_dist' → logprob: -5.815312385559082
    8. '_s' → logprob: -7.065312385559082
    9. 'com' → logprob: -7.190312385559082
    10. ' =' → logprob: -7.440312385559082

Token 143: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.0012672555167227983
    2. 'b' → logprob: -6.751267433166504
    3. 'utations' → logprob: -10.126267433166504
    4. 'inations' → logprob: -10.626267433166504
    5. 'plet' → logprob: -11.876267433166504
    6. 'positions' → logprob: -11.876267433166504
    7. 'bat' → logprob: -12.626267433166504
    8. 'bit' → logprob: -12.751267433166504
    9. 'par' → logprob: -13.251267433166504
    10. 'pat' → logprob: -13.751267433166504

Token 144: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1136380210518837
    2. '=' → logprob: -2.238637924194336
    3. '(' → logprob: -7.738637924194336
    4. '_' → logprob: -9.738637924194336
    5. '=lambda' → logprob: -9.988637924194336
    6. '   ' → logprob: -9.988637924194336
    7. 's' → logprob: -10.113637924194336
    8. '(com' → logprob: -10.113637924194336
    9. '(per' → logprob: -10.738637924194336
    10. '_vectors' → logprob: -11.238637924194336

Token 145: ' filter' (ID: 6690)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.7709709405899048
    2. 'list' → logprob: -0.7709709405899048
    3. ' list' → logprob: -3.2709708213806152
    4. 'per' → logprob: -4.395970821380615
    5. ' combinations' → logprob: -4.520970821380615
    6. '(com' → logprob: -5.395970821380615
    7. '[' → logprob: -5.895970821380615
    8. ' permutations' → logprob: -7.020970821380615
    9. '(per' → logprob: -7.145970821380615
    10. 'sum' → logprob: -7.270970821380615

Token 146: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.30057817697525024
    2. '(lambda' → logprob: -1.5505781173706055
    3. '(
' → logprob: -3.0505781173706055
    4. '(None' → logprob: -8.925578117370605
    5. '(

' → logprob: -11.550578117370605
    6. '(
' → logprob: -12.300578117370605
    7. '(per' → logprob: -13.550578117370605
    8. 'lambda' → logprob: -13.925578117370605
    9. '(com' → logprob: -13.925578117370605
    10. ' (' → logprob: -14.175578117370605

Token 147: '   ' (ID: 271)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.2322542816400528
    2. '(lambda' → logprob: -1.7322542667388916
    3. '   ' → logprob: -3.6072542667388916
    4. 'None' → logprob: -6.232254505157471
    5. ' lambda' → logprob: -6.732254505157471
    6. '(None' → logprob: -10.982254028320312
    7. '(
' → logprob: -11.232254028320312
    8. 'False' → logprob: -11.482254028320312
    9. 'false' → logprob: -11.607254028320312
    10. ' None' → logprob: -11.857254028320312

Token 148: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.0024842156562954187
    2. '(lambda' → logprob: -6.377484321594238
    3. 'None' → logprob: -7.377484321594238
    4. '   ' → logprob: -9.252484321594238
    5. ' lambda' → logprob: -9.752484321594238
    6. '    ' → logprob: -15.127484321594238
    7. 'False' → logprob: -15.127484321594238
    8. '  ' → logprob: -15.502484321594238
    9. ' ' → logprob: -15.627484321594238
    10. '(None' → logprob: -15.752484321594238

Token 149: ' pair' (ID: 10610)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.912761390209198
    2. ' x' → logprob: -1.5377614498138428
    3. 'lambda' → logprob: -1.9127614498138428
    4. ' pair' → logprob: -2.9127614498138428
    5. 'x' → logprob: -3.1627614498138428
    6. ' pairs' → logprob: -3.6627614498138428
    7. '(lambda' → logprob: -3.9127614498138428
    8. ' len' → logprob: -4.037761211395264
    9. ' combo' → logprob: -4.162761211395264
    10. 'pair' → logprob: -4.287761211395264

Token 150: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002347338479012251
    2. 's' → logprob: -6.377347469329834
    3. ' :' → logprob: -8.377346992492676
    4. '=' → logprob: -8.752346992492676
    5. 'pair' → logprob: -9.877346992492676
    6. '_pairs' → logprob: -9.877346992492676
    7. '(pair' → logprob: -10.127346992492676
    8. '_pair' → logprob: -10.127346992492676
    9. '=lambda' → logprob: -11.002346992492676
    10. '[' → logprob: -11.377346992492676

Token 151: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.1459062695503235
    2. 'len' → logprob: -2.6459062099456787
    3. 'np' → logprob: -3.8959062099456787
    4. ' pair' → logprob: -4.270906448364258
    5. '(pair' → logprob: -4.395906448364258
    6. 'abs' → logprob: -4.770906448364258
    7. 'all' → logprob: -6.270906448364258
    8. ' len' → logprob: -6.395906448364258
    9. ' abs' → logprob: -6.645906448364258
    10. 'operator' → logprob: -6.645906448364258

Token 152: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.010294860228896141
    2. ':' → logprob: -5.5102949142456055
    3. '!=' → logprob: -6.2602949142456055
    4. ' !=' → logprob: -6.5102949142456055
    5. ' is' → logprob: -6.6352949142456055
    6. '[::-' → logprob: -8.385294914245605
    7. ':=' → logprob: -8.510294914245605
    8. ' not' → logprob: -8.760294914245605
    9. ' :=' → logprob: -9.135294914245605
    10. '!=(' → logprob: -9.135294914245605

Token 153: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04700440540909767
    2. '1' → logprob: -3.422004461288452
    3. ' ' → logprob: -5.172004222869873
    4. 'np' → logprob: -5.797004222869873
    5. 'len' → logprob: -6.172004222869873
    6. ' len' → logprob: -7.984504222869873
    7. ' np' → logprob: -8.047004699707031
    8. ' not' → logprob: -8.984504699707031
    9. '...' → logprob: -8.984504699707031
    10. 'not' → logprob: -9.109504699707031

Token 154: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.38483938574790955
    2. '].' → logprob: -2.0098392963409424
    3. ']' → logprob: -2.5098392963409424
    4. ']!=' → logprob: -3.5098392963409424
    5. ' !=' → logprob: -3.8848392963409424
    6. '[' → logprob: -4.3848395347595215
    7. '.shape' → logprob: -4.5098395347595215
    8. ').' → logprob: -4.6348395347595215
    9. ')' → logprob: -5.5098395347595215
    10. '<' → logprob: -5.6348395347595215

Token 155: ' <=' (ID: 5017)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.07783108949661255
    2. '[' → logprob: -4.202831268310547
    3. '.shape' → logprob: -4.202831268310547
    4. ' !=' → logprob: -4.202831268310547
    5. ' is' → logprob: -4.702831268310547
    6. '.size' → logprob: -5.077831268310547
    7. '<' → logprob: -5.577831268310547
    8. '.tolist' → logprob: -5.702831268310547
    9. 'size' → logprob: -6.327831268310547
    10. 'not' → logprob: -6.702831268310547

Token 156: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.0007281593861989677
    2. ' pair' → logprob: -7.250728130340576
    3. '   ' → logprob: -11.750728607177734
    4. '  ' → logprob: -12.375728607177734
    5. ' ' → logprob: -13.250728607177734
    6. '2' → logprob: -13.500728607177734
    7. '(pair' → logprob: -14.125728607177734
    8. '1' → logprob: -14.625728607177734
    9. '0' → logprob: -15.250728607177734
    10. '
' → logprob: -15.250728607177734

Token 157: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002469158498570323
    2. 'pair' → logprob: -9.87524700164795
    3. '   ' → logprob: -10.25024700164795
    4. ' ' → logprob: -11.00024700164795
    5. '1' → logprob: -11.12524700164795
    6. '0' → logprob: -11.12524700164795
    7. ')' → logprob: -11.25024700164795
    8. '<|end|>' → logprob: -11.62524700164795
    9. ',' → logprob: -11.87524700164795
    10. '2' → logprob: -12.00024700164795

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011160464491695166
    2. '0' → logprob: -7.0011162757873535
    3. 'pair' → logprob: -9.126115798950195
    4. '[' → logprob: -9.501115798950195
    5. ' ' → logprob: -11.751115798950195
    6. ']' → logprob: -12.876115798950195
    7. '
' → logprob: -13.376115798950195
    8. ' pair' → logprob: -13.626115798950195
    9. '   ' → logprob: -13.876115798950195
    10. '(pair' → logprob: -13.938615798950195

Token 159: '],
' (ID: 2274)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4593193829059601
    2. '),' → logprob: -1.2093193531036377
    3. ')' → logprob: -2.9593193531036377
    4. ',
' → logprob: -4.459319591522217
    5. '),
' → logprob: -5.959319591522217
    6. ',)' → logprob: -6.084319591522217
    7. '   ' → logprob: -7.459319591522217
    8. '[' → logprob: -7.834319591522217
    9. ',),' → logprob: -8.834319114685059
    10. ' ,' → logprob: -8.834319114685059

Token 160: '   ' (ID: 271)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.3354181945323944
    2. ' combinations' → logprob: -1.8354182243347168
    3. '   ' → logprob: -2.210418224334717
    4. 'per' → logprob: -4.710418224334717
    5. ' permutations' → logprob: -5.210418224334717
    6. 'list' → logprob: -8.210417747497559
    7. 'all' → logprob: -8.335417747497559
    8. ' list' → logprob: -8.585417747497559
    9. '(com' → logprob: -8.835417747497559
    10. '	com' → logprob: -9.460417747497559

Token 161: ' map' (ID: 4014)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.03863554075360298
    2. 'per' → logprob: -3.288635492324829
    3. '(com' → logprob: -8.53863525390625
    4. ' combinations' → logprob: -8.66363525390625
    5. 'list' → logprob: -9.66363525390625
    6. 'product' → logprob: -9.78863525390625
    7. '(per' → logprob: -10.91363525390625
    8. ' permutations' → logprob: -11.16363525390625
    9. '[(' → logprob: -11.28863525390625
    10. 'np' → logprob: -11.53863525390625

Token 162: '(
' (ID: 1607)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5932832360267639
    2. '(' → logprob: -1.4682831764221191
    3. '(tuple' → logprob: -2.218283176422119
    4. '(
' → logprob: -2.343283176422119
    5. '(operator' → logprob: -4.843283176422119
    6. '(list' → logprob: -6.343283176422119
    7. 'tuple' → logprob: -6.843283176422119
    8. '(np' → logprob: -7.218283176422119
    9. '   ' → logprob: -8.093283653259277
    10. 'lambda' → logprob: -8.343283653259277

Token 163: '       ' (ID: 309)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.2036399394273758
    2. '   ' → logprob: -1.8286399841308594
    3. 'tuple' → logprob: -4.078639984130859
    4. 'np' → logprob: -6.078639984130859
    5. 'list' → logprob: -6.203639984130859
    6. 'operator' → logprob: -6.453639984130859
    7. '(lambda' → logprob: -7.953639984130859
    8. 'sorted' → logprob: -8.82863998413086
    9. ' lambda' → logprob: -8.95363998413086
    10. 'per' → logprob: -10.20363998413086

Token 164: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' (adapté à ' lambda') → logprob: -0.09357880800962448
    2. 'tuple' → logprob: -3.093578815460205
    3. '   ' → logprob: -3.343578815460205
    4. 'np' → logprob: -5.468578815460205
    5. 'list' → logprob: -5.968578815460205
    6. 'sorted' → logprob: -7.093578815460205
    7. 'operator' → logprob: -7.343578815460205
    8. '(lambda' → logprob: -8.843578338623047
    9. ' lambda' → logprob: -9.593578338623047
    10. 'com' → logprob: -10.343578338623047

Token 165: ' idx' (ID: 14016)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6816069483757019
    2. ' lambda' → logprob: -1.9316070079803467
    3. 'tuple' → logprob: -2.4316070079803467
    4. 'pair' → logprob: -2.8066070079803467
    5. ' tuple' → logprob: -3.1816070079803467
    6. 'list' → logprob: -3.5566070079803467
    7. 'pairs' → logprob: -3.8066070079803467
    8. '(lambda' → logprob: -4.056606769561768
    9. '   ' → logprob: -4.306606769561768
    10. ' comb' → logprob: -4.431606769561768

Token 166: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.030712416395545006
    2. ':' → logprob: -3.655712366104126
    3. '_pairs' → logprob: -5.905712604522705
    4. '_pair' → logprob: -7.030712604522705
    5. 'pair' → logprob: -7.905712604522705
    6. 'pairs' → logprob: -8.655712127685547
    7. '   ' → logprob: -9.780712127685547
    8. 'airs' → logprob: -10.030712127685547
    9. '_tuple' → logprob: -10.030712127685547
    10. 'x' → logprob: -10.280712127685547

Token 167: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006894402904435992
    2. ' :' → logprob: -8.500689506530762
    3. '(' → logprob: -8.750689506530762
    4. '(lambda' → logprob: -9.625689506530762
    5. ' (' → logprob: -9.750689506530762
    6. '(tuple' → logprob: -9.750689506530762
    7. '[' → logprob: -10.625689506530762
    8. '   ' → logprob: -10.875689506530762
    9. ',' → logprob: -11.000689506530762
    10. '):' → logprob: -11.125689506530762

Token 168: ' (' (ID: 350)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.05956810712814331
    2. '(tuple' → logprob: -3.434568166732788
    3. '(np' → logprob: -4.559567928314209
    4. '(' → logprob: -6.059567928314209
    5. '(list' → logprob: -6.309567928314209
    6. '[v' → logprob: -6.309567928314209
    7. '[' → logprob: -6.309567928314209
    8. ' (' → logprob: -6.559567928314209
    9. 'tuple' → logprob: -6.809567928314209
    10. '(per' → logprob: -6.934567928314209

Token 169: 'idx' (ID: 13196)
  Prédit: 'vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vectors' → logprob: -0.005325785372406244
    2. ' vectors' → logprob: -5.380325794219971
    3. '(v' → logprob: -7.505325794219971
    4. '   ' → logprob: -9.380325317382812
    5. '[v' → logprob: -11.380325317382812
    6. ')' → logprob: -11.505325317382812
    7. '_vectors' → logprob: -11.755325317382812
    8. 'np' → logprob: -11.755325317382812
    9. 'vector' → logprob: -12.380325317382812
    10. '[' → logprob: -12.630325317382812

Token 170: 's' (ID: 82)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.9753059148788452
    2. 'xs' → logprob: -0.9753059148788452
    3. 's' → logprob: -1.4753059148788452
    4. 'ex' → logprob: -5.225306034088135
    5. 'xes' → logprob: -5.600306034088135
    6. '[' → logprob: -5.725306034088135
    7. '[idx' → logprob: -6.100306034088135
    8. 'cs' → logprob: -7.600306034088135
    9. '[s' → logprob: -7.975306034088135
    10. '[x' → logprob: -8.350305557250977

Token 171: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0001097417771234177
    2. ')' → logprob: -10.250109672546387
    3. '0' → logprob: -10.500109672546387
    4. '),' → logprob: -10.875109672546387
    5. ',' → logprob: -12.000109672546387
    6. '[
' → logprob: -12.250109672546387
    7. '(' → logprob: -12.625109672546387
    8. '[...,' → logprob: -12.875109672546387
    9. ' [' → logprob: -13.250109672546387
    10. '),
' → logprob: -13.500109672546387

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.310693111619912e-05
    2. '[' → logprob: -11.125042915344238
    3. ' ' → logprob: -11.500042915344238
    4. '1' → logprob: -11.875042915344238
    5. '(' → logprob: -12.375042915344238
    6. '-' → logprob: -13.875042915344238
    7. ')' → logprob: -14.062542915344238
    8. '...' → logprob: -14.250042915344238
    9. ',' → logprob: -14.437542915344238
    10. '   ' → logprob: -14.500042915344238

Token 173: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.25258880853652954
    2. ',' → logprob: -1.5025887489318848
    3. '[idx' → logprob: -8.627589225769043
    4. '[' → logprob: -9.002589225769043
    5. ' ,' → logprob: -9.127589225769043
    6. ']' → logprob: -9.502589225769043
    7. '   ' → logprob: -10.377589225769043
    8. '),' → logprob: -11.002589225769043
    9. '][' → logprob: -11.002589225769043
    10. '  ' → logprob: -11.377589225769043

Token 174: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.00873216800391674
    2. ' idx' → logprob: -4.758732318878174
    3. '   ' → logprob: -9.883731842041016
    4. 'ids' → logprob: -11.633731842041016
    5. '_idxs' → logprob: -12.008731842041016
    6. 'indexes' → logprob: -12.008731842041016
    7. '
' → logprob: -12.258731842041016
    8. ')' → logprob: -12.383731842041016
    9. '	idx' → logprob: -12.508731842041016
    10. 'vectors' → logprob: -12.508731842041016

Token 175: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11234702169895172
    2. '[' → logprob: -2.61234712600708
    3. 'x' → logprob: -3.86234712600708
    4. 'xs' → logprob: -4.61234712600708
    5. '1' → logprob: -6.61234712600708
    6. '(' → logprob: -8.987346649169922
    7. ' ' → logprob: -8.987346649169922
    8. 'ex' → logprob: -9.612346649169922
    9. '0' → logprob: -9.612346649169922
    10. 'cs' → logprob: -10.362346649169922

Token 176: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.015521125867962837
    2. '+' → logprob: -4.515521049499512
    3. ' +' → logprob: -6.265521049499512
    4. '[idx' → logprob: -6.390521049499512
    5. 'idx' → logprob: -8.265521049499512
    6. ')' → logprob: -8.765521049499512
    7. '_idxs' → logprob: -8.765521049499512
    8. '   ' → logprob: -9.640521049499512
    9. ' [' → logprob: -10.765521049499512
    10. ' idx' → logprob: -10.765521049499512

Token 177: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004720733966678381
    2. '0' → logprob: -5.379720687866211
    3. ' ' → logprob: -10.379720687866211
    4. '+' → logprob: -10.754720687866211
    5. 'idx' → logprob: -11.004720687866211
    6. '[' → logprob: -11.004720687866211
    7. '   ' → logprob: -12.629720687866211
    8. '```' → logprob: -13.129720687866211
    9. '
' → logprob: -13.504720687866211
    10. '...' → logprob: -13.629720687866211

Token 178: ']),
' (ID: 34147)
  Prédit: '),
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.17041173577308655
    2. '),' → logprob: -1.9204117059707642
    3. ')' → logprob: -5.670411586761475
    4. '+' → logprob: -5.670411586761475
    5. ' +' → logprob: -6.295411586761475
    6. '),

' → logprob: -7.420411586761475
    7. '   ' → logprob: -8.545412063598633
    8. ' ),
' → logprob: -8.545412063598633
    9. '       ' → logprob: -9.295412063598633
    10. '),
' → logprob: -9.545412063598633

Token 179: '       ' (ID: 309)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.593368411064148
    2. 'range' → logprob: -1.718368411064148
    3. ' range' → logprob: -1.968368411064148
    4. ' combinations' → logprob: -2.9683685302734375
    5. 'com' → logprob: -3.3433685302734375
    6. 'per' → logprob: -4.3433685302734375
    7. ')' → logprob: -5.2183685302734375
    8. ' itertools' → logprob: -5.5933685302734375
    9. '       ' → logprob: -5.7183685302734375
    10. ' idx' → logprob: -5.8433685302734375

Token 180: ' permutations' (ID: 174595)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.00567789189517498
    2. 'per' → logprob: -5.255677700042725
    3. ' combinations' → logprob: -8.130678176879883
    4. '(com' → logprob: -10.130678176879883
    5. '   ' → logprob: -10.255678176879883
    6. 'product' → logprob: -11.130678176879883
    7. 'comb' → logprob: -11.255678176879883
    8. 'list' → logprob: -11.255678176879883
    9. ' permutations' → logprob: -11.255678176879883
    10. 'np' → logprob: -12.505678176879883

Token 181: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.01972287893295288
    2. '([' → logprob: -4.519722938537598
    3. '((' → logprob: -6.144722938537598
    4. '(id' → logprob: -6.269722938537598
    5. '(list' → logprob: -6.269722938537598
    6. '(v' → logprob: -6.519722938537598
    7. '(' → logprob: -7.394722938537598
    8. '(n' → logprob: -8.394722938537598
    9. '(
' → logprob: -8.894722938537598
    10. '(np' → logprob: -9.269722938537598

Token 182: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.2760944962501526
    2. 'n' → logprob: -2.026094436645508
    3. '(' → logprob: -2.651094436645508
    4. '2' → logprob: -3.651094436645508
    5. '(len' → logprob: -4.901094436645508
    6. 'len' → logprob: -6.026094436645508
    7. 'vectors' → logprob: -6.651094436645508
    8. ')' → logprob: -7.276094436645508
    9. '3' → logprob: -8.151094436645508
    10. ')n' → logprob: -8.776094436645508

Token 183: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.04312627390027046
    2. ',' → logprob: -3.168126344680786
    3. ',),' → logprob: -10.043126106262207
    4. '2' → logprob: -11.043126106262207
    5. '   ' → logprob: -11.293126106262207
    6. '],' → logprob: -11.543126106262207
    7. ')' → logprob: -12.043126106262207
    8. ' ,' → logprob: -12.043126106262207
    9. ' ),' → logprob: -12.168126106262207
    10. '},' → logprob: -12.168126106262207

Token 184: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004954866599291563
    2. ' ' → logprob: -7.625495433807373
    3. '   ' → logprob: -12.250495910644531
    4. '  ' → logprob: -14.625495910644531
    5. '           ' → logprob: -15.000495910644531
    6. '       ' → logprob: -15.250495910644531
    7. ')' → logprob: -15.250495910644531
    8. '                   ' → logprob: -15.875495910644531
    9. '                       ' → logprob: -16.12549591064453
    10. '               ' → logprob: -16.12549591064453

Token 185: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016599490481894463
    2. ' ' → logprob: -8.750165939331055
    3. '   ' → logprob: -12.750165939331055
    4. ')' → logprob: -13.000165939331055
    5. '```' → logprob: -14.875165939331055
    6. '  ' → logprob: -14.937665939331055
    7. '           ' → logprob: -15.875165939331055
    8. '
' → logprob: -16.125165939331055
    9. '       ' → logprob: -16.125165939331055
    10. '    ' → logprob: -16.375165939331055

Token 186: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026126401498913765
    2. ')))' → logprob: -6.252612590789795
    3. ')
' → logprob: -8.252613067626953
    4. '   ' → logprob: -8.502613067626953
    5. '))))' → logprob: -9.627613067626953
    6. '))' → logprob: -9.627613067626953
    7. '),' → logprob: -9.752613067626953
    8. '))),' → logprob: -11.752613067626953
    9. '       ' → logprob: -11.877613067626953
    10. ')));' → logprob: -12.002613067626953

Token 187: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09585371613502502
    2. '   ' → logprob: -2.470853805541992
    3. ')))' → logprob: -5.720853805541992
    4. '       ' → logprob: -6.470853805541992
    5. '),' → logprob: -7.095853805541992
    6. '))' → logprob: -7.220853805541992
    7. ')
' → logprob: -8.095853805541992
    8. '))))' → logprob: -9.595853805541992
    9. '<|end|>' → logprob: -10.720853805541992
    10. ')),' → logprob: -10.845853805541992

Token 188: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016113195568323135
    2. '   ' → logprob: -4.26611328125
    3. ')
' (adapté à ' )
') → logprob: -7.14111328125
    4. '))' → logprob: -7.26611328125
    5. ')))' → logprob: -7.76611328125
    6. '       ' → logprob: -10.89111328125
    7. '),' → logprob: -12.39111328125
    8. ' ' → logprob: -12.51611328125
    9. ' )' → logprob: -12.89111328125
    10. '))))' → logprob: -13.26611328125

Token 189: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010199354437645525
    2. ')
' → logprob: -9.750102043151855
    3. '),' → logprob: -10.625102043151855
    4. '   ' → logprob: -11.625102043151855
    5. '))' → logprob: -11.750102043151855
    6. ' )' → logprob: -13.875102043151855
    7. ')))' → logprob: -14.750102043151855
    8. ' ' → logprob: -15.250102043151855
    9. ')

' → logprob: -15.625102043151855
    10. ')`' → logprob: -15.750102043151855

Token 190: 'unique' (ID: 22365)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14286582171916962
    2. 'pairs' → logprob: -2.2678658962249756
    3. 'distance' → logprob: -4.8928656578063965
    4. 'all' → logprob: -5.3928656578063965
    5. 'total' → logprob: -6.0178656578063965
    6. 'for' → logprob: -6.1428656578063965
    7. 'neighbors' → logprob: -6.2678656578063965
    8. '#' → logprob: -6.2678656578063965
    9. 'sum' → logprob: -6.7678656578063965
    10. '<|end|>' → logprob: -7.5178656578063965

Token 191: '_com' (ID: 10828)
  Prédit: '_pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: -0.03785394877195358
    2. '_com' → logprob: -3.537853956222534
    3. '_dist' → logprob: -4.912853717803955
    4. 'pairs' → logprob: -8.912854194641113
    5. '_vectors' → logprob: -9.037854194641113
    6. '_pair' → logprob: -9.287854194641113
    7. '_indices' → logprob: -9.912854194641113
    8. '_con' → logprob: -10.162854194641113
    9. '_' → logprob: -10.162854194641113
    10. '_points' → logprob: -10.787854194641113

Token 192: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.0002382249804213643
    2. 'b' → logprob: -9.375238418579102
    3. 'inations' → logprob: -9.500238418579102
    4. 'ations' → logprob: -10.250238418579102
    5. 'bination' → logprob: -10.625238418579102
    6. 'p' → logprob: -12.125238418579102
    7. 'ptions' → logprob: -12.875238418579102
    8. 'positions' → logprob: -12.875238418579102
    9. 'lations' → logprob: -13.250238418579102
    10. 'plet' → logprob: -13.250238418579102

Token 193: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009124171338044107
    2. '=' → logprob: -7.000912189483643
    3. ')' → logprob: -14.3759126663208
    4. ' =
' → logprob: -16.125911712646484
    5. ' =)' → logprob: -16.125911712646484
    6. 's' → logprob: -16.500911712646484
    7. '<|end|>' → logprob: -17.250911712646484
    8. ',' → logprob: -17.625911712646484
    9. '_' → logprob: -17.750911712646484
    10. '=lambda' → logprob: -17.813411712646484

Token 194: ' {(' (ID: 75216)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.5845096707344055
    2. 'list' → logprob: -1.0845096111297607
    3. 'filter' → logprob: -2.5845096111297607
    4. ' set' → logprob: -4.45950984954834
    5. 'com' → logprob: -4.70950984954834
    6. ' list' → logprob: -5.45950984954834
    7. ' filter' → logprob: -6.58450984954834
    8. 'sorted' → logprob: -6.58450984954834
    9. '{' → logprob: -7.95950984954834
    10. '[(' → logprob: -8.45950984954834

Token 195: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6652248501777649
    2. 'pair' → logprob: -1.6652247905731201
    3. 'a' → logprob: -2.04022479057312
    4. 'x' → logprob: -2.41522479057312
    5. 'i' → logprob: -3.41522479057312
    6. ')' → logprob: -4.165225028991699
    7. 'c' → logprob: -5.290225028991699
    8. 'v' → logprob: -5.540225028991699
    9. ' pair' → logprob: -5.790225028991699
    10. 'u' → logprob: -6.040225028991699

Token 196: '(i' (ID: 3649)
  Prédit: '(pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pair' → logprob: -0.5721049904823303
    2. '(a' → logprob: -1.5721049308776855
    3. '(x' → logprob: -2.4471049308776855
    4. '(id' → logprob: -3.1971049308776855
    5. 'pair' → logprob: -3.4471049308776855
    6. '(i' → logprob: -3.5721049308776855
    7. '(idx' → logprob: -3.6971049308776855
    8. '(*' → logprob: -6.1971049308776855
    9. '(com' → logprob: -6.1971049308776855
    10. 'idx' → logprob: -6.4471049308776855

Token 197: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006055828649550676
    2. ',i' → logprob: -6.00605583190918
    3. 'i' → logprob: -6.13105583190918
    4. ' ,' → logprob: -7.13105583190918
    5. 'idx' → logprob: -8.00605583190918
    6. ',j' → logprob: -9.13105583190918
    7. 's' → logprob: -9.63105583190918
    8. '),' → logprob: -10.63105583190918
    9. 'x' → logprob: -11.63105583190918
    10. '(i' → logprob: -12.38105583190918

Token 198: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0016224568244069815
    2. ' j' → logprob: -6.501622676849365
    3. 'pair' → logprob: -10.126622200012207
    4. 'a' → logprob: -10.251622200012207
    5. 'x' → logprob: -10.751622200012207
    6. 'i' → logprob: -11.376622200012207
    7. 'idx' → logprob: -12.876622200012207
    8. ' pair' → logprob: -12.876622200012207
    9. '   ' → logprob: -13.001622200012207
    10. 'v' → logprob: -13.751622200012207

Token 199: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015321242390200496
    2. ' ,' → logprob: -6.751532077789307
    3. '),' → logprob: -8.001532554626465
    4. ',j' → logprob: -11.376532554626465
    5. ',i' → logprob: -11.876532554626465
    6. ',
' → logprob: -12.501532554626465
    7. ')' → logprob: -13.376532554626465
    8. '},' → logprob: -14.251532554626465
    9. '),(' → logprob: -14.251532554626465
    10. '(i' → logprob: -14.626532554626465

Token 200: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.008615635335445404
    2. ' max' → logprob: -4.758615493774414
    3. '(max' → logprob: -13.883615493774414
    4. 'min' → logprob: -16.008615493774414
    5. ' ' → logprob: -17.508615493774414
    6. '	max' → logprob: -17.508615493774414
    7. '   ' → logprob: -17.758615493774414
    8. ',max' → logprob: -18.383615493774414
    9. '  ' → logprob: -18.883615493774414
    10. '[max' → logprob: -18.883615493774414

Token 201: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -15.875000953674316
    3. '(' → logprob: -16.0
    4. ' (' → logprob: -16.125
    5. ')(' → logprob: -16.875
    6. ')' → logprob: -17.625
    7. '{i' → logprob: -18.125
    8. '((' → logprob: -18.25
    9. '(I' → logprob: -18.625
    10. '[i' → logprob: -18.75

Token 202: ',' (ID: 11)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.141186450899113e-05
    2. 'i' → logprob: -11.125020980834961
    3. ' (' → logprob: -12.250020980834961
    4. '(' → logprob: -13.875020980834961
    5. ')' → logprob: -15.500020980834961
    6. '{i' → logprob: -15.750020980834961
    7. '[i' → logprob: -16.12502098083496
    8. ' i' → logprob: -16.50002098083496
    9. '(j' → logprob: -16.50002098083496
    10. '   ' → logprob: -16.87502098083496

Token 203: ' j' (ID: 441)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.69766765832901
    2. 'j' → logprob: -0.69766765832901
    3. ' i' → logprob: -6.197667598724365
    4. ' j' → logprob: -6.572667598724365
    5. ')' → logprob: -8.322668075561523
    6. 'k' → logprob: -8.322668075561523
    7. '   ' → logprob: -8.572668075561523
    8. ' ' → logprob: -8.822668075561523
    9. '(i' → logprob: -9.197668075561523
    10. '  ' → logprob: -9.822668075561523

Token 204: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.584861744660884e-05
    2. ' )' → logprob: -10.500045776367188
    3. ')
' → logprob: -11.000045776367188
    4. ')}' → logprob: -14.375045776367188
    5. '):' → logprob: -15.125045776367188
    6. '}' → logprob: -15.250045776367188
    7. '})' → logprob: -15.500045776367188
    8. ' ' → logprob: -15.875045776367188
    9. 'for' → logprob: -16.750045776367188
    10. '))' → logprob: -17.500045776367188

Token 205: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.10025477409362793
    2. 'for' → logprob: -2.350254774093628
    3. ' ' → logprob: -10.225255012512207
    4. '   ' → logprob: -11.600255012512207
    5. '	for' → logprob: -13.600255012512207
    6. ')' → logprob: -14.100255012512207
    7. '  ' → logprob: -15.350255012512207
    8. '
' → logprob: -15.475255012512207
    9. '    ' → logprob: -16.10025405883789
    10. ' in' → logprob: -16.72525405883789

Token 206: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5306836366653442
    2. 'i' → logprob: -0.9056836366653442
    3. ' (' → logprob: -5.155683517456055
    4. '(i' → logprob: -6.405683517456055
    5. ' ' → logprob: -9.530683517456055
    6. '   ' → logprob: -11.030683517456055
    7. '  ' → logprob: -11.655683517456055
    8. '	i' → logprob: -12.405683517456055
    9. ' ' → logprob: -12.780683517456055
    10. '[i' → logprob: -13.405683517456055

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002846602350473404
    2. ',j' → logprob: -6.627846717834473
    3. ' ,' → logprob: -6.752846717834473
    4. ' in' → logprob: -8.127846717834473
    5. 'in' → logprob: -10.377846717834473
    6. ',i' → logprob: -10.752846717834473
    7. ',v' → logprob: -13.002846717834473
    8. ',
' → logprob: -13.877846717834473
    9. ' ' → logprob: -15.252846717834473
    10. 'i' → logprob: -16.002845764160156

Token 208: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.017161911353468895
    2. ' j' → logprob: -4.142161846160889
    3. 'unique' → logprob: -6.892161846160889
    4. ' unique' → logprob: -9.517162322998047
    5. 'all' → logprob: -11.267162322998047
    6. ' all' → logprob: -11.892162322998047
    7. 'pair' → logprob: -12.142162322998047
    8. ' pair' → logprob: -12.392162322998047
    9. '(unique' → logprob: -12.767162322998047
    10. ' (' → logprob: -13.517162322998047

Token 209: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12696599960327148
    2. 'in' → logprob: -2.1269659996032715
    3. 'all' → logprob: -10.75196647644043
    4. ')' → logprob: -11.75196647644043
    5. 'unique' → logprob: -12.37696647644043
    6. ' all' → logprob: -13.25196647644043
    7. ' ' → logprob: -13.50196647644043
    8. '}' → logprob: -14.12696647644043
    9. '
' → logprob: -15.62696647644043
    10. ' unique' → logprob: -16.62696647644043

Token 210: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0067527866922318935
    2. ' all' → logprob: -5.006752967834473
    3. ' permutations' → logprob: -11.131752967834473
    4. 'per' → logprob: -12.006752967834473
    5. 'unique' → logprob: -12.506752967834473
    6. ' ' → logprob: -12.881752967834473
    7. '
' → logprob: -13.006752967834473
    8. '   ' → logprob: -13.881752967834473
    9. '	all' → logprob: -14.006752967834473
    10. 'list' → logprob: -14.006752967834473

Token 211: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -1.8624639324116288e-06
    2. 'com' → logprob: -13.500001907348633
    3. '_comb' → logprob: -15.875001907348633
    4. '_unique' → logprob: -16.000001907348633
    5. '_con' → logprob: -17.250001907348633
    6. '_pairs' → logprob: -18.250001907348633
    7. 'unique' → logprob: -18.625001907348633
    8. '_COM' → logprob: -18.750001907348633
    9. 'Com' → logprob: -19.000001907348633
    10. '_co' → logprob: -19.250001907348633

Token 212: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.001961224712431431
    2. 'inations' → logprob: -6.3769612312316895
    3. 'b' → logprob: -8.376960754394531
    4. 'r' → logprob: -11.251960754394531
    5. 'ations' → logprob: -11.751960754394531
    6. 'bin' → logprob: -12.001960754394531
    7. 'bination' → logprob: -15.001960754394531
    8. 'lations' → logprob: -15.251960754394531
    9. 'bn' → logprob: -15.751960754394531
    10. 'urations' → logprob: -15.876960754394531

Token 213: '}

' (ID: 943)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -7.822646693966817e-06
    2. ' }' → logprob: -11.875007629394531
    3. ')}' → logprob: -15.000007629394531
    4. '}
' → logprob: -15.500007629394531
    5. ')' → logprob: -16.00000762939453
    6. '}

' → logprob: -17.25000762939453
    7. '})' → logprob: -17.25000762939453
    8. '}}' → logprob: -18.12500762939453
    9. '}.' → logprob: -18.50000762939453
    10. '()}' → logprob: -19.37500762939453

Token 214: 'sum' (ID: 12298)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.4451022148132324
    2. 'total' → logprob: -1.5701022148132324
    3. 'pairs' → logprob: -2.0701022148132324
    4. 'unique' → logprob: -2.3201022148132324
    5. 'sorted' → logprob: -2.8201022148132324
    6. 'sum' → logprob: -2.8201022148132324
    7. 'def' → logprob: -3.3201022148132324
    8. '#' → logprob: -3.4451022148132324
    9. 'distance' → logprob: -3.4451022148132324
    10. 'path' → logprob: -3.8201022148132324

Token 215: '_dist' (ID: 37968)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08546284586191177
    2. '_distance' → logprob: -2.835462808609009
    3. '_dist' → logprob: -4.585463047027588
    4. '(' → logprob: -5.710463047027588
    5. '(distance' → logprob: -5.960463047027588
    6. 's' → logprob: -6.335463047027588
    7. '_=' → logprob: -6.835463047027588
    8. 'distance' → logprob: -7.460463047027588
    9. '_pairs' → logprob: -7.460463047027588
    10. '(
' → logprob: -7.585463047027588

Token 216: 'ances' (ID: 3528)
  Prédit: 'ance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.1602678894996643
    2. 'ances' → logprob: -1.9102678298950195
    3. ' =' → logprob: -10.28526782989502
    4. 's' → logprob: -12.66026782989502
    5. 'ancer' → logprob: -12.91026782989502
    6. '_' → logprob: -12.91026782989502
    7. '=' → logprob: -14.28526782989502
    8. 'ANCE' → logprob: -14.53526782989502
    9. '_pairs' → logprob: -16.035268783569336
    10. '_sum' → logprob: -16.910268783569336

Token 217: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31352370977401733
    2. '=' → logprob: -1.313523769378662
    3. '(' → logprob: -8.563523292541504
    4. ')' → logprob: -10.938523292541504
    5. '=lambda' → logprob: -11.063523292541504
    6. '_' → logprob: -11.188523292541504
    7. '=sum' → logprob: -11.438523292541504
    8. ' ' → logprob: -13.063523292541504
    9. 's' → logprob: -13.063523292541504
    10. '_=' → logprob: -13.813523292541504

Token 218: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.49476680159568787
    2. 'sum' → logprob: -1.4947668313980103
    3. 'reduce' → logprob: -2.4947667121887207
    4. 'Decimal' → logprob: -3.1197667121887207
    5. ' distance' → logprob: -3.8697667121887207
    6. ' sum' → logprob: -4.744766712188721
    7. ' reduce' → logprob: -5.619766712188721
    8. 'lambda' → logprob: -5.869766712188721
    9. ' Decimal' → logprob: -5.994766712188721
    10. 'decimal' → logprob: -8.619767189025879

Token 219: '_acc' (ID: 35551)
  Prédit: '_acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_acc' → logprob: -1.981667537620524e-06
    2. 'acc' → logprob: -13.625001907348633
    3. '_ac' → logprob: -14.875001907348633
    4. '(acc' → logprob: -16.250001907348633
    5. ' Acc' → logprob: -17.125001907348633
    6. 's' → logprob: -17.375001907348633
    7. 'Acc' → logprob: -17.625001907348633
    8. '_ACC' → logprob: -17.875001907348633
    9. '_sum' → logprob: -18.125001907348633
    10. '_distance' → logprob: -18.375001907348633

Token 220: 'umulator' (ID: 90989)
  Prédit: 'umulator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulator' → logprob: -0.029872899875044823
    2. 'ulator' → logprob: -3.5298728942871094
    3. 'um' → logprob: -9.27987289428711
    4. 'm' → logprob: -11.65487289428711
    5. 'lator' → logprob: -11.77987289428711
    6. 'umulate' → logprob: -12.02987289428711
    7. 'culator' → logprob: -13.27987289428711
    8. 'umerator' → logprob: -13.65487289428711
    9. 'sum' → logprob: -14.15487289428711
    10. 'mul' → logprob: -14.77987289428711

Token 221: '(
' (ID: 1607)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.3712247610092163
    2. '([' → logprob: -1.3712247610092163
    3. '([
' → logprob: -3.746224880218506
    4. '(list' → logprob: -4.371224880218506
    5. '(' → logprob: -4.871224880218506
    6. '(unique' → logprob: -5.746224880218506
    7. '[(' → logprob: -5.871224880218506
    8. '(v' → logprob: -6.246224880218506
    9. '((' → logprob: -6.496224880218506
    10. '(
' → logprob: -6.746224880218506

Token 222: '   ' (ID: 271)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.08206921815872192
    2. '((' → logprob: -3.457069158554077
    3. '(v' → logprob: -3.832069158554077
    4. '[' → logprob: -5.207069396972656
    5. '[
' → logprob: -5.207069396972656
    6. '[v' → logprob: -5.957069396972656
    7. '[((' → logprob: -5.957069396972656
    8. '(' → logprob: -6.207069396972656
    9. '(map' → logprob: -6.332069396972656
    10. '([(' → logprob: -6.457069396972656

Token 223: ' ((' (ID: 3536)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.06996222585439682
    2. '(v' → logprob: -3.3199622631073
    3. '((' (adapté à ' ((') → logprob: -4.194962024688721
    4. '[v' → logprob: -5.069962024688721
    5. '[' → logprob: -6.069962024688721
    6. '[
' → logprob: -6.444962024688721
    7. 'map' → logprob: -6.569962024688721
    8. '(map' → logprob: -6.694962024688721
    9. '[((' → logprob: -6.819962024688721
    10. '([(' → logprob: -7.319962024688721

Token 224: 'vectors' (ID: 184778)
  Prédit: 'vectors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vectors' → logprob: -0.0007774694240652025
    2. ' vectors' → logprob: -7.250777244567871
    3. ')' → logprob: -10.500777244567871
    4. '   ' → logprob: -11.125777244567871
    5. 'np' → logprob: -11.750777244567871
    6. '_vectors' → logprob: -12.500777244567871
    7. 'vector' → logprob: -13.375777244567871
    8. '[' → logprob: -13.750777244567871
    9. ' ' → logprob: -13.938277244567871
    10. 'v' → logprob: -14.000777244567871

Token 225: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.009420647285878658
    2. '[' → logprob: -4.759420871734619
    3. '[idx' → logprob: -7.759420871734619
    4. '[u' → logprob: -8.759420394897461
    5. '[p' → logprob: -9.884420394897461
    6. '[j' → logprob: -10.259420394897461
    7. '[a' → logprob: -10.384420394897461
    8. '[s' → logprob: -10.884420394897461
    9. '[min' → logprob: -11.259420394897461
    10. '[v' → logprob: -11.509420394897461

Token 226: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00043794067460112274
    2. ',' → logprob: -8.00043773651123
    3. ']' → logprob: -10.00043773651123
    4. 'vectors' → logprob: -11.12543773651123
    5. '],[' → logprob: -12.12543773651123
    6. '[v' → logprob: -12.50043773651123
    7. '),' → logprob: -12.62543773651123
    8. ' ],' → logprob: -12.62543773651123
    9. '],
' → logprob: -12.62543773651123
    10. '][' → logprob: -12.62543773651123

Token 227: ' vectors' (ID: 52254)
  Prédit: 'vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vectors' → logprob: -0.14276330173015594
    2. ' vectors' → logprob: -2.017763376235962
    3. '   ' → logprob: -9.767763137817383
    4. 'vector' → logprob: -11.017763137817383
    5. 'v' → logprob: -12.017763137817383
    6. ' ' → logprob: -13.267763137817383
    7. '_vectors' → logprob: -13.392763137817383
    8. ')' → logprob: -13.642763137817383
    9. 'Vectors' → logprob: -14.017763137817383
    10. '    ' → logprob: -14.392763137817383

Token 228: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0011693910928443074
    2. '[i' → logprob: -7.376169204711914
    3. 'j' → logprob: -7.626169204711914
    4. '   ' → logprob: -11.251169204711914
    5. ')' → logprob: -11.376169204711914
    6. '[' → logprob: -11.376169204711914
    7. '[v' → logprob: -12.126169204711914
    8. '[k' → logprob: -12.626169204711914
    9. 'vectors' → logprob: -13.251169204711914
    10. '[u' → logprob: -13.876169204711914

Token 229: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05537957698106766
    2. '])' → logprob: -2.930379629135132
    3. '})' → logprob: -8.180379867553711
    4. '))' → logprob: -8.805379867553711
    5. ' )' → logprob: -10.930379867553711
    6. ')
' → logprob: -11.305379867553711
    7. ']' → logprob: -11.305379867553711
    8. '),' → logprob: -11.430379867553711
    9. '）' → logprob: -12.305379867553711
    10. '   ' → logprob: -13.305379867553711

Token 230: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47812405228614807
    2. 'for' → logprob: -0.9781240224838257
    3. ')' → logprob: -6.228124141693115
    4. '   ' → logprob: -6.478124141693115
    5. '    ' → logprob: -7.603124141693115
    6. '        ' → logprob: -11.853123664855957
    7. ' ' → logprob: -11.978123664855957
    8. '  ' → logprob: -12.353123664855957
    9. '	for' → logprob: -12.353123664855957
    10. ' )' → logprob: -12.853123664855957

Token 231: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.026920633390545845
    2. ' i' → logprob: -3.7769205570220947
    3. '(i' → logprob: -5.776920795440674
    4. '   ' → logprob: -8.401920318603516
    5. ' (' → logprob: -9.026920318603516
    6. 'pair' → logprob: -9.776920318603516
    7. ' ' → logprob: -10.401920318603516
    8. '_i' → logprob: -10.651920318603516
    9. '  ' → logprob: -10.776920318603516
    10. ' pair' → logprob: -11.151920318603516

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01640406809747219
    2. ',j' → logprob: -4.141404151916504
    3. ' ,' → logprob: -8.141404151916504
    4. ' in' → logprob: -10.016404151916504
    5. 'in' → logprob: -11.016404151916504
    6. ',i' → logprob: -11.516404151916504
    7. ',
' → logprob: -12.266404151916504
    8. 'j' → logprob: -14.516404151916504
    9. '   ' → logprob: -14.891404151916504
    10. ' ' → logprob: -15.266404151916504

Token 233: ' j' (ID: 441)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.2490638494491577
    2. 'unique' → logprob: -1.8740638494491577
    3. '(i' → logprob: -2.2490639686584473
    4. ' vectors' → logprob: -2.4990639686584473
    5. 'vectors' → logprob: -2.6240639686584473
    6. '(unique' → logprob: -2.9990639686584473
    7. 'i' → logprob: -2.9990639686584473
    8. 'j' → logprob: -3.1240639686584473
    9. ' unique' → logprob: -3.2490639686584473
    10. ' j' → logprob: -3.8740639686584473

Token 234: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.47409021854400635
    2. ' in' → logprob: -0.9740902185440063
    3. ')' → logprob: -11.349090576171875
    4. ' ' → logprob: -14.349090576171875
    5. '   ' → logprob: -14.849090576171875
    6. '}' → logprob: -15.849090576171875
    7. '<|end|>' → logprob: -16.224090576171875
    8. '
' → logprob: -16.974090576171875
    9. 'unique' → logprob: -16.974090576171875
    10. '  ' → logprob: -17.224090576171875

Token 235: ' unique' (ID: 5746)
  Prédit: 'unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unique' → logprob: -0.2254423052072525
    2. ' unique' → logprob: -1.6004422903060913
    3. '   ' → logprob: -11.225441932678223
    4. 'sorted' → logprob: -12.350441932678223
    5. ' ' → logprob: -12.850441932678223
    6. '(unique' → logprob: -12.850441932678223
    7. ')' → logprob: -13.350441932678223
    8. '
' → logprob: -13.725441932678223
    9. '.unique' → logprob: -13.850441932678223
    10. ' sorted' → logprob: -13.975441932678223

Token 236: '_com' (ID: 10828)
  Prédit: '_com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_com' → logprob: -5.512236498361744e-07
    2. 'com' → logprob: -15.500000953674316
    3. '_unique' → logprob: -15.625000953674316
    4. '_comb' → logprob: -16.125
    5. 'unique' → logprob: -18.25
    6. '_dist' → logprob: -19.25
    7. '__' → logprob: -19.625
    8. '_comp' → logprob: -20.0
    9. '
' → logprob: -20.0
    10. '_pairs' → logprob: -20.0

Token 237: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.04868036508560181
    2. 'inations' → logprob: -3.048680305480957
    3. 'ations' → logprob: -9.798680305480957
    4. 'b' → logprob: -10.548680305480957
    5. 'bination' → logprob: -12.423680305480957
    6. 'bin' → logprob: -12.548680305480957
    7. 'initions' → logprob: -14.673680305480957
    8. 'urations' → logprob: -14.798680305480957
    9. 'r' → logprob: -14.923680305480957
    10. 'bn' → logprob: -15.048680305480957

Token 238: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.248469718324486e-05
    2. '))' → logprob: -11.500022888183594
    3. ')
' → logprob: -11.500022888183594
    4. '   ' → logprob: -13.250022888183594
    5. ')))' → logprob: -15.625022888183594
    6. ' )' → logprob: -16.000022888183594
    7. ')

' → logprob: -16.500022888183594
    8. '),' → logprob: -17.750022888183594
    9. ');' → logprob: -18.000022888183594
    10. '}' → logprob: -18.000022888183594

Token 239: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.703443770878948e-06
    2. ')
' → logprob: -11.875007629394531
    3. '))' → logprob: -14.750007629394531
    4. ' )' → logprob: -16.00000762939453
    5. '   ' → logprob: -16.62500762939453
    6. ')

' → logprob: -17.62500762939453
    7. ')`' → logprob: -18.00000762939453
    8. ')))' → logprob: -18.12500762939453
    9. ')#' → logprob: -18.12500762939453
    10. '),' → logprob: -18.37500762939453

Token 240: 'average' (ID: 33570)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -8.613945101387799e-05
    2. '
' → logprob: -9.500085830688477
    3. ')' → logprob: -12.500085830688477
    4. ' print' → logprob: -12.875085830688477
    5. '<|end|>' → logprob: -12.875085830688477
    6. '(print' → logprob: -14.375085830688477
    7. '#print' → logprob: -14.750085830688477
    8. '\n' → logprob: -14.875085830688477
    9. 'sum' → logprob: -15.750085830688477
    10. '```' → logprob: -16.125085830688477

Token 241: '_path' (ID: 5558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12419133633375168
    2. '_distance' → logprob: -2.2491912841796875
    3. '_sum' → logprob: -5.3741912841796875
    4. ' =' → logprob: -5.4991912841796875
    5. '_dist' → logprob: -6.7491912841796875
    6. ' _' → logprob: -7.3741912841796875
    7. '=' → logprob: -8.499191284179688
    8. '_average' → logprob: -8.749191284179688
    9. ' ' → logprob: -9.374191284179688
    10. '_total' → logprob: -9.999191284179688

Token 242: '_length' (ID: 11514)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.024439774453639984
    2. '=' → logprob: -3.774439811706543
    3. '_' → logprob: -7.274439811706543
    4. '_length' → logprob: -8.149439811706543
    5. '_sum' → logprob: -9.399439811706543
    6. 's' → logprob: -9.899439811706543
    7. '_distance' → logprob: -10.274439811706543
    8. '_value' → logprob: -11.149439811706543
    9. '_cost' → logprob: -12.274439811706543
    10. '_len' → logprob: -12.399439811706543

Token 243: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12694112956523895
    2. '=' → logprob: -2.126941204071045
    3. ' ' → logprob: -11.751940727233887
    4. '=sum' → logprob: -12.501940727233887
    5. ')' → logprob: -15.126940727233887
    6. '_' → logprob: -15.251940727233887
    7. ' =
' → logprob: -15.626940727233887
    8. 'sum' → logprob: -15.626940727233887
    9. '/' → logprob: -16.376941680908203
    10. ' /' → logprob: -16.501941680908203

Token 244: ' (' (ID: 350)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.23570674657821655
    2. ' sum' → logprob: -1.6107068061828613
    3. 'Decimal' → logprob: -4.985706806182861
    4. ' Decimal' → logprob: -5.735706806182861
    5. '(sum' → logprob: -9.485706329345703
    6. 'float' → logprob: -9.985706329345703
    7. ' ' → logprob: -10.610706329345703
    8. ' float' → logprob: -11.235706329345703
    9. 'Sum' → logprob: -11.735706329345703
    10. '	sum' → logprob: -13.485706329345703

Token 245: 'lambda' (ID: 35280)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.011319775134325027
    2. ' sum' → logprob: -4.886319637298584
    3. 'Decimal' → logprob: -5.636319637298584
    4. ' Decimal' → logprob: -9.261320114135742
    5. '(sum' → logprob: -10.636320114135742
    6. ')' → logprob: -11.886320114135742
    7. '   ' → logprob: -12.511320114135742
    8. 'float' → logprob: -13.011320114135742
    9. 'Sum' → logprob: -13.386320114135742
    10. ' ' → logprob: -13.511320114135742

Token 246: ' s' (ID: 265)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.8733231425285339
    2. ':' → logprob: -1.2483232021331787
    3. ' x' → logprob: -2.2483232021331787
    4. 'sum' → logprob: -2.3733232021331787
    5. ' total' → logprob: -3.2483232021331787
    6. 'x' → logprob: -3.8733232021331787
    7. ' :' → logprob: -4.8733229637146
    8. ' distance' → logprob: -5.3733229637146
    9. ' dist' → logprob: -5.4983229637146
    10. 'total' → logprob: -5.7483229637146

Token 247: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03051702119410038
    2. ',' → logprob: -3.655517101287842
    3. ' :' → logprob: -5.655517101287842
    4. 'um' → logprob: -7.780517101287842
    5. ':s' → logprob: -9.780516624450684
    6. ' s' → logprob: -10.030516624450684
    7. ',s' → logprob: -10.280516624450684
    8. '=' → logprob: -10.530516624450684
    9. ',sum' → logprob: -10.780516624450684
    10. 'd' → logprob: -10.905516624450684

Token 248: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04406948760151863
    2. ' n' → logprob: -3.669069528579712
    3. 'len' → logprob: -5.419069290161133
    4. 'c' → logprob: -5.544069290161133
    5. 'd' → logprob: -6.044069290161133
    6. 'l' → logprob: -6.169069290161133
    7. 'count' → logprob: -6.669069290161133
    8. 'sum' → logprob: -6.669069290161133
    9. 'k' → logprob: -6.794069290161133
    10. 'm' → logprob: -8.044069290161133

Token 249: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18241702020168304
    2. ',' → logprob: -1.8074170351028442
    3. '=' → logprob: -6.807416915893555
    4. ' :' → logprob: -7.307416915893555
    5. '=s' → logprob: -7.807416915893555
    6. 's' → logprob: -8.682416915893555
    7. ',s' → logprob: -8.807416915893555
    8. ':s' → logprob: -8.932416915893555
    9. ' ,' → logprob: -12.432416915893555
    10. '=sum' → logprob: -12.432416915893555

Token 250: ' Decimal' (ID: 56874)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05587279051542282
    2. ' s' → logprob: -3.180872678756714
    3. 'Decimal' → logprob: -4.680872917175293
    4. '(s' → logprob: -6.805872917175293
    5. 'float' → logprob: -6.930872917175293
    6. ' Decimal' → logprob: -7.555872917175293
    7. '(' → logprob: -7.930872917175293
    8. ' float' → logprob: -8.930872917175293
    9. ' (' → logprob: -9.305872917175293
    10. '0' → logprob: -9.430872917175293

Token 251: '('' (ID: 706)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0006015266408212483
    2. '(' → logprob: -7.875601291656494
    3. 's' → logprob: -8.750601768493652
    4. '((' → logprob: -10.500601768493652
    5. '('' → logprob: -11.625601768493652
    6. '(str' → logprob: -11.625601768493652
    7. ')(' → logprob: -12.000601768493652
    8. ')' → logprob: -12.625601768493652
    9. '(float' → logprob: -12.875601768493652
    10. ' (' → logprob: -13.500601768493652

Token 252: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7394205927848816
    2. '{s' → logprob: -1.2394206523895264
    3. '{' → logprob: -1.7394206523895264
    4. '{}'.' → logprob: -3.7394206523895264
    5. ''' → logprob: -4.114420413970947
    6. '')' → logprob: -5.239420413970947
    7. ''+' → logprob: -5.614420413970947
    8. '{}' → logprob: -6.114420413970947
    9. '{:' → logprob: -6.739420413970947
    10. '{}.' → logprob: -6.864420413970947

Token 253: '.' (ID: 13)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.44988805055618286
    2. '.' → logprob: -1.324887990951538
    3. 's' → logprob: -2.949887990951538
    4. '*s' → logprob: -3.949887990951538
    5. '.')' → logprob: -4.699888229370117
    6. ''*' → logprob: -4.949888229370117
    7. ''' → logprob: -5.324888229370117
    8. '*' → logprob: -6.949888229370117
    9. '.'' → logprob: -7.199888229370117
    10. ''.' → logprob: -7.324888229370117

Token 254: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8395775556564331
    2. '718' → logprob: -0.8395775556564331
    3. ''' → logprob: -3.4645776748657227
    4. 's' → logprob: -3.7145776748657227
    5. '5' → logprob: -3.9645776748657227
    6. '7' → logprob: -5.464577674865723
    7. 'f' → logprob: -5.464577674865723
    8. '000' → logprob: -5.589577674865723
    9. '{}'.' → logprob: -5.714577674865723
    10. 'e' → logprob: -5.964577674865723

Token 255: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0045239925384521484
    2. '*' → logprob: -5.879524230957031
    3. ''' → logprob: -7.504524230957031
    4. ''*' → logprob: -7.629524230957031
    5. '*s' → logprob: -7.754524230957031
    6. 'e' → logprob: -9.004524230957031
    7. ' *' → logprob: -9.629524230957031
    8. 's' → logprob: -11.129524230957031
    9. ' ')' → logprob: -11.379524230957031
    10. ')' → logprob: -11.879524230957031

Token 256: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.09103669971227646
    2. '*s' → logprob: -2.966036796569824
    3. ' *' → logprob: -3.341036796569824
    4. 's' → logprob: -9.966036796569824
    5. '*(' → logprob: -10.091036796569824
    6. ')' → logprob: -12.091036796569824
    7. ' ' → logprob: -13.216036796569824
    8. ',' → logprob: -13.591036796569824
    9. '
' → logprob: -13.591036796569824
    10. '```' → logprob: -13.841036796569824

Token 257: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.026399457827210426
    2. ' s' → logprob: -3.6513993740081787
    3. 'sum' → logprob: -10.526399612426758
    4. '(s' → logprob: -11.026399612426758
    5. '
' → logprob: -11.651399612426758
    6. 'Decimal' → logprob: -11.651399612426758
    7. '(' → logprob: -11.901399612426758
    8. ' ' → logprob: -12.776399612426758
    9. '   ' → logprob: -12.838899612426758
    10. '*s' → logprob: -12.838899612426758

Token 258: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5236868858337402
    2. '/' → logprob: -0.8986868858337402
    3. ',' → logprob: -8.273687362670898
    4. ')' → logprob: -9.023687362670898
    5. '/(' → logprob: -9.773687362670898
    6. '/N' → logprob: -10.023687362670898
    7. ' ' → logprob: -10.273687362670898
    8. '   ' → logprob: -10.523687362670898
    9. '/n' → logprob: -12.148687362670898
    10. '*' → logprob: -12.398687362670898

Token 259: ' Decimal' (ID: 56874)
  Prédit: 'Decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Decimal' → logprob: -0.02177930437028408
    2. '(' → logprob: -4.896779537200928
    3. 'N' → logprob: -4.896779537200928
    4. '(N' → logprob: -5.396779537200928
    5. '(n' → logprob: -6.646779537200928
    6. 'n' → logprob: -7.521779537200928
    7. '((' → logprob: -8.77177906036377
    8. ' Decimal' → logprob: -9.77177906036377
    9. ' (' → logprob: -11.89677906036377
    10. 'Decimals' → logprob: -12.39677906036377

Token 260: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.09134291112422943
    2. '(str' → logprob: -2.8413429260253906
    3. '(n' → logprob: -3.7163429260253906
    4. 'N' → logprob: -5.841342926025391
    5. 'str' → logprob: -6.591342926025391
    6. '(' → logprob: -8.59134292602539
    7. 'n' → logprob: -9.59134292602539
    8. '(f' → logprob: -10.21634292602539
    9. '((' → logprob: -10.59134292602539
    10. '('' → logprob: -10.84134292602539

Token 261: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5987327098846436
    2. ')' → logprob: -0.8487327098846436
    3. ')))' → logprob: -4.223732948303223
    4. '**' → logprob: -5.848732948303223
    5. ')**' → logprob: -5.973732948303223
    6. '))(' → logprob: -7.098732948303223
    7. ')
' → logprob: -8.223732948303223
    8. ')).' → logprob: -8.223732948303223
    9. '))*' → logprob: -8.848732948303223
    10. ')`' → logprob: -8.848732948303223

Token 262: '(
' (ID: 1607)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0769428163766861
    2. '(sum' → logprob: -3.0769429206848145
    3. '(' → logprob: -3.8269429206848145
    4. '(len' → logprob: -6.0769429206848145
    5. '(
' → logprob: -6.8269429206848145
    6. '(distance' → logprob: -7.5769429206848145
    7. '((' → logprob: -8.201942443847656
    8. '(v' → logprob: -8.326942443847656
    9. '(s' → logprob: -8.326942443847656
    10. ' (' → logprob: -8.576942443847656

Token 263: '   ' (ID: 271)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0029010437428951263
    2. ' sum' → logprob: -5.877901077270508
    3. '   ' → logprob: -9.502901077270508
    4. 'n' → logprob: -11.252901077270508
    5. ' ' → logprob: -12.627901077270508
    6. '  ' → logprob: -13.127901077270508
    7. '	sum' → logprob: -13.877901077270508
    8. 'average' → logprob: -14.377901077270508
    9. '    ' → logprob: -14.627901077270508
    10. '(sum' → logprob: -14.752901077270508

Token 264: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' (adapté à ' sum') → logprob: -0.008704159408807755
    2. 'n' → logprob: -4.88370418548584
    3. 'len' → logprob: -7.13370418548584
    4. ' sum' → logprob: -8.63370418548584
    5. '   ' → logprob: -10.25870418548584
    6. 'average' → logprob: -10.38370418548584
    7. 'distance' → logprob: -10.88370418548584
    8. 'float' → logprob: -11.63370418548584
    9. '(sum' → logprob: -11.63370418548584
    10. ' ' → logprob: -12.50870418548584

Token 265: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -7.896309739408025e-07
    2. 'dist' → logprob: -14.500000953674316
    3. '_distance' → logprob: -15.500000953674316
    4. '_' → logprob: -17.875
    5. '_DIST' → logprob: -17.875
    6. 'Distances' → logprob: -17.875
    7. ' distances' → logprob: -18.0
    8. '_lengths' → logprob: -18.25
    9. '_vectors' → logprob: -18.5
    10. '_dis' → logprob: -18.75

Token 266: 'ances' (ID: 3528)
  Prédit: 'ances'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ances' → logprob: -2.339278580620885e-06
    2. 'ance' → logprob: -13.375001907348633
    3. '```' → logprob: -15.750001907348633
    4. '   ' → logprob: -16.250001907348633
    5. 'ences' → logprob: -16.375001907348633
    6. 'aces' → logprob: -16.875001907348633
    7. 'ices' → logprob: -17.000001907348633
    8. 'ANCES' → logprob: -17.375001907348633
    9. 'ages' → logprob: -17.625001907348633
    10. 'Distances' → logprob: -17.750001907348633

Token 267: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006856862455606461
    2. ',n' → logprob: -5.131856918334961
    3. ' ,' → logprob: -7.631856918334961
    4. '   ' → logprob: -8.006856918334961
    5. 'n' → logprob: -9.881856918334961
    6. ',
' → logprob: -10.256856918334961
    7. '(n' → logprob: -11.506856918334961
    8. '[n' → logprob: -12.631856918334961
    9. '*n' → logprob: -13.506856918334961
    10. ' ' → logprob: -13.881856918334961

Token 268: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003013953333720565
    2. 'Decimal' → logprob: -5.878014087677002
    3. 'len' → logprob: -8.753013610839844
    4. ' n' → logprob: -10.878013610839844
    5. '(n' → logprob: -11.003013610839844
    6. '(' → logprob: -12.503013610839844
    7. 'np' → logprob: -12.878013610839844
    8. ' Decimal' → logprob: -13.503013610839844
    9. 'decimal' → logprob: -13.753013610839844
    10. '   ' → logprob: -13.753013610839844

Token 269: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004907185211777687
    2. '+' → logprob: -8.25049114227295
    3. '-' → logprob: -9.12549114227295
    4. '*' → logprob: -10.25049114227295
    5. ' )' → logprob: -10.62549114227295
    6. ')
' → logprob: -10.75049114227295
    7. ' +' → logprob: -11.50049114227295
    8. '*n' → logprob: -11.75049114227295
    9. ')n' → logprob: -12.25049114227295
    10. ' -' → logprob: -12.62549114227295

Token 270: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0683535037969705e-05
    2. ')
' → logprob: -11.87501049041748
    3. '+' → logprob: -13.12501049041748
    4. '))' → logprob: -14.25001049041748
    5. ' )' → logprob: -15.00001049041748
    6. ')n' → logprob: -15.87501049041748
    7. '-' → logprob: -16.500011444091797
    8. ')`' → logprob: -16.500011444091797
    9. '```' → logprob: -16.875011444091797
    10. '*' → logprob: -17.250011444091797

Token 271: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5605812072753906
    2. 'average' → logprob: -1.3105812072753906
    3. 'print' → logprob: -1.9355812072753906
    4. '<|end|>' → logprob: -4.435581207275391
    5. ' average' → logprob: -7.060581207275391
    6. '\n' → logprob: -7.310581207275391
    7. '```' → logprob: -7.935581207275391
    8. 'Average' → logprob: -8.06058120727539
    9. '\' → logprob: -8.56058120727539
    10. '#' → logprob: -8.56058120727539

Token 272: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004509301797952503
    2. '(round' → logprob: -8.25045108795166
    3. '()' → logprob: -9.00045108795166
    4. 'average' → logprob: -10.50045108795166
    5. '(f' → logprob: -11.25045108795166
    6. '((' → logprob: -12.00045108795166
    7. '(float' → logprob: -12.37545108795166
    8. '(avg' → logprob: -12.37545108795166
    9. '('' → logprob: -13.12545108795166
    10. '(sum' → logprob: -13.37545108795166

Token 273: 'average' (ID: 33570)
  Prédit: 'average'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'average' → logprob: -7.910643762443215e-05
    2. 'round' → logprob: -9.625079154968262
    3. 'float' → logprob: -12.000079154968262
    4. ' average' → logprob: -12.500079154968262
    5. 'str' → logprob: -13.750079154968262
    6. 'f' → logprob: -13.750079154968262
    7. 'format' → logprob: -14.125079154968262
    8. '"{' → logprob: -16.000078201293945
    9. 'avg' → logprob: -16.125078201293945
    10. ''{' → logprob: -17.625078201293945

Token 274: '_path' (ID: 5558)
  Prédit: '_path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_path' → logprob: -4.320199877838604e-07
    2. 'average' → logprob: -14.875
    3. 'path' → logprob: -17.5
    4. '_' → logprob: -19.375
    5. '\' → logprob: -19.75
    6. '```' → logprob: -20.625
    7. ')' → logprob: -20.875
    8. '_PATH' → logprob: -21.0
    9. '
' → logprob: -21.375
    10. 'Path' → logprob: -21.375

Token 275: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -6.0868278524139896e-05
    2. 'length' → logprob: -9.75006103515625
    3. 'ength' → logprob: -13.62506103515625
    4. '_l' → logprob: -13.75006103515625
    5. '_LENGTH' → logprob: -16.87506103515625
    6. '_len' → logprob: -17.00006103515625
    7. 'Length' → logprob: -17.12506103515625
    8. '_lengths' → logprob: -17.37506103515625
    9. '_le' → logprob: -17.75006103515625
    10. '-length' → logprob: -18.12506103515625

Token 276: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.796184723294573e-06
    2. ')
' → logprob: -12.750005722045898
    3. '+' → logprob: -14.125005722045898
    4. '))' → logprob: -14.125005722045898
    5. ' )' → logprob: -14.875005722045898
    6. ')`' → logprob: -15.000005722045898
    7. '()' → logprob: -16.2500057220459
    8. '[' → logprob: -16.3750057220459
    9. '*' → logprob: -16.6250057220459
    10. '')' → logprob: -16.8750057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 274
Tokens correctement prédits (1ère position, stricte): 106
Tokens correctement prédits (1ère position, avec adaptation): 113
Tokens correctement prédits (top 10): 223
Précision stricte (1ère position): 38.69%
Précision adaptée (1ère position): 41.24%
Précision (top 10): 81.39%
================================================================================
