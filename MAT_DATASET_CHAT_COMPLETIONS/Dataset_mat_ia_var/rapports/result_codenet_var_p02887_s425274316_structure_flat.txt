================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:42:05
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
s = input()
result = 1
i = 1
while i < n:
    if s[i] != s[i-1]:
        result += 1
    i += 1
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00010807292710524052
    2. '(n' → logprob: -10.250107765197754
    3. ''' → logprob: -10.625107765197754
    4. '('' → logprob: -11.375107765197754
    5. '```' → logprob: -11.625107765197754
    6. '(
' → logprob: -12.000107765197754
    7. '("("' → logprob: -12.375107765197754
    8. '`' → logprob: -12.375107765197754
    9. '()' → logprob: -12.500107765197754
    10. ')' → logprob: -13.125107765197754

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03871168941259384
    2. ')' → logprob: -3.5387117862701416
    3. '()' → logprob: -4.9137115478515625
    4. '())' → logprob: -7.1637115478515625
    5. '(
' → logprob: -8.663711547851562
    6. '```' → logprob: -9.163711547851562
    7. '(()' → logprob: -9.413711547851562
    8. '("("' → logprob: -9.663711547851562
    9. '('' → logprob: -9.913711547851562
    10. '`' → logprob: -10.163711547851562

Token 5: 's' (ID: 82)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.22954261302947998
    2. 'if' → logprob: -1.85454261302948
    3. 'i' → logprob: -3.9795427322387695
    4. 's' → logprob: -4.1045427322387695
    5. 'f' → logprob: -5.7295427322387695
    6. ' for' → logprob: -6.4795427322387695
    7. 'x' → logprob: -6.4795427322387695
    8. 'sum' → logprob: -6.4795427322387695
    9. 'a' → logprob: -6.7295427322387695
    10. 'result' → logprob: -7.4795427322387695

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9085284471511841
    2. 'um' → logprob: -1.408528447151184
    3. '[' → logprob: -2.0335283279418945
    4. '=' → logprob: -2.2835283279418945
    5. '.' → logprob: -2.6585283279418945
    6. 'u' → logprob: -4.6585283279418945
    7. 'tr' → logprob: -4.9085283279418945
    8. ' +=' → logprob: -5.2835283279418945
    9. '[i' → logprob: -5.9085283279418945
    10. '_' → logprob: -5.9085283279418945

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06340564787387848
    2. ' input' → logprob: -2.938405752182007
    3. '""' → logprob: -5.188405513763428
    4. '''' → logprob: -6.563405513763428
    5. '0' → logprob: -7.688405513763428
    6. '"' → logprob: -7.938405513763428
    7. ' ' → logprob: -8.313405990600586
    8. ''' → logprob: -8.438405990600586
    9. ' ""' → logprob: -10.188405990600586
    10. '[]' → logprob: -10.438405990600586

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021745278500020504
    2. ''' → logprob: -7.127174377441406
    3. '('' → logprob: -7.252174377441406
    4. '()' → logprob: -9.002174377441406
    5. '`' → logprob: -9.252174377441406
    6. '(
' → logprob: -9.252174377441406
    7. ')' → logprob: -9.252174377441406
    8. '"' → logprob: -9.252174377441406
    9. ' (' → logprob: -10.002174377441406
    10. '("("' → logprob: -10.502174377441406

Token 9: 'result' (ID: 2521)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0583573579788208
    2. 'if' → logprob: -1.1833573579788208
    3. 'for' → logprob: -1.6833573579788208
    4. 'f' → logprob: -2.8083572387695312
    5. 'count' → logprob: -2.8083572387695312
    6. 'c' → logprob: -4.433357238769531
    7. '_' → logprob: -5.183357238769531
    8. 'sum' → logprob: -5.683357238769531
    9. 'result' → logprob: -5.808357238769531
    10. 'd' → logprob: -5.933357238769531

Token 10: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1887953281402588
    2. ' =' → logprob: -1.1887953281402588
    3. '.' → logprob: -1.9387953281402588
    4. '_' → logprob: -2.063795328140259
    5. '[' → logprob: -2.438795328140259
    6. '[:]' → logprob: -4.93879508972168
    7. '.append' → logprob: -5.18879508972168
    8. 's' → logprob: -5.18879508972168
    9. ' ' → logprob: -5.18879508972168
    10. ' +=' → logprob: -5.81379508972168

Token 11: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14161360263824463
    2. '"' → logprob: -3.391613483428955
    3. ' []' → logprob: -3.391613483428955
    4. '0' → logprob: -3.641613483428955
    5. ''' → logprob: -4.391613483428955
    6. ' ""' → logprob: -4.641613483428955
    7. ' "' → logprob: -5.266613483428955
    8. 's' → logprob: -5.391613483428955
    9. ' s' → logprob: -6.266613483428955
    10. ' ''' → logprob: -6.391613483428955

Token 12: '1' (ID: 16)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '""' → logprob: -0.18309858441352844
    2. '''' → logprob: -2.433098554611206
    3. '0' → logprob: -3.183098554611206
    4. '[]' → logprob: -3.558098554611206
    5. '"' → logprob: -5.308098793029785
    6. 's' → logprob: -5.808098793029785
    7. '{}' → logprob: -7.183098793029785
    8. 'set' → logprob: -8.558098793029785
    9. ''' → logprob: -8.683098793029785
    10. '"s' → logprob: -9.058098793029785

Token 13: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5761899948120117
    2. '*' → logprob: -1.2011899948120117
    3. '_' → logprob: -3.0761899948120117
    4. ' ' → logprob: -3.5761899948120117
    5. 'for' → logprob: -3.7011899948120117
    6. ' for' → logprob: -4.951189994812012
    7. ' 
' → logprob: -5.201189994812012
    8. '=' → logprob: -5.826189994812012
    9. '-' → logprob: -5.826189994812012
    10. 'i' → logprob: -6.076189994812012

Token 14: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03770391643047333
    2. ' for' → logprob: -3.5377039909362793
    3. 'f' → logprob: -5.662703990936279
    4. 'i' → logprob: -6.287703990936279
    5. '_' → logprob: -7.162703990936279
    6. 'current' → logprob: -7.162703990936279
    7. '*' → logprob: -8.037703514099121
    8. 'a' → logprob: -9.287703514099121
    9. 'prev' → logprob: -9.537703514099121
    10. 'd' → logprob: -9.787703514099121

Token 15: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.43331292271614075
    2. 'n' → logprob: -1.8083128929138184
    3. '+' → logprob: -2.5583128929138184
    4. ' ' → logprob: -3.1833128929138184
    5. '=' → logprob: -3.3083128929138184
    6. ' =' → logprob: -3.9333128929138184
    7. ' +=' → logprob: -5.183312892913818
    8. 's' → logprob: -6.433312892913818
    9. ' n' → logprob: -6.933312892913818
    10. 'nt' → logprob: -7.058312892913818

Token 16: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11031681299209595
    2. ' ' → logprob: -2.485316753387451
    3. '1' → logprob: -3.860316753387451
    4. '2' → logprob: -9.36031723022461
    5. 's' → logprob: -13.48531723022461
    6. 'n' → logprob: -14.86031723022461
    7. ' n' → logprob: -15.48531723022461
    8. '<|end|>' → logprob: -15.92281723022461
    9. ' s' → logprob: -16.04781723022461
    10. '3' → logprob: -16.29781723022461

Token 17: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10907164961099625
    2. '1' → logprob: -2.359071731567383
    3. ' ' → logprob: -4.734071731567383
    4. '2' → logprob: -10.484071731567383
    5. 'n' → logprob: -12.859071731567383
    6. 's' → logprob: -13.359071731567383
    7. '+' → logprob: -14.296571731567383
    8. '-' → logprob: -14.859071731567383
    9. '```' → logprob: -15.171571731567383
    10. '  ' → logprob: -15.484071731567383

Token 18: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5013814568519592
    2. ' while' → logprob: -1.0013813972473145
    3. '<|end|>' → logprob: -4.5013813972473145
    4. '+' → logprob: -5.0013813972473145
    5. '
' → logprob: -6.0013813972473145
    6. ',' → logprob: -6.3763813972473145
    7. '```' → logprob: -6.8763813972473145
    8. ' 
' → logprob: -7.3763813972473145
    9. ' ' → logprob: -7.6263813972473145
    10. 'While' → logprob: -7.7513813972473145

Token 19: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.5076876878738403
    2. ' while' → logprob: -1.0076876878738403
    3. '<|end|>' → logprob: -3.882687568664551
    4. '
' → logprob: -5.632687568664551
    5. '```' → logprob: -6.507687568664551
    6. ' 
' → logprob: -6.507687568664551
    7. '+' → logprob: -6.632687568664551
    8. '\n' → logprob: -7.132687568664551
    9. 'While' → logprob: -7.382687568664551
    10. ' ' → logprob: -7.507687568664551

Token 20: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03940918296575546
    2. 'i' → logprob: -3.9144091606140137
    3. ' ' → logprob: -4.039409160614014
    4. ' s' → logprob: -7.789409160614014
    5. ' n' → logprob: -8.164409637451172
    6. '  ' → logprob: -8.664409637451172
    7. 's' → logprob: -9.414409637451172
    8. ' (' → logprob: -10.414409637451172
    9. ' ' → logprob: -10.664409637451172
    10. '(i' → logprob: -10.914409637451172

Token 21: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.04652991518378258
    2. '<' → logprob: -3.17153000831604
    3. ' <=' → logprob: -5.796529769897461
    4. ' ' → logprob: -7.796529769897461
    5. '<=' → logprob: -9.796529769897461
    6. '<n' → logprob: -11.921529769897461
    7. '<len' → logprob: -12.671529769897461
    8. ' <
' → logprob: -12.921529769897461
    9. ' \<' → logprob: -13.171529769897461
    10. '<size' → logprob: -14.046529769897461

Token 22: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16028434038162231
    2. 'n' → logprob: -1.9102842807769775
    3. ' ' → logprob: -10.660284042358398
    4. 'len' → logprob: -10.910284042358398
    5. ' len' → logprob: -11.035284042358398
    6. '(n' → logprob: -13.910284042358398
    7. '	n' → logprob: -14.910284042358398
    8. '_n' → logprob: -15.785284042358398
    9. ')n' → logprob: -15.910284042358398
    10. '<n' → logprob: -16.1602840423584

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12194059789180756
    2. ' and' → logprob: -2.4969406127929688
    3. ' :' → logprob: -3.4969406127929688
    4. ':
' → logprob: -6.996940612792969
    5. 'and' → logprob: -7.246940612792969
    6. ' ' → logprob: -8.371940612792969
    7. ' :
' → logprob: -8.496940612792969
    8. ':**' → logprob: -10.621940612792969
    9. '[' → logprob: -10.996940612792969
    10. '```' → logprob: -11.621940612792969

Token 24: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1678963005542755
    2. '   ' → logprob: -2.917896270751953
    3. ' if' → logprob: -3.167896270751953
    4. ':' → logprob: -4.417896270751953
    5. '```' → logprob: -4.417896270751953
    6. '<|end|>' → logprob: -4.792896270751953
    7. '    ' → logprob: -5.042896270751953
    8. ' and' → logprob: -5.417896270751953
    9. ' 
' → logprob: -5.667896270751953
    10. ' :' → logprob: -6.292896270751953

Token 25: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3933413028717041
    2. ' ' → logprob: -1.518341302871704
    3. 'if' (adapté à ' if') → logprob: -3.018341302871704
    4. '    ' → logprob: -3.518341302871704
    5. 's' → logprob: -5.018341064453125
    6. '   ' → logprob: -5.268341064453125
    7. ' s' → logprob: -5.768341064453125
    8. '```' → logprob: -6.018341064453125
    9. '<|end|>' → logprob: -6.393341064453125
    10. ''' → logprob: -6.893341064453125

Token 26: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0619998462498188
    2. 's' → logprob: -2.811999797821045
    3. ' ' → logprob: -10.437000274658203
    4. ' ' → logprob: -14.187000274658203
    5. '_s' → logprob: -14.562000274658203
    6. '	s' → logprob: -15.187000274658203
    7. '<|end|>' → logprob: -15.187000274658203
    8. '(s' → logprob: -15.687000274658203
    9. ' n' → logprob: -15.687000274658203
    10. 'i' → logprob: -16.062000274658203

Token 27: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00020568605395965278
    2. '[' → logprob: -8.500205993652344
    3. ' [' → logprob: -14.000205993652344
    4. '==' → logprob: -15.625205993652344
    5. '[]' → logprob: -15.750205993652344
    6. ' ==' → logprob: -15.875205993652344
    7. '[s' → logprob: -16.125205993652344
    8. '[int' → logprob: -16.250205993652344
    9. 'i' → logprob: -16.375205993652344
    10. '[j' → logprob: -16.375205993652344

Token 28: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03762815147638321
    2. ']==' → logprob: -3.787628173828125
    3. '==' → logprob: -4.787628173828125
    4. ']!=' → logprob: -6.662628173828125
    5. '!=' → logprob: -6.787628173828125
    6. ' ]' → logprob: -7.037628173828125
    7. ' ==' → logprob: -7.287628173828125
    8. '-' → logprob: -7.537628173828125
    9. ' ' → logprob: -8.037628173828125
    10. '```' → logprob: -8.412628173828125

Token 29: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3171781301498413
    2. ' ==' → logprob: -1.6921781301498413
    3. '!=' → logprob: -2.692178249359131
    4. ' !=' → logprob: -4.067178249359131
    5. '=' → logprob: -6.817178249359131
    6. '>' → logprob: -7.067178249359131
    7. ' ' → logprob: -8.067177772521973
    8. '```' → logprob: -9.442177772521973
    9. '   ' → logprob: -9.692177772521973
    10. 's' → logprob: -9.942177772521973

Token 30: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.474087119102478
    2. ' s' → logprob: -0.974087119102478
    3. ' ' → logprob: -11.84908676147461
    4. '   ' → logprob: -13.47408676147461
    5. '	s' → logprob: -14.22408676147461
    6. '  ' → logprob: -15.22408676147461
    7. ''s' → logprob: -15.59908676147461
    8. '`s' → logprob: -16.47408676147461
    9. '    ' → logprob: -16.59908676147461
    10. '(s' → logprob: -16.84908676147461

Token 31: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.849109119386412e-06
    2. '[' → logprob: -11.750009536743164
    3. 'i' → logprob: -13.250009536743164
    4. '[
' → logprob: -16.375009536743164
    5. '[s' → logprob: -17.250009536743164
    6. ' [' → logprob: -17.875009536743164
    7. '   ' → logprob: -17.875009536743164
    8. '[j' → logprob: -18.125009536743164
    9. ']' → logprob: -18.750009536743164
    10. '-' → logprob: -18.875009536743164

Token 32: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00034058792516589165
    2. ' -' → logprob: -8.000340461730957
    3. '1' → logprob: -13.250340461730957
    4. ' ' → logprob: -13.375340461730957
    5. ']' → logprob: -13.750340461730957
    6. '-
' → logprob: -15.500340461730957
    7. '   ' → logprob: -15.500340461730957
    8. '−' → logprob: -16.125341415405273
    9. '```' → logprob: -16.750341415405273
    10. 'i' → logprob: -17.000341415405273

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.62501049041748
    3. ']' → logprob: -15.12501049041748
    4. '```' → logprob: -15.37501049041748
    5. '   ' → logprob: -15.62501049041748
    6. '१' → logprob: -16.500009536743164
    7. 'i' → logprob: -16.687509536743164
    8. '`' → logprob: -16.750009536743164
    9. '১' → logprob: -16.750009536743164
    10. '۱' → logprob: -16.937509536743164

Token 34: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01435999944806099
    2. '):' → logprob: -4.389359951019287
    3. ']:' → logprob: -6.514359951019287
    4. ':
' → logprob: -9.264360427856445
    5. ' :' → logprob: -9.514360427856445
    6. '):
' → logprob: -10.764360427856445
    7. ' and' → logprob: -10.889360427856445
    8. '       ' → logprob: -10.889360427856445
    9. ')' → logprob: -11.014360427856445
    10. '>:' → logprob: -11.014360427856445

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010811397805809975
    2. ':' → logprob: -5.0108113288879395
    3. '   ' → logprob: -6.1358113288879395
    4. ':
' → logprob: -6.7608113288879395
    5. 'result' → logprob: -8.135811805725098
    6. '```' → logprob: -9.010811805725098
    7. ' result' → logprob: -9.510811805725098
    8. '
' → logprob: -10.260811805725098
    9. '    ' → logprob: -10.385811805725098
    10. '        
' → logprob: -10.635811805725098

Token 36: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.030035223811864853
    2. ' result' → logprob: -3.5300352573394775
    3. '       ' → logprob: -8.405035018920898
    4. '   ' → logprob: -10.405035018920898
    5. 'i' → logprob: -11.405035018920898
    6. ' i' → logprob: -12.280035018920898
    7. '    ' → logprob: -12.530035018920898
    8. '           ' → logprob: -13.030035018920898
    9. '        
' → logprob: -13.280035018920898
    10. '
' → logprob: -13.405035018920898

Token 37: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.08064451813697815
    2. '+=' → logprob: -2.8306446075439453
    3. ' *=' → logprob: -4.080644607543945
    4. '=' → logprob: -7.080644607543945
    5. ' =' → logprob: -8.205644607543945
    6. '*=' → logprob: -8.330644607543945
    7. '*' → logprob: -8.955644607543945
    8. ' ' → logprob: -9.830644607543945
    9. '+' → logprob: -10.330644607543945
    10. ' *' → logprob: -11.205644607543945

Token 38: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005538671393878758
    2. ' ' → logprob: -7.500554084777832
    3. '2' → logprob: -14.250554084777832
    4. '   ' → logprob: -16.000553131103516
    5. 'result' → logprob: -16.688053131103516
    6. 'i' → logprob: -17.188053131103516
    7. '  ' → logprob: -17.250553131103516
    8. 'count' → logprob: -18.000553131103516
    9. '１' → logprob: -18.063053131103516
    10. '3' → logprob: -18.438053131103516

Token 39: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.620622712536715e-05
    2. ' ' → logprob: -10.125045776367188
    3. '2' → logprob: -12.375045776367188
    4. 'result' → logprob: -14.687545776367188
    5. '   ' → logprob: -14.875045776367188
    6. 'i' → logprob: -15.375045776367188
    7. '3' → logprob: -16.062545776367188
    8. '11' → logprob: -16.187545776367188
    9. '  ' → logprob: -16.375045776367188
    10. 'count' → logprob: -16.812545776367188

Token 40: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0440160036087036
    2. '
' → logprob: -1.0440160036087036
    3. '   ' → logprob: -1.9190160036087036
    4. ' i' → logprob: -2.294015884399414
    5. '```' → logprob: -4.294015884399414
    6. ' 
' → logprob: -4.794015884399414
    7. '    
' → logprob: -4.919015884399414
    8. '	i' → logprob: -5.294015884399414
    9. '<|end|>' → logprob: -5.669015884399414
    10. '[i' → logprob: -6.044015884399414

Token 41: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8031226992607117
    2. '   ' → logprob: -0.8031226992607117
    3. ' i' → logprob: -2.4281227588653564
    4. '	i' → logprob: -4.928122520446777
    5. '```' → logprob: -4.928122520446777
    6. '``' → logprob: -7.928122520446777
    7. '       ' → logprob: -8.178122520446777
    8. '
' → logprob: -8.678122520446777
    9. '    
' → logprob: -8.803122520446777
    10. '_i' → logprob: -8.928122520446777

Token 42: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5093211531639099
    2. 'i' (adapté à ' i') → logprob: -1.0093212127685547
    3. '   ' → logprob: -3.3843212127685547
    4. '	i' → logprob: -7.384321212768555
    5. '```' → logprob: -10.134321212768555
    6. ' ' → logprob: -10.384321212768555
    7. '  ' → logprob: -11.259321212768555
    8. '[i' → logprob: -12.259321212768555
    9. '    ' → logprob: -12.634321212768555
    10. '       ' → logprob: -12.634321212768555

Token 43: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08355306833982468
    2. '+=' → logprob: -2.5835530757904053
    3. ' +=' → logprob: -5.583552837371826
    4. '++' → logprob: -7.083552837371826
    5. '+++' → logprob: -10.833553314208984
    6. '=' → logprob: -10.958553314208984
    7. ' +' → logprob: -11.583553314208984
    8. '```' → logprob: -12.333553314208984
    9. '<|end|>' → logprob: -14.083553314208984
    10. '+='' → logprob: -14.458553314208984

Token 44: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '```' → logprob: -17.500123977661133
    4. '+' → logprob: -17.750123977661133
    5. '   ' → logprob: -18.250123977661133
    6. '2' → logprob: -20.812623977661133
    7. '  ' → logprob: -20.812623977661133
    8. '１' → logprob: -21.125123977661133
    9. '۱' → logprob: -21.187623977661133
    10. '    ' → logprob: -21.250123977661133

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -17.2500057220459
    4. '2' → logprob: -17.8750057220459
    5. '   ' → logprob: -18.8750057220459
    6. '１' → logprob: -19.0000057220459
    7. '۱' → logprob: -19.0000057220459
    8. '१' → logprob: -19.1250057220459
    9. '+' → logprob: -19.2500057220459
    10. '১' → logprob: -19.8750057220459

Token 46: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013123051263391972
    2. '
' → logprob: -4.513123035430908
    3. '```' → logprob: -6.638123035430908
    4. '<|end|>' → logprob: -8.138123512268066
    5. '\n' → logprob: -8.388123512268066
    6. ' print' → logprob: -8.888123512268066
    7. 'newline' → logprob: -11.138123512268066
    8. 'return' → logprob: -11.388123512268066
    9. '#' → logprob: -11.513123512268066
    10. ' 
' → logprob: -11.888123512268066

Token 47: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.696889623621246e-06
    2. '```' → logprob: -13.50000286102295
    3. ' print' → logprob: -14.87500286102295
    4. 'return' → logprob: -15.00000286102295
    5. 'pr' → logprob: -15.37500286102295
    6. 'p' → logprob: -16.500001907348633
    7. '
' → logprob: -16.750001907348633
    8. '#print' → logprob: -16.750001907348633
    9. 'result' → logprob: -16.875001907348633
    10. '#' → logprob: -17.250001907348633

Token 48: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6931670308113098
    2. '(result' → logprob: -0.6931670308113098
    3. '()' → logprob: -11.943166732788086
    4. 'result' → logprob: -12.068166732788086
    5. '('' → logprob: -12.568166732788086
    6. '(s' → logprob: -13.943166732788086
    7. '((' → logprob: -14.443166732788086
    8. '(res' → logprob: -14.443166732788086
    9. '("("' → logprob: -14.693166732788086
    10. '(
' → logprob: -15.443166732788086

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -16.5
    3. '))' → logprob: -16.75
    4. ')`' → logprob: -17.5
    5. '`)' → logprob: -18.75
    6. '')' → logprob: -19.125
    7. ')
' → logprob: -19.375
    8. '）' → logprob: -20.0
    9. '()' → logprob: -20.0
    10. '```' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 47
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 21
Tokens correctement prédits (top 10): 41
Précision stricte (1ère position): 42.55%
Précision adaptée (1ère position): 44.68%
Précision (top 10): 87.23%
================================================================================
