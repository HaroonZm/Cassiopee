================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_count = int(input())
input_list_a = list(map(int, input().split()))
input_list_b = list(map(int, input().split()))
input_list_c = list(map(int, input().split()))

result_sum = 0
for index in range(input_count):
    current_a_value = input_list_a[index] - 1
    result_sum += input_list_b[current_a_value]
    if index > 0:
        if input_list_a[index] == input_list_a[index - 1] + 1:
            result_sum += input_list_c[input_list_a[index - 1] - 1]

print(result_sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_count' (ID: 7536)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25987550616264343
    2. '0' → logprob: -1.5098755359649658
    3. '1' → logprob: -6.009875297546387
    4. ' len' → logprob: -6.259875297546387
    5. ' int' → logprob: -6.384875297546387
    6. ' input' → logprob: -7.509875297546387
    7. 'input' → logprob: -8.259875297546387
    8. '4' → logprob: -8.259875297546387
    9. 'int' → logprob: -8.759875297546387
    10. '"' → logprob: -9.009875297546387

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004273315134923905
    2. '```' → logprob: -9.50042724609375
    3. ''' → logprob: -9.87542724609375
    4. ' (' → logprob: -10.00042724609375
    5. '()' → logprob: -10.00042724609375
    6. '(input' → logprob: -10.50042724609375
    7. '32' → logprob: -10.62542724609375
    8. '('' → logprob: -10.62542724609375
    9. ' ' → logprob: -10.75042724609375
    10. '`' → logprob: -10.87542724609375

Token 5: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10250791907310486
    2. ')' → logprob: -2.4775078296661377
    3. '()' → logprob: -4.727508068084717
    4. '())' → logprob: -5.602508068084717
    5. '('' → logprob: -8.227507591247559
    6. '(
' → logprob: -8.727507591247559
    7. '))' → logprob: -9.227507591247559
    8. '(""))' → logprob: -9.477507591247559
    9. '(()' → logprob: -9.727507591247559
    10. '```' → logprob: -9.977507591247559

Token 6: 'input' (ID: 2586)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0326802730560303
    2. 'for' → logprob: -1.4076802730560303
    3. '\n' → logprob: -2.1576802730560303
    4. '+' → logprob: -2.5326802730560303
    5. '```' → logprob: -3.2826802730560303
    6. '*' → logprob: -3.4076802730560303
    7. ')' → logprob: -3.6576802730560303
    8. ' if' → logprob: -3.7826802730560303
    9. ' for' → logprob: -4.282680511474609
    10. '>' → logprob: -4.282680511474609

Token 7: '_list' (ID: 4162)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5489023327827454
    2. '_' → logprob: -1.1739022731781006
    3. '_count' → logprob: -2.9239022731781006
    4. '()' → logprob: -3.6739022731781006
    5. '('_' → logprob: -4.79890251159668
    6. '('' → logprob: -4.79890251159668
    7. '("_' → logprob: -5.79890251159668
    8. '_counts' → logprob: -5.92390251159668
    9. ''' → logprob: -6.29890251159668
    10. '("("' → logprob: -6.54890251159668

Token 8: '_a' (ID: 10852)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020496461540460587
    2. '.' → logprob: -4.895496368408203
    3. '```' → logprob: -5.520496368408203
    4. '_' → logprob: -5.645496368408203
    5. '[]' → logprob: -6.770496368408203
    6. ''' → logprob: -6.895496368408203
    7. '[
' → logprob: -7.020496368408203
    8. ')' → logprob: -7.895496368408203
    9. '\[' → logprob: -8.270496368408203
    10. '[:]' → logprob: -8.270496368408203

Token 9: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23927395045757294
    2. '.' → logprob: -1.8642739057540894
    3. '_' → logprob: -3.739274024963379
    4. '.append' → logprob: -4.614274024963379
    5. '=' → logprob: -4.864274024963379
    6. '[:]' → logprob: -4.989274024963379
    7. '[]' → logprob: -5.489274024963379
    8. ' =' → logprob: -5.989274024963379
    9. ')' → logprob: -7.864274024963379
    10. '[a' → logprob: -8.364274024963379

Token 10: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.785187840461731
    2. '[]' → logprob: -1.410187840461731
    3. 'list' → logprob: -2.1601877212524414
    4. ' list' → logprob: -2.4101877212524414
    5. ' [' → logprob: -3.0351877212524414
    6. '[' → logprob: -3.6601877212524414
    7. '[input' → logprob: -4.410187721252441
    8. '[list' → logprob: -4.910187721252441
    9. '[int' → logprob: -7.035187721252441
    10. 'input' → logprob: -7.910187721252441

Token 11: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00013810492237098515
    2. '(range' → logprob: -10.375138282775879
    3. '```' → logprob: -10.625138282775879
    4. '(input' → logprob: -10.875138282775879
    5. ' (' → logprob: -11.375138282775879
    6. '(
' → logprob: -11.625138282775879
    7. '((' → logprob: -11.625138282775879
    8. '("("' → logprob: -11.875138282775879
    9. '('' → logprob: -12.750138282775879
    10. ')' → logprob: -12.875138282775879

Token 12: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03439533710479736
    2. '(' → logprob: -3.409395217895508
    3. 'int' → logprob: -8.534395217895508
    4. '(str' → logprob: -8.534395217895508
    5. '(input' → logprob: -8.659395217895508
    6. '(lambda' → logprob: -9.159395217895508
    7. '(
' → logprob: -10.534395217895508
    8. ')' → logprob: -11.159395217895508
    9. '(eval' → logprob: -11.409395217895508
    10. ' (' → logprob: -12.159395217895508

Token 13: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006167085841298103
    2. '(' → logprob: -5.256166934967041
    3. ',input' → logprob: -7.506166934967041
    4. ')' → logprob: -8.8811674118042
    5. 'input' → logprob: -9.5061674118042
    6. ',' → logprob: -9.6311674118042
    7. '))' → logprob: -10.0061674118042
    8. ' (' → logprob: -10.5061674118042
    9. '=input' → logprob: -11.5061674118042
    10. '),' → logprob: -12.0061674118042

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3870161771774292
    2. ' input' → logprob: -1.1370161771774292
    3. '(input' → logprob: -8.887016296386719
    4. ',input' → logprob: -12.512016296386719
    5. '	input' → logprob: -14.512016296386719
    6. ')' → logprob: -14.512016296386719
    7. '=input' → logprob: -14.512016296386719
    8. '<input' → logprob: -14.887016296386719
    9. 'range' → logprob: -15.012016296386719
    10. ' (' → logprob: -15.387016296386719

Token 15: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.4766502380371094
    2. '()' → logprob: -1.2266502380371094
    3. '())' → logprob: -2.6016502380371094
    4. '(' → logprob: -4.726650238037109
    5. '().' → logprob: -6.976650238037109
    6. '())))' → logprob: -7.351650238037109
    7. '()));' → logprob: -7.851650238037109
    8. '))' → logprob: -7.976650238037109
    9. ')' → logprob: -9.60165023803711
    10. '()`' → logprob: -9.85165023803711

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002446509897708893
    2. 'strip' → logprob: -8.375245094299316
    3. 'rstrip' → logprob: -11.500245094299316
    4. ' split' → logprob: -12.875245094299316
    5. '(split' → logprob: -14.000245094299316
    6. ')' → logprob: -15.000245094299316
    7. 'spl' → logprob: -15.750245094299316
    8. '_split' → logprob: -17.125244140625
    9. 'startswith' → logprob: -17.625244140625
    10. 'plit' → logprob: -18.375244140625

Token 17: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.41025951504707336
    2. '())' → logprob: -1.410259485244751
    3. '))' → logprob: -2.785259485244751
    4. ')' → logprob: -4.28525972366333
    5. '(' → logprob: -4.53525972366333
    6. '()' → logprob: -5.16025972366333
    7. '('' → logprob: -8.910259246826172
    8. ''))' → logprob: -9.910259246826172
    9. '())))' → logprob: -9.910259246826172
    10. '(','' → logprob: -9.910259246826172

Token 18: 'input' (ID: 2586)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3862634599208832
    2. 'input' → logprob: -1.8862634897232056
    3. ')' → logprob: -2.886263370513916
    4. 'if' → logprob: -3.136263370513916
    5. 'output' → logprob: -4.261263370513916
    6. '#' → logprob: -4.636263370513916
    7. 'a' → logprob: -5.011263370513916
    8. '```' → logprob: -5.136263370513916
    9. 'result' → logprob: -5.261263370513916
    10. 'assert' → logprob: -5.636263370513916

Token 19: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.001765501219779253
    2. ')_' → logprob: -7.126765727996826
    3. '```' → logprob: -7.876765727996826
    4. '_count' → logprob: -9.251765251159668
    5. '_s' → logprob: -9.376765251159668
    6. '_line' → logprob: -9.626765251159668
    7. '_' → logprob: -9.751765251159668
    8. ''_' → logprob: -10.001765251159668
    9. '_lst' → logprob: -10.876765251159668
    10. ')' → logprob: -11.126765251159668

Token 20: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.02084479108452797
    2. '_' → logprob: -4.14584493637085
    3. '_b' → logprob: -5.52084493637085
    4. '```' → logprob: -7.64584493637085
    5. ' _' → logprob: -9.270844459533691
    6. '_s' → logprob: -9.770844459533691
    7. ''_' → logprob: -10.645844459533691
    8. '_
' → logprob: -10.645844459533691
    9. '__' → logprob: -11.020844459533691
    10. '"_' → logprob: -11.145844459533691

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01515649352222681
    2. '=' → logprob: -4.265156269073486
    3. '_' → logprob: -7.390156269073486
    4. '.' → logprob: -9.390156745910645
    5. ')' → logprob: -9.640156745910645
    6. '.extend' → logprob: -9.765156745910645
    7. '.append' → logprob: -9.890156745910645
    8. '[' → logprob: -10.015156745910645
    9. '[:]' → logprob: -10.640156745910645
    10. ' +=' → logprob: -11.390156745910645

Token 22: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.07898132503032684
    2. 'list' → logprob: -2.578981399536133
    3. ' map' → logprob: -9.453981399536133
    4. 'map' → logprob: -11.453981399536133
    5. '(list' → logprob: -13.328981399536133
    6. ' input' → logprob: -14.828981399536133
    7. 'input' → logprob: -16.078981399536133
    8. ' ' → logprob: -16.078981399536133
    9. ' l' → logprob: -16.828981399536133
    10. '=list' → logprob: -16.828981399536133

Token 23: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017237603664398193
    2. '(map' → logprob: -4.142237663269043
    3. '(.' → logprob: -8.142237663269043
    4. '(

' → logprob: -8.392237663269043
    5. '((' → logprob: -8.517237663269043
    6. '(range' → logprob: -9.767237663269043
    7. '(list' → logprob: -9.892237663269043
    8. '("("' → logprob: -9.892237663269043
    9. ' (' → logprob: -10.267237663269043
    10. '(int' → logprob: -10.267237663269043

Token 24: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.003745094407349825
    2. '(' → logprob: -5.628745079040527
    3. '<int' → logprob: -9.628745079040527
    4. ' (' → logprob: -10.378745079040527
    5. '=int' → logprob: -11.503745079040527
    6. '```' → logprob: -11.628745079040527
    7. 'int' → logprob: -12.003745079040527
    8. '[int' → logprob: -12.128745079040527
    9. '(str' → logprob: -12.378745079040527
    10. ')' → logprob: -12.878745079040527

Token 25: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.07605751603841782
    2. '(input' → logprob: -3.0760574340820312
    3. ',' → logprob: -4.326057434082031
    4. ',int' → logprob: -5.076057434082031
    5. '(' → logprob: -5.701057434082031
    6. ',input' → logprob: -5.701057434082031
    7. 'int' → logprob: -8.076057434082031
    8. '<int' → logprob: -8.826057434082031
    9. ' ,' → logprob: -8.826057434082031
    10. '```' → logprob: -9.076057434082031

Token 26: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.8040930032730103
    2. ' input' → logprob: -1.0540930032730103
    3. 'int' → logprob: -1.6790930032730103
    4. ' int' → logprob: -4.054092884063721
    5. 'str' → logprob: -9.679093360900879
    6. ' str' → logprob: -10.679093360900879
    7. '(input' → logprob: -11.429093360900879
    8. '(int' → logprob: -12.554093360900879
    9. '<input' → logprob: -14.179093360900879
    10. ' ' → logprob: -14.554093360900879

Token 27: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00031401283922605217
    2. '()' → logprob: -8.125313758850098
    3. '.' → logprob: -11.375313758850098
    4. '()))' → logprob: -13.000313758850098
    5. '(' → logprob: -13.250313758850098
    6. '())' → logprob: -14.125313758850098
    7. ' ().' → logprob: -14.375313758850098
    8. '().'' → logprob: -15.250313758850098
    9. '(.' → logprob: -15.625313758850098
    10. '()));' → logprob: -15.750313758850098

Token 28: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.5776860184123507e-06
    2. 'strip' → logprob: -13.12500286102295
    3. ')' → logprob: -15.62500286102295
    4. ' split' → logprob: -15.62500286102295
    5. '(split' → logprob: -15.75000286102295
    6. 'spl' → logprob: -17.250001907348633
    7. 'rstrip' → logprob: -18.375001907348633
    8. '```' → logprob: -18.875001907348633
    9. 'plit' → logprob: -19.375001907348633
    10. 'input' → logprob: -20.000001907348633

Token 29: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.11905640363693237
    2. '())' → logprob: -2.369056463241577
    3. '()' → logprob: -4.494056224822998
    4. '))' → logprob: -5.119056224822998
    5. ')' → logprob: -6.619056224822998
    6. '(' → logprob: -9.244056701660156
    7. '()))
' → logprob: -10.494056701660156
    8. '()));' → logprob: -11.119056701660156
    9. '()>' → logprob: -11.744056701660156
    10. '()),' → logprob: -12.119056701660156

Token 30: 'input' (ID: 2586)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6839439868927002
    2. 'for' → logprob: -1.6839439868927002
    3. 'a' → logprob: -2.6839439868927
    4. 's' → logprob: -3.0589439868927
    5. 'c' → logprob: -3.3089439868927
    6. 'output' → logprob: -3.4339439868927
    7. 'r' → logprob: -4.058943748474121
    8. 'res' → logprob: -4.433943748474121
    9. '[' → logprob: -4.558943748474121
    10. 'n' → logprob: -4.558943748474121

Token 31: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33642593026161194
    2. '_list' → logprob: -1.7114259004592896
    3. '_count' → logprob: -2.336426019668579
    4. '_counts' → logprob: -5.58642578125
    5. ')' → logprob: -7.58642578125
    6. '_s' → logprob: -7.71142578125
    7. '```' → logprob: -7.71142578125
    8. '(' → logprob: -8.08642578125
    9. '_sum' → logprob: -8.21142578125
    10. ' _' → logprob: -8.21142578125

Token 32: '_c' (ID: 1303)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.12838169932365417
    2. '_' → logprob: -2.1283817291259766
    3. '_b' → logprob: -7.378381729125977
    4. '```' → logprob: -8.253381729125977
    5. '_s' → logprob: -8.378381729125977
    6. 'a' → logprob: -9.378381729125977
    7. '_c' → logprob: -9.378381729125977
    8. ' _' → logprob: -10.128381729125977
    9. 's' → logprob: -10.253381729125977
    10. '__' → logprob: -11.003381729125977

Token 33: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5395656228065491
    2. '[' → logprob: -1.0395655632019043
    3. ' =' → logprob: -3.2895655632019043
    4. '.' → logprob: -4.414565563201904
    5. '=' → logprob: -4.914565563201904
    6. '[:]' → logprob: -6.039565563201904
    7. '.append' → logprob: -6.664565563201904
    8. '[]' → logprob: -6.789565563201904
    9. ')' → logprob: -7.414565563201904
    10. 's' → logprob: -8.414566040039062

Token 34: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.5859092473983765
    2. ' list' → logprob: -0.8359092473983765
    3. ' []' → logprob: -5.085909366607666
    4. '[]' → logprob: -6.210909366607666
    5. '[' → logprob: -7.460909366607666
    6. ' [' → logprob: -7.710909366607666
    7. '(list' → logprob: -7.835909366607666
    8. '[list' → logprob: -9.085908889770508
    9. 'input' → logprob: -9.960908889770508
    10. ' input' → logprob: -10.710908889770508

Token 35: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0121711241081357
    2. '(map' → logprob: -5.012171268463135
    3. '(int' → logprob: -5.762171268463135
    4. '(range' → logprob: -7.012171268463135
    5. '((' → logprob: -8.262170791625977
    6. '(lambda' → logprob: -8.387170791625977
    7. '(list' → logprob: -8.512170791625977
    8. '(()' → logprob: -9.137170791625977
    9. '(

' → logprob: -9.137170791625977
    10. '(
' → logprob: -9.137170791625977

Token 36: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.003229528898373246
    2. '(' → logprob: -5.75322961807251
    3. 'int' → logprob: -11.128229141235352
    4. '(lambda' → logprob: -11.503229141235352
    5. ')(' → logprob: -11.753229141235352
    6. '<int' → logprob: -12.378229141235352
    7. '[int' → logprob: -12.503229141235352
    8. ' (' → logprob: -12.753229141235352
    9. '=int' → logprob: -13.253229141235352
    10. '(str' → logprob: -13.503229141235352

Token 37: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.048203133046627045
    2. '(' → logprob: -3.923203229904175
    3. ',' → logprob: -4.298202991485596
    4. ',int' → logprob: -4.548202991485596
    5. ')' → logprob: -6.548202991485596
    6. '(input' → logprob: -7.173202991485596
    7. ')(' → logprob: -7.798202991485596
    8. ',(' → logprob: -9.298203468322754
    9. '```' → logprob: -9.798203468322754
    10. ',input' → logprob: -9.923203468322754

Token 38: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.013346095569431782
    2. ' int' → logprob: -4.513346195220947
    3. 'input' → logprob: -6.263346195220947
    4. '(int' → logprob: -8.138345718383789
    5. ' input' → logprob: -9.263345718383789
    6. '[int' → logprob: -13.013345718383789
    7. 'str' → logprob: -14.638345718383789
    8. ' ' → logprob: -15.013345718383789
    9. '<int' → logprob: -15.138345718383789
    10. '(input' → logprob: -15.638345718383789

Token 39: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.2958885431289673
    2. '()' → logprob: -1.4208885431289673
    3. '(' → logprob: -4.920888423919678
    4. '())' → logprob: -5.170888423919678
    5. '()))' → logprob: -7.295888423919678
    6. '(.' → logprob: -8.420888900756836
    7. '(),' → logprob: -8.795888900756836
    8. '()[' → logprob: -8.920888900756836
    9. '```' → logprob: -9.420888900756836
    10. '()`' → logprob: -10.045888900756836

Token 40: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.961759259458631e-06
    2. 'strip' → logprob: -12.750004768371582
    3. ' split' → logprob: -13.375004768371582
    4. ')' → logprob: -15.250004768371582
    5. 'spl' → logprob: -16.1250057220459
    6. '(split' → logprob: -16.8750057220459
    7. '```' → logprob: -17.5000057220459
    8. 'int' → logprob: -18.0000057220459
    9. 'rstrip' → logprob: -18.1250057220459
    10. 'sort' → logprob: -18.5000057220459

Token 41: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2338937222957611
    2. '())' → logprob: -1.8588937520980835
    3. '))' → logprob: -3.483893632888794
    4. '()' → logprob: -4.358893871307373
    5. ')' → logprob: -4.733893871307373
    6. '(' → logprob: -8.233893394470215
    7. '()))
' → logprob: -9.233893394470215
    8. '())
' → logprob: -10.983893394470215
    9. '()>' → logprob: -11.358893394470215
    10. '())))' → logprob: -11.983893394470215

Token 42: 'result' (ID: 2521)
  Prédit: 'result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.37903937697410583
    2. 'for' → logprob: -2.3790392875671387
    3. 'd' → logprob: -3.0040392875671387
    4. 'output' → logprob: -3.3790392875671387
    5. 'max' → logprob: -3.8790392875671387
    6. 'answer' → logprob: -3.8790392875671387
    7. 's' → logprob: -4.254039287567139
    8. 'a' → logprob: -4.254039287567139
    9. 'res' → logprob: -4.629039287567139
    10. 'sum' → logprob: -4.879039287567139

Token 43: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5947309136390686
    2. '(' → logprob: -0.9697309136390686
    3. '=' → logprob: -3.219730854034424
    4. ' =' → logprob: -3.969730854034424
    5. 's' → logprob: -5.344730854034424
    6. '[' → logprob: -5.594730854034424
    7. '.' → logprob: -7.719730854034424
    8. ')' → logprob: -8.344731330871582
    9. '[:]' → logprob: -8.719731330871582
    10. '[]' → logprob: -9.219731330871582

Token 44: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7648665308952332
    2. ' =' → logprob: -1.389866590499878
    3. '_' → logprob: -2.264866590499878
    4. '=' → logprob: -2.389866590499878
    5. ' +=' → logprob: -2.764866590499878
    6. '[' → logprob: -4.639866352081299
    7. '+' → logprob: -5.264866352081299
    8. ' ' → logprob: -6.014866352081299
    9. ')' → logprob: -6.139866352081299
    10. '()' → logprob: -6.764866352081299

Token 45: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06456644833087921
    2. ' ' → logprob: -2.8145663738250732
    3. ' sum' → logprob: -6.689566612243652
    4. 'sum' → logprob: -6.939566612243652
    5. ' input' → logprob: -8.564566612243652
    6. 'input' → logprob: -8.814566612243652
    7. ' max' → logprob: -10.564566612243652
    8. 'max' → logprob: -12.064566612243652
    9. ' ' → logprob: -13.189566612243652
    10. '(sum' → logprob: -13.314566612243652

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01536006573587656
    2. 'sum' → logprob: -4.265359878540039
    3. 'input' → logprob: -6.890359878540039
    4. 'max' → logprob: -9.265359878540039
    5. ' ' → logprob: -10.390359878540039
    6. 'a' → logprob: -11.265359878540039
    7. '(' → logprob: -11.765359878540039
    8. '(sum' → logprob: -11.890359878540039
    9. ' sum' → logprob: -12.140359878540039
    10. '[' → logprob: -12.515359878540039

Token 47: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005558936391025782
    2. '
' → logprob: -7.750555992126465
    3. ' for' → logprob: -9.625555992126465
    4. '\n' → logprob: -10.125555992126465
    5. '```' → logprob: -11.375555992126465
    6. '\' → logprob: -13.250555992126465
    7. '' → logprob: -13.250555992126465
    8. 'a' → logprob: -13.750555992126465
    9. '
' → logprob: -14.125555992126465
    10. 'n' → logprob: -15.250555992126465

Token 48: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00010103991371579468
    2. '```' → logprob: -9.625101089477539
    3. '\n' → logprob: -11.250101089477539
    4. 'f' → logprob: -11.250101089477539
    5. '
' → logprob: -12.375101089477539
    6. ' for' → logprob: -13.500101089477539
    7. 'i' → logprob: -14.625101089477539
    8. '\' → logprob: -14.625101089477539
    9. 'n' → logprob: -14.625101089477539
    10. '`' → logprob: -14.750101089477539

Token 49: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18357354402542114
    2. ' _' → logprob: -2.5585734844207764
    3. ' ' → logprob: -2.6835734844207764
    4. '_' → logprob: -4.0585737228393555
    5. ' input' → logprob: -5.9335737228393555
    6. 'i' → logprob: -6.8085737228393555
    7. '  ' → logprob: -7.6835737228393555
    8. ' ' → logprob: -9.308573722839355
    9. '_i' → logprob: -9.558573722839355
    10. ' space' → logprob: -9.558573722839355

Token 50: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04450775310397148
    2. 'in' → logprob: -3.6695077419281006
    3. ' ' → logprob: -4.16950798034668
    4. '  ' → logprob: -6.79450798034668
    5. '[' → logprob: -7.41950798034668
    6. '_' → logprob: -8.54450798034668
    7. ' ,' → logprob: -9.29450798034668
    8. ')' → logprob: -9.41950798034668
    9. ' i' → logprob: -9.41950798034668
    10. '<|end|>' → logprob: -9.54450798034668

Token 51: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.002482434967532754
    2. 'range' → logprob: -6.0024824142456055
    3. '	range' → logprob: -12.752482414245605
    4. '(range' → logprob: -13.377482414245605
    5. ' input' → logprob: -13.377482414245605
    6. ' xrange' → logprob: -14.627482414245605
    7. '_range' → logprob: -15.877482414245605
    8. ' ' → logprob: -16.252483367919922
    9. '.range' → logprob: -17.752483367919922
    10. ' ' → logprob: -18.002483367919922

Token 52: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31528300046920776
    2. '(input' → logprob: -1.3152830600738525
    3. ' (' → logprob: -6.440282821655273
    4. '(len' → logprob: -7.815282821655273
    5. ' input' → logprob: -11.815282821655273
    6. '(
' → logprob: -12.065282821655273
    7. 'input' → logprob: -13.315282821655273
    8. '(length' → logprob: -13.565282821655273
    9. '(n' → logprob: -13.940282821655273
    10. '(in' → logprob: -14.190282821655273

Token 53: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.0100624169572257e-05
    2. '_' → logprob: -11.625020027160645
    3. '_list' → logprob: -13.000020027160645
    4. ')_' → logprob: -13.000020027160645
    5. '_counts' → logprob: -13.250020027160645
    6. ' _' → logprob: -13.875020027160645
    7. '_len' → logprob: -14.250020027160645
    8. '_co' → logprob: -14.375020027160645
    9. '_counter' → logprob: -14.750020027160645
    10. ')' → logprob: -15.125020027160645

Token 54: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3914397656917572
    2. ')' → logprob: -1.1414397954940796
    3. ' ):' → logprob: -6.016439914703369
    4. ' )' → logprob: -6.391439914703369
    5. '+' → logprob: -8.016439437866211
    6. '):
' → logprob: -9.766439437866211
    7. ' +' → logprob: -10.891439437866211
    8. ' ' → logprob: -11.891439437866211
    9. '   ' → logprob: -12.016439437866211
    10. ':' → logprob: -12.016439437866211

Token 55: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2218269258737564
    2. '   ' → logprob: -2.3468270301818848
    3. '    ' → logprob: -3.4718270301818848
    4. 'result' → logprob: -3.7218270301818848
    5. 'input' → logprob: -4.971827030181885
    6. '<|end|>' → logprob: -4.971827030181885
    7. ' input' → logprob: -5.346827030181885
    8. ' )' → logprob: -5.596827030181885
    9. ' if' → logprob: -5.721827030181885
    10. ' result' → logprob: -5.971827030181885

Token 56: ' current' (ID: 2208)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.36898472905158997
    2. 'result' → logprob: -1.6189846992492676
    3. '    ' → logprob: -2.7439846992492676
    4. '<|end|>' → logprob: -4.368984699249268
    5. ' result' → logprob: -5.243984699249268
    6. ' if' → logprob: -5.243984699249268
    7. '   ' → logprob: -5.368984699249268
    8. '```' → logprob: -5.743984699249268
    9. 'input' → logprob: -5.868984699249268
    10. ' ```' → logprob: -5.868984699249268

Token 57: '_a' (ID: 10852)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.4073840081691742
    2. '_value' → logprob: -2.157383918762207
    3. '_result' → logprob: -2.532383918762207
    4. '_a' → logprob: -2.782383918762207
    5. '_list' → logprob: -3.282383918762207
    6. '_' → logprob: -3.657383918762207
    7. '_val' → logprob: -5.532383918762207
    8. ' _' → logprob: -5.782383918762207
    9. '_count' → logprob: -6.532383918762207
    10. '_number' → logprob: -7.032383918762207

Token 58: '_value' (ID: 6734)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5216527581214905
    2. ' =' → logprob: -1.1466526985168457
    3. '[' → logprob: -2.6466526985168457
    4. ' *' → logprob: -5.521652698516846
    5. ' +=' → logprob: -5.646652698516846
    6. '=' → logprob: -6.021652698516846
    7. '    ' → logprob: -6.646652698516846
    8. ' [' → logprob: -6.896652698516846
    9. ')' → logprob: -6.896652698516846
    10. '   ' → logprob: -7.146652698516846

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4517669081687927
    2. ' +=' → logprob: -1.0767669677734375
    3. '=' → logprob: -4.8267669677734375
    4. ' ' → logprob: -4.9517669677734375
    5. ' +' → logprob: -6.5767669677734375
    6. '    ' → logprob: -6.7017669677734375
    7. '+' → logprob: -6.9517669677734375
    8. ' *' → logprob: -7.3267669677734375
    9. ' *=' → logprob: -7.4517669677734375
    10. ')' → logprob: -7.4517669677734375

Token 60: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5759425163269043
    2. 'input' → logprob: -0.8259425163269043
    3. '=input' → logprob: -14.075942993164062
    4. '(input' → logprob: -14.575942993164062
    5. '<input' → logprob: -15.325942993164062
    6. 'int' → logprob: -15.325942993164062
    7. '[input' → logprob: -15.450942993164062
    8. ' current' → logprob: -15.450942993164062
    9. '	input' → logprob: -15.575942993164062
    10. '_input' → logprob: -15.575942993164062

Token 61: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.5597102396423e-05
    2. ')_' → logprob: -10.750035285949707
    3. '_' → logprob: -12.250035285949707
    4. '_count' → logprob: -12.625035285949707
    5. ')' → logprob: -13.625035285949707
    6. ' _' → logprob: -13.750035285949707
    7. '```' → logprob: -14.500035285949707
    8. '_li' → logprob: -14.625035285949707
    9. ''_' → logprob: -15.125035285949707
    10. '_lists' → logprob: -15.250035285949707

Token 62: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -2.117345684382599e-05
    2. 'a' → logprob: -11.125020980834961
    3. '_' → logprob: -12.500020980834961
    4. '```' → logprob: -14.000020980834961
    5. ' _' → logprob: -14.750020980834961
    6. '_s' → logprob: -14.875020980834961
    7. '_b' → logprob: -15.250020980834961
    8. '[_' → logprob: -15.500020980834961
    9. 's' → logprob: -16.00002098083496
    10. '[' → logprob: -16.75002098083496

Token 63: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.03370725363492966
    2. '[' → logprob: -3.4087071418762207
    3. ' [' → logprob: -10.408707618713379
    4. '[input' → logprob: -12.283707618713379
    5. '[Index' → logprob: -12.408707618713379
    6. '[in' → logprob: -12.408707618713379
    7. '+' → logprob: -12.533707618713379
    8. '```' → logprob: -12.658707618713379
    9. '[current' → logprob: -12.783707618713379
    10. '\[' → logprob: -13.158707618713379

Token 64: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29232731461524963
    2. ')' → logprob: -1.6673272848129272
    3. '])' → logprob: -2.792327404022217
    4. ' ]' → logprob: -6.917327404022217
    5. ' )' → logprob: -7.167327404022217
    6. ')]' → logprob: -7.417327404022217
    7. '   ' → logprob: -8.167326927185059
    8. ')
' → logprob: -8.167326927185059
    9. ' ])' → logprob: -8.542326927185059
    10. ']
' → logprob: -9.167326927185059

Token 65: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.781746506690979
    2. '+' → logprob: -1.281746506690979
    3. ' +' → logprob: -2.0317463874816895
    4. '   ' → logprob: -3.2817463874816895
    5. ' if' → logprob: -3.6567463874816895
    6. '    ' → logprob: -3.7817463874816895
    7. '<|end|>' → logprob: -4.4067463874816895
    8. '  ' → logprob: -4.7817463874816895
    9. 'if' → logprob: -4.9067463874816895
    10. ' *' → logprob: -5.5317463874816895

Token 66: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13217048346996307
    2. 'input' → logprob: -2.3821704387664795
    3. ' input' → logprob: -3.8821704387664795
    4. ' ' → logprob: -4.632170677185059
    5. 'index' → logprob: -8.132170677185059
    6. 'current' → logprob: -8.132170677185059
    7. ' current' → logprob: -8.382170677185059
    8. '   ' → logprob: -9.132170677185059
    9. '0' → logprob: -10.007170677185059
    10. ' index' → logprob: -10.132170677185059

Token 67: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015706321224570274
    2. 'input' → logprob: -4.265706539154053
    3. 'current' → logprob: -7.015706539154053
    4. 'index' → logprob: -8.140706062316895
    5. ' ' → logprob: -8.265706062316895
    6. ' input' → logprob: -10.390706062316895
    7. '2' → logprob: -11.390706062316895
    8. 'result' → logprob: -11.765706062316895
    9. '0' → logprob: -11.890706062316895
    10. ' current' → logprob: -12.015706062316895

Token 68: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: ' result' (ID: 1534)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -1.0316499471664429
    2. 'result' (adapté à ' result') → logprob: -1.1566499471664429
    3. 'if' → logprob: -1.6566499471664429
    4. ' if' → logprob: -2.5316500663757324
    5. ' current' → logprob: -4.281650066375732
    6. 'value' → logprob: -4.406650066375732
    7. 'b' → logprob: -4.531650066375732
    8. ' result' → logprob: -4.781650066375732
    9. ')' → logprob: -5.656650066375732
    10. 'c' → logprob: -6.031650066375732

Token 71: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0003932576219085604
    2. ' +=' → logprob: -8.75039291381836
    3. '_' → logprob: -9.00039291381836
    4. '+=' → logprob: -10.00039291381836
    5. '_s' → logprob: -10.12539291381836
    6. '+' → logprob: -12.00039291381836
    7. '=' → logprob: -13.12539291381836
    8. 'sum' → logprob: -13.12539291381836
    9. 's' → logprob: -13.12539291381836
    10. ' =' → logprob: -13.25039291381836

Token 72: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008152578957378864
    2. '+=' → logprob: -4.883152484893799
    3. '+' → logprob: -7.633152484893799
    4. ' +' → logprob: -10.133152961730957
    5. '<|end|>' → logprob: -11.883152961730957
    6. ']+=' → logprob: -12.508152961730957
    7. ')' → logprob: -12.883152961730957
    8. ' ' → logprob: -13.133152961730957
    9. '   ' → logprob: -13.508152961730957
    10. '+=(' → logprob: -13.883152961730957

Token 73: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.21795561909675598
    2. ' input' → logprob: -1.7179555892944336
    3. 'current' → logprob: -4.717955589294434
    4. ' current' → logprob: -4.967955589294434
    5. '(input' → logprob: -8.092955589294434
    6. ' (' → logprob: -9.717955589294434
    7. '   ' → logprob: -10.092955589294434
    8. ' ' → logprob: -10.842955589294434
    9. '(' → logprob: -11.217955589294434
    10. '[input' → logprob: -11.342955589294434

Token 74: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -3.292907877039397e-06
    2. 'list' → logprob: -13.62500286102295
    3. '_count' → logprob: -14.25000286102295
    4. ')_' → logprob: -15.12500286102295
    5. 'List' → logprob: -15.25000286102295
    6. '```' → logprob: -15.37500286102295
    7. '[_' → logprob: -15.87500286102295
    8. '_' → logprob: -16.375003814697266
    9. '_value' → logprob: -16.625003814697266
    10. 't' → logprob: -17.125003814697266

Token 75: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.15310370922088623
    2. '_list' → logprob: -2.153103828430176
    3. '_c' → logprob: -3.778103828430176
    4. '_a' → logprob: -6.028103828430176
    5. '_s' → logprob: -8.778103828430176
    6. '```' → logprob: -9.278103828430176
    7. '_sum' → logprob: -10.153103828430176
    8. '_B' → logprob: -10.403103828430176
    9. ')_' → logprob: -10.903103828430176
    10. '[_' → logprob: -10.903103828430176

Token 76: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.018344959244132042
    2. '[index' → logprob: -4.643344879150391
    3. '[' → logprob: -4.893344879150391
    4. '[input' → logprob: -7.018344879150391
    5. '[_' → logprob: -9.51834487915039
    6. '_current' → logprob: -10.64334487915039
    7. '```' → logprob: -11.14334487915039
    8. '[result' → logprob: -11.14334487915039
    9. 'current' → logprob: -11.51834487915039
    10. '[
' → logprob: -12.89334487915039

Token 77: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -4.47757811343763e-05
    2. 'a' → logprob: -10.750044822692871
    3. '_value' → logprob: -10.750044822692871
    4. '_' → logprob: -14.750044822692871
    5. '_b' → logprob: -15.000044822692871
    6. ' _' → logprob: -16.125043869018555
    7. '_c' → logprob: -16.250043869018555
    8. ')' → logprob: -16.375043869018555
    9. ']' → logprob: -16.375043869018555
    10. '[' → logprob: -16.625043869018555

Token 78: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.10094230622053146
    2. 'value' → logprob: -2.350942373275757
    3. 'alue' → logprob: -7.225942134857178
    4. 'valu' → logprob: -13.100942611694336
    5. 'index' → logprob: -13.475942611694336
    6. 'val' → logprob: -14.850942611694336
    7. ']' → logprob: -14.975942611694336
    8. 'ex' → logprob: -14.975942611694336
    9. ')value' → logprob: -14.975942611694336
    10. '"value' → logprob: -14.975942611694336

Token 79: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0036966355983167887
    2. ' ]' → logprob: -6.628696441650391
    3. ']*' → logprob: -7.753696441650391
    4. ' *' → logprob: -7.753696441650391
    5. '[' → logprob: -8.00369644165039
    6. '[input' → logprob: -8.00369644165039
    7. ' +' → logprob: -8.12869644165039
    8. '+' → logprob: -8.62869644165039
    9. ']+' → logprob: -9.00369644165039
    10. '*' → logprob: -9.37869644165039

Token 80: '   ' (ID: 271)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.24706631898880005
    2. '<|end|>' → logprob: -1.6220662593841553
    3. ' ' → logprob: -5.122066497802734
    4. ' +' → logprob: -5.247066497802734
    5. '<|end|>' → logprob: -5.372066497802734
    6. '-' → logprob: -7.122066497802734
    7. '
' → logprob: -7.247066497802734
    8. ')' → logprob: -7.372066497802734
    9. 'current' → logprob: -7.622066497802734
    10. '   ' → logprob: -7.622066497802734

Token 81: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7953676581382751
    2. ' +' → logprob: -1.54536771774292
    3. '   ' → logprob: -2.29536771774292
    4. 'current' → logprob: -2.29536771774292
    5. '+' → logprob: -3.17036771774292
    6. 'if' (adapté à ' if') → logprob: -3.54536771774292
    7. 'input' → logprob: -3.92036771774292
    8. ' result' → logprob: -4.42036771774292
    9. ' ' → logprob: -4.79536771774292
    10. ' current' → logprob: -5.04536771774292

Token 82: ' index' (ID: 3472)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.8316490054130554
    2. ' index' → logprob: -1.5816490650177002
    3. ' input' → logprob: -1.7066490650177002
    4. 'index' → logprob: -2.5816490650177
    5. 'current' → logprob: -2.7066490650177
    6. 'input' → logprob: -3.4566490650177
    7. ' ' → logprob: -6.331648826599121
    8. ' result' → logprob: -7.581648826599121
    9. 'result' → logprob: -7.706648826599121
    10. '0' → logprob: -7.831648826599121

Token 83: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.18605124950408936
    2. '>' → logprob: -1.8110512495040894
    3. ' ' → logprob: -6.311051368713379
    4. '+' → logprob: -6.436051368713379
    5. ' <' → logprob: -6.811051368713379
    6. ' !=' → logprob: -7.561051368713379
    7. '<' → logprob: -7.811051368713379
    8. '!=' → logprob: -8.186051368713379
    9. ' and' → logprob: -8.561051368713379
    10. ' +' → logprob: -8.811051368713379

Token 84: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20143136382102966
    2. '0' → logprob: -1.701431393623352
    3. '<|end|>' → logprob: -12.326431274414062
    4. '>' → logprob: -12.576431274414062
    5. '1' → logprob: -12.701431274414062
    6. '=' → logprob: -12.826431274414062
    7. '  ' → logprob: -13.076431274414062
    8. '   ' → logprob: -15.076431274414062
    9. '<|end|>' → logprob: -15.138931274414062
    10. 'current' → logprob: -15.513931274414062

Token 85: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013313100207597017
    2. ' ' → logprob: -6.626331329345703
    3. '1' → logprob: -12.376331329345703
    4. '=' → logprob: -15.188831329345703
    5. '   ' → logprob: -16.001331329345703
    6. '>' → logprob: -16.563831329345703
    7. '2' → logprob: -16.688831329345703
    8. '  ' → logprob: -17.001331329345703
    9. '۰' → logprob: -17.251331329345703
    10. '`' → logprob: -17.376331329345703

Token 86: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.004508443176746368
    2. 'and' → logprob: -5.5045084953308105
    3. ' ' → logprob: -8.254508018493652
    4. '    ' → logprob: -9.254508018493652
    5. ':' → logprob: -9.879508018493652
    6. '   ' → logprob: -11.504508018493652
    7. '<|end|>' → logprob: -12.504508018493652
    8. '	and' → logprob: -12.629508018493652
    9. '  ' → logprob: -13.129508018493652
    10. ' ' → logprob: -14.129508018493652

Token 87: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45252829790115356
    2. '       ' → logprob: -1.0775282382965088
    3. ' and' → logprob: -3.952528238296509
    4. ' if' → logprob: -5.702528476715088
    5. 'and' → logprob: -7.702528476715088
    6. 'if' → logprob: -8.70252799987793
    7. ' ' → logprob: -9.32752799987793
    8. '    ' → logprob: -9.32752799987793
    9. ':' → logprob: -10.20252799987793
    10. '     ' → logprob: -10.57752799987793

Token 88: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.144039586186409
    2. 'previous' → logprob: -2.5190396308898926
    3. ' if' → logprob: -3.2690396308898926
    4. ' previous' → logprob: -4.769039630889893
    5. 'prev' → logprob: -5.769039630889893
    6. '   ' → logprob: -6.394039630889893
    7. '       ' → logprob: -7.019039630889893
    8. 'current' → logprob: -7.019039630889893
    9. 'result' → logprob: -8.644039154052734
    10. ' current' → logprob: -9.269039154052734

Token 89: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5764009356498718
    2. 'input' → logprob: -0.8264009356498718
    3. ' current' → logprob: -7.9514007568359375
    4. 'current' → logprob: -9.326400756835938
    5. '(input' → logprob: -12.201400756835938
    6. '	input' → logprob: -12.576400756835938
    7. ' ' → logprob: -12.826400756835938
    8. ' ' → logprob: -13.076400756835938
    9. '   ' → logprob: -13.076400756835938
    10. 'index' → logprob: -13.951400756835938

Token 90: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.4736459888808895e-05
    2. 'list' → logprob: -11.250014305114746
    3. 'List' → logprob: -14.125014305114746
    4. '_count' → logprob: -14.750014305114746
    5. '_lists' → logprob: -16.375015258789062
    6. '_a' → logprob: -16.500015258789062
    7. '[' → logprob: -16.625015258789062
    8. '_' → logprob: -16.750015258789062
    9. 'a' → logprob: -16.750015258789062
    10. '_l' → logprob: -16.875015258789062

Token 91: '_a' (ID: 10852)
  Prédit: '_c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.20574592053890228
    2. '_a' → logprob: -2.2057459354400635
    3. '_b' → logprob: -2.5807459354400635
    4. 'a' → logprob: -10.705745697021484
    5. '[c' → logprob: -10.955745697021484
    6. 'c' → logprob: -11.330745697021484
    7. 'b' → logprob: -11.705745697021484
    8. '[' → logprob: -12.830745697021484
    9. '[index' → logprob: -12.830745697021484
    10. '[a' → logprob: -13.455745697021484

Token 92: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -1.0564331205387134e-05
    2. 'index' → logprob: -12.50001049041748
    3. '[current' → logprob: -12.50001049041748
    4. '[' → logprob: -13.00001049041748
    5. '[input' → logprob: -14.75001049041748
    6. '[i' → logprob: -15.87501049041748
    7. ' [' → logprob: -16.250011444091797
    8. '```' → logprob: -17.000011444091797
    9. '[in' → logprob: -17.500011444091797
    10. '[Index' → logprob: -17.500011444091797

Token 93: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.23907507956027985
    2. ' ==' → logprob: -1.8640750646591187
    3. '-' → logprob: -2.989075183868408
    4. ' -' → logprob: -5.864075183868408
    5. ']==' → logprob: -6.489075183868408
    6. ')' → logprob: -6.739075183868408
    7. ']' → logprob: -7.864075183868408
    8. ' ' → logprob: -7.864075183868408
    9. '```' → logprob: -8.36407470703125
    10. '=' → logprob: -8.48907470703125

Token 94: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2140820324420929
    2. ' ==' → logprob: -1.8390820026397705
    3. '-' → logprob: -3.4640820026397705
    4. ' -' → logprob: -6.08908224105835
    5. '==
' → logprob: -9.839081764221191
    6. '=' → logprob: -9.964081764221191
    7. ']==' → logprob: -10.089081764221191
    8. ' ' → logprob: -10.464081764221191
    9. '```' → logprob: -12.589081764221191
    10. '()==' → logprob: -12.714081764221191

Token 95: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0015317666111513972
    2. ' input' → logprob: -6.501531600952148
    3. '   ' → logprob: -10.876531600952148
    4. '       ' → logprob: -12.126531600952148
    5. ' ' → logprob: -13.626531600952148
    6. '	input' → logprob: -13.626531600952148
    7. '(input' → logprob: -14.001531600952148
    8. '<input' → logprob: -15.001531600952148
    9. '  ' → logprob: -15.001531600952148
    10. '    ' → logprob: -15.376531600952148

Token 96: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.372294698550832e-06
    2. 'list' → logprob: -11.625009536743164
    3. 'List' → logprob: -15.250009536743164
    4. '_count' → logprob: -16.875009536743164
    5. '_l' → logprob: -17.125009536743164
    6. 'a' → logprob: -18.000009536743164
    7. '[' → logprob: -18.750009536743164
    8. '_' → logprob: -19.000009536743164
    9. 'count' → logprob: -19.500009536743164
    10. '1' → logprob: -19.750009536743164

Token 97: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.009959601797163486
    2. '_list' → logprob: -4.634959697723389
    3. 'a' → logprob: -8.75995922088623
    4. '[index' → logprob: -10.25995922088623
    5. '```' → logprob: -12.50995922088623
    6. '_[' → logprob: -13.13495922088623
    7. '_count' → logprob: -13.25995922088623
    8. '[' → logprob: -14.38495922088623
    9. '_' → logprob: -14.38495922088623
    10. 'List' → logprob: -14.63495922088623

Token 98: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -5.676981345459353e-06
    2. 'index' → logprob: -12.125005722045898
    3. '[' → logprob: -15.375005722045898
    4. '[in' → logprob: -17.3750057220459
    5. '```' → logprob: -18.0000057220459
    6. '[i' → logprob: -18.1250057220459
    7. '[ind' → logprob: -19.3750057220459
    8. 's' → logprob: -20.3750057220459
    9. '(index' → logprob: -20.5000057220459
    10. ' ' → logprob: -20.7500057220459

Token 99: ' -' (ID: 533)
  Prédit: '[index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.07516224682331085
    2. '-' → logprob: -2.700162172317505
    3. 'index' → logprob: -5.450162410736084
    4. '[' → logprob: -7.575162410736084
    5. '1' → logprob: -8.450161933898926
    6. '```' → logprob: -9.825161933898926
    7. 'previous' → logprob: -10.075161933898926
    8. ' -' → logprob: -10.325161933898926
    9. '   ' → logprob: -10.575161933898926
    10. '[-' → logprob: -11.200161933898926

Token 100: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.661626634420827e-05
    2. ' ' → logprob: -9.375086784362793
    3. 'index' → logprob: -14.000086784362793
    4. '   ' → logprob: -15.250086784362793
    5. ']' → logprob: -15.375086784362793
    6. '```' → logprob: -15.750086784362793
    7. ')' → logprob: -16.125085830688477
    8. '     ' → logprob: -17.250085830688477
    9. '       ' → logprob: -17.375085830688477
    10. '0' → logprob: -17.750085830688477

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.537868779967539e-06
    2. ' ' → logprob: -11.875008583068848
    3. '   ' → logprob: -14.375008583068848
    4. 'index' → logprob: -15.000008583068848
    5. ']' → logprob: -15.500008583068848
    6. '0' → logprob: -16.56250762939453
    7. '     ' → logprob: -16.81250762939453
    8. ')' → logprob: -17.25000762939453
    9. '```' → logprob: -17.25000762939453
    10. '１' → logprob: -17.56250762939453

Token 102: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.591400682926178
    2. ')' → logprob: -1.2164006233215332
    3. '):' → logprob: -2.716400623321533
    4. ']:' → logprob: -3.341400623321533
    5. '-' → logprob: -3.841400623321533
    6. ' -' → logprob: -4.841400623321533
    7. ']-' → logprob: -4.966400623321533
    8. ':' → logprob: -5.591400623321533
    9. ']+' → logprob: -6.341400623321533
    10. ']):' → logprob: -6.591400623321533

Token 103: ' +' (ID: 659)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011171138845384121
    2. '-' → logprob: -5.011171340942383
    3. ':
' → logprob: -6.511171340942383
    4. ' and' → logprob: -7.136171340942383
    5. ' -' → logprob: -7.261171340942383
    6. 'and' → logprob: -7.386171340942383
    7. '       ' → logprob: -8.386171340942383
    8. '   ' → logprob: -9.011171340942383
    9. '):' → logprob: -9.386171340942383
    10. '  ' → logprob: -9.636171340942383

Token 104: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005536287208087742
    2. ' ' → logprob: -7.500553607940674
    3. '<|end|>' → logprob: -14.375554084777832
    4. '  ' → logprob: -17.500553131103516
    5. '   ' → logprob: -17.625553131103516
    6. '<|end|>' → logprob: -18.625553131103516
    7. '```' → logprob: -19.500553131103516
    8. '0' → logprob: -19.750553131103516
    9. '2' → logprob: -20.125553131103516
    10. ' ' → logprob: -20.875553131103516

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '<|end|>' → logprob: -17.500003814697266
    4. '0' → logprob: -18.625003814697266
    5. '-' → logprob: -20.000003814697266
    6. '  ' → logprob: -20.250003814697266
    7. '2' → logprob: -20.250003814697266
    8. '   ' → logprob: -20.250003814697266
    9. '```' → logprob: -21.000003814697266
    10. '' → logprob: -21.562503814697266

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014238021336495876
    2. ':
' → logprob: -4.264237880706787
    3. '       ' → logprob: -9.889238357543945
    4. '):' → logprob: -11.514238357543945
    5. '   ' → logprob: -11.889238357543945
    6. '):
' → logprob: -13.014238357543945
    7. ' and' → logprob: -13.389238357543945
    8. ' :' → logprob: -14.514238357543945
    9. ':
' → logprob: -14.889238357543945
    10. '           ' → logprob: -15.264238357543945

Token 107: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010643578134477139
    2. '           ' → logprob: -4.635643482208252
    3. '   ' → logprob: -7.385643482208252
    4. '+' → logprob: -10.01064395904541
    5. '
' → logprob: -10.13564395904541
    6. ' ' → logprob: -10.26064395904541
    7. '     ' → logprob: -10.76064395904541
    8. '	       ' → logprob: -11.13564395904541
    9. '               ' → logprob: -11.26064395904541
    10. '      ' → logprob: -11.26064395904541

Token 108: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.002068779431283474
    2. '           ' → logprob: -6.752068996429443
    3. '       ' → logprob: -8.002068519592285
    4. '               ' → logprob: -8.252068519592285
    5. '
' → logprob: -9.377068519592285
    6. '   ' → logprob: -9.502068519592285
    7. ' result' → logprob: -9.752068519592285
    8. ' ' → logprob: -10.502068519592285
    9. '	result' → logprob: -10.877068519592285
    10. '  ' → logprob: -11.502068519592285

Token 109: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -15.125000953674316
    3. '_s' → logprob: -15.250000953674316
    4. 'sum' → logprob: -16.000001907348633
    5. '__' → logprob: -16.125001907348633
    6. '```' → logprob: -17.250001907348633
    7. '_SUM' → logprob: -17.500001907348633
    8. 's' → logprob: -18.375001907348633
    9. ' _' → logprob: -18.375001907348633
    10. 'Sum' → logprob: -18.500001907348633

Token 110: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.34924954175949097
    2. ' +=' → logprob: -1.2242496013641357
    3. '+' → logprob: -7.349249362945557
    4. ']+=' → logprob: -9.099249839782715
    5. ' ' → logprob: -11.724249839782715
    6. ' ' → logprob: -11.724249839782715
    7. ' +' → logprob: -11.974249839782715
    8. '++' → logprob: -12.224249839782715
    9. '+='' → logprob: -12.224249839782715
    10. '   ' → logprob: -12.724249839782715

Token 111: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -6.153795766294934e-06
    2. ' input' → logprob: -12.125005722045898
    3. 'int' → logprob: -14.250005722045898
    4. '           ' → logprob: -17.7500057220459
    5. '	input' → logprob: -19.1250057220459
    6. '   ' → logprob: -19.7500057220459
    7. '  ' → logprob: -20.0000057220459
    8. '<input' → logprob: -20.2500057220459
    9. '(input' → logprob: -20.6250057220459
    10. '=input' → logprob: -20.8750057220459

Token 112: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00016027313540689647
    2. 'list' → logprob: -8.750160217285156
    3. 'List' → logprob: -13.375160217285156
    4. '[' → logprob: -16.875160217285156
    5. '-list' → logprob: -17.250160217285156
    6. ' list' → logprob: -18.125160217285156
    7. '```' → logprob: -18.250160217285156
    8. '[_' → logprob: -18.375160217285156
    9. '$list' → logprob: -18.375160217285156
    10. '_LIST' → logprob: -19.000160217285156

Token 113: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.02324768900871277
    2. '_list' → logprob: -3.773247718811035
    3. '_b' → logprob: -13.648247718811035
    4. 'c' → logprob: -14.648247718811035
    5. 'List' → logprob: -15.648247718811035
    6. '```' → logprob: -15.773247718811035
    7. 'list' → logprob: -16.02324676513672
    8. '__' → logprob: -16.39824676513672
    9. '_a' → logprob: -17.02324676513672
    10. '   ' → logprob: -18.14824676513672

Token 114: '[input' (ID: 157156)
  Prédit: '[current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.06365086138248444
    2. '[input' → logprob: -3.3136508464813232
    3. '[index' → logprob: -3.8136508464813232
    4. '[' → logprob: -5.813651084899902
    5. 'current' → logprob: -8.563651084899902
    6. 'index' → logprob: -11.313651084899902
    7. ' [' → logprob: -11.688651084899902
    8. 'input' → logprob: -12.063651084899902
    9. '[
' → logprob: -12.438651084899902
    10. '[in' → logprob: -12.438651084899902

Token 115: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.002935983007773757
    2. '_count' → logprob: -6.002935886383057
    3. 'list' → logprob: -8.252936363220215
    4. '_a' → logprob: -8.627936363220215
    5. 'List' → logprob: -11.877936363220215
    6. 'count' → logprob: -12.127936363220215
    7. 'a' → logprob: -12.752936363220215
    8. '[' → logprob: -13.502936363220215
    9. '_array' → logprob: -14.752936363220215
    10. '[a' → logprob: -14.877936363220215

Token 116: '_a' (ID: 10852)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.9991889595985413
    2. '_a' → logprob: -0.9991889595985413
    3. 'index' → logprob: -1.7491888999938965
    4. '[index' → logprob: -2.8741888999938965
    5. '_count' → logprob: -4.4991888999938965
    6. '-' → logprob: -4.6241888999938965
    7. 'list' → logprob: -5.6241888999938965
    8. 'a' → logprob: -5.9991888999938965
    9. '_index' → logprob: -6.2491888999938965
    10. ' -' → logprob: -6.9991888999938965

Token 117: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -3.9292415749514475e-05
    2. '[current' → logprob: -10.625039100646973
    3. 'index' → logprob: -11.125039100646973
    4. '[' → logprob: -15.750039100646973
    5. 'current' → logprob: -17.37504005432129
    6. ' index' → logprob: -17.37504005432129
    7. '```' → logprob: -18.37504005432129
    8. '(index' → logprob: -18.62504005432129
    9. '_index' → logprob: -19.12504005432129
    10. '[
' → logprob: -19.50004005432129

Token 118: ' -' (ID: 533)
  Prédit: '[index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.0021869030315428972
    2. '[' → logprob: -7.0021867752075195
    3. '-' → logprob: -7.5021867752075195
    4. 'index' → logprob: -7.6271867752075195
    5. '   ' → logprob: -9.87718677520752
    6. ' -' → logprob: -9.87718677520752
    7. '[current' → logprob: -10.12718677520752
    8. ' ' → logprob: -10.62718677520752
    9. ' [' → logprob: -10.87718677520752
    10. ']' → logprob: -11.25218677520752

Token 119: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009973214473575354
    2. ' ' → logprob: -7.125997543334961
    3. '2' → logprob: -9.125997543334961
    4. '```' → logprob: -10.375997543334961
    5. '-' → logprob: -10.750997543334961
    6. '   ' → logprob: -11.125997543334961
    7. ']' → logprob: -12.000997543334961
    8. 'index' → logprob: -12.250997543334961
    9. ' -' → logprob: -13.625997543334961
    10. '  ' → logprob: -14.000997543334961

Token 120: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04826720431447029
    2. '-' → logprob: -3.173267126083374
    3. 'index' → logprob: -6.298267364501953
    4. ' ' → logprob: -6.548267364501953
    5. ']' → logprob: -6.798267364501953
    6. ' -' → logprob: -8.173267364501953
    7. '0' → logprob: -8.298267364501953
    8. '2' → logprob: -9.173267364501953
    9. '   ' → logprob: -9.173267364501953
    10. '```' → logprob: -9.923267364501953

Token 121: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007804053835570812
    2. ' ]' → logprob: -5.257803916931152
    3. ' -' → logprob: -6.507803916931152
    4. '-' → logprob: -6.882803916931152
    5. ' ' → logprob: -11.757803916931152
    6. '<|end|>' → logprob: -12.007803916931152
    7. ']]' → logprob: -12.132803916931152
    8. ')]' → logprob: -12.382803916931152
    9. '1' → logprob: -12.382803916931152
    10. ']-' → logprob: -12.632803916931152

Token 122: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002972472459077835
    2. '-' → logprob: -6.377972602844238
    3. ' ]' → logprob: -6.752972602844238
    4. ' -' → logprob: -9.377972602844238
    5. '[' → logprob: -12.752972602844238
    6. '])' → logprob: -12.877972602844238
    7. ']
' → logprob: -13.002972602844238
    8. ')' → logprob: -13.377972602844238
    9. ']-' → logprob: -13.502972602844238
    10. ' ' → logprob: -13.627972602844238

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. '```' → logprob: -16.125028610229492
    4. '１' → logprob: -16.875028610229492
    5. '۱' → logprob: -17.000028610229492
    6. '   ' → logprob: -17.375028610229492
    7. '<|end|>' → logprob: -18.312528610229492
    8. '  ' → logprob: -18.437528610229492
    9. '-' → logprob: -18.500028610229492
    10. ' ' → logprob: -18.750028610229492

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '۱' → logprob: -16.5000057220459
    4. '１' → logprob: -16.8125057220459
    5. '```' → logprob: -17.0000057220459
    6. '0' → logprob: -17.1875057220459
    7. '<|end|>' → logprob: -17.2500057220459
    8. '१' → logprob: -17.6875057220459
    9. '১' → logprob: -17.8750057220459
    10. '   ' → logprob: -18.3750057220459

Token 125: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001463299704482779
    2. '])' → logprob: -10.12514591217041
    3. ' ]' → logprob: -10.37514591217041
    4. ')]' → logprob: -10.50014591217041
    5. ')' → logprob: -10.62514591217041
    6. ']
' → logprob: -10.75014591217041
    7. '()]' → logprob: -15.00014591217041
    8. ']

' → logprob: -15.00014591217041
    9. '`]' → logprob: -15.25014591217041
    10. '']' → logprob: -15.62514591217041

Token 126: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001764551387168467
    2. ')' → logprob: -6.37676477432251
    3. ' print' → logprob: -9.751764297485352
    4. '
' → logprob: -13.501764297485352
    5. '```' → logprob: -13.751764297485352
    6. ')
' → logprob: -14.376764297485352
    7. '#' → logprob: -14.501764297485352
    8. '<|end|>' → logprob: -15.626764297485352
    9. '(print' → logprob: -16.00176429748535
    10. '#print' → logprob: -16.25176429748535

Token 127: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.061999399214982986
    2. '(result' → logprob: -2.8119993209838867
    3. ' (' → logprob: -11.686999320983887
    4. '('' → logprob: -12.186999320983887
    5. '("("' → logprob: -12.186999320983887
    6. '(
' → logprob: -12.811999320983887
    7. '(results' → logprob: -13.436999320983887
    8. '((' → logprob: -13.561999320983887
    9. '()' → logprob: -13.686999320983887
    10. '(`' → logprob: -13.936999320983887

Token 128: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.8444881536415778e-05
    2. '_s' → logprob: -10.750028610229492
    3. ')_' → logprob: -13.000028610229492
    4. ')' → logprob: -13.000028610229492
    5. '_' → logprob: -14.125028610229492
    6. ' _' → logprob: -14.875028610229492
    7. '_)' → logprob: -15.000028610229492
    8. '_result' → logprob: -15.625028610229492
    9. '_sym' → logprob: -15.875028610229492
    10. 'sum' → logprob: -16.250028610229492

Token 129: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.125
    3. ')`' → logprob: -16.875
    4. '))' → logprob: -17.25
    5. ')
' → logprob: -18.75
    6. '()' → logprob: -19.75
    7. '())' → logprob: -20.5
    8. '`)' → logprob: -20.5
    9. '')' → logprob: -20.625
    10. ')}' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 127
Tokens correctement prédits (1ère position, stricte): 54
Tokens correctement prédits (1ère position, avec adaptation): 56
Tokens correctement prédits (top 10): 109
Précision stricte (1ère position): 42.52%
Précision adaptée (1ère position): 44.09%
Précision (top 10): 85.83%
================================================================================
