================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def f(s):return int(s[0:2]),int(s[2:4])
a=input();L,R=f(a)
if (lambda x,y:x<=12>0<y<=12)(L,R):print('AMBIGUOUS')
else:
    if 0<L<=12:
        if not (0<R<=12):print("MMYY")
        else:print('AMBIGUOUS')
    elif 0<R<=12:
        print("YYMM")
    else:
        for i in[1]:print("NA")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' f' (ID: 285)
  → Token d'amorce (pas de prédiction)

Token 2: '(s' (ID: 1858)
  → Token d'amorce (pas de prédiction)

Token 3: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5020531415939331
    2. '):' → logprob: -1.002053141593933
    3. '[' → logprob: -3.8770532608032227
    4. '(' → logprob: -5.252053260803223
    5. ':' → logprob: -7.752053260803223
    6. 'u' → logprob: -8.002053260803223
    7. 'a' → logprob: -8.377053260803223
    8. ',' → logprob: -8.752053260803223
    9. '*' → logprob: -9.377053260803223
    10. '[]):' → logprob: -9.752053260803223

Token 4: 'return' (ID: 1034)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6077756285667419
    2. '\n' → logprob: -1.3577756881713867
    3. '\' → logprob: -1.9827756881713867
    4. '```' → logprob: -3.6077756881713867
    5. '    
' → logprob: -4.607775688171387
    6. '    ' → logprob: -5.732775688171387
    7. '' → logprob: -5.857775688171387
    8. '  
' → logprob: -6.107775688171387
    9. '\x' → logprob: -6.107775688171387
    10. '       ' → logprob: -6.482775688171387

Token 5: ' int' (ID: 677)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7079076170921326
    2. ' ' → logprob: -0.9579076170921326
    3. 's' → logprob: -2.2079076766967773
    4. ''' → logprob: -4.457907676696777
    5. '"' → logprob: -6.832907676696777
    6. ''s' → logprob: -7.957907676696777
    7. ' len' → logprob: -8.957907676696777
    8. ' ' → logprob: -9.082907676696777
    9. '_' → logprob: -9.457907676696777
    10. ' )' → logprob: -9.707907676696777

Token 6: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024074080865830183
    2. '(s' → logprob: -6.127407550811768
    3. 's' → logprob: -9.25240707397461
    4. '('' → logprob: -9.37740707397461
    5. ' (' → logprob: -11.25240707397461
    6. ''' → logprob: -12.00240707397461
    7. '```' → logprob: -13.00240707397461
    8. '[' → logprob: -13.25240707397461
    9. '(
' → logprob: -13.25240707397461
    10. ' ' → logprob: -13.25240707397461

Token 7: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03816932439804077
    2. '[' → logprob: -3.2881693840026855
    3. '))' → logprob: -9.288168907165527
    4. '')' → logprob: -11.538168907165527
    5. ' )' → logprob: -12.788168907165527
    6. ')))' → logprob: -12.788168907165527
    7. '[int' → logprob: -13.163168907165527
    8. '[])' → logprob: -13.163168907165527
    9. ']' → logprob: -13.413168907165527
    10. ')>' → logprob: -13.663168907165527

Token 8: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012842832366004586
    2. '1' → logprob: -6.751284122467041
    3. '-' → logprob: -9.6262845993042
    4. ' ' → logprob: -10.2512845993042
    5. ':' → logprob: -11.8762845993042
    6. '2' → logprob: -12.7512845993042
    7. ' -' → logprob: -14.2512845993042
    8. '   ' → logprob: -14.5012845993042
    9. ' :' → logprob: -14.7512845993042
    10. ')' → logprob: -15.3762845993042

Token 9: ':' (ID: 25)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.24310211837291718
    2. ']' → logprob: -1.9931020736694336
    3. '+' → logprob: -2.7431020736694336
    4. ':' → logprob: -4.618102073669434
    5. ']+' → logprob: -5.993102073669434
    6. ')' → logprob: -6.618102073669434
    7. ' ])' → logprob: -7.743102073669434
    8. '])+' → logprob: -8.243102073669434
    9. '])]' → logprob: -8.868102073669434
    10. '1' → logprob: -9.743102073669434

Token 10: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.635076105594635
    2. '1' → logprob: -0.760076105594635
    3. '3' → logprob: -6.38507604598999
    4. ' ' → logprob: -7.26007604598999
    5. '5' → logprob: -10.635076522827148
    6. '])' → logprob: -10.885076522827148
    7. '4' → logprob: -11.260076522827148
    8. '-' → logprob: -11.510076522827148
    9. 's' → logprob: -12.010076522827148
    10. ']' → logprob: -13.135076522827148

Token 11: ']),' (ID: 19560)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0014025020645931363
    2. ']' → logprob: -6.751402378082275
    3. ')' → logprob: -9.126402854919434
    4. ' ])' → logprob: -9.876402854919434
    5. '],' → logprob: -11.126402854919434
    6. ')])' → logprob: -11.376402854919434
    7. ':' → logprob: -11.501402854919434
    8. ']))' → logprob: -11.501402854919434
    9. '])]' → logprob: -12.501402854919434
    10. '])+' → logprob: -12.626402854919434

Token 12: 'int' (ID: 491)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8319780230522156
    2. 's' → logprob: -1.3319780826568604
    3. ')' → logprob: -1.9569780826568604
    4. '0' → logprob: -3.0819780826568604
    5. '(' → logprob: -3.4569780826568604
    6. '<|end|>' → logprob: -3.5819780826568604
    7. ''' → logprob: -4.331977844238281
    8. '[' → logprob: -4.706977844238281
    9. '.' → logprob: -5.081977844238281
    10. ' )' → logprob: -5.331977844238281

Token 13: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.38691991567611694
    2. '(' → logprob: -1.1369199752807617
    3. '('' → logprob: -11.136919975280762
    4. 's' → logprob: -11.261919975280762
    5. ' (' → logprob: -12.011919975280762
    6. '((' → logprob: -12.386919975280762
    7. '("("' → logprob: -13.261919975280762
    8. '(

' → logprob: -13.636919975280762
    9. '(
' → logprob: -13.761919975280762
    10. '(f' → logprob: -14.386919975280762

Token 14: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0683535037969705e-05
    2. '(' → logprob: -12.50001049041748
    3. ' [' → logprob: -13.37501049041748
    4. ''[' → logprob: -13.37501049041748
    5. ')[' → logprob: -13.62501049041748
    6. ')' → logprob: -13.87501049041748
    7. '1' → logprob: -14.75001049041748
    8. '[
' → logprob: -14.87501049041748
    9. ' ' → logprob: -15.75001049041748
    10. '"[' → logprob: -16.000011444091797

Token 15: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005048505961894989
    2. '3' → logprob: -6.1300482749938965
    3. '4' → logprob: -6.5050482749938965
    4. '0' → logprob: -6.7550482749938965
    5. ' ' → logprob: -9.130048751831055
    6. '1' → logprob: -10.130048751831055
    7. '5' → logprob: -10.630048751831055
    8. '-' → logprob: -11.255048751831055
    9. '6' → logprob: -11.755048751831055
    10. '   ' → logprob: -13.630048751831055

Token 16: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005863950937055051
    2. '4' → logprob: -8.00058650970459
    3. '0' → logprob: -9.37558650970459
    4. ' ' → logprob: -9.62558650970459
    5. ')' → logprob: -10.62558650970459
    6. '2' → logprob: -10.75058650970459
    7. ' :' → logprob: -11.12558650970459
    8. '3' → logprob: -11.37558650970459
    9. '-' → logprob: -12.00058650970459
    10. ',' → logprob: -12.50058650970459

Token 17: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.15441757265944e-05
    2. '5' → logprob: -11.125031471252441
    3. ' ' → logprob: -11.375031471252441
    4. '6' → logprob: -12.500031471252441
    5. '])' → logprob: -14.250031471252441
    6. '2' → logprob: -15.125031471252441
    7. '```' → logprob: -16.125032424926758
    8. '7' → logprob: -16.250032424926758
    9. '0' → logprob: -16.250032424926758
    10. ')' → logprob: -16.375032424926758

Token 18: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0002764710516203195
    2. ')' → logprob: -9.000276565551758
    3. ']' → logprob: -9.375276565551758
    4. ')])' → logprob: -10.750276565551758
    5. ''])' → logprob: -10.875276565551758
    6. ']),' → logprob: -12.125276565551758
    7. ' ])' → logprob: -12.125276565551758
    8. ']))' → logprob: -12.625276565551758
    9. '])]' → logprob: -12.750276565551758
    10. '"])' → logprob: -13.250276565551758

Token 19: 'a' (ID: 64)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7702770233154297
    2. '(' → logprob: -0.8952770233154297
    3. '<|end|>' → logprob: -3.2702770233154297
    4. ',' → logprob: -4.02027702331543
    5. ' ' → logprob: -4.02027702331543
    6. '\n' → logprob: -4.14527702331543
    7. '#' → logprob: -4.64527702331543
    8. ':' → logprob: -5.02027702331543
    9. '
' → logprob: -5.14527702331543
    10. '\' → logprob: -5.39527702331543

Token 20: '=input' (ID: 87911)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33719685673713684
    2. ',' → logprob: -2.8371968269348145
    3. '[' → logprob: -2.9621968269348145
    4. 'r' → logprob: -2.9621968269348145
    5. 'g' → logprob: -3.4621968269348145
    6. 'd' → logprob: -3.4621968269348145
    7. 'p' → logprob: -4.0871968269348145
    8. 's' → logprob: -4.8371968269348145
    9. '=' → logprob: -5.0871968269348145
    10. 'b' → logprob: -5.3371968269348145

Token 21: '();' (ID: 4177)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013286912580952048
    2. '('' → logprob: -7.251328468322754
    3. '("("' → logprob: -7.626328468322754
    4. '()' → logprob: -10.251328468322754
    5. '(
' → logprob: -10.876328468322754
    6. ''' → logprob: -11.126328468322754
    7. '("")' → logprob: -11.376328468322754
    8. '```' → logprob: -11.751328468322754
    9. ')' → logprob: -11.876328468322754
    10. '(

' → logprob: -12.001328468322754

Token 22: 'L' (ID: 43)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.1415000855922699
    2. 'b' → logprob: -2.2664999961853027
    3. 't' → logprob: -4.266499996185303
    4. 'a' → logprob: -4.891499996185303
    5. 'r' → logprob: -6.141499996185303
    6. 'f' → logprob: -6.766499996185303
    7. 'print' → logprob: -7.016499996185303
    8. ' x' → logprob: -7.266499996185303
    9. 'y' → logprob: -7.891499996185303
    10. 'c' → logprob: -8.141500473022461

Token 23: ',R' (ID: 48317)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001942322589457035
    2. '=input' → logprob: -7.626942157745361
    3. '=a' → logprob: -7.751942157745361
    4. '=len' → logprob: -8.12694263458252
    5. '=[]' → logprob: -8.37694263458252
    6. '=int' → logprob: -9.12694263458252
    7. ' =' → logprob: -9.12694263458252
    8. '=L' → logprob: -9.50194263458252
    9. '=en' → logprob: -9.62694263458252
    10. '=list' → logprob: -9.75194263458252

Token 24: '=f' (ID: 40464)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010013706050813198
    2. '=input' → logprob: -7.501001358032227
    3. ' =' → logprob: -8.001001358032227
    4. '=int' → logprob: -9.251001358032227
    5. '=a' → logprob: -12.251001358032227
    6. '=

' → logprob: -12.626001358032227
    7. '=f' → logprob: -12.876001358032227
    8. '=s' → logprob: -13.876001358032227
    9. '=user' → logprob: -14.126001358032227
    10. '=list' → logprob: -14.251001358032227

Token 25: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.7120533811976202e-05
    2. 'a' → logprob: -11.375017166137695
    3. '(s' → logprob: -12.625017166137695
    4. '(' → logprob: -13.375017166137695
    5. '(input' → logprob: -14.625017166137695
    6. '(str' → logprob: -15.500017166137695
    7. ' (' → logprob: -17.250017166137695
    8. ')a' → logprob: -17.250017166137695
    9. ')(' → logprob: -17.500017166137695
    10. '(x' → logprob: -17.625017166137695

Token 26: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.280175097752362e-05
    2. '))' → logprob: -10.000082969665527
    3. ');' → logprob: -11.250082969665527
    4. ')a' → logprob: -12.000082969665527
    5. '')' → logprob: -12.250082969665527
    6. '`)' → logprob: -12.375082969665527
    7. ' )' → logprob: -13.125082969665527
    8. '")' → logprob: -13.375082969665527
    9. ')`' → logprob: -13.375082969665527
    10. ')")' → logprob: -14.250082969665527

Token 27: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9417311549186707
    2. ' if' → logprob: -1.4417312145233154
    3. '<|end|>' → logprob: -2.0667312145233154
    4. '
' → logprob: -2.4417312145233154
    5. ' ' → logprob: -3.3167312145233154
    6. '+
' → logprob: -3.5667312145233154
    7. 'if' → logprob: -3.8167312145233154
    8. ')' → logprob: -4.441730976104736
    9. '*' → logprob: -4.441730976104736
    10. ';if' → logprob: -4.941730976104736

Token 28: ' (' (ID: 350)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.01597301848232746
    2. 'L' → logprob: -4.390973091125488
    3. ' ' → logprob: -6.140973091125488
    4. ' R' → logprob: -6.765973091125488
    5. ' a' → logprob: -9.515973091125488
    6. 'R' → logprob: -10.640973091125488
    7. ' ' → logprob: -10.890973091125488
    8. ' (' → logprob: -11.765973091125488
    9. ' not' → logprob: -11.765973091125488
    10. 'a' → logprob: -11.890973091125488

Token 29: 'lambda' (ID: 35280)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.5785190463066101
    2. ' L' → logprob: -0.8285190463066101
    3. ' R' → logprob: -6.828518867492676
    4. 'R' → logprob: -7.203518867492676
    5. ' ' → logprob: -7.953518867492676
    6. ' (' → logprob: -9.703518867492676
    7. '0' → logprob: -9.703518867492676
    8. 'a' → logprob: -10.203518867492676
    9. '(L' → logprob: -10.203518867492676
    10. '10' → logprob: -10.328518867492676

Token 30: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4538460969924927
    2. ' L' → logprob: -1.8288460969924927
    3. 'x' → logprob: -1.9538460969924927
    4. 'L' → logprob: -3.203845977783203
    5. ' s' → logprob: -4.828845977783203
    6. ' a' → logprob: -5.703845977783203
    7. 's' → logprob: -6.328845977783203
    8. ' R' → logprob: -6.453845977783203
    9. 'a' → logprob: -6.828845977783203
    10. ' lambda' → logprob: -7.078845977783203

Token 31: ',y' (ID: 16103)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2339726835489273
    2. ':x' → logprob: -1.7339726686477661
    3. ' :' → logprob: -3.6089727878570557
    4. ':L' → logprob: -5.858972549438477
    5. ',' → logprob: -7.608972549438477
    6. ' x' → logprob: -7.858972549438477
    7. ':R' → logprob: -8.358972549438477
    8. ',x' → logprob: -8.608972549438477
    9. ':int' → logprob: -8.858972549438477
    10. ':(' → logprob: -9.108972549438477

Token 32: ':x' (ID: 73587)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2850905954837799
    2. ':x' → logprob: -2.035090684890747
    3. ' :' → logprob: -2.160090684890747
    4. ':(' → logprob: -7.535090446472168
    5. ' :(' → logprob: -7.535090446472168
    6. ':y' → logprob: -8.035090446472168
    7. ':L' → logprob: -9.035090446472168
    8. ',' → logprob: -9.410090446472168
    9. ',x' → logprob: -9.785090446472168
    10. ':not' → logprob: -9.910090446472168

Token 33: '<=' (ID: 16672)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7250893712043762
    2. ' <' → logprob: -1.4750893115997314
    3. '<' → logprob: -2.2250893115997314
    4. '>' → logprob: -2.3500893115997314
    5. '==' → logprob: -3.7250893115997314
    6. ' ==' → logprob: -4.2250895500183105
    7. ' <=' → logprob: -4.6000895500183105
    8. ' >=' → logprob: -4.7250895500183105
    9. ' ' → logprob: -4.8500895500183105
    10. '+' → logprob: -5.4750895500183105

Token 34: '12' (ID: 899)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3487425744533539
    2. ' y' → logprob: -1.2237426042556763
    3. 'R' → logprob: -9.348742485046387
    4. 'x' → logprob: -9.473742485046387
    5. 'L' → logprob: -9.973742485046387
    6. ' R' → logprob: -10.598742485046387
    7. ' ' → logprob: -10.723742485046387
    8. ' L' → logprob: -10.723742485046387
    9. ' x' → logprob: -11.973742485046387
    10. '	y' → logprob: -13.036242485046387

Token 35: '>' (ID: 29)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.21123898029327393
    2. 'and' → logprob: -2.4612388610839844
    3. ')' → logprob: -2.7112388610839844
    4. '):' → logprob: -4.086238861083984
    5. ')(' → logprob: -4.336238861083984
    6. ' )' → logprob: -5.836238861083984
    7. ' ):' → logprob: -6.961238861083984
    8. ' ' → logprob: -7.336238861083984
    9. ' )(' → logprob: -7.336238861083984
    10. ':' → logprob: -7.461238861083984

Token 36: '0' (ID: 15)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2019701898097992
    2. 'and' → logprob: -2.451970100402832
    3. ' y' → logprob: -2.576970100402832
    4. 'y' → logprob: -4.451970100402832
    5. ' ' → logprob: -6.076970100402832
    6. ')' → logprob: -6.076970100402832
    7. ',y' → logprob: -7.076970100402832
    8. '*y' → logprob: -7.201970100402832
    9. '0' → logprob: -7.451970100402832
    10. '<|end|>' → logprob: -7.701970100402832

Token 37: '<' (ID: 27)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.07071078568696976
    2. 'and' → logprob: -2.9457108974456787
    3. ')' → logprob: -4.1957106590271
    4. ' ' → logprob: -8.570711135864258
    5. ' )' → logprob: -8.695711135864258
    6. 'x' → logprob: -9.570711135864258
    7. '<=' → logprob: -10.195711135864258
    8. '>' → logprob: -10.695711135864258
    9. '):' → logprob: -10.945711135864258
    10. 'y' → logprob: -11.195711135864258

Token 38: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.42244288325309753
    2. '=' → logprob: -1.79744291305542
    3. 'x' → logprob: -2.17244291305542
    4. ' y' → logprob: -3.17244291305542
    5. '=y' → logprob: -4.67244291305542
    6. '=x' → logprob: -5.67244291305542
    7. ' x' → logprob: -5.92244291305542
    8. '=L' → logprob: -6.17244291305542
    9. 'L' → logprob: -6.29744291305542
    10. 'R' → logprob: -6.67244291305542

Token 39: '<=' (ID: 16672)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.291902631521225
    2. '):' → logprob: -2.416902542114258
    3. 'and' → logprob: -2.541902542114258
    4. ')' → logprob: -2.666902542114258
    5. '<=' → logprob: -5.791902542114258
    6. ')(' → logprob: -5.791902542114258
    7. ':' → logprob: -6.416902542114258
    8. '<|end|>' → logprob: -6.541902542114258
    9. ')x' → logprob: -6.916902542114258
    10. ')<=' → logprob: -7.291902542114258

Token 40: '12' (ID: 899)
  Prédit: '31'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '31' → logprob: -0.017068861052393913
    2. '12' → logprob: -4.642068862915039
    3. ' ' → logprob: -5.892068862915039
    4. '23' → logprob: -6.142068862915039
    5. '59' → logprob: -7.392068862915039
    6. '3' → logprob: -7.392068862915039
    7. '24' → logprob: -7.767068862915039
    8. '1' → logprob: -8.517068862915039
    9. '99' → logprob: -9.079568862915039
    10. '0' → logprob: -9.704568862915039

Token 41: ')(' (ID: 4898)
  Prédit: ')('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.24416537582874298
    2. '):' → logprob: -1.6191654205322266
    3. ')' → logprob: -4.744165420532227
    4. ' ):' → logprob: -5.744165420532227
    5. ' )(' → logprob: -5.869165420532227
    6. '(' → logprob: -6.994165420532227
    7. ')((' → logprob: -7.494165420532227
    8. '):(' → logprob: -7.619165420532227
    9. ':' → logprob: -7.994165420532227
    10. ')(
' → logprob: -8.119165420532227

Token 42: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.011054190807044506
    2. ' L' → logprob: -4.511054039001465
    3. '(L' → logprob: -13.386054039001465
    4. ')L' → logprob: -13.636054039001465
    5. ',L' → logprob: -14.136054039001465
    6. ' ' → logprob: -14.261054039001465
    7. 'R' → logprob: -14.761054039001465
    8. '	L' → logprob: -14.761054039001465
    9. '>L' → logprob: -14.886054039001465
    10. ')' → logprob: -15.136054039001465

Token 43: ',R' (ID: 48317)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17342785000801086
    2. ',y' → logprob: -2.7984278202056885
    3. ' ,' → logprob: -3.0484278202056885
    4. ',R' → logprob: -3.1734278202056885
    5. ',L' → logprob: -5.548428058624268
    6. ')' → logprob: -5.923428058624268
    7. ' and' → logprob: -7.548428058624268
    8. ',r' → logprob: -7.548428058624268
    9. ',x' → logprob: -8.04842758178711
    10. ',n' → logprob: -8.79842758178711

Token 44: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20195099711418152
    2. '):' → logprob: -1.701951026916504
    3. '))' → logprob: -8.826951026916504
    4. ' )' → logprob: -8.826951026916504
    5. ' ):' → logprob: -9.076951026916504
    6. ')):' → logprob: -9.326951026916504
    7. ':' → logprob: -11.326951026916504
    8. ')))' → logprob: -11.826951026916504
    9. '):
' → logprob: -12.326951026916504
    10. ')==' → logprob: -12.951951026916504

Token 45: 'print' (ID: 1598)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.29477381706237793
    2. 'print' → logprob: -1.544773817062378
    3. ' pass' → logprob: -4.044774055480957
    4. '   ' → logprob: -4.419774055480957
    5. ' L' → logprob: -5.169774055480957
    6. ' a' → logprob: -6.044774055480957
    7. 'a' → logprob: -7.544774055480957
    8. '	print' → logprob: -7.544774055480957
    9. ' ' → logprob: -8.107274055480957
    10. 'L' → logprob: -8.482274055480957

Token 46: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11849472671747208
    2. '(L' → logprob: -2.868494749069214
    3. '('' → logprob: -3.493494749069214
    4. '("' → logprob: -4.118494510650635
    5. '(a' → logprob: -6.493494510650635
    6. 'a' → logprob: -6.743494510650635
    7. '()' → logprob: -6.993494510650635
    8. '(True' → logprob: -7.243494510650635
    9. ' (' → logprob: -7.618494510650635
    10. ''' → logprob: -7.618494510650635

Token 47: 'AMB' (ID: 89274)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9788942337036133
    2. 'MM' → logprob: -2.1038942337036133
    3. 'No' → logprob: -2.6038942337036133
    4. '12' → logprob: -2.9788942337036133
    5. 'Yes' → logprob: -2.9788942337036133
    6. 'Y' → logprob: -3.4163942337036133
    7. '月' → logprob: -3.4788942337036133
    8. 'AMB' → logprob: -3.4788942337036133
    9. 'B' → logprob: -3.6038942337036133
    10. 'AM' → logprob: -3.9163942337036133

Token 48: 'IG' (ID: 3205)
  Prédit: 'IG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IG' → logprob: -0.10001060366630554
    2. '')' → logprob: -3.100010633468628
    3. 'I' → logprob: -3.350010633468628
    4. 'iguous' → logprob: -5.475010395050049
    5. '')
' → logprob: -6.350010395050049
    6. '')[' → logprob: -6.350010395050049
    7. '```' → logprob: -6.600010395050049
    8. '

' → logprob: -7.100010395050049
    9. '')

' → logprob: -7.225010395050049
    10. 'ER' → logprob: -7.600010395050049

Token 49: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.0063920458778738976
    2. '')' → logprob: -5.131392002105713
    3. ''U' → logprob: -8.756392478942871
    4. ''' → logprob: -9.256392478942871
    5. '```' → logprob: -10.506392478942871
    6. '')

' → logprob: -10.506392478942871
    7. '''' → logprob: -10.631392478942871
    8. 'IOUS' → logprob: -10.756392478942871
    9. '')
' → logprob: -11.381392478942871
    10. 'UI' → logprob: -11.631392478942871

Token 50: 'OUS' (ID: 101154)
  Prédit: 'OUS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OUS' → logprob: -0.017750324681401253
    2. 'O' → logprob: -4.267750263214111
    3. 'OU' → logprob: -6.892750263214111
    4. 'U' → logprob: -6.892750263214111
    5. 'US' → logprob: -7.267750263214111
    6. '```' → logprob: -8.01775074005127
    7. 'OS' → logprob: -9.64275074005127
    8. '0' → logprob: -10.01775074005127
    9. '1' → logprob: -10.26775074005127
    10. 'ITY' → logprob: -10.39275074005127

Token 51: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.009950514882802963
    2. ')' → logprob: -4.634950637817383
    3. '')
' → logprob: -9.384950637817383
    4. '")' → logprob: -9.509950637817383
    5. '');' → logprob: -11.509950637817383
    6. ''' → logprob: -12.134950637817383
    7. '')
' → logprob: -12.134950637817383
    8. '')

' → logprob: -12.884950637817383
    9. '',' → logprob: -13.509950637817383
    10. '}')' → logprob: -13.634950637817383

Token 52: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3285376727581024
    2. 'elif' → logprob: -1.3285377025604248
    3. ' else' → logprob: -4.328537464141846
    4. ' elif' → logprob: -6.453537464141846
    5. 'el' → logprob: -8.828537940979004
    6. '<|end|>' → logprob: -8.828537940979004
    7. 'e' → logprob: -10.328537940979004
    8. 'elser' → logprob: -11.078537940979004
    9. '#elif' → logprob: -11.828537940979004
    10. 'elseif' → logprob: -11.953537940979004

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.015186899341642857
    2. ' :' → logprob: -4.390186786651611
    3. ':
' → logprob: -6.015186786651611
    4. ' :
' → logprob: -9.26518726348877
    5. ' print' → logprob: -9.39018726348877
    6. ' if' → logprob: -10.76518726348877
    7. 'print' → logprob: -11.01518726348877
    8. 'if' → logprob: -12.26518726348877
    9. ':

' → logprob: -12.64018726348877
    10. '   ' → logprob: -13.01518726348877

Token 54: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.0903322845697403
    2. 'print' → logprob: -2.465332269668579
    3. '   ' → logprob: -7.340332508087158
    4. ' if' → logprob: -7.715332508087158
    5. '	print' → logprob: -8.59033203125
    6. '<|end|>' → logprob: -9.84033203125
    7. ' L' → logprob: -11.21533203125
    8. '```' → logprob: -11.59033203125
    9. ' ' → logprob: -12.09033203125
    10. 'if' → logprob: -12.34033203125

Token 55: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3022531569004059
    2. ' print' → logprob: -1.5522531270980835
    3. ' if' → logprob: -3.177253246307373
    4. 'if' (adapté à ' if') → logprob: -4.927253246307373
    5. ' L' → logprob: -10.427252769470215
    6. ' pass' → logprob: -10.552252769470215
    7. 'pass' → logprob: -10.927252769470215
    8. '   ' → logprob: -11.052252769470215
    9. 'L' → logprob: -11.427252769470215
    10. '    ' → logprob: -11.927252769470215

Token 56: ' ' (ID: 220)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.260457307100296
    2. 'L' → logprob: -1.5104572772979736
    3. ' ' → logprob: -5.385457515716553
    4. '12' → logprob: -6.385457515716553
    5. ' R' → logprob: -7.385457515716553
    6. '0' → logprob: -7.885457515716553
    7. '1' → logprob: -8.135457038879395
    8. '(' → logprob: -8.260457038879395
    9. ' (' → logprob: -8.260457038879395
    10. 'R' → logprob: -9.135457038879395

Token 57: '0' (ID: 15)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.2696596086025238
    2. ' L' → logprob: -1.7696596384048462
    3. '1' → logprob: -3.7696595191955566
    4. ' ' → logprob: -3.8946595191955566
    5. '12' → logprob: -4.644659519195557
    6. '(' → logprob: -5.269659519195557
    7. '0' → logprob: -5.394659519195557
    8. ' (' → logprob: -6.519659519195557
    9. '(L' → logprob: -7.394659519195557
    10. 'R' → logprob: -7.769659519195557

Token 58: '<L' (ID: 87012)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.00556848244741559
    2. ' <' → logprob: -5.755568504333496
    3. '<=' → logprob: -6.130568504333496
    4. '<L' → logprob: -9.755568504333496
    5. '<R' → logprob: -9.755568504333496
    6. ' ' → logprob: -10.255568504333496
    7. ' <=' → logprob: -10.880568504333496
    8. '<int' → logprob: -11.255568504333496
    9. '<
' → logprob: -12.255568504333496
    10. '<|end|>' → logprob: -12.880568504333496

Token 59: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.22985300421714783
    2. ' and' → logprob: -2.2298529148101807
    3. '<' → logprob: -2.9798529148101807
    4. '<|end|>' → logprob: -3.8548529148101807
    5. 'and' → logprob: -4.35485315322876
    6. ' <=' → logprob: -4.97985315322876
    7. '&' → logprob: -5.85485315322876
    8. '==' → logprob: -7.85485315322876
    9. ' ' → logprob: -7.85485315322876
    10. '```' → logprob: -8.229852676391602

Token 60: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -1.3425219549390022e-05
    2. '31' → logprob: -12.37501335144043
    3. '23' → logprob: -12.37501335144043
    4. ' ' → logprob: -12.62501335144043
    5. '9' → logprob: -14.00001335144043
    6. '1' → logprob: -15.00001335144043
    7. '  ' → logprob: -15.50001335144043
    8. '0' → logprob: -16.37501335144043
    9. '   ' → logprob: -16.62501335144043
    10. '24' → logprob: -16.75001335144043

Token 61: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38587743043899536
    2. ':' → logprob: -1.3858773708343506
    3. 'and' → logprob: -2.7608773708343506
    4. ':
' → logprob: -6.13587760925293
    5. '<=' → logprob: -6.13587760925293
    6. '   ' → logprob: -7.63587760925293
    7. '>' → logprob: -7.63587760925293
    8. '<|end|>' → logprob: -7.88587760925293
    9. '>:' → logprob: -8.26087760925293
    10. ' <=' → logprob: -8.51087760925293

Token 62: '       ' (ID: 309)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.8072715997695923
    2. '       ' → logprob: -0.9322715997695923
    3. '   ' → logprob: -1.9322715997695923
    4. 'print' → logprob: -5.182271480560303
    5. '    ' → logprob: -5.307271480560303
    6. ' and' → logprob: -5.807271480560303
    7. ' or' → logprob: -7.682271480560303
    8. '	print' → logprob: -7.807271480560303
    9. ' ' → logprob: -8.307271957397461
    10. ',' → logprob: -9.057271957397461

Token 63: ' if' (ID: 538)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.579631507396698
    2. 'print' → logprob: -0.829631507396698
    3. '       ' → logprob: -5.954631328582764
    4. '   ' → logprob: -7.079631328582764
    5. '    ' → logprob: -8.829631805419922
    6. ' ' → logprob: -10.329631805419922
    7. '	print' → logprob: -10.579631805419922
    8. '           ' → logprob: -11.204631805419922
    9. ' if' → logprob: -11.704631805419922
    10. '```' → logprob: -12.329631805419922

Token 64: ' not' (ID: 625)
  Prédit: ' R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' R' → logprob: -0.2687550485134125
    2. 'R' → logprob: -1.6437550783157349
    3. ' L' → logprob: -4.018754959106445
    4. 'L' → logprob: -4.893754959106445
    5. ' ' → logprob: -5.143754959106445
    6. '12' → logprob: -5.393754959106445
    7. '0' → logprob: -5.518754959106445
    8. ' y' → logprob: -6.768754959106445
    9. ' s' → logprob: -8.018754959106445
    10. 's' → logprob: -8.143754959106445

Token 65: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8099650740623474
    2. ' ' → logprob: -0.8099650740623474
    3. '(' → logprob: -3.184965133666992
    4. ' (' → logprob: -3.809965133666992
    5. ' R' → logprob: -4.434965133666992
    6. '12' → logprob: -4.684965133666992
    7. ' L' → logprob: -4.809965133666992
    8. 'R' → logprob: -4.809965133666992
    9. 'L' → logprob: -5.684965133666992
    10. '1' → logprob: -6.809965133666992

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5226262211799622
    2. ' ' → logprob: -1.2726261615753174
    3. ' L' → logprob: -3.2726261615753174
    4. 'L' → logprob: -3.6476261615753174
    5. ' R' → logprob: -3.7726261615753174
    6. 'R' → logprob: -3.8976261615753174
    7. '12' → logprob: -4.2726263999938965
    8. '1' → logprob: -6.7726263999938965
    9. ' (' → logprob: -7.1476263999938965
    10. '(' → logprob: -7.1476263999938965

Token 67: '<R' (ID: 42311)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.24251270294189453
    2. '<R' → logprob: -1.7425127029418945
    3. '<|end|>' → logprob: -4.2425127029418945
    4. '<L' → logprob: -4.6175127029418945
    5. ' <' → logprob: -4.8675127029418945
    6. '>' → logprob: -6.1175127029418945
    7. ' ' → logprob: -6.3675127029418945
    8. '<D' → logprob: -7.6175127029418945
    9. '<I' → logprob: -7.9925127029418945
    10. '<LM' → logprob: -8.242512702941895

Token 68: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.004088966641575098
    2. '<|end|>' → logprob: -6.379088878631592
    3. ' <=' → logprob: -7.004088878631592
    4. 'and' → logprob: -7.629088878631592
    5. ' and' → logprob: -8.25408935546875
    6. '<' → logprob: -8.25408935546875
    7. '>' → logprob: -9.25408935546875
    8. ' ' → logprob: -9.37908935546875
    9. '<|end|>' → logprob: -10.00408935546875
    10. '```' → logprob: -10.25408935546875

Token 69: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.18299047648906708
    2. '31' → logprob: -1.8079904317855835
    3. ' ' → logprob: -5.807990550994873
    4. '23' → logprob: -8.932990074157715
    5. '13' → logprob: -10.807990074157715
    6. '  ' → logprob: -10.807990074157715
    7. '1' → logprob: -11.057990074157715
    8. '   ' → logprob: -11.182990074157715
    9. '3' → logprob: -11.932990074157715
    10. '59' → logprob: -12.307990074157715

Token 70: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3552681505680084
    2. '):
' → logprob: -1.230268120765686
    3. ':' → logprob: -5.8552680015563965
    4. ' ):' → logprob: -6.6052680015563965
    5. ')' → logprob: -6.9802680015563965
    6. ' ):
' → logprob: -7.1052680015563965
    7. '):

' → logprob: -8.105268478393555
    8. '   ' → logprob: -8.855268478393555
    9. '       ' → logprob: -8.855268478393555
    10. ' and' → logprob: -9.605268478393555

Token 71: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7393325567245483
    2. '           ' → logprob: -1.2393325567245483
    3. ' print' → logprob: -1.4893325567245483
    4. '       ' → logprob: -5.239332675933838
    5. '<|end|>' → logprob: -7.114332675933838
    6. '
' → logprob: -7.989332675933838
    7. '   ' → logprob: -8.23933219909668
    8. '```' → logprob: -8.86433219909668
    9. ' ' → logprob: -8.98933219909668
    10. '	print' → logprob: -9.61433219909668

Token 72: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.014217096380889416
    2. '(' → logprob: -4.389216899871826
    3. '("' → logprob: -6.514216899871826
    4. ''' → logprob: -9.639217376708984
    5. ' ('' → logprob: -9.639217376708984
    6. '(L' → logprob: -10.139217376708984
    7. '(R' → logprob: -11.764217376708984
    8. '(a' → logprob: -12.014217376708984
    9. ' (' → logprob: -12.139217376708984
    10. '("'' → logprob: -12.139217376708984

Token 73: 'MM' (ID: 12365)
  Prédit: 'AMB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AMB' → logprob: -0.12835559248924255
    2. 'MM' → logprob: -3.2533555030822754
    3. 'AM' → logprob: -3.6283555030822754
    4. 'INVALID' → logprob: -4.128355503082275
    5. 'P' → logprob: -5.128355503082275
    6. ''' → logprob: -5.128355503082275
    7. ' AM' → logprob: -5.753355503082275
    8. 'MONTH' → logprob: -5.878355503082275
    9. 'NA' → logprob: -6.003355503082275
    10. 'R' → logprob: -6.128355503082275

Token 74: 'YY' (ID: 17848)
  Prédit: 'YY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YY' → logprob: -0.09319540858268738
    2. 'YYYY' → logprob: -3.3431954383850098
    3. '")' → logprob: -3.4681954383850098
    4. 'DD' → logprob: -4.21819543838501
    5. 'Y' → logprob: -5.96819543838501
    6. '/DD' → logprob: -6.34319543838501
    7. '/YYYY' → logprob: -6.84319543838501
    8. '/' → logprob: -7.09319543838501
    9. '"' → logprob: -8.468194961547852
    10. '')' → logprob: -8.718194961547852

Token 75: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0479184128344059
    2. '")
' → logprob: -3.2979183197021484
    3. '')' → logprob: -5.047918319702148
    4. ''' → logprob: -6.422918319702148
    5. ''")
' → logprob: -7.922918319702148
    6. '"' → logprob: -8.297918319702148
    7. '");' → logprob: -8.297918319702148
    8. '")
' → logprob: -8.297918319702148
    9. '")

' → logprob: -8.547918319702148
    10. ')' → logprob: -8.922918319702148

Token 76: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13995027542114258
    2. 'else' → logprob: -2.3899502754211426
    3. ' else' → logprob: -3.3899502754211426
    4. '       ' → logprob: -5.389950275421143
    5. 'elif' → logprob: -8.139949798583984
    6. '	else' → logprob: -8.389949798583984
    7. '<|end|>' → logprob: -9.889949798583984
    8. ' elif' → logprob: -10.514949798583984
    9. '    ' → logprob: -11.014949798583984
    10. ' ' → logprob: -11.014949798583984

Token 77: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6280485391616821
    2. '   ' → logprob: -1.2530485391616821
    3. 'else' (adapté à ' else') → logprob: -2.0030484199523926
    4. ' else' → logprob: -3.1280484199523926
    5. 'elif' → logprob: -7.253048419952393
    6. ' ' → logprob: -8.25304889678955
    7. '<|end|>' → logprob: -8.75304889678955
    8. '	else' → logprob: -8.87804889678955
    9. '
' → logprob: -8.87804889678955
    10. '```' → logprob: -9.12804889678955

Token 78: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024630522821098566
    2. ':
' → logprob: -6.627462863922119
    3. 'print' → logprob: -7.252462863922119
    4. '           ' → logprob: -8.752463340759277
    5. '       ' → logprob: -9.002463340759277
    6. ' :' → logprob: -9.752463340759277
    7. ' print' → logprob: -10.377463340759277
    8. '   ' → logprob: -10.502463340759277
    9. ':

' → logprob: -11.502463340759277
    10. '```' → logprob: -12.502463340759277

Token 79: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10951857268810272
    2. ' print' → logprob: -2.359518527984619
    3. '       ' → logprob: -5.359518527984619
    4. '           ' → logprob: -5.484518527984619
    5. '   ' → logprob: -8.234519004821777
    6. '```' → logprob: -9.984519004821777
    7. ' ' → logprob: -10.109519004821777
    8. '	print' → logprob: -10.734519004821777
    9. '        ' → logprob: -11.734519004821777
    10. '         ' → logprob: -12.234519004821777

Token 80: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.21150173246860504
    2. '('' → logprob: -2.0865018367767334
    3. '(' → logprob: -2.7115018367767334
    4. ' ("' → logprob: -10.336502075195312
    5. '"' → logprob: -10.836502075195312
    6. '('"' → logprob: -11.961502075195312
    7. ''' → logprob: -12.336502075195312
    8. ' ('' → logprob: -13.336502075195312
    9. '("")' → logprob: -13.461502075195312
    10. '("("' → logprob: -13.461502075195312

Token 81: 'AMB' (ID: 89274)
  Prédit: 'YY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YY' → logprob: -0.7033142447471619
    2. ''' → logprob: -1.2033143043518066
    3. 'DD' → logprob: -2.2033143043518066
    4. '"' → logprob: -2.7033143043518066
    5. 'YYYY' → logprob: -4.328314304351807
    6. 'NA' → logprob: -5.578314304351807
    7. 'AMB' → logprob: -6.703314304351807
    8. 'INVALID' → logprob: -6.703314304351807
    9. ''D' → logprob: -7.078314304351807
    10. '''' → logprob: -7.203314304351807

Token 82: 'IG' (ID: 3205)
  Prédit: 'IG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IG' → logprob: -0.01042263489216566
    2. 'I' → logprob: -5.135422706604004
    3. 'GU' → logprob: -6.010422706604004
    4. 'IU' → logprob: -6.885422706604004
    5. 'iguous' → logprob: -7.260422706604004
    6. 'igu' → logprob: -9.947922706604004
    7. 'U' → logprob: -10.322922706604004
    8. '```' → logprob: -10.822922706604004
    9. 'UG' → logprob: -10.947922706604004
    10. 'gu' → logprob: -10.947922706604004

Token 83: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -5.2762428822461516e-05
    2. 'OUS' → logprob: -10.125052452087402
    3. 'IOUS' → logprob: -11.625052452087402
    4. 'O' → logprob: -13.125052452087402
    5. 'uous' → logprob: -14.125052452087402
    6. 'OU' → logprob: -14.625052452087402
    7. 'iguous' → logprob: -15.625052452087402
    8. 'GU' → logprob: -16.75005340576172
    9. '```' → logprob: -17.00005340576172
    10. 'UU' → logprob: -17.37505340576172

Token 84: 'OUS' (ID: 101154)
  Prédit: 'OUS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OUS' → logprob: -7.338466093642637e-05
    2. 'S' → logprob: -10.250073432922363
    3. 'O' → logprob: -10.625073432922363
    4. 'OS' → logprob: -11.875073432922363
    5. 'ous' → logprob: -12.625073432922363
    6. 'OU' → logprob: -13.625073432922363
    7. 'IOUS' → logprob: -15.000073432922363
    8. '```' → logprob: -15.375073432922363
    9. '"' → logprob: -15.625073432922363
    10. '0' → logprob: -15.750073432922363

Token 85: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.006840880028903484
    2. ')' → logprob: -5.006840705871582
    3. '')
' → logprob: -9.631840705871582
    4. '")' → logprob: -10.381840705871582
    5. ''' → logprob: -10.506840705871582
    6. ')
' → logprob: -15.131840705871582
    7. '')

' → logprob: -15.256840705871582
    8. '}')' → logprob: -15.756840705871582
    9. '"' → logprob: -15.881840705871582
    10. ')'' → logprob: -16.0068416595459

Token 86: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -1.12690007686615
    2. 'else' → logprob: -1.37690007686615
    3. '   ' → logprob: -1.50190007686615
    4. '<|end|>' → logprob: -2.2519001960754395
    5. ' else' → logprob: -2.6269001960754395
    6. ' elif' → logprob: -4.5019001960754395
    7. '    ' → logprob: -5.3769001960754395
    8. '    
' → logprob: -6.2519001960754395
    9. ' ' → logprob: -6.5019001960754395
    10. '       ' → logprob: -6.6269001960754395

Token 88: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12287931889295578
    2. '0' → logprob: -2.2478792667388916
    3. ' (' → logprob: -5.247879505157471
    4. ' not' → logprob: -6.497879505157471
    5. ' R' → logprob: -6.997879505157471
    6. ' L' → logprob: -7.247879505157471
    7. ' ' → logprob: -7.372879505157471
    8. '1' → logprob: -8.747879028320312
    9. '(' → logprob: -8.747879028320312
    10. '<|end|>' → logprob: -8.872879028320312

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16276143491268158
    2. ' ' → logprob: -1.9127614498138428
    3. '12' → logprob: -7.287761211395264
    4. '(' → logprob: -7.412761211395264
    5. ' R' → logprob: -8.037761688232422
    6. ' (' → logprob: -8.037761688232422
    7. 'R' → logprob: -8.037761688232422
    8. ' L' → logprob: -9.537761688232422
    9. ' not' → logprob: -9.787761688232422
    10. 'L' → logprob: -10.037761688232422

Token 90: '<R' (ID: 42311)
  Prédit: '<R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<R' → logprob: -0.13063061237335205
    2. '<' → logprob: -2.1306304931640625
    3. '<L' → logprob: -6.3806304931640625
    4. ' <' → logprob: -6.5056304931640625
    5. ' ' → logprob: -8.755630493164062
    6. '<M' → logprob: -8.755630493164062
    7. '<N' → logprob: -10.130630493164062
    8. '>' → logprob: -11.130630493164062
    9. ' R' → logprob: -11.255630493164062
    10. 'R' → logprob: -11.380630493164062

Token 91: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.00043925188947468996
    2. ' <=' → logprob: -8.750439643859863
    3. '<' → logprob: -9.000439643859863
    4. '12' → logprob: -9.375439643859863
    5. '<|end|>' → logprob: -10.500439643859863
    6. '```' → logprob: -11.250439643859863
    7. ']<=' → logprob: -12.125439643859863
    8. ')<=' → logprob: -12.375439643859863
    9. '==' → logprob: -12.750439643859863
    10. '≤' → logprob: -12.875439643859863

Token 92: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.00010032468708232045
    2. ' ' → logprob: -9.250100135803223
    3. '<|end|>' → logprob: -13.750100135803223
    4. '0' → logprob: -14.375100135803223
    5. '1' → logprob: -14.500100135803223
    6. '   ' → logprob: -14.750100135803223
    7. '  ' → logprob: -15.000100135803223
    8. '１２' → logprob: -15.000100135803223
    9. '۱۲' → logprob: -15.375100135803223
    10. '```' → logprob: -15.500100135803223

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.774276774493046e-05
    2. ':
' → logprob: -10.875038146972656
    3. ' :' → logprob: -11.000038146972656
    4. '):' → logprob: -13.875038146972656
    5. '>:' → logprob: -14.625038146972656
    6. '+:' → logprob: -15.250038146972656
    7. '   ' → logprob: -15.875038146972656
    8. '       ' → logprob: -17.000038146972656
    9. ':**' → logprob: -17.125038146972656
    10. ':return' → logprob: -17.250038146972656

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003402048023417592
    2. 'print' → logprob: -5.753402233123779
    3. ' print' → logprob: -9.253401756286621
    4. '   ' → logprob: -9.503401756286621
    5. '           ' → logprob: -11.253401756286621
    6. ':' → logprob: -11.628401756286621
    7. '<|end|>' → logprob: -11.753401756286621
    8. '     ' → logprob: -11.878401756286621
    9. '      ' → logprob: -12.003401756286621
    10. '```' → logprob: -12.378401756286621

Token 95: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.01483062095940113
    2. '       ' → logprob: -4.389830589294434
    3. ' print' → logprob: -6.264830589294434
    4. '   ' → logprob: -7.889830589294434
    5. '           ' → logprob: -10.639830589294434
    6. '```' → logprob: -12.014830589294434
    7. '	print' → logprob: -12.264830589294434
    8. '     ' → logprob: -13.139830589294434
    9. ' ' → logprob: -13.139830589294434
    10. '<|end|>' → logprob: -14.389830589294434

Token 96: '("' (ID: 568)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.31437912583351135
    2. '("' → logprob: -1.314379096031189
    3. '(' → logprob: -6.8143792152404785
    4. ' ("' → logprob: -11.56437873840332
    5. ' ('' → logprob: -12.43937873840332
    6. '('"' → logprob: -12.93937873840332
    7. ''' → logprob: -13.56437873840332
    8. '("'' → logprob: -14.68937873840332
    9. '("("' → logprob: -15.18937873840332
    10. '(('' → logprob: -15.56437873840332

Token 97: 'YY' (ID: 17848)
  Prédit: 'YY'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YY' → logprob: -0.003620147006586194
    2. '"' → logprob: -6.003620147705078
    3. 'YYYY' → logprob: -7.378620147705078
    4. ''' → logprob: -7.753620147705078
    5. ' YY' → logprob: -9.378620147705078
    6. 'Y' → logprob: -12.878620147705078
    7. 'YYY' → logprob: -13.128620147705078
    8. '   ' → logprob: -15.253620147705078
    9. ' ' → logprob: -15.628620147705078
    10. ' YYYY' → logprob: -16.003620147705078

Token 98: 'MM' (ID: 12365)
  Prédit: 'MM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MM' → logprob: -5.796184723294573e-06
    2. 'mm' → logprob: -12.125005722045898
    3. 'MMdd' → logprob: -16.3750057220459
    4. '-MM' → logprob: -16.6250057220459
    5. ')' → logprob: -16.6250057220459
    6. 'DD' → logprob: -17.2500057220459
    7. ' MM' → logprob: -17.7500057220459
    8. '_MM' → logprob: -17.8750057220459
    9. '>' → logprob: -18.0000057220459
    10. '```' → logprob: -18.1250057220459

Token 99: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0003048378275707364
    2. '")
' → logprob: -8.75030517578125
    3. ')")' → logprob: -9.12530517578125
    4. ')' → logprob: -10.25030517578125
    5. '')' → logprob: -14.37530517578125
    6. '()' → logprob: -14.75030517578125
    7. '"' → logprob: -15.00030517578125
    8. '")

' → logprob: -15.25030517578125
    9. ' ")' → logprob: -16.00030517578125
    10. '"))' → logprob: -16.62530517578125

Token 100: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.33777591586112976
    2. '<|end|>' → logprob: -1.4627759456634521
    3. ' else' → logprob: -2.962775945663452
    4. 'e' → logprob: -7.462775707244873
    5. '```' → logprob: -7.587775707244873
    6. 'elif' → logprob: -7.712775707244873
    7. '
' → logprob: -7.962775707244873
    8. ')' → logprob: -8.587776184082031
    9. ':' → logprob: -8.712776184082031
    10. '#' → logprob: -8.962776184082031

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009947025682777166
    2. ':
' → logprob: -7.125994682312012
    3. '   ' → logprob: -9.125994682312012
    4. ' :' → logprob: -9.750994682312012
    5. '       ' → logprob: -11.000994682312012
    6. '    ' → logprob: -13.250994682312012
    7. ' :
' → logprob: -13.375994682312012
    8. '  ' → logprob: -14.000994682312012
    9. ' print' → logprob: -14.375994682312012
    10. '      ' → logprob: -15.375994682312012

Token 103: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7217710018157959
    2. '   ' → logprob: -1.346771001815796
    3. ' print' → logprob: -1.596771001815796
    4. '       ' → logprob: -2.971771001815796
    5. ' pass' → logprob: -9.346771240234375
    6. '```' → logprob: -9.721771240234375
    7. '    ' → logprob: -10.096771240234375
    8. 'pass' → logprob: -10.096771240234375
    9. '	print' → logprob: -10.971771240234375
    10. ' ' → logprob: -12.721771240234375

Token 104: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005293646361678839
    2. ' print' → logprob: -5.255293846130371
    3. '   ' → logprob: -10.130293846130371
    4. 'pass' → logprob: -11.880293846130371
    5. 'raise' → logprob: -12.130293846130371
    6. '```' → logprob: -12.505293846130371
    7. '       ' → logprob: -13.880293846130371
    8. ' pass' → logprob: -14.130293846130371
    9. '	print' → logprob: -14.880293846130371
    10. '    ' → logprob: -15.005293846130371

Token 105: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.23451752960681915
    2. '_' → logprob: -2.4845175743103027
    3. 'i' → logprob: -2.4845175743103027
    4. ' _' → logprob: -3.2345175743103027
    5. ' x' → logprob: -6.609517574310303
    6. 'x' → logprob: -7.609517574310303
    7. ' ' → logprob: -7.734517574310303
    8. '_i' → logprob: -8.984517097473145
    9. ' s' → logprob: -9.109517097473145
    10. ' t' → logprob: -10.109517097473145

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.13855750858783722
    2. 'in' → logprob: -2.7635574340820312
    3. ' ' → logprob: -3.3885574340820312
    4. 'n' → logprob: -4.138557434082031
    5. ' i' → logprob: -5.263557434082031
    6. ' n' → logprob: -5.638557434082031
    7. '_' → logprob: -5.638557434082031
    8. '  ' → logprob: -6.263557434082031
    9. ' _' → logprob: -7.888557434082031
    10. 'range' → logprob: -8.013557434082031

Token 107: '[' (ID: 58)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.43246370553970337
    2. ' range' → logprob: -1.0574636459350586
    3. '[' → logprob: -6.807463645935059
    4. '0' → logprob: -7.057463645935059
    5. ''' → logprob: -7.557463645935059
    6. ' ' → logprob: -8.182463645935059
    7. '['' → logprob: -8.682463645935059
    8. '[]' → logprob: -8.932463645935059
    9. '"' → logprob: -9.057463645935059
    10. ' [' → logprob: -9.432463645935059

Token 108: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7659003138542175
    2. 'L' → logprob: -1.5159003734588623
    3. '1' → logprob: -2.0159003734588623
    4. ' L' → logprob: -3.3909003734588623
    5. ' ' → logprob: -3.3909003734588623
    6. 'a' → logprob: -3.8909003734588623
    7. 'range' → logprob: -4.015900135040283
    8. ''' → logprob: -4.265900135040283
    9. '"L' → logprob: -4.640900135040283
    10. '(' → logprob: -4.765900135040283

Token 109: ']:' (ID: 12433)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04216787964105606
    2. ' ,' → logprob: -3.542167901992798
    3. '2' → logprob: -4.917167663574219
    4. ' ' → logprob: -6.917167663574219
    5. ',len' → logprob: -7.167167663574219
    6. '0' → logprob: -7.417167663574219
    7. '3' → logprob: -7.417167663574219
    8. '..' → logprob: -7.542167663574219
    9. '6' → logprob: -8.417167663574219
    10. '7' → logprob: -8.417167663574219

Token 110: 'print' (ID: 1598)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7456696629524231
    2. 'print' → logprob: -1.4956696033477783
    3. ' raise' → logprob: -1.9956696033477783
    4. '   ' → logprob: -2.1206696033477783
    5. 'raise' → logprob: -3.7456696033477783
    6. '       ' → logprob: -4.495669841766357
    7. ' pass' → logprob: -5.370669841766357
    8. '    ' → logprob: -5.870669841766357
    9. ' break' → logprob: -6.995669841766357
    10. '
' → logprob: -7.745669841766357

Token 111: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.37376517057418823
    2. '(' → logprob: -1.748765230178833
    3. '('' → logprob: -1.998765230178833
    4. '()' → logprob: -7.373764991760254
    5. '(-' → logprob: -7.498764991760254
    6. '("")' → logprob: -7.498764991760254
    7. '('"' → logprob: -8.873764991760254
    8. '(None' → logprob: -8.998764991760254
    9. '("'' → logprob: -8.998764991760254
    10. '(False' → logprob: -9.248764991760254

Token 112: 'NA' (ID: 9555)
  Prédit: 'INVALID'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INVALID' → logprob: -0.5015377402305603
    2. 'I' → logprob: -1.876537799835205
    3. 'N' → logprob: -2.376537799835205
    4. 'Invalid' → logprob: -3.001537799835205
    5. 'NA' → logprob: -3.126537799835205
    6. '"' → logprob: -3.626537799835205
    7. ' INVALID' → logprob: -5.251537799835205
    8. 'INVAL' → logprob: -5.251537799835205
    9. ''' → logprob: -6.001537799835205
    10. 'invalid' → logprob: -6.126537799835205

Token 113: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.003229875583201647
    2. ')")' → logprob: -6.128230094909668
    3. ')' → logprob: -6.878230094909668
    4. '")
' → logprob: -12.003230094909668
    5. '"))' → logprob: -12.378230094909668
    6. '"' → logprob: -13.878230094909668
    7. '')' → logprob: -13.878230094909668
    8. '");' → logprob: -15.503230094909668
    9. ' ")' → logprob: -15.503230094909668
    10. '")}' → logprob: -15.503230094909668


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 111
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 44
Tokens correctement prédits (top 10): 89
Précision stricte (1ère position): 36.94%
Précision adaptée (1ère position): 39.64%
Précision (top 10): 80.18%
================================================================================
