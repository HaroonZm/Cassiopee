================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:29:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce

get_numz = lambda: list(map(int, input().split()))
firstNum, secondNum = get_numz()

Alpha, Beta = 0, 0

junk = [Alpha := Alpha + firstNum * (10 ** ind) for ind in range(secondNum)]  # <--- funky assignment in comprehension
junk2 = [Beta := Beta + secondNum * (10 ** idx) for idx in range(firstNum)]

def weird_cmp(x, y, xx, yy):
    return {True: xx, False: {True: yy, False: min(xx,yy)}[x == y]}[x < y]


result = weird_cmp(firstNum, secondNum, Alpha, Beta)

print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.6389057636260986
    2. 'partial' → logprob: -0.8889057636260986
    3. 'reduce' → logprob: -3.5139057636260986
    4. ' wraps' → logprob: -3.7639057636260986
    5. 'l' → logprob: -5.1389055252075195
    6. ' partial' → logprob: -6.6389055252075195
    7. 'cached' → logprob: -8.38890552520752
    8. 'cache' → logprob: -8.51390552520752
    9. ' l' → logprob: -8.63890552520752
    10. 'cmp' → logprob: -9.01390552520752

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010288605466485023
    2. '(lambda' → logprob: -4.760288715362549
    3. ' (' → logprob: -7.385288715362549
    4. ',' → logprob: -7.885288715362549
    5. 'def' → logprob: -8.13528823852539
    6. '.' → logprob: -8.76028823852539
    7. '```' → logprob: -10.13528823852539
    8. '(
' → logprob: -10.51028823852539
    9. 'lambda' → logprob: -10.63528823852539
    10. 'a' → logprob: -10.76028823852539

Token 5: 'get' (ID: 522)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025988943874835968
    2. 'def' → logprob: -4.025989055633545
    3. ',' → logprob: -6.150989055633545
    4. '\' → logprob: -6.525989055633545
    5. '```' → logprob: -6.525989055633545
    6. '(lambda' → logprob: -7.025989055633545
    7. '\(' → logprob: -8.025988578796387
    8. '(
' → logprob: -8.150988578796387
    9. '.' → logprob: -8.400988578796387
    10. ' ' → logprob: -8.525988578796387

Token 6: '_num' (ID: 9834)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18577972054481506
    2. 'attr' → logprob: -1.8107796907424927
    3. '_attr' → logprob: -5.810779571533203
    4. '_item' → logprob: -6.935779571533203
    5. '_user' → logprob: -7.185779571533203
    6. '_sum' → logprob: -7.685779571533203
    7. 'ter' → logprob: -8.935779571533203
    8. '_total' → logprob: -9.185779571533203
    9. '_filter' → logprob: -9.560779571533203
    10. '_attribute' → logprob: -9.685779571533203

Token 7: 'z' (ID: 89)
  Prédit: 'ber'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ber' → logprob: -0.003215261036530137
    2. '_' → logprob: -5.878215312957764
    3. '_digits' → logprob: -8.253214836120605
    4. '_bits' → logprob: -9.878214836120605
    5. '(' → logprob: -11.503214836120605
    6. 'bers' → logprob: -11.753214836120605
    7. ' ber' → logprob: -11.878214836120605
    8. '_items' → logprob: -12.003214836120605
    9. '_value' → logprob: -12.003214836120605
    10. '(_' → logprob: -12.128214836120605

Token 8: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1225772276520729
    2. 's' → logprob: -2.62257719039917
    3. 'rs' → logprob: -3.99757719039917
    4. '(' → logprob: -4.12257719039917
    5. 'ra' → logprob: -5.62257719039917
    6. '(r' → logprob: -7.24757719039917
    7. 'ration' → logprob: -7.49757719039917
    8. '()' → logprob: -7.74757719039917
    9. '```' → logprob: -7.74757719039917
    10. 'ro' → logprob: -8.247577667236328

Token 9: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.03623558580875397
    2. 'lambda' → logprob: -3.6612355709075928
    3. ' reduce' → logprob: -4.786235809326172
    4. '(lambda' → logprob: -7.661235809326172
    5. 'reduce' → logprob: -7.661235809326172
    6. ' list' → logprob: -7.911235809326172
    7. ' map' → logprob: -9.786235809326172
    8. ' sum' → logprob: -10.286235809326172
    9. ' filter' → logprob: -10.286235809326172
    10. 'list' → logprob: -10.536235809326172

Token 10: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.02151985466480255
    2. ' lst' → logprob: -4.771519660949707
    3. ' numbers' → logprob: -5.271519660949707
    4. ' s' → logprob: -5.521519660949707
    5. ' n' → logprob: -6.396519660949707
    6. 'x' → logprob: -7.271519660949707
    7. ' nums' → logprob: -7.771519660949707
    8. ' ' → logprob: -8.271519660949707
    9. ' a' → logprob: -8.771519660949707
    10. ' f' → logprob: -9.521519660949707

Token 11: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.9184381365776062
    2. ' int' → logprob: -2.043438196182251
    3. 'list' → logprob: -2.043438196182251
    4. ' input' → logprob: -2.293438196182251
    5. 'int' → logprob: -2.418438196182251
    6. 'input' → logprob: -2.543438196182251
    7. ' map' → logprob: -3.668438196182251
    8. '[int' → logprob: -4.293437957763672
    9. 'map' → logprob: -4.668437957763672
    10. ' [' → logprob: -4.668437957763672

Token 12: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6121495962142944
    2. '(filter' → logprob: -1.6121495962142944
    3. '(map' → logprob: -2.362149715423584
    4. '(int' → logprob: -2.362149715423584
    5. '(lambda' → logprob: -3.487149715423584
    6. '(range' → logprob: -3.487149715423584
    7. '[int' → logprob: -5.237149715423584
    8. '(eval' → logprob: -7.112149715423584
    9. '(str' → logprob: -7.987149715423584
    10. '(zip' → logprob: -8.487149238586426

Token 13: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023196788504719734
    2. '(lambda' → logprob: -4.148196697235107
    3. '(' → logprob: -5.148196697235107
    4. '(str' → logprob: -7.148196697235107
    5. 'int' → logprob: -8.148197174072266
    6. '<int' → logprob: -9.023197174072266
    7. '(
' → logprob: -11.023197174072266
    8. '[int' → logprob: -11.023197174072266
    9. '(eval' → logprob: -11.023197174072266
    10. '=int' → logprob: -11.398197174072266

Token 14: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9779209494590759
    2. '(input' → logprob: -0.9779209494590759
    3. '<|end|>' → logprob: -1.8529210090637207
    4. ')' → logprob: -3.3529210090637207
    5. '(token' → logprob: -4.852921009063721
    6. '))' → logprob: -4.852921009063721
    7. '<|end|>' → logprob: -5.352921009063721
    8. '(user' → logprob: -5.352921009063721
    9. 'input' → logprob: -5.477921009063721
    10. '```' → logprob: -5.477921009063721

Token 15: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014029165729880333
    2. ' input' → logprob: -4.514029026031494
    3. '(input' → logprob: -5.889029026031494
    4. ',input' → logprob: -8.889029502868652
    5. ')' → logprob: -10.764029502868652
    6. '))' → logprob: -11.639029502868652
    7. '=input' → logprob: -11.764029502868652
    8. '(' → logprob: -12.264029502868652
    9. '<input' → logprob: -12.389029502868652
    10. '```' → logprob: -12.514029502868652

Token 16: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07454363256692886
    2. '('' → logprob: -3.8245437145233154
    3. '(()' → logprob: -3.8245437145233154
    4. '()' → logprob: -4.824543476104736
    5. '()))' → logprob: -5.074543476104736
    6. '(""))' → logprob: -5.324543476104736
    7. '("("' → logprob: -5.449543476104736
    8. '()));' → logprob: -7.074543476104736
    9. '())' → logprob: -7.199543476104736
    10. '())))' → logprob: -7.699543476104736

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007157695363275707
    2. 'strip' → logprob: -7.250715732574463
    3. 'rstrip' → logprob: -12.250716209411621
    4. ' split' → logprob: -14.500716209411621
    5. '(split' → logprob: -15.125716209411621
    6. 'read' → logprob: -15.500716209411621
    7. 'spl' → logprob: -17.000715255737305
    8. ')' → logprob: -17.125715255737305
    9. '.split' → logprob: -17.250715255737305
    10. '_split' → logprob: -18.875715255737305

Token 18: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6463098526000977
    2. ')))' → logprob: -1.2713098526000977
    3. '())' → logprob: -2.5213098526000977
    4. '))' → logprob: -3.0213098526000977
    5. '()))' → logprob: -3.1463098526000977
    6. '())))' → logprob: -4.021309852600098
    7. '()' → logprob: -5.521309852600098
    8. '(' → logprob: -6.646309852600098
    9. '))))' → logprob: -10.271309852600098
    10. '')))' → logprob: -11.271309852600098

Token 19: 'first' (ID: 7743)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.7535613775253296
    2. 'def' → logprob: -1.8785613775253296
    3. 'n' → logprob: -2.378561496734619
    4. 'a' → logprob: -2.628561496734619
    5. 'x' → logprob: -2.628561496734619
    6. 'num' → logprob: -2.753561496734619
    7. 'for' → logprob: -2.878561496734619
    8. '(' → logprob: -2.878561496734619
    9. '(n' → logprob: -3.003561496734619
    10. 'result' → logprob: -3.253561496734619

Token 20: 'Num' (ID: 5702)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.718237578868866
    2. '(' → logprob: -0.843237578868866
    3. '_name' → logprob: -3.0932376384735107
    4. '_num' → logprob: -5.093237400054932
    5. 'space' → logprob: -5.093237400054932
    6. 'name' → logprob: -5.218237400054932
    7. '_space' → logprob: -5.343237400054932
    8. '()' → logprob: -5.843237400054932
    9. ')' → logprob: -6.343237400054932
    10. '_word' → logprob: -6.718237400054932

Token 21: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14940574765205383
    2. '(' → logprob: -2.6494057178497314
    3. '=' → logprob: -3.1494057178497314
    4. ' =' → logprob: -4.5244059562683105
    5. '_' → logprob: -5.0244059562683105
    6. '()' → logprob: -6.0244059562683105
    7. ',' → logprob: -6.1494059562683105
    8. 's' → logprob: -6.5244059562683105
    9. '[' → logprob: -7.0244059562683105
    10. ' )' → logprob: -8.524405479431152

Token 22: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.5232284665107727
    2. 'second' → logprob: -0.8982284665107727
    3. ' ' → logprob: -10.273228645324707
    4. '	second' → logprob: -11.273228645324707
    5. ' rest' → logprob: -12.148228645324707
    6. ' sec' → logprob: -12.273228645324707
    7. 'first' → logprob: -12.398228645324707
    8. ' last' → logprob: -12.398228645324707
    9. '*' → logprob: -12.523228645324707
    10. ' secon' → logprob: -12.523228645324707

Token 23: 'Num' (ID: 5702)
  Prédit: 'Num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -0.0035991177428513765
    2. ' =' → logprob: -6.128599166870117
    3. '=' → logprob: -7.128599166870117
    4. '_num' → logprob: -8.753599166870117
    5. '_Num' → logprob: -9.378599166870117
    6. '_' → logprob: -9.503599166870117
    7. 'Nums' → logprob: -9.503599166870117
    8. ' ' → logprob: -10.128599166870117
    9. ',' → logprob: -10.378599166870117
    10. 'Number' → logprob: -10.503599166870117

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07169982045888901
    2. '=' → logprob: -2.696699857711792
    3. ',' → logprob: -6.696699619293213
    4. ' ' → logprob: -7.946699619293213
    5. ')' → logprob: -9.696700096130371
    6. ' ,' → logprob: -10.321700096130371
    7. '  ' → logprob: -10.446700096130371
    8. '<|end|>' → logprob: -10.946700096130371
    9. '_' → logprob: -11.321700096130371
    10. '[' → logprob: -11.946700096130371

Token 25: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.25200462341308594
    2. ' get' → logprob: -1.502004623413086
    3. 'map' → logprob: -10.252004623413086
    4. ' map' → logprob: -10.627004623413086
    5. '(get' → logprob: -11.752004623413086
    6. '[get' → logprob: -12.627004623413086
    7. 'input' → logprob: -14.002004623413086
    8. '_get' → logprob: -14.252004623413086
    9. ' input' → logprob: -14.502004623413086
    10. '0' → logprob: -14.752004623413086

Token 26: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -1.9266199160483666e-05
    2. '_' → logprob: -11.375019073486328
    3. '_nums' → logprob: -12.625019073486328
    4. 'num' → logprob: -13.625019073486328
    5. '_NUM' → logprob: -14.375019073486328
    6. 'Num' → logprob: -14.375019073486328
    7. '_n' → logprob: -14.500019073486328
    8. ' _' → logprob: -14.625019073486328
    9. 'first' → logprob: -15.000019073486328
    10. '_Num' → logprob: -15.000019073486328

Token 27: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00047821682528592646
    2. 's' → logprob: -7.750478267669678
    3. 'zs' → logprob: -10.50047779083252
    4. '(' → logprob: -12.62547779083252
    5. '```' → logprob: -12.62547779083252
    6. '()' → logprob: -13.00047779083252
    7. '(z' → logprob: -13.62547779083252
    8. 'з' → logprob: -13.75047779083252
    9. 'sz' → logprob: -14.00047779083252
    10. 'r' → logprob: -14.12547779083252

Token 28: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002991160727106035
    2. '(' → logprob: -9.000299453735352
    3. '(),' → logprob: -9.125299453735352
    4. ' ()' → logprob: -10.375299453735352
    5. '[]' → logprob: -11.625299453735352
    6. '();' → logprob: -12.125299453735352
    7. ',' → logprob: -12.250299453735352
    8. '()
' → logprob: -12.500299453735352
    9. '[:]' → logprob: -12.750299453735352
    10. '()[' → logprob: -12.875299453735352

Token 29: 'Alpha' (ID: 26549)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6219967007637024
    2. 'if' → logprob: -1.8719966411590576
    3. '+
' → logprob: -1.8719966411590576
    4. '+' → logprob: -2.7469966411590576
    5. 'print' → logprob: -3.9969966411590576
    6. 'def' → logprob: -4.496996879577637
    7. 'sum' → logprob: -4.621996879577637
    8. 'while' → logprob: -4.746996879577637
    9. '
' → logprob: -5.246996879577637
    10. 'for' → logprob: -5.371996879577637

Token 30: ',' (ID: 11)
  Prédit: 'bet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bet' → logprob: -0.13459886610507965
    2. 'Bet' → logprob: -2.259598970413208
    3. 'Beta' → logprob: -5.009598731994629
    4. ' =' → logprob: -5.509598731994629
    5. 'beta' → logprob: -5.759598731994629
    6. ' bet' → logprob: -6.509598731994629
    7. 'b' → logprob: -7.009598731994629
    8. '_beta' → logprob: -7.009598731994629
    9. '_' → logprob: -7.509598731994629
    10. '_num' → logprob: -8.009598731994629

Token 31: ' Beta' (ID: 55085)
  Prédit: 'Beta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Beta' → logprob: -0.42853328585624695
    2. ' Beta' → logprob: -1.1785333156585693
    3. 'Bravo' → logprob: -4.67853307723999
    4. 'beta' → logprob: -4.80353307723999
    5. ' beta' → logprob: -5.49103307723999
    6. 'Bet' → logprob: -5.55353307723999
    7. ' Bravo' → logprob: -6.24103307723999
    8. 'Omega' → logprob: -6.86603307723999
    9. ' Bet' → logprob: -7.11603307723999
    10. ' ' → logprob: -7.11603307723999

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038385018706321716
    2. '=' → logprob: -3.2883849143981934
    3. ',' → logprob: -8.038385391235352
    4. ' ' → logprob: -11.788385391235352
    5. ' ,' → logprob: -12.038385391235352
    6. ')' → logprob: -13.288385391235352
    7. '[' → logprob: -13.538385391235352
    8. '<|end|>' → logprob: -13.913385391235352
    9. '_' → logprob: -14.663385391235352
    10. '  ' → logprob: -15.038385391235352

Token 33: ' ' (ID: 220)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.13760989904403687
    2. ' first' → logprob: -3.3876099586486816
    3. '[first' → logprob: -3.7626099586486816
    4. 'div' → logprob: -4.512609958648682
    5. '0' → logprob: -4.512609958648682
    6. 'get' → logprob: -4.637609958648682
    7. 'map' → logprob: -4.762609958648682
    8. 'sorted' → logprob: -4.887609958648682
    9. 'reduce' → logprob: -5.137609958648682
    10. ' map' → logprob: -6.012609958648682

Token 34: '0' (ID: 15)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.15695996582508087
    2. '[first' → logprob: -3.4069600105285645
    3. 'get' → logprob: -3.7819600105285645
    4. 'sorted' → logprob: -3.9069600105285645
    5. 'div' → logprob: -4.1569600105285645
    6. 'map' → logprob: -4.2819600105285645
    7. 'second' → logprob: -4.7819600105285645
    8. 'reduce' → logprob: -5.0319600105285645
    9. ' first' → logprob: -5.5319600105285645
    10. '0' → logprob: -5.5319600105285645

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010142049752175808
    2. ' ,' → logprob: -5.510141849517822
    3. '0' → logprob: -5.760141849517822
    4. '<|end|>' → logprob: -6.510141849517822
    5. ',
' → logprob: -8.13514232635498
    6. ' ' → logprob: -8.26014232635498
    7. 'x' → logprob: -8.63514232635498
    8. '<|end|>' → logprob: -8.88514232635498
    9. '1' → logprob: -9.01014232635498
    10. '2' → logprob: -9.88514232635498

Token 36: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15573722124099731
    2. '1' → logprob: -2.6557371616363525
    3. ' ' → logprob: -2.7807371616363525
    4. 'second' → logprob: -5.280737400054932
    5. ' second' → logprob: -6.030737400054932
    6. 'first' → logprob: -6.530737400054932
    7. ' first' → logprob: -6.780737400054932
    8. '2' → logprob: -7.405737400054932
    9. '100' → logprob: -8.155736923217773
    10. '255' → logprob: -8.780736923217773

Token 37: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21864350140094757
    2. '1' → logprob: -2.0936434268951416
    3. ' ' → logprob: -2.8436434268951416
    4. 'second' → logprob: -4.718643665313721
    5. 'first' → logprob: -6.218643665313721
    6. ' second' → logprob: -6.218643665313721
    7. ' first' → logprob: -7.093643665313721
    8. '255' → logprob: -8.093643188476562
    9. '2' → logprob: -8.468643188476562
    10. '-' → logprob: -8.968643188476562

Token 38: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5139595866203308
    2. 'for' → logprob: -1.3889596462249756
    3. ' for' → logprob: -3.0139596462249756
    4. '<|end|>' → logprob: -3.3889596462249756
    5. ':' → logprob: -3.6389596462249756
    6. '\n' → logprob: -4.3889594078063965
    7. 'if' → logprob: -4.3889594078063965
    8. ' 
' → logprob: -5.6389594078063965
    9. 'while' → logprob: -5.6389594078063965
    10. ' if' → logprob: -5.8889594078063965

Token 39: 'junk' (ID: 181960)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002816766733303666
    2. 'if' → logprob: -6.127816677093506
    3. ' for' → logprob: -7.752816677093506
    4. 'while' → logprob: -9.002817153930664
    5. ':' → logprob: -10.627817153930664
    6. 'i' → logprob: -11.127817153930664
    7. '_' → logprob: -11.752817153930664
    8. 'range' → logprob: -12.252817153930664
    9. 'a' → logprob: -12.377817153930664
    10. '+' → logprob: -12.627817153930664

Token 40: ' =' (ID: 314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3710387945175171
    2. '
' → logprob: -2.8710389137268066
    3. ' ' → logprob: -3.1210389137268066
    4. '<|end|>' → logprob: -3.2460389137268066
    5. 'if' → logprob: -3.4960389137268066
    6. ' for' → logprob: -3.4960389137268066
    7. '=' → logprob: -3.8710389137268066
    8. ',' → logprob: -3.9960389137268066
    9. 'x' → logprob: -4.121038913726807
    10. ':' → logprob: -4.246038913726807

Token 41: ' [' (ID: 723)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -1.6170647144317627
    2. 'get' → logprob: -2.1170647144317627
    3. 'list' → logprob: -2.1170647144317627
    4. 'input' → logprob: -2.3670647144317627
    5. ' list' → logprob: -2.6170647144317627
    6. 'first' → logprob: -2.7420647144317627
    7. ' get' → logprob: -2.9920647144317627
    8. ' reduce' → logprob: -2.9920647144317627
    9. ' input' → logprob: -3.3670647144317627
    10. '[]' → logprob: -3.3670647144317627

Token 42: 'Alpha' (ID: 26549)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.4270106256008148
    2. '0' → logprob: -1.8020106554031372
    3. 'int' → logprob: -2.5520105361938477
    4. 'second' → logprob: -3.4270105361938477
    5. 'i' → logprob: -4.427010536193848
    6. 'get' → logprob: -4.427010536193848
    7. 'map' → logprob: -5.052010536193848
    8. '1' → logprob: -5.302010536193848
    9. 'x' → logprob: -5.302010536193848
    10. ']' → logprob: -5.427010536193848

Token 43: ' :=' (ID: 3405)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28434354066848755
    2. '+' → logprob: -1.9093434810638428
    3. ' +' → logprob: -2.7843434810638428
    4. ']' → logprob: -3.9093434810638428
    5. '+i' → logprob: -5.784343719482422
    6. ' for' → logprob: -6.034343719482422
    7. '+j' → logprob: -6.034343719482422
    8. '-' → logprob: -6.409343719482422
    9. 'for' → logprob: -6.409343719482422
    10. ',
' → logprob: -6.659343719482422

Token 44: ' Alpha' (ID: 41382)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.6351732015609741
    2. ' Alpha' → logprob: -1.7601732015609741
    3. 'Alpha' → logprob: -1.8851732015609741
    4. ' first' → logprob: -2.2601733207702637
    5. 'first' → logprob: -2.3851733207702637
    6. ' x' → logprob: -2.8851733207702637
    7. ' max' → logprob: -3.2601733207702637
    8. 'i' → logprob: -3.2601733207702637
    9. '_' → logprob: -3.5101733207702637
    10. 'max' → logprob: -3.7601733207702637

Token 45: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11752405762672424
    2. ' +' → logprob: -2.2425241470336914
    3. '+i' → logprob: -5.492524147033691
    4. '+x' → logprob: -8.992524147033691
    5. '+n' → logprob: -9.242524147033691
    6. '-' → logprob: -9.242524147033691
    7. '+j' → logprob: -9.492524147033691
    8. '+a' → logprob: -10.117524147033691
    9. '+k' → logprob: -10.367524147033691
    10. '+
' → logprob: -11.367524147033691

Token 46: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.2514268159866333
    2. '1' → logprob: -2.2514266967773438
    3. ' first' → logprob: -4.001426696777344
    4. 'x' → logprob: -4.126426696777344
    5. 'i' → logprob: -4.376426696777344
    6. 'second' → logprob: -4.376426696777344
    7. '(first' → logprob: -4.376426696777344
    8. 'int' → logprob: -4.501426696777344
    9. '(i' → logprob: -4.751426696777344
    10. '(' → logprob: -6.001426696777344

Token 47: 'Num' (ID: 5702)
  Prédit: 'Num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -6.749814019713085e-06
    2. 'N' → logprob: -12.750006675720215
    3. 'num' → logprob: -12.875006675720215
    4. ' Num' → logprob: -14.750006675720215
    5. 'Nu' → logprob: -15.625006675720215
    6. ' ' → logprob: -16.50000762939453
    7. 'Nums' → logprob: -16.50000762939453
    8. '_num' → logprob: -16.75000762939453
    9. ')' → logprob: -16.87500762939453
    10. '-' → logprob: -17.18750762939453

Token 48: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6110066175460815
    2. ',' → logprob: -1.3610066175460815
    3. ']' → logprob: -2.236006736755371
    4. 'for' → logprob: -2.611006736755371
    5. ' +' → logprob: -4.986006736755371
    6. '+' → logprob: -4.986006736755371
    7. '*' → logprob: -6.611006736755371
    8. ' *' → logprob: -6.736006736755371
    9. ',
' → logprob: -6.861006736755371
    10. '**' → logprob: -7.111006736755371

Token 49: ' (' (ID: 350)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.7428427338600159
    2. ' second' → logprob: -1.242842674255371
    3. 'i' → logprob: -2.617842674255371
    4. ' i' → logprob: -2.742842674255371
    5. '2' → logprob: -3.117842674255371
    6. ' ' → logprob: -4.742842674255371
    7. 'int' → logprob: -4.867842674255371
    8. '1' → logprob: -5.242842674255371
    9. ' int' → logprob: -5.367842674255371
    10. 'x' → logprob: -5.742842674255371

Token 50: '10' (ID: 702)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.6857653856277466
    2. '2' → logprob: -1.8107653856277466
    3. 'i' → logprob: -2.560765266418457
    4. '10' → logprob: -2.560765266418457
    5. ' second' → logprob: -3.185765266418457
    6. '9' → logprob: -3.935765266418457
    7. ' ' → logprob: -4.310765266418457
    8. '3' → logprob: -4.310765266418457
    9. '1' → logprob: -4.560765266418457
    10. '-' → logprob: -4.560765266418457

Token 51: ' **' (ID: 6240)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8191869854927063
    2. '**' → logprob: -1.0691869258880615
    3. ' **' → logprob: -2.5691869258880615
    4. ' -' → logprob: -2.6941869258880615
    5. '-' → logprob: -3.3191869258880615
    6. '),' → logprob: -4.319187164306641
    7. ' ' → logprob: -4.444187164306641
    8. ' )' → logprob: -6.069187164306641
    9. ')**' → logprob: -6.194187164306641
    10. ' **)' → logprob: -6.569187164306641

Token 52: ' ind' (ID: 1383)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6948366165161133
    2. '_' → logprob: -2.3198366165161133
    3. 'Beta' → logprob: -2.5698366165161133
    4. 'junk' → logprob: -2.8198366165161133
    5. 'len' → logprob: -3.0698366165161133
    6. 'second' → logprob: -3.3198366165161133
    7. '(' → logprob: -3.4448366165161133
    8. 'j' → logprob: -4.069836616516113
    9. '2' → logprob: -4.444836616516113
    10. '3' → logprob: -4.569836616516113

Token 53: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028293654322624207
    2. '),' → logprob: -6.127829551696777
    3. ',' → logprob: -7.877829551696777
    4. '))' → logprob: -9.877829551696777
    5. 'nt' → logprob: -10.127829551696777
    6. ' )' → logprob: -10.127829551696777
    7. '),
' → logprob: -10.377829551696777
    8. ')
' → logprob: -11.127829551696777
    9. ')]' → logprob: -11.252829551696777
    10. 't' → logprob: -11.752829551696777

Token 54: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14287243783473969
    2. 'for' → logprob: -2.0178723335266113
    3. ',' → logprob: -9.01787281036377
    4. ' ' → logprob: -9.89287281036377
    5. '	for' → logprob: -11.39287281036377
    6. '  ' → logprob: -12.14287281036377
    7. ')' → logprob: -12.26787281036377
    8. '-' → logprob: -13.76787281036377
    9. '   ' → logprob: -14.39287281036377
    10. ' ,' → logprob: -14.51787281036377

Token 55: ' ind' (ID: 1383)
  Prédit: ' ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ind' → logprob: -0.014251535758376122
    2. 'ind' → logprob: -4.264251708984375
    3. '_ind' → logprob: -10.389251708984375
    4. '_' → logprob: -10.764251708984375
    5. ' _' → logprob: -11.014251708984375
    6. ' ' → logprob: -12.014251708984375
    7. ' indr' → logprob: -12.389251708984375
    8. '[ind' → logprob: -13.514251708984375
    9. '(ind' → logprob: -13.639251708984375
    10. ' ' → logprob: -13.889251708984375

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026420705020427704
    2. 'in' → logprob: -3.9014205932617188
    3. ',' → logprob: -5.151420593261719
    4. ' ,' → logprob: -9.776420593261719
    5. '	in' → logprob: -12.151420593261719
    6. ' ' → logprob: -13.026420593261719
    7. '<|end|>' → logprob: -13.151420593261719
    8. ' range' → logprob: -13.776420593261719
    9. ',n' → logprob: -14.151420593261719
    10. ',in' → logprob: -14.276420593261719

Token 57: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.14639972150325775
    2. 'range' → logprob: -2.021399736404419
    3. ' reversed' → logprob: -6.14639949798584
    4. 're' → logprob: -6.52139949798584
    5. '	range' → logprob: -9.64639949798584
    6. ' ' → logprob: -11.39639949798584
    7. '[' → logprob: -12.64639949798584
    8. 'enumer' → logprob: -12.77139949798584
    9. 'reverse' → logprob: -12.89639949798584
    10. '[::-' → logprob: -12.89639949798584

Token 58: '(second' (ID: 78627)
  Prédit: '(second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(second' → logprob: -0.6655201315879822
    2. '(' → logprob: -1.040520191192627
    3. '(len' → logprob: -2.040520191192627
    4. '(first' → logprob: -6.540520191192627
    5. ' (' → logprob: -6.790520191192627
    6. '(n' → logprob: -9.665519714355469
    7. ' second' → logprob: -10.165519714355469
    8. 'second' → logprob: -10.540519714355469
    9. '(s' → logprob: -10.790519714355469
    10. '(-' → logprob: -11.415519714355469

Token 59: 'Num' (ID: 5702)
  Prédit: 'Num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -7.226628895296017e-06
    2. 'num' → logprob: -12.750007629394531
    3. '_num' → logprob: -13.375007629394531
    4. 'N' → logprob: -14.375007629394531
    5. '-' → logprob: -14.500007629394531
    6. ' Num' → logprob: -14.875007629394531
    7. 'Nums' → logprob: -15.250007629394531
    8. '_Num' → logprob: -15.375007629394531
    9. 'NUM' → logprob: -15.750007629394531
    10. 's' → logprob: -16.00000762939453

Token 60: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00880932342261076
    2. ' )' → logprob: -5.2588090896606445
    3. ')' → logprob: -5.7588090896606445
    4. '-' → logprob: -8.383809089660645
    5. ',' → logprob: -9.633809089660645
    6. ' -' → logprob: -10.008809089660645
    7. ')])' → logprob: -10.258809089660645
    8. ']' → logprob: -11.258809089660645
    9. ' ]' → logprob: -12.258809089660645
    10. ')][' → logprob: -12.258809089660645

Token 61: ' ' (ID: 220)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.3398970663547516
    2. ']' → logprob: -1.9648970365524292
    3. '[' → logprob: -2.9648971557617188
    4. '<|end|>' → logprob: -3.0898971557617188
    5. ')' → logprob: -4.089897155761719
    6. ' ' → logprob: -4.214897155761719
    7. '[:]' → logprob: -6.089897155761719
    8. '```' → logprob: -6.214897155761719
    9. '-' → logprob: -6.339897155761719
    10. '+' → logprob: -6.464897155761719

Token 62: ' #' (ID: 1069)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.2462119460105896
    2. '<|end|>' → logprob: -1.7462120056152344
    3. ']' → logprob: -4.496212005615234
    4. '[' → logprob: -4.996212005615234
    5. '[:]' → logprob: -4.996212005615234
    6. '
' → logprob: -5.246212005615234
    7. ')' → logprob: -5.371212005615234
    8. '+' → logprob: -5.871212005615234
    9. '<|end|>' → logprob: -6.621212005615234
    10. ' ' → logprob: -6.996212005615234

Token 63: ' <' (ID: 464)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: '---' (ID: 10356)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' funky' (ID: 103816)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.021114809438586235
    2. ']' → logprob: -4.896114826202393
    3. ' ' → logprob: -5.271114826202393
    4. '[' → logprob: -5.646114826202393
    5. '[:-' → logprob: -6.896114826202393
    6. '<|end|>' → logprob: -7.021114826202393
    7. ' ]' → logprob: -7.271114826202393
    8. ')' → logprob: -7.771114826202393
    9. '-' → logprob: -8.146114349365234
    10. '[:]' → logprob: -8.146114349365234

Token 66: ' assignment' (ID: 24618)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.009929620660841465
    2. ']' → logprob: -6.134929656982422
    3. '<|end|>' → logprob: -6.259929656982422
    4. ' ' → logprob: -6.384929656982422
    5. '[' → logprob: -6.509929656982422
    6. '[:-' → logprob: -7.509929656982422
    7. '
' → logprob: -7.634929656982422
    8. ')' → logprob: -7.634929656982422
    9. '[:]' → logprob: -8.134929656982422
    10. '[-' → logprob: -8.509929656982422

Token 67: ' in' (ID: 306)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.03644940257072449
    2. '<|end|>' → logprob: -4.286449432373047
    3. '
' → logprob: -5.161449432373047
    4. '[' → logprob: -5.286449432373047
    5. ']' → logprob: -5.786449432373047
    6. ')' → logprob: -6.036449432373047
    7. '+' → logprob: -6.786449432373047
    8. ' ' → logprob: -6.911449432373047
    9. '-' → logprob: -7.161449432373047
    10. '[:]' → logprob: -7.286449432373047

Token 68: ' comprehension' (ID: 91423)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7304738759994507
    2. 'reverse' → logprob: -2.1054739952087402
    3. ' reverse' → logprob: -2.2304739952087402
    4. ' a' → logprob: -3.2304739952087402
    5. ' the' → logprob: -3.2304739952087402
    6. '[::-' → logprob: -3.6054739952087402
    7. 're' → logprob: -3.7304739952087402
    8. ' reversed' → logprob: -3.8554739952087402
    9. ' range' → logprob: -3.8554739952087402
    10. 'the' → logprob: -4.10547399520874

Token 69: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 70: 'junk' (ID: 181960)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.04569393768906593
    2. '<|end|>' → logprob: -3.545693874359131
    3. '[' → logprob: -4.795693874359131
    4. ']' → logprob: -5.670693874359131
    5. '[:]' → logprob: -6.920693874359131
    6. '
' → logprob: -6.920693874359131
    7. ')' → logprob: -7.545693874359131
    8. '<|end|>' → logprob: -8.295694351196289
    9. '.reverse' → logprob: -8.420694351196289
    10. '[:-' → logprob: -8.545694351196289

Token 71: '2' (ID: 17)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04319695383310318
    2. '=' → logprob: -3.1681969165802
    3. '[' → logprob: -9.668196678161621
    4. ' ' → logprob: -10.543196678161621
    5. '2' → logprob: -10.543196678161621
    6. '.' → logprob: -10.793196678161621
    7. '=[]' → logprob: -11.543196678161621
    8. '[:]' → logprob: -11.543196678161621
    9. ' =[' → logprob: -12.355696678161621
    10. '.append' → logprob: -12.418196678161621

Token 73: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31394365429878235
    2. ' [' → logprob: -1.31394362449646
    3. '[B' → logprob: -9.063943862915039
    4. '[(' → logprob: -9.313943862915039
    5. ' ' → logprob: -9.438943862915039
    6. 'list' → logprob: -9.813943862915039
    7. 'sum' → logprob: -9.938943862915039
    8. ' list' → logprob: -10.313943862915039
    9. ' sum' → logprob: -10.563943862915039
    10. ' Beta' → logprob: -10.688943862915039

Token 74: 'Beta' (ID: 63964)
  Prédit: 'Beta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Beta' → logprob: -0.0006629953859373927
    2. '(B' → logprob: -8.125662803649902
    3. ' Beta' → logprob: -8.500662803649902
    4. 'Alpha' → logprob: -9.875662803649902
    5. 'junk' → logprob: -10.375662803649902
    6. 'second' → logprob: -10.500662803649902
    7. '   ' → logprob: -11.750662803649902
    8. ' ' → logprob: -12.000662803649902
    9. '  ' → logprob: -12.250662803649902
    10. 'Bet' → logprob: -12.375662803649902

Token 75: ' :=' (ID: 3405)
  Prédit: ' :='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :=' → logprob: -0.28119608759880066
    2. ':=' → logprob: -1.406196117401123
    3. ' ' → logprob: -11.156195640563965
    4. ':' → logprob: -11.406195640563965
    5. ' :' → logprob: -12.031195640563965
    6. ' :=
' → logprob: -12.781195640563965
    7. ' +=' → logprob: -12.906195640563965
    8. '```' → logprob: -13.031195640563965
    9. '=' → logprob: -13.156195640563965
    10. ' ' → logprob: -13.281195640563965

Token 76: ' Beta' (ID: 55085)
  Prédit: 'Beta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Beta' → logprob: -0.3872711956501007
    2. ' Beta' → logprob: -1.1372711658477783
    3. '0' → logprob: -9.2622709274292
    4. ' ' → logprob: -9.6372709274292
    5. 'Alpha' → logprob: -9.7622709274292
    6. '(B' → logprob: -10.2622709274292
    7. 'int' → logprob: -10.5122709274292
    8. '   ' → logprob: -10.8872709274292
    9. 'beta' → logprob: -11.5122709274292
    10. 'Bet' → logprob: -11.6997709274292

Token 77: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.054963648319244385
    2. '+' → logprob: -2.9299635887145996
    3. ' ' → logprob: -10.304964065551758
    4. ' -' → logprob: -10.804964065551758
    5. ' plus' → logprob: -12.054964065551758
    6. ' *' → logprob: -12.367464065551758
    7. '-' → logprob: -12.742464065551758
    8. '*' → logprob: -13.367464065551758
    9. ' +
' → logprob: -13.804964065551758
    10. ' second' → logprob: -13.867464065551758

Token 78: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.03662927448749542
    2. 'first' → logprob: -3.9116291999816895
    3. ' second' → logprob: -4.4116291999816895
    4. '1' → logprob: -6.1616291999816895
    5. ' first' → logprob: -7.4116291999816895
    6. ' ' → logprob: -8.411629676818848
    7. '2' → logprob: -8.786629676818848
    8. 'int' → logprob: -9.036629676818848
    9. 'Alpha' → logprob: -9.036629676818848
    10. '10' → logprob: -9.036629676818848

Token 79: 'Num' (ID: 5702)
  Prédit: 'Num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -5.080963092041202e-06
    2. 'num' → logprob: -12.750004768371582
    3. 'N' → logprob: -14.125004768371582
    4. ' Num' → logprob: -15.250004768371582
    5. 'Nums' → logprob: -15.375004768371582
    6. 'Nu' → logprob: -15.875004768371582
    7. 'NUM' → logprob: -16.3125057220459
    8. 'NU' → logprob: -16.4375057220459
    9. '

' → logprob: -16.7500057220459
    10. ' ' → logprob: -17.0000057220459

Token 80: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.042120449244976044
    2. '*' → logprob: -3.2921204566955566
    3. '**' → logprob: -6.042120456695557
    4. ' **' → logprob: -6.792120456695557
    5. ' ' → logprob: -7.792120456695557
    6. '*(' → logprob: -9.292119979858398
    7. '  ' → logprob: -11.854619979858398
    8. ' (' → logprob: -12.354619979858398
    9. ' *(' → logprob: -12.354619979858398
    10. '```' → logprob: -12.417119979858398

Token 81: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10039687156677246
    2. '(' → logprob: -2.3503968715667725
    3. '(first' → logprob: -9.600397109985352
    4. '(second' → logprob: -9.725397109985352
    5. ' ' → logprob: -10.475397109985352
    6. 'first' → logprob: -11.975397109985352
    7. 'second' → logprob: -12.100397109985352
    8. ' first' → logprob: -12.100397109985352
    9. ' second' → logprob: -12.225397109985352
    10. '10' → logprob: -13.225397109985352

Token 82: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01852564886212349
    2. ' (' → logprob: -4.64352560043335
    3. '10' → logprob: -4.89352560043335
    4. 'first' → logprob: -8.143526077270508
    5. ' ' → logprob: -8.393526077270508
    6. ')' → logprob: -8.893526077270508
    7. '0' → logprob: -9.268526077270508
    8. ' first' → logprob: -9.393526077270508
    9. 'ind' → logprob: -9.518526077270508
    10. '
' → logprob: -10.018526077270508

Token 83: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.014220856130123138
    2. '**' → logprob: -4.264220714569092
    3. ' ' → logprob: -10.51422119140625
    4. ' *' → logprob: -10.63922119140625
    5. '*' → logprob: -12.13922119140625
    6. ' ' → logprob: -14.51422119140625
    7. ' **)' → logprob: -15.63922119140625
    8. ' **
' → logprob: -16.63922119140625
    9. ' ***' → logprob: -17.76422119140625
    10. '```' → logprob: -17.88922119140625

Token 84: ' idx' (ID: 14016)
  Prédit: 'ind'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ind' → logprob: -0.016088098287582397
    2. ' ind' → logprob: -4.141088008880615
    3. 'i' → logprob: -11.641088485717773
    4. '   ' → logprob: -11.641088485717773
    5. '(ind' → logprob: -12.203588485717773
    6. '    ' → logprob: -12.516088485717773
    7. ' ' → logprob: -12.641088485717773
    8. '
' → logprob: -13.203588485717773
    9. 'indx' → logprob: -13.266088485717773
    10. '[ind' → logprob: -13.328588485717773

Token 85: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.498299241065979
    2. ')' → logprob: -0.998299241065979
    3. 'for' → logprob: -3.7482991218566895
    4. ' ' → logprob: -8.873299598693848
    5. ' )' → logprob: -9.248299598693848
    6. '2' → logprob: -9.623299598693848
    7. '+' → logprob: -9.998299598693848
    8. '	for' → logprob: -12.123299598693848
    9. '   ' → logprob: -12.623299598693848
    10. '```' → logprob: -12.998299598693848

Token 86: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.004720853175967932
    2. 'for' → logprob: -5.379720687866211
    3. ' in' → logprob: -9.629720687866211
    4. ' ' → logprob: -10.754720687866211
    5. ')' → logprob: -11.504720687866211
    6. '	for' → logprob: -13.504720687866211
    7. '    ' → logprob: -14.629720687866211
    8. '   ' → logprob: -15.004720687866211
    9. '+' → logprob: -15.254720687866211
    10. ' )' → logprob: -15.754720687866211

Token 87: ' idx' (ID: 14016)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7558684349060059
    2. 'range' → logprob: -0.7558684349060059
    3. 'idx' → logprob: -3.380868434906006
    4. ' idx' → logprob: -3.880868434906006
    5. 'ind' → logprob: -5.505868434906006
    6. ' ind' → logprob: -6.630868434906006
    7. 're' → logprob: -8.255868911743164
    8. 'index' → logprob: -8.755868911743164
    9. ' ' → logprob: -9.505868911743164
    10. '   ' → logprob: -9.755868911743164

Token 88: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014171971939504147
    2. 'in' → logprob: -4.264172077178955
    3. ' ' → logprob: -12.389171600341797
    4. 'range' → logprob: -13.264171600341797
    5. ' range' → logprob: -14.014171600341797
    6. ')' → logprob: -15.389171600341797
    7. '2' → logprob: -15.639171600341797
    8. '   ' → logprob: -15.639171600341797
    9. '  ' → logprob: -16.014171600341797
    10. '    ' → logprob: -16.201671600341797

Token 89: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5238626599311829
    2. ' range' → logprob: -0.8988626599311829
    3. 're' → logprob: -7.273862838745117
    4. 'first' → logprob: -11.773862838745117
    5. ' ' → logprob: -11.898862838745117
    6. 'reverse' → logprob: -11.898862838745117
    7. ' reversed' → logprob: -12.023862838745117
    8. ' first' → logprob: -12.023862838745117
    9. '(range' → logprob: -12.773862838745117
    10. 'rev' → logprob: -13.148862838745117

Token 90: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -0.9044833183288574
    2. 'first' → logprob: -1.2794833183288574
    3. '(second' → logprob: -1.5294833183288574
    4. 'second' → logprob: -2.4044833183288574
    5. '(' → logprob: -5.529483318328857
    6. ' first' → logprob: -6.154483318328857
    7. '(len' → logprob: -6.279483318328857
    8. 'len' → logprob: -7.029483318328857
    9. ' second' → logprob: -7.279483318328857
    10. ' (' → logprob: -8.904483795166016

Token 91: 'Num' (ID: 5702)
  Prédit: 'Num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -1.5332478142227046e-05
    2. '_num' → logprob: -11.875015258789062
    3. 'num' → logprob: -12.000015258789062
    4. 'N' → logprob: -13.750015258789062
    5. 'Nu' → logprob: -15.375015258789062
    6. 'Nums' → logprob: -15.375015258789062
    7. '_Num' → logprob: -15.625015258789062
    8. ')' → logprob: -15.625015258789062
    9. ' Num' → logprob: -16.625015258789062
    10. 'NUM' → logprob: -16.750015258789062

Token 92: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008248721715062857
    2. ' )' → logprob: -7.375824928283691
    3. '+' → logprob: -9.250824928283691
    4. ']' → logprob: -10.000824928283691
    5. ')' → logprob: -10.500824928283691
    6. ' ]' → logprob: -11.625824928283691
    7. ')]
' → logprob: -11.750824928283691
    8. ' +' → logprob: -12.625824928283691
    9. ')])' → logprob: -13.000824928283691
    10. '))' → logprob: -14.000824928283691

Token 93: 'def' (ID: 1314)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018071623519062996
    2. '<|end|>' → logprob: -5.26807165145874
    3. '#' → logprob: -5.51807165145874
    4. 'junk' → logprob: -6.01807165145874
    5. ')' → logprob: -6.51807165145874
    6. '#print' → logprob: -7.26807165145874
    7. 'result' → logprob: -7.26807165145874
    8. 'first' → logprob: -7.39307165145874
    9. 'for' → logprob: -7.76807165145874
    10. 'Alpha' → logprob: -7.89307165145874

Token 94: ' weird' (ID: 28783)
  Prédit: ' multiply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' multiply' → logprob: -1.7020530700683594
    2. ' funky' → logprob: -1.9520530700683594
    3. ' main' → logprob: -2.3270530700683594
    4. ' add' → logprob: -2.4520530700683594
    5. ' calculate' → logprob: -2.8270530700683594
    6. ' func' → logprob: -2.9520530700683594
    7. ' sum' → logprob: -3.5770530700683594
    8. ' get' → logprob: -3.7020530700683594
    9. ' combine' → logprob: -4.077053070068359
    10. ' my' → logprob: -4.202053070068359

Token 95: '_cmp' (ID: 86843)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.149206280708313
    2. '_m' → logprob: -1.899206280708313
    3. '_add' → logprob: -2.3992061614990234
    4. '_function' → logprob: -2.5242061614990234
    5. '_we' → logprob: -2.5242061614990234
    6. '_mul' → logprob: -2.5242061614990234
    7. '_func' → logprob: -2.8992061614990234
    8. '_' → logprob: -3.1492061614990234
    9. '_math' → logprob: -4.149206161499023
    10. '_mult' → logprob: -4.524206161499023

Token 96: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.3118050694465637
    2. '(' → logprob: -1.436805009841919
    3. '(x' → logprob: -3.811805009841919
    4. ' (' → logprob: -5.311805248260498
    5. '(first' → logprob: -6.561805248260498
    6. '(left' → logprob: -7.436805248260498
    7. '(lhs' → logprob: -7.686805248260498
    8. '(s' → logprob: -9.31180477142334
    9. '(A' → logprob: -9.68680477142334
    10. '(one' → logprob: -9.93680477142334

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003107607364654541
    2. '):' → logprob: -5.87810754776001
    3. ',y' → logprob: -9.128108024597168
    4. '1' → logprob: -9.878108024597168
    5. ' ,' → logprob: -9.878108024597168
    6. ',a' → logprob: -10.003108024597168
    7. ',x' → logprob: -11.128108024597168
    8. 'a' → logprob: -11.628108024597168
    9. ',b' → logprob: -12.878108024597168
    10. ')' → logprob: -12.878108024597168

Token 98: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.03384013846516609
    2. ' y' → logprob: -3.4088401794433594
    3. '    ' → logprob: -9.90884017944336
    4. '):' → logprob: -10.40884017944336
    5. '   ' → logprob: -10.53384017944336
    6. ')' → logprob: -10.65884017944336
    7. 'x' → logprob: -11.40884017944336
    8. 'a' → logprob: -11.90884017944336
    9. '  ' → logprob: -11.90884017944336
    10. ' ' → logprob: -12.03384017944336

Token 99: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005577972042374313
    2. ':' → logprob: -7.750557899475098
    3. ')' → logprob: -9.750557899475098
    4. '):
' → logprob: -10.375557899475098
    5. ',' → logprob: -10.875557899475098
    6. '=' → logprob: -11.750557899475098
    7. ' ):' → logprob: -12.125557899475098
    8. ' :' → logprob: -13.500557899475098
    9. '   ' → logprob: -13.875557899475098
    10. '>:' → logprob: -14.125557899475098

Token 100: ' xx' (ID: 44242)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.6757043600082397
    2. 'op' → logprob: -1.9257043600082397
    3. ' op' → logprob: -2.0507044792175293
    4. 'alpha' → logprob: -2.8007044792175293
    5. 'p' → logprob: -3.8007044792175293
    6. ' z' → logprob: -3.8007044792175293
    7. '):' → logprob: -3.8007044792175293
    8. ')' → logprob: -3.8007044792175293
    9. 'operator' → logprob: -3.8007044792175293
    10. 'Alpha' → logprob: -3.9257044792175293

Token 101: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.19991110265254974
    2. ',' → logprob: -1.824911117553711
    3. ')' → logprob: -4.949911117553711
    4. '=' → logprob: -5.699911117553711
    5. 'x' → logprob: -5.824911117553711
    6. 'y' → logprob: -5.949911117553711
    7. '):
' → logprob: -6.324911117553711
    8. ')):' → logprob: -8.449911117553711
    9. '2' → logprob: -8.574911117553711
    10. '_' → logprob: -8.949911117553711

Token 102: ' yy' (ID: 31344)
  Prédit: 'yy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.22424578666687012
    2. 'y' → logprob: -1.7242457866668701
    3. ' yy' → logprob: -4.224246025085449
    4. ' y' → logprob: -5.474246025085449
    5. 'yyy' → logprob: -6.224246025085449
    6. 'yx' → logprob: -7.224246025085449
    7. 'xy' → logprob: -7.474246025085449
    8. ' ' → logprob: -8.97424602508545
    9. ')' → logprob: -9.59924602508545
    10. 'yyyy' → logprob: -9.84924602508545

Token 103: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013871431583538651
    2. '):
' → logprob: -6.876387119293213
    3. ')' → logprob: -8.501387596130371
    4. ':' → logprob: -9.751387596130371
    5. ' ):' → logprob: -9.751387596130371
    6. ',' → logprob: -11.251387596130371
    7. '   ' → logprob: -12.126387596130371
    8. '=' → logprob: -12.251387596130371
    9. '):
' → logprob: -12.376387596130371
    10. ' ' → logprob: -13.251387596130371

Token 104: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4967484474182129
    2. '   ' → logprob: -0.9967484474182129
    3. ' return' → logprob: -4.621748447418213
    4. ':return' → logprob: -5.371748447418213
    5. '	return' → logprob: -5.496748447418213
    6. ':
' → logprob: -6.246748447418213
    7. '<|end|>' → logprob: -7.621748447418213
    8. 'return' → logprob: -7.746748447418213
    9. ' if' → logprob: -7.746748447418213
    10. ',' → logprob: -8.996747970581055

Token 105: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22412726283073425
    2. ' if' → logprob: -2.2241272926330566
    3. ' return' → logprob: -2.4741272926330566
    4. 'if' → logprob: -5.599127292633057
    5. 'return' (adapté à ' return') → logprob: -5.849127292633057
    6. '    
' → logprob: -7.724127292633057
    7. '    ' → logprob: -8.599126815795898
    8. '	return' → logprob: -8.724126815795898
    9. '<|end|>' → logprob: -8.849126815795898
    10. ' while' → logprob: -9.099126815795898

Token 106: ' {' (ID: 354)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.023219108581543
    2. '(xx' → logprob: -1.273219108581543
    3. 'xx' → logprob: -1.898219108581543
    4. '(' → logprob: -2.773219108581543
    5. 'x' → logprob: -3.273219108581543
    6. '((' → logprob: -3.773219108581543
    7. '(abs' → logprob: -4.273219108581543
    8. ' (' → logprob: -4.273219108581543
    9. 'abs' → logprob: -4.648219108581543
    10. '-' → logprob: -4.773219108581543

Token 107: 'True' (ID: 4710)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7018113136291504
    2. 'True' → logprob: -1.4518113136291504
    3. '(' → logprob: -2.4518113136291504
    4. '(x' → logprob: -3.0768113136291504
    5. '-' → logprob: -3.3268113136291504
    6. '   ' → logprob: -3.9518113136291504
    7. '1' → logprob: -3.9518113136291504
    8. '0' → logprob: -3.9518113136291504
    9. ''x' → logprob: -4.57681131362915
    10. '(True' → logprob: -5.32681131362915

Token 108: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005983900744467974
    2. ' :' → logprob: -5.380983829498291
    3. ':x' → logprob: -6.880983829498291
    4. '   ' → logprob: -8.75598430633545
    5. ':(' → logprob: -10.00598430633545
    6. ':first' → logprob: -10.63098430633545
    7. ':
' → logprob: -10.88098430633545
    8. ':true' → logprob: -11.00598430633545
    9. ':y' → logprob: -11.13098430633545
    10. '(x' → logprob: -12.00598430633545

Token 109: ' xx' (ID: 44242)
  Prédit: 'xx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.3054923415184021
    2. 'x' → logprob: -2.180492401123047
    3. '1' → logprob: -2.805492401123047
    4. '-' → logprob: -3.680492401123047
    5. '(' → logprob: -3.930492401123047
    6. '(x' → logprob: -4.680492401123047
    7. '(xx' → logprob: -4.930492401123047
    8. 'max' → logprob: -4.930492401123047
    9. 'abs' → logprob: -5.055492401123047
    10. ' xx' → logprob: -5.805492401123047

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5980297923088074
    2. ' if' → logprob: -0.9730297923088074
    3. 'if' → logprob: -3.223029851913452
    4. '+' → logprob: -4.098029613494873
    5. '>' → logprob: -5.348029613494873
    6. ' ,' → logprob: -5.973029613494873
    7. ' +' → logprob: -6.223029613494873
    8. ' >' → logprob: -6.348029613494873
    9. '==' → logprob: -6.848029613494873
    10. '>=' → logprob: -7.473029613494873

Token 111: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.032031744718551636
    2. ' False' → logprob: -3.532031774520874
    3. 'True' → logprob: -6.907031536102295
    4. 'yy' → logprob: -7.032031536102295
    5. 'xx' → logprob: -8.657032012939453
    6. '   ' → logprob: -9.407032012939453
    7. ' ' → logprob: -10.157032012939453
    8. ' True' → logprob: -10.407032012939453
    9. ' yy' → logprob: -10.782032012939453
    10. ' xx' → logprob: -10.782032012939453

Token 112: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00044377794256433845
    2. ':y' → logprob: -8.250443458557129
    3. ' :' → logprob: -8.750443458557129
    4. 'yy' → logprob: -11.750443458557129
    5. ':x' → logprob: -12.250443458557129
    6. '}' → logprob: -12.500443458557129
    7. '   ' → logprob: -14.375443458557129
    8. '	yy' → logprob: -14.375443458557129
    9. '  ' → logprob: -14.500443458557129
    10. '=' → logprob: -14.625443458557129

Token 113: ' {' (ID: 354)
  Prédit: 'yy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.00547126354649663
    2. ' yy' → logprob: -5.255471229553223
    3. '	yy' → logprob: -8.755471229553223
    4. ' ' → logprob: -10.255471229553223
    5. 'yyy' → logprob: -11.630471229553223
    6. '   ' → logprob: -11.880471229553223
    7. '.yy' → logprob: -12.130471229553223
    8. 'y' → logprob: -12.130471229553223
    9. '-' → logprob: -12.255471229553223
    10. '  ' → logprob: -12.755471229553223

Token 114: 'True' (ID: 4710)
  Prédit: 'yy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.0002501343551557511
    2. ' yy' → logprob: -9.250249862670898
    3. '	yy' → logprob: -10.250249862670898
    4. 'xy' → logprob: -10.750249862670898
    5. 'x' → logprob: -11.125249862670898
    6. 'yyy' → logprob: -11.250249862670898
    7. 'y' → logprob: -11.250249862670898
    8. '-' → logprob: -11.875249862670898
    9. '   ' → logprob: -11.875249862670898
    10. 'None' → logprob: -12.000249862670898

Token 115: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00015538577281404287
    2. ' :' → logprob: -9.625155448913574
    3. ':y' → logprob: -9.875155448913574
    4. ':x' → logprob: -10.375155448913574
    5. 'yy' → logprob: -13.250155448913574
    6. ':return' → logprob: -13.625155448913574
    7. 'x' → logprob: -14.000155448913574
    8. ':
' → logprob: -15.000155448913574
    9. '	yy' → logprob: -15.125155448913574
    10. '   ' → logprob: -15.375155448913574

Token 116: ' yy' (ID: 31344)
  Prédit: 'yy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.002924706321209669
    2. ' yy' → logprob: -6.002924919128418
    3. '	yy' → logprob: -8.627924919128418
    4. 'x' → logprob: -9.127924919128418
    5. ' ' → logprob: -10.377924919128418
    6. 'xy' → logprob: -10.502924919128418
    7. 'y' → logprob: -10.627924919128418
    8. 'yyy' → logprob: -10.752924919128418
    9. '-' → logprob: -11.127924919128418
    10. '   ' → logprob: -11.752924919128418

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001969077391549945
    2. ' ,' → logprob: -7.126968860626221
    3. '}[' → logprob: -7.751968860626221
    4. '}' → logprob: -8.501969337463379
    5. '}}' → logprob: -8.626969337463379
    6. '[' → logprob: -9.626969337463379
    7. '   ' → logprob: -9.626969337463379
    8. '       ' → logprob: -10.376969337463379
    9. '  ' → logprob: -11.001969337463379
    10. ' ' → logprob: -11.251969337463379

Token 118: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.41105344891548157
    2. 'xx' → logprob: -2.286053419113159
    3. ' False' → logprob: -2.411053419113159
    4. ' xx' → logprob: -2.661053419113159
    5. 'x' → logprob: -3.286053419113159
    6. ' x' → logprob: -3.786053419113159
    7. '{' → logprob: -5.661053657531738
    8. 'yy' → logprob: -5.911053657531738
    9. ' ' → logprob: -6.161053657531738
    10. ' yy' → logprob: -6.536053657531738

Token 119: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018097716383635998
    2. ' :' → logprob: -6.376809597015381
    3. ':x' → logprob: -10.751810073852539
    4. ':return' → logprob: -11.126810073852539
    5. ':y' → logprob: -11.126810073852539
    6. ':
' → logprob: -11.751810073852539
    7. '  ' → logprob: -12.251810073852539
    8. '   ' → logprob: -12.376810073852539
    9. '[' → logprob: -12.626810073852539
    10. '0' → logprob: -12.626810073852539

Token 120: ' min' (ID: 1349)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.33022621273994446
    2. 'xx' → logprob: -2.205226182937622
    3. 'yy' → logprob: -2.455226182937622
    4. '-' → logprob: -3.705226182937622
    5. 'y' → logprob: -4.580226421356201
    6. 'xy' → logprob: -4.705226421356201
    7. ' x' → logprob: -4.955226421356201
    8. '0' → logprob: -4.955226421356201
    9. '{x' → logprob: -5.080226421356201
    10. ' xx' → logprob: -5.705226421356201

Token 121: '(xx' (ID: 161745)
  Prédit: '(xx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xx' → logprob: -0.31779003143310547
    2. '(x' → logprob: -1.3177900314331055
    3. '(' → logprob: -5.8177900314331055
    4. '(y' → logprob: -7.1927900314331055
    5. '((' → logprob: -7.8177900314331055
    6. '}' → logprob: -8.942790031433105
    7. 'xx' → logprob: -9.067790031433105
    8. '([' → logprob: -10.442790031433105
    9. '}(' → logprob: -10.817790031433105
    10. '}}' → logprob: -11.442790031433105

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00879750493913889
    2. ',y' → logprob: -5.383797645568848
    3. ')}' → logprob: -7.008797645568848
    4. 'yy' → logprob: -7.633797645568848
    5. ')' → logprob: -7.758797645568848
    6. '})' → logprob: -8.258797645568848
    7. '+' → logprob: -8.258797645568848
    8. ' ,' → logprob: -8.258797645568848
    9. '(y' → logprob: -8.633797645568848
    10. '-' → logprob: -8.633797645568848

Token 123: 'yy' (ID: 7496)
  Prédit: 'yy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yy' → logprob: -0.00011343709047650918
    2. ' yy' → logprob: -9.375113487243652
    3. 'x' → logprob: -11.375113487243652
    4. ' ' → logprob: -12.125113487243652
    5. 'xy' → logprob: -12.375113487243652
    6. '	yy' → logprob: -12.500113487243652
    7. 'y' → logprob: -14.000113487243652
    8. 'yyy' → logprob: -14.125113487243652
    9. '   ' → logprob: -14.500113487243652
    10. '0' → logprob: -14.625113487243652

Token 124: ')}' (ID: 15468)
  Prédit: '}['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}[' → logprob: -0.24926894903182983
    2. '}}' → logprob: -1.7492690086364746
    3. '}' → logprob: -3.2492690086364746
    4. '}.' → logprob: -5.124269008636475
    5. ' }' → logprob: -6.749269008636475
    6. '   ' → logprob: -7.999269008636475
    7. ',' → logprob: -9.249268531799316
    8. '})' → logprob: -9.749268531799316
    9. '       ' → logprob: -10.124268531799316
    10. '}
' → logprob: -10.374268531799316

Token 125: '[' (ID: 58)
  Prédit: '}['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}[' → logprob: -0.010209664702415466
    2. '}' → logprob: -4.635209560394287
    3. '[' → logprob: -8.760210037231445
    4. '}.' → logprob: -9.010210037231445
    5. '}}' → logprob: -10.010210037231445
    6. '   ' → logprob: -10.635210037231445
    7. ' }' → logprob: -10.760210037231445
    8. '[x' → logprob: -11.135210037231445
    9. '.get' → logprob: -11.135210037231445
    10. '}
' → logprob: -11.260210037231445

Token 126: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07318269461393356
    2. 'y' → logprob: -3.1981825828552246
    3. 'xx' → logprob: -3.6981825828552246
    4. 'yy' → logprob: -6.448182582855225
    5. ' x' → logprob: -6.823182582855225
    6. '(x' → logprob: -6.823182582855225
    7. 'first' → logprob: -8.198183059692383
    8. ' y' → logprob: -8.448183059692383
    9. 'second' → logprob: -8.948183059692383
    10. ' xx' → logprob: -9.073183059692383

Token 127: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5914254784584045
    2. ' >' → logprob: -1.2164254188537598
    3. '<' → logprob: -2.5914254188537598
    4. ' <' → logprob: -3.3414254188537598
    5. '==' → logprob: -3.9664254188537598
    6. '>=' → logprob: -4.84142541885376
    7. ' ==' → logprob: -5.71642541885376
    8. '!=' → logprob: -6.21642541885376
    9. ' >=' → logprob: -6.21642541885376
    10. '<=' → logprob: -6.21642541885376

Token 128: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011216523125767708
    2. ' y' → logprob: -4.636216640472412
    3. '0' → logprob: -6.761216640472412
    4. 'x' → logprob: -9.386216163635254
    5. ' ' → logprob: -9.386216163635254
    6. '1' → logprob: -9.386216163635254
    7. 'None' → logprob: -11.636216163635254
    8. '   ' → logprob: -12.011216163635254
    9. ''y' → logprob: -12.698716163635254
    10. '  ' → logprob: -12.761216163635254

Token 129: ']}' (ID: 28000)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.2996046841144562
    2. '}}' → logprob: -1.4246046543121338
    3. ']}' → logprob: -4.799604892730713
    4. '})' → logprob: -4.924604892730713
    5. ']' → logprob: -7.049604892730713
    6. ')}' → logprob: -7.299604892730713
    7. '}]' → logprob: -8.049604415893555
    8. ' }' → logprob: -8.674604415893555
    9. '])' → logprob: -8.799604415893555
    10. '}
' → logprob: -8.924604415893555

Token 130: '[' (ID: 58)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26146507263183594
    2. '[' → logprob: -2.011465072631836
    3. '<|end|>' → logprob: -3.511465072631836
    4. '(first' → logprob: -4.261465072631836
    5. ',' → logprob: -4.386465072631836
    6. '(x' → logprob: -4.511465072631836
    7. '(True' → logprob: -4.761465072631836
    8. '[first' → logprob: -5.011465072631836
    9. ')' → logprob: -5.636465072631836
    10. '(
' → logprob: -6.136465072631836

Token 131: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.02355257049202919
    2. 'True' → logprob: -3.898552656173706
    3. 'False' → logprob: -6.273552417755127
    4. ' x' → logprob: -8.023552894592285
    5. '0' → logprob: -8.398552894592285
    6. 'xx' → logprob: -8.523552894592285
    7. 'first' → logprob: -8.648552894592285
    8. '(x' → logprob: -9.273552894592285
    9. ' True' → logprob: -10.523552894592285
    10. 'y' → logprob: -10.523552894592285

Token 132: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4199420213699341
    2. ' >' → logprob: -1.294942021369934
    3. '<' → logprob: -3.5449419021606445
    4. '==' → logprob: -3.6699419021606445
    5. ' <' → logprob: -5.0449419021606445
    6. '!=' → logprob: -5.0449419021606445
    7. ' ==' → logprob: -7.1699419021606445
    8. ' !=' → logprob: -7.5449419021606445
    9. ' ' → logprob: -9.419941902160645
    10. '>]' → logprob: -9.544941902160645

Token 133: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002809275174513459
    2. ' y' → logprob: -5.877809047698975
    3. '<|end|>' → logprob: -12.877809524536133
    4. ' ' → logprob: -14.377809524536133
    5. 'x' → logprob: -14.752809524536133
    6. '	y' → logprob: -15.127809524536133
    7. '<|end|>' → logprob: -15.252809524536133
    8. '>' → logprob: -17.377809524536133
    9. 'y's' → logprob: -17.502809524536133
    10. '0' → logprob: -17.752809524536133

Token 134: ']


' (ID: 52447)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01232256181538105
    2. ')]' → logprob: -4.512322425842285
    3. '])' → logprob: -8.137322425842285
    4. ' ]' → logprob: -8.137322425842285
    5. ')' → logprob: -8.512322425842285
    6. '}]' → logprob: -8.762322425842285
    7. ']}' → logprob: -9.137322425842285
    8. '}' → logprob: -10.012322425842285
    9. ']
' → logprob: -10.262322425842285
    10. '])]' → logprob: -10.262322425842285

Token 135: 'result' (ID: 2521)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06833158433437347
    2. 'result' → logprob: -2.943331480026245
    3. 'res' → logprob: -5.943331718444824
    4. 'for' → logprob: -6.068331718444824
    5. 'x' → logprob: -6.318331718444824
    6. 'ans' → logprob: -6.818331718444824
    7. 'first' → logprob: -6.943331718444824
    8. 'if' → logprob: -6.943331718444824
    9. 'a' → logprob: -7.318331718444824
    10. 'answer' → logprob: -7.443331718444824

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17980767786502838
    2. '=' → logprob: -1.8048076629638672
    3. ',' → logprob: -10.179807662963867
    4. '_' → logprob: -11.429807662963867
    5. 's' → logprob: -12.179807662963867
    6. ')' → logprob: -13.054807662963867
    7. ' =)' → logprob: -13.429807662963867
    8. ' =
' → logprob: -14.179807662963867
    9. ' ' → logprob: -14.304807662963867
    10. ':' → logprob: -14.429807662963867

Token 137: ' weird' (ID: 28783)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.4830628037452698
    2. 'we' → logprob: -0.9830628037452698
    3. ' reduce' → logprob: -6.108062744140625
    4. 'min' → logprob: -6.483062744140625
    5. 'max' → logprob: -6.983062744140625
    6. '0' → logprob: -7.108062744140625
    7. '[' → logprob: -7.108062744140625
    8. 'fun' → logprob: -7.608062744140625
    9. 'sum' → logprob: -7.608062744140625
    10. ' weird' → logprob: -7.983062744140625

Token 138: '_cmp' (ID: 86843)
  Prédit: '_cmp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cmp' → logprob: -1.5048530030981055e-06
    2. '_cm' → logprob: -14.000001907348633
    3. 'cmp' → logprob: -14.500001907348633
    4. '_' → logprob: -16.375001907348633
    5. 'Cmp' → logprob: -17.000001907348633
    6. '_cnt' → logprob: -19.000001907348633
    7. '_cp' → logprob: -19.125001907348633
    8. '_cpp' → logprob: -19.625001907348633
    9. '\' → logprob: -19.750001907348633
    10. '##_' → logprob: -20.125001907348633

Token 139: '(first' (ID: 31998)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05109415203332901
    2. '(first' → logprob: -3.0510940551757812
    3. 'Alpha' → logprob: -7.176094055175781
    4. '(j' → logprob: -7.426094055175781
    5. 'first' → logprob: -7.426094055175781
    6. '((' → logprob: -9.051094055175781
    7. '(len' → logprob: -9.176094055175781
    8. '(
' → logprob: -9.801094055175781
    9. '(alpha' → logprob: -9.926094055175781
    10. '(second' → logprob: -10.051094055175781

Token 140: 'Num' (ID: 5702)
  Prédit: 'Num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -1.1472419600977446e-06
    2. 'num' → logprob: -14.375000953674316
    3. 'N' → logprob: -15.625000953674316
    4. ' Num' → logprob: -15.750000953674316
    5. ',' → logprob: -16.625001907348633
    6. 'NUM' → logprob: -17.750001907348633
    7. '_Num' → logprob: -17.750001907348633
    8. 'Nums' → logprob: -17.875001907348633
    9. 'Nu' → logprob: -18.000001907348633
    10. '_num' → logprob: -18.625001907348633

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006190311978571117
    2. ' ,' → logprob: -7.500618934631348
    3. ',
' → logprob: -11.000618934631348
    4. '[' → logprob: -11.625618934631348
    5. ' ' → logprob: -11.750618934631348
    6. 'second' → logprob: -12.375618934631348
    7. '+' → logprob: -12.625618934631348
    8. ' +' → logprob: -12.625618934631348
    9. ',j' → logprob: -12.750618934631348
    10. ',last' → logprob: -12.875618934631348

Token 142: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.0002497767563909292
    2. ' second' → logprob: -8.375249862670898
    3. 'Alpha' → logprob: -11.375249862670898
    4. 'Second' → logprob: -12.875249862670898
    5. 'Beta' → logprob: -12.875249862670898
    6. '
' → logprob: -14.125249862670898
    7. 'alpha' → logprob: -14.625249862670898
    8. '   ' → logprob: -15.125249862670898
    9. 'beta' → logprob: -15.375249862670898
    10. 'first' → logprob: -15.500249862670898

Token 143: 'Num' (ID: 5702)
  Prédit: 'Num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Num' → logprob: -4.1080467781284824e-05
    2. 'num' → logprob: -10.125041007995605
    3. ' Num' → logprob: -14.625041007995605
    4. 'Nums' → logprob: -16.250041961669922
    5. '_num' → logprob: -16.500041961669922
    6. 'second' → logprob: -17.000041961669922
    7. 'Nu' → logprob: -17.125041961669922
    8. ' ' → logprob: -17.250041961669922
    9. 'um' → logprob: -17.375041961669922
    10. 'N' → logprob: -17.500041961669922

Token 144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007922452874481678
    2. ' ,' → logprob: -4.882922649383545
    3. 'Alpha' → logprob: -8.882922172546387
    4. ',j' → logprob: -9.257922172546387
    5. ',
' → logprob: -10.382922172546387
    6. ',result' → logprob: -11.882922172546387
    7. '   ' → logprob: -12.382922172546387
    8. ' Alpha' → logprob: -12.507922172546387
    9. ',B' → logprob: -12.632922172546387
    10. ')' → logprob: -12.632922172546387

Token 145: ' Alpha' (ID: 41382)
  Prédit: 'Alpha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Alpha' → logprob: -0.001559139578603208
    2. 'Beta' → logprob: -6.876559257507324
    3. ' Alpha' → logprob: -8.376559257507324
    4. 'sum' → logprob: -9.126559257507324
    5. 'int' → logprob: -9.751559257507324
    6. 'alpha' → logprob: -10.626559257507324
    7. ' ' → logprob: -11.001559257507324
    8. 'second' → logprob: -11.126559257507324
    9. 'junk' → logprob: -11.126559257507324
    10. 'first' → logprob: -11.251559257507324

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019558717031031847
    2. ' ,' → logprob: -6.376955986022949
    3. ',B' → logprob: -8.37695598602295
    4. '+' → logprob: -11.75195598602295
    5. ' +' → logprob: -12.75195598602295
    6. 'Beta' → logprob: -12.75195598602295
    7. ',b' → logprob: -13.37695598602295
    8. '-' → logprob: -13.50195598602295
    9. ',
' → logprob: -13.87695598602295
    10. ' ' → logprob: -14.00195598602295

Token 147: ' Beta' (ID: 55085)
  Prédit: 'Beta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Beta' → logprob: -0.00012403888104017824
    2. ' Beta' → logprob: -9.000123977661133
    3. 'Bet' → logprob: -15.375123977661133
    4. '   ' → logprob: -16.250123977661133
    5. ' ' → logprob: -17.250123977661133
    6. 'B' → logprob: -17.375123977661133
    7. 'beta' → logprob: -17.375123977661133
    8. 'Bravo' → logprob: -17.875123977661133
    9. 'Alpha' → logprob: -18.375123977661133
    10. 'Beth' → logprob: -19.000123977661133

Token 148: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -13.375003814697266
    3. '))' → logprob: -14.000003814697266
    4. ' )' → logprob: -14.500003814697266
    5. ')`' → logprob: -15.750003814697266
    6. ')return' → logprob: -17.000003814697266
    7. ')#' → logprob: -17.375003814697266
    8. ')}' → logprob: -17.625003814697266
    9. '),' → logprob: -17.750003814697266
    10. 'print' → logprob: -18.000003814697266

Token 149: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.5
    3. 'result' → logprob: -17.625
    4. 'pr' → logprob: -19.125
    5. 'prin' → logprob: -22.0
    6. 'return' → logprob: -22.125
    7. '#print' → logprob: -22.25
    8. ')' → logprob: -22.375
    9. 'for' → logprob: -22.75
    10. '(print' → logprob: -22.875

Token 150: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.002585051115602255
    2. '(' → logprob: -6.002584934234619
    3. 'result' → logprob: -9.127585411071777
    4. '(
' → logprob: -15.627585411071777
    5. '()' → logprob: -15.752585411071777
    6. ' (' → logprob: -16.00258445739746
    7. '(results' → logprob: -16.12758445739746
    8. '=result' → logprob: -17.00258445739746
    9. '((' → logprob: -17.12758445739746
    10. '(resultado' → logprob: -17.50258445739746

Token 151: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2664456789934775e-06
    2. '))' → logprob: -14.250000953674316
    3. ' )' → logprob: -14.750000953674316
    4. ')
' → logprob: -15.875000953674316
    5. ')`' → logprob: -17.000001907348633
    6. ')#' → logprob: -17.625001907348633
    7. ')}' → logprob: -18.500001907348633
    8. '#' → logprob: -18.875001907348633
    9. '),' → logprob: -19.375001907348633
    10. '())' → logprob: -19.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 149
Tokens correctement prédits (1ère position, stricte): 55
Tokens correctement prédits (1ère position, avec adaptation): 55
Tokens correctement prédits (top 10): 102
Précision stricte (1ère position): 36.91%
Précision adaptée (1ère position): 36.91%
Précision (top 10): 68.46%
================================================================================
