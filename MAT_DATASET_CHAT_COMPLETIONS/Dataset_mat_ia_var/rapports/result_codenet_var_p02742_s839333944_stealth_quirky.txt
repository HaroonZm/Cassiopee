================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
_ = lambda: (lambda a, b: [1, (a*b+1)//2][a>1<b])(*map(int, input().split()))
print(_())
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '_' (ID: 62)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' lambda' (ID: 27871)
  → Token d'amorce (pas de prédiction)

Token 3: ':' (ID: 25)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5419309735298157
    2. ' x' → logprob: -1.416930913925171
    3. '_' → logprob: -3.416930913925171
    4. ' :' → logprob: -3.541930913925171
    5. ' _' → logprob: -3.791930913925171
    6. ' a' → logprob: -3.916930913925171
    7. ' f' → logprob: -4.04193115234375
    8. ' _:' → logprob: -4.16693115234375
    9. '  ' → logprob: -4.66693115234375
    10. ' s' → logprob: -4.79193115234375

Token 4: ' (' (ID: 350)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.4877723455429077
    2. ' ' → logprob: -2.1127724647521973
    3. ' True' → logprob: -2.2377724647521973
    4. 'None' → logprob: -2.3627724647521973
    5. '<|end|>' → logprob: -3.9877724647521973
    6. ' (' → logprob: -4.362772464752197
    7. '(' → logprob: -4.737772464752197
    8. '0' → logprob: -5.362772464752197
    9. '_' → logprob: -5.862772464752197
    10. '...' → logprob: -6.112772464752197

Token 5: 'lambda' (ID: 35280)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027874860912561417
    2. '<|end|>' → logprob: -4.527874946594238
    3. '0' → logprob: -5.027874946594238
    4. '[]' → logprob: -6.027874946594238
    5. 'lambda' → logprob: -6.277874946594238
    6. '1' → logprob: -7.027874946594238
    7. '(lambda' → logprob: -7.527874946594238
    8. '()' → logprob: -7.652874946594238
    9. '(' → logprob: -7.652874946594238
    10. 'x' → logprob: -8.027874946594238

Token 6: ' a' (ID: 261)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2156813144683838
    2. ' x' → logprob: -1.7156813144683838
    3. ':' → logprob: -2.590681314468384
    4. ' lambda' → logprob: -2.715681314468384
    5. ' (' → logprob: -2.715681314468384
    6. ' :' → logprob: -2.715681314468384
    7. ' _' → logprob: -2.840681314468384
    8. ' _:' → logprob: -2.840681314468384
    9. '(' → logprob: -3.465681314468384
    10. ' n' → logprob: -3.715681314468384

Token 7: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5639314651489258
    2. ' ,' → logprob: -1.5639314651489258
    3. ' a' → logprob: -3.313931465148926
    4. ' :' → logprob: -3.313931465148926
    5. ' ' → logprob: -3.438931465148926
    6. 'a' → logprob: -3.813931465148926
    7. ':' → logprob: -3.938931465148926
    8. '_' → logprob: -3.938931465148926
    9. ' _' → logprob: -4.188931465148926
    10. ',a' → logprob: -5.063931465148926

Token 8: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5250257849693298
    2. 'b' → logprob: -0.9000257849693298
    3. '_' → logprob: -7.650025844573975
    4. 'a' → logprob: -8.650025367736816
    5. ' ' → logprob: -8.775025367736816
    6. ' lambda' → logprob: -8.775025367736816
    7. ' _' → logprob: -9.025025367736816
    8. ' a' → logprob: -9.025025367736816
    9. ':' → logprob: -9.275025367736816
    10. '_b' → logprob: -9.900025367736816

Token 9: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03452122583985329
    2. ' :' → logprob: -4.034521102905273
    3. ',' → logprob: -4.159521102905273
    4. ' ,' → logprob: -8.284521102905273
    5. '=' → logprob: -9.409521102905273
    6. ',:' → logprob: -9.909521102905273
    7. ',a' → logprob: -10.034521102905273
    8. 'a' → logprob: -10.909521102905273
    9. '_:' → logprob: -10.909521102905273
    10. ':,' → logprob: -10.909521102905273

Token 10: ' [' (ID: 723)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.27001258730888367
    2. 'a' → logprob: -1.520012617111206
    3. ' b' → logprob: -4.645012378692627
    4. 'b' → logprob: -5.645012378692627
    5. '(a' → logprob: -6.020012378692627
    6. ' (' → logprob: -6.395012378692627
    7. ' ' → logprob: -8.520012855529785
    8. ' None' → logprob: -8.770012855529785
    9. 'None' → logprob: -10.395012855529785
    10. ' True' → logprob: -10.645012855529785

Token 11: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.028732741251587868
    2. ' a' → logprob: -3.6537327766418457
    3. 'i' → logprob: -6.903732776641846
    4. '(a' → logprob: -7.528732776641846
    5. 'x' → logprob: -8.278732299804688
    6. 'b' → logprob: -8.903732299804688
    7. '[a' → logprob: -9.153732299804688
    8. '   ' → logprob: -9.778732299804688
    9. ' i' → logprob: -9.903732299804688
    10. ' (' → logprob: -10.028732299804688

Token 12: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1173958033323288
    2. ' ,' → logprob: -2.6173958778381348
    3. '+' → logprob: -3.8673958778381348
    4. ' +' → logprob: -4.617395877838135
    5. ',a' → logprob: -6.117395877838135
    6. '+a' → logprob: -6.992395877838135
    7. ' ' → logprob: -7.242395877838135
    8. 'a' → logprob: -7.492395877838135
    9. ' for' → logprob: -7.742395877838135
    10. ' a' → logprob: -7.992395877838135

Token 13: ' (' (ID: 350)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.424913614988327
    2. 'a' → logprob: -1.2999136447906494
    3. ' ' → logprob: -3.5499136447906494
    4. '2' → logprob: -3.5499136447906494
    5. ' b' → logprob: -4.92491340637207
    6. '0' → logprob: -6.17491340637207
    7. 'b' → logprob: -6.29991340637207
    8. '1' → logprob: -6.79991340637207
    9. ' c' → logprob: -7.29991340637207
    10. 'c' → logprob: -7.29991340637207

Token 14: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03448943793773651
    2. ' a' → logprob: -3.659489393234253
    3. 'b' → logprob: -5.284489631652832
    4. '_' → logprob: -6.909489631652832
    5. ' b' → logprob: -7.409489631652832
    6. ' ' → logprob: -7.909489631652832
    7. 'lambda' → logprob: -8.534489631652832
    8. '1' → logprob: -8.659489631652832
    9. '0' → logprob: -9.159489631652832
    10. ')' → logprob: -9.284489631652832

Token 15: '*b' (ID: 72162)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9342188239097595
    2. ' +' → logprob: -1.1842188835144043
    3. ' ,' → logprob: -1.8092188835144043
    4. '+' → logprob: -2.3092188835144043
    5. '+b' → logprob: -3.9342188835144043
    6. ',b' → logprob: -5.309218883514404
    7. ' ' → logprob: -5.434218883514404
    8. ' -' → logprob: -6.559218883514404
    9. '*' → logprob: -6.559218883514404
    10. '-' → logprob: -6.809218883514404

Token 16: '+' (ID: 10)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.5908663272857666
    2. ')' → logprob: -1.0908663272857666
    3. '),' → logprob: -2.7158663272857666
    4. ')]' → logprob: -4.3408660888671875
    5. ' )' → logprob: -4.4658660888671875
    6. ',' → logprob: -4.4658660888671875
    7. '**' → logprob: -6.3408660888671875
    8. '+' → logprob: -6.7158660888671875
    9. ')**' → logprob: -7.2158660888671875
    10. ' +' → logprob: -7.3408660888671875

Token 17: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1219443082809448
    2. 'b' → logprob: -1.1219443082809448
    3. ' b' → logprob: -2.2469444274902344
    4. 'a' → logprob: -2.3719444274902344
    5. '2' → logprob: -2.4969444274902344
    6. ' a' → logprob: -3.6219444274902344
    7. ' ' → logprob: -3.7469444274902344
    8. '0' → logprob: -5.121944427490234
    9. 'c' → logprob: -5.996944427490234
    10. ')' → logprob: -6.746944427490234

Token 18: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5038248896598816
    2. ')])' → logprob: -1.6288249492645264
    3. '),' → logprob: -1.7538249492645264
    4. ')]' → logprob: -4.503824710845947
    5. ' )' → logprob: -4.753824710845947
    6. ')+' → logprob: -6.878824710845947
    7. ' ),' → logprob: -7.253824710845947
    8. ')%' → logprob: -7.378824710845947
    9. ',' → logprob: -7.378824710845947
    10. ')*' → logprob: -7.503824710845947

Token 19: '2' (ID: 17)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.026192540302872658
    2. '2' → logprob: -3.9011924266815186
    3. ' b' → logprob: -5.276192665100098
    4. ' ' → logprob: -8.401192665100098
    5. 'a' → logprob: -9.151192665100098
    6. '3' → logprob: -9.651192665100098
    7. '(' → logprob: -10.401192665100098
    8. '1' → logprob: -10.776192665100098
    9. ')b' → logprob: -10.901192665100098
    10. '  ' → logprob: -11.276192665100098

Token 20: '][' (ID: 2696)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.7193926572799683
    2. ',' → logprob: -1.2193926572799683
    3. ')' → logprob: -2.344392776489258
    4. ' ])' → logprob: -3.344392776489258
    5. ')])' → logprob: -3.719392776489258
    6. ' ,' → logprob: -3.719392776489258
    7. ']' → logprob: -4.344392776489258
    8. ' )' → logprob: -4.344392776489258
    9. ' ]' → logprob: -5.844392776489258
    10. ')]' → logprob: -5.969392776489258

Token 21: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4596027135848999
    2. 'b' → logprob: -1.2096027135849
    3. ' a' → logprob: -3.4596028327941895
    4. ' b' → logprob: -3.7096028327941895
    5. '0' → logprob: -4.5846028327941895
    6. '1' → logprob: -6.5846028327941895
    7. '(a' → logprob: -7.0846028327941895
    8. ' ' → logprob: -7.3346028327941895
    9. ' not' → logprob: -8.084602355957031
    10. '_' → logprob: -8.334602355957031

Token 22: '>' (ID: 29)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.895205020904541
    2. '==' → logprob: -1.895205020904541
    3. '&' → logprob: -2.520205020904541
    4. '>' → logprob: -2.645205020904541
    5. ' >' → logprob: -2.645205020904541
    6. ' ==' → logprob: -2.645205020904541
    7. '>b' → logprob: -3.645205020904541
    8. ' %' → logprob: -3.895205020904541
    9. '|' → logprob: -4.145205020904541
    10. '!=' → logprob: -4.270205020904541

Token 23: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02978995256125927
    2. ' b' → logprob: -3.529789924621582
    3. '0' → logprob: -10.779789924621582
    4. ' ' → logprob: -12.029789924621582
    5. '1' → logprob: -12.404789924621582
    6. '>b' → logprob: -12.904789924621582
    7. '=' → logprob: -13.404789924621582
    8. '=b' → logprob: -13.654789924621582
    9. '5' → logprob: -14.529789924621582
    10. '2' → logprob: -14.779789924621582

Token 24: '<b' (ID: 81814)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.2013252228498459
    2. ')' → logprob: -2.0763251781463623
    3. ']' → logprob: -3.5763251781463623
    4. ' ])' → logprob: -5.076325416564941
    5. ']>' → logprob: -5.201325416564941
    6. '>)' → logprob: -5.576325416564941
    7. ' and' → logprob: -5.826325416564941
    8. '>' → logprob: -6.076325416564941
    9. ')])' → logprob: -6.326325416564941
    10. ' )' → logprob: -6.701325416564941

Token 25: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.051888108253479004
    2. ']' → logprob: -3.5518879890441895
    3. ')' → logprob: -4.8018879890441895
    4. ']>' → logprob: -5.5518879890441895
    5. ')]' → logprob: -5.9268879890441895
    6. ')])' → logprob: -5.9268879890441895
    7. '>' → logprob: -6.5518879890441895
    8. '>)' → logprob: -7.6768879890441895
    9. '],' → logprob: -8.301888465881348
    10. ')>' → logprob: -8.426888465881348

Token 26: '(*' (ID: 9000)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.845048725605011
    2. '(' → logprob: -1.2200486660003662
    3. '_' → logprob: -1.4700486660003662
    4. '[' → logprob: -3.595048666000366
    5. ',' → logprob: -4.720048904418945
    6. ' ' → logprob: -5.345048904418945
    7. ' (' → logprob: -6.345048904418945
    8. '<|end|>' → logprob: -7.595048904418945
    9. '(
' → logprob: -8.595048904418945
    10. ']' → logprob: -8.720048904418945

Token 27: 'map' (ID: 3726)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7287712693214417
    2. '2' → logprob: -1.2287712097167969
    3. '0' → logprob: -2.103771209716797
    4. '_' → logprob: -3.228771209716797
    5. 'a' → logprob: -4.228771209716797
    6. ' ' → logprob: -4.478771209716797
    7. '_,' → logprob: -4.978771209716797
    8. '4' → logprob: -5.228771209716797
    9. ')' → logprob: -5.728771209716797
    10. '3' → logprob: -5.728771209716797

Token 28: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20849241316318512
    2. '(int' → logprob: -1.833492398262024
    3. ' int' → logprob: -4.208492279052734
    4. 'str' → logprob: -5.583492279052734
    5. 'input' → logprob: -5.833492279052734
    6. 'lambda' → logprob: -6.583492279052734
    7. '(lambda' → logprob: -7.208492279052734
    8. '(' → logprob: -7.458492279052734
    9. 'list' → logprob: -7.458492279052734
    10. '(str' → logprob: -7.833492279052734

Token 29: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.48231998085975647
    2. 'input' → logprob: -1.982319951057434
    3. ')' → logprob: -2.6073200702667236
    4. '(' → logprob: -3.2323200702667236
    5. ' input' → logprob: -3.2323200702667236
    6. ',' → logprob: -3.7323200702667236
    7. '<|end|>' → logprob: -3.7323200702667236
    8. ',input' → logprob: -4.3573198318481445
    9. '_input' → logprob: -4.9823198318481445
    10. '...' → logprob: -5.7323198318481445

Token 30: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.11503902077674866
    2. ' input' → logprob: -2.240039110183716
    3. '(input' → logprob: -6.615038871765137
    4. ')' → logprob: -7.865038871765137
    5. '_' → logprob: -8.865038871765137
    6. ',input' → logprob: -9.365038871765137
    7. '_)' → logprob: -9.865038871765137
    8. '=input' → logprob: -9.990038871765137
    9. '_input' → logprob: -10.365038871765137
    10. 'raw' → logprob: -10.990038871765137

Token 31: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.04069787263870239
    2. '()' → logprob: -3.2906978130340576
    3. '()))' → logprob: -6.415698051452637
    4. '())' → logprob: -7.040698051452637
    5. '()));' → logprob: -10.290698051452637
    6. '())))' → logprob: -10.540698051452637
    7. '());' → logprob: -11.165698051452637
    8. '(' → logprob: -11.665698051452637
    9. '(()' → logprob: -11.915698051452637
    10. ')' → logprob: -12.290698051452637

Token 32: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00014978687977418303
    2. ' split' → logprob: -9.000149726867676
    3. 'strip' → logprob: -10.875149726867676
    4. 'rstrip' → logprob: -13.000149726867676
    5. '(split' → logprob: -13.250149726867676
    6. 'spl' → logprob: -13.625149726867676
    7. '_split' → logprob: -14.250149726867676
    8. ')' → logprob: -14.625149726867676
    9. '```' → logprob: -15.375149726867676
    10. '().' → logprob: -15.625149726867676

Token 33: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.08255920559167862
    2. '())' → logprob: -2.707559108734131
    3. '()' → logprob: -4.957559108734131
    4. '))' → logprob: -5.332559108734131
    5. ')' → logprob: -8.707559585571289
    6. '()))
' → logprob: -8.832559585571289
    7. '(' → logprob: -8.957559585571289
    8. '()));' → logprob: -9.832559585571289
    9. '()))

' → logprob: -10.082559585571289
    10. '()),' → logprob: -10.082559585571289

Token 34: 'print' (ID: 1598)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3861420154571533
    2. ')' → logprob: -1.2611420154571533
    3. '<|end|>' → logprob: -3.8861420154571533
    4. '_' → logprob: -4.886141777038574
    5. '(
' → logprob: -6.011141777038574
    6. ':' → logprob: -6.511141777038574
    7. ' ' → logprob: -7.011141777038574
    8. '#' → logprob: -7.261141777038574
    9. '()' → logprob: -7.636141777038574
    10. '```' → logprob: -7.761141777038574

Token 35: '(_' (ID: 4963)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.42025041580200195
    2. '(_)' → logprob: -1.295250415802002
    3. '(_' → logprob: -2.795250415802002
    4. '((' → logprob: -5.420250415802002
    5. '_' → logprob: -6.420250415802002
    6. '(_,' → logprob: -8.170249938964844
    7. '("_' → logprob: -8.170249938964844
    8. '('_' → logprob: -8.295249938964844
    9. '('' → logprob: -8.420249938964844
    10. '(_.' → logprob: -8.420249938964844

Token 36: '())' (ID: 3516)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6530362963676453
    2. ')' → logprob: -0.9030362963676453
    3. '())' → logprob: -2.77803635597229
    4. '()))' → logprob: -4.903036117553711
    5. '()' → logprob: -6.028036117553711
    6. '_)' → logprob: -7.028036117553711
    7. '_' → logprob: -7.403036117553711
    8. '(' → logprob: -7.903036117553711
    9. ')_' → logprob: -8.778036117553711
    10. ')))' → logprob: -10.653036117553711


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 34
Tokens correctement prédits (1ère position, stricte): 10
Tokens correctement prédits (1ère position, avec adaptation): 10
Tokens correctement prédits (top 10): 22
Précision stricte (1ère position): 29.41%
Précision adaptée (1ère position): 29.41%
Précision (top 10): 64.71%
================================================================================
