================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:15:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def p(s):
    if s == "ABC":
        return "ARC"
    return "ABC"
class Swapper:
    def swap(self):
        s = input()
        print(p(s))
Swapper().swap()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' p' (ID: 275)
  → Token d'amorce (pas de prédiction)

Token 2: '(s' (ID: 1858)
  → Token d'amorce (pas de prédiction)

Token 3: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011729400604963303
    2. ')' → logprob: -4.7617292404174805
    3. ',' → logprob: -7.0117292404174805
    4. ':' → logprob: -7.2617292404174805
    5. '[' → logprob: -7.6367292404174805
    6. 'u' → logprob: -8.51172924041748
    7. '(' → logprob: -8.76172924041748
    8. 'e' → logprob: -9.01172924041748
    9. ' ):' → logprob: -9.01172924041748
    10. 'ur' → logprob: -9.38672924041748

Token 4: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31140562891960144
    2. '(' → logprob: -1.9364056587219238
    3. '   ' → logprob: -2.311405658721924
    4. ' return' → logprob: -5.686405658721924
    5. ':return' → logprob: -5.686405658721924
    6. 'return' → logprob: -5.936405658721924
    7. '():' → logprob: -5.936405658721924
    8. ' :' → logprob: -6.061405658721924
    9. '):' → logprob: -6.561405658721924
    10. '.' → logprob: -6.686405658721924

Token 5: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16967004537582397
    2. 'r' → logprob: -2.5446701049804688
    3. 'print' → logprob: -3.4196701049804688
    4. 's' → logprob: -3.7946701049804688
    5. '   ' → logprob: -4.669670104980469
    6. 'p' → logprob: -4.919670104980469
    7. ' return' → logprob: -5.794670104980469
    8. 'f' → logprob: -7.919670104980469
    9. 'a' → logprob: -8.544670104980469
    10. '```' → logprob: -8.669670104980469

Token 6: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.027005912736058235
    2. ' ' → logprob: -3.902005910873413
    3. 's' → logprob: -5.527006149291992
    4. ' not' → logprob: -6.027006149291992
    5. '  ' → logprob: -11.027006149291992
    6. ' a' → logprob: -11.652006149291992
    7. 'not' → logprob: -11.777006149291992
    8. ' p' → logprob: -12.277006149291992
    9. ' isinstance' → logprob: -12.402006149291992
    10. ' (' → logprob: -12.902006149291992

Token 7: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8253092169761658
    2. '[' → logprob: -1.2003092765808105
    3. '.' → logprob: -1.9503092765808105
    4. '==' → logprob: -2.3253092765808105
    5. '.startswith' → logprob: -5.2003092765808105
    6. ' ' → logprob: -5.9503092765808105
    7. ' .' → logprob: -6.2003092765808105
    8. '=' → logprob: -6.3253092765808105
    9. ')' → logprob: -6.4503092765808105
    10. '.endswith' → logprob: -6.8253092765808105

Token 8: ' "' (ID: 392)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5291071534156799
    2. '"' → logprob: -0.9041071534156799
    3. ' '' → logprob: -6.529107093811035
    4. '''' → logprob: -6.654107093811035
    5. ' ' → logprob: -7.154107093811035
    6. '1' → logprob: -7.404107093811035
    7. '0' → logprob: -7.654107093811035
    8. '""' → logprob: -7.654107093811035
    9. ' True' → logprob: -8.654107093811035
    10. ''s' → logprob: -8.654107093811035

Token 9: 'ABC' (ID: 44197)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.41657546162605286
    2. '":' → logprob: -2.2915754318237305
    3. '"' → logprob: -2.5415754318237305
    4. '0' → logprob: -3.2915754318237305
    5. '\n' → logprob: -4.0415754318237305
    6. 'a' → logprob: -4.1665754318237305
    7. 'hello' → logprob: -4.1665754318237305
    8. '1' → logprob: -5.1665754318237305
    9. '(":' → logprob: -5.1665754318237305
    10. '':' → logprob: -5.2915754318237305

Token 10: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":' → logprob: -0.02572733536362648
    2. '"' → logprob: -3.7757272720336914
    3. '"):' → logprob: -6.650727272033691
    4. '":
' → logprob: -7.275727272033691
    5. ':' → logprob: -8.400727272033691
    6. '"):
' → logprob: -9.525727272033691
    7. '")' → logprob: -9.650727272033691
    8. '":
' → logprob: -9.900727272033691
    9. '```' → logprob: -10.525727272033691
    10. '):' → logprob: -11.025727272033691

Token 11: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12199610471725464
    2. ':' → logprob: -2.2469961643218994
    3. '\n' → logprob: -5.99699592590332
    4. '\' → logprob: -6.49699592590332
    5. ' return' → logprob: -6.74699592590332
    6. ':
' → logprob: -7.12199592590332
    7. '   ' → logprob: -7.24699592590332
    8. ' :' → logprob: -7.74699592590332
    9. '):' → logprob: -8.37199592590332
    10. ':return' → logprob: -8.37199592590332

Token 12: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7915087938308716
    2. ' return' → logprob: -1.4165087938308716
    3. '           ' → logprob: -1.7915087938308716
    4. 'return' (adapté à ' return') → logprob: -2.041508674621582
    5. '\n' → logprob: -5.541508674621582
    6. '   ' → logprob: -6.041508674621582
    7. '```' → logprob: -7.916508674621582
    8. '\' → logprob: -8.416508674621582
    9. ' 
' → logprob: -9.541508674621582
    10. ' ' → logprob: -9.541508674621582

Token 13: ' "' (ID: 392)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.6478123068809509
    2. ' ' → logprob: -1.3978123664855957
    3. '"' → logprob: -1.8978123664855957
    4. 'None' → logprob: -3.6478123664855957
    5. ''' → logprob: -3.8978123664855957
    6. ' True' → logprob: -4.647812366485596
    7. 's' → logprob: -5.147812366485596
    8. ' s' → logprob: -5.272812366485596
    9. ' 
' → logprob: -5.522812366485596
    10. ' "' → logprob: -6.022812366485596

Token 14: 'ARC' (ID: 64758)
  Prédit: 'ABC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.5642244219779968
    2. '123' → logprob: -1.9392244815826416
    3. 'XYZ' → logprob: -2.1892244815826416
    4. 'DEF' → logprob: -2.9392244815826416
    5. 'abc' → logprob: -3.0642244815826416
    6. 'A' → logprob: -3.8142244815826416
    7. 'YES' → logprob: -4.0642242431640625
    8. '"' → logprob: -4.9392242431640625
    9. 'def' → logprob: -5.4392242431640625
    10. 'xyz' → logprob: -5.6892242431640625

Token 15: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00408801669254899
    2. '"}' → logprob: -6.254087924957275
    3. '"""' → logprob: -7.629087924957275
    4. 'A' → logprob: -8.254088401794434
    5. '"A' → logprob: -8.504088401794434
    6. '"B' → logprob: -8.879088401794434
    7. '"C' → logprob: -9.004088401794434
    8. '")' → logprob: -9.254088401794434
    9. 'D' → logprob: -9.504088401794434
    10. 'B' → logprob: -9.504088401794434

Token 16: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7186636924743652
    2. '   ' → logprob: -1.2186636924743652
    3. '    
' → logprob: -2.4686636924743652
    4. '\n' → logprob: -2.8436636924743652
    5. '  
' → logprob: -3.9686636924743652
    6. '\' → logprob: -4.093663692474365
    7. ' ' → logprob: -5.343663692474365
    8. ')' → logprob: -5.593663692474365
    9. '```' → logprob: -5.718663692474365
    10. '' → logprob: -6.093663692474365

Token 17: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4126865565776825
    2. '
' → logprob: -1.9126865863800049
    3. '\n' → logprob: -3.037686586380005
    4. '    
' → logprob: -3.537686586380005
    5. ' ' → logprob: -3.662686586380005
    6. '  
' → logprob: -3.912686586380005
    7. 'n' → logprob: -4.162686347961426
    8. '\' → logprob: -4.912686347961426
    9. ' 
' → logprob: -5.287686347961426
    10. ')' → logprob: -5.412686347961426

Token 18: ' "' (ID: 392)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.21596042811870575
    2. '"' → logprob: -2.8409605026245117
    3. ' ' → logprob: -2.8409605026245117
    4. 'None' → logprob: -3.3409605026245117
    5. ' s' → logprob: -4.090960502624512
    6. 's' → logprob: -4.340960502624512
    7. ' ""' → logprob: -5.465960502624512
    8. ' "' → logprob: -5.590960502624512
    9. '""' → logprob: -6.340960502624512
    10. ''' → logprob: -6.840960502624512

Token 19: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.472405344247818
    2. 'ABD' → logprob: -2.472405433654785
    3. 'BCD' → logprob: -3.097405433654785
    4. 'ARC' → logprob: -3.097405433654785
    5. 'ABS' → logprob: -3.347405433654785
    6. 'B' → logprob: -3.722405433654785
    7. 'AB' → logprob: -3.972405433654785
    8. '"' → logprob: -3.972405433654785
    9. 'A' → logprob: -4.097405433654785
    10. 's' → logprob: -4.722405433654785

Token 20: '"
' (ID: 1092)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -2.8921695047756657e-05
    2. '"
' → logprob: -10.875028610229492
    3. '```' → logprob: -11.750028610229492
    4. '\n' → logprob: -14.625028610229492
    5. '"

' → logprob: -14.750028610229492
    6. '"""' → logprob: -14.875028610229492
    7. ''' → logprob: -15.625028610229492
    8. '"\' → logprob: -16.250028610229492
    9. '<|end|>' → logprob: -16.250028610229492
    10. '")' → logprob: -16.500028610229492

Token 21: 'class' (ID: 1444)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05239243432879448
    2. '<|end|>' → logprob: -4.177392482757568
    3. ')' → logprob: -4.427392482757568
    4. '#' → logprob: -5.302392482757568
    5. '(
' → logprob: -5.552392482757568
    6. '```' → logprob: -5.802392482757568
    7. '\' → logprob: -6.302392482757568
    8. '\n' → logprob: -6.427392482757568
    9. '
' → logprob: -6.552392482757568
    10. 'p' → logprob: -6.552392482757568

Token 22: ' Sw' (ID: 6529)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.026656251400709152
    2. ' A' → logprob: -4.401656150817871
    3. 'A' → logprob: -5.276656150817871
    4. ' My' → logprob: -5.526656150817871
    5. ' C' → logprob: -7.151656150817871
    6. 'C' → logprob: -7.276656150817871
    7. ' Space' → logprob: -7.276656150817871
    8. ' User' → logprob: -7.401656150817871
    9. '<|end|>' → logprob: -7.401656150817871
    10. ' Processor' → logprob: -9.026656150817871

Token 23: 'apper' (ID: 47156)
  Prédit: 'itch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'itch' → logprob: -0.14219999313354492
    2. 'ift' → logprob: -2.767199993133545
    3. 'atch' → logprob: -3.267199993133545
    4. 'e' → logprob: -4.767199993133545
    5. 'agger' → logprob: -5.392199993133545
    6. 'a' → logprob: -5.392199993133545
    7. '   ' → logprob: -5.767199993133545
    8. 'at' → logprob: -6.892199993133545
    9. 'i' → logprob: -7.142199993133545
    10. 'ash' → logprob: -7.142199993133545

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10084057599306107
    2. '(' → logprob: -2.3508405685424805
    3. '(:' → logprob: -8.72584056854248
    4. ':
' → logprob: -9.22584056854248
    5. '():' → logprob: -9.35084056854248
    6. '.' → logprob: -9.60084056854248
    7. ''s' → logprob: -10.22584056854248
    8. ' :' → logprob: -10.35084056854248
    9. '):' → logprob: -10.85084056854248
    10. '(S' → logprob: -11.10084056854248

Token 25: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5251549482345581
    2. ' 
' → logprob: -1.900154948234558
    3. '   ' → logprob: -2.1501550674438477
    4. '(' → logprob: -3.5251550674438477
    5. '    ' → logprob: -3.5251550674438477
    6. '<|end|>' → logprob: -3.6501550674438477
    7. '    
' → logprob: -3.7751550674438477
    8. ' (' → logprob: -5.275155067443848
    9. '\' → logprob: -5.400155067443848
    10. '  
' → logprob: -5.650155067443848

Token 26: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.17776036262512207
    2. '   ' → logprob: -2.052760362625122
    3. 'def' (adapté à ' def') → logprob: -3.427760362625122
    4. '    
' → logprob: -7.177760124206543
    5. ' ' → logprob: -7.677760124206543
    6. '```' → logprob: -8.427760124206543
    7. '    ' → logprob: -9.052760124206543
    8. ' 
' → logprob: -9.052760124206543
    9. '	def' → logprob: -9.052760124206543
    10. 'd' → logprob: -10.052760124206543

Token 27: ' swap' (ID: 25489)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.02718343958258629
    2. ' swap' → logprob: -3.7771835327148438
    3. '__' → logprob: -6.152183532714844
    4. ' ' → logprob: -7.027183532714844
    5. ' init' → logprob: -7.902183532714844
    6. ' _' → logprob: -8.652183532714844
    7. '_' → logprob: -9.027183532714844
    8. '_swap' → logprob: -9.527183532714844
    9. ' toggle' → logprob: -10.152183532714844
    10. ' def' → logprob: -10.777183532714844

Token 28: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06731757521629333
    2. '(' → logprob: -3.442317485809326
    3. '(s' → logprob: -3.442317485809326
    4. 'self' → logprob: -7.317317485809326
    5. '_self' → logprob: -8.817317962646484
    6. '_(' → logprob: -9.317317962646484
    7. ' (' → logprob: -9.817317962646484
    8. ' self' → logprob: -10.692317962646484
    9. '_' → logprob: -10.817317962646484
    10. '(Self' → logprob: -10.942317962646484

Token 29: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1323438435792923
    2. 'self' → logprob: -2.5073437690734863
    3. ',s' → logprob: -4.257343769073486
    4. 's' → logprob: -4.507343769073486
    5. '):' → logprob: -4.882343769073486
    6. ' ,' → logprob: -5.757343769073486
    7. ',a' → logprob: -6.132343769073486
    8. 'a' → logprob: -6.757343769073486
    9. ')' → logprob: -6.757343769073486
    10. ',x' → logprob: -7.882343769073486

Token 30: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006486919242888689
    2. 's' → logprob: -6.881486892700195
    3. '<|end|>' → logprob: -7.006486892700195
    4. '(' → logprob: -7.256486892700195
    5. '()' → logprob: -7.506486892700195
    6. ' ' → logprob: -7.631486892700195
    7. '        
' → logprob: -7.881486892700195
    8. '(self' → logprob: -8.256486892700195
    9. '   ' → logprob: -8.256486892700195
    10. '(s' → logprob: -8.381486892700195

Token 31: ' s' (ID: 265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3912705183029175
    2. ' p' → logprob: -1.7662705183029175
    3. 'return' → logprob: -2.016270637512207
    4. 'self' → logprob: -2.141270637512207
    5. 'p' → logprob: -2.391270637512207
    6. 's' (adapté à ' s') → logprob: -2.641270637512207
    7. ' self' → logprob: -3.141270637512207
    8. ' return' → logprob: -3.141270637512207
    9. ' s' → logprob: -3.516270637512207
    10. ' pass' → logprob: -3.766270637512207

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03208346664905548
    2. '=' → logprob: -4.032083511352539
    3. '.' → logprob: -4.407083511352539
    4. ' ' → logprob: -6.907083511352539
    5. ' .' → logprob: -8.782083511352539
    6. ' +=' → logprob: -8.907083511352539
    7. ' ==' → logprob: -9.532083511352539
    8. ' s' → logprob: -10.032083511352539
    9. 's' → logprob: -10.157083511352539
    10. '   ' → logprob: -10.657083511352539

Token 33: ' input' (ID: 3422)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.96882164478302
    2. 'p' → logprob: -1.46882164478302
    3. '"' → logprob: -1.84382164478302
    4. 'self' → logprob: -2.3438215255737305
    5. ' self' → logprob: -2.5938215255737305
    6. ' "' → logprob: -2.8438215255737305
    7. ' ' → logprob: -6.0938215255737305
    8. 's' → logprob: -9.09382152557373
    9. ''p' → logprob: -9.21882152557373
    10. '"A' → logprob: -9.34382152557373

Token 34: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07709699869155884
    2. '("("' → logprob: -3.327096939086914
    3. '()' → logprob: -3.577096939086914
    4. '('' → logprob: -4.827096939086914
    5. '("' → logprob: -6.327096939086914
    6. '("")' → logprob: -8.452096939086914
    7. '(">' → logprob: -8.952096939086914
    8. '("(' → logprob: -9.077096939086914
    9. ' ' → logprob: -10.827096939086914
    10. '("""' → logprob: -11.327096939086914

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0614420548081398
    2. '<|end|>' → logprob: -3.6864421367645264
    3. '
' → logprob: -5.061441898345947
    4. 'return' → logprob: -5.311441898345947
    5. ' ' → logprob: -5.561441898345947
    6. 's' → logprob: -5.561441898345947
    7. '        
' → logprob: -5.811441898345947
    8. ' return' → logprob: -6.436441898345947
    9. '	' → logprob: -6.561441898345947
    10. '        ' → logprob: -6.686441898345947

Token 36: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.029600394889712334
    2. 'p' → logprob: -4.029600620269775
    3. 'return' → logprob: -4.654600620269775
    4. 'if' → logprob: -6.529600620269775
    5. 'self' → logprob: -8.779600143432617
    6. '       ' → logprob: -9.779600143432617
    7. 's' → logprob: -10.029600143432617
    8. 'r' → logprob: -10.029600143432617
    9. 'result' → logprob: -10.029600143432617
    10. 'pr' → logprob: -10.404600143432617

Token 37: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.038080740720033646
    2. '(' → logprob: -3.2880806922912598
    3. '(f' → logprob: -11.288081169128418
    4. '()' → logprob: -11.788081169128418
    5. '(s' → logprob: -12.413081169128418
    6. '((' → logprob: -12.413081169128418
    7. '("' → logprob: -12.663081169128418
    8. '('' → logprob: -13.038081169128418
    9. 'p' → logprob: -13.413081169128418
    10. '("("' → logprob: -13.413081169128418

Token 38: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.002477081725373864
    2. '(' → logprob: -6.002477169036865
    3. ' (' → logprob: -14.252476692199707
    4. 's' → logprob: -14.377476692199707
    5. ')' → logprob: -17.377477645874023
    6. '(f' → logprob: -17.502477645874023
    7. '(
' → logprob: -17.627477645874023
    8. '((' → logprob: -18.127477645874023
    9. '(ss' → logprob: -18.752477645874023
    10. '(

' → logprob: -18.752477645874023

Token 39: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011053359135985374
    2. ')' → logprob: -4.511053562164307
    3. ')))' → logprob: -12.386053085327148
    4. '))
' → logprob: -14.511053085327148
    5. ' ))' → logprob: -14.511053085327148
    6. ' ' → logprob: -15.636053085327148
    7. '()))' → logprob: -16.38605308532715
    8. ')s' → logprob: -17.01105308532715
    9. ')
' → logprob: -17.26105308532715
    10. ' )' → logprob: -17.63605308532715

Token 40: 'Sw' (ID: 15254)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5147455334663391
    2. 'sw' → logprob: -1.8897454738616943
    3. 'p' → logprob: -2.7647454738616943
    4. 'a' → logprob: -2.8897454738616943
    5. '<|end|>' → logprob: -3.0147454738616943
    6. '#' → logprob: -3.8897454738616943
    7. '```' → logprob: -4.514745712280273
    8. ')' → logprob: -4.514745712280273
    9. 'swap' → logprob: -4.639745712280273
    10. 'def' → logprob: -5.514745712280273

Token 41: 'apper' (ID: 47156)
  Prédit: 'apper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'apper' → logprob: -0.0003241414960939437
    2. 'ap' → logprob: -8.875324249267578
    3. 'a' → logprob: -9.500324249267578
    4. 'app' → logprob: -9.750324249267578
    5. 'appe' → logprob: -10.000324249267578
    6. 'appear' → logprob: -13.125324249267578
    7. 'apped' → logprob: -13.625324249267578
    8. 'apping' → logprob: -14.625324249267578
    9. 'appen' → logprob: -14.750324249267578
    10. 'appa' → logprob: -15.250324249267578

Token 42: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.31369611620903015
    2. '()' → logprob: -1.3136961460113525
    3. '.' → logprob: -7.938695907592773
    4. '(' → logprob: -9.688695907592773
    5. '().__' → logprob: -11.813695907592773
    6. '().'' → logprob: -12.563695907592773
    7. '();' → logprob: -14.188695907592773
    8. '()(' → logprob: -14.313695907592773
    9. '(.)' → logprob: -14.688695907592773
    10. '('.')' → logprob: -15.063695907592773

Token 43: 'swap' (ID: 55961)
  Prédit: 'swap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -7.107425062713446e-06
    2. 's' → logprob: -13.000006675720215
    3. ' swap' → logprob: -13.250006675720215
    4. 'sw' → logprob: -13.250006675720215
    5. '	swap' → logprob: -14.500006675720215
    6. 'wap' → logprob: -14.750006675720215
    7. '.swap' → logprob: -15.125006675720215
    8. '_swap' → logprob: -16.12500762939453
    9. 'run' → logprob: -18.37500762939453
    10. 'Swap' → logprob: -18.75000762939453

Token 44: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0076545425690710545
    2. '(' → logprob: -4.882654666900635
    3. '()
' → logprob: -10.132654190063477
    4. '()

' → logprob: -13.007654190063477
    5. ')' → logprob: -14.007654190063477
    6. '()`' → logprob: -14.132654190063477
    7. '(
' → logprob: -14.132654190063477
    8. ' ()' → logprob: -14.382654190063477
    9. '();' → logprob: -14.507654190063477
    10. '#' → logprob: -14.882654190063477


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 42
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 16
Tokens correctement prédits (top 10): 28
Précision stricte (1ère position): 35.71%
Précision adaptée (1ère position): 38.10%
Précision (top 10): 66.67%
================================================================================
