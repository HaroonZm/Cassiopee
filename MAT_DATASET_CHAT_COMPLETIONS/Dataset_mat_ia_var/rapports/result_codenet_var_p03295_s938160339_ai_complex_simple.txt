================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import islice, starmap, accumulate, groupby
from operator import itemgetter, sub, ge

n, m = map(int, input().split())
c = list(starmap(lambda *row: list(map(int, row)), zip(*(input().split() for _ in range(m)))))
c = list(map(list, map(tuple, sorted(tuple(map(int, row.split())) for row in map(' '.join, c)))))
intervals = []
for k, g in groupby(c, key=itemgetter(0)):
    intervals.append([k, min(map(lambda x: x[1] - 1, g))])
merges = list(accumulate(intervals, lambda a, b: [max(a[0], b[0]), min(a[1], b[1]) if not a[1] < b[0] else b[1]]))
counter = 1 + sum(a[1] < b[0] for a, b in zip(merges, islice(merges, 1, None)))
print(counter)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' is' (ID: 382)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.1646274328231812
    2. 'product' → logprob: -1.4146274328231812
    3. 'per' → logprob: -1.7896274328231812
    4. 'count' → logprob: -2.0396275520324707
    5. 'cycle' → logprob: -2.6646275520324707
    6. 'group' → logprob: -3.2896275520324707
    7. 'chain' → logprob: -3.4146275520324707
    8. 'acc' → logprob: -6.039627552032471
    9. 'is' → logprob: -6.539627552032471
    10. 'zip' → logprob: -6.914627552032471

Token 4: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -9.729906196298543e-06
    2. 'lices' → logprob: -12.750009536743164
    3. 'lic' → logprob: -12.875009536743164
    4. 'cycle' → logprob: -14.375009536743164
    5. 'chain' → logprob: -14.375009536743164
    6. 'liced' → logprob: -14.375009536743164
    7. 'ertools' → logprob: -14.625009536743164
    8. '```' → logprob: -14.625009536743164
    9. 'comb' → logprob: -15.125009536743164
    10. 'com' → logprob: -15.125009536743164

Token 5: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002449615392833948
    2. '\(' → logprob: -6.5024495124816895
    3. '.' → logprob: -7.3774495124816895
    4. '```' → logprob: -8.752449989318848
    5. '(
' → logprob: -10.002449989318848
    6. '\' → logprob: -10.627449989318848
    7. '`' → logprob: -10.877449989318848
    8. '"' → logprob: -10.877449989318848
    9. ',' → logprob: -11.252449989318848
    10. '\[' → logprob: -11.877449989318848

Token 6: ' st' (ID: 420)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.8422510027885437
    2. 'count' → logprob: -1.0922510623931885
    3. 'zip' → logprob: -2.7172510623931885
    4. 'chain' → logprob: -2.7172510623931885
    5. 'group' → logprob: -3.4672510623931885
    6. 'tee' → logprob: -3.5922510623931885
    7. 'filter' → logprob: -4.342250823974609
    8. 'per' → logprob: -5.092250823974609
    9. 'take' → logprob: -5.217250823974609
    10. 'acc' → logprob: -5.592250823974609

Token 7: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.4405595660209656
    2. 'ar' → logprob: -1.0655596256256104
    3. 'art' → logprob: -5.065559387207031
    4. 'r' → logprob: -5.690559387207031
    5. 'arp' → logprob: -7.315559387207031
    6. 'ertools' → logprob: -7.940559387207031
    7. 'arts' → logprob: -8.065559387207031
    8. 'arl' → logprob: -9.190559387207031
    9. '```' → logprob: -9.190559387207031
    10. 'arst' → logprob: -9.565559387207031

Token 8: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -4.008129963040119e-06
    2. 'apse' → logprob: -13.125003814697266
    3. 'atch' → logprob: -13.500003814697266
    4. 'at' → logprob: -15.625003814697266
    5. 'ethod' → logprob: -15.625003814697266
    6. 'apt' → logprob: -16.250003814697266
    7. 'ep' → logprob: -17.000003814697266
    8. 'e' → logprob: -17.125003814697266
    9. 'apping' → logprob: -18.000003814697266
    10. 'aps' → logprob: -18.000003814697266

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0055452436208724976
    2. '(lambda' → logprob: -5.880545139312744
    3. '(
' → logprob: -7.005545139312744
    4. ',' → logprob: -7.630545139312744
    5. '.' → logprob: -7.880545139312744
    6. '\(' → logprob: -8.255545616149902
    7. 'def' → logprob: -8.380545616149902
    8. '\n' → logprob: -9.130545616149902
    9. '\' → logprob: -9.255545616149902
    10. '```' → logprob: -10.005545616149902

Token 10: ' accumulate' (ID: 74226)
  Prédit: 'tee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tee' → logprob: -0.968651294708252
    2. 'group' → logprob: -2.343651294708252
    3. 'acc' → logprob: -2.718651294708252
    4. 'product' → logprob: -2.843651294708252
    5. 'cycle' → logprob: -2.968651294708252
    6. 'filter' → logprob: -3.093651294708252
    7. 'zip' → logprob: -3.093651294708252
    8. ' tee' → logprob: -3.343651294708252
    9. 'chain' → logprob: -3.468651294708252
    10. 'compress' → logprob: -3.468651294708252

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03485594317317009
    2. '.' → logprob: -3.784855842590332
    3. ',' → logprob: -5.409855842590332
    4. '(
' → logprob: -5.534855842590332
    5. '\' → logprob: -7.284855842590332
    6. 'def' → logprob: -7.409855842590332
    7. '\(' → logprob: -7.659855842590332
    8. '```' → logprob: -8.034855842590332
    9. '_' → logprob: -8.784855842590332
    10. '\n' → logprob: -8.784855842590332

Token 12: ' group' (ID: 3566)
  Prédit: ' chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chain' → logprob: -1.2468526363372803
    2. 'chain' → logprob: -1.7468526363372803
    3. 'group' → logprob: -1.8718526363372803
    4. ' group' → logprob: -2.1218526363372803
    5. 'tee' → logprob: -2.6218526363372803
    6. ' tee' → logprob: -3.4968526363372803
    7. 'cycle' → logprob: -3.4968526363372803
    8. 'filter' → logprob: -3.7468526363372803
    9. ' cycle' → logprob: -3.7468526363372803
    10. 'com' → logprob: -4.121852874755859

Token 13: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -8.697387966094539e-05
    2. 's' → logprob: -10.125086784362793
    3. 'b' → logprob: -10.750086784362793
    4. 'y' → logprob: -10.875086784362793
    5. 'py' → logprob: -13.750086784362793
    6. 'd' → logprob: -14.125086784362793
    7. 'ing' → logprob: -14.125086784362793
    8. 'bys' → logprob: -14.375086784362793
    9. 'ings' → logprob: -14.625086784362793
    10. 'by's' → logprob: -15.000086784362793

Token 14: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06940829753875732
    2. '.' → logprob: -3.694408416748047
    3. ',' → logprob: -4.319408416748047
    4. '\' → logprob: -4.444408416748047
    5. '(
' → logprob: -4.819408416748047
    6. '\n' → logprob: -5.194408416748047
    7. '\(' → logprob: -6.694408416748047
    8. 'def' → logprob: -7.944408416748047
    9. '```' → logprob: -7.944408416748047
    10. 'newline' → logprob: -8.444408416748047

Token 15: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07109002023935318
    2. '.' → logprob: -3.57108998298645
    3. ',' → logprob: -4.196090221405029
    4. '(
' → logprob: -4.821090221405029
    5. '\' → logprob: -5.071090221405029
    6. '```' → logprob: -6.196090221405029
    7. 'd' → logprob: -6.321090221405029
    8. '`' → logprob: -6.571090221405029
    9. '\(' → logprob: -7.071090221405029
    10. 'def' → logprob: -7.196090221405029

Token 16: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.4628026485443115
    2. 'operator' → logprob: -1.9628026485443115
    3. ' functools' → logprob: -1.9628026485443115
    4. 'collections' → logprob: -3.4628026485443115
    5. ' collections' → logprob: -3.4628026485443115
    6. ' math' → logprob: -4.337802886962891
    7. 'fun' → logprob: -4.962802886962891
    8. 'math' → logprob: -5.212802886962891
    9. ' itertools' → logprob: -7.712802886962891
    10. ' ' → logprob: -8.08780288696289

Token 17: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0232679583132267
    2. 'import' → logprob: -3.773267984390259
    3. '	import' → logprob: -11.64826774597168
    4. ' ' → logprob: -12.02326774597168
    5. '_import' → logprob: -12.52326774597168
    6. '.' → logprob: -13.14826774597168
    7. ' as' → logprob: -14.89826774597168
    8. '.import' → logprob: -15.02326774597168
    9. '<|end|>' → logprob: -15.14826774597168
    10. ',' → logprob: -15.64826774597168

Token 18: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.21758024394512177
    2. 'item' → logprob: -2.3425803184509277
    3. ' add' → logprob: -2.4675803184509277
    4. 'add' → logprob: -5.467580318450928
    5. ' import' → logprob: -5.717580318450928
    6. ' ' → logprob: -5.967580318450928
    7. ' mul' → logprob: -6.467580318450928
    8. 'import' → logprob: -6.842580318450928
    9. ' method' → logprob: -7.592580318450928
    10. 'getitem' → logprob: -8.09257984161377

Token 19: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.018390478566288948
    2. 'get' → logprob: -4.018390655517578
    3. 'gett' → logprob: -8.393390655517578
    4. 'getitem' → logprob: -12.143390655517578
    5. 'g' → logprob: -12.393390655517578
    6. 'gt' → logprob: -13.018390655517578
    7. 'got' → logprob: -14.643390655517578
    8. 'ge' → logprob: -14.768390655517578
    9. 'gte' → logprob: -14.893390655517578
    10. '#get' → logprob: -15.518390655517578

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7294566631317139
    2. '(' → logprob: -1.3544566631317139
    3. '(
' → logprob: -2.979456663131714
    4. '
' → logprob: -3.229456663131714
    5. ',
' → logprob: -3.229456663131714
    6. '\' → logprob: -3.604456663131714
    7. '\n' → logprob: -4.354456901550293
    8. '.' → logprob: -4.729456901550293
    9. '[' → logprob: -4.729456901550293
    10. ',

' → logprob: -4.854456901550293

Token 21: ' sub' (ID: 1543)
  Prédit: 'attr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'attr' → logprob: -0.8442447781562805
    2. ' attr' → logprob: -1.3442447185516357
    3. 'add' → logprob: -1.7192447185516357
    4. ' mul' → logprob: -3.0942447185516357
    5. 'method' → logprob: -3.5942447185516357
    6. 'mul' → logprob: -3.5942447185516357
    7. ' add' → logprob: -4.344244956970215
    8. ' method' → logprob: -5.094244956970215
    9. 'lt' → logprob: -5.719244956970215
    10. 'eq' → logprob: -6.219244956970215

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0890325978398323
    2. '\' → logprob: -3.8390326499938965
    3. '(' → logprob: -4.2140326499938965
    4. ',
' → logprob: -4.4640326499938965
    5. '\n' → logprob: -4.8390326499938965
    6. '```' → logprob: -5.2140326499938965
    7. 'def' → logprob: -5.7140326499938965
    8. '`' → logprob: -6.0890326499938965
    9. '
' → logprob: -6.0890326499938965
    10. 'import' → logprob: -6.2140326499938965

Token 23: ' ge' (ID: 1741)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.022411426529288292
    2. 'mul' → logprob: -4.147411346435547
    3. ' add' → logprob: -5.522411346435547
    4. ' mul' → logprob: -6.897411346435547
    5. 'method' → logprob: -8.397411346435547
    6. 'attr' → logprob: -8.522411346435547
    7. 'tr' → logprob: -8.647411346435547
    8. '```' → logprob: -9.147411346435547
    9. 'lt' → logprob: -9.272411346435547
    10. 'gt' → logprob: -9.397411346435547

Token 24: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3434292674064636
    2. 'r' → logprob: -3.2184293270111084
    3. 'ct' → logprob: -3.5934293270111084
    4. '.' → logprob: -3.8434293270111084
    5. 'c' → logprob: -3.8434293270111084
    6. 'w' → logprob: -3.8434293270111084
    7. 'f' → logprob: -4.093429088592529
    8. ' ' → logprob: -4.218429088592529
    9. '```' → logprob: -4.218429088592529
    10. '`' → logprob: -4.343429088592529

Token 25: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0351277589797974
    2. '(' → logprob: -1.6601277589797974
    3. ',' → logprob: -1.7851277589797974
    4. 'd' → logprob: -2.160127639770508
    5. '#' → logprob: -3.285127639770508
    6. '\' → logprob: -4.285127639770508
    7. '*' → logprob: -4.410127639770508
    8. ',
' → logprob: -4.535127639770508
    9. '(
' → logprob: -4.535127639770508
    10. '```' → logprob: -4.535127639770508

Token 26: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4676019549369812
    2. '=' → logprob: -1.217602014541626
    3. 'u' → logprob: -3.842602014541626
    4. ',' → logprob: -3.842602014541626
    5. ' ' → logprob: -4.092601776123047
    6. '_' → logprob: -4.592601776123047
    7. '.' → logprob: -6.092601776123047
    8. 'e' → logprob: -6.842601776123047
    9. '  ' → logprob: -7.092601776123047
    10. 'umber' → logprob: -7.342601776123047

Token 27: ' m' (ID: 284)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1315743923187256
    2. 'm' → logprob: -1.1315743923187256
    3. ' k' → logprob: -1.6315743923187256
    4. ' m' → logprob: -2.0065743923187256
    5. 'a' → logprob: -5.131574630737305
    6. 'q' → logprob: -5.631574630737305
    7. 'r' → logprob: -5.881574630737305
    8. ' a' → logprob: -6.256574630737305
    9. ' ' → logprob: -6.506574630737305
    10. ' q' → logprob: -6.756574630737305

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018216317519545555
    2. '=' → logprob: -4.018216133117676
    3. ',' → logprob: -9.768216133117676
    4. ' ' → logprob: -12.268216133117676
    5. ' ,' → logprob: -13.143216133117676
    6. ' =
' → logprob: -14.018216133117676
    7. ')' → logprob: -14.768216133117676
    8. '<|end|>' → logprob: -15.018216133117676
    9. '  ' → logprob: -15.518216133117676
    10. ' =
' → logprob: -16.143217086791992

Token 29: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.7957849502563477
    2. 'map' → logprob: -0.9207849502563477
    3. ' ' → logprob: -2.4207849502563477
    4. '10' → logprob: -3.4207849502563477
    5. '0' → logprob: -3.9207849502563477
    6. '5' → logprob: -5.295784950256348
    7. 'input' → logprob: -6.545784950256348
    8. 'int' → logprob: -6.795784950256348
    9. '100' → logprob: -7.670784950256348
    10. ' input' → logprob: -7.670784950256348

Token 30: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015041069127619267
    2. '<|end|>' → logprob: -5.140040874481201
    3. '(lambda' → logprob: -5.390040874481201
    4. '(int' → logprob: -5.765040874481201
    5. '(str' → logprob: -7.015040874481201
    6. '(
' → logprob: -9.51504135131836
    7. '(range' → logprob: -9.89004135131836
    8. '()' → logprob: -10.01504135131836
    9. ' (' → logprob: -10.39004135131836
    10. '(input' → logprob: -10.51504135131836

Token 31: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.017209477722644806
    2. 'input' → logprob: -4.392209529876709
    3. '(' → logprob: -5.642209529876709
    4. ' input' → logprob: -8.01720905303955
    5. ')' → logprob: -8.01720905303955
    6. ',input' → logprob: -8.14220905303955
    7. '=input' → logprob: -9.14220905303955
    8. '(int' → logprob: -10.14220905303955
    9. ',' → logprob: -11.01720905303955
    10. '()' → logprob: -12.26720905303955

Token 32: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3870101869106293
    2. ' input' → logprob: -1.1370102167129517
    3. ')' → logprob: -9.01201057434082
    4. ' )' → logprob: -12.13701057434082
    5. '(input' → logprob: -12.13701057434082
    6. ' ' → logprob: -13.13701057434082
    7. ',input' → logprob: -13.51201057434082
    8. '=input' → logprob: -13.63701057434082
    9. '```' → logprob: -14.63701057434082
    10. '	input' → logprob: -15.01201057434082

Token 33: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.30639779567718506
    2. '())' → logprob: -1.556397795677185
    3. '('' → logprob: -3.6813979148864746
    4. '(' → logprob: -4.181397914886475
    5. ')' → logprob: -5.431397914886475
    6. '().' → logprob: -6.056397914886475
    7. '(),' → logprob: -6.431397914886475
    8. '());' → logprob: -6.931397914886475
    9. '(()' → logprob: -7.056397914886475
    10. '()))' → logprob: -8.056397438049316

Token 34: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002492999192327261
    2. 'strip' → logprob: -8.375248908996582
    3. ')' → logprob: -11.500248908996582
    4. ' split' → logprob: -12.000248908996582
    5. 'read' → logprob: -13.750248908996582
    6. 'rstrip' → logprob: -14.125248908996582
    7. '(split' → logprob: -15.000248908996582
    8. 'spl' → logprob: -15.250248908996582
    9. ' ' → logprob: -17.0002498626709
    10. '())' → logprob: -17.5002498626709

Token 35: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07166886329650879
    2. '))' → logprob: -2.821668863296509
    3. '())' → logprob: -4.69666862487793
    4. '()' → logprob: -7.94666862487793
    5. '()))' → logprob: -8.82166862487793
    6. '),' → logprob: -10.94666862487793
    7. ')))' → logprob: -12.57166862487793
    8. ')`' → logprob: -14.07166862487793
    9. ')
' → logprob: -14.19666862487793
    10. '(' → logprob: -14.57166862487793

Token 36: 'c' (ID: 66)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9966325759887695
    2. ')' → logprob: -1.1216325759887695
    3. 'data' → logprob: -1.9966325759887695
    4. '\n' → logprob: -3.2466325759887695
    5. ' 
' → logprob: -3.6216325759887695
    6. 'for' → logprob: -4.3716325759887695
    7. 'a' → logprob: -4.3716325759887695
    8. '
' → logprob: -4.4966325759887695
    9. 'n' → logprob: -4.8716325759887695
    10. '[' → logprob: -5.1216325759887695

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.45972204208374023
    2. 'ount' → logprob: -2.2097220420837402
    3. 'o' → logprob: -2.4597220420837402
    4. 'ol' → logprob: -2.8347220420837402
    5. '=' → logprob: -3.0847220420837402
    6. 's' → logprob: -4.08472204208374
    7. 'ols' → logprob: -4.33472204208374
    8. ',' → logprob: -4.83472204208374
    9. ' ' → logprob: -5.45972204208374
    10. 'ost' → logprob: -5.45972204208374

Token 38: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6818335652351379
    2. ' list' → logprob: -1.4318335056304932
    3. ' [' → logprob: -2.306833505630493
    4. '[' → logprob: -2.306833505630493
    5. '[list' → logprob: -3.056833505630493
    6. '[input' → logprob: -5.431833744049072
    7. '[int' → logprob: -6.056833744049072
    8. '[]' → logprob: -7.181833744049072
    9. 'input' → logprob: -7.556833744049072
    10. ' []' → logprob: -8.056833267211914

Token 39: '(st' (ID: 4065)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39192289113998413
    2. '(is' → logprob: -1.891922950744629
    3. '(map' → logprob: -2.016922950744629
    4. '(range' → logprob: -3.516922950744629
    5. '(int' → logprob: -5.391922950744629
    6. '(input' → logprob: -5.516922950744629
    7. '()' → logprob: -8.016922950744629
    8. '<|end|>' → logprob: -8.141922950744629
    9. '(filter' → logprob: -9.016922950744629
    10. '(s' → logprob: -9.141922950744629

Token 40: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -1.2664456789934775e-06
    2. 'map' → logprob: -13.875000953674316
    3. 'erm' → logprob: -16.750001907348633
    4. 'ar' → logprob: -16.875001907348633
    5. 'urm' → logprob: -16.875001907348633
    6. 'r' → logprob: -17.125001907348633
    7. 'arp' → logprob: -17.375001907348633
    8. 'irm' → logprob: -18.000001907348633
    9. 'arl' → logprob: -18.250001907348633
    10. 'armac' → logprob: -18.750001907348633

Token 41: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.7432603272027336e-06
    2. 'map' → logprob: -13.500001907348633
    3. 'app' → logprob: -16.250001907348633
    4. '<|end|>' → logprob: -16.500001907348633
    5. 'ап' → logprob: -16.750001907348633
    6. 'apply' → logprob: -17.750001907348633
    7. 'apse' → logprob: -17.875001907348633
    8. 'apper' → logprob: -18.000001907348633
    9. '_map' → logprob: -18.375001907348633
    10. 'a' → logprob: -18.500001907348633

Token 42: '(lambda' (ID: 43341)
  Prédit: '(sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.21561802923679352
    2. '(lambda' → logprob: -2.340618133544922
    3. '(int' → logprob: -3.340618133544922
    4. '(' → logprob: -3.465618133544922
    5. '(tuple' → logprob: -3.715618133544922
    6. '(item' → logprob: -6.715618133544922
    7. '(abs' → logprob: -6.840618133544922
    8. '(str' → logprob: -7.215618133544922
    9. '(range' → logprob: -7.340618133544922
    10. 'sub' → logprob: -7.340618133544922

Token 43: ' *' (ID: 425)
  Prédit: ' sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.34251925349235535
    2. ' lambda' → logprob: -1.4675192832946777
    3. ' int' → logprob: -3.0925192832946777
    4. 'sub' → logprob: -4.967519283294678
    5. 'lambda' → logprob: -5.967519283294678
    6. 'int' → logprob: -6.592519283294678
    7. ' abs' → logprob: -7.092519283294678
    8. ' item' → logprob: -7.842519283294678
    9. ' x' → logprob: -7.842519283294678
    10. ' ge' → logprob: -8.09251880645752

Token 44: 'row' (ID: 843)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.15715457499027252
    2. 'args' → logprob: -2.5321545600891113
    3. 'a' → logprob: -2.7821545600891113
    4. 'c' → logprob: -6.407154560089111
    5. 'i' → logprob: -6.907154560089111
    6. ' x' → logprob: -8.40715503692627
    7. 't' → logprob: -8.65715503692627
    8. 's' → logprob: -8.78215503692627
    9. 'b' → logprob: -8.90715503692627
    10. ':' → logprob: -9.03215503692627

Token 45: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.051091548055410385
    2. ',' → logprob: -3.051091432571411
    3. ' :' → logprob: -6.30109167098999
    4. ' ,' → logprob: -8.676091194152832
    5. ':int' → logprob: -8.676091194152832
    6. ',int' → logprob: -9.801091194152832
    7. ',c' → logprob: -9.926091194152832
    8. ',n' → logprob: -10.051091194152832
    9. ':n' → logprob: -10.801091194152832
    10. ',row' → logprob: -10.926091194152832

Token 46: ' list' (ID: 1562)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.3208550214767456
    2. 'sub' → logprob: -1.4458550214767456
    3. 'map' → logprob: -2.445855140686035
    4. 'tuple' → logprob: -2.570855140686035
    5. 'sum' → logprob: -2.695855140686035
    6. 'row' → logprob: -3.070855140686035
    7. '[int' → logprob: -3.195855140686035
    8. 'item' → logprob: -3.570855140686035
    9. 'list' → logprob: -3.695855140686035
    10. ' tuple' → logprob: -3.820855140686035

Token 47: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.06979624927043915
    2. '(row' → logprob: -2.944796323776245
    3. '(' → logprob: -5.569796085357666
    4. '(sub' → logprob: -5.569796085357666
    5. '(is' → logprob: -5.694796085357666
    6. '(acc' → logprob: -5.944796085357666
    7. '(st' → logprob: -7.694796085357666
    8. '(filter' → logprob: -8.694796562194824
    9. '(range' → logprob: -9.069796562194824
    10. '(zip' → logprob: -9.444796562194824

Token 48: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005701246205717325
    2. '(' → logprob: -5.380701065063477
    3. '(lambda' → logprob: -7.630701065063477
    4. '(ord' → logprob: -8.505701065063477
    5. 'int' → logprob: -9.505701065063477
    6. '(float' → logprob: -9.755701065063477
    7. '(str' → logprob: -10.005701065063477
    8. '(sub' → logprob: -10.005701065063477
    9. ')' → logprob: -10.130701065063477
    10. '(map' → logprob: -10.880701065063477

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.28164273500442505
    2. ',row' → logprob: -1.4066426753997803
    3. '(row' → logprob: -7.906642913818359
    4. ',input' → logprob: -10.40664291381836
    5. ' ,' → logprob: -11.15664291381836
    6. '(' → logprob: -11.65664291381836
    7. ',column' → logprob: -11.78164291381836
    8. ',c' → logprob: -12.15664291381836
    9. ',int' → logprob: -12.28164291381836
    10. 'row' → logprob: -12.40664291381836

Token 50: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.17341651022434235
    2. 'input' → logprob: -2.4234166145324707
    3. ' row' → logprob: -2.9234166145324707
    4. ' input' → logprob: -4.423416614532471
    5. 'slice' → logprob: -6.173416614532471
    6. 'is' → logprob: -7.423416614532471
    7. ')' → logprob: -7.673416614532471
    8. ' slice' → logprob: -8.173416137695312
    9. 'sub' → logprob: -8.298416137695312
    10. ' ' → logprob: -8.923416137695312

Token 51: ')),' (ID: 12098)
  Prédit: ')),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')),' → logprob: -0.010910461656749249
    2. '),' → logprob: -4.885910511016846
    3. '))' → logprob: -6.760910511016846
    4. '))),' → logprob: -6.885910511016846
    5. ' ' → logprob: -8.135910034179688
    6. ')),
' → logprob: -8.385910034179688
    7. ')' → logprob: -8.510910034179688
    8. ')))' → logprob: -9.135910034179688
    9. '[' → logprob: -9.260910034179688
    10. ')))),' → logprob: -10.510910034179688

Token 52: ' zip' (ID: 16216)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.12738768756389618
    2. '[' → logprob: -2.252387762069702
    3. 'zip' → logprob: -4.877387523651123
    4. '(is' → logprob: -6.127387523651123
    5. ' is' → logprob: -7.002387523651123
    6. ' [' → logprob: -7.002387523651123
    7. '[list' → logprob: -7.127387523651123
    8. 'list' → logprob: -7.627387523651123
    9. ')is' → logprob: -8.002388000488281
    10. 'st' → logprob: -8.502388000488281

Token 53: '(*(' (ID: 103513)
  Prédit: '(is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.7090619802474976
    2. '(*' → logprob: -1.0840619802474976
    3. '(range' → logprob: -2.459062099456787
    4. '(' → logprob: -2.834062099456787
    5. '(*(' → logprob: -3.709062099456787
    6. 'is' → logprob: -7.834062099456787
    7. '(
' → logprob: -9.084061622619629
    8. '(map' → logprob: -9.209061622619629
    9. '(*)' → logprob: -9.834061622619629
    10. '(iter' → logprob: -10.209061622619629

Token 54: 'input' (ID: 2586)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6838729977607727
    2. 'input' → logprob: -1.558872938156128
    3. 'map' → logprob: -2.433872938156128
    4. '[' → logprob: -2.558872938156128
    5. '[input' → logprob: -2.558872938156128
    6. '(is' → logprob: -4.058873176574707
    7. 'list' → logprob: -4.558873176574707
    8. '(map' → logprob: -6.058873176574707
    9. '[list' → logprob: -6.308873176574707
    10. 'tuple' → logprob: -6.808873176574707

Token 55: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014570781029760838
    2. '().' → logprob: -4.264570713043213
    3. 'for' → logprob: -9.264571189880371
    4. '()))' → logprob: -9.764571189880371
    5. '())))' → logprob: -10.014571189880371
    6. '())' → logprob: -10.139571189880371
    7. ')' → logprob: -10.264571189880371
    8. '()+' → logprob: -10.639571189880371
    9. '()),' → logprob: -10.889571189880371
    10. '()).' → logprob: -11.139571189880371

Token 56: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0032002893276512623
    2. 'strip' → logprob: -5.753200054168701
    3. 'rstrip' → logprob: -11.00320053100586
    4. ' split' → logprob: -12.37820053100586
    5. '(split' → logprob: -14.00320053100586
    6. '().' → logprob: -14.75320053100586
    7. '.split' → logprob: -15.37820053100586
    8. ' ' → logprob: -15.87820053100586
    9. 'spl' → logprob: -16.12820053100586
    10. 'str' → logprob: -17.12820053100586

Token 57: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006676066666841507
    2. '())))' → logprob: -6.006676197052002
    3. '())' → logprob: -6.756676197052002
    4. '()))' → logprob: -6.881676197052002
    5. '(' → logprob: -6.881676197052002
    6. '(),' → logprob: -7.881676197052002
    7. '()),' → logprob: -8.381675720214844
    8. 'for' → logprob: -9.506675720214844
    9. ')' → logprob: -9.631675720214844
    10. '())))
' → logprob: -10.006675720214844

Token 58: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0126713952049613
    2. 'for' → logprob: -5.01267147064209
    3. ' for' → logprob: -5.26267147064209
    4. '(n' → logprob: -7.88767147064209
    5. '())))' → logprob: -9.38767147064209
    6. ')' → logprob: -9.63767147064209
    7. '()))' → logprob: -9.76267147064209
    8. '(' → logprob: -10.26267147064209
    9. 'n' → logprob: -10.38767147064209
    10. ')))' → logprob: -10.63767147064209

Token 59: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002233401872217655
    2. ' range' → logprob: -6.502233505249023
    3. '_range' → logprob: -8.002233505249023
    4. 'range' → logprob: -8.252233505249023
    5. ' _' → logprob: -9.002233505249023
    6. '_i' → logprob: -12.627233505249023
    7. '_in' → logprob: -12.877233505249023
    8. '(range' → logprob: -13.877233505249023
    9. ' ' → logprob: -14.127233505249023
    10. '_r' → logprob: -14.252233505249023

Token 60: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.39853164553642273
    2. 'range' → logprob: -1.7735316753387451
    3. ' in' → logprob: -1.8985316753387451
    4. '(range' → logprob: -5.523531436920166
    5. 'n' → logprob: -6.398531436920166
    6. 'm' → logprob: -6.648531436920166
    7. ' range' → logprob: -7.273531436920166
    8. '(n' → logprob: -7.523531436920166
    9. 'i' → logprob: -8.398531913757324
    10. '(' → logprob: -9.148531913757324

Token 61: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00027933192905038595
    2. ' range' → logprob: -8.250279426574707
    3. 'r' → logprob: -12.375279426574707
    4. ')' → logprob: -12.750279426574707
    5. 'n' → logprob: -12.750279426574707
    6. '(range' → logprob: -13.000279426574707
    7. 'm' → logprob: -13.250279426574707
    8. '[' → logprob: -14.250279426574707
    9. 'rang' → logprob: -14.500279426574707
    10. 'c' → logprob: -14.625279426574707

Token 62: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.2531338930130005
    2. '(n' → logprob: -1.5031338930130005
    3. '(' → logprob: -6.753133773803711
    4. 'm' → logprob: -10.503133773803711
    5. '(
' → logprob: -12.128133773803711
    6. 'n' → logprob: -12.878133773803711
    7. ')m' → logprob: -14.628133773803711
    8. ')' → logprob: -15.503133773803711
    9. ' (' → logprob: -16.37813377380371
    10. ')n' → logprob: -16.50313377380371

Token 63: ')))))
' (ID: 190633)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.22485831379890442
    2. '))' → logprob: -2.349858283996582
    3. ')))' → logprob: -2.599858283996582
    4. ')' → logprob: -3.599858283996582
    5. ')))))
' → logprob: -5.849858283996582
    6. '))))
' → logprob: -7.474858283996582
    7. '))))

' → logprob: -7.849858283996582
    8. ')))),' → logprob: -8.099858283996582
    9. ' ))' → logprob: -9.099858283996582
    10. ' ' → logprob: -10.724858283996582

Token 64: 'c' (ID: 66)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008346954360604286
    2. '[' → logprob: -5.508347034454346
    3. '(' → logprob: -7.383347034454346
    4. 'for' → logprob: -7.383347034454346
    5. ')
' → logprob: -7.383347034454346
    6. '\n' → logprob: -8.133346557617188
    7. '
' → logprob: -8.383346557617188
    8. '' → logprob: -8.508346557617188
    9. '[
' → logprob: -8.758346557617188
    10. '[n' → logprob: -8.883346557617188

Token 65: ' =' (ID: 314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.058892205357551575
    2. '[' → logprob: -3.058892250061035
    3. '.' → logprob: -6.308892250061035
    4. '<|end|>' → logprob: -6.308892250061035
    5. ')
' → logprob: -6.558892250061035
    6. '\n' → logprob: -7.058892250061035
    7. '#' → logprob: -7.058892250061035
    8. '(' → logprob: -7.308892250061035
    9. '```' → logprob: -7.433892250061035
    10. '\' → logprob: -7.433892250061035

Token 66: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.1253330707550049
    2. '[list' → logprob: -1.2503330707550049
    3. '[' → logprob: -1.6253330707550049
    4. 'list' → logprob: -2.750333070755005
    5. '[c' → logprob: -2.750333070755005
    6. ' list' → logprob: -3.125333070755005
    7. '[[' → logprob: -5.250332832336426
    8. ' [[' → logprob: -6.500332832336426
    9. 'c' → logprob: -6.625332832336426
    10. 'acc' → logprob: -6.625332832336426

Token 67: '(map' (ID: 16946)
  Prédit: '(is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.4319625794887543
    2. '(' → logprob: -1.8069626092910767
    3. '(map' → logprob: -2.056962490081787
    4. '(st' → logprob: -3.556962490081787
    5. '(acc' → logprob: -4.056962490081787
    6. '(filter' → logprob: -5.306962490081787
    7. '(chain' → logprob: -6.056962490081787
    8. '(slice' → logprob: -6.431962490081787
    9. '(zip' → logprob: -6.931962490081787
    10. '(group' → logprob: -7.931962490081787

Token 68: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.4133291244506836
    2. '(lambda' → logprob: -1.9133291244506836
    3. '(tuple' → logprob: -1.9133291244506836
    4. '(' → logprob: -3.6633291244506836
    5. '(item' → logprob: -4.663329124450684
    6. '(sum' → logprob: -5.288329124450684
    7. '(sorted' → logprob: -7.038329124450684
    8. '(int' → logprob: -7.288329124450684
    9. 'list' → logprob: -7.413329124450684
    10. 'tuple' → logprob: -8.413329124450684

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016137007623910904
    2. ',map' → logprob: -4.89113712310791
    3. ',item' → logprob: -5.89113712310791
    4. ',is' → logprob: -6.14113712310791
    5. ',list' → logprob: -6.76613712310791
    6. ',c' → logprob: -6.76613712310791
    7. 'zip' → logprob: -8.14113712310791
    8. ',set' → logprob: -8.76613712310791
    9. ',row' → logprob: -8.76613712310791
    10. ',it' → logprob: -8.89113712310791

Token 70: ' map' (ID: 4014)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.006290537305176258
    2. ' zip' → logprob: -5.131290435791016
    3. '(zip' → logprob: -8.256290435791016
    4. 'map' → logprob: -10.381290435791016
    5. 'is' → logprob: -10.506290435791016
    6. '   ' → logprob: -11.006290435791016
    7. 'transpose' → logprob: -11.756290435791016
    8. ' ' → logprob: -12.131290435791016
    9. 'c' → logprob: -12.506290435791016
    10. 'filter' → logprob: -12.631290435791016

Token 71: '(tuple' (ID: 133029)
  Prédit: '(zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.06737130135297775
    2. 'zip' → logprob: -3.567371368408203
    3. '(list' → logprob: -3.817371368408203
    4. '(tuple' → logprob: -4.817371368408203
    5. '(lambda' → logprob: -5.942371368408203
    6. '(' → logprob: -6.442371368408203
    7. '(re' → logprob: -6.567371368408203
    8. '(acc' → logprob: -7.942371368408203
    9. '(trans' → logprob: -8.067371368408203
    10. ' zip' → logprob: -9.442371368408203

Token 72: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016426921356469393
    2. ',set' → logprob: -6.62664270401001
    3. ',c' → logprob: -8.626642227172852
    4. 'zip' → logprob: -9.626642227172852
    5. ',map' → logprob: -10.001642227172852
    6. '(zip' → logprob: -12.126642227172852
    7. '(set' → logprob: -12.126642227172852
    8. ',n' → logprob: -12.626642227172852
    9. 'set' → logprob: -12.751642227172852
    10. ' ,' → logprob: -13.126642227172852

Token 73: ' sorted' (ID: 20099)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.040704622864723206
    2. ' c' → logprob: -3.2907047271728516
    3. 'zip' → logprob: -6.790704727172852
    4. ' zip' → logprob: -7.915704727172852
    5. 'map' → logprob: -8.290704727172852
    6. '[c' → logprob: -8.540704727172852
    7. 'sorted' → logprob: -9.040704727172852
    8. 'set' → logprob: -9.165704727172852
    9. '   ' → logprob: -9.415704727172852
    10. '(c' → logprob: -9.665704727172852

Token 74: '(tuple' (ID: 133029)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.018615640699863434
    2. '(' → logprob: -4.01861572265625
    3. '((' → logprob: -8.01861572265625
    4. '(lambda' → logprob: -10.01861572265625
    5. '(zip' → logprob: -10.51861572265625
    6. '([' → logprob: -11.64361572265625
    7. '(
' → logprob: -11.89361572265625
    8. '(range' → logprob: -12.14361572265625
    9. '(list' → logprob: -12.26861572265625
    10. '(en' → logprob: -12.26861572265625

Token 75: '(map' (ID: 16946)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.030537709593772888
    2. '(map' → logprob: -4.6555376052856445
    3. '(row' → logprob: -5.1555376052856445
    4. '(sorted' → logprob: -5.2805376052856445
    5. '(' → logprob: -5.5305376052856445
    6. '(i' → logprob: -6.4055376052856445
    7. '([' → logprob: -6.7805376052856445
    8. '((' → logprob: -7.2805376052856445
    9. '(tuple' → logprob: -7.5305376052856445
    10. '(zip' → logprob: -7.9055376052856445

Token 76: '(int' (ID: 2742)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -1.069851279258728
    2. '(lambda' → logprob: -1.194851279258728
    3. '(sorted' → logprob: -2.3198513984680176
    4. '(item' → logprob: -2.8198513984680176
    5. '(tuple' → logprob: -2.8198513984680176
    6. '(int' → logprob: -3.4448513984680176
    7. '(re' → logprob: -3.6948513984680176
    8. '(n' → logprob: -3.8198513984680176
    9. '(' → logprob: -4.444851398468018
    10. '(sub' → logprob: -4.694851398468018

Token 77: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.104530468583107
    2. ',c' → logprob: -3.7295305728912354
    3. ',x' → logprob: -4.104530334472656
    4. '(x' → logprob: -4.104530334472656
    5. '(i' → logprob: -4.479530334472656
    6. '(c' → logprob: -4.729530334472656
    7. ',row' → logprob: -4.854530334472656
    8. '(row' → logprob: -4.979530334472656
    9. ',i' → logprob: -5.979530334472656
    10. ',(' → logprob: -6.604530334472656

Token 78: ' row' (ID: 5225)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5394334197044373
    2. 'c' → logprob: -1.664433479309082
    3. 'row' → logprob: -1.789433479309082
    4. 'i' → logprob: -3.539433479309082
    5. 'r' → logprob: -4.664433479309082
    6. ' x' → logprob: -4.664433479309082
    7. ' c' → logprob: -6.289433479309082
    8. '_' → logprob: -6.539433479309082
    9. 'col' → logprob: -6.539433479309082
    10. ' row' → logprob: -6.789433479309082

Token 79: '.split' (ID: 10347)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05671272799372673
    2. ')' → logprob: -3.5567126274108887
    3. '),' → logprob: -4.556712627410889
    4. ')),' → logprob: -5.056712627410889
    5. ')c' → logprob: -5.806712627410889
    6. 'c' → logprob: -6.556712627410889
    7. ',' → logprob: -6.681712627410889
    8. ')))' → logprob: -6.806712627410889
    9. 's' → logprob: -7.181712627410889
    10. '(c' → logprob: -7.681712627410889

Token 80: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6724065542221069
    2. '('' → logprob: -1.797406554222107
    3. '(','' → logprob: -2.2974066734313965
    4. '())))' → logprob: -2.4224066734313965
    5. '()' → logprob: -2.5474066734313965
    6. '())' → logprob: -3.0474066734313965
    7. '()),' → logprob: -5.7974066734313965
    8. '(',' → logprob: -5.9224066734313965
    9. '))' → logprob: -7.6724066734313965
    10. ')))' → logprob: -7.7974066734313965

Token 81: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6611610054969788
    2. '(input' → logprob: -1.786160945892334
    3. '(c' → logprob: -2.161160945892334
    4. ')' → logprob: -2.536160945892334
    5. 'for' → logprob: -3.036160945892334
    6. ' for' → logprob: -3.911160945892334
    7. ')))' → logprob: -4.536160945892334
    8. '(range' → logprob: -4.911160945892334
    9. '(' → logprob: -5.036160945892334
    10. '(n' → logprob: -5.036160945892334

Token 82: ' row' (ID: 5225)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0015052208909764886
    2. ' _' → logprob: -7.626505374908447
    3. 'row' → logprob: -7.626505374908447
    4. ' row' → logprob: -8.251504898071289
    5. 'c' → logprob: -9.126504898071289
    6. '_input' → logprob: -10.626504898071289
    7. '_c' → logprob: -11.001504898071289
    8. '___' → logprob: -11.126504898071289
    9. 'input' → logprob: -11.251504898071289
    10. ' input' → logprob: -11.376504898071289

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008815704844892025
    2. 'in' → logprob: -4.758815765380859
    3. 'input' → logprob: -10.13381576538086
    4. 'range' → logprob: -10.38381576538086
    5. 'c' → logprob: -10.50881576538086
    6. 's' → logprob: -10.63381576538086
    7. ' input' → logprob: -11.32131576538086
    8. ' range' → logprob: -12.00881576538086
    9. '(input' → logprob: -12.44631576538086
    10. ' ' → logprob: -12.44631576538086

Token 84: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3521554172039032
    2. 'c' → logprob: -1.6021554470062256
    3. 'range' → logprob: -3.1021554470062256
    4. ' input' → logprob: -3.4771554470062256
    5. ' range' → logprob: -4.8521552085876465
    6. ' c' → logprob: -4.8521552085876465
    7. 'map' → logprob: -6.7271552085876465
    8. 'open' → logprob: -7.1021552085876465
    9. ')' → logprob: -8.102155685424805
    10. '_' → logprob: -8.539655685424805

Token 85: '('' (ID: 706)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.02925720065832138
    2. '(str' → logprob: -3.904257297515869
    3. 'input' → logprob: -5.279257297515869
    4. '(' → logprob: -6.279257297515869
    5. '(lambda' → logprob: -6.904257297515869
    6. 'str' → logprob: -8.279256820678711
    7. ' input' → logprob: -9.029256820678711
    8. '(int' → logprob: -9.779256820678711
    9. '(list' → logprob: -9.904256820678711
    10. '(print' → logprob: -10.404256820678711

Token 86: ' '.' (ID: 12662)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.01861540600657463
    2. 'str' → logprob: -4.643615245819092
    3. ' input' → logprob: -5.768615245819092
    4. ''' → logprob: -5.768615245819092
    5. '''.' → logprob: -7.018615245819092
    6. 'join' → logprob: -7.643615245819092
    7. 'range' → logprob: -8.51861572265625
    8. 'lambda' → logprob: -8.64361572265625
    9. '"' → logprob: -8.76861572265625
    10. 'chr' → logprob: -9.64361572265625

Token 87: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.29214799404144287
    2. 'split' → logprob: -1.5421479940414429
    3. 'strip' → logprob: -3.4171481132507324
    4. 'c' → logprob: -5.917148113250732
    5. 'plit' → logprob: -6.167148113250732
    6. 'rstrip' → logprob: -6.792148113250732
    7. 'getitem' → logprob: -8.792147636413574
    8. 'trip' → logprob: -9.667147636413574
    9. 'zip' → logprob: -10.042147636413574
    10. 'r' → logprob: -10.042147636413574

Token 88: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4566347002983093
    2. '(c' → logprob: -1.206634759902954
    3. ',c' → logprob: -3.206634759902954
    4. 'c' → logprob: -3.956634759902954
    5. 'input' → logprob: -5.956634521484375
    6. '(input' → logprob: -6.331634521484375
    7. ',input' → logprob: -6.456634521484375
    8. '(map' → logprob: -7.831634521484375
    9. '(' → logprob: -8.206634521484375
    10. ' ,' → logprob: -8.456634521484375

Token 89: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1283351480960846
    2. ' c' → logprob: -2.1283352375030518
    3. 'zip' → logprob: -7.253334999084473
    4. ' zip' → logprob: -7.753334999084473
    5. '[c' → logprob: -9.753334999084473
    6. '[' → logprob: -9.878334999084473
    7. ' ' → logprob: -10.253334999084473
    8. ' [' → logprob: -10.753334999084473
    9. '   ' → logprob: -10.878334999084473
    10. '	c' → logprob: -11.003334999084473

Token 90: ')))))
' (ID: 190633)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.18477152287960052
    2. ')))' → logprob: -2.5597715377807617
    3. '))' → logprob: -2.6847715377807617
    4. ')' → logprob: -4.309771537780762
    5. '))))
' → logprob: -5.309771537780762
    6. ')))))
' → logprob: -5.809771537780762
    7. '))))

' → logprob: -6.934771537780762
    8. ')))),' → logprob: -9.059771537780762
    9. '),' → logprob: -9.184771537780762
    10. ' ' → logprob: -9.559771537780762

Token 91: 'interval' (ID: 37558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08760824054479599
    2. '[' → logprob: -3.2126083374023438
    3. 'for' → logprob: -4.587608337402344
    4. 'n' → logprob: -4.962608337402344
    5. ' ' → logprob: -5.212608337402344
    6. '
' → logprob: -5.837608337402344
    7. '#' → logprob: -5.837608337402344
    8. '(' → logprob: -6.462608337402344
    9. '\n' → logprob: -6.587608337402344
    10. '[
' → logprob: -6.962608337402344

Token 92: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0017560989363119006
    2. '_' → logprob: -6.626756191253662
    3. ' =' → logprob: -8.876755714416504
    4. '_s' → logprob: -9.126755714416504
    5. '=' → logprob: -9.376755714416504
    6. '(' → logprob: -10.626755714416504
    7. ',' → logprob: -11.876755714416504
    8. '[' → logprob: -11.876755714416504
    9. '_list' → logprob: -12.001755714416504
    10. '_size' → logprob: -12.251755714416504

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09078928828239441
    2. '=' → logprob: -2.465789318084717
    3. '_' → logprob: -7.465789318084717
    4. '[' → logprob: -7.840789318084717
    5. ',' → logprob: -8.590788841247559
    6. '=[]' → logprob: -8.965788841247559
    7. 's' → logprob: -9.090788841247559
    8. '<|end|>' → logprob: -9.090788841247559
    9. '(' → logprob: -9.215788841247559
    10. ')' → logprob: -9.840788841247559

Token 94: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.17308931052684784
    2. ' []' → logprob: -2.7980892658233643
    3. '[' → logprob: -3.1730892658233643
    4. '[(' → logprob: -4.173089504241943
    5. 'list' → logprob: -4.298089504241943
    6. ' [' → logprob: -4.673089504241943
    7. '[group' → logprob: -5.423089504241943
    8. ' list' → logprob: -5.923089504241943
    9. '[list' → logprob: -6.298089504241943
    10. ' [(' → logprob: -6.548089504241943

Token 95: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00046439285506494343
    2. ' for' → logprob: -8.12546443939209
    3. '_' → logprob: -9.37546443939209
    4. 'current' → logprob: -10.75046443939209
    5. 'i' → logprob: -11.50046443939209
    6. 'range' → logprob: -11.50046443939209
    7. '[' → logprob: -12.00046443939209
    8. 'def' → logprob: -12.62546443939209
    9. '[]' → logprob: -13.12546443939209
    10. 'start' → logprob: -13.12546443939209

Token 96: ' k' (ID: 372)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6987463235855103
    2. ' i' → logprob: -1.3237463235855103
    3. ' _' → logprob: -1.9487463235855103
    4. 'i' → logprob: -2.5737462043762207
    5. ' row' → logprob: -5.073746204376221
    6. '_i' → logprob: -5.323746204376221
    7. ' x' → logprob: -6.573746204376221
    8. 'row' → logprob: -6.698746204376221
    9. 'x' → logprob: -7.448746204376221
    10. ' c' → logprob: -7.823746204376221

Token 97: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016713712364435196
    2. 'in' → logprob: -4.391713619232178
    3. ',' → logprob: -6.391713619232178
    4. ' ' → logprob: -6.641713619232178
    5. 'range' → logprob: -7.266713619232178
    6. ' range' → logprob: -8.641714096069336
    7. 'k' → logprob: -9.516714096069336
    8. ' ,' → logprob: -10.141714096069336
    9. ' k' → logprob: -10.141714096069336
    10. '  ' → logprob: -10.266714096069336

Token 98: ' g' (ID: 329)
  Prédit: ' g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' g' → logprob: -0.4784381687641144
    2. 'g' → logprob: -1.103438138961792
    3. ' group' → logprob: -3.478438138961792
    4. 'group' → logprob: -4.853438377380371
    5. ' v' → logprob: -5.728438377380371
    6. 'v' → logprob: -5.853438377380371
    7. '_' → logprob: -6.228438377380371
    8. ' _' → logprob: -7.103438377380371
    9. ' grp' → logprob: -8.728438377380371
    10. '(g' → logprob: -8.853438377380371

Token 99: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25205501914024353
    2. ' in' → logprob: -1.502055048942566
    3. 'roup' → logprob: -9.752055168151855
    4. 'group' → logprob: -10.377055168151855
    5. ' ' → logprob: -10.752055168151855
    6. '<|end|>' → logprob: -12.127055168151855
    7. '.groupby' → logprob: -13.252055168151855
    8. 'ingroup' → logprob: -13.502055168151855
    9. '(group' → logprob: -13.752055168151855
    10. ' group' → logprob: -14.377055168151855

Token 100: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.0004307884373702109
    2. ' group' → logprob: -7.750430583953857
    3. '	group' → logprob: -17.625431060791016
    4. 'roup' → logprob: -17.875431060791016
    5. '.groupby' → logprob: -17.875431060791016
    6. '(group' → logprob: -17.875431060791016
    7. '"group' → logprob: -18.375431060791016
    8. ' ' → logprob: -20.000431060791016
    9. '
' → logprob: -20.375431060791016
    10. '```' → logprob: -20.625431060791016

Token 101: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -6.869017852295656e-06
    2. 'b' → logprob: -12.000006675720215
    3. '```' → logprob: -15.875006675720215
    4. 'y' → logprob: -16.37500762939453
    5. 's' → logprob: -16.62500762939453
    6. ')' → logprob: -16.75000762939453
    7. ' ' → logprob: -16.87500762939453
    8. 'in' → logprob: -17.00000762939453
    9. ' by' → logprob: -17.12500762939453
    10. 'by's' → logprob: -17.62500762939453

Token 102: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.006510848179459572
    2. '(en' → logprob: -6.5065107345581055
    3. '(sorted' → logprob: -6.5065107345581055
    4. '(interval' → logprob: -6.5065107345581055
    5. '((' → logprob: -6.7565107345581055
    6. '(lambda' → logprob: -8.506510734558105
    7. '(item' → logprob: -8.506510734558105
    8. '(' → logprob: -8.881510734558105
    9. 'c' → logprob: -9.256510734558105
    10. '(n' → logprob: -9.756510734558105

Token 103: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014632153324782848
    2. ',key' → logprob: -6.626463413238525
    3. ' ,' → logprob: -9.251462936401367
    4. ',item' → logprob: -10.376462936401367
    5. 'key' → logprob: -12.626462936401367
    6. '),' → logprob: -13.126462936401367
    7. 'lambda' → logprob: -13.376462936401367
    8. 'item' → logprob: -14.501462936401367
    9. '(),' → logprob: -14.501462936401367
    10. ' key' → logprob: -14.501462936401367

Token 104: ' key' (ID: 2140)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.0016662541311234236
    2. ' item' → logprob: -7.126666069030762
    3. 'lambda' → logprob: -7.376666069030762
    4. 'key' → logprob: -8.501666069030762
    5. ' lambda' → logprob: -11.626666069030762
    6. '   ' → logprob: -11.876666069030762
    7. 'len' → logprob: -12.751666069030762
    8. '```' → logprob: -12.751666069030762
    9. ' key' → logprob: -13.126666069030762
    10. '    ' → logprob: -13.376666069030762

Token 105: '=item' (ID: 76091)
  Prédit: '=item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=item' → logprob: -0.007270817179232836
    2. '=lambda' → logprob: -5.007270812988281
    3. '=' → logprob: -7.507270812988281
    4. 'item' → logprob: -12.257270812988281
    5. ' =' → logprob: -14.257270812988281
    6. '=len' → logprob: -15.507270812988281
    7. ')item' → logprob: -15.632270812988281
    8. ' item' → logprob: -15.882270812988281
    9. 'lambda' → logprob: -16.38227081298828
    10. '=user' → logprob: -17.00727081298828

Token 106: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -1.3902033970225602e-05
    2. 'get' → logprob: -11.250014305114746
    3. 'getitem' → logprob: -14.875014305114746
    4. '_get' → logprob: -16.37501335144043
    5. 'setter' → logprob: -16.50001335144043
    6. 'Getter' → logprob: -16.75001335144043
    7. '@Getter' → logprob: -17.25001335144043
    8. ' getter' → logprob: -17.62501335144043
    9. 'picker' → logprob: -17.62501335144043
    10. 'giver' → logprob: -17.75001335144043

Token 107: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008642109110951424
    2. '0' → logprob: -4.758642196655273
    3. '(-' → logprob: -11.133642196655273
    4. '(
' → logprob: -12.133642196655273
    5. ' (' → logprob: -12.133642196655273
    6. '
' → logprob: -14.008642196655273
    7. ' ' → logprob: -14.258642196655273
    8. '1' → logprob: -15.258642196655273
    9. '```' → logprob: -15.383642196655273
    10. '   ' → logprob: -17.508642196655273

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007974137552082539
    2. '1' → logprob: -5.132974147796631
    3. '2' → logprob: -7.132974147796631
    4. '-' → logprob: -7.257974147796631
    5. ' ' → logprob: -8.007973670959473
    6. '3' → logprob: -8.882973670959473
    7. '4' → logprob: -10.757973670959473
    8. 'n' → logprob: -11.632973670959473
    9. ' -' → logprob: -12.007973670959473
    10. '5' → logprob: -12.382973670959473

Token 109: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.10729802399873734
    2. ')):
' → logprob: -2.3572981357574463
    3. '))' → logprob: -5.232297897338867
    4. ')):
' → logprob: -6.607297897338867
    5. '):' → logprob: -8.357297897338867
    6. ')' → logprob: -9.857297897338867
    7. '):
' → logprob: -10.607297897338867
    8. ',' → logprob: -10.857297897338867
    9. ':' → logprob: -12.357297897338867
    10. '])):
' → logprob: -12.357297897338867

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027435312513262033
    2. ' intervals' → logprob: -6.252743721008301
    3. ' g' → logprob: -9.3777437210083
    4. ')' → logprob: -9.5027437210083
    5. '):
' → logprob: -9.6277437210083
    6. ' list' → logprob: -9.7527437210083
    7. ':' → logprob: -10.0027437210083
    8. ' ' → logprob: -10.1277437210083
    9. 'list' → logprob: -10.1277437210083
    10. '):' → logprob: -10.1277437210083

Token 111: ' intervals' (ID: 49900)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0193328857421875
    2. 'vals' → logprob: -1.0193328857421875
    3. 'lst' → logprob: -2.7693328857421875
    4. 'interval' → logprob: -3.0193328857421875
    5. 'rows' → logprob: -3.2693328857421875
    6. ' lst' → logprob: -3.8943328857421875
    7. 'l' → logprob: -4.2693328857421875
    8. 'values' → logprob: -4.5193328857421875
    9. ' vals' → logprob: -4.5193328857421875
    10. 'indices' → logprob: -4.8943328857421875

Token 112: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2403113842010498
    2. ' =' → logprob: -1.9903113842010498
    3. '=' → logprob: -3.11531138420105
    4. '.extend' → logprob: -3.61531138420105
    5. '   ' → logprob: -5.990311622619629
    6. '.' → logprob: -6.490311622619629
    7. ' .' → logprob: -7.490311622619629
    8. ' ' → logprob: -7.865311622619629
    9. ' +=' → logprob: -7.990311622619629
    10. ',' → logprob: -9.115311622619629

Token 113: '([' (ID: 5194)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.16413426399230957
    2. '((' → logprob: -2.0391342639923096
    3. '([' → logprob: -4.1641340255737305
    4. '(sorted' → logprob: -6.4141340255737305
    5. '(tuple' → logprob: -6.4141340255737305
    6. '(' → logprob: -6.5391340255737305
    7. '(([' → logprob: -8.16413402557373
    8. '(next' → logprob: -8.78913402557373
    9. '([(' → logprob: -8.78913402557373
    10. 'list' → logprob: -8.91413402557373

Token 114: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.20190393924713135
    2. 'g' → logprob: -2.201903820037842
    3. 'min' → logprob: -3.576903820037842
    4. '[min' → logprob: -4.076903820037842
    5. '[k' → logprob: -4.826903820037842
    6. '[g' → logprob: -5.201903820037842
    7. '[' → logprob: -5.451903820037842
    8. 'next' → logprob: -6.451903820037842
    9. 'list' → logprob: -6.451903820037842
    10. 'item' → logprob: -6.826903820037842

Token 115: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017588812857866287
    2. '])' → logprob: -4.1425886154174805
    3. ',[' → logprob: -8.26758861541748
    4. ',
' → logprob: -8.39258861541748
    5. ',min' → logprob: -8.64258861541748
    6. ',g' → logprob: -9.01758861541748
    7. ',list' → logprob: -9.14258861541748
    8. ']' → logprob: -9.14258861541748
    9. '[' → logprob: -9.39258861541748
    10. ',k' → logprob: -9.51758861541748

Token 116: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5332104563713074
    2. 'list' → logprob: -2.033210515975952
    3. 'max' → logprob: -2.158210515975952
    4. 'sum' → logprob: -3.408210515975952
    5. 'g' → logprob: -3.908210515975952
    6. '0' → logprob: -3.908210515975952
    7. 'next' → logprob: -4.158210277557373
    8. ' min' → logprob: -4.283210277557373
    9. 'len' → logprob: -4.533210277557373
    10. 'ge' → logprob: -4.783210277557373

Token 117: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.27207237482070923
    2. '(g' → logprob: -2.1470723152160645
    3. '(item' → logprob: -2.3970723152160645
    4. '(row' → logprob: -4.3970723152160645
    5. '(x' → logprob: -5.1470723152160645
    6. '(list' → logprob: -5.1470723152160645
    7. '(sub' → logprob: -6.3970723152160645
    8. '([' → logprob: -7.1470723152160645
    9. '(v' → logprob: -7.3970723152160645
    10. '(' → logprob: -7.5220723152160645

Token 118: '(lambda' (ID: 43341)
  Prédit: '(item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(item' → logprob: -0.001516173011623323
    2. 'item' → logprob: -6.501516342163086
    3. '(lambda' → logprob: -12.126516342163086
    4. '=item' → logprob: -12.126516342163086
    5. '(' → logprob: -14.001516342163086
    6. ')item' → logprob: -14.376516342163086
    7. ',item' → logprob: -14.751516342163086
    8. '(sub' → logprob: -15.001516342163086
    9. ' item' → logprob: -15.126516342163086
    10. '	item' → logprob: -15.376516342163086

Token 119: ' x' (ID: 1215)
  Prédit: 'item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'item' → logprob: -0.02652902342379093
    2. ' item' → logprob: -4.026528835296631
    3. 'lambda' → logprob: -5.026528835296631
    4. 'sub' → logprob: -6.901528835296631
    5. ':item' → logprob: -7.901528835296631
    6. 'x' → logprob: -8.401529312133789
    7. '(item' → logprob: -10.276529312133789
    8. ' lambda' → logprob: -10.401529312133789
    9. '=item' → logprob: -10.651529312133789
    10. '   ' → logprob: -10.901529312133789

Token 120: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03828968107700348
    2. ':item' → logprob: -3.413289785385132
    3. ' :' → logprob: -5.788289546966553
    4. 'x' → logprob: -7.413289546966553
    5. 'item' → logprob: -7.913289546966553
    6. ':x' → logprob: -8.538290023803711
    7. ' item' → logprob: -8.538290023803711
    8. ' x' → logprob: -8.663290023803711
    9. '=item' → logprob: -12.038290023803711
    10. 'sub' → logprob: -12.288290023803711

Token 121: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004732722416520119
    2. ' x' → logprob: -5.379732608795166
    3. 'item' → logprob: -9.129733085632324
    4. 'sub' → logprob: -12.754733085632324
    5. ' item' → logprob: -13.879733085632324
    6. ' sub' → logprob: -16.004732131958008
    7. '	x' → logprob: -16.504732131958008
    8. 'int' → logprob: -17.004732131958008
    9. 'getitem' → logprob: -17.129732131958008
    10. ' ' → logprob: -17.879732131958008

Token 122: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6961011290550232
    2. ':' → logprob: -1.071101188659668
    3. 'x' → logprob: -2.571101188659668
    4. 'item' → logprob: -3.196101188659668
    5. ' x' → logprob: -4.321101188659668
    6. ':item' → logprob: -4.446101188659668
    7. ' item' → logprob: -5.196101188659668
    8. ' :' → logprob: -6.071101188659668
    9. '1' → logprob: -6.196101188659668
    10. 'lambda' → logprob: -6.321101188659668

Token 123: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.97024549683556e-05
    2. '2' → logprob: -10.250080108642578
    3. '[' → logprob: -10.750080108642578
    4. ' ' → logprob: -10.875080108642578
    5. '
' → logprob: -13.625080108642578
    6. ':' → logprob: -14.500080108642578
    7. '   ' → logprob: -15.500080108642578
    8. 'x' → logprob: -15.562580108642578
    9. 'operator' → logprob: -15.625080108642578
    10. ',' → logprob: -15.812580108642578

Token 124: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034037526696920395
    2. ':' → logprob: -4.2840375900268555
    3. '],' → logprob: -5.1590375900268555
    4. ',c' → logprob: -5.2840375900268555
    5. ',x' → logprob: -6.0340375900268555
    6. ',g' → logprob: -6.6590375900268555
    7. '),' → logprob: -6.6590375900268555
    8. ' ,' → logprob: -7.0340375900268555
    9. ':g' → logprob: -7.7840375900268555
    10. 'g' → logprob: -7.9090375900268555

Token 125: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020725112408399582
    2. ',g' → logprob: -4.020725250244141
    3. 'g' → logprob: -6.395725250244141
    4. ' ,' → logprob: -7.895725250244141
    5. '),' → logprob: -8.52072525024414
    6. ' g' → logprob: -8.89572525024414
    7. ':g' → logprob: -10.14572525024414
    8. '   ' → logprob: -10.27072525024414
    9. '+' → logprob: -10.89572525024414
    10. '[' → logprob: -11.02072525024414

Token 126: ' ' (ID: 220)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.024288063868880272
    2. ' x' → logprob: -4.024288177490234
    3. '1' → logprob: -5.149288177490234
    4. '0' → logprob: -8.399288177490234
    5. 'k' → logprob: -9.899288177490234
    6. ' ' → logprob: -11.149288177490234
    7. ' k' → logprob: -11.774288177490234
    8. 'sub' → logprob: -11.899288177490234
    9. '2' → logprob: -13.024288177490234
    10. ' sub' → logprob: -13.524288177490234

Token 127: '1' (ID: 16)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.005789186339825392
    2. '1' → logprob: -5.505789279937744
    3. ' x' → logprob: -6.630789279937744
    4. 'k' → logprob: -8.005788803100586
    5. '0' → logprob: -10.255788803100586
    6. ' ' → logprob: -12.130788803100586
    7. ' k' → logprob: -12.880788803100586
    8. 'c' → logprob: -13.005788803100586
    9. 'sub' → logprob: -13.005788803100586
    10. 'ge' → logprob: -13.380788803100586

Token 128: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001760148094035685
    2. ',g' → logprob: -6.501760005950928
    3. ' ,' → logprob: -8.626760482788086
    4. 'g' → logprob: -10.626760482788086
    5. '   ' → logprob: -10.876760482788086
    6. '),' → logprob: -11.001760482788086
    7. ' g' → logprob: -12.626760482788086
    8. ')' → logprob: -13.001760482788086
    9. ',x' → logprob: -13.251760482788086
    10. ' ' → logprob: -13.626760482788086

Token 129: ' g' (ID: 329)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.001595676294527948
    2. ' g' → logprob: -6.626595497131348
    3. 'list' → logprob: -8.251595497131348
    4. ' list' → logprob: -11.876595497131348
    5. ' ' → logprob: -14.001595497131348
    6. '   ' → logprob: -14.751595497131348
    7. '	g' → logprob: -15.126595497131348
    8. '  ' → logprob: -15.376595497131348
    9. ' ' → logprob: -17.251596450805664
    10. 'group' → logprob: -17.376596450805664

Token 130: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01933032087981701
    2. ')])' → logprob: -4.0193305015563965
    3. ')]' → logprob: -7.1443305015563965
    4. ')))' → logprob: -8.269330024719238
    5. ')' → logprob: -10.144330024719238
    6. '),' → logprob: -10.394330024719238
    7. ')),' → logprob: -10.519330024719238
    8. ' ))' → logprob: -11.019330024719238
    9. ']))' → logprob: -12.019330024719238
    10. ')],' → logprob: -12.769330024719238

Token 131: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0023163107689470053
    2. ')' → logprob: -6.252316474914551
    3. ')])' → logprob: -8.37731647491455
    4. ')]' → logprob: -9.87731647491455
    5. ',' → logprob: -10.25231647491455
    6. '])
' → logprob: -10.37731647491455
    7. ' ])' → logprob: -10.87731647491455
    8. ']' → logprob: -11.50231647491455
    9. '))' → logprob: -12.25231647491455
    10. '   ' → logprob: -13.50231647491455

Token 132: 'mer' (ID: 1159)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41660866141319275
    2. 'print' → logprob: -1.9166086912155151
    3. ']' → logprob: -2.1666085720062256
    4. '[' → logprob: -3.9166085720062256
    5. '<|end|>' → logprob: -4.166608810424805
    6. '#' → logprob: -4.291608810424805
    7. 'for' → logprob: -4.666608810424805
    8. ' ' → logprob: -5.041608810424805
    9. 'n' → logprob: -6.041608810424805
    10. '```' → logprob: -6.666608810424805

Token 133: 'ges' (ID: 4431)
  Prédit: 'ge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ge' → logprob: -0.01664946787059307
    2. 'ges' → logprob: -4.51664924621582
    3. 'ged' → logprob: -5.64164924621582
    4. 'get' → logprob: -7.14164924621582
    5. 'r' → logprob: -8.39164924621582
    6. 't' → logprob: -8.51664924621582
    7. 'gede' → logprob: -9.26664924621582
    8. 'g' → logprob: -9.39164924621582
    9. '#' → logprob: -9.39164924621582
    10. 'de' → logprob: -9.89164924621582

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03270816057920456
    2. '=' → logprob: -3.657708168029785
    3. 'd' → logprob: -5.407708168029785
    4. '=[]' → logprob: -6.657708168029785
    5. 'ed' → logprob: -7.782708168029785
    6. ',' → logprob: -9.907708168029785
    7. '=[]
' → logprob: -10.157708168029785
    8. 's' → logprob: -11.157708168029785
    9. '()' → logprob: -11.532708168029785
    10. ')' → logprob: -11.782708168029785

Token 135: ' list' (ID: 1562)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.09006595611572266
    2. '[]
' → logprob: -3.0900659561157227
    3. '0' → logprob: -3.5900659561157227
    4. '[' → logprob: -5.840065956115723
    5. 'interval' → logprob: -5.840065956115723
    6. '1' → logprob: -5.840065956115723
    7. '[[' → logprob: -7.340065956115723
    8. 'acc' → logprob: -7.465065956115723
    9. '[(' → logprob: -7.715065956115723
    10. ' []' → logprob: -8.090065956115723

Token 136: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.0019825217314064503
    2. '(st' → logprob: -6.751982688903809
    3. '(is' → logprob: -8.001982688903809
    4. '(' → logprob: -8.876982688903809
    5. '(ac' → logprob: -9.126982688903809
    6. '()' → logprob: -9.376982688903809
    7. '(it' → logprob: -10.376982688903809
    8. '(map' → logprob: -10.376982688903809
    9. '(iter' → logprob: -11.126982688903809
    10. '(filter' → logprob: -11.251982688903809

Token 137: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.0009442188893444836
    2. 'um' → logprob: -7.500944137573242
    3. 'ulate' → logprob: -7.875944137573242
    4. 'umul' → logprob: -11.875944137573242
    5. 'om' → logprob: -13.375944137573242
    6. 'uminate' → logprob: -14.125944137573242
    7. 'ul' → logprob: -14.625944137573242
    8. 'uate' → logprob: -15.750944137573242
    9. 'umal' → logprob: -15.750944137573242
    10. 'culate' → logprob: -15.875944137573242

Token 138: '(interval' (ID: 100435)
  Prédit: '(interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(interval' → logprob: -0.011135543696582317
    2. '(lambda' → logprob: -4.511135578155518
    3. '(
' → logprob: -11.01113510131836
    4. 'interval' → logprob: -11.13613510131836
    5. '(sub' → logprob: -11.13613510131836
    6. '(' → logprob: -11.13613510131836
    7. '(inter' → logprob: -11.38613510131836
    8. ',' → logprob: -12.26113510131836
    9. ')' → logprob: -12.26113510131836
    10. ' (' → logprob: -13.01113510131836

Token 139: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5262614488601685
    2. 'als' → logprob: -0.9012614488601685
    3. 'al' → logprob: -6.526261329650879
    4. 'vals' → logprob: -6.651261329650879
    5. 'ls' → logprob: -8.776261329650879
    6. '[' → logprob: -9.651261329650879
    7. 'val' → logprob: -10.276261329650879
    8. '   ' → logprob: -10.651261329650879
    9. ')' → logprob: -10.901261329650879
    10. 'interval' → logprob: -11.026261329650879

Token 140: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038014890742488205
    2. ',
' → logprob: -8.250380516052246
    3. '[' → logprob: -10.125380516052246
    4. 'lambda' → logprob: -10.375380516052246
    5. ' ,' → logprob: -10.500380516052246
    6. ',[' → logprob: -11.750380516052246
    7. '[],' → logprob: -12.500380516052246
    8. '(lambda' → logprob: -12.875380516052246
    9. ' lambda' → logprob: -13.500380516052246
    10. ',key' → logprob: -13.500380516052246

Token 141: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.1606072336435318
    2. ' lambda' → logprob: -1.9106072187423706
    3. '(lambda' → logprob: -7.91060733795166
    4. '   ' → logprob: -11.53560733795166
    5. '=lambda' → logprob: -12.78560733795166
    6. '
' → logprob: -13.66060733795166
    7. '_lambda' → logprob: -14.28560733795166
    8. ')' → logprob: -14.28560733795166
    9. ' ' → logprob: -14.91060733795166
    10. '    
' → logprob: -15.66060733795166

Token 142: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.870567262172699
    2. ' x' → logprob: -0.870567262172699
    3. ' acc' → logprob: -1.8705673217773438
    4. 'a' → logprob: -5.620567321777344
    5. 'x' → logprob: -6.745567321777344
    6. ' prev' → logprob: -6.745567321777344
    7. 'acc' → logprob: -7.120567321777344
    8. ' intervals' → logprob: -7.120567321777344
    9. ' ' → logprob: -8.745567321777344
    10. ' last' → logprob: -9.245567321777344

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003641049610450864
    2. ' x' → logprob: -6.128641128540039
    3. ' ,' → logprob: -8.003641128540039
    4. ' b' → logprob: -8.253641128540039
    5. 'x' → logprob: -8.378641128540039
    6. ',b' → logprob: -8.753641128540039
    7. ' a' → logprob: -8.878641128540039
    8. ',x' → logprob: -9.503641128540039
    9. ',[' → logprob: -9.503641128540039
    10. 'b' → logprob: -9.753641128540039

Token 144: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.17975328862667084
    2. ' b' → logprob: -1.804753303527832
    3. ' ' → logprob: -12.054753303527832
    4. ',b' → logprob: -14.304753303527832
    5. 'interval' → logprob: -14.554753303527832
    6. '  ' → logprob: -14.804753303527832
    7. '    ' → logprob: -15.179753303527832
    8. '   ' → logprob: -15.304753303527832
    9. ',' → logprob: -15.304753303527832
    10. '	b' → logprob: -15.679753303527832

Token 145: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038821667432785034
    2. ':' → logprob: -3.2888216972351074
    3. ' ,' → logprob: -8.28882122039795
    4. ',[' → logprob: -8.28882122039795
    5. ' :' → logprob: -8.41382122039795
    6. ':[' → logprob: -10.53882122039795
    7. ',
' → logprob: -12.03882122039795
    8. ',:' → logprob: -12.16382122039795
    9. ',b' → logprob: -12.41382122039795
    10. ' ,[' → logprob: -12.53882122039795

Token 146: ' [' (ID: 723)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.32710373401641846
    2. ' [' → logprob: -1.4521037340164185
    3. '[' → logprob: -3.202103614807129
    4. '[b' → logprob: -5.702103614807129
    5. ' a' → logprob: -8.452103614807129
    6. 'a' → logprob: -8.577103614807129
    7. ' ' → logprob: -8.952103614807129
    8. '[
' → logprob: -8.952103614807129
    9. '[min' → logprob: -9.827103614807129
    10. '([' → logprob: -10.077103614807129

Token 147: 'max' (ID: 3228)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004759292118251324
    2. ' a' → logprob: -5.379759311676025
    3. '0' → logprob: -9.004758834838867
    4. ' ' → logprob: -12.004758834838867
    5. 'max' → logprob: -12.754758834838867
    6. 'min' → logprob: -12.879758834838867
    7. 'b' → logprob: -13.504758834838867
    8. ' max' → logprob: -13.629758834838867
    9. '   ' → logprob: -14.504758834838867
    10. ' min' → logprob: -14.504758834838867

Token 148: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0009682760573923588
    2. '(' → logprob: -7.0009684562683105
    3. 'a' → logprob: -10.000967979431152
    4. '(
' → logprob: -12.250967979431152
    5. ' (' → logprob: -12.750967979431152
    6. ' a' → logprob: -13.500967979431152
    7. ',' → logprob: -14.375967979431152
    8. '([' → logprob: -15.250967979431152
    9. ',a' → logprob: -15.250967979431152
    10. '(max' → logprob: -15.875967979431152

Token 149: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0008582198061048985
    2. '(' → logprob: -7.375858306884766
    3. '0' → logprob: -9.250858306884766
    4. '
' → logprob: -9.875858306884766
    5. '][' → logprob: -10.750858306884766
    6. ' ' → logprob: -11.000858306884766
    7. '1' → logprob: -11.875858306884766
    8. '   ' → logprob: -11.875858306884766
    9. '[
' → logprob: -12.500858306884766
    10. ':' → logprob: -12.500858306884766

Token 150: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004628296010196209
    2. '1' → logprob: -5.3796281814575195
    3. '
' → logprob: -12.62962818145752
    4. ' ' → logprob: -12.87962818145752
    5. '[' → logprob: -13.75462818145752
    6. '   ' → logprob: -15.00462818145752
    7. '```' → logprob: -16.254629135131836
    8. '-' → logprob: -16.629629135131836
    9. '01' → logprob: -16.754629135131836
    10. '2' → logprob: -16.817129135131836

Token 151: '],' (ID: 2155)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06958255916833878
    2. ',' → logprob: -2.819582462310791
    3. '],' → logprob: -5.694582462310791
    4. '0' → logprob: -6.319582462310791
    5. '),' → logprob: -6.819582462310791
    6. ' ' → logprob: -7.069582462310791
    7. ' ,' → logprob: -8.06958293914795
    8. '][' → logprob: -10.44458293914795
    9. ',b' → logprob: -10.69458293914795
    10. '   ' → logprob: -10.94458293914795

Token 152: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3534581959247589
    2. ' b' → logprob: -1.2284581661224365
    3. ' max' → logprob: -5.728458404541016
    4. 'max' → logprob: -6.853458404541016
    5. 'a' → logprob: -7.853458404541016
    6. ' min' → logprob: -9.103458404541016
    7. ' a' → logprob: -9.103458404541016
    8. 'min' → logprob: -9.853458404541016
    9. ' ' → logprob: -11.103458404541016
    10. '0' → logprob: -11.853458404541016

Token 153: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.020609159022569656
    2. '0' → logprob: -3.895609140396118
    3. '][' → logprob: -10.520608901977539
    4. '1' → logprob: -11.270608901977539
    5. ' ' → logprob: -11.270608901977539
    6. '[
' → logprob: -12.770608901977539
    7. ')[' → logprob: -13.145608901977539
    8. ',' → logprob: -13.270608901977539
    9. ' [' → logprob: -13.645608901977539
    10. '```' → logprob: -13.895608901977539

Token 154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017067246371880174
    2. '1' → logprob: -6.626706600189209
    3. ' ' → logprob: -8.251707077026367
    4. '[' → logprob: -9.251707077026367
    5. '   ' → logprob: -11.689207077026367
    6. '```' → logprob: -12.189207077026367
    7. '  ' → logprob: -13.501707077026367
    8. '
' → logprob: -13.814207077026367
    9. ')' → logprob: -14.626707077026367
    10. 'from' → logprob: -15.001707077026367

Token 155: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0006264181574806571
    2. ' ),' → logprob: -7.625626564025879
    3. ')' → logprob: -9.625626564025879
    4. ',' → logprob: -10.625626564025879
    5. '),
' → logprob: -11.000626564025879
    6. ')],' → logprob: -11.375626564025879
    7. '[' → logprob: -12.375626564025879
    8. '],' → logprob: -12.500626564025879
    9. ')]' → logprob: -12.875626564025879
    10. ' ' → logprob: -13.250626564025879

Token 156: ' min' (ID: 1349)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.14604492485523224
    2. ' max' → logprob: -2.021044969558716
    3. 'min' → logprob: -5.771044731140137
    4. ' min' → logprob: -8.396044731140137
    5. '   ' → logprob: -11.896044731140137
    6. ' ' → logprob: -12.521044731140137
    7. 'a' → logprob: -12.771044731140137
    8. '	max' → logprob: -12.771044731140137
    9. '  ' → logprob: -13.521044731140137
    10. '    ' → logprob: -13.521044731140137

Token 157: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -8.65707261255011e-06
    2. '(' → logprob: -12.125008583068848
    3. 'a' → logprob: -13.000008583068848
    4. '(
' → logprob: -14.250008583068848
    5. ' (' → logprob: -15.250008583068848
    6. '   ' → logprob: -18.125009536743164
    7. '(max' → logprob: -18.375009536743164
    8. ' a' → logprob: -18.375009536743164
    9. '((' → logprob: -18.500009536743164
    10. ' ' → logprob: -19.000009536743164

Token 158: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0017038638470694423
    2. '(' → logprob: -6.37670373916626
    3. ' [' → logprob: -14.751704216003418
    4. '1' → logprob: -15.251704216003418
    5. '][' → logprob: -15.376704216003418
    6. 'a' → logprob: -15.501704216003418
    7. '[
' → logprob: -15.751704216003418
    8. '   ' → logprob: -16.5017032623291
    9. ' ' → logprob: -16.6267032623291
    10. '
' → logprob: -16.6267032623291

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014323688112199306
    2. '[' → logprob: -4.264323711395264
    3. ' ' → logprob: -9.764323234558105
    4. '
' → logprob: -10.014323234558105
    5. '(' → logprob: -11.139323234558105
    6. '0' → logprob: -11.514323234558105
    7. ' [' → logprob: -11.639323234558105
    8. '```' → logprob: -11.889323234558105
    9. '][' → logprob: -12.639323234558105
    10. '   ' → logprob: -13.139323234558105

Token 160: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037547098472714424
    2. '[' → logprob: -6.128754615783691
    3. ' ,' → logprob: -7.503754615783691
    4. '(),' → logprob: -7.628754615783691
    5. '),' → logprob: -8.253754615783691
    6. '],' → logprob: -8.378754615783691
    7. ')' → logprob: -11.628754615783691
    8. ' ' → logprob: -12.128754615783691
    9. ',b' → logprob: -12.503754615783691
    10. ',
' → logprob: -13.003754615783691

Token 161: ' b' (ID: 287)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020354038861114532
    2. ' a' → logprob: -8.500203132629395
    3. '   ' → logprob: -16.75020408630371
    4. '	a' → logprob: -17.75020408630371
    5. ' ' → logprob: -18.00020408630371
    6. ')' → logprob: -18.25020408630371
    7. 'max' → logprob: -18.37520408630371
    8. '  ' → logprob: -18.50020408630371
    9. ')a' → logprob: -19.12520408630371
    10. '(a' → logprob: -19.50020408630371

Token 162: '[' (ID: 58)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015173576539382339
    2. '[' → logprob: -6.626517295837402
    3. ' ' → logprob: -9.251517295837402
    4. '][' → logprob: -10.501517295837402
    5. '])' → logprob: -11.001517295837402
    6. ')' → logprob: -11.626517295837402
    7. ',' → logprob: -11.751517295837402
    8. '   ' → logprob: -11.751517295837402
    9. '0' → logprob: -11.876517295837402
    10. ']' → logprob: -12.501517295837402

Token 163: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.618001053633634e-05
    2. '[' → logprob: -11.500025749206543
    3. ' ' → logprob: -11.625025749206543
    4. '0' → logprob: -13.250025749206543
    5. '])' → logprob: -13.250025749206543
    6. '   ' → logprob: -14.312525749206543
    7. '```' → logprob: -14.562525749206543
    8. ']' → logprob: -15.125025749206543
    9. ')])' → logprob: -15.937525749206543
    10. ')' → logprob: -15.937525749206543

Token 164: '])' (ID: 4636)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.046920470893383026
    2. ')]' → logprob: -3.4219205379486084
    3. '])' → logprob: -4.671920299530029
    4. ')' → logprob: -5.671920299530029
    5. '),' → logprob: -8.921920776367188
    6. '])]' → logprob: -9.546920776367188
    7. ')])
' → logprob: -10.046920776367188
    8. ']])' → logprob: -10.421920776367188
    9. ')],' → logprob: -10.421920776367188
    10. ' )' → logprob: -10.671920776367188

Token 165: ' if' (ID: 538)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.020292293280363083
    2. ']' → logprob: -4.395292282104492
    3. '])' → logprob: -5.520292282104492
    4. ')' → logprob: -6.770292282104492
    5. ']))
' → logprob: -6.895292282104492
    6. ',' → logprob: -7.520292282104492
    7. ')])' → logprob: -8.020292282104492
    8. '],' → logprob: -8.520292282104492
    9. '))' → logprob: -9.020292282104492
    10. ')]' → logprob: -9.395292282104492

Token 166: ' not' (ID: 625)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06925692409276962
    2. 'b' → logprob: -3.1942570209503174
    3. 'len' → logprob: -4.194256782531738
    4. ' a' → logprob: -4.819256782531738
    5. 'max' → logprob: -7.069256782531738
    6. ' b' → logprob: -7.069256782531738
    7. ' len' → logprob: -7.194256782531738
    8. 'min' → logprob: -9.194256782531738
    9. ' max' → logprob: -9.569256782531738
    10. ' ' → logprob: -9.819256782531738

Token 167: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8591760993003845
    2. 'a' → logprob: -1.9841761589050293
    3. ' any' → logprob: -2.1091761589050293
    4. ' b' → logprob: -2.2341761589050293
    5. ' ge' → logprob: -3.3591761589050293
    6. ' (' → logprob: -3.4841761589050293
    7. 'b' → logprob: -3.8591761589050293
    8. '(a' → logprob: -3.8591761589050293
    9. ' isinstance' → logprob: -4.109176158905029
    10. 'ge' → logprob: -4.234176158905029

Token 168: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07477527856826782
    2. ' ' → logprob: -4.324775218963623
    3. '1' → logprob: -4.824775218963623
    4. ' is' → logprob: -4.824775218963623
    5. ' or' → logprob: -4.949775218963623
    6. 'is' → logprob: -5.449775218963623
    7. ')' → logprob: -5.824775218963623
    8. '0' → logprob: -5.949775218963623
    9. 'None' → logprob: -6.137275218963623
    10. '   ' → logprob: -6.199775218963623

Token 169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02074800431728363
    2. '[' → logprob: -4.395748138427734
    3. '0' → logprob: -5.020748138427734
    4. ' ' → logprob: -7.895748138427734
    5. '(' → logprob: -8.208248138427734
    6. '   ' → logprob: -8.833248138427734
    7. ']' → logprob: -9.208248138427734
    8. '```' → logprob: -9.270748138427734
    9. '
' → logprob: -9.458248138427734
    10. 'None' → logprob: -9.645748138427734

Token 170: ']' (ID: 60)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.4332197904586792
    2. ' <' → logprob: -1.1832197904586792
    3. ' is' → logprob: -4.058219909667969
    4. ' ==' → logprob: -4.808219909667969
    5. '==' → logprob: -4.808219909667969
    6. '==-' → logprob: -5.933219909667969
    7. '>' → logprob: -6.308219909667969
    8. ' ' → logprob: -6.683219909667969
    9. 'is' → logprob: -6.683219909667969
    10. '>=' → logprob: -6.808219909667969

Token 171: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.18522301316261292
    2. ' <' → logprob: -2.31022310256958
    3. '>' → logprob: -3.31022310256958
    4. '>=' → logprob: -4.31022310256958
    5. '==' → logprob: -5.06022310256958
    6. ' is' → logprob: -5.56022310256958
    7. '<b' → logprob: -6.68522310256958
    8. ' or' → logprob: -6.81022310256958
    9. 'or' → logprob: -6.93522310256958
    10. ' ' → logprob: -6.93522310256958

Token 172: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20142309367656708
    2. ' b' → logprob: -1.7014230489730835
    3. ' ' → logprob: -12.826422691345215
    4. '0' → logprob: -12.951422691345215
    5. '=b' → logprob: -13.826422691345215
    6. '	b' → logprob: -14.201422691345215
    7. ')b' → logprob: -14.326422691345215
    8. 'a' → logprob: -14.451422691345215
    9. '=' → logprob: -14.576422691345215
    10. '[' → logprob: -15.701422691345215

Token 173: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06440339237451553
    2. '1' → logprob: -2.8144032955169678
    3. '0' → logprob: -6.064403533935547
    4. ' [' → logprob: -9.939403533935547
    5. ' ' → logprob: -10.814403533935547
    6. '[
' → logprob: -10.939403533935547
    7. '   ' → logprob: -12.564403533935547
    8. '][' → logprob: -12.689403533935547
    9. '(' → logprob: -12.814403533935547
    10. ')' → logprob: -12.939403533935547

Token 174: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1005835011601448
    2. '1' → logprob: -2.350583553314209
    3. '[' → logprob: -8.47558307647705
    4. ' ' → logprob: -8.85058307647705
    5. '   ' → logprob: -11.47558307647705
    6. '
' → logprob: -12.66308307647705
    7. ']' → logprob: -12.91308307647705
    8. '  ' → logprob: -13.35058307647705
    9. ')' → logprob: -13.53808307647705
    10. '<|end|>' → logprob: -14.35058307647705

Token 175: ']' (ID: 60)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.024598553776741028
    2. ']' → logprob: -4.149598598480225
    3. 'else' → logprob: -5.024598598480225
    4. ')' → logprob: -6.524598598480225
    5. ' ]' → logprob: -8.899598121643066
    6. ' ' → logprob: -9.149598121643066
    7. '])' → logprob: -9.274598121643066
    8. ' )' → logprob: -10.649598121643066
    9. '    ' → logprob: -10.774598121643066
    10. '   ' → logprob: -10.899598121643066

Token 176: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.014266107231378555
    2. 'else' → logprob: -4.264266014099121
    3. ' ' → logprob: -10.514266014099121
    4. ',' → logprob: -10.889266014099121
    5. ')' → logprob: -11.139266014099121
    6. ']' → logprob: -11.389266014099121
    7. ' and' → logprob: -12.264266014099121
    8. '   ' → logprob: -12.389266014099121
    9. '    ' → logprob: -12.514266014099121
    10. '])' → logprob: -13.139266014099121

Token 177: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8584367632865906
    2. ' b' → logprob: -1.2334368228912354
    3. 'a' → logprob: -1.7334368228912354
    4. ' a' → logprob: -2.2334368228912354
    5. ' ' → logprob: -7.858436584472656
    6. 'float' → logprob: -8.858436584472656
    7. ' float' → logprob: -9.108436584472656
    8. '  ' → logprob: -9.483436584472656
    9. '   ' → logprob: -9.858436584472656
    10. ' max' → logprob: -10.108436584472656

Token 178: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02731475606560707
    2. '1' → logprob: -3.6523146629333496
    3. '][' → logprob: -7.15231466293335
    4. '0' → logprob: -9.902315139770508
    5. ' [' → logprob: -10.152315139770508
    6. ',' → logprob: -10.152315139770508
    7. '[
' → logprob: -10.652315139770508
    8. ']' → logprob: -10.902315139770508
    9. ')[' → logprob: -10.902315139770508
    10. '])[' → logprob: -11.777315139770508

Token 179: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001732775242999196
    2. '0' → logprob: -6.37673282623291
    3. ' ' → logprob: -11.00173282623291
    4. '   ' → logprob: -12.62673282623291
    5. '[' → logprob: -12.87673282623291
    6. ']' → logprob: -13.00173282623291
    7. '
' → logprob: -13.56423282623291
    8. '```' → logprob: -13.62673282623291
    9. '  ' → logprob: -14.56423282623291
    10. '][' → logprob: -14.87673282623291

Token 180: ']]' (ID: 8928)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.08621203154325485
    2. '])' → logprob: -3.086211919784546
    3. ']])' → logprob: -4.211212158203125
    4. ']' → logprob: -4.836212158203125
    5. ')])' → logprob: -5.086212158203125
    6. '])]' → logprob: -5.336212158203125
    7. ']]' → logprob: -7.086212158203125
    8. ')]' → logprob: -7.461212158203125
    9. '])))' → logprob: -7.586212158203125
    10. ' ]' → logprob: -8.086212158203125

Token 181: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00357833388261497
    2. ')' → logprob: -5.753578186035156
    3. '))
' → logprob: -8.628578186035156
    4. ')))' → logprob: -9.378578186035156
    5. ',' → logprob: -9.628578186035156
    6. '),' → logprob: -11.003578186035156
    7. ']))' → logprob: -11.003578186035156
    8. ')]' → logprob: -11.378578186035156
    9. '])' → logprob: -11.378578186035156
    10. ')])' → logprob: -12.628578186035156

Token 182: 'counter' (ID: 32128)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5925948619842529
    2. '
' → logprob: -2.217594861984253
    3. 'print' → logprob: -2.342594861984253
    4. ']' → logprob: -2.592594861984253
    5. 'for' → logprob: -2.717594861984253
    6. 'if' → logprob: -3.342594861984253
    7. '<|end|>' → logprob: -3.592594861984253
    8. '[' → logprob: -4.217595100402832
    9. '[
' → logprob: -5.342595100402832
    10. ')
' → logprob: -5.342595100402832

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07965240627527237
    2. '=' → logprob: -2.5796523094177246
    3. '(' → logprob: -8.204652786254883
    4. 's' → logprob: -8.329652786254883
    5. ' ' → logprob: -8.829652786254883
    6. ',' → logprob: -10.079652786254883
    7. '  ' → logprob: -10.829652786254883
    8. ')' → logprob: -11.329652786254883
    9. '   ' → logprob: -12.329652786254883
    10. ' ' → logprob: -12.329652786254883

Token 184: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011750608682632446
    2. ' ' → logprob: -5.3867506980896
    3. 'len' → logprob: -6.2617506980896
    4. '{}' → logprob: -6.3867506980896
    5. '1' → logprob: -6.6367506980896
    6. 'm' → logprob: -7.0117506980896
    7. 'sum' → logprob: -7.6367506980896
    8. '[' → logprob: -8.261750221252441
    9. '{' → logprob: -8.886750221252441
    10. 'ge' → logprob: -9.261750221252441

Token 185: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27417293190956116
    2. 'sum' → logprob: -2.0241730213165283
    3. 'len' → logprob: -2.5241730213165283
    4. '1' → logprob: -4.399172782897949
    5. 'm' → logprob: -5.149172782897949
    6. 'max' → logprob: -5.399172782897949
    7. 'ge' → logprob: -6.774172782897949
    8. '[' → logprob: -6.899172782897949
    9. '[m' → logprob: -7.524172782897949
    10. '{' → logprob: -7.774172782897949

Token 186: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 187: ' sum' (ID: 4215)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.18996039032936096
    2. 'sum' → logprob: -2.314960479736328
    3. ' max' → logprob: -3.189960479736328
    4. 'len' → logprob: -3.814960479736328
    5. ' sum' → logprob: -5.314960479736328
    6. 'next' → logprob: -5.939960479736328
    7. '(max' → logprob: -6.814960479736328
    8. ' len' → logprob: -7.064960479736328
    9. 'mer' → logprob: -7.189960479736328
    10. ' next' → logprob: -7.939960479736328

Token 188: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07574371248483658
    2. '(sub' → logprob: -3.8257436752319336
    3. '(map' → logprob: -4.200743675231934
    4. '(not' → logprob: -4.575743675231934
    5. '((' → logprob: -4.825743675231934
    6. '(lambda' → logprob: -5.325743675231934
    7. '(len' → logprob: -6.325743675231934
    8. '(counter' → logprob: -6.450743675231934
    9. '(m' → logprob: -6.575743675231934
    10. '(x' → logprob: -6.825743675231934

Token 189: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10345965623855591
    2. '!=' → logprob: -3.103459596633911
    3. '(' → logprob: -3.603459596633911
    4. 'and' → logprob: -5.10345983505249
    5. ' !=' → logprob: -5.10345983505249
    6. '<' → logprob: -5.47845983505249
    7. '1' → logprob: -6.35345983505249
    8. '+' → logprob: -6.60345983505249
    9. ' <' → logprob: -6.72845983505249
    10. '[i' → logprob: -6.97845983505249

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11653299629688263
    2. '[' → logprob: -2.366533041000366
    3. '0' → logprob: -5.116532802581787
    4. '(' → logprob: -6.366532802581787
    5. ' ' → logprob: -6.616532802581787
    6. '!=' → logprob: -6.616532802581787
    7. '][' → logprob: -6.991532802581787
    8. '
' → logprob: -7.366532802581787
    9. ',' → logprob: -7.491532802581787
    10. ' !=' → logprob: -7.491532802581787

Token 191: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3821830153465271
    2. '<' → logprob: -2.007183074951172
    3. '>' → logprob: -2.882183074951172
    4. ' <' → logprob: -2.882183074951172
    5. '[' → logprob: -3.507183074951172
    6. ' -' → logprob: -3.882183074951172
    7. '-' → logprob: -4.632183074951172
    8. ' >' → logprob: -6.007183074951172
    9. ' for' → logprob: -6.257183074951172
    10. ']<' → logprob: -6.382183074951172

Token 192: ' <' (ID: 464)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5787730813026428
    2. ' <' → logprob: -1.578773021697998
    3. '<' → logprob: -2.453773021697998
    4. '-' → logprob: -2.703773021697998
    5. ' for' → logprob: -3.453773021697998
    6. ' >' → logprob: -4.328773021697998
    7. '>' → logprob: -4.328773021697998
    8. ' >=' → logprob: -4.953773021697998
    9. '>=' → logprob: -5.203773021697998
    10. 'for' → logprob: -5.578773021697998

Token 193: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.23515914380550385
    2. 'a' → logprob: -1.985159158706665
    3. ' b' → logprob: -2.735159158706665
    4. ' a' → logprob: -4.985158920288086
    5. 'm' → logprob: -8.485158920288086
    6. 'n' → logprob: -9.860158920288086
    7. 'c' → logprob: -9.985158920288086
    8. 'len' → logprob: -10.610158920288086
    9. 'interval' → logprob: -10.860158920288086
    10. ' c' → logprob: -11.110158920288086

Token 194: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.5027299822540954e-05
    2. 'for' → logprob: -10.875055313110352
    3. ' [' → logprob: -11.625055313110352
    4. ' for' → logprob: -11.750055313110352
    5. '_' → logprob: -12.500055313110352
    6. '_[' → logprob: -12.875055313110352
    7. '```' → logprob: -13.000055313110352
    8. ' ' → logprob: -13.250055313110352
    9. '   ' → logprob: -13.250055313110352
    10. 'and' → logprob: -13.750055313110352

Token 195: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13681788742542267
    2. '1' → logprob: -2.1368179321289062
    3. '[' → logprob: -4.636817932128906
    4. ' ' → logprob: -9.511817932128906
    5. '```' → logprob: -10.261817932128906
    6. '][' → logprob: -11.636817932128906
    7. '   ' → logprob: -11.949317932128906
    8. '
' → logprob: -12.136817932128906
    9. '(' → logprob: -12.949317932128906
    10. ']' → logprob: -13.199317932128906

Token 196: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06199267506599426
    2. 'for' → logprob: -2.811992645263672
    3. ' ' → logprob: -11.686992645263672
    4. '   ' → logprob: -12.061992645263672
    5. ')' → logprob: -12.311992645263672
    6. ' and' → logprob: -13.436992645263672
    7. ',' → logprob: -13.686992645263672
    8. '	for' → logprob: -13.811992645263672
    9. '    ' → logprob: -14.436992645263672
    10. '
' → logprob: -14.436992645263672

Token 197: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2014707326889038
    2. 'for' → logprob: -1.7014707326889038
    3. ',' → logprob: -9.951470375061035
    4. ')' → logprob: -12.576470375061035
    5. ' ' → logprob: -12.701470375061035
    6. '   ' → logprob: -13.951470375061035
    7. ' and' → logprob: -14.451470375061035
    8. '	for' → logprob: -14.701470375061035
    9. '
' → logprob: -14.826470375061035
    10. ' or' → logprob: -15.076470375061035

Token 198: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005567280459217727
    2. ' a' → logprob: -7.500556945800781
    3. '(a' → logprob: -13.250556945800781
    4. '_,' → logprob: -14.375556945800781
    5. ',' → logprob: -14.625556945800781
    6. '  ' → logprob: -15.625556945800781
    7. ' ' → logprob: -15.625556945800781
    8. '   ' → logprob: -15.625556945800781
    9. '	a' → logprob: -15.875556945800781
    10. ',a' → logprob: -16.12555694580078

Token 199: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028188975993543863
    2. ',b' → logprob: -5.877819061279297
    3. 'b' → logprob: -11.502819061279297
    4. ',
' → logprob: -13.127819061279297
    5. ' ,' → logprob: -14.252819061279297
    6. '_,' → logprob: -14.627819061279297
    7. 'in' → logprob: -14.627819061279297
    8. 'a' → logprob: -15.252819061279297
    9. ',m' → logprob: -15.877819061279297
    10. '
' → logprob: -17.627819061279297

Token 200: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3868728280067444
    2. ' b' → logprob: -1.1368727684020996
    3. ',b' → logprob: -13.386873245239258
    4. ' in' → logprob: -16.511873245239258
    5. ',' → logprob: -16.511873245239258
    6. '  ' → logprob: -17.011873245239258
    7. ' ' → logprob: -17.511873245239258
    8. '   ' → logprob: -17.636873245239258
    9. '    ' → logprob: -18.261873245239258
    10. ' pair' → logprob: -18.761873245239258

Token 201: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011728443205356598
    2. 'in' → logprob: -6.75117301940918
    3. ',' → logprob: -13.12617301940918
    4. ')' → logprob: -15.25117301940918
    5. ' ' → logprob: -15.62617301940918
    6. ' zip' → logprob: -16.62617301940918
    7. 'interval' → logprob: -17.50117301940918
    8. ' intervals' → logprob: -17.50117301940918
    9. 's' → logprob: -18.37617301940918
    10. 'zip' → logprob: -18.50117301940918

Token 202: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.2014387845993042
    2. ' zip' → logprob: -1.7014387845993042
    3. 'pair' → logprob: -10.951438903808594
    4. '(zip' → logprob: -12.326438903808594
    5. ' pair' → logprob: -13.076438903808594
    6. ' ' → logprob: -14.451438903808594
    7. '.zip' → logprob: -15.201438903808594
    8. '
' → logprob: -15.701438903808594
    9. '   ' → logprob: -16.076438903808594
    10. '  ' → logprob: -16.326438903808594

Token 203: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018866342725232244
    2. 'mer' → logprob: -6.37688684463501
    3. '(interval' → logprob: -8.626886367797852
    4. 'interval' → logprob: -12.376886367797852
    5. 'mers' → logprob: -14.876886367797852
    6. '(m' → logprob: -15.001886367797852
    7. '(
' → logprob: -16.37688636779785
    8. ' (' → logprob: -16.87688636779785
    9. '
' → logprob: -17.25188636779785
    10. '(iter' → logprob: -17.37688636779785

Token 204: 'mer' (ID: 1159)
  Prédit: 'mer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mer' → logprob: -0.0029785369988530874
    2. 'interval' → logprob: -5.877978324890137
    3. 'mers' → logprob: -9.002978324890137
    4. '   ' → logprob: -10.502978324890137
    5. ' intervals' → logprob: -11.627978324890137
    6. 'merged' → logprob: -12.502978324890137
    7. ' merges' → logprob: -12.502978324890137
    8. ' ' → logprob: -13.002978324890137
    9. '(interval' → logprob: -14.127978324890137
    10. '  ' → logprob: -14.377978324890137

Token 205: 'ges' (ID: 4431)
  Prédit: 'ges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ges' → logprob: -0.00010235115041723475
    2. 'es' → logprob: -9.875102043151855
    3. 'ge' → logprob: -10.625102043151855
    4. '   ' → logprob: -11.750102043151855
    5. 'erges' → logprob: -12.000102043151855
    6. 'ses' → logprob: -12.625102043151855
    7. '[' → logprob: -13.750102043151855
    8. '```' → logprob: -13.875102043151855
    9. ' ' → logprob: -14.625102043151855
    10. 'gs' → logprob: -14.750102043151855

Token 206: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037621514638885856
    2. ' ,' → logprob: -8.000375747680664
    3. '[:-' → logprob: -10.125375747680664
    4. '[' → logprob: -15.125375747680664
    5. '   ' → logprob: -16.125375747680664
    6. 'mer' → logprob: -16.375375747680664
    7. '[:' → logprob: -17.125375747680664
    8. '  ' → logprob: -17.375375747680664
    9. ',[' → logprob: -17.500375747680664
    10. '```' → logprob: -17.625375747680664

Token 207: ' is' (ID: 382)
  Prédit: 'mer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mer' → logprob: -0.0005791273433715105
    2. ' merges' → logprob: -7.875579357147217
    3. 'mers' → logprob: -9.500578880310059
    4. 'interval' → logprob: -9.500578880310059
    5. '   ' → logprob: -10.250578880310059
    6. ' intervals' → logprob: -11.875578880310059
    7. ' ' → logprob: -13.000578880310059
    8. '  ' → logprob: -13.875578880310059
    9. 'merged' → logprob: -14.125578880310059
    10. '    ' → logprob: -14.500578880310059

Token 208: 'lice' (ID: 7321)
  Prédit: 'lice'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lice' → logprob: -1.8550976164988242e-05
    2. 'slice' → logprob: -11.250018119812012
    3. 'lace' → logprob: -12.625018119812012
    4. 'ice' → logprob: -14.000018119812012
    5. 'list' → logprob: -15.000018119812012
    6. 'l' → logprob: -15.375018119812012
    7. 'lices' → logprob: -16.000019073486328
    8. '```' → logprob: -16.000019073486328
    9. 'liced' → logprob: -16.375019073486328
    10. 'ce' → logprob: -16.625019073486328

Token 209: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018796122167259455
    2. 'mer' → logprob: -6.376879692077637
    3. '(interval' → logprob: -8.876879692077637
    4. '(counter' → logprob: -10.501879692077637
    5. 'interval' → logprob: -12.376879692077637
    6. 'counter' → logprob: -12.876879692077637
    7. '(m' → logprob: -13.001879692077637
    8. ' ' → logprob: -14.876879692077637
    9. '   ' → logprob: -15.751879692077637
    10. ' merges' → logprob: -16.00187873840332

Token 210: 'mer' (ID: 1159)
  Prédit: 'mer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mer' → logprob: -0.00012856863031629473
    2. ' merges' → logprob: -9.625128746032715
    3. '   ' → logprob: -10.250128746032715
    4. 'mers' → logprob: -11.250128746032715
    5. 'interval' → logprob: -12.250128746032715
    6. 'merged' → logprob: -12.375128746032715
    7. ' ' → logprob: -13.000128746032715
    8. ' mer' → logprob: -15.000128746032715
    9. '  ' → logprob: -15.125128746032715
    10. ')' → logprob: -15.250128746032715

Token 211: 'ges' (ID: 4431)
  Prédit: 'ges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ges' → logprob: -0.004096923861652613
    2. 'es' → logprob: -6.629096984863281
    3. 's' → logprob: -6.754096984863281
    4. 'ge' → logprob: -7.004096984863281
    5. '```' → logprob: -8.754096984863281
    6. '   ' → logprob: -8.879096984863281
    7. '``' → logprob: -9.379096984863281
    8. '...' → logprob: -10.129096984863281
    9. 'gs' → logprob: -10.504096984863281
    10. '
' → logprob: -11.004096984863281

Token 212: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4742157757282257
    2. ',' → logprob: -0.9742157459259033
    3. ' ,' → logprob: -9.099215507507324
    4. '1' → logprob: -10.974215507507324
    5. '(),' → logprob: -12.724215507507324
    6. ' (' → logprob: -13.474215507507324
    7. '(None' → logprob: -14.224215507507324
    8. '(_,' → logprob: -14.349215507507324
    9. '_,' → logprob: -14.849215507507324
    10. '```' → logprob: -14.974215507507324

Token 213: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000810340337920934
    2. ' ' → logprob: -7.125810146331787
    3. '   ' → logprob: -12.875810623168945
    4. '    ' → logprob: -13.625810623168945
    5. '  ' → logprob: -14.125810623168945
    6. 'counter' → logprob: -14.813310623168945
    7. '     ' → logprob: -15.875810623168945
    8. '        ' → logprob: -16.125810623168945
    9. '```' → logprob: -16.625810623168945
    10. '         ' → logprob: -16.750810623168945

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.908022285439074e-05
    2. ' ' → logprob: -9.750059127807617
    3. '   ' → logprob: -14.500059127807617
    4. '  ' → logprob: -15.875059127807617
    5. '    ' → logprob: -16.750059127807617
    6. '     ' → logprob: -18.375059127807617
    7. '2' → logprob: -18.625059127807617
    8. 'None' → logprob: -19.000059127807617
    9. '0' → logprob: -19.250059127807617
    10. '        ' → logprob: -19.500059127807617

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002281695604324341
    2. ',None' → logprob: -6.502281665802002
    3. 'None' → logprob: -7.502281665802002
    4. ' ,' → logprob: -8.62728214263916
    5. '(None' → logprob: -10.25228214263916
    6. ' None' → logprob: -11.75228214263916
    7. ')))' → logprob: -12.75228214263916
    8. ' ' → logprob: -14.75228214263916
    9. ',
' → logprob: -15.00228214263916
    10. '(),' → logprob: -15.75228214263916

Token 216: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -4.751746746478602e-05
    2. ' None' → logprob: -10.00004768371582
    3. 'len' → logprob: -13.37504768371582
    4. ' ' → logprob: -15.62504768371582
    5. '
' → logprob: -15.87504768371582
    6. '```' → logprob: -16.50004768371582
    7. ',None' → logprob: -17.12504768371582
    8. '(None' → logprob: -17.25004768371582
    9. '_None' → logprob: -17.50004768371582
    10. '  ' → logprob: -17.50004768371582

Token 217: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.12696610391139984
    2. '))' → logprob: -2.1269659996032715
    3. '))))' → logprob: -11.25196647644043
    4. ')' → logprob: -11.62696647644043
    5. ')))
' → logprob: -12.12696647644043
    6. ')));' → logprob: -12.50196647644043
    7. ')):' → logprob: -13.50196647644043
    8. ' ' → logprob: -13.75196647644043
    9. ',' → logprob: -14.00196647644043
    10. ' ))' → logprob: -14.25196647644043

Token 218: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006971848197281361
    2. ')' → logprob: -8.250697135925293
    3. '
' → logprob: -8.750697135925293
    4. ' print' → logprob: -9.625697135925293
    5. 'pr' → logprob: -10.000697135925293
    6. 'n' → logprob: -10.250697135925293
    7. '#' → logprob: -10.250697135925293
    8. ' 
' → logprob: -10.750697135925293
    9. '\n' → logprob: -11.250697135925293
    10. '<|end|>' → logprob: -11.500697135925293

Token 219: '(counter' (ID: 85625)
  Prédit: '(counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(counter' → logprob: -6.44443862256594e-05
    2. '(' → logprob: -9.750064849853516
    3. 'counter' → logprob: -12.250064849853516
    4. '()' → logprob: -13.875064849853516
    5. '(c' → logprob: -15.125064849853516
    6. '[counter' → logprob: -17.375064849853516
    7. '(
' → logprob: -17.625064849853516
    8. '(count' → logprob: -17.750064849853516
    9. '(len' → logprob: -18.500064849853516
    10. '((' → logprob: -18.500064849853516

Token 220: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.786196975852363e-05
    2. ' )' → logprob: -10.750038146972656
    3. '+' → logprob: -11.625038146972656
    4. ')
' → logprob: -12.375038146972656
    5. '))' → logprob: -13.875038146972656
    6. '**' → logprob: -14.750038146972656
    7. '*' → logprob: -14.875038146972656
    8. ')`' → logprob: -14.875038146972656
    9. ')#' → logprob: -15.500038146972656
    10. '```' → logprob: -15.750038146972656


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 218
Tokens correctement prédits (1ère position, stricte): 100
Tokens correctement prédits (1ère position, avec adaptation): 100
Tokens correctement prédits (top 10): 174
Précision stricte (1ère position): 45.87%
Précision adaptée (1ère position): 45.87%
Précision (top 10): 79.82%
================================================================================
