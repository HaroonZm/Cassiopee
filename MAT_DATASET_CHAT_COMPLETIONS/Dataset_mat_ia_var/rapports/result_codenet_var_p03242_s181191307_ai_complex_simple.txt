================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
Str = input()
swap_map = {'1': ' ', '9': '1', ' ': '9'}
Str = ''.join(map(lambda c: reduce(lambda acc, k: swap_map[k] if c == k else acc, swap_map, c), Str))
print(Str)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3122055232524872
    2. 'partial' → logprob: -2.0622055530548096
    3. 'reduce' → logprob: -2.0622055530548096
    4. 'l' → logprob: -4.8122053146362305
    5. ' wraps' → logprob: -5.3122053146362305
    6. 'cache' → logprob: -8.56220531463623
    7. 'cached' → logprob: -8.56220531463623
    8. 'cmp' → logprob: -8.93720531463623
    9. ' partial' → logprob: -9.56220531463623
    10. 'wr' → logprob: -9.93720531463623

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010288605466485023
    2. '(lambda' → logprob: -4.760288715362549
    3. ' (' → logprob: -7.385288715362549
    4. ',' → logprob: -7.885288715362549
    5. 'def' → logprob: -8.13528823852539
    6. '.' → logprob: -8.76028823852539
    7. '```' → logprob: -10.13528823852539
    8. '(
' → logprob: -10.51028823852539
    9. 'lambda' → logprob: -10.63528823852539
    10. 'a' → logprob: -10.76028823852539

Token 5: 'Str' (ID: 3504)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014403714798390865
    2. '(
' → logprob: -5.139403820037842
    3. '(lambda' → logprob: -5.389403820037842
    4. 'def' → logprob: -6.639403820037842
    5. ',' → logprob: -7.139403820037842
    6. '\' → logprob: -8.139403343200684
    7. ' ' → logprob: -8.264403343200684
    8. ' (' → logprob: -8.389403343200684
    9. '
' → logprob: -9.139403343200684
    10. '' → logprob: -9.139403343200684

Token 6: ' =' (ID: 314)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.006425102241337299
    2. 'i' → logprob: -5.131424903869629
    3. 'ip' → logprob: -8.506424903869629
    4. 's' → logprob: -9.506424903869629
    5. 'ings' → logprob: -9.631424903869629
    6. '.' → logprob: -10.256424903869629
    7. 'in' → logprob: -10.381424903869629
    8. ' ' → logprob: -11.256424903869629
    9. 'e' → logprob: -11.381424903869629
    10. '  ' → logprob: -11.506424903869629

Token 7: ' input' (ID: 3422)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.709029495716095
    2. ''' → logprob: -1.3340294361114502
    3. ' "' → logprob: -2.08402943611145
    4. ' '' → logprob: -2.95902943611145
    5. ' ' → logprob: -3.70902943611145
    6. ' ''' → logprob: -3.83402943611145
    7. ' ""' → logprob: -4.584029674530029
    8. ' lambda' → logprob: -6.084029674530029
    9. '""' → logprob: -6.209029674530029
    10. '''' → logprob: -6.209029674530029

Token 8: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01511528342962265
    2. ''' → logprob: -5.265115261077881
    3. '('' → logprob: -5.265115261077881
    4. '("("' → logprob: -5.890115261077881
    5. '"' → logprob: -7.515115261077881
    6. '`' → logprob: -7.640115261077881
    7. '```' → logprob: -7.765115261077881
    8. '("")' → logprob: -9.515115737915039
    9. '()' → logprob: -9.515115737915039
    10. '(
' → logprob: -9.640115737915039

Token 9: 'swap' (ID: 55961)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12887415289878845
    2. ')' → logprob: -3.1288740634918213
    3. '.split' → logprob: -4.1288743019104
    4. '.lower' → logprob: -4.3788743019104
    5. '=' → logprob: -4.6288743019104
    6. '(' → logprob: -5.0038743019104
    7. 'result' → logprob: -5.3788743019104
    8. '_' → logprob: -5.3788743019104
    9. '[' → logprob: -5.7538743019104
    10. 's' → logprob: -6.0038743019104

Token 10: '_map' (ID: 11824)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.4411892294883728
    2. '(' → logprob: -1.5661892890930176
    3. '()' → logprob: -3.0661892890930176
    4. 'per' → logprob: -3.5661892890930176
    5. '_' → logprob: -3.8161892890930176
    6. 's' → logprob: -3.8161892890930176
    7. '_case' → logprob: -4.566189289093018
    8. '_str' → logprob: -5.691189289093018
    9. ' =' → logprob: -5.816189289093018
    10. '_s' → logprob: -6.566189289093018

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3870733678340912
    2. '=' → logprob: -1.1370733976364136
    3. '_' → logprob: -9.512073516845703
    4. '={}' → logprob: -10.012073516845703
    5. ' ={' → logprob: -10.887073516845703
    6. '{' → logprob: -11.262073516845703
    7. ' ' → logprob: -11.262073516845703
    8. ')' → logprob: -11.762073516845703
    9. '={' → logprob: -12.387073516845703
    10. '(' → logprob: -12.387073516845703

Token 12: ' {'' (ID: 11881)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.08025041222572327
    2. '{}' → logprob: -2.5802505016326904
    3. '{'' → logprob: -7.330250263214111
    4. ' {' → logprob: -7.955250263214111
    5. '{"' → logprob: -8.20525074005127
    6. 'dict' → logprob: -10.33025074005127
    7. ' {}' → logprob: -10.83025074005127
    8. '{
' → logprob: -11.20525074005127
    9. 'str' → logprob: -12.70525074005127
    10. '{/*' → logprob: -13.08025074005127

Token 13: '1' (ID: 16)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.39693355560302734
    2. 'A' → logprob: -1.8969335556030273
    3. '{' → logprob: -2.8969335556030273
    4. '0' → logprob: -3.6469335556030273
    5. ''' → logprob: -4.521933555603027
    6. '(':' → logprob: -4.896933555603027
    7. '{'' → logprob: -5.146933555603027
    8. 'S' → logprob: -5.271933555603027
    9. 'i' → logprob: -5.396933555603027
    10. 'O' → logprob: -5.396933555603027

Token 14: '':' (ID: 2337)
  Prédit: '':''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':'' → logprob: -0.5767580270767212
    2. '':' → logprob: -0.8267580270767212
    3. ''' → logprob: -7.201757907867432
    4. '','' → logprob: -11.45175838470459
    5. '':''' → logprob: -11.70175838470459
    6. '2' → logprob: -11.82675838470459
    7. ' ':'' → logprob: -11.82675838470459
    8. '1' → logprob: -11.95175838470459
    9. ':' → logprob: -12.07675838470459
    10. '0' → logprob: -12.07675838470459

Token 15: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0008533471846021712
    2. '0' → logprob: -7.375853538513184
    3. ' '' → logprob: -9.125853538513184
    4. '2' → logprob: -10.250853538513184
    5. ''o' → logprob: -10.375853538513184
    6. ''O' → logprob: -11.250853538513184
    7. ' ' → logprob: -11.500853538513184
    8. '"' → logprob: -12.125853538513184
    9. ''a' → logprob: -13.375853538513184
    10. ''i' → logprob: -13.375853538513184

Token 16: ' ',' (ID: 14089)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007163942791521549
    2. '7' → logprob: -5.757164001464844
    3. '2' → logprob: -5.882164001464844
    4. '9' → logprob: -7.882164001464844
    5. '1' → logprob: -8.257164001464844
    6. 'l' → logprob: -9.257164001464844
    7. ''' → logprob: -9.382164001464844
    8. 'I' → logprob: -9.882164001464844
    9. '-' → logprob: -10.132164001464844
    10. '3' → logprob: -10.507164001464844

Token 17: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.015652338042855263
    2. ''o' → logprob: -5.765652179718018
    3. ''a' → logprob: -6.015652179718018
    4. ''t' → logprob: -6.765652179718018
    5. ''-' → logprob: -7.015652179718018
    6. ''\' → logprob: -7.015652179718018
    7. ''l' → logprob: -7.140652179718018
    8. ''O' → logprob: -7.265652179718018
    9. ''A' → logprob: -7.390652179718018
    10. ''.' → logprob: -7.390652179718018

Token 18: '9' (ID: 24)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06029841676354408
    2. '2' → logprob: -3.685298442840576
    3. 'I' → logprob: -4.685298442840576
    4. 'l' → logprob: -5.185298442840576
    5. '!' → logprob: -5.935298442840576
    6. '7' → logprob: -6.560298442840576
    7. '_' → logprob: -6.685298442840576
    8. '4' → logprob: -6.685298442840576
    9. '-' → logprob: -6.685298442840576
    10. '1' → logprob: -6.810298442840576

Token 19: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.01955525577068329
    2. ''' → logprob: -4.76955509185791
    3. '':'' → logprob: -5.01955509185791
    4. '0' → logprob: -6.39455509185791
    5. '2' → logprob: -7.01955509185791
    6. '1' → logprob: -7.76955509185791
    7. ':' → logprob: -8.26955509185791
    8. '3' → logprob: -8.64455509185791
    9. ''}' → logprob: -8.89455509185791
    10. '8' → logprob: -8.89455509185791

Token 20: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05879801884293556
    2. '':'' → logprob: -4.183797836303711
    3. ''\' → logprob: -4.308797836303711
    4. '':' → logprob: -4.808797836303711
    5. ''.' → logprob: -5.308797836303711
    6. ''-' → logprob: -5.933797836303711
    7. '','' → logprob: -6.683797836303711
    8. '')' → logprob: -6.808797836303711
    9. ''a' → logprob: -6.808797836303711
    10. '0' → logprob: -6.808797836303711

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5918182730674744
    2. '0' → logprob: -1.8418183326721191
    3. ''' → logprob: -2.966818332672119
    4. '\n' → logprob: -3.341818332672119
    5. '9' → logprob: -3.341818332672119
    6. ''}' → logprob: -3.341818332672119
    7. '\t' → logprob: -3.841818332672119
    8. '_' → logprob: -4.716818332672119
    9. '-' → logprob: -4.716818332672119
    10. '2' → logprob: -4.966818332672119

Token 22: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.025875108316540718
    2. ''}' → logprob: -3.7758750915527344
    3. ''' → logprob: -6.150875091552734
    4. ' ',' → logprob: -8.400875091552734
    5. ' '}' → logprob: -9.150875091552734
    6. '','' → logprob: -10.275875091552734
    7. '0' → logprob: -10.650875091552734
    8. '}' → logprob: -11.025875091552734
    9. '',
' → logprob: -11.150875091552734
    10. '7' → logprob: -11.400875091552734

Token 23: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0001358400477329269
    2. ' '' → logprob: -9.25013542175293
    3. ''s' → logprob: -10.87513542175293
    4. '"' → logprob: -12.37513542175293
    5. '',' → logprob: -12.75013542175293
    6. ''a' → logprob: -12.87513542175293
    7. '}' → logprob: -13.12513542175293
    8. ' ' → logprob: -13.87513542175293
    9. ''}' → logprob: -13.87513542175293
    10. ''o' → logprob: -14.37513542175293

Token 24: ' ':' (ID: 30751)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.30457577109336853
    2. '0' → logprob: -2.1795756816864014
    3. ''' → logprob: -2.3045756816864014
    4. ' ':' → logprob: -3.8045756816864014
    5. ' '' → logprob: -4.0545759201049805
    6. ' ':'' → logprob: -5.0545759201049805
    7. '2' → logprob: -6.8045759201049805
    8. '9' → logprob: -7.0545759201049805
    9. '8' → logprob: -7.4295759201049805
    10. ' '}' → logprob: -7.6795759201049805

Token 25: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -8.41129949549213e-05
    2. '9' → logprob: -9.875083923339844
    3. ' '' → logprob: -10.625083923339844
    4. ''}' → logprob: -13.000083923339844
    5. ' ' → logprob: -13.875083923339844
    6. ''s' → logprob: -13.875083923339844
    7. '')' → logprob: -14.125083923339844
    8. '"' → logprob: -14.375083923339844
    9. '`' → logprob: -15.000083923339844
    10. ''''' → logprob: -15.125083923339844

Token 26: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0047359224408864975
    2. ''' → logprob: -5.379735946655273
    3. '0' → logprob: -10.629735946655273
    4. ' ' → logprob: -10.629735946655273
    5. ' '' → logprob: -11.629735946655273
    6. '"' → logprob: -11.942235946655273
    7. '2' → logprob: -11.942235946655273
    8. ''}' → logprob: -12.129735946655273
    9. '')' → logprob: -12.192235946655273
    10. '99' → logprob: -12.442235946655273

Token 27: ''}
' (ID: 32701)
  Prédit: ''}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''}' → logprob: -0.0037806006148457527
    2. ''' → logprob: -6.378780364990234
    3. '',' → logprob: -6.878780364990234
    4. '}' → logprob: -6.878780364990234
    5. ' '}' → logprob: -12.378780364990234
    6. ''}

' → logprob: -12.503780364990234
    7. '','' → logprob: -12.878780364990234
    8. '']' → logprob: -13.503780364990234
    9. ''}}' → logprob: -13.628780364990234
    10. ''}
' → logprob: -14.003780364990234

Token 28: 'Str' (ID: 3504)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6695178747177124
    2. 'print' → logprob: -1.2945178747177124
    3. 'res' → logprob: -2.044517993927002
    4. 'output' → logprob: -4.044517993927002
    5. 'swap' → logprob: -4.669517993927002
    6. 'new' → logprob: -4.794517993927002
    7. 'mapped' → logprob: -4.919517993927002
    8. 'out' → logprob: -5.419517993927002
    9. 'sw' → logprob: -5.544517993927002
    10. 'Sw' → logprob: -5.544517993927002

Token 29: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6650550365447998
    2. '[' → logprob: -1.6650550365447998
    3. '.' → logprob: -2.1650550365448
    4. '<|end|>' → logprob: -2.6650550365448
    5. ' =' → logprob: -2.9150550365448
    6. '[:]' → logprob: -4.415055274963379
    7. '<|end|>' → logprob: -4.915055274963379
    8. '[::-' → logprob: -5.040055274963379
    9. '.split' → logprob: -5.040055274963379
    10. '.replace' → logprob: -5.165055274963379

Token 30: ' ''.' (ID: 105941)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.7214462161064148
    2. '''.' → logprob: -0.7214462161064148
    3. ' ''.' → logprob: -3.8464462757110596
    4. ' reduce' → logprob: -5.9714460372924805
    5. '"' → logprob: -6.2214460372924805
    6. ' "".' → logprob: -7.0964460372924805
    7. 're' → logprob: -7.4714460372924805
    8. 'str' → logprob: -8.59644603729248
    9. '''' → logprob: -8.84644603729248
    10. ''' → logprob: -8.97144603729248

Token 31: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0006365468143485487
    2. 'translate' → logprob: -7.625636577606201
    3. 'mak' → logprob: -8.875636100769043
    4. 'replace' → logprob: -12.375636100769043
    5. 'str' → logprob: -13.750636100769043
    6. '''.' → logprob: -14.250636100769043
    7. '```' → logprob: -14.500636100769043
    8. '.' → logprob: -14.500636100769043
    9. 'jo' → logprob: -14.625636100769043
    10. ' join' → logprob: -15.500636100769043

Token 32: '(map' (ID: 16946)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.1334197223186493
    2. '([' → logprob: -2.1334197521209717
    3. '(' → logprob: -5.258419513702393
    4. 'swap' → logprob: -7.133419513702393
    5. '(re' → logprob: -8.50841999053955
    6. '(map' → logprob: -9.38341999053955
    7. '((' → logprob: -9.63341999053955
    8. '([(' → logprob: -10.25841999053955
    9. '(str' → logprob: -10.63341999053955
    10. '(['' → logprob: -11.38341999053955

Token 33: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.008684182539582253
    2. '(' → logprob: -5.008684158325195
    3. '(s' → logprob: -6.508684158325195
    4. '(str' → logprob: -7.758684158325195
    5. 'swap' → logprob: -10.883684158325195
    6. 'lambda' → logprob: -11.258684158325195
    7. '(
' → logprob: -11.508684158325195
    8. '((' → logprob: -13.508684158325195
    9. ')' → logprob: -13.758684158325195
    10. '_swap' → logprob: -13.883684158325195

Token 34: ' c' (ID: 274)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.17184457182884216
    2. ' x' → logprob: -2.046844482421875
    3. 's' → logprob: -4.296844482421875
    4. 'c' → logprob: -5.171844482421875
    5. ' s' → logprob: -5.171844482421875
    6. ' c' → logprob: -6.421844482421875
    7. 'a' → logprob: -6.671844482421875
    8. ' lambda' → logprob: -8.046844482421875
    9. 'lambda' → logprob: -8.171844482421875
    10. ' a' → logprob: -8.796844482421875

Token 35: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005175283877179027
    2. ' :' → logprob: -7.62551736831665
    3. 'swap' → logprob: -11.125517845153809
    4. ':s' → logprob: -12.500517845153809
    5. ':
' → logprob: -12.750517845153809
    6. '):' → logprob: -13.750517845153809
    7. ' swap' → logprob: -13.750517845153809
    8. ',' → logprob: -13.875517845153809
    9. ')' → logprob: -14.125517845153809
    10. 's' → logprob: -14.125517845153809

Token 36: ' reduce' (ID: 10389)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.005235887598246336
    2. ' swap' → logprob: -5.25523567199707
    3. '	swap' → logprob: -13.63023567199707
    4. 'sw' → logprob: -14.50523567199707
    5. '.swap' → logprob: -16.00523567199707
    6. 's' → logprob: -16.25523567199707
    7. ' ' → logprob: -17.13023567199707
    8. 'wap' → logprob: -17.38023567199707
    9. '_swap' → logprob: -17.88023567199707
    10. ')' → logprob: -18.00523567199707

Token 37: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.003114614635705948
    2. '(' → logprob: -6.503114700317383
    3. '(s' → logprob: -6.503114700317383
    4. '(str' → logprob: -10.253114700317383
    5. ' (' → logprob: -10.503114700317383
    6. 'lambda' → logprob: -11.128114700317383
    7. ' lambda' → logprob: -11.378114700317383
    8. 'swap' → logprob: -11.503114700317383
    9. '(
' → logprob: -12.378114700317383
    10. '=lambda' → logprob: -12.378114700317383

Token 38: ' acc' (ID: 1259)
  Prédit: ' swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' swap' → logprob: -0.4004220962524414
    2. ' lambda' → logprob: -2.0254220962524414
    3. 'swap' → logprob: -2.6504220962524414
    4. '<|end|>' → logprob: -3.4004220962524414
    5. 'x' → logprob: -3.6504220962524414
    6. ' x' → logprob: -3.7754220962524414
    7. ' ' → logprob: -5.025422096252441
    8. 's' → logprob: -5.150422096252441
    9. 'a' → logprob: -5.275422096252441
    10. 'lambda' → logprob: -5.525422096252441

Token 39: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31174981594085693
    2. ',' → logprob: -1.936749815940857
    3. 'swap' → logprob: -2.6867499351501465
    4. ' swap' → logprob: -3.5617499351501465
    5. '	swap' → logprob: -5.5617499351501465
    6. ' :' → logprob: -5.5617499351501465
    7. ' if' → logprob: -5.9367499351501465
    8. 'wap' → logprob: -6.1867499351501465
    9. '.swap' → logprob: -6.4367499351501465
    10. 'ambda' → logprob: -6.6867499351501465

Token 40: ' k' (ID: 372)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.9875262379646301
    2. ' swap' → logprob: -1.2375261783599854
    3. 'y' → logprob: -2.8625261783599854
    4. ' y' → logprob: -2.9875261783599854
    5. 'd' → logprob: -3.2375261783599854
    6. 'acc' → logprob: -3.4875261783599854
    7. 'x' → logprob: -3.6125261783599854
    8. ' acc' → logprob: -3.8625261783599854
    9. 'lambda' → logprob: -3.8625261783599854
    10. 'f' → logprob: -4.3625264167785645

Token 41: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004995009396225214
    2. ',' → logprob: -6.004994869232178
    3. 'k' → logprob: -7.004994869232178
    4. ':k' → logprob: -7.629994869232178
    5. ',k' → logprob: -8.004995346069336
    6. ' :' → logprob: -8.004995346069336
    7. ':
' → logprob: -9.504995346069336
    8. '[k' → logprob: -10.004995346069336
    9. ' if' → logprob: -10.254995346069336
    10. ' in' → logprob: -10.379995346069336

Token 42: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.3630326986312866
    2. ' swap' → logprob: -1.2380326986312866
    3. 'acc' → logprob: -4.488032817840576
    4. 'c' → logprob: -7.113032817840576
    5. ' acc' → logprob: -7.363032817840576
    6. ' c' → logprob: -7.363032817840576
    7. 'k' → logprob: -8.238032341003418
    8. ' k' → logprob: -8.738032341003418
    9. 'sw' → logprob: -9.113032341003418
    10. '	swap' → logprob: -9.238032341003418

Token 43: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -2.2246291337069124e-05
    2. '_' → logprob: -12.125021934509277
    3. 'map' → logprob: -12.500021934509277
    4. 'k' → logprob: -12.750021934509277
    5. 'ermap' → logprob: -13.125021934509277
    6. '_swap' → logprob: -13.500021934509277
    7. '_m' → logprob: -13.875021934509277
    8. ' _' → logprob: -13.875021934509277
    9. 'Map' → logprob: -14.500021934509277
    10. '_mapping' → logprob: -14.625021934509277

Token 44: '[k' (ID: 14298)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.05165265500545502
    2. '[k' → logprob: -3.051652669906616
    3. '[c' → logprob: -5.801652431488037
    4. 'get' → logprob: -10.676652908325195
    5. 'k' → logprob: -11.926652908325195
    6. '[get' → logprob: -13.051652908325195
    7. '[' → logprob: -13.426652908325195
    8. '[g' → logprob: -13.801652908325195
    9. '(k' → logprob: -14.301652908325195
    10. '.' → logprob: -14.551652908325195

Token 45: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.31613776087760925
    2. 'if' → logprob: -1.3161377906799316
    3. ']' → logprob: -5.941137790679932
    4. ')' → logprob: -9.191137313842773
    5. ',' → logprob: -10.191137313842773
    6. ' ' → logprob: -10.441137313842773
    7. '],' → logprob: -10.941137313842773
    8. '+' → logprob: -11.316137313842773
    9. '	if' → logprob: -12.191137313842773
    10. '   ' → logprob: -12.316137313842773

Token 46: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20167334377765656
    2. 'if' → logprob: -1.7016733884811401
    3. '+' → logprob: -9.07667350769043
    4. ' ' → logprob: -10.20167350769043
    5. ',' → logprob: -10.32667350769043
    6. 'c' → logprob: -10.45167350769043
    7. '(c' → logprob: -10.95167350769043
    8. 'k' → logprob: -12.20167350769043
    9. ' +' → logprob: -12.20167350769043
    10. '+c' → logprob: -12.82667350769043

Token 47: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6449193358421326
    2. ' c' → logprob: -0.7699193358421326
    3. 'k' → logprob: -5.019919395446777
    4. ' k' → logprob: -6.019919395446777
    5. ' acc' → logprob: -6.394919395446777
    6. 'acc' → logprob: -6.519919395446777
    7. ' ' → logprob: -10.519919395446777
    8. '	c' → logprob: -11.644919395446777
    9. '  ' → logprob: -12.019919395446777
    10. ')c' → logprob: -13.144919395446777

Token 48: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.019581565633416176
    2. ' ==' → logprob: -4.0195817947387695
    3. ' in' → logprob: -6.6445817947387695
    4. 'in' → logprob: -9.26958179473877
    5. '=' → logprob: -11.14458179473877
    6. 'k' → logprob: -12.01958179473877
    7. ' ' → logprob: -12.51958179473877
    8. '==
' → logprob: -12.76958179473877
    9. ' else' → logprob: -13.51958179473877
    10. 'else' → logprob: -13.51958179473877

Token 49: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.016085634008049965
    2. ' k' → logprob: -4.141085624694824
    3. 'c' → logprob: -10.516085624694824
    4. ' ' → logprob: -11.516085624694824
    5. 'acc' → logprob: -12.391085624694824
    6. '  ' → logprob: -12.516085624694824
    7. ' c' → logprob: -12.641085624694824
    8. '   ' → logprob: -14.016085624694824
    9. ' acc' → logprob: -14.266085624694824
    10. '	k' → logprob: -14.391085624694824

Token 50: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.026315970346331596
    2. 'else' → logprob: -3.651315927505493
    3. ' or' → logprob: -11.651315689086914
    4. ' and' → logprob: -12.401315689086914
    5. ' ' → logprob: -13.401315689086914
    6. '	else' → logprob: -14.526315689086914
    7. 'and' → logprob: -15.276315689086914
    8. ')' → logprob: -15.901315689086914
    9. ',' → logprob: -15.901315689086914
    10. 'or' → logprob: -16.401315689086914

Token 51: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.00312316813506186
    2. ' acc' → logprob: -5.8781232833862305
    3. ' ' → logprob: -9.00312328338623
    4. 'c' → logprob: -9.25312328338623
    5. '  ' → logprob: -9.75312328338623
    6. '   ' → logprob: -11.12812328338623
    7. '	acc' → logprob: -11.25312328338623
    8. ' c' → logprob: -12.37812328338623
    9. ''acc' → logprob: -13.25312328338623
    10. '    ' → logprob: -13.25312328338623

Token 52: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04423179104924202
    2. ' ,' → logprob: -3.41923189163208
    3. ',c' → logprob: -4.66923189163208
    4. 'c' → logprob: -7.91923189163208
    5. '),' → logprob: -8.294231414794922
    6. ',k' → logprob: -8.919231414794922
    7. ' ' → logprob: -8.919231414794922
    8. ')' → logprob: -9.169231414794922
    9. ' c' → logprob: -9.544231414794922
    10. '   ' → logprob: -10.919231414794922

Token 53: ' swap' (ID: 25489)
  Prédit: 'swap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'swap' → logprob: -0.3396172821521759
    2. ' swap' → logprob: -1.3396172523498535
    3. 'Str' → logprob: -3.9646172523498535
    4. ' Str' → logprob: -5.8396172523498535
    5. 'str' → logprob: -5.9646172523498535
    6. ''s' → logprob: -8.214617729187012
    7. ' ' → logprob: -8.339617729187012
    8. '['' → logprob: -8.464617729187012
    9. ' ['' → logprob: -8.964617729187012
    10. '	swap' → logprob: -9.214617729187012

Token 54: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.0002516839886084199
    2. '_str' → logprob: -8.875251770019531
    3. 'map' → logprob: -9.375251770019531
    4. 'Map' → logprob: -11.125251770019531
    5. 'emap' → logprob: -13.375251770019531
    6. '_' → logprob: -13.500251770019531
    7. 'ermap' → logprob: -13.500251770019531
    8. 's' → logprob: -13.750251770019531
    9. 'Str' → logprob: -14.125251770019531
    10. '_swap' → logprob: -14.250251770019531

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004648945759981871
    2. '.keys' → logprob: -5.5046491622924805
    3. ' ,' → logprob: -8.50464916229248
    4. 'keys' → logprob: -9.00464916229248
    5. ',key' → logprob: -9.75464916229248
    6. '),' → logprob: -10.62964916229248
    7. ',None' → logprob: -10.62964916229248
    8. ')))' → logprob: -11.00464916229248
    9. ')),' → logprob: -11.00464916229248
    10. ',str' → logprob: -11.12964916229248

Token 56: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0891091600060463
    2. ' c' → logprob: -2.464109182357788
    3. ' ' → logprob: -8.964109420776367
    4. ')c' → logprob: -11.464109420776367
    5. '  ' → logprob: -11.714109420776367
    6. '   ' → logprob: -12.089109420776367
    7. '''' → logprob: -12.339109420776367
    8. ' ' → logprob: -13.089109420776367
    9. '	c' → logprob: -13.464109420776367
    10. ''' → logprob: -13.589109420776367

Token 57: '),' (ID: 936)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.0940864235162735
    2. '))' → logprob: -2.5940864086151123
    3. '),' → logprob: -4.844086647033691
    4. ')' → logprob: -4.969086647033691
    5. '))))' → logprob: -8.719086647033691
    6. ')),' → logprob: -10.969086647033691
    7. ')))
' → logprob: -11.219086647033691
    8. '')))' → logprob: -11.219086647033691
    9. ' ' → logprob: -11.594086647033691
    10. ')));' → logprob: -11.719086647033691

Token 58: ' Str' (ID: 5641)
  Prédit: 'Str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Str' → logprob: -3.726595241460018e-05
    2. ' Str' → logprob: -10.25003719329834
    3. 'St' → logprob: -14.62503719329834
    4. 'String' → logprob: -14.75003719329834
    5. 'str' → logprob: -14.87503719329834
    6. '(Str' → logprob: -15.00003719329834
    7. '   ' → logprob: -16.625038146972656
    8. '_Str' → logprob: -17.125038146972656
    9. ' ' → logprob: -17.250038146972656
    10. '  ' → logprob: -17.250038146972656

Token 59: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0013839246239513159
    2. ')' → logprob: -6.6263837814331055
    3. '))
' → logprob: -10.501383781433105
    4. ')))' → logprob: -10.501383781433105
    5. ' ))' → logprob: -13.501383781433105
    6. '),' → logprob: -14.876383781433105
    7. ''))' → logprob: -15.251383781433105
    8. '))

' → logprob: -15.376383781433105
    9. ')
' → logprob: -15.751383781433105
    10. ' ' → logprob: -16.751384735107422

Token 60: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7754495739936829
    2. '<|end|>' → logprob: -0.7754495739936829
    3. 'print' → logprob: -2.650449514389038
    4. '```' → logprob: -5.400449752807617
    5. '#' → logprob: -6.025449752807617
    6. '<|end|>' → logprob: -7.400449752807617
    7. '[' → logprob: -8.900449752807617
    8. '')' → logprob: -9.150449752807617
    9. '(' → logprob: -9.525449752807617
    10. '...' → logprob: -9.775449752807617

Token 61: '(Str' (ID: 183950)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20192499458789825
    2. '(Str' → logprob: -1.7019250392913818
    3. '(str' → logprob: -8.576925277709961
    4. '()' → logprob: -9.076925277709961
    5. '('' → logprob: -9.701925277709961
    6. '("("' → logprob: -10.701925277709961
    7. '(
' → logprob: -10.701925277709961
    8. '(String' → logprob: -10.701925277709961
    9. '(len' → logprob: -10.826925277709961
    10. '(S' → logprob: -10.951925277709961

Token 62: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005583931924775243
    2. '))' → logprob: -7.500558376312256
    3. ' )' → logprob: -13.000558853149414
    4. '')' → logprob: -13.250558853149414
    5. '`)' → logprob: -14.125558853149414
    6. ')))' → logprob: -15.125558853149414
    7. ')
' → logprob: -15.875558853149414
    8. ')`' → logprob: -16.000558853149414
    9. '")' → logprob: -16.750558853149414
    10. '()' → logprob: -17.250558853149414


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 60
Tokens correctement prédits (1ère position, stricte): 17
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 42
Précision stricte (1ère position): 28.33%
Précision adaptée (1ère position): 28.33%
Précision (top 10): 70.00%
================================================================================
