================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys as _; import fractions as __
_.setrecursionlimit(1000000)

def __call__(func, *args, **kwargs):
    return func(*args, **kwargs)

@staticmethod
def _idx(x): return int(x)-1

show_rows = lambda l: [print(r) for r in l] or None

inpINT=lambda:__call__(int,input())
MII=lambda:map(int,input())
MII_sp = lambda: map(int,input().split())
MII_idx = lambda: map(_idx, input())
MII_sp_idx = lambda: map(_idx, input().split())
LII = lambda: list(map(int, input()))
LII_sp = lambda: list(map(int, input().split()))
def LII_2D(_n): return [LII() for __times in range(_n)]
def LII_sp_2D(_n): return [LII_sp() for __x in [-~0]*_n]

def _gcd(a, b):
    return __.gcd(a,b)

@classmethod
def lcm(cls, x, y): return (x*y)//_gcd(x,y)

A,B=[*MII_sp()]
print(lcm(None, A, B))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' _' (ID: 1175)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.32172268629074097
    2. ' ' → logprob: -1.9467227458953857
    3. 'sys' → logprob: -2.4467227458953857
    4. '   ' → logprob: -4.071722507476807
    5. ' _' → logprob: -5.571722507476807
    6. '__' → logprob: -5.696722507476807
    7. '```' → logprob: -5.821722507476807
    8. '  ' → logprob: -5.946722507476807
    9. ' s' → logprob: -6.196722507476807
    10. 'sy' → logprob: -6.321722507476807

Token 4: ';' (ID: 26)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5891063213348389
    2. 'sys' → logprob: -0.8391063213348389
    3. '_' → logprob: -5.214106559753418
    4. '_s' → logprob: -6.089106559753418
    5. 'sy' → logprob: -6.714106559753418
    6. 'm' → logprob: -6.714106559753418
    7. 'is' → logprob: -7.464106559753418
    8. 'ys' → logprob: -7.714106559753418
    9. 'i' → logprob: -8.089106559753418
    10. 'sx' → logprob: -8.339106559753418

Token 5: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002310953801497817
    2. '_' → logprob: -7.127310752868652
    3. 'newline' → logprob: -8.002310752868652
    4. ',' → logprob: -8.252310752868652
    5. '\n' → logprob: -8.502310752868652
    6. ';' → logprob: -8.877310752868652
    7. ' ' → logprob: -9.002310752868652
    8. '' → logprob: -9.377310752868652
    9. '\' → logprob: -9.502310752868652
    10. '.

' → logprob: -10.127310752868652

Token 6: ' fractions' (ID: 110523)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.002054381649941206
    2. 'os' → logprob: -6.252054214477539
    3. ' re' → logprob: -10.127054214477539
    4. '_' → logprob: -11.002054214477539
    5. '_os' → logprob: -11.002054214477539
    6. ' math' → logprob: -11.127054214477539
    7. ' ' → logprob: -11.752054214477539
    8. ' io' → logprob: -11.752054214477539
    9. ' o' → logprob: -12.377054214477539
    10. 're' → logprob: -13.127054214477539

Token 7: ' as' (ID: 472)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.000580792548134923
    2. ' as' → logprob: -8.375580787658691
    3. ';' → logprob: -9.125580787658691
    4. ',' → logprob: -10.000580787658691
    5. 'as' → logprob: -10.125580787658691
    6. '_' → logprob: -10.750580787658691
    7. 'import' → logprob: -10.875580787658691
    8. '.f' → logprob: -11.125580787658691
    9. ' .' → logprob: -11.125580787658691
    10. '<|end|>' → logprob: -11.500580787658691

Token 8: ' __' (ID: 2516)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.7707202434539795
    2. '_' → logprob: -1.0207202434539795
    3. '_f' → logprob: -2.3957202434539795
    4. ' f' → logprob: -3.5207202434539795
    5. ' ' → logprob: -4.020720481872559
    6. ' fractions' → logprob: -4.270720481872559
    7. ' fr' → logprob: -4.395720481872559
    8. ' frac' → logprob: -5.020720481872559
    9. ' fs' → logprob: -7.020720481872559
    10. '_F' → logprob: -7.395720481872559

Token 9: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.012653498910367489
    2. ';' → logprob: -5.012653350830078
    3. '_' → logprob: -5.887653350830078
    4. ' .' → logprob: -7.387653350830078
    5. '<|end|>' → logprob: -7.387653350830078
    6. '.f' → logprob: -7.887653350830078
    7. ',' → logprob: -8.012653350830078
    8. ' ' → logprob: -8.762653350830078
    9. '._' → logprob: -8.762653350830078
    10. ' as' → logprob: -8.762653350830078

Token 10: '_.' (ID: 9881)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.36729922890663147
    2. '_' → logprob: -1.617299199104309
    3. ';' → logprob: -2.8672993183135986
    4. 'from' → logprob: -4.3672990798950195
    5. 'as' → logprob: -5.1172990798950195
    6. ',' → logprob: -5.1172990798950195
    7. ' as' → logprob: -5.3672990798950195
    8. 'import' → logprob: -5.7422990798950195
    9. 'def' → logprob: -5.8672990798950195
    10. '.f' → logprob: -6.1172990798950195

Token 11: 'set' (ID: 977)
  Prédit: 'version'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'version' → logprob: -0.6998329162597656
    2. 'argv' → logprob: -1.5748329162597656
    3. 'exit' → logprob: -1.6998329162597656
    4. 'path' → logprob: -2.3248329162597656
    5. 'stdout' → logprob: -4.824832916259766
    6. 'stdin' → logprob: -5.574832916259766
    7. 'ver' → logprob: -6.824832916259766
    8. 'vers' → logprob: -6.824832916259766
    9. 'stderr' → logprob: -6.824832916259766
    10. 'arg' → logprob: -8.699832916259766

Token 12: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.4821561872959137
    2. 'default' → logprob: -2.232156276702881
    3. 'set' → logprob: -2.357156276702881
    4. 't' → logprob: -2.982156276702881
    5. 'attr' → logprob: -3.107156276702881
    6. 'rec' → logprob: -4.232156276702881
    7. '_' → logprob: -4.357156276702881
    8. 's' → logprob: -4.607156276702881
    9. 'ex' → logprob: -4.857156276702881
    10. 'e' → logprob: -5.107156276702881

Token 13: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0033974102698266506
    2. 't' → logprob: -6.253397464752197
    3. 'urs' → logprob: -7.128397464752197
    4. 'ursive' → logprob: -8.253396987915039
    5. 'ursor' → logprob: -8.503396987915039
    6. 'ur' → logprob: -10.128396987915039
    7. 'limit' → logprob: -10.253396987915039
    8. 'ut' → logprob: -10.503396987915039
    9. '_' → logprob: -11.253396987915039
    10. 'ault' → logprob: -11.503396987915039

Token 14: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -7.896309739408025e-07
    2. ' limit' → logprob: -14.250000953674316
    3. 'lim' → logprob: -16.25
    4. '_limit' → logprob: -17.5
    5. 'depth' → logprob: -18.125
    6. 'Limit' → logprob: -19.375
    7. 'limits' → logprob: -20.5
    8. '-limit' → logprob: -20.75
    9. '(limit' → logprob: -22.375
    10. 'l' → logprob: -22.625

Token 15: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.0339031834737398e-05
    2. ' (' → logprob: -11.625020027160645
    3. '(
' → logprob: -12.750020027160645
    4. '40' → logprob: -12.750020027160645
    5. ' ' → logprob: -12.875020027160645
    6. '((' → logprob: -14.625020027160645
    7. '()' → logprob: -15.125020027160645
    8. '(_)' → logprob: -15.250020027160645
    9. '(...)' → logprob: -15.500020027160645
    10. '50' → logprob: -15.500020027160645

Token 16: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.005334078334271908
    2. '100' → logprob: -5.25533390045166
    3. '300' → logprob: -9.63033390045166
    4. '999' → logprob: -10.88033390045166
    5. ' ' → logprob: -12.88033390045166
    6. '9' → logprob: -13.25533390045166
    7. 'int' → logprob: -13.25533390045166
    8. '400' → logprob: -13.38033390045166
    9. '500' → logprob: -13.75533390045166
    10. '200' → logprob: -13.88033390045166

Token 17: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.20242634415626526
    2. '00' → logprob: -1.7024263143539429
    3. '0' → logprob: -6.952426433563232
    4. '_' → logprob: -9.827425956726074
    5. ')' → logprob: -14.327425956726074
    6. '```' → logprob: -14.952425956726074
    7. '050' → logprob: -15.327425956726074
    8. '007' → logprob: -15.452425956726074
    9. '001' → logprob: -15.452425956726074
    10. '005' → logprob: -16.07742691040039

Token 18: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38694512844085693
    2. '0' → logprob: -1.136945128440857
    3. ')
' → logprob: -11.261944770812988
    4. '1' → logprob: -11.386944770812988
    5. ' )' → logprob: -11.636944770812988
    6. '_' → logprob: -11.636944770812988
    7. '9' → logprob: -11.886944770812988
    8. '+' → logprob: -12.136944770812988
    9. '```' → logprob: -12.261944770812988
    10. '))' → logprob: -12.761944770812988

Token 19: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.306760805164231e-05
    2. ' )' → logprob: -11.75001335144043
    3. '))' → logprob: -13.25001335144043
    4. ')
' → logprob: -13.50001335144043
    5. '(' → logprob: -15.50001335144043
    6. '```' → logprob: -15.50001335144043
    7. ')`' → logprob: -15.62501335144043
    8. ');' → logprob: -15.75001335144043
    9. '`)' → logprob: -15.75001335144043
    10. '1' → logprob: -16.25001335144043

Token 20: 'def' (ID: 1314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24851539731025696
    2. 'def' → logprob: -2.8735153675079346
    3. '__' → logprob: -3.3735153675079346
    4. '(' → logprob: -3.4985153675079346
    5. '_
' → logprob: -3.6235153675079346
    6. ')' → logprob: -3.9985153675079346
    7. '
' → logprob: -4.498515605926514
    8. '.' → logprob: -5.123515605926514
    9. '*' → logprob: -5.373515605926514
    10. '`' → logprob: -5.498515605926514

Token 21: ' __' (ID: 2516)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.5199629068374634
    2. ' solve' → logprob: -2.019962787628174
    3. ' factor' → logprob: -2.144962787628174
    4. ' factorial' → logprob: -3.144962787628174
    5. ' ' → logprob: -3.644962787628174
    6. ' f' → logprob: -4.019962787628174
    7. ' dfs' → logprob: -4.519962787628174
    8. ' main' → logprob: -4.769962787628174
    9. ' fibonacci' → logprob: -4.769962787628174
    10. ' fib' → logprob: -4.769962787628174

Token 22: 'call' (ID: 9925)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.017754074186086655
    2. 'f' → logprob: -4.892754077911377
    3. 'factor' → logprob: -6.017754077911377
    4. 'pow' → logprob: -6.642754077911377
    5. '_' → logprob: -6.892754077911377
    6. 'fib' → logprob: -7.017754077911377
    7. '_g' → logprob: -7.142754077911377
    8. 'solve' → logprob: -7.642754077911377
    9. '_factor' → logprob: -8.142753601074219
    10. 'l' → logprob: -8.267753601074219

Token 23: '__(' (ID: 8241)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3109418749809265
    2. '_(' → logprob: -1.6859419345855713
    3. '__(' → logprob: -2.5609419345855713
    4. '__' → logprob: -5.935941696166992
    5. '(' → logprob: -6.935941696166992
    6. '___' → logprob: -7.435941696166992
    7. '__(
' → logprob: -8.560941696166992
    8. '__('' → logprob: -8.935941696166992
    9. '_:' → logprob: -10.185941696166992
    10. '_("' → logprob: -10.435941696166992

Token 24: 'func' (ID: 5652)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5182343125343323
    2. '):' → logprob: -2.0182342529296875
    3. 'f' → logprob: -2.2682342529296875
    4. '_' → logprob: -2.6432342529296875
    5. 'self' → logprob: -3.8932342529296875
    6. '__' → logprob: -4.1432342529296875
    7. 'x' → logprob: -4.2682342529296875
    8. ')' → logprob: -4.2682342529296875
    9. 'func' → logprob: -5.0182342529296875
    10. 'a' → logprob: -5.3932342529296875

Token 25: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01072189025580883
    2. ',' → logprob: -4.885721683502197
    3. ')' → logprob: -6.010721683502197
    4. '*' → logprob: -8.510722160339355
    5. '):
' → logprob: -8.635722160339355
    6. '   ' → logprob: -9.385722160339355
    7. '_' → logprob: -10.010722160339355
    8. '(' → logprob: -10.260722160339355
    9. ' ' → logprob: -10.510722160339355
    10. ' ):' → logprob: -11.510722160339355

Token 26: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5347297191619873
    2. ' *' → logprob: -1.1597297191619873
    3. 'args' → logprob: -3.4097297191619873
    4. ')' → logprob: -3.5347297191619873
    5. '*n' → logprob: -4.659729957580566
    6. ' args' → logprob: -4.909729957580566
    7. '*l' → logprob: -6.159729957580566
    8. '*a' → logprob: -6.284729957580566
    9. ' n' → logprob: -6.409729957580566
    10. '*)' → logprob: -6.659729957580566

Token 27: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.002074006013572216
    2. 'a' → logprob: -6.377074241638184
    3. 'argv' → logprob: -8.877074241638184
    4. ' args' → logprob: -9.877074241638184
    5. 'arg' → logprob: -10.002074241638184
    6. 'func' → logprob: -10.502074241638184
    7. ')' → logprob: -11.127074241638184
    8. '_args' → logprob: -11.127074241638184
    9. '_' → logprob: -11.252074241638184
    10. 'arguments' → logprob: -11.502074241638184

Token 28: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006045281887054443
    2. ',' → logprob: -5.506045341491699
    3. ')' → logprob: -6.506045341491699
    4. '):
' → logprob: -8.1310453414917
    5. ' ):' → logprob: -9.0060453414917
    6. ' ' → logprob: -10.5060453414917
    7. '):
' → logprob: -11.6310453414917
    8. '   ' → logprob: -12.6310453414917
    9. '):

' → logprob: -12.7560453414917
    10. ':' → logprob: -12.8810453414917

Token 29: ' **' (ID: 6240)
  Prédit: ' **'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' **' → logprob: -0.14261622726917267
    2. '**' → logprob: -2.1426162719726562
    3. ' **)' → logprob: -4.892616271972656
    4. ')' → logprob: -5.892616271972656
    5. ' kwargs' → logprob: -6.142616271972656
    6. '**)' → logprob: -6.392616271972656
    7. ' )' → logprob: -7.267616271972656
    8. ' ' → logprob: -8.767616271972656
    9. 'kwargs' → logprob: -9.017616271972656
    10. '):' → logprob: -9.267616271972656

Token 30: 'kwargs' (ID: 19200)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6230728626251221
    2. ')' → logprob: -1.498072862625122
    3. '**' → logprob: -2.248072862625122
    4. 'kwargs' → logprob: -2.248072862625122
    5. '_' → logprob: -4.123072624206543
    6. 'args' → logprob: -4.998072624206543
    7. ')**' → logprob: -6.498072624206543
    8. '):
' → logprob: -6.623072624206543
    9. '**)' → logprob: -7.123072624206543
    10. '*' → logprob: -7.748072624206543

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008188001229427755
    2. ')' → logprob: -7.125818729400635
    3. ':' → logprob: -11.625819206237793
    4. '):
' → logprob: -12.875819206237793
    5. ' ):' → logprob: -13.000819206237793
    6. '():' → logprob: -15.625819206237793
    7. ',' → logprob: -16.125818252563477
    8. ')：' → logprob: -16.750818252563477
    9. '   ' → logprob: -17.250818252563477
    10. '**' → logprob: -17.500818252563477

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5661799311637878
    2. ':' → logprob: -1.1911799907684326
    3. ')' → logprob: -2.6911799907684326
    4. ' return' → logprob: -4.0661797523498535
    5. ' ' → logprob: -4.1911797523498535
    6. 'return' → logprob: -4.5661797523498535
    7. '(' → logprob: -5.4411797523498535
    8. ':return' → logprob: -5.5661797523498535
    9. '_' → logprob: -6.3161797523498535
    10. '.' → logprob: -6.4411797523498535

Token 33: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4504881501197815
    2. '   ' → logprob: -1.4504880905151367
    3. 'return' (adapté à ' return') → logprob: -2.0754880905151367
    4. '    ' → logprob: -6.325488090515137
    5. ' ' → logprob: -7.450488090515137
    6. '_' → logprob: -9.700488090515137
    7. ' try' → logprob: -9.825488090515137
    8. 'r' → logprob: -10.075488090515137
    9. '	return' → logprob: -10.200488090515137
    10. '       ' → logprob: -10.325488090515137

Token 34: ' func' (ID: 4660)
  Prédit: 'func'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'func' → logprob: -0.006718452088534832
    2. ' func' → logprob: -5.006718635559082
    3. '(func' → logprob: -13.756718635559082
    4. '	func' → logprob: -13.881718635559082
    5. 'fun' → logprob: -14.381718635559082
    6. '_func' → logprob: -15.131718635559082
    7. '__' → logprob: -16.256717681884766
    8. '.func' → logprob: -16.631717681884766
    9. '   ' → logprob: -18.131717681884766
    10. ' ' → logprob: -19.006717681884766

Token 35: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.39687803387641907
    2. '(*' → logprob: -1.1468780040740967
    3. '(
' → logprob: -5.271878242492676
    4. '(**' → logprob: -5.896878242492676
    5. '(args' → logprob: -6.646878242492676
    6. '.' → logprob: -8.646878242492676
    7. '(*)' → logprob: -8.771878242492676
    8. '(

' → logprob: -8.771878242492676
    9. '(*(' → logprob: -10.146878242492676
    10. '(.' → logprob: -10.271878242492676

Token 36: 'args' (ID: 4285)
  Prédit: 'args'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -5.512236498361744e-07
    2. ' args' → logprob: -14.625000953674316
    3. '	args' → logprob: -17.625
    4. '(args' → logprob: -17.75
    5. '_args' → logprob: -17.875
    6. '$args' → logprob: -19.25
    7. '   ' → logprob: -19.5
    8. ' ' → logprob: -20.375
    9. 'arg' → logprob: -20.625
    10. 'argv' → logprob: -20.875

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006390500930137932
    2. ',args' → logprob: -7.625638961791992
    3. ' ,' → logprob: -9.000638961791992
    4. ')' → logprob: -10.875638961791992
    5. ',)' → logprob: -13.125638961791992
    6. 'args' → logprob: -13.250638961791992
    7. ',*' → logprob: -13.750638961791992
    8. ',arg' → logprob: -13.875638961791992
    9. ',...' → logprob: -14.000638961791992
    10. ',
' → logprob: -14.625638961791992

Token 38: ' **' (ID: 6240)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'args' → logprob: -0.10246101021766663
    2. ' args' → logprob: -2.352461099624634
    3. '*' → logprob: -6.227460861206055
    4. '**' → logprob: -9.477460861206055
    5. 'kwargs' → logprob: -9.477460861206055
    6. ' kwargs' → logprob: -9.727460861206055
    7. ' ' → logprob: -10.102460861206055
    8. ' *' → logprob: -11.602460861206055
    9. ')' → logprob: -12.352460861206055
    10. '$args' → logprob: -12.602460861206055

Token 39: 'kwargs' (ID: 19200)
  Prédit: 'args'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'args' → logprob: -9.088346359931165e-07
    2. ' args' → logprob: -14.250000953674316
    3. '_args' → logprob: -15.500000953674316
    4. ')' → logprob: -17.5
    5. 'kwargs' → logprob: -17.5
    6. '(args' → logprob: -17.875
    7. '	args' → logprob: -18.0
    8. 'arg' → logprob: -18.5
    9. '$args' → logprob: -19.5
    10. ',args' → logprob: -20.25

Token 40: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -15.75
    3. ' )' → logprob: -17.875
    4. '))' → logprob: -19.25
    5. ')return' → logprob: -19.25
    6. '),' → logprob: -19.375
    7. ')#' → logprob: -19.625
    8. ')`' → logprob: -20.0
    9. ').' → logprob: -20.75
    10. ')

' → logprob: -20.875

Token 41: '@' (ID: 31)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.022003574296832085
    2. '
' → logprob: -5.397003650665283
    3. '#' → logprob: -5.647003650665283
    4. '_' → logprob: -5.647003650665283
    5. '@' → logprob: -5.772003650665283
    6. 'd' → logprob: -5.772003650665283
    7. 'class' → logprob: -6.647003650665283
    8. '\' → logprob: -7.522003650665283
    9. '

' → logprob: -7.897003650665283
    10. '__' → logprob: -8.147003173828125

Token 42: 'staticmethod' (ID: 53164)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.062453851103782654
    2. 'fun' → logprob: -3.1874537467956543
    3. '__.' → logprob: -4.687453746795654
    4. '_' → logprob: -5.687453746795654
    5. 'staticmethod' → logprob: -5.937453746795654
    6. 'l' → logprob: -6.312453746795654
    7. '__;' → logprob: -7.437453746795654
    8. '___' → logprob: -8.187454223632812
    9. 'dat' → logprob: -8.312454223632812
    10. 'classmethod' → logprob: -8.562454223632812

Token 43: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001205350155942142
    2. '
' → logprob: -6.8762054443359375
    3. '\' → logprob: -9.126205444335938
    4. ' def' → logprob: -10.251205444335938
    5. '<|end|>' → logprob: -11.126205444335938
    6. '(def' → logprob: -12.501205444335938
    7. 'class' → logprob: -12.876205444335938
    8. '(' → logprob: -13.376205444335938
    9. '```' → logprob: -14.251205444335938
    10. '(
' → logprob: -14.376205444335938

Token 44: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -4.47757811343763e-05
    2. '
' → logprob: -10.250044822692871
    3. ' def' → logprob: -11.875044822692871
    4. 'class' → logprob: -13.875044822692871
    5. '__' → logprob: -14.750044822692871
    6. 'async' → logprob: -14.875044822692871
    7. '@' → logprob: -15.125044822692871
    8. '```' → logprob: -16.375043869018555
    9. 'from' → logprob: -16.750043869018555
    10. 'de' → logprob: -16.875043869018555

Token 45: ' _' (ID: 1175)
  Prédit: ' gcd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' gcd' → logprob: -0.2344663441181183
    2. 'g' → logprob: -2.734466314315796
    3. '__' → logprob: -2.859466314315796
    4. ' __' → logprob: -3.859466314315796
    5. ' l' → logprob: -4.234466552734375
    6. 'factor' → logprob: -4.734466552734375
    7. 'l' → logprob: -4.859466552734375
    8. ' factorial' → logprob: -5.234466552734375
    9. '_g' → logprob: -5.734466552734375
    10. '_factor' → logprob: -6.234466552734375

Token 46: 'idx' (ID: 13196)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.4072629511356354
    2. 'l' → logprob: -2.4072630405426025
    3. '_g' → logprob: -2.5322630405426025
    4. '_' → logprob: -3.5322630405426025
    5. 'pow' → logprob: -4.282262802124023
    6. 'call' → logprob: -4.532262802124023
    7. '_f' → logprob: -4.657262802124023
    8. '_l' → logprob: -4.782262802124023
    9. '_factor' → logprob: -4.782262802124023
    10. 'reduce' → logprob: -4.782262802124023

Token 47: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016013838350772858
    2. '_' → logprob: -5.3910136222839355
    3. ' (' → logprob: -6.0160136222839355
    4. '(x' → logprob: -6.0160136222839355
    5. '(i' → logprob: -6.3910136222839355
    6. '_(' → logprob: -7.0160136222839355
    7. '(idx' → logprob: -7.2660136222839355
    8. '(s' → logprob: -7.5160136222839355
    9. '(index' → logprob: -8.141014099121094
    10. '(_' → logprob: -8.266014099121094

Token 48: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18766890466213226
    2. ',' → logprob: -1.8126689195632935
    3. ')' → logprob: -4.937668800354004
    4. ':' → logprob: -8.187668800354004
    5. ' ,' → logprob: -8.937668800354004
    6. '):
' → logprob: -9.187668800354004
    7. ' ):' → logprob: -9.562668800354004
    8. '[' → logprob: -10.687668800354004
    9. ',index' → logprob: -11.062668800354004
    10. 's' → logprob: -11.562668800354004

Token 49: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.36230602860450745
    2. ' return' → logprob: -1.237305998802185
    3. '   ' → logprob: -4.362306118011475
    4. ' x' → logprob: -8.112305641174316
    5. 'x' → logprob: -8.237305641174316
    6. ':return' → logprob: -8.362305641174316
    7. '    ' → logprob: -9.362305641174316
    8. '	return' → logprob: -10.237305641174316
    9. ' ' → logprob: -10.362305641174316
    10. ':' → logprob: -10.737305641174316

Token 50: ' int' (ID: 677)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.7044673562049866
    2. 'x' → logprob: -0.8294673562049866
    3. '__' → logprob: -3.704467296600342
    4. ' __' → logprob: -4.829467296600342
    5. 'int' → logprob: -4.954467296600342
    6. ' int' → logprob: -5.079467296600342
    7. '0' → logprob: -5.079467296600342
    8. '__.' → logprob: -5.329467296600342
    9. ' ' → logprob: -5.704467296600342
    10. '(x' → logprob: -6.329467296600342

Token 51: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6933403015136719
    2. '(x' → logprob: -0.6933403015136719
    3. '((' → logprob: -8.943340301513672
    4. 'x' → logprob: -10.568340301513672
    5. '(float' → logprob: -11.693340301513672
    6. '(round' → logprob: -11.818340301513672
    7. '(
' → logprob: -12.068340301513672
    8. '(.' → logprob: -12.943340301513672
    9. '(abs' → logprob: -13.318340301513672
    10. ' (' → logprob: -13.568340301513672

Token 52: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.721228368813172e-05
    2. '[' → logprob: -10.000086784362793
    3. '))' → logprob: -12.000086784362793
    4. '.split' → logprob: -12.375086784362793
    5. ' )' → logprob: -12.625086784362793
    6. ')>>' → logprob: -12.625086784362793
    7. ')-' → logprob: -12.750086784362793
    8. '.strip' → logprob: -13.000086784362793
    9. ')}}' → logprob: -13.125086784362793
    10. ')}' → logprob: -13.250086784362793

Token 53: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007152927573770285
    2. ' ' → logprob: -7.250715255737305
    3. '2' → logprob: -14.500715255737305
    4. ''' → logprob: -14.500715255737305
    5. '  ' → logprob: -14.500715255737305
    6. '49' → logprob: -14.750715255737305
    7. '   ' → logprob: -15.063215255737305
    8. '0' → logprob: -15.250715255737305
    9. '32' → logprob: -15.563215255737305
    10. '_' → logprob: -15.813215255737305

Token 54: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: 'show' (ID: 5526)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: '_rows' (ID: 26013)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.9641707539558411
    2. '_' → logprob: -1.0891706943511963
    3. '(' → logprob: -1.9641706943511963
    4. 'r' → logprob: -3.3391706943511963
    5. 'down' → logprob: -3.5891706943511963
    6. 'n' → logprob: -3.9641706943511963
    7. '()' → logprob: -4.089170932769775
    8. ')' → logprob: -5.214170932769775
    9. '.' → logprob: -5.339170932769775
    10. '_n' → logprob: -5.714170932769775

Token 57: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44496071338653564
    2. ' =' → logprob: -1.1949607133865356
    3. ',' → logprob: -3.194960594177246
    4. '(' → logprob: -5.069960594177246
    5. '_' → logprob: -5.819960594177246
    6. '=[]' → logprob: -6.444960594177246
    7. 's' → logprob: -6.444960594177246
    8. ')' → logprob: -7.194960594177246
    9. 'def' → logprob: -7.694960594177246
    10. '=lambda' → logprob: -8.319960594177246

Token 58: ' lambda' (ID: 27871)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -1.0628540515899658
    2. '100' → logprob: -1.6878540515899658
    3. '20' → logprob: -2.062854051589966
    4. '50' → logprob: -3.437854051589966
    5. '5' → logprob: -3.562854051589966
    6. '__' → logprob: -3.687854051589966
    7. '30' → logprob: -3.812854051589966
    8. '1' → logprob: -4.062853813171387
    9. '15' → logprob: -4.062853813171387
    10. '0' → logprob: -4.312853813171387

Token 59: ' l' (ID: 305)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.0870381593704224
    2. '_' → logprob: -1.5870381593704224
    3. ' lambda' → logprob: -1.9620381593704224
    4. ' s' → logprob: -2.212038040161133
    5. ' rows' → logprob: -2.837038040161133
    6. 'lambda' → logprob: -3.337038040161133
    7. 'x' → logprob: -3.587038040161133
    8. 'rows' → logprob: -4.212038040161133
    9. 's' → logprob: -4.462038040161133
    10. ' _' → logprob: -4.587038040161133

Token 60: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5922012329101562
    2. ',' → logprob: -0.8422012329101562
    3. '[:' → logprob: -4.592201232910156
    4. ' :' → logprob: -6.717201232910156
    5. 'en' → logprob: -6.967201232910156
    6. ',:' → logprob: -7.092201232910156
    7. '[' → logprob: -7.592201232910156
    8. 'ambda' → logprob: -7.717201232910156
    9. ',len' → logprob: -7.842201232910156
    10. ' ,' → logprob: -8.842201232910156

Token 61: ' [' (ID: 723)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.6318470239639282
    2. '"\' → logprob: -2.0068469047546387
    3. 'print' → logprob: -2.5068469047546387
    4. ' '\' → logprob: -2.6318469047546387
    5. '[' → logprob: -3.0068469047546387
    6. ' [' → logprob: -3.3818469047546387
    7. ' "\' → logprob: -4.131846904754639
    8. ' print' → logprob: -4.131846904754639
    9. ''' → logprob: -4.506846904754639
    10. '''.' → logprob: -4.631846904754639

Token 62: 'print' (ID: 1598)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6580206751823425
    2. '_[' → logprob: -2.0330207347869873
    3. 'str' → logprob: -2.7830207347869873
    4. '_.' → logprob: -3.0330207347869873
    5. '_' → logprob: -3.1580207347869873
    6. '__.' → logprob: -3.5330207347869873
    7. '__[' → logprob: -3.6580207347869873
    8. 'list' → logprob: -3.6580207347869873
    9. 'int' → logprob: -3.7830207347869873
    10. 'map' → logprob: -4.533020496368408

Token 63: '(r' (ID: 4729)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.911190390586853
    2. '(x' → logprob: -1.786190390586853
    3. '(i' → logprob: -1.911190390586853
    4. '(' → logprob: -2.0361905097961426
    5. '(f' → logprob: -2.7861905097961426
    6. '(*' → logprob: -3.1611905097961426
    7. '(r' → logprob: -4.036190509796143
    8. '(line' → logprob: -4.786190509796143
    9. '('' → logprob: -5.036190509796143
    10. '(l' → logprob: -5.536190509796143

Token 64: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001245112856850028
    2. ',' → logprob: -7.001245021820068
    3. ',end' → logprob: -8.626245498657227
    4. 'for' → logprob: -10.751245498657227
    5. '.rstrip' → logprob: -11.001245498657227
    6. ',row' → logprob: -11.376245498657227
    7. '.strip' → logprob: -11.501245498657227
    8. ');' → logprob: -11.626245498657227
    9. ' )' → logprob: -11.626245498657227
    10. '')' → logprob: -11.876245498657227

Token 65: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3971976339817047
    2. ' for' → logprob: -1.8971976041793823
    3. ')' → logprob: -2.772197723388672
    4. '(r' → logprob: -3.272197723388672
    5. '(' → logprob: -3.772197723388672
    6. '(l' → logprob: -3.772197723388672
    7. '(i' → logprob: -4.772197723388672
    8. '(f' → logprob: -4.772197723388672
    9. '(row' → logprob: -5.147197723388672
    10. '(x' → logprob: -5.522197723388672

Token 66: ' r' (ID: 428)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.10101407766342163
    2. ' l' → logprob: -2.3510141372680664
    3. 'range' → logprob: -7.601014137268066
    4. ' range' → logprob: -8.351014137268066
    5. '_' → logprob: -10.476014137268066
    6. 'r' → logprob: -10.851014137268066
    7. '_l' → logprob: -12.101014137268066
    8. ' ' → logprob: -12.226014137268066
    9. ' r' → logprob: -13.101014137268066
    10. '	l' → logprob: -13.226014137268066

Token 67: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04859532043337822
    2. 'in' → logprob: -3.048595428466797
    3. ' ' → logprob: -12.423595428466797
    4. '<|end|>' → logprob: -13.298595428466797
    5. 'l' → logprob: -14.673595428466797
    6. '	in' → logprob: -14.798595428466797
    7. ' l' → logprob: -15.798595428466797
    8. ' ' → logprob: -15.798595428466797
    9. 'import' → logprob: -15.923595428466797
    10. ')' → logprob: -16.173595428466797

Token 68: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.11438874155282974
    2. ' l' → logprob: -2.2393887042999268
    3. 'range' → logprob: -7.114388942718506
    4. ' range' → logprob: -7.239388942718506
    5. '_' → logprob: -11.114388465881348
    6. '_l' → logprob: -12.364388465881348
    7. 'list' → logprob: -13.114388465881348
    8. ' ' → logprob: -13.739388465881348
    9. '	l' → logprob: -13.739388465881348
    10. '[' → logprob: -13.739388465881348

Token 69: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005170515505596995
    2. ')]' → logprob: -8.250516891479492
    3. '()]' → logprob: -8.875516891479492
    4. ' ]' → logprob: -9.375516891479492
    5. ':]' → logprob: -11.875516891479492
    6. ' if' → logprob: -12.000516891479492
    7. '[:-' → logprob: -12.375516891479492
    8. '])' → logprob: -12.625516891479492
    9. ')' → logprob: -13.750516891479492
    10. ']
' → logprob: -13.750516891479492

Token 70: ' or' (ID: 503)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.49208492040634155
    2. '<|end|>' → logprob: -1.4920849800109863
    3. '#' → logprob: -2.4920849800109863
    4. '_' → logprob: -4.117084980010986
    5. '
' → logprob: -4.242084980010986
    6. '\n' → logprob: -4.742084980010986
    7. ';' → logprob: -5.492084980010986
    8. '.' → logprob: -5.492084980010986
    9. '\' → logprob: -5.617084980010986
    10. ',' → logprob: -5.742084980010986

Token 71: ' None' (ID: 4662)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.8329147696495056
    2. ' l' → logprob: -1.4579148292541504
    3. '[]' → logprob: -1.8329148292541504
    4. ' []' → logprob: -2.9579148292541504
    5. ' None' → logprob: -3.0829148292541504
    6. 'None' → logprob: -3.0829148292541504
    7. 'len' → logprob: -4.08291482925415
    8. ' len' → logprob: -4.95791482925415
    9. ' True' → logprob: -6.58291482925415
    10. 'True' → logprob: -6.83291482925415

Token 72: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.036246392875909805
    2. '
' → logprob: -4.536246299743652
    3. '#' → logprob: -5.161246299743652
    4. '

' → logprob: -5.536246299743652
    5. '\n' → logprob: -5.786246299743652
    6. 'class' → logprob: -6.161246299743652
    7. '\' → logprob: -6.286246299743652
    8. '<|end|>' → logprob: -6.411246299743652
    9. '```' → logprob: -6.661246299743652
    10. '_' → logprob: -7.286246299743652

Token 73: 'inp' (ID: 74055)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07948120683431625
    2. '#' → logprob: -3.5794811248779297
    3. 'd' → logprob: -3.9544811248779297
    4. 'class' → logprob: -4.82948112487793
    5. '_' → logprob: -5.45448112487793
    6. '\' → logprob: -5.57948112487793
    7. '
' → logprob: -5.70448112487793
    8. '\n' → logprob: -6.20448112487793
    9. 'n' → logprob: -7.07948112487793
    10. '@' → logprob: -7.32948112487793

Token 74: 'INT' (ID: 7154)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -3.9888433093437925e-05
    2. 'u' → logprob: -10.875040054321289
    3. '=' → logprob: -11.000040054321289
    4. '()' → logprob: -13.750040054321289
    5. ' =' → logprob: -14.125040054321289
    6. 'ут' → logprob: -14.375040054321289
    7. '_ut' → logprob: -14.750040054321289
    8. 'uts' → logprob: -15.000040054321289
    9. '```' → logprob: -15.375040054321289
    10. '_' → logprob: -15.625040054321289

Token 75: '=lambda' (ID: 64865)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34170880913734436
    2. 'ut' → logprob: -1.341708779335022
    3. ' =' → logprob: -4.341708660125732
    4. '()' → logprob: -5.966708660125732
    5. 'put' → logprob: -6.341708660125732
    6. 'ent' → logprob: -6.466708660125732
    7. '=int' → logprob: -6.466708660125732
    8. '=[]' → logprob: -6.591708660125732
    9. 'eger' → logprob: -7.091708660125732
    10. '=_' → logprob: -7.091708660125732

Token 76: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5051189661026001
    2. ':int' → logprob: -1.1301189661026
    3. ' :' → logprob: -3.0051188468933105
    4. 'int' → logprob: -4.8801188468933105
    5. '_:' → logprob: -5.5051188468933105
    6. ':list' → logprob: -5.5051188468933105
    7. ' x' → logprob: -6.3801188468933105
    8. ':_' → logprob: -6.6301188468933105
    9. ' int' → logprob: -6.8801188468933105
    10. ' f' → logprob: -6.8801188468933105

Token 77: '__' (ID: 771)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08493101596832275
    2. ' int' → logprob: -2.584930896759033
    3. '__' → logprob: -5.959930896759033
    4. 'map' → logprob: -6.834930896759033
    5. ' map' → logprob: -6.959930896759033
    6. ' __' → logprob: -7.209930896759033
    7. '__.' → logprob: -8.584931373596191
    8. '__[' → logprob: -8.834931373596191
    9. '[int' → logprob: -9.459931373596191
    10. '(int' → logprob: -9.709931373596191

Token 78: 'call' (ID: 9925)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.96626216173172
    2. '_.' → logprob: -1.9662621021270752
    3. '__.' → logprob: -1.9662621021270752
    4. '.F' → logprob: -2.216262102127075
    5. '.__' → logprob: -2.591262102127075
    6. '._' → logprob: -3.091262102127075
    7. '.I' → logprob: -3.591262102127075
    8. '.Call' → logprob: -4.591262340545654
    9. '.call' → logprob: -4.966262340545654
    10. '.input' → logprob: -5.091262340545654

Token 79: '__(' (ID: 8241)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.009365965612232685
    2. '(input' → logprob: -5.259366035461426
    3. '(' → logprob: -6.384366035461426
    4. '(map' → logprob: -6.759366035461426
    5. '(list' → logprob: -7.134366035461426
    6. '(_.' → logprob: -8.134366035461426
    7. '(__' → logprob: -9.509366035461426
    8. '(_' → logprob: -9.884366035461426
    9. '(i' → logprob: -11.259366035461426
    10. '(_,' → logprob: -11.384366035461426

Token 80: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006391456816345453
    2. 'map' → logprob: -5.756391525268555
    3. '_.' → logprob: -6.506391525268555
    4. '_' → logprob: -7.381391525268555
    5. 'input' → logprob: -8.881391525268555
    6. '(int' → logprob: -9.006391525268555
    7. '_int' → logprob: -9.131391525268555
    8. ' int' → logprob: -9.256391525268555
    9. '_[' → logprob: -9.381391525268555
    10. '__' → logprob: -9.506391525268555

Token 81: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9093003273010254
    2. ',input' → logprob: -0.9093003273010254
    3. '(input' → logprob: -2.0343003273010254
    4. '(_.' → logprob: -4.034300327301025
    5. ')' → logprob: -4.409300327301025
    6. 'input' → logprob: -4.534300327301025
    7. ')(__' → logprob: -4.659300327301025
    8. ',__' → logprob: -5.534300327301025
    9. ')(' → logprob: -6.034300327301025
    10. '(' → logprob: -6.034300327301025

Token 82: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03858736529946327
    2. '())' → logprob: -3.2885873317718506
    3. '))' → logprob: -7.91358757019043
    4. '().' → logprob: -9.03858757019043
    5. '()' → logprob: -10.53858757019043
    6. ')
' → logprob: -11.78858757019043
    7. '();)' → logprob: -12.66358757019043
    8. ' )' → logprob: -12.78858757019043
    9. '()))' → logprob: -12.78858757019043
    10. ');' → logprob: -13.16358757019043

Token 83: 'M' (ID: 44)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08197961002588272
    2. '()
' → logprob: -3.456979513168335
    3. '
' → logprob: -3.831979513168335
    4. '\n' → logprob: -4.956979751586914
    5. 'def' → logprob: -5.206979751586914
    6. '#' → logprob: -5.831979751586914
    7. '<|end|>' → logprob: -6.081979751586914
    8. 'inp' → logprob: -6.206979751586914
    9. '()\' → logprob: -6.706979751586914
    10. '()

' → logprob: -7.331979751586914

Token 84: 'II' (ID: 6013)
  Prédit: 'AP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AP' → logprob: -0.22756756842136383
    2. 'OD' → logprob: -2.852567672729492
    3. '=' → logprob: -2.977567672729492
    4. 'A' → logprob: -3.852567672729492
    5. 'ap' → logprob: -3.977567672729492
    6. ' =' → logprob: -4.102567672729492
    7. '=lambda' → logprob: -5.227567672729492
    8. 'AX' → logprob: -5.477567672729492
    9. 'IN' → logprob: -6.102567672729492
    10. '=int' → logprob: -6.227567672729492

Token 85: '=lambda' (ID: 64865)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7008783221244812
    2. 'NT' → logprob: -0.7008783221244812
    3. 'ND' → logprob: -6.825878143310547
    4. 'NI' → logprob: -6.825878143310547
    5. '=' → logprob: -6.950878143310547
    6. 'nt' → logprob: -7.325878143310547
    7. 'INT' → logprob: -7.575878143310547
    8. 'NV' → logprob: -7.700878143310547
    9. 'Nt' → logprob: -8.200878143310547
    10. 'NST' → logprob: -8.200878143310547

Token 86: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4307120442390442
    2. 'int' → logprob: -1.9307119846343994
    3. ':int' → logprob: -2.3057119846343994
    4. '__' → logprob: -3.8057119846343994
    5. '_:' → logprob: -4.1807122230529785
    6. 'lambda' → logprob: -4.1807122230529785
    7. ' :' → logprob: -4.9307122230529785
    8. ' int' → logprob: -5.0557122230529785
    9. ':list' → logprob: -5.1807122230529785
    10. '(int' → logprob: -5.5557122230529785

Token 87: 'map' (ID: 3726)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4875718355178833
    2. 'map' → logprob: -1.2375718355178833
    3. '__' → logprob: -2.7375717163085938
    4. '[' → logprob: -4.237571716308594
    5. '[int' → logprob: -5.487571716308594
    6. 'tuple' → logprob: -5.487571716308594
    7. '__[' → logprob: -6.362571716308594
    8. 'int' → logprob: -6.487571716308594
    9. '[list' → logprob: -6.612571716308594
    10. ' list' → logprob: -7.237571716308594

Token 88: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.025898344814777374
    2. '(' → logprob: -4.275898456573486
    3. '(_' → logprob: -4.650898456573486
    4. '(str' → logprob: -7.025898456573486
    5. 'int' → logprob: -7.900898456573486
    6. '_' → logprob: -8.400897979736328
    7. '(inp' → logprob: -8.400897979736328
    8. '(__' → logprob: -9.150897979736328
    9. '(_,' → logprob: -9.775897979736328
    10. '(_)' → logprob: -10.025897979736328

Token 89: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.018763171508908272
    2. ',' → logprob: -4.018763065338135
    3. ',__' → logprob: -7.518763065338135
    4. ',_' → logprob: -9.893763542175293
    5. ' ,' → logprob: -12.268763542175293
    6. 'input' → logprob: -12.393763542175293
    7. ',in' → logprob: -12.393763542175293
    8. ',(' → logprob: -13.018763542175293
    9. ',int' → logprob: -13.143763542175293
    10. ',i' → logprob: -13.643763542175293

Token 90: '())
' (ID: 4574)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -1.3425219549390022e-05
    2. '()' → logprob: -12.00001335144043
    3. ' ().' → logprob: -12.25001335144043
    4. '.' → logprob: -13.62501335144043
    5. ')' → logprob: -14.00001335144043
    6. '(' → logprob: -15.87501335144043
    7. '())' → logprob: -16.62501335144043
    8. '()
' → logprob: -16.87501335144043
    9. 'split' → logprob: -17.25001335144043
    10. ' .' → logprob: -17.62501335144043

Token 91: 'M' (ID: 44)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018715211190283298
    2. '()
' → logprob: -7.251871585845947
    3. ')' → logprob: -8.376871109008789
    4. '(' → logprob: -8.626871109008789
    5. '().__' → logprob: -9.001871109008789
    6. '()]' → logprob: -9.126871109008789
    7. '().' → logprob: -9.251871109008789
    8. '()\' → logprob: -9.751871109008789
    9. '.' → logprob: -9.876871109008789
    10. '();' → logprob: -10.001871109008789

Token 92: 'II' (ID: 6013)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.625922441482544
    2. 'II' → logprob: -1.250922441482544
    3. 'I' → logprob: -2.250922441482544
    4. 'ap' → logprob: -3.000922441482544
    5. '=' → logprob: -4.500922203063965
    6. 'AP' → logprob: -5.625922203063965
    7. ' =' → logprob: -6.000922203063965
    8. 'lambda' → logprob: -6.125922203063965
    9. '(lambda' → logprob: -6.250922203063965
    10. 'appa' → logprob: -8.375922203063965

Token 93: '_sp' (ID: 18491)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00024608144303783774
    2. '()
' → logprob: -8.750246047973633
    3. '(' → logprob: -10.625246047973633
    4. ')' → logprob: -11.500246047973633
    5. '().__' → logprob: -11.500246047973633
    6. '().' → logprob: -12.000246047973633
    7. '())' → logprob: -12.000246047973633
    8. '()

' → logprob: -12.000246047973633
    9. '()]' → logprob: -12.250246047973633
    10. '();' → logprob: -12.875246047973633

Token 94: ' =' (ID: 314)
  Prédit: 'lit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lit' → logprob: -0.13676194846630096
    2. '=' → logprob: -2.1367619037628174
    3. 'l' → logprob: -5.2617621421813965
    4. '=lambda' → logprob: -5.7617621421813965
    5. 'lace' → logprob: -7.2617621421813965
    6. '=l' → logprob: -7.7617621421813965
    7. ' =' → logprob: -9.511761665344238
    8. '-lit' → logprob: -10.886761665344238
    9. 'lac' → logprob: -11.011761665344238
    10. '='' → logprob: -11.011761665344238

Token 95: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.018495576456189156
    2. ' lambda' → logprob: -4.268495559692383
    3. '=lambda' → logprob: -5.768495559692383
    4. '(lambda' → logprob: -7.268495559692383
    5. 'ambda' → logprob: -8.768495559692383
    6. '_lambda' → logprob: -9.643495559692383
    7. 'map' → logprob: -10.018495559692383
    8. '__' → logprob: -10.143495559692383
    9. 'lam' → logprob: -10.143495559692383
    10. 'ython' → logprob: -11.143495559692383

Token 96: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5337825417518616
    2. ':int' → logprob: -1.7837824821472168
    3. ':list' → logprob: -1.7837824821472168
    4. 'lambda' → logprob: -3.408782482147217
    5. ':str' → logprob: -3.908782482147217
    6. ' lambda' → logprob: -5.408782482147217
    7. 'input' → logprob: -5.533782482147217
    8. 'str' → logprob: -5.658782482147217
    9. ' :' → logprob: -6.283782482147217
    10. 'list' → logprob: -6.408782482147217

Token 97: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.06166354566812515
    2. 'input' → logprob: -3.5616636276245117
    3. 'list' → logprob: -3.9366636276245117
    4. '__.' → logprob: -5.186663627624512
    5. ' map' → logprob: -5.811663627624512
    6. '__' → logprob: -6.561663627624512
    7. '[' → logprob: -7.686663627624512
    8. 'tuple' → logprob: -7.811663627624512
    9. '_.' → logprob: -8.186663627624512
    10. '[input' → logprob: -8.561663627624512

Token 98: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5293100476264954
    2. '(str' → logprob: -0.9043100476264954
    3. '(lambda' → logprob: -5.40431022644043
    4. '(' → logprob: -7.02931022644043
    5. '(float' → logprob: -7.90431022644043
    6. '(input' → logprob: -9.02931022644043
    7. 'str' → logprob: -9.40431022644043
    8. 'int' → logprob: -9.77931022644043
    9. '(sys' → logprob: -9.90431022644043
    10. '(eval' → logprob: -11.15431022644043

Token 99: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.008124204352498055
    2. '(input' → logprob: -5.258124351501465
    3. ',' → logprob: -5.883124351501465
    4. 'input' → logprob: -9.633124351501465
    5. ',(' → logprob: -10.758124351501465
    6. '(' → logprob: -13.133124351501465
    7. ',_' → logprob: -13.383124351501465
    8. ',__' → logprob: -13.383124351501465
    9. ',list' → logprob: -13.633124351501465
    10. ',map' → logprob: -13.633124351501465

Token 100: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.273621405242011e-05
    2. ' ().' → logprob: -10.500032424926758
    3. '.split' → logprob: -13.375032424926758
    4. '()' → logprob: -13.500032424926758
    5. '(' → logprob: -13.625032424926758
    6. 'split' → logprob: -14.750032424926758
    7. '.' → logprob: -15.375032424926758
    8. '(split' → logprob: -16.125032424926758
    9. '.strip' → logprob: -16.625032424926758
    10. '('').' → logprob: -17.250032424926758

Token 101: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0031887630466371775
    2. 'strip' → logprob: -5.753188610076904
    3. 'rstrip' → logprob: -11.503189086914062
    4. 'spl' → logprob: -14.878189086914062
    5. 'replace' → logprob: -15.128189086914062
    6. ' split' → logprob: -15.503189086914062
    7. '.split' → logprob: -17.253189086914062
    8. 's' → logprob: -17.253189086914062
    9. 'sp' → logprob: -17.253189086914062
    10. '(split' → logprob: -17.878189086914062

Token 102: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.00037371189682744443
    2. '()' → logprob: -8.125373840332031
    3. '()))' → logprob: -10.500373840332031
    4. ')' → logprob: -10.500373840332031
    5. ' ())' → logprob: -11.250373840332031
    6. '(' → logprob: -12.250373840332031
    7. '())
' → logprob: -12.625373840332031
    8. '(),' → logprob: -14.875373840332031
    9. '()),' → logprob: -15.125373840332031
    10. '());' → logprob: -15.250373840332031

Token 103: 'M' (ID: 44)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: 'II' (ID: 6013)
  Prédit: 'II'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'II' → logprob: -0.12436925619840622
    2. 'I' → logprob: -2.8743691444396973
    3. '_sp' → logprob: -3.3743691444396973
    4. 'AP' → logprob: -5.624369144439697
    5. 'SP' → logprob: -5.624369144439697
    6. 'ap' → logprob: -6.249369144439697
    7. ' =' → logprob: -6.499369144439697
    8. '=' → logprob: -6.499369144439697
    9. 'III' → logprob: -6.874369144439697
    10. '_' → logprob: -6.999369144439697

Token 105: '_idx' (ID: 15257)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.48073458671569824
    2. '()' → logprob: -0.9807345867156982
    3. '_' → logprob: -5.105734825134277
    4. 'sp' → logprob: -8.355734825134277
    5. '()
' → logprob: -9.480734825134277
    6. '(' → logprob: -9.605734825134277
    7. '(sp' → logprob: -10.355734825134277
    8. 'Sp' → logprob: -10.730734825134277
    9. '_s' → logprob: -10.855734825134277
    10. '<|end|>' → logprob: -11.105734825134277

Token 106: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4329538643360138
    2. ' =' → logprob: -1.4329538345336914
    3. '=lambda' → logprob: -2.1829538345336914
    4. '=_' → logprob: -9.682953834533691
    5. '_sp' → logprob: -11.807953834533691
    6. '(lambda' → logprob: -11.932953834533691
    7. '_=' → logprob: -11.932953834533691
    8. '_lambda' → logprob: -12.057953834533691
    9. 'lambda' → logprob: -12.432953834533691
    10. '_' → logprob: -12.932953834533691

Token 107: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.023641647771000862
    2. ' lambda' → logprob: -3.773641586303711
    3. '(lambda' → logprob: -8.898641586303711
    4. '_lambda' → logprob: -9.023641586303711
    5. '=lambda' → logprob: -9.148641586303711
    6. '   ' → logprob: -11.023641586303711
    7. 'lam' → logprob: -12.648641586303711
    8. '  ' → logprob: -13.398641586303711
    9. '    ' → logprob: -13.398641586303711
    10. 'M' → logprob: -13.523641586303711

Token 108: ':' (ID: 25)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.4768076539039612
    2. ' lambda' → logprob: -1.7268075942993164
    3. 'x' → logprob: -2.3518075942993164
    4. '_:' → logprob: -3.4768075942993164
    5. ' x' → logprob: -3.9768075942993164
    6. ':' → logprob: -4.226807594299316
    7. '=lambda' → logprob: -4.726807594299316
    8. '_' → logprob: -4.726807594299316
    9. 'int' → logprob: -4.976807594299316
    10. '(lambda' → logprob: -5.101807594299316

Token 109: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.00048358101048506796
    2. ' map' → logprob: -7.750483512878418
    3. '_map' → logprob: -11.000483512878418
    4. '(map' → logprob: -11.375483512878418
    5. '__' → logprob: -12.000483512878418
    6. '[_' → logprob: -12.250483512878418
    7. 'idx' → logprob: -12.750483512878418
    8. '_' → logprob: -12.750483512878418
    9. 'm' → logprob: -13.250483512878418
    10. '	map' → logprob: -14.125483512878418

Token 110: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.12707823514938354
    2. '(int' → logprob: -2.2520782947540283
    3. '(lambda' → logprob: -4.377078056335449
    4. '(__' → logprob: -6.627078056335449
    5. '(' → logprob: -8.87707805633545
    6. 'int' → logprob: -10.62707805633545
    7. '_' → logprob: -10.75207805633545
    8. 'lambda' → logprob: -11.12707805633545
    9. '(_.' → logprob: -11.25207805633545
    10. '_(' → logprob: -11.50207805633545

Token 111: 'idx' (ID: 13196)
  Prédit: '_idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.8743977546691895
    2. '._' → logprob: -1.1243977546691895
    3. '.idx' → logprob: -1.4993977546691895
    4. 'idx' → logprob: -3.3743977546691895
    5. '_IDX' → logprob: -8.374397277832031
    6. '.' → logprob: -8.874397277832031
    7. '_.' → logprob: -10.249397277832031
    8. '_idxs' → logprob: -10.249397277832031
    9. ' .' → logprob: -10.749397277832031
    10. 'static' → logprob: -11.374397277832031

Token 112: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0024590103421360254
    2. ',int' → logprob: -6.2524590492248535
    3. ',' → logprob: -8.002458572387695
    4. '(input' → logprob: -9.252458572387695
    5. ',map' → logprob: -10.002458572387695
    6. ' ,' → logprob: -10.502458572387695
    7. 'input' → logprob: -11.002458572387695
    8. ',(' → logprob: -13.002458572387695
    9. '_,' → logprob: -13.127458572387695
    10. '(int' → logprob: -13.377458572387695

Token 113: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.006357223726809025
    2. ' input' → logprob: -5.131357192993164
    3. '_.' → logprob: -9.381357192993164
    4. '__' → logprob: -9.506357192993164
    5. '__.' → logprob: -9.631357192993164
    6. '(input' → logprob: -9.756357192993164
    7. '_input' → logprob: -10.631357192993164
    8. '_' → logprob: -10.881357192993164
    9. 'list' → logprob: -11.506357192993164
    10. 'M' → logprob: -11.631357192993164

Token 114: '())
' (ID: 4574)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -1.4736459888808895e-05
    2. '()' → logprob: -11.250014305114746
    3. ' ().' → logprob: -14.125014305114746
    4. '.split' → logprob: -14.250014305114746
    5. '(' → logprob: -16.000015258789062
    6. '.' → logprob: -16.000015258789062
    7. '().__' → logprob: -17.875015258789062
    8. ')' → logprob: -18.250015258789062
    9. 'split' → logprob: -18.875015258789062
    10. '()[' → logprob: -18.875015258789062

Token 115: 'M' (ID: 44)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.12988561391830444
    2. '.split' → logprob: -2.254885673522949
    3. '()' → logprob: -4.379885673522949
    4. '.' → logprob: -5.629885673522949
    5. 'split' → logprob: -7.379885673522949
    6. '.sp' → logprob: -10.37988567352295
    7. '_split' → logprob: -10.50488567352295
    8. '.s' → logprob: -10.87988567352295
    9. ' .' → logprob: -11.12988567352295
    10. '().__' → logprob: -11.12988567352295

Token 116: 'II' (ID: 6013)
  Prédit: 'II'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'II' → logprob: -0.001971934689208865
    2. 'I' → logprob: -6.87697172164917
    3. '_sp' → logprob: -7.50197172164917
    4. '_' → logprob: -8.876972198486328
    5. '_idx' → logprob: -9.751972198486328
    6. 'III' → logprob: -10.376972198486328
    7. 'IID' → logprob: -10.751972198486328
    8. 'sp' → logprob: -10.876972198486328
    9. 'SP' → logprob: -10.876972198486328
    10. 'IIl' → logprob: -11.876972198486328

Token 117: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.0022467232774943113
    2. '_' → logprob: -6.752246856689453
    3. '_idx' → logprob: -7.252246856689453
    4. '()' → logprob: -8.752246856689453
    5. 'sp' → logprob: -9.127246856689453
    6. '_split' → logprob: -10.377246856689453
    7. '_s' → logprob: -11.502246856689453
    8. '=' → logprob: -11.752246856689453
    9. 'idx' → logprob: -11.877246856689453
    10. ' =' → logprob: -12.127246856689453

Token 118: '_idx' (ID: 15257)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -3.1424973713001236e-05
    2. '()
' → logprob: -11.500031471252441
    3. ' ()' → logprob: -11.875031471252441
    4. '()]' → logprob: -12.750031471252441
    5. '()`' → logprob: -13.500031471252441
    6. '()<' → logprob: -13.625031471252441
    7. '(),' → logprob: -13.625031471252441
    8. '())' → logprob: -13.875031471252441
    9. '()==' → logprob: -13.875031471252441
    10. '();' → logprob: -14.125031471252441

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38729777932167053
    2. '=' → logprob: -1.1372977495193481
    3. '=lambda' → logprob: -7.762297630310059
    4. ' ' → logprob: -14.512297630310059
    5. ' ' → logprob: -15.887297630310059
    6. '=
' → logprob: -16.387298583984375
    7. '=

' → logprob: -16.512298583984375
    8. ' lambda' → logprob: -16.637298583984375
    9. '＝' → logprob: -16.762298583984375
    10. ':' → logprob: -16.762298583984375

Token 120: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.25225594639778137
    2. ' lambda' → logprob: -1.502255916595459
    3. '(lambda' → logprob: -8.377256393432617
    4. '_lambda' → logprob: -9.627256393432617
    5. '=lambda' → logprob: -10.502256393432617
    6. ' lamb' → logprob: -13.627256393432617
    7. 'lam' → logprob: -14.627256393432617
    8. 'ambda' → logprob: -14.627256393432617
    9. 'l' → logprob: -15.127256393432617
    10. ' ' → logprob: -15.502256393432617

Token 121: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030900748446583748
    2. 'lambda' → logprob: -4.155900955200195
    3. '():' → logprob: -4.530900955200195
    4. ' lambda' → logprob: -6.030900955200195
    5. ' :' → logprob: -7.280900955200195
    6. '(lambda' → logprob: -7.405900955200195
    7. '=lambda' → logprob: -8.405900955200195
    8. '()' → logprob: -10.530900955200195
    9. '=' → logprob: -10.905900955200195
    10. ' =' → logprob: -12.405900955200195

Token 122: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.031150948256254196
    2. ' map' → logprob: -3.531151056289673
    3. 'lambda' → logprob: -6.781150817871094
    4. '_map' → logprob: -8.531150817871094
    5. ' lambda' → logprob: -10.156150817871094
    6. '_' → logprob: -12.031150817871094
    7. '_lambda' → logprob: -12.031150817871094
    8. '(map' → logprob: -12.281150817871094
    9. 'm' → logprob: -12.781150817871094
    10. ' ' → logprob: -13.156150817871094

Token 123: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -8.101369894575328e-05
    2. '_' → logprob: -9.875081062316895
    3. '(' → logprob: -10.625081062316895
    4. '(int' → logprob: -12.625081062316895
    5. '(__' → logprob: -13.500081062316895
    6. '(_,' → logprob: -15.375081062316895
    7. '(lambda' → logprob: -15.500081062316895
    8. '_(' → logprob: -17.125080108642578
    9. '(
' → logprob: -17.250080108642578
    10. '(_)' → logprob: -17.750080108642578

Token 124: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.011049585416913033
    2. '_idx' → logprob: -4.511049747467041
    3. '(idx' → logprob: -13.886049270629883
    4. ' idx' → logprob: -14.636049270629883
    5. '	idx' → logprob: -15.761049270629883
    6. '.idx' → logprob: -16.386049270629883
    7. 'Idx' → logprob: -17.011049270629883
    8. '_IDX' → logprob: -17.136049270629883
    9. '[idx' → logprob: -18.261049270629883
    10. 'x' → logprob: -18.261049270629883

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12877866625785828
    2. ',input' → logprob: -2.1287786960601807
    3. '(input' → logprob: -6.628778457641602
    4. '(' → logprob: -7.628778457641602
    5. ',int' → logprob: -10.503778457641602
    6. ',(' → logprob: -12.628778457641602
    7. ')' → logprob: -12.878778457641602
    8. 'input' → logprob: -13.128778457641602
    9. ' ,' → logprob: -13.128778457641602
    10. ',line' → logprob: -14.253778457641602

Token 126: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.009806855581700802
    2. ' input' → logprob: -4.6348066329956055
    3. '(input' → logprob: -10.009806632995605
    4. ',input' → logprob: -13.134806632995605
    5. ' ' → logprob: -14.384806632995605
    6. '<input' → logprob: -14.384806632995605
    7. ')' → logprob: -14.509806632995605
    8. '=input' → logprob: -14.634806632995605
    9. '[input' → logprob: -14.759806632995605
    10. '_input' → logprob: -14.884806632995605

Token 127: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.822646693966817e-06
    2. '.split' → logprob: -12.250007629394531
    3. '.' → logprob: -12.875007629394531
    4. '()' → logprob: -15.125007629394531
    5. ' ().' → logprob: -16.00000762939453
    6. ')' → logprob: -17.75000762939453
    7. ' .' → logprob: -17.75000762939453
    8. '())' → logprob: -18.12500762939453
    9. '().__' → logprob: -18.50000762939453
    10. '(' → logprob: -18.62500762939453

Token 128: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.650518920039758e-06
    2. ' split' → logprob: -13.500003814697266
    3. 'spl' → logprob: -14.125003814697266
    4. ')' → logprob: -14.500003814697266
    5. 'sp' → logprob: -15.000003814697266
    6. 'strip' → logprob: -15.625003814697266
    7. '_split' → logprob: -15.750003814697266
    8. '(split' → logprob: -16.375003814697266
    9. 'plit' → logprob: -16.500003814697266
    10. '.split' → logprob: -16.625003814697266

Token 129: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.002135390415787697
    2. ')' → logprob: -6.627135276794434
    3. '()' → logprob: -7.127135276794434
    4. '()))' → logprob: -13.127135276794434
    5. ' ())' → logprob: -13.377135276794434
    6. '())
' → logprob: -13.627135276794434
    7. '();)' → logprob: -14.752135276794434
    8. '))' → logprob: -15.252135276794434
    9. '()]' → logprob: -15.627135276794434
    10. '());' → logprob: -15.877135276794434

Token 130: 'L' (ID: 43)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.2235651016235352
    2. '<|end|>' → logprob: -1.7235651016235352
    3. '#' → logprob: -2.098565101623535
    4. ')' → logprob: -2.223565101623535
    5. '
' → logprob: -2.973565101623535
    6. ':' → logprob: -3.223565101623535
    7. 'def' → logprob: -3.848565101623535
    8. '__' → logprob: -3.973565101623535
    9. ',' → logprob: -3.973565101623535
    10. '=' → logprob: -4.098565101623535

Token 131: 'II' (ID: 6013)
  Prédit: 'ambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ambda' → logprob: -0.031159494072198868
    2. '=lambda' → logprob: -4.156159400939941
    3. '=' → logprob: -4.781159400939941
    4. ' =' → logprob: -5.906159400939941
    5. '=[]' → logprob: -6.031159400939941
    6. 'amb' → logprob: -7.656159400939941
    7. 'AMB' → logprob: -8.281159400939941
    8. '[' → logprob: -9.031159400939941
    9. 'I' → logprob: -9.031159400939941
    10. 'ist' → logprob: -9.156159400939941

Token 132: ' =' (ID: 314)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.2026263028383255
    2. '=' → logprob: -1.827626347541809
    3. ' =' → logprob: -4.3276262283325195
    4. 'ambda' → logprob: -4.9526262283325195
    5. '_sp' → logprob: -6.7026262283325195
    6. 'lambda' → logprob: -7.7026262283325195
    7. '_=' → logprob: -8.45262622833252
    8. 'am' → logprob: -9.45262622833252
    9. '=[]' → logprob: -9.57762622833252
    10. '=_' → logprob: -10.07762622833252

Token 133: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.11084277927875519
    2. 'list' → logprob: -2.735842704772949
    3. ' lambda' → logprob: -3.360842704772949
    4. '(lambda' → logprob: -5.860842704772949
    5. ' list' → logprob: -6.235842704772949
    6. '=lambda' → logprob: -7.985842704772949
    7. '_lambda' → logprob: -9.86084270477295
    8. '[]' → logprob: -9.98584270477295
    9. '[' → logprob: -10.11084270477295
    10. 'ambda' → logprob: -10.48584270477295

Token 134: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03596802055835724
    2. ':list' → logprob: -3.410968065261841
    3. ' :' → logprob: -6.535967826843262
    4. 'lambda' → logprob: -7.410967826843262
    5. ':int' → logprob: -9.660967826843262
    6. 'list' → logprob: -9.660967826843262
    7. '_:' → logprob: -10.160967826843262
    8. ' lambda' → logprob: -10.285967826843262
    9. '=lambda' → logprob: -11.035967826843262
    10. ' list' → logprob: -11.285967826843262

Token 135: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0005936628440394998
    2. '[' → logprob: -8.375594139099121
    3. '[list' → logprob: -8.375594139099121
    4. ' list' → logprob: -9.000594139099121
    5. '__' → logprob: -13.000594139099121
    6. '[*' → logprob: -13.125594139099121
    7. '__[' → logprob: -13.250594139099121
    8. '=list' → logprob: -14.500594139099121
    9. '_list' → logprob: -14.875594139099121
    10. 'map' → logprob: -15.000594139099121

Token 136: '(map' (ID: 16946)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.17335346341133118
    2. '(' → logprob: -2.423353433609009
    3. '(_' → logprob: -3.423353433609009
    4. '(map' → logprob: -4.173353672027588
    5. '(int' → logprob: -4.548353672027588
    6. '(L' → logprob: -5.048353672027588
    7. '()' → logprob: -6.173353672027588
    8. '(_)' → logprob: -6.798353672027588
    9. '_' → logprob: -7.298353672027588
    10. '(input' → logprob: -7.423353672027588

Token 137: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.013927130959928036
    2. 'int' → logprob: -4.513926982879639
    3. '(_' → logprob: -6.013926982879639
    4. '(' → logprob: -7.888926982879639
    5. '_int' → logprob: -10.638927459716797
    6. ' int' → logprob: -11.888927459716797
    7. '```' → logprob: -12.263927459716797
    8. '<int' → logprob: -12.638927459716797
    9. '=int' → logprob: -12.888927459716797
    10. '(M' → logprob: -12.888927459716797

Token 138: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.006820270325988531
    2. ',' → logprob: -5.006820201873779
    3. '(input' → logprob: -9.631820678710938
    4. 'input' → logprob: -10.256820678710938
    5. '(' → logprob: -13.131820678710938
    6. ' ,' → logprob: -13.881820678710938
    7. ',int' → logprob: -14.506820678710938
    8. ',(' → logprob: -15.381820678710938
    9. ',_' → logprob: -15.881820678710938
    10. ' input' → logprob: -16.506820678710938

Token 139: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.016222288832068443
    2. ' input' → logprob: -4.1412224769592285
    3. '_input' → logprob: -9.51622200012207
    4. ',input' → logprob: -9.89122200012207
    5. '(input' → logprob: -10.14122200012207
    6. '	input' → logprob: -11.89122200012207
    7. '_' → logprob: -12.01622200012207
    8. '<input' → logprob: -13.26622200012207
    9. '=input' → logprob: -13.39122200012207
    10. '[input' → logprob: -13.51622200012207

Token 140: '()))
' (ID: 24521)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -6.511406809295295e-06
    2. '.' → logprob: -12.750006675720215
    3. '()' → logprob: -13.875006675720215
    4. ' ().' → logprob: -14.000006675720215
    5. '))' → logprob: -14.375006675720215
    6. '.split' → logprob: -14.500006675720215
    7. '(' → logprob: -15.500006675720215
    8. ').' → logprob: -16.0000057220459
    9. ')' → logprob: -16.0000057220459
    10. '()))' → logprob: -16.5000057220459

Token 141: 'L' (ID: 43)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4033355414867401
    2. '())' → logprob: -1.5283355712890625
    3. ')' → logprob: -2.5283355712890625
    4. '.split' → logprob: -3.4033355712890625
    5. '()' → logprob: -6.7783355712890625
    6. '.readline' → logprob: -8.528335571289062
    7. 'split' → logprob: -9.153335571289062
    8. '.' → logprob: -9.528335571289062
    9. '.sp' → logprob: -9.528335571289062
    10. '()[' → logprob: -9.653335571289062

Token 142: 'II' (ID: 6013)
  Prédit: 'II'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'II' → logprob: -0.04132352024316788
    2. 'I' → logprob: -3.54132342338562
    3. '(lambda' → logprob: -5.416323661804199
    4. 'ambda' → logprob: -5.416323661804199
    5. '_sp' → logprob: -7.166323661804199
    6. '_' → logprob: -7.666323661804199
    7. '(' → logprob: -8.4163236618042
    8. 'III' → logprob: -8.4163236618042
    9. 'sp' → logprob: -8.5413236618042
    10. 'lambda' → logprob: -8.5413236618042

Token 143: '_sp' (ID: 18491)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.7954958821064793e-05
    2. '()
' → logprob: -12.250018119812012
    3. '())' → logprob: -12.750018119812012
    4. '()]' → logprob: -12.875018119812012
    5. '()[' → logprob: -13.125018119812012
    6. '(' → logprob: -13.500018119812012
    7. '()>' → logprob: -14.000018119812012
    8. '()

' → logprob: -14.625018119812012
    9. '()<' → logprob: -14.625018119812012
    10. ' ()' → logprob: -14.875018119812012

Token 144: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.032061416655778885
    2. '=lambda' → logprob: -4.032061576843262
    3. ' =' → logprob: -4.282061576843262
    4. 'lambda' → logprob: -14.782061576843262
    5. '(lambda' → logprob: -14.907061576843262
    6. ':' → logprob: -16.532060623168945
    7. '＝' → logprob: -16.657060623168945
    8. ' lambda' → logprob: -17.282060623168945
    9. '_lambda' → logprob: -17.532060623168945
    10. '=_' → logprob: -17.657060623168945

Token 145: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.03839029744267464
    2. ' lambda' → logprob: -3.2883903980255127
    3. '(lambda' → logprob: -8.163390159606934
    4. '=lambda' → logprob: -9.663390159606934
    5. ' =' → logprob: -15.788390159606934
    6. '_lambda' → logprob: -16.28839111328125
    7. '   ' → logprob: -17.03839111328125
    8. '=' → logprob: -17.16339111328125
    9. ' lamb' → logprob: -17.91339111328125
    10. 'ambda' → logprob: -18.03839111328125

Token 146: ':' (ID: 25)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.455270379781723
    2. ':' → logprob: -1.0802704095840454
    3. '=lambda' → logprob: -4.080270290374756
    4. '(lambda' → logprob: -5.205270290374756
    5. ' lambda' → logprob: -6.080270290374756
    6. 'list' → logprob: -6.830270290374756
    7. '=' → logprob: -8.080270767211914
    8. ':list' → logprob: -9.330270767211914
    9. 'ambda' → logprob: -10.830270767211914
    10. '=list' → logprob: -11.705270767211914

Token 147: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02115880511701107
    2. 'lambda' → logprob: -4.271158695220947
    3. ' list' → logprob: -5.021158695220947
    4. ' lambda' → logprob: -7.896158695220947
    5. '(lambda' → logprob: -13.646159172058105
    6. 'l' → logprob: -15.646159172058105
    7. 'li' → logprob: -15.896159172058105
    8. 'λ' → logprob: -16.52115821838379
    9. 'List' → logprob: -16.77115821838379
    10. 'lam' → logprob: -17.02115821838379

Token 148: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.002844460541382432
    2. '(' → logprob: -6.252844333648682
    3. '(lambda' → logprob: -7.127844333648682
    4. '(M' → logprob: -9.75284481048584
    5. '(list' → logprob: -10.62784481048584
    6. '(_' → logprob: -12.00284481048584
    7. ' (' → logprob: -12.12784481048584
    8. '_map' → logprob: -12.12784481048584
    9. '(int' → logprob: -12.62784481048584
    10. 'map' → logprob: -13.00284481048584

Token 149: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008209457155317068
    2. '(' → logprob: -7.250821113586426
    3. 'int' → logprob: -9.125821113586426
    4. '<int' → logprob: -14.000821113586426
    5. ',int' → logprob: -15.125821113586426
    6. '(_' → logprob: -15.250821113586426
    7. '[int' → logprob: -15.250821113586426
    8. ' (' → logprob: -16.00082015991211
    9. '=int' → logprob: -16.00082015991211
    10. '(
' → logprob: -16.37582015991211

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31331783533096313
    2. ',input' → logprob: -1.3133177757263184
    3. '(input' → logprob: -10.438318252563477
    4. 'input' → logprob: -10.813318252563477
    5. ',int' → logprob: -12.563318252563477
    6. '(' → logprob: -13.438318252563477
    7. ' ,' → logprob: -14.813318252563477
    8. '),' → logprob: -15.188318252563477
    9. ',s' → logprob: -16.063318252563477
    10. '=input' → logprob: -16.438318252563477

Token 151: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0024807697627693415
    2. ' input' → logprob: -6.002480983734131
    3. '(input' → logprob: -12.627480506896973
    4. ',input' → logprob: -13.502480506896973
    5. '<input' → logprob: -16.25248146057129
    6. ' ' → logprob: -16.25248146057129
    7. '=input' → logprob: -16.87748146057129
    8. '[input' → logprob: -17.00248146057129
    9. '	input' → logprob: -17.37748146057129
    10. '_input' → logprob: -17.62748146057129

Token 152: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.537868779967539e-06
    2. '.' → logprob: -12.000008583068848
    3. '.split' → logprob: -13.250008583068848
    4. ' ().' → logprob: -15.000008583068848
    5. ' .' → logprob: -16.75000762939453
    6. '
' → logprob: -17.12500762939453
    7. '()' → logprob: -17.37500762939453
    8. '()
' → logprob: -17.37500762939453
    9. '().__' → logprob: -18.50000762939453
    10. '(' → logprob: -19.00000762939453

Token 153: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.6286106983898208e-05
    2. '.split' → logprob: -11.625016212463379
    3. ')' → logprob: -12.625016212463379
    4. '_split' → logprob: -13.375016212463379
    5. 'spl' → logprob: -14.000016212463379
    6. 'sp' → logprob: -14.625016212463379
    7. ' split' → logprob: -15.000016212463379
    8. ').' → logprob: -15.625016212463379
    9. 'rstrip' → logprob: -15.750016212463379
    10. 'strip' → logprob: -16.000017166137695

Token 154: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03194423392415047
    2. '))' → logprob: -3.5319442749023438
    3. '())' → logprob: -6.531944274902344
    4. '()' → logprob: -7.281944274902344
    5. '()))
' → logprob: -10.281944274902344
    6. ')' → logprob: -11.531944274902344
    7. '()));' → logprob: -14.031944274902344
    8. '())))' → logprob: -14.656944274902344
    9. '(' → logprob: -14.781944274902344
    10. '()))

' → logprob: -15.031944274902344

Token 155: 'def' (ID: 1314)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.38202714920043945
    2. '_' → logprob: -2.3820271492004395
    3. 'def' → logprob: -2.8820271492004395
    4. 'M' → logprob: -3.3820271492004395
    5. 'LS' → logprob: -4.0070271492004395
    6. '#' → logprob: -4.2570271492004395
    7. '[]' → logprob: -4.6320271492004395
    8. '()' → logprob: -4.6320271492004395
    9. '.' → logprob: -4.7570271492004395
    10. ')' → logprob: -4.8820271492004395

Token 156: ' L' (ID: 451)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.9030405282974243
    2. ' gcd' → logprob: -1.2780405282974243
    3. '__' → logprob: -2.5280404090881348
    4. ' __' → logprob: -2.6530404090881348
    5. 'main' → logprob: -3.0280404090881348
    6. ' L' → logprob: -4.028040409088135
    7. ' _' → logprob: -4.028040409088135
    8. ' l' → logprob: -4.278040409088135
    9. '_' → logprob: -4.528040409088135
    10. ' input' → logprob: -4.778040409088135

Token 157: 'II' (ID: 6013)
  Prédit: 'II'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'II' → logprob: -0.0028342308942228556
    2. 'ist' → logprob: -6.377834320068359
    3. 'I' → logprob: -8.12783432006836
    4. '_list' → logprob: -8.62783432006836
    5. '_sp' → logprob: -8.75283432006836
    6. 'sp' → logprob: -8.87783432006836
    7. 'IST' → logprob: -9.25283432006836
    8. '(' → logprob: -10.00283432006836
    9. '_' → logprob: -10.00283432006836
    10. 'list' → logprob: -10.37783432006836

Token 158: '_' (ID: 62)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.00015693542081862688
    2. '_' → logprob: -9.875157356262207
    3. '_(' → logprob: -10.250157356262207
    4. 'sp' → logprob: -11.125157356262207
    5. '():' → logprob: -11.375157356262207
    6. '(_' → logprob: -12.000157356262207
    7. '```' → logprob: -12.250157356262207
    8. '(' → logprob: -12.500157356262207
    9. '(x' → logprob: -12.750157356262207
    10. '(sp' → logprob: -12.875157356262207

Token 159: '2' (ID: 17)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.023961065337061882
    2. '_sp' → logprob: -3.773961067199707
    3. 'idx' → logprob: -8.148961067199707
    4. '(sp' → logprob: -9.148961067199707
    5. '_' → logprob: -10.023961067199707
    6. 'def' → logprob: -10.398961067199707
    7. '_idx' → logprob: -10.773961067199707
    8. '()' → logprob: -11.023961067199707
    9. 'list' → logprob: -11.023961067199707
    10. 'split' → logprob: -11.023961067199707

Token 160: 'D' (ID: 35)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.5533241629600525
    2. 'sp' → logprob: -1.3033242225646973
    3. 'D' → logprob: -2.0533242225646973
    4. 'd' → logprob: -3.8033242225646973
    5. '(sp' → logprob: -6.678324222564697
    6. 'Sp' → logprob: -7.053324222564697
    7. 'dim' → logprob: -8.928323745727539
    8. '(' → logprob: -9.178323745727539
    9. 'list' → logprob: -9.553323745727539
    10. 'SP' → logprob: -9.803323745727539

Token 161: '(_' (ID: 4963)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.027850866317749023
    2. '_sp' → logprob: -4.902851104736328
    3. '(input' → logprob: -4.902851104736328
    4. '(sp' → logprob: -5.527851104736328
    5. '(' → logprob: -6.402851104736328
    6. '(rows' → logprob: -6.402851104736328
    7. '(size' → logprob: -6.527851104736328
    8. '()' → logprob: -6.652851104736328
    9. '():
' → logprob: -6.777851104736328
    10. '(lst' → logprob: -8.652851104736328

Token 162: 'n' (ID: 77)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.13856777548789978
    2. '):' → logprob: -2.7635676860809326
    3. '_sp' → logprob: -3.0135676860809326
    4. 'rows' → logprob: -4.888567924499512
    5. ',' → logprob: -6.638567924499512
    6. '_' → logprob: -6.888567924499512
    7. 's' → logprob: -7.013567924499512
    8. 'size' → logprob: -7.013567924499512
    9. 'dim' → logprob: -7.013567924499512
    10. 'lines' → logprob: -7.138567924499512

Token 163: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02809673361480236
    2. ',' → logprob: -3.6530966758728027
    3. ',n' → logprob: -7.153096675872803
    4. ')' → logprob: -7.528096675872803
    5. ',_' → logprob: -8.653097152709961
    6. '_' → logprob: -8.903097152709961
    7. 'n' → logprob: -10.028097152709961
    8. '):
' → logprob: -10.528097152709961
    9. ':' → logprob: -11.028097152709961
    10. '=' → logprob: -11.528097152709961

Token 164: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19796495139598846
    2. ' return' → logprob: -1.9479649066925049
    3. 'return' → logprob: -3.447964906692505
    4. '	return' → logprob: -5.322965145111084
    5. ' ' → logprob: -8.322964668273926
    6. '   ' → logprob: -10.197964668273926
    7. ' res' → logprob: -10.697964668273926
    8. '_return' → logprob: -11.447964668273926
    9. 'ret' → logprob: -11.947964668273926
    10. 'r' → logprob: -12.322964668273926

Token 165: ' [' (ID: 723)
  Prédit: '[L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -0.2557148337364197
    2. '[list' → logprob: -1.5057148933410645
    3. '[' → logprob: -6.0057148933410645
    4. '[List' → logprob: -6.7557148933410645
    5. '[l' → logprob: -9.505714416503906
    6. ' [' → logprob: -10.255714416503906
    7. '[[' → logprob: -11.505714416503906
    8. 'list' → logprob: -12.130714416503906
    9. '[_' → logprob: -12.130714416503906
    10. '[line' → logprob: -12.630714416503906

Token 166: 'L' (ID: 43)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.22563107311725616
    2. 'L' → logprob: -1.6006311178207397
    3. ' list' → logprob: -9.100630760192871
    4. ' L' → logprob: -9.975630760192871
    5. '[' → logprob: -10.975630760192871
    6. '_list' → logprob: -11.350630760192871
    7. '[L' → logprob: -11.600630760192871
    8. 'List' → logprob: -12.225630760192871
    9. '_L' → logprob: -12.225630760192871
    10. '[list' → logprob: -12.850630760192871

Token 167: 'II' (ID: 6013)
  Prédit: 'II'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'II' → logprob: -0.0020680641755461693
    2. 'list' → logprob: -6.502068042755127
    3. 'I' → logprob: -8.252068519592285
    4. '[' → logprob: -9.127068519592285
    5. 'ambda' → logprob: -10.252068519592285
    6. '_' → logprob: -10.627068519592285
    7. 'ist' → logprob: -10.752068519592285
    8. '__' → logprob: -11.002068519592285
    9. '_list' → logprob: -11.627068519592285
    10. '(' → logprob: -11.627068519592285

Token 168: '()' (ID: 416)
  Prédit: '_sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.0793684646487236
    2. '()' → logprob: -2.5793683528900146
    3. 'sp' → logprob: -7.829368591308594
    4. '()]' → logprob: -10.204368591308594
    5. '_' → logprob: -10.329368591308594
    6. 'for' → logprob: -12.829368591308594
    7. 'Sp' → logprob: -13.454368591308594
    8. '().' → logprob: -13.579368591308594
    9. '(' → logprob: -13.579368591308594
    10. '(input' → logprob: -14.454368591308594

Token 169: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.547966480255127
    2. 'for' → logprob: -1.047966480255127
    3. ' for' → logprob: -2.797966480255127
    4. '_sp' → logprob: -4.797966480255127
    5. '(' → logprob: -6.797966480255127
    6. '_' → logprob: -8.297966003417969
    7. '(sp' → logprob: -8.297966003417969
    8. 'sp' → logprob: -9.047966003417969
    9. '(_' → logprob: -9.547966003417969
    10. ' ' → logprob: -9.797966003417969

Token 170: ' __' (ID: 2516)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01135267037898302
    2. '_n' → logprob: -4.5113525390625
    3. '_i' → logprob: -8.2613525390625
    4. 'n' → logprob: -11.2613525390625
    5. 'i' → logprob: -11.3863525390625
    6. ' in' → logprob: -11.3863525390625
    7. '__' → logprob: -13.1363525390625
    8. '_in' → logprob: -13.2613525390625
    9. '_range' → logprob: -13.3863525390625
    10. ' _' → logprob: -13.6363525390625

Token 171: 'times' (ID: 32499)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7030474543571472
    2. ' in' → logprob: -1.203047513961792
    3. '_' → logprob: -2.078047513961792
    4. 'range' → logprob: -2.578047513961792
    5. ' range' → logprob: -6.078047275543213
    6. 'i' → logprob: -7.328047275543213
    7. 'n' → logprob: -8.328047752380371
    8. '__' → logprob: -9.453047752380371
    9. '_n' → logprob: -9.703047752380371
    10. '_range' → logprob: -9.953047752380371

Token 172: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.02817612513899803
    2. 'range' → logprob: -4.153176307678223
    3. ' in' → logprob: -4.653176307678223
    4. '_' → logprob: -6.028176307678223
    5. ' range' → logprob: -9.278176307678223
    6. '(range' → logprob: -11.653176307678223
    7. ' ' → logprob: -12.028176307678223
    8. '_in' → logprob: -12.403176307678223
    9. 'i' → logprob: -12.403176307678223
    10. 'n' → logprob: -12.403176307678223

Token 173: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019367238273844123
    2. ' range' → logprob: -6.251936912536621
    3. '_' → logprob: -11.876936912536621
    4. '(range' → logprob: -14.126936912536621
    5. '	range' → logprob: -15.626936912536621
    6. '_range' → logprob: -15.751936912536621
    7. '[' → logprob: -17.751935958862305
    8. 'rang' → logprob: -18.001935958862305
    9. ' ' → logprob: -18.376935958862305
    10. 'ran' → logprob: -18.751935958862305

Token 174: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.00011391390580683947
    2. '_n' → logprob: -9.125113487243652
    3. '(' → logprob: -12.500113487243652
    4. '(n' → logprob: -14.375113487243652
    5. '_' → logprob: -14.625113487243652
    6. '(
' → logprob: -16.37511444091797
    7. '(int' → logprob: -17.37511444091797
    8. '((_' → logprob: -17.37511444091797
    9. ' (_' → logprob: -18.12511444091797
    10. ' _' → logprob: -18.37511444091797

Token 175: 'n' (ID: 77)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0021893989760428667
    2. 'n' → logprob: -6.127189636230469
    3. '(n' → logprob: -12.627189636230469
    4. 'int' → logprob: -14.627189636230469
    5. '(_' → logprob: -15.252189636230469
    6. ' _' → logprob: -16.87718963623047
    7. ' n' → logprob: -17.00218963623047
    8. '_' → logprob: -17.62718963623047
    9. '(int' → logprob: -18.62718963623047
    10. '-n' → logprob: -18.75218963623047

Token 176: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.372294698550832e-06
    2. ')' → logprob: -12.375009536743164
    3. ')]
' → logprob: -13.000009536743164
    4. ']' → logprob: -13.500009536743164
    5. ')])' → logprob: -15.250009536743164
    6. ')],' → logprob: -15.500009536743164
    7. ' )' → logprob: -15.625009536743164
    8. '))' → logprob: -15.750009536743164
    9. ')]

' → logprob: -16.625009536743164
    10. ')].' → logprob: -16.750009536743164

Token 177: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 178: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.47524482011795044
    2. ' L' → logprob: -0.9752448201179504
    3. ' M' → logprob: -8.350244522094727
    4. 'M' → logprob: -8.600244522094727
    5. '__' → logprob: -8.975244522094727
    6. 'main' → logprob: -9.225244522094727
    7. '_' → logprob: -9.350244522094727
    8. ' ' → logprob: -9.475244522094727
    9. 'LI' → logprob: -10.037744522094727
    10. ' main' → logprob: -10.350244522094727

Token 179: 'II' (ID: 6013)
  Prédit: 'II'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'II' → logprob: -0.0013457079185172915
    2. '_' → logprob: -7.501345634460449
    3. 'I' → logprob: -8.12634563446045
    4. 'def' → logprob: -8.62634563446045
    5. 'sp' → logprob: -10.00134563446045
    6. '_sp' → logprob: -10.00134563446045
    7. 'L' → logprob: -10.12634563446045
    8. 'III' → logprob: -10.37634563446045
    9. '_list' → logprob: -10.87634563446045
    10. 'IST' → logprob: -11.00134563446045

Token 180: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.0008205882040783763
    2. '_' → logprob: -7.125820636749268
    3. 'sp' → logprob: -11.62582015991211
    4. '(_' → logprob: -12.37582015991211
    5. '2' → logprob: -13.87582015991211
    6. '(' → logprob: -14.12582015991211
    7. 'def' → logprob: -15.37582015991211
    8. '```' → logprob: -15.75082015991211
    9. ' _' → logprob: -15.87582015991211
    10. '_split' → logprob: -16.00082015991211

Token 181: '_' (ID: 62)
  Prédit: '(_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.001529620960354805
    2. '(n' → logprob: -6.626529693603516
    3. '(' → logprob: -8.876529693603516
    4. '_' → logprob: -10.626529693603516
    5. '():' → logprob: -11.251529693603516
    6. '(lambda' → logprob: -12.001529693603516
    7. '((_' → logprob: -12.501529693603516
    8. '_sp' → logprob: -12.501529693603516
    9. '(_)' → logprob: -13.001529693603516
    10. '(_:' → logprob: -13.126529693603516

Token 182: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.727905979962088e-05
    2. '_' → logprob: -10.62504768371582
    3. '(n' → logprob: -11.25004768371582
    4. 'n' → logprob: -12.87504768371582
    5. '(_' → logprob: -12.87504768371582
    6. '_n' → logprob: -13.00004768371582
    7. 'def' → logprob: -13.00004768371582
    8. '(' → logprob: -16.62504768371582
    9. '```' → logprob: -16.87504768371582
    10. '(lambda' → logprob: -17.75004768371582

Token 183: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -9.305326966568828e-05
    2. 'def' → logprob: -9.750093460083008
    3. '(lambda' → logprob: -10.500093460083008
    4. '_D' → logprob: -13.375093460083008
    5. 'lambda' → logprob: -13.500093460083008
    6. '=lambda' → logprob: -14.125093460083008
    7. ' D' → logprob: -14.875093460083008
    8. '(' → logprob: -15.000093460083008
    9. '_' → logprob: -15.000093460083008
    10. 'Def' → logprob: -15.000093460083008

Token 184: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -9.305326966568828e-05
    2. '(n' → logprob: -9.375093460083008
    3. '(' → logprob: -12.375093460083008
    4. '_n' → logprob: -13.250093460083008
    5. '_' → logprob: -13.250093460083008
    6. '_sp' → logprob: -15.250093460083008
    7. ' (_' → logprob: -15.750093460083008
    8. '(sp' → logprob: -18.125093460083008
    9. '((_' → logprob: -18.500093460083008
    10. ' _' → logprob: -18.875093460083008

Token 185: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.000633566698525101
    2. '_n' → logprob: -7.375633716583252
    3. 'def' → logprob: -13.375633239746094
    4. '
' → logprob: -13.625633239746094
    5. '(n' → logprob: -13.625633239746094
    6. ')' → logprob: -14.125633239746094
    7. ' n' → logprob: -14.250633239746094
    8. 'int' → logprob: -15.250633239746094
    9. '```' → logprob: -15.250633239746094
    10. ')n' → logprob: -16.500633239746094

Token 186: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -9.019237768370658e-05
    2. '(n' → logprob: -10.125090599060059
    3. '):
' → logprob: -10.875090599060059
    4. '_n' → logprob: -10.875090599060059
    5. ')' → logprob: -12.625090599060059
    6. ',n' → logprob: -13.000090599060059
    7. '(_' → logprob: -13.000090599060059
    8. ' ):' → logprob: -13.000090599060059
    9. 'n' → logprob: -14.500090599060059
    10. '):
' → logprob: -15.250090599060059

Token 187: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0040793512016534805
    2. 'return' → logprob: -5.504079341888428
    3. '   ' → logprob: -14.004079818725586
    4. ' ' → logprob: -17.379079818725586
    5. '	return' → logprob: -17.379079818725586
    6. ':return' → logprob: -18.004079818725586
    7. ' ' → logprob: -19.004079818725586
    8. '(return' → logprob: -19.004079818725586
    9. '    ' → logprob: -19.754079818725586
    10. ' retur' → logprob: -20.004079818725586

Token 188: ' [' (ID: 723)
  Prédit: '[L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[L' → logprob: -1.723973582556937e-05
    2. ' [' → logprob: -11.250017166137695
    3. '[' → logprob: -12.625017166137695
    4. '[List' → logprob: -14.125017166137695
    5. '[list' → logprob: -16.250017166137695
    6. '[l' → logprob: -17.375017166137695
    7. '[[' → logprob: -17.875017166137695
    8. '([' → logprob: -18.875017166137695
    9. '[
' → logprob: -19.500017166137695
    10. '[_' → logprob: -19.500017166137695

Token 189: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0007148159202188253
    2. 'list' → logprob: -7.2507147789001465
    3. ' L' → logprob: -12.375715255737305
    4. '(L' → logprob: -14.625715255737305
    5. ' list' → logprob: -16.375715255737305
    6. 'List' → logprob: -17.250715255737305
    7. '(list' → logprob: -18.500715255737305
    8. 'LI' → logprob: -18.750715255737305
    9. '[L' → logprob: -18.750715255737305
    10. '_list' → logprob: -19.000715255737305

Token 190: 'II' (ID: 6013)
  Prédit: 'II'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'II' → logprob: -0.103782057762146
    2. '_sp' → logprob: -2.3537821769714355
    3. 'sp' → logprob: -5.8537821769714355
    4. 'I' → logprob: -8.228781700134277
    5. 'Sp' → logprob: -8.228781700134277
    6. 'ambda' → logprob: -10.478781700134277
    7. '_' → logprob: -10.478781700134277
    8. '(' → logprob: -10.603781700134277
    9. 'SP' → logprob: -10.853781700134277
    10. '(sp' → logprob: -11.478781700134277

Token 191: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.00033558503491804004
    2. 'sp' → logprob: -8.000335693359375
    3. 'Sp' → logprob: -17.000335693359375
    4. '```' → logprob: -17.250335693359375
    5. '(sp' → logprob: -18.125335693359375
    6. 'def' → logprob: -18.375335693359375
    7. '(_' → logprob: -18.750335693359375
    8. '_' → logprob: -19.125335693359375
    9. 's' → logprob: -19.375335693359375
    10. '	sp' → logprob: -19.625335693359375

Token 192: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01816117763519287
    2. '(_' → logprob: -4.018161296844482
    3. '(' → logprob: -12.268160820007324
    4. '(n' → logprob: -12.518160820007324
    5. '()]' → logprob: -13.643160820007324
    6. ' ()' → logprob: -14.268160820007324
    7. 'for' → logprob: -14.893160820007324
    8. '()
' → logprob: -15.643160820007324
    9. '(int' → logprob: -15.643160820007324
    10. '()[' → logprob: -16.39316177368164

Token 193: ' for' (ID: 395)
  Prédit: '(_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.00014180023572407663
    2. 'for' → logprob: -9.000142097473145
    3. ' for' → logprob: -11.750142097473145
    4. '(n' → logprob: -12.000142097473145
    5. '(' → logprob: -12.500142097473145
    6. '((_' → logprob: -15.625142097473145
    7. '_n' → logprob: -15.750142097473145
    8. '(_)' → logprob: -16.750141143798828
    9. '(__' → logprob: -17.000141143798828
    10. ' (_' → logprob: -17.375141143798828

Token 194: ' __' (ID: 2516)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.3173089623451233
    2. '_' → logprob: -1.8173089027404785
    3. '_times' → logprob: -2.3173089027404785
    4. '_t' → logprob: -5.6923089027404785
    5. '__' → logprob: -6.0673089027404785
    6. ' _' → logprob: -6.0673089027404785
    7. '_range' → logprob: -6.5673089027404785
    8. '_i' → logprob: -6.9423089027404785
    9. 'range' → logprob: -8.692309379577637
    10. ' range' → logprob: -9.067309379577637

Token 195: 'x' (ID: 87)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.5659888982772827
    2. '_times' → logprob: -0.9409888982772827
    3. 'range' → logprob: -3.1909890174865723
    4. '_t' → logprob: -8.190988540649414
    5. 'in' → logprob: -8.940988540649414
    6. ' in' → logprob: -9.065988540649414
    7. '__' → logprob: -9.690988540649414
    8. '_' → logprob: -9.690988540649414
    9. ' times' → logprob: -9.815988540649414
    10. '_in' → logprob: -10.565988540649414

Token 196: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.018301649019122124
    2. ' in' → logprob: -4.393301486968994
    3. 'range' → logprob: -5.893301486968994
    4. 'times' → logprob: -6.018301486968994
    5. '_times' → logprob: -7.893301486968994
    6. 'n' → logprob: -8.893301963806152
    7. '_n' → logprob: -10.893301963806152
    8. '_' → logprob: -11.268301963806152
    9. '_in' → logprob: -11.518301963806152
    10. '(times' → logprob: -12.018301963806152

Token 197: ' [-' (ID: 20191)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00015908108616713434
    2. ' range' → logprob: -8.75015926361084
    3. '(range' → logprob: -15.25015926361084
    4. '_' → logprob: -16.000158309936523
    5. '_range' → logprob: -16.000158309936523
    6. '	range' → logprob: -16.625158309936523
    7. '
' → logprob: -17.125158309936523
    8. '   ' → logprob: -17.375158309936523
    9. ' ' → logprob: -18.125158309936523
    10. '  ' → logprob: -18.750158309936523

Token 198: '~' (ID: 93)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.013023513369262218
    2. 'n' → logprob: -4.388023376464844
    3. '_' → logprob: -7.888023376464844
    4. '1' → logprob: -9.013023376464844
    5. 'range' → logprob: -11.513023376464844
    6. 'int' → logprob: -13.263023376464844
    7. ' _' → logprob: -13.888023376464844
    8. '(_' → logprob: -14.513023376464844
    9. '-n' → logprob: -15.138023376464844
    10. 'x' → logprob: -15.138023376464844

Token 199: '0' (ID: 15)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0003323665587231517
    2. '1' → logprob: -9.625332832336426
    3. 'n' → logprob: -9.875332832336426
    4. '(_' → logprob: -10.000332832336426
    5. '_' → logprob: -10.250332832336426
    6. '0' → logprob: -10.375332832336426
    7. ' ' → logprob: -10.375332832336426
    8. '
' → logprob: -10.875332832336426
    9. '   ' → logprob: -11.250332832336426
    10. ' _' → logprob: -11.625332832336426

Token 200: ']*' (ID: 18579)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0018674718448892236
    2. '(_' → logprob: -7.251867294311523
    3. '_' → logprob: -7.876867294311523
    4. '(n' → logprob: -8.501867294311523
    5. 'n' → logprob: -8.876867294311523
    6. '_range' → logprob: -9.501867294311523
    7. ' _' → logprob: -9.876867294311523
    8. '_x' → logprob: -10.001867294311523
    9. '_i' → logprob: -10.501867294311523
    10. 'x' → logprob: -10.876867294311523

Token 201: '_' (ID: 62)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -9.729906196298543e-06
    2. '(_' → logprob: -12.125009536743164
    3. ' _' → logprob: -12.500009536743164
    4. '_' → logprob: -15.500009536743164
    5. '(n' → logprob: -16.000009536743164
    6. '
' → logprob: -16.250009536743164
    7. '(' → logprob: -16.750009536743164
    8. 'n' → logprob: -17.875009536743164
    9. '   ' → logprob: -17.875009536743164
    10. '```' → logprob: -18.250009536743164

Token 202: 'n' (ID: 77)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0005784121458418667
    2. 'n' → logprob: -7.5005784034729
    3. '(n' → logprob: -11.125578880310059
    4. '(_' → logprob: -11.875578880310059
    5. '
' → logprob: -14.375578880310059
    6. ' _' → logprob: -14.500578880310059
    7. '   ' → logprob: -14.750578880310059
    8. '(' → logprob: -14.875578880310059
    9. '```' → logprob: -15.250578880310059
    10. '_' → logprob: -15.875578880310059

Token 203: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014625053852796555
    2. ')]' → logprob: -4.514625072479248
    3. '()]' → logprob: -5.639625072479248
    4. ' ]' → logprob: -11.51462459564209
    5. ']
' → logprob: -13.63962459564209
    6. '])' → logprob: -13.76462459564209
    7. '(' → logprob: -14.26462459564209
    8. '`]' → logprob: -14.26462459564209
    9. ')' → logprob: -14.38962459564209
    10. '>]' → logprob: -14.63962459564209

Token 204: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8481906652450562
    2. '<|end|>' → logprob: -1.0981906652450562
    3. '#' → logprob: -2.3481907844543457
    4. '
' → logprob: -3.0981907844543457
    5. '<|end|>' → logprob: -3.8481907844543457
    6. '_' → logprob: -4.348190784454346
    7. ')' → logprob: -4.598190784454346
    8. ':' → logprob: -4.973190784454346
    9. 'import' → logprob: -5.098190784454346
    10. ',' → logprob: -5.598190784454346

Token 205: ' _' (ID: 1175)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5192312598228455
    2. ' gcd' → logprob: -2.0192313194274902
    3. 'main' → logprob: -2.3942313194274902
    4. ' solve' → logprob: -3.0192313194274902
    5. '__' → logprob: -3.3942313194274902
    6. ' __' → logprob: -4.01923131942749
    7. '_' → logprob: -4.76923131942749
    8. ' _' → logprob: -5.14423131942749
    9. 'g' → logprob: -5.39423131942749
    10. 'solve' → logprob: -5.39423131942749

Token 206: 'g' (ID: 70)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.1904475688934326
    2. 'main' → logprob: -1.4404475688934326
    3. 'g' → logprob: -1.8154475688934326
    4. 'pow' → logprob: -2.8154475688934326
    5. 'call' → logprob: -2.9404475688934326
    6. 'factor' → logprob: -3.4404475688934326
    7. '_idx' → logprob: -4.315447807312012
    8. 'input' → logprob: -4.315447807312012
    9. '_main' → logprob: -4.565447807312012
    10. '_g' → logprob: -4.940447807312012

Token 207: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.5802487730979919
    2. 'et' → logprob: -1.0802488327026367
    3. 'en' → logprob: -2.4552488327026367
    4. 'def' → logprob: -5.830248832702637
    5. 'enerator' → logprob: -5.830248832702637
    6. '():' → logprob: -5.955248832702637
    7. 'enerate' → logprob: -6.205248832702637
    8. 'CD' → logprob: -7.205248832702637
    9. 'range' → logprob: -7.580248832702637
    10. 'lobal' → logprob: -7.955248832702637

Token 208: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.02708667516708374
    2. '(' → logprob: -3.6520867347717285
    3. '(x' → logprob: -7.6520867347717285
    4. '(*' → logprob: -8.65208625793457
    5. '(__' → logprob: -10.15208625793457
    6. '__(' → logprob: -10.77708625793457
    7. '(A' → logprob: -10.90208625793457
    8. '(_,' → logprob: -11.02708625793457
    9. '(
' → logprob: -11.52708625793457
    10. '(_' → logprob: -11.90208625793457

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012567223981022835
    2. ',b' → logprob: -4.387567043304443
    3. ',a' → logprob: -10.512567520141602
    4. ' ,' → logprob: -10.762567520141602
    5. ',g' → logprob: -12.887567520141602
    6. '_,' → logprob: -13.262567520141602
    7. ',
' → logprob: -13.762567520141602
    8. 'b' → logprob: -14.137567520141602
    9. ',d' → logprob: -14.762567520141602
    10. '):' → logprob: -14.762567520141602

Token 210: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003182348096743226
    2. ' b' → logprob: -5.753182411193848
    3. '_b' → logprob: -13.753182411193848
    4. '   ' → logprob: -14.003182411193848
    5. ' ' → logprob: -14.253182411193848
    6. '	b' → logprob: -15.003182411193848
    7. '  ' → logprob: -15.003182411193848
    8. ',b' → logprob: -15.753182411193848
    9. 'def' → logprob: -15.878182411193848
    10. '    ' → logprob: -16.00318145751953

Token 211: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08945442736148834
    2. '):
' → logprob: -2.464454412460327
    3. ',' → logprob: -7.839454650878906
    4. '):
' → logprob: -9.339454650878906
    5. ')' → logprob: -11.214454650878906
    6. '):

' → logprob: -12.089454650878906
    7. '   ' → logprob: -12.214454650878906
    8. ':' → logprob: -12.839454650878906
    9. ' ):' → logprob: -13.089454650878906
    10. ',a' → logprob: -13.714454650878906

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011892917566001415
    2. ' return' → logprob: -4.761892795562744
    3. 'return' → logprob: -6.011892795562744
    4. ' while' → logprob: -7.636892795562744
    5. 'while' → logprob: -8.761893272399902
    6. 'if' → logprob: -10.011893272399902
    7. '	return' → logprob: -10.136893272399902
    8. ' if' → logprob: -10.261893272399902
    9. ' ' → logprob: -10.386893272399902
    10. '    ' → logprob: -11.761893272399902

Token 213: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5362383723258972
    2. 'while' → logprob: -1.536238431930542
    3. 'if' → logprob: -2.411238431930542
    4. ' return' → logprob: -2.911238431930542
    5. '   ' → logprob: -3.536238431930542
    6. ' while' → logprob: -3.911238431930542
    7. '__' → logprob: -5.786238193511963
    8. ' if' → logprob: -5.911238193511963
    9. '
' → logprob: -8.536238670349121
    10. ' ' → logprob: -8.661238670349121

Token 214: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.43131187558174133
    2. 'a' → logprob: -1.181311845779419
    3. ' __' → logprob: -3.681311845779419
    4. '__(' → logprob: -5.306312084197998
    5. ' a' → logprob: -5.431312084197998
    6. ' fractions' → logprob: -5.806312084197998
    7. 'fra' → logprob: -6.306312084197998
    8. '__.' → logprob: -6.306312084197998
    9. '(a' → logprob: -7.431312084197998
    10. '(' → logprob: -8.05631160736084

Token 215: '.' (ID: 13)
  Prédit: '.g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.019846530631184578
    2. '.f' → logprob: -4.769846439361572
    3. 'g' → logprob: -5.894846439361572
    4. '.math' → logprob: -6.144846439361572
    5. '__.' → logprob: -6.269846439361572
    6. 'fra' → logprob: -6.394846439361572
    7. '.__' → logprob: -7.144846439361572
    8. 'math' → logprob: -7.644846439361572
    9. '_.' → logprob: -7.894846439361572
    10. 'def' → logprob: -7.894846439361572

Token 216: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0011602196609601378
    2. 'Fraction' → logprob: -6.876160144805908
    3. '_g' → logprob: -9.251160621643066
    4. ' gcd' → logprob: -11.751160621643066
    5. 'fra' → logprob: -11.876160621643066
    6. '__' → logprob: -12.126160621643066
    7. 'F' → logprob: -12.626160621643066
    8. 'math' → logprob: -12.626160621643066
    9. 'Fra' → logprob: -13.751160621643066
    10. 'fraction' → logprob: -14.501160621643066

Token 217: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0058128912933170795
    2. 'g' → logprob: -5.255813121795654
    3. '.g' → logprob: -8.505812644958496
    4. 'reat' → logprob: -8.880812644958496
    5. 'r' → logprob: -9.755812644958496
    6. 'c' → logprob: -9.755812644958496
    7. 'math' → logprob: -10.880812644958496
    8. 'reater' → logprob: -11.255812644958496
    9. 'CD' → logprob: -11.505812644958496
    10. 'ather' → logprob: -11.755812644958496

Token 218: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.9623810658231378e-05
    2. '(' → logprob: -10.875020027160645
    3. 'a' → logprob: -14.250020027160645
    4. ' (' → logprob: -17.125019073486328
    5. '(
' → logprob: -17.500019073486328
    6. '((' → logprob: -18.125019073486328
    7. '(abs' → logprob: -19.875019073486328
    8. '(_,' → logprob: -20.625019073486328
    9. '(ab' → logprob: -21.000019073486328
    10. 'def' → logprob: -21.125019073486328

Token 219: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0563044548034668
    2. ',b' → logprob: -2.931304454803467
    3. 'b' → logprob: -6.931304454803467
    4. ' ,' → logprob: -7.806304454803467
    5. ' b' → logprob: -10.681304931640625
    6. ',
' → logprob: -11.931304931640625
    7. ')' → logprob: -12.681304931640625
    8. ' ' → logprob: -13.056304931640625
    9. '   ' → logprob: -14.681304931640625
    10. ')b' → logprob: -15.306304931640625

Token 220: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')
' → logprob: -13.500001907348633
    3. ' )' → logprob: -16.000001907348633
    4. ')return' → logprob: -17.500001907348633
    5. '),' → logprob: -17.875001907348633
    6. '))' → logprob: -18.500001907348633
    7. '<|end|>' → logprob: -18.750001907348633
    8. ')a' → logprob: -19.000001907348633
    9. ')}' → logprob: -19.125001907348633
    10. ')#' → logprob: -19.250001907348633

Token 221: '@' (ID: 31)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 222: 'classmethod' (ID: 64680)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.7088016271591187
    2. 'staticmethod' → logprob: -0.8338016271591187
    3. 'dat' → logprob: -3.708801746368408
    4. '__.' → logprob: -3.833801746368408
    5. '_' → logprob: -4.333801746368408
    6. 'classmethod' → logprob: -4.958801746368408
    7. 'l' → logprob: -5.958801746368408
    8. '_.' → logprob: -6.458801746368408
    9. 'property' → logprob: -7.208801746368408
    10. 'fun' → logprob: -7.333801746368408

Token 223: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5048530030981055e-06
    2. '
' → logprob: -14.000001907348633
    3. ' def' → logprob: -14.625001907348633
    4. '_def' → logprob: -16.375001907348633
    5. '<|end|>' → logprob: -17.875001907348633
    6. '(def' → logprob: -18.000001907348633
    7. '\' → logprob: -18.750001907348633
    8. 'de' → logprob: -19.500001907348633
    9. ':def' → logprob: -19.500001907348633
    10. '```' → logprob: -19.625001907348633

Token 224: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.9361264946837764e-07
    2. '_def' → logprob: -16.875
    3. ' def' → logprob: -17.5
    4. '
' → logprob: -17.5
    5. '@' → logprob: -19.25
    6. 'class' → logprob: -19.625
    7. 'ndef' → logprob: -19.875
    8. 'de' → logprob: -20.625
    9. '	def' → logprob: -21.0
    10. 'async' → logprob: -21.375

Token 225: ' l' (ID: 305)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.48394832015037537
    2. 'def' → logprob: -1.9839483499526978
    3. '__' → logprob: -2.108948230743408
    4. '_input' → logprob: -3.733948230743408
    5. '_l' → logprob: -3.983948230743408
    6. 'g' → logprob: -3.983948230743408
    7. '_factor' → logprob: -4.608948230743408
    8. '_main' → logprob: -4.733948230743408
    9. '_from' → logprob: -4.733948230743408
    10. 'from' → logprob: -5.108948230743408

Token 226: 'cm' (ID: 7871)
  Prédit: 'cm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cm' → logprob: -0.007504643872380257
    2. 'ist' → logprob: -6.382504463195801
    3. 'en' → logprob: -6.632504463195801
    4. 'ambda' → logprob: -6.632504463195801
    5. 'oad' → logprob: -7.507504463195801
    6. 'e' → logprob: -7.632504463195801
    7. 'ru' → logprob: -8.0075044631958
    8. 'og' → logprob: -8.1325044631958
    9. 'eft' → logprob: -8.5075044631958
    10. 'l' → logprob: -8.6325044631958

Token 227: '(cls' (ID: 46446)
  Prédit: '(cls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cls' → logprob: -0.00020234835392329842
    2. '(a' → logprob: -8.875202178955078
    3. '(_,' → logprob: -10.125202178955078
    4. 'cls' → logprob: -11.125202178955078
    5. '_(' → logprob: -13.000202178955078
    6. '(' → logprob: -13.250202178955078
    7. 'def' → logprob: -14.000202178955078
    8. '(c' → logprob: -14.125202178955078
    9. '(cl' → logprob: -14.250202178955078
    10. '(_' → logprob: -14.250202178955078

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07981047034263611
    2. ',a' → logprob: -2.579810380935669
    3. '(a' → logprob: -7.079810619354248
    4. ',(' → logprob: -10.07981014251709
    5. 'a' → logprob: -10.95481014251709
    6. ' ,' → logprob: -11.70481014251709
    7. '_,' → logprob: -12.70481014251709
    8. '   ' → logprob: -13.07981014251709
    9. '(cls' → logprob: -13.57981014251709
    10. ',x' → logprob: -13.82981014251709

Token 229: ' x' (ID: 1215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00048358101048506796
    2. 'x' → logprob: -8.250483512878418
    3. ' a' → logprob: -9.000483512878418
    4. 'cls' → logprob: -9.750483512878418
    5. '*a' → logprob: -11.000483512878418
    6. '*' → logprob: -11.750483512878418
    7. 'self' → logprob: -11.750483512878418
    8. '   ' → logprob: -12.500483512878418
    9. ' x' → logprob: -14.375483512878418
    10. '	a' → logprob: -14.500483512878418

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008140355930663645
    2. ',y' → logprob: -7.125813961029053
    3. ' ,' → logprob: -11.625814437866211
    4. ',b' → logprob: -15.500814437866211
    5. '   ' → logprob: -15.625814437866211
    6. 'y' → logprob: -16.37581443786621
    7. '_,' → logprob: -16.87581443786621
    8. '):' → logprob: -17.25081443786621
    9. ',
' → logprob: -17.37581443786621
    10. ',a' → logprob: -17.50081443786621

Token 231: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.006718690041452646
    2. ' y' → logprob: -5.006718635559082
    3. '   ' → logprob: -14.006718635559082
    4. '	y' → logprob: -14.006718635559082
    5. ' ' → logprob: -14.256718635559082
    6. '    ' → logprob: -15.256718635559082
    7. '  ' → logprob: -15.256718635559082
    8. ',y' → logprob: -15.631718635559082
    9. '*y' → logprob: -15.756718635559082
    10. ' ' → logprob: -16.3817195892334

Token 232: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00763892475515604
    2. '):
' → logprob: -4.882638931274414
    3. ')' → logprob: -10.757638931274414
    4. '):
' → logprob: -11.632638931274414
    5. ' ):' → logprob: -13.632638931274414
    6. ':' → logprob: -14.382638931274414
    7. ',' → logprob: -15.257638931274414
    8. '   ' → logprob: -15.257638931274414
    9. '):

' → logprob: -15.257638931274414
    10. ')：' → logprob: -16.632638931274414

Token 233: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006516746943816543
    2. ' return' → logprob: -7.750651836395264
    3. '	return' → logprob: -8.625651359558105
    4. 'return' → logprob: -10.250651359558105
    5. '       ' → logprob: -12.875651359558105
    6. '    
' → logprob: -13.375651359558105
    7. '   ' → logprob: -13.875651359558105
    8. ':return' → logprob: -14.375651359558105
    9. '    ' → logprob: -15.875651359558105
    10. ',' → logprob: -16.875652313232422

Token 234: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3820657730102539
    2. '(x' → logprob: -1.257065773010254
    3. ' x' → logprob: -3.507065773010254
    4. ' (' → logprob: -6.007065773010254
    5. 'abs' → logprob: -8.382065773010254
    6. '(abs' → logprob: -9.007065773010254
    7. '(' → logprob: -9.257065773010254
    8. '(int' → logprob: -10.007065773010254
    9. 'int' → logprob: -10.007065773010254
    10. ' ' → logprob: -11.007065773010254

Token 235: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.8961017202818766e-05
    2. ' x' → logprob: -10.000059127807617
    3. '(x' → logprob: -11.250059127807617
    4. 'abs' → logprob: -16.125059127807617
    5. ')x' → logprob: -16.250059127807617
    6. ' ' → logprob: -16.875059127807617
    7. '	x' → logprob: -17.125059127807617
    8. '   ' → logprob: -17.375059127807617
    9. ' (' → logprob: -17.500059127807617
    10. '
' → logprob: -17.625059127807617

Token 236: '*y' (ID: 83575)
  Prédit: '*y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*y' → logprob: -0.01564224436879158
    2. ' *' → logprob: -4.515642166137695
    3. '*' → logprob: -5.390642166137695
    4. '*x' → logprob: -11.140642166137695
    5. '//' → logprob: -12.265642166137695
    6. '*b' → logprob: -12.765642166137695
    7. 'y' → logprob: -14.140642166137695
    8. '*l' → logprob: -14.140642166137695
    9. ' //' → logprob: -14.265642166137695
    10. ' ' → logprob: -15.765642166137695

Token 237: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.13533610105514526
    2. '//' → logprob: -2.76033616065979
    3. ')' → logprob: -3.13533616065979
    4. ' //' → logprob: -4.010335922241211
    5. ' )' → logprob: -6.385335922241211
    6. '+' → logprob: -13.510335922241211
    7. '){//' → logprob: -13.635335922241211
    8. '}//' → logprob: -13.635335922241211
    9. ' //(' → logprob: -13.635335922241211
    10. '//=' → logprob: -13.885335922241211

Token 238: '_' (ID: 62)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.23522113263607025
    2. '__.' → logprob: -2.2352211475372314
    3. '_.' → logprob: -2.3602211475372314
    4. 'cls' → logprob: -5.485220909118652
    5. '_cls' → logprob: -6.235220909118652
    6. '__' → logprob: -6.485220909118652
    7. 'g' → logprob: -8.360220909118652
    8. '__(' → logprob: -9.610220909118652
    9. '(cls' → logprob: -9.735220909118652
    10. '_(' → logprob: -10.360220909118652

Token 239: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.6931586861610413
    2. '_g' → logprob: -0.6931586861610413
    3. 'def' → logprob: -12.818159103393555
    4. '__' → logprob: -12.818159103393555
    5. '_' → logprob: -13.568159103393555
    6. ' gcd' → logprob: -13.693159103393555
    7. '
' → logprob: -14.443159103393555
    8. '

' → logprob: -14.693159103393555
    9. '.g' → logprob: -14.693159103393555
    10. '```' → logprob: -15.193159103393555

Token 240: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.688212614681106e-05
    2. '_c' → logprob: -12.000017166137695
    3. '_cd' → logprob: -12.000017166137695
    4. 'c' → logprob: -12.875017166137695
    5. 'cdf' → logprob: -14.125017166137695
    6. '_g' → logprob: -15.250017166137695
    7. 'g' → logprob: -15.625017166137695
    8. 'cdn' → logprob: -15.625017166137695
    9. 'CD' → logprob: -16.375017166137695
    10. 'd' → logprob: -16.375017166137695

Token 241: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.8624639324116288e-06
    2. '(' → logprob: -13.500001907348633
    3. 'x' → logprob: -14.750001907348633
    4. ' (' → logprob: -17.000001907348633
    5. '(abs' → logprob: -18.875001907348633
    6. '(
' → logprob: -19.000001907348633
    7. '(a' → logprob: -19.250001907348633
    8. '((' → logprob: -19.250001907348633
    9. 'def' → logprob: -20.375001907348633
    10. ',x' → logprob: -20.750001907348633

Token 242: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20515912771224976
    2. ',y' → logprob: -1.7051591873168945
    3. ' ,' → logprob: -5.8301591873168945
    4. 'y' → logprob: -7.2051591873168945
    5. ' y' → logprob: -10.580159187316895
    6. '(y' → logprob: -10.955159187316895
    7. ',
' → logprob: -11.705159187316895
    8. ',b' → logprob: -12.955159187316895
    9. '(' → logprob: -13.830159187316895
    10. ')' → logprob: -14.580159187316895

Token 243: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020134560763835907
    2. '<|end|>' → logprob: -6.252013683319092
    3. ' )' → logprob: -9.502013206481934
    4. ')return' → logprob: -12.752013206481934
    5. '<|end|>' → logprob: -13.252013206481934
    6. '}' → logprob: -13.627013206481934
    7. ')
' → logprob: -13.627013206481934
    8. '')' → logprob: -14.627013206481934
    9. '),' → logprob: -14.877013206481934
    10. '))' → logprob: -15.002013206481934

Token 244: 'A' (ID: 32)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 245: ',B' (ID: 19853)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.56029212474823
    2. '=' → logprob: -1.68529212474823
    3. '_' → logprob: -1.81029212474823
    4. ' =' → logprob: -3.0602922439575195
    5. '.' → logprob: -4.3102922439575195
    6. 'B' → logprob: -5.5602922439575195
    7. '_=' → logprob: -5.9352922439575195
    8. ',b' → logprob: -6.4352922439575195
    9. ',_' → logprob: -6.4352922439575195
    10. '_,' → logprob: -6.5602922439575195

Token 246: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.057759128510951996
    2. ' =' → logprob: -2.9327590465545654
    3. ',' → logprob: -5.9327592849731445
    4. '=input' → logprob: -9.557759284973145
    5. '=C' → logprob: -9.682759284973145
    6. ',C' → logprob: -9.807759284973145
    7. ' ' → logprob: -11.557759284973145
    8. '=int' → logprob: -11.682759284973145
    9. ' ,' → logprob: -12.932759284973145
    10. '=A' → logprob: -13.307759284973145

Token 247: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.2315359115600586
    2. 'M' → logprob: -1.4815359115600586
    3. '*_' → logprob: -2.1065359115600586
    4. 'map' → logprob: -2.4815359115600586
    5. '_map' → logprob: -2.4815359115600586
    6. '*M' → logprob: -2.6065359115600586
    7. '_' → logprob: -3.1065359115600586
    8. 'int' → logprob: -3.4815359115600586
    9. '_M' → logprob: -4.231535911560059
    10. '_*' → logprob: -4.856535911560059

Token 248: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.11383995413780212
    2. 'map' → logprob: -2.238839864730835
    3. 'input' → logprob: -8.113840103149414
    4. ' map' → logprob: -8.363840103149414
    5. ' M' → logprob: -8.738840103149414
    6. '_' → logprob: -9.363840103149414
    7. '_map' → logprob: -9.988840103149414
    8. '_.' → logprob: -10.113840103149414
    9. '__' → logprob: -10.238840103149414
    10. '___' → logprob: -10.238840103149414

Token 249: 'II' (ID: 6013)
  Prédit: 'II'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'II' → logprob: -0.0007063561934046447
    2. '_sp' → logprob: -7.375706195831299
    3. 'I' → logprob: -9.625706672668457
    4. '_' → logprob: -12.500706672668457
    5. ' II' → logprob: -12.750706672668457
    6. 'Sp' → logprob: -13.500706672668457
    7. 'Ii' → logprob: -13.500706672668457
    8. 'sp' → logprob: -13.750706672668457
    9. 'III' → logprob: -14.000706672668457
    10. '(sp' → logprob: -14.625706672668457

Token 250: '_sp' (ID: 18491)
  Prédit: '_sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sp' → logprob: -0.2533266544342041
    2. '()]' → logprob: -1.503326654434204
    3. '()' → logprob: -6.753326416015625
    4. 'sp' → logprob: -8.878326416015625
    5. '()],' → logprob: -10.378326416015625
    6. '()]
' → logprob: -11.128326416015625
    7. '()][' → logprob: -11.128326416015625
    8. ']' → logprob: -11.753326416015625
    9. 'Sp' → logprob: -13.003326416015625
    10. '())' → logprob: -13.003326416015625

Token 251: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -1.580929347255733e-05
    2. '()' → logprob: -11.250016212463379
    3. '()],' → logprob: -13.750016212463379
    4. '()]
' → logprob: -13.875016212463379
    5. ']' → logprob: -15.250016212463379
    6. '(),' → logprob: -16.000015258789062
    7. ']()' → logprob: -16.000015258789062
    8. '()][' → logprob: -16.125015258789062
    9. '(' → logprob: -16.625015258789062
    10. '())' → logprob: -17.125015258789062

Token 252: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 253: '(l' (ID: 4179)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.5234220623970032
    2. '(' → logprob: -1.2734220027923584
    3. '(l' → logprob: -2.6484220027923584
    4. '(_' → logprob: -3.3984220027923584
    5. '((' → logprob: -3.8984220027923584
    6. 'l' → logprob: -7.6484222412109375
    7. '()' → logprob: -7.6484222412109375
    8. '(a' → logprob: -7.6484222412109375
    9. '(max' → logprob: -7.7734222412109375
    10. '(f' → logprob: -8.273422241210938

Token 254: 'cm' (ID: 7871)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6731369495391846
    2. 'en' → logprob: -1.9231369495391846
    3. '(A' → logprob: -2.0481369495391846
    4. 'B' → logprob: -2.7981369495391846
    5. 'A' → logprob: -3.0481369495391846
    6. 'ist' → logprob: -3.7981369495391846
    7. '(B' → logprob: -4.0481367111206055
    8. 'str' → logprob: -4.5481367111206055
    9. 'b' → logprob: -4.9231367111206055
    10. 'cm' → logprob: -4.9231367111206055

Token 255: '(None' (ID: 65126)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2382311224937439
    2. '(A' → logprob: -1.9882311820983887
    3. '(None' → logprob: -2.6132311820983887
    4. '(int' → logprob: -7.363231182098389
    5. ')(' → logprob: -7.863231182098389
    6. '(_,' → logprob: -7.988231182098389
    7. ' (' → logprob: -9.61323070526123
    8. ')' → logprob: -9.86323070526123
    9. '(len' → logprob: -9.86323070526123
    10. ',' → logprob: -9.98823070526123

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004419317003339529
    2. ' ,' → logprob: -6.004419326782227
    3. ',A' → logprob: -6.629419326782227
    4. '(' → logprob: -7.879419326782227
    5. '(A' → logprob: -8.504419326782227
    6. ',B' → logprob: -11.004419326782227
    7. 'A' → logprob: -12.004419326782227
    8. ')' → logprob: -12.379419326782227
    9. ' (' → logprob: -12.504419326782227
    10. ' A' → logprob: -12.629419326782227

Token 257: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00594372907653451
    2. ' A' → logprob: -5.130943775177002
    3. ' ' → logprob: -12.255943298339844
    4. '   ' → logprob: -12.380943298339844
    5. '(A' → logprob: -12.880943298339844
    6. '  ' → logprob: -14.255943298339844
    7. ',A' → logprob: -14.255943298339844
    8. ',' → logprob: -14.380943298339844
    9. '	A' → logprob: -14.755943298339844
    10. ')' → logprob: -15.380943298339844

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005132370279170573
    2. ' ,' → logprob: -8.125513076782227
    3. ',B' → logprob: -8.625513076782227
    4. ',
' → logprob: -10.375513076782227
    5. ',b' → logprob: -12.125513076782227
    6. ')' → logprob: -15.750513076782227
    7. ',

' → logprob: -15.875513076782227
    8. 'B' → logprob: -16.250513076782227
    9. ' ,
' → logprob: -16.375513076782227
    10. ' ' → logprob: -16.625513076782227

Token 259: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.07890300452709198
    2. ' B' → logprob: -2.5789029598236084
    3. '   ' → logprob: -12.203903198242188
    4. ' ' → logprob: -12.578903198242188
    5. '  ' → logprob: -13.828903198242188
    6. ')' → logprob: -14.078903198242188
    7. '    ' → logprob: -14.203903198242188
    8. 'b' → logprob: -14.703903198242188
    9. '	B' → logprob: -14.703903198242188
    10. ' ' → logprob: -14.953903198242188

Token 260: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2519388198852539
    2. '))' → logprob: -1.501938819885254
    3. ')
' → logprob: -12.501938819885254
    4. ')))' → logprob: -12.876938819885254
    5. ' )' → logprob: -14.126938819885254
    6. '))
' → logprob: -14.126938819885254
    7. '])' → logprob: -14.501938819885254
    8. ')]' → logprob: -15.251938819885254
    9. ')}' → logprob: -15.626938819885254
    10. ')`' → logprob: -15.876938819885254


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 258
Tokens correctement prédits (1ère position, stricte): 88
Tokens correctement prédits (1ère position, avec adaptation): 89
Tokens correctement prédits (top 10): 194
Précision stricte (1ère position): 34.11%
Précision adaptée (1ère position): 34.50%
Précision (top 10): 75.19%
================================================================================
