================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:33:35
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import collections as C
import heapq, bisect, random, sys, string, math
from itertools import permutations as perms, accumulate, combinations as comb, product as prod
from operator import mul as opmul
from functools import reduce

sys.setrecursionlimit(99999999)
INF = float('inf')

def readints(): return list(map(int, sys.stdin.readline().split()))
I = lambda : int(sys.stdin.readline())
def gets(): return sys.stdin.buffer.readline().rstrip().decode()
ls = lambda : sys.stdin.buffer.readline().rstrip().decode().split()
def nread(fn, n): return [fn() for _ in range(n)]
MOD = 1000000007

n = I()
Gr = [[] for _ in range(n)]
for k in range(n-1):
    uu, vv = readints()
    for x, y in ((uu-1,vv-1),(vv-1,uu-1)):
        Gr[x].append(y)

parents = [-99]*n
sizes = [None for _ in range(n)]
def dfs(node):
    sizes[node] = 1
    for child in Gr[node]:
        if parents[node]==child: continue
        parents[child]=node
        sizes[node] += dfs(child)
    return sizes[node]

dfs(0)
P2 = [1]*(n+7)
for idx in range(1,len(P2)):
    P2[idx]=P2[idx-1]*2%MOD

answer=0
q = C.deque([0])
while len(q)>0:
    now=q.popleft()
    subtotal = (P2[n-1] - 1)
    for ch in Gr[now][:]:
        if ch==parents[now]: continue
        subtotal -= (P2[sizes[ch]]-1)
        q.append(ch)
    subtotal -= (P2[n-sizes[now]] - 1)
    answer += subtotal
    answer %= MOD

print(answer * pow(P2[n],MOD-2,MOD) % MOD)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' C' (ID: 363)
  Prédit: ' collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.9655599594116211
    2. ' ' → logprob: -1.340559959411621
    3. ' col' → logprob: -1.715559959411621
    4. 'collections' → logprob: -2.590559959411621
    5. ' cole' → logprob: -2.840559959411621
    6. ' co' → logprob: -4.215559959411621
    7. ' coll' → logprob: -4.965559959411621
    8. 'col' → logprob: -5.090559959411621
    9. ' _' → logprob: -5.340559959411621
    10. ' cl' → logprob: -5.715559959411621

Token 4: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00041386886732652783
    2. '.Counter' → logprob: -9.50041389465332
    3. '```' → logprob: -9.75041389465332
    4. '.C' → logprob: -10.37541389465332
    5. '\' → logprob: -10.50041389465332
    6. '.`' → logprob: -10.62541389465332
    7. ' .' → logprob: -10.87541389465332
    8. ',' → logprob: -11.25041389465332
    9. '"."' → logprob: -11.50041389465332
    10. ''.' → logprob: -11.62541389465332

Token 5: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0012036849511787295
    2. '.Counter' → logprob: -8.501203536987305
    3. '\' → logprob: -9.001203536987305
    4. 'newline' → logprob: -9.376203536987305
    5. '```' → logprob: -9.876203536987305
    6. '(' → logprob: -9.876203536987305
    7. 'C' → logprob: -9.876203536987305
    8. '.C' → logprob: -10.126203536987305
    9. '.D' → logprob: -10.251203536987305
    10. '_' → logprob: -10.501203536987305

Token 6: ' heap' (ID: 37237)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -1.0041404962539673
    2. ' os' → logprob: -1.3791404962539673
    3. ' itertools' → logprob: -1.6291404962539673
    4. ' numpy' → logprob: -2.7541403770446777
    5. ' math' → logprob: -2.8791403770446777
    6. ' re' → logprob: -3.5041403770446777
    7. ' collections' → logprob: -4.004140377044678
    8. ' typing' → logprob: -5.129140377044678
    9. ' pandas' → logprob: -6.004140377044678
    10. ' ' → logprob: -6.504140377044678

Token 7: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0019514684099704027
    2. '.' → logprob: -6.251951694488525
    3. '_' → logprob: -11.126951217651367
    4. 's' → logprob: -12.751951217651367
    5. '=' → logprob: -14.251951217651367
    6. 'n' → logprob: -14.251951217651367
    7. ')' → logprob: -14.376951217651367
    8. 'p' → logprob: -14.626951217651367
    9. 'space' → logprob: -14.626951217651367
    10. 't' → logprob: -14.751951217651367

Token 8: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2781509757041931
    2. '
' → logprob: -1.778151035308838
    3. '\n' → logprob: -4.278151035308838
    4. '.
' → logprob: -4.528151035308838
    5. '

' → logprob: -4.778151035308838
    6. '\' → logprob: -4.778151035308838
    7. '(' → logprob: -5.028151035308838
    8. '' → logprob: -5.528151035308838
    9. 'newline' → logprob: -5.653151035308838
    10. '(
' → logprob: -6.028151035308838

Token 9: ' bis' (ID: 7204)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.028299659490585327
    2. 'it' → logprob: -4.653299808502197
    3. ' sys' → logprob: -5.028299808502197
    4. 'sys' → logprob: -5.903299808502197
    5. 'operator' → logprob: -6.278299808502197
    6. ' operator' → logprob: -6.403299808502197
    7. ' math' → logprob: -7.028299808502197
    8. 'bis' → logprob: -7.028299808502197
    9. 'math' → logprob: -7.278299808502197
    10. ' threading' → logprob: -7.278299808502197

Token 10: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -0.5763780474662781
    2. 't' → logprob: -0.8263780474662781
    3. 'e' → logprob: -7.951377868652344
    4. 'ec' → logprob: -9.826377868652344
    5. '```' → logprob: -11.701377868652344
    6. '' → logprob: -11.951377868652344
    7. '>' → logprob: -12.201377868652344
    8. 'ection' → logprob: -13.326377868652344
    9. '<' → logprob: -13.576377868652344
    10. 'ected' → logprob: -13.701377868652344

Token 11: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09243707358837128
    2. '
' → logprob: -3.4674370288848877
    3. ',' → logprob: -3.9674370288848877
    4. '_' → logprob: -4.842437267303467
    5. '\' → logprob: -5.467437267303467
    6. '\n' → logprob: -5.467437267303467
    7. '' → logprob: -5.467437267303467
    8. '<|end|>' → logprob: -5.717437267303467
    9. '#' → logprob: -5.967437267303467
    10. 'newline' → logprob: -6.467437267303467

Token 12: ' random' (ID: 7526)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.8233098387718201
    2. 'math' → logprob: -1.3233098983764648
    3. ' math' → logprob: -1.8233098983764648
    4. 'it' → logprob: -3.323309898376465
    5. 'random' → logprob: -3.448309898376465
    6. 'sys' → logprob: -4.073309898376465
    7. 'operator' → logprob: -4.323309898376465
    8. 'collections' → logprob: -4.823309898376465
    9. ' sys' → logprob: -4.948309898376465
    10. ' functools' → logprob: -5.448309898376465

Token 13: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07026596367359161
    2. ',' → logprob: -3.195266008377075
    3. '<|end|>' → logprob: -4.695265769958496
    4. '\' → logprob: -4.945265769958496
    5. '\n' → logprob: -5.945265769958496
    6. '[' → logprob: -6.695265769958496
    7. '#' → logprob: -6.820265769958496
    8. '
' → logprob: -6.945265769958496
    9. 'newline' → logprob: -6.945265769958496
    10. '```' → logprob: -7.570265769958496

Token 14: ' sys' (ID: 12228)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.9133793115615845
    2. 'math' → logprob: -1.0383793115615845
    3. ' itertools' → logprob: -1.6633793115615845
    4. 'it' → logprob: -3.913379192352295
    5. 'string' → logprob: -4.788379192352295
    6. 'sys' → logprob: -5.038379192352295
    7. ' sys' → logprob: -5.038379192352295
    8. ' string' → logprob: -5.288379192352295
    9. 'time' → logprob: -5.913379192352295
    10. ' time' → logprob: -5.913379192352295

Token 15: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0003809928894043
    2. '.' → logprob: -1.2503809928894043
    3. ',' → logprob: -2.0003809928894043
    4. '#' → logprob: -3.0003809928894043
    5. '\n' → logprob: -3.0003809928894043
    6. '\' → logprob: -3.8753809928894043
    7. 'import' → logprob: -4.250380992889404
    8. '' → logprob: -4.250380992889404
    9. '

' → logprob: -4.500380992889404
    10. '```' → logprob: -4.500380992889404

Token 16: ' string' (ID: 1621)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.8224620819091797
    2. 'os' → logprob: -1.1974620819091797
    3. ' itertools' → logprob: -2.4474620819091797
    4. ' math' → logprob: -2.8224620819091797
    5. 'time' → logprob: -3.1974620819091797
    6. ' os' → logprob: -3.4474620819091797
    7. 'it' → logprob: -3.9474620819091797
    8. ' time' → logprob: -4.82246208190918
    9. 'io' → logprob: -5.07246208190918
    10. 're' → logprob: -6.32246208190918

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0010379552841187
    2. '.' → logprob: -1.3760379552841187
    3. '
' → logprob: -1.3760379552841187
    4. '\n' → logprob: -3.126038074493408
    5. '#' → logprob: -4.126038074493408
    6. '<|end|>' → logprob: -4.251038074493408
    7. 'import' → logprob: -4.376038074493408
    8. ',
' → logprob: -5.001038074493408
    9. '' → logprob: -5.001038074493408
    10. '

' → logprob: -5.251038074493408

Token 18: ' math' (ID: 13324)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.3738737106323242
    2. ' math' → logprob: -2.373873710632324
    3. 'time' → logprob: -2.498873710632324
    4. 'os' → logprob: -3.373873710632324
    5. ' itertools' → logprob: -3.373873710632324
    6. 're' → logprob: -3.623873710632324
    7. 'it' → logprob: -3.998873710632324
    8. ' time' → logprob: -4.498873710632324
    9. ' re' → logprob: -5.373873710632324
    10. 'io' → logprob: -5.623873710632324

Token 19: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7504383325576782
    2. '.' → logprob: -1.3754383325576782
    3. '
' → logprob: -2.0004382133483887
    4. '' → logprob: -3.2504382133483887
    5. ',
' → logprob: -3.2504382133483887
    6. '\' → logprob: -4.500438213348389
    7. 'import' → logprob: -4.625438213348389
    8. '

' → logprob: -4.875438213348389
    9. '\n' → logprob: -5.125438213348389
    10. '`' → logprob: -5.375438213348389

Token 20: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35161274671554565
    2. '

' → logprob: -1.8516128063201904
    3. '#' → logprob: -3.3516128063201904
    4. '' → logprob: -3.7266128063201904
    5. '.' → logprob: -4.351612567901611
    6. ',' → logprob: -4.351612567901611
    7. '`' → logprob: -4.726612567901611
    8. '\n' → logprob: -4.726612567901611
    9. '```' → logprob: -4.976612567901611
    10. '\' → logprob: -5.101612567901611

Token 21: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.2817728817462921
    2. ' collections' → logprob: -1.6567728519439697
    3. ' typing' → logprob: -3.7817728519439697
    4. ' ' → logprob: -4.406773090362549
    5. '_' → logprob: -5.281773090362549
    6. ' functools' → logprob: -5.406773090362549
    7. 'collections' → logprob: -6.281773090362549
    8. ' operator' → logprob: -6.406773090362549
    9. ' os' → logprob: -6.531773090362549
    10. ' math' → logprob: -6.656773090362549

Token 22: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.12294121086597443
    2. 'import' → logprob: -2.247941255569458
    3. '.' → logprob: -4.747941017150879
    4. ' .' → logprob: -7.122941017150879
    5. '.import' → logprob: -8.122941017150879
    6. '	import' → logprob: -8.622941017150879
    7. ' ' → logprob: -10.747941017150879
    8. ' itertools' → logprob: -10.872941017150879
    9. '_import' → logprob: -10.997941017150879
    10. '.im' → logprob: -11.122941017150879

Token 23: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -1.155185341835022
    2. ' chain' → logprob: -1.655185341835022
    3. ' ' → logprob: -1.905185341835022
    4. ' count' → logprob: -2.2801852226257324
    5. ' accumulate' → logprob: -2.6551852226257324
    6. ' combinations' → logprob: -2.7801852226257324
    7. ' group' → logprob: -3.4051852226257324
    8. ' cycle' → logprob: -3.7801852226257324
    9. ' product' → logprob: -3.7801852226257324
    10. 'com' → logprob: -4.530185222625732

Token 24: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.211960792541504
    2. '.' → logprob: -1.211960792541504
    3. ',' → logprob: -1.586960792541504
    4. '\n' → logprob: -2.961960792541504
    5. '\' → logprob: -3.211960792541504
    6. '#' → logprob: -3.586960792541504
    7. '(
' → logprob: -3.711960792541504
    8. 'def' → logprob: -4.711960792541504
    9. 'import' → logprob: -4.711960792541504
    10. '
' → logprob: -5.086960792541504

Token 25: ' perms' (ID: 189933)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6839739084243774
    2. ' p' → logprob: -1.3089739084243774
    3. 'P' → logprob: -1.8089739084243774
    4. ' P' → logprob: -3.433973789215088
    5. 'perm' → logprob: -4.558973789215088
    6. 'per' → logprob: -4.933973789215088
    7. ' perm' → logprob: -5.058973789215088
    8. ' perms' → logprob: -5.933973789215088
    9. ' ' → logprob: -7.433973789215088
    10. '`' → logprob: -7.808973789215088

Token 26: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29490458965301514
    2. '(' → logprob: -2.2949047088623047
    3. ',' → logprob: -2.4199047088623047
    4. '\' → logprob: -4.044904708862305
    5. '#' → logprob: -4.669904708862305
    6. '(
' → logprob: -4.669904708862305
    7. '\n' → logprob: -5.169904708862305
    8. '[' → logprob: -5.419904708862305
    9. '
' → logprob: -5.419904708862305
    10. '' → logprob: -6.294904708862305

Token 27: ' accumulate' (ID: 74226)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.2281191498041153
    2. 'product' → logprob: -1.978119134902954
    3. ' combinations' → logprob: -3.353119134902954
    4. ' product' → logprob: -3.603119134902954
    5. 'acc' → logprob: -7.103119373321533
    6. ' accumulate' → logprob: -7.478119373321533
    7. '	com' → logprob: -7.603119373321533
    8. 'chain' → logprob: -8.478118896484375
    9. 'cycle' → logprob: -8.603118896484375
    10. 'is' → logprob: -8.603118896484375

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1162024587392807
    2. '(' → logprob: -2.3662023544311523
    3. '(
' → logprob: -5.116202354431152
    4. '<|end|>' → logprob: -5.491202354431152
    5. ' (' → logprob: -6.991202354431152
    6. 'as' → logprob: -7.491202354431152
    7. ')' → logprob: -7.741202354431152
    8. ',
' → logprob: -7.741202354431152
    9. '\n' → logprob: -7.741202354431152
    10. 'import' → logprob: -7.866202354431152

Token 29: ' combinations' (ID: 43835)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.7869203686714172
    2. 'com' → logprob: -0.9119203686714172
    3. ' product' → logprob: -2.5369203090667725
    4. 'group' → logprob: -3.4119203090667725
    5. ' group' → logprob: -4.411920547485352
    6. ' combinations' → logprob: -5.411920547485352
    7. 'chain' → logprob: -5.911920547485352
    8. 'cycle' → logprob: -6.036920547485352
    9. 'compress' → logprob: -6.661920547485352
    10. ' chain' → logprob: -6.786920547485352

Token 30: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3382706344127655
    2. ' as' → logprob: -1.713270664215088
    3. '<|end|>' → logprob: -2.463270664215088
    4. 'as' → logprob: -4.088270664215088
    5. ' ,' → logprob: -6.463270664215088
    6. 'from' → logprob: -6.463270664215088
    7. '<|end|>' → logprob: -7.588270664215088
    8. 'import' → logprob: -8.08827018737793
    9. 's' → logprob: -8.46327018737793
    10. ')' → logprob: -8.96327018737793

Token 31: ' comb' (ID: 4134)
  Prédit: ' comb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.11111441999673843
    2. 'com' → logprob: -2.361114501953125
    3. 'comb' → logprob: -4.986114501953125
    4. ' combos' → logprob: -5.736114501953125
    5. ' comps' → logprob: -7.861114501953125
    6. 'Comb' → logprob: -9.236114501953125
    7. ' com' → logprob: -9.611114501953125
    8. ' cmb' → logprob: -10.111114501953125
    9. ' ' → logprob: -10.236114501953125
    10. 'cmb' → logprob: -10.611114501953125

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04791659489274025
    2. '<|end|>' → logprob: -3.7979166507720947
    3. 's' → logprob: -4.172916412353516
    4. '(' → logprob: -6.047916412353516
    5. '.' → logprob: -6.547916412353516
    6. 'a' → logprob: -7.172916412353516
    7. ',
' → logprob: -7.547916412353516
    8. '
' → logprob: -7.672916412353516
    9. '\' → logprob: -7.797916412353516
    10. '[' → logprob: -7.797916412353516

Token 33: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.5899969935417175
    2. ' product' → logprob: -1.4649970531463623
    3. 'com' → logprob: -1.9649970531463623
    4. 'group' → logprob: -3.3399970531463623
    5. ' group' → logprob: -4.089996814727783
    6. 'cycle' → logprob: -5.214996814727783
    7. 'compress' → logprob: -5.589996814727783
    8. 'filter' → logprob: -6.214996814727783
    9. ' compress' → logprob: -6.339996814727783
    10. 'count' → logprob: -6.464996814727783

Token 34: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3173423707485199
    2. '<|end|>' → logprob: -1.5673424005508423
    3. '(' → logprob: -3.0673422813415527
    4. '.' → logprob: -5.942342281341553
    5. ')' → logprob: -5.942342281341553
    6. ' as' → logprob: -6.317342281341553
    7. '<|end|>' → logprob: -6.442342281341553
    8. '\' → logprob: -6.817342281341553
    9. '(
' → logprob: -6.817342281341553
    10. ' (' → logprob: -6.817342281341553

Token 35: ' prod' (ID: 10207)
  Prédit: 'prod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prod' → logprob: -0.18883322179317474
    2. ' prod' → logprob: -2.188833236694336
    3. 'pro' → logprob: -3.313833236694336
    4. ' pro' → logprob: -3.938833236694336
    5. 'prd' → logprob: -5.938833236694336
    6. ' itertools' → logprob: -8.063833236694336
    7. '_prod' → logprob: -8.938833236694336
    8. 'cart' → logprob: -8.938833236694336
    9. ' ' → logprob: -8.938833236694336
    10. ' cart' → logprob: -8.938833236694336

Token 36: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.42877882719039917
    2. '.' → logprob: -1.428778886795044
    3. '\' → logprob: -3.928778886795044
    4. ',
' → logprob: -4.178778648376465
    5. '
' → logprob: -4.303778648376465
    6. '\n' → logprob: -4.678778648376465
    7. '#' → logprob: -5.053778648376465
    8. ' ' → logprob: -5.053778648376465
    9. 'def' → logprob: -5.178778648376465
    10. '' → logprob: -5.553778648376465

Token 37: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9692927598953247
    2. ',' → logprob: -1.3442927598953247
    3. '

' → logprob: -1.4692927598953247
    4. '#' → logprob: -3.344292640686035
    5. ',
' → logprob: -4.344292640686035
    6. '' → logprob: -4.344292640686035
    7. '.' → logprob: -4.719292640686035
    8. '<|end|>' → logprob: -4.719292640686035
    9. ',

' → logprob: -4.719292640686035
    10. '\n' → logprob: -4.844292640686035

Token 38: ' operator' (ID: 11019)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.9625592827796936
    2. ' operator' → logprob: -1.2125592231750488
    3. ' fractions' → logprob: -2.087559223175049
    4. ' collections' → logprob: -2.462559223175049
    5. ' math' → logprob: -3.087559223175049
    6. ' itertools' → logprob: -3.712559223175049
    7. ' typing' → logprob: -4.462559223175049
    8. ' ' → logprob: -4.962559223175049
    9. 'collections' → logprob: -5.087559223175049
    10. 'operator' → logprob: -5.212559223175049

Token 39: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03882751613855362
    2. 'import' → logprob: -3.288827419281006
    3. '<|end|>' → logprob: -7.663827419281006
    4. ' as' → logprob: -9.038827896118164
    5. '	import' → logprob: -9.288827896118164
    6. ' ' → logprob: -9.413827896118164
    7. '<|end|>' → logprob: -11.163827896118164
    8. '_import' → logprob: -13.288827896118164
    9. 'as' → logprob: -13.788827896118164
    10. ',' → logprob: -13.913827896118164

Token 40: ' mul' (ID: 9975)
  Prédit: ' item'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.017473433166742325
    2. ' attr' → logprob: -4.517473220825195
    3. ' ' → logprob: -5.642473220825195
    4. 'item' → logprob: -6.767473220825195
    5. ' add' → logprob: -7.642473220825195
    6. ' mul' → logprob: -7.767473220825195
    7. ' method' → logprob: -7.767473220825195
    8. '  ' → logprob: -9.642473220825195
    9. '	item' → logprob: -9.767473220825195
    10. '.item' → logprob: -10.267473220825195

Token 41: ' as' (ID: 472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.37909528613090515
    2. '<|end|>' → logprob: -2.0040953159332275
    3. '
' → logprob: -2.1290953159332275
    4. '\n' → logprob: -3.3790953159332275
    5. ',
' → logprob: -5.129095077514648
    6. '<|end|>' → logprob: -5.629095077514648
    7. '' → logprob: -5.754095077514648
    8. ' ' → logprob: -5.879095077514648
    9. '

' → logprob: -6.004095077514648
    10. '\' → logprob: -6.254095077514648

Token 42: ' op' (ID: 991)
  Prédit: ' mul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mul' → logprob: -0.3781140148639679
    2. ' op' → logprob: -2.1281139850616455
    3. ' ' → logprob: -2.5031139850616455
    4. ' operator' → logprob: -3.1281139850616455
    5. ' om' → logprob: -3.8781139850616455
    6. 'mul' → logprob: -4.128114223480225
    7. 'operator' → logprob: -4.378114223480225
    8. ' m' → logprob: -5.378114223480225
    9. '```' → logprob: -5.753114223480225
    10. '*' → logprob: -6.128114223480225

Token 43: 'mul' (ID: 44857)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6765718460083008
    2. ',' → logprob: -1.4265718460083008
    3. '_' → logprob: -2.301571846008301
    4. '\' → logprob: -3.051571846008301
    5. '
' → logprob: -3.551571846008301
    6. '\n' → logprob: -4.301571846008301
    7. ',
' → logprob: -4.676571846008301
    8. '' → logprob: -4.676571846008301
    9. '<|end|>' → logprob: -4.801571846008301
    10. ' ' → logprob: -5.176571846008301

Token 44: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2912589907646179
    2. '

' → logprob: -2.7912590503692627
    3. ',' → logprob: -2.9162590503692627
    4. '\n' → logprob: -3.9162590503692627
    5. '' → logprob: -3.9162590503692627
    6. '#' → logprob: -4.041258811950684
    7. '.' → logprob: -4.166258811950684
    8. '\' → logprob: -4.666258811950684
    9. 'def' → logprob: -4.666258811950684
    10. 'n' → logprob: -5.041258811950684

Token 45: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9151630401611328
    2. '#' → logprob: -1.7901630401611328
    3. ',' → logprob: -1.9151630401611328
    4. '

' → logprob: -2.915163040161133
    5. '_' → logprob: -3.290163040161133
    6. '' → logprob: -3.415163040161133
    7. '.' → logprob: -3.665163040161133
    8. 'def' → logprob: -3.665163040161133
    9. '(' → logprob: -4.165163040161133
    10. '\n' → logprob: -4.415163040161133

Token 46: ' functools' (ID: 142636)
  Prédit: ' functools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -0.008030781522393227
    2. 'fun' → logprob: -6.133030891418457
    3. ' math' → logprob: -6.383030891418457
    4. ' os' → logprob: -6.633030891418457
    5. ' itertools' → logprob: -7.008030891418457
    6. 'os' → logprob: -8.008030891418457
    7. ' ' → logprob: -8.133030891418457
    8. 'math' → logprob: -8.383030891418457
    9. '_' → logprob: -8.508030891418457
    10. ' collections' → logprob: -8.758030891418457

Token 47: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04615116864442825
    2. 'import' → logprob: -3.1711511611938477
    3. ' ' → logprob: -6.296151161193848
    4. '<|end|>' → logprob: -6.921151161193848
    5. '_import' → logprob: -8.671151161193848
    6. '_' → logprob: -10.296151161193848
    7. '	import' → logprob: -10.546151161193848
    8. '<|end|>' → logprob: -10.796151161193848
    9. '.' → logprob: -11.296151161193848
    10. ' _' → logprob: -11.921151161193848

Token 48: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.3190003037452698
    2. ' l' → logprob: -1.569000244140625
    3. 'reduce' → logprob: -3.194000244140625
    4. ' partial' → logprob: -4.069000244140625
    5. 'l' → logprob: -5.694000244140625
    6. ' wraps' → logprob: -6.694000244140625
    7. 'partial' → logprob: -7.194000244140625
    8. ' cmp' → logprob: -7.569000244140625
    9. ' cache' → logprob: -8.069000244140625
    10. ' ' → logprob: -8.319000244140625

Token 49: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7568541765213013
    2. '
' → logprob: -1.7568541765213013
    3. '

' → logprob: -2.3818540573120117
    4. '<|end|>' → logprob: -2.3818540573120117
    5. '(' → logprob: -2.7568540573120117
    6. 'def' → logprob: -3.2568540573120117
    7. 'import' → logprob: -4.131854057312012
    8. '\n' → logprob: -4.381854057312012
    9. '(
' → logprob: -4.381854057312012
    10. '<|end|>' → logprob: -5.381854057312012

Token 50: 'sys' (ID: 17324)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8376216888427734
    2. '#' → logprob: -1.8376216888427734
    3. 'def' → logprob: -1.9626216888427734
    4. '
' → logprob: -2.4626216888427734
    5. 'n' → logprob: -3.0876216888427734
    6. '' → logprob: -3.4626216888427734
    7. 'a' → logprob: -3.8376216888427734
    8. '_' → logprob: -3.9626216888427734
    9. '\' → logprob: -4.587621688842773
    10. 'import' → logprob: -4.837621688842773

Token 51: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -4.203409844194539e-05
    2. ' .' → logprob: -11.750041961669922
    3. '.exit' → logprob: -11.875041961669922
    4. '.readline' → logprob: -12.625041961669922
    5. '.stdout' → logprob: -12.875041961669922
    6. '.user' → logprob: -12.875041961669922
    7. '."""' → logprob: -13.375041961669922
    8. '.`' → logprob: -13.500041961669922
    9. '.​' → logprob: -13.625041961669922
    10. '<|end|>' → logprob: -13.625041961669922

Token 52: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.8439634442329407
    2. '_rec' → logprob: -1.468963384628296
    3. '_limit' → logprob: -1.593963384628296
    4. '_trace' → logprob: -3.468963384628296
    5. '_version' → logprob: -3.843963384628296
    6. '_' → logprob: -3.968963384628296
    7. '_exc' → logprob: -4.468963623046875
    8. '_execution' → logprob: -4.968963623046875
    9. '_stack' → logprob: -5.343963623046875
    10. '_timeout' → logprob: -5.468963623046875

Token 53: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.002479104558005929
    2. 'ursive' → logprob: -6.627479076385498
    3. 'urs' → logprob: -7.002479076385498
    4. 'ur' → logprob: -8.877479553222656
    5. 'limit' → logprob: -9.877479553222656
    6. 'ursor' → logprob: -11.627479553222656
    7. 'urf' → logprob: -12.127479553222656
    8. 'ode' → logprob: -12.127479553222656
    9. 'urst' → logprob: -12.127479553222656
    10. 'urse' → logprob: -12.127479553222656

Token 54: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.001173321157693863
    2. '_limit' → logprob: -6.751173496246338
    3. ' limit' → logprob: -13.87617301940918
    4. 'depth' → logprob: -13.87617301940918
    5. 'lim' → logprob: -14.25117301940918
    6. '_depth' → logprob: -14.50117301940918
    7. 'Limit' → logprob: -16.62617301940918
    8. '-limit' → logprob: -16.87617301940918
    9. '.limit' → logprob: -17.12617301940918
    10. '_' → logprob: -18.62617301940918

Token 55: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1756367712223437e-05
    2. '(
' → logprob: -11.625011444091797
    3. ' (' → logprob: -13.250011444091797
    4. '(

' → logprob: -14.625011444091797
    5. '((' → logprob: -15.250011444091797
    6. '("("' → logprob: -16.500011444091797
    7. '()' → logprob: -17.000011444091797
    8. '```' → logprob: -17.250011444091797
    9. '(
' → logprob: -17.625011444091797
    10. ' ' → logprob: -18.375011444091797

Token 56: '999' (ID: 9130)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.06220978870987892
    2. '100' → logprob: -2.8122098445892334
    3. '999' → logprob: -9.312210083007812
    4. ' ' → logprob: -10.187210083007812
    5. '300' → logprob: -10.312210083007812
    6. '200' → logprob: -10.687210083007812
    7. '400' → logprob: -10.812210083007812
    8. '500' → logprob: -10.937210083007812
    9. '250' → logprob: -12.062210083007812
    10. '1' → logprob: -12.187210083007812

Token 57: '999' (ID: 9130)
  Prédit: '999'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '999' → logprob: -0.08675015717744827
    2. '99' → logprob: -2.8367502689361572
    3. '9' → logprob: -3.7117502689361572
    4. ')' → logprob: -11.211750030517578
    5. '996' → logprob: -11.336750030517578
    6. '990' → logprob: -12.461750030517578
    7. '499' → logprob: -12.961750030517578
    8. '49' → logprob: -13.211750030517578
    9. '995' → logprob: -13.211750030517578
    10. '))' → logprob: -13.711750030517578

Token 58: '99' (ID: 2058)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.531315314830863e-06
    2. '))' → logprob: -13.500003814697266
    3. '9' → logprob: -14.250003814697266
    4. ' )' → logprob: -14.375003814697266
    5. '0' → logprob: -14.750003814697266
    6. '6' → logprob: -15.875003814697266
    7. '+' → logprob: -16.250003814697266
    8. '4' → logprob: -16.500003814697266
    9. ')

' → logprob: -16.875003814697266
    10. '1' → logprob: -17.250003814697266

Token 59: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -14.000001907348633
    3. '))' → logprob: -14.375001907348633
    4. ')
' → logprob: -15.500001907348633
    5. '(' → logprob: -17.625001907348633
    6. ')

' → logprob: -17.625001907348633
    7. ')))' → logprob: -18.375001907348633
    8. '),' → logprob: -18.500001907348633
    9. ')`' → logprob: -18.500001907348633
    10. ' ' → logprob: -18.875001907348633

Token 60: 'INF' (ID: 64358)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3517491817474365
    2. '

' → logprob: -2.2267491817474365
    3. 'def' → logprob: -2.4767491817474365
    4. '#' → logprob: -2.8517491817474365
    5. '' → logprob: -4.476749420166016
    6. '\' → logprob: -4.976749420166016
    7. 'n' → logprob: -4.976749420166016
    8. '\n' → logprob: -5.351749420166016
    9. 'class' → logprob: -5.476749420166016
    10. '
' → logprob: -5.476749420166016

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5881710648536682
    2. '=' → logprob: -0.8381710648536682
    3. '_' → logprob: -4.463171005249023
    4. ')' → logprob: -8.713171005249023
    5. '<|end|>' → logprob: -8.838171005249023
    6. '_=' → logprob: -9.838171005249023
    7. ',' → logprob: -9.963171005249023
    8. '.' → logprob: -10.213171005249023
    9. '＝' → logprob: -10.338171005249023
    10. '  ' → logprob: -10.838171005249023

Token 62: ' float' (ID: 4428)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8180926442146301
    2. '10' → logprob: -1.4430925846099854
    3. ' float' → logprob: -1.5680925846099854
    4. 'float' → logprob: -2.1930925846099854
    5. 'int' → logprob: -7.4430928230285645
    6. '999' → logprob: -7.4430928230285645
    7. ' int' → logprob: -7.6930928230285645
    8. '1' → logprob: -7.8180928230285645
    9. '100' → logprob: -8.443092346191406
    10. '9' → logprob: -9.068092346191406

Token 63: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.00012594614236149937
    2. '(' → logprob: -9.375125885009766
    3. '("' → logprob: -11.000125885009766
    4. ''' → logprob: -11.000125885009766
    5. ''in' → logprob: -12.500125885009766
    6. '('+' → logprob: -12.875125885009766
    7. '('-' → logprob: -14.750125885009766
    8. '32' → logprob: -15.375125885009766
    9. '"' → logprob: -16.125125885009766
    10. '(\'' → logprob: -16.250125885009766

Token 64: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.1778756082057953
    2. ''in' → logprob: -1.9278756380081177
    3. ''' → logprob: -4.177875518798828
    4. ''i' → logprob: -6.677875518798828
    5. '"' → logprob: -8.052875518798828
    6. 'in' → logprob: -9.052875518798828
    7. ''ins' → logprob: -9.177875518798828
    8. 'i' → logprob: -9.552875518798828
    9. 'info' → logprob: -9.927875518798828
    10. '')' → logprob: -10.677875518798828

Token 65: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03804631531238556
    2. '')' → logprob: -3.288046360015869
    3. ')'' → logprob: -13.413045883178711
    4. ' )' → logprob: -13.413045883178711
    5. '")' → logprob: -14.413045883178711
    6. ''' → logprob: -15.538045883178711
    7. ')
' → logprob: -15.538045883178711
    8. '))' → logprob: -15.663045883178711
    9. '()' → logprob: -16.03804588317871
    10. '')
' → logprob: -16.28804588317871

Token 66: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2238953560590744
    2. 'd' → logprob: -2.473895311355591
    3. 'n' → logprob: -3.223895311355591
    4. '\' → logprob: -3.598895311355591
    5. 'class' → logprob: -3.848895311355591
    6. '#' → logprob: -4.59889554977417
    7. 'a' → logprob: -5.22389554977417
    8. '
' → logprob: -5.22389554977417
    9. '\n' → logprob: -5.97389554977417
    10. '' → logprob: -6.84889554977417

Token 67: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4129560589790344
    2. ' dfs' → logprob: -1.9129559993743896
    3. '_' → logprob: -2.0379559993743896
    4. ' a' → logprob: -4.412956237792969
    5. ' space' → logprob: -4.537956237792969
    6. ' solve' → logprob: -4.787956237792969
    7. ' main' → logprob: -4.787956237792969
    8. ' _' → logprob: -5.537956237792969
    9. ' max' → logprob: -5.787956237792969
    10. ' s' → logprob: -6.537956237792969

Token 68: 'ints' (ID: 20448)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.2749299705028534
    2. '():' → logprob: -2.024930000305176
    3. '_' → logprob: -3.149930000305176
    4. '()' → logprob: -3.149930000305176
    5. '(' → logprob: -4.149930000305176
    6. '_input' → logprob: -5.774930000305176
    7. 'line' → logprob: -6.399930000305176
    8. '```' → logprob: -7.774930000305176
    9. '():
' → logprob: -8.899930000305176
    10. '_lines' → logprob: -9.024930000305176

Token 69: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.008731930516660213
    2. '()' → logprob: -4.758731842041016
    3. ' ():' → logprob: -9.883731842041016
    4. '(' → logprob: -10.258731842041016
    5. '():
' → logprob: -11.133731842041016
    6. ' ()' → logprob: -11.508731842041016
    7. '()*' → logprob: -13.633731842041016
    8. '()`' → logprob: -13.758731842041016
    9. '`()' → logprob: -13.883731842041016
    10. '（）' → logprob: -14.508731842041016

Token 70: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6585850715637207
    2. ' return' → logprob: -0.7835850715637207
    3. '   ' → logprob: -4.408585071563721
    4. '()' → logprob: -4.783585071563721
    5. '	return' → logprob: -6.408585071563721
    6. '[]' → logprob: -6.408585071563721
    7. ' ' → logprob: -7.658585071563721
    8. ' ()' → logprob: -8.783584594726562
    9. '
' → logprob: -8.908584594726562
    10. '(' → logprob: -8.908584594726562

Token 71: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.49990206956863403
    2. 'list' → logprob: -0.999902069568634
    3. 'map' → logprob: -4.249902248382568
    4. ' map' → logprob: -4.499902248382568
    5. '[' → logprob: -9.49990177154541
    6. '[list' → logprob: -10.99990177154541
    7. ' [' → logprob: -11.62490177154541
    8. '[]' → logprob: -12.24990177154541
    9. ' ' → logprob: -12.24990177154541
    10. '	list' → logprob: -12.87490177154541

Token 72: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.02992948330938816
    2. '(' → logprob: -3.5299293994903564
    3. '(int' → logprob: -9.279929161071777
    4. '(input' → logprob: -9.654929161071777
    5. '(sys' → logprob: -11.654929161071777
    6. '(iter' → logprob: -12.529929161071777
    7. '(eval' → logprob: -12.654929161071777
    8. '(list' → logprob: -13.154929161071777
    9. '(
' → logprob: -14.154929161071777
    10. '(read' → logprob: -14.529929161071777

Token 73: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00019781860464718193
    2. '(' → logprob: -9.625197410583496
    3. '<int' → logprob: -9.875197410583496
    4. 'int' → logprob: -10.375197410583496
    5. '[int' → logprob: -10.375197410583496
    6. '<|end|>' → logprob: -11.500197410583496
    7. ']int' → logprob: -12.875197410583496
    8. ',int' → logprob: -13.375197410583496
    9. '=int' → logprob: -13.750197410583496
    10. '```' → logprob: -14.250197410583496

Token 74: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.20351575314998627
    2. ',' → logprob: -1.7035157680511475
    3. '(sys' → logprob: -7.078515529632568
    4. '(input' → logprob: -7.078515529632568
    5. 'input' → logprob: -8.078516006469727
    6. 'sys' → logprob: -9.953516006469727
    7. '(' → logprob: -10.453516006469727
    8. ' ,' → logprob: -11.328516006469727
    9. ',(' → logprob: -12.578516006469727
    10. ' input' → logprob: -13.203516006469727

Token 75: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.25972697138786316
    2. 'input' → logprob: -1.5097270011901855
    3. ' sys' → logprob: -5.0097270011901855
    4. ' input' → logprob: -7.0097270011901855
    5. 'stdin' → logprob: -9.134726524353027
    6. '=sys' → logprob: -10.134726524353027
    7. '	sys' → logprob: -10.884726524353027
    8. '(sys' → logprob: -11.384726524353027
    9. ')' → logprob: -12.009726524353027
    10. 'read' → logprob: -13.384726524353027

Token 76: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.618001053633634e-05
    2. '.readline' → logprob: -11.250025749206543
    3. '.' → logprob: -11.750025749206543
    4. '.argv' → logprob: -13.000025749206543
    5. '.stdout' → logprob: -13.000025749206543
    6. 'stdin' → logprob: -14.875025749206543
    7. '.std' → logprob: -15.750025749206543
    8. '.input' → logprob: -16.12502670288086
    9. '(stdin' → logprob: -16.87502670288086
    10. '.stderr' → logprob: -17.37502670288086

Token 77: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -1.4378848391061183e-05
    2. '.read' → logprob: -11.500014305114746
    3. '.' → logprob: -12.750014305114746
    4. '.readlines' → logprob: -14.500014305114746
    5. '.stdin' → logprob: -14.750014305114746
    6. '.buffer' → logprob: -14.875014305114746
    7. ' .' → logprob: -17.000015258789062
    8. ' readline' → logprob: -18.750015258789062
    9. ').' → logprob: -19.375015258789062
    10. '.re' → logprob: -20.500015258789062

Token 78: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00011510594777064398
    2. '()))' → logprob: -9.250115394592285
    3. '()' → logprob: -11.000115394592285
    4. '))' → logprob: -13.625115394592285
    5. ' ().' → logprob: -14.750115394592285
    6. '())' → logprob: -15.250115394592285
    7. '.readline' → logprob: -16.12511444091797
    8. '()));' → logprob: -17.12511444091797
    9. '(' → logprob: -17.25011444091797
    10. '())))' → logprob: -17.37511444091797

Token 79: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.036025747656822205
    2. 'split' → logprob: -4.036025524139404
    3. 'rstrip' → logprob: -4.036025524139404
    4. 'read' → logprob: -10.411026000976562
    5. ')' → logprob: -11.411026000976562
    6. ' strip' → logprob: -12.036026000976562
    7. 'rs' → logprob: -14.286026000976562
    8. 'decode' → logprob: -14.786026000976562
    9. ' split' → logprob: -15.286026000976562
    10. 's' → logprob: -15.536026000976562

Token 80: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.35483959317207336
    2. '))' → logprob: -1.354839563369751
    3. '())' → logprob: -4.10483980178833
    4. '()' → logprob: -4.35483980178833
    5. ')' → logprob: -4.85483980178833
    6. '(' → logprob: -5.72983980178833
    7. ')))' → logprob: -8.354839324951172
    8. '())))' → logprob: -9.604839324951172
    9. '()))
' → logprob: -10.854839324951172
    10. '()));' → logprob: -12.229839324951172

Token 81: 'I' (ID: 40)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38047149777412415
    2. '' → logprob: -1.5054714679718018
    3. '\n' → logprob: -3.0054714679718018
    4. 'def' → logprob: -4.505471706390381
    5. '

' → logprob: -4.630471706390381
    6. '
' → logprob: -5.005471706390381
    7. '\' → logprob: -6.130471706390381
    8. '(' → logprob: -6.380471706390381
    9. '```' → logprob: -6.505471706390381
    10. ' 
' → logprob: -6.630471706390381

Token 82: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.15695244073867798
    2. 'm' → logprob: -2.281952381134033
    3. 'np' → logprob: -4.531952381134033
    4. '()' → logprob: -5.031952381134033
    5. 'mp' → logprob: -5.156952381134033
    6. 'nt' → logprob: -5.906952381134033
    7. 'N' → logprob: -6.031952381134033
    8. 'f' → logprob: -6.281952381134033
    9. 'MP' → logprob: -6.656952381134033
    10. 'F' → logprob: -6.781952381134033

Token 83: ' lambda' (ID: 27871)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10999135673046112
    2. 'nt' → logprob: -3.2349913120269775
    3. ' n' → logprob: -3.4849913120269775
    4. ' read' → logprob: -4.484991550445557
    5. 'np' → logprob: -5.359991550445557
    6. ' lambda' → logprob: -5.484991550445557
    7. 'lambda' → logprob: -5.609991550445557
    8. ' ' → logprob: -5.984991550445557
    9. 'read' → logprob: -6.609991550445557
    10. 'int' → logprob: -6.609991550445557

Token 84: ' :' (ID: 712)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.24088671803474426
    2. 'x' → logprob: -2.115886688232422
    3. ' ' → logprob: -2.865886688232422
    4. '_' → logprob: -4.615886688232422
    5. ' lambda' → logprob: -5.240886688232422
    6. 'lambda' → logprob: -5.490886688232422
    7. ' n' → logprob: -5.865886688232422
    8. ':' → logprob: -5.990886688232422
    9. ' _' → logprob: -6.115886688232422
    10. ' sys' → logprob: -6.365886688232422

Token 85: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5814257264137268
    2. 'int' → logprob: -0.8314257264137268
    3. ' sys' → logprob: -5.831425666809082
    4. ' map' → logprob: -6.706425666809082
    5. ' read' → logprob: -7.956425666809082
    6. 'sys' → logprob: -7.956425666809082
    7. ' ' → logprob: -8.706425666809082
    8. 'map' → logprob: -9.456425666809082
    9. ' list' → logprob: -9.456425666809082
    10. ' in' → logprob: -9.706425666809082

Token 86: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47409453988075256
    2. '(sys' → logprob: -0.9740945100784302
    3. '(
' → logprob: -11.59909439086914
    4. '(input' → logprob: -12.34909439086914
    5. '((' → logprob: -13.72409439086914
    6. '(

' → logprob: -14.09909439086914
    7. 'sys' → logprob: -14.09909439086914
    8. '('' → logprob: -15.47409439086914
    9. '(system' → logprob: -15.59909439086914
    10. ' (' → logprob: -15.59909439086914

Token 87: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.003653883468359709
    2. '.' → logprob: -5.6286540031433105
    3. 'stdin' → logprob: -11.003653526306152
    4. '.readline' → logprob: -11.378653526306152
    5. '.stdout' → logprob: -11.378653526306152
    6. '.argv' → logprob: -11.628653526306152
    7. ' .' → logprob: -13.128653526306152
    8. '.std' → logprob: -13.253653526306152
    9. ' stdin' → logprob: -15.003653526306152
    10. '.st' → logprob: -15.253653526306152

Token 88: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.007870767265558243
    2. '.stdin' → logprob: -5.257870674133301
    3. '.' → logprob: -6.507870674133301
    4. '().' → logprob: -7.132870674133301
    5. '.read' → logprob: -8.8828706741333
    6. '(stdin' → logprob: -9.3828706741333
    7. 'stdin' → logprob: -10.3828706741333
    8. '())' → logprob: -10.6328706741333
    9. 'read' → logprob: -10.8828706741333
    10. ')' → logprob: -11.0078706741333

Token 89: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.021351950243115425
    2. '().' → logprob: -4.0213518142700195
    3. '()' → logprob: -5.7713518142700195
    4. '()))' → logprob: -9.64635181427002
    5. ' ())' → logprob: -11.27135181427002
    6. ')' → logprob: -13.64635181427002
    7. '.readline' → logprob: -14.27135181427002
    8. '();)' → logprob: -14.77135181427002
    9. '()[' → logprob: -15.14635181427002
    10. '()`' → logprob: -15.39635181427002

Token 90: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1357154846191406
    2. 'def' → logprob: -1.2607154846191406
    3. '
' → logprob: -1.6357154846191406
    4. '\' → logprob: -2.5107154846191406
    5. '' → logprob: -3.1357154846191406
    6. 'd' → logprob: -4.260715484619141
    7. '#' → logprob: -4.635715484619141
    8. 'r' → logprob: -4.760715484619141
    9. 'n' → logprob: -5.135715484619141
    10. ''\' → logprob: -5.260715484619141

Token 91: ' gets' (ID: 8625)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.23644262552261353
    2. 'read' → logprob: -1.9864425659179688
    3. ' readline' → logprob: -3.9864425659179688
    4. 's' → logprob: -4.861442565917969
    5. '_' → logprob: -5.111442565917969
    6. 'r' → logprob: -5.111442565917969
    7. ' reads' → logprob: -5.361442565917969
    8. '_read' → logprob: -5.361442565917969
    9. ' print' → logprob: -5.486442565917969
    10. '_reads' → logprob: -5.486442565917969

Token 92: '():' (ID: 9442)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.19196689128875732
    2. '()' → logprob: -1.9419668912887573
    3. 'tring' → logprob: -3.941967010498047
    4. 'trs' → logprob: -5.191967010498047
    5. 'trin' → logprob: -6.316967010498047
    6. 'tri' → logprob: -6.566967010498047
    7. '())' → logprob: -7.566967010498047
    8. 't' → logprob: -7.566967010498047
    9. 'line' → logprob: -7.691967010498047
    10. '():' → logprob: -7.691967010498047

Token 93: ' return' (ID: 622)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.023318035528063774
    2. 'sys' → logprob: -3.77331805229187
    3. '=sys' → logprob: -10.52331829071045
    4. '	sys' → logprob: -11.27331829071045
    5. ' input' → logprob: -11.52331829071045
    6. 'input' → logprob: -12.27331829071045
    7. ' return' → logprob: -12.39831829071045
    8. '(sys' → logprob: -12.39831829071045
    9. ' ' → logprob: -12.52331829071045
    10. ' ' → logprob: -13.02331829071045

Token 94: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.25219517946243286
    2. 'sys' → logprob: -1.502195119857788
    3. 'input' → logprob: -8.877195358276367
    4. ' input' → logprob: -9.252195358276367
    5. '(sys' → logprob: -11.377195358276367
    6. '	sys' → logprob: -11.627195358276367
    7. ' ' → logprob: -12.127195358276367
    8. '=sys' → logprob: -13.252195358276367
    9. ' ' → logprob: -13.752195358276367
    10. '_sys' → logprob: -14.502195358276367

Token 95: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00012737659562844783
    2. '.stdout' → logprob: -9.125127792358398
    3. '.' → logprob: -11.250127792358398
    4. '._' → logprob: -13.500127792358398
    5. '.argv' → logprob: -13.750127792358398
    6. '.readline' → logprob: -13.750127792358398
    7. '.std' → logprob: -13.875127792358398
    8. 'stdin' → logprob: -14.125127792358398
    9. '.stderr' → logprob: -16.0001277923584
    10. ' .' → logprob: -16.3751277923584

Token 96: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.readline' → logprob: -9.388769103679806e-05
    2. 'read' → logprob: -9.750093460083008
    3. '.' → logprob: -10.875093460083008
    4. '.read' → logprob: -11.500093460083008
    5. '_read' → logprob: -12.625093460083008
    6. '.readlines' → logprob: -13.750093460083008
    7. ' readline' → logprob: -13.875093460083008
    8. '.stdin' → logprob: -14.875093460083008
    9. 'buffer' → logprob: -15.250093460083008
    10. '().' → logprob: -15.625093460083008

Token 97: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0024936108384281397
    2. '_read' → logprob: -6.502493381500244
    3. '_raw' → logprob: -7.877493381500244
    4. ' readline' → logprob: -7.877493381500244
    5. 'read' → logprob: -8.877493858337402
    6. '.read' → logprob: -10.002493858337402
    7. '_' → logprob: -10.877493858337402
    8. '_re' → logprob: -11.752493858337402
    9. '_line' → logprob: -12.127493858337402
    10. 'raw' → logprob: -12.627493858337402

Token 98: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20166689157485962
    2. '().' → logprob: -1.7016668319702148
    3. ')' → logprob: -9.701666831970215
    4. '(' → logprob: -10.076666831970215
    5. '()<' → logprob: -10.576666831970215
    6. 'rstrip' → logprob: -10.576666831970215
    7. '.' → logprob: -11.076666831970215
    8. '();' → logprob: -11.451666831970215
    9. '```' → logprob: -11.576666831970215
    10. '().__' → logprob: -11.576666831970215

Token 99: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.02566552348434925
    2. 'strip' → logprob: -3.775665521621704
    3. 'decode' → logprob: -6.025665760040283
    4. 'raw' → logprob: -14.150665283203125
    5. '.rstrip' → logprob: -15.400665283203125
    6. 'read' → logprob: -16.400665283203125
    7. 'replace' → logprob: -16.650665283203125
    8. 'r' → logprob: -17.025665283203125
    9. '```' → logprob: -17.150665283203125
    10. '_strip' → logprob: -17.400665283203125

Token 100: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.053823236376047134
    2. '(' → logprob: -3.053823232650757
    3. 'b' → logprob: -5.803823471069336
    4. '(b' → logprob: -6.678823471069336
    5. '()\' → logprob: -7.428823471069336
    6. '()
' → logprob: -9.928823471069336
    7. '().' → logprob: -10.178823471069336
    8. '(
' → logprob: -10.553823471069336
    9. ')' → logprob: -10.553823471069336
    10. '(\' → logprob: -10.678823471069336

Token 101: 'decode' (ID: 44196)
  Prédit: 'decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -9.591415437171236e-05
    2. 'rstrip' → logprob: -9.375096321105957
    3. 'strip' → logprob: -12.500096321105957
    4. 'dec' → logprob: -12.625096321105957
    5. ' decode' → logprob: -13.625096321105957
    6. 'raw' → logprob: -13.750096321105957
    7. '.decode' → logprob: -14.250096321105957
    8. 'split' → logprob: -15.000096321105957
    9. 'decoded' → logprob: -15.250096321105957
    10. 'd' → logprob: -16.12509536743164

Token 102: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5233611464500427
    2. '()' → logprob: -0.8983611464500427
    3. '()\' → logprob: -9.523361206054688
    4. '(
' → logprob: -10.648361206054688
    5. '\(' → logprob: -10.648361206054688
    6. ' ()' → logprob: -10.648361206054688
    7. '()
' → logprob: -10.898361206054688
    8. '(\' → logprob: -11.648361206054688
    9. '```' → logprob: -11.898361206054688
    10. ' (' → logprob: -12.023361206054688

Token 103: 'ls' (ID: 3973)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3679766356945038
    2. 'def' → logprob: -2.242976665496826
    3. '\n' → logprob: -2.242976665496826
    4. '#' → logprob: -3.367976665496826
    5. '\' → logprob: -4.492976665496826
    6. '' → logprob: -4.617976665496826
    7. '(' → logprob: -5.117976665496826
    8. ':' → logprob: -5.367976665496826
    9. 'd' → logprob: -5.617976665496826
    10. '```' → logprob: -5.742976665496826

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8535864949226379
    2. '()' → logprob: -0.8535864949226379
    3. '=' → logprob: -2.353586435317993
    4. '=[]' → logprob: -4.228586673736572
    5. 's' → logprob: -4.478586673736572
    6. 'plit' → logprob: -4.603586673736572
    7. '(' → logprob: -5.603586673736572
    8. 't' → logprob: -5.978586673736572
    9. 'plits' → logprob: -6.228586673736572
    10. ',' → logprob: -6.603586673736572

Token 105: ' lambda' (ID: 27871)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.8564073443412781
    2. '(lambda' → logprob: -0.8564073443412781
    3. ' lambda' → logprob: -2.731407403945923
    4. 'list' → logprob: -2.731407403945923
    5. '[]' → logprob: -4.606407165527344
    6. 'gets' → logprob: -6.106407165527344
    7. ' list' → logprob: -6.231407165527344
    8. ' []' → logprob: -6.481407165527344
    9. 'sys' → logprob: -7.106407165527344
    10. '=lambda' → logprob: -7.356407165527344

Token 106: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1275971531867981
    2. ':list' → logprob: -2.6275970935821533
    3. ' :' → logprob: -3.1275970935821533
    4. 's' → logprob: -6.377597332000732
    5. ' s' → logprob: -7.252597332000732
    6. ' x' → logprob: -8.002596855163574
    7. ' list' → logprob: -8.252596855163574
    8. 'a' → logprob: -9.252596855163574
    9. ' a' → logprob: -9.502596855163574
    10. ' lst' → logprob: -9.752596855163574

Token 107: ' sys' (ID: 12228)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5779448747634888
    2. 'list' → logprob: -1.4529448747634888
    3. ' gets' → logprob: -2.702944755554199
    4. 'read' → logprob: -2.952944755554199
    5. 'gets' → logprob: -3.327944755554199
    6. ' read' → logprob: -3.452944755554199
    7. ' sys' → logprob: -4.827944755554199
    8. 'sys' → logprob: -4.827944755554199
    9. 'get' → logprob: -6.952944755554199
    10. ' get' → logprob: -7.702944755554199

Token 108: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00016635251813568175
    2. '.stdout' → logprob: -8.750165939331055
    3. 'stdin' → logprob: -12.625165939331055
    4. '.argv' → logprob: -13.000165939331055
    5. '.std' → logprob: -13.250165939331055
    6. '.' → logprob: -15.125165939331055
    7. '.stderr' → logprob: -15.875165939331055
    8. '.version' → logprob: -17.625165939331055
    9. '.__' → logprob: -18.000165939331055
    10. '._' → logprob: -18.500165939331055

Token 109: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.08134569227695465
    2. '.stdin' → logprob: -2.581345796585083
    3. '.buffer' → logprob: -6.206345558166504
    4. '.' → logprob: -8.081345558166504
    5. '.read' → logprob: -9.831345558166504
    6. '.stdout' → logprob: -10.456345558166504
    7. 'stdin' → logprob: -10.831345558166504
    8. '.readlines' → logprob: -11.331345558166504
    9. 'buffer' → logprob: -12.331345558166504
    10. '_buffer' → logprob: -13.081345558166504

Token 110: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.786196975852363e-05
    2. '.readlines' → logprob: -10.625038146972656
    3. '.read' → logprob: -11.250038146972656
    4. ' readline' → logprob: -15.500038146972656
    5. 'read' → logprob: -15.625038146972656
    6. '_read' → logprob: -16.250038146972656
    7. '.' → logprob: -17.750038146972656
    8. '1' → logprob: -18.625038146972656
    9. '```' → logprob: -18.875038146972656
    10. '.rstrip' → logprob: -19.375038146972656

Token 111: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002505505457520485
    2. '()' → logprob: -6.002505302429199
    3. '.readline' → logprob: -11.2525053024292
    4. ')' → logprob: -12.0025053024292
    5. '.' → logprob: -13.0025053024292
    6. '.rstrip' → logprob: -13.1275053024292
    7. 'rstrip' → logprob: -13.3775053024292
    8. '().__' → logprob: -13.5025053024292
    9. ' ().' → logprob: -14.2525053024292
    10. '()<' → logprob: -14.3775053024292

Token 112: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -0.01692834682762623
    2. 'split' → logprob: -4.516928195953369
    3. 'decode' → logprob: -5.266928195953369
    4. 'strip' → logprob: -7.266928195953369
    5. 'read' → logprob: -12.266928672790527
    6. 'rs' → logprob: -14.391928672790527
    7. 'rst' → logprob: -15.641928672790527
    8. 'rl' → logprob: -16.51692771911621
    9. '.rstrip' → logprob: -16.76692771911621
    10. 'r' → logprob: -16.89192771911621

Token 113: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07696975022554398
    2. '().' → logprob: -2.701969861984253
    3. '.decode' → logprob: -5.326969623565674
    4. ')' → logprob: -7.201969623565674
    5. '()\' → logprob: -7.326969623565674
    6. '())' → logprob: -7.951969623565674
    7. '()<' → logprob: -9.576970100402832
    8. '.' → logprob: -10.076970100402832
    9. '();' → logprob: -10.201970100402832
    10. 'decode' → logprob: -10.451970100402832

Token 114: 'decode' (ID: 44196)
  Prédit: 'decode'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decode' → logprob: -1.2471589798224159e-05
    2. 'split' → logprob: -11.750012397766113
    3. 'rstrip' → logprob: -12.875012397766113
    4. 'dec' → logprob: -13.875012397766113
    5. 'de' → logprob: -14.375012397766113
    6. 'deque' → logprob: -16.25001335144043
    7. 'strip' → logprob: -16.50001335144043
    8. ' decode' → logprob: -16.75001335144043
    9. 'read' → logprob: -16.87501335144043
    10. '.decode' → logprob: -17.12501335144043

Token 115: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009424308082088828
    2. '().' → logprob: -7.750942230224609
    3. '()
' → logprob: -8.12594223022461
    4. '(' → logprob: -9.50094223022461
    5. '()

' → logprob: -9.87594223022461
    6. '()\' → logprob: -10.00094223022461
    7. '()[' → logprob: -12.12594223022461
    8. ')' → logprob: -12.12594223022461
    9. '();' → logprob: -12.12594223022461
    10. '#' → logprob: -12.25094223022461

Token 116: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00043102685594931245
    2. 'strip' → logprob: -7.750431060791016
    3. 'rstrip' → logprob: -15.000431060791016
    4. 'spl' → logprob: -16.500431060791016
    5. ' split' → logprob: -17.625431060791016
    6. 'lower' → logprob: -20.000431060791016
    7. 's' → logprob: -20.500431060791016
    8. '(split' → logprob: -20.500431060791016
    9. '_split' → logprob: -20.750431060791016
    10. 'decode' → logprob: -21.000431060791016

Token 117: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006513170665130019
    2. '(' → logprob: -7.3756513595581055
    3. '()
' → logprob: -11.375651359558105
    4. '()]' → logprob: -12.500651359558105
    5. ' ()' → logprob: -13.000651359558105
    6. '()\' → logprob: -13.250651359558105
    7. '()

' → logprob: -13.375651359558105
    8. '()`' → logprob: -14.125651359558105
    9. '();' → logprob: -14.250651359558105
    10. '(),' → logprob: -14.625651359558105

Token 118: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5608392953872681
    2. 'd' → logprob: -1.935839295387268
    3. '\n' → logprob: -2.5608391761779785
    4. '\' → logprob: -2.6858391761779785
    5. '#' → logprob: -3.0608391761779785
    6. 'n' → logprob: -3.6858391761779785
    7. '
' → logprob: -4.0608391761779785
    8. 'a' → logprob: -4.8108391761779785
    9. '(' → logprob: -5.0608391761779785
    10. '' → logprob: -5.1858391761779785

Token 119: ' n' (ID: 297)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.11446963995695114
    2. ' input' → logprob: -3.364469528198242
    3. ' solve' → logprob: -3.739469528198242
    4. ' run' → logprob: -4.614469528198242
    5. ' read' → logprob: -4.864469528198242
    6. 'main' → logprob: -5.239469528198242
    7. ' get' → logprob: -5.614469528198242
    8. ' print' → logprob: -5.989469528198242
    9. ' write' → logprob: -6.239469528198242
    10. 'input' → logprob: -6.364469528198242

Token 120: 'read' (ID: 1293)
  Prédit: 'ext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ext' → logprob: -0.061816632747650146
    2. 'umber' → logprob: -3.561816692352295
    3. 'e' → logprob: -3.936816692352295
    4. 'um' → logprob: -5.686816692352295
    5. 'one' → logprob: -6.561816692352295
    6. 'ame' → logprob: -6.811816692352295
    7. '=' → logprob: -7.061816692352295
    8. 'ums' → logprob: -7.061816692352295
    9. 't' → logprob: -7.186816692352295
    10. 'ot' → logprob: -7.686816692352295

Token 121: '(fn' (ID: 52123)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.8912989497184753
    2. '()' → logprob: -1.0162990093231201
    3. 'line' → logprob: -1.7662990093231201
    4. 'lines' → logprob: -3.76629900932312
    5. 'ts' → logprob: -4.391298770904541
    6. 't' → logprob: -5.016298770904541
    7. 'ints' → logprob: -5.266298770904541
    8. 's' → logprob: -5.391298770904541
    9. 'int' → logprob: -6.141298770904541
    10. '(' → logprob: -7.266298770904541

Token 122: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17484056949615479
    2. ',' → logprob: -2.4248404502868652
    3. '(filename' → logprob: -3.9248404502868652
    4. '(file' → logprob: -4.049840450286865
    5. '(path' → logprob: -5.549840450286865
    6. 'ames' → logprob: -5.549840450286865
    7. '(name' → logprob: -5.674840450286865
    8. 'file' → logprob: -6.049840450286865
    9. '(' → logprob: -6.174840450286865
    10. ')' → logprob: -6.174840450286865

Token 123: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2831222414970398
    2. ' n' → logprob: -2.4081223011016846
    3. 'fn' → logprob: -3.6581223011016846
    4. 'size' → logprob: -3.9081223011016846
    5. '):' → logprob: -3.9081223011016846
    6. ')' → logprob: -4.4081220626831055
    7. 'fname' → logprob: -4.4081220626831055
    8. 'f' → logprob: -4.9081220626831055
    9. 's' → logprob: -5.1581220626831055
    10. 'x' → logprob: -5.2831220626831055

Token 124: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04013894498348236
    2. ',' → logprob: -3.2901389598846436
    3. ')' → logprob: -6.4151387214660645
    4. '=' → logprob: -9.040139198303223
    5. ':' → logprob: -9.165139198303223
    6. '):
' → logprob: -9.540139198303223
    7. ' ):' → logprob: -9.790139198303223
    8. ' ,' → logprob: -10.290139198303223
    9. 'u' → logprob: -10.915139198303223
    10. 's' → logprob: -11.290139198303223

Token 125: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0263502337038517
    2. ' ' → logprob: -4.026350021362305
    3. '   ' → logprob: -5.651350021362305
    4. 'return' → logprob: -6.151350021362305
    5. '	return' → logprob: -6.776350021362305
    6. '    ' → logprob: -8.026350021362305
    7. ' r' → logprob: -8.776350021362305
    8. ' 
' → logprob: -9.026350021362305
    9. '
' → logprob: -9.151350021362305
    10. ' [' → logprob: -9.151350021362305

Token 126: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02415645867586136
    2. ' [' → logprob: -4.39915657043457
    3. '[list' → logprob: -4.52415657043457
    4. 'list' → logprob: -8.39915657043457
    5. '[n' → logprob: -9.14915657043457
    6. '[p' → logprob: -9.39915657043457
    7. '[f' → logprob: -9.77415657043457
    8. '[get' → logprob: -10.02415657043457
    9. 'open' → logprob: -10.39915657043457
    10. ' list' → logprob: -10.77415657043457

Token 127: 'fn' (ID: 13682)
  Prédit: 'fn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fn' → logprob: -0.0005965200834907591
    2. 'int' → logprob: -8.875596046447754
    3. 'read' → logprob: -9.125596046447754
    4. '(fn' → logprob: -9.125596046447754
    5. 'eval' → logprob: -9.375596046447754
    6. 'list' → logprob: -10.500596046447754
    7. ' fn' → logprob: -10.500596046447754
    8. 'next' → logprob: -11.250596046447754
    9. 'tuple' → logprob: -11.250596046447754
    10. '	fn' → logprob: -11.625596046447754

Token 128: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.394135612528771e-05
    2. '()]' → logprob: -10.125043869018555
    3. ' ()' → logprob: -13.125043869018555
    4. '(sys' → logprob: -14.250043869018555
    5. '()+' → logprob: -15.625043869018555
    6. '(),' → logprob: -16.000043869018555
    7. '().' → logprob: -16.000043869018555
    8. '()=>' → logprob: -16.000043869018555
    9. '（）' → logprob: -16.125043869018555
    10. '()*' → logprob: -16.125043869018555

Token 129: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.49562570452690125
    2. ' for' → logprob: -0.9956257343292236
    3. 'for' → logprob: -3.8706257343292236
    4. ' ()' → logprob: -7.8706254959106445
    5. '	for' → logprob: -9.745625495910645
    6. ')' → logprob: -11.120625495910645
    7. ' ' → logprob: -11.995625495910645
    8. '()]' → logprob: -12.120625495910645
    9. ']' → logprob: -12.370625495910645
    10. ' ' → logprob: -14.370625495910645

Token 130: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009775806218385696
    2. ' _' → logprob: -4.634775638580322
    3. ' ' → logprob: -11.50977611541748
    4. ' range' → logprob: -12.50977611541748
    5. 'range' → logprob: -13.38477611541748
    6. ' in' → logprob: -13.50977611541748
    7. '_range' → logprob: -13.75977611541748
    8. ' i' → logprob: -14.38477611541748
    9. '(' → logprob: -14.50977611541748
    10. 'i' → logprob: -15.13477611541748

Token 131: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2818637192249298
    2. 'in' → logprob: -1.4068636894226074
    3. 'range' → logprob: -7.531863689422607
    4. 'i' → logprob: -9.656864166259766
    5. ' ' → logprob: -9.906864166259766
    6. ' range' → logprob: -10.656864166259766
    7. ' _' → logprob: -10.906864166259766
    8. '_' → logprob: -11.531864166259766
    9. '  ' → logprob: -12.406864166259766
    10. '	in' → logprob: -13.031864166259766

Token 132: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005932709202170372
    2. ' range' → logprob: -5.130932807922363
    3. '	range' → logprob: -13.005932807922363
    4. '_' → logprob: -14.005932807922363
    5. 'rang' → logprob: -14.755932807922363
    6. '(range' → logprob: -15.130932807922363
    7. '_range' → logprob: -16.380931854248047
    8. 'ran' → logprob: -16.505931854248047
    9. 'ra' → logprob: -17.005931854248047
    10. ' ' → logprob: -17.130931854248047

Token 133: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00012558852904476225
    2. '(' → logprob: -9.000125885009766
    3. 'n' → logprob: -13.375125885009766
    4. ' (' → logprob: -14.875125885009766
    5. ' n' → logprob: -16.500125885009766
    6. '(
' → logprob: -17.375125885009766
    7. '(int' → logprob: -19.250125885009766
    8. '(N' → logprob: -19.375125885009766
    9. '((' → logprob: -19.875125885009766
    10. '	n' → logprob: -20.000125885009766

Token 134: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.023295672610402107
    2. ']' → logprob: -3.7732956409454346
    3. ')' → logprob: -10.023295402526855
    4. '])' → logprob: -13.023295402526855
    5. ']
' → logprob: -13.398295402526855
    6. ')]
' → logprob: -14.023295402526855
    7. ' ]' → logprob: -14.523295402526855
    8. '()]' → logprob: -15.523295402526855
    9. '}]' → logprob: -15.523295402526855
    10. ')],' → logprob: -16.023296356201172

Token 135: 'MOD' (ID: 52135)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27415844798088074
    2. '\n' → logprob: -2.024158477783203
    3. 'def' → logprob: -3.024158477783203
    4. '

' → logprob: -4.274158477783203
    5. '#' → logprob: -4.524158477783203
    6. 'n' → logprob: -5.024158477783203
    7. '<|end|>' → logprob: -5.274158477783203
    8. ' 
' → logprob: -5.399158477783203
    9. '\' → logprob: -5.774158477783203
    10. ' ' → logprob: -5.774158477783203

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29237884283065796
    2. '=' → logprob: -1.4173789024353027
    3. ' ' → logprob: -4.542378902435303
    4. ',' → logprob: -8.667378425598145
    5. '<|end|>' → logprob: -8.917378425598145
    6. ' ,' → logprob: -9.792378425598145
    7. ')' → logprob: -10.292378425598145
    8. ' =)' → logprob: -10.542378425598145
    9. '_' → logprob: -11.292378425598145
    10. ' )' → logprob: -11.292378425598145

Token 137: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20771627128124237
    2. ' ' → logprob: -1.9577162265777588
    3. '100' → logprob: -3.082716226577759
    4. '998' → logprob: -7.707716464996338
    5. '1' → logprob: -9.45771598815918
    6. 'int' → logprob: -11.83271598815918
    7. '999' → logprob: -12.08271598815918
    8. ' int' → logprob: -13.45771598815918
    9. '(' → logprob: -13.95771598815918
    10. ' (' → logprob: -14.08271598815918

Token 138: '100' (ID: 1353)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5841720104217529
    2. '100' → logprob: -0.8341720104217529
    3. '998' → logprob: -4.834172248840332
    4. '1' → logprob: -8.459172248840332
    5. ' ' → logprob: -11.084172248840332
    6. 'int' → logprob: -11.834172248840332
    7. '999' → logprob: -12.334172248840332
    8. '(' → logprob: -13.084172248840332
    9. '123' → logprob: -13.834172248840332
    10. '2' → logprob: -14.084172248840332

Token 139: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.018473222851753235
    2. '9' → logprob: -4.018473148345947
    3. '09' → logprob: -8.643473625183105
    4. '_' → logprob: -9.393473625183105
    5. '009' → logprob: -11.018473625183105
    6. '+' → logprob: -11.143473625183105
    7. '07' → logprob: -11.643473625183105
    8. '```' → logprob: -12.518473625183105
    9. '007' → logprob: -12.643473625183105
    10. '003' → logprob: -13.018473625183105

Token 140: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -6.73052782076411e-05
    2. '007' → logprob: -10.750067710876465
    3. '0' → logprob: -11.250067710876465
    4. '3' → logprob: -11.375067710876465
    5. '7' → logprob: -11.875067710876465
    6. '+' → logprob: -12.625067710876465
    7. '```' → logprob: -12.625067710876465
    8. '_' → logprob: -13.250067710876465
    9. '19' → logprob: -13.250067710876465
    10. ' ' → logprob: -13.625067710876465

Token 141: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -6.704273118884885e-07
    2. '+' → logprob: -14.875000953674316
    3. '9' → logprob: -15.875000953674316
    4. '07' → logprob: -16.25
    5. ' ' → logprob: -19.125
    6. '0' → logprob: -19.75
    7. ' +' → logprob: -20.0
    8. '```' → logprob: -20.125
    9. '6' → logprob: -20.75
    10. '' → logprob: -20.875

Token 142: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.27135467529296875
    2. '<|end|>' → logprob: -1.6463546752929688
    3. '\n' → logprob: -3.6463546752929688
    4. ' 
' → logprob: -5.396354675292969
    5. '#' → logprob: -5.896354675292969
    6. '' → logprob: -6.146354675292969
    7. '<|end|>' → logprob: -6.146354675292969
    8. '

' → logprob: -6.521354675292969
    9. 'newline' → logprob: -6.521354675292969
    10. ',' → logprob: -7.396354675292969

Token 143: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018826935440301895
    2. 'd' → logprob: -4.768826961517334
    3. '#' → logprob: -5.268826961517334
    4. '
' → logprob: -6.893826961517334
    5. 'n' → logprob: -7.018826961517334
    6. '\' → logprob: -7.143826961517334
    7. '\n' → logprob: -7.268826961517334
    8. 'a' → logprob: -7.518826961517334
    9. 'de' → logprob: -8.768826484680176
    10. 'D' → logprob: -9.018826484680176

Token 144: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.357564777135849
    2. ' =' → logprob: -1.7325648069381714
    3. ' ' → logprob: -2.732564687728882
    4. '=' → logprob: -3.357564687728882
    5. ' ,' → logprob: -4.357564926147461
    6. '<|end|>' → logprob: -4.607564926147461
    7. ')' → logprob: -8.107564926147461
    8. '.' → logprob: -8.232564926147461
    9. '  ' → logprob: -9.107564926147461
    10. '<|end|>' → logprob: -9.607564926147461

Token 145: ' I' (ID: 357)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11886768788099289
    2. ' int' → logprob: -2.3688676357269287
    3. ' I' → logprob: -4.493867874145508
    4. ' read' → logprob: -5.743867874145508
    5. '10' → logprob: -6.993867874145508
    6. 'int' → logprob: -6.993867874145508
    7. 'I' → logprob: -7.493867874145508
    8. ' gets' → logprob: -7.993867874145508
    9. ' ls' → logprob: -8.118867874145508
    10. 'read' → logprob: -8.118867874145508

Token 146: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 147: 'Gr' (ID: 3193)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.29627013206481934
    2. ' ' → logprob: -2.2962701320648193
    3. ' a' → logprob: -2.9212701320648193
    4. 's' → logprob: -3.5462701320648193
    5. 'arr' → logprob: -4.046270370483398
    6. 'data' → logprob: -4.296270370483398
    7. 'd' → logprob: -4.546270370483398
    8. 'lst' → logprob: -4.796270370483398
    9. '_' → logprob: -5.171270370483398
    10. 'r' → logprob: -5.546270370483398

Token 148: ' =' (ID: 314)
  Prédit: 'aph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aph' → logprob: -0.3596624433994293
    2. ' =' → logprob: -1.484662413597107
    3. '=' → logprob: -2.7346625328063965
    4. 'a' → logprob: -5.3596625328063965
    5. 'ap' → logprob: -6.3596625328063965
    6. '=[' → logprob: -7.1096625328063965
    7. '[' → logprob: -7.6096625328063965
    8. 'af' → logprob: -7.6096625328063965
    9. '[]' → logprob: -7.9846625328063965
    10. ',' → logprob: -7.9846625328063965

Token 149: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.4429973065853119
    2. '[C' → logprob: -1.5679973363876343
    3. '[' → logprob: -2.1929972171783447
    4. ' [' → logprob: -4.317997455596924
    5. ' C' → logprob: -4.942997455596924
    6. 'C' → logprob: -5.192997455596924
    7. '{}' → logprob: -5.192997455596924
    8. 'collections' → logprob: -6.442997455596924
    9. 'default' → logprob: -6.567997455596924
    10. '{' → logprob: -7.067997455596924

Token 150: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04877721518278122
    2. 'for' → logprob: -3.0487771034240723
    3. ',' → logprob: -9.04877758026123
    4. ',n' → logprob: -10.42377758026123
    5. ' ' → logprob: -10.67377758026123
    6. ']' → logprob: -11.67377758026123
    7. '	for' → logprob: -13.04877758026123
    8. 'n' → logprob: -13.17377758026123
    9. '(n' → logprob: -13.42377758026123
    10. ' n' → logprob: -14.04877758026123

Token 151: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.016585921868681908
    2. ' _' → logprob: -4.141585826873779
    3. ' range' → logprob: -7.891585826873779
    4. 'range' → logprob: -9.141586303710938
    5. ' in' → logprob: -9.766586303710938
    6. '(range' → logprob: -12.266586303710938
    7. ' ' → logprob: -12.516586303710938
    8. '(' → logprob: -13.266586303710938
    9. '_range' → logprob: -13.641586303710938
    10. 'in' → logprob: -14.266586303710938

Token 152: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3170289397239685
    2. 'in' → logprob: -1.3170289993286133
    3. 'range' → logprob: -5.942028999328613
    4. 'n' → logprob: -7.317028999328613
    5. '(n' → logprob: -7.942028999328613
    6. ' range' → logprob: -9.192028999328613
    7. '(' → logprob: -12.192028999328613
    8. ' n' → logprob: -13.067028999328613
    9. '(range' → logprob: -13.442028999328613
    10. ' ' → logprob: -13.942028999328613

Token 153: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25216543674468994
    2. ' range' → logprob: -1.50216543674469
    3. '(range' → logprob: -8.377165794372559
    4. 'ran' → logprob: -13.252165794372559
    5. 'r' → logprob: -13.752165794372559
    6. '	range' → logprob: -13.752165794372559
    7. ' ' → logprob: -14.377165794372559
    8. 'rang' → logprob: -15.002165794372559
    9. ' ran' → logprob: -15.127165794372559
    10. 'ra' → logprob: -15.127165794372559

Token 154: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.0802738870552275e-05
    2. '(' → logprob: -11.50001049041748
    3. 'n' → logprob: -14.37501049041748
    4. ' (' → logprob: -16.750011444091797
    5. '((' → logprob: -18.750011444091797
    6. '(N' → logprob: -19.875011444091797
    7. '(
' → logprob: -20.375011444091797
    8. ']' → logprob: -20.750011444091797
    9. ' n' → logprob: -20.750011444091797
    10. '[n' → logprob: -21.125011444091797

Token 155: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.082895273109898e-05
    2. ']' → logprob: -10.875030517578125
    3. ')' → logprob: -12.000030517578125
    4. ')]
' → logprob: -12.625030517578125
    5. ' )' → logprob: -13.250030517578125
    6. ' ]' → logprob: -15.625030517578125
    7. ' ' → logprob: -16.500030517578125
    8. '+' → logprob: -16.750030517578125
    9. ')]

' → logprob: -16.750030517578125
    10. '])' → logprob: -17.000030517578125

Token 156: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.34809839725494385
    2. '<|end|>' → logprob: -1.9730983972549438
    3. 'n' → logprob: -2.7230982780456543
    4. ' for' → logprob: -3.4730982780456543
    5. '
' → logprob: -3.5980982780456543
    6. ' 
' → logprob: -4.598098278045654
    7. 'i' → logprob: -4.848098278045654
    8. 'd' → logprob: -5.848098278045654
    9. 'x' → logprob: -6.098098278045654
    10. ' ' → logprob: -6.598098278045654

Token 157: ' k' (ID: 372)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.10037898272275925
    2. '_' → logprob: -2.35037899017334
    3. ' i' → logprob: -9.22537899017334
    4. ' ' → logprob: -9.60037899017334
    5. '_i' → logprob: -13.35037899017334
    6. 'i' → logprob: -13.72537899017334
    7. ' ' → logprob: -14.10037899017334
    8. '_=' → logprob: -14.35037899017334
    9. ' __' → logprob: -14.60037899017334
    10. ' _
' → logprob: -15.47537899017334

Token 158: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07120992988348007
    2. 'in' → logprob: -2.6962099075317383
    3. '_' → logprob: -6.946209907531738
    4. ' ' → logprob: -8.821209907531738
    5. 'n' → logprob: -9.321209907531738
    6. 'i' → logprob: -11.071209907531738
    7. ' _' → logprob: -11.696209907531738
    8. 'k' → logprob: -11.696209907531738
    9. '_in' → logprob: -11.946209907531738
    10. 'range' → logprob: -11.946209907531738

Token 159: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06998300552368164
    2. ' range' → logprob: -2.6949830055236816
    3. 'ra' → logprob: -11.194982528686523
    4. 'rang' → logprob: -11.569982528686523
    5. 'ran' → logprob: -11.694982528686523
    6. 'r' → logprob: -12.069982528686523
    7. ' ' → logprob: -12.819982528686523
    8. ' ra' → logprob: -13.319982528686523
    9. '	range' → logprob: -13.319982528686523
    10. ' ran' → logprob: -13.944982528686523

Token 160: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00012737659562844783
    2. '(' → logprob: -9.000127792358398
    3. 'n' → logprob: -12.750127792358398
    4. ' n' → logprob: -14.250127792358398
    5. ' (' → logprob: -14.875127792358398
    6. '(
' → logprob: -17.7501277923584
    7. '	n' → logprob: -18.2501277923584
    8. '(k' → logprob: -19.7501277923584
    9. '((' → logprob: -20.7501277923584
    10. '()' → logprob: -20.8751277923584

Token 161: '-' (ID: 12)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0030474625527858734
    2. '):
' → logprob: -6.503047466278076
    3. ')' → logprob: -6.753047466278076
    4. ' ):' → logprob: -8.753046989440918
    5. '+' → logprob: -9.003046989440918
    6. '-' → logprob: -9.378046989440918
    7. ' -' → logprob: -13.503046989440918
    8. ']:' → logprob: -13.503046989440918
    9. ':' → logprob: -13.503046989440918
    10. '):
' → logprob: -13.628046989440918

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011720098555088043
    2. ' ' → logprob: -6.751172065734863
    3. '2' → logprob: -15.188672065734863
    4. 'k' → logprob: -15.251172065734863
    5. '   ' → logprob: -15.376172065734863
    6. ')' → logprob: -15.626172065734863
    7. ' k' → logprob: -15.876172065734863
    8. '(' → logprob: -16.188671112060547
    9. '  ' → logprob: -16.188671112060547
    10. ' )' → logprob: -16.251171112060547

Token 163: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001070442725904286
    2. ')' → logprob: -7.376070499420166
    3. ' ):' → logprob: -8.376070022583008
    4. '):
' → logprob: -8.626070022583008
    5. ':' → logprob: -10.626070022583008
    6. ']:' → logprob: -11.751070022583008
    7. ' )' → logprob: -14.751070022583008
    8. '):
' → logprob: -14.751070022583008
    9. ',' → logprob: -15.126070022583008
    10. '）：' → logprob: -15.501070022583008

Token 164: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.030148694291710854
    2. 'u' → logprob: -4.655148506164551
    3. ' a' → logprob: -4.905148506164551
    4. '   ' → logprob: -5.905148506164551
    5. ' i' → logprob: -5.905148506164551
    6. '	u' → logprob: -6.155148506164551
    7. ' v' → logprob: -6.405148506164551
    8. ' s' → logprob: -6.780148506164551
    9. ' b' → logprob: -7.155148506164551
    10. ' x' → logprob: -8.53014850616455

Token 165: ' uu' (ID: 18592)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5796886086463928
    2. 'u' → logprob: -0.8296886086463928
    3. 'v' → logprob: -6.454688549041748
    4. ' u' → logprob: -6.704688549041748
    5. ' a' → logprob: -7.579688549041748
    6. 'p' → logprob: -8.579689025878906
    7. 'x' → logprob: -9.079689025878906
    8. 's' → logprob: -10.079689025878906
    9. '   ' → logprob: -10.079689025878906
    10. 'b' → logprob: -11.329689025878906

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12866757810115814
    2. ',v' → logprob: -2.1286675930023193
    3. ',u' → logprob: -6.87866735458374
    4. ' ,' → logprob: -7.50366735458374
    5. '=' → logprob: -9.878667831420898
    6. ',p' → logprob: -11.253667831420898
    7. ',s' → logprob: -11.503667831420898
    8. 'v' → logprob: -11.503667831420898
    9. ',i' → logprob: -11.753667831420898
    10. ' =' → logprob: -11.878667831420898

Token 167: ' vv' (ID: 107521)
  Prédit: 'vv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vv' → logprob: -0.004193436820060015
    2. ' vv' → logprob: -5.504193305969238
    3. 'v' → logprob: -9.254193305969238
    4. 'vvvv' → logprob: -11.129193305969238
    5. 'kk' → logprob: -14.004193305969238
    6. ' ' → logprob: -14.129193305969238
    7. 'ww' → logprob: -14.379193305969238
    8. ' v' → logprob: -14.504193305969238
    9. '	v' → logprob: -14.754193305969238
    10. 'pp' → logprob: -15.254193305969238

Token 168: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889165729284286
    2. ' =' → logprob: -2.5788917541503906
    3. '=k' → logprob: -13.70389175415039
    4. ' ' → logprob: -15.95389175415039
    5. '＝' → logprob: -15.95389175415039
    6. '=input' → logprob: -16.20389175415039
    7. ',' → logprob: -16.82889175415039
    8. '=line' → logprob: -16.82889175415039
    9. '=sys' → logprob: -16.95389175415039
    10. '=int' → logprob: -17.07889175415039

Token 169: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.2363060861825943
    2. 'read' → logprob: -1.736306071281433
    3. ' map' → logprob: -3.9863061904907227
    4. ' ls' → logprob: -5.111306190490723
    5. 'ls' → logprob: -5.236306190490723
    6. 'map' → logprob: -5.611306190490723
    7. ' reads' → logprob: -7.861306190490723
    8. ' ' → logprob: -8.986306190490723
    9. ' list' → logprob: -9.861306190490723
    10. 'list' → logprob: -10.111306190490723

Token 170: 'ints' (ID: 20448)
  Prédit: 'ints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ints' → logprob: -1.8624639324116288e-06
    2. 'int' → logprob: -13.750001907348633
    3. 'nts' → logprob: -14.625001907348633
    4. 'inds' → logprob: -16.000001907348633
    5. ' ints' → logprob: -16.375001907348633
    6. 'ents' → logprob: -16.750001907348633
    7. 'Ints' → logprob: -17.375001907348633
    8. 'ants' → logprob: -18.000001907348633
    9. 'ts' → logprob: -18.375001907348633
    10. 's' → logprob: -18.625001907348633

Token 171: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002998312993440777
    2. '()
' → logprob: -8.125299453735352
    3. '();' → logprob: -13.500299453735352
    4. ' ()' → logprob: -14.250299453735352
    5. '()]' → logprob: -14.625299453735352
    6. '()`' → logprob: -14.750299453735352
    7. '()
' → logprob: -14.875299453735352
    8. '()

' → logprob: -15.250299453735352
    9. '()\' → logprob: -15.750299453735352
    10. '(' → logprob: -16.00029945373535

Token 172: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015810752287507057
    2. 'Gr' → logprob: -4.640810966491699
    3. ' Gr' → logprob: -5.265810966491699
    4. '
' → logprob: -7.890810966491699
    5. '    
' → logprob: -8.1408109664917
    6. '   ' → logprob: -10.0158109664917
    7. ' 
' → logprob: -10.5158109664917
    8. '[' → logprob: -10.6408109664917
    9. ' ' → logprob: -10.7658109664917
    10. '<|end|>' → logprob: -11.0158109664917

Token 173: ' for' (ID: 395)
  Prédit: 'Gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Gr' → logprob: -0.16063545644283295
    2. ' Gr' → logprob: -1.9106354713439941
    3. '   ' → logprob: -7.910635471343994
    4. '
' → logprob: -10.285634994506836
    5. ' 
' → logprob: -12.910634994506836
    6. '.Gr' → logprob: -12.910634994506836
    7. '    
' → logprob: -13.785634994506836
    8. 'u' → logprob: -14.035634994506836
    9. '_gr' → logprob: -14.285634994506836
    10. 'gr' → logprob: -14.660634994506836

Token 174: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.9362431764602661
    2. ' v' → logprob: -1.6862431764602661
    3. ' u' → logprob: -2.1862430572509766
    4. 'x' → logprob: -2.8112430572509766
    5. ' node' → logprob: -2.8112430572509766
    6. ' w' → logprob: -3.0612430572509766
    7. ' e' → logprob: -3.3112430572509766
    8. ' vv' → logprob: -4.311243057250977
    9. ' i' → logprob: -4.436243057250977
    10. 'v' → logprob: -4.686243057250977

Token 175: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.037898026406764984
    2. 'in' → logprob: -3.537898063659668
    3. ' ' → logprob: -5.537898063659668
    4. ',' → logprob: -5.662898063659668
    5. '  ' → logprob: -8.662898063659668
    6. '   ' → logprob: -8.787898063659668
    7. ' ,' → logprob: -9.162898063659668
    8. '_' → logprob: -9.662898063659668
    9. 's' → logprob: -9.787898063659668
    10. '1' → logprob: -10.412898063659668

Token 176: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0068214586935937405
    2. ' y' → logprob: -5.006821632385254
    3. 'yy' → logprob: -9.881821632385254
    4. ' ' → logprob: -10.881821632385254
    5. 'w' → logprob: -11.631821632385254
    6. 'u' → logprob: -12.506821632385254
    7. '   ' → logprob: -12.756821632385254
    8. '(y' → logprob: -12.881821632385254
    9. 'z' → logprob: -13.131821632385254
    10. 'e' → logprob: -13.256821632385254

Token 177: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42878031730651855
    2. 'in' → logprob: -1.0537803173065186
    3. ' ' → logprob: -10.428780555725098
    4. ',' → logprob: -11.178780555725098
    5. '  ' → logprob: -11.428780555725098
    6. '   ' → logprob: -12.178780555725098
    7. 's' → logprob: -12.678780555725098
    8. '	in' → logprob: -12.678780555725098
    9. '
' → logprob: -13.053780555725098
    10. ')' → logprob: -13.678780555725098

Token 178: ' ((' (ID: 3536)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.01729572005569935
    2. ' [(' → logprob: -4.267295837402344
    3. '((' → logprob: -5.892295837402344
    4. ' ((' → logprob: -8.642295837402344
    5. '[[' → logprob: -9.267295837402344
    6. ' zip' → logprob: -9.767295837402344
    7. '[((' → logprob: -11.017295837402344
    8. '[' → logprob: -12.017295837402344
    9. '([(' → logprob: -12.392295837402344
    10. ' ' → logprob: -12.642295837402344

Token 179: 'uu' (ID: 9084)
  Prédit: 'uu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uu' → logprob: -0.005038540344685316
    2. '(' → logprob: -5.505038738250732
    3. ' uu' → logprob: -7.130038738250732
    4. 'u' → logprob: -9.880038261413574
    5. '(u' → logprob: -9.880038261413574
    6. '   ' → logprob: -10.255038261413574
    7. ' (' → logprob: -11.630038261413574
    8. '  ' → logprob: -13.130038261413574
    9. 'uuu' → logprob: -13.255038261413574
    10. '
' → logprob: -13.380038261413574

Token 180: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.34055012464523315
    2. ',' → logprob: -1.465550184249878
    3. ',v' → logprob: -3.340550184249878
    4. ' -' → logprob: -3.840550184249878
    5. ' ,' → logprob: -7.340549945831299
    6. ',y' → logprob: -10.840550422668457
    7. ' ' → logprob: -11.090550422668457
    8. '[' → logprob: -11.465550422668457
    9. ',
' → logprob: -11.590550422668457
    10. 'v' → logprob: -11.590550422668457

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.97155623533763e-05
    2. ' ' → logprob: -9.375089645385742
    3. ',' → logprob: -12.375089645385742
    4. ' ,' → logprob: -15.812589645385742
    5. '   ' → logprob: -16.062589645385742
    6. '<|end|>' → logprob: -17.375089645385742
    7. '۱' → logprob: -17.500089645385742
    8. '0' → logprob: -17.500089645385742
    9. '```' → logprob: -17.812589645385742
    10. '১' → logprob: -17.875089645385742

Token 182: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032439047936350107
    2. ' ,' → logprob: -6.503243923187256
    3. ',v' → logprob: -6.753243923187256
    4. ',y' → logprob: -7.503243923187256
    5. ',
' → logprob: -10.878243446350098
    6. ',x' → logprob: -13.128243446350098
    7. ' ,
' → logprob: -15.003243446350098
    8. ' y' → logprob: -16.753244400024414
    9. ',

' → logprob: -16.753244400024414
    10. '
' → logprob: -16.878244400024414

Token 183: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -6.153795766294934e-06
    2. '-' → logprob: -12.250005722045898
    3. ' v' → logprob: -14.875005722045898
    4. '1' → logprob: -15.125005722045898
    5. '(' → logprob: -16.5000057220459
    6. 'y' → logprob: -16.7500057220459
    7. '```' → logprob: -16.7500057220459
    8. '
' → logprob: -16.8750057220459
    9. 'x' → logprob: -17.1250057220459
    10. '(v' → logprob: -17.2500057220459

Token 184: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001350234029814601
    2. ' -' → logprob: -6.626350402832031
    3. '1' → logprob: -10.876350402832031
    4. ' ' → logprob: -13.376350402832031
    5. ')-' → logprob: -13.626350402832031
    6. '0' → logprob: -14.376350402832031
    7. ')' → logprob: -14.376350402832031
    8. '()-' → logprob: -15.001350402832031
    9. '   ' → logprob: -15.501350402832031
    10. '-
' → logprob: -15.501350402832031

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4259644558478612e-05
    2. ' ' → logprob: -11.250014305114746
    3. '-' → logprob: -14.125014305114746
    4. '   ' → logprob: -16.00001335144043
    5. '```' → logprob: -16.00001335144043
    6. '2' → logprob: -16.12501335144043
    7. ')' → logprob: -16.37501335144043
    8. '
' → logprob: -17.62501335144043
    9. '  ' → logprob: -18.25001335144043
    10. '	' → logprob: -18.50001335144043

Token 186: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2899259626865387
    2. '),(' → logprob: -1.4149259328842163
    3. ' ),' → logprob: -4.789926052093506
    4. '):' → logprob: -8.539925575256348
    5. ')' → logprob: -9.539925575256348
    6. ',' → logprob: -9.664925575256348
    7. '),
' → logprob: -9.664925575256348
    8. ' ):' → logprob: -12.289925575256348
    9. '):(' → logprob: -12.414925575256348
    10. '   ' → logprob: -12.664925575256348

Token 187: 'vv' (ID: 37313)
  Prédit: 'vv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vv' → logprob: -0.0015240294160321355
    2. ' vv' → logprob: -6.501523971557617
    3. 'yv' → logprob: -11.251523971557617
    4. 'vy' → logprob: -12.626523971557617
    5. 'yy' → logprob: -13.376523971557617
    6. ' y' → logprob: -13.501523971557617
    7. 'y' → logprob: -14.251523971557617
    8. 'v' → logprob: -14.251523971557617
    9. ' ' → logprob: -14.751523971557617
    10. '
' → logprob: -15.626523971557617

Token 188: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.635164754698053e-05
    2. ' -' → logprob: -9.625066757202148
    3. ',' → logprob: -16.50006675720215
    4. '-
' → logprob: -16.62506675720215
    5. '1' → logprob: -17.75006675720215
    6. ' ' → logprob: -17.87506675720215
    7. '-u' → logprob: -18.56256675720215
    8. '()-' → logprob: -18.68756675720215
    9. '	' → logprob: -18.81256675720215
    10. '```' → logprob: -18.93756675720215

Token 189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -12.125006675720215
    3. '<|end|>' → logprob: -13.875006675720215
    4. '-' → logprob: -14.875006675720215
    5. '0' → logprob: -16.50000762939453
    6. '```' → logprob: -17.00000762939453
    7. '<|end|>' → logprob: -17.25000762939453
    8. 'x' → logprob: -18.25000762939453
    9. '>' → logprob: -18.37500762939453
    10. '...' → logprob: -18.62500762939453

Token 190: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000341541541274637
    2. ' ,' → logprob: -8.125341415405273
    3. ',
' → logprob: -10.250341415405273
    4. ',x' → logprob: -12.000341415405273
    5. ',u' → logprob: -12.500341415405273
    6. ' ,
' → logprob: -16.500341415405273
    7. ',

' → logprob: -16.750341415405273
    8. ',n' → logprob: -17.125341415405273
    9. '
' → logprob: -17.500341415405273
    10. ')' → logprob: -17.625341415405273

Token 191: 'uu' (ID: 9084)
  Prédit: 'uu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uu' → logprob: -0.011775108985602856
    2. ' uu' → logprob: -5.261775016784668
    3. 'u' → logprob: -5.761775016784668
    4. 'x' → logprob: -5.761775016784668
    5. 'xu' → logprob: -9.261775016784668
    6. ' ' → logprob: -10.261775016784668
    7. 'ux' → logprob: -10.636775016784668
    8. ' u' → logprob: -11.011775016784668
    9. ' x' → logprob: -11.136775016784668
    10. 'ue' → logprob: -11.636775016784668

Token 192: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001613459608051926
    2. ' -' → logprob: -8.750161170959473
    3. '1' → logprob: -13.750161170959473
    4. '[' → logprob: -14.375161170959473
    5. '))' → logprob: -14.625161170959473
    6. '   ' → logprob: -15.875161170959473
    7. ')-' → logprob: -16.37516212463379
    8. '```' → logprob: -16.50016212463379
    9. '0' → logprob: -16.62516212463379
    10. ')' → logprob: -16.75016212463379

Token 193: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006469102227129042
    2. '-' → logprob: -7.375647068023682
    3. ')' → logprob: -11.375646591186523
    4. ' ' → logprob: -11.875646591186523
    5. '```' → logprob: -14.875646591186523
    6. '])' → logprob: -15.250646591186523
    7. '[' → logprob: -15.375646591186523
    8. '<|end|>' → logprob: -15.625646591186523
    9. '   ' → logprob: -15.750646591186523
    10. ')])' → logprob: -15.750646591186523

Token 194: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006129555404186249
    2. '):
' → logprob: -8.12561321258545
    3. ')' → logprob: -8.37561321258545
    4. ' ):' → logprob: -10.12561321258545
    5. ')):' → logprob: -10.12561321258545
    6. ':' → logprob: -12.75061321258545
    7. '):

' → logprob: -13.50061321258545
    8. '))' → logprob: -14.75061321258545
    9. '),' → logprob: -14.75061321258545
    10. '):
' → logprob: -15.50061321258545

Token 195: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009267700836062431
    2. ' Gr' → logprob: -5.509267807006836
    3. '   ' → logprob: -5.634267807006836
    4. 'Gr' → logprob: -6.759267807006836
    5. '
' → logprob: -9.509267807006836
    6. ' ' → logprob: -9.509267807006836
    7. '    ' → logprob: -9.884267807006836
    8. '    ' → logprob: -10.259267807006836
    9. '      ' → logprob: -10.509267807006836
    10. ' ' → logprob: -10.634267807006836

Token 196: ' Gr' (ID: 2502)
  Prédit: 'Gr'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Gr' (adapté à ' Gr') → logprob: -0.44861140847206116
    2. ' Gr' → logprob: -1.6986113786697388
    3. '   ' → logprob: -1.8236113786697388
    4. '           ' → logprob: -4.323611259460449
    5. '       ' → logprob: -5.698611259460449
    6. ' ' → logprob: -8.57361125946045
    7. ' ' → logprob: -9.19861125946045
    8. '  ' → logprob: -10.32361125946045
    9. '    ' → logprob: -10.32361125946045
    10. '   ' → logprob: -10.44861125946045

Token 197: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -3.292907877039397e-06
    2. '[' → logprob: -12.75000286102295
    3. 'x' → logprob: -15.62500286102295
    4. ' [' → logprob: -16.000003814697266
    5. '[y' → logprob: -17.000003814697266
    6. '[u' → logprob: -17.500003814697266
    7. '\[' → logprob: -18.375003814697266
    8. '[int' → logprob: -18.750003814697266
    9. '```' → logprob: -18.875003814697266
    10. '[s' → logprob: -19.125003814697266

Token 198: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -7.994086627149954e-05
    2. ']' → logprob: -9.625080108642578
    3. ' ].' → logprob: -12.000080108642578
    4. '.append' → logprob: -12.250080108642578
    5. '.' → logprob: -13.500080108642578
    6. '   ' → logprob: -14.500080108642578
    7. ' ' → logprob: -14.625080108642578
    8. ').' → logprob: -15.625080108642578
    9. 'append' → logprob: -15.625080108642578
    10. ''].' → logprob: -18.125080108642578

Token 199: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -2.5776860184123507e-06
    2. ' append' → logprob: -13.00000286102295
    3. '.append' → logprob: -15.62500286102295
    4. 'appen' → logprob: -17.750001907348633
    5. 'app' → logprob: -18.875001907348633
    6. '	append' → logprob: -19.500001907348633
    7. '_append' → logprob: -19.500001907348633
    8. 'Append' → logprob: -19.750001907348633
    9. 'ap' → logprob: -20.125001907348633
    10. 'add' → logprob: -21.625001907348633

Token 200: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.2519620656967163
    2. 'y' → logprob: -1.5019620656967163
    3. '(' → logprob: -11.001961708068848
    4. ' y' → logprob: -11.126961708068848
    5. '(
' → logprob: -14.626961708068848
    6. ')y' → logprob: -14.751961708068848
    7. '	y' → logprob: -15.126961708068848
    8. ' (' → logprob: -15.751961708068848
    9. '((' → logprob: -16.126962661743164
    10. ',y' → logprob: -16.626962661743164

Token 201: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009558862075209618
    2. ' )' → logprob: -7.000956058502197
    3. ')
' → logprob: -10.375955581665039
    4. '<|end|>' → logprob: -11.875955581665039
    5. ')#' → logprob: -13.750955581665039
    6. '   ' → logprob: -13.875955581665039
    7. '#' → logprob: -14.500955581665039
    8. ')return' → logprob: -14.750955581665039
    9. ',)' → logprob: -15.125955581665039
    10. '))' → logprob: -15.125955581665039

Token 202: 'parents' (ID: 40404)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6878174543380737
    2. 'dp' → logprob: -1.5628174543380737
    3. 'depth' → logprob: -2.4378175735473633
    4. 'd' → logprob: -2.5628175735473633
    5. 'par' → logprob: -3.8128175735473633
    6. 'visited' → logprob: -4.312817573547363
    7. 'q' → logprob: -4.562817573547363
    8. 'color' → logprob: -4.687817573547363
    9. 'p' → logprob: -4.687817573547363
    10. 'used' → logprob: -4.812817573547363

Token 203: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012647966854274273
    2. '=' → logprob: -4.387648105621338
    3. ',' → logprob: -9.26264762878418
    4. '=[' → logprob: -10.38764762878418
    5. '=[]' → logprob: -12.26264762878418
    6. ' =[' → logprob: -13.26264762878418
    7. ')' → logprob: -13.76264762878418
    8. 's' → logprob: -14.26264762878418
    9. ' ' → logprob: -14.26264762878418
    10. '```' → logprob: -14.63764762878418

Token 204: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0007791309617459774
    2. '[' → logprob: -7.750779151916504
    3. '[n' → logprob: -8.000779151916504
    4. ' [-' → logprob: -12.000779151916504
    5. '{' → logprob: -14.000779151916504
    6. '[N' → logprob: -14.125779151916504
    7. '[p' → logprob: -14.125779151916504
    8. '[b' → logprob: -14.250779151916504
    9. '[a' → logprob: -14.500779151916504
    10. '[x' → logprob: -14.625779151916504

Token 205: '99' (ID: 2058)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2007883671903983e-05
    2. '2' → logprob: -10.750021934509277
    3. ' ' → logprob: -15.625021934509277
    4. '-' → logprob: -16.250022888183594
    5. '999' → logprob: -16.750022888183594
    6. '99' → logprob: -17.000022888183594
    7. '10' → logprob: -17.250022888183594
    8. '11' → logprob: -18.125022888183594
    9. '42' → logprob: -18.625022888183594
    10. '
' → logprob: -18.625022888183594

Token 206: ']*' (ID: 18579)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.5824036002159119
    2. ']' → logprob: -0.8324036002159119
    3. ' for' → logprob: -6.082403659820557
    4. ']*' → logprob: -6.457403659820557
    5. '99' → logprob: -6.582403659820557
    6. 'for' → logprob: -7.457403659820557
    7. '999' → logprob: -7.457403659820557
    8. ' ]' → logprob: -10.832403182983398
    9. ']
' → logprob: -11.457403182983398
    10. ')' → logprob: -12.582403182983398

Token 207: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.512236498361744e-07
    2. ' n' → logprob: -15.000000953674316
    3. '(n' → logprob: -15.750000953674316
    4. ')n' → logprob: -17.625
    5. '	n' → logprob: -18.375
    6. '(' → logprob: -19.625
    7. '<|end|>' → logprob: -20.125
    8. '
' → logprob: -20.625
    9. '*n' → logprob: -20.75
    10. '$n' → logprob: -20.75

Token 208: '
' (ID: 198)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.778639554977417
    2. 'depth' → logprob: -1.278639554977417
    3. 'stack' → logprob: -1.778639554977417
    4. 'def' → logprob: -3.653639554977417
    5. 'q' → logprob: -3.778639554977417
    6. 'queue' → logprob: -4.528639793395996
    7. 'dist' → logprob: -4.903639793395996
    8. 'parent' → logprob: -5.528639793395996
    9. 'from' → logprob: -5.778639793395996
    10. 'size' → logprob: -6.028639793395996

Token 209: 'sizes' (ID: 131812)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.680290699005127
    2. 'stack' → logprob: -1.430290699005127
    3. 'q' → logprob: -2.555290699005127
    4. 'def' → logprob: -2.805290699005127
    5. 'from' → logprob: -3.180290699005127
    6. 'depth' → logprob: -3.430290699005127
    7. 'Q' → logprob: -4.680290699005127
    8. 'que' → logprob: -4.930290699005127
    9. 'queue' → logprob: -5.305290699005127
    10. 'dq' → logprob: -5.555290699005127

Token 210: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519764304161072
    2. '=' → logprob: -1.501976490020752
    3. '[' → logprob: -10.626976013183594
    4. ' =[' → logprob: -11.126976013183594
    5. '=[' → logprob: -12.126976013183594
    6. ' ' → logprob: -14.001976013183594
    7. ']' → logprob: -14.376976013183594
    8. ')' → logprob: -14.876976013183594
    9. ',' → logprob: -15.126976013183594
    10. '=[]' → logprob: -16.126976013183594

Token 211: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002913678181357682
    2. ' [' → logprob: -8.87529182434082
    3. '[-' → logprob: -9.37529182434082
    4. '[n' → logprob: -9.62529182434082
    5. 'n' → logprob: -14.62529182434082
    6. '   ' → logprob: -16.87529182434082
    7. '[len' → logprob: -18.00029182434082
    8. '1' → logprob: -18.12529182434082
    9. ' [-' → logprob: -18.37529182434082
    10. '0' → logprob: -18.62529182434082

Token 212: 'None' (ID: 8505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01651099883019924
    2. '0' → logprob: -4.141510963439941
    3. ' ' → logprob: -8.141510963439941
    4. '-' → logprob: -8.641510963439941
    5. ']' → logprob: -12.766510963439941
    6. ' -' → logprob: -13.141510963439941
    7. '   ' → logprob: -14.016510963439941
    8. '  ' → logprob: -14.204010963439941
    9. 'None' → logprob: -14.766510963439941
    10. '99' → logprob: -15.266510963439941

Token 213: ' for' (ID: 395)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.007121442351490259
    2. ']' → logprob: -5.007121562957764
    3. ']*(' → logprob: -7.882121562957764
    4. ' ]' → logprob: -11.632121086120605
    5. ' for' → logprob: -11.757121086120605
    6. 'for' → logprob: -11.882121086120605
    7. ']+' → logprob: -12.382121086120605
    8. 'n' → logprob: -15.632121086120605
    9. '```' → logprob: -16.132122039794922
    10. '*n' → logprob: -16.632122039794922

Token 214: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.001052815350703895
    2. ' _' → logprob: -6.8760528564453125
    3. ' range' → logprob: -11.876052856445312
    4. 'range' → logprob: -12.251052856445312
    5. ' in' → logprob: -12.501052856445312
    6. 'in' → logprob: -13.251052856445312
    7. '_range' → logprob: -13.626052856445312
    8. '(range' → logprob: -14.626052856445312
    9. '_=' → logprob: -15.126052856445312
    10. '_in' → logprob: -15.251052856445312

Token 215: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5757380723953247
    2. 'in' → logprob: -0.9507380723953247
    3. ' range' → logprob: -3.950737953186035
    4. '_' → logprob: -4.075737953186035
    5. ' in' → logprob: -4.200737953186035
    6. ' ' → logprob: -11.325737953186035
    7. '(range' → logprob: -11.450737953186035
    8. ' _' → logprob: -11.700737953186035
    9. 's' → logprob: -12.075737953186035
    10. 'n' → logprob: -12.950737953186035

Token 216: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011114437133073807
    2. ' range' → logprob: -4.511114597320557
    3. '_' → logprob: -9.636114120483398
    4. '(range' → logprob: -14.636114120483398
    5. '	range' → logprob: -15.386114120483398
    6. '_range' → logprob: -15.761114120483398
    7. 'n' → logprob: -16.3861141204834
    8. 'r' → logprob: -16.6361141204834
    9. 'in' → logprob: -16.8861141204834
    10. '
' → logprob: -17.1361141204834

Token 217: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.000352266215486452
    2. 'n' → logprob: -8.000351905822754
    3. '(' → logprob: -11.250351905822754
    4. ' (' → logprob: -13.000351905822754
    5. ' n' → logprob: -14.000351905822754
    6. '(
' → logprob: -15.250351905822754
    7. '
' → logprob: -16.00035285949707
    8. '	n' → logprob: -16.62535285949707
    9. '   ' → logprob: -17.00035285949707
    10. ']' → logprob: -17.12535285949707

Token 218: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.04969959333539009
    2. ']' → logprob: -3.049699544906616
    3. ')' → logprob: -7.424699783325195
    4. ')]
' → logprob: -8.674699783325195
    5. ']
' → logprob: -8.799699783325195
    6. '])' → logprob: -8.799699783325195
    7. ' ]' → logprob: -10.549699783325195
    8. ' )' → logprob: -12.299699783325195
    9. '])]' → logprob: -12.799699783325195
    10. ')
' → logprob: -13.174699783325195

Token 219: 'def' (ID: 1314)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.6809916496276855
    2. 'def' → logprob: -0.8059916496276855
    3. 'q' → logprob: -4.0559916496276855
    4. 'sizes' → logprob: -5.0559916496276855
    5. 'queue' → logprob: -5.1809916496276855
    6. 'from' → logprob: -5.1809916496276855
    7. 'deque' → logprob: -6.4309916496276855
    8. 'Q' → logprob: -6.5559916496276855
    9. 'dq' → logprob: -6.5559916496276855
    10. 'size' → logprob: -6.9309916496276855

Token 220: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.051728736609220505
    2. 'dfs' → logprob: -3.0517287254333496
    3. ' bfs' → logprob: -5.80172872543335
    4. ' sizes' → logprob: -10.301729202270508
    5. ' DFS' → logprob: -11.051729202270508
    6. ' ' → logprob: -11.051729202270508
    7. 'b' → logprob: -11.676729202270508
    8. ' sz' → logprob: -11.926729202270508
    9. ' size' → logprob: -12.176729202270508
    10. 'sizes' → logprob: -12.676729202270508

Token 221: '(node' (ID: 13356)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.21271541714668274
    2. '(node' → logprob: -2.3377153873443604
    3. '(v' → logprob: -2.8377153873443604
    4. '(' → logprob: -3.5877153873443604
    5. '(x' → logprob: -5.7127156257629395
    6. ' (' → logprob: -5.7127156257629395
    7. '(s' → logprob: -7.5877156257629395
    8. '(r' → logprob: -7.8377156257629395
    9. '(root' → logprob: -7.9627156257629395
    10. '(n' → logprob: -8.587715148925781

Token 222: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005430232849903405
    2. ',u' → logprob: -8.125542640686035
    3. ',node' → logprob: -8.875542640686035
    4. ' ,' → logprob: -9.500542640686035
    5. ',n' → logprob: -11.500542640686035
    6. ',v' → logprob: -11.750542640686035
    7. ',d' → logprob: -12.625542640686035
    8. ',parent' → logprob: -12.875542640686035
    9. ',p' → logprob: -13.250542640686035
    10. '):' → logprob: -13.500542640686035

Token 223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6509186029434204
    2. ' stack' → logprob: -1.1509186029434204
    3. ' parents' → logprob: -2.025918483734131
    4. '	stack' → logprob: -3.650918483734131
    5. 'stack' → logprob: -6.775918483734131
    6. '    
' → logprob: -7.150918483734131
    7. 'parents' → logprob: -7.900918483734131
    8. '    ' → logprob: -8.150918960571289
    9. ' stacks' → logprob: -8.400918960571289
    10. ' children' → logprob: -8.400918960571289

Token 224: ' sizes' (ID: 16174)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -1.2055413722991943
    2. 'stack' → logprob: -1.3305413722991943
    3. ' parents' → logprob: -1.5805413722991943
    4. '   ' → logprob: -2.2055413722991943
    5. 'parents' → logprob: -2.2055413722991943
    6. 'sizes' (adapté à ' sizes') → logprob: -5.580541610717773
    7. ' sizes' → logprob: -6.955541610717773
    8. 'st' → logprob: -7.080541610717773
    9. '	stack' → logprob: -7.080541610717773
    10. 'stk' → logprob: -7.455541610717773

Token 225: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.000000953674316
    3. '=node' → logprob: -15.750000953674316
    4. '(node' → logprob: -15.875000953674316
    5. ' [' → logprob: -16.750001907348633
    6. '[n' → logprob: -18.000001907348633
    7. '   ' → logprob: -18.625001907348633
    8. '[:]' → logprob: -18.625001907348633
    9. ')[' → logprob: -19.375001907348633
    10. '```' → logprob: -19.625001907348633

Token 226: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01162631157785654
    2. ']=' → logprob: -4.511626243591309
    3. '=' → logprob: -7.511626243591309
    4. ' ]' → logprob: -10.886626243591309
    5. ' =' → logprob: -11.386626243591309
    6. ']+=' → logprob: -14.386626243591309
    7. ']={' → logprob: -15.386626243591309
    8. ']=(' → logprob: -15.636626243591309
    9. '[' → logprob: -15.886626243591309
    10. ']
' → logprob: -16.136627197265625

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011048642918467522
    2. ' =' → logprob: -4.511048793792725
    3. '=[' → logprob: -15.261048316955566
    4. '=len' → logprob: -15.636048316955566
    5. '=int' → logprob: -16.386049270629883
    6. ',' → logprob: -16.761049270629883
    7. '=
' → logprob: -17.011049270629883
    8. '=size' → logprob: -17.136049270629883
    9. '=

' → logprob: -17.261049270629883
    10. ' =[' → logprob: -17.386049270629883

Token 228: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000499297515489161
    2. ' ' → logprob: -7.625499248504639
    3. '0' → logprob: -12.250499725341797
    4. '   ' → logprob: -12.500499725341797
    5. 'sum' → logprob: -14.375499725341797
    6. ' ' → logprob: -14.875499725341797
    7. '
' → logprob: -14.937999725341797
    8. '  ' → logprob: -15.437999725341797
    9. '[' → logprob: -15.500499725341797
    10. 'len' → logprob: -15.750499725341797

Token 229: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010807292710524052
    2. '0' → logprob: -9.250107765197754
    3. ' ' → logprob: -11.500107765197754
    4. '[' → logprob: -14.250107765197754
    5. 'len' → logprob: -15.625107765197754
    6. '   ' → logprob: -15.875107765197754
    7. '[]' → logprob: -16.12510871887207
    8. '{' → logprob: -16.37510871887207
    9. 'sum' → logprob: -16.62510871887207
    10. 'size' → logprob: -16.87510871887207

Token 230: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.025312231853604317
    2. ' 
' → logprob: -4.150312423706055
    3. '    
' → logprob: -5.400312423706055
    4. '   ' → logprob: -5.650312423706055
    5. '	
' → logprob: -7.775312423706055
    6. ' for' → logprob: -8.025312423706055
    7. '  
' → logprob: -8.650312423706055
    8. '
' → logprob: -9.400312423706055
    9. '   
' → logprob: -9.775312423706055
    10. '<|end|>' → logprob: -10.275312423706055

Token 231: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1559240072965622
    2. '
' → logprob: -2.155924081802368
    3. '    
' → logprob: -3.905924081802368
    4. ' for' → logprob: -5.030923843383789
    5. ' 
' → logprob: -7.030923843383789
    6. 'for' → logprob: -7.655923843383789
    7. '	for' → logprob: -8.530923843383789
    8. '	
' → logprob: -9.155923843383789
    9. '<|end|>' → logprob: -9.905923843383789
    10. '  
' → logprob: -10.030923843383789

Token 232: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.088138227118179e-05
    2. 'stack' → logprob: -10.125070571899414
    3. 'parents' → logprob: -11.250070571899414
    4. '   ' → logprob: -11.625070571899414
    5. 'parent' → logprob: -12.125070571899414
    6. ' for' → logprob: -12.750070571899414
    7. '	for' → logprob: -16.250070571899414
    8. 'total' → logprob: -16.375070571899414
    9. 'par' → logprob: -17.125070571899414
    10. '    
' → logprob: -17.250070571899414

Token 233: ' child' (ID: 2320)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.4161906242370605
    2. 'child' → logprob: -1.4161906242370605
    3. 'nx' → logprob: -1.6661906242370605
    4. 'nei' → logprob: -2.2911906242370605
    5. 'ch' → logprob: -2.7911906242370605
    6. 'ne' → logprob: -3.0411906242370605
    7. 'c' → logprob: -3.4161906242370605
    8. 'nbr' → logprob: -3.5411906242370605
    9. 'to' → logprob: -4.6661906242370605
    10. ' nxt' → logprob: -4.6661906242370605

Token 234: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2015121579170227
    2. 'in' → logprob: -1.701512098312378
    3. ' ' → logprob: -9.826512336730957
    4. '	in' → logprob: -10.576512336730957
    5. ',' → logprob: -11.701512336730957
    6. 's' → logprob: -12.826512336730957
    7. '   ' → logprob: -12.951512336730957
    8. '  ' → logprob: -13.326512336730957
    9. '_in' → logprob: -14.326512336730957
    10. ')' → logprob: -14.576512336730957

Token 235: ' Gr' (ID: 2502)
  Prédit: 'Gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Gr' → logprob: -0.001170225441455841
    2. ' Gr' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.126171112060547
    4. ' ' → logprob: -17.876171112060547
    5. '	' → logprob: -18.001171112060547
    6. ' ' → logprob: -18.251171112060547
    7. '[' → logprob: -20.001171112060547
    8. '.Gr' → logprob: -20.001171112060547
    9. 'Gl' → logprob: -20.376171112060547
    10. '(' → logprob: -20.626171112060547

Token 236: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: 0.0
    2. 'node' → logprob: -17.125
    3. '(node' → logprob: -19.5
    4. '[' → logprob: -19.5
    5. ' [' → logprob: -20.875
    6. '[n' → logprob: -21.25
    7. ' node' → logprob: -21.5
    8. '[
' → logprob: -21.75
    9. '```' → logprob: -22.25
    10. '	node' → logprob: -22.375

Token 237: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.000526107382029295
    2. ']:
' → logprob: -7.625525951385498
    3. '[node' → logprob: -11.000526428222656
    4. ']' → logprob: -11.750526428222656
    5. ':' → logprob: -11.875526428222656
    6. ' ]' → logprob: -13.125526428222656
    7. ']:
' → logprob: -13.500526428222656
    8. '   ' → logprob: -14.000526428222656
    9. ']:

' → logprob: -14.250526428222656
    10. '):' → logprob: -14.500526428222656

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055627334862947464
    2. ' if' → logprob: -2.9306273460388184
    3. 'if' → logprob: -7.680627346038818
    4. '   ' → logprob: -8.80562686920166
    5. ',' → logprob: -9.30562686920166
    6. '<|end|>' → logprob: -11.80562686920166
    7. '	if' → logprob: -12.05562686920166
    8. '    ' → logprob: -12.18062686920166
    9. '	   ' → logprob: -12.18062686920166
    10. '           ' → logprob: -12.30562686920166

Token 239: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1113971620798111
    2. ' if' → logprob: -2.3613972663879395
    3. '       ' → logprob: -4.6113972663879395
    4. '   ' → logprob: -6.7363972663879395
    5. '	if' → logprob: -12.986396789550781
    6. ' ' → logprob: -14.611396789550781
    7. '    ' → logprob: -15.861396789550781
    8. '```' → logprob: -15.986396789550781
    9. '           ' → logprob: -16.36139678955078
    10. '
' → logprob: -17.23639678955078

Token 240: ' parents' (ID: 8783)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.1811312586069107
    2. ' parents' → logprob: -1.8061312437057495
    3. 'sizes' → logprob: -6.931131362915039
    4. ' sizes' → logprob: -8.306131362915039
    5. 'parent' → logprob: -9.681131362915039
    6. 'not' → logprob: -10.556131362915039
    7. 'child' → logprob: -10.556131362915039
    8. 'children' → logprob: -10.556131362915039
    9. '   ' → logprob: -12.056131362915039
    10. ' not' → logprob: -12.681131362915039

Token 241: '[node' (ID: 67268)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1279553291387856e-05
    2. '[node' → logprob: -11.875011444091797
    3. 'child' → logprob: -12.625011444091797
    4. ' [' → logprob: -14.250011444091797
    5. '[parent' → logprob: -15.125011444091797
    6. '[
' → logprob: -17.500011444091797
    7. '[cell' → logprob: -18.000011444091797
    8. '(child' → logprob: -18.250011444091797
    9. '   ' → logprob: -18.375011444091797
    10. '```' → logprob: -18.875011444091797

Token 242: ']==' (ID: 34128)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5791529417037964
    2. '==' → logprob: -1.5791529417037964
    3. ']==' → logprob: -2.079153060913086
    4. ' ==' → logprob: -3.579153060913086
    5. '!=' → logprob: -3.829153060913086
    6. '==-' → logprob: -3.954153060913086
    7. '[' → logprob: -4.204153060913086
    8. '<' → logprob: -4.704153060913086
    9. ']!=' → logprob: -4.954153060913086
    10. ' !=' → logprob: -5.704153060913086

Token 243: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -3.1782583391759545e-05
    2. ' child' → logprob: -10.500031471252441
    3. '	child' → logprob: -13.375031471252441
    4. '-' → logprob: -13.625031471252441
    5. '   ' → logprob: -13.875031471252441
    6. '(child' → logprob: -15.625031471252441
    7. '-child' → logprob: -15.625031471252441
    8. 'children' → logprob: -17.750032424926758
    9. '.child' → logprob: -18.000032424926758
    10. '    ' → logprob: -18.000032424926758

Token 244: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04518260061740875
    2. ' or' → logprob: -3.170182704925537
    3. ':
' → logprob: -6.545182704925537
    4. ' :' → logprob: -8.170182228088379
    5. '           ' → logprob: -8.295182228088379
    6. ' continue' → logprob: -9.420182228088379
    7. '       ' → logprob: -10.295182228088379
    8. ':return' → logprob: -10.420182228088379
    9. 'continue' → logprob: -11.170182228088379
    10. '	continue' → logprob: -11.170182228088379

Token 245: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5041314959526062
    2. 'continue' → logprob: -1.504131555557251
    3. ' continue' → logprob: -1.754131555557251
    4. '	continue' → logprob: -7.879131317138672
    5. '       ' → logprob: -8.629131317138672
    6. '		' → logprob: -10.129131317138672
    7. '	       ' → logprob: -10.754131317138672
    8. '   ' → logprob: -10.879131317138672
    9. '
' → logprob: -11.379131317138672
    10. '               ' → logprob: -11.379131317138672

Token 246: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03122224099934101
    2. '   ' → logprob: -4.531222343444824
    3. 'parents' → logprob: -4.656222343444824
    4. ' parents' → logprob: -4.781222343444824
    5. '
' → logprob: -6.406222343444824
    6. ',' → logprob: -9.781222343444824
    7. '	' → logprob: -9.781222343444824
    8. '.parents' → logprob: -10.031222343444824
    9. '```' → logprob: -10.531222343444824
    10. '        
' → logprob: -10.531222343444824

Token 247: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15004226565361023
    2. ' parents' → logprob: -2.7750422954559326
    3. 'parents' → logprob: -3.1500422954559326
    4. '   ' → logprob: -3.4000422954559326
    5. 'if' → logprob: -8.150042533874512
    6. ' if' → logprob: -8.400042533874512
    7. 'parent' → logprob: -9.400042533874512
    8. '.parents' → logprob: -10.525042533874512
    9. '    ' → logprob: -10.775042533874512
    10. ' ' → logprob: -11.025042533874512

Token 248: ' parents' (ID: 8783)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' (adapté à ' parents') → logprob: -0.0061752633191645145
    2. ' parents' → logprob: -5.8811750411987305
    3. 'if' → logprob: -6.2561750411987305
    4. '   ' → logprob: -6.7561750411987305
    5. '       ' → logprob: -8.63117504119873
    6. ' if' → logprob: -9.75617504119873
    7. '```' → logprob: -11.38117504119873
    8. 'parent' → logprob: -11.50617504119873
    9. '           ' → logprob: -12.25617504119873
    10. '.parents' → logprob: -12.38117504119873

Token 249: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0002764710516203195
    2. '[node' → logprob: -8.250276565551758
    3. 'child' → logprob: -11.250276565551758
    4. '[c' → logprob: -14.750276565551758
    5. ' [' → logprob: -14.875276565551758
    6. '[cell' → logprob: -15.875276565551758
    7. '[parent' → logprob: -15.875276565551758
    8. '=' → logprob: -16.000276565551758
    9. '[
' → logprob: -16.500276565551758
    10. '][' → logprob: -16.750276565551758

Token 250: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.0013497571926563978
    2. 'node' → logprob: -6.626349925994873
    3. ' child' → logprob: -10.751349449157715
    4. '(child' → logprob: -13.501349449157715
    5. ']' → logprob: -15.001349449157715
    6. '	child' → logprob: -15.751349449157715
    7. ' node' → logprob: -16.00135040283203
    8. 'children' → logprob: -16.37635040283203
    9. '```' → logprob: -17.00135040283203
    10. 'parent' → logprob: -17.12635040283203

Token 251: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5018791556358337
    2. ' =' → logprob: -1.2518792152404785
    3. '=node' → logprob: -2.5018792152404785
    4. ']' → logprob: -4.1268792152404785
    5. ']=' → logprob: -4.6268792152404785
    6. '[node' → logprob: -7.2518792152404785
    7. ' ]' → logprob: -10.00187873840332
    8. '[' → logprob: -10.87687873840332
    9. ',node' → logprob: -12.12687873840332
    10. '(node' → logprob: -12.62687873840332

Token 252: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.306760805164231e-05
    2. ' node' → logprob: -11.25001335144043
    3. '	node' → logprob: -17.50001335144043
    4. '[node' → logprob: -18.00001335144043
    5. 'nod' → logprob: -18.50001335144043
    6. '(node' → logprob: -19.25001335144043
    7. '
' → logprob: -19.75001335144043
    8. '=node' → logprob: -20.87501335144043
    9. '   ' → logprob: -21.37501335144043
    10. ',node' → logprob: -21.62501335144043

Token 253: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01810218021273613
    2. ' dfs' → logprob: -4.643102169036865
    3. 'dfs' → logprob: -4.893102169036865
    4. '   ' → logprob: -7.518102169036865
    5. ',' → logprob: -9.393102645874023
    6. '
' → logprob: -9.518102645874023
    7. '        
' → logprob: -10.268102645874023
    8. 'sizes' → logprob: -10.393102645874023
    9. '           ' → logprob: -12.018102645874023
    10. '
' → logprob: -12.393102645874023

Token 254: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3399386703968048
    2. 'dfs' → logprob: -2.0899386405944824
    3. 'sizes' → logprob: -2.3399386405944824
    4. ' dfs' → logprob: -3.0899386405944824
    5. '       ' → logprob: -4.339938640594482
    6. ' sizes' → logprob: -4.714938640594482
    7. '
' → logprob: -8.71493911743164
    8. ',' → logprob: -8.96493911743164
    9. '    
' → logprob: -9.58993911743164
    10. '```' → logprob: -9.71493911743164

Token 255: ' sizes' (ID: 16174)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.03385430574417114
    2. 'sizes' (adapté à ' sizes') → logprob: -3.4088542461395264
    3. ' dfs' → logprob: -9.283854484558105
    4. '   ' → logprob: -9.908854484558105
    5. 'sz' → logprob: -10.658854484558105
    6. ' sizes' → logprob: -11.408854484558105
    7. 'siz' → logprob: -11.783854484558105
    8. 'df' → logprob: -12.033854484558105
    9. 'size' → logprob: -12.658854484558105
    10. 's' → logprob: -13.033854484558105

Token 256: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.10021928697824478
    2. '[' → logprob: -2.350219249725342
    3. 'child' → logprob: -12.1002197265625
    4. 'node' → logprob: -12.6002197265625
    5. '```' → logprob: -13.8502197265625
    6. '[parent' → logprob: -14.2252197265625
    7. '=node' → logprob: -14.3502197265625
    8. '[cell' → logprob: -14.7252197265625
    9. ' [' → logprob: -15.8502197265625
    10. '(node' → logprob: -15.8502197265625

Token 257: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.3868938982486725
    2. ']' → logprob: -1.13689386844635
    3. ']+' → logprob: -11.011894226074219
    4. ' ]' → logprob: -12.511894226074219
    5. '+=' → logprob: -13.011894226074219
    6. ')' → logprob: -16.01189422607422
    7. '```' → logprob: -16.38689422607422
    8. ']=' → logprob: -16.76189422607422
    9. ']
' → logprob: -17.13689422607422
    10. ']>=' → logprob: -17.76189422607422

Token 258: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0008118899422697723
    2. ' +=' → logprob: -7.25081205368042
    3. ']+=' → logprob: -9.250811576843262
    4. '+=(' → logprob: -12.750811576843262
    5. '=' → logprob: -12.875811576843262
    6. '+' → logprob: -15.750811576843262
    7. '+='' → logprob: -16.125812530517578
    8. '```' → logprob: -16.750812530517578
    9. '+="' → logprob: -17.500812530517578
    10. '   ' → logprob: -18.375812530517578

Token 259: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.01659202016890049
    2. ' dfs' → logprob: -4.141592025756836
    3. 'sizes' → logprob: -7.516592025756836
    4. ' sizes' → logprob: -11.891592025756836
    5. '   ' → logprob: -12.766592025756836
    6. 'df' → logprob: -13.266592025756836
    7. ' ' → logprob: -13.641592025756836
    8. '
' → logprob: -15.141592025756836
    9. '  ' → logprob: -15.391592025756836
    10. 'd' → logprob: -16.266592025756836

Token 260: '(child' (ID: 34164)
  Prédit: '(child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(child' → logprob: -4.4849443838757e-06
    2. '(' → logprob: -12.500004768371582
    3. 'child' → logprob: -14.125004768371582
    4. '(children' → logprob: -17.500003814697266
    5. '(
' → logprob: -18.000003814697266
    6. ' (' → logprob: -19.000003814697266
    7. '	child' → logprob: -19.000003814697266
    8. ' child' → logprob: -19.125003814697266
    9. '(ch' → logprob: -20.125003814697266
    10. '(c' → logprob: -21.000003814697266

Token 261: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6979610919952393
    2. '(child' → logprob: -0.6979610919952393
    3. 'child' → logprob: -6.07296085357666
    4. '(node' → logprob: -6.07296085357666
    5. '(' → logprob: -9.19796085357666
    6. '	child' → logprob: -10.57296085357666
    7. '   ' → logprob: -10.82296085357666
    8. ' )' → logprob: -11.57296085357666
    9. ')(' → logprob: -11.82296085357666
    10. ')
' → logprob: -12.07296085357666

Token 262: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10280364751815796
    2. 'return' → logprob: -2.3528037071228027
    3. ' return' → logprob: -5.977803707122803
    4. '	return' → logprob: -10.977803230285645
    5. '
' → logprob: -11.602803230285645
    6. '```' → logprob: -11.977803230285645
    7. ':return' → logprob: -12.102803230285645
    8. ',' → logprob: -12.227803230285645
    9. '    
' → logprob: -12.477803230285645
    10. 'Return' → logprob: -13.352803230285645

Token 263: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.025089744478464127
    2. '   ' → logprob: -4.275089740753174
    3. ' return' → logprob: -4.525089740753174
    4. '	return' → logprob: -11.025090217590332
    5. ' ' → logprob: -11.900090217590332
    6. ':return' → logprob: -12.900090217590332
    7. '  ' → logprob: -13.025090217590332
    8. 'eturn' → logprob: -13.650090217590332
    9. ',' → logprob: -14.400090217590332
    10. '    ' → logprob: -14.525090217590332

Token 264: ' sizes' (ID: 16174)
  Prédit: 'sizes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sizes' → logprob: -0.12694764137268066
    2. ' sizes' → logprob: -2.1269476413726807
    3. 'size' → logprob: -11.001947402954102
    4. ' size' → logprob: -13.751947402954102
    5. ' ' → logprob: -13.876947402954102
    6. '   ' → logprob: -15.126947402954102
    7. 'node' → logprob: -15.376947402954102
    8. 's' → logprob: -15.626947402954102
    9. '_sizes' → logprob: -15.876947402954102
    10. 'siz' → logprob: -17.0019474029541

Token 265: '[node' (ID: 67268)
  Prédit: '[node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -1.0325924449716695e-05
    2. '[' → logprob: -11.75001049041748
    3. 'node' → logprob: -13.75001049041748
    4. '(node' → logprob: -14.87501049041748
    5. '[
' → logprob: -14.87501049041748
    6. '```' → logprob: -15.37501049041748
    7. ' node' → logprob: -16.375009536743164
    8. ',node' → logprob: -16.500009536743164
    9. '[token' → logprob: -16.625009536743164
    10. '	node' → logprob: -17.125009536743164

Token 266: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -8.613945101387799e-05
    2. ')
' → logprob: -9.375085830688477
    3. ' )' → logprob: -13.750085830688477
    4. ')return' → logprob: -15.875085830688477
    5. ')

' → logprob: -17.375085830688477
    6. '<|end|>' → logprob: -17.375085830688477
    7. '),' → logprob: -17.750085830688477
    8. '}' → logprob: -17.875085830688477
    9. ')`' → logprob: -18.375085830688477
    10. ')}' → logprob: -18.625085830688477

Token 267: 'dfs' (ID: 60837)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.4878286123275757
    2. 'dfs' → logprob: -0.9878286123275757
    3. 'sizes' → logprob: -4.737828731536865
    4. 'print' → logprob: -5.487828731536865
    5. 'root' → logprob: -8.862828254699707
    6. 'parent' → logprob: -8.862828254699707
    7. 'roots' → logprob: -9.112828254699707
    8. 'children' → logprob: -9.862828254699707
    9. 'res' → logprob: -10.237828254699707
    10. 'sz' → logprob: -10.237828254699707

Token 268: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013692846987396479
    2. '(n' → logprob: -6.626369476318359
    3. '(
' → logprob: -10.62636947631836
    4. '(node' → logprob: -12.00136947631836
    5. '((' → logprob: -12.25136947631836
    6. ' (' → logprob: -12.37636947631836
    7. '('' → logprob: -14.00136947631836
    8. '(nodes' → logprob: -14.37636947631836
    9. '()' → logprob: -14.62636947631836
    10. '("("' → logprob: -14.75136947631836

Token 269: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -19.0
    3. ')' → logprob: -20.0
    4. '
' → logprob: -20.75
    5. '(' → logprob: -21.375
    6. '۰' → logprob: -21.75
    7. '０' → logprob: -23.0
    8. '00' → logprob: -23.5
    9. '1' → logprob: -24.0
    10. '   ' → logprob: -24.75

Token 270: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -14.750000953674316
    3. ')
' → logprob: -16.875
    4. '))' → logprob: -17.25
    5. ')`' → logprob: -18.5
    6. '())' → logprob: -18.75
    7. '()' → logprob: -19.625
    8. '),' → logprob: -20.125
    9. ')return' → logprob: -20.875
    10. ')#' → logprob: -21.0

Token 271: 'P' (ID: 47)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1123889684677124
    2. 'sub' → logprob: -1.8623889684677124
    3. 'res' → logprob: -2.237389087677002
    4. 'ans' → logprob: -2.612389087677002
    5. 'dp' → logprob: -2.737389087677002
    6. 'def' → logprob: -3.362389087677002
    7. 'sizes' → logprob: -3.487389087677002
    8. ')' → logprob: -3.862389087677002
    9. 'sz' → logprob: -4.112389087677002
    10. 'cnt' → logprob: -4.112389087677002

Token 272: '2' (ID: 17)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.3824231028556824
    2. ' =' → logprob: -1.8824231624603271
    3. '=' → logprob: -3.007423162460327
    4. 'r' → logprob: -3.007423162460327
    5. 'AREN' → logprob: -3.507423162460327
    6. 'AR' → logprob: -4.382422924041748
    7. 'R' → logprob: -5.007422924041748
    8. 'Q' → logprob: -5.632422924041748
    9. 'REFIX' → logprob: -5.757422924041748
    10. 'ARENT' → logprob: -6.257422924041748

Token 273: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39798808097839355
    2. '=' → logprob: -1.1479880809783936
    3. 'w' → logprob: -5.647988319396973
    4. 's' → logprob: -6.022988319396973
    5. '2' → logprob: -6.272988319396973
    6. 'r' → logprob: -6.647988319396973
    7. 'ow' → logprob: -7.522988319396973
    8. '[' → logprob: -8.897988319396973
    9. 'ows' → logprob: -9.022988319396973
    10. 'R' → logprob: -9.272988319396973

Token 274: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.062474217265844345
    2. '[n' → logprob: -2.812474250793457
    3. ' [' → logprob: -8.312474250793457
    4. '[len' → logprob: -9.187474250793457
    5. '[s' → logprob: -9.562474250793457
    6. '1' → logprob: -10.687474250793457
    7. '[size' → logprob: -11.062474250793457
    8. '2' → logprob: -11.312474250793457
    9. '[p' → logprob: -11.312474250793457
    10. '[I' → logprob: -12.312474250793457

Token 275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002533528604544699
    2. '0' → logprob: -9.000253677368164
    3. '2' → logprob: -9.375253677368164
    4. 'None' → logprob: -11.250253677368164
    5. 'pow' → logprob: -11.625253677368164
    6. ']' → logprob: -11.625253677368164
    7. ' ' → logprob: -11.875253677368164
    8. '(' → logprob: -12.625253677368164
    9. 'MOD' → logprob: -13.625253677368164
    10. '   ' → logprob: -14.625253677368164

Token 276: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.013205880299210548
    2. ']*' → logprob: -5.1382060050964355
    3. ']
' → logprob: -5.1382060050964355
    4. ']*(' → logprob: -6.7632060050964355
    5. ']+' → logprob: -9.763205528259277
    6. '*' → logprob: -9.763205528259277
    7. ']<<' → logprob: -10.138205528259277
    8. ',' → logprob: -10.763205528259277
    9. '<<' → logprob: -11.013205528259277
    10. ']
' → logprob: -11.638205528259277

Token 277: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0014662963803857565
    2. '(n' → logprob: -7.251466274261475
    3. '100' → logprob: -7.751466274261475
    4. '10' → logprob: -8.501466751098633
    5. '200' → logprob: -10.876466751098633
    6. '(' → logprob: -11.126466751098633
    7. '500' → logprob: -11.251466751098633
    8. ' n' → logprob: -11.376466751098633
    9. '400' → logprob: -11.376466751098633
    10. '300' → logprob: -11.501466751098633

Token 278: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011110307648777962
    2. ')' → logprob: -4.511110305786133
    3. '*' → logprob: -10.761110305786133
    4. '+)' → logprob: -11.136110305786133
    5. ')
' → logprob: -11.136110305786133
    6. ' +' → logprob: -12.136110305786133
    7. '+n' → logprob: -12.386110305786133
    8. '+
' → logprob: -13.136110305786133
    9. ' )' → logprob: -15.386110305786133
    10. ']' → logprob: -16.261110305786133

Token 279: '7' (ID: 22)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015216453466564417
    2. '2' → logprob: -6.876521587371826
    3. '10' → logprob: -7.751521587371826
    4. ' ' → logprob: -10.751522064208984
    5. '5' → logprob: -10.876522064208984
    6. '100' → logprob: -11.876522064208984
    7. '3' → logprob: -12.626522064208984
    8. '20' → logprob: -13.001522064208984
    9. '50' → logprob: -13.251522064208984
    10. '11' → logprob: -13.751522064208984

Token 280: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16136763989925385
    2. ')
' → logprob: -1.911367654800415
    3. ')
' → logprob: -6.786367416381836
    4. ')

' → logprob: -12.411367416381836
    5. ' )' → logprob: -12.536367416381836
    6. ' )
' → logprob: -13.161367416381836
    7. ');' → logprob: -13.911367416381836
    8. '0' → logprob: -14.411367416381836
    9. '7' → logprob: -15.036367416381836
    10. '6' → logprob: -15.036367416381836

Token 281: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.306760805164231e-05
    2. ' for' → logprob: -11.25001335144043
    3. 'i' → logprob: -19.62501335144043
    4. '	for' → logprob: -19.87501335144043
    5. '   ' → logprob: -22.87501335144043
    6. 'p' → logprob: -23.25001335144043
    7. 'P' → logprob: -23.37501335144043
    8. '_' → logprob: -23.87501335144043
    9. 'fo' → logprob: -23.87501335144043
    10. '[' → logprob: -24.00001335144043

Token 282: ' idx' (ID: 14016)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07447314262390137
    2. ' i' → logprob: -2.6994731426239014
    3. 'k' → logprob: -5.5744733810424805
    4. 'x' → logprob: -7.5744733810424805
    5. ' k' → logprob: -9.07447338104248
    6. 'j' → logprob: -10.82447338104248
    7. ' x' → logprob: -10.94947338104248
    8. '_' → logprob: -11.32447338104248
    9. '_i' → logprob: -11.57447338104248
    10. 'p' → logprob: -11.82447338104248

Token 283: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1602402776479721
    2. 'in' → logprob: -1.9102402925491333
    3. '	in' → logprob: -11.785240173339844
    4. ' ' → logprob: -12.160240173339844
    5. ',' → logprob: -13.410240173339844
    6. '   ' → logprob: -14.410240173339844
    7. 'range' → logprob: -14.785240173339844
    8. '  ' → logprob: -15.535240173339844
    9. '1' → logprob: -16.160240173339844
    10. 'n' → logprob: -16.285240173339844

Token 284: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067167943343520164
    2. ' range' → logprob: -5.006716728210449
    3. ' ' → logprob: -13.88171672821045
    4. '	range' → logprob: -15.50671672821045
    5. '  ' → logprob: -15.75671672821045
    6. '   ' → logprob: -16.006717681884766
    7. 'r' → logprob: -17.006717681884766
    8. '(range' → logprob: -17.256717681884766
    9. 'ran' → logprob: -17.756717681884766
    10. 'ra' → logprob: -18.131717681884766

Token 285: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014186070300638676
    2. '(n' → logprob: -4.264185905456543
    3. '1' → logprob: -11.139185905456543
    4. ' (' → logprob: -12.514185905456543
    5. 'n' → logprob: -13.139185905456543
    6. '(len' → logprob: -13.389185905456543
    7. '(idx' → logprob: -14.764185905456543
    8. ' ' → logprob: -16.26418685913086
    9. '(
' → logprob: -16.38918685913086
    10. ' n' → logprob: -17.01418685913086

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0077550956048071384
    2. 'n' → logprob: -4.882755279541016
    3. '7' → logprob: -9.632755279541016
    4. '2' → logprob: -10.257755279541016
    5. ' ' → logprob: -10.882755279541016
    6. '   ' → logprob: -11.132755279541016
    7. 'len' → logprob: -12.757755279541016
    8. '6' → logprob: -13.007755279541016
    9. ' n' → logprob: -13.132755279541016
    10. '(' → logprob: -13.257755279541016

Token 287: ',len' (ID: 73338)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6975095868110657
    2. ',n' → logprob: -0.6975095868110657
    3. ' ,' → logprob: -5.447509765625
    4. 'n' → logprob: -10.322509765625
    5. ',len' → logprob: -11.822509765625
    6. ',
' → logprob: -12.822509765625
    7. ' n' → logprob: -13.197509765625
    8. ',num' → logprob: -15.072509765625
    9. '(n' → logprob: -15.322509765625
    10. '
' → logprob: -15.572509765625

Token 288: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.0015214069280773401
    2. 'P' → logprob: -6.501521587371826
    3. '(' → logprob: -11.001521110534668
    4. ')' → logprob: -14.876521110534668
    5. '(
' → logprob: -15.126521110534668
    6. '[P' → logprob: -15.126521110534668
    7. '```' → logprob: -15.251521110534668
    8. ' (' → logprob: -15.376521110534668
    9. ' P' → logprob: -15.376521110534668
    10. '
' → logprob: -15.376521110534668

Token 289: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.896309739408025e-07
    2. 'P' → logprob: -14.250000953674316
    3. ')' → logprob: -16.0
    4. '(P' → logprob: -17.5
    5. '₂' → logprob: -17.5
    6. ' ' → logprob: -18.125
    7. '```' → logprob: -18.125
    8. '۲' → logprob: -18.25
    9. '(' → logprob: -19.625
    10. '２' → logprob: -19.875

Token 290: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012976157013326883
    2. '):
' → logprob: -6.876297473907471
    3. ')):' → logprob: -8.501297950744629
    4. ' ):' → logprob: -9.876297950744629
    5. ')' → logprob: -12.126297950744629
    6. '):

' → logprob: -13.376297950744629
    7. '):
' → logprob: -13.751297950744629
    8. ')):
' → logprob: -14.001297950744629
    9. ']):' → logprob: -14.751297950744629
    10. ':' → logprob: -14.876297950744629

Token 291: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000519312743563205
    2. ' P' → logprob: -8.250519752502441
    3. 'P' → logprob: -8.375519752502441
    4. '	P' → logprob: -10.625519752502441
    5. ',P' → logprob: -13.375519752502441
    6. ' ' → logprob: -14.250519752502441
    7. '>P' → logprob: -14.625519752502441
    8. '  ' → logprob: -15.250519752502441
    9. '```' → logprob: -15.750519752502441
    10. '   ' → logprob: -16.125518798828125

Token 292: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' (adapté à ' P') → logprob: -0.021278539672493935
    2. '   ' → logprob: -4.021278381347656
    3. ' P' → logprob: -5.771278381347656
    4. '	P' → logprob: -11.896278381347656
    5. ' ' → logprob: -13.896278381347656
    6. '  ' → logprob: -16.396278381347656
    7. '```' → logprob: -16.771278381347656
    8. '_P' → logprob: -17.021278381347656
    9. '>P' → logprob: -17.021278381347656
    10. '.P' → logprob: -18.271278381347656

Token 293: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. '[idx' → logprob: -13.500001907348633
    3. 'idx' → logprob: -16.625001907348633
    4. '₂' → logprob: -18.000001907348633
    5. '(idx' → logprob: -18.250001907348633
    6. '```' → logprob: -18.500001907348633
    7. '۲' → logprob: -18.625001907348633
    8. '[' → logprob: -18.750001907348633
    9. '２' → logprob: -19.437501907348633
    10. '' → logprob: -19.687501907348633

Token 294: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -7.226628895296017e-06
    2. '[' → logprob: -12.000007629394531
    3. 'idx' → logprob: -14.625007629394531
    4. '```' → logprob: -16.00000762939453
    5. '[P' → logprob: -16.37500762939453
    6. ' [' → logprob: -16.50000762939453
    7. '[id' → logprob: -16.50000762939453
    8. '[index' → logprob: -16.87500762939453
    9. '[i' → logprob: -16.87500762939453
    10. '	idx' → logprob: -18.25000762939453

Token 295: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02988690510392189
    2. ']=' → logprob: -3.5298869609832764
    3. ')' → logprob: -9.904887199401855
    4. ']=(' → logprob: -10.029887199401855
    5. '=' → logprob: -10.779887199401855
    6. ' ]' → logprob: -11.154887199401855
    7. ')=' → logprob: -12.029887199401855
    8. ']={' → logprob: -14.779887199401855
    9. ' =' → logprob: -14.904887199401855
    10. '=P' → logprob: -16.02988624572754

Token 296: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.019023215398192406
    2. '(P' → logprob: -4.269023418426514
    3. '2' → logprob: -5.769023418426514
    4. '(' → logprob: -6.519023418426514
    5. ' P' → logprob: -8.519022941589355
    6. ' (' → logprob: -10.269022941589355
    7. ' ' → logprob: -11.769022941589355
    8. '   ' → logprob: -13.269022941589355
    9. '	P' → logprob: -13.769022941589355
    10. '
' → logprob: -14.394022941589355

Token 297: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. 'O' → logprob: -13.750001907348633
    3. '[' → logprob: -15.375001907348633
    4. '[idx' → logprob: -15.625001907348633
    5. '```' → logprob: -18.375001907348633
    6. ' ' → logprob: -19.375001907348633
    7. 'OD' → logprob: -19.375001907348633
    8. '۲' → logprob: -19.625001907348633
    9. '₂' → logprob: -19.625001907348633
    10. '
' → logprob: -19.750001907348633

Token 298: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.200166469876422e-06
    2. 'idx' → logprob: -12.250004768371582
    3. '	idx' → logprob: -15.375004768371582
    4. ' idx' → logprob: -16.2500057220459
    5. '[id' → logprob: -17.1250057220459
    6. '[' → logprob: -17.3750057220459
    7. '```' → logprob: -18.3750057220459
    8. '[-' → logprob: -19.0000057220459
    9. ' [' → logprob: -19.0000057220459
    10. '(idx' → logprob: -20.0000057220459

Token 299: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8125550150871277
    2. '[idx' → logprob: -0.8125550150871277
    3. 'idx' → logprob: -2.1875550746917725
    4. '[-' → logprob: -8.687555313110352
    5. ' idx' → logprob: -9.562555313110352
    6. '1' → logprob: -10.062555313110352
    7. ' -' → logprob: -11.062555313110352
    8. '[' → logprob: -11.062555313110352
    9. '(idx' → logprob: -11.312555313110352
    10. '	idx' → logprob: -11.687555313110352

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.250005722045898
    3. ']' → logprob: -14.500005722045898
    4. '```' → logprob: -14.750005722045898
    5. '   ' → logprob: -15.437505722045898
    6. 'idx' → logprob: -17.0625057220459
    7. '-' → logprob: -17.2500057220459
    8. '
' → logprob: -17.6250057220459
    9. '`' → logprob: -18.3125057220459
    10. ']+' → logprob: -18.5000057220459

Token 301: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.004101315978914499
    2. '<<' → logprob: -5.879101276397705
    3. ']*' → logprob: -6.754101276397705
    4. '2' → logprob: -9.504101753234863
    5. ']<<' → logprob: -10.879101753234863
    6. '
' → logprob: -11.129101753234863
    7. ']' → logprob: -11.379101753234863
    8. ')*' → logprob: -12.879101753234863
    9. ' *' → logprob: -13.129101753234863
    10. '```' → logprob: -13.629101753234863

Token 302: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -13.25000286102295
    3. '10' → logprob: -14.62500286102295
    4. '1' → logprob: -15.25000286102295
    5. '3' → logprob: -16.375003814697266
    6. '
' → logprob: -16.375003814697266
    7. '   ' → logprob: -17.125003814697266
    8. '7' → logprob: -17.750003814697266
    9. '

' → logprob: -17.875003814697266
    10. '4' → logprob: -18.125003814697266

Token 303: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.01815064437687397
    2. ' %' → logprob: -4.018150806427002
    3. '%A' → logprob: -15.768150329589844
    4. '%=' → logprob: -15.893150329589844
    5. '%n' → logprob: -15.893150329589844
    6. '%D' → logprob: -16.393150329589844
    7. '%B' → logprob: -16.643150329589844
    8. ' %=' → logprob: -16.643150329589844
    9. '
' → logprob: -16.768150329589844
    10. ')%' → logprob: -17.268150329589844

Token 304: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.128163257315464e-07
    2. ' MOD' → logprob: -15.5
    3. 'MO' → logprob: -22.0
    4. '_MOD' → logprob: -22.375
    5. '.MOD' → logprob: -24.125
    6. '100' → logprob: -25.125
    7. 'MODULE' → logprob: -25.25
    8. 'MODE' → logprob: -25.375
    9. 'MD' → logprob: -26.125
    10. '   ' → logprob: -26.125

Token 305: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.8685452938079834
    2. 'ans' → logprob: -2.1185452938079834
    3. ')' → logprob: -2.4935452938079834
    4. 'print' → logprob: -2.7435452938079834
    5. 'a' → logprob: -2.9935452938079834
    6. 'res' → logprob: -3.1185452938079834
    7. '#' → logprob: -3.2435452938079834
    8. 'total' → logprob: -3.3685452938079834
    9. 'for' → logprob: -3.3685452938079834
    10. 'dp' → logprob: -3.4935452938079834

Token 306: 'answer' (ID: 17021)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.941658079624176
    2. 'dp' → logprob: -1.8166580200195312
    3. 'answer' → logprob: -2.0666580200195312
    4. 'res' → logprob: -2.0666580200195312
    5. 'ret' → logprob: -3.8166580200195312
    6. 'total' → logprob: -3.8166580200195312
    7. 'result' → logprob: -4.191658020019531
    8. 'answers' → logprob: -4.441658020019531
    9. 'Ans' → logprob: -4.566658020019531
    10. 'DP' → logprob: -4.941658020019531

Token 307: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20211423933506012
    2. '=' → logprob: -1.702114224433899
    3. '_' → logprob: -7.702114105224609
    4. 's' → logprob: -8.45211410522461
    5. '_=' → logprob: -11.07711410522461
    6. ' ' → logprob: -11.70211410522461
    7. ',' → logprob: -11.95211410522461
    8. '[' → logprob: -13.82711410522461
    9. ' =
' → logprob: -14.70211410522461
    10. '_space' → logprob: -14.95211410522461

Token 308: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.40627557039260864
    2. '1' → logprob: -1.1562755107879639
    3. 'sizes' → logprob: -4.656275749206543
    4. 'P' → logprob: -5.531275749206543
    5. '(' → logprob: -6.281275749206543
    6. '(n' → logprob: -7.156275749206543
    7. 'n' → logprob: -7.281275749206543
    8. '[' → logprob: -7.531275749206543
    9. '[n' → logprob: -7.906275749206543
    10. '(P' → logprob: -8.031275749206543

Token 309: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020303379744291306
    2. 'def' → logprob: -4.645303249359131
    3. ')' → logprob: -5.145303249359131
    4. ' for' → logprob: -5.895303249359131
    5. '<|end|>' → logprob: -7.270303249359131
    6. ',' → logprob: -7.770303249359131
    7. 'stack' → logprob: -9.145303726196289
    8. '
' → logprob: -9.270303726196289
    9. '.' → logprob: -9.770303726196289
    10. '#' → logprob: -10.020303726196289

Token 310: 'q' (ID: 80)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0036982970777899027
    2. 'def' → logprob: -5.628698348999023
    3. ' for' → logprob: -10.378698348999023
    4. 'stack' → logprob: -10.503698348999023
    5. 'from' → logprob: -11.503698348999023
    6. 'sub' → logprob: -12.128698348999023
    7. 'answer' → logprob: -12.753698348999023
    8. ')' → logprob: -13.128698348999023
    9. 'd' → logprob: -13.503698348999023
    10. 'dp' → logprob: -13.628698348999023

Token 311: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4524357318878174
    2. ' =' → logprob: -1.0774357318878174
    3. 'u' → logprob: -4.452435493469238
    4. ',' → logprob: -4.952435493469238
    5. 'ue' → logprob: -6.077435493469238
    6. '=[]' → logprob: -7.452435493469238
    7. 'uer' → logprob: -7.827435493469238
    8. '=int' → logprob: -8.702435493469238
    9. 'ual' → logprob: -8.827435493469238
    10. ' ' → logprob: -9.077435493469238

Token 312: ' C' (ID: 363)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.34358805418014526
    2. '[]' → logprob: -1.71858811378479
    3. 'n' → logprob: -3.84358811378479
    4. '[(' → logprob: -3.96858811378479
    5. '[n' → logprob: -3.96858811378479
    6. '[int' → logprob: -4.093587875366211
    7. 'int' → logprob: -4.343587875366211
    8. '[I' → logprob: -4.468587875366211
    9. '[' → logprob: -5.093587875366211
    10. 'ls' → logprob: -6.343587875366211

Token 313: '.de' (ID: 3906)
  Prédit: '.de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.de' → logprob: -0.0904860645532608
    2. 'deque' → logprob: -2.8404860496520996
    3. '.Counter' → logprob: -3.7154860496520996
    4. '```' → logprob: -6.3404860496521
    5. '.De' → logprob: -6.5904860496521
    6. ' deque' → logprob: -7.8404860496521
    7. '.default' → logprob: -9.965486526489258
    8. 'de' → logprob: -10.215486526489258
    9. '.dequeue' → logprob: -10.590486526489258
    10. '_de' → logprob: -10.715486526489258

Token 314: 'que' (ID: 1126)
  Prédit: 'que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.0006563199567608535
    2. 'qu' → logprob: -7.7506561279296875
    3. 'q' → logprob: -8.500656127929688
    4. 'queue' → logprob: -11.000656127929688
    5. 'uq' → logprob: -13.250656127929688
    6. 'ques' → logprob: -13.875656127929688
    7. 'deque' → logprob: -14.125656127929688
    8. 'quest' → logprob: -14.375656127929688
    9. 'ue' → logprob: -14.750656127929688
    10. '```' → logprob: -14.875656127929688

Token 315: '([' (ID: 5194)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0014155926182866096
    2. '([]' → logprob: -7.501415729522705
    3. '([' → logprob: -7.626415729522705
    4. '()
' → logprob: -8.376415252685547
    5. '([(' → logprob: -9.251415252685547
    6. '(' → logprob: -10.251415252685547
    7. '[]' → logprob: -12.126415252685547
    8. '()

' → logprob: -13.501415252685547
    9. '((' → logprob: -13.751415252685547
    10. '()]' → logprob: -14.126415252685547

Token 316: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005245260428637266
    2. '(' → logprob: -5.255245208740234
    3. '[' → logprob: -11.630245208740234
    4. '])' → logprob: -14.255245208740234
    5. ' (' → logprob: -14.630245208740234
    6. ' ' → logprob: -15.005245208740234
    7. '(i' → logprob: -15.005245208740234
    8. ']' → logprob: -15.255245208740234
    9. '([' → logprob: -16.005245208740234
    10. ')' → logprob: -16.255245208740234

Token 317: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -2.069664333248511e-05
    2. '])
' → logprob: -11.625020980834961
    3. ' ])' → logprob: -11.875020980834961
    4. ',' → logprob: -12.750020980834961
    5. ')' → logprob: -14.000020980834961
    6. ')])' → logprob: -14.250020980834961
    7. '])]' → logprob: -16.12502098083496
    8. ']' → logprob: -17.00002098083496
    9. '])
' → logprob: -17.12502098083496
    10. ']);' → logprob: -17.12502098083496

Token 318: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.021141408011317253
    2. 'visited' → logprob: -3.896141290664673
    3. 'seen' → logprob: -8.146141052246094
    4. 'depth' → logprob: -8.896141052246094
    5. 'parents' → logprob: -9.396141052246094
    6. 'level' → logprob: -11.146141052246094
    7. 'visit' → logprob: -11.521141052246094
    8. 'answer' → logprob: -11.521141052246094
    9. 'processed' → logprob: -11.646141052246094
    10. 'used' → logprob: -11.896141052246094

Token 319: ' len' (ID: 4631)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0006388116744346917
    2. ' q' → logprob: -7.375638961791992
    3. 'len' → logprob: -11.375638961791992
    4. ' len' → logprob: -15.375638961791992
    5. '(q' → logprob: -15.625638961791992
    6. '	q' → logprob: -15.750638961791992
    7. ' ' → logprob: -16.375638961791992
    8. '   ' → logprob: -16.625638961791992
    9. '
' → logprob: -17.250638961791992
    10. '(len' → logprob: -17.625638961791992

Token 320: '(q' (ID: 21479)
  Prédit: '(q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(q' → logprob: -2.816093228830141e-06
    2. 'q' → logprob: -13.50000286102295
    3. '(' → logprob: -13.75000286102295
    4. ' (' → logprob: -15.50000286102295
    5. '(answer' → logprob: -17.500001907348633
    6. ' q' → logprob: -19.125001907348633
    7. 'answer' → logprob: -19.500001907348633
    8. '[q' → logprob: -19.625001907348633
    9. '(
' → logprob: -20.000001907348633
    10. '(question' → logprob: -20.000001907348633

Token 321: ')>' (ID: 37292)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5912010073661804
    2. ')>' → logprob: -1.0912010669708252
    3. ')' → logprob: -2.216201066970825
    4. '):
' → logprob: -6.716200828552246
    5. '>' → logprob: -8.341200828552246
    6. '>):' → logprob: -11.091200828552246
    7. '):

' → logprob: -11.341200828552246
    8. ')!=' → logprob: -11.591200828552246
    9. ')>
' → logprob: -12.341200828552246
    10. ')">' → logprob: -12.841200828552246

Token 322: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. ')' → logprob: -18.62502670288086
    4. '1' → logprob: -19.00002670288086
    5. '=' → logprob: -19.06252670288086
    6. '   ' → logprob: -19.62502670288086
    7. '۰' → logprob: -19.81252670288086
    8. 'q' → logprob: -19.87502670288086
    9. '
' → logprob: -20.00002670288086
    10. '  ' → logprob: -20.00002670288086

Token 323: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020726049318909645
    2. ':
' → logprob: -3.895725965499878
    3. '):' → logprob: -9.145726203918457
    4. '):
' → logprob: -9.770726203918457
    5. ')' → logprob: -12.270726203918457
    6. ':q' → logprob: -12.270726203918457
    7. '   ' → logprob: -12.395726203918457
    8. ' :' → logprob: -13.020726203918457
    9. ',' → logprob: -13.395726203918457
    10. ':

' → logprob: -13.895726203918457

Token 324: '   ' (ID: 271)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.31912967562675476
    2. ' node' → logprob: -2.319129705429077
    3. 'v' → logprob: -2.569129705429077
    4. '   ' → logprob: -2.694129705429077
    5. '	node' → logprob: -4.444129467010498
    6. 'cur' → logprob: -4.944129467010498
    7. 'u' → logprob: -5.569129467010498
    8. ' v' → logprob: -5.944129467010498
    9. 'current' → logprob: -6.444129467010498
    10. 'x' → logprob: -6.444129467010498

Token 325: ' now' (ID: 1954)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.7980897426605225
    2. 'cur' → logprob: -1.5480897426605225
    3. 'v' → logprob: -1.7980897426605225
    4. 'u' → logprob: -2.2980897426605225
    5. 'x' → logprob: -3.5480897426605225
    6. 'now' (adapté à ' now') → logprob: -4.423089981079102
    7. 'curr' → logprob: -4.548089981079102
    8. 'c' → logprob: -5.548089981079102
    9. 'nd' → logprob: -5.798089981079102
    10. 'current' → logprob: -5.798089981079102

Token 326: '=q' (ID: 151306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2034386247396469
    2. ' =' → logprob: -1.703438639640808
    3. '=q' → logprob: -6.203438758850098
    4. '＝' → logprob: -14.953438758850098
    5. ' ' → logprob: -15.078438758850098
    6. ',' → logprob: -16.07843780517578
    7. '=query' → logprob: -16.95343780517578
    8. ',q' → logprob: -17.20343780517578
    9. '=

' → logprob: -17.57843780517578
    10. '=current' → logprob: -17.82843780517578

Token 327: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -3.173704271830502e-06
    2. '.pop' → logprob: -13.12500286102295
    3. '.' → logprob: -14.00000286102295
    4. 'p' → logprob: -16.500003814697266
    5. ' .' → logprob: -16.625003814697266
    6. '   ' → logprob: -17.250003814697266
    7. '>.' → logprob: -19.000003814697266
    8. '].' → logprob: -19.500003814697266
    9. '```' → logprob: -19.875003814697266
    10. ').' → logprob: -20.500003814697266

Token 328: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.0014364237431436777
    2. 'op' → logprob: -7.251436233520508
    3. 'ople' → logprob: -7.251436233520508
    4. 'opl' → logprob: -11.001436233520508
    5. 'oplevel' → logprob: -15.751436233520508
    6. 'opf' → logprob: -15.751436233520508
    7. 'ple' → logprob: -17.376436233520508
    8. '```' → logprob: -17.501436233520508
    9. 'opt' → logprob: -17.751436233520508
    10. 'opc' → logprob: -18.876436233520508

Token 329: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03270712494850159
    2. '()
' → logprob: -3.6577072143554688
    3. ')' → logprob: -5.282707214355469
    4. '   ' → logprob: -6.907707214355469
    5. '(' → logprob: -9.157707214355469
    6. ')
' → logprob: -9.782707214355469
    7. '
' → logprob: -10.157707214355469
    8. 'for' → logprob: -10.532707214355469
    9. ' for' → logprob: -11.032707214355469
    10. '```' → logprob: -11.657707214355469

Token 330: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2727430760860443
    2. '   ' → logprob: -1.8977431058883667
    3. 'answer' → logprob: -2.772742986679077
    4. 'sz' → logprob: -5.022743225097656
    5. 'child' → logprob: -5.272743225097656
    6. 'children' → logprob: -5.522743225097656
    7. 'cnt' → logprob: -6.022743225097656
    8. 's' → logprob: -6.647743225097656
    9. 'size' → logprob: -6.897743225097656
    10. 'x' → logprob: -7.022743225097656

Token 331: ' subtotal' (ID: 180754)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2172088623046875
    2. 'answer' → logprob: -1.8422088623046875
    3. 'child' → logprob: -4.5922088623046875
    4. 'sz' → logprob: -4.5922088623046875
    5. 'cnt' → logprob: -5.0922088623046875
    6. 'if' → logprob: -6.3422088623046875
    7. 'children' → logprob: -6.5922088623046875
    8. 'count' → logprob: -7.0922088623046875
    9. 'cs' → logprob: -7.0922088623046875
    10. 'c' → logprob: -7.3422088623046875

Token 332: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2528754472732544
    2. ' =' → logprob: -1.6278754472732544
    3. '=s' → logprob: -3.627875328063965
    4. '=size' → logprob: -8.252875328063965
    5. '=len' → logprob: -9.502875328063965
    6. '=sum' → logprob: -9.877875328063965
    7. '=P' → logprob: -10.502875328063965
    8. '=sub' → logprob: -10.752875328063965
    9. '=n' → logprob: -10.752875328063965
    10. '+=' → logprob: -11.002875328063965

Token 333: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5745322108268738
    2. 'sizes' → logprob: -1.5745322704315186
    3. 'P' → logprob: -1.8245322704315186
    4. '1' → logprob: -3.8245322704315186
    5. '(P' → logprob: -3.8245322704315186
    6. '(' → logprob: -4.0745320320129395
    7. '(s' → logprob: -6.1995320320129395
    8. '(n' → logprob: -6.5745320320129395
    9. 'pow' → logprob: -6.8245320320129395
    10. '((' → logprob: -7.0745320320129395

Token 334: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.023359615355730057
    2. 'sizes' → logprob: -4.148359775543213
    3. '(P' → logprob: -5.648359775543213
    4. '(' → logprob: -6.648359775543213
    5. 'pow' → logprob: -7.398359775543213
    6. ' P' → logprob: -7.523359775543213
    7. '2' → logprob: -7.648359775543213
    8. 'MOD' → logprob: -8.523359298706055
    9. '(s' → logprob: -9.273359298706055
    10. 'answer' → logprob: -9.398359298706055

Token 335: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2200749754119897e-06
    2. 'sizes' → logprob: -13.125001907348633
    3. 'Sizes' → logprob: -17.375001907348633
    4. ' ' → logprob: -17.687501907348633
    5. '_sizes' → logprob: -18.125001907348633
    6. '[' → logprob: -18.250001907348633
    7. '۲' → logprob: -18.312501907348633
    8. ' sizes' → logprob: -18.562501907348633
    9. '₂' → logprob: -18.562501907348633
    10. '２' → logprob: -18.687501907348633

Token 336: '[n' (ID: 15433)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.00037621514638885856
    2. '[n' → logprob: -8.250375747680664
    3. 'sizes' → logprob: -9.625375747680664
    4. '[' → logprob: -10.625375747680664
    5. 'n' → logprob: -11.375375747680664
    6. '[size' → logprob: -11.625375747680664
    7. '(s' → logprob: -13.000375747680664
    8. ' [' → logprob: -14.875375747680664
    9. '[min' → logprob: -14.875375747680664
    10. '[max' → logprob: -15.125375747680664

Token 337: '-' (ID: 12)
  Prédit: 'sizes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sizes' → logprob: -0.6334277987480164
    2. '-' → logprob: -1.6334278583526611
    3. ' -' → logprob: -2.133427858352661
    4. '[s' → logprob: -2.633427858352661
    5. '-s' → logprob: -2.633427858352661
    6. '[' → logprob: -5.508427619934082
    7. ']' → logprob: -6.008427619934082
    8. ']-' → logprob: -6.133427619934082
    9. ' sizes' → logprob: -6.758427619934082
    10. '[size' → logprob: -7.258427619934082

Token 338: '1' (ID: 16)
  Prédit: 'sizes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sizes' → logprob: -0.005895491689443588
    2. ' sizes' → logprob: -6.005895614624023
    3. '1' → logprob: -6.130895614624023
    4. '   ' → logprob: -7.755895614624023
    5. '-' → logprob: -8.755895614624023
    6. 'n' → logprob: -9.130895614624023
    7. '
' → logprob: -9.130895614624023
    8. ' -' → logprob: -9.630895614624023
    9. 'answer' → logprob: -9.755895614624023
    10. 'now' → logprob: -9.880895614624023

Token 339: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.21572977304458618
    2. ']-' → logprob: -1.7157297134399414
    3. ' -' → logprob: -4.715729713439941
    4. '-' → logprob: -6.215729713439941
    5. ']+' → logprob: -6.215729713439941
    6. '-s' → logprob: -7.590729713439941
    7. ' ]' → logprob: -7.965729713439941
    8. 'sizes' → logprob: -8.340729713439941
    9. ']*' → logprob: -9.590729713439941
    10. '-size' → logprob: -10.215729713439941

Token 340: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1594472974538803
    2. '-' → logprob: -2.284447193145752
    3. '-s' → logprob: -3.159447193145752
    4. '-size' → logprob: -6.909447193145752
    5. '-P' → logprob: -7.284447193145752
    6. '+' → logprob: -7.284447193145752
    7. '-sub' → logprob: -8.15944766998291
    8. '-n' → logprob: -9.40944766998291
    9. ' +' → logprob: -9.53444766998291
    10. '-sized' → logprob: -9.90944766998291

Token 341: ' ' (ID: 220)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.003227148437872529
    2. '(P' → logprob: -6.128227233886719
    3. ' P' → logprob: -7.503227233886719
    4. '(' → logprob: -8.128227233886719
    5. '1' → logprob: -9.378227233886719
    6. '   ' → logprob: -10.378227233886719
    7. ' (' → logprob: -10.753227233886719
    8. 'sizes' → logprob: -11.128227233886719
    9. '2' → logprob: -11.503227233886719
    10. ')' → logprob: -12.128227233886719

Token 342: '1' (ID: 16)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.0012380871921777725
    2. '(P' → logprob: -7.126237869262695
    3. ' P' → logprob: -8.626237869262695
    4. '1' → logprob: -9.126237869262695
    5. '(' → logprob: -9.501237869262695
    6. '2' → logprob: -10.251237869262695
    7. '   ' → logprob: -11.376237869262695
    8. ')' → logprob: -12.376237869262695
    9. ' (' → logprob: -12.626237869262695
    10. '	P' → logprob: -13.251237869262695

Token 343: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2503102719783783
    2. ' -' → logprob: -2.250310182571411
    3. '+' → logprob: -2.500310182571411
    4. ' )' → logprob: -4.25031042098999
    5. '-' → logprob: -4.62531042098999
    6. ' +' → logprob: -5.25031042098999
    7. ')%' → logprob: -5.87531042098999
    8. ')*' → logprob: -7.25031042098999
    9. '-sub' → logprob: -8.375309944152832
    10. ')+' → logprob: -8.750309944152832

Token 344: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 345: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5229295492172241
    2. '   ' → logprob: -1.6479295492172241
    3. 'for' (adapté à ' for') → logprob: -1.8979295492172241
    4. '
' → logprob: -3.5229296684265137
    5. '<|end|>' → logprob: -4.022929668426514
    6. '    
' → logprob: -5.522929668426514
    7. '+' → logprob: -5.772929668426514
    8. ')' → logprob: -5.772929668426514
    9. 'subtotal' → logprob: -5.897929668426514
    10. 'answer' → logprob: -7.147929668426514

Token 346: ' ch' (ID: 549)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.26209935545921326
    2. ' child' → logprob: -1.7620993852615356
    3. 'ch' → logprob: -4.512099266052246
    4. 'c' → logprob: -4.637099266052246
    5. ' nxt' → logprob: -4.887099266052246
    6. 'v' → logprob: -5.137099266052246
    7. 'x' → logprob: -5.262099266052246
    8. ' ch' → logprob: -6.262099266052246
    9. ' v' → logprob: -6.387099266052246
    10. 'sz' → logprob: -6.512099266052246

Token 347: ' in' (ID: 306)
  Prédit: 'ild'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ild' → logprob: -0.019340500235557556
    2. ' in' → logprob: -4.019340515136719
    3. 'in' → logprob: -6.894340515136719
    4. 'il' → logprob: -9.269340515136719
    5. 'ind' → logprob: -10.769340515136719
    6. 'ld' → logprob: -11.019340515136719
    7. 'id' → logprob: -11.019340515136719
    8. 'ield' → logprob: -11.644340515136719
    9. 'child' → logprob: -11.894340515136719
    10. 'd' → logprob: -13.394340515136719

Token 348: ' Gr' (ID: 2502)
  Prédit: ' Gr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Gr' → logprob: -0.12698322534561157
    2. 'Gr' → logprob: -2.126983165740967
    3. '(' → logprob: -10.126983642578125
    4. '[' → logprob: -12.001983642578125
    5. ' ' → logprob: -12.376983642578125
    6. ' range' → logprob: -13.626983642578125
    7. ' (' → logprob: -14.376983642578125
    8. ',' → logprob: -14.501983642578125
    9. 'range' → logprob: -14.501983642578125
    10. '.Gr' → logprob: -14.751983642578125

Token 349: '[now' (ID: 195791)
  Prédit: '[now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[now' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -14.625000953674316
    3. 'now' → logprob: -16.875
    4. '[node' → logprob: -17.125
    5. '[ch' → logprob: -18.75
    6. '[next' → logprob: -18.875
    7. '(now' → logprob: -19.5
    8. '[current' → logprob: -19.5
    9. ' now' → logprob: -19.875
    10. 'Now' → logprob: -20.375

Token 350: '][:' (ID: 63357)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.03783455491065979
    2. ':' → logprob: -3.787834644317627
    3. '):' → logprob: -4.287834644317627
    4. ']' → logprob: -7.662834644317627
    5. ']):' → logprob: -9.162834167480469
    6. '>:' → logprob: -9.287834167480469
    7. '}:' → logprob: -10.662834167480469
    8. ']:
' → logprob: -10.912834167480469
    9. ' :' → logprob: -11.912834167480469
    10. ' ):' → logprob: -12.412834167480469

Token 351: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0004317420825827867
    2. ']:
' → logprob: -7.875431537628174
    3. ']' → logprob: -10.750432014465332
    4. ']:

' → logprob: -10.875432014465332
    5. ']:
' → logprob: -11.500432014465332
    6. ' ]' → logprob: -15.125432014465332
    7. ']>' → logprob: -15.125432014465332
    8. '],' → logprob: -15.875432014465332
    9. ':' → logprob: -16.125431060791016
    10. ']:


' → logprob: -16.375431060791016

Token 352: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05903211236000061
    2. ' if' → logprob: -3.5590322017669678
    3. '   ' → logprob: -3.6840322017669678
    4. 'if' → logprob: -5.684031963348389
    5. ',' → logprob: -9.059032440185547
    6. ' ' → logprob: -10.059032440185547
    7. '	   ' → logprob: -10.184032440185547
    8. '    ' → logprob: -10.809032440185547
    9. '	if' → logprob: -10.809032440185547
    10. '<|end|>' → logprob: -11.184032440185547

Token 353: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002404669998213649
    2. '       ' → logprob: -6.877404689788818
    3. '   ' → logprob: -7.127404689788818
    4. ' if' → logprob: -7.502404689788818
    5. ' ' → logprob: -11.87740421295166
    6. '	if' → logprob: -12.00240421295166
    7. 'sub' → logprob: -14.00240421295166
    8. 's' → logprob: -14.50240421295166
    9. 'subtotal' → logprob: -14.87740421295166
    10. '```' → logprob: -15.00240421295166

Token 354: ' ch' (ID: 549)
  Prédit: 'parents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.43502822518348694
    2. 'ch' → logprob: -1.0600281953811646
    3. ' parents' → logprob: -5.310028076171875
    4. ' ch' → logprob: -6.810028076171875
    5. 'children' → logprob: -9.435028076171875
    6. 'child' → logprob: -10.685028076171875
    7. '(ch' → logprob: -10.685028076171875
    8. 'sizes' → logprob: -10.685028076171875
    9. 'parent' → logprob: -10.810028076171875
    10. 'Parents' → logprob: -10.935028076171875

Token 355: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.14607582986354828
    2. '!=' → logprob: -2.02107572555542
    3. ' ==' → logprob: -5.89607572555542
    4. ' !=' → logprob: -7.89607572555542
    5. '=' → logprob: -8.521076202392578
    6. ']==' → logprob: -10.646076202392578
    7. 'parents' → logprob: -10.771076202392578
    8. 'parent' → logprob: -12.021076202392578
    9. '==
' → logprob: -12.146076202392578
    10. ' parents' → logprob: -12.896076202392578

Token 356: 'parents' (ID: 40404)
  Prédit: 'parents'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parents' → logprob: -0.0001410850090906024
    2. ' parents' → logprob: -8.875141143798828
    3. '.parents' → logprob: -14.500141143798828
    4. 'now' → logprob: -15.375141143798828
    5. 'par' → logprob: -16.000141143798828
    6. '   ' → logprob: -16.125141143798828
    7. 'parent' → logprob: -17.000141143798828
    8. '	' → logprob: -17.625141143798828
    9. ' ' → logprob: -17.625141143798828
    10. 'paren' → logprob: -17.875141143798828

Token 357: '[now' (ID: 195791)
  Prédit: '[now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[now' → logprob: -1.0280383548888494e-06
    2. 'now' → logprob: -13.875000953674316
    3. '[' → logprob: -18.875001907348633
    4. ' now' → logprob: -19.500001907348633
    5. '	now' → logprob: -19.750001907348633
    6. '(now' → logprob: -20.750001907348633
    7. '[node' → logprob: -20.875001907348633
    8. ' [' → logprob: -21.125001907348633
    9. '   ' → logprob: -21.875001907348633
    10. '[n' → logprob: -22.125001907348633

Token 358: ']:' (ID: 12433)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4631570279598236
    2. ':' → logprob: -1.088157057762146
    3. ']:' → logprob: -3.7131569385528564
    4. ' or' → logprob: -5.0881571769714355
    5. '):
' → logprob: -6.9631571769714355
    6. ':
' → logprob: -6.9631571769714355
    7. ')' → logprob: -7.9631571769714355
    8. '   ' → logprob: -8.463156700134277
    9. '           ' → logprob: -8.713156700134277
    10. 'continue' → logprob: -8.963156700134277

Token 359: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5578905940055847
    2. ' continue' → logprob: -0.9328905940055847
    3. '       ' → logprob: -3.5578906536102295
    4. '   ' → logprob: -5.93289041519165
    5. '           ' → logprob: -6.80789041519165
    6. ' q' → logprob: -7.18289041519165
    7. 'q' → logprob: -7.80789041519165
    8. '	continue' → logprob: -7.93289041519165
    9. 'contin' → logprob: -8.557890892028809
    10. ' ' → logprob: -9.682890892028809

Token 360: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1663256287574768
    2. '           ' → logprob: -2.666325569152832
    3. 'subtotal' → logprob: -2.791325569152832
    4. '
' → logprob: -4.666325569152832
    5. ' subtotal' → logprob: -5.166325569152832
    6. '   ' → logprob: -6.041325569152832
    7. '        
' → logprob: -6.666325569152832
    8. ',' → logprob: -6.916325569152832
    9. '```' → logprob: -7.791325569152832
    10. 'answer' → logprob: -8.166325569152832

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022631129249930382
    2. 'subtotal' → logprob: -3.8976311683654785
    3. '           ' → logprob: -6.6476311683654785
    4. ' subtotal' → logprob: -7.8976311683654785
    5. 'answer' → logprob: -9.39763069152832
    6. '   ' → logprob: -9.89763069152832
    7. '```' → logprob: -10.14763069152832
    8. '        
' → logprob: -10.39763069152832
    9. '+' → logprob: -10.39763069152832
    10. ',' → logprob: -10.64763069152832

Token 362: ' subtotal' (ID: 180754)
  Prédit: 'subtotal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subtotal' (adapté à ' subtotal') → logprob: -0.18711382150650024
    2. 'q' → logprob: -1.9371137619018555
    3. 'answer' → logprob: -4.0621137619018555
    4. '   ' → logprob: -5.5621137619018555
    5. '       ' → logprob: -5.9371137619018555
    6. 'sub' → logprob: -7.6871137619018555
    7. 'temp' → logprob: -7.9371137619018555
    8. 'subtract' → logprob: -8.312113761901855
    9. 'total' → logprob: -8.687113761901855
    10. 'now' → logprob: -8.687113761901855

Token 363: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.0030669569969177246
    2. ' -=' → logprob: -6.0030670166015625
    3. '-' → logprob: -7.5030670166015625
    4. '=' → logprob: -11.003067016601562
    5. '*=' → logprob: -11.003067016601562
    6. '+=' → logprob: -12.128067016601562
    7. ' -' → logprob: -14.003067016601562
    8. ' =' → logprob: -16.753067016601562
    9. '=(' → logprob: -18.128067016601562
    10. '*' → logprob: -18.253067016601562

Token 364: ' (' (ID: 350)
  Prédit: '(P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.39059436321258545
    2. 'P' → logprob: -1.1405943632125854
    3. '(' → logprob: -6.265594482421875
    4. '((' → logprob: -7.140594482421875
    5. ' (' → logprob: -7.390594482421875
    6. ' P' → logprob: -9.015594482421875
    7. '   ' → logprob: -9.390594482421875
    8. 'pow' → logprob: -10.140594482421875
    9. '2' → logprob: -10.265594482421875
    10. '(p' → logprob: -11.140594482421875

Token 365: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.03375646099448204
    2. '(P' → logprob: -3.4087564945220947
    3. '(' → logprob: -10.408756256103516
    4. '2' → logprob: -10.908756256103516
    5. ' P' → logprob: -11.158756256103516
    6. '((' → logprob: -11.408756256103516
    7. '   ' → logprob: -11.533756256103516
    8. 'pow' → logprob: -11.658756256103516
    9. ' (' → logprob: -11.783756256103516
    10. ' ' → logprob: -13.033756256103516

Token 366: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1994775377388578e-05
    2. '[ch' → logprob: -12.000012397766113
    3. 'sizes' → logprob: -12.250012397766113
    4. '[' → logprob: -15.375012397766113
    5. '
' → logprob: -15.750012397766113
    6. 'Sizes' → logprob: -15.750012397766113
    7. 'ch' → logprob: -16.687511444091797
    8. ' sizes' → logprob: -16.875011444091797
    9. '```' → logprob: -16.875011444091797
    10. '   ' → logprob: -17.125011444091797

Token 367: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.00034833617974072695
    2. 'sizes' → logprob: -8.000348091125488
    3. '(s' → logprob: -12.000348091125488
    4. '[' → logprob: -12.500348091125488
    5. '[size' → logprob: -13.375348091125488
    6. 's' → logprob: -15.125348091125488
    7. '   ' → logprob: -15.125348091125488
    8. ' sizes' → logprob: -15.500348091125488
    9. ' [' → logprob: -15.500348091125488
    10. ')' → logprob: -15.500348091125488

Token 368: 'izes' (ID: 6370)
  Prédit: 'izes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izes' → logprob: -0.0026169205084443092
    2. 'sizes' → logprob: -6.377616882324219
    3. '[s' → logprob: -8.127616882324219
    4. 'IZES' → logprob: -8.127616882324219
    5. '[' → logprob: -8.502616882324219
    6. '[ch' → logprob: -9.877616882324219
    7. 'iz' → logprob: -10.502616882324219
    8. 's' → logprob: -11.127616882324219
    9. 'zes' → logprob: -11.627616882324219
    10. '_sizes' → logprob: -11.752616882324219

Token 369: '[ch' (ID: 140164)
  Prédit: '[ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ch' → logprob: -5.512236498361744e-07
    2. 'ch' → logprob: -14.875000953674316
    3. '[' → logprob: -15.875000953674316
    4. '	ch' → logprob: -18.5
    5. '(ch' → logprob: -18.625
    6. '
' → logprob: -18.875
    7. '```' → logprob: -19.0
    8. '[c' → logprob: -19.25
    9. '   ' → logprob: -19.25
    10. ']' → logprob: -19.75

Token 370: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7214630246162415
    2. '[ch' → logprob: -0.7214630246162415
    3. ']-' → logprob: -3.5964629650115967
    4. ']*' → logprob: -9.096463203430176
    5. '[' → logprob: -9.096463203430176
    6. ']+' → logprob: -9.221463203430176
    7. ' ]' → logprob: -9.596463203430176
    8. 'ch' → logprob: -10.346463203430176
    9. ']]' → logprob: -10.846463203430176
    10. ']%' → logprob: -11.596463203430176

Token 371: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20728975534439087
    2. ']-' → logprob: -2.332289695739746
    3. ' -' → logprob: -2.582289695739746
    4. '[' → logprob: -4.457289695739746
    5. ']' → logprob: -6.582289695739746
    6. ')-' → logprob: -7.207289695739746
    7. '}-' → logprob: -8.207289695739746
    8. '[-' → logprob: -8.582289695739746
    9. '])-' → logprob: -9.082289695739746
    10. ')' → logprob: -10.332289695739746

Token 372: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9504606825648807e-05
    2. ' ' → logprob: -10.875019073486328
    3. '2' → logprob: -15.250019073486328
    4. '
' → logprob: -16.375019073486328
    5. '   ' → logprob: -16.500019073486328
    6. ')' → logprob: -17.000019073486328
    7. '```' → logprob: -17.687519073486328
    8. '

' → logprob: -17.875019073486328
    9. '１' → logprob: -18.562519073486328
    10. '0' → logprob: -18.937519073486328

Token 373: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.039865780621767044
    2. ' )' → logprob: -3.539865732192993
    3. ')*' → logprob: -5.289865970611572
    4. '+' → logprob: -5.789865970611572
    5. ')%' → logprob: -6.664865970611572
    6. ')
' → logprob: -7.914865970611572
    7. ' +' → logprob: -9.039865493774414
    8. ' )
' → logprob: -9.539865493774414
    9. '   ' → logprob: -10.289865493774414
    10. ')+' → logprob: -11.164865493774414

Token 374: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08486224710941315
    2. '   ' → logprob: -2.709862232208252
    3. '        
' → logprob: -5.334862232208252
    4. 'subtotal' → logprob: -5.459862232208252
    5. '    
' → logprob: -6.459862232208252
    6. ' 
' → logprob: -6.834862232208252
    7. '+' → logprob: -7.584862232208252
    8. '<|end|>' → logprob: -7.834862232208252
    9. '
' → logprob: -7.959862232208252
    10. 'answer' → logprob: -8.08486270904541

Token 375: ' q' (ID: 2335)
  Prédit: 'subtotal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subtotal' → logprob: -0.6306388974189758
    2. ' q' → logprob: -1.380638837814331
    3. 'q' (adapté à ' q') → logprob: -2.755638837814331
    4. ' subtotal' → logprob: -3.130638837814331
    5. ' 
' → logprob: -3.380638837814331
    6. '
' → logprob: -4.13063907623291
    7. 'answer' → logprob: -4.38063907623291
    8. '+' → logprob: -4.75563907623291
    9. ' answer' → logprob: -5.25563907623291
    10. '<|end|>' → logprob: -5.50563907623291

Token 376: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008695332217030227
    2. '.' → logprob: -7.2508697509765625
    3. '.extend' → logprob: -8.750869750976562
    4. 'append' → logprob: -14.500869750976562
    5. '.p' → logprob: -15.250869750976562
    6. ' .' → logprob: -15.500869750976562
    7. '.app' → logprob: -16.500869750976562
    8. '.push' → logprob: -16.750869750976562
    9. '.enqueue' → logprob: -17.500869750976562
    10. '.ap' → logprob: -18.250869750976562

Token 377: '(ch' (ID: 15574)
  Prédit: '(ch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ch' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.125000953674316
    3. '(child' → logprob: -16.000001907348633
    4. '[ch' → logprob: -16.000001907348633
    5. 'ch' → logprob: -16.875001907348633
    6. '(chr' → logprob: -18.500001907348633
    7. '((' → logprob: -19.000001907348633
    8. '(
' → logprob: -19.125001907348633
    9. '(CH' → logprob: -19.125001907348633
    10. '	ch' → logprob: -19.250001907348633

Token 378: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.1080467781284824e-05
    2. ')
' → logprob: -10.125041007995605
    3. ' )' → logprob: -14.875041007995605
    4. ')return' → logprob: -15.125041007995605
    5. ')`' → logprob: -16.750041961669922
    6. '))' → logprob: -17.000041961669922
    7. ')#' → logprob: -17.000041961669922
    8. ')

' → logprob: -17.250041961669922
    9. '())' → logprob: -17.250041961669922
    10. '),' → logprob: -17.625041961669922

Token 379: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06704738736152649
    2. 'answer' → logprob: -2.942047357559204
    3. '    
' → logprob: -5.817047595977783
    4. ' answer' → logprob: -6.317047595977783
    5. '       ' → logprob: -6.317047595977783
    6. 'subtotal' → logprob: -6.442047595977783
    7. '+' → logprob: -7.317047595977783
    8. ' ' → logprob: -7.442047595977783
    9. ')' → logprob: -7.942047595977783
    10. '  ' → logprob: -8.067047119140625

Token 380: ' subtotal' (ID: 180754)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.007294843439012766
    2. 'subtotal' (adapté à ' subtotal') → logprob: -5.007294654846191
    3. ' answer' → logprob: -7.632294654846191
    4. '   ' → logprob: -9.507294654846191
    5. '	answer' → logprob: -12.257294654846191
    6. '    
' → logprob: -12.632294654846191
    7. 'total' → logprob: -13.007294654846191
    8. ' subtotal' → logprob: -13.007294654846191
    9. ')' → logprob: -13.257294654846191
    10. '_answer' → logprob: -14.007294654846191

Token 381: ' -=' (ID: 12583)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.002375769428908825
    2. ' %=' → logprob: -6.252375602722168
    3. '%' → logprob: -8.127375602722168
    4. '=' → logprob: -9.252375602722168
    5. '+=' → logprob: -10.002375602722168
    6. '*=' → logprob: -11.627375602722168
    7. ' =' → logprob: -14.127375602722168
    8. '```' → logprob: -15.502375602722168
    9. ')%' → logprob: -16.127376556396484
    10. '=%' → logprob: -16.127376556396484

Token 382: ' (' (ID: 350)
  Prédit: '(P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.04463954642415047
    2. ' (' → logprob: -3.2946395874023438
    3. '(' → logprob: -5.544639587402344
    4. '1' → logprob: -6.669639587402344
    5. 'P' → logprob: -7.169639587402344
    6. '((' → logprob: -8.294639587402344
    7. ' P' → logprob: -9.294639587402344
    8. '(len' → logprob: -9.294639587402344
    9. '(p' → logprob: -9.544639587402344
    10. ' ' → logprob: -10.669639587402344

Token 383: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.020266706123948097
    2. '(P' → logprob: -4.020266532897949
    3. ' P' → logprob: -7.395266532897949
    4. '1' → logprob: -7.395266532897949
    5. 'n' → logprob: -8.02026653289795
    6. '   ' → logprob: -8.89526653289795
    7. 'sizes' → logprob: -9.39526653289795
    8. ' (' → logprob: -9.77026653289795
    9. 'pow' → logprob: -9.89526653289795
    10. 'len' → logprob: -9.89526653289795

Token 384: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001144145498983562
    2. 'sizes' → logprob: -6.876143932342529
    3. '[' → logprob: -9.876144409179688
    4. '[now' → logprob: -11.251144409179688
    5. ')' → logprob: -11.751144409179688
    6. '[s' → logprob: -11.876144409179688
    7. '   ' → logprob: -12.001144409179688
    8. ' sizes' → logprob: -12.251144409179688
    9. '-' → logprob: -13.251144409179688
    10. 'T' → logprob: -13.376144409179688

Token 385: '[n' (ID: 15433)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.07748397439718246
    2. '[n' → logprob: -2.702483892440796
    3. '(s' → logprob: -5.202484130859375
    4. '[' → logprob: -7.077484130859375
    5. 'n' → logprob: -7.702484130859375
    6. 'sizes' → logprob: -7.702484130859375
    7. '[size' → logprob: -8.702484130859375
    8. '(n' → logprob: -10.577484130859375
    9. '
' → logprob: -10.827484130859375
    10. ')' → logprob: -11.077484130859375

Token 386: '-s' (ID: 2011)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0195663683116436
    2. ' -' → logprob: -4.394566535949707
    3. '-s' → logprob: -5.519566535949707
    4. '   ' → logprob: -7.144566535949707
    5. 'sizes' → logprob: -7.394566535949707
    6. '[s' → logprob: -7.644566535949707
    7. '[now' → logprob: -7.644566535949707
    8. '[' → logprob: -8.644566535949707
    9. ']' → logprob: -8.894566535949707
    10. ' ' → logprob: -9.519566535949707

Token 387: 'izes' (ID: 6370)
  Prédit: 'izes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'izes' → logprob: -0.00042626605136319995
    2. 'IZES' → logprob: -8.625426292419434
    3. 'sizes' → logprob: -9.375426292419434
    4. '[' → logprob: -9.375426292419434
    5. 'ize' → logprob: -10.375426292419434
    6. '_sizes' → logprob: -10.875426292419434
    7. ' sizes' → logprob: -12.125426292419434
    8. 'iz' → logprob: -12.375426292419434
    9. 'zes' → logprob: -12.375426292419434
    10. '   ' → logprob: -12.375426292419434

Token 388: '[now' (ID: 195791)
  Prédit: '[now'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[now' → logprob: -3.128163257315464e-07
    2. 'now' → logprob: -15.875
    3. '[' → logprob: -16.125
    4. '[ch' → logprob: -17.75
    5. '(now' → logprob: -18.5
    6. '	now' → logprob: -18.625
    7. '   ' → logprob: -19.625
    8. ' [' → logprob: -19.875
    9. '[node' → logprob: -20.125
    10. '
' → logprob: -20.25

Token 389: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1986161768436432
    2. '[now' → logprob: -1.9486161470413208
    3. ']]' → logprob: -3.5736162662506104
    4. ']-' → logprob: -4.698616027832031
    5. ' ]' → logprob: -8.573616027832031
    6. ']+' → logprob: -9.198616027832031
    7. '[node' → logprob: -9.698616027832031
    8. ']])' → logprob: -10.698616027832031
    9. ']>' → logprob: -11.073616027832031
    10. '])-' → logprob: -11.073616027832031

Token 390: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6587005853652954
    2. '-' → logprob: -0.7837005853652954
    3. ']-' → logprob: -3.908700466156006
    4. ')-' → logprob: -5.283700466156006
    5. '[' → logprob: -8.658700942993164
    6. ']' → logprob: -8.783700942993164
    7. ')' → logprob: -8.908700942993164
    8. '()-' → logprob: -9.658700942993164
    9. ' ' → logprob: -10.158700942993164
    10. '[-' → logprob: -11.533700942993164

Token 391: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.375011444091797
    3. ')' → logprob: -14.875011444091797
    4. '   ' → logprob: -17.750011444091797
    5. '```' → logprob: -17.750011444091797
    6. '-' → logprob: -19.250011444091797
    7. '<|end|>' → logprob: -19.500011444091797
    8. '
' → logprob: -19.750011444091797
    9. '0' → logprob: -19.875011444091797
    10. '[' → logprob: -20.062511444091797

Token 392: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. ' ' → logprob: -11.375014305114746
    3. ')' → logprob: -13.000014305114746
    4. '<|end|>' → logprob: -16.00001335144043
    5. '```' → logprob: -16.50001335144043
    6. '
' → logprob: -17.00001335144043
    7. '   ' → logprob: -17.25001335144043
    8. '(' → logprob: -18.87501335144043
    9. '-' → logprob: -19.00001335144043
    10. '...' → logprob: -19.31251335144043

Token 393: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47452449798583984
    2. ')
' → logprob: -0.9745244979858398
    3. '   ' → logprob: -7.97452449798584
    4. ')
' → logprob: -9.59952449798584
    5. '+' → logprob: -11.34952449798584
    6. ')return' → logprob: -12.09952449798584
    7. ')*' → logprob: -12.59952449798584
    8. ')%' → logprob: -13.09952449798584
    9. ')+' → logprob: -13.22452449798584
    10. ' ' → logprob: -13.34952449798584

Token 394: '   ' (ID: 271)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.01202720683068037
    2. '   ' → logprob: -4.887027263641357
    3. ' answer' → logprob: -6.137027263641357
    4. '	answer' → logprob: -6.887027263641357
    5. '
' → logprob: -7.262027263641357
    6. '+' → logprob: -8.0120267868042
    7. '    
' → logprob: -9.1370267868042
    8. ')' → logprob: -10.7620267868042
    9. 'subtotal' → logprob: -10.7620267868042
    10. '+
' → logprob: -11.5120267868042

Token 395: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.0016567325219511986
    2. 'subtotal' → logprob: -7.001656532287598
    3. '   ' → logprob: -7.751656532287598
    4. ' answer' → logprob: -8.251656532287598
    5. 'sub' → logprob: -11.001656532287598
    6. '(answer' → logprob: -11.501656532287598
    7. '	answer' → logprob: -11.501656532287598
    8. '
' → logprob: -11.751656532287598
    9. '    
' → logprob: -12.376656532287598
    10. '(sub' → logprob: -13.751656532287598

Token 396: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.16033145785331726
    2. ' +=' → logprob: -1.9103314876556396
    3. '=' → logprob: -10.285331726074219
    4. '+=(' → logprob: -10.285331726074219
    5. ' =' → logprob: -10.410331726074219
    6. ']+=' → logprob: -12.035331726074219
    7. '%=' → logprob: -13.785331726074219
    8. ' ^=' → logprob: -14.160331726074219
    9. '+' → logprob: -15.160331726074219
    10. '+='' → logprob: -15.410331726074219

Token 397: ' subtotal' (ID: 180754)
  Prédit: 'subtotal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'subtotal' → logprob: -0.009009002707898617
    2. ' subtotal' → logprob: -4.884008884429932
    3. 'sub' → logprob: -6.634008884429932
    4. '(sub' → logprob: -9.75900936126709
    5. 'total' → logprob: -12.00900936126709
    6. '(' → logprob: -12.00900936126709
    7. ' (' → logprob: -12.50900936126709
    8. '1' → logprob: -13.50900936126709
    9. '	sub' → logprob: -13.63400936126709
    10. 'subs' → logprob: -13.63400936126709

Token 398: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.06641454249620438
    2. ' %' → logprob: -3.4414145946502686
    3. '
' → logprob: -3.5664145946502686
    4. ')' → logprob: -6.9414143562316895
    5. '<|end|>' → logprob: -6.9414143562316895
    6. 'answer' → logprob: -7.3164143562316895
    7. ')%' → logprob: -7.5664143562316895
    8. ' 
' → logprob: -8.691414833068848
    9. '%n' → logprob: -8.691414833068848
    10. '%
' → logprob: -8.816414833068848

Token 399: '   ' (ID: 271)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.06470882892608643
    2. '
' → logprob: -3.439708709716797
    3. ' %' → logprob: -4.064708709716797
    4. 'answer' → logprob: -4.689708709716797
    5. ' answer' → logprob: -6.189708709716797
    6. '<|end|>' → logprob: -6.814708709716797
    7. '%
' → logprob: -8.189708709716797
    8. ')' → logprob: -8.564708709716797
    9. ')%' → logprob: -9.064708709716797
    10. '\n' → logprob: -9.189708709716797

Token 400: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.0822477638721466
    2. ' answer' → logprob: -2.582247734069824
    3. '%' → logprob: -6.582247734069824
    4. '
' → logprob: -6.707247734069824
    5. ' %' → logprob: -8.082247734069824
    6. '\n' → logprob: -8.957247734069824
    7. ' 
' → logprob: -9.832247734069824
    8. '   ' → logprob: -9.957247734069824
    9. '(answer' → logprob: -10.457247734069824
    10. '_answer' → logprob: -10.707247734069824

Token 401: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.1858142912387848
    2. ' %=' → logprob: -1.9358142614364624
    3. '%' → logprob: -3.685814380645752
    4. ' %' → logprob: -8.935813903808594
    5. '+=' → logprob: -10.060813903808594
    6. ')%' → logprob: -12.435813903808594
    7. '=' → logprob: -12.560813903808594
    8. ' +=' → logprob: -13.185813903808594
    9. ')' → logprob: -13.560813903808594
    10. ' ' → logprob: -13.685813903808594

Token 402: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -5.512236498361744e-07
    2. ' MOD' → logprob: -14.500000953674316
    3. 'MO' → logprob: -21.25
    4. '100' → logprob: -21.75
    5. '_MOD' → logprob: -21.75
    6. '   ' → logprob: -22.625
    7. '.MOD' → logprob: -23.0
    8. '
' → logprob: -23.75
    9. ' ' → logprob: -24.125
    10. 'MODE' → logprob: -24.5

Token 403: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0012724967673420906
    2. '
' → logprob: -7.001272678375244
    3. '<|end|>' → logprob: -8.626272201538086
    4. ')' → logprob: -9.251272201538086
    5. ' print' → logprob: -9.876272201538086
    6. '```' → logprob: -10.751272201538086
    7. '#' → logprob: -12.626272201538086
    8. '#print' → logprob: -12.626272201538086
    9. 'return' → logprob: -14.251272201538086
    10. '\n' → logprob: -14.376272201538086

Token 404: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020343957003206015
    2. ')' → logprob: -6.2520341873168945
    3. '<|end|>' → logprob: -10.127034187316895
    4. ' print' → logprob: -10.502034187316895
    5. 'answer' → logprob: -11.377034187316895
    6. '
' → logprob: -11.627034187316895
    7. '#' → logprob: -11.877034187316895
    8. '```' → logprob: -12.252034187316895
    9. '#print' → logprob: -13.752034187316895
    10. 'pr' → logprob: -13.877034187316895

Token 405: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.0007131471065804362
    2. '(' → logprob: -7.250713348388672
    3. '(ans' → logprob: -13.125713348388672
    4. ' (' → logprob: -14.625713348388672
    5. '(question' → logprob: -15.250713348388672
    6. 'answer' → logprob: -15.625713348388672
    7. '(
' → logprob: -16.125713348388672
    8. '(a' → logprob: -16.750713348388672
    9. '(address' → logprob: -17.000713348388672
    10. '((' → logprob: -17.125713348388672

Token 406: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -15.750000953674316
    3. '())' → logprob: -15.750000953674316
    4. '()' → logprob: -15.875000953674316
    5. '))' → logprob: -15.875000953674316
    6. ')`' → logprob: -15.875000953674316
    7. '+' → logprob: -16.0
    8. ')
' → logprob: -16.5
    9. '`)' → logprob: -17.75
    10. '*' → logprob: -17.875

Token 407: ' pow' (ID: 9779)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003191970521584153
    2. '3' → logprob: -6.128191947937012
    3. 'pow' → logprob: -8.128191947937012
    4. '4' → logprob: -8.628191947937012
    5. '(' → logprob: -8.878191947937012
    6. '6' → logprob: -9.253191947937012
    7. 'n' → logprob: -9.253191947937012
    8. '(n' → logprob: -9.378191947937012
    9. 'P' → logprob: -10.503191947937012
    10. ' ' → logprob: -10.503191947937012

Token 408: '(P' (ID: 8952)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03805835545063019
    2. '2' → logprob: -3.288058280944824
    3. ')' → logprob: -11.913058280944824
    4. '(
' → logprob: -12.038058280944824
    5. '(P' → logprob: -13.538058280944824
    6. '```' → logprob: -13.913058280944824
    7. ' (' → logprob: -14.288058280944824
    8. '
' → logprob: -15.038058280944824
    9. '(pow' → logprob: -15.163058280944824
    10. '(
' → logprob: -15.663058280944824

Token 409: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0025264339055866003
    2. '(' → logprob: -6.00252628326416
    3. ' ' → logprob: -10.37752628326416
    4. 'MOD' → logprob: -11.87752628326416
    5. ')' → logprob: -12.87752628326416
    6. '
' → logprob: -13.25252628326416
    7. '   ' → logprob: -13.75252628326416
    8. ',' → logprob: -13.75252628326416
    9. '[' → logprob: -13.87752628326416
    10. '(M' → logprob: -14.25252628326416

Token 410: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.18636077642440796
    2. '2' → logprob: -2.8113608360290527
    3. '(n' → logprob: -3.3113608360290527
    4. '[' → logprob: -3.3113608360290527
    5. 'n' → logprob: -3.4363608360290527
    6. ',n' → logprob: -6.436360836029053
    7. '(' → logprob: -6.436360836029053
    8. ',' → logprob: -7.436360836029053
    9. '[-' → logprob: -7.686360836029053
    10. '[(' → logprob: -8.811360359191895

Token 411: '],' (ID: 2155)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47764816880226135
    2. '2' → logprob: -1.477648138999939
    3. '1' → logprob: -1.977648138999939
    4. ' -' → logprob: -5.8526482582092285
    5. 'n' → logprob: -6.1026482582092285
    6. '(n' → logprob: -6.2276482582092285
    7. '[n' → logprob: -6.2276482582092285
    8. '[' → logprob: -7.2276482582092285
    9. '
' → logprob: -7.3526482582092285
    10. '3' → logprob: -7.7276482582092285

Token 412: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0003160393098369241
    2. ' MOD' → logprob: -8.12531566619873
    3. '2' → logprob: -11.50031566619873
    4. '-' → logprob: -12.12531566619873
    5. '_MOD' → logprob: -13.37531566619873
    6. '3' → logprob: -14.75031566619873
    7. '(M' → logprob: -14.87531566619873
    8. '
' → logprob: -15.12531566619873
    9. ' -' → logprob: -15.50031566619873
    10. 'MO' → logprob: -15.62531566619873

Token 413: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002529290970414877
    2. '2' → logprob: -7.252529144287109
    3. 'MOD' → logprob: -7.377529144287109
    4. ' -' → logprob: -7.877529144287109
    5. '(-' → logprob: -8.87752914428711
    6. '6' → logprob: -9.12752914428711
    7. '-M' → logprob: -9.25252914428711
    8. '(M' → logprob: -10.00252914428711
    9. '```' → logprob: -10.00252914428711
    10. '(Mod' → logprob: -10.12752914428711

Token 414: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5107177862082608e-05
    2. '-' → logprob: -11.000024795532227
    3. '
' → logprob: -12.250024795532227
    4. '```' → logprob: -13.750024795532227
    5. '

' → logprob: -13.875024795532227
    6. '
' → logprob: -14.500024795532227
    7. '   ' → logprob: -15.437524795532227
    8. ' ' → logprob: -15.937524795532227
    9. '２' → logprob: -16.125024795532227
    10. ' -' → logprob: -16.312524795532227

Token 415: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012868782505393028
    2. ' ,' → logprob: -9.125128746032715
    3. ')' → logprob: -12.125128746032715
    4. ',-' → logprob: -12.375128746032715
    5. ',
' → logprob: -12.625128746032715
    6. ',M' → logprob: -13.125128746032715
    7. ',n' → logprob: -13.625128746032715
    8. ',%' → logprob: -14.500128746032715
    9. '2' → logprob: -14.625128746032715
    10. ',module' → logprob: -14.875128746032715

Token 416: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -6.778209353797138e-05
    2. ' MOD' → logprob: -9.750067710876465
    3. '2' → logprob: -12.250067710876465
    4. ')' → logprob: -13.125067710876465
    5. '_MOD' → logprob: -14.000067710876465
    6. 'mod' → logprob: -14.000067710876465
    7. '1' → logprob: -14.750067710876465
    8. '```' → logprob: -15.000067710876465
    9. '.MOD' → logprob: -16.25006866455078
    10. '   ' → logprob: -16.25006866455078

Token 417: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12381664663553238
    2. ',' → logprob: -2.248816728591919
    3. ')%' → logprob: -4.99881649017334
    4. '))' → logprob: -5.49881649017334
    5. '%' → logprob: -9.74881649017334
    6. ' ,' → logprob: -11.62381649017334
    7. ' )' → logprob: -12.37381649017334
    8. ')`' → logprob: -12.49881649017334
    9. '),' → logprob: -12.74881649017334
    10. ')))' → logprob: -12.87381649017334

Token 418: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5314290523529053
    2. ')' → logprob: -1.0314290523529053
    3. ')%' → logprob: -3.0314290523529053
    4. ',' → logprob: -5.281429290771484
    5. ' %' → logprob: -6.156429290771484
    6. '%)' → logprob: -8.406429290771484
    7. ' )' → logprob: -10.906429290771484
    8. '%,' → logprob: -11.906429290771484
    9. ',end' → logprob: -12.031429290771484
    10. '))' → logprob: -12.031429290771484

Token 419: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -6.2729995988775045e-06
    2. ' MOD' → logprob: -12.000006675720215
    3. '_MOD' → logprob: -20.2500057220459
    4. 'MO' → logprob: -20.7500057220459
    5. '.MOD' → logprob: -21.6250057220459
    6. 'MD' → logprob: -23.5000057220459
    7. 'M' → logprob: -23.7500057220459
    8. ' ' → logprob: -24.5000057220459
    9. '(M' → logprob: -24.6250057220459
    10. 'MODE' → logprob: -24.6250057220459

Token 420: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.869017852295656e-06
    2. ' )' → logprob: -12.125006675720215
    3. '))' → logprob: -14.125006675720215
    4. ')
' → logprob: -15.250006675720215
    5. ')`' → logprob: -16.25000762939453
    6. '())' → logprob: -16.62500762939453
    7. ')#' → logprob: -17.12500762939453
    8. '(' → logprob: -17.37500762939453
    9. '*)' → logprob: -17.37500762939453
    10. '**' → logprob: -17.62500762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 418
Tokens correctement prédits (1ère position, stricte): 184
Tokens correctement prédits (1ère position, avec adaptation): 194
Tokens correctement prédits (top 10): 354
Précision stricte (1ère position): 44.02%
Précision adaptée (1ère position): 46.41%
Précision (top 10): 84.69%
================================================================================
