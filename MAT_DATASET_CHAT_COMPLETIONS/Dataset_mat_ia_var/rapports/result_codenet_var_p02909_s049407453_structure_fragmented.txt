================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_input():
    return input()

def get_initial_value():
    return 'Sunny'

def is_sunny(weather):
    return weather == 'Sunny'

def is_cloudy(weather):
    return weather == 'Cloudy'

def get_value_for_sunny():
    return 'Cloudy'

def get_value_for_cloudy():
    return 'Rainy'

def determine_tom(input_str, initial_value):
    if is_sunny(input_str):
        return get_value_for_sunny()
    elif is_cloudy(input_str):
        return get_value_for_cloudy()
    else:
        return initial_value

def output_result(result):
    print(result)

def main():
    user_input = get_input()
    initial_value = get_initial_value()
    tom = determine_tom(user_input, initial_value)
    output_result(tom)

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0026244083419442177
    2. '_' → logprob: -6.00262451171875
    3. ' (' → logprob: -10.00262451171875
    4. '():' → logprob: -10.25262451171875
    5. '()' → logprob: -11.12762451171875
    6. '```' → logprob: -11.12762451171875
    7. '(:' → logprob: -12.00262451171875
    8. ':' → logprob: -12.12762451171875
    9. '(_' → logprob: -12.37762451171875
    10. '(_:' → logprob: -12.75262451171875

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.1580127775669098
    2. ':' → logprob: -3.533012866973877
    3. '():' → logprob: -3.533012866973877
    4. '   ' → logprob: -3.533012866973877
    5. '(' → logprob: -4.158012866973877
    6. '\' → logprob: -4.283012866973877
    7. '    
' → logprob: -5.408012866973877
    8. ''' → logprob: -5.658012866973877
    9. '(
' → logprob: -6.033012866973877
    10. ' return' → logprob: -6.158012866973877

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3084721863269806
    2. 'i' → logprob: -2.058472156524658
    3. 'input' → logprob: -2.808472156524658
    4. 'user' → logprob: -3.808472156524658
    5. 'r' → logprob: -4.058472156524658
    6. 'x' → logprob: -4.433472156524658
    7. '   ' → logprob: -4.558472156524658
    8. ' ' → logprob: -5.558472156524658
    9. '```' → logprob: -6.058472156524658
    10. 'n' → logprob: -6.058472156524658

Token 6: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7762201428413391
    2. ' input' → logprob: -0.7762201428413391
    3. 'input' → logprob: -2.9012200832366943
    4. '"' → logprob: -4.026220321655273
    5. ''' → logprob: -5.651220321655273
    6. ' "' → logprob: -6.776220321655273
    7. '  ' → logprob: -7.401220321655273
    8. ' '' → logprob: -7.901220321655273
    9. '(input' → logprob: -8.276220321655273
    10. ' None' → logprob: -8.401220321655273

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015529518714174628
    2. '()' → logprob: -6.626553058624268
    3. '('' → logprob: -9.25155258178711
    4. '("("' → logprob: -9.62655258178711
    5. '(
' → logprob: -11.25155258178711
    6. ' (' → logprob: -11.25155258178711
    7. '```' → logprob: -11.62655258178711
    8. '("")' → logprob: -11.87655258178711
    9. ' ' → logprob: -12.12655258178711
    10. ''' → logprob: -12.62655258178711

Token 8: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5428093671798706
    2. '\n' → logprob: -2.16780948638916
    3. ':' → logprob: -2.54280948638916
    4. 'def' → logprob: -2.79280948638916
    5. '#' → logprob: -3.41780948638916
    6. '()' → logprob: -3.66780948638916
    7. '```' → logprob: -3.66780948638916
    8. '(
' → logprob: -3.79280948638916
    9. '\' → logprob: -4.29280948638916
    10. 'a' → logprob: -4.79280948638916

Token 9: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.21845389902591705
    2. ' calculate' → logprob: -2.093453884124756
    3. ' process' → logprob: -4.093453884124756
    4. ' add' → logprob: -4.343453884124756
    5. ' user' → logprob: -4.468453884124756
    6. ' space' → logprob: -5.093453884124756
    7. ' ' → logprob: -5.093453884124756
    8. ' compute' → logprob: -6.093453884124756
    9. ' my' → logprob: -6.218453884124756
    10. ' read' → logprob: -6.218453884124756

Token 10: '_initial' (ID: 45740)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.21184417605400085
    2. '_output' → logprob: -2.2118442058563232
    3. '_' → logprob: -3.5868442058563232
    4. '_data' → logprob: -3.5868442058563232
    5. '_user' → logprob: -4.211843967437744
    6. '_value' → logprob: -6.086843967437744
    7. '_string' → logprob: -6.336843967437744
    8. '_name' → logprob: -6.961843967437744
    9. ' _' → logprob: -6.961843967437744
    10. '_result' → logprob: -7.336843967437744

Token 11: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27663224935531616
    2. '_value' → logprob: -1.526632308959961
    3. '_state' → logprob: -4.901632308959961
    4. '_values' → logprob: -5.276632308959961
    5. '_input' → logprob: -5.401632308959961
    6. '_data' → logprob: -5.526632308959961
    7. '_position' → logprob: -7.151632308959961
    8. 'ization' → logprob: -7.401632308959961
    9. '_balance' → logprob: -8.151632308959961
    10. '_count' → logprob: -8.401632308959961

Token 12: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026323866099119186
    2. '_' → logprob: -3.7763237953186035
    3. ' (' → logprob: -5.9013237953186035
    4. '()' → logprob: -9.151324272155762
    5. ' ' → logprob: -9.526324272155762
    6. '_space' → logprob: -11.026324272155762
    7. '```' → logprob: -11.276324272155762
    8. ':' → logprob: -11.526324272155762
    9. ' _' → logprob: -11.651324272155762
    10. '   ' → logprob: -11.776324272155762

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4258841574192047
    2. ' ' → logprob: -2.300884246826172
    3. '    ' → logprob: -2.300884246826172
    4. '0' → logprob: -2.425884246826172
    5. '32' → logprob: -4.050884246826172
    6. '42' → logprob: -4.550884246826172
    7. '4' → logprob: -4.800884246826172
    8. '(' → logprob: -5.300884246826172
    9. '10' → logprob: -6.050884246826172
    10. ' return' → logprob: -6.175884246826172

Token 14: ' return' (ID: 622)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6950921416282654
    2. '   ' → logprob: -1.1950922012329102
    3. ' return' → logprob: -2.69509220123291
    4. '42' → logprob: -2.82009220123291
    5. ' ' → logprob: -2.94509220123291
    6. 'return' (adapté à ' return') → logprob: -4.44509220123291
    7. '10' → logprob: -6.19509220123291
    8. '1' → logprob: -6.94509220123291
    9. '20' → logprob: -7.19509220123291
    10. '    ' → logprob: -7.94509220123291

Token 15: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06289107352495193
    2. '0' → logprob: -2.8128910064697266
    3. ' None' → logprob: -7.437891006469727
    4. ' int' → logprob: -9.562891006469727
    5. ' []' → logprob: -9.687891006469727
    6. '  ' → logprob: -10.437891006469727
    7. ' "' → logprob: -10.562891006469727
    8. 'None' → logprob: -10.812891006469727
    9. '42' → logprob: -10.937891006469727
    10. '"' → logprob: -10.937891006469727

Token 16: 'Sunny' (ID: 145166)
  Prédit: '42'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '42' → logprob: -0.65483558177948
    2. '0' → logprob: -0.77983558177948
    3. '100' → logprob: -4.6548357009887695
    4. '10' → logprob: -5.0298357009887695
    5. ''' → logprob: -5.9048357009887695
    6. '1' → logprob: -6.9048357009887695
    7. '5' → logprob: -7.6548357009887695
    8. 'Hello' → logprob: -7.7798357009887695
    9. 'initial' → logprob: -8.40483570098877
    10. 'default' → logprob: -8.52983570098877

Token 17: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -3.047134305234067e-05
    2. ' '' → logprob: -11.250030517578125
    3. ''s' → logprob: -12.250030517578125
    4. '"' → logprob: -12.500030517578125
    5. 'day' → logprob: -12.625030517578125
    6. '')' → logprob: -13.125030517578125
    7. ''S' → logprob: -13.500030517578125
    8. ''
' → logprob: -15.000030517578125
    9. 'Day' → logprob: -15.125030517578125
    10. ' day' → logprob: -15.500030517578125

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0032867982517927885
    2. '

' → logprob: -7.503286838531494
    3. 'weather' → logprob: -7.628286838531494
    4. '
' → logprob: -7.628286838531494
    5. 'result' → logprob: -7.753286838531494
    6. '\' → logprob: -7.878286838531494
    7. '```' → logprob: -8.253286361694336
    8. 'd' → logprob: -9.003286361694336
    9. '<|end|>' → logprob: -9.128286361694336
    10. '#' → logprob: -9.628286361694336

Token 19: ' is' (ID: 382)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.736689567565918
    2. ' get' → logprob: -0.861689567565918
    3. ' calculate' → logprob: -4.111689567565918
    4. ' process' → logprob: -4.111689567565918
    5. ' is' → logprob: -4.611689567565918
    6. ' def' → logprob: -4.736689567565918
    7. 'get' → logprob: -4.861689567565918
    8. ' weather' → logprob: -5.236689567565918
    9. ' generate' → logprob: -5.611689567565918
    10. ' set' → logprob: -5.736689567565918

Token 20: '_s' (ID: 1278)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.6854153871536255
    2. '_' → logprob: -1.5604153871536255
    3. '_s' → logprob: -1.5604153871536255
    4. ' _' → logprob: -4.060415267944336
    5. '_valid' → logprob: -4.185415267944336
    6. '_weather' → logprob: -4.435415267944336
    7. '_day' → logprob: -4.685415267944336
    8. '_cloud' → logprob: -4.935415267944336
    9. '_good' → logprob: -6.310415267944336
    10. '_input' → logprob: -6.310415267944336

Token 21: 'unny' (ID: 128423)
  Prédit: 'unny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unny' → logprob: -0.0017322985222563148
    2. 't' → logprob: -7.126732349395752
    3. 'un' → logprob: -7.751732349395752
    4. 'unday' → logprob: -8.751731872558594
    5. 'now' → logprob: -9.001731872558594
    6. 'e' → logprob: -10.751731872558594
    7. '>' → logprob: -11.314231872558594
    8. 'unn' → logprob: -11.564231872558594
    9. '_un' → logprob: -11.564231872558594
    10. 'even' → logprob: -11.689231872558594

Token 22: '(weather' (ID: 175382)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0038693086244165897
    2. '(' → logprob: -5.878869533538818
    3. '()' → logprob: -7.003869533538818
    4. ' ():' → logprob: -10.00386905670166
    5. '():
' → logprob: -10.37886905670166
    6. '(s' → logprob: -11.50386905670166
    7. '_' → logprob: -11.75386905670166
    8. ':' → logprob: -11.75386905670166
    9. '(day' → logprob: -11.75386905670166
    10. '(:' → logprob: -12.12886905670166

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024636448360979557
    2. ')' → logprob: -7.0024638175964355
    3. '):
' → logprob: -7.5024638175964355
    4. '==' → logprob: -8.252463340759277
    5. ' ):' → logprob: -8.377463340759277
    6. ':' → logprob: -8.627463340759277
    7. ' ==' → logprob: -9.002463340759277
    8. '=' → logprob: -9.502463340759277
    9. '():' → logprob: -10.502463340759277
    10. '   ' → logprob: -11.252463340759277

Token 24: '   ' (ID: 271)
  Prédit: '(weather'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weather' → logprob: -0.6550329923629761
    2. '   ' → logprob: -1.655032992362976
    3. '(' → logprob: -1.905032992362976
    4. 'weather' → logprob: -2.9050331115722656
    5. ' weather' → logprob: -3.2800331115722656
    6. ' ==' → logprob: -3.9050331115722656
    7. ':' → logprob: -4.405033111572266
    8. ' return' → logprob: -5.280033111572266
    9. ' (' → logprob: -5.530033111572266
    10. 'return' → logprob: -6.780033111572266

Token 25: ' return' (ID: 622)
  Prédit: ' weather'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weather' → logprob: -0.37111926078796387
    2. 'weather' → logprob: -1.3711192607879639
    3. ' return' → logprob: -3.121119260787964
    4. 'return' (adapté à ' return') → logprob: -4.996119499206543
    5. '   ' → logprob: -5.246119499206543
    6. '(weather' → logprob: -10.246119499206543
    7. ' ' → logprob: -11.621119499206543
    8. '```' → logprob: -12.621119499206543
    9. '_weather' → logprob: -12.871119499206543
    10. ' if' → logprob: -12.996119499206543

Token 26: ' weather' (ID: 11122)
  Prédit: ' weather'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weather' → logprob: -0.009804374538362026
    2. 'weather' → logprob: -4.6348042488098145
    3. ' '' → logprob: -11.509804725646973
    4. ''' → logprob: -11.634804725646973
    5. ' True' → logprob: -11.634804725646973
    6. '"' → logprob: -12.009804725646973
    7. '(weather' → logprob: -12.384804725646973
    8. ' ' → logprob: -12.759804725646973
    9. ' "' → logprob: -13.009804725646973
    10. ' ' → logprob: -13.259804725646973

Token 27: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.35049110651016235
    2. ' ==' → logprob: -1.2254910469055176
    3. '.lower' → logprob: -6.600491046905518
    4. '.' → logprob: -8.350491523742676
    5. '=' → logprob: -9.225491523742676
    6. '=='' → logprob: -9.600491523742676
    7. '=="' → logprob: -9.600491523742676
    8. ' ' → logprob: -9.850491523742676
    9. '===' → logprob: -10.350491523742676
    10. '[' → logprob: -10.350491523742676

Token 28: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03842930495738983
    2. ' '' → logprob: -3.2884292602539062
    3. '"' → logprob: -8.288429260253906
    4. ''S' → logprob: -9.038429260253906
    5. ' ' → logprob: -11.663429260253906
    6. ' "' → logprob: -11.913429260253906
    7. ''s' → logprob: -13.413429260253906
    8. '   ' → logprob: -15.413429260253906
    9. '`' → logprob: -15.913429260253906
    10. '  ' → logprob: -16.038429260253906

Token 29: 'Sunny' (ID: 145166)
  Prédit: 'Sunny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sunny' → logprob: -3.054500666621607e-06
    2. 'Sun' → logprob: -13.25000286102295
    3. ' Sunny' → logprob: -13.75000286102295
    4. 'sun' → logprob: -16.375003814697266
    5. ''' → logprob: -17.500003814697266
    6. ''S' → logprob: -18.875003814697266
    7. 'SUN' → logprob: -19.750003814697266
    8. 'S' → logprob: -20.000003814697266
    9. 'Rain' → logprob: -20.875003814697266
    10. '```' → logprob: -21.250003814697266

Token 30: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.5776860184123507e-06
    2. '"' → logprob: -14.00000286102295
    3. ''
' → logprob: -14.50000286102295
    4. ''S' → logprob: -14.62500286102295
    5. '')' → logprob: -15.75000286102295
    6. ' '' → logprob: -15.87500286102295
    7. ')'' → logprob: -16.125001907348633
    8. ''

' → logprob: -16.500001907348633
    9. ''s' → logprob: -17.125001907348633
    10. ''"' → logprob: -17.250001907348633

Token 31: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0032688570208847523
    2. '

' → logprob: -6.253268718719482
    3. '
' → logprob: -7.753268718719482
    4. '<|end|>' → logprob: -8.37826919555664
    5. '```' → logprob: -8.62826919555664
    6. '\' → logprob: -8.87826919555664
    7. 'weather' → logprob: -9.25326919555664
    8. '\n' → logprob: -9.62826919555664
    9. '<|end|>' → logprob: -10.25326919555664
    10. 'newline' → logprob: -10.75326919555664

Token 32: ' is' (ID: 382)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.5311325788497925
    2. ' is' → logprob: -1.0311325788497925
    3. ' main' → logprob: -3.156132698059082
    4. 'get' → logprob: -5.781132698059082
    5. 'is' → logprob: -5.781132698059082
    6. ' set' → logprob: -6.531132698059082
    7. ' def' → logprob: -6.531132698059082
    8. ' predict' → logprob: -7.531132698059082
    9. ' weather' → logprob: -7.906132698059082
    10. ' check' → logprob: -8.156132698059082

Token 33: '_cloud' (ID: 83382)
  Prédit: '_r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.13855376839637756
    2. ' rainy' → logprob: -2.5135538578033447
    3. ' Rain' → logprob: -4.388553619384766
    4. 'rain' → logprob: -4.763553619384766
    5. '_cloud' → logprob: -4.888553619384766
    6. ' rain' → logprob: -5.513553619384766
    7. ' '' → logprob: -5.638553619384766
    8. 'Rain' → logprob: -5.763553619384766
    9. 'cloud' → logprob: -6.513553619384766
    10. ' raining' → logprob: -7.263553619384766

Token 34: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.1008713702030946e-06
    2. ' y' → logprob: -14.750001907348633
    3. '```' → logprob: -14.875001907348633
    4. 'less' → logprob: -15.125001907348633
    5. 'ed' → logprob: -15.250001907348633
    6. 'dy' → logprob: -15.750001907348633
    7. '   ' → logprob: -16.375001907348633
    8. 'ly' → logprob: -16.750001907348633
    9. '_y' → logprob: -16.750001907348633
    10. '(y' → logprob: -17.000001907348633

Token 35: '(weather' (ID: 175382)
  Prédit: '(weather'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weather' → logprob: -0.0002067588793579489
    2. '(' → logprob: -8.50020694732666
    3. '_weather' → logprob: -13.12520694732666
    4. ' (' → logprob: -14.25020694732666
    5. 'weather' → logprob: -15.12520694732666
    6. '(world' → logprob: -16.375205993652344
    7. ' weather' → logprob: -16.750205993652344
    8. '.weather' → logprob: -17.125205993652344
    9. '(fe' → logprob: -17.250205993652344
    10. '(news' → logprob: -18.000205993652344

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015223604859784245
    2. '):
' → logprob: -6.501522541046143
    3. ')' → logprob: -11.376522064208984
    4. ' ):' → logprob: -12.876522064208984
    5. '):
' → logprob: -13.001522064208984
    6. '   ' → logprob: -13.126522064208984
    7. ':' → logprob: -14.751522064208984
    8. '):

' → logprob: -15.001522064208984
    9. ')==' → logprob: -15.001522064208984
    10. '==' → logprob: -15.751522064208984

Token 37: '   ' (ID: 271)
  Prédit: ' weather'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weather' → logprob: -0.0716225877404213
    2. ' return' → logprob: -2.821622610092163
    3. '   ' → logprob: -4.946622371673584
    4. 'weather' → logprob: -6.071622371673584
    5. 'return' → logprob: -8.696622848510742
    6. '(weather' → logprob: -11.571622848510742
    7. '    ' → logprob: -11.821622848510742
    8. ' ' → logprob: -12.321622848510742
    9. '.weather' → logprob: -13.571622848510742
    10. '_weather' → logprob: -13.821622848510742

Token 38: ' return' (ID: 622)
  Prédit: ' weather'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weather' → logprob: -0.05359130725264549
    2. ' return' → logprob: -3.553591251373291
    3. 'weather' → logprob: -3.803591251373291
    4. 'return' (adapté à ' return') → logprob: -6.678591251373291
    5. '   ' → logprob: -12.05359172821045
    6. ' ' → logprob: -13.17859172821045
    7. '(weather' → logprob: -13.17859172821045
    8. '.weather' → logprob: -15.05359172821045
    9. ' ' → logprob: -15.42859172821045
    10. '  ' → logprob: -15.42859172821045

Token 39: ' weather' (ID: 11122)
  Prédit: ' weather'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weather' → logprob: -0.00223471294157207
    2. 'weather' → logprob: -6.127234935760498
    3. ''' → logprob: -10.62723445892334
    4. '(weather' → logprob: -11.25223445892334
    5. ' '' → logprob: -12.12723445892334
    6. ' ' → logprob: -12.37723445892334
    7. ' Weather' → logprob: -14.37723445892334
    8. 'weath' → logprob: -14.75223445892334
    9. '"' → logprob: -15.12723445892334
    10. ' ' → logprob: -15.25223445892334

Token 40: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5761152505874634
    2. '==' → logprob: -0.8261152505874634
    3. '=' → logprob: -9.576115608215332
    4. ' ' → logprob: -10.076115608215332
    5. '=='' → logprob: -11.076115608215332
    6. ' !=' → logprob: -11.201115608215332
    7. ' in' → logprob: -11.326115608215332
    8. '!=' → logprob: -11.701115608215332
    9. '.' → logprob: -13.076115608215332
    10. ' =='' → logprob: -13.076115608215332

Token 41: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.20147083699703217
    2. ' '' → logprob: -1.7014708518981934
    3. ''S' → logprob: -10.201470375061035
    4. ' ' → logprob: -11.326470375061035
    5. ' ' → logprob: -12.576470375061035
    6. '"' → logprob: -12.576470375061035
    7. ''s' → logprob: -14.076470375061035
    8. ' "' → logprob: -15.826470375061035
    9. '	' → logprob: -16.07647132873535
    10. '  ' → logprob: -16.45147132873535

Token 42: 'Cloud' (ID: 17486)
  Prédit: 'Cloud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Cloud' → logprob: -0.029762526974081993
    2. ''' → logprob: -3.5297625064849854
    3. ' Cloud' → logprob: -12.529762268066406
    4. ''C' → logprob: -12.654762268066406
    5. 'cloud' → logprob: -13.154762268066406
    6. ''S' → logprob: -13.404762268066406
    7. 'Sunny' → logprob: -14.779762268066406
    8. ' cloudy' → logprob: -14.904762268066406
    9. '.Cloud' → logprob: -15.154762268066406
    10. 'Rain' → logprob: -15.529762268066406

Token 43: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.319370302458992e-06
    2. ''' → logprob: -12.375005722045898
    3. ''y' → logprob: -13.875005722045898
    4. 's' → logprob: -16.6250057220459
    5. ' y' → logprob: -17.5000057220459
    6. ' '' → logprob: -19.1250057220459
    7. '')' → logprob: -19.3750057220459
    8. ''''' → logprob: -19.5000057220459
    9. 'y's' → logprob: -19.6250057220459
    10. '‘y' → logprob: -19.6250057220459

Token 44: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0006668062414973974
    2. '')' → logprob: -7.375666618347168
    3. ')'' → logprob: -10.500666618347168
    4. ')' → logprob: -11.500666618347168
    5. '()' → logprob: -14.000666618347168
    6. '"' → logprob: -14.875666618347168
    7. '('' → logprob: -14.875666618347168
    8. ''''' → logprob: -15.125666618347168
    9. ' '' → logprob: -15.500666618347168
    10. ''
' → logprob: -15.500666618347168

Token 45: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.2842308680992573e-05
    2. '
' → logprob: -10.875022888183594
    3. '```' → logprob: -12.750022888183594
    4. '

' → logprob: -14.375022888183594
    5. '\' → logprob: -16.625022888183594
    6. 'de' → logprob: -16.625022888183594
    7. '``' → logprob: -16.625022888183594
    8. ' def' → logprob: -16.750022888183594
    9. 'ndef' → logprob: -17.125022888183594
    10. '<|end|>' → logprob: -17.125022888183594

Token 46: ' get' (ID: 717)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.2623438537120819
    2. ' get' → logprob: -1.6373438835144043
    3. 'is' → logprob: -4.012343883514404
    4. 'get' → logprob: -4.262343883514404
    5. ' def' → logprob: -6.637343883514404
    6. 'def' → logprob: -6.887343883514404
    7. 'rain' → logprob: -7.512343883514404
    8. '```' → logprob: -7.762343883514404
    9. ' rain' → logprob: -9.012343406677246
    10. '_get' → logprob: -9.387343406677246

Token 47: '_value' (ID: 6734)
  Prédit: '_weather'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_weather' → logprob: -0.5293146371841431
    2. '_r' → logprob: -1.029314637184143
    3. '_fore' → logprob: -3.9043145179748535
    4. '_w' → logprob: -4.5293145179748535
    5. '_default' → logprob: -5.5293145179748535
    6. '_current' → logprob: -5.7793145179748535
    7. '_next' → logprob: -5.9043145179748535
    8. '_s' → logprob: -6.1543145179748535
    9. '_' → logprob: -6.1543145179748535
    10. '_temperature' → logprob: -6.2793145179748535

Token 48: '_for' (ID: 11903)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6178824305534363
    2. '()' → logprob: -1.117882490158081
    3. '_from' → logprob: -2.617882490158081
    4. '_at' → logprob: -3.992882490158081
    5. '():' → logprob: -4.742882251739502
    6. '_' → logprob: -4.992882251739502
    7. '_by' → logprob: -6.117882251739502
    8. '_initial' → logprob: -6.242882251739502
    9. '_input' → logprob: -6.492882251739502
    10. '_for' → logprob: -6.492882251739502

Token 49: '_s' (ID: 1278)
  Prédit: '_weather'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weather' → logprob: -0.1520298272371292
    2. '_cloud' → logprob: -2.7770297527313232
    3. '_r' → logprob: -3.9020297527313232
    4. '_s' → logprob: -4.277029991149902
    5. '(weather' → logprob: -4.777029991149902
    6. '_day' → logprob: -4.777029991149902
    7. ' weather' → logprob: -5.152029991149902
    8. '_today' → logprob: -5.277029991149902
    9. 'weather' → logprob: -5.402029991149902
    10. '_condition' → logprob: -6.402029991149902

Token 50: 'unny' (ID: 128423)
  Prédit: 'unny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unny' → logprob: -0.013878691010177135
    2. 't' → logprob: -4.51387882232666
    3. 'un' → logprob: -6.51387882232666
    4. 'e' → logprob: -8.38887882232666
    5. 'ky' → logprob: -9.01387882232666
    6. 'unday' → logprob: -9.38887882232666
    7. 'ituation' → logprob: -9.38887882232666
    8. 'unn' → logprob: -9.76387882232666
    9. 'tring' → logprob: -9.76387882232666
    10. 'cenario' → logprob: -9.88887882232666

Token 51: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0005128794582560658
    2. '()' → logprob: -8.625513076782227
    3. '_weather' → logprob: -9.125513076782227
    4. ' ():' → logprob: -9.250513076782227
    5. '(' → logprob: -9.500513076782227
    6. '():
' → logprob: -10.375513076782227
    7. '(weather' → logprob: -12.000513076782227
    8. '_' → logprob: -12.625513076782227
    9. '_day' → logprob: -13.000513076782227
    10. '_condition' → logprob: -13.375513076782227

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004989912733435631
    2. ''' → logprob: -5.879990100860596
    3. 'return' → logprob: -6.379990100860596
    4. ' return' → logprob: -7.754990100860596
    5. '"' → logprob: -11.379989624023438
    6. '    
' → logprob: -11.379989624023438
    7. ''S' → logprob: -11.754989624023438
    8. '       ' → logprob: -12.379989624023438
    9. '4' → logprob: -12.629989624023438
    10. '`' → logprob: -12.754989624023438

Token 53: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.30822688341140747
    2. '   ' → logprob: -1.8082268238067627
    3. ''' → logprob: -2.4332268238067627
    4. ' return' → logprob: -4.808227062225342
    5. '"' → logprob: -6.058227062225342
    6. '20' → logprob: -7.683227062225342
    7. ''S' → logprob: -7.683227062225342
    8. ' ' → logprob: -7.933227062225342
    9. '42' → logprob: -8.058226585388184
    10. ''s' → logprob: -8.683226585388184

Token 54: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4960092604160309
    2. '"' → logprob: -2.121009349822998
    3. ' ' → logprob: -2.746009349822998
    4. ' '' → logprob: -3.246009349822998
    5. '42' → logprob: -3.371009349822998
    6. '10' → logprob: -3.621009349822998
    7. ' True' → logprob: -3.746009349822998
    8. '20' → logprob: -3.871009349822998
    9. ''s' → logprob: -4.371009349822998
    10. ''S' → logprob: -4.496009349822998

Token 55: 'Cloud' (ID: 17486)
  Prédit: 'Bright'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Bright' → logprob: -0.866381824016571
    2. 'Clear' → logprob: -1.6163818836212158
    3. 'Warm' → logprob: -1.8663818836212158
    4. 'Hot' → logprob: -2.866381883621216
    5. 'It's' → logprob: -3.491381883621216
    6. 'bright' → logprob: -3.991381883621216
    7. 'Sun' → logprob: -3.991381883621216
    8. 'It' → logprob: -4.366381645202637
    9. 'Beach' → logprob: -4.366381645202637
    10. 'Blue' → logprob: -4.366381645202637

Token 56: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00022761584841646254
    2. ' y' → logprob: -8.500227928161621
    3. ''' → logprob: -11.875227928161621
    4. ''y' → logprob: -12.625227928161621
    5. 'ed' → logprob: -12.750227928161621
    6. 'ly' → logprob: -13.125227928161621
    7. 't' → logprob: -13.500227928161621
    8. ' '' → logprob: -14.187727928161621
    9. '	y' → logprob: -14.437727928161621
    10. ' Cloud' → logprob: -14.562727928161621

Token 57: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -9.968312951968983e-06
    2. ''
' → logprob: -12.125009536743164
    3. ''

' → logprob: -13.250009536743164
    4. '()' → logprob: -13.625009536743164
    5. '"' → logprob: -14.500009536743164
    6. ''''' → logprob: -15.625009536743164
    7. 'def' → logprob: -15.750009536743164
    8. '')' → logprob: -15.750009536743164
    9. '('' → logprob: -16.125009536743164
    10. ' '' → logprob: -16.500009536743164

Token 58: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0012374912621453404
    2. '
' → logprob: -6.876237392425537
    3. '

' → logprob: -9.251237869262695
    4. '<|end|>' → logprob: -9.376237869262695
    5. '```' → logprob: -11.751237869262695
    6. ' def' → logprob: -11.876237869262695
    7. '\' → logprob: -13.501237869262695
    8. '(def' → logprob: -13.626237869262695
    9. '\n' → logprob: -13.751237869262695
    10. ' 

' → logprob: -13.876237869262695

Token 59: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.014197707176208496
    2. 'get' → logprob: -4.264197826385498
    3. 'def' → logprob: -11.13919734954834
    4. ' def' → logprob: -11.51419734954834
    5. '_get' → logprob: -11.88919734954834
    6. '(get' → logprob: -14.51419734954834
    7. '.get' → logprob: -14.76419734954834
    8. ' ' → logprob: -14.76419734954834
    9. '	get' → logprob: -14.76419734954834
    10. '[get' → logprob: -15.38919734954834

Token 60: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.5570885807392187e-05
    2. '_' → logprob: -11.250015258789062
    3. ' _' → logprob: -13.500015258789062
    4. 'value' → logprob: -14.500015258789062
    5. '_val' → logprob: -15.000015258789062
    6. '_cloud' → logprob: -15.625015258789062
    7. ' value' → logprob: -16.500015258789062
    8. '_s' → logprob: -17.625015258789062
    9. '_initial' → logprob: -18.000015258789062
    10. '_for' → logprob: -18.125015258789062

Token 61: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -0.00012118533049942926
    2. '_' → logprob: -9.125121116638184
    3. 'for' → logprob: -12.250121116638184
    4. ' _' → logprob: -12.500121116638184
    5. ' for' → logprob: -12.625121116638184
    6. ' ' → logprob: -16.1251220703125
    7. 'For' → logprob: -16.2501220703125
    8. '_f' → logprob: -16.6251220703125
    9. '_FOR' → logprob: -16.7501220703125
    10. ' For' → logprob: -17.3751220703125

Token 62: '_cloud' (ID: 83382)
  Prédit: 'cloud'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cloud' → logprob: -0.008928078226745129
    2. 'sun' → logprob: -4.883928298950195
    3. '_cloud' → logprob: -7.008928298950195
    4. 'Cloud' → logprob: -8.883928298950195
    5. ' cloud' → logprob: -9.008928298950195
    6. 'rain' → logprob: -9.383928298950195
    7. ' cloudy' → logprob: -11.133928298950195
    8. 's' → logprob: -11.633928298950195
    9. '_s' → logprob: -11.883928298950195
    10. 'storm' → logprob: -11.883928298950195

Token 63: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -7.896309739408025e-07
    2. ' y' → logprob: -14.750000953674316
    3. 'yl' → logprob: -16.625
    4. '_y' → logprob: -16.75
    5. 'yb' → logprob: -18.0
    6. 'ly' → logprob: -18.125
    7. '```' → logprob: -18.125
    8. 'ycl' → logprob: -18.25
    9. '	y' → logprob: -18.625
    10. '_' → logprob: -18.625

Token 64: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -8.923874702304602e-05
    2. '():
' → logprob: -9.500089645385742
    3. '()' → logprob: -11.250089645385742
    4. ' ():' → logprob: -13.750089645385742
    5. '():
' → logprob: -15.500089645385742
    6. '(' → logprob: -16.875089645385742
    7. '():

' → logprob: -18.375089645385742
    8. '()>' → logprob: -18.750089645385742
    9. ':' → logprob: -19.375089645385742
    10. ' ()' → logprob: -19.625089645385742

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15471182763576508
    2. ' return' → logprob: -2.7797117233276367
    3. ''' → logprob: -3.0297117233276367
    4. 'return' → logprob: -3.5297117233276367
    5. ' '' → logprob: -6.279711723327637
    6. ''S' → logprob: -7.279711723327637
    7. ''s' → logprob: -7.904711723327637
    8. ' ' → logprob: -8.029711723327637
    9. '	return' → logprob: -9.279711723327637
    10. '  ' → logprob: -9.904711723327637

Token 66: ' return' (ID: 622)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12461744248867035
    2. 'return' (adapté à ' return') → logprob: -2.374617338180542
    3. ' return' → logprob: -4.624617576599121
    4. '   ' → logprob: -4.749617576599121
    5. ''S' → logprob: -6.374617576599121
    6. ' '' → logprob: -6.624617576599121
    7. 'def' → logprob: -6.624617576599121
    8. 'Rain' → logprob: -7.374617576599121
    9. ''s' → logprob: -8.749617576599121
    10. 'rain' → logprob: -9.499617576599121

Token 67: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.04010310024023056
    2. ' '' → logprob: -3.2901031970977783
    3. ''S' → logprob: -6.540102958679199
    4. ''s' → logprob: -7.915102958679199
    5. '"' → logprob: -8.6651029586792
    6. ' ' → logprob: -10.2901029586792
    7. ' ' → logprob: -11.5401029586792
    8. '`' → logprob: -11.7901029586792
    9. '   ' → logprob: -12.7901029586792
    10. '''' → logprob: -12.9776029586792

Token 68: 'Rain' (ID: 74615)
  Prédit: 'Rain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rain' → logprob: -0.024821393191814423
    2. 'Sunny' → logprob: -3.7748212814331055
    3. ''' → logprob: -7.2748212814331055
    4. 'Snow' → logprob: -7.6498212814331055
    5. 'rain' → logprob: -9.274821281433105
    6. 'Sun' → logprob: -9.524821281433105
    7. 'Wind' → logprob: -10.149821281433105
    8. ''S' → logprob: -10.524821281433105
    9. 'Storm' → logprob: -11.024821281433105
    10. '`' → logprob: -11.149821281433105

Token 69: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0010841365437954664
    2. ''' → logprob: -6.876084327697754
    3. ''y' → logprob: -10.001084327697754
    4. '```' → logprob: -13.251084327697754
    5. ''''' → logprob: -13.251084327697754
    6. '‘y' → logprob: -14.501084327697754
    7. 'Y' → logprob: -14.876084327697754
    8. '''' → logprob: -15.126084327697754
    9. 'ny' → logprob: -15.126084327697754
    10. ''}' → logprob: -15.376084327697754

Token 70: ''

' (ID: 7497)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5924056768417358
    2. '<|end|>' → logprob: -0.8424056768417358
    3. ''' → logprob: -4.967405796051025
    4. ')' → logprob: -5.592405796051025
    5. 'def' → logprob: -5.717405796051025
    6. '')' → logprob: -7.467405796051025
    7. '```' → logprob: -7.717405796051025
    8. '<|end|>' → logprob: -7.717405796051025
    9. '()
' → logprob: -8.592405319213867
    10. '(' → logprob: -8.842405319213867

Token 71: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -6.869017852295656e-06
    2. '```' → logprob: -12.250006675720215
    3. '\' → logprob: -14.375006675720215
    4. '
' → logprob: -14.625006675720215
    5. '

' → logprob: -15.750006675720215
    6. '<|end|>' → logprob: -15.875006675720215
    7. 'elif' → logprob: -16.12500762939453
    8. ' def' → logprob: -16.25000762939453
    9. '``' → logprob: -16.25000762939453
    10. 'd' → logprob: -16.25000762939453

Token 72: ' determine' (ID: 11433)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.008613395504653454
    2. ' predict' → logprob: -6.383613586425781
    3. ' weather' → logprob: -6.508613586425781
    4. 'get' → logprob: -6.508613586425781
    5. ' next' → logprob: -6.758613586425781
    6. ' update' → logprob: -6.758613586425781
    7. ' main' → logprob: -7.883613586425781
    8. ' def' → logprob: -8.508613586425781
    9. ' process' → logprob: -9.008613586425781
    10. ' forecast' → logprob: -9.258613586425781

Token 73: '_t' (ID: 838)
  Prédit: '_next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_next' → logprob: -0.1807934194803238
    2. '_weather' → logprob: -2.680793523788452
    3. '_value' → logprob: -2.805793523788452
    4. '_' → logprob: -3.430793523788452
    5. '_new' → logprob: -7.055793285369873
    6. '_w' → logprob: -7.430793285369873
    7. '_current' → logprob: -7.555793285369873
    8. '_initial' → logprob: -7.555793285369873
    9. '_final' → logprob: -8.055793762207031
    10. '_change' → logprob: -8.555793762207031

Token 74: 'om' (ID: 310)
  Prédit: 'ext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ext' → logprob: -0.0010038702748715878
    2. 'em' → logprob: -7.501003742218018
    3. 'h' → logprob: -9.501004219055176
    4. 'rans' → logprob: -10.001004219055176
    5. '_' → logprob: -10.126004219055176
    6. '_ext' → logprob: -10.126004219055176
    7. ' ext' → logprob: -10.251004219055176
    8. 'ype' → logprob: -10.251004219055176
    9. 'r' → logprob: -10.626004219055176
    10. 'e' → logprob: -10.751004219055176

Token 75: '(input' (ID: 10054)
  Prédit: 'orrow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'orrow' → logprob: -0.04395894706249237
    2. 'or' → logprob: -3.168958902359009
    3. 'orr' → logprob: -7.668959140777588
    4. '_' → logprob: -8.16895866394043
    5. 'arrow' → logprob: -9.16895866394043
    6. '```' → logprob: -10.54395866394043
    7. '_or' → logprob: -10.79395866394043
    8. '__' → logprob: -11.41895866394043
    9. 'orro' → logprob: -12.04395866394043
    10. 'o' → logprob: -12.04395866394043

Token 76: '_str' (ID: 6182)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2633135914802551
    2. ')' → logprob: -1.7633135318756104
    3. '_weather' → logprob: -3.1383135318756104
    4. '_value' → logprob: -5.2633137702941895
    5. '):
' → logprob: -5.6383137702941895
    6. ',' → logprob: -6.0133137702941895
    7. ')_' → logprob: -6.6383137702941895
    8. '_' → logprob: -6.6383137702941895
    9. 's' → logprob: -7.5133137702941895
    10. 'ed' → logprob: -8.138313293457031

Token 77: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09715773165225983
    2. 'ent' → logprob: -3.0971577167510986
    3. '):' → logprob: -3.2221577167510986
    4. '):
' → logprob: -5.597157955169678
    5. 't' → logprob: -6.597157955169678
    6. 'et' → logprob: -7.097157955169678
    7. ',' → logprob: -7.972157955169678
    8. '):

' → logprob: -8.09715747833252
    9. 'ut' → logprob: -8.47215747833252
    10. 'at' → logprob: -8.84715747833252

Token 78: ' initial' (ID: 4871)
  Prédit: ' weather'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' weather' → logprob: -0.08819440752267838
    2. ' current' → logprob: -2.5881943702697754
    3. ' previous' → logprob: -5.963194370269775
    4. 'weather' → logprob: -5.963194370269775
    5. ' input' → logprob: -6.838194370269775
    6. ' day' → logprob: -7.338194370269775
    7. ' prev' → logprob: -7.713194370269775
    8. ' )' → logprob: -8.213194847106934
    9. 'current' → logprob: -8.588194847106934
    10. ' today' → logprob: -8.838194847106934

Token 79: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.11758966743946075
    2. '_weather' → logprob: -2.4925897121429443
    3. '_val' → logprob: -3.9925897121429443
    4. ')' → logprob: -5.492589473724365
    5. '_' → logprob: -5.742589473724365
    6. '_state' → logprob: -7.117589473724365
    7. '=' → logprob: -8.117589950561523
    8. '_day' → logprob: -8.117589950561523
    9. ')_' → logprob: -8.742589950561523
    10. 'value' → logprob: -8.742589950561523

Token 80: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014145197346806526
    2. '):
' → logprob: -7.0014142990112305
    3. ',' → logprob: -8.00141429901123
    4. ')' → logprob: -9.12641429901123
    5. ' ):' → logprob: -10.75141429901123
    6. ':' → logprob: -11.37641429901123
    7. '_' → logprob: -11.37641429901123
    8. '=' → logprob: -13.37641429901123
    9. '):

' → logprob: -13.37641429901123
    10. ' ' → logprob: -13.50141429901123

Token 81: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9598416090011597
    2. '   ' → logprob: -1.2098416090011597
    3. '_' → logprob: -1.8348416090011597
    4. ' :' → logprob: -3.209841728210449
    5. '(' → logprob: -3.334841728210449
    6. '    ' → logprob: -3.334841728210449
    7. ' ' → logprob: -4.709841728210449
    8. ' (' → logprob: -5.209841728210449
    9. '_:' → logprob: -5.334841728210449
    10. ')' → logprob: -5.584841728210449

Token 82: ' if' (ID: 538)
  Prédit: ' weather'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weather' → logprob: -1.0667003393173218
    2. ' current' → logprob: -1.1917003393173218
    3. ' if' → logprob: -1.3167003393173218
    4. '   ' → logprob: -2.8167004585266113
    5. 'weather' → logprob: -4.691700458526611
    6. ' value' → logprob: -5.191700458526611
    7. ' result' → logprob: -6.191700458526611
    8. ' next' → logprob: -6.316700458526611
    9. 'current' → logprob: -6.566700458526611
    10. '    ' → logprob: -6.941700458526611

Token 83: ' is' (ID: 382)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3255118131637573
    2. ' is' → logprob: -1.3255118131637573
    3. ' initial' → logprob: -4.825511932373047
    4. ' ' → logprob: -6.325511932373047
    5. 'input' → logprob: -6.700511932373047
    6. ' get' → logprob: -7.575511932373047
    7. ' not' → logprob: -8.075511932373047
    8. 'is' → logprob: -8.950511932373047
    9. ' ' → logprob: -10.325511932373047
    10. '  ' → logprob: -10.325511932373047

Token 84: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0009942257311195135
    2. '_' → logprob: -7.0009942054748535
    3. '_cloud' → logprob: -9.750994682312012
    4. ' _' → logprob: -10.750994682312012
    5. '_t' → logprob: -13.875994682312012
    6. 's' → logprob: -14.875994682312012
    7. '__' → logprob: -15.250994682312012
    8. ' ' → logprob: -15.375994682312012
    9. '_sn' → logprob: -16.125993728637695
    10. 'sun' → logprob: -16.375993728637695

Token 85: 'unny' (ID: 128423)
  Prédit: 'sun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sun' → logprob: -0.7194244861602783
    2. 'unny' → logprob: -0.9694244861602783
    3. 's' → logprob: -2.9694244861602783
    4. '_s' → logprob: -3.2194244861602783
    5. 'uny' → logprob: -4.344424247741699
    6. 'u' → logprob: -4.469424247741699
    7. 'un' → logprob: -4.844424247741699
    8. 'y' → logprob: -5.844424247741699
    9. 'i' → logprob: -7.469424247741699
    10. 'su' → logprob: -7.469424247741699

Token 86: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6618442535400391
    2. '(initial' → logprob: -1.161844253540039
    3. '(input' → logprob: -1.786844253540039
    4. '(weather' → logprob: -5.911844253540039
    5. '(get' → logprob: -7.661844253540039
    6. ' (' → logprob: -8.786844253540039
    7. '(current' → logprob: -9.661844253540039
    8. '(s' → logprob: -9.786844253540039
    9. '(
' → logprob: -10.536844253540039
    10. '('' → logprob: -10.536844253540039

Token 87: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0006664486136287451
    2. '_' → logprob: -7.750666618347168
    3. '(' → logprob: -9.250666618347168
    4. '_s' → logprob: -10.000666618347168
    5. '(_' → logprob: -10.500666618347168
    6. ')' → logprob: -10.875666618347168
    7. '(str' → logprob: -11.500666618347168
    8. ' _' → logprob: -12.375666618347168
    9. ')_' → logprob: -12.375666618347168
    10. '   ' → logprob: -12.625666618347168

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.017836278304457664
    2. ')' → logprob: -4.767836093902588
    3. ' ):' → logprob: -4.767836093902588
    4. '):
' → logprob: -7.642836093902588
    5. '():' → logprob: -9.767836570739746
    6. ' )' → logprob: -9.892836570739746
    7. '()' → logprob: -10.017836570739746
    8. '   ' → logprob: -11.267836570739746
    9. ' ' → logprob: -11.892836570739746
    10. ':' → logprob: -12.142836570739746

Token 89: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13207940757274628
    2. ':
' → logprob: -2.1320793628692627
    3. '       ' → logprob: -5.882079601287842
    4. ':return' → logprob: -6.757079601287842
    5. ' and' → logprob: -7.757079601287842
    6. ' :
' → logprob: -8.882079124450684
    7. '   ' → logprob: -9.007079124450684
    8. ' return' → logprob: -9.007079124450684
    9. ' or' → logprob: -9.382079124450684
    10. '():
' → logprob: -9.632079124450684

Token 90: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -1.0965216159820557
    2. '
' → logprob: -1.3465216159820557
    3. ' return' → logprob: -1.5965216159820557
    4. '       ' → logprob: -1.9715216159820557
    5. '           ' → logprob: -3.0965216159820557
    6. '   ' → logprob: -5.346521377563477
    7. ':' → logprob: -5.596521377563477
    8. ':
' → logprob: -6.221521377563477
    9. ' 
' → logprob: -6.346521377563477
    10. 'value' → logprob: -6.721521377563477

Token 91: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.02829977683722973
    2. 'get' → logprob: -3.7782998085021973
    3. ''' → logprob: -5.528299808502197
    4. ' '' → logprob: -7.153299808502197
    5. ' ' → logprob: -8.778299331665039
    6. '(get' → logprob: -10.153299331665039
    7. '"' → logprob: -10.403299331665039
    8. '[get' → logprob: -11.403299331665039
    9. '	get' → logprob: -11.778299331665039
    10. '   ' → logprob: -11.778299331665039

Token 92: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00013858173042535782
    2. '_val' → logprob: -9.625138282775879
    3. '_' → logprob: -9.750138282775879
    4. ' _' → logprob: -11.750138282775879
    5. '_Value' → logprob: -12.750138282775879
    6. '```' → logprob: -14.125138282775879
    7. '_va' → logprob: -14.375138282775879
    8. '_code' → logprob: -14.500138282775879
    9. '_v' → logprob: -15.125138282775879
    10. '_for' → logprob: -15.125138282775879

Token 93: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -7.886803359724581e-05
    2. '_' → logprob: -10.375079154968262
    3. '```' → logprob: -10.625079154968262
    4. ' _' → logprob: -11.250079154968262
    5. 'For' → logprob: -13.000079154968262
    6. '##_' → logprob: -13.750079154968262
    7. ' ' → logprob: -13.875079154968262
    8. '}_' → logprob: -13.875079154968262
    9. '__' → logprob: -14.125079154968262
    10. '_For' → logprob: -14.125079154968262

Token 94: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00038872790173627436
    2. '_' → logprob: -7.8753886222839355
    3. '_cloud' → logprob: -12.500389099121094
    4. ' _' → logprob: -13.125389099121094
    5. 's' → logprob: -13.625389099121094
    6. '_sn' → logprob: -14.000389099121094
    7. ' ' → logprob: -15.875389099121094
    8. '_t' → logprob: -16.250389099121094
    9. '_sm' → logprob: -16.750389099121094
    10. ''_' → logprob: -16.875389099121094

Token 95: 'unny' (ID: 128423)
  Prédit: 'unny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unny' → logprob: -7.100059156073257e-05
    2. 'sun' → logprob: -10.125070571899414
    3. 'un' → logprob: -10.625070571899414
    4. 'Sunny' → logprob: -13.500070571899414
    5. '_un' → logprob: -14.125070571899414
    6. 's' → logprob: -14.250070571899414
    7. 'uny' → logprob: -14.250070571899414
    8. 'u' → logprob: -14.375070571899414
    9. 'unn' → logprob: -14.500070571899414
    10. 'unning' → logprob: -14.875070571899414

Token 96: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012023169983876869
    2. '()
' → logprob: -9.125120162963867
    3. '(' → logprob: -11.750120162963867
    4. '()

' → logprob: -13.250120162963867
    5. '()`' → logprob: -14.375120162963867
    6. ' ()' → logprob: -14.625120162963867
    7. '()"' → logprob: -15.750120162963867
    8. '(
' → logprob: -15.875120162963867
    9. '()(' → logprob: -16.750120162963867
    10. '`()' → logprob: -17.125120162963867

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013076935894787312
    2. '
' → logprob: -4.8880767822265625
    3. '    
' → logprob: -5.5130767822265625
    4. ' elif' → logprob: -7.6380767822265625
    5. 'elif' → logprob: -7.7630767822265625
    6. '	elif' → logprob: -9.013076782226562
    7. ' else' → logprob: -9.513076782226562
    8. '   
' → logprob: -9.638076782226562
    9. '  
' → logprob: -9.638076782226562
    10. '<|end|>' → logprob: -9.888076782226562

Token 98: ' elif' (ID: 9497)
  Prédit: ' elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elif' → logprob: -0.4005304276943207
    2. '   ' → logprob: -1.525530457496643
    3. 'elif' (adapté à ' elif') → logprob: -2.2755303382873535
    4. ' else' → logprob: -4.7755303382873535
    5. '	elif' → logprob: -7.7755303382873535
    6. 'else' → logprob: -8.150530815124512
    7. ' if' → logprob: -8.525530815124512
    8. '
' → logprob: -9.025530815124512
    9. '    
' → logprob: -9.275530815124512
    10. '<|end|>' → logprob: -9.400530815124512

Token 99: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00046212802408263087
    2. 'is' → logprob: -7.750462055206299
    3. ' ' → logprob: -10.875462532043457
    4. ' ' → logprob: -11.500462532043457
    5. 'space' → logprob: -14.500462532043457
    6. ' input' → logprob: -15.062962532043457
    7. '	is' → logprob: -15.375462532043457
    8. 's' → logprob: -15.500462532043457
    9. '(is' → logprob: -15.687962532043457
    10. '  ' → logprob: -15.687962532043457

Token 100: '_cloud' (ID: 83382)
  Prédit: '_cloud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cloud' → logprob: -0.0001911432045744732
    2. '_' → logprob: -8.750190734863281
    3. 'cloud' → logprob: -10.750190734863281
    4. '_s' → logprob: -12.500190734863281
    5. '_c' → logprob: -13.500190734863281
    6. '```' → logprob: -13.750190734863281
    7. '(_' → logprob: -13.875190734863281
    8. 'Cloud' → logprob: -14.000190734863281
    9. ' _' → logprob: -14.125190734863281
    10. '_cl' → logprob: -14.250190734863281

Token 101: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.2471589798224159e-05
    2. 'input' → logprob: -12.375012397766113
    3. '   ' → logprob: -13.500012397766113
    4. 'cloud' → logprob: -13.750012397766113
    5. ' y' → logprob: -14.125012397766113
    6. ' ' → logprob: -14.375012397766113
    7. 'yd' → logprob: -14.750012397766113
    8. '(input' → logprob: -14.750012397766113
    9. '_cloud' → logprob: -15.000012397766113
    10. 'weather' → logprob: -15.250012397766113

Token 102: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -3.3451433409936726e-05
    2. '(' → logprob: -10.375033378601074
    3. ' (' → logprob: -13.250033378601074
    4. '(user' → logprob: -15.875033378601074
    5. ',input' → logprob: -16.75003433227539
    6. '(inp' → logprob: -16.87503433227539
    7. '=input' → logprob: -17.00003433227539
    8. 'input' → logprob: -17.25003433227539
    9. '<input' → logprob: -17.75003433227539
    10. '(weather' → logprob: -18.00003433227539

Token 103: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0009639846975915134
    2. 'str' → logprob: -7.375964164733887
    3. 'weather' → logprob: -9.000964164733887
    4. '(weather' → logprob: -9.500964164733887
    5. ')' → logprob: -10.125964164733887
    6. '(str' → logprob: -11.000964164733887
    7. 'Str' → logprob: -11.125964164733887
    8. '(input' → logprob: -11.500964164733887
    9. '_s' → logprob: -12.000964164733887
    10. '(' → logprob: -12.250964164733887

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007561430102214217
    2. '):
' → logprob: -7.25075626373291
    3. ':' → logprob: -10.62575626373291
    4. ')' → logprob: -11.25075626373291
    5. ' ):' → logprob: -12.50075626373291
    6. '():' → logprob: -13.00075626373291
    7. '   ' → logprob: -13.62575626373291
    8. '(' → logprob: -15.12575626373291
    9. '):
' → logprob: -15.37575626373291
    10. ' ' → logprob: -15.37575626373291

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015488841570913792
    2. ':' → logprob: -4.640488624572754
    3. '():' → logprob: -6.765488624572754
    4. 'get' → logprob: -6.890488624572754
    5. '):' → logprob: -7.140488624572754
    6. '(' → logprob: -7.515488624572754
    7. 'return' → logprob: -7.515488624572754
    8. '(get' → logprob: -7.890488624572754
    9. ':
' → logprob: -8.015488624572754
    10. ' return' → logprob: -8.390488624572754

Token 106: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.25786668062210083
    2. 'return' (adapté à ' return') → logprob: -1.507866621017456
    3. '       ' → logprob: -5.257866859436035
    4. '   ' → logprob: -7.257866859436035
    5. ' ' → logprob: -12.632866859436035
    6. '	return' → logprob: -13.132866859436035
    7. '           ' → logprob: -13.382866859436035
    8. '    ' → logprob: -14.257866859436035
    9. '  ' → logprob: -14.882866859436035
    10. 'get' → logprob: -15.382866859436035

Token 107: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.00014251544780563563
    2. 'get' → logprob: -8.875142097473145
    3. '(get' → logprob: -13.000142097473145
    4. '[get' → logprob: -15.750142097473145
    5. '	get' → logprob: -16.37514305114746
    6. ' ' → logprob: -16.75014305114746
    7. '_get' → logprob: -17.62514305114746
    8. ')get' → logprob: -17.87514305114746
    9. ' ' → logprob: -18.50014305114746
    10. '|get' → logprob: -18.50014305114746

Token 108: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -2.9040898880339228e-05
    2. '_for' → logprob: -10.875028610229492
    3. 'value' → logprob: -11.750028610229492
    4. '_cloud' → logprob: -14.375028610229492
    5. '_val' → logprob: -14.500028610229492
    6. '_' → logprob: -15.000028610229492
    7. 'cloud' → logprob: -15.500028610229492
    8. 'for' → logprob: -16.250028610229492
    9. '_of' → logprob: -16.750028610229492
    10. 'Value' → logprob: -16.875028610229492

Token 109: '_for' (ID: 11903)
  Prédit: '_for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_for' → logprob: -5.967624019831419e-05
    2. 'for' → logprob: -9.750060081481934
    3. '_value' → logprob: -15.500060081481934
    4. '   ' → logprob: -15.500060081481934
    5. '_cloud' → logprob: -15.625060081481934
    6. ' for' → logprob: -15.875060081481934
    7. '```' → logprob: -16.000059127807617
    8. ' _' → logprob: -16.750059127807617
    9. 'cloud' → logprob: -16.875059127807617
    10. '(_' → logprob: -17.000059127807617

Token 110: '_cloud' (ID: 83382)
  Prédit: 'cloud'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cloud' → logprob: -0.29148775339126587
    2. '_cloud' → logprob: -1.416487693786621
    3. 'y' → logprob: -5.041487693786621
    4. 'ly' → logprob: -6.416487693786621
    5. '_s' → logprob: -6.666487693786621
    6. 's' → logprob: -8.166487693786621
    7. 'sun' → logprob: -9.041487693786621
    8. 'cl' → logprob: -9.166487693786621
    9. 'l' → logprob: -9.541487693786621
    10. 'c' → logprob: -10.041487693786621

Token 111: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -6.2729995988775045e-06
    2. ' y' → logprob: -13.000006675720215
    3. 'yd' → logprob: -13.375006675720215
    4. 'ly' → logprob: -14.375006675720215
    5. '   ' → logprob: -14.375006675720215
    6. 'def' → logprob: -15.750006675720215
    7. 'yl' → logprob: -15.750006675720215
    8. ''y' → logprob: -16.0000057220459
    9. 'ed' → logprob: -16.1250057220459
    10. 'd' → logprob: -16.2500057220459

Token 112: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12693418562412262
    2. '()
' → logprob: -2.126934289932251
    3. '()

' → logprob: -12.251934051513672
    4. '()
' → logprob: -14.001934051513672
    5. '   ' → logprob: -15.751934051513672
    6. '()\' → logprob: -15.751934051513672
    7. '()`' → logprob: -16.626934051513672
    8. '(
' → logprob: -16.751934051513672
    9. '(' → logprob: -17.126934051513672
    10. 'else' → logprob: -17.376934051513672

Token 113: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021767400205135345
    2. '
' → logprob: -4.396767616271973
    3. '<|end|>' → logprob: -5.021767616271973
    4. 'else' → logprob: -6.896767616271973
    5. ' else' → logprob: -7.396767616271973
    6. '    
' → logprob: -8.021767616271973
    7. '()
' → logprob: -8.521767616271973
    8. 'def' → logprob: -9.271767616271973
    9. '<|end|>' → logprob: -9.396767616271973
    10. 'return' → logprob: -9.646767616271973

Token 114: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1017383486032486
    2. '   ' → logprob: -3.101738452911377
    3. ' else' → logprob: -3.226738452911377
    4. 'return' → logprob: -4.476738452911377
    5. ' return' → logprob: -7.726738452911377
    6. '()
' → logprob: -8.976737976074219
    7. '
' → logprob: -9.851737976074219
    8. '()' → logprob: -10.351737976074219
    9. 'def' → logprob: -10.601737976074219
    10. '	else' → logprob: -11.726737976074219

Token 115: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36565548181533813
    2. ':
' → logprob: -1.2406554222106934
    3. '       ' → logprob: -4.365655422210693
    4. '   ' → logprob: -5.740655422210693
    5. ':return' → logprob: -7.115655422210693
    6. 'return' → logprob: -8.990655899047852
    7. ' return' → logprob: -9.990655899047852
    8. '    ' → logprob: -10.115655899047852
    9. '
' → logprob: -10.740655899047852
    10. '<|end|>' → logprob: -11.365655899047852

Token 116: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7267877459526062
    2. 'return' → logprob: -1.351787805557251
    3. ' return' → logprob: -2.226787805557251
    4. 'initial' → logprob: -2.476787805557251
    5. ' initial' → logprob: -2.726787805557251
    6. '       ' → logprob: -8.476787567138672
    7. '    
' → logprob: -9.851787567138672
    8. '    ' → logprob: -9.851787567138672
    9. ' ' → logprob: -10.226787567138672
    10. '	initial' → logprob: -10.976787567138672

Token 117: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.04986802116036415
    2. ' return' → logprob: -3.049868106842041
    3. '   ' → logprob: -6.674868106842041
    4. '       ' → logprob: -11.174867630004883
    5. '
' → logprob: -14.049867630004883
    6. ' ' → logprob: -14.424867630004883
    7. '    
' → logprob: -14.924867630004883
    8. '    ' → logprob: -14.924867630004883
    9. '	return' → logprob: -15.049867630004883
    10. '           ' → logprob: -15.174867630004883

Token 118: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.28126734495162964
    2. ' initial' → logprob: -1.4062674045562744
    3. 'input' → logprob: -10.156267166137695
    4. ' None' → logprob: -10.656267166137695
    5. ' input' → logprob: -11.156267166137695
    6. 'None' → logprob: -11.156267166137695
    7. '	initial' → logprob: -11.531267166137695
    8. '(initial' → logprob: -11.781267166137695
    9. '.initial' → logprob: -13.156267166137695
    10. ' ' → logprob: -13.656267166137695

Token 119: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -7.111979357432574e-05
    2. '_' → logprob: -9.87507152557373
    3. '_val' → logprob: -11.00007152557373
    4. ' _' → logprob: -13.25007152557373
    5. '_values' → logprob: -15.00007152557373
    6. '_t' → logprob: -15.75007152557373
    7. '_Value' → logprob: -15.75007152557373
    8. '_VALUE' → logprob: -16.375070571899414
    9. '```' → logprob: -16.500070571899414
    10. 'value' → logprob: -16.750070571899414

Token 120: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4142984449863434
    2. '<|end|>' → logprob: -1.289298415184021
    3. '
' → logprob: -2.9142985343933105
    4. '()' → logprob: -5.4142985343933105
    5. '<|end|>' → logprob: -6.5392985343933105
    6. '

' → logprob: -6.7892985343933105
    7. '```' → logprob: -7.2892985343933105
    8. '()
' → logprob: -8.164298057556152
    9. '\n' → logprob: -8.289298057556152
    10. '#' → logprob: -8.289298057556152

Token 121: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.018538517877459526
    2. '
' → logprob: -4.643538475036621
    3. '<|end|>' → logprob: -5.268538475036621
    4. '#' → logprob: -6.768538475036621
    5. '\' → logprob: -7.143538475036621
    6. '```' → logprob: -8.143538475036621
    7. '_' → logprob: -8.143538475036621
    8. 't' → logprob: -8.643538475036621
    9. '\n' → logprob: -8.643538475036621
    10. '

' → logprob: -9.268538475036621

Token 122: ' output' (ID: 4733)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.001971577061340213
    2. ' predict' → logprob: -7.12697172164917
    3. 'main' → logprob: -7.25197172164917
    4. ' run' → logprob: -8.876971244812012
    5. ' weather' → logprob: -9.126971244812012
    6. ' forecast' → logprob: -9.876971244812012
    7. ' update' → logprob: -10.251971244812012
    8. ' get' → logprob: -10.501971244812012
    9. ' simulate' → logprob: -10.876971244812012
    10. ' calculate' → logprob: -11.001971244812012

Token 123: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0272804144769907
    2. '()' → logprob: -3.902280330657959
    3. '(value' → logprob: -5.902280330657959
    4. '_' → logprob: -6.652280330657959
    5. '(output' → logprob: -7.402280330657959
    6. '():' → logprob: -8.402280807495117
    7. '(_' → logprob: -8.652280807495117
    8. '_value' → logprob: -8.777280807495117
    9. '('' → logprob: -9.027280807495117
    10. '```' → logprob: -9.152280807495117

Token 124: '(result' (ID: 8111)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.34783250093460083
    2. '(' → logprob: -1.972832441329956
    3. '(output' → logprob: -2.347832441329956
    4. '(result' → logprob: -3.347832441329956
    5. '(input' → logprob: -4.222832679748535
    6. '(value' → logprob: -5.222832679748535
    7. '(data' → logprob: -7.347832679748535
    8. '(user' → logprob: -7.472832679748535
    9. '(response' → logprob: -7.597832679748535
    10. '()' → logprob: -8.222832679748535

Token 125: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0023151186760514975
    2. ')' → logprob: -6.252315044403076
    3. '):
' → logprob: -7.877315044403076
    4. ':' → logprob: -12.377315521240234
    5. '():' → logprob: -13.002315521240234
    6. ' ):' → logprob: -14.877315521240234
    7. '   ' → logprob: -15.877315521240234
    8. '):

' → logprob: -16.002315521240234
    9. '):
' → logprob: -16.627315521240234
    10. ' ' → logprob: -17.377315521240234

Token 126: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002901877975091338
    2. ' print' → logprob: -5.877902030944824
    3. 'print' → logprob: -9.252902030944824
    4. '```' → logprob: -14.502902030944824
    5. '    
' → logprob: -15.252902030944824
    6. '
' → logprob: -15.377902030944824
    7. '	print' → logprob: -16.627901077270508
    8. '   ' → logprob: -16.752901077270508
    9. '       ' → logprob: -17.752901077270508
    10. '  ' → logprob: -18.502901077270508

Token 127: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.21824528276920319
    2. 'print' (adapté à ' print') → logprob: -1.718245267868042
    3. '   ' → logprob: -4.093245506286621
    4. '```' → logprob: -12.218245506286621
    5. '	print' → logprob: -14.468245506286621
    6. ' ' → logprob: -15.968245506286621
    7. '.print' → logprob: -16.718244552612305
    8. '
' → logprob: -16.843244552612305
    9. '  ' → logprob: -16.968244552612305
    10. ' prin' → logprob: -17.093244552612305

Token 128: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.029765645042061806
    2. '(' → logprob: -3.5297656059265137
    3. 'result' → logprob: -12.029766082763672
    4. '()' → logprob: -12.404766082763672
    5. '(f' → logprob: -12.779766082763672
    6. ' (' → logprob: -14.029766082763672
    7. '('' → logprob: -14.154766082763672
    8. '(
' → logprob: -15.404766082763672
    9. '(resultado' → logprob: -16.154766082763672
    10. '((' → logprob: -16.279766082763672

Token 129: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -14.625000953674316
    3. '()' → logprob: -15.375000953674316
    4. ')
' → logprob: -16.125
    5. '())' → logprob: -16.75
    6. '')' → logprob: -19.125
    7. '))' → logprob: -19.625
    8. ')`' → logprob: -19.625
    9. ')

' → logprob: -19.875
    10. '")' → logprob: -20.625

Token 130: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0002478694950696081
    2. 'weather' → logprob: -8.875247955322266
    3. 'if' → logprob: -9.250247955322266
    4. 'input' → logprob: -11.750247955322266
    5. 'while' → logprob: -14.250247955322266
    6. '```' → logprob: -14.375247955322266
    7. '#' → logprob: -14.500247955322266
    8. 'for' → logprob: -14.500247955322266
    9. '
' → logprob: -14.750247955322266
    10. 'current' → logprob: -14.750247955322266

Token 131: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0028236585203558207
    2. 'main' → logprob: -5.877823829650879
    3. ' run' → logprob: -11.252823829650879
    4. '_main' → logprob: -12.377823829650879
    5. ' def' → logprob: -14.377823829650879
    6. ' weather' → logprob: -15.252823829650879
    7. 'def' → logprob: -15.627823829650879
    8. ' process' → logprob: -15.627823829650879
    9. '_' → logprob: -16.252822875976562
    10. ' _' → logprob: -16.252822875976562

Token 132: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -3.6312321753939614e-05
    2. ' ():' → logprob: -10.375036239624023
    3. '():
' → logprob: -13.125036239624023
    4. '()' → logprob: -13.500036239624023
    5. '(' → logprob: -13.500036239624023
    6. '_' → logprob: -15.125036239624023
    7. '()>' → logprob: -16.875036239624023
    8. '(:' → logprob: -17.625036239624023
    9. '(":' → logprob: -17.875036239624023
    10. '():
' → logprob: -18.125036239624023

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030205711722373962
    2. 'weather' → logprob: -4.655205726623535
    3. ' weather' → logprob: -4.905205726623535
    4. 'input' → logprob: -4.905205726623535
    5. ' input' → logprob: -5.905205726623535
    6. ' current' → logprob: -6.780205726623535
    7. 'current' → logprob: -6.905205726623535
    8. ' initial' → logprob: -8.655205726623535
    9. 'initial' → logprob: -9.905205726623535
    10. 'user' → logprob: -10.030205726623535

Token 134: ' user' (ID: 1825)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.2120662927627563
    2. 'input' → logprob: -1.5870662927627563
    3. ' weather' → logprob: -1.9620662927627563
    4. 'weather' → logprob: -2.087066173553467
    5. ' initial' → logprob: -2.212066173553467
    6. ' current' → logprob: -3.087066173553467
    7. '   ' → logprob: -3.587066173553467
    8. 'initial' → logprob: -3.837066173553467
    9. 'current' → logprob: -4.337066173553467
    10. ' user' → logprob: -4.837066173553467

Token 135: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.06256784498691559
    2. '_' → logprob: -2.812567949295044
    3. '_value' → logprob: -8.562567710876465
    4. ' =' → logprob: -8.687567710876465
    5. '_str' → logprob: -9.562567710876465
    6. '_weather' → logprob: -10.062567710876465
    7. '=' → logprob: -10.437567710876465
    8. ' _' → logprob: -10.562567710876465
    9. '_string' → logprob: -11.312567710876465
    10. '_s' → logprob: -11.312567710876465

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03387124836444855
    2. '=' → logprob: -3.4088711738586426
    3. '()' → logprob: -8.5338716506958
    4. ' ' → logprob: -11.0338716506958
    5. '_' → logprob: -11.9088716506958
    6. '(' → logprob: -13.0338716506958
    7. ')' → logprob: -13.4088716506958
    8. ' ()' → logprob: -13.9088716506958
    9. '   ' → logprob: -14.4088716506958
    10. '  ' → logprob: -14.9088716506958

Token 137: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.4740803837776184
    2. ' get' → logprob: -0.9740803837776184
    3. '(get' → logprob: -12.849080085754395
    4. '	get' → logprob: -14.724080085754395
    5. '_get' → logprob: -15.849080085754395
    6. ' ' → logprob: -16.72408103942871
    7. '.get' → logprob: -17.22408103942871
    8. '=get' → logprob: -17.34908103942871
    9. 'input' → logprob: -17.72408103942871
    10. ' input' → logprob: -18.47408103942871

Token 138: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -13.875000953674316
    3. '_in' → logprob: -17.250001907348633
    4. '_value' → logprob: -18.375001907348633
    5. 'input' → logprob: -18.750001907348633
    6. ' _' → logprob: -18.875001907348633
    7. '_user' → logprob: -18.875001907348633
    8. '_output' → logprob: -19.000001907348633
    9. '_Input' → logprob: -19.625001907348633
    10. '_inputs' → logprob: -20.125001907348633

Token 139: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -4.191489642835222e-05
    2. '()
' → logprob: -10.125041961669922
    3. '()

' → logprob: -14.000041961669922
    4. ' ()' → logprob: -14.875041961669922
    5. '()`' → logprob: -15.875041961669922
    6. '()"' → logprob: -16.250041961669922
    7. '().' → logprob: -16.625041961669922
    8. '()\' → logprob: -16.750041961669922
    9. '_' → logprob: -17.125041961669922
    10. '()<' → logprob: -17.375041961669922

Token 140: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004395459778606892
    2. '
' → logprob: -7.004395484924316
    3. 'result' → logprob: -7.004395484924316
    4. 'current' → logprob: -7.379395484924316
    5. ' result' → logprob: -7.629395484924316
    6. ' current' → logprob: -7.879395484924316
    7. ' initial' → logprob: -7.879395484924316
    8. 'initial' → logprob: -8.254395484924316
    9. 'tom' → logprob: -8.629395484924316
    10. '    
' → logprob: -9.629395484924316

Token 141: ' initial' (ID: 4871)
  Prédit: 'tom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tom' → logprob: -1.4035228490829468
    2. ' initial' → logprob: -1.6535228490829468
    3. 'result' → logprob: -1.9035228490829468
    4. 'initial' (adapté à ' initial') → logprob: -1.9035228490829468
    5. ' next' → logprob: -2.2785229682922363
    6. 'next' → logprob: -2.7785229682922363
    7. ' result' → logprob: -2.9035229682922363
    8. 'current' → logprob: -4.778522968292236
    9. ' tomorrow' → logprob: -4.778522968292236
    10. ' tom' → logprob: -4.903522968292236

Token 142: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.908022285439074e-05
    2. '_' → logprob: -9.875059127807617
    3. '_val' → logprob: -12.000059127807617
    4. 'value' → logprob: -14.625059127807617
    5. '=_' → logprob: -15.000059127807617
    6. '=' → logprob: -15.625059127807617
    7. '_input' → logprob: -15.750059127807617
    8. ' =' → logprob: -16.000059127807617
    9. ' _' → logprob: -17.250059127807617
    10. '_Value' → logprob: -17.500059127807617

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269402801990509
    2. '=' → logprob: -2.1269402503967285
    3. ' ' → logprob: -11.376940727233887
    4. '_' → logprob: -14.626940727233887
    5. ' ' → logprob: -15.876940727233887
    6. '  ' → logprob: -17.12693977355957
    7. '()' → logprob: -17.37693977355957
    8. ')' → logprob: -17.50193977355957
    9. '_=' → logprob: -17.87693977355957
    10. '   ' → logprob: -18.12693977355957

Token 144: ' get' (ID: 717)
  Prédit: ' get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.011054771952331066
    2. 'get' → logprob: -4.511054992675781
    3. ' '' → logprob: -12.136054992675781
    4. ' ' → logprob: -14.136054992675781
    5. ''' → logprob: -15.136054992675781
    6. '	get' → logprob: -15.761054992675781
    7. '(get' → logprob: -15.761054992675781
    8. '_get' → logprob: -16.26105499267578
    9. ' ' → logprob: -16.51105499267578
    10. '[get' → logprob: -16.88605499267578

Token 145: '_initial' (ID: 45740)
  Prédit: '_initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_initial' → logprob: -7.896309739408025e-07
    2. 'initial' → logprob: -14.625000953674316
    3. '_input' → logprob: -15.375000953674316
    4. '_INITIAL' → logprob: -17.25
    5. '_value' → logprob: -17.875
    6. '_init' → logprob: -18.125
    7. '_initialized' → logprob: -18.75
    8. '_in' → logprob: -19.375
    9. '_initializer' → logprob: -19.5
    10. 'Initial' → logprob: -19.75

Token 146: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -7.896309739408025e-07
    2. '_val' → logprob: -14.250000953674316
    3. 'value' → logprob: -17.875
    4. '_' → logprob: -18.25
    5. '_VALUE' → logprob: -19.25
    6. '_Value' → logprob: -19.25
    7. '_values' → logprob: -19.75
    8. ' _' → logprob: -20.875
    9. 'Value' → logprob: -21.125
    10. 'alue' → logprob: -21.25

Token 147: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4328131675720215
    2. '   ' → logprob: -1.0578131675720215
    3. 'result' → logprob: -6.1828131675720215
    4. '    
' → logprob: -6.9328131675720215
    5. '<|end|>' → logprob: -7.8078131675720215
    6. '()
' → logprob: -8.55781364440918
    7. '<|end|>' → logprob: -9.18281364440918
    8. '  
' → logprob: -9.30781364440918
    9. ' result' → logprob: -9.55781364440918
    10. '
' → logprob: -9.68281364440918

Token 148: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4779427647590637
    2. '
' → logprob: -0.9779427647590637
    3. 'result' → logprob: -6.352942943572998
    4. '    
' → logprob: -7.102942943572998
    5. 'tom' → logprob: -7.477942943572998
    6. ' result' → logprob: -7.727942943572998
    7. '
' → logprob: -9.10294246673584
    8. ' tom' → logprob: -9.85294246673584
    9. '```' → logprob: -10.60294246673584
    10. ' next' → logprob: -11.22794246673584

Token 149: ' tom' (ID: 6784)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.45242321491241455
    2. 'tom' (adapté à ' tom') → logprob: -1.3274232149124146
    3. 'next' → logprob: -2.702423095703125
    4. ' result' → logprob: -4.452423095703125
    5. '   ' → logprob: -4.702423095703125
    6. ' next' → logprob: -4.952423095703125
    7. ' tom' → logprob: -6.577423095703125
    8. 't' → logprob: -7.202423095703125
    9. 'new' → logprob: -7.702423095703125
    10. ' tomorrow' → logprob: -7.952423095703125

Token 150: ' =' (ID: 314)
  Prédit: '_value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.703222393989563
    2. '_result' → logprob: -0.703222393989563
    3. ' =' → logprob: -5.203222274780273
    4. '_output' → logprob: -5.828222274780273
    5. '_input' → logprob: -6.953222274780273
    6. '_val' → logprob: -7.703222274780273
    7. '=' → logprob: -9.078222274780273
    8. '_' → logprob: -10.953222274780273
    9. '_res' → logprob: -11.703222274780273
    10. '_out' → logprob: -11.828222274780273

Token 151: ' determine' (ID: 11433)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.16023407876491547
    2. ' determine' → logprob: -1.9102340936660767
    3. '(det' → logprob: -12.660234451293945
    4. ' det' → logprob: -12.785234451293945
    5. 'determ' → logprob: -13.535234451293945
    6. '.det' → logprob: -13.785234451293945
    7. '   ' → logprob: -13.910234451293945
    8. '_det' → logprob: -14.535234451293945
    9. ' ' → logprob: -16.160234451293945
    10. ' determ' → logprob: -16.910234451293945

Token 152: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -6.73052782076411e-05
    2. '_' → logprob: -9.625067710876465
    3. ' _' → logprob: -14.125067710876465
    4. '_to' → logprob: -16.00006675720215
    5. '(_' → logprob: -17.12506675720215
    6. '```' → logprob: -17.37506675720215
    7. '('_' → logprob: -17.50006675720215
    8. 'tom' → logprob: -17.62506675720215
    9. 't' → logprob: -17.62506675720215
    10. ' ' → logprob: -18.00006675720215

Token 153: 'om' (ID: 310)
  Prédit: 'om'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'om' → logprob: -0.017859820276498795
    2. 'tom' → logprob: -4.642859935760498
    3. '_t' → logprob: -4.892859935760498
    4. 't' → logprob: -8.76785945892334
    5. 'o' → logprob: -8.76785945892334
    6. '_' → logprob: -9.26785945892334
    7. 'omo' → logprob: -10.26785945892334
    8. 'omar' → logprob: -10.39285945892334
    9. 'ot' → logprob: -11.64285945892334
    10. 'ом' → logprob: -11.76785945892334

Token 154: '(user' (ID: 7195)
  Prédit: '(user'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(user' → logprob: -0.005248937290161848
    2. '(' → logprob: -5.2552490234375
    3. '(
' → logprob: -11.5052490234375
    4. '(u' → logprob: -13.5052490234375
    5. '(t' → logprob: -13.7552490234375
    6. '(us' → logprob: -13.8802490234375
    7. 'user' → logprob: -14.1302490234375
    8. '(use' → logprob: -15.0052490234375
    9. '(input' → logprob: -15.8802490234375
    10. ' (' → logprob: -16.0052490234375

Token 155: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.6240566083070007e-06
    2. 'input' → logprob: -13.500001907348633
    3. 'Input' → logprob: -15.750001907348633
    4. '_inputs' → logprob: -17.750001907348633
    5. '_INPUT' → logprob: -18.000001907348633
    6. '-input' → logprob: -18.750001907348633
    7. '_Input' → logprob: -18.875001907348633
    8. 'put' → logprob: -19.000001907348633
    9. ' input' → logprob: -19.000001907348633
    10. '(input' → logprob: -19.000001907348633

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5048530030981055e-06
    2. ' ,' → logprob: -13.750001907348633
    3. ')' → logprob: -16.000001907348633
    4. ',
' → logprob: -16.250001907348633
    5. '‌,' → logprob: -16.750001907348633
    6. ' ' → logprob: -16.750001907348633
    7. '```' → logprob: -18.375001907348633
    8. '   ' → logprob: -18.625001907348633
    9. 'initial' → logprob: -18.750001907348633
    10. ',

' → logprob: -19.000001907348633

Token 157: ' initial' (ID: 4871)
  Prédit: ' initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.014176084659993649
    2. 'initial' → logprob: -4.264175891876221
    3. '(initial' → logprob: -12.014176368713379
    4. ')' → logprob: -13.139176368713379
    5. '_initial' → logprob: -13.264176368713379
    6. ' ' → logprob: -14.014176368713379
    7. '	initial' → logprob: -14.139176368713379
    8. ' ' → logprob: -15.014176368713379
    9. ' )' → logprob: -15.264176368713379
    10. '.initial' → logprob: -15.514176368713379

Token 158: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -4.723352049040841e-06
    2. '_' → logprob: -12.375004768371582
    3. '_val' → logprob: -15.375004768371582
    4. 'value' → logprob: -16.125003814697266
    5. ' _' → logprob: -17.250003814697266
    6. ' value' → logprob: -19.000003814697266
    7. 'alue' → logprob: -19.125003814697266
    8. '_v' → logprob: -19.875003814697266
    9. '_VALUE' → logprob: -20.125003814697266
    10. '_Value' → logprob: -20.250003814697266

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001234428636962548
    2. ')
' → logprob: -9.000123023986816
    3. ' )' → logprob: -17.000123977661133
    4. ')

' → logprob: -18.125123977661133
    5. '   ' → logprob: -18.625123977661133
    6. ')
' → logprob: -19.250123977661133
    7. '),' → logprob: -19.875123977661133
    8. ' ' → logprob: -20.250123977661133
    9. ')#' → logprob: -20.375123977661133
    10. ')return' → logprob: -21.250123977661133

Token 160: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14770621061325073
    2. '   ' → logprob: -2.0227062702178955
    3. 'output' → logprob: -5.522706031799316
    4. '    
' → logprob: -7.522706031799316
    5. '  
' → logprob: -8.772706031799316
    6. '<|end|>' → logprob: -9.272706031799316
    7. ' output' → logprob: -9.772706031799316
    8. '
' → logprob: -10.147706031799316
    9. '	output' → logprob: -10.272706031799316
    10. ' 
' → logprob: -10.772706031799316

Token 161: ' output' (ID: 4733)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' (adapté à ' output') → logprob: -0.0005052540800534189
    2. ' output' → logprob: -7.875505447387695
    3. '   ' → logprob: -9.000505447387695
    4. '
' → logprob: -14.000505447387695
    5. '	output' → logprob: -14.250505447387695
    6. '_output' → logprob: -15.875505447387695
    7. ' ' → logprob: -16.500505447387695
    8. '  ' → logprob: -17.125505447387695
    9. 'Output' → logprob: -17.250505447387695
    10. '(output' → logprob: -17.375505447387695

Token 162: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.5048530030981055e-06
    2. '_' → logprob: -14.000001907348633
    3. '_results' → logprob: -15.625001907348633
    4. ' _' → logprob: -16.250001907348633
    5. '_res' → logprob: -16.250001907348633
    6. '_Result' → logprob: -16.375001907348633
    7. '_output' → logprob: -16.500001907348633
    8. '_RESULT' → logprob: -17.375001907348633
    9. 'result' → logprob: -17.750001907348633
    10. '_value' → logprob: -18.375001907348633

Token 163: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.008617766201496124
    2. '(' → logprob: -4.758617877960205
    3. '(
' → logprob: -13.133617401123047
    4. ' (' → logprob: -14.258617401123047
    5. '(todo' → logprob: -16.008617401123047
    6. '(

' → logprob: -16.133617401123047
    7. '(s' → logprob: -16.258617401123047
    8. '(T' → logprob: -16.508617401123047
    9. '()' → logprob: -17.133617401123047
    10. '(to' → logprob: -17.258617401123047

Token 164: 'om' (ID: 310)
  Prédit: 'om'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'om' → logprob: -3.47626737493556e-05
    2. 'tom' → logprob: -10.75003433227539
    3. 'o' → logprob: -11.75003433227539
    4. 'm' → logprob: -12.50003433227539
    5. ')' → logprob: -14.62503433227539
    6. ' om' → logprob: -15.62503433227539
    7. ''om' → logprob: -15.87503433227539
    8. '(' → logprob: -16.25003433227539
    9. '   ' → logprob: -16.50003433227539
    10. ',' → logprob: -16.75003433227539

Token 165: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.65707261255011e-06
    2. ')
' → logprob: -11.750008583068848
    3. ' )' → logprob: -14.875008583068848
    4. '()' → logprob: -15.000008583068848
    5. ')

' → logprob: -17.625009536743164
    6. ')`' → logprob: -18.125009536743164
    7. '())' → logprob: -18.500009536743164
    8. '))' → logprob: -18.750009536743164
    9. '(' → logprob: -19.375009536743164
    10. '')' → logprob: -19.875009536743164

Token 166: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0019408921943977475
    2. 'main' → logprob: -7.001940727233887
    3. '
' → logprob: -7.251940727233887
    4. '\n' → logprob: -8.251940727233887
    5. '```' → logprob: -11.001940727233887
    6. '\' → logprob: -11.126940727233887
    7. '#' → logprob: -11.376940727233887
    8. ' if' → logprob: -11.626940727233887
    9. '<|end|>' → logprob: -12.876940727233887
    10. 'print' → logprob: -13.501940727233887

Token 167: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5736851692199707
    2. '(' → logprob: -1.5736851692199707
    3. '
' → logprob: -2.0736851692199707
    4. '#' → logprob: -3.0736851692199707
    5. '<|end|>' → logprob: -3.6986851692199707
    6. '```' → logprob: -4.573685169219971
    7. '\n' → logprob: -4.823685169219971
    8. 'newline' → logprob: -5.698685169219971
    9. '()
' → logprob: -5.823685169219971
    10. '(
' → logprob: -5.823685169219971


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 165
Tokens correctement prédits (1ère position, stricte): 77
Tokens correctement prédits (1ère position, avec adaptation): 83
Tokens correctement prédits (top 10): 145
Précision stricte (1ère position): 46.67%
Précision adaptée (1ère position): 50.30%
Précision (top 10): 87.88%
================================================================================
