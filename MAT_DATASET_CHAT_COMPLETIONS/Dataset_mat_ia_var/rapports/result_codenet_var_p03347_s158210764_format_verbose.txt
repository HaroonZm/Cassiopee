================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:18:44
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
number_of_elements = int(input())

sequence_of_integers = [0] * number_of_elements

for current_index in range(number_of_elements):
    sequence_of_integers[current_index] = int(input())

is_solution_possible = 1

if sequence_of_integers[0] != 0:
    is_solution_possible = 0

total_operations = 0

for index in range(1, number_of_elements):
    difference_with_previous = sequence_of_integers[index] - sequence_of_integers[index - 1]
    
    if difference_with_previous > 1:
        if sequence_of_integers[index] != 0:
            is_solution_possible = 0
            break
    
    elif difference_with_previous == 1:
        total_operations += 1
    
    else:
        total_operations += sequence_of_integers[index]

if is_solution_possible:
    print(total_operations)
else:
    print(-1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'number' (ID: 8096)
  → Token d'amorce (pas de prédiction)

Token 1: '_of' (ID: 8023)
  → Token d'amorce (pas de prédiction)

Token 2: '_elements' (ID: 53344)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0034450457897037268
    2. '=' → logprob: -6.753445148468018
    3. '[' → logprob: -6.753445148468018
    4. '```' → logprob: -7.503445148468018
    5. ')' → logprob: -9.25344467163086
    6. 's' → logprob: -9.50344467163086
    7. '.' → logprob: -9.87844467163086
    8. ' _' → logprob: -9.87844467163086
    9. '_=' → logprob: -10.25344467163086
    10. ' =' → logprob: -10.25344467163086

Token 4: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006043385714292526
    2. '0' → logprob: -5.381043434143066
    3. '10' → logprob: -6.756043434143066
    4. '32' → logprob: -9.256043434143066
    5. '1' → logprob: -10.631043434143066
    6. ' len' → logprob: -10.756043434143066
    7. ' )' → logprob: -11.131043434143066
    8. '20' → logprob: -11.131043434143066
    9. '5' → logprob: -11.256043434143066
    10. ' "' → logprob: -11.881043434143066

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006741895340383053
    2. '```' → logprob: -8.3756742477417
    3. ''' → logprob: -8.6256742477417
    4. '`' → logprob: -9.0006742477417
    5. '_' → logprob: -10.3756742477417
    6. '('' → logprob: -10.6256742477417
    7. '("("' → logprob: -10.8756742477417
    8. '(
' → logprob: -11.0006742477417
    9. ')' → logprob: -11.5006742477417
    10. ' (' → logprob: -11.7506742477417

Token 6: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.24713969230651855
    2. ')' → logprob: -1.6221396923065186
    3. '()' → logprob: -4.372139930725098
    4. '())' → logprob: -5.247139930725098
    5. '(
' → logprob: -7.247139930725098
    6. '('' → logprob: -7.247139930725098
    7. '```' → logprob: -8.247139930725098
    8. '")' → logprob: -8.747139930725098
    9. '(()' → logprob: -8.872139930725098
    10. '("("' → logprob: -8.872139930725098

Token 7: 'sequence' (ID: 47173)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3400064706802368
    2. '*' → logprob: -1.9650064706802368
    3. ')' → logprob: -2.0900063514709473
    4. '#' → logprob: -2.2150063514709473
    5. ' ' → logprob: -2.2150063514709473
    6. '[' → logprob: -2.7150063514709473
    7. 'if' → logprob: -3.0900063514709473
    8. 'i' → logprob: -3.7150063514709473
    9. '+' → logprob: -3.7150063514709473
    10. '=' → logprob: -4.090006351470947

Token 8: '_of' (ID: 8023)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1289021223783493
    2. '.' → logprob: -2.7539021968841553
    3. ' =' → logprob: -4.003901958465576
    4. '.append' → logprob: -4.378901958465576
    5. '_' → logprob: -4.503901958465576
    6. '=' → logprob: -5.378901958465576
    7. '[:]' → logprob: -5.503901958465576
    8. '[]' → logprob: -6.128901958465576
    9. 's' → logprob: -7.378901958465576
    10. ')' → logprob: -8.128902435302734

Token 9: '_in' (ID: 2267)
  Prédit: '_elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.1386927366256714
    2. '_' → logprob: -2.388692855834961
    3. '_numbers' → logprob: -3.388692855834961
    4. '_values' → logprob: -5.888692855834961
    5. '_tokens' → logprob: -7.763692855834961
    6. '_items' → logprob: -8.388692855834961
    7. '_sequence' → logprob: -9.013692855834961
    8. '_number' → logprob: -9.263692855834961
    9. '_words' → logprob: -9.263692855834961
    10. '_strings' → logprob: -9.888692855834961

Token 10: 'te' (ID: 411)
  Prédit: 'puts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'puts' → logprob: -0.5133323669433594
    2. 'te' → logprob: -1.5133323669433594
    3. 't' → logprob: -2.0133323669433594
    4. 'put' → logprob: -3.1383323669433594
    5. '_elements' → logprob: -6.513332366943359
    6. 'ts' → logprob: -7.013332366943359
    7. 'p' → logprob: -7.138332366943359
    8. '_put' → logprob: -7.638332366943359
    9. 'teger' → logprob: -8.76333236694336
    10. '_' → logprob: -9.01333236694336

Token 11: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -0.0009371895575895905
    2. 'rs' → logprob: -7.125936985015869
    3. 'ers' → logprob: -9.750937461853027
    4. '```' → logprob: -10.000937461853027
    5. 'gr' → logprob: -11.625937461853027
    6. 'r' → logprob: -12.000937461853027
    7. 'g' → logprob: -12.750937461853027
    8. 'ger' → logprob: -12.875937461853027
    9. 'gars' → logprob: -13.375937461853027
    10. '   ' → logprob: -13.750937461853027

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9576828479766846
    2. ' =' → logprob: -1.2076828479766846
    3. '=' → logprob: -1.7076828479766846
    4. '.' → logprob: -2.8326828479766846
    5. '.append' → logprob: -2.9576828479766846
    6. '[]' → logprob: -5.0826826095581055
    7. '=[]' → logprob: -5.4576826095581055
    8. '[:]' → logprob: -5.5826826095581055
    9. '[input' → logprob: -5.8326826095581055
    10. '```' → logprob: -6.3326826095581055

Token 13: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.14347843825817108
    2. ' []' → logprob: -2.3934783935546875
    3. 'list' → logprob: -3.2684783935546875
    4. ' [' → logprob: -5.8934783935546875
    5. '[]' → logprob: -6.6434783935546875
    6. '[list' → logprob: -9.393478393554688
    7. '[' → logprob: -10.143478393554688
    8. '[input' → logprob: -10.268478393554688
    9. ' input' → logprob: -10.393478393554688
    10. ' ' → logprob: -10.768478393554688

Token 14: '0' (ID: 15)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.04101017490029335
    2. '0' → logprob: -3.4160101413726807
    3. ')' → logprob: -5.66601037979126
    4. ']int' → logprob: -6.66601037979126
    5. ']' → logprob: -6.91601037979126
    6. ' int' → logprob: -7.29101037979126
    7. 'input' → logprob: -7.66601037979126
    8. 'i' → logprob: -8.416009902954102
    9. '(int' → logprob: -10.166009902954102
    10. ' ]' → logprob: -10.166009902954102

Token 15: ']' (ID: 60)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4763616919517517
    2. ']' → logprob: -0.9763616919517517
    3. ' ]' → logprob: -6.6013617515563965
    4. ' ,' → logprob: -8.226361274719238
    5. ')' → logprob: -8.976361274719238
    6. ' for' → logprob: -9.101361274719238
    7. '<|end|>' → logprob: -9.101361274719238
    8. ',
' → logprob: -9.476361274719238
    9. ')]' → logprob: -10.101361274719238
    10. 'for' → logprob: -10.476361274719238

Token 16: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8152574300765991
    2. ' for' → logprob: -1.8152574300765991
    3. '*' → logprob: -2.1902575492858887
    4. ',' → logprob: -2.3152575492858887
    5. '[' → logprob: -2.5652575492858887
    6. 'for' → logprob: -3.5652575492858887
    7. ')' → logprob: -3.8152575492858887
    8. '<|end|>' → logprob: -4.190257549285889
    9. '0' → logprob: -4.690257549285889
    10. ' ]' → logprob: -5.065257549285889

Token 17: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.03805067762732506
    2. ' number' → logprob: -3.288050651550293
    3. '(number' → logprob: -12.288050651550293
    4. ' ' → logprob: -13.288050651550293
    5. 'n' → logprob: -13.788050651550293
    6. 'num' → logprob: -14.038050651550293
    7. '[number' → logprob: -15.163050651550293
    8. ' (' → logprob: -16.03805160522461
    9. '	number' → logprob: -16.03805160522461
    10. ' n' → logprob: -16.16305160522461

Token 18: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0001733855315251276
    2. '_o' → logprob: -9.250173568725586
    3. '_' → logprob: -10.375173568725586
    4. ' _' → logprob: -11.250173568725586
    5. 'of' → logprob: -11.875173568725586
    6. '[' → logprob: -12.000173568725586
    7. '[_' → logprob: -12.750173568725586
    8. '```' → logprob: -12.875173568725586
    9. '_or' → logprob: -13.125173568725586
    10. '_OF' → logprob: -13.500173568725586

Token 19: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.00562004279345274
    2. 'elements' → logprob: -5.380620002746582
    3. 'lements' → logprob: -8.130620002746582
    4. 'ele' → logprob: -8.255620002746582
    5. '_e' → logprob: -9.005620002746582
    6. '_' → logprob: -9.005620002746582
    7. 'el' → logprob: -10.005620002746582
    8. 'le' → logprob: -10.005620002746582
    9. '_ele' → logprob: -10.130620002746582
    10. 'e' → logprob: -10.755620002746582

Token 20: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2057037204504013
    2. '\n' → logprob: -2.8307037353515625
    3. '<|end|>' → logprob: -3.3307037353515625
    4. 'for' → logprob: -3.4557037353515625
    5. '[' → logprob: -3.5807037353515625
    6. '#' → logprob: -5.4557037353515625
    7. ' 
' → logprob: -5.7057037353515625
    8. '\' → logprob: -5.8307037353515625
    9. '[
' → logprob: -5.9557037353515625
    10. '```' → logprob: -6.0807037353515625

Token 21: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.886803359724581e-05
    2. ' for' → logprob: -10.250079154968262
    3. 'i' → logprob: -10.375079154968262
    4. '
' → logprob: -12.500079154968262
    5. 'n' → logprob: -12.750079154968262
    6. 'f' → logprob: -12.750079154968262
    7. '#' → logprob: -13.875079154968262
    8. 'number' → logprob: -14.875079154968262
    9. 'index' → logprob: -15.375079154968262
    10. '```' → logprob: -15.875079154968262

Token 22: ' current' (ID: 2208)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.056250136345624924
    2. ' i' → logprob: -2.9312500953674316
    3. '  ' → logprob: -6.681250095367432
    4. '_' → logprob: -10.43125057220459
    5. 'i' → logprob: -10.55625057220459
    6. ' ‌' → logprob: -10.55625057220459
    7. ' _' → logprob: -11.30625057220459
    8. ' space' → logprob: -12.80625057220459
    9. ' ▁' → logprob: -12.93125057220459
    10. ' element' → logprob: -13.18125057220459

Token 23: '_index' (ID: 7748)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.041828516870737076
    2. ' ' → logprob: -3.4168286323547363
    3. ' _' → logprob: -4.916828632354736
    4. '_space' → logprob: -7.916828632354736
    5. '  ' → logprob: -9.666828155517578
    6. '_s' → logprob: -9.791828155517578
    7. '_number' → logprob: -9.791828155517578
    8. '_element' → logprob: -9.916828155517578
    9. '_token' → logprob: -10.166828155517578
    10. '_index' → logprob: -10.541828155517578

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005164854694157839
    2. 'in' → logprob: -5.630164623260498
    3. ' ' → logprob: -6.630164623260498
    4. '<|end|>' → logprob: -8.880165100097656
    5. '  ' → logprob: -10.505165100097656
    6. ' +=' → logprob: -11.005165100097656
    7. ' =' → logprob: -11.380165100097656
    8. '+' → logprob: -11.630165100097656
    9. ' <' → logprob: -12.255165100097656
    10. ' ,' → logprob: -12.380165100097656

Token 25: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0017477693036198616
    2. ' ' → logprob: -6.8767476081848145
    3. 'range' → logprob: -7.2517476081848145
    4. '	range' → logprob: -12.501748085021973
    5. '  ' → logprob: -13.751748085021973
    6. ' xrange' → logprob: -14.251748085021973
    7. '(range' → logprob: -16.001747131347656
    8. ' ' → logprob: -16.626747131347656
    9. '_range' → logprob: -16.751747131347656
    10. ' space' → logprob: -18.001747131347656

Token 26: '(number' (ID: 32955)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023304294794797897
    2. '(number' → logprob: -3.7733042240142822
    3. '(len' → logprob: -10.898303985595703
    4. '(current' → logprob: -10.898303985595703
    5. '(n' → logprob: -11.648303985595703
    6. '(
' → logprob: -12.523303985595703
    7. ' (' → logprob: -12.773303985595703
    8. '(length' → logprob: -13.148303985595703
    9. '(num' → logprob: -13.273303985595703
    10. '(

' → logprob: -14.148303985595703

Token 27: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.981667537620524e-06
    2. 'of' → logprob: -14.125001907348633
    3. '_o' → logprob: -14.125001907348633
    4. '_' → logprob: -15.000001907348633
    5. '__' → logprob: -16.875001907348633
    6. '_for' → logprob: -17.500001907348633
    7. '_or' → logprob: -17.500001907348633
    8. ' _' → logprob: -17.750001907348633
    9. '_OF' → logprob: -18.000001907348633
    10. '___' → logprob: -18.500001907348633

Token 28: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.0007475639577023685
    2. '_' → logprob: -7.3757476806640625
    3. '_le' → logprob: -10.250747680664062
    4. ' _' → logprob: -10.750747680664062
    5. 'lements' → logprob: -10.750747680664062
    6. '_e' → logprob: -11.500747680664062
    7. '```' → logprob: -11.625747680664062
    8. '_s' → logprob: -12.250747680664062
    9. '_ELEMENTS' → logprob: -13.000747680664062
    10. ')_' → logprob: -13.250747680664062

Token 29: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02878902480006218
    2. ')' → logprob: -3.7787890434265137
    3. ':' → logprob: -5.528789043426514
    4. '+' → logprob: -6.528789043426514
    5. ']:' → logprob: -10.528788566589355
    6. '+:' → logprob: -10.653788566589355
    7. ' ):' → logprob: -11.403788566589355
    8. '):
' → logprob: -11.778788566589355
    9. ' +' → logprob: -12.278788566589355
    10. '```' → logprob: -12.528788566589355

Token 30: '   ' (ID: 271)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.29092609882354736
    2. '   ' → logprob: -1.5409260988235474
    3. 'sequence' → logprob: -3.665925979614258
    4. ' ' → logprob: -6.040925979614258
    5. '(sequence' → logprob: -6.040925979614258
    6. '    ' → logprob: -6.415925979614258
    7. ' input' → logprob: -6.415925979614258
    8. ' space' → logprob: -6.790925979614258
    9. ' )' → logprob: -7.415925979614258
    10. ' ,' → logprob: -7.790925979614258

Token 31: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.10146039724349976
    2. 'sequence' (adapté à ' sequence') → logprob: -2.3514604568481445
    3. ' ' → logprob: -7.8514604568481445
    4. ' space' → logprob: -7.9764604568481445
    5. 'space' → logprob: -8.851460456848145
    6. ' input' → logprob: -9.351460456848145
    7. ' current' → logprob: -9.476460456848145
    8. ' number' → logprob: -10.226460456848145
    9. '   ' → logprob: -10.351460456848145
    10. '    ' → logprob: -10.476460456848145

Token 32: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0001227276516146958
    2. '_' → logprob: -10.000123023986816
    3. '[' → logprob: -10.375123023986816
    4. '[current' → logprob: -11.000123023986816
    5. '[_' → logprob: -11.250123023986816
    6. '_for' → logprob: -11.625123023986816
    7. '_[' → logprob: -13.250123023986816
    8. '```' → logprob: -13.500123023986816
    9. '   ' → logprob: -14.375123023986816
    10. '_sequence' → logprob: -14.500123023986816

Token 33: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -9.376848902320489e-05
    2. '_' → logprob: -10.125093460083008
    3. 'inte' → logprob: -10.375093460083008
    4. '_elements' → logprob: -10.875093460083008
    5. '_integer' → logprob: -13.875093460083008
    6. '_int' → logprob: -14.000093460083008
    7. 's' → logprob: -14.875093460083008
    8. '_inter' → logprob: -15.250093460083008
    9. '[in' → logprob: -15.625093460083008
    10. '_numbers' → logprob: -15.750093460083008

Token 34: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -2.9160102712921798e-05
    2. 't' → logprob: -10.750029563903809
    3. 'teg' → logprob: -13.000029563903809
    4. 'tegr' → logprob: -13.250029563903809
    5. 'teger' → logprob: -13.625029563903809
    6. 'eg' → logprob: -14.375029563903809
    7. '[' → logprob: -14.500029563903809
    8. 'e' → logprob: -14.875029563903809
    9. '­te' → logprob: -15.375029563903809
    10. '_te' → logprob: -15.375029563903809

Token 35: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -1.6166903151315637e-05
    2. 'gr' → logprob: -11.625016212463379
    3. 'ger' → logprob: -12.625016212463379
    4. 'g' → logprob: -13.750016212463379
    5. 'ers' → logprob: -14.125016212463379
    6. 'rs' → logprob: -14.625016212463379
    7. '_g' → logprob: -14.625016212463379
    8. '_' → logprob: -14.750016212463379
    9. '```' → logprob: -15.125016212463379
    10. '_gr' → logprob: -16.000015258789062

Token 36: '[current' (ID: 49470)
  Prédit: '[current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[current' → logprob: -0.1602698415517807
    2. '[' → logprob: -1.910269856452942
    3. '[cur' → logprob: -11.285269737243652
    4. '[...]' → logprob: -12.035269737243652
    5. ' [' → logprob: -12.535269737243652
    6. '[user' → logprob: -12.660269737243652
    7. '[input' → logprob: -12.660269737243652
    8. '\[' → logprob: -12.660269737243652
    9. '```' → logprob: -12.785269737243652
    10. '[
' → logprob: -13.285269737243652

Token 37: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -5.1928003813372925e-05
    2. '_' → logprob: -10.125051498413086
    3. ']_' → logprob: -12.500051498413086
    4. ' _' → logprob: -12.625051498413086
    5. '_x' → logprob: -13.875051498413086
    6. '_idx' → logprob: -14.625051498413086
    7. '_ex' → logprob: -15.000051498413086
    8. ')_' → logprob: -15.125051498413086
    9. '```' → logprob: -15.125051498413086
    10. '_number' → logprob: -15.125051498413086

Token 38: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35180070996284485
    2. '=' → logprob: -1.8518006801605225
    3. ']' → logprob: -2.3518006801605225
    4. ')' → logprob: -3.2268006801605225
    5. ' ]' → logprob: -5.726800918579102
    6. ' )' → logprob: -6.976800918579102
    7. ']=' → logprob: -8.476800918579102
    8. ' =)' → logprob: -8.851800918579102
    9. ')=' → logprob: -9.226800918579102
    10. ' +=' → logprob: -10.101800918579102

Token 39: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5761944055557251
    2. ' =' → logprob: -0.8261944055557251
    3. ' +=' → logprob: -9.076194763183594
    4. ' ' → logprob: -10.326194763183594
    5. 'space' → logprob: -10.701194763183594
    6. '=input' → logprob: -11.326194763183594
    7. '+=' → logprob: -11.451194763183594
    8. '[' → logprob: -11.576194763183594
    9. ')' → logprob: -11.701194763183594
    10. '<|end|>' → logprob: -11.826194763183594

Token 40: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10020861029624939
    2. ' int' → logprob: -2.3502085208892822
    3. '<int' → logprob: -14.225208282470703
    4. '(int' → logprob: -14.600208282470703
    5. '[int' → logprob: -14.600208282470703
    6. '=int' → logprob: -15.350208282470703
    7. 'input' → logprob: -16.600208282470703
    8. '```' → logprob: -16.975208282470703
    9. 'in' → logprob: -17.850208282470703
    10. ':int' → logprob: -17.975208282470703

Token 41: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20143254101276398
    2. '(input' → logprob: -1.7014325857162476
    3. ' (' → logprob: -11.701432228088379
    4. '(
' → logprob: -12.326432228088379
    5. '(

' → logprob: -13.326432228088379
    6. '("("' → logprob: -14.076432228088379
    7. '('' → logprob: -14.451432228088379
    8. 'input' → logprob: -14.701432228088379
    9. '(i' → logprob: -14.951432228088379
    10. '(eval' → logprob: -15.076432228088379

Token 42: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.038094162940979004
    2. '()' → logprob: -3.2880940437316895
    3. ')' → logprob: -10.913094520568848
    4. ' ())' → logprob: -11.413094520568848
    5. '()))' → logprob: -11.538094520568848
    6. '(' → logprob: -12.163094520568848
    7. '();)' → logprob: -12.913094520568848
    8. '()]' → logprob: -13.038094520568848
    9. '()`' → logprob: -13.663094520568848
    10. '());' → logprob: -14.413094520568848

Token 43: 'is' (ID: 276)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9373244047164917
    2. 'max' → logprob: -1.0623244047164917
    3. 'print' → logprob: -3.3123245239257812
    4. '[' → logprob: -3.5623245239257812
    5. 'sum' → logprob: -3.5623245239257812
    6. 'i' → logprob: -3.8123245239257812
    7. 'n' → logprob: -4.437324523925781
    8. 's' → logprob: -4.437324523925781
    9. 'if' → logprob: -4.437324523925781
    10. '#' → logprob: -4.562324523925781

Token 44: '_solution' (ID: 127649)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11914771795272827
    2. ' _' → logprob: -2.869147777557373
    3. '_even' → logprob: -4.244147777557373
    4. ' ' → logprob: -4.619147777557373
    5. '_sorted' → logprob: -4.619147777557373
    6. 'sequence' → logprob: -4.869147777557373
    7. '_sequence' → logprob: -5.244147777557373
    8. ' sequence' → logprob: -6.619147777557373
    9. '_valid' → logprob: -6.619147777557373
    10. '_max' → logprob: -7.119147777557373

Token 45: '_possible' (ID: 185849)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7131098508834839
    2. '=' → logprob: -1.2131098508834839
    3. '(' → logprob: -1.8381098508834839
    4. ' =' → logprob: -3.7131099700927734
    5. '_valid' → logprob: -4.213109970092773
    6. '_available' → logprob: -5.463109970092773
    7. '_found' → logprob: -5.963109970092773
    8. '_possible' → logprob: -6.838109970092773
    9. '_correct' → logprob: -6.963109970092773
    10. '_space' → logprob: -7.213109970092773

Token 46: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3608182370662689
    2. ' =' → logprob: -1.8608182668685913
    3. '=' → logprob: -2.1108181476593018
    4. '(' → logprob: -4.860818386077881
    5. '[' → logprob: -4.860818386077881
    6. '_space' → logprob: -5.110818386077881
    7. ' ' → logprob: -6.610818386077881
    8. 'space' → logprob: -7.235818386077881
    9. ')' → logprob: -7.360818386077881
    10. '[:]' → logprob: -7.735818386077881

Token 47: ' ' (ID: 220)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.5328640341758728
    2. ' False' → logprob: -1.1578640937805176
    3. 'False' → logprob: -2.9078640937805176
    4. 'True' → logprob: -3.1578640937805176
    5. ' sequence' → logprob: -6.782864093780518
    6. ' ' → logprob: -8.90786361694336
    7. 'sequence' → logprob: -8.90786361694336
    8. ' all' → logprob: -9.40786361694336
    9. ' len' → logprob: -9.53286361694336
    10. ' any' → logprob: -9.78286361694336

Token 48: '1' (ID: 16)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.10945617407560349
    2. 'True' → logprob: -2.7344560623168945
    3. ' False' → logprob: -3.7344560623168945
    4. 'sequence' → logprob: -5.4844560623168945
    5. ' True' → logprob: -5.6094560623168945
    6. 'number' → logprob: -5.7344560623168945
    7. 'sum' → logprob: -6.8594560623168945
    8. 'any' → logprob: -7.1094560623168945
    9. 'all' → logprob: -7.6094560623168945
    10. '(False' → logprob: -8.359456062316895

Token 49: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2911986708641052
    2. '<|end|>' → logprob: -2.16619873046875
    3. 'for' → logprob: -2.79119873046875
    4. ' for' → logprob: -3.79119873046875
    5. '' → logprob: -4.41619873046875
    6. '\n' → logprob: -4.66619873046875
    7. '```' → logprob: -5.04119873046875
    8. '0' → logprob: -5.16619873046875
    9. '+' → logprob: -5.79119873046875
    10. '#' → logprob: -5.79119873046875

Token 50: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5831958055496216
    2. '
' → logprob: -1.2081958055496216
    3. ' for' → logprob: -2.208195686340332
    4. '\n' → logprob: -4.208195686340332
    5. ' 
' → logprob: -4.958195686340332
    6. 'if' → logprob: -5.583195686340332
    7. ' if' → logprob: -6.083195686340332
    8. '' → logprob: -7.208195686340332
    9. ' ' → logprob: -7.208195686340332
    10. '\' → logprob: -7.583195686340332

Token 51: ' sequence' (ID: 16281)
  Prédit: ' number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.2944898009300232
    2. ' sequence' → logprob: -1.669489860534668
    3. 'number' → logprob: -3.169489860534668
    4. 'sequence' → logprob: -3.794489860534668
    5. ' sum' → logprob: -7.044489860534668
    6. ' ' → logprob: -7.044489860534668
    7. 'sum' → logprob: -8.169489860534668
    8. ' not' → logprob: -9.669489860534668
    9. ' all' → logprob: -10.419489860534668
    10. ' (' → logprob: -10.419489860534668

Token 52: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.0002655079588294029
    2. '[_' → logprob: -8.625265121459961
    3. '_' → logprob: -9.875265121459961
    4. '_for' → logprob: -11.625265121459961
    5. '[' → logprob: -12.125265121459961
    6. '_o' → logprob: -12.375265121459961
    7. ' _' → logprob: -12.625265121459961
    8. '```' → logprob: -12.625265121459961
    9. '__' → logprob: -13.750265121459961
    10. '_[' → logprob: -14.000265121459961

Token 53: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.018555842339992523
    2. '_elements' → logprob: -4.018555641174316
    3. '_' → logprob: -8.393555641174316
    4. '_numbers' → logprob: -10.518555641174316
    5. '_s' → logprob: -10.643555641174316
    6. 's' → logprob: -11.143555641174316
    7. '_int' → logprob: -11.268555641174316
    8. '[current' → logprob: -11.518555641174316
    9. '_integer' → logprob: -11.518555641174316
    10. 'inte' → logprob: -11.518555641174316

Token 54: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.002458652714267373
    2. 't' → logprob: -6.502458572387695
    3. 'elements' → logprob: -7.252458572387695
    4. '_elements' → logprob: -9.002458572387695
    5. 'teger' → logprob: -10.377458572387695
    6. 'e' → logprob: -10.377458572387695
    7. 'eg' → logprob: -10.877458572387695
    8. '_' → logprob: -11.627458572387695
    9. '[' → logprob: -11.752458572387695
    10. '_te' → logprob: -12.127458572387695

Token 55: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -0.009853832423686981
    2. 'gr' → logprob: -4.634853839874268
    3. 'r' → logprob: -10.38485336303711
    4. 'ger' → logprob: -10.75985336303711
    5. 'g' → logprob: -10.88485336303711
    6. '_gr' → logprob: -11.63485336303711
    7. 'rs' → logprob: -12.25985336303711
    8. 'gres' → logprob: -13.13485336303711
    9. '```' → logprob: -13.13485336303711
    10. '[' → logprob: -13.38485336303711

Token 56: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.059987496584653854
    2. '.count' → logprob: -3.8099875450134277
    3. '[current' → logprob: -4.184987545013428
    4. '[-' → logprob: -5.059987545013428
    5. ' ==' → logprob: -5.059987545013428
    6. '[count' → logprob: -5.309987545013428
    7. ':' → logprob: -6.934987545013428
    8. '==' → logprob: -7.184987545013428
    9. ' [' → logprob: -7.934987545013428
    10. '.' → logprob: -8.18498706817627

Token 57: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006184387486428022
    2. ' ' → logprob: -5.1311845779418945
    3. '[' → logprob: -9.506184577941895
    4. 'current' → logprob: -10.006184577941895
    5. '-' → logprob: -10.131184577941895
    6. '1' → logprob: -10.131184577941895
    7. ']' → logprob: -10.756184577941895
    8. '[current' → logprob: -11.381184577941895
    9. '   ' → logprob: -11.756184577941895
    10. ' current' → logprob: -12.006184577941895

Token 58: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.4918684959411621
    2. '>' → logprob: -1.741868495941162
    3. ' ==' → logprob: -2.241868495941162
    4. ' <' → logprob: -3.866868495941162
    5. '==' → logprob: -3.991868495941162
    6. '%' → logprob: -3.991868495941162
    7. ' ' → logprob: -4.241868495941162
    8. ' !=' → logprob: -4.241868495941162
    9. '<' → logprob: -5.366868495941162
    10. ' <=' → logprob: -5.491868495941162

Token 59: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7785546779632568
    2. ' >' → logprob: -1.2785546779632568
    3. ' <=' → logprob: -2.403554677963257
    4. '==' → logprob: -2.903554677963257
    5. '>' → logprob: -3.403554677963257
    6. ' <' → logprob: -3.653554677963257
    7. ' !=' → logprob: -3.653554677963257
    8. ' >=' → logprob: -4.278554916381836
    9. '<' → logprob: -5.403554916381836
    10. '%' → logprob: -5.653554916381836

Token 60: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21071943640708923
    2. '0' → logprob: -1.8357194662094116
    3. '1' → logprob: -3.835719347000122
    4. 'sequence' → logprob: -5.335719585418701
    5. ' sequence' → logprob: -5.585719585418701
    6. ' number' → logprob: -8.710719108581543
    7. 'number' → logprob: -9.085719108581543
    8. ' -' → logprob: -11.085719108581543
    9. '(sequence' → logprob: -11.710719108581543
    10. ' ' → logprob: -11.773219108581543

Token 61: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1870337277650833
    2. '1' → logprob: -2.0620336532592773
    3. 'sequence' → logprob: -3.6870336532592773
    4. ' ' → logprob: -4.062033653259277
    5. ' sequence' → logprob: -7.312033653259277
    6. 'number' → logprob: -8.437033653259277
    7. '-' → logprob: -9.062033653259277
    8. ' -' → logprob: -10.874533653259277
    9. '  ' → logprob: -10.999533653259277
    10. '2' → logprob: -11.624533653259277

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012170211412012577
    2. ' :' → logprob: -6.876216888427734
    3. ' or' → logprob: -9.126216888427734
    4. ' and' → logprob: -9.626216888427734
    5. ':
' → logprob: -12.251216888427734
    6. 'and' → logprob: -13.501216888427734
    7. 'or' → logprob: -13.876216888427734
    8. ':return' → logprob: -14.001216888427734
    9. '   ' → logprob: -14.626216888427734
    10. '):' → logprob: -15.376216888427734

Token 63: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7745236754417419
    2. '   ' → logprob: -0.8995236754417419
    3. '    ' → logprob: -2.7745237350463867
    4. ' :' → logprob: -3.7745237350463867
    5. ' ' → logprob: -4.399523735046387
    6. ' and' → logprob: -4.899523735046387
    7. ' or' → logprob: -4.899523735046387
    8. ':
' → logprob: -5.274523735046387
    9. ' is' → logprob: -5.524523735046387
    10. ' :
' → logprob: -6.149523735046387

Token 64: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.007719016633927822
    2. 'is' (adapté à ' is') → logprob: -5.757719039916992
    3. ' 
' → logprob: -6.257719039916992
    4. '   ' → logprob: -6.507719039916992
    5. '\n' → logprob: -7.507719039916992
    6. '    
' → logprob: -8.757719039916992
    7. '
' → logprob: -9.007719039916992
    8. '```' → logprob: -9.007719039916992
    9. ' \' → logprob: -10.257719039916992
    10. '\' → logprob: -10.257719039916992

Token 65: '_solution' (ID: 127649)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4753760099411011
    2. '_solution' → logprob: -0.9753760099411011
    3. '_s' → logprob: -6.725376129150391
    4. ' _' → logprob: -10.60037612915039
    5. '_sol' → logprob: -11.22537612915039
    6. '_possible' → logprob: -11.35037612915039
    7. '_
' → logprob: -12.35037612915039
    8. '_

' → logprob: -12.35037612915039
    9. '_solver' → logprob: -12.47537612915039
    10. '_failure' → logprob: -12.72537612915039

Token 66: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -3.6550729419104755e-05
    2. '_' → logprob: -10.250036239624023
    3. '_pos' → logprob: -15.375036239624023
    4. '_p' → logprob: -15.500036239624023
    5. '_not' → logprob: -15.625036239624023
    6. '```' → logprob: -16.250036239624023
    7. '__' → logprob: -16.375036239624023
    8. '_=' → logprob: -16.625036239624023
    9. '_available' → logprob: -16.750036239624023
    10. '=_' → logprob: -16.875036239624023

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004122803919017315
    2. '=' → logprob: -5.504122734069824
    3. ' ==' → logprob: -10.379122734069824
    4. ' +=' → logprob: -12.129122734069824
    5. ' ' → logprob: -12.254122734069824
    6. ' |=' → logprob: -13.379122734069824
    7. ' *=' → logprob: -14.504122734069824
    8. ' -=' → logprob: -15.379122734069824
    9. ' &=' → logprob: -15.629122734069824
    10. ' ^=' → logprob: -15.629122734069824

Token 68: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003178306156769395
    2. ' ' → logprob: -5.753178119659424
    3. '1' → logprob: -15.128178596496582
    4. '   ' → logprob: -15.690678596496582
    5. '  ' → logprob: -17.065677642822266
    6. '=' → logprob: -17.128177642822266
    7. 'False' → logprob: -17.440677642822266
    8. ' ' → logprob: -17.565677642822266
    9. '```' → logprob: -18.190677642822266
    10. '۰' → logprob: -18.503177642822266

Token 69: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002619318547658622
    2. ' ' → logprob: -8.250262260437012
    3. 'False' → logprob: -14.875262260437012
    4. '1' → logprob: -15.875262260437012
    5. '   ' → logprob: -16.687761306762695
    6. '  ' → logprob: -16.875261306762695
    7. '-' → logprob: -17.187761306762695
    8. '    ' → logprob: -17.937761306762695
    9. ' ' → logprob: -18.250261306762695
    10. '=' → logprob: -18.437761306762695

Token 70: '

' (ID: 279)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5923347473144531
    2. 'elif' → logprob: -1.5923347473144531
    3. '
' → logprob: -1.7173347473144531
    4. '<|end|>' → logprob: -3.217334747314453
    5. ' else' → logprob: -4.467334747314453
    6. '\n' → logprob: -5.342334747314453
    7. '```' → logprob: -6.092334747314453
    8. ' elif' → logprob: -6.342334747314453
    9. '    
' → logprob: -6.967334747314453
    10. '' → logprob: -7.967334747314453

Token 71: 'total' (ID: 9577)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: '_operations' (ID: 148404)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6505759954452515
    2. '_sum' → logprob: -0.9005759954452515
    3. '_elements' → logprob: -2.775576114654541
    4. '_steps' → logprob: -5.650576114654541
    5. '_count' → logprob: -5.900576114654541
    6. '_number' → logprob: -6.775576114654541
    7. '_distance' → logprob: -8.400575637817383
    8. '_length' → logprob: -8.525575637817383
    9. '_s' → logprob: -8.650575637817383
    10. '_j' → logprob: -8.775575637817383

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010108421556651592
    2. '=' → logprob: -4.635108470916748
    3. ' +=' → logprob: -8.01010799407959
    4. '  ' → logprob: -12.26010799407959
    5. '_' → logprob: -12.38510799407959
    6. ' ' → logprob: -12.76010799407959
    7. '+=' → logprob: -12.88510799407959
    8. '<|end|>' → logprob: -14.01010799407959
    9. '_count' → logprob: -14.38510799407959
    10. '   ' → logprob: -14.63510799407959

Token 74: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4869888424873352
    2. '0' → logprob: -0.9869888424873352
    3. ' sequence' → logprob: -4.6119890213012695
    4. 'sequence' → logprob: -6.1119890213012695
    5. ' number' → logprob: -7.7369890213012695
    6. ' sum' → logprob: -8.98698902130127
    7. 'number' → logprob: -10.48698902130127
    8. ' len' → logprob: -10.48698902130127
    9. 'sum' → logprob: -11.11198902130127
    10. '(sequence' → logprob: -11.48698902130127

Token 75: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07019539922475815
    2. 'sequence' → logprob: -2.695195436477661
    3. ' sequence' → logprob: -8.945195198059082
    4. ' ' → logprob: -9.445195198059082
    5. 'number' → logprob: -11.445195198059082
    6. 'abs' → logprob: -11.695195198059082
    7. 'sum' → logprob: -11.695195198059082
    8. '(sequence' → logprob: -12.070195198059082
    9. 'se' → logprob: -12.445195198059082
    10. '1' → logprob: -13.632695198059082

Token 76: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0710999071598053
    2. '\n' → logprob: -3.1960999965667725
    3. 'for' → logprob: -4.196099758148193
    4. '
' → logprob: -5.571099758148193
    5. ' for' → logprob: -5.571099758148193
    6. '<|end|>' → logprob: -5.821099758148193
    7. '' → logprob: -6.821099758148193
    8. '```' → logprob: -8.071100234985352
    9. '

' → logprob: -8.821100234985352
    10. '+' → logprob: -9.071100234985352

Token 77: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009722061222419143
    2. 'current' → logprob: -7.000972270965576
    3. 'previous' → logprob: -10.375971794128418
    4. '```' → logprob: -11.000971794128418
    5. 'prev' → logprob: -12.000971794128418
    6. 'last' → logprob: -12.250971794128418
    7. ' for' → logprob: -13.750971794128418
    8. 'i' → logprob: -14.625971794128418
    9. 'if' → logprob: -15.625971794128418
    10. 'else' → logprob: -17.000972747802734

Token 78: ' index' (ID: 3472)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.002191779436543584
    2. ' i' → logprob: -6.502191543579102
    3. 'current' → logprob: -7.377191543579102
    4. ' index' → logprob: -10.502191543579102
    5. ' ' → logprob: -11.002191543579102
    6. ' idx' → logprob: -12.377191543579102
    7. 'i' → logprob: -12.502191543579102
    8. '_' → logprob: -12.627191543579102
    9. ' _' → logprob: -13.002191543579102
    10. ' sequence' → logprob: -13.127191543579102

Token 79: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009026017971336842
    2. 'in' → logprob: -4.884026050567627
    3. ' ' → logprob: -6.634026050567627
    4. '	in' → logprob: -9.759025573730469
    5. '   ' → logprob: -11.259025573730469
    6. '  ' → logprob: -11.259025573730469
    7. ',' → logprob: -12.134025573730469
    8. '_' → logprob: -12.384025573730469
    9. '_in' → logprob: -13.384025573730469
    10. ' i' → logprob: -13.634025573730469

Token 80: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1269354522228241
    2. 'range' → logprob: -2.1269354820251465
    3. '   ' → logprob: -12.751935005187988
    4. '	range' → logprob: -13.376935005187988
    5. '(range' → logprob: -13.376935005187988
    6. ' sequence' → logprob: -14.501935005187988
    7. ' ' → logprob: -14.626935005187988
    8. 'sequence' → logprob: -15.251935005187988
    9. '  ' → logprob: -16.751935958862305
    10. ' xrange' → logprob: -16.751935958862305

Token 81: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004204594064503908
    2. '(number' → logprob: -5.504204750061035
    3. '(len' → logprob: -9.004204750061035
    4. ' (' → logprob: -13.004204750061035
    5. 'number' → logprob: -14.879204750061035
    6. '(sequence' → logprob: -15.254204750061035
    7. '(length' → logprob: -16.00420379638672
    8. '(n' → logprob: -16.12920379638672
    9. '(
' → logprob: -16.25420379638672
    10. '1' → logprob: -16.50420379638672

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22575150430202484
    2. 'number' → logprob: -1.600751519203186
    3. 'len' → logprob: -8.850751876831055
    4. ' number' → logprob: -9.225751876831055
    5. ' ' → logprob: -10.725751876831055
    6. '   ' → logprob: -10.725751876831055
    7. '0' → logprob: -10.850751876831055
    8. 'sequence' → logprob: -12.163251876831055
    9. '(' → logprob: -12.225751876831055
    10. 'num' → logprob: -12.288251876831055

Token 83: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.353008499601856e-05
    2. ' ,' → logprob: -9.375093460083008
    3. 'number' → logprob: -11.750093460083008
    4. ' number' → logprob: -15.375093460083008
    5. ',len' → logprob: -15.625093460083008
    6. ' ' → logprob: -16.000093460083008
    7. '   ' → logprob: -17.125093460083008
    8. ',n' → logprob: -17.250093460083008
    9. '_number' → logprob: -17.375093460083008
    10. ',num' → logprob: -17.625093460083008

Token 84: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.014169503934681416
    2. ' number' → logprob: -4.264169692993164
    3. 'len' → logprob: -12.514169692993164
    4. ' len' → logprob: -13.764169692993164
    5. '   ' → logprob: -14.139169692993164
    6. '	number' → logprob: -15.764169692993164
    7. ' ' → logprob: -16.014169692993164
    8. 'n' → logprob: -16.014169692993164
    9. '  ' → logprob: -16.889169692993164
    10. 'num' → logprob: -17.514169692993164

Token 85: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.3663626305060461e-05
    2. '_elements' → logprob: -11.37501335144043
    3. 'of' → logprob: -13.12501335144043
    4. '_' → logprob: -17.37501335144043
    5. '```' → logprob: -17.37501335144043
    6. 'Of' → logprob: -17.87501335144043
    7. ' of' → logprob: -18.75001335144043
    8. '_for' → logprob: -18.87501335144043
    9. '_number' → logprob: -19.00001335144043
    10. '   ' → logprob: -19.87501335144043

Token 86: '_elements' (ID: 53344)
  Prédit: '_elements'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_elements' → logprob: -0.00018339496455155313
    2. 'elements' → logprob: -8.75018310546875
    3. '_of' → logprob: -11.00018310546875
    4. 'lements' → logprob: -12.12518310546875
    5. '_' → logprob: -13.62518310546875
    6. '_ELEMENTS' → logprob: -14.37518310546875
    7. 'Elements' → logprob: -15.12518310546875
    8. '```' → logprob: -15.50018310546875
    9. 'of' → logprob: -15.62518310546875
    10. 's' → logprob: -16.25018310546875

Token 87: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003461444517597556
    2. ')' → logprob: -6.3784613609313965
    3. ':' → logprob: -6.3784613609313965
    4. ' ):' → logprob: -10.378461837768555
    5. '):
' → logprob: -11.128461837768555
    6. ']:' → logprob: -12.628461837768555
    7. '   ' → logprob: -12.628461837768555
    8. ',' → logprob: -13.378461837768555
    9. '}:' → logprob: -13.753461837768555
    10. '+' → logprob: -14.128461837768555

Token 88: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2788011431694031
    2. '   ' → logprob: -1.6538012027740479
    3. ' ' → logprob: -3.778801202774048
    4. '<|end|>' → logprob: -4.403800964355469
    5. ':
' → logprob: -5.778800964355469
    6. ' 
' → logprob: -5.903800964355469
    7. '```' → logprob: -6.028800964355469
    8. ''s' → logprob: -6.528800964355469
    9. ' if' → logprob: -6.778800964355469
    10. '  ' → logprob: -7.278800964355469

Token 89: ' difference' (ID: 9809)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14258025586605072
    2. '   ' → logprob: -2.267580270767212
    3. ' 
' → logprob: -4.142580032348633
    4. '    ' → logprob: -5.642580032348633
    5. '<|end|>' → logprob: -6.142580032348633
    6. '  ' → logprob: -6.267580032348633
    7. ' if' → logprob: -6.267580032348633
    8. '```' → logprob: -7.017580032348633
    9. '    
' → logprob: -7.517580032348633
    10. '   
' → logprob: -7.892580032348633

Token 90: '_with' (ID: 14161)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00266983057372272
    2. '=' → logprob: -6.002669811248779
    3. '_' → logprob: -8.627670288085938
    4. ' ' → logprob: -12.377670288085938
    5. 's' → logprob: -13.502670288085938
    6. '  ' → logprob: -13.627670288085938
    7. ' +=' → logprob: -13.627670288085938
    8. '    ' → logprob: -13.877670288085938
    9. ' _' → logprob: -14.377670288085938
    10. ' =)' → logprob: -14.502670288085938

Token 91: '_previous' (ID: 126212)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.6349921226501465
    2. ' sequence' → logprob: -1.2599921226501465
    3. '_' → logprob: -1.8849921226501465
    4. '_previous' → logprob: -4.2599921226501465
    5. ' =' → logprob: -4.8849921226501465
    6. '=' → logprob: -5.7599921226501465
    7. ' ' → logprob: -6.0099921226501465
    8. '_sequence' → logprob: -6.5099921226501465
    9. '(sequence' → logprob: -6.8849921226501465
    10. 'previous' → logprob: -6.8849921226501465

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006743674166500568
    2. '=' → logprob: -5.006743907928467
    3. ' ' → logprob: -11.256743431091309
    4. '_' → logprob: -11.256743431091309
    5. '    ' → logprob: -14.881743431091309
    6. ' _' → logprob: -15.006743431091309
    7. ' ' → logprob: -15.381743431091309
    8. '>' → logprob: -15.631743431091309
    9. '```' → logprob: -15.881743431091309
    10. '  ' → logprob: -16.131744384765625

Token 93: ' sequence' (ID: 16281)
  Prédit: ' sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -0.0757846087217331
    2. 'sequence' → logprob: -2.700784683227539
    3. ' abs' → logprob: -5.575784683227539
    4. 'abs' → logprob: -6.700784683227539
    5. ' max' → logprob: -7.200784683227539
    6. 'max' → logprob: -10.450784683227539
    7. '(sequence' → logprob: -11.075784683227539
    8. '   ' → logprob: -11.575784683227539
    9. ' ' → logprob: -12.325784683227539
    10. ' ' → logprob: -12.700784683227539

Token 94: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -3.128163257315464e-07
    2. '_' → logprob: -15.125
    3. '_to' → logprob: -19.25
    4. '```' → logprob: -20.125
    5. '_for' → logprob: -20.75
    6. '_in' → logprob: -20.75
    7. '__' → logprob: -21.0
    8. '[' → logprob: -21.375
    9. '_-' → logprob: -21.375
    10. '_OF' → logprob: -21.625

Token 95: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0012811839114874601
    2. 'inte' → logprob: -6.751281261444092
    3. 's' → logprob: -9.751280784606934
    4. '_' → logprob: -10.876280784606934
    5. 'int' → logprob: -12.126280784606934
    6. 'in' → logprob: -12.251280784606934
    7. '_elements' → logprob: -12.501280784606934
    8. '-in' → logprob: -13.001280784606934
    9. '_indices' → logprob: -13.376280784606934
    10. '_integer' → logprob: -13.501280784606934

Token 96: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.0004189946048427373
    2. 'eg' → logprob: -8.000418663024902
    3. 'e' → logprob: -10.125418663024902
    4. 't' → logprob: -11.625418663024902
    5. 'teger' → logprob: -11.750418663024902
    6. 'teg' → logprob: -12.375418663024902
    7. 'tegr' → logprob: -12.375418663024902
    8. 'ge' → logprob: -13.125418663024902
    9. '
' → logprob: -13.250418663024902
    10. '```' → logprob: -13.250418663024902

Token 97: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -3.292907877039397e-06
    2. 'ers' → logprob: -13.12500286102295
    3. 'g' → logprob: -14.62500286102295
    4. 'rs' → logprob: -15.12500286102295
    5. 'ger' → logprob: -15.25000286102295
    6. 'gr' → logprob: -15.50000286102295
    7. 'gars' → logprob: -17.625003814697266
    8. '```' → logprob: -17.625003814697266
    9. 'igers' → logprob: -18.625003814697266
    10. '[' → logprob: -18.625003814697266

Token 98: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.000601169012952596
    2. '[' → logprob: -7.500601291656494
    3. '[current' → logprob: -10.250600814819336
    4. '```' → logprob: -12.375600814819336
    5. '[in' → logprob: -12.875600814819336
    6. '[ind' → logprob: -13.750600814819336
    7. '[Index' → logprob: -13.750600814819336
    8. '[i' → logprob: -14.375600814819336
    9. '[number' → logprob: -14.875600814819336
    10. '[input' → logprob: -14.875600814819336

Token 99: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.821094810962677
    2. ' -' → logprob: -0.821094810962677
    3. ']' → logprob: -2.3210947513580322
    4. ' ' → logprob: -4.571094989776611
    5. ')' → logprob: -4.696094989776611
    6. ' ]' → logprob: -6.946094989776611
    7. '    ' → logprob: -7.696094989776611
    8. '   ' → logprob: -8.071094512939453
    9. ' )' → logprob: -8.571094512939453
    10. '	' → logprob: -9.196094512939453

Token 100: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026730656623840332
    2. '-' → logprob: -3.651730537414551
    3. ' ' → logprob: -7.901730537414551
    4. ' >=' → logprob: -11.02673053741455
    5. '>=' → logprob: -11.77673053741455
    6. '<|end|>' → logprob: -11.90173053741455
    7. '	' → logprob: -12.15173053741455
    8. '    ' → logprob: -12.27673053741455
    9. '   ' → logprob: -12.27673053741455
    10. '>' → logprob: -12.77673053741455

Token 101: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.05488690733909607
    2. ' sequence' → logprob: -2.929886817932129
    3. '   ' → logprob: -13.304886817932129
    4. '  ' → logprob: -13.554886817932129
    5. ' ' → logprob: -13.804886817932129
    6. '(sequence' → logprob: -14.554886817932129
    7. 'se' → logprob: -16.554887771606445
    8. '_sequence' → logprob: -16.554887771606445
    9. 'sequ' → logprob: -17.304887771606445
    10. '    ' → logprob: -17.429887771606445

Token 102: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -13.625001907348633
    3. '```' → logprob: -15.875001907348633
    4. '_with' → logprob: -17.000001907348633
    5. '._' → logprob: -17.375001907348633
    6. '[' → logprob: -17.375001907348633
    7. '__' → logprob: -17.500001907348633
    8. '[_' → logprob: -17.500001907348633
    9. '_for' → logprob: -17.500001907348633
    10. '_-' → logprob: -17.625001907348633

Token 103: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0041556875221431255
    2. 'inte' → logprob: -5.50415563583374
    3. 'in' → logprob: -10.004156112670898
    4. '_' → logprob: -11.754156112670898
    5. 'integer' → logprob: -12.504156112670898
    6. '-in' → logprob: -12.504156112670898
    7. 'int' → logprob: -12.754156112670898
    8. 's' → logprob: -13.504156112670898
    9. '```' → logprob: -13.629156112670898
    10. 'index' → logprob: -13.754156112670898

Token 104: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.013399613089859486
    2. 'gers' → logprob: -4.388399600982666
    3. 'eg' → logprob: -7.638399600982666
    4. 't' → logprob: -8.513400077819824
    5. 'ge' → logprob: -9.638400077819824
    6. 'e' → logprob: -9.763400077819824
    7. 'ger' → logprob: -10.513400077819824
    8. 'g' → logprob: -10.888400077819824
    9. 'teg' → logprob: -11.388400077819824
    10. 'teger' → logprob: -11.888400077819824

Token 105: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -0.00011212585377506912
    2. 'ers' → logprob: -9.750112533569336
    3. 'rs' → logprob: -10.250112533569336
    4. 'gr' → logprob: -11.125112533569336
    5. 'g' → logprob: -13.625112533569336
    6. 'ger' → logprob: -13.875112533569336
    7. 'r' → logprob: -14.500112533569336
    8. '```' → logprob: -15.625112533569336
    9. '[' → logprob: -16.250112533569336
    10. '_' → logprob: -16.500112533569336

Token 106: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -5.512236498361744e-07
    2. '[in' → logprob: -15.250000953674316
    3. '[' → logprob: -16.0
    4. '```' → logprob: -16.75
    5. 'index' → logprob: -17.625
    6. '[ind' → logprob: -18.125
    7. '[i' → logprob: -18.375
    8. '[current' → logprob: -18.375
    9. ' [' → logprob: -19.0
    10. '[Index' → logprob: -19.25

Token 107: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015199800254777074
    2. ' -' → logprob: -6.501520156860352
    3. '[-' → logprob: -11.751520156860352
    4. '[' → logprob: -12.376520156860352
    5. '1' → logprob: -13.751520156860352
    6. ']' → logprob: -13.876520156860352
    7. '[index' → logprob: -14.126520156860352
    8. ' ' → logprob: -14.376520156860352
    9. '   ' → logprob: -14.626520156860352
    10. '```' → logprob: -15.126520156860352

Token 108: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -14.875006675720215
    4. '```' → logprob: -16.7500057220459
    5. ']' → logprob: -17.8750057220459
    6. '  ' → logprob: -18.7500057220459
    7. '<|end|>' → logprob: -19.6250057220459
    8. '`' → logprob: -19.8750057220459
    9. '    ' → logprob: -20.1250057220459
    10. ')' → logprob: -20.5000057220459

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.500007629394531
    4. '```' → logprob: -17.12500762939453
    5. '0' → logprob: -17.37500762939453
    6. '  ' → logprob: -18.18750762939453
    7. '۱' → logprob: -19.25000762939453
    8. '`' → logprob: -19.25000762939453
    9. '2' → logprob: -19.31250762939453
    10. '-' → logprob: -19.37500762939453

Token 110: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0020766248926520348
    2. '<|end|>' → logprob: -7.752076625823975
    3. ' if' → logprob: -7.877076625823975
    4. '   ' → logprob: -7.877076625823975
    5. 'if' → logprob: -8.127076148986816
    6. ')
' → logprob: -8.377076148986816
    7. ' )' → logprob: -9.377076148986816
    8. '
' → logprob: -9.752076148986816
    9. '>' → logprob: -9.877076148986816
    10. ' ' → logprob: -10.252076148986816

Token 111: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007188651943579316
    2. '
' → logprob: -7.75071907043457
    3. '    
' → logprob: -9.25071907043457
    4. ' if' → logprob: -9.37571907043457
    5. 'if' → logprob: -9.50071907043457
    6. '    ' → logprob: -12.00071907043457
    7. '<|end|>' → logprob: -12.25071907043457
    8. ' ' → logprob: -12.37571907043457
    9. '   
' → logprob: -12.50071907043457
    10. '```' → logprob: -12.62571907043457

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00021295747137628496
    2. 'if' → logprob: -8.750212669372559
    3. ' if' → logprob: -10.000212669372559
    4. '    
' → logprob: -12.625212669372559
    5. '
' → logprob: -13.625212669372559
    6. 'total' → logprob: -13.875212669372559
    7. '    ' → logprob: -14.125212669372559
    8. '  ' → logprob: -14.250212669372559
    9. ' ' → logprob: -14.375212669372559
    10. '```' → logprob: -14.625212669372559

Token 113: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00046510808169841766
    2. 'total' → logprob: -8.125465393066406
    3. '   ' → logprob: -8.750465393066406
    4. ' if' → logprob: -11.625465393066406
    5. ' ' → logprob: -13.750465393066406
    6. '
' → logprob: -15.500465393066406
    7. '```' → logprob: -15.500465393066406
    8. '  ' → logprob: -16.875465393066406
    9. '    
' → logprob: -16.875465393066406
    10. 'i' → logprob: -16.875465393066406

Token 114: ' difference' (ID: 9809)
  Prédit: ' difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.14296884834766388
    2. 'difference' → logprob: -2.0179688930511475
    3. ' ' → logprob: -8.517969131469727
    4. 'd' → logprob: -9.767969131469727
    5. '   ' → logprob: -11.267969131469727
    6. ' sequence' → logprob: -11.767969131469727
    7. '	d' → logprob: -12.142969131469727
    8. '  ' → logprob: -13.017969131469727
    9. 'diff' → logprob: -13.267969131469727
    10. 'sequence' → logprob: -13.392969131469727

Token 115: '_with' (ID: 14161)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.037503719329834
    2. '<' → logprob: -1.537503719329834
    3. ' <' → logprob: -1.662503719329834
    4. '>' → logprob: -1.787503719329834
    5. ' >' → logprob: -2.912503719329834
    6. ' ' → logprob: -4.412503719329834
    7. '_with' → logprob: -5.912503719329834
    8. '_<' → logprob: -6.412503719329834
    9. '   ' → logprob: -6.912503719329834
    10. '  ' → logprob: -7.537503719329834

Token 116: '_previous' (ID: 126212)
  Prédit: '_previous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_previous' → logprob: -0.000518482003826648
    2. 'previous' → logprob: -7.750518321990967
    3. '0' → logprob: -10.625518798828125
    4. ' ' → logprob: -11.000518798828125
    5. '_' → logprob: -11.500518798828125
    6. 'Previous' → logprob: -11.625518798828125
    7. '<' → logprob: -12.000518798828125
    8. '>' → logprob: -12.250518798828125
    9. 's' → logprob: -12.250518798828125
    10. '_prev' → logprob: -12.500518798828125

Token 117: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.33971649408340454
    2. ' <' → logprob: -1.3397164344787598
    3. '>' → logprob: -4.08971643447876
    4. ' >' → logprob: -4.71471643447876
    5. '>=' → logprob: -8.714716911315918
    6. ' ' → logprob: -8.964716911315918
    7. ' >=' → logprob: -10.089716911315918
    8. '<=' → logprob: -10.839716911315918
    9. '   ' → logprob: -11.589716911315918
    10. ' <=' → logprob: -11.652216911315918

Token 118: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.527522623538971
    2. '1' → logprob: -1.4025225639343262
    3. ' ' → logprob: -1.9025225639343262
    4. 'sequence' → logprob: -4.652522563934326
    5. ' sequence' → logprob: -6.277522563934326
    6. 'index' → logprob: -6.652522563934326
    7. '2' → logprob: -7.402522563934326
    8. ' index' → logprob: -8.152523040771484
    9. 'number' → logprob: -8.402523040771484
    10. 'difference' → logprob: -8.777523040771484

Token 119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08322613686323166
    2. '0' → logprob: -2.708226203918457
    3. 'sequence' → logprob: -5.208226203918457
    4. '2' → logprob: -5.583226203918457
    5. 'number' → logprob: -6.208226203918457
    6. 'index' → logprob: -7.208226203918457
    7. ' ' → logprob: -8.708226203918457
    8. '3' → logprob: -8.708226203918457
    9. 'i' → logprob: -8.833226203918457
    10. 'current' → logprob: -8.833226203918457

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002340089064091444
    2. '   ' → logprob: -7.127340316772461
    3. '       ' → logprob: -7.252340316772461
    4. ':
' → logprob: -7.377340316772461
    5. ' or' → logprob: -9.127340316772461
    6. '):' → logprob: -10.627340316772461
    7. ' and' → logprob: -11.002340316772461
    8. '<|end|>' → logprob: -11.127340316772461
    9. '    ' → logprob: -11.627340316772461
    10. ' :' → logprob: -11.877340316772461

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07920613884925842
    2. '   ' → logprob: -2.5792062282562256
    3. 'is' → logprob: -8.329206466674805
    4. ' is' → logprob: -10.329206466674805
    5. '```' → logprob: -10.704206466674805
    6. '      ' → logprob: -11.954206466674805
    7. '           ' → logprob: -12.079206466674805
    8. '     ' → logprob: -12.954206466674805
    9. '    
' → logprob: -13.579206466674805
    10. '  ' → logprob: -13.829206466674805

Token 122: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11731651425361633
    2. 'is' → logprob: -2.242316484451294
    3. '       ' → logprob: -5.492316722869873
    4. ' is' → logprob: -8.867316246032715
    5. '    
' → logprob: -9.367316246032715
    6. '```' → logprob: -10.242316246032715
    7. '           ' → logprob: -10.492316246032715
    8. '  ' → logprob: -10.617316246032715
    9. '
' → logprob: -11.117316246032715
    10. '        
' → logprob: -11.367316246032715

Token 123: ' sequence' (ID: 16281)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5453298687934875
    2. ' difference' → logprob: -1.6703298091888428
    3. 'is' → logprob: -2.5453298091888428
    4. 'difference' → logprob: -2.6703298091888428
    5. ' sequence' → logprob: -3.1703298091888428
    6. 'sequence' → logprob: -4.045330047607422
    7. ' index' → logprob: -4.545330047607422
    8. ' not' → logprob: -5.045330047607422
    9. 'index' → logprob: -5.920330047607422
    10. ' (' → logprob: -6.545330047607422

Token 124: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -0.00012523093027994037
    2. '_in' → logprob: -9.37512493133545
    3. '_' → logprob: -11.25012493133545
    4. 's' → logprob: -12.12512493133545
    5. '[' → logprob: -13.00012493133545
    6. '```' → logprob: -13.12512493133545
    7. '[-' → logprob: -13.50012493133545
    8. '   ' → logprob: -13.62512493133545
    9. '
' → logprob: -13.62512493133545
    10. 'of' → logprob: -13.75012493133545

Token 125: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.2266416847705841
    2. 'inte' → logprob: -1.6016416549682617
    3. 'in' → logprob: -6.976641654968262
    4. 'int' → logprob: -9.351641654968262
    5. 'integer' → logprob: -9.976641654968262
    6. '_elements' → logprob: -10.101641654968262
    7. 'elements' → logprob: -10.851641654968262
    8. '-in' → logprob: -11.351641654968262
    9. '_' → logprob: -11.476641654968262
    10. '_integer' → logprob: -11.726641654968262

Token 126: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.014584410935640335
    2. 't' → logprob: -4.389584541320801
    3. 'e' → logprob: -7.014584541320801
    4. 'elements' → logprob: -7.514584541320801
    5. 'eg' → logprob: -8.2645845413208
    6. 'teger' → logprob: -9.3895845413208
    7. 'ter' → logprob: -10.2645845413208
    8. 'ex' → logprob: -10.3895845413208
    9. '[' → logprob: -10.5145845413208
    10. 'tes' → logprob: -10.8895845413208

Token 127: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -0.00015514736878685653
    2. 'r' → logprob: -9.250155448913574
    3. 'rs' → logprob: -10.750155448913574
    4. 'ers' → logprob: -10.750155448913574
    5. 'gr' → logprob: -11.875155448913574
    6. 'g' → logprob: -12.500155448913574
    7. 'ger' → logprob: -12.625155448913574
    8. 'lements' → logprob: -14.125155448913574
    9. 'ters' → logprob: -14.875155448913574
    10. 'lers' → logprob: -15.125155448913574

Token 128: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -3.15441757265944e-05
    2. '[' → logprob: -11.250031471252441
    3. 'index' → logprob: -11.750031471252441
    4. '[current' → logprob: -12.875031471252441
    5. '[i' → logprob: -13.125031471252441
    6. '[in' → logprob: -13.250031471252441
    7. '```' → logprob: -13.875031471252441
    8. '[ind' → logprob: -14.250031471252441
    9. ' [' → logprob: -14.375031471252441
    10. ' index' → logprob: -14.625031471252441

Token 129: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.40374305844306946
    2. ']' → logprob: -1.903743028640747
    3. '[index' → logprob: -2.028743028640747
    4. ' -' → logprob: -3.028743028640747
    5. '[' → logprob: -7.278743267059326
    6. ']==' → logprob: -7.653743267059326
    7. '```' → logprob: -7.903743267059326
    8. 'index' → logprob: -8.028742790222168
    9. ']!=' → logprob: -8.278742790222168
    10. '   ' → logprob: -8.278742790222168

Token 130: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7258864045143127
    2. '-' → logprob: -1.850886344909668
    3. '!=' → logprob: -2.350886344909668
    4. ' >' → logprob: -2.600886344909668
    5. '%' → logprob: -2.850886344909668
    6. ' -' → logprob: -2.975886344909668
    7. ' !=' → logprob: -3.350886344909668
    8. '==' → logprob: -3.850886344909668
    9. '<' → logprob: -4.600886344909668
    10. ' ==' → logprob: -5.475886344909668

Token 131: ' ' (ID: 220)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.068595752120018
    2. 'index' → logprob: -3.8185956478118896
    3. '0' → logprob: -4.068595886230469
    4. 'number' → logprob: -4.318595886230469
    5. ' sequence' → logprob: -4.693595886230469
    6. 'difference' → logprob: -7.193595886230469
    7. ' ' → logprob: -7.193595886230469
    8. '   ' → logprob: -7.193595886230469
    9. '1' → logprob: -7.318595886230469
    10. ' index' → logprob: -7.443595886230469

Token 132: '0' (ID: 15)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0455053336918354
    2. 'index' → logprob: -3.7955052852630615
    3. '0' → logprob: -4.170505523681641
    4. 'number' → logprob: -6.295505523681641
    5. 'difference' → logprob: -6.295505523681641
    6. ' sequence' → logprob: -6.920505523681641
    7. '   ' → logprob: -7.295505523681641
    8. '1' → logprob: -7.795505523681641
    9. ' ' → logprob: -8.54550552368164
    10. 'current' → logprob: -9.17050552368164

Token 133: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002577797742560506
    2. ':
' → logprob: -6.502577781677246
    3. ' and' → logprob: -7.377577781677246
    4. ' or' → logprob: -9.127577781677246
    5. '   ' → logprob: -9.252577781677246
    6. ')' → logprob: -9.877577781677246
    7. ' :' → logprob: -10.127577781677246
    8. 'and' → logprob: -10.127577781677246
    9. '       ' → logprob: -10.377577781677246
    10. '):' → logprob: -10.377577781677246

Token 134: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00402639526873827
    2. '       ' → logprob: -6.254026412963867
    3. 'is' → logprob: -6.754026412963867
    4. ':' → logprob: -7.379026412963867
    5. '   ' → logprob: -9.629026412963867
    6. '=' → logprob: -9.879026412963867
    7. ' is' → logprob: -10.004026412963867
    8. ':
' → logprob: -10.129026412963867
    9. '```' → logprob: -10.754026412963867
    10. 'print' → logprob: -10.879026412963867

Token 135: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' (adapté à ' is') → logprob: -0.020684830844402313
    2. '               ' → logprob: -4.145684719085693
    3. '           ' → logprob: -5.770684719085693
    4. '   ' → logprob: -6.895684719085693
    5. ' is' → logprob: -7.895684719085693
    6. '       ' → logprob: -9.895685195922852
    7. 'print' → logprob: -10.645685195922852
    8. '
' → logprob: -10.895685195922852
    9. '  ' → logprob: -11.645685195922852
    10. '```' → logprob: -12.020685195922852

Token 136: '_solution' (ID: 127649)
  Prédit: '_solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_solution' → logprob: -1.1398757123970427e-05
    2. '_' → logprob: -12.000011444091797
    3. 'solution' → logprob: -13.500011444091797
    4. '_possible' → logprob: -13.500011444091797
    5. '_s' → logprob: -13.625011444091797
    6. '_sol' → logprob: -14.000011444091797
    7. '_solver' → logprob: -15.500011444091797
    8. '_system' → logprob: -16.500011444091797
    9. '_operation' → logprob: -17.375011444091797
    10. '_problem' → logprob: -18.000011444091797

Token 137: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -9.610702363715973e-06
    2. '_' → logprob: -12.000009536743164
    3. 'possible' → logprob: -12.625009536743164
    4. '=' → logprob: -16.500009536743164
    5. '_pos' → logprob: -17.250009536743164
    6. 'Possible' → logprob: -18.250009536743164
    7. '_p' → logprob: -18.875009536743164
    8. '_available' → logprob: -19.000009536743164
    9. '_=' → logprob: -19.125009536743164
    10. ' =' → logprob: -19.250009536743164

Token 138: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01815006136894226
    2. ' =' → logprob: -4.0181498527526855
    3. '=False' → logprob: -16.268150329589844
    4. ' ' → logprob: -17.018150329589844
    5. '=

' → logprob: -17.518150329589844
    6. '<|end|>' → logprob: -17.518150329589844
    7. '*=' → logprob: -17.643150329589844
    8. '0' → logprob: -17.643150329589844
    9. '=int' → logprob: -18.143150329589844
    10. '＝' → logprob: -18.393150329589844

Token 139: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006267757853493094
    2. ' ' → logprob: -7.375626564025879
    3. '=' → logprob: -16.625627517700195
    4. '  ' → logprob: -17.375627517700195
    5. '۰' → logprob: -17.625627517700195
    6. '   ' → logprob: -18.000627517700195
    7. '1' → logprob: -18.563127517700195
    8. '-' → logprob: -18.625627517700195
    9. '    ' → logprob: -18.938127517700195
    10. ' ' → logprob: -19.000627517700195

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. 'False' → logprob: -17.875
    4. '-' → logprob: -18.6875
    5. '۰' → logprob: -19.0625
    6. '=' → logprob: -19.25
    7. '   ' → logprob: -19.375
    8. '1' → logprob: -19.5625
    9. '000' → logprob: -19.625
    10. '00' → logprob: -19.625

Token 141: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6076081395149231
    2. '       ' → logprob: -1.3576080799102783
    3. '
' → logprob: -2.1076080799102783
    4. '<|end|>' → logprob: -2.9826080799102783
    5. '    
' → logprob: -4.232608318328857
    6. '           ' → logprob: -5.107608318328857
    7. '    ' → logprob: -6.357608318328857
    8. '        
' → logprob: -7.357608318328857
    9. '            
' → logprob: -7.482608318328857
    10. '  
' → logprob: -7.607608318328857

Token 142: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37758538126945496
    2. '       ' → logprob: -1.5025854110717773
    3. '
' → logprob: -3.5025854110717773
    4. '           ' → logprob: -3.8775854110717773
    5. '<|end|>' → logprob: -4.002585411071777
    6. '    
' → logprob: -4.127585411071777
    7. '    ' → logprob: -5.752585411071777
    8. '\n' → logprob: -6.752585411071777
    9. '            
' → logprob: -8.002585411071777
    10. '        
' → logprob: -8.002585411071777

Token 143: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10173004865646362
    2. '       ' → logprob: -2.3517301082611084
    3. '   ' → logprob: -7.601729869842529
    4. 'break' (adapté à ' break') → logprob: -7.851729869842529
    5. ' break' → logprob: -8.851730346679688
    6. '	break' → logprob: -9.101730346679688
    7. 'b' → logprob: -9.851730346679688
    8. '	       ' → logprob: -10.101730346679688
    9. '      ' → logprob: -10.351730346679688
    10. '               ' → logprob: -10.351730346679688

Token 144: '
    
' (ID: 15698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19919155538082123
    2. '<|end|>' → logprob: -2.8241915702819824
    3. '
' → logprob: -2.9491915702819824
    4. '    
' → logprob: -3.1991915702819824
    5. ' 
' → logprob: -4.699191570281982
    6. '    ' → logprob: -4.949191570281982
    7. ' ' → logprob: -6.074191570281982
    8. ')' → logprob: -6.199191570281982
    9. '  
' → logprob: -6.574191570281982
    10. '\n' → logprob: -6.824191570281982

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018854460213333368
    2. '    
' → logprob: -7.376885414123535
    3. ')' → logprob: -8.001885414123535
    4. '    ' → logprob: -8.251885414123535
    5. '<|end|>' → logprob: -8.251885414123535
    6. 'else' → logprob: -9.501885414123535
    7. '       ' → logprob: -9.626885414123535
    8. '  ' → logprob: -10.126885414123535
    9. ' ' → logprob: -10.251885414123535
    10. 'total' → logprob: -10.376885414123535

Token 146: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5208810567855835
    2. 'total' → logprob: -1.3958810567855835
    3. 'elif' (adapté à ' elif') → logprob: -2.395881175994873
    4. 'else' → logprob: -2.895881175994873
    5. 'if' → logprob: -4.770881175994873
    6. ' total' → logprob: -7.020881175994873
    7. '    ' → logprob: -7.520881175994873
    8. ' ' → logprob: -7.770881175994873
    9. '    
' → logprob: -7.895881175994873
    10. ' elif' → logprob: -8.270880699157715

Token 147: ' difference' (ID: 9809)
  Prédit: ' difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.2022150456905365
    2. 'difference' → logprob: -1.7022150754928589
    3. ' ' → logprob: -7.952215194702148
    4. '   ' → logprob: -8.702215194702148
    5. ' sequence' → logprob: -9.202215194702148
    6. 'd' → logprob: -9.327215194702148
    7. 'sequence' → logprob: -10.702215194702148
    8. '    ' → logprob: -10.952215194702148
    9. '  ' → logprob: -10.952215194702148
    10. '1' → logprob: -11.702215194702148

Token 148: '_with' (ID: 14161)
  Prédit: '_with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.290861576795578
    2. '_of' → logprob: -2.4158616065979004
    3. '>' → logprob: -2.6658616065979004
    4. '==' → logprob: -3.4158616065979004
    5. '_' → logprob: -3.5408616065979004
    6. ' >' → logprob: -4.1658616065979
    7. ' ==' → logprob: -4.2908616065979
    8. '_for' → logprob: -7.6658616065979
    9. '_under' → logprob: -8.165861129760742
    10. '   ' → logprob: -8.665861129760742

Token 149: '_previous' (ID: 126212)
  Prédit: '_previous'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_previous' → logprob: -0.10136249661445618
    2. 'previous' → logprob: -2.351362466812134
    3. '1' → logprob: -7.226362705230713
    4. 'range' → logprob: -8.726362228393555
    5. '_pre' → logprob: -9.851362228393555
    6. '_' → logprob: -10.351362228393555
    7. ' ' → logprob: -10.601362228393555
    8. ' previous' → logprob: -10.851362228393555
    9. 'pre' → logprob: -11.101362228393555
    10. 'Previous' → logprob: -11.226362228393555

Token 150: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.694074809551239
    2. '==' → logprob: -0.819074809551239
    3. ' >' → logprob: -3.444074869155884
    4. '>' → logprob: -3.819074869155884
    5. '<' → logprob: -6.319074630737305
    6. ' <' → logprob: -6.444074630737305
    7. ' <=' → logprob: -6.819074630737305
    8. '<=' → logprob: -6.819074630737305
    9. ' ' → logprob: -9.694074630737305
    10. '>=' → logprob: -10.319074630737305

Token 151: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.036634910851716995
    2. ' ' → logprob: -3.786634922027588
    3. '0' → logprob: -4.411634922027588
    4. '2' → logprob: -7.411634922027588
    5. '-' → logprob: -7.661634922027588
    6. ' -' → logprob: -9.53663444519043
    7. '  ' → logprob: -11.78663444519043
    8. '   ' → logprob: -11.91163444519043
    9. '>' → logprob: -14.78663444519043
    10. '	' → logprob: -14.78663444519043

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009301604703068733
    2. '0' → logprob: -4.884301662445068
    3. '-' → logprob: -7.009301662445068
    4. ' ' → logprob: -7.634301662445068
    5. '2' → logprob: -8.13430118560791
    6. ' -' → logprob: -11.75930118560791
    7. '   ' → logprob: -13.19680118560791
    8. '  ' → logprob: -13.32180118560791
    9. '>' → logprob: -15.57180118560791
    10. '+' → logprob: -15.57180118560791

Token 153: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4758828282356262
    2. ':
' → logprob: -0.9758828282356262
    3. '       ' → logprob: -6.7258830070495605
    4. '   ' → logprob: -7.4758830070495605
    5. ':
' → logprob: -11.350882530212402
    6. ',' → logprob: -11.725882530212402
    7. '):
' → logprob: -11.850882530212402
    8. ' or' → logprob: -12.975882530212402
    9. ' ' → logprob: -13.350882530212402
    10. ' and' → logprob: -14.100882530212402

Token 154: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09148183465003967
    2. 'total' → logprob: -2.966481924057007
    3. '       ' → logprob: -3.341481924057007
    4. ' total' → logprob: -7.591481685638428
    5. '
' → logprob: -10.966482162475586
    6. '           ' → logprob: -11.716482162475586
    7. '  ' → logprob: -11.841482162475586
    8. ' ' → logprob: -12.216482162475586
    9. '	total' → logprob: -12.216482162475586
    10. '    
' → logprob: -13.466482162475586

Token 155: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.000866083602886647
    2. '
' → logprob: -8.000865936279297
    3. '   ' → logprob: -8.000865936279297
    4. ' total' → logprob: -8.625865936279297
    5. '       ' → logprob: -12.125865936279297
    6. '           ' → logprob: -12.375865936279297
    7. '	total' → logprob: -12.500865936279297
    8. 'continue' → logprob: -14.250865936279297
    9. '  ' → logprob: -15.000865936279297
    10. ' ' → logprob: -15.125865936279297

Token 156: '_operations' (ID: 148404)
  Prédit: '_operations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operations' → logprob: -8.2994620242971e-06
    2. '_' → logprob: -12.625008583068848
    3. '_oper' → logprob: -13.125008583068848
    4. '_ops' → logprob: -13.875008583068848
    5. 'operations' → logprob: -14.250008583068848
    6. '_op' → logprob: -14.875008583068848
    7. '_options' → logprob: -15.500008583068848
    8. '_actions' → logprob: -15.750008583068848
    9. '_total' → logprob: -16.12500762939453
    10. '_elements' → logprob: -16.37500762939453

Token 157: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.38688352704048157
    2. '+=' → logprob: -1.1368834972381592
    3. '=' → logprob: -12.011883735656738
    4. '+' → logprob: -12.761883735656738
    5. ']+=' → logprob: -13.636883735656738
    6. ' =' → logprob: -13.761883735656738
    7. '+=(' → logprob: -14.636883735656738
    8. '   ' → logprob: -15.261883735656738
    9. '	' → logprob: -15.761883735656738
    10. ' ' → logprob: -16.136882781982422

Token 158: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018195947632193565
    2. 'sequence' → logprob: -4.143196105957031
    3. 'difference' → logprob: -6.893196105957031
    4. ' ' → logprob: -7.393196105957031
    5. '2' → logprob: -8.268196105957031
    6. ' sequence' → logprob: -8.768196105957031
    7. '(sequence' → logprob: -9.643196105957031
    8. '   ' → logprob: -11.768196105957031
    9. '
' → logprob: -12.018196105957031
    10. ' difference' → logprob: -12.018196105957031

Token 159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05862198770046234
    2. 'sequence' → logprob: -2.933621883392334
    3. 'difference' → logprob: -5.683621883392334
    4. '(sequence' → logprob: -9.058622360229492
    5. '2' → logprob: -9.558622360229492
    6. ' ' → logprob: -9.933622360229492
    7. ' sequence' → logprob: -9.933622360229492
    8. '(' → logprob: -11.058622360229492
    9. 'diff' → logprob: -11.933622360229492
    10. ' difference' → logprob: -12.558622360229492

Token 160: '
    
' (ID: 15698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19683672487735748
    2. 'elif' → logprob: -1.9468367099761963
    3. 'else' → logprob: -3.5718367099761963
    4. ')' → logprob: -5.821836948394775
    5. 'if' → logprob: -6.571836948394775
    6. '#' → logprob: -7.071836948394775
    7. 'for' → logprob: -7.821836948394775
    8. 'return' → logprob: -7.946836948394775
    9. '```' → logprob: -8.071836471557617
    10. '<|end|>' → logprob: -8.446836471557617

Token 162: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.17416392266750336
    2. 'else' (adapté à ' else') → logprob: -2.424163818359375
    3. 'print' → logprob: -2.674163818359375
    4. '```' → logprob: -7.549163818359375
    5. 'return' → logprob: -7.674163818359375
    6. 'if' → logprob: -7.799163818359375
    7. ' elif' → logprob: -8.174163818359375
    8. '#' → logprob: -8.799163818359375
    9. 'continue' → logprob: -8.924163818359375
    10. ')' → logprob: -9.174163818359375

Token 163: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006416652468033135
    2. ':
' → logprob: -7.750641822814941
    3. 'if' → logprob: -9.625641822814941
    4. ' :' → logprob: -9.750641822814941
    5. ' if' → logprob: -10.000641822814941
    6. '   ' → logprob: -10.250641822814941
    7. '       ' → logprob: -13.125641822814941
    8. '=' → logprob: -13.750641822814941
    9. '    ' → logprob: -13.875641822814941
    10. '{' → logprob: -15.125641822814941

Token 164: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3834512531757355
    2. 'total' → logprob: -1.633451223373413
    3. '   ' → logprob: -2.258451223373413
    4. ' if' → logprob: -4.508451461791992
    5. 'continue' → logprob: -6.258451461791992
    6. ' total' → logprob: -6.258451461791992
    7. 'pass' → logprob: -6.508451461791992
    8. '       ' → logprob: -6.633451461791992
    9. '
' → logprob: -8.008451461791992
    10. 'is' → logprob: -8.258451461791992

Token 165: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.5719928741455078
    2. 'if' → logprob: -1.6969928741455078
    3. 'pass' → logprob: -1.6969928741455078
    4. 'continue' → logprob: -2.821992874145508
    5. 'is' → logprob: -4.821992874145508
    6. 'print' → logprob: -7.946992874145508
    7. '#' → logprob: -8.321992874145508
    8. ' pass' → logprob: -8.946992874145508
    9. 'for' → logprob: -8.946992874145508
    10. 'difference' → logprob: -8.946992874145508

Token 166: '_operations' (ID: 148404)
  Prédit: '_operations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operations' → logprob: -6.869017852295656e-06
    2. 'operations' → logprob: -12.125006675720215
    3. '_ops' → logprob: -14.500006675720215
    4. '_' → logprob: -15.500006675720215
    5. 'Operations' → logprob: -15.875006675720215
    6. '_operation' → logprob: -16.12500762939453
    7. '_options' → logprob: -16.62500762939453
    8. '_op' → logprob: -16.75000762939453
    9. '_actions' → logprob: -17.12500762939453
    10. '_elements' → logprob: -17.12500762939453

Token 167: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.3490025997161865
    2. ' +=' → logprob: -1.2240025997161865
    3. '=' → logprob: -7.724002838134766
    4. ' -=' → logprob: -10.099002838134766
    5. '-=' → logprob: -10.224002838134766
    6. ' =' → logprob: -10.974002838134766
    7. '+' → logprob: -11.974002838134766
    8. '+=(' → logprob: -11.974002838134766
    9. '+='' → logprob: -13.349002838134766
    10. ']+=' → logprob: -13.724002838134766

Token 168: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.0581439808011055
    2. ' sequence' → logprob: -3.3081440925598145
    3. 'difference' → logprob: -4.0581440925598145
    4. '0' → logprob: -6.8081440925598145
    5. ' difference' → logprob: -7.0581440925598145
    6. '1' → logprob: -7.8081440925598145
    7. '(sequence' → logprob: -9.308143615722656
    8. ' ' → logprob: -9.683143615722656
    9. '(' → logprob: -11.058143615722656
    10. ' (' → logprob: -11.058143615722656

Token 169: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -5.2524021157296374e-05
    2. '[index' → logprob: -10.000052452087402
    3. 'of' → logprob: -12.125052452087402
    4. 'Of' → logprob: -14.750052452087402
    5. '[-' → logprob: -15.500052452087402
    6. '[' → logprob: -16.00005340576172
    7. '__' → logprob: -16.25005340576172
    8. '_difference' → logprob: -16.37505340576172
    9. '```' → logprob: -16.50005340576172
    10. '-of' → logprob: -16.50005340576172

Token 170: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.043172746896743774
    2. 'inte' → logprob: -3.293172836303711
    3. 'index' → logprob: -5.793172836303711
    4. 'in' → logprob: -6.793172836303711
    5. '_elements' → logprob: -8.418172836303711
    6. 'sequence' → logprob: -8.668172836303711
    7. 'previous' → logprob: -9.168172836303711
    8. 'int' → logprob: -9.293172836303711
    9. 'integer' → logprob: -9.293172836303711
    10. 'difference' → logprob: -9.918172836303711

Token 171: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.37953877449035645
    2. 'dex' → logprob: -1.2545387744903564
    3. 't' → logprob: -3.6295387744903564
    4. 'ex' → logprob: -6.379538536071777
    5. '[index' → logprob: -7.129538536071777
    6. 'tex' → logprob: -7.629538536071777
    7. 'teger' → logprob: -8.129538536071777
    8. 'eg' → logprob: -8.254538536071777
    9. 'ts' → logprob: -9.004538536071777
    10. 'e' → logprob: -9.254538536071777

Token 172: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -0.0005879410891793668
    2. 'gr' → logprob: -7.5005879402160645
    3. 'ger' → logprob: -11.625588417053223
    4. 'rs' → logprob: -11.625588417053223
    5. '[' → logprob: -11.875588417053223
    6. 'ers' → logprob: -12.875588417053223
    7. '_gr' → logprob: -13.375588417053223
    8. '```' → logprob: -13.375588417053223
    9. 'g' → logprob: -14.125588417053223
    10. '_' → logprob: -14.125588417053223

Token 173: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -1.5048530030981055e-06
    2. '[current' → logprob: -14.000001907348633
    3. '[' → logprob: -15.375001907348633
    4. 'index' → logprob: -15.500001907348633
    5. 'difference' → logprob: -17.000001907348633
    6. '[Index' → logprob: -17.375001907348633
    7. '```' → logprob: -18.000001907348633
    8. '[end' → logprob: -18.125001907348633
    9. '[user' → logprob: -18.375001907348633
    10. '[ind' → logprob: -18.625001907348633

Token 174: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06886563450098038
    2. ')' → logprob: -3.3188655376434326
    3. '-' → logprob: -3.8188655376434326
    4. '<|end|>' → logprob: -5.193865776062012
    5. ' -' → logprob: -7.068865776062012
    6. '[' → logprob: -7.568865776062012
    7. '])' → logprob: -7.568865776062012
    8. ')]' → logprob: -8.193865776062012
    9. '   ' → logprob: -8.693865776062012
    10. ']-' → logprob: -9.318865776062012

Token 175: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01838124543428421
    2. 'if' → logprob: -4.018381118774414
    3. '
' → logprob: -8.518381118774414
    4. ' print' → logprob: -11.518381118774414
    5. ' if' → logprob: -11.643381118774414
    6. '```' → logprob: -12.018381118774414
    7. '\n' → logprob: -12.643381118774414
    8. ')' → logprob: -14.018381118774414
    9. '

' → logprob: -14.643381118774414
    10. '    
' → logprob: -14.768381118774414

Token 176: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0298303235322237
    2. 'is' → logprob: -3.52983021736145
    3. ' not' → logprob: -9.779829978942871
    4. ' ' → logprob: -11.279829978942871
    5. 'not' → logprob: -11.654829978942871
    6. '   ' → logprob: -14.154829978942871
    7. '  ' → logprob: -14.654829978942871
    8. '	is' → logprob: -15.154829978942871
    9. '__' → logprob: -15.279829978942871
    10. '_' → logprob: -16.029830932617188

Token 177: '_solution' (ID: 127649)
  Prédit: '_solution'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_solution' → logprob: -6.392202976712724e-06
    2. '_' → logprob: -12.125006675720215
    3. '_sol' → logprob: -15.125006675720215
    4. '_possible' → logprob: -15.375006675720215
    5. '_s' → logprob: -16.1250057220459
    6. ' _' → logprob: -16.3750057220459
    7. '_system' → logprob: -16.8750057220459
    8. '_problem' → logprob: -16.8750057220459
    9. 'solution' → logprob: -17.5000057220459
    10. '_solver' → logprob: -18.3750057220459

Token 178: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -6.749814019713085e-06
    2. 'possible' → logprob: -12.500006675720215
    3. '_' → logprob: -12.750006675720215
    4. 'Possible' → logprob: -17.12500762939453
    5. '```' → logprob: -17.25000762939453
    6. '=' → logprob: -17.75000762939453
    7. '_pos' → logprob: -17.75000762939453
    8. ' possible' → logprob: -18.25000762939453
    9. '==' → logprob: -19.75000762939453
    10. '_is' → logprob: -20.12500762939453

Token 179: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00987554993480444
    2. '==' → logprob: -4.759875774383545
    3. ' ==' → logprob: -6.884875774383545
    4. ':
' → logprob: -8.384875297546387
    5. '=' → logprob: -11.884875297546387
    6. '>' → logprob: -14.009875297546387
    7. ':

' → logprob: -14.759875297546387
    8. ':=' → logprob: -15.634875297546387
    9. ' :' → logprob: -15.759875297546387
    10. '```' → logprob: -16.634876251220703

Token 180: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009685263969004154
    2. ' print' → logprob: -5.259685039520264
    3. 'print' → logprob: -6.259685039520264
    4. ':
' → logprob: -6.759685039520264
    5. ':' → logprob: -7.134685039520264
    6. '
' → logprob: -7.634685039520264
    7. '	print' → logprob: -10.259685516357422
    8. '    
' → logprob: -10.759685516357422
    9. '\n' → logprob: -11.259685516357422
    10. '
' → logprob: -12.634685516357422

Token 181: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.316544771194458
    2. 'print' (adapté à ' print') → logprob: -1.316544771194458
    3. '
' → logprob: -5.816544532775879
    4. '   ' → logprob: -8.441544532775879
    5. ' 
' → logprob: -9.691544532775879
    6. '
' → logprob: -11.691544532775879
    7. '    
' → logprob: -11.816544532775879
    8. '```' → logprob: -13.066544532775879
    9. '	print' → logprob: -13.191544532775879
    10. '\n' → logprob: -14.691544532775879

Token 182: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.06202806904911995
    2. '(' → logprob: -2.812028169631958
    3. '("' → logprob: -10.437027931213379
    4. 'total' → logprob: -10.687027931213379
    5. '('' → logprob: -12.812027931213379
    6. '(
' → logprob: -13.187027931213379
    7. ' (' → logprob: -13.562027931213379
    8. ' total' → logprob: -13.812027931213379
    9. '(t' → logprob: -15.062027931213379
    10. '(f' → logprob: -15.687027931213379

Token 183: '_operations' (ID: 148404)
  Prédit: '_operations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_operations' → logprob: -1.3856492842023727e-06
    2. '_' → logprob: -14.500000953674316
    3. 'operations' → logprob: -14.625000953674316
    4. '_oper' → logprob: -16.125001907348633
    5. '_op' → logprob: -16.250001907348633
    6. '```' → logprob: -17.000001907348633
    7. '_operation' → logprob: -17.125001907348633
    8. '_ops' → logprob: -17.375001907348633
    9. '_options' → logprob: -18.250001907348633
    10. '_total' → logprob: -19.000001907348633

Token 184: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031830633524805307
    2. ')
' → logprob: -5.753182888031006
    3. ' )' → logprob: -12.753183364868164
    4. ')

' → logprob: -13.378183364868164
    5. 'else' → logprob: -15.003183364868164
    6. '())' → logprob: -15.878183364868164
    7. '+' → logprob: -16.503183364868164
    8. ')
' → logprob: -16.878183364868164
    9. '()' → logprob: -17.003183364868164
    10. ' )
' → logprob: -17.128183364868164

Token 185: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.7432603272027336e-06
    2. ' else' → logprob: -13.375001907348633
    3. 'elif' → logprob: -15.625001907348633
    4. '<|end|>' → logprob: -17.375001907348633
    5. '#else' → logprob: -18.125001907348633
    6. '_else' → logprob: -18.500001907348633
    7. '```' → logprob: -18.625001907348633
    8. 'elses' → logprob: -18.625001907348633
    9. 'elser' → logprob: -19.125001907348633
    10. '}else' → logprob: -20.625001907348633

Token 186: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.1689596148207784e-05
    2. ':
' → logprob: -9.875051498413086
    3. '   ' → logprob: -16.125051498413086
    4. ' :' → logprob: -16.500051498413086
    5. ':
' → logprob: -17.875051498413086
    6. ':

' → logprob: -18.375051498413086
    7. '():' → logprob: -19.375051498413086
    8. 'print' → logprob: -19.750051498413086
    9. ':return' → logprob: -19.875051498413086
    10. '{' → logprob: -20.000051498413086

Token 187: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7081571221351624
    2. 'print' → logprob: -0.7081571221351624
    3. ' print' → logprob: -4.208157062530518
    4. '	print' → logprob: -11.708157539367676
    5. '    
' → logprob: -12.458157539367676
    6. '```' → logprob: -12.708157539367676
    7. '  ' → logprob: -12.958157539367676
    8. '    ' → logprob: -13.333157539367676
    9. '-' → logprob: -13.833157539367676
    10. ' ' → logprob: -14.333157539367676

Token 188: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.2664456789934775e-06
    2. ' print' → logprob: -14.375000953674316
    3. '   ' → logprob: -14.625000953674316
    4. '-' → logprob: -15.750000953674316
    5. '```' → logprob: -16.500001907348633
    6. '-print' → logprob: -18.000001907348633
    7. '	print' → logprob: -18.375001907348633
    8. 'pr' → logprob: -18.500001907348633
    9. 'printf' → logprob: -19.375001907348633
    10. '
' → logprob: -19.625001907348633

Token 189: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.23859094083309174
    2. '(' → logprob: -1.613590955734253
    3. '("' → logprob: -4.363590717315674
    4. '("-' → logprob: -8.863591194152832
    5. '('' → logprob: -8.988591194152832
    6. '-' → logprob: -9.613591194152832
    7. '0' → logprob: -10.863591194152832
    8. '()' → logprob: -13.363591194152832
    9. '(
' → logprob: -13.488591194152832
    10. '(False' → logprob: -14.613591194152832

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -19.125
    4. '   ' → logprob: -19.625
    5. ')' → logprob: -20.25
    6. '１' → logprob: -20.4375
    7. '۱' → logprob: -20.875
    8. '2' → logprob: -20.875
    9. '१' → logprob: -21.375
    10. '`' → logprob: -21.5

Token 191: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.125
    3. ' )' → logprob: -17.0
    4. '))' → logprob: -18.0
    5. ')`' → logprob: -18.0
    6. '`)' → logprob: -19.75
    7. ')#' → logprob: -20.25
    8. '')' → logprob: -20.375
    9. '())' → logprob: -20.625
    10. ')}' → logprob: -21.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 189
Tokens correctement prédits (1ère position, stricte): 93
Tokens correctement prédits (1ère position, avec adaptation): 98
Tokens correctement prédits (top 10): 163
Précision stricte (1ère position): 49.21%
Précision adaptée (1ère position): 51.85%
Précision (top 10): 86.24%
================================================================================
