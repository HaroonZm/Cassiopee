================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
a = input().split()
for i in range(len(a)):
    a[i] = int(a[i])

min_a = a[0]
max_a = a[0]

for i in a:
    if i < min_a:
        min_a = i
    if i > max_a:
        max_a = i

print(max_a - min_a)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042768914136104286
    2. ''' → logprob: -8.62542724609375
    3. '('' → logprob: -9.37542724609375
    4. '(n' → logprob: -9.87542724609375
    5. '```' → logprob: -10.37542724609375
    6. '`' → logprob: -10.75042724609375
    7. '("("' → logprob: -11.12542724609375
    8. '(
' → logprob: -11.12542724609375
    9. ')' → logprob: -11.75042724609375
    10. '()' → logprob: -12.25042724609375

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'a' (ID: 64)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7043631672859192
    2. 'if' → logprob: -1.4543631076812744
    3. 'for' → logprob: -2.3293631076812744
    4. 's' → logprob: -2.4543631076812744
    5. 'f' → logprob: -4.3293633460998535
    6. ' ' → logprob: -4.4543633460998535
    7. 'x' → logprob: -4.8293633460998535
    8. ')' → logprob: -4.9543633460998535
    9. 'a' → logprob: -4.9543633460998535
    10. ''' → logprob: -5.0793633460998535

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0034043090417981148
    2. '[a' → logprob: -6.503404140472412
    3. 'a' → logprob: -7.753404140472412
    4. '[i' → logprob: -7.878404140472412
    5. '+' → logprob: -8.25340461730957
    6. '[n' → logprob: -8.37840461730957
    7. '.' → logprob: -9.50340461730957
    8. '\[' → logprob: -9.50340461730957
    9. '[:]' → logprob: -9.50340461730957
    10. '=' → logprob: -9.62840461730957

Token 7: ' input' (ID: 3422)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.718782365322113
    2. ' []' → logprob: -0.843782365322113
    3. 'list' → logprob: -3.718782424926758
    4. ' [' → logprob: -3.718782424926758
    5. '[' → logprob: -4.593782424926758
    6. '[int' → logprob: -4.718782424926758
    7. ' list' → logprob: -4.843782424926758
    8. '[input' → logprob: -6.218782424926758
    9. 'a' → logprob: -6.718782424926758
    10. 'n' → logprob: -6.843782424926758

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001439877087250352
    2. ''' → logprob: -7.376440048217773
    3. '('' → logprob: -7.876440048217773
    4. '"' → logprob: -8.876440048217773
    5. '(
' → logprob: -9.376440048217773
    6. '("("' → logprob: -9.501440048217773
    7. ')' → logprob: -10.251440048217773
    8. '()' → logprob: -10.501440048217773
    9. ' (' → logprob: -11.126440048217773
    10. '[' → logprob: -11.126440048217773

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.04937853664159775
    2. 'strip' → logprob: -3.0493786334991455
    3. 's' → logprob: -7.299378395080566
    4. 'replace' → logprob: -10.174378395080566
    5. 'rstrip' → logprob: -10.424378395080566
    6. 'spl' → logprob: -10.424378395080566
    7. 'r' → logprob: -11.674378395080566
    8. 'sp' → logprob: -12.049378395080566
    9. 'rs' → logprob: -13.674378395080566
    10. ' split' → logprob: -14.174378395080566

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.016231076791882515
    2. '('' → logprob: -5.016231060028076
    3. '("("' → logprob: -5.141231060028076
    4. '()' → logprob: -5.891231060028076
    5. '"' → logprob: -8.016231536865234
    6. '(
' → logprob: -9.266231536865234
    7. '("' → logprob: -9.516231536865234
    8. '(

' → logprob: -9.641231536865234
    9. '((' → logprob: -9.766231536865234
    10. ' (' → logprob: -9.766231536865234

Token 11: 'for' (ID: 1938)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10386238247156143
    2. 'for' → logprob: -2.8538622856140137
    3. 'b' → logprob: -3.8538622856140137
    4. 'c' → logprob: -4.853862285614014
    5. 'n' → logprob: -5.603862285614014
    6. 's' → logprob: -6.103862285614014
    7. 'result' → logprob: -6.353862285614014
    8. '[' → logprob: -6.478862285614014
    9. 'm' → logprob: -7.478862285614014
    10. 'count' → logprob: -7.853862285614014

Token 12: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09787572920322418
    2. ' i' → logprob: -2.4728758335113525
    3. '  ' → logprob: -4.847875595092773
    4. 'i' → logprob: -7.222875595092773
    5. '_' → logprob: -8.847875595092773
    6. ' ‌' → logprob: -9.847875595092773
    7. ' n' → logprob: -10.097875595092773
    8. ' a' → logprob: -11.097875595092773
    9. ' _' → logprob: -11.597875595092773
    10. ' )' → logprob: -11.722875595092773

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.632050633430481
    2. 'in' → logprob: -1.132050633430481
    3. ' ' → logprob: -2.6320505142211914
    4. 'n' → logprob: -3.8820505142211914
    5. '  ' → logprob: -4.132050514221191
    6. '_' → logprob: -4.257050514221191
    7. '[' → logprob: -4.507050514221191
    8. ' n' → logprob: -5.882050514221191
    9. ')' → logprob: -6.257050514221191
    10. '=' → logprob: -6.382050514221191

Token 14: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2015519142150879
    2. 'range' → logprob: -1.701551914215088
    3. ' a' → logprob: -9.57655143737793
    4. 'a' → logprob: -9.95155143737793
    5. ' ' → logprob: -11.82655143737793
    6. 'n' → logprob: -12.57655143737793
    7. '	range' → logprob: -12.70155143737793
    8. '(range' → logprob: -12.95155143737793
    9. ' n' → logprob: -12.95155143737793
    10. ')' → logprob: -14.07655143737793

Token 15: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12714427709579468
    2. '(n' → logprob: -2.1271443367004395
    3. '(len' → logprob: -8.877143859863281
    4. ' (' → logprob: -9.627143859863281
    5. '(i' → logprob: -12.627143859863281
    6. '(a' → logprob: -13.252143859863281
    7. ' ' → logprob: -13.627143859863281
    8. '(
' → logprob: -13.877143859863281
    9. '(range' → logprob: -14.127143859863281
    10. '((' → logprob: -14.627143859863281

Token 16: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.10352219641208649
    2. '(' → logprob: -2.353522300720215
    3. '(n' → logprob: -5.728522300720215
    4. '(s' → logprob: -10.478522300720215
    5. 'a' → logprob: -10.853522300720215
    6. '(
' → logprob: -12.478522300720215
    7. '(

' → logprob: -13.103522300720215
    8. ')' → logprob: -13.603522300720215
    9. '(ai' → logprob: -14.353522300720215
    10. '()' → logprob: -14.353522300720215

Token 17: ')):
' (ID: 22530)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.523706316947937
    2. ')' → logprob: -1.398706316947937
    3. '[' → logprob: -2.0237064361572266
    4. '):' → logprob: -4.148706436157227
    5. ')):' → logprob: -4.773706436157227
    6. '[i' → logprob: -6.148706436157227
    7. '[a' → logprob: -6.773706436157227
    8. ' ' → logprob: -8.398706436157227
    9. ')[' → logprob: -8.398706436157227
    10. ')))' → logprob: -8.898706436157227

Token 18: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.932159960269928
    2. ' a' → logprob: -1.5571599006652832
    3. '   ' → logprob: -1.6821599006652832
    4. '    ' → logprob: -2.182159900665283
    5. ' ' → logprob: -2.682159900665283
    6. ' if' → logprob: -4.557159900665283
    7. '     
' → logprob: -5.682159900665283
    8. '    
' → logprob: -5.682159900665283
    9. 'if' → logprob: -6.432159900665283
    10. '<|end|>' → logprob: -6.432159900665283

Token 19: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.9023222327232361
    2. ' a' → logprob: -1.1523222923278809
    3. ' if' → logprob: -1.6523222923278809
    4. 'if' → logprob: -2.652322292327881
    5. '   ' → logprob: -4.777322292327881
    6. '    ' → logprob: -5.652322292327881
    7. ' for' → logprob: -6.152322292327881
    8. 'for' → logprob: -6.902322292327881
    9. ' ' → logprob: -7.652322292327881
    10. 'print' → logprob: -9.152321815490723

Token 20: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.22779664397239685
    2. '[i' → logprob: -1.6027966737747192
    3. '[a' → logprob: -6.22779655456543
    4. '[int' → logprob: -8.85279655456543
    5. '\[' → logprob: -8.97779655456543
    6. '[...]' → logprob: -10.22779655456543
    7. '[I' → logprob: -10.47779655456543
    8. '[j' → logprob: -11.60279655456543
    9. '[:]' → logprob: -11.72779655456543
    10. '```' → logprob: -11.85279655456543

Token 21: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.040948040783405304
    2. ']' → logprob: -3.5409481525421143
    3. '=' → logprob: -5.665947914123535
    4. ' )' → logprob: -5.665947914123535
    5. ')=' → logprob: -6.540947914123535
    6. ' =' → logprob: -7.415947914123535
    7. '=int' → logprob: -7.790947914123535
    8. '[' → logprob: -8.165947914123535
    9. '   ' → logprob: -8.290947914123535
    10. ']=' → logprob: -8.415947914123535

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0014407115522772074
    2. '=int' → logprob: -6.626440525054932
    3. ' =' → logprob: -9.12644100189209
    4. '+=' → logprob: -13.62644100189209
    5. '*=' → logprob: -14.50144100189209
    6. '=float' → logprob: -14.62644100189209
    7. '=

' → logprob: -14.87644100189209
    8. '<|end|>' → logprob: -14.87644100189209
    9. '=str' → logprob: -15.00144100189209
    10. ')' → logprob: -15.25144100189209

Token 23: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011048882268369198
    2. ' int' → logprob: -4.511048793792725
    3. 'a' → logprob: -15.511049270629883
    4. '[int' → logprob: -15.636049270629883
    5. '(int' → logprob: -15.761049270629883
    6. '   ' → logprob: -15.886049270629883
    7. '=int' → logprob: -15.886049270629883
    8. 'float' → logprob: -16.261049270629883
    9. 'n' → logprob: -16.886049270629883
    10. ']int' → logprob: -16.886049270629883

Token 24: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16025225818157196
    2. '(a' → logprob: -1.9102522134780884
    3. '('' → logprob: -11.535252571105957
    4. '(
' → logprob: -11.785252571105957
    5. '(

' → logprob: -12.035252571105957
    6. 'a' → logprob: -13.535252571105957
    7. '("("' → logprob: -13.785252571105957
    8. '(`' → logprob: -14.410252571105957
    9. ' (' → logprob: -15.285252571105957
    10. '()' → logprob: -15.410252571105957

Token 25: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000779965310357511
    2. '[' → logprob: -7.62578010559082
    3. '[a' → logprob: -8.50078010559082
    4. ')' → logprob: -9.62578010559082
    5. ' [' → logprob: -11.12578010559082
    6. '[I' → logprob: -13.25078010559082
    7. 'a' → logprob: -13.37578010559082
    8. '[
' → logprob: -13.87578010559082
    9. ')[' → logprob: -14.25078010559082
    10. '[]' → logprob: -14.62578010559082

Token 26: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03766913339495659
    2. '))' → logprob: -3.4126691818237305
    3. '])' → logprob: -5.5376691818237305
    4. ')])' → logprob: -10.16266918182373
    5. ']' → logprob: -11.41266918182373
    6. ')]' → logprob: -11.53766918182373
    7. ' )' → logprob: -12.16266918182373
    8. ')))' → logprob: -12.41266918182373
    9. ']))' → logprob: -13.16266918182373
    10. '})' → logprob: -13.16266918182373

Token 27: 'min' (ID: 1493)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4652966558933258
    2. 'for' → logprob: -1.9652966260910034
    3. 's' → logprob: -2.340296745300293
    4. 'm' → logprob: -2.965296745300293
    5. 'max' → logprob: -3.465296745300293
    6. 'sum' → logprob: -4.215296745300293
    7. 'b' → logprob: -4.340296745300293
    8. 'count' → logprob: -5.340296745300293
    9. 'c' → logprob: -5.590296745300293
    10. 'if' → logprob: -6.340296745300293

Token 28: '_a' (ID: 10852)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2647325098514557
    2. '(' → logprob: -1.5147324800491333
    3. '(a' → logprob: -4.764732360839844
    4. 'a' → logprob: -6.514732360839844
    5. '_a' → logprob: -6.514732360839844
    6. '_val' → logprob: -7.639732360839844
    7. '(_)' → logprob: -8.514732360839844
    8. 's' → logprob: -8.639732360839844
    9. '_value' → logprob: -9.514732360839844
    10. ')' → logprob: -9.764732360839844

Token 29: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.09823141992092133
    2. ' =' → logprob: -2.723231315612793
    3. '=' → logprob: -4.223231315612793
    4. '(' → logprob: -5.098231315612793
    5. '[' → logprob: -5.848231315612793
    6. ',' → logprob: -6.473231315612793
    7. ' _' → logprob: -7.473231315612793
    8. '_val' → logprob: -7.848231315612793
    9. ' ' → logprob: -8.098231315612793
    10. ')' → logprob: -8.473231315612793

Token 30: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22360381484031677
    2. 'min' → logprob: -2.5986037254333496
    3. ' min' → logprob: -2.8486037254333496
    4. ' a' → logprob: -2.8486037254333496
    5. 'float' → logprob: -5.72360372543335
    6. '10' → logprob: -6.09860372543335
    7. ' float' → logprob: -6.09860372543335
    8. '100' → logprob: -6.34860372543335
    9. ' ' → logprob: -7.84860372543335
    10. 'max' → logprob: -9.348604202270508

Token 31: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6353532671928406
    2. '[:]' → logprob: -0.7603532671928406
    3. '.copy' → logprob: -7.135353088378906
    4. '.' → logprob: -7.260353088378906
    5. '[:' → logprob: -7.510353088378906
    6. '[min' → logprob: -8.135353088378906
    7. '```' → logprob: -8.260353088378906
    8. '<|end|>' → logprob: -10.260353088378906
    9. '[]' → logprob: -10.510353088378906
    10. '[i' → logprob: -10.885353088378906

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.700132997939363e-05
    2. ' ' → logprob: -11.125017166137695
    3. '])' → logprob: -14.125017166137695
    4. '1' → logprob: -14.625017166137695
    5. ']' → logprob: -14.625017166137695
    6. ')' → logprob: -15.625017166137695
    7. '-' → logprob: -16.375017166137695
    8. 'i' → logprob: -16.937517166137695
    9. '   ' → logprob: -17.687517166137695
    10. ':' → logprob: -17.687517166137695

Token 33: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20582851767539978
    2. ')' → logprob: -1.7058285474777222
    3. '])' → logprob: -6.080828666687012
    4. ' ]' → logprob: -6.830828666687012
    5. ' )' → logprob: -7.330828666687012
    6. '<|end|>' → logprob: -8.705828666687012
    7. ' ' → logprob: -9.580828666687012
    8. ']
' → logprob: -10.830828666687012
    9. '>' → logprob: -10.830828666687012
    10. '[' → logprob: -10.955828666687012

Token 34: 'max' (ID: 3228)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.029786361381411552
    2. 'max' → logprob: -4.404786586761475
    3. '
' → logprob: -4.779786586761475
    4. ' for' → logprob: -5.154786586761475
    5. '<|end|>' → logprob: -6.154786586761475
    6. 'min' → logprob: -8.654786109924316
    7. ' 
' → logprob: -8.904786109924316
    8. ' ' → logprob: -9.404786109924316
    9. ')' → logprob: -9.779786109924316
    10. '' → logprob: -9.904786109924316

Token 35: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.01818072982132435
    2. '_' → logprob: -4.018180847167969
    3. ' _' → logprob: -10.643180847167969
    4. '<|end|>' → logprob: -13.893180847167969
    5. 'a' → logprob: -14.018180847167969
    6. ')_' → logprob: -14.143180847167969
    7. ')' → logprob: -14.143180847167969
    8. '(a' → logprob: -14.393180847167969
    9. '```' → logprob: -14.643180847167969
    10. '_

' → logprob: -14.643180847167969

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06473542004823685
    2. '=' → logprob: -2.9397354125976562
    3. ' ' → logprob: -4.689735412597656
    4. '<|end|>' → logprob: -7.689735412597656
    5. '_' → logprob: -9.689735412597656
    6. ')' → logprob: -9.689735412597656
    7. ',' → logprob: -11.814735412597656
    8. ' )' → logprob: -12.189735412597656
    9. ' ' → logprob: -12.439735412597656
    10. '<|end|>' → logprob: -12.689735412597656

Token 37: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.42873403429985046
    2. ' a' → logprob: -1.0537340641021729
    3. 'max' → logprob: -11.303733825683594
    4. ' max' → logprob: -11.553733825683594
    5. ' ' → logprob: -11.928733825683594
    6. '	a' → logprob: -13.053733825683594
    7. '0' → logprob: -14.053733825683594
    8. ' ' → logprob: -14.428733825683594
    9. 'min' → logprob: -15.678733825683594
    10. '   ' → logprob: -15.678733825683594

Token 38: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.127333340875339e-06
    2. '0' → logprob: -13.125003814697266
    3. '\[' → logprob: -14.125003814697266
    4. ' [' → logprob: -14.625003814697266
    5. '[
' → logprob: -14.750003814697266
    6. '[i' → logprob: -15.500003814697266
    7. '```' → logprob: -15.500003814697266
    8. '[len' → logprob: -17.375003814697266
    9. ' ' → logprob: -17.750003814697266
    10. '[-' → logprob: -17.875003814697266

Token 39: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.930552313453518e-05
    2. '-' → logprob: -10.250049591064453
    3. '])' → logprob: -11.750049591064453
    4. ' ' → logprob: -12.125049591064453
    5. ']' → logprob: -15.625049591064453
    6. 'i' → logprob: -15.875049591064453
    7. '1' → logprob: -17.250049591064453
    8. '   ' → logprob: -17.500049591064453
    9. ' -' → logprob: -17.625049591064453
    10. ')' → logprob: -18.125049591064453

Token 40: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013246455928310752
    2. ']' → logprob: -6.876324653625488
    3. ')
' → logprob: -8.751324653625488
    4. '}' → logprob: -9.876324653625488
    5. '<|end|>' → logprob: -10.501324653625488
    6. '])' → logprob: -10.626324653625488
    7. ' )' → logprob: -11.001324653625488
    8. '）' → logprob: -12.251324653625488
    9. ')

' → logprob: -13.126324653625488
    10. ')]' → logprob: -13.626324653625488

Token 41: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00021867557370569557
    2. ' for' → logprob: -8.875218391418457
    3. '
' → logprob: -10.000218391418457
    4. '```' → logprob: -10.375218391418457
    5. '\n' → logprob: -13.750218391418457
    6. 'n' → logprob: -15.250218391418457
    7. '<|end|>' → logprob: -15.375218391418457
    8. 'i' → logprob: -15.500218391418457
    9. ' 
' → logprob: -16.750219345092773
    10. ':' → logprob: -16.875219345092773

Token 42: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3507724106311798
    2. ' ' → logprob: -1.2257723808288574
    3. ' _' → logprob: -6.600772380828857
    4. '_' → logprob: -7.350772380828857
    5. 'i' → logprob: -8.600772857666016
    6. ' ‌' → logprob: -10.100772857666016
    7. ' ' → logprob: -10.475772857666016
    8. '  ' → logprob: -10.600772857666016
    9. ' ▁' → logprob: -11.850772857666016
    10. ' in' → logprob: -12.350772857666016

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026477128267288208
    2. 'in' → logprob: -3.651477098464966
    3. ' ' → logprob: -8.776476860046387
    4. '	in' → logprob: -11.651476860046387
    5. '  ' → logprob: -12.401476860046387
    6. '+' → logprob: -13.526476860046387
    7. '(' → logprob: -13.901476860046387
    8. '1' → logprob: -14.026476860046387
    9. ')' → logprob: -14.026476860046387
    10. 'In' → logprob: -14.276476860046387

Token 44: ' a' (ID: 261)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.028810575604438782
    2. 'range' → logprob: -3.653810501098633
    3. ' a' → logprob: -6.028810501098633
    4. 'a' → logprob: -9.528810501098633
    5. ' ' → logprob: -10.903810501098633
    6. '  ' → logprob: -12.778810501098633
    7. '   ' → logprob: -13.278810501098633
    8. '	range' → logprob: -14.028810501098633
    9. '(range' → logprob: -14.153810501098633
    10. '    ' → logprob: -14.903810501098633

Token 45: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002546412404626608
    2. ' :' → logprob: -6.002546310424805
    3. ' in' → logprob: -10.252546310424805
    4. ':
' → logprob: -11.502546310424805
    5. '):' → logprob: -11.752546310424805
    6. ':**' → logprob: -11.877546310424805
    7. ')' → logprob: -13.002546310424805
    8. 'in' → logprob: -13.627546310424805
    9. '>' → logprob: -13.752546310424805
    10. '<|end|>' → logprob: -13.877546310424805

Token 46: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4651414155960083
    2. '   ' → logprob: -1.0901414155960083
    3. ' ' → logprob: -3.8401412963867188
    4. 'if' → logprob: -5.090141296386719
    5. ':' → logprob: -6.090141296386719
    6. '```' → logprob: -6.465141296386719
    7. '    ' → logprob: -6.965141296386719
    8. '  ' → logprob: -6.965141296386719
    9. '    
' → logprob: -7.465141296386719
    10. ' 
' → logprob: -7.590141296386719

Token 47: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.015948263928294182
    2. 'if' (adapté à ' if') → logprob: -5.015948295593262
    3. '   ' → logprob: -5.390948295593262
    4. ' ' → logprob: -6.015948295593262
    5. '    ' → logprob: -7.390948295593262
    6. ' ```' → logprob: -7.390948295593262
    7. ' 
' → logprob: -7.640948295593262
    8. '```' → logprob: -8.515948295593262
    9. '    
' → logprob: -9.515948295593262
    10. ' i' → logprob: -9.640948295593262

Token 48: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0008894255734048784
    2. ' ' → logprob: -7.500889301300049
    3. 'i' → logprob: -8.000889778137207
    4. '  ' → logprob: -14.625889778137207
    5. ' ' → logprob: -15.125889778137207
    6. '	i' → logprob: -15.625889778137207
    7. '    ' → logprob: -15.750889778137207
    8. '(i' → logprob: -16.37588882446289
    9. ' (' → logprob: -17.12588882446289
    10. ' a' → logprob: -17.37588882446289

Token 49: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.07516579329967499
    2. '<' → logprob: -2.7001657485961914
    3. ' >' → logprob: -5.575165748596191
    4. '>' → logprob: -6.575165748596191
    5. ' ' → logprob: -10.700165748596191
    6. '<int' → logprob: -12.700165748596191
    7. '><' → logprob: -13.700165748596191
    8. '<|end|>' → logprob: -14.450165748596191
    9. ' ><' → logprob: -14.575165748596191
    10. '   ' → logprob: -14.700165748596191

Token 50: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.5759481191635132
    2. 'min' → logprob: -0.8259481191635132
    3. ' ' → logprob: -12.325947761535645
    4. '	min' → logprob: -13.075947761535645
    5. '_min' → logprob: -14.950947761535645
    6. '=min' → logprob: -15.075947761535645
    7. '(min' → logprob: -15.200947761535645
    8. 'max' → logprob: -15.450947761535645
    9. 'm' → logprob: -15.575947761535645
    10. ' minimum' → logprob: -15.825947761535645

Token 51: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -5.080963092041202e-06
    2. '_' → logprob: -12.250004768371582
    3. '_:' → logprob: -16.0000057220459
    4. ' _' → logprob: -16.0000057220459
    5. 'a' → logprob: -17.2500057220459
    6. '_an' → logprob: -18.3750057220459
    7. '_e' → logprob: -18.5000057220459
    8. ':' → logprob: -18.5000057220459
    9. '_i' → logprob: -18.5000057220459
    10. ''_' → logprob: -19.3750057220459

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012529309839010239
    2. ':
' → logprob: -4.387529373168945
    3. ' :' → logprob: -12.012529373168945
    4. '   ' → logprob: -12.512529373168945
    5. '):' → logprob: -12.887529373168945
    6. ':min' → logprob: -13.137529373168945
    7. ':i' → logprob: -13.762529373168945
    8. ' :
' → logprob: -13.887529373168945
    9. ':
' → logprob: -13.887529373168945
    10. '       ' → logprob: -14.262529373168945

Token 53: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.237299382686615
    2. '       ' → logprob: -1.8622994422912598
    3. '   ' → logprob: -4.11229944229126
    4. ':
' → logprob: -4.23729944229126
    5. ' :' → logprob: -4.73729944229126
    6. ' min' → logprob: -4.98729944229126
    7. 'min' → logprob: -5.86229944229126
    8. ':min' → logprob: -6.23729944229126
    9. ' :
' → logprob: -6.48729944229126
    10. '    ' → logprob: -7.11229944229126

Token 54: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.014512984082102776
    2. 'min' (adapté à ' min') → logprob: -4.26451301574707
    3. '_min' → logprob: -8.38951301574707
    4. ' 
' → logprob: -10.38951301574707
    5. '	min' → logprob: -10.88951301574707
    6. '           ' → logprob: -11.38951301574707
    7. '
' → logprob: -11.38951301574707
    8. '    
' → logprob: -11.76451301574707
    9. '(min' → logprob: -12.26451301574707
    10. '=min' → logprob: -12.38951301574707

Token 55: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00015991552209015936
    2. '_' → logprob: -8.750160217285156
    3. ' _' → logprob: -14.000160217285156
    4. '_i' → logprob: -15.000160217285156
    5. '_e' → logprob: -17.125160217285156
    6. '_b' → logprob: -17.625160217285156
    7. '_an' → logprob: -17.750160217285156
    8. 'a' → logprob: -18.000160217285156
    9. '_ai' → logprob: -18.250160217285156
    10. ')_' → logprob: -18.500160217285156

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029750952497124672
    2. '=' → logprob: -3.5297510623931885
    3. ' =
' → logprob: -14.90475082397461
    4. ' ' → logprob: -16.65475082397461
    5. '=i' → logprob: -16.90475082397461
    6. '＝' → logprob: -17.02975082397461
    7. ' =)' → logprob: -18.27975082397461
    8. '_' → logprob: -18.65475082397461
    9. ',' → logprob: -19.02975082397461
    10. '=

' → logprob: -19.40475082397461

Token 57: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16023823618888855
    2. 'i' → logprob: -1.910238265991211
    3. ' ' → logprob: -11.410238265991211
    4. ' ' → logprob: -13.285238265991211
    5. '	i' → logprob: -13.660238265991211
    6. '_i' → logprob: -16.78523826599121
    7. 'space' → logprob: -17.66023826599121
    8. '    ' → logprob: -18.28523826599121
    9. '(i' → logprob: -18.28523826599121
    10. ' 
' → logprob: -18.28523826599121

Token 58: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8822206258773804
    2. '    
' → logprob: -1.2572206258773804
    3. '
' → logprob: -1.3822206258773804
    4. '   
' → logprob: -3.50722074508667
    5. '  
' → logprob: -4.25722074508667
    6. ' 
' → logprob: -5.63222074508667
    7. '        
' → logprob: -7.13222074508667
    8. 'elif' → logprob: -7.25722074508667
    9. ' elif' → logprob: -8.007220268249512
    10. '<|end|>' → logprob: -8.132220268249512

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01356063224375248
    2. '    
' → logprob: -5.388560771942139
    3. '
' → logprob: -5.638560771942139
    4. 'elif' → logprob: -5.888560771942139
    5. ' elif' → logprob: -6.888560771942139
    6. '  
' → logprob: -7.513560771942139
    7. '   
' → logprob: -8.01356029510498
    8. ' 
' → logprob: -8.38856029510498
    9. '  ' → logprob: -8.63856029510498
    10. ' ' → logprob: -9.88856029510498

Token 60: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31173595786094666
    2. '
' → logprob: -1.936735987663269
    3. 'elif' → logprob: -2.8117358684539795
    4. '    
' → logprob: -3.4367358684539795
    5. ' elif' → logprob: -4.561736106872559
    6. ' 
' → logprob: -4.811736106872559
    7. '  
' → logprob: -5.686736106872559
    8. 'if' (adapté à ' if') → logprob: -5.811736106872559
    9. ' if' → logprob: -6.061736106872559
    10. '   
' → logprob: -6.186736106872559

Token 61: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002813078695908189
    2. 'i' → logprob: -5.87781286239624
    3. ' ' → logprob: -11.877813339233398
    4. '>' → logprob: -14.252813339233398
    5. ' ' → logprob: -15.502813339233398
    6. '	i' → logprob: -15.752813339233398
    7. '   ' → logprob: -16.1278133392334
    8. '  ' → logprob: -16.1278133392334
    9. '    ' → logprob: -17.8778133392334
    10. 'max' → logprob: -18.5028133392334

Token 62: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.12693998217582703
    2. ' >' → logprob: -2.1269400119781494
    3. ' ' → logprob: -11.37693977355957
    4. '   ' → logprob: -15.12693977355957
    5. '  ' → logprob: -16.75193977355957
    6. ' ' → logprob: -17.12693977355957
    7. '>

' → logprob: -17.12693977355957
    8. ' >

' → logprob: -17.62693977355957
    9. '&gt' → logprob: -17.62693977355957
    10. '">' → logprob: -17.75193977355957

Token 63: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.06197015196084976
    2. 'max' → logprob: -2.8119702339172363
    3. ' ' → logprob: -12.936969757080078
    4. '	max' → logprob: -16.936969757080078
    5. '  ' → logprob: -17.436969757080078
    6. '(max' → logprob: -17.686969757080078
    7. '_max' → logprob: -18.061969757080078
    8. '=max' → logprob: -18.686969757080078
    9. '[max' → logprob: -18.936969757080078
    10. '   ' → logprob: -19.061969757080078

Token 64: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -6.704273118884885e-07
    2. 'a' → logprob: -15.125000953674316
    3. ' _' → logprob: -15.625000953674316
    4. '_' → logprob: -16.125
    5. '_i' → logprob: -19.0
    6. '   ' → logprob: -19.25
    7. '_ai' → logprob: -19.625
    8. '_an' → logprob: -19.75
    9. ' ' → logprob: -19.875
    10. '_e' → logprob: -20.125

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3591736853122711
    2. ' :' → logprob: -1.2341736555099487
    3. ' :
' → logprob: -4.984173774719238
    4. ':
' → logprob: -5.734173774719238
    5. '       ' → logprob: -8.734173774719238
    6. '   ' → logprob: -8.984173774719238
    7. ' ' → logprob: -9.234173774719238
    8. '>' → logprob: -9.859173774719238
    9. ' =' → logprob: -10.234173774719238
    10. '=' → logprob: -10.234173774719238

Token 66: '       ' (ID: 309)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10020849853754044
    2. 'i' → logprob: -2.3502085208892822
    3. '   ' → logprob: -13.725208282470703
    4. ' ' → logprob: -15.225208282470703
    5. '	i' → logprob: -15.600208282470703
    6. 'max' → logprob: -16.225208282470703
    7. '       ' → logprob: -16.475208282470703
    8. ' max' → logprob: -16.600208282470703
    9. '  ' → logprob: -17.225208282470703
    10. '    ' → logprob: -17.350208282470703

Token 67: ' max' (ID: 2999)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16122376918792725
    2. 'i' → logprob: -1.9112237691879272
    3. ' max' → logprob: -7.161223888397217
    4. 'max' (adapté à ' max') → logprob: -8.411223411560059
    5. ' ' → logprob: -15.286223411560059
    6. '   ' → logprob: -15.661223411560059
    7. '	i' → logprob: -16.161224365234375
    8. ' =' → logprob: -16.411224365234375
    9. '=i' → logprob: -17.036224365234375
    10. ' ' → logprob: -17.286224365234375

Token 68: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -5.9153885558771435e-06
    2. '_' → logprob: -12.375005722045898
    3. ' _' → logprob: -14.875005722045898
    4. '_ai' → logprob: -14.875005722045898
    5. '_i' → logprob: -15.125005722045898
    6. 'a' → logprob: -15.125005722045898
    7. '<|end|>' → logprob: -15.250005722045898
    8. '_an' → logprob: -17.2500057220459
    9. '}_' → logprob: -18.2500057220459
    10. '```' → logprob: -18.6250057220459

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10022716224193573
    2. '=' → logprob: -2.350227117538452
    3. ' =
' → logprob: -11.475227355957031
    4. ' ' → logprob: -11.600227355957031
    5. '<|end|>' → logprob: -15.350227355957031
    6. '_' → logprob: -15.475227355957031
    7. ' =)' → logprob: -15.850227355957031
    8. '=
' → logprob: -15.975227355957031
    9. '=

' → logprob: -16.47522735595703
    10. ' =
' → logprob: -16.85022735595703

Token 70: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12700065970420837
    2. 'i' → logprob: -2.127000570297241
    3. ' ' → logprob: -9.62700080871582
    4. '	i' → logprob: -12.62700080871582
    5. ' ' → logprob: -12.87700080871582
    6. '  ' → logprob: -15.12700080871582
    7. '_i' → logprob: -15.62700080871582
    8. 's' → logprob: -16.12700080871582
    9. ' ‌' → logprob: -16.62700080871582
    10. '​' → logprob: -17.25200080871582

Token 71: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.19383491575717926
    2. '+' → logprob: -2.3188350200653076
    3. 'p' → logprob: -3.4438350200653076
    4. ' 
' → logprob: -4.6938347816467285
    5. 'n' → logprob: -4.8188347816467285
    6. '#' → logprob: -4.8188347816467285
    7. '
' → logprob: -5.0688347816467285
    8. ')' → logprob: -6.1938347816467285
    9. '-' → logprob: -6.8188347816467285
    10. ' print' → logprob: -6.8188347816467285

Token 72: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008365396410226822
    2. 'p' → logprob: -6.383365631103516
    3. 'for' → logprob: -6.633365631103516
    4. 'min' → logprob: -7.008365631103516
    5. 'diff' → logprob: -7.008365631103516
    6. 'd' → logprob: -7.133365631103516
    7. 'range' → logprob: -7.508365631103516
    8. 'pr' → logprob: -7.883365631103516
    9. 'prin' → logprob: -8.008365631103516
    10. 'difference' → logprob: -8.508365631103516

Token 73: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006788347964175045
    2. '("("' → logprob: -7.625679016113281
    3. '('' → logprob: -9.000679016113281
    4. '(min' → logprob: -10.125679016113281
    5. '((' → logprob: -11.375679016113281
    6. '(max' → logprob: -11.625679016113281
    7. '()' → logprob: -13.250679016113281
    8. '("' → logprob: -13.250679016113281
    9. '(`' → logprob: -13.875679016113281
    10. '(
' → logprob: -14.375679016113281

Token 74: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0010025626979768276
    2. '_' → logprob: -7.001002788543701
    3. '(' → logprob: -9.876002311706543
    4. '(a' → logprob: -10.876002311706543
    5. '_)' → logprob: -12.001002311706543
    6. 'a' → logprob: -12.501002311706543
    7. '(_' → logprob: -12.501002311706543
    8. ' _' → logprob: -12.751002311706543
    9. ')' → logprob: -13.001002311706543
    10. '(max' → logprob: -13.751002311706543

Token 75: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009306333377026021
    2. ',' → logprob: -7.1259307861328125
    3. ' )' → logprob: -9.375930786132812
    4. '-' → logprob: -10.750930786132812
    5. ' -' → logprob: -11.625930786132812
    6. ' ' → logprob: -13.250930786132812
    7. ',)' → logprob: -13.250930786132812
    8. '-min' → logprob: -13.875930786132812
    9. ' ,' → logprob: -13.875930786132812
    10. '),' → logprob: -14.125930786132812

Token 76: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0015023599844425917
    2. ' min' → logprob: -6.501502513885498
    3. '	min' → logprob: -17.751502990722656
    4. '(min' → logprob: -17.876502990722656
    5. '_min' → logprob: -18.626502990722656
    6. '[min' → logprob: -20.126502990722656
    7. 'max' → logprob: -20.751502990722656
    8. 'mini' → logprob: -21.251502990722656
    9. ' ' → logprob: -21.376502990722656
    10. 'm' → logprob: -21.501502990722656

Token 77: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -2.4034345187828876e-05
    2. ')' → logprob: -11.50002384185791
    3. '_)' → logprob: -11.75002384185791
    4. 'a' → logprob: -13.00002384185791
    5. '_' → logprob: -13.25002384185791
    6. ')_' → logprob: -13.25002384185791
    7. ' _' → logprob: -16.500024795532227
    8. '))' → logprob: -16.875024795532227
    9. ')a' → logprob: -17.250024795532227
    10. '(a' → logprob: -18.500024795532227

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. '))' → logprob: -16.625
    3. ' )' → logprob: -16.75
    4. '')' → logprob: -18.75
    5. ')`' → logprob: -18.875
    6. ')}' → logprob: -19.375
    7. ')
' → logprob: -19.375
    8. '()' → logprob: -20.0
    9. ')#' → logprob: -20.125
    10. '}' → logprob: -20.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 76
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 65
Précision stricte (1ère position): 44.74%
Précision adaptée (1ère position): 46.05%
Précision (top 10): 85.53%
================================================================================
