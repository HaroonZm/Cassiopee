================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:45
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import lru_cache
from operator import mul
from itertools import starmap

A, B, C = map(int, input().split())
K = int(input())
vals = (A, B, C)

@lru_cache(maxsize=None)
def dfs(i, a, b, c):
    if i == K:
        return sum(starmap(mul, zip(vals, (1 << a, 1 << b, 1 << c))))
    return max(
        dfs(i + 1, a + 1, b, c),
        dfs(i + 1, a, b + 1, c),
        dfs(i + 1, a, b, c + 1),
    )

print(dfs(0, 0, 0, 0))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' l' (ID: 305)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -0.0010136376367881894
    2. 'r' → logprob: -7.62601375579834
    3. 'z' → logprob: -8.50101375579834
    4. 'partial' → logprob: -9.00101375579834
    5. 'wrap' → logprob: -9.62601375579834
    6. 'ruz' → logprob: -9.62601375579834
    7. 'reduce' → logprob: -10.37601375579834
    8. 'ambda' → logprob: -12.37601375579834
    9. '```' → logprob: -12.50101375579834
    10. 'a' → logprob: -12.50101375579834

Token 5: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.003076348453760147
    2. 'cache' → logprob: -6.253076553344727
    3. '_c' → logprob: -7.128076553344727
    4. 'c' → logprob: -8.878076553344727
    5. '_' → logprob: -9.628076553344727
    6. '_ca' → logprob: -10.253076553344727
    7. 'a' → logprob: -10.628076553344727
    8. 'ca' → logprob: -10.628076553344727
    9. '_cached' → logprob: -11.753076553344727
    10. 'o' → logprob: -11.878076553344727

Token 6: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006361720617860556
    2. '\(' → logprob: -5.756361484527588
    3. '```' → logprob: -6.881361484527588
    4. '@' → logprob: -7.256361484527588
    5. 'def' → logprob: -7.506361484527588
    6. '\' → logprob: -7.881361484527588
    7. '(
' → logprob: -7.881361484527588
    8. 'd' → logprob: -10.631361961364746
    9. '`' → logprob: -10.756361961364746
    10. '\n' → logprob: -11.131361961364746

Token 7: 'from' (ID: 2845)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.279599666595459
    2. '(' → logprob: -1.529599666595459
    3. '```' → logprob: -4.404599666595459
    4. 'def' → logprob: -4.654599666595459
    5. '(
' → logprob: -6.529599666595459
    6. '\' → logprob: -6.529599666595459
    7. '\(' → logprob: -7.154599666595459
    8. '@
' → logprob: -7.404599666595459
    9. '`' → logprob: -8.404600143432617
    10. '\n' → logprob: -9.029600143432617

Token 8: ' operator' (ID: 11019)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.7436773777008057
    2. ' collections' → logprob: -1.1186773777008057
    3. ' typing' → logprob: -1.9936773777008057
    4. ' sys' → logprob: -3.8686773777008057
    5. ' os' → logprob: -4.118677139282227
    6. ' time' → logprob: -4.493677139282227
    7. 'collections' → logprob: -6.118677139282227
    8. ' fast' → logprob: -6.368677139282227
    9. ' ' → logprob: -6.493677139282227
    10. ' threading' → logprob: -6.618677139282227

Token 9: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.04877676069736481
    2. 'import' → logprob: -3.048776865005493
    3. ' ' → logprob: -9.048776626586914
    4. '.' → logprob: -10.173776626586914
    5. '	import' → logprob: -11.298776626586914
    6. '_import' → logprob: -11.798776626586914
    7. '.import' → logprob: -12.173776626586914
    8. ' .' → logprob: -13.298776626586914
    9. ' ' → logprob: -13.548776626586914
    10. '```' → logprob: -13.673776626586914

Token 10: ' mul' (ID: 9975)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.6356444358825684
    2. ' item' → logprob: -1.0106444358825684
    3. ' attr' → logprob: -3.5106444358825684
    4. ' import' → logprob: -3.8856444358825684
    5. 'item' → logprob: -4.010644435882568
    6. 'add' → logprob: -4.135644435882568
    7. ' mul' → logprob: -4.635644435882568
    8. ' method' → logprob: -5.135644435882568
    9. ' ' → logprob: -6.385644435882568
    10. 'attr' → logprob: -7.010644435882568

Token 11: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3270660638809204
    2. '\' → logprob: -1.7020660638809204
    3. '```' → logprob: -1.8270660638809204
    4. ',' → logprob: -2.202065944671631
    5. '\n' → logprob: -2.202065944671631
    6. '@' → logprob: -2.952065944671631
    7. '`' → logprob: -3.327065944671631
    8. '<|end|>' → logprob: -3.952065944671631
    9. '*' → logprob: -4.452065944671631
    10. '(
' → logprob: -4.452065944671631

Token 12: 'from' (ID: 2845)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.8859212398529053
    2. '@' → logprob: -1.3859212398529053
    3. '\' → logprob: -2.2609212398529053
    4. ',' → logprob: -2.5109212398529053
    5. '`' → logprob: -3.5109212398529053
    6. '\n' → logprob: -3.5109212398529053
    7. 'def' → logprob: -4.135921478271484
    8. '@
' → logprob: -4.385921478271484
    9. ',
' → logprob: -4.635921478271484
    10. '<|end|>' → logprob: -4.885921478271484

Token 13: ' itertools' (ID: 103178)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.168516144156456
    2. ' math' → logprob: -2.418516159057617
    3. ' itertools' → logprob: -2.793516159057617
    4. 'operator' → logprob: -5.668516159057617
    5. 'it' → logprob: -6.918516159057617
    6. 'fun' → logprob: -9.168516159057617
    7. ' ' → logprob: -9.543516159057617
    8. ' operator' → logprob: -9.793516159057617
    9. ' functools' → logprob: -9.793516159057617
    10. 'os' → logprob: -10.918516159057617

Token 14: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.6973557472229004
    2. ' import' → logprob: -0.6973557472229004
    3. '.' → logprob: -5.8223557472229
    4. '.import' → logprob: -8.072355270385742
    5. '	import' → logprob: -8.697355270385742
    6. 'ertools' → logprob: -8.822355270385742
    7. ' .' → logprob: -8.947355270385742
    8. '_import' → logprob: -9.197355270385742
    9. '.im' → logprob: -9.322355270385742
    10. '.chain' → logprob: -10.072355270385742

Token 15: ' st' (ID: 420)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.6120526194572449
    2. 'product' → logprob: -0.9870526194572449
    3. 'com' → logprob: -2.9870526790618896
    4. 'count' → logprob: -3.7370526790618896
    5. 'per' → logprob: -5.2370524406433105
    6. ' product' → logprob: -6.3620524406433105
    7. ' accumulate' → logprob: -6.3620524406433105
    8. 'import' → logprob: -6.8620524406433105
    9. 'is' → logprob: -8.112052917480469
    10. 'chain' → logprob: -8.862052917480469

Token 16: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.6344013214111328
    2. 'ar' → logprob: -0.7594013214111328
    3. 'ertools' → logprob: -7.259401321411133
    4. 'arp' → logprob: -7.384401321411133
    5. 'arl' → logprob: -9.384401321411133
    6. 'art' → logprob: -9.384401321411133
    7. 'a' → logprob: -9.759401321411133
    8. 'armac' → logprob: -9.884401321411133
    9. 'arb' → logprob: -10.384401321411133
    10. 'product' → logprob: -11.384401321411133

Token 17: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.00016539888747502118
    2. 'atch' → logprob: -8.750164985656738
    3. 'ep' → logprob: -12.875164985656738
    4. 'up' → logprob: -13.750164985656738
    5. 'apse' → logprob: -13.750164985656738
    6. 'at' → logprob: -14.250164985656738
    7. 'e' → logprob: -14.875164985656738
    8. 'app' → logprob: -15.500164985656738
    9. 'apping' → logprob: -16.000165939331055
    10. 'apped' → logprob: -16.125165939331055

Token 18: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9823566675186157
    2. ',' → logprob: -1.4823566675186157
    3. 'def' → logprob: -1.6073566675186157
    4. '(
' → logprob: -2.732356548309326
    5. '\n' → logprob: -3.232356548309326
    6. '\' → logprob: -3.857356548309326
    7. ')' → logprob: -4.107356548309326
    8. '*' → logprob: -4.607356548309326
    9. ',
' → logprob: -4.732356548309326
    10. '@' → logprob: -4.982356548309326

Token 19: 'A' (ID: 32)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.09542296826839447
    2. '(' → logprob: -2.9704229831695557
    3. 'def' → logprob: -3.4704229831695557
    4. '(
' → logprob: -5.595422744750977
    5. ',' → logprob: -5.970422744750977
    6. ')' → logprob: -7.595422744750977
    7. '```' → logprob: -7.845422744750977
    8. '`' → logprob: -8.095422744750977
    9. '@
' → logprob: -8.220422744750977
    10. '#' → logprob: -8.470422744750977

Token 20: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.29206064343452454
    2. '@' → logprob: -2.292060613632202
    3. 'n' → logprob: -3.292060613632202
    4. '=' → logprob: -3.417060613632202
    5. 'd' → logprob: -3.667060613632202
    6. 'L' → logprob: -4.667060852050781
    7. 'C' → logprob: -4.792060852050781
    8. '_l' → logprob: -5.167060852050781
    9. '_n' → logprob: -5.292060852050781
    10. 'P' → logprob: -5.417060852050781

Token 21: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.4344439208507538
    2. ' B' → logprob: -1.0594439506530762
    3. '*' → logprob: -6.184443950653076
    4. 'n' → logprob: -7.184443950653076
    5. '=' → logprob: -7.559443950653076
    6. ' ' → logprob: -7.934443950653076
    7. ' =' → logprob: -8.059443473815918
    8. 'b' → logprob: -8.184443473815918
    9. ' n' → logprob: -8.309443473815918
    10. 'k' → logprob: -8.934443473815918

Token 22: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08466818183660507
    2. '=' → logprob: -2.5846681594848633
    3. ',' → logprob: -5.334668159484863
    4. ' ' → logprob: -7.834668159484863
    5. ')' → logprob: -8.709668159484863
    6. ' ,' → logprob: -8.709668159484863
    7. '_' → logprob: -9.459668159484863
    8. '[' → logprob: -10.334668159484863
    9. '.' → logprob: -10.709668159484863
    10. '  ' → logprob: -10.709668159484863

Token 23: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.2228551208972931
    2. 'C' → logprob: -1.9728550910949707
    3. ' =' → logprob: -3.2228550910949707
    4. ' ' → logprob: -4.847855091094971
    5. '*' → logprob: -5.597855091094971
    6. ' *' → logprob: -6.097855091094971
    7. ' N' → logprob: -6.597855091094971
    8. '=' → logprob: -6.847855091094971
    9. ',' → logprob: -7.097855091094971
    10. ' and' → logprob: -7.535355091094971

Token 24: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6403224468231201
    2. '=' → logprob: -0.7653224468231201
    3. ',' → logprob: -4.890322685241699
    4. ')' → logprob: -9.2653226852417
    5. '_' → logprob: -11.2653226852417
    6. '>' → logprob: -11.3903226852417
    7. ' ' → logprob: -12.0153226852417
    8. '<|end|>' → logprob: -12.0153226852417
    9. '.' → logprob: -12.2653226852417
    10. '[' → logprob: -12.5153226852417

Token 25: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6246349215507507
    2. '1' → logprob: -1.4996349811553955
    3. '0' → logprob: -1.7496349811553955
    4. 'map' → logprob: -3.7496349811553955
    5. ' map' → logprob: -3.7496349811553955
    6. '3' → logprob: -5.124634742736816
    7. '10' → logprob: -5.499634742736816
    8. '(' → logprob: -6.249634742736816
    9. ' (' → logprob: -6.249634742736816
    10. '2' → logprob: -6.249634742736816

Token 26: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.034540802240371704
    2. '(' → logprob: -3.409540891647339
    3. 'int' → logprob: -7.40954065322876
    4. '(lambda' → logprob: -8.909541130065918
    5. '(str' → logprob: -9.534541130065918
    6. '(input' → logprob: -10.284541130065918
    7. '<|end|>' → logprob: -11.659541130065918
    8. '<int' → logprob: -12.159541130065918
    9. '(eval' → logprob: -12.159541130065918
    10. '[int' → logprob: -12.159541130065918

Token 27: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03533579036593437
    2. ')' → logprob: -4.285336017608643
    3. 'input' → logprob: -4.535336017608643
    4. '(' → logprob: -4.785336017608643
    5. ',input' → logprob: -7.785336017608643
    6. ' input' → logprob: -8.035335540771484
    7. '<|end|>' → logprob: -8.160335540771484
    8. ',' → logprob: -8.785335540771484
    9. '=input' → logprob: -9.035335540771484
    10. ')(' → logprob: -9.535335540771484

Token 28: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.575994610786438
    2. ' input' → logprob: -0.825994610786438
    3. ')' → logprob: -10.450994491577148
    4. '(input' → logprob: -11.450994491577148
    5. ' ' → logprob: -12.575994491577148
    6. '=input' → logprob: -12.825994491577148
    7. ',input' → logprob: -13.075994491577148
    8. 'open' → logprob: -13.075994491577148
    9. '```' → logprob: -13.450994491577148
    10. '	input' → logprob: -13.950994491577148

Token 29: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9648080468177795
    2. '())' → logprob: -1.0898079872131348
    3. '(' → logprob: -1.5898079872131348
    4. ')' → logprob: -3.5898079872131348
    5. '().' → logprob: -4.464807987213135
    6. '());' → logprob: -4.464807987213135
    7. '(()' → logprob: -4.464807987213135
    8. '()>' → logprob: -5.589807987213135
    9. '('' → logprob: -6.339807987213135
    10. '();)' → logprob: -6.339807987213135

Token 30: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.263011578586884e-05
    2. 'strip' → logprob: -10.125042915344238
    3. ' split' → logprob: -13.500042915344238
    4. 'rstrip' → logprob: -14.500042915344238
    5. '(split' → logprob: -15.000042915344238
    6. 'spl' → logprob: -16.250041961669922
    7. 'read' → logprob: -16.375041961669922
    8. '().' → logprob: -16.875041961669922
    9. ')' → logprob: -17.000041961669922
    10. 's' → logprob: -17.625041961669922

Token 31: '())
' (ID: 4574)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.253653883934021
    2. ')' → logprob: -1.503653883934021
    3. '()))' → logprob: -7.1286540031433105
    4. '())' → logprob: -7.2536540031433105
    5. '()' → logprob: -9.253653526306152
    6. ')))' → logprob: -9.628653526306152
    7. '),' → logprob: -10.503653526306152
    8. '))
' → logprob: -11.378653526306152
    9. ')
' → logprob: -12.878653526306152
    10. ')`' → logprob: -13.628653526306152

Token 32: 'K' (ID: 42)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '@' → logprob: -0.5916365385055542
    2. 'def' → logprob: -1.7166365385055542
    3. ')' → logprob: -1.9666365385055542
    4. 'n' → logprob: -4.466636657714844
    5. '```' → logprob: -4.466636657714844
    6. '@
' → logprob: -4.591636657714844
    7. '(' → logprob: -4.716636657714844
    8. 'for' → logprob: -4.841636657714844
    9. '\' → logprob: -4.966636657714844
    10. 'result' → logprob: -5.091636657714844

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12302500754594803
    2. ' -=' → logprob: -2.4980249404907227
    3. '=' → logprob: -3.4980249404907227
    4. '-=' → logprob: -7.498024940490723
    5. ' +=' → logprob: -7.623024940490723
    6. '-' → logprob: -7.998024940490723
    7. ',' → logprob: -8.123024940490723
    8. ' *=' → logprob: -8.123024940490723
    9. ' >>=' → logprob: -8.248024940490723
    10. '```' → logprob: -8.373024940490723

Token 34: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.020593157038092613
    2. ' int' → logprob: -3.8955931663513184
    3. '[int' → logprob: -11.14559268951416
    4. 'A' → logprob: -12.02059268951416
    5. ' ' → logprob: -12.02059268951416
    6. '10' → logprob: -12.52059268951416
    7. '(int' → logprob: -12.77059268951416
    8. '100' → logprob: -12.89559268951416
    9. '<int' → logprob: -12.89559268951416
    10. '3' → logprob: -13.14559268951416

Token 35: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0036409306339919567
    2. '(' → logprob: -5.628641128540039
    3. 'input' → logprob: -10.753641128540039
    4. '()' → logprob: -11.253641128540039
    5. ' (' → logprob: -13.128641128540039
    6. '('' → logprob: -13.378641128540039
    7. '=input' → logprob: -14.253641128540039
    8. '(in' → logprob: -14.503641128540039
    9. ',input' → logprob: -15.128641128540039
    10. ' input' → logprob: -15.253641128540039

Token 36: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5459052920341492
    2. ')' → logprob: -1.045905351638794
    3. '()' → logprob: -2.670905351638794
    4. '(' → logprob: -10.170905113220215
    5. ' ())' → logprob: -10.545905113220215
    6. ' )' → logprob: -10.920905113220215
    7. '`)' → logprob: -11.420905113220215
    8. '().' → logprob: -11.920905113220215
    9. '())
' → logprob: -12.295905113220215
    10. '))' → logprob: -12.795905113220215

Token 37: 'vals' (ID: 44567)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.5068246126174927
    2. '@' → logprob: -2.256824493408203
    3. 'dp' → logprob: -2.381824493408203
    4. 'result' → logprob: -2.506824493408203
    5. 'if' → logprob: -2.756824493408203
    6. '**' → logprob: -3.006824493408203
    7. 'pow' → logprob: -3.131824493408203
    8. ')' → logprob: -3.631824493408203
    9. 'a' → logprob: -3.756824493408203
    10. 'count' → logprob: -3.756824493408203

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029770854860544205
    2. '=' → logprob: -3.529770851135254
    3. ',' → logprob: -11.154770851135254
    4. '=[]' → logprob: -13.404770851135254
    5. ' ' → logprob: -13.904770851135254
    6. '[' → logprob: -14.154770851135254
    7. ' =[' → logprob: -14.279770851135254
    8. '[]' → logprob: -14.529770851135254
    9. 's' → logprob: -15.029770851135254
    10. ')' → logprob: -15.529770851135254

Token 39: ' (' (ID: 350)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.9027577638626099
    2. '[' → logprob: -1.0277577638626099
    3. 'list' → logprob: -2.9027576446533203
    4. ' list' → logprob: -3.0277576446533203
    5. '[A' → logprob: -3.1527576446533203
    6. '[(' → logprob: -3.7777576446533203
    7. '[list' → logprob: -4.27775764465332
    8. '[a' → logprob: -4.52775764465332
    9. '[]' → logprob: -4.77775764465332
    10. '[l' → logprob: -5.52775764465332

Token 40: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.11639463156461716
    2. '1' → logprob: -3.116394519805908
    3. ' A' → logprob: -3.491394519805908
    4. '2' → logprob: -4.491394519805908
    5. '(A' → logprob: -5.241394519805908
    6. '[A' → logprob: -5.616394519805908
    7. '0' → logprob: -5.991394519805908
    8. '(' → logprob: -6.116394519805908
    9. 'a' → logprob: -6.366394519805908
    10. ' (' → logprob: -6.491394519805908

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019574899226427078
    2. '*' → logprob: -5.019575119018555
    3. '+' → logprob: -5.019575119018555
    4. ' +' → logprob: -5.894575119018555
    5. ' ,' → logprob: -7.019575119018555
    6. ' *' → logprob: -7.019575119018555
    7. '**' → logprob: -7.644575119018555
    8. '+B' → logprob: -8.269575119018555
    9. ',B' → logprob: -8.519575119018555
    10. '<<' → logprob: -8.894575119018555

Token 42: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.3486308753490448
    2. ' B' → logprob: -1.2236309051513672
    3. ')' → logprob: -9.223630905151367
    4. ' ' → logprob: -10.598630905151367
    5. '10' → logprob: -11.598630905151367
    6. '1' → logprob: -11.973630905151367
    7. 'A' → logprob: -12.098630905151367
    8. 'C' → logprob: -12.411130905151367
    9. ',' → logprob: -12.473630905151367
    10. ' A' → logprob: -13.036130905151367

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003321281401440501
    2. ' ,' → logprob: -8.62533187866211
    3. ',C' → logprob: -9.00033187866211
    4. 'C' → logprob: -11.25033187866211
    5. ')' → logprob: -12.00033187866211
    6. ',
' → logprob: -12.62533187866211
    7. '),' → logprob: -12.62533187866211
    8. ' C' → logprob: -14.25033187866211
    9. '*' → logprob: -15.18783187866211
    10. '*C' → logprob: -15.18783187866211

Token 44: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.04862756282091141
    2. ' C' → logprob: -3.0486276149749756
    3. ')' → logprob: -10.673627853393555
    4. ' ' → logprob: -11.798627853393555
    5. 'and' → logprob: -13.423627853393555
    6. ',' → logprob: -13.423627853393555
    7. ' and' → logprob: -13.548627853393555
    8. '  ' → logprob: -14.423627853393555
    9. '   ' → logprob: -14.798627853393555
    10. ',C' → logprob: -14.861127853393555

Token 45: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009365935111418366
    2. ',' → logprob: -7.625936508178711
    3. ')
' → logprob: -8.750936508178711
    4. ',)' → logprob: -8.875936508178711
    5. '[::-' → logprob: -10.375936508178711
    6. '))' → logprob: -10.375936508178711
    7. '[' → logprob: -10.750936508178711
    8. '**' → logprob: -11.125936508178711
    9. ' )' → logprob: -11.625936508178711
    10. '`)' → logprob: -11.750936508178711

Token 46: '@' (ID: 31)
  Prédit: 'vals'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vals' → logprob: -0.7761729955673218
    2. ')' → logprob: -1.5261729955673218
    3. '**' → logprob: -2.7761731147766113
    4. 'sorted' → logprob: -2.7761731147766113
    5. 'for' → logprob: -2.9011731147766113
    6. '```' → logprob: -3.1511731147766113
    7. 'def' → logprob: -4.151173114776611
    8. '[::-' → logprob: -4.526173114776611
    9. ',' → logprob: -4.776173114776611
    10. ')
' → logprob: -4.901173114776611

Token 47: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: 0.0
    2. '```' → logprob: -19.375
    3. ' l' → logprob: -20.625
    4. '@' → logprob: -20.875
    5. 'staticmethod' → logprob: -22.125
    6. '`' → logprob: -22.125
    7. '1' → logprob: -22.5
    8. 'lt' → logprob: -22.875
    9. 'classmethod' → logprob: -23.25
    10. 'fun' → logprob: -23.5

Token 48: 'ru' (ID: 1942)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03924575075507164
    2. 'ru' → logprob: -3.289245843887329
    3. 'cache' → logprob: -7.66424560546875
    4. '_cache' → logprob: -7.78924560546875
    5. '```' → logprob: -9.41424560546875
    6. '_r' → logprob: -10.03924560546875
    7. '_' → logprob: -10.53924560546875
    8. '@' → logprob: -10.91424560546875
    9. 'rule' → logprob: -11.03924560546875
    10. 'cached' → logprob: -11.03924560546875

Token 49: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -9.102680633077398e-05
    2. '_cached' → logprob: -9.625090599060059
    3. '_' → logprob: -11.375090599060059
    4. '_c' → logprob: -11.875090599060059
    5. ' _' → logprob: -12.625090599060059
    6. '```' → logprob: -13.750090599060059
    7. ')_' → logprob: -14.500090599060059
    8. '_cash' → logprob: -15.625090599060059
    9. '_CACHE' → logprob: -15.875090599060059
    10. '_ca' → logprob: -16.000091552734375

Token 50: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.6735588312149048
    2. '(None' → logprob: -1.1735588312149048
    3. 'def' → logprob: -1.7985588312149048
    4. '()' → logprob: -4.548558712005615
    5. '()
' → logprob: -6.173558712005615
    6. 'max' → logprob: -6.423558712005615
    7. 'None' → logprob: -7.548558712005615
    8. '
' → logprob: -8.923559188842773
    9. '(int' → logprob: -9.173559188842773
    10. '(' → logprob: -9.423559188842773

Token 51: 'size' (ID: 4461)
  Prédit: 'size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.5450459122657776
    2. '_size' → logprob: -1.4200458526611328
    3. '=' → logprob: -2.295045852661133
    4. '_cache' → logprob: -2.795045852661133
    5. '=_' → logprob: -4.670045852661133
    6. '=None' → logprob: -5.295045852661133
    7. '_cached' → logprob: -7.170045852661133
    8. ')' → logprob: -8.295045852661133
    9. '=size' → logprob: -8.295045852661133
    10. '_SIZE' → logprob: -8.670045852661133

Token 52: '=None' (ID: 12783)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.69315105676651
    2. '=None' → logprob: -0.69315105676651
    3. '=

' → logprob: -12.943151473999023
    4. 'None' → logprob: -14.943151473999023
    5. '=
' → logprob: -15.068151473999023
    6. '=A' → logprob: -15.568151473999023
    7. '=}' → logprob: -15.693151473999023
    8. '=`' → logprob: -16.068151473999023
    9. '=int' → logprob: -16.568151473999023
    10. '=(' → logprob: -16.568151473999023

Token 53: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18017688393592834
    2. ')
' → logprob: -1.805176854133606
    3. 'def' → logprob: -7.805176734924316
    4. '```' → logprob: -11.555176734924316
    5. ')
' → logprob: -12.805176734924316
    6. ')

' → logprob: -12.930176734924316
    7. '()' → logprob: -13.180176734924316
    8. '
' → logprob: -13.430176734924316
    9. ')`' → logprob: -14.305176734924316
    10. '())
' → logprob: -14.555176734924316

Token 54: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00023929782037157565
    2. '
' → logprob: -8.375239372253418
    3. ' def' → logprob: -13.000239372253418
    4. '\' → logprob: -13.375239372253418
    5. '(def' → logprob: -13.500239372253418
    6. '()
' → logprob: -14.375239372253418
    7. 'de' → logprob: -14.375239372253418
    8. '0' → logprob: -14.500239372253418
    9. '```' → logprob: -14.875239372253418
    10. '('' → logprob: -15.375239372253418

Token 55: ' dfs' (ID: 51252)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pow' → logprob: -1.091955542564392
    2. 'count' → logprob: -1.216955542564392
    3. 'f' → logprob: -2.8419556617736816
    4. 'comb' → logprob: -2.9669556617736816
    5. 'solve' → logprob: -2.9669556617736816
    6. 'choose' → logprob: -3.2169556617736816
    7. 'mul' → logprob: -3.3419556617736816
    8. 'multiply' → logprob: -3.7169556617736816
    9. 'factor' → logprob: -4.091955661773682
    10. 'prod' → logprob: -4.216955661773682

Token 56: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17484256625175476
    2. '(depth' → logprob: -2.299842596054077
    3. '(i' → logprob: -3.299842596054077
    4. '(n' → logprob: -4.924842357635498
    5. '(idx' → logprob: -5.299842357635498
    6. '(index' → logprob: -5.549842357635498
    7. ' (' → logprob: -6.549842357635498
    8. '(a' → logprob: -6.924842357635498
    9. '(pos' → logprob: -7.674842357635498
    10. '(node' → logprob: -7.924842357635498

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043019242002628744
    2. ' ,' → logprob: -8.3754301071167
    3. '):' → logprob: -9.2504301071167
    4. ',n' → logprob: -10.1254301071167
    5. ',k' → logprob: -11.5004301071167
    6. ':' → logprob: -12.1254301071167
    7. ')' → logprob: -12.1254301071167
    8. ',i' → logprob: -12.2504301071167
    9. ',v' → logprob: -12.5004301071167
    10. 'a' → logprob: -13.1254301071167

Token 58: ' a' (ID: 261)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.4933689832687378
    2. 'acc' → logprob: -2.4933691024780273
    3. 'current' → logprob: -3.3683691024780273
    4. 'used' → logprob: -3.6183691024780273
    5. 'remaining' → logprob: -3.6183691024780273
    6. 'count' → logprob: -3.8683691024780273
    7. 'ops' → logprob: -4.368369102478027
    8. 'j' → logprob: -4.493369102478027
    9. 'cnt' → logprob: -4.618369102478027
    10. 's' → logprob: -4.743369102478027

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030758531764149666
    2. ',b' → logprob: -3.5307586193084717
    3. ',a' → logprob: -8.65575885772705
    4. ' ,' → logprob: -8.90575885772705
    5. ',k' → logprob: -9.03075885772705
    6. ',v' → logprob: -9.53075885772705
    7. ',c' → logprob: -9.65575885772705
    8. 'b' → logprob: -10.03075885772705
    9. 's' → logprob: -10.03075885772705
    10. '_remaining' → logprob: -10.28075885772705

Token 60: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07024040073156357
    2. ' b' → logprob: -2.6952404975891113
    3. 'k' → logprob: -8.445240020751953
    4. ' ' → logprob: -10.570240020751953
    5. ' k' → logprob: -11.070240020751953
    6. 'c' → logprob: -11.445240020751953
    7. 's' → logprob: -12.070240020751953
    8. 'm' → logprob: -12.257740020751953
    9. 'j' → logprob: -12.882740020751953
    10. '   ' → logprob: -13.195240020751953

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003222342347726226
    2. ',c' → logprob: -9.000322341918945
    3. ' ,' → logprob: -9.125322341918945
    4. ')' → logprob: -10.000322341918945
    5. 'c' → logprob: -10.250322341918945
    6. ',b' → logprob: -13.250322341918945
    7. ' c' → logprob: -13.500322341918945
    8. 'a' → logprob: -13.875322341918945
    9. ',
' → logprob: -14.500322341918945
    10. ')c' → logprob: -14.687822341918945

Token 62: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.633158802986145
    2. 'c' → logprob: -0.758158802986145
    3. ' ' → logprob: -8.258158683776855
    4. 'k' → logprob: -9.008158683776855
    5. ' k' → logprob: -9.258158683776855
    6. ')' → logprob: -11.320658683776855
    7. ')c' → logprob: -11.883158683776855
    8. '   ' → logprob: -12.320658683776855
    9. '  ' → logprob: -12.445658683776855
    10. '_c' → logprob: -12.758158683776855

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000696111936122179
    2. ',' → logprob: -7.750696182250977
    3. ')' → logprob: -8.750696182250977
    4. '):
' → logprob: -9.750696182250977
    5. ' ):' → logprob: -10.250696182250977
    6. ':' → logprob: -11.375696182250977
    7. ''):' → logprob: -14.500696182250977
    8. '):
' → logprob: -15.125696182250977
    9. ' ' → logprob: -15.750696182250977
    10. ')):' → logprob: -15.750696182250977

Token 64: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04611792415380478
    2. '):' → logprob: -3.2961180210113525
    3. ' if' → logprob: -6.046117782592773
    4. ':
' → logprob: -6.171117782592773
    5. ')' → logprob: -6.921117782592773
    6. ',' → logprob: -7.171117782592773
    7. '):
' → logprob: -7.296117782592773
    8. ' :' → logprob: -7.421117782592773
    9. 'if' → logprob: -8.421117782592773
    10. '   ' → logprob: -8.921117782592773

Token 65: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2521247863769531
    2. ' if' → logprob: -1.5021247863769531
    3. '   ' → logprob: -9.002124786376953
    4. ')' → logprob: -10.502124786376953
    5. ' ' → logprob: -11.752124786376953
    6. '	if' → logprob: -11.877124786376953
    7. '```' → logprob: -12.002124786376953
    8. 'i' → logprob: -12.127124786376953
    9. ':' → logprob: -12.377124786376953
    10. ',' → logprob: -12.752124786376953

Token 66: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.12702049314975739
    2. 'i' → logprob: -2.1270205974578857
    3. ' ' → logprob: -9.502020835876465
    4. ' a' → logprob: -12.877020835876465
    5. ')' → logprob: -13.127020835876465
    6. '	i' → logprob: -13.252020835876465
    7. '  ' → logprob: -13.377020835876465
    8. '(i' → logprob: -13.377020835876465
    9. ' (' → logprob: -13.502020835876465
    10. 'a' → logprob: -13.627020835876465

Token 67: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5776397585868835
    2. ' ==' → logprob: -0.8276397585868835
    3. '>=' → logprob: -6.952639579772949
    4. ' >=' → logprob: -7.327639579772949
    5. '=' → logprob: -10.57763957977295
    6. ')' → logprob: -10.82763957977295
    7. ' ' → logprob: -11.20263957977295
    8. '>' → logprob: -11.57763957977295
    9. ' >' → logprob: -12.70263957977295
    10. ')==' → logprob: -13.07763957977295

Token 68: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.001890210434794426
    2. '3' → logprob: -7.126890182495117
    3. ' K' → logprob: -7.501890182495117
    4. '0' → logprob: -7.626890182495117
    5. ' ' → logprob: -10.876890182495117
    6. 'k' → logprob: -11.626890182495117
    7. '10' → logprob: -12.751890182495117
    8. '9' → logprob: -13.376890182495117
    9. '100' → logprob: -13.376890182495117
    10. 'len' → logprob: -13.376890182495117

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009893421083688736
    2. ':return' → logprob: -7.3759894371032715
    3. ':
' → logprob: -8.000988960266113
    4. '):' → logprob: -10.750988960266113
    5. ' :' → logprob: -12.500988960266113
    6. ' or' → logprob: -14.250988960266113
    7. ' and' → logprob: -14.625988960266113
    8. ',' → logprob: -15.375988960266113
    9. '   ' → logprob: -15.500988960266113
    10. ')' → logprob: -16.00098991394043

Token 70: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016877593472599983
    2. ':' → logprob: -4.5168776512146
    3. '       ' → logprob: -6.0168776512146
    4. ' return' → logprob: -6.7668776512146
    5. ':return' → logprob: -6.7668776512146
    6. 'return' → logprob: -6.8918776512146
    7. ':
' → logprob: -10.641877174377441
    8. '  ' → logprob: -11.766877174377441
    9. '    
' → logprob: -11.766877174377441
    10. ' ' → logprob: -12.266877174377441

Token 71: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.9657759070396423
    2. ' return' → logprob: -1.215775966644287
    3. '       ' → logprob: -1.340775966644287
    4. '   ' → logprob: -2.840775966644287
    5. ' if' → logprob: -7.090775966644287
    6. 'if' → logprob: -7.715775966644287
    7. ' ' → logprob: -7.840775966644287
    8. '
' → logprob: -8.090775489807129
    9. '           ' → logprob: -8.465775489807129
    10. '    ' → logprob: -8.590775489807129

Token 72: ' sum' (ID: 4215)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6269371509552002
    2. '(a' → logprob: -2.1269371509552
    3. ' a' → logprob: -2.3769371509552
    4. ' (' → logprob: -3.1269371509552
    5. 'abs' → logprob: -3.1269371509552
    6. '1' → logprob: -3.2519371509552
    7. 'mul' → logprob: -3.7519371509552
    8. 'max' → logprob: -4.251936912536621
    9. ' ' → logprob: -4.376936912536621
    10. 'int' → logprob: -4.376936912536621

Token 73: '(st' (ID: 4065)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5423887372016907
    2. '([' → logprob: -0.9173887372016907
    3. '(' → logprob: -5.042388916015625
    4. '(val' → logprob: -5.667388916015625
    5. '(vals' → logprob: -5.917388916015625
    6. '(x' → logprob: -6.417388916015625
    7. '(sorted' → logprob: -6.542388916015625
    8. '(abs' → logprob: -6.542388916015625
    9. '(a' → logprob: -7.667388916015625
    10. '(m' → logprob: -8.167388916015625

Token 74: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.0016463837819173932
    2. 'ar' → logprob: -7.126646518707275
    3. 'arp' → logprob: -8.251646041870117
    4. 'map' → logprob: -8.501646041870117
    5. 'r' → logprob: -8.626646041870117
    6. 'ap' → logprob: -8.876646041870117
    7. '(map' → logprob: -10.376646041870117
    8. 'a' → logprob: -11.751646041870117
    9. 'orm' → logprob: -11.751646041870117
    10. 'ram' → logprob: -13.376646041870117

Token 75: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.6240566083070007e-06
    2. 'ul' → logprob: -13.875001907348633
    3. 'map' → logprob: -15.750001907348633
    4. 'a' → logprob: -15.875001907348633
    5. 'ultiply' → logprob: -16.125001907348633
    6. '<|end|>' → logprob: -16.375001907348633
    7. 'apply' → logprob: -17.375001907348633
    8. 'ап' → logprob: -18.250001907348633
    9. ')' → logprob: -18.250001907348633
    10. '```' → logprob: -18.500001907348633

Token 76: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.005959614180028439
    2. '(' → logprob: -5.130959510803223
    3. 'mul' → logprob: -11.130959510803223
    4. '(lambda' → logprob: -12.255959510803223
    5. 'm' → logprob: -12.505959510803223
    6. ')' → logprob: -12.880959510803223
    7. ' (' → logprob: -13.755959510803223
    8. '(
' → logprob: -14.130959510803223
    9. '	m' → logprob: -14.380959510803223
    10. '(mult' → logprob: -14.755959510803223

Token 77: 'ul' (ID: 361)
  Prédit: 'ul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ul' → logprob: -1.2471589798224159e-05
    2. '<ul' → logprob: -11.875012397766113
    3. 'mul' → logprob: -13.750012397766113
    4. 'u' → logprob: -13.875012397766113
    5. 'ult' → logprob: -14.125012397766113
    6. ' ul' → logprob: -14.375012397766113
    7. '```' → logprob: -15.000012397766113
    8. '   ' → logprob: -15.625012397766113
    9. ' mul' → logprob: -15.750012397766113
    10. '

' → logprob: -15.750012397766113

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10376324504613876
    2. ',(' → logprob: -2.3537633419036865
    3. ',[' → logprob: -5.728763103485107
    4. '(' → logprob: -9.353763580322266
    5. ' ,' → logprob: -9.603763580322266
    6. '),' → logprob: -10.478763580322266
    7. '),(' → logprob: -10.603763580322266
    8. '((' → logprob: -10.978763580322266
    9. '([' → logprob: -11.103763580322266
    10. ')' → logprob: -11.228763580322266

Token 79: ' zip' (ID: 16216)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.39811432361602783
    2. '((' → logprob: -2.1481142044067383
    3. '[(' → logprob: -2.1481142044067383
    4. 'zip' → logprob: -3.1481142044067383
    5. ' zip' → logprob: -3.5231142044067383
    6. '([' → logprob: -4.523114204406738
    7. '(zip' → logprob: -5.023114204406738
    8. ' [(' → logprob: -6.523114204406738
    9. 'enumer' → logprob: -7.148114204406738
    10. '[((' → logprob: -7.148114204406738

Token 80: '(vals' (ID: 167053)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.17411105334758759
    2. '(vals' → logprob: -1.924111008644104
    3. '(' → logprob: -4.4241108894348145
    4. '([' → logprob: -6.6741108894348145
    5. '(
' → logprob: -8.549111366271973
    6. ')' → logprob: -9.549111366271973
    7. '(val' → logprob: -9.674111366271973
    8. ')((' → logprob: -9.799111366271973
    9. '(('' → logprob: -10.174111366271973
    10. '(values' → logprob: -10.549111366271973

Token 81: ',' (ID: 11)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5433474183082581
    2. ',' → logprob: -0.9183474183082581
    3. ',(' → logprob: -4.918347358703613
    4. '(' → logprob: -5.043347358703613
    5. '([' → logprob: -5.293347358703613
    6. ' ,' → logprob: -7.168347358703613
    7. '   ' → logprob: -9.793347358703613
    8. ',[' → logprob: -9.793347358703613
    9. ' ((' → logprob: -9.918347358703613
    10. ' (' → logprob: -10.168347358703613

Token 82: ' (' (ID: 350)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.23508988320827484
    2. ' (' → logprob: -1.610089898109436
    3. '[a' → logprob: -4.7350897789001465
    4. ' [' → logprob: -8.110090255737305
    5. '(' → logprob: -8.485090255737305
    6. '(i' → logprob: -9.485090255737305
    7. ' ' → logprob: -9.485090255737305
    8. '([' → logprob: -10.110090255737305
    9. '(A' → logprob: -10.235090255737305
    10. '   ' → logprob: -10.235090255737305

Token 83: '1' (ID: 16)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.01279956940561533
    2. '[a' → logprob: -5.2627997398376465
    3. 'a' → logprob: -5.3877997398376465
    4. ' (' → logprob: -6.1377997398376465
    5. '(' → logprob: -7.8877997398376465
    6. '   ' → logprob: -8.387799263000488
    7. ' a' → logprob: -10.137799263000488
    8. ' ' → logprob: -10.262799263000488
    9. '(
' → logprob: -10.637799263000488
    10. '((' → logprob: -11.137799263000488

Token 84: ' <<' (ID: 2256)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7801450490951538
    2. '<<' → logprob: -2.0301451683044434
    3. ' if' → logprob: -2.1551451683044434
    4. '+' → logprob: -3.2801451683044434
    5. '-' → logprob: -3.2801451683044434
    6. 'a' → logprob: -3.4051451683044434
    7. '*a' → logprob: -3.4051451683044434
    8. '+a' → logprob: -3.7801451683044434
    9. '*' → logprob: -4.030145168304443
    10. ' +' → logprob: -4.030145168304443

Token 85: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2675383687019348
    2. '(a' → logprob: -1.51753830909729
    3. ' (' → logprob: -5.517538547515869
    4. ' a' → logprob: -5.642538547515869
    5. '(' → logprob: -5.892538547515869
    6. '(i' → logprob: -6.017538547515869
    7. 'i' → logprob: -6.267538547515869
    8. '[a' → logprob: -8.517538070678711
    9. '((' → logprob: -8.642538070678711
    10. '(
' → logprob: -9.017538070678711

Token 86: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043376852408982813
    2. ' ,' → logprob: -8.000433921813965
    3. ',b' → logprob: -10.125433921813965
    4. '),' → logprob: -10.375433921813965
    5. ',a' → logprob: -12.000433921813965
    6. ',
' → logprob: -12.750433921813965
    7. '1' → logprob: -12.875433921813965
    8. ',i' → logprob: -13.375433921813965
    9. '   ' → logprob: -13.625433921813965
    10. ',c' → logprob: -13.750433921813965

Token 87: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0057739075273275375
    2. ' ' → logprob: -5.255774021148682
    3. 'b' → logprob: -8.130773544311523
    4. '(' → logprob: -9.130773544311523
    5. '2' → logprob: -9.255773544311523
    6. '0' → logprob: -11.380773544311523
    7. ' (' → logprob: -11.630773544311523
    8. '   ' → logprob: -11.755773544311523
    9. '  ' → logprob: -13.005773544311523
    10. ' b' → logprob: -13.130773544311523

Token 88: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009362306445837021
    2. '1' → logprob: -5.13436222076416
    3. ' b' → logprob: -6.13436222076416
    4. '(' → logprob: -7.00936222076416
    5. ' ' → logprob: -8.63436222076416
    6. '2' → logprob: -9.63436222076416
    7. ' (' → logprob: -10.38436222076416
    8. '   ' → logprob: -10.38436222076416
    9. '0' → logprob: -11.00936222076416
    10. '-b' → logprob: -11.38436222076416

Token 89: ' <<' (ID: 2256)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0757177397608757
    2. ',b' → logprob: -3.3257176876068115
    3. '<<' → logprob: -3.9507176876068115
    4. ' ,' → logprob: -4.950717926025391
    5. 'b' → logprob: -5.075717926025391
    6. '+b' → logprob: -6.700717926025391
    7. '0' → logprob: -7.200717926025391
    8. ' <<' → logprob: -7.450717926025391
    9. ' ' → logprob: -7.700717926025391
    10. '-' → logprob: -8.20071792602539

Token 90: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0003357006062287837
    2. ' b' → logprob: -8.000335693359375
    3. ' ' → logprob: -15.750335693359375
    4. '   ' → logprob: -15.875335693359375
    5. ')b' → logprob: -17.250335693359375
    6. '(b' → logprob: -18.000335693359375
    7. '
' → logprob: -18.125335693359375
    8. '	b' → logprob: -18.125335693359375
    9. '>b' → logprob: -18.750335693359375
    10. '-b' → logprob: -18.750335693359375

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004222285933792591
    2. ' ,' → logprob: -5.504222393035889
    3. ' ' → logprob: -10.37922191619873
    4. ',
' → logprob: -10.62922191619873
    5. '),' → logprob: -10.87922191619873
    6. ')))' → logprob: -11.12922191619873
    7. ')' → logprob: -11.12922191619873
    8. '))' → logprob: -11.37922191619873
    9. ')),' → logprob: -12.37922191619873
    10. ',

' → logprob: -12.62922191619873

Token 92: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03464086353778839
    2. 'c' → logprob: -4.034640789031982
    3. ' ' → logprob: -4.159640789031982
    4. ' c' → logprob: -7.284640789031982
    5. '  ' → logprob: -10.15964126586914
    6. '   ' → logprob: -11.40964126586914
    7. '    ' → logprob: -13.28464126586914
    8. '(' → logprob: -13.78464126586914
    9. '     ' → logprob: -13.78464126586914
    10. '2' → logprob: -15.15964126586914

Token 93: '1' (ID: 16)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0052588991820812225
    2. ' c' → logprob: -5.255259037017822
    3. ' ' → logprob: -11.130258560180664
    4. '  ' → logprob: -12.630258560180664
    5. '1' → logprob: -13.130258560180664
    6. '   ' → logprob: -13.505258560180664
    7. 'C' → logprob: -14.005258560180664
    8. '	c' → logprob: -14.817758560180664
    9. '
' → logprob: -15.317758560180664
    10. '    ' → logprob: -15.380258560180664

Token 94: ' <<' (ID: 2256)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02833442948758602
    2. ',' → logprob: -4.528334617614746
    3. ')))' → logprob: -4.778334617614746
    4. '))' → logprob: -5.653334617614746
    5. '   ' → logprob: -6.653334617614746
    6. ',c' → logprob: -7.153334617614746
    7. '))))' → logprob: -7.403334617614746
    8. ' c' → logprob: -7.528334617614746
    9. ' ' → logprob: -8.153334617614746
    10. '))))
' → logprob: -8.403334617614746

Token 95: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0003815756645053625
    2. ' c' → logprob: -7.8753814697265625
    3. '   ' → logprob: -14.375381469726562
    4. ' ' → logprob: -15.000381469726562
    5. '  ' → logprob: -15.625381469726562
    6. ')c' → logprob: -16.375381469726562
    7. '(c' → logprob: -16.500381469726562
    8. '
' → logprob: -16.500381469726562
    9. 'C' → logprob: -16.875381469726562
    10. '```' → logprob: -16.875381469726562

Token 96: '))))
' (ID: 55084)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.3846065104007721
    2. '))))
' → logprob: -1.7596064805984497
    3. ')))' → logprob: -2.2596065998077393
    4. ')))))
' → logprob: -3.5096065998077393
    5. '))' → logprob: -4.63460636138916
    6. '))))

' → logprob: -6.63460636138916
    7. ')' → logprob: -6.75960636138916
    8. ')))
' → logprob: -7.88460636138916
    9. ')))),' → logprob: -8.75960636138916
    10. ' ))' → logprob: -10.13460636138916

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011575179174542427
    2. '
' → logprob: -5.261575222015381
    3. '    
' → logprob: -5.261575222015381
    4. ')' → logprob: -7.386575222015381
    5. '```' → logprob: -8.761574745178223
    6. '\n' → logprob: -9.636574745178223
    7. '  
' → logprob: -10.011574745178223
    8. 'return' → logprob: -10.261574745178223
    9. ')
' → logprob: -10.261574745178223
    10. '<|end|>' → logprob: -10.386574745178223

Token 98: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0054374933242798
    2. 'return' (adapté à ' return') → logprob: -1.1304374933242798
    3. 'if' → logprob: -1.6304374933242798
    4. '
' → logprob: -3.1304373741149902
    5. '    
' → logprob: -3.2554373741149902
    6. ' if' → logprob: -4.38043737411499
    7. 'else' → logprob: -5.25543737411499
    8. ' return' → logprob: -5.75543737411499
    9. 'res' → logprob: -5.88043737411499
    10. 'rest' → logprob: -6.00543737411499

Token 99: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.32779693603515625
    2. ' max' → logprob: -1.3277969360351562
    3. 'dfs' → logprob: -4.452796936035156
    4. ' dfs' → logprob: -6.077796936035156
    5. 'min' → logprob: -8.202796936035156
    6. ' min' → logprob: -8.952796936035156
    7. '(max' → logprob: -10.952796936035156
    8. ' ' → logprob: -11.390296936035156
    9. 'sum' → logprob: -11.702796936035156
    10. 'd' → logprob: -11.827796936035156

Token 100: '(
' (ID: 1607)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.25276482105255127
    2. '(' → logprob: -1.5027648210525513
    3. '(
' → logprob: -7.127764701843262
    4. '((' → logprob: -11.502764701843262
    5. '(

' → logprob: -11.877764701843262
    6. 'dfs' → logprob: -12.377764701843262
    7. '([' → logprob: -12.752764701843262
    8. '(
' → logprob: -13.252764701843262
    9. '(df' → logprob: -13.752764701843262
    10. '(max' → logprob: -14.002764701843262

Token 101: '       ' (ID: 309)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.00023405285901390016
    2. ' dfs' → logprob: -8.50023365020752
    3. '   ' → logprob: -10.62523365020752
    4. '[
' → logprob: -12.75023365020752
    5. '[' → logprob: -13.87523365020752
    6. '
' → logprob: -14.25023365020752
    7. 'df' → logprob: -14.37523365020752
    8. ' ' → logprob: -14.37523365020752
    9. '    
' → logprob: -15.25023365020752
    10. '  ' → logprob: -16.250234603881836

Token 102: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.0004319804720580578
    2. ' dfs' → logprob: -7.875432014465332
    3. '[
' → logprob: -10.250432014465332
    4. '   ' → logprob: -12.125432014465332
    5. '
' → logprob: -12.250432014465332
    6. '[' → logprob: -12.625432014465332
    7. ' ' → logprob: -14.250432014465332
    8. 'df' → logprob: -14.500432014465332
    9. 'max' → logprob: -14.750432014465332
    10. '    
' → logprob: -14.750432014465332

Token 103: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -17.25
    4. '(
' → logprob: -18.625
    5. '(I' → logprob: -18.875
    6. '   ' → logprob: -20.0
    7. ')(' → logprob: -20.5
    8. '((' → logprob: -20.75
    9. ' ' → logprob: -21.25
    10. '(ii' → logprob: -21.25

Token 104: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07928597927093506
    2. ' +' → logprob: -2.8292860984802246
    3. ',' → logprob: -4.079286098480225
    4. '+,' → logprob: -8.954285621643066
    5. ' ,' → logprob: -9.954285621643066
    6. ',+' → logprob: -10.704285621643066
    7. ',i' → logprob: -11.454285621643066
    8. '(+' → logprob: -11.704285621643066
    9. '+i' → logprob: -11.954285621643066
    10. '(i' → logprob: -12.079285621643066

Token 105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03013342060148716
    2. ',' → logprob: -3.5301334857940674
    3. ' ,' → logprob: -8.405133247375488
    4. ' ' → logprob: -8.780133247375488
    5. '   ' → logprob: -13.155133247375488
    6. '(' → logprob: -13.530133247375488
    7. '```' → logprob: -13.655133247375488
    8. '`,' → logprob: -15.155133247375488
    9. '  ' → logprob: -15.905133247375488
    10. '
' → logprob: -16.155134201049805

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.876193169271573e-05
    2. ',' → logprob: -10.250088691711426
    3. 'a' → logprob: -10.625088691711426
    4. '0' → logprob: -10.875088691711426
    5. ' ' → logprob: -11.625088691711426
    6. '```' → logprob: -14.250088691711426
    7. '   ' → logprob: -15.625088691711426
    8. 'i' → logprob: -16.125089645385742
    9. 'A' → logprob: -16.750089645385742
    10. '``' → logprob: -16.875089645385742

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008382192463614047
    2. ' ,' → logprob: -7.625838279724121
    3. ',a' → logprob: -8.250838279724121
    4. '   ' → logprob: -10.125838279724121
    5. 'a' → logprob: -10.125838279724121
    6. ',i' → logprob: -12.250838279724121
    7. '       ' → logprob: -13.625838279724121
    8. '    ' → logprob: -13.875838279724121
    9. '  ' → logprob: -14.250838279724121
    10. ' ' → logprob: -14.625838279724121

Token 108: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001266613689949736
    2. ' a' → logprob: -9.000126838684082
    3. '   ' → logprob: -12.875126838684082
    4. ' ' → logprob: -14.625126838684082
    5. '  ' → logprob: -16.375125885009766
    6. 'min' → logprob: -16.750125885009766
    7. '    ' → logprob: -17.500125885009766
    8. 'i' → logprob: -17.625125885009766
    9. '(a' → logprob: -17.875125885009766
    10. ')' → logprob: -18.000125885009766

Token 109: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4778185784816742
    2. ' +' → logprob: -0.9778186082839966
    3. ',' → logprob: -5.727818489074707
    4. '   ' → logprob: -7.727818489074707
    5. ' ,' → logprob: -10.477818489074707
    6. '    ' → logprob: -12.227818489074707
    7. ' ' → logprob: -13.102818489074707
    8. '  ' → logprob: -13.352818489074707
    9. '       ' → logprob: -14.602818489074707
    10. '+,' → logprob: -14.602818489074707

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033879990223795176
    2. ' ' → logprob: -8.000338554382324
    3. '0' → logprob: -13.125338554382324
    4. ',' → logprob: -13.625338554382324
    5. '

' → logprob: -16.50033950805664
    6. '
' → logprob: -17.00033950805664
    7. '   ' → logprob: -17.18783950805664
    8. '2' → logprob: -17.56283950805664
    9. ' ,' → logprob: -18.18783950805664
    10. '(' → logprob: -18.50033950805664

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.375004768371582
    3. '(' → logprob: -15.250004768371582
    4. ' (' → logprob: -19.125003814697266
    5. '0' → logprob: -19.250003814697266
    6. ',' → logprob: -19.250003814697266
    7. '2' → logprob: -19.250003814697266
    8. '   ' → logprob: -19.500003814697266
    9. '(i' → logprob: -19.625003814697266
    10. '{' → logprob: -20.000003814697266

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.93579563125968e-05
    2. ' ,' → logprob: -9.375089645385742
    3. ')' → logprob: -13.000089645385742
    4. '),' → logprob: -14.250089645385742
    5. '   ' → logprob: -14.750089645385742
    6. ',a' → logprob: -14.750089645385742
    7. ',i' → logprob: -15.250089645385742
    8. '  ' → logprob: -15.750089645385742
    9. 'a' → logprob: -16.125089645385742
    10. ' ' → logprob: -16.250089645385742

Token 113: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.018153570592403412
    2. ' b' → logprob: -4.018153667449951
    3. '   ' → logprob: -12.893153190612793
    4. '       ' → logprob: -15.018153190612793
    5. ' ' → logprob: -15.268153190612793
    6. '    ' → logprob: -15.518153190612793
    7. ')b' → logprob: -15.643153190612793
    8. '  ' → logprob: -16.14315414428711
    9. '     ' → logprob: -16.51815414428711
    10. '	b' → logprob: -16.51815414428711

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004179217794444412
    2. ' ,' → logprob: -7.875417709350586
    3. ',c' → logprob: -10.750417709350586
    4. '   ' → logprob: -11.625417709350586
    5. '),' → logprob: -13.250417709350586
    6. ' ' → logprob: -13.250417709350586
    7. ')' → logprob: -13.500417709350586
    8. '  ' → logprob: -14.250417709350586
    9. '       ' → logprob: -14.375417709350586
    10. 'c' → logprob: -14.875417709350586

Token 115: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.018156031146645546
    2. 'c' → logprob: -4.018156051635742
    3. ' ' → logprob: -13.268156051635742
    4. '   ' → logprob: -13.518156051635742
    5. '  ' → logprob: -13.768156051635742
    6. '    ' → logprob: -14.143156051635742
    7. '       ' → logprob: -14.643156051635742
    8. '     ' → logprob: -15.393156051635742
    9. '	c' → logprob: -16.268156051635742
    10. '      ' → logprob: -16.393156051635742

Token 116: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.47983747720718384
    2. '),' → logprob: -0.9798374772071838
    3. '   ' → logprob: -5.979837417602539
    4. ')' → logprob: -6.854837417602539
    5. ',' → logprob: -6.854837417602539
    6. '       ' → logprob: -6.979837417602539
    7. '),
' → logprob: -9.854837417602539
    8. '),

' → logprob: -9.854837417602539
    9. ' ),
' → logprob: -10.354837417602539
    10. ' ' → logprob: -11.104837417602539

Token 117: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24635858833789825
    2. ' dfs' → logprob: -1.9963586330413818
    3. 'dfs' → logprob: -2.496358633041382
    4. '      ' → logprob: -10.246358871459961
    5. '        
' → logprob: -10.371358871459961
    6. '   ' → logprob: -10.746358871459961
    7. '        ' → logprob: -11.121358871459961
    8. '           ' → logprob: -11.246358871459961
    9. '     ' → logprob: -12.121358871459961
    10. '    ' → logprob: -13.121358871459961

Token 118: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.4741106927394867
    2. ' dfs' → logprob: -0.9741107225418091
    3. '       ' → logprob: -10.34911060333252
    4. '      ' → logprob: -15.34911060333252
    5. 'DFS' → logprob: -15.34911060333252
    6. ' DFS' → logprob: -15.34911060333252
    7. '        ' → logprob: -15.47411060333252
    8. '        
' → logprob: -15.72411060333252
    9. '   ' → logprob: -15.84911060333252
    10. ' ' → logprob: -16.224111557006836

Token 119: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.635164754698053e-05
    2. '(' → logprob: -9.625066757202148
    3. '(
' → logprob: -16.50006675720215
    4. ' (' → logprob: -16.62506675720215
    5. '(ii' → logprob: -19.87506675720215
    6. '(I' → logprob: -20.25006675720215
    7. '(

' → logprob: -22.00006675720215
    8. 'i' → logprob: -22.00006675720215
    9. '((' → logprob: -22.25006675720215
    10. '   ' → logprob: -22.25006675720215

Token 120: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.038048841059207916
    2. '+' → logprob: -3.28804874420166
    3. ',' → logprob: -12.16304874420166
    4. ' ' → logprob: -14.16304874420166
    5. '   ' → logprob: -14.78804874420166
    6. ' ,' → logprob: -14.91304874420166
    7. '+,' → logprob: -15.28804874420166
    8. ' ' → logprob: -16.038049697875977
    9. ' +
' → logprob: -16.538049697875977
    10. '=' → logprob: -16.663049697875977

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017050558235496283
    2. ' ' → logprob: -6.376705169677734
    3. '+' → logprob: -13.501705169677734
    4. ',' → logprob: -14.126705169677734
    5. '   ' → logprob: -14.876705169677734
    6. '  ' → logprob: -16.501705169677734
    7. '```' → logprob: -16.626705169677734
    8. ' +' → logprob: -17.251705169677734
    9. ' ,' → logprob: -17.439205169677734
    10. '     ' → logprob: -17.564205169677734

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -18.875001907348633
    4. '+' → logprob: -19.250001907348633
    5. '0' → logprob: -19.750001907348633
    6. '   ' → logprob: -19.875001907348633
    7. ',' → logprob: -20.250001907348633
    8. '2' → logprob: -20.375001907348633
    9. '
' → logprob: -21.750001907348633
    10. 'b' → logprob: -21.812501907348633

Token 123: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.690834273584187e-05
    2. ' ,' → logprob: -10.25003719329834
    3. 'a' → logprob: -14.37503719329834
    4. ',a' → logprob: -14.37503719329834
    5. ')' → logprob: -16.125036239624023
    6. '   ' → logprob: -16.625036239624023
    7. ',
' → logprob: -16.625036239624023
    8. '(' → logprob: -17.250036239624023
    9. '```' → logprob: -17.375036239624023
    10. ' ' → logprob: -17.875036239624023

Token 124: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00193149340339005
    2. ' a' → logprob: -6.251931667327881
    3. '   ' → logprob: -13.251931190490723
    4. ' ' → logprob: -14.501931190490723
    5. '    ' → logprob: -15.376931190490723
    6. '  ' → logprob: -15.501931190490723
    7. '	a' → logprob: -16.37693214416504
    8. '     ' → logprob: -17.00193214416504
    9. '       ' → logprob: -17.12693214416504
    10. ')' → logprob: -17.50193214416504

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003214665222913027
    2. ' ,' → logprob: -5.7532148361206055
    3. '   ' → logprob: -10.503214836120605
    4. ' ' → logprob: -12.128214836120605
    5. '+' → logprob: -13.503214836120605
    6. '       ' → logprob: -13.878214836120605
    7. ',b' → logprob: -14.503214836120605
    8. '  ' → logprob: -14.753214836120605
    9. '```' → logprob: -15.253214836120605
    10. ' +' → logprob: -15.253214836120605

Token 126: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015024791937321424
    2. ' b' → logprob: -6.501502513885498
    3. '   ' → logprob: -15.87650203704834
    4. '+' → logprob: -17.001502990722656
    5. '       ' → logprob: -17.126502990722656
    6. '    ' → logprob: -18.001502990722656
    7. '(b' → logprob: -18.251502990722656
    8. ' ' → logprob: -19.001502990722656
    9. '     ' → logprob: -19.501502990722656
    10. '```' → logprob: -19.501502990722656

Token 127: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.1002107709646225
    2. '+' → logprob: -2.350210666656494
    3. ',' → logprob: -12.600211143493652
    4. ' ' → logprob: -14.725211143493652
    5. ' ,' → logprob: -16.600210189819336
    6. '+,' → logprob: -16.600210189819336
    7. '1' → logprob: -17.225210189819336
    8. ' +
' → logprob: -17.350210189819336
    9. ' ' → logprob: -17.600210189819336
    10. '   ' → logprob: -17.725210189819336

Token 128: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. ',' → logprob: -19.750011444091797
    4. '<|end|>' → logprob: -19.750011444091797
    5. '```' → logprob: -20.125011444091797
    6. ')' → logprob: -20.250011444091797
    7. '0' → logprob: -21.000011444091797
    8. '
' → logprob: -21.125011444091797
    9. '   ' → logprob: -21.500011444091797
    10. '<|end|>' → logprob: -22.125011444091797

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '```' → logprob: -20.125
    4. '
' → logprob: -21.375
    5. '<|end|>' → logprob: -21.875
    6. ')' → logprob: -22.125
    7. '-' → logprob: -22.375
    8. '0' → logprob: -22.625
    9. '   ' → logprob: -22.625
    10. ',' → logprob: -22.625

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.113290095934644e-05
    2. ' ,' → logprob: -9.625081062316895
    3. ',c' → logprob: -11.375081062316895
    4. ',
' → logprob: -13.000081062316895
    5. 'c' → logprob: -14.375081062316895
    6. '       ' → logprob: -14.875081062316895
    7. ')' → logprob: -15.625081062316895
    8. '),' → logprob: -15.875081062316895
    9. '   ' → logprob: -17.25008201599121
    10. '```' → logprob: -17.87508201599121

Token 131: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04858759790658951
    2. ' c' → logprob: -3.0485875606536865
    3. '       ' → logprob: -16.673587799072266
    4. '   ' → logprob: -16.798587799072266
    5. ')c' → logprob: -17.548587799072266
    6. ' ' → logprob: -17.923587799072266
    7. '	c' → logprob: -18.173587799072266
    8. '$c' → logprob: -19.173587799072266
    9. '     ' → logprob: -19.298587799072266
    10. '    ' → logprob: -19.298587799072266

Token 132: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.008099846541881561
    2. '),' → logprob: -5.1331000328063965
    3. '   ' → logprob: -6.6331000328063965
    4. '       ' → logprob: -7.1331000328063965
    5. ')' → logprob: -11.008099555969238
    6. ',' → logprob: -11.383099555969238
    7. ',
' → logprob: -11.883099555969238
    8. '),

' → logprob: -12.383099555969238
    9. ' ),
' → logprob: -12.633099555969238
    10. '     ' → logprob: -12.883099555969238

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.588793960167095e-05
    2. 'dfs' → logprob: -9.500076293945312
    3. ' dfs' → logprob: -14.625076293945312
    4. '   ' → logprob: -15.250076293945312
    5. '      ' → logprob: -16.250076293945312
    6. '           ' → logprob: -16.625076293945312
    7. '     ' → logprob: -18.250076293945312
    8. '        
' → logprob: -18.375076293945312
    9. '        ' → logprob: -18.500076293945312
    10. '```' → logprob: -18.750076293945312

Token 134: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.03122212551534176
    2. ' dfs' → logprob: -3.531222105026245
    3. '       ' → logprob: -6.531222343444824
    4. '   ' → logprob: -11.656222343444824
    5. ' ' → logprob: -14.281222343444824
    6. '
' → logprob: -14.531222343444824
    7. '      ' → logprob: -14.656222343444824
    8. 'df' → logprob: -14.656222343444824
    9. 'DFS' → logprob: -14.656222343444824
    10. '        
' → logprob: -14.781222343444824

Token 135: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -6.988221684878226e-06
    2. '(' → logprob: -11.875006675720215
    3. '(
' → logprob: -17.37500762939453
    4. ' (' → logprob: -18.37500762939453
    5. '(I' → logprob: -18.87500762939453
    6. 'i' → logprob: -18.87500762939453
    7. ')' → logprob: -19.62500762939453
    8. '(ii' → logprob: -20.75000762939453
    9. '[i' → logprob: -21.37500762939453
    10. '```' → logprob: -21.87500762939453

Token 136: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10021001845598221
    2. '+' → logprob: -2.350209951400757
    3. '1' → logprob: -13.350210189819336
    4. ' ' → logprob: -14.475210189819336
    5. '   ' → logprob: -14.975210189819336
    6. '```' → logprob: -14.975210189819336
    7. '(i' → logprob: -15.975210189819336
    8. ',' → logprob: -16.475210189819336
    9. ' +
' → logprob: -16.975210189819336
    10. 'i' → logprob: -17.100210189819336

Token 137: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001410850090906024
    2. ' ' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.375141143798828
    4. '```' → logprob: -15.250141143798828
    5. 'dfs' → logprob: -15.375141143798828
    6. '+' → logprob: -16.250141143798828
    7. 'i' → logprob: -17.000141143798828
    8. '  ' → logprob: -17.125141143798828
    9. '       ' → logprob: -17.500141143798828
    10. '-' → logprob: -17.500141143798828

Token 138: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.6789137084269896e-05
    2. ' ' → logprob: -10.75003719329834
    3. '(i' → logprob: -11.37503719329834
    4. 'c' → logprob: -13.37503719329834
    5. 'i' → logprob: -13.50003719329834
    6. '+' → logprob: -15.00003719329834
    7. 'dfs' → logprob: -16.125036239624023
    8. '```' → logprob: -16.375036239624023
    9. '(' → logprob: -16.750036239624023
    10. '[i' → logprob: -17.000036239624023

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.999452772201039e-05
    2. ' ,' → logprob: -10.500029563903809
    3. ',d' → logprob: -14.625029563903809
    4. ',
' → logprob: -14.625029563903809
    5. '   ' → logprob: -14.750029563903809
    6. ')' → logprob: -15.250029563903809
    7. 'a' → logprob: -15.500029563903809
    8. ',i' → logprob: -15.625029563903809
    9. '),' → logprob: -15.875029563903809
    10. 'dfs' → logprob: -16.250030517578125

Token 140: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0036017363891005516
    2. ' a' → logprob: -5.628601551055908
    3. '   ' → logprob: -14.628602027893066
    4. 'i' → logprob: -14.878602027893066
    5. ' ' → logprob: -15.128602027893066
    6. '    ' → logprob: -15.628602027893066
    7. '  ' → logprob: -15.753602027893066
    8. '```' → logprob: -16.37860107421875
    9. ')' → logprob: -16.50360107421875
    10. '<|end|>' → logprob: -16.87860107421875

Token 141: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005099030095152557
    2. ' ,' → logprob: -7.625509738922119
    3. '+' → logprob: -11.250510215759277
    4. '   ' → logprob: -13.125510215759277
    5. ' ' → logprob: -13.375510215759277
    6. ' +' → logprob: -13.500510215759277
    7. '```' → logprob: -13.500510215759277
    8. '       ' → logprob: -13.750510215759277
    9. ',
' → logprob: -14.625510215759277
    10. ',b' → logprob: -15.375510215759277

Token 142: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.64708495605737e-05
    2. ' b' → logprob: -9.625066757202148
    3. '   ' → logprob: -15.750066757202148
    4. ' ' → logprob: -16.50006675720215
    5. '  ' → logprob: -17.12506675720215
    6. '    ' → logprob: -17.50006675720215
    7. 'c' → logprob: -17.75006675720215
    8. ',' → logprob: -17.87506675720215
    9. ')b' → logprob: -18.00006675720215
    10. ')' → logprob: -18.25006675720215

Token 143: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003017385315615684
    2. ' ,' → logprob: -8.250301361083984
    3. '+' → logprob: -10.625301361083984
    4. '   ' → logprob: -11.375301361083984
    5. ' ' → logprob: -13.125301361083984
    6. ' +' → logprob: -14.000301361083984
    7. '       ' → logprob: -14.500301361083984
    8. '```' → logprob: -14.500301361083984
    9. ',c' → logprob: -15.625301361083984
    10. '  ' → logprob: -15.750301361083984

Token 144: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00033879990223795176
    2. ' c' → logprob: -8.000338554382324
    3. '+' → logprob: -13.500338554382324
    4. '   ' → logprob: -14.250338554382324
    5. '+c' → logprob: -14.625338554382324
    6. ')c' → logprob: -15.125338554382324
    7. '1' → logprob: -15.625338554382324
    8. '	c' → logprob: -16.87533950805664
    9. '       ' → logprob: -16.87533950805664
    10. '           ' → logprob: -17.12533950805664

Token 145: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.018163053318858147
    2. ' +' → logprob: -4.018163204193115
    3. ')' → logprob: -11.518162727355957
    4. '))' → logprob: -13.018162727355957
    5. '1' → logprob: -15.143162727355957
    6. '   ' → logprob: -15.143162727355957
    7. ' ' → logprob: -15.893162727355957
    8. '),' → logprob: -16.018163681030273
    9. '+)' → logprob: -16.268163681030273
    10. '+
' → logprob: -16.393163681030273

Token 146: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. ')' → logprob: -18.375001907348633
    4. '   ' → logprob: -18.750001907348633
    5. '<|end|>' → logprob: -19.250001907348633
    6. '```' → logprob: -19.375001907348633
    7. '+' → logprob: -20.250001907348633
    8. '
' → logprob: -20.375001907348633
    9. '۱' → logprob: -21.625001907348633
    10. '<|end|>' → logprob: -21.875001907348633

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '```' → logprob: -17.375
    4. '+' → logprob: -17.5
    5. ')' → logprob: -18.25
    6. '   ' → logprob: -19.875
    7. '<|end|>' → logprob: -20.125
    8. '-' → logprob: -21.125
    9. '۱' → logprob: -21.25
    10. '!' → logprob: -21.625

Token 148: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006075737066566944
    2. '   ' → logprob: -5.256075859069824
    3. ')
' → logprob: -7.631075859069824
    4. '))' → logprob: -8.131075859069824
    5. '       ' → logprob: -9.756075859069824
    6. '),' → logprob: -13.131075859069824
    7. ' )' → logprob: -13.756075859069824
    8. ')))' → logprob: -14.756075859069824
    9. ' ' → logprob: -15.256075859069824
    10. ')}' → logprob: -16.756074905395508

Token 149: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4741523861885071
    2. '   ' → logprob: -0.9741523861885071
    3. '       ' → logprob: -10.224152565002441
    4. ')
' → logprob: -10.224152565002441
    5. ' )' → logprob: -13.474152565002441
    6. '}' → logprob: -15.224152565002441
    7. ')`' → logprob: -15.349152565002441
    8. '  ' → logprob: -15.724152565002441
    9. '),' → logprob: -15.724152565002441
    10. '))' → logprob: -16.224151611328125

Token 150: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004521222144830972
    2. ')
' → logprob: -8.375452041625977
    3. '   ' → logprob: -8.500452041625977
    4. ' )' → logprob: -11.000452041625977
    5. '       ' → logprob: -14.750452041625977
    6. ' ' → logprob: -15.500452041625977
    7. '#' → logprob: -15.625452041625977
    8. '}' → logprob: -15.750452041625977
    9. ')#' → logprob: -16.125452041625977
    10. ')return' → logprob: -16.250452041625977

Token 151: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00024192029377445579
    2. 'result' → logprob: -8.750242233276367
    3. ')' → logprob: -9.875242233276367
    4. '
' → logprob: -10.875242233276367
    5. ')
' → logprob: -11.375242233276367
    6. ' print' → logprob: -14.250242233276367
    7. '```' → logprob: -15.500242233276367
    8. 'for' → logprob: -15.750242233276367
    9. 'pr' → logprob: -15.750242233276367
    10. 'answer' → logprob: -16.500242233276367

Token 152: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.03815130889415741
    2. '(' → logprob: -3.288151264190674
    3. '(print' → logprob: -9.913151741027832
    4. '(
' → logprob: -10.538151741027832
    5. 'dfs' → logprob: -11.038151741027832
    6. '()' → logprob: -12.038151741027832
    7. 'print' → logprob: -12.288151741027832
    8. '(df' → logprob: -13.038151741027832
    9. '(f' → logprob: -13.288151741027832
    10. '(

' → logprob: -13.788151741027832

Token 153: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -5.9153885558771435e-06
    2. 'f' → logprob: -12.625005722045898
    3. '(fs' → logprob: -13.250005722045898
    4. 'dfs' → logprob: -14.375005722045898
    5. 's' → logprob: -15.875005722045898
    6. ' fs' → logprob: -16.8750057220459
    7. '_fs' → logprob: -18.0000057220459
    8. 'efs' → logprob: -18.3750057220459
    9. '	fs' → logprob: -18.3750057220459
    10. 'sf' → logprob: -18.6250057220459

Token 154: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.5954712075181305e-05
    2. '0' → logprob: -10.250036239624023
    3. ' (' → logprob: -15.250036239624023
    4. ')' → logprob: -16.500036239624023
    5. ')(' → logprob: -16.500036239624023
    6. '(
' → logprob: -18.500036239624023
    7. '```' → logprob: -19.500036239624023
    8. '((' → logprob: -19.750036239624023
    9. '(K' → logprob: -20.500036239624023
    10. ' ' → logprob: -20.625036239624023

Token 155: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. ')' → logprob: -21.625
    4. '۰' → logprob: -22.75
    5. '```' → logprob: -22.75
    6. '(' → logprob: -22.875
    7. '1' → logprob: -23.75
    8. '０' → logprob: -24.25
    9. '
' → logprob: -24.5
    10. '   ' → logprob: -25.5

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013695230009034276
    2. ')' → logprob: -7.251369476318359
    3. '(' → logprob: -8.25136947631836
    4. ' ,' → logprob: -8.50136947631836
    5. '))' → logprob: -8.62636947631836
    6. '(),' → logprob: -12.25136947631836
    7. '0' → logprob: -12.50136947631836
    8. ',,' → logprob: -12.87636947631836
    9. ' ' → logprob: -13.87636947631836
    10. ',)' → logprob: -13.87636947631836

Token 157: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '1' → logprob: -15.500008583068848
    4. 'A' → logprob: -17.12500762939453
    5. '```' → logprob: -19.43750762939453
    6. ')' → logprob: -19.75000762939453
    7. '۰' → logprob: -19.81250762939453
    8. '   ' → logprob: -20.31250762939453
    9. '  ' → logprob: -20.68750762939453
    10. '2' → logprob: -20.68750762939453

Token 158: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. '1' → logprob: -13.37500286102295
    3. ' ' → logprob: -14.00000286102295
    4. 'A' → logprob: -16.625001907348633
    5. '۰' → logprob: -18.625001907348633
    6. '2' → logprob: -18.937501907348633
    7. ')' → logprob: -19.062501907348633
    8. '```' → logprob: -19.187501907348633
    9. '-' → logprob: -20.187501907348633
    10. '０' → logprob: -20.437501907348633

Token 159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001549089647596702
    2. ' ,' → logprob: -9.000154495239258
    3. '0' → logprob: -10.375154495239258
    4. ' ' → logprob: -16.000154495239258
    5. ',
' → logprob: -16.500154495239258
    6. ')' → logprob: -16.625154495239258
    7. ',,' → logprob: -18.250154495239258
    8. ',,,' → logprob: -18.250154495239258
    9. '```' → logprob: -18.375154495239258
    10. '000' → logprob: -18.875154495239258

Token 160: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -19.3750057220459
    4. ')' → logprob: -19.6250057220459
    5. '۰' → logprob: -19.6250057220459
    6. '   ' → logprob: -20.0625057220459
    7. '1' → logprob: -20.2500057220459
    8. '  ' → logprob: -20.9375057220459
    9. '०' → logprob: -21.5625057220459
    10. 'print' → logprob: -21.6250057220459

Token 161: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '1' → logprob: -19.687501907348633
    4. ')' → logprob: -19.812501907348633
    5. '۰' → logprob: -20.000001907348633
    6. '```' → logprob: -20.187501907348633
    7. 'print' → logprob: -21.500001907348633
    8. '   ' → logprob: -21.812501907348633
    9. '000' → logprob: -22.062501907348633
    10. '০' → logprob: -22.062501907348633

Token 162: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0017187348566949368
    2. ',' → logprob: -6.626718521118164
    3. ')' → logprob: -8.001718521118164
    4. ')))' → logprob: -10.001718521118164
    5. '))
' → logprob: -11.626718521118164
    6. '0' → logprob: -13.501718521118164
    7. ' ))' → logprob: -13.876718521118164
    8. '()))' → logprob: -15.251718521118164
    9. '))

' → logprob: -15.626718521118164
    10. '3' → logprob: -15.626718521118164

Token 163: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. ')' → logprob: -17.75
    4. '))' → logprob: -18.0
    5. '۰' → logprob: -18.75
    6. '   ' → logprob: -19.875
    7. '000' → logprob: -21.0
    8. '  ' → logprob: -21.0625
    9. '```' → logprob: -21.0625
    10. ')))' → logprob: -21.375

Token 164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '))' → logprob: -18.25
    4. ')' → logprob: -18.625
    5. '۰' → logprob: -18.625
    6. '```' → logprob: -19.25
    7. '０' → logprob: -21.1875
    8. '000' → logprob: -21.3125
    9. '०' → logprob: -21.3125
    10. '٠' → logprob: -21.375

Token 165: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008618239313364029
    2. ')' → logprob: -4.758618354797363
    3. '))
' → logprob: -13.258618354797363
    4. ')))' → logprob: -13.383618354797363
    5. ')
' → logprob: -15.008618354797363
    6. '),' → logprob: -17.633617401123047
    7. '()))' → logprob: -17.883617401123047
    8. ')}' → logprob: -18.133617401123047
    9. '})' → logprob: -18.508617401123047
    10. ').' → logprob: -18.883617401123047


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 163
Tokens correctement prédits (1ère position, stricte): 70
Tokens correctement prédits (1ère position, avec adaptation): 75
Tokens correctement prédits (top 10): 137
Précision stricte (1ère position): 42.94%
Précision adaptée (1ère position): 46.01%
Précision (top 10): 84.05%
================================================================================
