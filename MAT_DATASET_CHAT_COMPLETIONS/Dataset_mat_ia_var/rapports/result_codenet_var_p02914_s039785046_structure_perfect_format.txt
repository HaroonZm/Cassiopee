================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:44:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_basis(a):
    basis = []
    for e in a:
        for b in basis:
            e = min(e, e ^ b)
        if e:
            basis.append(e)
    return basis

n = int(input())
a = list(map(int, input().split()))
ans = 0
for i in a:
    ans ^= i
k = ~ans
for i in range(n):
    a[i] &= k
basis = get_basis(a)
res = 0
for i in basis:
    res = max(res, res ^ i)
print(ans + 2 * res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_basis' (ID: 180790)
  → Token d'amorce (pas de prédiction)

Token 3: '(a' (ID: 6271)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5946373343467712
    2. '_basis' → logprob: -0.9696373343467712
    3. '(' → logprob: -2.719637393951416
    4. '():' → logprob: -7.094637393951416
    5. '```' → logprob: -7.344637393951416
    6. '_:' → logprob: -7.844637393951416
    7. '(_' → logprob: -8.219636917114258
    8. '):' → logprob: -8.844636917114258
    9. ' (' → logprob: -8.844636917114258
    10. '(:' → logprob: -9.344636917114258

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8572744131088257
    2. 's' → logprob: -1.3572744131088257
    3. ',' → logprob: -1.4822744131088257
    4. ')' → logprob: -2.6072745323181152
    5. '_' → logprob: -5.107274532318115
    6. '[' → logprob: -5.107274532318115
    7. '_basis' → logprob: -6.107274532318115
    8. ',b' → logprob: -7.482274532318115
    9. ' ,' → logprob: -8.357274055480957
    10. '_,' → logprob: -8.357274055480957

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.054018206894397736
    2. '   ' → logprob: -3.679018259048462
    3. '```' → logprob: -4.179018020629883
    4. '(' → logprob: -5.929018020629883
    5. '():' → logprob: -6.179018020629883
    6. ''' → logprob: -6.804018020629883
    7. '(:' → logprob: -7.179018020629883
    8. '_' → logprob: -7.179018020629883
    9. '    
' → logprob: -7.429018020629883
    10. '_:' → logprob: -7.554018020629883

Token 6: ' basis' (ID: 9571)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7979891896247864
    2. '[' → logprob: -1.1729891300201416
    3. ' ' → logprob: -2.6729891300201416
    4. ':' → logprob: -3.4229891300201416
    5. ''' → logprob: -3.5479891300201416
    6. 'return' → logprob: -3.5479891300201416
    7. '```' → logprob: -3.5479891300201416
    8. '_' → logprob: -4.422989368438721
    9. '(' → logprob: -4.922989368438721
    10. '"' → logprob: -5.297989368438721

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8893600702285767
    2. '.' → logprob: -1.2643600702285767
    3. ' =' → logprob: -2.014359951019287
    4. '_' → logprob: -2.764359951019287
    5. '=' → logprob: -3.264359951019287
    6. '[:]' → logprob: -3.764359951019287
    7. '.append' → logprob: -4.139359951019287
    8. ',' → logprob: -4.764359951019287
    9. '[]' → logprob: -4.764359951019287
    10. 's' → logprob: -4.764359951019287

Token 8: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.4189940392971039
    2. '[]' → logprob: -1.6689940690994263
    3. ' [' → logprob: -2.9189939498901367
    4. ' a' → logprob: -3.1689939498901367
    5. 'a' → logprob: -4.168993949890137
    6. ' set' → logprob: -4.293993949890137
    7. '[' → logprob: -4.418993949890137
    8. '[a' → logprob: -4.418993949890137
    9. 'set' → logprob: -6.418993949890137
    10. ' ' → logprob: -6.793993949890137

Token 9: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9607858061790466
    2. 'for' → logprob: -1.5857858657836914
    3. '   ' → logprob: -2.2107858657836914
    4. '_' → logprob: -2.8357858657836914
    5. '.' → logprob: -2.9607858657836914
    6. ' for' → logprob: -2.9607858657836914
    7. '\' → logprob: -3.2107858657836914
    8. '    
' → logprob: -3.5857858657836914
    9. ' ' → logprob: -4.085785865783691
    10. '```' → logprob: -4.710785865783691

Token 10: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2960792779922485
    2. '   ' → logprob: -1.6710792779922485
    3. '    
' → logprob: -2.046079158782959
    4. 'for' (adapté à ' for') → logprob: -2.296079158782959
    5. '\' → logprob: -2.421079158782959
    6. ' 
' → logprob: -2.671079158782959
    7. '     
' → logprob: -3.421079158782959
    8. '\n' → logprob: -3.796079158782959
    9. '[' → logprob: -4.046079158782959
    10. '```' → logprob: -4.421079158782959

Token 11: ' e' (ID: 319)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3477470278739929
    2. ' i' → logprob: -1.3477470874786377
    3. ' x' → logprob: -4.972746849060059
    4. ' a' → logprob: -5.097746849060059
    5. 'i' → logprob: -5.222746849060059
    6. ' b' → logprob: -5.472746849060059
    7. '  ' → logprob: -5.597746849060059
    8. '_' → logprob: -6.222746849060059
    9. ' in' → logprob: -6.472746849060059
    10. ' _' → logprob: -6.722746849060059

Token 12: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2175043821334839
    2. ' ' → logprob: -2.0925045013427734
    3. 'in' → logprob: -3.8425045013427734
    4. 'n' → logprob: -4.342504501342773
    5. '_' → logprob: -4.842504501342773
    6. 'lement' → logprob: -4.842504501342773
    7. '  ' → logprob: -5.467504501342773
    8. ',' → logprob: -5.717504501342773
    9. 'x' → logprob: -6.092504501342773
    10. '   ' → logprob: -6.217504501342773

Token 13: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6332383155822754
    2. 'a' → logprob: -0.7582383155822754
    3. ' range' → logprob: -8.133237838745117
    4. ' ' → logprob: -8.383237838745117
    5. 'range' → logprob: -9.258237838745117
    6. '	a' → logprob: -11.883237838745117
    7. '   ' → logprob: -13.258237838745117
    8. '_a' → logprob: -13.258237838745117
    9. '  ' → logprob: -13.383237838745117
    10. '(a' → logprob: -13.633237838745117

Token 14: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002452349755913019
    2. ' :' → logprob: -6.377452373504639
    3. ':
' → logprob: -8.00245189666748
    4. '.' → logprob: -9.00245189666748
    5. ',' → logprob: -9.25245189666748
    6. '    ' → logprob: -10.50245189666748
    7. ':**' → logprob: -10.62745189666748
    8. '   ' → logprob: -10.75245189666748
    9. ' if' → logprob: -10.87745189666748
    10. '[' → logprob: -11.12745189666748

Token 15: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26812297105789185
    2. '    ' → logprob: -2.268122911453247
    3. ' if' → logprob: -2.768122911453247
    4. ':' → logprob: -4.018123149871826
    5. 'if' → logprob: -4.518123149871826
    6. '[' → logprob: -5.018123149871826
    7. '        ' → logprob: -5.143123149871826
    8. ' :' → logprob: -5.268123149871826
    9. '_' → logprob: -5.518123149871826
    10. '   ' → logprob: -5.518123149871826

Token 16: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0639745369553566
    2. ' ' → logprob: -3.813974618911743
    3. 'if' → logprob: -4.188974380493164
    4. '    ' → logprob: -4.188974380493164
    5. ' for' → logprob: -5.063974380493164
    6. '   ' → logprob: -7.188974380493164
    7. ' basis' → logprob: -7.188974380493164
    8. '       ' → logprob: -8.063974380493164
    9. 'for' (adapté à ' for') → logprob: -8.438974380493164
    10. ' b' → logprob: -8.688974380493164

Token 17: ' b' (ID: 287)
  Prédit: ' basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' basis' → logprob: -0.0012341608526185155
    2. 'basis' → logprob: -7.00123405456543
    3. ' b' → logprob: -8.37623405456543
    4. '_basis' → logprob: -9.75123405456543
    5. ' ' → logprob: -11.50123405456543
    6. 'b' → logprob: -11.62623405456543
    7. ' e' → logprob: -13.25123405456543
    8. ' ' → logprob: -13.50123405456543
    9. 'Basis' → logprob: -13.62623405456543
    10. '   ' → logprob: -14.06373405456543

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011296173324808478
    2. 'in' → logprob: -7.126129627227783
    3. ' ' → logprob: -9.126129150390625
    4. 'asis' → logprob: -9.501129150390625
    5. 's' → logprob: -10.376129150390625
    6. 'ase' → logprob: -10.626129150390625
    7. '  ' → logprob: -11.251129150390625
    8. '    ' → logprob: -11.376129150390625
    9. '   ' → logprob: -11.876129150390625
    10. 'i' → logprob: -12.001129150390625

Token 19: ' basis' (ID: 9571)
  Prédit: ' basis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' basis' → logprob: -0.08922058343887329
    2. 'basis' → logprob: -2.4642205238342285
    3. 'asis' → logprob: -8.714221000671387
    4. '_basis' → logprob: -9.214221000671387
    5. 'b' → logprob: -12.589221000671387
    6. '   ' → logprob: -12.714221000671387
    7. '    ' → logprob: -12.839221000671387
    8. 'ase' → logprob: -13.339221000671387
    9. ' ' → logprob: -13.464221000671387
    10. 'Basis' → logprob: -13.964221000671387

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3116183578968048
    2. '           ' → logprob: -1.4366183280944824
    3. ':
' → logprob: -4.811618328094482
    4. ' :' → logprob: -5.061618328094482
    5. ' if' → logprob: -5.811618328094482
    6. '       ' → logprob: -6.186618328094482
    7. '            ' → logprob: -6.311618328094482
    8. '   ' → logprob: -6.436618328094482
    9. '```' → logprob: -6.436618328094482
    10. '    ' → logprob: -6.686618328094482

Token 21: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37267032265663147
    2. '            ' → logprob: -1.247670292854309
    3. ':' → logprob: -4.9976701736450195
    4. ' if' → logprob: -5.3726701736450195
    5. '    ' → logprob: -6.3726701736450195
    6. '        ' → logprob: -6.3726701736450195
    7. '            
' → logprob: -6.3726701736450195
    8. ' ' → logprob: -6.6226701736450195
    9. ' =' → logprob: -7.1226701736450195
    10. ' :' → logprob: -7.1226701736450195

Token 22: ' e' (ID: 319)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.038730036467313766
    2. ' ' → logprob: -4.163730144500732
    3. 'if' → logprob: -5.038730144500732
    4. '       ' → logprob: -5.038730144500732
    5. '        ' → logprob: -5.663730144500732
    6. '    ' → logprob: -6.288730144500732
    7. '           ' → logprob: -6.413730144500732
    8. '   ' → logprob: -7.663730144500732
    9. '               ' → logprob: -7.663730144500732
    10. '            ' → logprob: -7.663730144500732

Token 23: ' =' (ID: 314)
  Prédit: ' -='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.8934116363525391
    2. ' ^=' → logprob: -1.893411636352539
    3. ' -' → logprob: -2.143411636352539
    4. ' ==' → logprob: -2.268411636352539
    5. ' =' → logprob: -3.018411636352539
    6. ' %' → logprob: -3.018411636352539
    7. '-' → logprob: -3.018411636352539
    8. ' ^' → logprob: -3.893411636352539
    9. ' &=' → logprob: -4.268411636352539
    10. '%' → logprob: -4.518411636352539

Token 24: ' min' (ID: 1349)
  Prédit: ' e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.04325631260871887
    2. 'e' → logprob: -3.1682562828063965
    3. ' b' → logprob: -9.293256759643555
    4. ' max' → logprob: -9.668256759643555
    5. 'b' → logprob: -10.043256759643555
    6. 'max' → logprob: -11.543256759643555
    7. ' ' → logprob: -11.543256759643555
    8. '[' → logprob: -12.043256759643555
    9. ' [' → logprob: -12.043256759643555
    10. '	e' → logprob: -12.293256759643555

Token 25: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.3870040476322174
    2. '(' → logprob: -1.137004017829895
    3. '([' → logprob: -9.762003898620605
    4. '((' → logprob: -10.012003898620605
    5. '(b' → logprob: -11.887003898620605
    6. '(
' → logprob: -12.512003898620605
    7. '(a' → logprob: -12.512003898620605
    8. '(min' → logprob: -12.887003898620605
    9. '(len' → logprob: -13.137003898620605
    10. '({' → logprob: -13.512003898620605

Token 26: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031077340245246887
    2. ',e' → logprob: -3.9060773849487305
    3. ',b' → logprob: -4.6560773849487305
    4. ' ,' → logprob: -7.0310773849487305
    5. ',end' → logprob: -10.78107738494873
    6. ',len' → logprob: -11.03107738494873
    7. ',key' → logprob: -11.40607738494873
    8. ',
' → logprob: -11.78107738494873
    9. ')' → logprob: -12.28107738494873
    10. ',v' → logprob: -12.28107738494873

Token 27: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.4425669312477112
    2. ' b' → logprob: -1.9425668716430664
    3. 'e' → logprob: -2.0675668716430664
    4. 'b' → logprob: -2.4425668716430664
    5. ' ' → logprob: -7.942566871643066
    6. ' abs' → logprob: -8.317566871643066
    7. 'abs' → logprob: -9.192566871643066
    8. ')' → logprob: -10.317566871643066
    9. '   ' → logprob: -10.692566871643066
    10. '    ' → logprob: -10.942566871643066

Token 28: ' ^' (ID: 7602)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7415276169776917
    2. '-' → logprob: -0.8665276169776917
    3. '-b' → logprob: -2.866527557373047
    4. '^' → logprob: -3.491527557373047
    5. ' ^' → logprob: -4.616527557373047
    6. '%b' → logprob: -5.491527557373047
    7. '%' → logprob: -7.241527557373047
    8. '&' → logprob: -7.991527557373047
    9. ' ' → logprob: -8.116527557373047
    10. ',b' → logprob: -9.241527557373047

Token 29: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0024756586644798517
    2. ' b' → logprob: -6.002475738525391
    3. ' ' → logprob: -18.00247573852539
    4. '	b' → logprob: -20.00247573852539
    5. '   ' → logprob: -20.12747573852539
    6. '  ' → logprob: -20.75247573852539
    7. ')b' → logprob: -21.00247573852539
    8. '*b' → logprob: -22.00247573852539
    9. '>b' → logprob: -22.37747573852539
    10. '>' → logprob: -22.75247573852539

Token 30: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009988710517063737
    2. ')
' → logprob: -7.0009989738464355
    3. ' )' → logprob: -9.750998497009277
    4. '       ' → logprob: -10.750998497009277
    5. '`)' → logprob: -13.250998497009277
    6. ')
' → logprob: -13.500998497009277
    7. '   ' → logprob: -13.750998497009277
    8. '))' → logprob: -14.000998497009277
    9. '')' → logprob: -14.375998497009277
    10. '           ' → logprob: -14.500998497009277

Token 31: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.1344424486160278
    2. ' 
' → logprob: -1.6344424486160278
    3. '   ' → logprob: -1.8844424486160278
    4. '<|end|>' → logprob: -2.0094423294067383
    5. '    
' → logprob: -2.6344423294067383
    6. '
' → logprob: -3.2594423294067383
    7. ' ' → logprob: -4.009442329406738
    8. '  
' → logprob: -4.134442329406738
    9. '       ' → logprob: -4.384442329406738
    10. ' if' → logprob: -4.759442329406738

Token 32: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.597566545009613
    2. ' if' → logprob: -1.7225666046142578
    3. '   ' → logprob: -2.597566604614258
    4. '```' → logprob: -2.722566604614258
    5. ' 
' → logprob: -3.597566604614258
    6. '\n' → logprob: -4.222566604614258
    7. '        
' → logprob: -4.222566604614258
    8. ' ' → logprob: -4.347566604614258
    9. '    
' → logprob: -4.472566604614258
    10. '    ' → logprob: -4.472566604614258

Token 33: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.00975739024579525
    2. 'e' → logprob: -4.6347575187683105
    3. ' not' → logprob: -13.759757041931152
    4. 'not' → logprob: -15.384757041931152
    5. ' ' → logprob: -16.50975799560547
    6. '   ' → logprob: -17.50975799560547
    7. '	e' → logprob: -17.75975799560547
    8. '    ' → logprob: -18.63475799560547
    9. '%e' → logprob: -18.88475799560547
    10. ')e' → logprob: -19.25975799560547

Token 34: ':
' (ID: 734)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.36670732498168945
    2. ' >' → logprob: -1.4917073249816895
    3. ':' → logprob: -2.6167073249816895
    4. ' !=' → logprob: -5.6167073249816895
    5. '!=' → logprob: -5.9917073249816895
    6. '>:' → logprob: -6.2417073249816895
    7. '">' → logprob: -7.7417073249816895
    8. ' ' → logprob: -9.116706848144531
    9. '<|end|>' → logprob: -9.616706848144531
    10. '   ' → logprob: -9.741706848144531

Token 35: '           ' (ID: 352)
  Prédit: ' basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' basis' → logprob: -0.015534857288002968
    2. '_basis' → logprob: -4.8905348777771
    3. 'basis' → logprob: -5.7655348777771
    4. '   ' → logprob: -6.6405348777771
    5. ' ' → logprob: -6.8905348777771
    6. '       ' → logprob: -7.6405348777771
    7. '<|end|>' → logprob: -7.8905348777771
    8. ' ' → logprob: -8.015534400939941
    9. '    ' → logprob: -8.015534400939941
    10. '	b' → logprob: -8.140534400939941

Token 36: ' basis' (ID: 9571)
  Prédit: ' basis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' basis' → logprob: -0.0008165352046489716
    2. 'basis' (adapté à ' basis') → logprob: -7.125816345214844
    3. '_basis' → logprob: -11.375816345214844
    4. 'Basis' → logprob: -14.625816345214844
    5. ' Basis' → logprob: -16.375816345214844
    6. ' ' → logprob: -18.125816345214844
    7. '    ' → logprob: -18.500816345214844
    8. '```' → logprob: -18.875816345214844
    9. '   ' → logprob: -19.000816345214844
    10. ' bases' → logprob: -19.250816345214844

Token 37: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011766550596803427
    2. '.' → logprob: -6.751176834106445
    3. 'append' → logprob: -12.501176834106445
    4. '.app' → logprob: -13.876176834106445
    5. '.Append' → logprob: -14.501176834106445
    6. ' .' → logprob: -14.751176834106445
    7. '.push' → logprob: -15.501176834106445
    8. '.add' → logprob: -15.626176834106445
    9. '_append' → logprob: -16.376176834106445
    10. '.extend' → logprob: -16.751176834106445

Token 38: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.003178071230649948
    2. '(' → logprob: -5.753178119659424
    3. '(a' → logprob: -16.003177642822266
    4. '(E' → logprob: -17.253177642822266
    5. '(x' → logprob: -17.378177642822266
    6. '(ele' → logprob: -17.503177642822266
    7. ' (' → logprob: -17.753177642822266
    8. '(i' → logprob: -18.003177642822266
    9. 'e' → logprob: -18.128177642822266
    10. '(
' → logprob: -18.253177642822266

Token 39: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.429896944202483e-05
    2. ')
' → logprob: -10.875043869018555
    3. '`)' → logprob: -10.875043869018555
    4. ' )' → logprob: -13.000043869018555
    5. '   ' → logprob: -13.500043869018555
    6. '')' → logprob: -14.750043869018555
    7. ')`' → logprob: -14.750043869018555
    8. '))' → logprob: -15.125043869018555
    9. ')

' → logprob: -15.125043869018555
    10. '       ' → logprob: -15.125043869018555

Token 40: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.33580130338668823
    2. '<|end|>' → logprob: -2.210801362991333
    3. '   ' → logprob: -2.335801362991333
    4. '    
' → logprob: -3.835801362991333
    5. ' 
' → logprob: -4.210801124572754
    6. '	return' → logprob: -4.460801124572754
    7. '\n' → logprob: -4.460801124572754
    8. ' return' → logprob: -5.460801124572754
    9. ' ' → logprob: -5.835801124572754
    10. '  
' → logprob: -6.085801124572754

Token 41: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7115073204040527
    2. '<|end|>' → logprob: -1.5865073204040527
    3. ' return' → logprob: -2.5865073204040527
    4. '	return' → logprob: -2.7115073204040527
    5. '\n' → logprob: -3.4615073204040527
    6. 'return' (adapté à ' return') → logprob: -3.7115073204040527
    7. '
' → logprob: -3.8365073204040527
    8. ' 
' → logprob: -3.9615073204040527
    9. ' ' → logprob: -4.086507320404053
    10. '    
' → logprob: -4.586507320404053

Token 42: ' basis' (ID: 9571)
  Prédit: ' basis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' basis' → logprob: -0.033663567155599594
    2. 'basis' → logprob: -3.408663511276245
    3. '_basis' → logprob: -11.408663749694824
    4. ' ' → logprob: -12.533663749694824
    5. ' ' → logprob: -14.533663749694824
    6. ' sorted' → logprob: -14.533663749694824
    7. ' b' → logprob: -15.033663749694824
    8. 'b' → logprob: -15.033663749694824
    9. ' basi' → logprob: -15.158663749694824
    10. ' tuple' → logprob: -15.783663749694824

Token 43: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: 'n' (ID: 77)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1895466446876526
    2. '
' → logprob: -2.314546585083008
    3. '<|end|>' → logprob: -3.439546585083008
    4. '```' → logprob: -4.564546585083008
    5. '[' → logprob: -4.814546585083008
    6. '#' → logprob: -5.189546585083008
    7. '\n' → logprob: -5.439546585083008
    8. ' def' → logprob: -5.689546585083008
    9. '[
' → logprob: -6.439546585083008
    10. '  
' → logprob: -6.689546585083008

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09654203802347183
    2. ' ' → logprob: -2.8465421199798584
    3. '=' → logprob: -3.4715421199798584
    4. ',' → logprob: -6.096541881561279
    5. 'u' → logprob: -8.471542358398438
    6. '.' → logprob: -9.221542358398438
    7. '  ' → logprob: -9.471542358398438
    8. '_' → logprob: -9.471542358398438
    9. ' ,' → logprob: -9.596542358398438
    10. '   ' → logprob: -10.721542358398438

Token 46: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.44025662541389465
    2. ' int' → logprob: -1.0652565956115723
    3. '5' → logprob: -5.315256595611572
    4. '10' → logprob: -5.565256595611572
    5. '0' → logprob: -6.565256595611572
    6. ' ' → logprob: -6.940256595611572
    7. 'len' → logprob: -9.19025707244873
    8. '3' → logprob: -9.81525707244873
    9. '1' → logprob: -9.94025707244873
    10. '[int' → logprob: -9.94025707244873

Token 47: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011152983643114567
    2. '(input' → logprob: -9.50011157989502
    3. '('' → logprob: -11.12511157989502
    4. ' (' → logprob: -11.62511157989502
    5. '(n' → logprob: -12.37511157989502
    6. '()' → logprob: -13.12511157989502
    7. ' ' → logprob: -13.62511157989502
    8. '<|end|>' → logprob: -13.87511157989502
    9. 'input' → logprob: -14.00011157989502
    10. '(
' → logprob: -14.00011157989502

Token 48: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.21709372103214264
    2. '(' → logprob: -1.8420937061309814
    3. '())' → logprob: -3.3420937061309814
    4. '(()' → logprob: -7.9670939445495605
    5. '("("' → logprob: -8.342093467712402
    6. ')' → logprob: -8.467093467712402
    7. '('' → logprob: -8.592093467712402
    8. '().' → logprob: -9.717093467712402
    9. '(),' → logprob: -10.092093467712402
    10. '());' → logprob: -10.717093467712402

Token 49: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03808201104402542
    2. ' a' → logprob: -3.2880821228027344
    3. 'data' → logprob: -11.413082122802734
    4. 'A' → logprob: -12.538082122802734
    5. ' A' → logprob: -12.663082122802734
    6. 'array' → logprob: -12.663082122802734
    7. '_a' → logprob: -12.788082122802734
    8. ' data' → logprob: -13.288082122802734
    9. 'arr' → logprob: -13.413082122802734
    10. 's' → logprob: -13.413082122802734

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014183837920427322
    2. '=' → logprob: -4.26418399810791
    3. '.' → logprob: -11.63918399810791
    4. ' ' → logprob: -12.13918399810791
    5. '[' → logprob: -12.38918399810791
    6. '[:]' → logprob: -14.51418399810791
    7. ' =[' → logprob: -15.01418399810791
    8. '_' → logprob: -15.26418399810791
    9. 's' → logprob: -15.51418399810791
    10. '=[]' → logprob: -15.51418399810791

Token 51: ' list' (ID: 1562)
  Prédit: '[list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[list' → logprob: -0.38887572288513184
    2. '[' → logprob: -1.6388757228851318
    3. ' list' → logprob: -2.638875722885132
    4. ' [' → logprob: -3.388875722885132
    5. 'list' → logprob: -3.888875722885132
    6. '[int' → logprob: -6.638875961303711
    7. '[List' → logprob: -7.888875961303711
    8. '[input' → logprob: -8.138875961303711
    9. '[]' → logprob: -8.638875961303711
    10. ' []' → logprob: -9.638875961303711

Token 52: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.7153055667877197
    2. '(input' → logprob: -1.0903055667877197
    3. '(' → logprob: -1.8403055667877197
    4. '(int' → logprob: -4.215305328369141
    5. '(eval' → logprob: -7.340305328369141
    6. '(range' → logprob: -8.09030532836914
    7. '(list' → logprob: -9.34030532836914
    8. '()' → logprob: -10.09030532836914
    9. ' (' → logprob: -10.09030532836914
    10. '(
' → logprob: -10.71530532836914

Token 53: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014267869293689728
    2. '(' → logprob: -4.639267921447754
    3. '(input' → logprob: -5.514267921447754
    4. '(str' → logprob: -8.139267921447754
    5. '<|end|>' → logprob: -9.889267921447754
    6. '<int' → logprob: -10.264267921447754
    7. '(eval' → logprob: -10.889267921447754
    8. '(lambda' → logprob: -11.389267921447754
    9. 'int' → logprob: -11.639267921447754
    10. ')' → logprob: -11.764267921447754

Token 54: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.25543415546417236
    2. ',input' → logprob: -1.7554341554641724
    3. ',' → logprob: -3.130434036254883
    4. '(' → logprob: -4.880434036254883
    5. ' ,' → logprob: -7.130434036254883
    6. 'input' → logprob: -8.380434036254883
    7. ' (' → logprob: -9.880434036254883
    8. ' input' → logprob: -10.005434036254883
    9. '(int' → logprob: -10.505434036254883
    10. '   ' → logprob: -10.880434036254883

Token 55: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.008619658648967743
    2. ' input' → logprob: -4.758619785308838
    3. '(input' → logprob: -12.75861930847168
    4. ',input' → logprob: -13.88361930847168
    5. 'int' → logprob: -14.13361930847168
    6. '<input' → logprob: -15.88361930847168
    7. 'str' → logprob: -16.50861930847168
    8. 'list' → logprob: -16.50861930847168
    9. '=input' → logprob: -16.63361930847168
    10. ' ' → logprob: -16.75861930847168

Token 56: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0018208393594250083
    2. '()' → logprob: -6.626821041107178
    3. '()))' → logprob: -8.25182056427002
    4. '())' → logprob: -8.62682056427002
    5. '()));' → logprob: -11.00182056427002
    6. '(' → logprob: -11.50182056427002
    7. '()>' → logprob: -11.62682056427002
    8. ')' → logprob: -12.62682056427002
    9. '());' → logprob: -12.62682056427002
    10. '())))' → logprob: -12.87682056427002

Token 57: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -8.101369894575328e-05
    2. 'strip' → logprob: -9.500081062316895
    3. ' split' → logprob: -12.625081062316895
    4. 'rstrip' → logprob: -13.125081062316895
    5. '(split' → logprob: -14.500081062316895
    6. 'spl' → logprob: -15.500081062316895
    7. ' ' → logprob: -17.250080108642578
    8. 's' → logprob: -18.000080108642578
    9. '   ' → logprob: -18.250080108642578
    10. ')' → logprob: -18.375080108642578

Token 58: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.07983765006065369
    2. '())' → logprob: -3.2048375606536865
    3. '))' → logprob: -4.079837799072266
    4. '()' → logprob: -4.079837799072266
    5. '(' → logprob: -6.829837799072266
    6. ')' → logprob: -7.079837799072266
    7. '())))' → logprob: -8.829837799072266
    8. '()))
' → logprob: -9.454837799072266
    9. '()));' → logprob: -9.454837799072266
    10. '(),' → logprob: -10.579837799072266

Token 59: 'ans' (ID: 616)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.022551655769348145
    2. 'b' → logprob: -3.8975515365600586
    3. ' basis' → logprob: -7.147551536560059
    4. 'print' → logprob: -8.147551536560059
    5. '```' → logprob: -8.272551536560059
    6. 'result' → logprob: -9.022551536560059
    7. 'for' → logprob: -9.147551536560059
    8. 'answer' → logprob: -9.522551536560059
    9. 'bas' → logprob: -9.772551536560059
    10. 'ans' → logprob: -9.772551536560059

Token 60: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016496341675519943
    2. '=' → logprob: -4.141496181488037
    3. '_' → logprob: -8.016496658325195
    4. ',' → logprob: -10.266496658325195
    5. 's' → logprob: -10.266496658325195
    6. ')' → logprob: -11.391496658325195
    7. ' _' → logprob: -12.141496658325195
    8. '(' → logprob: -12.141496658325195
    9. '[:]' → logprob: -12.141496658325195
    10. ' ' → logprob: -12.266496658325195

Token 61: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1145550087094307
    2. 'max' → logprob: -2.9895551204681396
    3. 'len' → logprob: -3.4895551204681396
    4. 'get' → logprob: -3.8645551204681396
    5. ' max' → logprob: -6.3645548820495605
    6. ' ' → logprob: -6.6145548820495605
    7. 'sum' → logprob: -7.3645548820495605
    8. '[]' → logprob: -7.4895548820495605
    9. ' len' → logprob: -7.7395548820495605
    10. 'float' → logprob: -7.7395548820495605

Token 62: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07160161435604095
    2. 'max' → logprob: -3.071601629257202
    3. 'len' → logprob: -4.571601390838623
    4. 'get' → logprob: -4.821601390838623
    5. '[]' → logprob: -6.196601390838623
    6. 'sum' → logprob: -7.196601390838623
    7. 'a' → logprob: -7.696601390838623
    8. 'float' → logprob: -8.321601867675781
    9. '[max' → logprob: -8.821601867675781
    10. '1' → logprob: -8.946601867675781

Token 63: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6421291828155518
    2. 'for' → logprob: -0.7671291828155518
    3. ' for' → logprob: -4.892128944396973
    4. '<|end|>' → logprob: -6.392128944396973
    5. '\n' → logprob: -9.517128944396973
    6. '
' → logprob: -9.642128944396973
    7. '```' → logprob: -10.267128944396973
    8. ' 
' → logprob: -10.517128944396973
    9. '    
' → logprob: -11.267128944396973
    10. '

' → logprob: -11.267128944396973

Token 64: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0043665096163749695
    2. ' for' → logprob: -5.504366397857666
    3. '<|end|>' → logprob: -8.504366874694824
    4. 'basis' → logprob: -9.754366874694824
    5. '```' → logprob: -11.504366874694824
    6. '
' → logprob: -12.004366874694824
    7. '	for' → logprob: -13.004366874694824
    8. '   ' → logprob: -13.254366874694824
    9. '<|end|>' → logprob: -13.379366874694824
    10. '_basis' → logprob: -13.879366874694824

Token 65: ' i' (ID: 575)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.6676093339920044
    2. ' i' → logprob: -1.6676093339920044
    3. 'b' → logprob: -2.292609214782715
    4. ' x' → logprob: -2.417609214782715
    5. 'i' → logprob: -2.792609214782715
    6. 'x' → logprob: -3.792609214782715
    7. ' e' → logprob: -4.542609214782715
    8. 'e' → logprob: -5.417609214782715
    9. 'a' → logprob: -5.917609214782715
    10. ' a' → logprob: -5.917609214782715

Token 66: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03968202322721481
    2. 'in' → logprob: -3.539681911468506
    3. ' ' → logprob: -4.664681911468506
    4. ',' → logprob: -8.039682388305664
    5. ' ,' → logprob: -9.539682388305664
    6. '  ' → logprob: -10.664682388305664
    7. 'n' → logprob: -12.039682388305664
    8. '	in' → logprob: -12.039682388305664
    9. 'range' → logprob: -12.664682388305664
    10. '_' → logprob: -12.664682388305664

Token 67: ' a' (ID: 261)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.26778802275657654
    2. ' range' → logprob: -1.767788052558899
    3. 'a' → logprob: -2.7677879333496094
    4. ' a' → logprob: -6.642787933349609
    5. '	range' → logprob: -9.51778793334961
    6. ' xrange' → logprob: -11.14278793334961
    7. ' ' → logprob: -11.76778793334961
    8. '(range' → logprob: -12.51778793334961
    9. '   ' → logprob: -12.76778793334961
    10. '_range' → logprob: -12.76778793334961

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014799882774241269
    2. ':
' → logprob: -9.125147819519043
    3. ' in' → logprob: -11.375147819519043
    4. '=' → logprob: -12.125147819519043
    5. ',' → logprob: -12.375147819519043
    6. 'in' → logprob: -12.500147819519043
    7. ' :' → logprob: -12.500147819519043
    8. '<|end|>' → logprob: -12.500147819519043
    9. '<|end|>' → logprob: -14.000147819519043
    10. '+' → logprob: -14.000147819519043

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9888937473297119
    2. '<|end|>' → logprob: -1.363893747329712
    3. ' ' → logprob: -1.488893747329712
    4. ' 
' → logprob: -3.113893747329712
    5. ' ans' → logprob: -3.488893747329712
    6. '
' → logprob: -4.113893508911133
    7. '    ' → logprob: -4.363893508911133
    8. ' for' → logprob: -4.363893508911133
    9. '<|end|>' → logprob: -4.613893508911133
    10. '    
' → logprob: -5.488893508911133

Token 70: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.0073201656341552734
    2. 'ans' (adapté à ' ans') → logprob: -6.132320404052734
    3. '   ' → logprob: -6.757320404052734
    4. ' for' → logprob: -7.507320404052734
    5. '	ans' → logprob: -7.507320404052734
    6. ' i' → logprob: -7.507320404052734
    7. ' if' → logprob: -7.757320404052734
    8. '```' → logprob: -8.007320404052734
    9. '
' → logprob: -8.257320404052734
    10. ' ' → logprob: -8.507320404052734

Token 71: ' ^=' (ID: 79665)
  Prédit: ' ^='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.23873844742774963
    2. '=' → logprob: -2.363738536834717
    3. ' =' → logprob: -2.363738536834717
    4. '^' → logprob: -3.738738536834717
    5. ' ^' → logprob: -8.363738059997559
    6. ' |=' → logprob: -9.238738059997559
    7. ' ' → logprob: -9.738738059997559
    8. '|' → logprob: -9.863738059997559
    9. '+=' → logprob: -12.488738059997559
    10. '>' → logprob: -12.488738059997559

Token 72: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0006267757853493094
    2. ' i' → logprob: -7.375626564025879
    3. '<|end|>' → logprob: -15.875626564025879
    4. '   ' → logprob: -16.250627517700195
    5. '	i' → logprob: -16.875627517700195
    6. ' ' → logprob: -17.375627517700195
    7. '  ' → logprob: -17.875627517700195
    8. '(i' → logprob: -18.750627517700195
    9. '[i' → logprob: -19.125627517700195
    10. '_i' → logprob: -20.125627517700195

Token 73: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.054667968302965164
    2. '
' → logprob: -3.6796679496765137
    3. '<|end|>' → logprob: -5.054667949676514
    4. ' print' → logprob: -5.429667949676514
    5. 'if' → logprob: -5.679667949676514
    6. 'for' → logprob: -5.929667949676514
    7. '+' → logprob: -6.179667949676514
    8. '^' → logprob: -6.304667949676514
    9. ' 
' → logprob: -6.554667949676514
    10. ' if' → logprob: -6.679667949676514

Token 74: 'k' (ID: 74)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0336662158370018
    2. 'for' → logprob: -4.033666133880615
    3. 'ans' → logprob: -5.408666133880615
    4. '+' → logprob: -6.158666133880615
    5. '```' → logprob: -6.158666133880615
    6. ' for' → logprob: -6.783666133880615
    7. '<|end|>' → logprob: -6.783666133880615
    8. 'basis' → logprob: -7.033666133880615
    9. '^' → logprob: -7.533666133880615
    10. 'i' → logprob: -7.783666133880615

Token 75: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09678120911121368
    2. '=' → logprob: -2.4717812538146973
    3. ' ^=' → logprob: -5.346781253814697
    4. 'e' → logprob: -7.346781253814697
    5. '=int' → logprob: -7.346781253814697
    6. ' +=' → logprob: -7.721781253814697
    7. '  ' → logprob: -8.221780776977539
    8. ' *=' → logprob: -8.596780776977539
    9. ' <<=' → logprob: -8.846780776977539
    10. ' ' → logprob: -8.971780776977539

Token 76: ' ~' (ID: 6574)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -1.004835844039917
    2. ' len' → logprob: -2.004835844039917
    3. 'ans' → logprob: -2.129835844039917
    4. 'len' → logprob: -2.129835844039917
    5. ' n' → logprob: -2.504835844039917
    6. ' ' → logprob: -2.629835844039917
    7. '0' → logprob: -2.879835844039917
    8. ' max' → logprob: -3.754835844039917
    9. 'n' → logprob: -4.379836082458496
    10. 'max' → logprob: -5.629836082458496

Token 77: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0010142299579456449
    2. ' ans' → logprob: -7.251014232635498
    3. '(ans' → logprob: -9.00101375579834
    4. 'n' → logprob: -9.50101375579834
    5. '0' → logprob: -9.87601375579834
    6. 'k' → logprob: -10.87601375579834
    7. '	ans' → logprob: -11.12601375579834
    8. 'a' → logprob: -11.25101375579834
    9. '_ans' → logprob: -13.37601375579834
    10. ' ' → logprob: -13.75101375579834

Token 78: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 79: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 80: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.33827370405197144
    2. ' b' → logprob: -1.9632737636566162
    3. ' ' → logprob: -2.588273763656616
    4. ' e' → logprob: -3.588273763656616
    5. ' x' → logprob: -4.088273525238037
    6. 'i' → logprob: -4.588273525238037
    7. ' _' → logprob: -4.963273525238037
    8. 'b' → logprob: -5.463273525238037
    9. '_' → logprob: -5.588273525238037
    10. 'e' → logprob: -7.088273525238037

Token 81: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.027865128591656685
    2. 'in' → logprob: -3.652865171432495
    3. ' ' → logprob: -7.527864933013916
    4. ' range' → logprob: -8.402865409851074
    5. ',' → logprob: -8.652865409851074
    6. ')' → logprob: -9.402865409851074
    7. 'range' → logprob: -9.527865409851074
    8. '  ' → logprob: -9.652865409851074
    9. 'a' → logprob: -9.902865409851074
    10. '(' → logprob: -10.027865409851074

Token 82: ' range' (ID: 3352)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.5626855492591858
    2. ' range' → logprob: -1.687685489654541
    3. 'get' → logprob: -1.812685489654541
    4. ' basis' → logprob: -2.687685489654541
    5. 'basis' → logprob: -5.062685489654541
    6. 'range' → logprob: -5.187685489654541
    7. ' a' → logprob: -6.687685489654541
    8. 'a' → logprob: -7.937685489654541
    9. '[get' → logprob: -8.9376859664917
    10. ' ' → logprob: -9.4376859664917

Token 83: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.14326195418834686
    2. '(len' → logprob: -2.5182619094848633
    3. '(' → logprob: -3.0182619094848633
    4. '(k' → logprob: -5.643261909484863
    5. ' (' → logprob: -7.768261909484863
    6. ' n' → logprob: -11.518261909484863
    7. ' len' → logprob: -12.393261909484863
    8. '((' → logprob: -13.393261909484863
    9. '(s' → logprob: -13.893261909484863
    10. '(
' → logprob: -14.018261909484863

Token 84: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18356868624687195
    2. '):
' → logprob: -1.8085687160491943
    3. ' ):' → logprob: -6.683568477630615
    4. '-' → logprob: -7.183568477630615
    5. ')' → logprob: -7.558568477630615
    6. '+' → logprob: -7.933568477630615
    7. '   ' → logprob: -7.933568477630615
    8. '):
' → logprob: -8.183568954467773
    9. ' ):
' → logprob: -8.808568954467773
    10. ' ' → logprob: -10.308568954467773

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09929002076387405
    2. ' if' → logprob: -2.974290132522583
    3. '<|end|>' → logprob: -4.224289894104004
    4. 'a' → logprob: -4.474289894104004
    5. 'if' → logprob: -5.474289894104004
    6. ' k' → logprob: -5.724289894104004
    7. ' a' → logprob: -5.724289894104004
    8. 'k' → logprob: -6.099289894104004
    9. ' ' → logprob: -7.474289894104004
    10. 'b' → logprob: -7.599289894104004

Token 86: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0685088634490967
    2. 'a' (adapté à ' a') → logprob: -1.1935088634490967
    3. '   ' → logprob: -1.9435088634490967
    4. ' if' → logprob: -2.0685088634490967
    5. ' for' → logprob: -3.6935088634490967
    6. 'if' → logprob: -4.068509101867676
    7. ' k' → logprob: -4.693509101867676
    8. 'print' → logprob: -4.818509101867676
    9. 'k' → logprob: -5.068509101867676
    10. ' print' → logprob: -5.443509101867676

Token 87: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0019852598197758198
    2. '[' → logprob: -6.2519850730896
    3. '[a' → logprob: -10.376985549926758
    4. '.append' → logprob: -12.126985549926758
    5. ' [' → logprob: -12.376985549926758
    6. '[-' → logprob: -12.751985549926758
    7. 'a' → logprob: -13.001985549926758
    8. '\[' → logprob: -13.626985549926758
    9. '[k' → logprob: -13.751985549926758
    10. '[n' → logprob: -13.876985549926758

Token 88: ']' (ID: 60)
  Prédit: '|'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '|' → logprob: -0.8471589684486389
    2. ' ^=' → logprob: -1.0971589088439941
    3. '=' → logprob: -2.472158908843994
    4. ')' → logprob: -3.222158908843994
    5. ' |=' → logprob: -3.472158908843994
    6. ' &=' → logprob: -3.597158908843994
    7. ' ' → logprob: -3.722158908843994
    8. '^' → logprob: -4.097158908843994
    9. '&' → logprob: -4.722158908843994
    10. ' =' → logprob: -6.222158908843994

Token 89: ' &=' (ID: 35621)
  Prédit: ' ^='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^=' → logprob: -0.9316651821136475
    2. '=' → logprob: -1.0566651821136475
    3. ' &=' → logprob: -2.0566651821136475
    4. '&' → logprob: -2.5566651821136475
    5. ' =' → logprob: -3.5566651821136475
    6. '^' → logprob: -4.306665420532227
    7. '|' → logprob: -5.556665420532227
    8. ' ' → logprob: -5.681665420532227
    9. ' |=' → logprob: -6.181665420532227
    10. ' &' → logprob: -7.056665420532227

Token 90: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.11283455044031143
    2. 'k' → logprob: -2.2378344535827637
    3. ' ' → logprob: -12.237834930419922
    4. '	k' → logprob: -12.862834930419922
    5. ' ~' → logprob: -12.987834930419922
    6. ' ' → logprob: -13.862834930419922
    7. '(k' → logprob: -14.487834930419922
    8. '~' → logprob: -14.612834930419922
    9. ' (' → logprob: -16.237834930419922
    10. ' ans' → logprob: -16.362834930419922

Token 91: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0328952856361866
    2. '<|end|>' → logprob: -3.53289532661438
    3. 'print' → logprob: -6.782895088195801
    4. ' 
' → logprob: -7.282895088195801
    5. '
' → logprob: -8.4078950881958
    6. '  
' → logprob: -8.5328950881958
    7. '\n' → logprob: -8.6578950881958
    8. '<|end|>' → logprob: -8.7828950881958
    9. '    
' → logprob: -9.0328950881958
    10. '```' → logprob: -9.2828950881958

Token 92: 'basis' (ID: 108260)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06504901498556137
    2. '=' → logprob: -2.815048933029175
    3. '(' → logprob: -6.690049171447754
    4. ' ' → logprob: -7.440049171447754
    5. ')' → logprob: -7.690049171447754
    6. '<|end|>' → logprob: -8.315049171447754
    7. ',' → logprob: -8.690049171447754
    8. ' +=' → logprob: -9.440049171447754
    9. '  ' → logprob: -9.565049171447754
    10. '_' → logprob: -9.940049171447754

Token 94: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.38697999715805054
    2. ' get' → logprob: -1.1369800567626953
    3. '[]' → logprob: -9.761980056762695
    4. ' []' → logprob: -10.761980056762695
    5. '[get' → logprob: -10.761980056762695
    6. '	get' → logprob: -13.011980056762695
    7. '(get' → logprob: -13.261980056762695
    8. ' ' → logprob: -13.386980056762695
    9. '[]
' → logprob: -13.511980056762695
    10. ' []
' → logprob: -14.636980056762695

Token 95: '_basis' (ID: 180790)
  Prédit: '_basis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_basis' → logprob: -4.320199877838604e-07
    2. 'basis' → logprob: -15.125
    3. '_bas' → logprob: -15.75
    4. '(b' → logprob: -19.625
    5. '(a' → logprob: -19.75
    6. '```' → logprob: -20.125
    7. '_based' → logprob: -20.75
    8. '_basic' → logprob: -21.0
    9. ' basis' → logprob: -21.125
    10. '_base' → logprob: -21.375

Token 96: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00020938136731274426
    2. '(' → logprob: -8.50020980834961
    3. ' (' → logprob: -12.50020980834961
    4. '((' → logprob: -14.50020980834961
    5. '(
' → logprob: -15.00020980834961
    6. '(i' → logprob: -15.50020980834961
    7. '(n' → logprob: -15.87520980834961
    8. '(ai' → logprob: -16.00020980834961
    9. '```' → logprob: -16.00020980834961
    10. '(k' → logprob: -16.12520980834961

Token 97: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.3120038501219824e-05
    2. '(' → logprob: -10.875053405761719
    3. ')
' → logprob: -11.500053405761719
    4. '(a' → logprob: -11.625053405761719
    5. ' )' → logprob: -13.000053405761719
    6. '))' → logprob: -13.125053405761719
    7. '[i' → logprob: -13.625053405761719
    8. ')`' → logprob: -13.625053405761719
    9. ',' → logprob: -13.750053405761719
    10. ')a' → logprob: -13.875053405761719

Token 98: 'res' (ID: 430)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007957935333251953
    2. 'ans' → logprob: -5.507957935333252
    3. ' for' → logprob: -6.382957935333252
    4. 'res' → logprob: -7.632957935333252
    5. 'mask' → logprob: -7.757957935333252
    6. 'x' → logprob: -8.007957458496094
    7. 'result' → logprob: -8.507957458496094
    8. 'max' → logprob: -8.507957458496094
    9. 'answer' → logprob: -8.882957458496094
    10. 'print' → logprob: -9.257957458496094

Token 99: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003609101288020611
    2. 'ult' → logprob: -6.1286091804504395
    3. '=' → logprob: -6.6286091804504395
    4. 'ults' → logprob: -9.628608703613281
    5. 't' → logprob: -11.003608703613281
    6. 'ault' → logprob: -11.878608703613281
    7. 'ultat' → logprob: -13.003608703613281
    8. ' +=' → logprob: -13.253608703613281
    9. 's' → logprob: -13.378608703613281
    10. ' ' → logprob: -13.503608703613281

Token 100: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4943954050540924
    2. ' ' → logprob: -0.99439537525177
    3. ' ans' → logprob: -4.2443952560424805
    4. 'ans' → logprob: -5.7443952560424805
    5. '1' → logprob: -7.4943952560424805
    6. ' res' → logprob: -7.9943952560424805
    7. ' (' → logprob: -8.24439525604248
    8. ' max' → logprob: -8.36939525604248
    9. ' len' → logprob: -8.36939525604248
    10. '(' → logprob: -8.49439525604248

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00687000248581171
    2. 'ans' → logprob: -5.256869792938232
    3. '(' → logprob: -7.131869792938232
    4. 'res' → logprob: -8.38187026977539
    5. 'max' → logprob: -8.50687026977539
    6. '(ans' → logprob: -8.88187026977539
    7. '1' → logprob: -9.38187026977539
    8. ' ' → logprob: -9.88187026977539
    9. 'len' → logprob: -10.13187026977539
    10. ' ans' → logprob: -10.63187026977539

Token 102: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.31356772780418396
    2. ' for' → logprob: -1.3135677576065063
    3. '<|end|>' → logprob: -8.563568115234375
    4. '
' → logprob: -9.188568115234375
    5. ' 
' → logprob: -12.188568115234375
    6. '<|end|>' → logprob: -13.813568115234375
    7. '\n' → logprob: -14.188568115234375
    8. '	for' → logprob: -14.188568115234375
    9. '```' → logprob: -14.188568115234375
    10. '[' → logprob: -14.313568115234375

Token 103: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00026383911608718336
    2. ' for' → logprob: -8.250264167785645
    3. '<|end|>' → logprob: -13.000264167785645
    4. '0' → logprob: -15.875264167785645
    5. '```' → logprob: -16.875263214111328
    6. 'from' → logprob: -16.875263214111328
    7. '[' → logprob: -17.375263214111328
    8. 'print' → logprob: -17.750263214111328
    9. '	for' → logprob: -18.625263214111328
    10. 'res' → logprob: -19.000263214111328

Token 104: ' i' (ID: 575)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.636004626750946
    2. ' b' → logprob: -0.761004626750946
    3. ' v' → logprob: -6.636004447937012
    4. 'v' → logprob: -6.886004447937012
    5. ' i' → logprob: -8.386004447937012
    6. ' x' → logprob: -8.386004447937012
    7. 'x' → logprob: -8.386004447937012
    8. 'i' → logprob: -8.386004447937012
    9. ' ' → logprob: -10.011004447937012
    10. '   ' → logprob: -10.386004447937012

Token 105: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006861243396997452
    2. 'in' → logprob: -5.006861209869385
    3. ' ' → logprob: -9.881861686706543
    4. ',' → logprob: -10.381861686706543
    5. '  ' → logprob: -11.006861686706543
    6. '   ' → logprob: -11.381861686706543
    7. ' ,' → logprob: -11.881861686706543
    8. 'range' → logprob: -12.694361686706543
    9. ',b' → logprob: -12.944361686706543
    10. '0' → logprob: -13.069361686706543

Token 106: ' basis' (ID: 9571)
  Prédit: 'basis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'basis' → logprob: -0.4992418587207794
    2. ' basis' → logprob: -0.999241828918457
    3. ' range' → logprob: -4.124241828918457
    4. 'range' → logprob: -4.749241828918457
    5. '_basis' → logprob: -11.374241828918457
    6. ' xrange' → logprob: -13.499241828918457
    7. '(range' → logprob: -13.999241828918457
    8. '	range' → logprob: -14.499241828918457
    9. 'b' → logprob: -14.874241828918457
    10. 'bas' → logprob: -14.999241828918457

Token 107: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11707264930009842
    2. ':
' → logprob: -2.242072582244873
    3. '   ' → logprob: -5.492072582244873
    4. '       ' → logprob: -10.742073059082031
    5. '):
' → logprob: -10.742073059082031
    6. '=' → logprob: -10.867073059082031
    7. ' ^=' → logprob: -11.492073059082031
    8. ' :' → logprob: -11.742073059082031
    9. ' :
' → logprob: -12.117073059082031
    10. ':
' → logprob: -12.617073059082031

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07716453820466995
    2. ' res' → logprob: -2.702164649963379
    3. 'res' → logprob: -4.952164649963379
    4. '	res' → logprob: -9.577164649963379
    5. '```' → logprob: -10.077164649963379
    6. '       ' → logprob: -11.952164649963379
    7. '
' → logprob: -12.452164649963379
    8. '<|end|>' → logprob: -12.702164649963379
    9. ' ' → logprob: -13.077164649963379
    10. ' if' → logprob: -13.452164649963379

Token 109: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.28202196955680847
    2. 'res' (adapté à ' res') → logprob: -1.5320219993591309
    3. '   ' → logprob: -3.657021999359131
    4. ' if' → logprob: -5.657021999359131
    5. 'if' → logprob: -8.032021522521973
    6. '	res' → logprob: -11.407021522521973
    7. '```' → logprob: -12.282021522521973
    8. '       ' → logprob: -14.157021522521973
    9. '``' → logprob: -14.907021522521973
    10. ' ' → logprob: -15.032021522521973

Token 110: ' =' (ID: 314)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.10062435269355774
    2. ' ^=' → logprob: -2.3506243228912354
    3. '|' → logprob: -7.9756245613098145
    4. '=' → logprob: -9.725624084472656
    5. '   ' → logprob: -12.600624084472656
    6. ' ' → logprob: -13.100624084472656
    7. ' ^' → logprob: -13.350624084472656
    8. '_^' → logprob: -13.475624084472656
    9. ' |=' → logprob: -13.975624084472656
    10. '```' → logprob: -13.975624084472656

Token 111: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.5680239200592041
    2. ' res' → logprob: -1.068023920059204
    3. 'max' → logprob: -2.693023920059204
    4. 'res' → logprob: -3.818023920059204
    5. '(res' → logprob: -11.193023681640625
    6. ' min' → logprob: -12.693023681640625
    7. '(max' → logprob: -13.693023681640625
    8. 'min' → logprob: -14.068023681640625
    9. ' ' → logprob: -14.318023681640625
    10. '0' → logprob: -14.818023681640625

Token 112: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.125000953674316
    3. 'res' → logprob: -15.875000953674316
    4. '(i' → logprob: -19.25
    5. ' (' → logprob: -20.125
    6. '	res' → logprob: -20.625
    7. '   ' → logprob: -20.75
    8. ' res' → logprob: -21.125
    9. ',res' → logprob: -21.625
    10. '(max' → logprob: -22.0

Token 113: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005821314174681902
    2. ' ,' → logprob: -5.505821228027344
    3. ',res' → logprob: -6.755821228027344
    4. ' ^' → logprob: -7.505821228027344
    5. '^' → logprob: -10.630821228027344
    6. 'res' → logprob: -13.755821228027344
    7. '   ' → logprob: -14.130821228027344
    8. ',i' → logprob: -14.755821228027344
    9. ' res' → logprob: -15.130821228027344
    10. ' ' → logprob: -15.130821228027344

Token 114: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.3868763744831085
    2. 'res' → logprob: -1.1368763446807861
    3. '   ' → logprob: -12.261876106262207
    4. ' ' → logprob: -15.386876106262207
    5. '(res' → logprob: -15.511876106262207
    6. '	res' → logprob: -16.011877059936523
    7. '    ' → logprob: -16.386877059936523
    8. '  ' → logprob: -16.886877059936523
    9. '$res' → logprob: -18.011877059936523
    10. ' ' → logprob: -18.261877059936523

Token 115: ' ^' (ID: 7602)
  Prédit: ' ^'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ^' → logprob: -0.07008326798677444
    2. '^' → logprob: -2.6950833797454834
    3. ' ^=' → logprob: -9.320083618164062
    4. ' xor' → logprob: -10.195083618164062
    5. ' ' → logprob: -11.570083618164062
    6. ' ' → logprob: -13.070083618164062
    7. ' XOR' → logprob: -13.445083618164062
    8. ' i' → logprob: -13.695083618164062
    9. ')' → logprob: -13.820083618164062
    10. ' ^
' → logprob: -13.945083618164062

Token 116: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.005233763717114925
    2. ' i' → logprob: -5.2552337646484375
    3. '   ' → logprob: -18.505233764648438
    4. '	i' → logprob: -20.130233764648438
    5. ' ' → logprob: -20.755233764648438
    6. '(i' → logprob: -21.005233764648438
    7. '  ' → logprob: -21.505233764648438
    8. '[i' → logprob: -21.755233764648438
    9. '_i' → logprob: -22.380233764648438
    10. ')i' → logprob: -22.380233764648438

Token 117: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006274910410866141
    2. ')
' → logprob: -7.375627517700195
    3. ' )' → logprob: -14.625627517700195
    4. ')return' → logprob: -15.375627517700195
    5. ')

' → logprob: -16.750627517700195
    6. '   ' → logprob: -17.375627517700195
    7. 'print' → logprob: -17.750627517700195
    8. '```' → logprob: -17.750627517700195
    9. ')
' → logprob: -17.875627517700195
    10. '),' → logprob: -18.125627517700195

Token 118: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.125
    3. ' print' → logprob: -16.75
    4. 'res' → logprob: -18.75
    5. 'ans' → logprob: -20.75
    6. '#print' → logprob: -21.0
    7. 'for' → logprob: -21.875
    8. '``' → logprob: -21.875
    9. '#' → logprob: -22.75
    10. '
' → logprob: -22.75

Token 119: '(ans' (ID: 70054)
  Prédit: '(res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.00151831132825464
    2. '(' → logprob: -6.501518249511719
    3. '(max' → logprob: -11.251518249511719
    4. '()' → logprob: -13.001518249511719
    5. 'res' → logprob: -15.126518249511719
    6. ' (' → logprob: -15.876518249511719
    7. '('' → logprob: -16.12651824951172
    8. '(ans' → logprob: -16.12651824951172
    9. '(result' → logprob: -17.00151824951172
    10. '((' → logprob: -17.37651824951172

Token 120: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004710530396550894
    2. '^' → logprob: -6.254710674285889
    3. ' ^' → logprob: -6.379710674285889
    4. '^)' → logprob: -7.629710674285889
    5. '+' → logprob: -8.25471019744873
    6. ' )' → logprob: -8.50471019744873
    7. ',' → logprob: -9.62971019744873
    8. ' +' → logprob: -10.25471019744873
    9. '|' → logprob: -10.87971019744873
    10. ' |' → logprob: -12.37971019744873

Token 121: ' ' (ID: 220)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.313262403011322
    2. ' res' → logprob: -1.3132624626159668
    3. '(res' → logprob: -14.313261985778809
    4. ' ' → logprob: -18.313262939453125
    5. '	res' → logprob: -18.438262939453125
    6. '$res' → logprob: -18.688262939453125
    7. '_res' → logprob: -18.813262939453125
    8. ' ' → logprob: -18.938262939453125
    9. 'ress' → logprob: -20.438262939453125
    10. '1' → logprob: -20.563262939453125

Token 122: '2' (ID: 17)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.00012356207298580557
    2. ' res' → logprob: -9.000123977661133
    3. '(res' → logprob: -16.500123977661133
    4. '$res' → logprob: -19.750123977661133
    5. '	res' → logprob: -20.500123977661133
    6. 'ress' → logprob: -20.750123977661133
    7. ' ' → logprob: -22.125123977661133
    8. '_res' → logprob: -22.250123977661133
    9. 'resi' → logprob: -22.250123977661133
    10. 'r' → logprob: -23.000123977661133

Token 123: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6758459210395813
    2. '-' → logprob: -0.8008459210395813
    3. '*' → logprob: -3.3008458614349365
    4. ' -' → logprob: -5.925846099853516
    5. 'res' → logprob: -7.050846099853516
    6. '+' → logprob: -7.550846099853516
    7. '^' → logprob: -7.675846099853516
    8. '**' → logprob: -8.550846099853516
    9. ' *' → logprob: -9.050846099853516
    10. '(res' → logprob: -9.175846099853516

Token 124: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0007100477814674377
    2. ' res' → logprob: -7.2507100105285645
    3. '(res' → logprob: -15.875710487365723
    4. '$res' → logprob: -20.000709533691406
    5. '	res' → logprob: -20.500709533691406
    6. 'ress' → logprob: -21.125709533691406
    7. '_res' → logprob: -21.375709533691406
    8. 'resi' → logprob: -22.250709533691406
    9. 'rest' → logprob: -23.000709533691406
    10. 're' → logprob: -23.500709533691406

Token 125: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -14.125001907348633
    3. '))' → logprob: -14.750001907348633
    4. ')
' → logprob: -15.250001907348633
    5. ')`' → logprob: -15.375001907348633
    6. '`)' → logprob: -16.375001907348633
    7. '')' → logprob: -17.250001907348633
    8. '")' → logprob: -18.125001907348633
    9. ')#' → logprob: -18.250001907348633
    10. '#' → logprob: -18.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 123
Tokens correctement prédits (1ère position, stricte): 56
Tokens correctement prédits (1ère position, avec adaptation): 56
Tokens correctement prédits (top 10): 103
Précision stricte (1ère position): 45.53%
Précision adaptée (1ère position): 45.53%
Précision (top 10): 83.74%
================================================================================
