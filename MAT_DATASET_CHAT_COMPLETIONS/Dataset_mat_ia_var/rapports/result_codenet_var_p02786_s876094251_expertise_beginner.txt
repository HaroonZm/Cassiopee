================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:28:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
H = int(input())
cnt = 0
total = 1
while H > 1:
    H = H // 2
    cnt = cnt + total
    total = total * 2
print(cnt + total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'H' (ID: 39)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0018830618355423212
    2. ''' → logprob: -6.751883029937744
    3. '('' → logprob: -8.751883506774902
    4. '(H' → logprob: -8.876883506774902
    5. 'H' → logprob: -9.001883506774902
    6. ')' → logprob: -9.626883506774902
    7. '"' → logprob: -9.751883506774902
    8. '(
' → logprob: -9.876883506774902
    9. '```' → logprob: -10.126883506774902
    10. '`' → logprob: -10.751883506774902

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01935521513223648
    2. ')' → logprob: -4.019355297088623
    3. '()' → logprob: -7.394355297088623
    4. '(
' → logprob: -8.519354820251465
    5. '())' → logprob: -9.769354820251465
    6. '(

' → logprob: -10.269354820251465
    7. '<|end|>' → logprob: -10.394354820251465
    8. '```' → logprob: -10.394354820251465
    9. '[' → logprob: -10.519354820251465
    10. '("("' → logprob: -10.644354820251465

Token 5: 'cnt' (ID: 33160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6586970090866089
    2. '*' → logprob: -1.9086970090866089
    3. 'for' → logprob: -2.6586971282958984
    4. '%' → logprob: -2.7836971282958984
    5. ')' → logprob: -3.0336971282958984
    6. 's' → logprob: -3.4086971282958984
    7. 'print' → logprob: -3.5336971282958984
    8. 'n' → logprob: -4.033697128295898
    9. '+' → logprob: -4.533697128295898
    10. 'i' → logprob: -4.783697128295898

Token 6: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.45960015058517456
    2. '=' → logprob: -1.8346002101898193
    3. '[' → logprob: -1.8346002101898193
    4. '+' → logprob: -3.4596002101898193
    5. ' =' → logprob: -4.95959997177124
    6. ' ' → logprob: -5.83459997177124
    7. '+=' → logprob: -6.20959997177124
    8. '(' → logprob: -6.33459997177124
    9. ' +=' → logprob: -6.45959997177124
    10. '.' → logprob: -7.33459997177124

Token 7: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6934588551521301
    2. ' ' → logprob: -0.6934588551521301
    3. ' H' → logprob: -9.318458557128906
    4. '1' → logprob: -9.568458557128906
    5. 'H' → logprob: -9.943458557128906
    6. ''' → logprob: -10.193458557128906
    7. '"' → logprob: -10.818458557128906
    8. ' ' → logprob: -10.943458557128906
    9. '`' → logprob: -12.068458557128906
    10. ' "' → logprob: -12.693458557128906

Token 8: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0029106696601957083
    2. 'H' → logprob: -6.252910614013672
    3. '1' → logprob: -7.502910614013672
    4. '(' → logprob: -8.127910614013672
    5. ''' → logprob: -10.627910614013672
    6. '(H' → logprob: -10.627910614013672
    7. ' ' → logprob: -10.877910614013672
    8. ''H' → logprob: -11.002910614013672
    9. '2' → logprob: -11.877910614013672
    10. '"' → logprob: -12.002910614013672

Token 9: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5090267658233643
    2. '
' → logprob: -1.3840267658233643
    3. '\' → logprob: -2.7590267658233643
    4. 'while' → logprob: -3.3840267658233643
    5. ' while' → logprob: -4.009026527404785
    6. '' → logprob: -4.259026527404785
    7. ' 
' → logprob: -5.009026527404785
    8. '  
' → logprob: -6.134026527404785
    9. '```' → logprob: -6.384026527404785
    10. '
' → logprob: -6.884026527404785

Token 10: 'total' (ID: 9577)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.2282694578170776
    2. 'while' → logprob: -1.2282694578170776
    3. ' while' → logprob: -1.6032694578170776
    4. '
' → logprob: -2.103269577026367
    5. ' 
' → logprob: -3.228269577026367
    6. '<|end|>' → logprob: -4.853269577026367
    7. '  
' → logprob: -4.978269577026367
    8. ' ' → logprob: -5.103269577026367
    9. '\' → logprob: -5.228269577026367
    10. 'if' → logprob: -5.478269577026367

Token 11: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.022184787318110466
    2. ' +=' → logprob: -4.8971848487854
    3. '=' → logprob: -5.7721848487854
    4. ' ' → logprob: -6.0221848487854
    5. '+' → logprob: -6.1471848487854
    6. ' =' → logprob: -6.1471848487854
    7. '_space' → logprob: -6.1471848487854
    8. ')' → logprob: -7.1471848487854
    9. ' _' → logprob: -7.6471848487854
    10. '[' → logprob: -8.147184371948242

Token 12: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07992834597826004
    2. '0' → logprob: -2.579928398132324
    3. ' H' → logprob: -6.954928398132324
    4. 'H' → logprob: -10.204928398132324
    5. '1' → logprob: -10.704928398132324
    6. ' ' → logprob: -11.204928398132324
    7. ' cnt' → logprob: -13.079928398132324
    8. ' 
' → logprob: -13.079928398132324
    9. '```' → logprob: -13.892428398132324
    10. ' "' → logprob: -14.267428398132324

Token 13: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006599674932658672
    2. 'H' → logprob: -5.6315999031066895
    3. ' ' → logprob: -6.1315999031066895
    4. '1' → logprob: -7.2565999031066895
    5. ' H' → logprob: -9.631599426269531
    6. '100' → logprob: -10.756599426269531
    7. '10' → logprob: -11.381599426269531
    8. '2' → logprob: -13.131599426269531
    9. 'sum' → logprob: -13.381599426269531
    10. '20' → logprob: -13.881599426269531

Token 14: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.26429465413093567
    2. ' while' → logprob: -2.2642946243286133
    3. '
' → logprob: -2.5142946243286133
    4. '' → logprob: -3.7642946243286133
    5. '\n' → logprob: -5.264294624328613
    6. '
' → logprob: -5.639294624328613
    7. 'if' → logprob: -5.889294624328613
    8. ' 
' → logprob: -5.889294624328613
    9. '0' → logprob: -6.389294624328613
    10. 'for' → logprob: -6.514294624328613

Token 15: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1836741417646408
    2. ' while' → logprob: -1.9336740970611572
    3. '0' → logprob: -5.433674335479736
    4. '*' → logprob: -5.558674335479736
    5. '\n' → logprob: -5.933674335479736
    6. '' → logprob: -6.183674335479736
    7. 'for' → logprob: -6.308674335479736
    8. '
' → logprob: -6.558674335479736
    9. ',' → logprob: -6.683674335479736
    10. 'if' → logprob: -6.808674335479736

Token 16: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.16084252297878265
    2. ' ' → logprob: -1.9108425378799438
    3. ' total' → logprob: -8.535842895507812
    4. 'H' → logprob: -8.785842895507812
    5. '  ' → logprob: -9.285842895507812
    6. ' cnt' → logprob: -9.660842895507812
    7. ' ' → logprob: -10.035842895507812
    8. ' (' → logprob: -10.410842895507812
    9. '<|end|>' → logprob: -11.535842895507812
    10. 'cnt' → logprob: -11.660842895507812

Token 17: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.013224469497799873
    2. '>' → logprob: -4.7632246017456055
    3. ' >=' → logprob: -5.3882246017456055
    4. '>=' → logprob: -11.013224601745605
    5. ' ' → logprob: -12.513224601745605
    6. ' !=' → logprob: -13.138224601745605
    7. ' //' → logprob: -13.263224601745605
    8. ' >>=' → logprob: -14.138224601745605
    9. ' >
' → logprob: -14.388224601745605
    10. ' <=' → logprob: -14.388224601745605

Token 18: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3039141297340393
    2. ' ' → logprob: -1.4289140701293945
    3. '0' → logprob: -3.8039140701293945
    4. '=' → logprob: -9.428914070129395
    5. '2' → logprob: -9.678914070129395
    6. 'cnt' → logprob: -9.928914070129395
    7. ' cnt' → logprob: -11.928914070129395
    8. '>' → logprob: -11.928914070129395
    9. 'total' → logprob: -12.428914070129395
    10. '3' → logprob: -13.116414070129395

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015208146069198847
    2. '0' → logprob: -6.62652063369751
    3. 'cnt' → logprob: -9.251521110534668
    4. ' ' → logprob: -9.626521110534668
    5. '2' → logprob: -10.876521110534668
    6. '9' → logprob: -13.126521110534668
    7. '=' → logprob: -13.376521110534668
    8. '3' → logprob: -13.376521110534668
    9. '5' → logprob: -13.501521110534668
    10. '19' → logprob: -14.064021110534668

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01093734335154295
    2. ':
' → logprob: -4.885937213897705
    3. ' :' → logprob: -5.885937213897705
    4. ' :
' → logprob: -8.010937690734863
    5. '   ' → logprob: -8.885937690734863
    6. ' ' → logprob: -11.010937690734863
    7. '):' → logprob: -11.635937690734863
    8. '    ' → logprob: -12.010937690734863
    9. '*' → logprob: -12.010937690734863
    10. ',' → logprob: -12.135937690734863

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07566248625516891
    2. ' H' → logprob: -3.45066237449646
    3. ' ' → logprob: -3.95066237449646
    4. '    ' → logprob: -4.700662612915039
    5. '    
' → logprob: -5.825662612915039
    6. '```' → logprob: -5.825662612915039
    7. ' total' → logprob: -5.950662612915039
    8. ' 
' → logprob: -6.075662612915039
    9. 'H' → logprob: -7.825662612915039
    10. '     
' → logprob: -8.075662612915039

Token 22: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.2424052208662033
    2. 'H' (adapté à ' H') → logprob: -2.2424051761627197
    3. '    ' → logprob: -3.4924051761627197
    4. ' total' → logprob: -3.7424051761627197
    5. '   ' → logprob: -4.367405414581299
    6. '```' → logprob: -4.492405414581299
    7. '``' → logprob: -4.617405414581299
    8. ' if' → logprob: -4.867405414581299
    9. 'total' → logprob: -4.992405414581299
    10. ' ' → logprob: -5.992405414581299

Token 23: ' =' (ID: 314)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.18902644515037537
    2. ' =' → logprob: -2.314026355743408
    3. '//=' → logprob: -3.064026355743408
    4. '=' → logprob: -3.814026355743408
    5. '//' → logprob: -5.439026355743408
    6. ' /=' → logprob: -9.314026832580566
    7. ' ' → logprob: -9.439026832580566
    8. ' >>=' → logprob: -10.314026832580566
    9. '```' → logprob: -10.814026832580566
    10. ')' → logprob: -11.689026832580566

Token 24: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.20206885039806366
    2. 'H' → logprob: -1.70206880569458
    3. ' (' → logprob: -7.57706880569458
    4. '(' → logprob: -9.827069282531738
    5. ' ' → logprob: -10.327069282531738
    6. '(H' → logprob: -10.327069282531738
    7. '   ' → logprob: -12.202069282531738
    8. '	H' → logprob: -12.702069282531738
    9. 'int' → logprob: -12.952069282531738
    10. '//' → logprob: -13.139569282531738

Token 25: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.6326549053192139
    2. '//' → logprob: -0.7576549053192139
    3. '/' → logprob: -10.257655143737793
    4. ' ' → logprob: -12.257655143737793
    5. '```' → logprob: -12.507655143737793
    6. ' /' → logprob: -13.132655143737793
    7. '#' → logprob: -13.257655143737793
    8. '...' → logprob: -13.507655143737793
    9. '>>' → logprob: -13.507655143737793
    10. ' ' → logprob: -13.632655143737793

Token 26: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0683535037969705e-05
    2. ' ' → logprob: -11.62501049041748
    3. '3' → logprob: -13.50001049041748
    4. '10' → logprob: -16.500011444091797
    5. '```' → logprob: -16.875011444091797
    6. '２' → logprob: -17.375011444091797
    7. '   ' → logprob: -19.000011444091797
    8. '1' → logprob: -19.125011444091797
    9. '  ' → logprob: -19.250011444091797
    10. '5' → logprob: -19.750011444091797

Token 27: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. '3' → logprob: -14.000000953674316
    3. ' ' → logprob: -14.750000953674316
    4. '```' → logprob: -16.875001907348633
    5. '２' → logprob: -17.625001907348633
    6. '10' → logprob: -18.000001907348633
    7. '   ' → logprob: -19.000001907348633
    8. '  ' → logprob: -19.500001907348633
    9. '``' → logprob: -19.875001907348633
    10. '02' → logprob: -20.500001907348633

Token 28: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18421484529972076
    2. '
' → logprob: -2.0592148303985596
    3. '    
' → logprob: -3.5592148303985596
    4. '```' → logprob: -5.684215068817139
    5. '   
' → logprob: -5.809215068817139
    6. '  
' → logprob: -6.309215068817139
    7. ' 
' → logprob: -7.184215068817139
    8. '\n' → logprob: -7.184215068817139
    9. '``' → logprob: -8.05921459197998
    10. '+' → logprob: -8.05921459197998

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02503022365272045
    2. '    
' → logprob: -4.150030136108398
    3. 'cnt' → logprob: -5.775030136108398
    4. '```' → logprob: -6.150030136108398
    5. '+' → logprob: -6.775030136108398
    6. '
' → logprob: -7.525030136108398
    7. '``' → logprob: -7.775030136108398
    8. '\n' → logprob: -8.400030136108398
    9. '   
' → logprob: -8.400030136108398
    10. ' +' → logprob: -8.900030136108398

Token 30: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.5575602650642395
    2. 'total' → logprob: -1.6825602054595947
    3. ' total' → logprob: -2.0575602054595947
    4. ' cnt' → logprob: -2.3075602054595947
    5. '   ' → logprob: -4.307560443878174
    6. '```' → logprob: -7.932560443878174
    7. '``' → logprob: -8.807559967041016
    8. '	cnt' → logprob: -9.432559967041016
    9. '    ' → logprob: -9.682559967041016
    10. ' ' → logprob: -10.182559967041016

Token 31: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.007417082320898771
    2. '+=' → logprob: -5.00741720199585
    3. '+' → logprob: -7.63241720199585
    4. ' +' → logprob: -9.132416725158691
    5. ' ' → logprob: -10.132416725158691
    6. ' =' → logprob: -10.257416725158691
    7. '=' → logprob: -10.757416725158691
    8. '<|end|>' → logprob: -11.757416725158691
    9. '```' → logprob: -14.007416725158691
    10. '++' → logprob: -14.132416725158691

Token 32: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.002831864869222045
    2. 'cnt' → logprob: -5.877831935882568
    3. '(cnt' → logprob: -11.37783145904541
    4. '+' → logprob: -11.62783145904541
    5. '	cnt' → logprob: -12.50283145904541
    6. ' ' → logprob: -13.62783145904541
    7. ' +' → logprob: -13.75283145904541
    8. '[cnt' → logprob: -14.75283145904541
    9. '    ' → logprob: -16.002832412719727
    10. '0' → logprob: -16.127832412719727

Token 33: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023246292024850845
    2. ' +' → logprob: -3.7732462882995605
    3. ' plus' → logprob: -14.648246765136719
    4. '＋' → logprob: -15.648246765136719
    5. ' ' → logprob: -16.39824676513672
    6. '1' → logprob: -16.39824676513672
    7. 'plus' → logprob: -17.77324676513672
    8. '+
' → logprob: -17.89824676513672
    9. '++' → logprob: -18.27324676513672
    10. '<|end|>' → logprob: -18.64824676513672

Token 34: ' total' (ID: 3609)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.022701987996697426
    2. ' ' → logprob: -3.8977019786834717
    3. 'total' → logprob: -6.772702217102051
    4. ' total' → logprob: -6.897702217102051
    5. '2' → logprob: -13.14770221710205
    6. '(total' → logprob: -14.52270221710205
    7. '  ' → logprob: -16.397701263427734
    8. '32' → logprob: -16.397701263427734
    9. '	total' → logprob: -16.522701263427734
    10. '   ' → logprob: -16.522701263427734

Token 35: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5495723485946655
    2. ' *' → logprob: -1.1745723485946655
    3. '   ' → logprob: -3.174572467803955
    4. ' ' → logprob: -3.674572467803955
    5. '    ' → logprob: -3.674572467803955
    6. '2' → logprob: -4.049572467803955
    7. '+' → logprob: -6.924572467803955
    8. '  ' → logprob: -7.424572467803955
    9. '1' → logprob: -7.549572467803955
    10. '```' → logprob: -8.049571990966797

Token 36: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4420475363731384
    2. 'total' → logprob: -1.3170475959777832
    3. ' total' → logprob: -2.442047595977783
    4. '```' → logprob: -6.567047595977783
    5. '``' → logprob: -8.442047119140625
    6. ' ' → logprob: -8.567047119140625
    7. '    
' → logprob: -8.567047119140625
    8. '+' → logprob: -9.942047119140625
    9. ' +' → logprob: -10.067047119140625
    10. '    ' → logprob: -10.192047119140625

Token 37: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.41985005140304565
    2. ' total' → logprob: -1.2948501110076904
    3. '2' → logprob: -3.0448501110076904
    4. '   ' → logprob: -4.044849872589111
    5. ' ' → logprob: -5.794849872589111
    6. '```' → logprob: -8.54485034942627
    7. '+' → logprob: -9.54485034942627
    8. '    ' → logprob: -9.66985034942627
    9. '1' → logprob: -9.79485034942627
    10. '*' → logprob: -9.79485034942627

Token 38: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5205958485603333
    2. '*=' → logprob: -1.1455957889556885
    3. ' =' → logprob: -2.8955957889556885
    4. ' *=' → logprob: -3.5205957889556885
    5. '*' → logprob: -5.895596027374268
    6. ' <<=' → logprob: -9.64559555053711
    7. ' ' → logprob: -10.02059555053711
    8. '2' → logprob: -10.14559555053711
    9. ' ' → logprob: -11.27059555053711
    10. '```' → logprob: -11.64559555053711

Token 39: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.7097116112709045
    2. 'total' → logprob: -0.7097116112709045
    3. '2' → logprob: -4.70971155166626
    4. 'cnt' → logprob: -5.45971155166626
    5. ' cnt' → logprob: -6.08471155166626
    6. ' ' → logprob: -7.45971155166626
    7. '*' → logprob: -9.334712028503418
    8. '   ' → logprob: -9.834712028503418
    9. ' ' → logprob: -10.709712028503418
    10. '3' → logprob: -10.959712028503418

Token 40: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -2.057743949990254e-05
    2. ' *' → logprob: -11.375020980834961
    3. '2' → logprob: -11.875020980834961
    4. '**' → logprob: -14.250020980834961
    5. ' ' → logprob: -14.750020980834961
    6. '*
' → logprob: -15.000020980834961
    7. '`' → logprob: -15.750020980834961
    8. '+' → logprob: -16.00002098083496
    9. '```' → logprob: -16.00002098083496
    10. '"' → logprob: -16.62502098083496

Token 41: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00034809779026545584
    2. '3' → logprob: -8.750348091125488
    3. ' ' → logprob: -8.750348091125488
    4. '4' → logprob: -11.000348091125488
    5. '   ' → logprob: -11.750348091125488
    6. '  ' → logprob: -13.000348091125488
    7. '10' → logprob: -14.000348091125488
    8. '    ' → logprob: -14.375348091125488
    9. '```' → logprob: -14.500348091125488
    10. ' ' → logprob: -15.125348091125488

Token 42: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003018826013430953
    2. '3' → logprob: -5.878018856048584
    3. '4' → logprob: -8.628018379211426
    4. ' ' → logprob: -11.378018379211426
    5. '5' → logprob: -11.753018379211426
    6. '10' → logprob: -12.628018379211426
    7. '8' → logprob: -13.128018379211426
    8. '   ' → logprob: -13.253018379211426
    9. '6' → logprob: -13.628018379211426
    10. '7' → logprob: -14.003018379211426

Token 43: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9680584669113159
    2. '
' → logprob: -1.343058466911316
    3. '<|end|>' → logprob: -1.593058466911316
    4. '\n' → logprob: -2.8430585861206055
    5. ')' → logprob: -3.0930585861206055
    6. '+' → logprob: -4.4680585861206055
    7. '   ' → logprob: -4.7180585861206055
    8. ' ' → logprob: -5.2180585861206055
    9. '```' → logprob: -5.3430585861206055
    10. '#' → logprob: -5.4680585861206055

Token 44: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3321968615055084
    2. '<|end|>' → logprob: -1.832196831703186
    3. '\n' → logprob: -3.3321969509124756
    4. ')' → logprob: -3.9571969509124756
    5. '+' → logprob: -4.3321967124938965
    6. '   ' → logprob: -4.4571967124938965
    7. '#' → logprob: -4.5821967124938965
    8. ' ' → logprob: -4.8321967124938965
    9. '
' → logprob: -4.9571967124938965
    10. '```' → logprob: -5.0821967124938965

Token 45: '(cnt' (ID: 102125)
  Prédit: '(cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cnt' → logprob: -0.16038650274276733
    2. '(' → logprob: -1.910386562347412
    3. '()' → logprob: -9.160386085510254
    4. '('' → logprob: -11.535386085510254
    5. '(total' → logprob: -11.535386085510254
    6. '(count' → logprob: -11.660386085510254
    7. '((' → logprob: -12.285386085510254
    8. '(len' → logprob: -12.660386085510254
    9. '(sum' → logprob: -12.785386085510254
    10. '("' → logprob: -12.910386085510254

Token 46: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. '+' → logprob: -14.875000953674316
    3. '))' → logprob: -15.125000953674316
    4. ' )' → logprob: -15.375000953674316
    5. ')
' → logprob: -17.250001907348633
    6. ')`' → logprob: -17.250001907348633
    7. '')' → logprob: -17.875001907348633
    8. '`)' → logprob: -18.125001907348633
    9. ')}' → logprob: -18.875001907348633
    10. '#' → logprob: -19.000001907348633

Token 47: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.06091368570923805
    2. ' total' → logprob: -3.1859138011932373
    3. 'H' → logprob: -4.185913562774658
    4. '1' → logprob: -6.435913562774658
    5. ' H' → logprob: -7.060913562774658
    6. ' ' → logprob: -9.810914039611816
    7. '(total' → logprob: -11.185914039611816
    8. '   ' → logprob: -12.935914039611816
    9. 'Total' → logprob: -13.060914039611816
    10. 'tot' → logprob: -13.310914039611816

Token 48: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. '))' → logprob: -14.250001907348633
    3. ' )' → logprob: -14.375001907348633
    4. ')`' → logprob: -15.000001907348633
    5. ')
' → logprob: -15.375001907348633
    6. '`)' → logprob: -16.125001907348633
    7. '+' → logprob: -16.375001907348633
    8. '#' → logprob: -16.875001907348633
    9. '')' → logprob: -17.625001907348633
    10. '）' → logprob: -17.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 46
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 21
Tokens correctement prédits (top 10): 40
Précision stricte (1ère position): 41.30%
Précision adaptée (1ère position): 45.65%
Précision (top 10): 86.96%
================================================================================
