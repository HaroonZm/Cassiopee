================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:54
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_count = int(input())
input_values_list = list(map(int, input().split()))

output_values_list = [input_values_list[0]]
for index in range(input_count - 2):
    output_values_list.append(min(input_values_list[index], input_values_list[index + 1]))
output_values_list.append(input_values_list[-1])

print(sum(output_values_list))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_count' (ID: 7536)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25987550616264343
    2. '0' → logprob: -1.5098755359649658
    3. '1' → logprob: -6.009875297546387
    4. ' len' → logprob: -6.259875297546387
    5. ' int' → logprob: -6.384875297546387
    6. ' input' → logprob: -7.509875297546387
    7. 'input' → logprob: -8.259875297546387
    8. '4' → logprob: -8.259875297546387
    9. 'int' → logprob: -8.759875297546387
    10. '"' → logprob: -9.009875297546387

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00030733743915334344
    2. '```' → logprob: -9.375307083129883
    3. '()' → logprob: -9.875307083129883
    4. '('' → logprob: -10.125307083129883
    5. ''' → logprob: -10.250307083129883
    6. '(input' → logprob: -10.875307083129883
    7. '[' → logprob: -11.250307083129883
    8. '("("' → logprob: -11.500307083129883
    9. '`' → logprob: -11.625307083129883
    10. ' (' → logprob: -11.875307083129883

Token 5: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04423190653324127
    2. ')' → logprob: -3.91923189163208
    3. '()' → logprob: -3.91923189163208
    4. '())' → logprob: -5.79423189163208
    5. '('' → logprob: -9.294232368469238
    6. '(
' → logprob: -9.544232368469238
    7. '(()' → logprob: -9.919232368469238
    8. '(""))' → logprob: -9.919232368469238
    9. '```' → logprob: -10.044232368469238
    10. '("("' → logprob: -10.294232368469238

Token 6: 'input' (ID: 2586)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0326802730560303
    2. 'for' → logprob: -1.4076802730560303
    3. '\n' → logprob: -2.1576802730560303
    4. '+' → logprob: -2.5326802730560303
    5. '```' → logprob: -3.2826802730560303
    6. '*' → logprob: -3.4076802730560303
    7. ')' → logprob: -3.6576802730560303
    8. ' if' → logprob: -3.7826802730560303
    9. ' for' → logprob: -4.282680511474609
    10. '>' → logprob: -4.282680511474609

Token 7: '_values' (ID: 20393)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2054617702960968
    2. '(' → logprob: -1.9554617404937744
    3. '_' → logprob: -3.4554617404937744
    4. '_count' → logprob: -5.2054619789123535
    5. '```' → logprob: -6.8304619789123535
    6. '_counts' → logprob: -6.9554619789123535
    7. '_data' → logprob: -7.0804619789123535
    8. '_parent' → logprob: -7.3304619789123535
    9. '('' → logprob: -7.3304619789123535
    10. '().' → logprob: -7.7054619789123535

Token 8: '_list' (ID: 4162)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4764513075351715
    2. '.' → logprob: -1.1014512777328491
    3. '[]' → logprob: -4.226451396942139
    4. ')' → logprob: -4.351451396942139
    5. '```' → logprob: -5.101451396942139
    6. '[:]' → logprob: -5.851451396942139
    7. '()' → logprob: -6.101451396942139
    8. '.append' → logprob: -6.101451396942139
    9. '[input' → logprob: -6.851451396942139
    10. '_' → logprob: -7.351451396942139

Token 9: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1274673491716385
    2. '.append' → logprob: -2.627467393875122
    3. '.' → logprob: -3.252467393875122
    4. '[input' → logprob: -5.627467155456543
    5. '.setdefault' → logprob: -6.377467155456543
    6. '[:]' → logprob: -6.877467155456543
    7. '[]' → logprob: -7.627467155456543
    8. '.extend' → logprob: -8.252467155456543
    9. '```' → logprob: -8.502467155456543
    10. '[count' → logprob: -8.752467155456543

Token 10: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.0254789050668478
    2. '[]' → logprob: -3.7754788398742676
    3. ' [' → logprob: -7.525478839874268
    4. '[' → logprob: -7.650478839874268
    5. ' ' → logprob: -8.025479316711426
    6. 'list' → logprob: -8.400479316711426
    7. '[input' → logprob: -8.400479316711426
    8. ' list' → logprob: -8.525479316711426
    9. 'input' → logprob: -8.650479316711426
    10. ' input' → logprob: -10.025479316711426

Token 11: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020820152014493942
    2. '(input' → logprob: -3.895820140838623
    3. '(int' → logprob: -9.020820617675781
    4. '(range' → logprob: -9.895820617675781
    5. '(
' → logprob: -10.895820617675781
    6. '()' → logprob: -11.395820617675781
    7. '(eval' → logprob: -11.770820617675781
    8. '(user' → logprob: -11.895820617675781
    9. '(filter' → logprob: -12.270820617675781
    10. '(convert' → logprob: -12.395820617675781

Token 12: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10757018625736237
    2. '(' → logprob: -2.607570171356201
    3. '(input' → logprob: -3.732570171356201
    4. '(lambda' → logprob: -5.607570171356201
    5. '(str' → logprob: -7.732570171356201
    6. 'int' → logprob: -8.98257064819336
    7. '(eval' → logprob: -10.48257064819336
    8. ')' → logprob: -10.60757064819336
    9. '(
' → logprob: -11.10757064819336
    10. 'input' → logprob: -11.35757064819336

Token 13: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0032671953085809946
    2. ',input' → logprob: -6.003267288208008
    3. '(' → logprob: -7.878267288208008
    4. ',' → logprob: -8.503267288208008
    5. '))' → logprob: -9.128267288208008
    6. 'input' → logprob: -10.128267288208008
    7. ' (' → logprob: -11.128267288208008
    8. '=input' → logprob: -11.253267288208008
    9. '`' → logprob: -12.003267288208008
    10. ')' → logprob: -12.128267288208008

Token 14: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47412094473838806
    2. ' input' → logprob: -0.9741209745407104
    3. '(input' → logprob: -10.09912109375
    4. ',input' → logprob: -13.47412109375
    5. '<input' → logprob: -15.34912109375
    6. '	input' → logprob: -15.34912109375
    7. '=input' → logprob: -15.34912109375
    8. 'range' → logprob: -16.09912109375
    9. ' ' → logprob: -16.09912109375
    10. ' (' → logprob: -16.22412109375

Token 15: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6826227307319641
    2. '()))' → logprob: -0.8076227307319641
    3. '())' → logprob: -3.5576226711273193
    4. '(' → logprob: -4.807622909545898
    5. '(input' → logprob: -5.057622909545898
    6. '().' → logprob: -5.807622909545898
    7. '())))' → logprob: -6.557622909545898
    8. '()));' → logprob: -7.307622909545898
    9. '))' → logprob: -8.557622909545898
    10. '()`' → logprob: -9.182622909545898

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002655079588294029
    2. 'strip' → logprob: -8.250265121459961
    3. ' split' → logprob: -13.500265121459961
    4. 'rstrip' → logprob: -13.500265121459961
    5. ')' → logprob: -13.875265121459961
    6. '(split' → logprob: -14.875265121459961
    7. 'spl' → logprob: -16.87526512145996
    8. 'read' → logprob: -18.50026512145996
    9. 'startswith' → logprob: -18.50026512145996
    10. '_split' → logprob: -18.50026512145996

Token 17: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.06866620481014252
    2. '))' → logprob: -3.4436662197113037
    3. '())' → logprob: -4.068665981292725
    4. '()' → logprob: -4.318665981292725
    5. '(' → logprob: -5.943665981292725
    6. ')' → logprob: -6.693665981292725
    7. '())))' → logprob: -10.068666458129883
    8. '('' → logprob: -10.943666458129883
    9. ''))' → logprob: -11.193666458129883
    10. '()));' → logprob: -11.318666458129883

Token 18: 'output' (ID: 6130)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3817928731441498
    2. 'total' → logprob: -2.1317927837371826
    3. 'sum' → logprob: -2.7567927837371826
    4. 'result' → logprob: -3.1317927837371826
    5. ')' → logprob: -3.8817927837371826
    6. 's' → logprob: -4.131793022155762
    7. 'if' → logprob: -4.256793022155762
    8. 'output' → logprob: -4.756793022155762
    9. 'max' → logprob: -4.881793022155762
    10. '#' → logprob: -5.506793022155762

Token 19: '_values' (ID: 20393)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4138742983341217
    2. '.' → logprob: -1.7888742685317993
    3. '[' → logprob: -2.413874387741089
    4. '(' → logprob: -3.288874387741089
    5. '_' → logprob: -4.16387414932251
    6. '```' → logprob: -5.41387414932251
    7. 'for' → logprob: -5.66387414932251
    8. '()' → logprob: -5.91387414932251
    9. 's' → logprob: -6.16387414932251
    10. '=' → logprob: -6.16387414932251

Token 20: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34262463450431824
    2. ' =' → logprob: -1.5926246643066406
    3. '=' → logprob: -2.8426246643066406
    4. '.' → logprob: -4.967624664306641
    5. ')' → logprob: -5.092624664306641
    6. '[' → logprob: -5.467624664306641
    7. '.append' → logprob: -5.592624664306641
    8. '<|end|>' → logprob: -6.467624664306641
    9. '[:]' → logprob: -6.592624664306641
    10. '(' → logprob: -7.217624664306641

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34958863258361816
    2. '.' → logprob: -1.8495886325836182
    3. '=' → logprob: -2.724588632583618
    4. '.append' → logprob: -3.099588632583618
    5. '[' → logprob: -4.849588394165039
    6. '[:]' → logprob: -4.849588394165039
    7. '<|end|>' → logprob: -5.599588394165039
    8. ')' → logprob: -6.474588394165039
    9. '(' → logprob: -6.724588394165039
    10. '_' → logprob: -6.974588394165039

Token 22: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5757033824920654
    2. '[]' → logprob: -1.7007033824920654
    3. 'input' → logprob: -2.0757033824920654
    4. '[input' → logprob: -3.2007033824920654
    5. ' [' → logprob: -3.4507033824920654
    6. ' input' → logprob: -3.5757033824920654
    7. '[' → logprob: -4.4507036209106445
    8. 'list' → logprob: -4.5757036209106445
    9. ' list' → logprob: -5.0757036209106445
    10. '[list' → logprob: -7.8257036209106445

Token 23: 'input' (ID: 2586)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3358982503414154
    2. 'input' → logprob: -1.4608982801437378
    3. ' input' → logprob: -4.085898399353027
    4. ' x' → logprob: -4.210898399353027
    5. '0' → logprob: -4.460898399353027
    6. 'i' → logprob: -5.335898399353027
    7. 'int' → logprob: -6.210898399353027
    8. 'value' → logprob: -6.460898399353027
    9. 'val' → logprob: -7.335898399353027
    10. 'v' → logprob: -7.585898399353027

Token 24: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.020315643399953842
    2. '_count' → logprob: -4.145315647125244
    3. '_' → logprob: -5.520315647125244
    4. '_value' → logprob: -9.270315170288086
    5. '_counts' → logprob: -9.770315170288086
    6. '_vals' → logprob: -10.395315170288086
    7. '_val' → logprob: -10.520315170288086
    8. ')' → logprob: -11.520315170288086
    9. '_)' → logprob: -11.645315170288086
    10. '(' → logprob: -12.020315170288086

Token 25: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0008353583980351686
    2. '_count' → logprob: -7.250835418701172
    3. '[' → logprob: -10.500835418701172
    4. '[i' → logprob: -10.750835418701172
    5. '[_' → logprob: -10.750835418701172
    6. '[count' → logprob: -10.750835418701172
    7. ')_' → logprob: -11.875835418701172
    8. '_' → logprob: -12.375835418701172
    9. '```' → logprob: -12.500835418701172
    10. ')' → logprob: -12.500835418701172

Token 26: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4678325057029724
    2. '[i' → logprob: -1.4678325653076172
    3. '[:' → logprob: -2.342832565307617
    4. ')]' → logprob: -3.592832565307617
    5. ')' → logprob: -4.967832565307617
    6. '.count' → logprob: -5.592832565307617
    7. '[:]' → logprob: -6.342832565307617
    8. '.index' → logprob: -6.467832565307617
    9. '[index' → logprob: -6.967832565307617
    10. ']' → logprob: -6.967832565307617

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20500531792640686
    2. 'i' → logprob: -1.7050052881240845
    3. ' ' → logprob: -6.455005168914795
    4. '-' → logprob: -6.830005168914795
    5. ' i' → logprob: -7.330005168914795
    6. ']' → logprob: -9.705005645751953
    7. ')' → logprob: -10.080005645751953
    8. 'x' → logprob: -10.330005645751953
    9. '-i' → logprob: -11.080005645751953
    10. '_' → logprob: -11.455005645751953

Token 28: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1717352569103241
    2. ' ]' → logprob: -2.4217352867126465
    3. ' +' → logprob: -3.5467352867126465
    4. '+' → logprob: -3.9217352867126465
    5. ')]' → logprob: -4.2967352867126465
    6. ']]' → logprob: -6.1717352867126465
    7. ']+' → logprob: -6.9217352867126465
    8. ' ]]' → logprob: -6.9217352867126465
    9. ')' → logprob: -7.6717352867126465
    10. ',' → logprob: -8.046734809875488

Token 29: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8135534524917603
    2. '+' → logprob: -1.0635534524917603
    3. ' for' → logprob: -1.8135534524917603
    4. '_' → logprob: -3.3135533332824707
    5. ')' → logprob: -5.438553333282471
    6. ' ' → logprob: -6.438553333282471
    7. '.' → logprob: -6.813553333282471
    8. ',' → logprob: -7.063553333282471
    9. '*' → logprob: -7.188553333282471
    10. '-' → logprob: -7.438553333282471

Token 30: ' index' (ID: 3472)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41496509313583374
    2. ' i' → logprob: -1.1649651527404785
    3. ' _' → logprob: -3.6649651527404785
    4. '_' → logprob: -6.2899651527404785
    5. '  ' → logprob: -8.78996467590332
    6. ' index' → logprob: -10.41496467590332
    7. 'i' → logprob: -10.78996467590332
    8. ' input' → logprob: -11.53996467590332
    9. ' item' → logprob: -11.78996467590332
    10. ' value' → logprob: -12.16496467590332

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009352389723062515
    2. 'in' → logprob: -4.759352207183838
    3. ' ' → logprob: -7.259352207183838
    4. '  ' → logprob: -11.884352684020996
    5. '	in' → logprob: -11.884352684020996
    6. ',' → logprob: -12.259352684020996
    7. '+' → logprob: -12.634352684020996
    8. ')' → logprob: -13.259352684020996
    9. '```' → logprob: -13.384352684020996
    10. ' ,' → logprob: -13.509352684020996

Token 32: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008623674511909485
    2. 'range' → logprob: -4.7586236000061035
    3. ' ' → logprob: -11.883624076843262
    4. ' in' → logprob: -13.883624076843262
    5. '	range' → logprob: -14.008624076843262
    6. '(range' → logprob: -15.633624076843262
    7. '1' → logprob: -16.008623123168945
    8. '_range' → logprob: -16.508623123168945
    9. ' xrange' → logprob: -16.508623123168945
    10. ' input' → logprob: -16.883623123168945

Token 33: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1472419600977446e-06
    2. '(len' → logprob: -13.875000953674316
    3. ' (' → logprob: -16.125001907348633
    4. '(
' → logprob: -17.625001907348633
    5. '1' → logprob: -20.000001907348633
    6. '(

' → logprob: -20.000001907348633
    7. '(input' → logprob: -20.750001907348633
    8. 'len' → logprob: -20.875001907348633
    9. '((' → logprob: -21.125001907348633
    10. '(i' → logprob: -22.000001907348633

Token 34: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0111002866178751
    2. '_' → logprob: -4.5111002922058105
    3. '_counts' → logprob: -11.261099815368652
    4. ' ' → logprob: -11.511099815368652
    5. ')' → logprob: -12.136099815368652
    6. '_)' → logprob: -12.386099815368652
    7. '(' → logprob: -12.511099815368652
    8. '```' → logprob: -12.761099815368652
    9. '1' → logprob: -13.011099815368652
    10. ' _' → logprob: -13.261099815368652

Token 35: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.15321940183639526
    2. ' -' → logprob: -3.02821946144104
    3. '-' → logprob: -3.40321946144104
    4. ')' → logprob: -4.153219223022461
    5. ' ):' → logprob: -4.653219223022461
    6. '):
' → logprob: -5.028219223022461
    7. '+' → logprob: -5.153219223022461
    8. '1' → logprob: -5.153219223022461
    9. '>' → logprob: -5.278219223022461
    10. ' ' → logprob: -5.278219223022461

Token 36: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004624272231012583
    2. ' ' → logprob: -5.379624366760254
    3. '2' → logprob: -12.504624366760254
    4. '```' → logprob: -16.129623413085938
    5. '   ' → logprob: -16.879623413085938
    6. '0' → logprob: -16.879623413085938
    7. '<|end|>' → logprob: -17.442123413085938
    8. '...' → logprob: -17.567123413085938
    9. ',' → logprob: -17.567123413085938
    10. '+' → logprob: -17.942123413085938

Token 37: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017994173686020076
    2. ' ' → logprob: -8.6251802444458
    3. '2' → logprob: -14.7501802444458
    4. '   ' → logprob: -17.500179290771484
    5. '```' → logprob: -18.000179290771484
    6. '0' → logprob: -18.375179290771484
    7. '3' → logprob: -18.750179290771484
    8. '  ' → logprob: -18.875179290771484
    9. '۱' → logprob: -19.062679290771484
    10. '4' → logprob: -19.437679290771484

Token 38: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6070099472999573
    2. '+' → logprob: -1.6070098876953125
    3. ',' → logprob: -2.4820098876953125
    4. ' ):' → logprob: -2.4820098876953125
    5. ' +' → logprob: -3.2320098876953125
    6. ')' → logprob: -3.9820098876953125
    7. '):
' → logprob: -4.2320098876953125
    8. ' ,' → logprob: -4.7320098876953125
    9. ' )' → logprob: -5.6070098876953125
    10. ' ):
' → logprob: -7.1070098876953125

Token 39: '   ' (ID: 271)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.27967843413352966
    2. '     
' → logprob: -2.2796783447265625
    3. ' ' → logprob: -2.4046783447265625
    4. '+' → logprob: -3.7796783447265625
    5. '```' → logprob: -5.2796783447265625
    6. '   ' → logprob: -5.4046783447265625
    7. ' 
' → logprob: -6.0296783447265625
    8. ' ,' → logprob: -6.0296783447265625
    9. '    
' → logprob: -6.0296783447265625
    10. ' +' → logprob: -6.2796783447265625

Token 40: ' output' (ID: 4733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7645544409751892
    2. '    ' → logprob: -0.8895544409751892
    3. '     
' → logprob: -2.639554500579834
    4. 'output' (adapté à ' output') → logprob: -4.389554500579834
    5. ' output' → logprob: -4.389554500579834
    6. '   ' → logprob: -4.639554500579834
    7. ' 
' → logprob: -5.889554500579834
    8. ' ,' → logprob: -6.139554500579834
    9. '    
' → logprob: -6.264554500579834
    10. ' ```' → logprob: -6.514554500579834

Token 41: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.0005333751323632896
    2. '_' → logprob: -8.250533103942871
    3. '_vals' → logprob: -9.000533103942871
    4. '_value' → logprob: -9.250533103942871
    5. '_val' → logprob: -10.500533103942871
    6. ' _' → logprob: -12.000533103942871
    7. '__' → logprob: -12.750533103942871
    8. ')_' → logprob: -12.750533103942871
    9. '_items' → logprob: -13.000533103942871
    10. '_VALUES' → logprob: -13.000533103942871

Token 42: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.04949438199400902
    2. '_values' → logprob: -3.0494942665100098
    3. '.append' → logprob: -8.049494743347168
    4. '_value' → logprob: -8.549494743347168
    5. '_' → logprob: -9.174494743347168
    6. ' _' → logprob: -9.674494743347168
    7. '```' → logprob: -10.299494743347168
    8. '_val' → logprob: -10.549494743347168
    9. '_vals' → logprob: -10.674494743347168
    10. '__' → logprob: -10.799494743347168

Token 43: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.07039608061313629
    2. '.' → logprob: -2.6953961849212646
    3. '.extend' → logprob: -8.320396423339844
    4. ' .' → logprob: -9.570396423339844
    5. '.app' → logprob: -9.945396423339844
    6. '.add' → logprob: -10.320396423339844
    7. '[' → logprob: -10.820396423339844
    8. '.ap' → logprob: -10.820396423339844
    9. '+' → logprob: -11.445396423339844
    10. ' +=' → logprob: -12.195396423339844

Token 44: '(min' (ID: 26035)
  Prédit: '(output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.3892710208892822
    2. '(' → logprob: -1.1392710208892822
    3. '((' → logprob: -6.639270782470703
    4. '(input' → logprob: -7.014270782470703
    5. '(
' → logprob: -9.264270782470703
    6. 'output' → logprob: -10.514270782470703
    7. '(max' → logprob: -11.139270782470703
    8. '(sum' → logprob: -11.389270782470703
    9. '(int' → logprob: -11.514270782470703
    10. '('' → logprob: -11.764270782470703

Token 45: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22072254121303558
    2. '(input' → logprob: -1.8457225561141968
    3. '(output' → logprob: -3.4707224369049072
    4. '(
' → logprob: -4.720722675323486
    5. '(

' → logprob: -9.595722198486328
    6. '((' → logprob: -10.845722198486328
    7. '([' → logprob: -10.970722198486328
    8. ' (' → logprob: -11.970722198486328
    9. '(_,' → logprob: -12.595722198486328
    10. '(i' → logprob: -12.970722198486328

Token 46: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.1637164789135568e-05
    2. '_value' → logprob: -12.125011444091797
    3. '_' → logprob: -12.875011444091797
    4. ')_' → logprob: -13.375011444091797
    5. '_vals' → logprob: -14.625011444091797
    6. '_val' → logprob: -14.875011444091797
    7. '```' → logprob: -15.500011444091797
    8. '_VALUES' → logprob: -15.625011444091797
    9. 'values' → logprob: -16.375011444091797
    10. '_counts' → logprob: -16.500011444091797

Token 47: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.02126290276646614
    2. '_values' → logprob: -3.8962628841400146
    3. 'ist' → logprob: -7.521263122558594
    4. 'st' → logprob: -9.021263122558594
    5. '_' → logprob: -10.646263122558594
    6. 's' → logprob: -11.896263122558594
    7. 'values' → logprob: -12.396263122558594
    8. 'alue' → logprob: -12.896263122558594
    9. 'List' → logprob: -13.021263122558594
    10. '[' → logprob: -13.146263122558594

Token 48: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.0020723482593894005
    2. '[' → logprob: -6.252072334289551
    3. '[
' → logprob: -9.87707233428955
    4. ' [' → logprob: -10.50207233428955
    5. '[i' → logprob: -11.00207233428955
    6. '[ind' → logprob: -11.37707233428955
    7. '[in' → logprob: -11.75207233428955
    8. '[input' → logprob: -12.00207233428955
    9. 'index' → logprob: -12.50207233428955
    10. '   ' → logprob: -12.62707233428955

Token 49: '],' (ID: 2155)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5295005440711975
    2. '+' → logprob: -1.1545004844665527
    3. '],' → logprob: -2.4045004844665527
    4. '   ' → logprob: -5.904500484466553
    5. ']' → logprob: -6.279500484466553
    6. ' ],' → logprob: -7.654500484466553
    7. ' ' → logprob: -8.279500961303711
    8. ':' → logprob: -10.029500961303711
    9. '  ' → logprob: -10.404500961303711
    10. ']+' → logprob: -10.529500961303711

Token 50: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.005338943563401699
    2. 'input' → logprob: -5.7553391456604
    3. ' output' → logprob: -6.2553391456604
    4. ' ' → logprob: -8.630338668823242
    5. 'output' → logprob: -11.255338668823242
    6. '   ' → logprob: -11.505338668823242
    7. ' 
' → logprob: -11.755338668823242
    8. '    ' → logprob: -11.755338668823242
    9. ' ' → logprob: -12.130338668823242
    10. '	input' → logprob: -12.880338668823242

Token 51: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -3.440506407059729e-05
    2. '_' → logprob: -10.62503433227539
    3. ' _' → logprob: -12.87503433227539
    4. '+' → logprob: -13.62503433227539
    5. '_VALUES' → logprob: -14.00003433227539
    6. '_
' → logprob: -14.12503433227539
    7. '_value' → logprob: -14.25003433227539
    8. '_vals' → logprob: -14.37503433227539
    9. ']_' → logprob: -14.62503433227539
    10. '[_' → logprob: -14.87503433227539

Token 52: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.2522042691707611
    2. '_values' → logprob: -1.5022042989730835
    3. 'values' → logprob: -8.627203941345215
    4. 'ist' → logprob: -10.502203941345215
    5. 'list' → logprob: -10.502203941345215
    6. 'List' → logprob: -11.877203941345215
    7. 's' → logprob: -11.877203941345215
    8. '_' → logprob: -12.002203941345215
    9. 'Values' → logprob: -12.502203941345215
    10. 'st' → logprob: -12.502203941345215

Token 53: '[index' (ID: 11815)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8587517142295837
    2. '[index' → logprob: -0.8587517142295837
    3. ' +' → logprob: -2.2337517738342285
    4. ' index' → logprob: -3.7337517738342285
    5. 'index' → logprob: -4.2337517738342285
    6. '   ' → logprob: -5.4837517738342285
    7. ' ' → logprob: -6.6087517738342285
    8. '    ' → logprob: -7.7337517738342285
    9. '[' → logprob: -7.8587517738342285
    10. '	index' → logprob: -8.60875129699707

Token 54: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.05510173738002777
    2. ' +' → logprob: -2.9301016330718994
    3. '   ' → logprob: -9.18010139465332
    4. ' ' → logprob: -9.80510139465332
    5. '+
' → logprob: -10.18010139465332
    6. '1' → logprob: -12.18010139465332
    7. '  ' → logprob: -12.18010139465332
    8. ' +
' → logprob: -12.43010139465332
    9. '2' → logprob: -12.80510139465332
    10. '    ' → logprob: -13.30510139465332

Token 55: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03533797338604927
    2. '1' → logprob: -3.4103379249572754
    3. ' ' → logprob: -6.410337924957275
    4. '3' → logprob: -10.160338401794434
    5. '   ' → logprob: -12.410338401794434
    6. '  ' → logprob: -13.285338401794434
    7. '0' → logprob: -14.285338401794434
    8. '```' → logprob: -15.535338401794434
    9. '    ' → logprob: -15.722838401794434
    10. '
' → logprob: -16.097837448120117

Token 56: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1803949922323227
    2. '1' → logprob: -1.8053950071334839
    3. ' ' → logprob: -7.430395126342773
    4. '3' → logprob: -9.930395126342773
    5. '   ' → logprob: -12.867895126342773
    6. '  ' → logprob: -13.180395126342773
    7. '0' → logprob: -13.555395126342773
    8. '```' → logprob: -14.742895126342773
    9. '4' → logprob: -15.242895126342773
    10. '    ' → logprob: -15.742895126342773

Token 57: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.39079925417900085
    2. '))' → logprob: -1.5157992839813232
    3. ')' → logprob: -3.0157992839813232
    4. '+' → logprob: -3.8907992839813232
    5. ')))' → logprob: -4.140799045562744
    6. ']' → logprob: -5.015799045562744
    7. '])' → logprob: -5.765799045562744
    8. '),' → logprob: -5.890799045562744
    9. ' +' → logprob: -6.640799045562744
    10. ' ))' → logprob: -7.140799045562744

Token 58: 'output' (ID: 6130)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4098440408706665
    2. '+' → logprob: -1.2848440408706665
    3. ']' → logprob: -3.159843921661377
    4. 'output' → logprob: -5.034843921661377
    5. '  
' → logprob: -5.909843921661377
    6. ' ' → logprob: -6.784843921661377
    7. '+
' → logprob: -6.909843921661377
    8. '```' → logprob: -7.034843921661377
    9. ')
' → logprob: -7.284843921661377
    10. '<|end|>' → logprob: -7.409843921661377

Token 59: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.005281188525259495
    2. '_' → logprob: -5.7552809715271
    3. '_s' → logprob: -7.1302809715271
    4. '_outputs' → logprob: -8.630281448364258
    5. '_vals' → logprob: -8.630281448364258
    6. '_put' → logprob: -8.755281448364258
    7. ')_' → logprob: -9.005281448364258
    8. '```' → logprob: -9.380281448364258
    9. 's' → logprob: -9.755281448364258
    10. '_results' → logprob: -10.255281448364258

Token 60: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0022244835272431374
    2. '_values' → logprob: -7.127224445343018
    3. '_lists' → logprob: -7.252224445343018
    4. '_' → logprob: -8.002224922180176
    5. '_ls' → logprob: -9.002224922180176
    6. '_lst' → logprob: -9.127224922180176
    7. '_s' → logprob: -10.127224922180176
    8. '_l' → logprob: -10.377224922180176
    9. '_lista' → logprob: -11.502224922180176
    10. ' _' → logprob: -11.752224922180176

Token 61: '.append' (ID: 3709)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1033523678779602
    2. '+' → logprob: -3.2283523082733154
    3. '[-' → logprob: -3.2283523082733154
    4. '.' → logprob: -4.6033525466918945
    5. '[index' → logprob: -5.2283525466918945
    6. ')' → logprob: -6.6033525466918945
    7. '.append' → logprob: -7.3533525466918945
    8. ']' → logprob: -7.6033525466918945
    9. ' +' → logprob: -8.603352546691895
    10. '[len' → logprob: -9.228352546691895

Token 62: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0052619799971580505
    2. '(' → logprob: -5.2552618980407715
    3. '(output' → logprob: -10.63026237487793
    4. '(
' → logprob: -13.50526237487793
    5. '(in' → logprob: -14.00526237487793
    6. ' (' → logprob: -14.38026237487793
    7. 'input' → logprob: -14.75526237487793
    8. '(int' → logprob: -15.00526237487793
    9. '((' → logprob: -15.50526237487793
    10. '(min' → logprob: -15.63026237487793

Token 63: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -4.246537173457909e-06
    2. '_' → logprob: -13.125003814697266
    3. '_value' → logprob: -13.375003814697266
    4. '_count' → logprob: -14.875003814697266
    5. ')_' → logprob: -16.500003814697266
    6. '_val' → logprob: -17.125003814697266
    7. 'values' → logprob: -17.375003814697266
    8. '```' → logprob: -17.500003814697266
    9. '_vals' → logprob: -17.500003814697266
    10. ' _' → logprob: -17.625003814697266

Token 64: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00865002628415823
    2. '_values' → logprob: -4.758649826049805
    3. 'ist' → logprob: -10.383649826049805
    4. '_' → logprob: -13.258649826049805
    5. 'values' → logprob: -14.633649826049805
    6. 'list' → logprob: -14.883649826049805
    7. 'List' → logprob: -14.883649826049805
    8. '_count' → logprob: -15.133649826049805
    9. '_lists' → logprob: -15.133649826049805
    10. 'st' → logprob: -15.383649826049805

Token 65: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.0325924449716695e-05
    2. '[' → logprob: -11.50001049041748
    3. '[len' → logprob: -16.625009536743164
    4. '[input' → logprob: -17.250009536743164
    5. '-' → logprob: -18.375009536743164
    6. '[
' → logprob: -18.500009536743164
    7. ' [-' → logprob: -19.375009536743164
    8. ')' → logprob: -20.375009536743164
    9. '[index' → logprob: -20.750009536743164
    10. '][-' → logprob: -20.875009536743164

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2471589798224159e-05
    2. ' ' → logprob: -11.500012397766113
    3. '2' → logprob: -14.000012397766113
    4. ')' → logprob: -15.312512397766113
    5. '0' → logprob: -15.312512397766113
    6. '])' → logprob: -15.500012397766113
    7. '１' → logprob: -16.25001335144043
    8. '  ' → logprob: -16.25001335144043
    9. '```' → logprob: -16.37501335144043
    10. ']' → logprob: -16.68751335144043

Token 67: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007318547577597201
    2. '])' → logprob: -7.250731945037842
    3. ']' → logprob: -11.250731468200684
    4. '))' → logprob: -12.500731468200684
    5. ')])' → logprob: -13.125731468200684
    6. ')
' → logprob: -14.125731468200684
    7. '）' → logprob: -14.250731468200684
    8. ')]' → logprob: -14.250731468200684
    9. '`)' → logprob: -15.000731468200684
    10. ' )' → logprob: -15.250731468200684

Token 68: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.606721043586731
    2. '<|end|>' → logprob: -1.356721043586731
    3. '[' → logprob: -2.2317209243774414
    4. ']' → logprob: -3.1067209243774414
    5. ' ' → logprob: -3.9817209243774414
    6. '```' → logprob: -4.106720924377441
    7. '
' → logprob: -5.856720924377441
    8. '#' → logprob: -6.606720924377441
    9. '<|end|>' → logprob: -6.606720924377441
    10. ' 
' → logprob: -7.731720924377441

Token 69: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0016931501450017095
    2. '(output' → logprob: -6.751693248748779
    3. '("("' → logprob: -7.751693248748779
    4. '('' → logprob: -9.501692771911621
    5. '()' → logprob: -12.501692771911621
    6. '(
' → logprob: -12.626692771911621
    7. '(len' → logprob: -12.876692771911621
    8. '(.' → logprob: -13.501692771911621
    9. '(

' → logprob: -13.751692771911621
    10. '((' → logprob: -13.876692771911621

Token 70: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.16023530066013336
    2. '(' → logprob: -1.9102352857589722
    3. '()' → logprob: -11.785235404968262
    4. '(
' → logprob: -13.660235404968262
    5. ')' → logprob: -14.160235404968262
    6. '(input' → logprob: -14.910235404968262
    7. '(

' → logprob: -14.910235404968262
    8. '(outputs' → logprob: -15.035235404968262
    9. 'output' → logprob: -15.910235404968262
    10. '(out' → logprob: -16.410234451293945

Token 71: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -4.394135612528771e-05
    2. '_' → logprob: -10.250043869018555
    3. '_value' → logprob: -12.375043869018555
    4. '_val' → logprob: -13.125043869018555
    5. ')_' → logprob: -14.125043869018555
    6. '_vals' → logprob: -15.000043869018555
    7. '_output' → logprob: -15.000043869018555
    8. ')' → logprob: -15.250043869018555
    9. '_v' → logprob: -15.375043869018555
    10. 'values' → logprob: -15.500043869018555

Token 72: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.176947600673884e-05
    2. '_l' → logprob: -11.625021934509277
    3. '_' → logprob: -11.875021934509277
    4. '_values' → logprob: -12.750021934509277
    5. 'list' → logprob: -14.125021934509277
    6. ')_' → logprob: -14.750021934509277
    7. 'ist' → logprob: -14.750021934509277
    8. '_lists' → logprob: -15.000021934509277
    9. ' _' → logprob: -15.125021934509277
    10. '_lst' → logprob: -15.250021934509277

Token 73: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6931527256965637
    2. '))' → logprob: -0.6931527256965637
    3. ')))' → logprob: -12.56815242767334
    4. ')
' → logprob: -14.44315242767334
    5. ' )' → logprob: -14.81815242767334
    6. '))
' → logprob: -14.81815242767334
    7. '])' → logprob: -15.19315242767334
    8. '())' → logprob: -15.56815242767334
    9. ' ))' → logprob: -15.94315242767334
    10. ')`' → logprob: -16.818153381347656


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 71
Tokens correctement prédits (1ère position, stricte): 30
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 56
Précision stricte (1ère position): 42.25%
Précision adaptée (1ère position): 42.25%
Précision (top 10): 78.87%
================================================================================
