================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def calculate_total_gain(n, v, c):
    """
    Calcule le gain total en additionnant la différence 'v[i] - c[i]' pour chaque 'i' où v[i] > c[i].

    Args:
        n (int): Le nombre d'éléments dans les listes v et c.
        v (list of int): Liste des valeurs v.
        c (list of int): Liste des valeurs c.

    Returns:
        int: Le gain total cumulé pour tous les indices où v[i] > c[i].
    """
    # Initialiser la variable qui stockera la somme totale
    ans = 0
    # Parcourir toutes les positions de 0 à n-1
    for i in range(n):
        # Vérifier si la valeur v[i] est supérieure à la valeur c[i]
        if v[i] > c[i]:
            # Ajouter la différence à la somme totale
            ans += v[i] - c[i]
    # Retourner le gain total calculé
    return ans


if __name__ == "__main__":
    # Lire le nombre d'éléments de la séquence
    n = int(input())
    # Lire la liste des valeurs v, séparées par des espaces et converties en entiers
    v = list(map(int, input().split()))
    # Lire la liste des valeurs c, séparées par des espaces et converties en entiers
    c = list(map(int, input().split()))
    # Calculer le gain total à l'aide de la fonction dédiée
    result = calculate_total_gain(n, v, c)
    # Afficher le résultat final
    print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' calculate' (ID: 17950)
  → Token d'amorce (pas de prédiction)

Token 2: '_total' (ID: 23814)
  → Token d'amorce (pas de prédiction)

Token 3: '_gain' (ID: 99774)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.32057079672813416
    2. '_' → logprob: -1.6955708265304565
    3. '_total' → logprob: -2.445570707321167
    4. '(total' → logprob: -7.070570945739746
    5. '```' → logprob: -7.070570945739746
    6. '(_' → logprob: -7.195570945739746
    7. '_token' → logprob: -8.070570945739746
    8. '(_:' → logprob: -8.445570945739746
    9. '_parent' → logprob: -8.820570945739746
    10. '_Total' → logprob: -9.195570945739746

Token 4: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0030865666922181845
    2. '_' → logprob: -5.878086566925049
    3. '```' → logprob: -9.62808609008789
    4. '(_' → logprob: -10.00308609008789
    5. ' (' → logprob: -10.37808609008789
    6. '(_:' → logprob: -10.62808609008789
    7. '():' → logprob: -10.87808609008789
    8. ':' → logprob: -11.25308609008789
    9. '(:' → logprob: -11.25308609008789
    10. '(**' → logprob: -12.12808609008789

Token 5: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02693374827504158
    2. ')' → logprob: -3.7769336700439453
    3. ',' → logprob: -6.026933670043945
    4. '_' → logprob: -7.526933670043945
    5. ':' → logprob: -8.026933670043945
    6. 's' → logprob: -8.776933670043945
    7. '):
' → logprob: -9.776933670043945
    8. 'a' → logprob: -11.151933670043945
    9. 'e' → logprob: -11.401933670043945
    10. '_t' → logprob: -11.526933670043945

Token 6: ' v' (ID: 323)
  Prédit: ' initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' initial' → logprob: -0.8147401809692383
    2. ' price' → logprob: -1.8147401809692383
    3. ' current' → logprob: -2.6897401809692383
    4. ' amount' → logprob: -3.0647401809692383
    5. ' prices' → logprob: -3.0647401809692383
    6. ' gain' → logprob: -3.1897401809692383
    7. ' investment' → logprob: -3.4397401809692383
    8. ' x' → logprob: -3.4397401809692383
    9. ' items' → logprob: -4.439740180969238
    10. ' shares' → logprob: -4.439740180969238

Token 7: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.013134228065609932
    2. ')' → logprob: -5.013134002685547
    3. ',' → logprob: -5.263134002685547
    4. 's' → logprob: -7.013134002685547
    5. '[' → logprob: -9.013134002685547
    6. '):
' → logprob: -9.638134002685547
    7. '_' → logprob: -10.638134002685547
    8. ':' → logprob: -10.638134002685547
    9. '=' → logprob: -11.263134002685547
    10. 'e' → logprob: -11.888134002685547

Token 8: ' c' (ID: 274)
  Prédit: ' prices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prices' → logprob: -1.2818257808685303
    2. ' items' → logprob: -1.5318257808685303
    3. ' w' → logprob: -1.9068257808685303
    4. ' p' → logprob: -2.1568257808685303
    5. ' a' → logprob: -3.6568257808685303
    6. ' d' → logprob: -4.031826019287109
    7. ' values' → logprob: -4.281826019287109
    8. ' l' → logprob: -4.281826019287109
    9. ' k' → logprob: -4.406826019287109
    10. ' s' → logprob: -4.406826019287109

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007008521351963282
    2. ')' → logprob: -5.1320085525512695
    3. '):
' → logprob: -7.3820085525512695
    4. '```' → logprob: -8.38200855255127
    5. '_' → logprob: -9.13200855255127
    6. 's' → logprob: -10.38200855255127
    7. ',' → logprob: -11.13200855255127
    8. ':' → logprob: -11.38200855255127
    9. '):
' → logprob: -11.50700855255127
    10. ''):' → logprob: -11.63200855255127

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.024850117042660713
    2. '   ' → logprob: -3.8998501300811768
    3. '```' → logprob: -5.899849891662598
    4. ' :' → logprob: -8.399849891662598
    5. ':
' → logprob: -8.399849891662598
    6. '':' → logprob: -8.524849891662598
    7. '":' → logprob: -8.649849891662598
    8. '`:' → logprob: -8.899849891662598
    9. '):' → logprob: -9.149849891662598
    10. '    ' → logprob: -9.899849891662598

Token 11: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6224472522735596
    2. '```' → logprob: -1.9974472522735596
    3. ' ' → logprob: -2.4974472522735596
    4. '\' → logprob: -2.8724472522735596
    5. '    ' → logprob: -3.2474472522735596
    6. ''' → logprob: -3.4974472522735596
    7. ' 
' → logprob: -3.7474472522735596
    8. '       ' → logprob: -3.7474472522735596
    9. '    
' → logprob: -4.1224470138549805
    10. '`' → logprob: -4.3724470138549805

Token 12: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2099231630563736
    2. '"""' → logprob: -2.959923267364502
    3. ' """' → logprob: -3.709923267364502
    4. ')' → logprob: -3.959923267364502
    5. 'r' → logprob: -3.959923267364502
    6. ' )' → logprob: -4.209923267364502
    7. ''' → logprob: -4.459923267364502
    8. '   ' → logprob: -4.459923267364502
    9. 'd' → logprob: -4.709923267364502
    10. ''''' → logprob: -5.459923267364502

Token 13: ' Cal' (ID: 4453)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7587212920188904
    2. 'Calculate' → logprob: -0.7587212920188904
    3. 'Calcul' → logprob: -3.758721351623535
    4. ''''' → logprob: -4.633721351623535
    5. 'Returns' → logprob: -5.133721351623535
    6. '   ' → logprob: -5.133721351623535
    7. 'Total' → logprob: -5.383721351623535
    8. ' """' → logprob: -5.758721351623535
    9. ' Calculates' → logprob: -5.883721351623535
    10. ' Calculate' → logprob: -5.883721351623535

Token 14: 'cule' (ID: 45017)
  Prédit: 'culate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'culate' → logprob: -0.06950449198484421
    2. 'cul' → logprob: -2.944504499435425
    3. 'c' → logprob: -4.694504261016846
    4. 'l' → logprob: -6.319504261016846
    5. 'cu' → logprob: -6.319504261016846
    6. 'cula' → logprob: -6.819504261016846
    7. 'culated' → logprob: -8.319504737854004
    8. '   ' → logprob: -8.944504737854004
    9. 'culation' → logprob: -9.569504737854004
    10. '```' → logprob: -9.944504737854004

Token 15: ' le' (ID: 505)
  Prédit: 'te'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.5980620980262756
    2. 'r' → logprob: -0.9730620980262756
    3. 't' → logprob: -3.473062038421631
    4. 's' → logprob: -3.848062038421631
    5. 'rate' → logprob: -4.598062038421631
    6. 'tes' → logprob: -5.723062038421631
    7. 'late' → logprob: -6.098062038421631
    8. 'ate' → logprob: -6.848062038421631
    9. 'l' → logprob: -7.973062038421631
    10. '   ' → logprob: -7.973062038421631

Token 16: ' gain' (ID: 11621)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.2533617913722992
    2. 's' → logprob: -2.503361701965332
    3. ' montant' → logprob: -2.628361701965332
    4. ' gain' → logprob: -3.753361701965332
    5. ' nombre' → logprob: -4.253361701965332
    6. '   ' → logprob: -5.003361701965332
    7. ' rendement' → logprob: -5.003361701965332
    8. ' ' → logprob: -5.753361701965332
    9. ' bénéf' → logprob: -6.128361701965332
    10. ' coût' → logprob: -6.128361701965332

Token 17: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.8695802688598633
    2. '_total' → logprob: -1.1195802688598633
    3. '_' → logprob: -1.4945802688598633
    4. 's' → logprob: -4.994580268859863
    5. ' ' → logprob: -5.244580268859863
    6. 'total' → logprob: -5.244580268859863
    7. ' totale' → logprob: -5.619580268859863
    8. ' _' → logprob: -6.244580268859863
    9. '   ' → logprob: -6.869580268859863
    10. ' de' → logprob: -6.994580268859863

Token 18: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.207242727279663
    2. '_' → logprob: -1.582242727279663
    3. '```' → logprob: -2.332242727279663
    4. ''' → logprob: -2.582242727279663
    5. '`' → logprob: -2.707242727279663
    6. '   ' → logprob: -2.957242727279663
    7. 's' → logprob: -2.957242727279663
    8. ' de' → logprob: -3.332242727279663
    9. '"' → logprob: -3.707242727279663
    10. ')' → logprob: -4.207242965698242

Token 19: ' addition' (ID: 5856)
  Prédit: ' fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fonction' → logprob: -0.5137647390365601
    2. 'fonction' → logprob: -1.51376473903656
    3. '   ' → logprob: -3.6387648582458496
    4. 's' → logprob: -4.63876485824585
    5. ' utilisant' → logprob: -4.70126485824585
    6. '```' → logprob: -4.88876485824585
    7. ' ' → logprob: -4.95126485824585
    8. 'f' → logprob: -5.13876485824585
    9. 't' → logprob: -5.20126485824585
    10. 'points' → logprob: -5.51376485824585

Token 20: 'nant' (ID: 48648)
  Prédit: 'nant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nant' → logprob: -0.07191473245620728
    2. 'n' → logprob: -2.8219146728515625
    3. 'ant' → logprob: -4.9469146728515625
    4. 's' → logprob: -6.9469146728515625
    5. 't' → logprob: -7.4469146728515625
    6. 'a' → logprob: -7.8219146728515625
    7. 'd' → logprob: -8.696914672851562
    8. '   ' → logprob: -8.696914672851562
    9. 'nt' → logprob: -9.196914672851562
    10. '```' → logprob: -9.696914672851562

Token 21: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.9068405032157898
    2. '   ' → logprob: -1.2818405628204346
    3. ' des' → logprob: -2.6568405628204346
    4. 's' → logprob: -2.9068405628204346
    5. ' le' → logprob: -3.0318405628204346
    6. ' la' → logprob: -3.0318405628204346
    7. ' ' → logprob: -4.2818403244018555
    8. ' chaque' → logprob: -4.2818403244018555
    9. ' l' → logprob: -4.4068403244018555
    10. '_' → logprob: -4.5318403244018555

Token 22: ' différence' (ID: 79196)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04425768181681633
    2. ' somme' → logprob: -4.169257640838623
    3. ' valeur' → logprob: -4.544257640838623
    4. ' s' → logprob: -5.294257640838623
    5. '   ' → logprob: -6.294257640838623
    6. ' total' → logprob: -6.669257640838623
    7. ' montant' → logprob: -7.044257640838623
    8. ' ' → logprob: -7.294257640838623
    9. ' gain' → logprob: -7.419257640838623
    10. ' c' → logprob: -7.419257640838623

Token 23: ' '' (ID: 461)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.3247789144515991
    2. 'entre' → logprob: -2.4497790336608887
    3. ' between' → logprob: -2.8247790336608887
    4. 's' → logprob: -2.9497790336608887
    5. ' ' → logprob: -3.0747790336608887
    6. '_' → logprob: -4.824779033660889
    7. '```' → logprob: -5.074779033660889
    8. '`' → logprob: -5.699779033660889
    9. ''entre' → logprob: -5.949779033660889
    10. ''' → logprob: -6.074779033660889

Token 24: 'v' (ID: 85)
  Prédit: ' entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -0.3210311233997345
    2. ' between' → logprob: -1.696031093597412
    3. ' v' → logprob: -3.696031093597412
    4. ' ' → logprob: -3.696031093597412
    5. 'entre' → logprob: -3.946031093597412
    6. 'v' → logprob: -4.821031093597412
    7. 'between' → logprob: -5.696031093597412
    8. '   ' → logprob: -6.321031093597412
    9. ')' → logprob: -6.696031093597412
    10. '(' → logprob: -6.821031093597412

Token 25: '[i' (ID: 1768)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14098326861858368
    2. '[i' → logprob: -3.5159833431243896
    3. '-' → logprob: -3.7659833431243896
    4. ' ' → logprob: -4.0159831047058105
    5. '[' → logprob: -4.3909831047058105
    6. 's' → logprob: -4.6409831047058105
    7. '_' → logprob: -4.8909831047058105
    8. ''' → logprob: -5.0159831047058105
    9. '   ' → logprob: -6.0159831047058105
    10. ' entre' → logprob: -6.0159831047058105

Token 26: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.36700794100761414
    2. ''' → logprob: -2.2420079708099365
    3. '[i' → logprob: -2.9920079708099365
    4. ']'' → logprob: -3.2420079708099365
    5. ' -' → logprob: -3.4920079708099365
    6. '[' → logprob: -3.8670079708099365
    7. 's' → logprob: -3.8670079708099365
    8. '-' → logprob: -3.9920079708099365
    9. '']' → logprob: -4.742007732391357
    10. ' '' → logprob: -5.867007732391357

Token 27: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2585029602050781
    2. '[i' → logprob: -2.008502960205078
    3. '-' → logprob: -2.633502960205078
    4. '[' → logprob: -4.383502960205078
    5. ' ' → logprob: -5.758502960205078
    6. '   ' → logprob: -6.508502960205078
    7. ' between' → logprob: -7.383502960205078
    8. 's' → logprob: -7.383502960205078
    9. '```' → logprob: -7.383502960205078
    10. ''' → logprob: -8.008502960205078

Token 28: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.18004277348518372
    2. 'c' → logprob: -1.8050427436828613
    3. ' n' → logprob: -9.68004322052002
    4. 'n' → logprob: -10.43004322052002
    5. ' (' → logprob: -10.55504322052002
    6. '1' → logprob: -10.68004322052002
    7. ' ' → logprob: -10.80504322052002
    8. '	c' → logprob: -10.80504322052002
    9. ''' → logprob: -11.11754322052002
    10. ' ' → logprob: -11.30504322052002

Token 29: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10094812512397766
    2. ''' → logprob: -2.6009480953216553
    3. '[' → logprob: -4.600948333740234
    4. '```' → logprob: -5.725948333740234
    5. ' [' → logprob: -6.475948333740234
    6. ''[' → logprob: -6.725948333740234
    7. ' '' → logprob: -6.850948333740234
    8. 's' → logprob: -7.475948333740234
    9. '['' → logprob: -7.850948333740234
    10. '[j' → logprob: -8.100948333740234

Token 30: ']'' (ID: 75642)
  Prédit: ']''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']'' → logprob: -0.008701793849468231
    2. ''' → logprob: -5.633701801300049
    3. ']' → logprob: -5.758701801300049
    4. ')'' → logprob: -7.133701801300049
    5. '[i' → logprob: -7.508701801300049
    6. '']' → logprob: -7.883701801300049
    7. '])' → logprob: -9.88370132446289
    8. ']',' → logprob: -10.25870132446289
    9. '```' → logprob: -10.75870132446289
    10. '[]' → logprob: -11.00870132446289

Token 31: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6957973837852478
    2. ' for' → logprob: -0.9457973837852478
    3. 'for' → logprob: -3.1957974433898926
    4. ')' → logprob: -4.070797443389893
    5. ' pour' → logprob: -4.320797443389893
    6. '[i' → logprob: -4.320797443389893
    7. ']' → logprob: -5.570797443389893
    8. '[' → logprob: -5.820797443389893
    9. ' entre' → logprob: -5.945797443389893
    10. 's' → logprob: -6.070797443389893

Token 32: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.012882886454463005
    2. 'i' → logprob: -4.387882709503174
    3. ' chaque' → logprob: -8.387883186340332
    4. ' ' → logprob: -9.637883186340332
    5. ' each' → logprob: -10.012883186340332
    6. '```' → logprob: -11.012883186340332
    7. '   ' → logprob: -12.262883186340332
    8. ' every' → logprob: -12.887883186340332
    9. '	i' → logprob: -13.262883186340332
    10. ' ' → logprob: -13.387883186340332

Token 33: ' '' (ID: 461)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16630928218364716
    2. ' élément' → logprob: -2.291309356689453
    3. 'i' → logprob: -3.666309356689453
    4. ' ' → logprob: -5.041309356689453
    5. ' element' → logprob: -5.291309356689453
    6. 'élé' → logprob: -5.666309356689453
    7. ')' → logprob: -6.666309356689453
    8. ' indice' → logprob: -6.791309356689453
    9. '```' → logprob: -6.791309356689453
    10. ' index' → logprob: -6.916309356689453

Token 34: 'i' (ID: 72)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3510666489601135
    2. 'i' → logprob: -1.2260665893554688
    3. 'indice' → logprob: -7.476066589355469
    4. ' ' → logprob: -7.601066589355469
    5. ' élément' → logprob: -7.601066589355469
    6. 'élé' → logprob: -8.476066589355469
    7. ')' → logprob: -8.851066589355469
    8. ' indice' → logprob: -9.101066589355469
    9. 'n' → logprob: -9.226066589355469
    10. ' index' → logprob: -9.476066589355469

Token 35: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05747588351368904
    2. ']' → logprob: -3.9324758052825928
    3. ' )' → logprob: -4.432476043701172
    4. '):' → logprob: -4.682476043701172
    5. '   ' → logprob: -5.557476043701172
    6. '```' → logprob: -5.932476043701172
    7. ',' → logprob: -6.057476043701172
    8. '')' → logprob: -6.682476043701172
    9. '`)' → logprob: -7.557476043701172
    10. ' ' → logprob: -7.557476043701172

Token 36: ' où' (ID: 15113)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3100791573524475
    2. ':' → logprob: -1.4350790977478027
    3. ' :' → logprob: -5.060079097747803
    4. '):' → logprob: -5.560079097747803
    5. '.' → logprob: -5.810079097747803
    6. ',' → logprob: -5.810079097747803
    7. ' ' → logprob: -5.935079097747803
    8. ':
' → logprob: -6.185079097747803
    9. '```' → logprob: -6.310079097747803
    10. '  ' → logprob: -7.060079097747803

Token 37: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.2943657338619232
    2. 'v' → logprob: -1.4193657636642456
    3. ' i' → logprob: -5.669365882873535
    4. 'i' → logprob: -5.794365882873535
    5. 'n' → logprob: -6.669365882873535
    6. '```' → logprob: -6.669365882873535
    7. ' n' → logprob: -7.169365882873535
    8. ' ' → logprob: -7.419365882873535
    9. ' `' → logprob: -7.669365882873535
    10. ' (' → logprob: -7.794365882873535

Token 38: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08028177171945572
    2. '[' → logprob: -2.5802817344665527
    3. '>' → logprob: -7.080281734466553
    4. ' >' → logprob: -8.580282211303711
    5. 'i' → logprob: -9.830282211303711
    6. '[]' → logprob: -10.205282211303711
    7. '```' → logprob: -10.330282211303711
    8. '[
' → logprob: -10.455282211303711
    9. ']' → logprob: -11.080282211303711
    10. ',' → logprob: -11.455282211303711

Token 39: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7633005380630493
    2. '>' → logprob: -1.3883005380630493
    3. ' >' → logprob: -1.5133005380630493
    4. '[i' → logprob: -3.3883004188537598
    5. '[' → logprob: -3.8883004188537598
    6. '']' → logprob: -5.88830041885376
    7. ']>' → logprob: -6.26330041885376
    8. ''' → logprob: -6.88830041885376
    9. ' ]' → logprob: -6.88830041885376
    10. '```' → logprob: -7.38830041885376

Token 40: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.31812477111816406
    2. ' >' → logprob: -1.318124771118164
    3. '[' → logprob: -5.693124771118164
    4. '[i' → logprob: -7.193124771118164
    5. ' ' → logprob: -9.193124771118164
    6. '">' → logprob: -9.568124771118164
    7. ']' → logprob: -9.568124771118164
    8. '```' → logprob: -9.568124771118164
    9. '<' → logprob: -9.943124771118164
    10. 's' → logprob: -10.568124771118164

Token 41: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.38701650500297546
    2. 'c' → logprob: -1.1370165348052979
    3. '0' → logprob: -9.887016296386719
    4. ' ' → logprob: -10.512016296386719
    5. '```' → logprob: -10.762016296386719
    6. ' ' → logprob: -11.262016296386719
    7. '	c' → logprob: -11.824516296386719
    8. '<|end|>' → logprob: -12.137016296386719
    9. '_c' → logprob: -12.824516296386719
    10. '  ' → logprob: -13.137016296386719

Token 42: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.20004607737064362
    2. ']' → logprob: -2.3250460624694824
    3. '.' → logprob: -3.0750460624694824
    4. '[' → logprob: -4.950046062469482
    5. ':' → logprob: -5.200046062469482
    6. ')' → logprob: -5.200046062469482
    7. '```' → logprob: -5.325046062469482
    8. '"""' → logprob: -5.575046062469482
    9. 'e' → logprob: -6.200046062469482
    10. '   ' → logprob: -6.200046062469482

Token 43: '].

' (ID: 37441)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17799824476242065
    2. '"' → logprob: -3.3029983043670654
    3. '```' → logprob: -3.3029983043670654
    4. '.' → logprob: -3.8029983043670654
    5. ''' → logprob: -4.302998065948486
    6. ')' → logprob: -4.677998065948486
    7. ']'' → logprob: -5.052998065948486
    8. ':' → logprob: -5.302998065948486
    9. '']' → logprob: -5.302998065948486
    10. ']
' → logprob: -5.552998065948486

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030082877725362778
    2. '```' → logprob: -4.155082702636719
    3. ')' → logprob: -5.655082702636719
    4. '"' → logprob: -5.905082702636719
    5. '\n' → logprob: -6.155082702636719
    6. '"""' → logprob: -6.280082702636719
    7. '"""
' → logprob: -7.030082702636719
    8. ' ' → logprob: -7.155082702636719
    9. '``' → logprob: -8.405082702636719
    10. ' """
' → logprob: -8.530082702636719

Token 45: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019399646669626236
    2. '```' → logprob: -4.519399642944336
    3. '"""
' → logprob: -5.394399642944336
    4. '"""' → logprob: -5.769399642944336
    5. '
' → logprob: -8.269399642944336
    6. '\n' → logprob: -8.769399642944336
    7. '``' → logprob: -9.644399642944336
    8. '    
' → logprob: -9.769399642944336
    9. '""' → logprob: -10.769399642944336
    10. '"' → logprob: -11.019399642944336

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4409427344799042
    2. ',' → logprob: -1.3159427642822266
    3. ' :' → logprob: -3.3159427642822266
    4. '   ' → logprob: -3.8159427642822266
    5. '):' → logprob: -4.190942764282227
    6. '```' → logprob: -5.190942764282227
    7. '[' → logprob: -5.565942764282227
    8. ')' → logprob: -5.940942764282227
    9. ' ,' → logprob: -6.940942764282227
    10. ',
' → logprob: -8.315942764282227

Token 47: '       ' (ID: 309)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17124128341674805
    2. '   ' → logprob: -2.421241283416748
    3. ' n' → logprob: -2.921241283416748
    4. '```' → logprob: -4.796241283416748
    5. '    ' → logprob: -5.921241283416748
    6. ')' → logprob: -6.171241283416748
    7. ' )' → logprob: -7.546241283416748
    8. 'v' → logprob: -7.921241283416748
    9. ' ```' → logprob: -8.671241760253906
    10. ' `' → logprob: -8.796241760253906

Token 48: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.009564357809722424
    2. '   ' → logprob: -4.884564399719238
    3. ' n' → logprob: -6.384564399719238
    4. '```' → logprob: -8.634564399719238
    5. '
' → logprob: -10.259564399719238
    6. 'v' → logprob: -10.759564399719238
    7. '	n' → logprob: -11.509564399719238
    8. '       ' → logprob: -11.634564399719238
    9. 'list' → logprob: -12.884564399719238
    10. '`' → logprob: -12.884564399719238

Token 49: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09514130651950836
    2. ':' → logprob: -2.8451414108276367
    3. '):' → logprob: -3.7201414108276367
    4. ':int' → logprob: -5.970141410827637
    5. ' ,' → logprob: -6.220141410827637
    6. ')' → logprob: -6.720141410827637
    7. '<|end|>' → logprob: -7.220141410827637
    8. ' :' → logprob: -7.720141410827637
    9. 'int' → logprob: -7.720141410827637
    10. '[int' → logprob: -8.220141410827637

Token 50: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.012111066840589046
    2. ' int' → logprob: -4.512111186981201
    3. ',' → logprob: -7.137111186981201
    4. ',int' → logprob: -9.387110710144043
    5. ':int' → logprob: -9.762110710144043
    6. '=int' → logprob: -10.012110710144043
    7. ')' → logprob: -10.637110710144043
    8. '   ' → logprob: -11.012110710144043
    9. '[int' → logprob: -11.012110710144043
    10. 'n' → logprob: -11.637110710144043

Token 51: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0709274634718895
    2. '):' → logprob: -2.695927381515503
    3. '<|end|>' → logprob: -7.320927619934082
    4. ',' → logprob: -8.945927619934082
    5. '<|end|>' → logprob: -9.820927619934082
    6. '),' → logprob: -9.820927619934082
    7. '):
' → logprob: -10.820927619934082
    8. ')n' → logprob: -11.195927619934082
    9. '   ' → logprob: -11.320927619934082
    10. '```' → logprob: -11.820927619934082

Token 52: ' Le' (ID: 2018)
  Prédit: ' Le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Le' → logprob: -0.15134106576442719
    2. ' The' → logprob: -3.526340961456299
    3. ' La' → logprob: -3.526340961456299
    4. ' le' → logprob: -3.901340961456299
    5. ' Nombre' → logprob: -4.151340961456299
    6. ' nombre' → logprob: -4.401340961456299
    7. ' Number' → logprob: -4.651340961456299
    8. ' number' → logprob: -5.526340961456299
    9. 'Le' → logprob: -5.651340961456299
    10. ' la' → logprob: -5.901340961456299

Token 53: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.033816393464803696
    2. 'nombre' → logprob: -3.408816337585449
    3. ' nombres' → logprob: -9.53381633758545
    4. ' number' → logprob: -9.90881633758545
    5. 'n' → logprob: -10.78381633758545
    6. ' n' → logprob: -11.28381633758545
    7. ' ' → logprob: -11.78381633758545
    8. ' nomb' → logprob: -13.03381633758545
    9. 'number' → logprob: -13.65881633758545
    10. '_nombre' → logprob: -14.03381633758545

Token 54: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3521727919578552
    2. ' ' → logprob: -1.8521728515625
    3. ' total' → logprob: -2.4771728515625
    4. ' de' → logprob: -3.3521728515625
    5. 'total' → logprob: -5.2271728515625
    6. '  ' → logprob: -5.7271728515625
    7. '_total' → logprob: -5.9771728515625
    8. 'd' → logprob: -6.1021728515625
    9. '_' → logprob: -6.2271728515625
    10. '<|end|>' → logprob: -6.6021728515625

Token 55: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.4774012565612793
    2. ' éléments' → logprob: -1.1024012565612793
    3. ' ' → logprob: -4.227401256561279
    4. ' elements' → logprob: -4.602401256561279
    5. ' items' → logprob: -4.852401256561279
    6. ' articles' → logprob: -5.977401256561279
    7. ' élément' → logprob: -6.477401256561279
    8. ')' → logprob: -6.727401256561279
    9. 'items' → logprob: -6.852401256561279
    10. 'elements' → logprob: -6.977401256561279

Token 56: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0719575509428978
    2. ' éléments' → logprob: -3.571957588195801
    3. 'articles' → logprob: -4.571957588195801
    4. 'obj' → logprob: -4.821957588195801
    5. 'actions' → logprob: -6.134457588195801
    6. ' ' → logprob: -6.134457588195801
    7. 'items' → logprob: -6.321957588195801
    8. 'é' → logprob: -6.384457588195801
    9. ' articles' → logprob: -6.446957588195801
    10. 'elements' → logprob: -6.509457588195801

Token 57: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.0033995520789176226
    2. 'm' → logprob: -5.87839937210083
    3. 'ment' → logprob: -7.50339937210083
    4. 'v' → logprob: -11.503399848937988
    5. 'me' → logprob: -11.753399848937988
    6. '```' → logprob: -12.128399848937988
    7. '   ' → logprob: -12.628399848937988
    8. 'м' → logprob: -13.628399848937988
    9. 'phants' → logprob: -13.753399848937988
    10. 'nts' → logprob: -13.878399848937988

Token 58: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0644645243883133
    2. '   ' → logprob: -3.314464569091797
    3. '```' → logprob: -4.314464569091797
    4. ',' → logprob: -4.939464569091797
    5. '<|end|>' → logprob: -6.189464569091797
    6. '):' → logprob: -7.064464569091797
    7. '<|end|>' → logprob: -7.814464569091797
    8. '.' → logprob: -8.189464569091797
    9. 'n' → logprob: -8.189464569091797
    10. ':' → logprob: -8.439464569091797

Token 59: ' les' (ID: 1341)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.38238656520843506
    2. ' les' → logprob: -1.507386565208435
    3. ' la' → logprob: -2.5073866844177246
    4. 'v' → logprob: -4.757386684417725
    5. 'les' → logprob: -6.132386684417725
    6. ' l' → logprob: -7.007386684417725
    7. ' le' → logprob: -8.007386207580566
    8. '```' → logprob: -8.007386207580566
    9. ' `' → logprob: -8.257386207580566
    10. ' ' → logprob: -8.257386207580566

Token 60: ' listes' (ID: 179198)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.4351259469985962
    2. 'v' → logprob: -1.1851259469985962
    3. ' listes' → logprob: -3.9351258277893066
    4. ' lists' → logprob: -4.310125827789307
    5. 'list' → logprob: -5.810125827789307
    6. ' tableaux' → logprob: -6.060125827789307
    7. ' arrays' → logprob: -6.435125827789307
    8. '_v' → logprob: -6.810125827789307
    9. ' ' → logprob: -6.810125827789307
    10. ' list' → logprob: -6.810125827789307

Token 61: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.16927257180213928
    2. '.' → logprob: -2.4192726612091064
    3. ' v' → logprob: -3.1692726612091064
    4. '   ' → logprob: -4.919272422790527
    5. '```' → logprob: -4.919272422790527
    6. ')' → logprob: -5.794272422790527
    7. ',' → logprob: -6.169272422790527
    8. '
' → logprob: -7.044272422790527
    9. ' de' → logprob: -7.169272422790527
    10. '_v' → logprob: -7.669272422790527

Token 62: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6488069295883179
    2. '   ' → logprob: -1.5238069295883179
    3. ')' → logprob: -2.0238070487976074
    4. ' et' → logprob: -2.8988070487976074
    5. '.' → logprob: -3.6488070487976074
    6. '<|end|>' → logprob: -4.398807048797607
    7. ' and' → logprob: -4.773807048797607
    8. ' ,' → logprob: -4.773807048797607
    9. '```' → logprob: -5.398807048797607
    10. 'v' → logprob: -5.523807048797607

Token 63: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.08906499296426773
    2. 'c' → logprob: -2.4640650749206543
    3. ' ' → logprob: -10.089064598083496
    4. '   ' → logprob: -11.089064598083496
    5. ' ' → logprob: -11.089064598083496
    6. '```' → logprob: -11.339064598083496
    7. '	c' → logprob: -11.839064598083496
    8. ',' → logprob: -12.589064598083496
    9. ' and' → logprob: -12.714064598083496
    10. 's' → logprob: -12.901564598083496

Token 64: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08603451400995255
    2. '   ' → logprob: -2.5860345363616943
    3. '```' → logprob: -5.586034297943115
    4. ',' → logprob: -6.211034297943115
    5. '<|end|>' → logprob: -7.461034297943115
    6. '\n' → logprob: -8.711034774780273
    7. '<|end|>' → logprob: -9.086034774780273
    8. '),' → logprob: -9.211034774780273
    9. ')\' → logprob: -9.586034774780273
    10. '.' → logprob: -10.086034774780273

Token 65: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.052858635783195496
    2. '```' → logprob: -3.677858591079712
    3. '\n' → logprob: -4.552858829498291
    4. ')' → logprob: -4.927858829498291
    5. '
' → logprob: -5.427858829498291
    6. '    
' → logprob: -6.552858829498291
    7. ' ' → logprob: -7.552858829498291
    8. '  
' → logprob: -7.677858829498291
    9. '<|end|>' → logprob: -8.052858352661133
    10. '\' → logprob: -8.052858352661133

Token 66: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.18614289164543152
    2. '   ' → logprob: -1.936142921447754
    3. '```' → logprob: -3.936142921447754
    4. ' v' → logprob: -5.311142921447754
    5. '
' → logprob: -7.936142921447754
    6. '"""' → logprob: -8.686142921447754
    7. '``' → logprob: -8.936142921447754
    8. '       ' → logprob: -9.186142921447754
    9. '"""
' → logprob: -9.561142921447754
    10. '  ' → logprob: -9.936142921447754

Token 67: ' (' (ID: 350)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.7278470396995544
    2. ':' → logprob: -1.2278470993041992
    3. ')' → logprob: -2.602847099304199
    4. '):' → logprob: -2.727847099304199
    5. ' (' → logprob: -3.102847099304199
    6. '[i' → logprob: -4.477847099304199
    7. '   ' → logprob: -4.477847099304199
    8. '```' → logprob: -5.977847099304199
    9. ' ):' → logprob: -5.977847099304199
    10. ' )' → logprob: -6.102847099304199

Token 68: 'list' (ID: 2641)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16199415922164917
    2. '[' → logprob: -2.786994218826294
    3. '[int' → logprob: -3.036994218826294
    4. '[i' → logprob: -3.661994218826294
    5. '   ' → logprob: -5.411993980407715
    6. 'list' → logprob: -5.661993980407715
    7. '[List' → logprob: -6.536993980407715
    8. 'int' → logprob: -6.536993980407715
    9. 'List' → logprob: -7.161993980407715
    10. ',' → logprob: -7.411993980407715

Token 69: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5422849655151367
    2. '[int' → logprob: -0.9172849655151367
    3. '):' → logprob: -4.917284965515137
    4. '<|end|>' → logprob: -5.042284965515137
    5. '[' → logprob: -6.292284965515137
    6. ',' → logprob: -7.167284965515137
    7. ' of' → logprob: -7.292284965515137
    8. '<int' → logprob: -7.667284965515137
    9. '):
' → logprob: -8.292284965515137
    10. '   ' → logprob: -8.542284965515137

Token 70: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.011139428243041039
    2. ' int' → logprob: -4.511139392852783
    3. 'float' → logprob: -10.386139869689941
    4. 'ints' → logprob: -10.511139869689941
    5. ')' → logprob: -11.886139869689941
    6. '[int' → logprob: -12.011139869689941
    7. '<int' → logprob: -12.511139869689941
    8. ' ints' → logprob: -12.511139869689941
    9. ']int' → logprob: -12.511139869689941
    10. '<|end|>' → logprob: -12.761139869689941

Token 71: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05750267207622528
    2. 's' → logprob: -3.0575027465820312
    3. '):' → logprob: -5.057502746582031
    4. '])' → logprob: -7.057502746582031
    5. '[int' → logprob: -7.182502746582031
    6. 'es' → logprob: -8.557502746582031
    7. '<|end|>' → logprob: -9.057502746582031
    8. ' )' → logprob: -9.182502746582031
    9. '[' → logprob: -9.182502746582031
    10. ']):' → logprob: -9.557502746582031

Token 72: ' Liste' (ID: 61030)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12967057526111603
    2. '<|end|>' → logprob: -2.3796706199645996
    3. '[int' → logprob: -4.8796706199646
    4. ' )' → logprob: -5.0046706199646
    5. '   ' → logprob: -6.0046706199646
    6. ' ' → logprob: -6.1296706199646
    7. ' des' → logprob: -6.5046706199646
    8. '<|end|>' → logprob: -7.1296706199646
    9. ' """' → logprob: -7.2546706199646
    10. 's' → logprob: -7.5046706199646

Token 73: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.8177675604820251
    2. '<|end|>' → logprob: -0.8177675604820251
    3. 's' → logprob: -2.94276762008667
    4. '[int' → logprob: -3.81776762008667
    5. 'des' → logprob: -4.44276762008667
    6. ' of' → logprob: -4.56776762008667
    7. '[' → logprob: -5.31776762008667
    8. ' d' → logprob: -5.44276762008667
    9. 'd' → logprob: -5.94276762008667
    10. '<|end|>' → logprob: -6.06776762008667

Token 74: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.06799261271953583
    2. ' gains' → logprob: -3.567992687225342
    3. ' volumes' → logprob: -4.317992687225342
    4. 'val' → logprob: -4.817992687225342
    5. ' values' → logprob: -6.442992687225342
    6. 'values' → logprob: -6.567992687225342
    7. ' revenus' → logprob: -6.692992687225342
    8. ' bénéf' → logprob: -6.817992687225342
    9. ' coûts' → logprob: -6.817992687225342
    10. ' prix' → logprob: -6.942992687225342

Token 75: ' v' (ID: 323)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07677590847015381
    2. '<|end|>' → logprob: -3.4517760276794434
    3. 's' → logprob: -4.451776027679443
    4. '[i' → logprob: -4.701776027679443
    5. ',' → logprob: -5.076776027679443
    6. ']' → logprob: -5.451776027679443
    7. '[' → logprob: -5.826776027679443
    8. '[int' → logprob: -6.576776027679443
    9. '),' → logprob: -6.576776027679443
    10. '   ' → logprob: -6.701776027679443

Token 77: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006701396778225899
    2. ')' → logprob: -5.381701469421387
    3. 'c' → logprob: -6.881701469421387
    4. 's' → logprob: -8.756701469421387
    5. ' c' → logprob: -9.006701469421387
    6. '  ' → logprob: -9.131701469421387
    7. '       ' → logprob: -9.256701469421387
    8. ' )' → logprob: -9.256701469421387
    9. '```' → logprob: -9.256701469421387
    10. '<|end|>' → logprob: -9.506701469421387

Token 78: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.352241575717926
    2. 'c' (adapté à ' c') → logprob: -1.2272415161132812
    3. '   ' → logprob: -5.602241516113281
    4. '       ' → logprob: -10.352241516113281
    5. '```' → logprob: -11.102241516113281
    6. '	c' → logprob: -11.227241516113281
    7. ' ' → logprob: -11.352241516113281
    8. '    ' → logprob: -11.352241516113281
    9. '  ' → logprob: -12.602241516113281
    10. ' list' → logprob: -12.977241516113281

Token 79: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.00017636561824474484
    2. '(list' → logprob: -8.875176429748535
    3. ' ' → logprob: -10.750176429748535
    4. '```' → logprob: -12.750176429748535
    5. '[list' → logprob: -13.000176429748535
    6. '(' → logprob: -13.125176429748535
    7. '[' → logprob: -13.500176429748535
    8. '   ' → logprob: -13.625176429748535
    9. ')' → logprob: -13.625176429748535
    10. '  ' → logprob: -14.375176429748535

Token 80: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1338682919740677
    2. ' list' → logprob: -2.3838682174682617
    3. 'ist' → logprob: -4.383868217468262
    4. ')' → logprob: -4.758868217468262
    5. '[list' → logprob: -5.008868217468262
    6. 'int' → logprob: -6.883868217468262
    7. ':list' → logprob: -7.133868217468262
    8. '(list' → logprob: -7.383868217468262
    9. '[int' → logprob: -7.383868217468262
    10. '=list' → logprob: -7.633868217468262

Token 81: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.006649176124483347
    2. ')' → logprob: -5.381649017333984
    3. '[int' → logprob: -7.756649017333984
    4. 'of' → logprob: -8.006649017333984
    5. ' ' → logprob: -8.256649017333984
    6. '[' → logprob: -8.256649017333984
    7. ' de' → logprob: -8.881649017333984
    8. '   ' → logprob: -9.006649017333984
    9. '<|end|>' → logprob: -9.131649017333984
    10. ' des' → logprob: -9.256649017333984

Token 82: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2014642059803009
    2. ' int' → logprob: -1.7014641761779785
    3. '[int' → logprob: -10.576464653015137
    4. ')' → logprob: -11.201464653015137
    5. ']int' → logprob: -12.326464653015137
    6. '<int' → logprob: -13.076464653015137
    7. '(int' → logprob: -13.576464653015137
    8. ':int' → logprob: -14.326464653015137
    9. '```' → logprob: -14.576464653015137
    10. '=int' → logprob: -14.576464653015137

Token 83: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006228694226592779
    2. ')' → logprob: -5.631228923797607
    3. ']):' → logprob: -6.881228923797607
    4. ''):' → logprob: -7.006228923797607
    5. ']:' → logprob: -8.00622844696045
    6. ':' → logprob: -9.38122844696045
    7. '[]):' → logprob: -9.50622844696045
    8. '[' → logprob: -9.63122844696045
    9. ' ):' → logprob: -10.38122844696045
    10. ']' → logprob: -10.38122844696045

Token 84: ' Liste' (ID: 61030)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.1820150464773178
    2. 'list' → logprob: -1.807015061378479
    3. ' la' → logprob: -7.1820149421691895
    4. ')' → logprob: -7.3070149421691895
    5. ' liste' → logprob: -7.8070149421691895
    6. '   ' → logprob: -9.432015419006348
    7. 'int' → logprob: -9.682015419006348
    8. 'List' → logprob: -9.807015419006348
    9. 'liste' → logprob: -9.932015419006348
    10. 'Liste' → logprob: -10.557015419006348

Token 85: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.006724960170686245
    2. ' of' → logprob: -5.756724834442139
    3. 'des' → logprob: -6.381724834442139
    4. '[' → logprob: -6.756724834442139
    5. '[int' → logprob: -8.131725311279297
    6. 's' → logprob: -9.381725311279297
    7. '   ' → logprob: -9.756725311279297
    8. '```' → logprob: -9.881725311279297
    9. ' d' → logprob: -10.381725311279297
    10. '[ind' → logprob: -10.881725311279297

Token 86: ' valeurs' (ID: 73668)
  Prédit: ' coûts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' coûts' → logprob: -0.20377179980278015
    2. 'co' → logprob: -2.5787718296051025
    3. ' cout' → logprob: -3.3287718296051025
    4. 'cout' → logprob: -3.3287718296051025
    5. 'int' → logprob: -3.9537718296051025
    6. 'coeff' → logprob: -5.578771591186523
    7. ' coût' → logprob: -5.828771591186523
    8. 'c' → logprob: -5.953771591186523
    9. ' int' → logprob: -6.203771591186523
    10. 'val' → logprob: -6.328771591186523

Token 87: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.06913110613822937
    2. 'c' → logprob: -3.3191311359405518
    3. 's' → logprob: -5.194130897521973
    4. ' correspond' → logprob: -5.194130897521973
    5. ' d' → logprob: -5.694130897521973
    6. ' ' → logprob: -5.944130897521973
    7. 'd' → logprob: -6.694130897521973
    8. ')' → logprob: -6.819130897521973
    9. 'int' → logprob: -7.256630897521973
    10. ' des' → logprob: -7.256630897521973

Token 88: '.

' (ID: 364)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23723694682121277
    2. ')' → logprob: -1.6122369766235352
    3. '   ' → logprob: -4.987236976623535
    4. '):
' → logprob: -5.862236976623535
    5. '```' → logprob: -7.237236976623535
    6. ''):' → logprob: -8.112236976623535
    7. '.' → logprob: -8.612236976623535
    8. ' ):' → logprob: -8.612236976623535
    9. ').' → logprob: -8.862236976623535
    10. ':' → logprob: -8.987236976623535

Token 89: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6515793204307556
    2. '   ' → logprob: -0.7765793204307556
    3. '"""' → logprob: -4.4015793800354
    4. '):' → logprob: -6.5265793800354
    5. '"""
' → logprob: -6.7765793800354
    6. ')
' → logprob: -7.1515793800354
    7. '```' → logprob: -7.4015793800354
    8. ' )' → logprob: -7.5265793800354
    9. '"' → logprob: -7.9015793800354
    10. ' """' → logprob: -8.026578903198242

Token 90: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2684575319290161
    2. '"""' → logprob: -1.6434575319290161
    3. ')' → logprob: -3.8934574127197266
    4. '"""
' → logprob: -4.768457412719727
    5. '"' → logprob: -5.518457412719727
    6. '```' → logprob: -5.893457412719727
    7. ' """' → logprob: -5.893457412719727
    8. ' """
' → logprob: -6.393457412719727
    9. '""' → logprob: -7.143457412719727
    10. ' ' → logprob: -7.893457412719727

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10092408955097198
    2. ' :' → logprob: -2.350924015045166
    3. '<|end|>' → logprob: -7.975924015045166
    4. '):' → logprob: -9.100924491882324
    5. ':int' → logprob: -10.350924491882324
    6. ')' → logprob: -10.475924491882324
    7. '   ' → logprob: -10.725924491882324
    8. '=' → logprob: -10.975924491882324
    9. ' ):' → logprob: -11.100924491882324
    10. ' ' → logprob: -11.100924491882324

Token 92: '       ' (ID: 309)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.026361610740423203
    2. 'int' → logprob: -4.526361465454102
    3. '    ' → logprob: -4.901361465454102
    4. '   ' → logprob: -5.276361465454102
    5. ' ' → logprob: -6.901361465454102
    6. ' 
' → logprob: -8.026361465454102
    7. ' `' → logprob: -8.276361465454102
    8. ' ' → logprob: -8.651361465454102
    9. ' sum' → logprob: -9.151361465454102
    10. ' ```' → logprob: -9.151361465454102

Token 93: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.07054582983255386
    2. ' int' → logprob: -2.6955459117889404
    3. '   ' → logprob: -7.445545673370361
    4. 'float' → logprob: -11.44554615020752
    5. '
' → logprob: -12.07054615020752
    6. ' float' → logprob: -13.07054615020752
    7. '```' → logprob: -13.32054615020752
    8. 'total' → logprob: -14.19554615020752
    9. '       ' → logprob: -14.57054615020752
    10. ' total' → logprob: -14.82054615020752

Token 94: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005368102807551622
    2. ' :' → logprob: -5.380368232727051
    3. '   ' → logprob: -7.630368232727051
    4. '):' → logprob: -9.63036823272705
    5. ':
' → logprob: -10.13036823272705
    6. 'Total' → logprob: -10.75536823272705
    7. ')' → logprob: -10.75536823272705
    8. '```' → logprob: -10.88036823272705
    9. ':return' → logprob: -11.50536823272705
    10. '    ' → logprob: -11.50536823272705

Token 95: ' Le' (ID: 2018)
  Prédit: ' Le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Le' → logprob: -0.04205645993351936
    2. 'Le' → logprob: -3.9170565605163574
    3. ' La' → logprob: -4.292056560516357
    4. ' le' → logprob: -5.292056560516357
    5. '   ' → logprob: -6.917056560516357
    6. 'La' → logprob: -7.417056560516357
    7. ' la' → logprob: -7.542056560516357
    8. ' The' → logprob: -8.5420560836792
    9. ' sum' → logprob: -9.5420560836792
    10. '    ' → logprob: -10.1670560836792

Token 96: ' gain' (ID: 11621)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.7015818357467651
    2. ' gain' → logprob: -0.7015818357467651
    3. ' somme' → logprob: -5.576581954956055
    4. 'gain' → logprob: -6.576581954956055
    5. ' montant' → logprob: -6.701581954956055
    6. ' sum' → logprob: -7.826581954956055
    7. 's' → logprob: -7.951581954956055
    8. 'total' → logprob: -8.201581954956055
    9. ' gains' → logprob: -8.326581954956055
    10. ' nombre' → logprob: -8.576581954956055

Token 97: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.19715653359889984
    2. '_total' → logprob: -1.822156548500061
    3. '_' → logprob: -4.3221564292907715
    4. 'total' → logprob: -5.6971564292907715
    5. ' _' → logprob: -8.07215690612793
    6. ' ' → logprob: -9.57215690612793
    7. ' totale' → logprob: -9.82215690612793
    8. 'Total' → logprob: -9.94715690612793
    9. ' maximal' → logprob: -9.94715690612793
    10. '   ' → logprob: -10.94715690612793

Token 98: ' cum' (ID: 10023)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05241234228014946
    2. '
' → logprob: -3.677412271499634
    3. '\n' → logprob: -5.552412509918213
    4. '.' → logprob: -5.552412509918213
    5. '    
' → logprob: -5.552412509918213
    6. '<|end|>' → logprob: -5.677412509918213
    7. '```' → logprob: -5.677412509918213
    8. ':' → logprob: -6.802412509918213
    9. ' 
' → logprob: -7.177412509918213
    10. '    ' → logprob: -7.302412509918213

Token 99: 'ulé' (ID: 147268)
  Prédit: 'ulé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulé' → logprob: -0.31731659173965454
    2. 'ul' → logprob: -1.3173165321350098
    3. 'ulat' → logprob: -5.69231653213501
    4. 'u' → logprob: -7.94231653213501
    5. 'ulative' → logprob: -9.192317008972168
    6. 'ulated' → logprob: -9.942317008972168
    7. 'é' → logprob: -10.067317008972168
    8. '```' → logprob: -11.192317008972168
    9. 'ult' → logprob: -11.317317008972168
    10. 'l' → logprob: -11.317317008972168

Token 100: ' pour' (ID: 1930)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5020995140075684
    2. '   ' → logprob: -1.0020995140075684
    3. '
' → logprob: -4.252099514007568
    4. '.
' → logprob: -5.377099514007568
    5. ')' → logprob: -5.502099514007568
    6. ':' → logprob: -7.002099514007568
    7. '\n' → logprob: -7.377099514007568
    8. ',' → logprob: -7.627099514007568
    9. '```' → logprob: -7.752099514007568
    10. '    
' → logprob: -7.877099514007568

Token 101: ' tous' (ID: 10688)
  Prédit: ' lequel'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lequel' → logprob: -0.42920932173728943
    2. ' lesquelles' → logprob: -1.4292093515396118
    3. ' les' → logprob: -3.3042092323303223
    4. ' lesquels' → logprob: -3.8042092323303223
    5. ' laquelle' → logprob: -3.9292092323303223
    6. ' which' → logprob: -4.179209232330322
    7. 'which' → logprob: -5.179209232330322
    8. ' chaque' → logprob: -5.679209232330322
    9. ' tous' → logprob: -6.429209232330322
    10. 'les' → logprob: -6.804209232330322

Token 102: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31160569190979004
    2. ' les' → logprob: -1.81160569190979
    3. 'i' → logprob: -2.43660569190979
    4. 'les' → logprob: -5.061605453491211
    5. ' indices' → logprob: -5.936605453491211
    6. '<|end|>' → logprob: -6.436605453491211
    7. 'indices' → logprob: -6.686605453491211
    8. ' ' → logprob: -6.811605453491211
    9. '[i' → logprob: -7.311605453491211
    10. '```' → logprob: -7.561605453491211

Token 103: ' indices' (ID: 30378)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3929708003997803
    2. ' i' → logprob: -1.2679708003997803
    3. ' indices' → logprob: -3.3929708003997803
    4. 'indices' → logprob: -4.642971038818359
    5. ' éléments' → logprob: -9.14297103881836
    6. 'index' → logprob: -10.51797103881836
    7. 'élé' → logprob: -10.64297103881836
    8. 'indice' → logprob: -10.64297103881836
    9. ' índices' → logprob: -10.76797103881836
    10. ' index' → logprob: -10.76797103881836

Token 104: ' où' (ID: 15113)
  Prédit: ' où'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' où' → logprob: -0.663007915019989
    2. ' i' → logprob: -0.913007915019989
    3. ' where' → logprob: -3.288007974624634
    4. 'i' → logprob: -4.538007736206055
    5. '   ' → logprob: -4.788007736206055
    6. ' `' → logprob: -5.163007736206055
    7. 'où' → logprob: -5.163007736206055
    8. '```' → logprob: -6.038007736206055
    9. ')' → logprob: -6.163007736206055
    10. '.' → logprob: -6.788007736206055

Token 105: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.005250364076346159
    2. 'v' → logprob: -5.255250453948975
    3. ' ' → logprob: -12.505249977111816
    4. '   ' → logprob: -12.630249977111816
    5. '	v' → logprob: -13.255249977111816
    6. ' `' → logprob: -13.505249977111816
    7. '  ' → logprob: -13.755249977111816
    8. '```' → logprob: -13.755249977111816
    9. ' ' → logprob: -13.880249977111816
    10. '    ' → logprob: -14.005249977111816

Token 106: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0047857495956122875
    2. '[' → logprob: -5.379785537719727
    3. '>' → logprob: -9.129785537719727
    4. ' >' → logprob: -10.129785537719727
    5. 'i' → logprob: -12.379785537719727
    6. '[j' → logprob: -13.379785537719727
    7. ' [' → logprob: -13.504785537719727
    8. '   ' → logprob: -13.629785537719727
    9. '[I' → logprob: -13.754785537719727
    10. '```' → logprob: -13.754785537719727

Token 107: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1370689421892166
    2. ' >' → logprob: -2.3870689868927
    3. '>' → logprob: -3.6370689868927
    4. ' ]' → logprob: -4.887068748474121
    5. ']>' → logprob: -6.387068748474121
    6. '[i' → logprob: -8.262068748474121
    7. '[' → logprob: -8.762068748474121
    8. '']' → logprob: -9.387068748474121
    9. ' ' → logprob: -9.637068748474121
    10. '">' → logprob: -11.012068748474121

Token 108: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10042178630828857
    2. '>' → logprob: -2.350421905517578
    3. ' ' → logprob: -9.225421905517578
    4. ' ' → logprob: -10.475421905517578
    5. '```' → logprob: -11.225421905517578
    6. '">' → logprob: -11.350421905517578
    7. '[' → logprob: -11.600421905517578
    8. ']' → logprob: -12.100421905517578
    9. '<|end|>' → logprob: -12.350421905517578
    10. ')' → logprob: -12.412921905517578

Token 109: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.20142298936843872
    2. 'c' → logprob: -1.701422929763794
    3. ' ' → logprob: -12.326422691345215
    4. ' ' → logprob: -13.451422691345215
    5. '	c' → logprob: -13.576422691345215
    6. '```' → logprob: -14.763922691345215
    7. '  ' → logprob: -14.826422691345215
    8. '0' → logprob: -15.263922691345215
    9. '   ' → logprob: -15.326422691345215
    10. ')c' → logprob: -15.326422691345215

Token 110: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5791018009185791
    2. ']' → logprob: -0.9541018009185791
    3. '].' → logprob: -4.0791015625
    4. '.' → logprob: -4.0791015625
    5. ')' → logprob: -4.5791015625
    6. ']:' → logprob: -5.8291015625
    7. '])' → logprob: -5.9541015625
    8. ').' → logprob: -6.7041015625
    9. '):' → logprob: -6.9541015625
    10. 'i' → logprob: -7.5791015625

Token 111: '].
' (ID: 49887)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022581949830055237
    2. ').' → logprob: -4.147582054138184
    3. '.' → logprob: -5.647582054138184
    4. '"""' → logprob: -6.522582054138184
    5. '}' → logprob: -7.897582054138184
    6. ']' → logprob: -7.897582054138184
    7. '```' → logprob: -8.147582054138184
    8. 'def' → logprob: -9.147582054138184
    9. ')
' → logprob: -9.397582054138184
    10. '."""' → logprob: -9.522582054138184

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002646525390446186
    2. '"""' → logprob: -6.127646446228027
    3. ')' → logprob: -8.627646446228027
    4. '"""
' → logprob: -9.627646446228027
    5. '    ' → logprob: -9.877646446228027
    6. '"' → logprob: -10.127646446228027
    7. '
' → logprob: -10.127646446228027
    8. '```' → logprob: -10.377646446228027
    9. ' """' → logprob: -11.002646446228027
    10. '    
' → logprob: -11.252646446228027

Token 113: ' """
' (ID: 7037)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7184692025184631
    2. '   ' → logprob: -0.7184692025184631
    3. '    
' → logprob: -4.718469142913818
    4. ')' → logprob: -5.343469142913818
    5. '\n' → logprob: -5.593469142913818
    6. ':' → logprob: -6.593469142913818
    7. '```' → logprob: -6.718469142913818
    8. ' 
' → logprob: -6.843469142913818
    9. '  
' → logprob: -7.218469142913818
    10. '   
' → logprob: -7.593469142913818

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008055794751271605
    2. ' total' → logprob: -7.875805377960205
    3. 'total' → logprob: -8.375805854797363
    4. '    
' → logprob: -9.375805854797363
    5. 'result' → logprob: -10.125805854797363
    6. ' result' → logprob: -10.875805854797363
    7. '    ' → logprob: -11.250805854797363
    8. '
' → logprob: -11.375805854797363
    9. ' return' → logprob: -11.750805854797363
    10. 'return' → logprob: -12.250805854797363

Token 115: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.005881510674953461
    2. 'gain' → logprob: -5.380881309509277
    3. ' total' → logprob: -6.880881309509277
    4. '   ' → logprob: -9.255881309509277
    5. 'result' → logprob: -9.505881309509277
    6. 'return' → logprob: -10.380881309509277
    7. ' gain' → logprob: -10.630881309509277
    8. 's' → logprob: -13.005881309509277
    9. '```' → logprob: -14.005881309509277
    10. 'g' → logprob: -14.005881309509277

Token 116: ' Initial' (ID: 9209)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.22848622500896454
    2. 'total' → logprob: -1.603486180305481
    3. ' gain' → logprob: -6.228486061096191
    4. 'gain' → logprob: -7.353486061096191
    5. 'result' → logprob: -8.353486061096191
    6. ' result' → logprob: -9.228486061096191
    7. '   ' → logprob: -10.228486061096191
    8. 'sum' → logprob: -11.103486061096191
    9. ' totale' → logprob: -11.103486061096191
    10. 'Total' → logprob: -11.228486061096191

Token 117: 'iser' (ID: 7466)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23235417902469635
    2. '_total' → logprob: -2.482354164123535
    3. 'iser' → logprob: -3.107354164123535
    4. 'er' → logprob: -3.232354164123535
    5. '_' → logprob: -4.232354164123535
    6. 'ize' → logprob: -4.982354164123535
    7. 'e' → logprob: -5.482354164123535
    8. 'total' → logprob: -6.232354164123535
    9. 'al' → logprob: -6.357354164123535
    10. ' ' → logprob: -6.357354164123535

Token 118: ' la' (ID: 557)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.0030912011861801147
    2. 'total' → logprob: -6.003091335296631
    3. ' gain' → logprob: -7.503091335296631
    4. ' le' → logprob: -10.253090858459473
    5. ' result' → logprob: -11.378090858459473
    6. '   ' → logprob: -11.503090858459473
    7. 'gain' → logprob: -12.753090858459473
    8. ' totale' → logprob: -13.628090858459473
    9. ' la' → logprob: -14.128090858459473
    10. '	total' → logprob: -14.628090858459473

Token 119: ' variable' (ID: 11076)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.03519366309046745
    2. ' total' → logprob: -3.910193681716919
    3. 'gain' → logprob: -4.28519344329834
    4. ' gain' → logprob: -7.91019344329834
    5. 'result' → logprob: -8.41019344329834
    6. 's' → logprob: -9.53519344329834
    7. 'sum' → logprob: -10.03519344329834
    8. '   ' → logprob: -11.03519344329834
    9. 't' → logprob: -11.41019344329834
    10. 'g' → logprob: -11.78519344329834

Token 120: ' qui' (ID: 2780)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.05047062039375305
    2. 'total' → logprob: -3.0504705905914307
    3. '   ' → logprob: -6.80047082901001
    4. ' gain' → logprob: -7.67547082901001
    5. ' totale' → logprob: -9.050470352172852
    6. '_total' → logprob: -9.050470352172852
    7. 'gain' → logprob: -10.550470352172852
    8. ' result' → logprob: -10.800470352172852
    9. '	total' → logprob: -11.925470352172852
    10. '_gain' → logprob: -12.050470352172852

Token 121: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.7852680087089539
    2. 'total' → logprob: -2.1602680683135986
    3. 'acc' → logprob: -2.7852680683135986
    4. ' cont' → logprob: -2.9102680683135986
    5. 'stock' → logprob: -2.9102680683135986
    6. 'cont' → logprob: -2.9102680683135986
    7. ' va' → logprob: -2.9102680683135986
    8. ' accum' → logprob: -3.0352680683135986
    9. ' total' → logprob: -3.2852680683135986
    10. '   ' → logprob: -4.0352678298950195

Token 122: 'era' (ID: 2060)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.045281387865543365
    2. 'er' → logprob: -3.170281410217285
    3. '=' → logprob: -7.170281410217285
    4. 'era' → logprob: -7.420281410217285
    5. ' e' → logprob: -7.920281410217285
    6. '   ' → logprob: -8.920281410217285
    7. ' =' → logprob: -9.545281410217285
    8. 'é' → logprob: -9.920281410217285
    9. 'ent' → logprob: -9.920281410217285
    10. '_' → logprob: -9.920281410217285

Token 123: ' la' (ID: 557)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.09571582823991776
    2. ' total' → logprob: -2.5957157611846924
    3. 'le' → logprob: -4.7207159996032715
    4. ' la' → logprob: -5.5957159996032715
    5. 'total' → logprob: -6.2207159996032715
    6. ' ' → logprob: -7.0957159996032715
    7. '   ' → logprob: -7.9707159996032715
    8. '_total' → logprob: -8.220715522766113
    9. '_le' → logprob: -8.220715522766113
    10. ' the' → logprob: -8.595715522766113

Token 124: ' somme' (ID: 64484)
  Prédit: 'gain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gain' → logprob: -0.39063045382499695
    2. 'total' → logprob: -1.5156304836273193
    3. 's' → logprob: -2.3906304836273193
    4. ' somme' → logprob: -5.51563024520874
    5. ' gain' → logprob: -5.89063024520874
    6. ' total' → logprob: -6.26563024520874
    7. 'sum' → logprob: -6.76563024520874
    8. 'g' → logprob: -7.14063024520874
    9. 'som' → logprob: -7.76563024520874
    10. 'result' → logprob: -7.89063024520874

Token 125: ' totale' (ID: 52898)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.045175205916166306
    2. 'total' → logprob: -3.420175313949585
    3. '   ' → logprob: -5.045175075531006
    4. ' totale' → logprob: -5.420175075531006
    5. '_total' → logprob: -7.920175075531006
    6. ' result' → logprob: -9.420175552368164
    7. ' gain' → logprob: -10.045175552368164
    8. '_' → logprob: -10.670175552368164
    9. ' =' → logprob: -10.920175552368164
    10. 'result' → logprob: -11.170175552368164

Token 126: '
' (ID: 198)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.021866779774427414
    2. 'total' → logprob: -3.896866798400879
    3. ' gain' → logprob: -7.271866798400879
    4. ' totale' → logprob: -8.021866798400879
    5. '   ' → logprob: -8.521866798400879
    6. ' result' → logprob: -10.021866798400879
    7. '_total' → logprob: -10.771866798400879
    8. 'gain' → logprob: -11.396866798400879
    9. 'result' → logprob: -12.271866798400879
    10. '	total' → logprob: -12.396866798400879

Token 127: '   ' (ID: 271)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.021332573145627975
    2. 'total' → logprob: -4.396332740783691
    3. '   ' → logprob: -4.896332740783691
    4. ' totale' → logprob: -6.896332740783691
    5. ' gain' → logprob: -8.896332740783691
    6. '_total' → logprob: -9.896332740783691
    7. ' result' → logprob: -10.646332740783691
    8. '_' → logprob: -10.646332740783691
    9. ' tot' → logprob: -11.771332740783691
    10. ' =' → logprob: -11.771332740783691

Token 128: ' ans' (ID: 3345)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3141511082649231
    2. ' total' → logprob: -1.3141510486602783
    3. ' gain' → logprob: -7.814151287078857
    4. 'gain' → logprob: -8.1891508102417
    5. '   ' → logprob: -8.8141508102417
    6. 'result' → logprob: -10.9391508102417
    7. '	total' → logprob: -11.8141508102417
    8. ' totale' → logprob: -12.1891508102417
    9. ' result' → logprob: -12.3141508102417
    10. 't' → logprob: -12.3141508102417

Token 129: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048611775040626526
    2. '=' → logprob: -3.048611879348755
    3. '   ' → logprob: -11.298611640930176
    4. ' +=' → logprob: -12.298611640930176
    5. 'u' → logprob: -13.048611640930176
    6. '_' → logprob: -13.923611640930176
    7. ' ' → logprob: -14.048611640930176
    8. '  ' → logprob: -14.548611640930176
    9. ' ' → logprob: -14.798611640930176
    10. 'umer' → logprob: -15.048611640930176

Token 130: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0619683600962162
    2. ' ' → logprob: -2.8119683265686035
    3. '   ' → logprob: -14.561968803405762
    4. ' ' → logprob: -16.561967849731445
    5. '  ' → logprob: -17.936967849731445
    6. '```' → logprob: -19.311967849731445
    7. 'int' → logprob: -19.436967849731445
    8. '۰' → logprob: -19.686967849731445
    9. '1' → logprob: -19.811967849731445
    10. '<|end|>' → logprob: -19.811967849731445

Token 131: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -17.687517166137695
    4. 'int' → logprob: -17.687517166137695
    5. '۰' → logprob: -18.625017166137695
    6. '```' → logprob: -18.687517166137695
    7. '000' → logprob: -19.375017166137695
    8. '00' → logprob: -19.500017166137695
    9. 'sum' → logprob: -19.625017166137695
    10. '  ' → logprob: -19.687517166137695

Token 132: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2763831615447998
    2. '   ' → logprob: -1.5263831615447998
    3. ' for' → logprob: -4.151383399963379
    4. '    
' → logprob: -5.776383399963379
    5. 'for' → logprob: -6.151383399963379
    6. '\n' → logprob: -6.651383399963379
    7. '  
' → logprob: -7.151383399963379
    8. ' 
' → logprob: -7.651383399963379
    9. '   
' → logprob: -8.901383399963379
    10. '<|end|>' → logprob: -9.151383399963379

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1777423918247223
    2. '
' → logprob: -1.9277423620224
    3. '    
' → logprob: -4.3027424812316895
    4. ' for' → logprob: -6.0527424812316895
    5. ' 
' → logprob: -7.6777424812316895
    6. '  
' → logprob: -7.6777424812316895
    7. 'for' → logprob: -8.927742004394531
    8. '   
' → logprob: -9.177742004394531
    9. '    ' → logprob: -9.302742004394531
    10. '\n' → logprob: -9.802742004394531

Token 134: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3620242774486542
    2. ' for' → logprob: -1.4870243072509766
    3. 'for' → logprob: -2.6120243072509766
    4. '
' → logprob: -5.737024307250977
    5. '    
' → logprob: -7.237024307250977
    6. '	for' → logprob: -8.362024307250977
    7. '  
' → logprob: -10.612024307250977
    8. ' ' → logprob: -10.737024307250977
    9. ' 
' → logprob: -10.737024307250977
    10. '  ' → logprob: -10.862024307250977

Token 135: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3869940936565399
    2. ' for' → logprob: -1.1369941234588623
    3. 'range' → logprob: -9.386994361877441
    4. ' range' → logprob: -10.386994361877441
    5. 'or' → logprob: -12.636994361877441
    6. '   ' → logprob: -12.886994361877441
    7. 'r' → logprob: -14.261994361877441
    8. 'For' → logprob: -15.011994361877441
    9. ' ' → logprob: -15.386994361877441
    10. 'n' → logprob: -15.511994361877441

Token 136: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.0008853725739754736
    2. 'ours' → logprob: -7.375885486602783
    3. 'ou' → logprob: -9.375885009765625
    4. 'orrer' → logprob: -9.500885009765625
    5. 'or' → logprob: -10.250885009765625
    6. '
' → logprob: -11.375885009765625
    7. 'o' → logprob: -11.375885009765625
    8. 'orer' → logprob: -11.625885009765625
    9. 'ourt' → logprob: -11.875885009765625
    10. '>' → logprob: -12.750885009765625

Token 137: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.00016337241686414927
    2. 'i' → logprob: -9.750163078308105
    3. 's' → logprob: -10.000163078308105
    4. 'er' → logprob: -11.250163078308105
    5. '#' → logprob: -11.750163078308105
    6. '   ' → logprob: -11.750163078308105
    7. '```' → logprob: -12.000163078308105
    8. 'r' → logprob: -12.375163078308105
    9. '__' → logprob: -12.875163078308105
    10. 'e' → logprob: -13.125163078308105

Token 138: ' toutes' (ID: 17502)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08186472207307816
    2. ' i' → logprob: -2.706864833831787
    3. ' for' → logprob: -5.206864833831787
    4. 'range' → logprob: -5.706864833831787
    5. ' n' → logprob: -6.456864833831787
    6. ' ' → logprob: -6.956864833831787
    7. '   ' → logprob: -8.331864356994629
    8. '(range' → logprob: -9.706864356994629
    9. 'n' → logprob: -9.956864356994629
    10. ' ' → logprob: -9.956864356994629

Token 139: ' les' (ID: 1341)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.02042217180132866
    2. 'range' → logprob: -4.895421981811523
    3. ' les' → logprob: -5.395421981811523
    4. '(range' → logprob: -5.770421981811523
    5. ' i' → logprob: -6.145421981811523
    6. ' la' → logprob: -6.270421981811523
    7. ' ' → logprob: -7.645421981811523
    8. ' l' → logprob: -8.270421981811523
    9. ' for' → logprob: -9.145421981811523
    10. 'i' → logprob: -9.520421981811523

Token 140: ' positions' (ID: 15897)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1270727813243866
    2. 'range' → logprob: -2.127072811126709
    3. 'i' → logprob: -10.37707233428955
    4. 'n' → logprob: -10.37707233428955
    5. ' i' → logprob: -10.50207233428955
    6. ' ' → logprob: -10.62707233428955
    7. ' n' → logprob: -11.62707233428955
    8. '(range' → logprob: -12.50207233428955
    9. ' rang' → logprob: -12.75207233428955
    10. ' for' → logprob: -13.12707233428955

Token 141: ' de' (ID: 334)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5823214650154114
    2. ' i' → logprob: -1.3323214054107666
    3. ' range' → logprob: -2.3323214054107666
    4. 'range' → logprob: -3.3323214054107666
    5. 'for' → logprob: -3.7073214054107666
    6. '   ' → logprob: -4.457321643829346
    7. 'i' → logprob: -6.082321643829346
    8. ' in' → logprob: -6.457321643829346
    9. ' de' → logprob: -6.832321643829346
    10. ' en' → logprob: -7.207321643829346

Token 142: ' ' (ID: 220)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08904186636209488
    2. 'range' → logprob: -2.4640419483184814
    3. ' la' → logprob: -10.089041709899902
    4. ' v' → logprob: -10.839041709899902
    5. 'n' → logprob: -11.089041709899902
    6. 'v' → logprob: -12.089041709899902
    7. ' i' → logprob: -12.339041709899902
    8. ' ' → logprob: -12.964041709899902
    9. 'i' → logprob: -13.089041709899902
    10. 'r' → logprob: -13.214041709899902

Token 143: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009442733600735664
    2. ' range' → logprob: -4.7594428062438965
    3. 'v' → logprob: -7.7594428062438965
    4. 'la' → logprob: -8.009442329406738
    5. 'l' → logprob: -11.259442329406738
    6. 'n' → logprob: -11.384442329406738
    7. ' la' → logprob: -11.634442329406738
    8. ' v' → logprob: -11.884442329406738
    9. 'r' → logprob: -12.009442329406738
    10. '   ' → logprob: -12.509442329406738

Token 144: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.03328336030244827
    2. 'à' → logprob: -3.9082834720611572
    3. ' ' → logprob: -4.783283233642578
    4. ' jusqu' → logprob: -6.158283233642578
    5. ',' → logprob: -6.658283233642578
    6. ' to' → logprob: -8.783283233642578
    7. ' n' → logprob: -8.908283233642578
    8. ' in' → logprob: -9.533283233642578
    9. '   ' → logprob: -9.783283233642578
    10. ' a' → logprob: -10.283283233642578

Token 145: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0430021695792675
    2. 'n' → logprob: -3.168002128601074
    3. '	n' → logprob: -13.418002128601074
    4. ' ' → logprob: -14.793002128601074
    5. '   ' → logprob: -15.043002128601074
    6. ' ' → logprob: -15.043002128601074
    7. '(n' → logprob: -15.668002128601074
    8. '```' → logprob: -16.16800308227539
    9. '
' → logprob: -16.41800308227539
    10. '<n' → logprob: -16.66800308227539

Token 146: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6404032707214355
    2. ' -' → logprob: -1.5154032707214355
    3. ':' → logprob: -1.6404032707214355
    4. '   ' → logprob: -3.0154032707214355
    5. ' for' → logprob: -5.6404032707214355
    6. ' ' → logprob: -6.0154032707214355
    7. ' :' → logprob: -6.7654032707214355
    8. ':
' → logprob: -7.1404032707214355
    9. 'for' → logprob: -7.1404032707214355
    10. '  ' → logprob: -7.7654032707214355

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007222028798423707
    2. ' ' → logprob: -7.250722408294678
    3. '-' → logprob: -11.37572193145752
    4. '   ' → logprob: -15.37572193145752
    5. 'n' → logprob: -15.50072193145752
    6. ' -' → logprob: -16.000722885131836
    7. '```' → logprob: -16.875722885131836
    8. '  ' → logprob: -16.875722885131836
    9. ' n' → logprob: -17.000722885131836
    10. ')' → logprob: -17.125722885131836

Token 148: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.019121462479233742
    2. ' for' → logprob: -4.3941216468811035
    3. '   ' → logprob: -6.3941216468811035
    4. '  
' → logprob: -6.6441216468811035
    5. 'for' → logprob: -6.8941216468811035
    6. ' 
' → logprob: -7.1441216468811035
    7. '    
' → logprob: -7.1441216468811035
    8. '\n' → logprob: -7.7691216468811035
    9. ':' → logprob: -8.644121170043945
    10. '<|end|>' → logprob: -9.144121170043945

Token 149: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0074343509040772915
    2. ' for' → logprob: -5.632434368133545
    3. '
' → logprob: -6.132434368133545
    4. '    
' → logprob: -6.757434368133545
    5. 'for' → logprob: -8.757433891296387
    6. ':' → logprob: -9.132433891296387
    7. '  
' → logprob: -9.382433891296387
    8. ',' → logprob: -10.257433891296387
    9. ' 
' → logprob: -10.257433891296387
    10. '   
' → logprob: -10.382433891296387

Token 150: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17134492099285126
    2. '   ' → logprob: -2.4213449954986572
    3. 'for' (adapté à ' for') → logprob: -2.7963449954986572
    4. '
' → logprob: -5.046344757080078
    5. ' 
' → logprob: -7.296344757080078
    6. '    
' → logprob: -7.796344757080078
    7. '	for' → logprob: -10.296344757080078
    8. '\n' → logprob: -10.796344757080078
    9. '  
' → logprob: -11.171344757080078
    10. ' ' → logprob: -11.421344757080078

Token 151: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0001645644661039114
    2. 'i' → logprob: -9.000164985656738
    3. ' ' → logprob: -10.125164985656738
    4. ' ' → logprob: -14.750164985656738
    5. '	i' → logprob: -15.125164985656738
    6. ' _' → logprob: -15.875164985656738
    7. '_' → logprob: -16.000164031982422
    8. ' ‌' → logprob: -16.375164031982422
    9. ' in' → logprob: -17.625164031982422
    10. '  ' → logprob: -17.750164031982422

Token 152: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00468858378008008
    2. 'in' → logprob: -5.379688739776611
    3. ' ' → logprob: -9.754688262939453
    4. '<|end|>' → logprob: -13.004688262939453
    5. ' i' → logprob: -13.254688262939453
    6. ')' → logprob: -14.129688262939453
    7. '   ' → logprob: -14.379688262939453
    8. '	in' → logprob: -14.504688262939453
    9. '  ' → logprob: -14.629688262939453
    10. '0' → logprob: -14.879688262939453

Token 153: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0046382686123251915
    2. 'range' → logprob: -5.379638195037842
    3. ' ' → logprob: -11.379638671875
    4. ' xrange' → logprob: -12.379638671875
    5. '	range' → logprob: -13.629638671875
    6. '(range' → logprob: -14.504638671875
    7. ' in' → logprob: -15.129638671875
    8. ' n' → logprob: -15.629638671875
    9. ')' → logprob: -15.754638671875
    10. '<|end|>' → logprob: -17.504638671875

Token 154: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03810896724462509
    2. '(' → logprob: -3.288109064102173
    3. ' (' → logprob: -9.663108825683594
    4. ' n' → logprob: -13.288108825683594
    5. '(
' → logprob: -13.663108825683594
    6. 'n' → logprob: -13.913108825683594
    7. ')' → logprob: -16.538108825683594
    8. '(len' → logprob: -17.538108825683594
    9. ')n' → logprob: -17.913108825683594
    10. ' ' → logprob: -18.038108825683594

Token 155: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007719860877841711
    2. '):
' → logprob: -7.875771999359131
    3. ')' → logprob: -8.125771522521973
    4. ':' → logprob: -9.875771522521973
    5. ' ):' → logprob: -10.250771522521973
    6. '   ' → logprob: -11.750771522521973
    7. '():' → logprob: -15.375771522521973
    8. '):

' → logprob: -15.750771522521973
    9. ' ' → logprob: -16.00077247619629
    10. '):
' → logprob: -16.25077247619629

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00278086238540709
    2. '<|end|>' → logprob: -6.377780914306641
    3. ' if' → logprob: -7.627780914306641
    4. '   ' → logprob: -8.50278091430664
    5. '        
' → logprob: -9.25278091430664
    6. ' 
' → logprob: -9.62778091430664
    7. '    ' → logprob: -10.37778091430664
    8. '
' → logprob: -10.37778091430664
    9. 'if' → logprob: -10.50278091430664
    10. ' ' → logprob: -10.50278091430664

Token 157: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6072133779525757
    2. '       ' → logprob: -1.2322133779525757
    3. 'if' → logprob: -1.8572133779525757
    4. '
' → logprob: -5.857213497161865
    5. '           ' → logprob: -6.357213497161865
    6. '   ' → logprob: -7.107213497161865
    7. ' 
' → logprob: -7.232213497161865
    8. '        
' → logprob: -7.732213497161865
    9. ' ' → logprob: -8.607213020324707
    10. '        ' → logprob: -8.982213020324707

Token 158: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.387284517288208
    2. ' if' → logprob: -1.137284517288208
    3. '   ' → logprob: -8.512284278869629
    4. '       ' → logprob: -8.887284278869629
    5. '    ' → logprob: -10.137284278869629
    6. 'If' → logprob: -11.762284278869629
    7. ' ' → logprob: -12.137284278869629
    8. '           ' → logprob: -12.387284278869629
    9. '
' → logprob: -12.762284278869629
    10. '	if' → logprob: -12.887284278869629

Token 159: 'ifier' (ID: 4550)
  Prédit: 'ifier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifier' → logprob: -0.02452097460627556
    2. 'if' → logprob: -4.7745208740234375
    3. 'ifie' → logprob: -4.7745208740234375
    4. '   ' → logprob: -5.0245208740234375
    5. 'ifiez' → logprob: -8.274520874023438
    6. '       ' → logprob: -8.399520874023438
    7. 'ifer' → logprob: -9.274520874023438
    8. 'i' → logprob: -9.524520874023438
    9. 'ifi' → logprob: -10.149520874023438
    10. '```' → logprob: -11.024520874023438

Token 160: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.004418486263602972
    2. 'if' → logprob: -6.00441837310791
    3. ' v' → logprob: -6.50441837310791
    4. 'v' → logprob: -8.37941837310791
    5. ' ' → logprob: -9.12941837310791
    6. ' si' → logprob: -9.75441837310791
    7. ' i' → logprob: -11.12941837310791
    8. ' s' → logprob: -11.50441837310791
    9. '   ' → logprob: -11.87941837310791
    10. ' ' → logprob: -12.00441837310791

Token 161: ' la' (ID: 557)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.018153805285692215
    2. 'v' → logprob: -4.018153667449951
    3. '	v' → logprob: -13.51815414428711
    4. ' ' → logprob: -13.64315414428711
    5. ' ' → logprob: -13.76815414428711
    6. '   ' → logprob: -16.51815414428711
    7. '(v' → logprob: -17.14315414428711
    8. '  ' → logprob: -17.26815414428711
    9. '>' → logprob: -17.39315414428711
    10. '_v' → logprob: -17.76815414428711

Token 162: ' valeur' (ID: 41664)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.09056194871664047
    2. ' v' → logprob: -2.465561866760254
    3. ' valeur' → logprob: -6.715561866760254
    4. 'val' → logprob: -8.715561866760254
    5. ' différence' → logprob: -9.590561866760254
    6. 'diff' → logprob: -10.090561866760254
    7. 'value' → logprob: -10.215561866760254
    8. 'difference' → logprob: -10.465561866760254
    9. ' value' → logprob: -10.840561866760254
    10. ' condition' → logprob: -12.090561866760254

Token 163: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.22696124017238617
    2. 'v' → logprob: -1.6019612550735474
    3. '[i' → logprob: -7.101961135864258
    4. '>' → logprob: -8.726961135864258
    5. ' ' → logprob: -9.101961135864258
    6. ' i' → logprob: -9.351961135864258
    7. '[v' → logprob: -9.351961135864258
    8. ' de' → logprob: -9.476961135864258
    9. '   ' → logprob: -9.851961135864258
    10. 'i' → logprob: -10.476961135864258

Token 164: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0023692280519753695
    2. '[' → logprob: -6.127369403839111
    3. ' [' → logprob: -8.627368927001953
    4. '[
' → logprob: -13.252368927001953
    5. 'i' → logprob: -13.752368927001953
    6. '>' → logprob: -14.627368927001953
    7. ' ' → logprob: -14.752368927001953
    8. '[I' → logprob: -15.002368927001953
    9. '   ' → logprob: -15.502368927001953
    10. ' >' → logprob: -15.752368927001953

Token 165: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.892669141292572
    2. '>' → logprob: -1.1426692008972168
    3. ']' → logprob: -1.3926692008972168
    4. ']>' → logprob: -4.517669200897217
    5. ' ]' → logprob: -5.142669200897217
    6. '[' → logprob: -6.267669200897217
    7. ')' → logprob: -6.767669200897217
    8. ' ' → logprob: -6.892669200897217
    9. '[i' → logprob: -7.267669200897217
    10. '">' → logprob: -7.642669200897217

Token 166: ' est' (ID: 893)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.31439879536628723
    2. '>' → logprob: -1.3143987655639648
    3. ' ' → logprob: -7.689398765563965
    4. '[' → logprob: -8.314398765563965
    5. '<|end|>' → logprob: -8.564398765563965
    6. '">' → logprob: -9.689398765563965
    7. ']' → logprob: -10.439398765563965
    8. ')' → logprob: -10.564398765563965
    9. ' ' → logprob: -10.689398765563965
    10. ']>' → logprob: -11.314398765563965

Token 167: ' supérieure' (ID: 106336)
  Prédit: ' supérieure'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieure' → logprob: -0.7551378011703491
    2. 'strict' → logprob: -1.0051378011703491
    3. '>' → logprob: -2.1301379203796387
    4. 'sup' → logprob: -4.130137920379639
    5. ' strict' → logprob: -4.755137920379639
    6. ' >' → logprob: -4.880137920379639
    7. ' supérieur' → logprob: -5.255137920379639
    8. ' sup' → logprob: -6.130137920379639
    9. ' strictly' → logprob: -6.130137920379639
    10. 'plus' → logprob: -6.880137920379639

Token 168: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.011306462809443474
    2. '<|end|>' → logprob: -5.511306285858154
    3. 'à' → logprob: -5.886306285858154
    4. ' ' → logprob: -7.011306285858154
    5. ' a' → logprob: -7.136306285858154
    6. ' to' → logprob: -7.386306285858154
    7. '   ' → logprob: -7.636306285858154
    8. ' au' → logprob: -8.011306762695312
    9. '       ' → logprob: -8.136306762695312
    10. ' ' → logprob: -8.886306762695312

Token 169: ' la' (ID: 557)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.1603408008813858
    2. 'c' → logprob: -1.9103407859802246
    3. ' ' → logprob: -9.410341262817383
    4. ' la' → logprob: -11.785341262817383
    5. ' ' → logprob: -11.910341262817383
    6. '	c' → logprob: -11.910341262817383
    7. '<|end|>' → logprob: -13.347841262817383
    8. 'the' → logprob: -13.847841262817383
    9. '   ' → logprob: -13.910341262817383
    10. '```' → logprob: -13.972841262817383

Token 170: ' valeur' (ID: 41664)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4741230010986328
    2. ' c' → logprob: -0.9741230010986328
    3. ' valeur' → logprob: -10.474123001098633
    4. ' ' → logprob: -11.599123001098633
    5. 'val' → logprob: -12.599123001098633
    6. '	c' → logprob: -13.474123001098633
    7. '   ' → logprob: -13.974123001098633
    8. 'value' → logprob: -14.474123001098633
    9. 'cation' → logprob: -14.974123001098633
    10. ' value' → logprob: -15.099123001098633

Token 171: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3870762586593628
    2. 'c' → logprob: -1.1370762586593628
    3. '   ' → logprob: -8.762076377868652
    4. '	c' → logprob: -11.262076377868652
    5. ' ' → logprob: -11.512076377868652
    6. '    ' → logprob: -12.262076377868652
    7. '       ' → logprob: -12.262076377868652
    8. ' ' → logprob: -12.387076377868652
    9. ' à' → logprob: -13.137076377868652
    10. '  ' → logprob: -13.137076377868652

Token 172: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.200166469876422e-06
    2. '[' → logprob: -12.750004768371582
    3. ' [' → logprob: -13.500004768371582
    4. '```' → logprob: -14.875004768371582
    5. 'i' → logprob: -15.750004768371582
    6. '   ' → logprob: -16.7500057220459
    7. '[
' → logprob: -17.0000057220459
    8. '[j' → logprob: -17.1250057220459
    9. ' i' → logprob: -17.2500057220459
    10. '[index' → logprob: -17.7500057220459

Token 173: ']
' (ID: 1592)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1887466460466385
    2. ')' → logprob: -1.813746690750122
    3. '):
' → logprob: -5.938746452331543
    4. '       ' → logprob: -6.063746452331543
    5. ' ):' → logprob: -6.813746452331543
    6. ':' → logprob: -7.188746452331543
    7. ' )' → logprob: -7.313746452331543
    8. ']:' → logprob: -7.813746452331543
    9. '   ' → logprob: -7.938746452331543
    10. ']' → logprob: -8.188746452331543

Token 174: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4383208453655243
    2. ':' → logprob: -1.0633208751678467
    3. '           ' → logprob: -5.188320636749268
    4. ' :' → logprob: -6.188320636749268
    5. ':
' → logprob: -6.938320636749268
    6. '   ' → logprob: -8.313321113586426
    7. ',' → logprob: -8.563321113586426
    8. ' and' → logprob: -8.938321113586426
    9. '<|end|>' → logprob: -8.938321113586426
    10. '        ' → logprob: -9.938321113586426

Token 175: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.17590980231761932
    2. 'if' (adapté à ' if') → logprob: -2.0509097576141357
    3. '       ' → logprob: -3.4259097576141357
    4. 'v' → logprob: -9.675909996032715
    5. '   ' → logprob: -9.800909996032715
    6. ' v' → logprob: -10.675909996032715
    7. 'If' → logprob: -11.800909996032715
    8. '           ' → logprob: -11.925909996032715
    9. '	if' → logprob: -12.425909996032715
    10. ' ' → logprob: -13.175909996032715

Token 176: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.002811059355735779
    2. 'v' → logprob: -5.877810955047607
    3. ' ' → logprob: -12.502811431884766
    4. '	v' → logprob: -13.502811431884766
    5. ' ' → logprob: -14.252811431884766
    6. '    ' → logprob: -16.377811431884766
    7. '(v' → logprob: -16.502811431884766
    8. ' (' → logprob: -16.877811431884766
    9. '   ' → logprob: -17.502811431884766
    10. ' ' → logprob: -17.502811431884766

Token 177: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0019341122824698687
    2. '[' → logprob: -6.251934051513672
    3. ' [' → logprob: -12.376934051513672
    4. '[
' → logprob: -14.751934051513672
    5. '[v' → logprob: -15.376934051513672
    6. '```' → logprob: -15.376934051513672
    7. '[I' → logprob: -16.251934051513672
    8. '>' → logprob: -16.876934051513672
    9. '[index' → logprob: -17.251934051513672
    10. ']' → logprob: -17.251934051513672

Token 178: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.027294684201478958
    2. '>' → logprob: -4.277294635772705
    3. ']>' → logprob: -5.152294635772705
    4. ' >' → logprob: -5.277294635772705
    5. ' ]' → logprob: -6.152294635772705
    6. ' ' → logprob: -12.027295112609863
    7. '[' → logprob: -12.277295112609863
    8. '']' → logprob: -12.527295112609863
    9. '>]' → logprob: -13.402295112609863
    10. ')' → logprob: -13.402295112609863

Token 179: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.14302991330623627
    2. '>' → logprob: -2.0180299282073975
    3. ' ' → logprob: -8.143030166625977
    4. '<|end|>' → logprob: -10.643030166625977
    5. '">' → logprob: -11.393030166625977
    6. '[' → logprob: -11.768030166625977
    7. '  ' → logprob: -12.893030166625977
    8. '   ' → logprob: -12.893030166625977
    9. ' ' → logprob: -12.893030166625977
    10. ')' → logprob: -12.893030166625977

Token 180: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.02325025200843811
    2. 'c' → logprob: -3.7732503414154053
    3. ' ' → logprob: -13.398250579833984
    4. ' ' → logprob: -13.523250579833984
    5. '	c' → logprob: -13.773250579833984
    6. ')c' → logprob: -15.648250579833984
    7. '0' → logprob: -15.898250579833984
    8. '_c' → logprob: -16.273250579833984
    9. '```' → logprob: -16.523250579833984
    10. ' 
' → logprob: -16.960750579833984

Token 181: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.209963900502771e-05
    2. '[' → logprob: -9.375092506408691
    3. ' [' → logprob: -12.625092506408691
    4. ']' → logprob: -13.000092506408691
    5. '][' → logprob: -14.375092506408691
    6. '[
' → logprob: -14.875092506408691
    7. '[I' → logprob: -15.375092506408691
    8. '   ' → logprob: -15.625092506408691
    9. 'i' → logprob: -16.000091552734375
    10. '[j' → logprob: -16.125091552734375

Token 182: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0014022637624293566
    2. ']' → logprob: -6.876402378082275
    3. ']:
' → logprob: -8.626401901245117
    4. '):' → logprob: -8.751401901245117
    5. ']):' → logprob: -11.501401901245117
    6. ']:
' → logprob: -11.751401901245117
    7. ' ]' → logprob: -12.001401901245117
    8. ':' → logprob: -12.626401901245117
    9. '"]:' → logprob: -13.751401901245117
    10. '       ' → logprob: -14.126401901245117

Token 183: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19106031954288483
    2. ' ans' → logprob: -2.8160603046417236
    3. '<|end|>' → logprob: -3.0660603046417236
    4. '       ' → logprob: -3.1910603046417236
    5. ':' → logprob: -4.816060543060303
    6. 'ans' → logprob: -5.066060543060303
    7. ':
' → logprob: -5.691060543060303
    8. '<|end|>' → logprob: -6.691060543060303
    9. '        ' → logprob: -6.816060543060303
    10. '(ans' → logprob: -6.816060543060303

Token 184: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7712563276290894
    2. ' ans' → logprob: -1.0212563276290894
    3. 'ans' → logprob: -1.7712563276290894
    4. '               ' → logprob: -5.646256446838379
    5. '
' → logprob: -5.771256446838379
    6. '       ' → logprob: -7.771256446838379
    7. '	ans' → logprob: -9.896256446838379
    8. '            
' → logprob: -10.021256446838379
    9. '            ' → logprob: -10.146256446838379
    10. '(ans' → logprob: -10.271256446838379

Token 185: ' Ajouter' (ID: 165754)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.6329814195632935
    2. 'ans' → logprob: -0.7579814195632935
    3. '           ' → logprob: -8.007981300354004
    4. '	ans' → logprob: -10.507981300354004
    5. '(ans' → logprob: -12.132981300354004
    6. '   ' → logprob: -12.132981300354004
    7. '       ' → logprob: -13.257981300354004
    8. 'answer' → logprob: -13.257981300354004
    9. '_ans' → logprob: -13.507981300354004
    10. '               ' → logprob: -13.632981300354004

Token 186: ' la' (ID: 557)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.06416182219982147
    2. 'v' → logprob: -3.064161777496338
    3. ' (' → logprob: -4.314161777496338
    4. '(v' → logprob: -6.189161777496338
    5. '(' → logprob: -11.189162254333496
    6. '	v' → logprob: -12.939162254333496
    7. '   ' → logprob: -13.064162254333496
    8. ' ans' → logprob: -13.189162254333496
    9. ' ' → logprob: -13.439162254333496
    10. 'ans' → logprob: -14.439162254333496

Token 187: ' différence' (ID: 79196)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.10180629044771194
    2. ' v' → logprob: -2.351806402206421
    3. '(v' → logprob: -6.851806163787842
    4. 'difference' → logprob: -8.476806640625
    5. ' difference' → logprob: -8.726806640625
    6. ' (' → logprob: -8.976806640625
    7. 'diff' → logprob: -11.351806640625
    8. '	v' → logprob: -11.976806640625
    9. '[v' → logprob: -12.476806640625
    10. '   ' → logprob: -12.476806640625

Token 188: ' à' (ID: 1221)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.19434702396392822
    2. 'v' → logprob: -2.0693469047546387
    3. '(v' → logprob: -3.4443469047546387
    4. ' (' → logprob: -4.069346904754639
    5. '           ' → logprob: -7.319346904754639
    6. ' ans' → logprob: -7.944346904754639
    7. '   ' → logprob: -9.319347381591797
    8. 'ans' → logprob: -9.694347381591797
    9. '               ' → logprob: -10.569347381591797
    10. '(' → logprob: -10.694347381591797

Token 189: ' la' (ID: 557)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.055031679570674896
    2. 'ans' → logprob: -2.9300317764282227
    3. '(ans' → logprob: -9.305031776428223
    4. '	ans' → logprob: -10.055031776428223
    5. '_ans' → logprob: -11.930031776428223
    6. ' la' → logprob: -12.930031776428223
    7. ' ' → logprob: -13.305031776428223
    8. ' l' → logprob: -13.555031776428223
    9. 'Ans' → logprob: -14.180031776428223
    10. 'answer' → logprob: -14.430031776428223

Token 190: ' somme' (ID: 64484)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.018192904070019722
    2. ' ans' → logprob: -4.018192768096924
    3. 'answer' → logprob: -11.143193244934082
    4. '	ans' → logprob: -11.643193244934082
    5. '(ans' → logprob: -12.018193244934082
    6. '   ' → logprob: -12.643193244934082
    7. '_ans' → logprob: -13.268193244934082
    8. ' ' → logprob: -13.518193244934082
    9. 'sum' → logprob: -14.018193244934082
    10. ' answer' → logprob: -14.143193244934082

Token 191: ' totale' (ID: 52898)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.1292749047279358
    2. '           ' → logprob: -2.504274845123291
    3. 'ans' → logprob: -3.754274845123291
    4. '(ans' → logprob: -4.379274845123291
    5. 'v' → logprob: -7.129274845123291
    6. '               ' → logprob: -7.254274845123291
    7. '   ' → logprob: -7.504274845123291
    8. '
' → logprob: -8.00427532196045
    9. '	ans' → logprob: -8.00427532196045
    10. '       ' → logprob: -8.87927532196045

Token 192: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04598803073167801
    2. ' ans' → logprob: -3.295988082885742
    3. 'ans' → logprob: -5.045988082885742
    4. '               ' → logprob: -6.670988082885742
    5. '(ans' → logprob: -9.795988082885742
    6. '
' → logprob: -9.920988082885742
    7. '	ans' → logprob: -10.295988082885742
    8. '       ' → logprob: -10.670988082885742
    9. '          ' → logprob: -11.545988082885742
    10. '   ' → logprob: -11.670988082885742

Token 193: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15272559225559235
    2. ' ans' → logprob: -2.0277256965637207
    3. 'ans' → logprob: -4.652725696563721
    4. '               ' → logprob: -8.027725219726562
    5. '(ans' → logprob: -9.652725219726562
    6. '       ' → logprob: -10.652725219726562
    7. '	ans' → logprob: -11.152725219726562
    8. '          ' → logprob: -11.527725219726562
    9. '            
' → logprob: -12.152725219726562
    10. ' ' → logprob: -12.527725219726562

Token 194: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.16038741171360016
    2. ' ans' → logprob: -1.910387396812439
    3. '           ' → logprob: -8.78538703918457
    4. '	ans' → logprob: -12.41038703918457
    5. '(ans' → logprob: -12.66038703918457
    6. '   ' → logprob: -14.28538703918457
    7. 'answer' → logprob: -14.41038703918457
    8. '_ans' → logprob: -14.41038703918457
    9. '            ' → logprob: -14.91038703918457
    10. '               ' → logprob: -15.03538703918457

Token 195: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.011049943044781685
    2. '+=' → logprob: -4.511049747467041
    3. '+' → logprob: -14.2610502243042
    4. '+=(' → logprob: -14.5110502243042
    5. ']+=' → logprob: -15.0110502243042
    6. '    ' → logprob: -15.0110502243042
    7. '   ' → logprob: -15.8860502243042
    8. ' +' → logprob: -16.511049270629883
    9. ' =' → logprob: -17.511049270629883
    10. '+='' → logprob: -17.511049270629883

Token 196: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.4312586784362793
    2. 'v' → logprob: -1.0562586784362793
    3. ' (' → logprob: -6.556258678436279
    4. '(v' → logprob: -6.806258678436279
    5. '(' → logprob: -11.181259155273438
    6. '   ' → logprob: -12.431259155273438
    7. ' ' → logprob: -12.556259155273438
    8. '	v' → logprob: -12.681259155273438
    9. ' ' → logprob: -14.181259155273438
    10. '  ' → logprob: -14.806259155273438

Token 197: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.584239938296378e-06
    2. '[' → logprob: -11.875007629394531
    3. ' [' → logprob: -14.250007629394531
    4. '[v' → logprob: -17.00000762939453
    5. '[
' → logprob: -18.25000762939453
    6. '[I' → logprob: -18.75000762939453
    7. '```' → logprob: -19.25000762939453
    8. '[c' → logprob: -19.87500762939453
    9. 'i' → logprob: -19.87500762939453
    10. '\[' → logprob: -19.87500762939453

Token 198: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0805918499827385
    2. '-' → logprob: -2.705591917037964
    3. ']' → logprob: -4.580591678619385
    4. '[i' → logprob: -8.705592155456543
    5. ' ' → logprob: -9.955592155456543
    6. '[' → logprob: -10.080592155456543
    7. '   ' → logprob: -10.580592155456543
    8. ']-' → logprob: -10.955592155456543
    9. '           ' → logprob: -11.205592155456543
    10. ' ]' → logprob: -11.205592155456543

Token 199: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06197340786457062
    2. '-' → logprob: -2.8119733333587646
    3. ' ' → logprob: -13.061973571777344
    4. '-c' → logprob: -13.436973571777344
    5. ' ' → logprob: -13.811973571777344
    6. '   ' → logprob: -14.186973571777344
    7. ' -
' → logprob: -16.186973571777344
    8. '[' → logprob: -16.311973571777344
    9. '  ' → logprob: -16.561973571777344
    10. ' c' → logprob: -17.311973571777344

Token 200: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6931490898132324
    2. ' c' → logprob: -0.6931490898132324
    3. '	c' → logprob: -13.81814956665039
    4. ' ' → logprob: -14.56814956665039
    5. '_c' → logprob: -15.81814956665039
    6. ' ' → logprob: -16.06814956665039
    7. '   ' → logprob: -16.44314956665039
    8. ')c' → logprob: -16.81814956665039
    9. '```' → logprob: -17.06814956665039
    10. '<|end|>' → logprob: -17.94314956665039

Token 201: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0004320996522437781
    2. '[' → logprob: -7.750432014465332
    3. 'i' → logprob: -14.000432014465332
    4. ']' → logprob: -15.500432014465332
    5. ' [' → logprob: -15.625432014465332
    6. '[
' → logprob: -16.37543296813965
    7. '[I' → logprob: -16.75043296813965
    8. '[j' → logprob: -17.12543296813965
    9. '```' → logprob: -17.75043296813965
    10. '[c' → logprob: -18.25043296813965

Token 202: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25381362438201904
    2. ')' → logprob: -1.503813624382019
    3. '<|end|>' → logprob: -6.628813743591309
    4. '}' → logprob: -8.253813743591309
    5. ']
' → logprob: -9.128813743591309
    6. '   ' → logprob: -10.003813743591309
    7. ')
' → logprob: -10.128813743591309
    8. '[i' → logprob: -10.753813743591309
    9. '       ' → logprob: -11.003813743591309
    10. '']' → logprob: -11.128813743591309

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.627184271812439
    2. '
' → logprob: -0.877184271812439
    3. '\n' → logprob: -4.0021843910217285
    4. 'return' → logprob: -4.1271843910217285
    5. '    
' → logprob: -4.7521843910217285
    6. ' return' → logprob: -5.3771843910217285
    7. '  
' → logprob: -7.0021843910217285
    8. '	return' → logprob: -7.7521843910217285
    9. ' 
' → logprob: -8.12718391418457
    10. '\' → logprob: -9.00218391418457

Token 204: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13493578135967255
    2. 'return' → logprob: -2.1349358558654785
    3. ' return' → logprob: -5.0099358558654785
    4. '
' → logprob: -6.8849358558654785
    5. '    
' → logprob: -9.00993537902832
    6. '	return' → logprob: -9.25993537902832
    7. ' ' → logprob: -10.88493537902832
    8. ':return' → logprob: -11.50993537902832
    9. '       ' → logprob: -11.88493537902832
    10. '  ' → logprob: -12.00993537902832

Token 205: ' Retour' (ID: 146830)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.007339684292674065
    2. ' return' → logprob: -5.0073394775390625
    3. '   ' → logprob: -7.3823394775390625
    4. 'ret' → logprob: -13.507339477539062
    5. ' ' → logprob: -15.757339477539062
    6. 're' → logprob: -16.382339477539062
    7. ':return' → logprob: -16.507339477539062
    8. 'Return' → logprob: -16.632339477539062
    9. '  ' → logprob: -16.757339477539062
    10. '	return' → logprob: -16.882339477539062

Token 206: 'ner' (ID: 1247)
  Prédit: 'ner'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ner' → logprob: -0.023866556584835052
    2. 'n' → logprob: -4.023866653442383
    3. ' ans' → logprob: -5.648866653442383
    4. '   ' → logprob: -6.523866653442383
    5. 'er' → logprob: -7.898866653442383
    6. ' ner' → logprob: -8.648866653442383
    7. 'ne' → logprob: -9.398866653442383
    8. 'nez' → logprob: -10.773866653442383
    9. 'ns' → logprob: -11.398866653442383
    10. ' return' → logprob: -11.773866653442383

Token 207: ' le' (ID: 505)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.00026181264547631145
    2. 'ans' → logprob: -8.250262260437012
    3. '(ans' → logprob: -14.625262260437012
    4. '	ans' → logprob: -16.500261306762695
    5. '_ans' → logprob: -19.375261306762695
    6. ' ' → logprob: -19.625261306762695
    7. 'Ans' → logprob: -20.125261306762695
    8. ' answer' → logprob: -21.375261306762695
    9. '   ' → logprob: -21.625261306762695
    10. ' Ans' → logprob: -21.750261306762695

Token 208: ' gain' (ID: 11621)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.00523612555116415
    2. 'ans' → logprob: -5.2552361488342285
    3. '(ans' → logprob: -13.50523567199707
    4. '	ans' → logprob: -14.63023567199707
    5. ' ' → logprob: -15.63023567199707
    6. '_ans' → logprob: -16.13023567199707
    7. ' answer' → logprob: -16.25523567199707
    8. ' total' → logprob: -16.63023567199707
    9. 'answer' → logprob: -17.88023567199707
    10. 's' → logprob: -17.88023567199707

Token 209: ' total' (ID: 3609)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.04573049768805504
    2. ' total' → logprob: -3.2957305908203125
    3. 'ans' → logprob: -5.4207305908203125
    4. 'total' → logprob: -5.7957305908203125
    5. '   ' → logprob: -8.670730590820312
    6. '(ans' → logprob: -11.420730590820312
    7. '	ans' → logprob: -12.670730590820312
    8. ' ' → logprob: -13.420730590820312
    9. ' totale' → logprob: -13.670730590820312
    10. ' final' → logprob: -13.795730590820312

Token 210: ' calcul' (ID: 7559)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06095417961478233
    2. 'return' → logprob: -3.3109540939331055
    3. ' return' → logprob: -3.8109540939331055
    4. '
' → logprob: -8.435954093933105
    5. ' ans' → logprob: -8.685954093933105
    6. '    
' → logprob: -9.560954093933105
    7. 'ans' → logprob: -10.560954093933105
    8. '  ' → logprob: -11.560954093933105
    9. '	return' → logprob: -11.560954093933105
    10. ' ' → logprob: -11.560954093933105

Token 211: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -1.4259644558478612e-05
    2. 'e' → logprob: -11.500014305114746
    3. 'ée' → logprob: -12.750014305114746
    4. 'è' → logprob: -14.375014305114746
    5. 'u' → logprob: -15.375014305114746
    6. 'er' → logprob: -16.25001335144043
    7. 'ated' → logprob: -16.75001335144043
    8. 'É' → logprob: -17.37501335144043
    9. 'ulé' → logprob: -17.50001335144043
    10. '&eacute' → logprob: -17.62501335144043

Token 212: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.540712296962738
    2. '
' → logprob: -1.0407123565673828
    3. 'return' → logprob: -2.915712356567383
    4. ' return' → logprob: -4.665712356567383
    5. '    
' → logprob: -7.415712356567383
    6. '	return' → logprob: -8.915712356567383
    7. ' 
' → logprob: -9.790712356567383
    8. '  
' → logprob: -10.415712356567383
    9. '\n' → logprob: -11.415712356567383
    10. '
' → logprob: -11.665712356567383

Token 213: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012208572588860989
    2. 'return' → logprob: -4.512208461761475
    3. ' return' → logprob: -6.762208461761475
    4. '    
' → logprob: -13.387208938598633
    5. '	return' → logprob: -13.637208938598633
    6. '
' → logprob: -14.637208938598633
    7. '       ' → logprob: -16.512208938598633
    8. '_return' → logprob: -17.387208938598633
    9. '{return' → logprob: -17.512208938598633
    10. ':return' → logprob: -17.637208938598633

Token 214: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.20158816874027252
    2. ' return' → logprob: -1.7015881538391113
    3. '   ' → logprob: -8.70158863067627
    4. ' ans' → logprob: -12.20158863067627
    5. 'ans' → logprob: -12.57658863067627
    6. '	return' → logprob: -17.451587677001953
    7. 'eturn' → logprob: -17.826587677001953
    8. '{return' → logprob: -18.826587677001953
    9. ' ' → logprob: -19.076587677001953
    10. 'Return' → logprob: -19.326587677001953

Token 215: ' ans' (ID: 3345)
  Prédit: ' ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.00018125296628568321
    2. 'ans' → logprob: -8.625181198120117
    3. '(ans' → logprob: -13.500181198120117
    4. '	ans' → logprob: -15.250181198120117
    5. ' ' → logprob: -17.750181198120117
    6. '_ans' → logprob: -17.875181198120117
    7. ' an' → logprob: -19.250181198120117
    8. 'Ans' → logprob: -20.125181198120117
    9. ' Ans' → logprob: -20.375181198120117
    10. ' ansi' → logprob: -20.625181198120117

Token 216: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 217: 'if' (ID: 366)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.41414475440979004
    2. '#' → logprob: -1.91414475440979
    3. '
' → logprob: -2.28914475440979
    4. '<|end|>' → logprob: -3.66414475440979
    5. '\n' → logprob: -3.78914475440979
    6. 'n' → logprob: -3.78914475440979
    7. '```' → logprob: -4.789144515991211
    8. '[' → logprob: -5.664144515991211
    9. '\' → logprob: -5.914144515991211
    10. 'v' → logprob: -6.414144515991211

Token 218: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0038561318069696426
    2. '__' → logprob: -6.128856182098389
    3. ' ' → logprob: -7.378856182098389
    4. '_' → logprob: -7.878856182098389
    5. ' _' → logprob: -8.00385570526123
    6. ' ' → logprob: -8.12885570526123
    7. ' ‌' → logprob: -11.37885570526123
    8. ' ' → logprob: -12.12885570526123
    9. ' ​' → logprob: -12.37885570526123
    10. '  ' → logprob: -12.75385570526123

Token 219: 'name' (ID: 897)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.16080740094184875
    2. '__' → logprob: -2.0358073711395264
    3. ' ==' → logprob: -4.0358076095581055
    4. '.__' → logprob: -9.285807609558105
    5. 'name' → logprob: -9.660807609558105
    6. '==' → logprob: -10.660807609558105
    7. ' ' → logprob: -10.910807609558105
    8. 'if' → logprob: -11.285807609558105
    9. '_name' → logprob: -11.785807609558105
    10. ' if' → logprob: -11.785807609558105

Token 220: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00010628487507347018
    2. ' ==' → logprob: -9.750105857849121
    3. '==' → logprob: -10.000105857849121
    4. ' __' → logprob: -13.625105857849121
    5. '=="' → logprob: -14.250105857849121
    6. '__.__' → logprob: -16.000106811523438
    7. '__[' → logprob: -16.375106811523438
    8. '_' → logprob: -16.625106811523438
    9. '____' → logprob: -16.750106811523438
    10. '___' → logprob: -17.000106811523438

Token 221: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003541035810485482
    2. ' ==' → logprob: -5.753540992736816
    3. '==' → logprob: -8.003540992736816
    4. '=="' → logprob: -11.128540992736816
    5. ' __' → logprob: -12.128540992736816
    6. '_' → logprob: -12.128540992736816
    7. '___' → logprob: -13.253540992736816
    8. '____' → logprob: -14.628540992736816
    9. '__.__' → logprob: -14.753540992736816
    10. ' =' → logprob: -15.753540992736816

Token 222: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.006757409777492285
    2. ''' → logprob: -5.0067572593688965
    3. ' "__' → logprob: -10.506757736206055
    4. '__' → logprob: -11.381757736206055
    5. ' "' → logprob: -12.756757736206055
    6. ' '__' → logprob: -16.381757736206055
    7. '_' → logprob: -16.631757736206055
    8. '"_' → logprob: -17.006757736206055
    9. '___' → logprob: -17.506757736206055
    10. '"user' → logprob: -17.506757736206055

Token 223: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.15310683415737e-05
    2. 'name' → logprob: -10.750021934509277
    3. ' main' → logprob: -17.25002098083496
    4. '"' → logprob: -20.87502098083496
    5. 'ma' → logprob: -20.87502098083496
    6. '_main' → logprob: -21.25002098083496
    7. '	main' → logprob: -21.87502098083496
    8. '__' → logprob: -22.50002098083496
    9. 'm' → logprob: -23.37502098083496
    10. '(main' → logprob: -23.50002098083496

Token 224: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31326693296432495
    2. '__":
' → logprob: -1.3132669925689697
    3. '__':
' → logprob: -12.31326675415039
    4. '__:' → logprob: -14.43826675415039
    5. '__["' → logprob: -16.93826675415039
    6. '_' → logprob: -16.93826675415039
    7. '__",' → logprob: -16.93826675415039
    8. '___' → logprob: -18.18826675415039
    9. '__("' → logprob: -18.56326675415039
    10. '__
' → logprob: -19.31326675415039

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1785576194524765
    2. ' n' → logprob: -2.5535576343536377
    3. 'n' → logprob: -3.5535576343536377
    4. ':' → logprob: -3.8035576343536377
    5. '(n' → logprob: -4.553557395935059
    6. ' 
' → logprob: -4.678557395935059
    7. '    
' → logprob: -5.303557395935059
    8. ':
' → logprob: -5.678557395935059
    9. ' ' → logprob: -6.553557395935059
    10. ' input' → logprob: -7.428557395935059

Token 226: ' #' (ID: 1069)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.021265123039484024
    2. 'n' → logprob: -3.8962650299072266
    3. ' import' → logprob: -7.521265029907227
    4. '   ' → logprob: -8.771265029907227
    5. 'import' → logprob: -11.396265029907227
    6. ' #' → logprob: -11.521265029907227
    7. '	n' → logprob: -13.271265029907227
    8. ' t' → logprob: -14.271265029907227
    9. '#' (adapté à ' #') → logprob: -14.271265029907227
    10. ' 
' → logprob: -14.646265029907227

Token 227: ' Lire' (ID: 57624)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3725472390651703
    2. 'n' → logprob: -1.2475472688674927
    3. 'import' → logprob: -4.372547149658203
    4. ' import' → logprob: -4.622547149658203
    5. '#' → logprob: -7.372547149658203
    6. 't' → logprob: -8.622547149658203
    7. ' #' → logprob: -8.872547149658203
    8. ' input' → logprob: -9.122547149658203
    9. 'input' → logprob: -9.372547149658203
    10. ' t' → logprob: -9.622547149658203

Token 228: ' le' (ID: 505)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.054697874933481216
    2. 'n' → logprob: -3.1796979904174805
    3. '()' → logprob: -5.5546979904174805
    4. '(n' → logprob: -5.9296979904174805
    5. '   ' → logprob: -6.1796979904174805
    6. ' ' → logprob: -7.1796979904174805
    7. ' l' → logprob: -7.5546979904174805
    8. '(' → logprob: -8.17969799041748
    9. ' la' → logprob: -8.30469799041748
    10. '    ' → logprob: -8.80469799041748

Token 229: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.1320781409740448
    2. 'nombre' → logprob: -2.507078170776367
    3. 'n' → logprob: -3.882078170776367
    4. ' n' → logprob: -3.882078170776367
    5. 'int' → logprob: -8.632078170776367
    6. '_nombre' → logprob: -8.882078170776367
    7. 't' → logprob: -9.007078170776367
    8. ' nombres' → logprob: -9.132078170776367
    9. ' number' → logprob: -9.507078170776367
    10. ' t' → logprob: -9.632078170776367

Token 230: ' d' (ID: 272)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0226848125457764
    2. '   ' → logprob: -1.7726848125457764
    3. '()' → logprob: -2.3976848125457764
    4. ' =' → logprob: -2.6476848125457764
    5. 's' → logprob: -2.8976848125457764
    6. '_' → logprob: -3.0226848125457764
    7. ' n' → logprob: -3.7726848125457764
    8. ')' → logprob: -4.0226850509643555
    9. 'de' → logprob: -4.0226850509643555
    10. ' ' → logprob: -4.1476850509643555

Token 231: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.034399136900901794
    2. ' ' → logprob: -4.159399032592773
    3. '_' → logprob: -4.409399032592773
    4. ' éléments' → logprob: -5.534399032592773
    5. '_elements' → logprob: -7.409399032592773
    6. 'elements' → logprob: -8.534399032592773
    7. '  ' → logprob: -8.659399032592773
    8. 'é' → logprob: -8.659399032592773
    9. 'él' → logprob: -9.159399032592773
    10. ' elements' → logprob: -9.534399032592773

Token 232: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.022861981764435768
    2. 'elements' → logprob: -4.022861957550049
    3. 'é' → logprob: -6.647861957550049
    4. ' éléments' → logprob: -7.272861957550049
    5. 'él' → logprob: -7.522861957550049
    6. 'element' → logprob: -8.022862434387207
    7. 'test' → logprob: -8.147862434387207
    8. 'actions' → logprob: -8.397862434387207
    9. 'tests' → logprob: -8.397862434387207
    10. 'items' → logprob: -8.647862434387207

Token 233: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -5.12127808178775e-05
    2. 'éments' → logprob: -10.125051498413086
    3. 'ements' → logprob: -11.875051498413086
    4. 'm' → logprob: -13.625051498413086
    5. 'ment' → logprob: -13.875051498413086
    6. 'ents' → logprob: -14.500051498413086
    7. 'ts' → logprob: -14.875051498413086
    8. 'lements' → logprob: -15.000051498413086
    9. 'nts' → logprob: -15.375051498413086
    10. 'MENTS' → logprob: -16.250051498413086

Token 234: ' de' (ID: 334)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7226682305335999
    2. ' =' → logprob: -1.347668170928955
    3. '()' → logprob: -1.722668170928955
    4. '   ' → logprob: -3.222668170928955
    5. '=' → logprob: -3.597668170928955
    6. '(n' → logprob: -5.847668170928955
    7. ' n' → logprob: -6.597668170928955
    8. ',' → logprob: -7.097668170928955
    9. '=int' → logprob: -7.097668170928955
    10. ')' → logprob: -7.222668170928955

Token 235: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.3290112018585205
    2. 'n' → logprob: -1.3290112018585205
    3. 'input' → logprob: -1.4540112018585205
    4. 'la' → logprob: -1.9540112018585205
    5. 'entrée' → logprob: -3.4540112018585205
    6. ' la' → logprob: -3.5790112018585205
    7. 'v' → logprob: -4.829010963439941
    8. ' input' → logprob: -4.954010963439941
    9. 'int' → logprob: -4.954010963439941
    10. 't' → logprob: -6.579010963439941

Token 236: ' sé' (ID: 7462)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.0144702196121216
    2. 'liste' → logprob: -1.3894702196121216
    3. 'jeu' → logprob: -2.139470100402832
    4. 'n' → logprob: -3.264470100402832
    5. 'input' → logprob: -3.389470100402832
    6. 'élé' → logprob: -3.889470100402832
    7. 'vect' → logprob: -4.014470100402832
    8. 'table' → logprob: -4.264470100402832
    9. ' tableau' → logprob: -4.264470100402832
    10. 'lis' → logprob: -4.389470100402832

Token 237: 'quence' (ID: 6975)
  Prédit: 'rie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rie' → logprob: -0.07081163674592972
    2. 'quence' → logprob: -2.6958117485046387
    3. 'ries' → logprob: -7.195811748504639
    4. 'quences' → logprob: -9.44581127166748
    5. '#' → logprob: -11.69581127166748
    6. '   ' → logprob: -11.94581127166748
    7. 'q' → logprob: -12.07081127166748
    8. 'qu' → logprob: -12.57081127166748
    9. 'r' → logprob: -12.57081127166748
    10. 'ance' → logprob: -12.69581127166748

Token 238: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05015264451503754
    2. ' n' → logprob: -3.050152540206909
    3. ' =' → logprob: -6.925152778625488
    4. '   ' → logprob: -8.050152778625488
    5. ',' → logprob: -9.800152778625488
    6. '(n' → logprob: -10.425152778625488
    7. '    
' → logprob: -10.550152778625488
    8. ',n' → logprob: -10.675152778625488
    9. '=n' → logprob: -10.800152778625488
    10. '=' → logprob: -10.925152778625488

Token 239: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06293707340955734
    2. ' n' → logprob: -3.062937021255493
    3. ' =' → logprob: -4.937937259674072
    4. ',' → logprob: -6.312937259674072
    5. ' ' → logprob: -6.437937259674072
    6. '=' → logprob: -6.562937259674072
    7. ' ,' → logprob: -7.687937259674072
    8. '   ' → logprob: -7.812937259674072
    9. 's' → logprob: -8.312936782836914
    10. '=n' → logprob: -8.687936782836914

Token 240: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.023250950500369072
    2. ' n' → logprob: -3.7732510566711426
    3. 'int' → logprob: -12.648250579833984
    4. '   ' → logprob: -14.023250579833984
    5. 'num' → logprob: -14.648250579833984
    6. 't' → logprob: -14.648250579833984
    7. 'N' → logprob: -15.148250579833984
    8. '	n' → logprob: -15.898250579833984
    9. 'import' → logprob: -16.273250579833984
    10. ' int' → logprob: -17.148250579833984

Token 241: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0046653226017951965
    2. '=' → logprob: -5.379665374755859
    3. ',' → logprob: -10.25466537475586
    4. '=int' → logprob: -11.87966537475586
    5. ' =
' → logprob: -13.37966537475586
    6. ')' → logprob: -14.50466537475586
    7. ' ' → logprob: -14.62966537475586
    8. '=input' → logprob: -15.87966537475586
    9. ' ,' → logprob: -16.12966537475586
    10. '.' → logprob: -16.25466537475586

Token 242: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.004080420359969139
    2. 'int' → logprob: -5.504080295562744
    3. ' ' → logprob: -13.379080772399902
    4. ' ' → logprob: -15.129080772399902
    5. '=int' → logprob: -15.754080772399902
    6. '[int' → logprob: -17.879079818725586
    7. '	int' → logprob: -18.754079818725586
    8. '(int' → logprob: -18.754079818725586
    9. ' in' → logprob: -19.129079818725586
    10. '<int' → logprob: -19.504079818725586

Token 243: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.039332855492830276
    2. '(' → logprob: -3.289332866668701
    3. 'input' → logprob: -6.664332866668701
    4. ' input' → logprob: -11.789332389831543
    5. '()' → logprob: -12.039332389831543
    6. '(
' → logprob: -14.664332389831543
    7. ' (' → logprob: -14.914332389831543
    8. '=input' → logprob: -15.539332389831543
    9. ' ' → logprob: -15.914332389831543
    10. '(

' → logprob: -16.41433334350586

Token 244: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.005263760685920715
    2. '()' → logprob: -5.255263805389404
    3. '().' → logprob: -10.880263328552246
    4. ' ())' → logprob: -12.505263328552246
    5. '(' → logprob: -12.755263328552246
    6. '();)' → logprob: -13.505263328552246
    7. '()>' → logprob: -13.880263328552246
    8. '()))' → logprob: -14.380263328552246
    9. '()]' → logprob: -15.130263328552246
    10. '());' → logprob: -15.380263328552246

Token 245: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.696553111076355
    2. '   ' → logprob: -0.696553111076355
    3. ' v' → logprob: -5.6965532302856445
    4. '    
' → logprob: -11.446553230285645
    5. '	v' → logprob: -11.821553230285645
    6. '  ' → logprob: -11.821553230285645
    7. '#' → logprob: -11.946553230285645
    8. ' ' → logprob: -13.071553230285645
    9. 'n' → logprob: -13.196553230285645
    10. '    ' → logprob: -13.321553230285645

Token 246: ' #' (ID: 1069)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.03864677995443344
    2. ' v' → logprob: -3.288646697998047
    3. '   ' → logprob: -7.538646697998047
    4. '#' (adapté à ' #') → logprob: -10.163646697998047
    5. ' #' → logprob: -11.163646697998047
    6. '	v' → logprob: -12.413646697998047
    7. ')' → logprob: -12.913646697998047
    8. '<|end|>' → logprob: -12.913646697998047
    9. ' ' → logprob: -13.038646697998047
    10. '  ' → logprob: -13.288646697998047

Token 247: ' Lire' (ID: 57624)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0025466508232057095
    2. '#' → logprob: -6.502546787261963
    3. ' v' → logprob: -6.877546787261963
    4. ' #' → logprob: -11.877546310424805
    5. 'values' → logprob: -12.752546310424805
    6. '   ' → logprob: -15.002546310424805
    7. 'V' → logprob: -15.377546310424805
    8. '	v' → logprob: -15.502546310424805
    9. '_v' → logprob: -15.752546310424805
    10. 'Lire' → logprob: -15.815046310424805

Token 248: ' la' (ID: 557)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.9933593273162842
    2. 'v' → logprob: -1.2433593273162842
    3. '()' → logprob: -1.4933593273162842
    4. ' la' → logprob: -2.618359327316284
    5. ' les' → logprob: -3.618359327316284
    6. '(' → logprob: -4.868359565734863
    7. 's' → logprob: -6.618359565734863
    8. ' )' → logprob: -6.993359565734863
    9. ' l' → logprob: -7.118359565734863
    10. ' ' → logprob: -7.243359565734863

Token 249: ' liste' (ID: 31719)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.15401959419250488
    2. ' v' → logprob: -2.154019594192505
    3. 'val' → logprob: -4.404019355773926
    4. 'liste' → logprob: -5.904019355773926
    5. ' liste' → logprob: -6.029019355773926
    6. 's' → logprob: -6.029019355773926
    7. 'list' → logprob: -6.404019355773926
    8. 'values' → logprob: -6.404019355773926
    9. ' list' → logprob: -6.904019355773926
    10. ' ' → logprob: -7.154019355773926

Token 250: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2958078384399414
    2. 'v' → logprob: -2.1708078384399414
    3. ' des' → logprob: -2.9208078384399414
    4. '_v' → logprob: -3.4208078384399414
    5. '()' → logprob: -3.7958078384399414
    6. 'des' → logprob: -4.420807838439941
    7. 's' → logprob: -4.920807838439941
    8. ' of' → logprob: -5.545807838439941
    9. ' v' → logprob: -5.920807838439941
    10. '(v' → logprob: -6.045807838439941

Token 251: ' valeurs' (ID: 73668)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.8589715361595154
    2. ' valeurs' → logprob: -0.8589715361595154
    3. 'val' → logprob: -2.10897159576416
    4. ' v' → logprob: -3.85897159576416
    5. 'values' → logprob: -4.98397159576416
    6. ' values' → logprob: -6.23397159576416
    7. 'vals' → logprob: -7.23397159576416
    8. ' val' → logprob: -8.23397159576416
    9. 'valu' → logprob: -8.98397159576416
    10. ' gains' → logprob: -9.35897159576416

Token 252: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.6339113712310791
    2. 'v' → logprob: -0.7589113712310791
    3. '(' → logprob: -7.3839111328125
    4. '(v' → logprob: -7.5089111328125
    5. '_v' → logprob: -9.2589111328125
    6. '()' → logprob: -11.3839111328125
    7. '	v' → logprob: -11.5089111328125
    8. ' =' → logprob: -11.7589111328125
    9. 'values' → logprob: -12.8839111328125
    10. ' ' → logprob: -13.0089111328125

Token 253: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02652275376021862
    2. '=' → logprob: -3.651522636413574
    3. 'v' → logprob: -8.651522636413574
    4. ')' → logprob: -11.276522636413574
    5. '(' → logprob: -11.526522636413574
    6. '()' → logprob: -11.526522636413574
    7. ' v' → logprob: -12.401522636413574
    8. ' ' → logprob: -12.401522636413574
    9. 's' → logprob: -13.026522636413574
    10. ',' → logprob: -13.776522636413574

Token 254: ' sépar' (ID: 97160)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.22545525431632996
    2. 'v' → logprob: -1.6004552841186523
    3. ' ' → logprob: -11.100455284118652
    4. '	v' → logprob: -11.475455284118652
    5. ' ' → logprob: -12.725455284118652
    6. '_v' → logprob: -13.100455284118652
    7. ' =' → logprob: -13.600455284118652
    8. '*v' → logprob: -13.600455284118652
    9. ' 
' → logprob: -13.850455284118652
    10. 's' → logprob: -13.850455284118652

Token 255: 'ées' (ID: 5161)
  Prédit: 'ées'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ées' → logprob: -0.03163844719529152
    2. 'ée' → logprob: -3.9066383838653564
    3. 'é' → logprob: -5.0316386222839355
    4. 'és' → logprob: -6.2816386222839355
    5. ' par' → logprob: -6.5316386222839355
    6. 'e' → logprob: -7.6566386222839355
    7. 'es' → logprob: -7.7816386222839355
    8. 'par' → logprob: -9.531638145446777
    9. 'ees' → logprob: -9.906638145446777
    10. ' by' → logprob: -10.281638145446777

Token 256: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.22275933623313904
    2. '()' → logprob: -1.7227593660354614
    3. 'par' → logprob: -4.097759246826172
    4. ' by' → logprob: -5.722759246826172
    5. 'by' → logprob: -7.097759246826172
    6. '(' → logprob: -9.472759246826172
    7. ')' → logprob: -9.972759246826172
    8. '=' → logprob: -10.597759246826172
    9. '_par' → logprob: -10.597759246826172
    10. 'e' → logprob: -10.597759246826172

Token 257: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4973829388618469
    2. ' espaces' → logprob: -1.4973828792572021
    3. 'spaces' → logprob: -2.747382879257202
    4. 'space' → logprob: -3.497382879257202
    5. ' spaces' → logprob: -3.872382879257202
    6. 'des' → logprob: -3.872382879257202
    7. ' espace' → logprob: -4.622383117675781
    8. ' espacios' → logprob: -4.997383117675781
    9. ' un' → logprob: -5.372383117675781
    10. 'es' → logprob: -5.872383117675781

Token 258: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.10291313380002975
    2. 'esp' → logprob: -2.4779131412506104
    3. 'spaces' → logprob: -4.352912902832031
    4. ' spaces' → logprob: -8.102912902832031
    5. 'es' → logprob: -8.102912902832031
    6. 'space' → logprob: -8.852912902832031
    7. ' espacios' → logprob: -9.477912902832031
    8. ''esp' → logprob: -9.602912902832031
    9. 'paces' → logprob: -10.102912902832031
    10. ' espace' → logprob: -10.602912902832031

Token 259: ' et' (ID: 859)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.026999415829777718
    2. ' v' → logprob: -3.6519994735717773
    3. ')' → logprob: -8.026999473571777
    4. ' =' → logprob: -8.401999473571777
    5. 'n' → logprob: -10.151999473571777
    6. ' )' → logprob: -10.651999473571777
    7. '=' → logprob: -10.901999473571777
    8. 's' → logprob: -11.026999473571777
    9. ' ' → logprob: -11.901999473571777
    10. '<|end|>' → logprob: -11.901999473571777

Token 260: ' convert' (ID: 8452)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.7650870680809021
    2. ' convert' → logprob: -0.8900870680809021
    3. 'split' → logprob: -2.515087127685547
    4. ' split' → logprob: -4.015087127685547
    5. 'map' → logprob: -5.265087127685547
    6. ' map' → logprob: -5.390087127685547
    7. ' convertir' → logprob: -5.890087127685547
    8. 'strip' → logprob: -6.640087127685547
    9. 'rstrip' → logprob: -6.640087127685547
    10. ' converted' → logprob: -6.890087127685547

Token 261: 'ies' (ID: 566)
  Prédit: 'ies'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ies' → logprob: -0.01983320713043213
    2. 'is' → logprob: -5.019833087921143
    3. 'ir' → logprob: -5.019833087921143
    4. 'ie' → logprob: -5.769833087921143
    5. 'i' → logprob: -6.519833087921143
    6. 'issant' → logprob: -6.769833087921143
    7. 'ant' → logprob: -8.2698335647583
    8. 'it' → logprob: -8.7698335647583
    9. 'list' → logprob: -9.8948335647583
    10. '=' → logprob: -10.1448335647583

Token 262: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3488083481788635
    2. '(' → logprob: -1.3488082885742188
    3. ' en' → logprob: -4.348808288574219
    4. '=list' → logprob: -4.848808288574219
    5. '(list' → logprob: -6.098808288574219
    6. 'list' → logprob: -6.473808288574219
    7. '_list' → logprob: -6.723808288574219
    8. ' list' → logprob: -6.723808288574219
    9. ' into' → logprob: -6.848808288574219
    10. '=' → logprob: -6.848808288574219

Token 263: ' ent' (ID: 1121)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.3654091358184814
    2. 'ints' → logprob: -1.3654091358184814
    3. ' integers' → logprob: -1.4904091358184814
    4. ' list' → logprob: -1.8654091358184814
    5. 'int' → logprob: -2.8654091358184814
    6. 'inte' → logprob: -3.8654091358184814
    7. ' int' → logprob: -4.365408897399902
    8. ' liste' → logprob: -5.115408897399902
    9. 'ent' → logprob: -5.615408897399902
    10. ' ints' → logprob: -5.740408897399902

Token 264: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.028567085042595863
    2. 't' → logprob: -3.65356707572937
    3. 'ières' → logprob: -6.528567314147949
    4. 'ier' → logprob: -8.27856731414795
    5. 'tiers' → logprob: -9.02856731414795
    6. 'rée' → logprob: -9.15356731414795
    7. 'tries' → logprob: -9.52856731414795
    8. 'r' → logprob: -9.77856731414795
    9. 'ties' → logprob: -10.77856731414795
    10. 'rès' → logprob: -11.02856731414795

Token 265: '
' (ID: 198)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.016255585476756096
    2. ')' → logprob: -4.7662553787231445
    3. ' v' → logprob: -5.0162553787231445
    4. ' =' → logprob: -7.6412553787231445
    5. '
' → logprob: -9.016255378723145
    6. ')
' → logprob: -9.641255378723145
    7. ')v' → logprob: -9.641255378723145
    8. '   ' → logprob: -9.891255378723145
    9. '=' → logprob: -9.891255378723145
    10. '(v' → logprob: -10.516255378723145

Token 266: '   ' (ID: 271)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.012643965892493725
    2. ' v' → logprob: -4.387643814086914
    3. ')' → logprob: -9.762643814086914
    4. '   ' → logprob: -9.887643814086914
    5. ' =' → logprob: -11.637643814086914
    6. '_v' → logprob: -12.762643814086914
    7. ')v' → logprob: -12.762643814086914
    8. '	v' → logprob: -12.887643814086914
    9. ',v' → logprob: -13.387643814086914
    10. 'n' → logprob: -13.512643814086914

Token 267: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.25192928314208984
    2. ' v' → logprob: -1.5019292831420898
    3. '	v' → logprob: -15.62692928314209
    4. 'list' → logprob: -18.251930236816406
    5. 'values' → logprob: -18.876930236816406
    6. '   ' → logprob: -18.876930236816406
    7. 'V' → logprob: -19.126930236816406
    8. '_v' → logprob: -19.376930236816406
    9. '[v' → logprob: -20.126930236816406
    10. ')v' → logprob: -20.126930236816406

Token 268: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889033854007721
    2. '=' → logprob: -2.578890323638916
    3. ' =[' → logprob: -15.703890800476074
    4. '=list' → logprob: -15.953890800476074
    5. ' ' → logprob: -16.328889846801758
    6. ',' → logprob: -16.953889846801758
    7. 's' → logprob: -17.203889846801758
    8. ')' → logprob: -17.453889846801758
    9. '.' → logprob: -17.578889846801758
    10. '=input' → logprob: -17.703889846801758

Token 269: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0031777136027812958
    2. ' list' → logprob: -5.753177642822266
    3. '[list' → logprob: -19.128177642822266
    4. '=list' → logprob: -20.378177642822266
    5. 'List' → logprob: -21.378177642822266
    6. '	list' → logprob: -21.503177642822266
    7. '[' → logprob: -21.628177642822266
    8. '(list' → logprob: -23.003177642822266
    9. 'lis' → logprob: -24.128177642822266
    10. '.list' → logprob: -24.128177642822266

Token 270: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.038068462163209915
    2. '(' → logprob: -3.2880685329437256
    3. '(int' → logprob: -11.038068771362305
    4. '(input' → logprob: -11.663068771362305
    5. '()' → logprob: -13.788068771362305
    6. 'map' → logprob: -14.288068771362305
    7. ' (' → logprob: -15.413068771362305
    8. '(range' → logprob: -16.038068771362305
    9. ' map' → logprob: -16.538068771362305
    10. '(
' → logprob: -16.663068771362305

Token 271: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0059443251229822636
    2. '(' → logprob: -5.13094425201416
    3. 'int' → logprob: -11.38094425201416
    4. '(
' → logprob: -13.00594425201416
    5. '<int' → logprob: -14.25594425201416
    6. ' (' → logprob: -15.00594425201416
    7. ' int' → logprob: -15.50594425201416
    8. '[int' → logprob: -15.63094425201416
    9. ')' → logprob: -15.75594425201416
    10. '(input' → logprob: -15.75594425201416

Token 272: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03602529317140579
    2. '(' → logprob: -4.036025524139404
    3. 'input' → logprob: -4.286025524139404
    4. ',input' → logprob: -5.661025524139404
    5. ',' → logprob: -8.536025047302246
    6. ' input' → logprob: -8.911025047302246
    7. ' (' → logprob: -9.286025047302246
    8. ')' → logprob: -10.786025047302246
    9. '(
' → logprob: -11.536025047302246
    10. '=input' → logprob: -11.786025047302246

Token 273: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005233882926404476
    2. ' input' → logprob: -5.2552337646484375
    3. '(input' → logprob: -17.005233764648438
    4. ',input' → logprob: -19.005233764648438
    5. '_input' → logprob: -19.505233764648438
    6. '=input' → logprob: -19.880233764648438
    7. '	input' → logprob: -20.130233764648438
    8. '   ' → logprob: -20.130233764648438
    9. '<input' → logprob: -20.255233764648438
    10. 'Input' → logprob: -20.880233764648438

Token 274: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.5716304410016164e-05
    2. '()' → logprob: -10.250035285949707
    3. ' ().' → logprob: -16.000036239624023
    4. '.split' → logprob: -16.500036239624023
    5. '()
' → logprob: -17.375036239624023
    6. '(' → logprob: -17.750036239624023
    7. ' .' → logprob: -18.875036239624023
    8. 'split' → logprob: -18.875036239624023
    9. '.' → logprob: -19.000036239624023
    10. '("").' → logprob: -20.000036239624023

Token 275: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.627176768844947e-05
    2. 'strip' → logprob: -9.250096321105957
    3. ' split' → logprob: -16.00009536743164
    4. 'rstrip' → logprob: -17.12509536743164
    5. '(split' → logprob: -18.37509536743164
    6. '.split' → logprob: -19.75009536743164
    7. 'spl' → logprob: -21.25009536743164
    8. 'str' → logprob: -22.87509536743164
    9. 'read' → logprob: -23.00009536743164
    10. '_split' → logprob: -23.37509536743164

Token 276: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.05158846825361252
    2. '()' → logprob: -3.051588535308838
    3. '())' → logprob: -5.926588535308838
    4. '))' → logprob: -8.42658805847168
    5. '(' → logprob: -9.42658805847168
    6. '()));' → logprob: -11.30158805847168
    7. '()))
' → logprob: -11.67658805847168
    8. '())))' → logprob: -13.05158805847168
    9. ')' → logprob: -13.92658805847168
    10. '().' → logprob: -14.05158805847168

Token 277: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005996459163725376
    2. '   ' → logprob: -5.380996227264404
    3. '
' → logprob: -7.130996227264404
    4. ' c' → logprob: -7.630996227264404
    5. '	c' → logprob: -10.130996704101562
    6. '    
' → logprob: -10.630996704101562
    7. ' 
' → logprob: -11.255996704101562
    8. '<|end|>' → logprob: -12.005996704101562
    9. '  
' → logprob: -13.380996704101562
    10. ' ' → logprob: -13.630996704101562

Token 278: ' #' (ID: 1069)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002612878568470478
    2. '   ' → logprob: -6.002613067626953
    3. ' c' → logprob: -9.002613067626953
    4. '	c' → logprob: -12.127613067626953
    5. '
' → logprob: -13.002613067626953
    6. ' ' → logprob: -13.127613067626953
    7. '  ' → logprob: -13.127613067626953
    8. '    
' → logprob: -13.877613067626953
    9. '#' (adapté à ' #') → logprob: -14.752613067626953
    10. ' 
' → logprob: -14.752613067626953

Token 279: ' Lire' (ID: 57624)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -8.77627644513268e-06
    2. ' c' → logprob: -12.125008583068848
    3. '#' → logprob: -13.125008583068848
    4. '   ' → logprob: -13.625008583068848
    5. '
' → logprob: -17.250009536743164
    6. '	c' → logprob: -18.125009536743164
    7. ' ' → logprob: -18.500009536743164
    8. '  ' → logprob: -19.000009536743164
    9. '    
' → logprob: -19.375009536743164
    10. '```' → logprob: -19.625009536743164

Token 280: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.24974499642848969
    2. 'c' → logprob: -2.1247448921203613
    3. '()' → logprob: -2.7497448921203613
    4. 'la' → logprob: -4.124744892120361
    5. '(' → logprob: -4.874744892120361
    6. 'the' → logprob: -5.124744892120361
    7. 'l' → logprob: -6.249744892120361
    8. ' c' → logprob: -6.749744892120361
    9. '<|end|>' → logprob: -6.749744892120361
    10. 'les' → logprob: -7.124744892120361

Token 281: ' liste' (ID: 31719)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10342846810817719
    2. 'list' → logprob: -2.353428363800049
    3. ' list' → logprob: -5.978428363800049
    4. ' c' → logprob: -7.853428363800049
    5. 'liste' → logprob: -8.478428840637207
    6. ')' → logprob: -11.103428840637207
    7. 'C' → logprob: -11.228428840637207
    8. 's' → logprob: -11.603428840637207
    9. ')c' → logprob: -12.103428840637207
    10. ' liste' → logprob: -12.103428840637207

Token 282: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.26702725887298584
    2. 'c' → logprob: -2.1420273780822754
    3. '(c' → logprob: -2.6420273780822754
    4. 'des' → logprob: -4.017027378082275
    5. ' des' → logprob: -4.642027378082275
    6. ' of' → logprob: -5.142027378082275
    7. ' c' → logprob: -5.392027378082275
    8. ' (' → logprob: -5.892027378082275
    9. 'of' → logprob: -6.142027378082275
    10. '(map' → logprob: -6.642027378082275

Token 283: ' valeurs' (ID: 73668)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003935679793357849
    2. 'int' → logprob: -6.378935813903809
    3. ' c' → logprob: -6.628935813903809
    4. 'list' → logprob: -7.378935813903809
    5. ' list' → logprob: -9.503935813903809
    6. 'ints' → logprob: -9.628935813903809
    7. 'C' → logprob: -9.753935813903809
    8. ' integers' → logprob: -10.378935813903809
    9. 'inte' → logprob: -11.128935813903809
    10. '(int' → logprob: -11.503935813903809

Token 284: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1278499960899353
    2. ' c' → logprob: -2.12785005569458
    3. '(' → logprob: -7.25285005569458
    4. '(c' → logprob: -8.752849578857422
    5. ' (' → logprob: -11.627849578857422
    6. '   ' → logprob: -11.752849578857422
    7. '_c' → logprob: -11.877849578857422
    8. 's' → logprob: -12.002849578857422
    9. '	c' → logprob: -12.127849578857422
    10. ' of' → logprob: -12.627849578857422

Token 285: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.229197159409523
    2. '=' → logprob: -1.7291971445083618
    3. ' =' → logprob: -3.6041972637176514
    4. ' ,' → logprob: -8.72919750213623
    5. 's' → logprob: -11.35419750213623
    6. ' ' → logprob: -12.22919750213623
    7. 'c' → logprob: -12.60419750213623
    8. '.' → logprob: -13.97919750213623
    9. ')' → logprob: -14.10419750213623
    10. 'v' → logprob: -14.22919750213623

Token 286: ' sépar' (ID: 97160)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.3132633566856384
    2. 'list' → logprob: -1.3132634162902832
    3. '=list' → logprob: -13.438262939453125
    4. ' ' → logprob: -16.563262939453125
    5. ' =' → logprob: -17.063262939453125
    6. '=' → logprob: -17.063262939453125
    7. 'c' → logprob: -17.563262939453125
    8. ' c' → logprob: -17.563262939453125
    9. ' ' → logprob: -18.563262939453125
    10. '   ' → logprob: -18.688262939453125

Token 287: 'ées' (ID: 5161)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.3249177038669586
    2. ' par' → logprob: -1.4499176740646362
    3. 'es' → logprob: -4.449917793273926
    4. 'by' → logprob: -4.449917793273926
    5. 'ies' → logprob: -5.199917793273926
    6. ' by' → logprob: -6.324917793273926
    7. 'é' → logprob: -6.324917793273926
    8. 'ées' → logprob: -6.449917793273926
    9. 'pas' → logprob: -6.449917793273926
    10. 'ie' → logprob: -6.949917793273926

Token 288: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.5922503471374512
    2. 'par' → logprob: -0.9672503471374512
    3. 'by' → logprob: -3.217250347137451
    4. ' by' → logprob: -3.717250347137451
    5. '()' → logprob: -6.967250347137451
    6. '(' → logprob: -7.467250347137451
    7. ')' → logprob: -7.967250347137451
    8. '<|end|>' → logprob: -8.09225082397461
    9. ' ' → logprob: -9.21725082397461
    10. '(int' → logprob: -10.46725082397461

Token 289: ' des' (ID: 731)
  Prédit: 'spaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'spaces' → logprob: -0.9090616703033447
    2. 'es' → logprob: -1.9090616703033447
    3. 'str' → logprob: -1.9090616703033447
    4. 'int' → logprob: -2.2840616703033447
    5. ' spaces' → logprob: -2.5340616703033447
    6. 'input' → logprob: -3.4090616703033447
    7. ' espaces' → logprob: -3.5340616703033447
    8. 's' → logprob: -3.5340616703033447
    9. 'space' → logprob: -5.284061431884766
    10. 'des' → logprob: -5.284061431884766

Token 290: ' espaces' (ID: 98361)
  Prédit: 'esp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'esp' → logprob: -1.0401610136032104
    2. ' espaces' → logprob: -1.0401610136032104
    3. 'spaces' → logprob: -1.9151610136032104
    4. 'es' → logprob: -2.0401611328125
    5. ' spaces' → logprob: -4.6651611328125
    6. 'input' → logprob: -5.7901611328125
    7. ' input' → logprob: -6.4151611328125
    8. 'space' → logprob: -7.4151611328125
    9. 'int' → logprob: -7.5401611328125
    10. ' espace' → logprob: -9.0401611328125

Token 291: ' et' (ID: 859)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.9699703454971313
    2. ' et' → logprob: -1.3449703454971313
    3. ' and' → logprob: -1.4699703454971313
    4. 'and' → logprob: -2.469970226287842
    5. 'input' → logprob: -4.094970226287842
    6. '=' → logprob: -4.344970226287842
    7. ',' → logprob: -5.219970226287842
    8. ' =' → logprob: -6.094970226287842
    9. '=input' → logprob: -6.344970226287842
    10. 'list' → logprob: -6.469970226287842

Token 292: ' convert' (ID: 8452)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.5759953856468201
    2. 'list' → logprob: -0.8259953856468201
    3. '=list' → logprob: -10.450995445251465
    4. 'split' → logprob: -10.950995445251465
    5. 'input' → logprob: -13.075995445251465
    6. 'int' → logprob: -13.575995445251465
    7. 'map' → logprob: -13.950995445251465
    8. '(list' → logprob: -14.075995445251465
    9. 'space' → logprob: -14.075995445251465
    10. ' map' → logprob: -14.200995445251465

Token 293: 'ies' (ID: 566)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.14112603664398193
    2. 'int' → logprob: -2.6411261558532715
    3. 'és' → logprob: -4.2661261558532715
    4. 'es' → logprob: -4.8911261558532715
    5. 'é' → logprob: -4.8911261558532715
    6. '(int' → logprob: -5.0161261558532715
    7. 'ées' → logprob: -5.5161261558532715
    8. 'ter' → logprob: -5.7661261558532715
    9. 'e' → logprob: -6.3911261558532715
    10. 't' → logprob: -6.5161261558532715

Token 294: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.014239664189517498
    2. 'in' → logprob: -5.38923978805542
    3. '(int' → logprob: -5.63923978805542
    4. ' in' → logprob: -6.13923978805542
    5. 'en' → logprob: -6.26423978805542
    6. 'int' → logprob: -6.63923978805542
    7. '=int' → logprob: -8.389239311218262
    8. '<int' → logprob: -9.639239311218262
    9. '(en' → logprob: -9.639239311218262
    10. '(' → logprob: -10.264239311218262

Token 295: ' ent' (ID: 1121)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.037527915090322495
    2. 'list' → logprob: -3.7875277996063232
    3. ' list' → logprob: -4.662528038024902
    4. ' int' → logprob: -5.412528038024902
    5. 'map' → logprob: -8.662528038024902
    6. ' map' → logprob: -9.412528038024902
    7. '(int' → logprob: -11.537528038024902
    8. '[int' → logprob: -12.037528038024902
    9. 'ints' → logprob: -12.537528038024902
    10. 'inte' → logprob: -13.287528038024902

Token 296: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -4.310693111619912e-05
    2. 'ier' → logprob: -10.625042915344238
    3. 'ers' → logprob: -11.625042915344238
    4. 'ières' → logprob: -13.000042915344238
    5. 'gers' → logprob: -13.125042915344238
    6. 't' → logprob: -13.625042915344238
    7. 'i' → logprob: -13.750042915344238
    8. 'ters' → logprob: -13.750042915344238
    9. 'er' → logprob: -14.500042915344238
    10. 'ires' → logprob: -15.000042915344238

Token 297: '
' (ID: 198)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.54756098985672
    2. '   ' → logprob: -1.2975609302520752
    3. '()' → logprob: -2.422560930252075
    4. 'v' → logprob: -3.547560930252075
    5. ' c' → logprob: -4.297561168670654
    6. ')' → logprob: -4.922561168670654
    7. '(c' → logprob: -5.922561168670654
    8. '=' → logprob: -6.172561168670654
    9. '(' → logprob: -6.547561168670654
    10. '()
' → logprob: -7.047561168670654

Token 298: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.012092460878193378
    2. '   ' → logprob: -4.512092590332031
    3. ' c' → logprob: -6.887092590332031
    4. '	c' → logprob: -10.762092590332031
    5. ')c' → logprob: -13.887092590332031
    6. ' ' → logprob: -14.387092590332031
    7. '  ' → logprob: -15.137092590332031
    8. ')' → logprob: -16.38709259033203
    9. '_c' → logprob: -16.63709259033203
    10. '       ' → logprob: -16.63709259033203

Token 299: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.0005535095697268844
    2. ' c' → logprob: -7.500553607940674
    3. '   ' → logprob: -14.375553131103516
    4. '	c' → logprob: -18.375553131103516
    5. ' ' → logprob: -21.125553131103516
    6. '_c' → logprob: -21.500553131103516
    7. '
' → logprob: -21.625553131103516
    8. 'C' → logprob: -21.750553131103516
    9. '  ' → logprob: -21.875553131103516
    10. '       ' → logprob: -21.875553131103516

Token 300: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326204538345337
    2. '=' → logprob: -1.3132619857788086
    3. ')' → logprob: -16.063262939453125
    4. ' ' → logprob: -16.563262939453125
    5. '=list' → logprob: -16.938262939453125
    6. '＝' → logprob: -17.688262939453125
    7. '.' → logprob: -17.688262939453125
    8. ' =
' → logprob: -18.063262939453125
    9. '=input' → logprob: -18.188262939453125
    10. '=
' → logprob: -18.563262939453125

Token 301: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3868710398674011
    2. ' list' → logprob: -1.136871099472046
    3. 'List' → logprob: -19.136871337890625
    4. '=list' → logprob: -21.261871337890625
    5. '	list' → logprob: -21.511871337890625
    6. '(list' → logprob: -22.136871337890625
    7. '_list' → logprob: -23.261871337890625
    8. '.list' → logprob: -23.511871337890625
    9. '   ' → logprob: -24.261871337890625
    10. 'l' → logprob: -24.386871337890625

Token 302: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -6.153795766294934e-06
    2. 'map' → logprob: -12.375005722045898
    3. '(' → logprob: -13.625005722045898
    4. ' map' → logprob: -15.625005722045898
    5. '(list' → logprob: -16.0000057220459
    6. '.map' → logprob: -16.0000057220459
    7. '(int' → logprob: -16.6250057220459
    8. ' (' → logprob: -17.1250057220459
    9. ',map' → logprob: -18.6250057220459
    10. '	map' → logprob: -18.8750057220459

Token 303: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -6.511406809295295e-06
    2. 'int' → logprob: -12.875006675720215
    3. '<int' → logprob: -13.125006675720215
    4. '(' → logprob: -13.500006675720215
    5. '=int' → logprob: -15.625006675720215
    6. '[int' → logprob: -15.750006675720215
    7. ',int' → logprob: -16.3750057220459
    8. ' int' → logprob: -17.3750057220459
    9. ' (' → logprob: -17.5000057220459
    10. ']int' → logprob: -18.0000057220459

Token 304: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6639761328697205
    2. ',' → logprob: -0.7889761328697205
    3. ',int' → logprob: -4.163976192474365
    4. '(input' → logprob: -4.788976192474365
    5. '(' → logprob: -5.163976192474365
    6. ',input' → logprob: -6.788976192474365
    7. ' ,' → logprob: -9.163975715637207
    8. 'int' → logprob: -10.663975715637207
    9. '<int' → logprob: -11.413975715637207
    10. ' (' → logprob: -11.413975715637207

Token 305: ' input' (ID: 3422)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006791274528950453
    2. '(int' → logprob: -5.006791114807129
    3. ' int' → logprob: -10.131791114807129
    4. '<int' → logprob: -11.381791114807129
    5. 'input' → logprob: -11.506791114807129
    6. '[int' → logprob: -11.506791114807129
    7. '=int' → logprob: -12.756791114807129
    8. ']int' → logprob: -14.131791114807129
    9. ':int' → logprob: -14.631791114807129
    10. '(input' → logprob: -15.006791114807129

Token 306: '().' (ID: 1454)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.08924456685781479
    2. '(' → logprob: -3.0892446041107178
    3. '().' → logprob: -3.4642446041107178
    4. '(input' → logprob: -5.339244365692139
    5. ',' → logprob: -6.464244365692139
    6. ',int' → logprob: -6.964244365692139
    7. ' (' → logprob: -7.464244365692139
    8. '(.' → logprob: -8.964244842529297
    9. '()' → logprob: -9.589244842529297
    10. ' .' → logprob: -9.714244842529297

Token 307: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -9.088346359931165e-07
    2. '(split' → logprob: -14.500000953674316
    3. ' split' → logprob: -15.500000953674316
    4. ')' → logprob: -16.375
    5. 'strip' → logprob: -17.375
    6. '.split' → logprob: -17.625
    7. 'input' → logprob: -18.875
    8. '()' → logprob: -19.875
    9. 'spl' → logprob: -19.875
    10. '_split' → logprob: -20.125

Token 308: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.014692375436425209
    2. '()' → logprob: -4.639692306518555
    3. '))' → logprob: -5.389692306518555
    4. '())' → logprob: -8.264692306518555
    5. '()))
' → logprob: -9.639692306518555
    6. '(' → logprob: -10.514692306518555
    7. '()));' → logprob: -12.014692306518555
    8. '())).' → logprob: -13.389692306518555
    9. '()))

' → logprob: -13.764692306518555
    10. '()))
' → logprob: -14.014692306518555

Token 309: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03198279067873955
    2. 'result' → logprob: -3.531982898712158
    3. '
' → logprob: -6.656982898712158
    4. 'total' → logprob: -7.156982898712158
    5. ' print' → logprob: -9.406982421875
    6. 'gain' → logprob: -10.031982421875
    7. '   ' → logprob: -11.781982421875
    8. '    
' → logprob: -12.156982421875
    9. '#' → logprob: -12.531982421875
    10. ' result' → logprob: -13.031982421875

Token 310: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003712085890583694
    2. 'result' → logprob: -8.000370979309082
    3. 'total' → logprob: -10.500370979309082
    4. ' print' → logprob: -11.875370979309082
    5. '   ' → logprob: -14.500370979309082
    6. '
' → logprob: -14.750370979309082
    7. 'gain' → logprob: -15.750370979309082
    8. '#' (adapté à ' #') → logprob: -16.2503719329834
    9. '```' → logprob: -17.0003719329834
    10. 'pr' → logprob: -17.2503719329834

Token 311: ' Calcul' (ID: 57243)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00956104975193739
    2. 'result' → logprob: -4.759561061859131
    3. 'total' → logprob: -7.009561061859131
    4. ' print' → logprob: -10.259560585021973
    5. 'gain' → logprob: -12.134560585021973
    6. '#' → logprob: -13.884560585021973
    7. ' result' → logprob: -14.259560585021973
    8. ' total' → logprob: -15.634560585021973
    9. '
' → logprob: -15.759560585021973
    10. 'ans' → logprob: -15.884560585021973

Token 312: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0418027900159359
    2. 'ate' → logprob: -3.2918028831481934
    3. 'total' → logprob: -6.416802883148193
    4. 'print' → logprob: -6.916802883148193
    5. '   ' → logprob: -7.166802883148193
    6. '_total' → logprob: -8.416802406311035
    7. 'result' → logprob: -9.416802406311035
    8. 'ater' → logprob: -11.041802406311035
    9. ' total' → logprob: -12.166802406311035
    10. 'r' → logprob: -12.666802406311035

Token 313: ' le' (ID: 505)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.3334634304046631
    2. 'result' → logprob: -1.458463430404663
    3. 'print' → logprob: -3.083463430404663
    4. 'le' → logprob: -6.333463668823242
    5. ' total' → logprob: -6.708463668823242
    6. '   ' → logprob: -6.708463668823242
    7. ' result' → logprob: -8.083463668823242
    8. '_total' → logprob: -8.208463668823242
    9. ' and' → logprob: -10.208463668823242
    10. 'ans' → logprob: -10.208463668823242

Token 314: ' gain' (ID: 11621)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.11367727816104889
    2. 'result' → logprob: -2.8636772632598877
    3. 'print' → logprob: -3.1136772632598877
    4. 'gain' → logprob: -5.488677501678467
    5. ' total' → logprob: -6.363677501678467
    6. ' gain' → logprob: -9.613677024841309
    7. ' print' → logprob: -11.113677024841309
    8. ' result' → logprob: -11.113677024841309
    9. 'resultado' → logprob: -13.613677024841309
    10. '_total' → logprob: -14.113677024841309

Token 315: ' total' (ID: 3609)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.04057791084051132
    2. 'total' → logprob: -3.6655778884887695
    3. '_' → logprob: -4.2905778884887695
    4. 'result' → logprob: -8.79057788848877
    5. '_result' → logprob: -8.91557788848877
    6. ' =' → logprob: -9.54057788848877
    7. ' total' → logprob: -9.66557788848877
    8. '   ' → logprob: -11.29057788848877
    9. '_gain' → logprob: -11.29057788848877
    10. '=' → logprob: -11.66557788848877

Token 316: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6980803608894348
    2. 'total' → logprob: -0.8230803608894348
    3. 'result' → logprob: -2.94808030128479
    4. ' print' → logprob: -5.698080539703369
    5. 'gain' → logprob: -5.698080539703369
    6. ' total' → logprob: -5.823080539703369
    7. '   ' → logprob: -7.323080539703369
    8. ' result' → logprob: -9.073080062866211
    9. '_total' → logprob: -9.323080062866211
    10. ' gain' → logprob: -9.448080062866211

Token 317: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16105076670646667
    2. 'calculate' → logprob: -1.911050796508789
    3. 'r' → logprob: -7.911050796508789
    4. '   ' → logprob: -8.661050796508789
    5. 'alculate' → logprob: -9.786050796508789
    6. ' calculate' → logprob: -9.911050796508789
    7. 'aff' → logprob: -10.411050796508789
    8. ' print' → logprob: -10.661050796508789
    9. 'calcul' → logprob: -10.661050796508789
    10. 'prendre' → logprob: -11.286050796508789

Token 318: ''aide' (ID: 75684)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0595988035202026
    2. ''aide' → logprob: -1.9345988035202026
    3. '=' → logprob: -2.059598922729492
    4. 'print' → logprob: -3.559598922729492
    5. '       ' → logprob: -3.934598922729492
    6. 'r' → logprob: -3.934598922729492
    7. 'otal' → logprob: -4.434598922729492
    8. 'og' → logprob: -4.434598922729492
    9. ' =' → logprob: -4.434598922729492
    10. 'ot' → logprob: -4.559598922729492

Token 319: ' de' (ID: 334)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.08438992500305176
    2. ' calculate' → logprob: -3.7093899250030518
    3. 'print' → logprob: -3.8343899250030518
    4. ' de' → logprob: -4.209389686584473
    5. '(' → logprob: -4.959389686584473
    6. 'de' → logprob: -5.959389686584473
    7. ' of' → logprob: -6.084389686584473
    8. 'du' → logprob: -6.459389686584473
    9. '   ' → logprob: -6.834389686584473
    10. '_' → logprob: -7.084389686584473

Token 320: ' la' (ID: 557)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.0003360582049936056
    2. ' calculate' → logprob: -8.000335693359375
    3. 'print' → logprob: -14.250335693359375
    4. 'alculate' → logprob: -18.250335693359375
    5. '.calculate' → logprob: -18.875335693359375
    6. '
' → logprob: -19.750335693359375
    7. 'Calculate' → logprob: -20.125335693359375
    8. 'calcul' → logprob: -20.125335693359375
    9. 'calc' → logprob: -20.250335693359375
    10. 'compute' → logprob: -21.000335693359375

Token 321: ' fonction' (ID: 17610)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -3.6789137084269896e-05
    2. 'print' → logprob: -10.25003719329834
    3. ' calculate' → logprob: -13.50003719329834
    4. '.calculate' → logprob: -18.125036239624023
    5. 'alculate' → logprob: -19.375036239624023
    6. 'Calculate' → logprob: -20.750036239624023
    7. '#' → logprob: -20.875036239624023
    8. 'def' → logprob: -21.375036239624023
    9. '```' → logprob: -21.500036239624023
    10. '
' → logprob: -21.500036239624023

Token 322: ' dédiée' (ID: 183679)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.6111500263214111
    2. 'total' → logprob: -1.1111500263214111
    3. 'print' → logprob: -3.236150026321411
    4. ' total' → logprob: -3.361150026321411
    5. ' calculate' → logprob: -3.486150026321411
    6. 'result' → logprob: -3.986150026321411
    7. ' print' → logprob: -6.486149787902832
    8. '(total' → logprob: -6.986149787902832
    9. '_total' → logprob: -7.111149787902832
    10. ' result' → logprob: -7.486149787902832

Token 323: '
' (ID: 198)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.0123860836029053
    2. 'total' → logprob: -1.0123860836029053
    3. 'print' → logprob: -1.7623860836029053
    4. '   ' → logprob: -2.3873860836029053
    5. ' total' → logprob: -5.512386322021484
    6. ' print' → logprob: -6.387386322021484
    7. ' result' → logprob: -6.637386322021484
    8. '
' → logprob: -6.887386322021484
    9. 'gain' → logprob: -7.137386322021484
    10. 'answer' → logprob: -7.762386322021484

Token 324: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01824324205517769
    2. 'total' → logprob: -4.393243312835693
    3. 'result' → logprob: -5.643243312835693
    4. ' print' → logprob: -6.268243312835693
    5. ' total' → logprob: -9.143242835998535
    6. 'gain' → logprob: -9.143242835998535
    7. '   ' → logprob: -9.893242835998535
    8. ' result' → logprob: -11.768242835998535
    9. ' gain' → logprob: -12.268242835998535
    10. '
' → logprob: -14.143242835998535

Token 325: ' result' (ID: 1534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1839398592710495
    2. 'total' → logprob: -2.1839399337768555
    3. 'result' (adapté à ' result') → logprob: -3.5589399337768555
    4. ' print' → logprob: -3.9339399337768555
    5. ' total' → logprob: -5.0589399337768555
    6. ' result' → logprob: -7.3089399337768555
    7. 'gain' → logprob: -8.308939933776855
    8. ' gain' → logprob: -9.558939933776855
    9. 'calculate' → logprob: -10.433939933776855
    10. 'answer' → logprob: -12.183939933776855

Token 326: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14269189536571503
    2. '=' → logprob: -2.0176918506622314
    3. ')' → logprob: -11.642691612243652
    4. '_' → logprob: -12.017691612243652
    5. '   ' → logprob: -14.517691612243652
    6. '  ' → logprob: -14.892691612243652
    7. ' =
' → logprob: -15.142691612243652
    8. ' ' → logprob: -15.142691612243652
    9. 's' → logprob: -15.892691612243652
    10. ',' → logprob: -16.64269256591797

Token 327: ' calculate' (ID: 17950)
  Prédit: 'calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calculate' → logprob: -0.38687145709991455
    2. ' calculate' → logprob: -1.1368714570999146
    3. '.calculate' → logprob: -15.386871337890625
    4. 'alculate' → logprob: -16.136871337890625
    5. ' calcular' → logprob: -17.386871337890625
    6. 'calcul' → logprob: -17.511871337890625
    7. 'calc' → logprob: -18.011871337890625
    8. ' compute' → logprob: -18.136871337890625
    9. 'cal' → logprob: -18.261871337890625
    10. 'compute' → logprob: -18.386871337890625

Token 328: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: 0.0
    2. 'total' → logprob: -16.875
    3. '_' → logprob: -17.5
    4. '_TOTAL' → logprob: -20.25
    5. '_tot' → logprob: -20.375
    6. '_Total' → logprob: -20.375
    7. 'Total' → logprob: -21.625
    8. ' _' → logprob: -22.125
    9. '__' → logprob: -22.375
    10. '_final' → logprob: -22.625

Token 329: '_gain' (ID: 99774)
  Prédit: '_gain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_gain' → logprob: -0.00017159747949335724
    2. '_total' → logprob: -8.875171661376953
    3. '_' → logprob: -10.500171661376953
    4. '_g' → logprob: -13.125171661376953
    5. '_gap' → logprob: -14.875171661376953
    6. ' _' → logprob: -14.875171661376953
    7. '_GAIN' → logprob: -15.125171661376953
    8. '_token' → logprob: -15.250171661376953
    9. 'gain' → logprob: -15.375171661376953
    10. '_loss' → logprob: -15.375171661376953

Token 330: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00017159747949335724
    2. '(' → logprob: -8.750171661376953
    3. ' (' → logprob: -11.250171661376953
    4. '(
' → logprob: -15.875171661376953
    5. ' ' → logprob: -19.000171661376953
    6. ')(' → logprob: -19.125171661376953
    7. '((' → logprob: -19.625171661376953
    8. '```' → logprob: -19.750171661376953
    9. ')' → logprob: -19.875171661376953
    10. '(N' → logprob: -20.125171661376953

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014036978245712817
    2. ',v' → logprob: -9.625140190124512
    3. ',n' → logprob: -10.000140190124512
    4. ' ,' → logprob: -11.000140190124512
    5. '(n' → logprob: -12.125140190124512
    6. '(' → logprob: -12.250140190124512
    7. ')' → logprob: -13.750140190124512
    8. ',
' → logprob: -14.875140190124512
    9. '(v' → logprob: -15.250140190124512
    10. 'v' → logprob: -16.375141143798828

Token 332: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.004078401252627373
    2. ' v' → logprob: -5.504078388214111
    3. ')v' → logprob: -19.754077911376953
    4. ')' → logprob: -19.879077911376953
    5. '	v' → logprob: -20.129077911376953
    6. '   ' → logprob: -20.254077911376953
    7. '_v' → logprob: -22.754077911376953
    8. '(v' → logprob: -23.004077911376953
    9. ' ' → logprob: -23.504077911376953
    10. 'n' → logprob: -23.504077911376953

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1041145626222715e-05
    2. ' ,' → logprob: -12.000011444091797
    3. ',c' → logprob: -12.250011444091797
    4. ',
' → logprob: -16.500011444091797
    5. '‌,' → logprob: -18.500011444091797
    6. 'c' → logprob: -18.875011444091797
    7. ',v' → logprob: -19.000011444091797
    8. ')' → logprob: -19.500011444091797
    9. ' c' → logprob: -19.500011444091797
    10. ',

' → logprob: -19.750011444091797

Token 334: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07888978719711304
    2. ' c' → logprob: -2.578889846801758
    3. ')c' → logprob: -17.703889846801758
    4. '	c' → logprob: -18.453889846801758
    5. '   ' → logprob: -20.578889846801758
    6. ' ' → logprob: -21.078889846801758
    7. '_c' → logprob: -21.328889846801758
    8. ')' → logprob: -21.828889846801758
    9. '$c' → logprob: -22.078889846801758
    10. ',c' → logprob: -22.203889846801758

Token 335: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16022798418998718
    2. ')
' → logprob: -1.9102280139923096
    3. ')
' → logprob: -12.78522777557373
    4. ')

' → logprob: -14.16022777557373
    5. '   ' → logprob: -15.66022777557373
    6. ' )
' → logprob: -16.535228729248047
    7. ' )' → logprob: -16.910228729248047
    8. '),' → logprob: -19.285228729248047
    9. ')#' → logprob: -19.410228729248047
    10. ' ' → logprob: -19.785228729248047

Token 336: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029807886108756065
    2. '   ' → logprob: -3.5298078060150146
    3. ' print' → logprob: -9.904808044433594
    4. '	print' → logprob: -12.654808044433594
    5. '    
' → logprob: -13.529808044433594
    6. '#print' → logprob: -13.904808044433594
    7. '```' → logprob: -14.029808044433594
    8. '
' → logprob: -14.404808044433594
    9. '(print' → logprob: -15.279808044433594
    10. '.print' → logprob: -15.654808044433594

Token 337: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.703443770878948e-06
    2. ' print' → logprob: -12.250007629394531
    3. '   ' → logprob: -12.750007629394531
    4. '#print' → logprob: -18.62500762939453
    5. '#' (adapté à ' #') → logprob: -20.00000762939453
    6. '
' → logprob: -20.25000762939453
    7. 'pr' → logprob: -20.62500762939453
    8. '.print' → logprob: -20.62500762939453
    9. '```' → logprob: -20.62500762939453
    10. '    
' → logprob: -20.87500762939453

Token 338: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.2729995988775045e-06
    2. ' print' → logprob: -12.000006675720215
    3. 'pr' → logprob: -20.1250057220459
    4. 'prin' → logprob: -21.3750057220459
    5. 'Print' → logprob: -22.0000057220459
    6. '#print' → logprob: -23.0000057220459
    7. 'printf' → logprob: -24.0000057220459
    8. '   ' → logprob: -25.0000057220459
    9. '	print' → logprob: -25.2500057220459
    10. '```' → logprob: -25.3750057220459

Token 339: 'icher' (ID: 13617)
  Prédit: 'icher'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0011315245646983385
    2. 'ich' → logprob: -7.626131534576416
    3. '   ' → logprob: -8.001131057739258
    4. 'print' → logprob: -9.001131057739258
    5. 'iche' → logprob: -9.251131057739258
    6. '#' → logprob: -10.001131057739258
    7. 'ic' → logprob: -10.876131057739258
    8. 'ichage' → logprob: -11.376131057739258
    9. 'cher' → logprob: -12.001131057739258
    10. 'ichier' → logprob: -13.001131057739258

Token 340: ' le' (ID: 505)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.001932205050252378
    2. 'result' → logprob: -6.251932144165039
    3. '(' → logprob: -12.626932144165039
    4. ' result' → logprob: -15.126932144165039
    5. '(f' → logprob: -18.12693214416504
    6. '=result' → logprob: -18.50193214416504
    7. '(res' → logprob: -19.37693214416504
    8. ',result' → logprob: -19.37693214416504
    9. '_result' → logprob: -19.62693214416504
    10. '("' → logprob: -19.75193214416504

Token 341: ' résultat' (ID: 62556)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0067209405824542046
    2. '(result' → logprob: -5.006721019744873
    3. ' result' → logprob: -12.256720542907715
    4. '(' → logprob: -14.006720542907715
    5. '=result' → logprob: -18.25672149658203
    6. ',result' → logprob: -18.63172149658203
    7. ')' → logprob: -19.00672149658203
    8. 'res' → logprob: -19.25672149658203
    9. '(
' → logprob: -19.25672149658203
    10. 'resultado' → logprob: -19.50672149658203

Token 342: ' final' (ID: 1721)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.02750786766409874
    2. '(' → logprob: -4.152507781982422
    3. 'print' → logprob: -4.902507781982422
    4. '()' → logprob: -6.652507781982422
    5. 'result' → logprob: -6.902507781982422
    6. '(print' → logprob: -7.027507781982422
    7. '   ' → logprob: -7.277507781982422
    8. '()
' → logprob: -9.902507781982422
    9. '(
' → logprob: -10.402507781982422
    10. ')' → logprob: -12.277507781982422

Token 343: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2961789071559906
    2. '(' → logprob: -2.2961788177490234
    3. '(result' → logprob: -2.4211788177490234
    4. '(print' → logprob: -3.2961788177490234
    5. '   ' → logprob: -3.7961788177490234
    6. '()' → logprob: -5.921178817749023
    7. 'result' → logprob: -6.671178817749023
    8. ' print' → logprob: -6.796178817749023
    9. '()
' → logprob: -6.921178817749023
    10. '
' → logprob: -7.171178817749023

Token 344: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0014782019425183535
    2. 'result' → logprob: -7.50147819519043
    3. '   ' → logprob: -8.12647819519043
    4. ' print' → logprob: -8.25147819519043
    5. '(result' → logprob: -8.62647819519043
    6. '(print' → logprob: -8.75147819519043
    7. '(' → logprob: -11.00147819519043
    8. '
' → logprob: -11.87647819519043
    9. '()
' → logprob: -12.75147819519043
    10. '```' → logprob: -13.87647819519043

Token 345: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -8.061054359131958e-06
    2. ' print' → logprob: -11.750007629394531
    3. 'result' → logprob: -16.50000762939453
    4. '```' → logprob: -22.87500762939453
    5. '   ' → logprob: -23.00000762939453
    6. '(print' → logprob: -23.62500762939453
    7. 'pr' → logprob: -25.12500762939453
    8. '
' → logprob: -25.12500762939453
    9. 'printf' → logprob: -25.25000762939453
    10. ' result' → logprob: -25.50000762939453

Token 346: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.2519305646419525
    2. '(' → logprob: -1.501930594444275
    3. '(res' → logprob: -15.126930236816406
    4. '(results' → logprob: -15.251930236816406
    5. '(
' → logprob: -15.501930236816406
    6. '()' → logprob: -15.501930236816406
    7. ' (' → logprob: -15.626930236816406
    8. '(resultado' → logprob: -16.126930236816406
    9. '(

' → logprob: -16.251930236816406
    10. '(Result' → logprob: -16.376930236816406

Token 347: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ' )' → logprob: -15.375000953674316
    3. '())' → logprob: -16.25
    4. '()' → logprob: -16.375
    5. '))' → logprob: -18.5
    6. ')
' → logprob: -18.625
    7. ')`' → logprob: -19.625
    8. '')' → logprob: -20.125
    9. '`)' → logprob: -20.5
    10. '")' → logprob: -20.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 345
Tokens correctement prédits (1ère position, stricte): 129
Tokens correctement prédits (1ère position, avec adaptation): 138
Tokens correctement prédits (top 10): 246
Précision stricte (1ère position): 37.39%
Précision adaptée (1ère position): 40.00%
Précision (top 10): 71.30%
================================================================================
